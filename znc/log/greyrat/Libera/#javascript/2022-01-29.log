[00:00:03] <lf94> <__>
[00:00:05] <lf94> wow
[00:00:08] <lf94> what
[00:00:13] <ljharb> unsigned right shift assignment
[00:00:16] <ljharb> that one's been around since 1995
[00:00:20] <z1haze> are those bitwise operations
[00:00:24] <ljharb> yes
[00:00:25] <z1haze> hah
[00:00:36] <lf94> I wonder if I typed that because my brain already subconsciously knew it
[00:00:41] <banana_> not talking about jQuery, but if a bunch of  bad (objectively this time) developers agree with you, probably doesn't matter because usually objectively good developers are closer to seats of power
[00:00:41] <ljharb> totally fine not to know how bitwise ops work, they're largely useless and always confusing; but good to know what they are
[00:00:54] <lf94> Well I wrote a gameboy level extractor that uses lots of bit shifting
[00:01:03] <z1haze> systemfault, im building giant sites with jquery
[00:01:07] <lf94> But >>>= is just not something I encountered
[00:01:12] <lf94> It is for sure useful
[00:01:14] <z1haze> its the WORST
[00:01:24] <systemfault> z1haze: RIP if it's a new website.. fine if it's an old one
[00:01:25] <banana_> in society at least, because society rewards objectively good developers
[00:01:25] *** Parts: Intelo (~Intelo@88.244.94.93) ()
[00:01:33] <systemfault> *z1haze "sucks" if it's a new one
[00:01:37] <z1haze> exactly, they're new of course
[00:01:43] <z1haze> im not happy about it
[00:01:49] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:02:03] <KevinX> I haven't looked at modern jQuery. I wonder what they are up to
[00:02:11] <systemfault> z1haze: They won't be happy when the tech debt accumulates and devs miss their deadlines
[00:02:18] <z1haze> salesforce builds a 'reference' application, that my company then takes and builds their 'reference' application on top of, which we then implement for customers.
[00:02:23] <z1haze> oh dude, they don't care
[00:02:26] <z1haze> its sad, really
[00:02:42] <stenno> failsforce
[00:03:05] <z1haze> im not a fan, but they basically have a license to print money
[00:03:48] <banana_> actually let me refine that, even objectively good developers, might become marginalized by objectively better developers.
[00:03:50] <z1haze> even 'smaller' companies are paying $500k for a jquery website built in 8 weeks
[00:03:53] <senoraraton> How do I configure webpack for javascript?
[00:04:07] <banana_> so more complicated topic than I thought, eff. there's a point in there somewhere
[00:04:59] *** Joins: crashrep (~crashrep@user/crashrep)
[00:05:03] <senoraraton> Here is my current webpack config -> https://github.com/SenorGato/procmap/blob/main/webpack.config.js
[00:05:13] <banana_> KevinX: when you originally said "Good" did you mean objectively or subjectively?
[00:05:34] <senoraraton> I tried ading the val-loader, and checked the docs to see what loader javascript uses, but it says its "default" but I don't know how to write a rule for it since it doesn't actually tell you how to reference the default.
[00:05:39] <banana_> sorry if you want to ignore me I'd understand, this is getting into philosophy anyway
[00:05:52] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:06:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[00:08:16] <KevinX> banana_ Think about the WordPress developer who masters jQuery to add interactions to their theme. It's easily plausible they are very skilled at jQuery, but don't have a fundamental knowledge of even how the event loop works. That's fine, they are pragmatic. The same can be said for Vue. Vue does a lot of hand holding so you don't need to learn how JS works at the core. The original discussion was about whether you can be good
[00:08:16] <KevinX>  at a framework but not good at the language.
[00:08:19] <banana_> I think I'm stuck at bridging the gap between objectively being  good at something and subjectively being regarded as "good"
[00:09:00] <KevinX> WP developers master all the WP functions, but probably know little about PHP for that matter
[00:09:00] *** Quits: D4mned (~D1mned@212.101.234.163) (Read error: Connection reset by peer)
[00:09:04] <senoraraton> I'm stuck at the gap between incompetency, and utter incompetency.
[00:09:28] *** Joins: D4mned (~D1mned@212.101.234.163)
[00:09:47] <banana_> ok I'll just assume you mean objectively good then.
[00:10:23] <banana_> I think in JS development there's still a heavy reliance on solid vanilla JS understanding
[00:10:28] <KevinX> I dont know whether it's objective or subjective. Am I objectively a good JS developer? I have no real clue
[00:11:18] <KevinX> Subjectively I'm the best :P
[00:11:49] <KevinX> is someone who has mastered jQuery a good JS developer?
[00:12:05] <systemfault> You can's master jQuery without being a good JS developers..
[00:12:21] <KevinX> I don't really see much value in thinking too much about it though
[00:12:21] <systemfault> Can you know some jQuery without being good at JS? SURE
[00:12:51] <KevinX> I'm sure someoen who is really good with jQuery could spend 6 months and be really good at vanilla JS too
[00:13:12] <KevinX> It's more about what they need to accomplish
[00:13:15] <systemfault> You can't be really good with jQuery without being good at JS
[00:13:28] <systemfault> You can be a jQuery copy/paster though
[00:13:48] <systemfault> And know barely enough to run a plugin
[00:14:04] <banana_> so in todays JS development arena, most developers that matter, I think would value you more if you understood JS well over understanding JS libraries well, even if you understood abstract ideas e.g. how to best form and maintain an interface for a third-party JS library you're maintaining
[00:14:22] <systemfault> There's a huge difference between "knowing what you do" and just "fucking around and guesscode until it 'works'"
[00:14:47] <KevinX> If we're talking about getting a job, then yes better to understand vanilla JS and a modern framework
[00:14:59] <systemfault> Not really...
[00:15:00] <eXtr3m0> Well what you don't know as a jQuery developer is what jQuery hides away from you.
[00:15:13] <eXtr3m0> If these are just some functions, its not a problem, because you can just look them up.
[00:15:15] <KevinX> systemfault I wrote a JS slide rplugin 10+ years ago and only knew jQuery at the time
[00:15:25] <systemfault> I'd be HIGHLY skeptical of a good JS developers who doesn't know at least one of the big three framworks
[00:15:30] <eXtr3m0> And some things are a bit more annoying like Ajax.
[00:16:08] <systemfault> I'd be like "What the F have you been doing the last 10 years? Were you living in a cabin in the woods?"
[00:16:09] <eXtr3m0> But for sure there are a lot of things that you aren't aware of in that situation that you will at some point have to understand.
[00:16:25] <magga> whats the best way to concatenate a string in JS? using + operator?
[00:16:37] <magga> or are there something like f-strings in Python ? xD
[00:16:56] <systemfault> magga: How many strings are we talking about here?
[00:17:04] <Decker> magga that or put them in an array and join()
[00:17:04] <systemfault> Millions? 2?
[00:17:08] <magga> 4 strings
[00:17:10] <eXtr3m0> systemfault the difference is that jQuery was needed for cross browser functionality, whereas react is needed for app development. it's different purposes.
[00:17:17] <systemfault> magga: You could use + or string interpolation
[00:17:21] <stenno> there are template strings which are similar to f-strings in python
[00:17:24] *** Quits: N4buc0- (~N4buc0@2804:7f4:348a:fff2:6b3a:820a:5601:a6e) (Remote host closed the connection)
[00:17:29] <magga> okay cool
[00:17:29] *** Joins: N4buc0 (~N4buc0@191.250.117.129)
[00:17:32] <magga> thanks i look into it guys
[00:17:53] <stenno> i like concat because its more explicit than '+' and you don't run into coercion issues
[00:18:08] <systemfault> eXtr3m0: I'd still expect that dev to have learned one of the frameworks in the last 10 years.
[00:18:15] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:18:17] <systemfault> eXtr3m0: Even if it's on their own time...
[00:18:53] <systemfault> eXtr3m0: Even if they said... I only know BackboneJS, it would still be better than 'I only know jQuery and some JS'"
[00:18:54] <eXtr3m0> KevinX regarding "modern jQuery".. I also have no idea, but I think it didn't change a lot. Interesting thing is that back in that time the logical next step was jquery UI and jQuery mobile and stuff.. but these were really bad/odd. These were like js heavy bootstrap but not like react. this is how it died. :D
[00:19:00] <banana_> like you had an army of developers who didnt undertand JS well, and they thought your code is awesome, but significant amount of developers who understand JS well don't, it doesn't matter what those army of developers think
[00:19:06] *** paule32_ is now known as paule32
[00:19:13] <banana_> a significant amount of^
[00:19:28] <KevinX> I really disliked jQuery ui and the mobile stuff
[00:20:50] <lf94> Only good developers know how to use jQuery UI
[00:20:54] * lf94 runs
[00:21:05] <eXtr3m0> systemfault you're probably right, but at the same time.. if the question is: how do you build a website nowadays, I wouldn't say or use react while I think quite some would think that is a good idea.
[00:21:09] <KevinX> Here's some jQuery code I wrote 10+ years ago when I barely understood JS outside of jQuery https://github.com/KevinBatdorf/codaslider/blob/master/js/jquery.coda-slider-3.0.js
[00:21:30] <eXtr3m0> Btw. putting CSS into JS feels like putting HTML into PHP.
[00:22:03] <systemfault> eXtr3m0: I don't always need my drill... but when I do, I know that it's in my toolbox.
[00:22:30] <systemfault> eXtr3m0: You need to see it that way... You should, at this point, learn one of the main 3 frameworks.
[00:23:35] <systemfault> It's about making yourself marketable too...
[00:24:07] <eXtr3m0> systemfault I agree ;)  I recently watched a video "todo app" in vanillajs and like 10 frameworks. they all looked pretty much the same. expect some are very ugly why others seem kinda cool like svelte. but yeah in my case it will be react.
[00:24:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:24:43] <eXtr3m0> systemfault but in general I've the opinion to at least wait 5 years and then see what remained from the hype.
[00:25:03] <eXtr3m0> Like I know people who based their whole business on angular1
[00:25:04] <eXtr3m0> :D
[00:27:35] <systemfault> There was a time when Angular1 was the best... got quickly displaced by React though
[00:28:10] *** Quits: eXistenZ (~biskit@2001:4df4:370:fd00:ede4:12bb:d69a:d695) (Quit: Leaving)
[00:28:17] <systemfault> Angular was such an upgrade to crap like BackboneJS...
[00:28:26] <ljharb> i'd take backbone over angular any day
[00:28:29] <eXtr3m0> I don't know the details, but I understood that Google quickly replaced it with angular2 which wasn't at all compatible. They inded switched to React
[00:28:44] <systemfault> ljharb: With Marionnette at least? :/
[00:29:06] <systemfault> Angular2 was sold as a lie...
[00:29:25] *** Joins: bobdobbs (~bobdobbs@118.148.82.71)
[00:29:47] <ljharb> systemfault: ew no, marionette was so much worse than regular backbone
[00:29:59] <ljharb> systemfault: twitter ads used backbone on most of its site, and marionette on the SMB part, and it was utter trash
[00:30:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:30:36] <systemfault> Angular was old to the community as the version 2 of the framework but... not written in the same language... and being totally incompatible with the former
[00:30:40] <systemfault> *was sold
[00:30:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:31:45] *** Joins: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl)
[00:31:45] <systemfault> ljharb: In any case, just glad that Backbone is dead... (Not sure if ng1 is EOLed)
[00:32:31] <Alexendoo> It is twitter though tbf, they managed perfectly fine at making their react site pretty annoying to use
[00:33:32] <stenno> kinda unfair to call backbone crap
[00:33:37] <stenno> given its just so minimal
[00:33:56] <ljharb> systemfault: lol i had a book deal to finish someone's backbone book, i bailed on it in 2015
[00:34:13] <systemfault> Haha :)
[00:34:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[00:34:29] <stenno> i used it around 2010 and it was nice
[00:34:34] <stenno> you could just read the annotated source
[00:34:39] <stenno> in like half an hour
[00:34:48] <stenno> and then you knew everything it did
[00:36:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:36:35] *** Quits: bobdobbs (~bobdobbs@118.148.82.71) (Ping timeout: 256 seconds)
[00:36:48] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:37:25] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[00:40:35] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[00:42:20] <systemfault> I remember when it was introduced at my workplace... people were not familiar with the paradigm, they would use components as if they were classes and were doing DOM lookups everywhere on the page with jQuery
[00:43:08] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[00:43:09] <systemfault>  Good times...
[00:44:43] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:46:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:48:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:48:41] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:50:11] <lf94> Yep, I remember when frameworks were flying left and right - I stuck to angular 1, and now only react.
[00:50:31] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[00:50:36] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[00:50:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[00:51:28] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:53:48] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:53:57] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:54:09] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:55:17] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[00:57:22] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:01:15] <devslash> If I declare a state in my functional React component as const [newStoreName, setNewStoreNameHandler] = useState(''); then I should be able to do setNewStoreNameHandler('') to clear the current value saved in newStoreName right ?
[01:01:52] <dan01> If I get a: Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://app:3000/.
[01:02:09] <devslash> is that the backend url
[01:02:10] <dan01> Not sure if it's the server I have to modify something in or the client?
[01:02:14] <devslash> or the front end url
[01:02:20] <Decker> the server
[01:02:25] <dan01> The backend
[01:02:26] <devslash> the back end ?
[01:02:34] <senoraraton> My canvas is not using the values that I have defined for it, why?  https://github.com/SenorGato/procmap/blob/main/src/main.ts
[01:02:34] <devslash> ok you need to allow CORS header
[01:02:41] <devslash> do you use a reverse proxy ?
[01:02:46] <dan01> No
[01:02:51] <dan01> I use hapi.js
[01:02:55] <devslash> ok. Apache or Nginx ?
[01:03:30] <dan01> So I run an Ngnix server on which I make a POST request to the hapi.js server
[01:03:31] <KevinX> devslash that would set it to an empty string specifically. It's common to not put Handler on the end though
[01:03:33] <dan01> does that make sense?
[01:03:46] <devslash> dan yes it does
[01:03:59] <dan01> Ah, thank God
[01:04:00] <Decker> res.headers['Access-Control-Allow-Origin'] = req.headers.Origin;   (request is the request with headers, res is the response)  something like that dan01
[01:04:04] <devslash> dan01, you need to look into setting the CORS header to allow localhost:3000
[01:04:22] <devslash> or ip address:3000
[01:05:50] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94) (Remote host closed the connection)
[01:06:01] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94)
[01:06:03] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:06:12] <systemfault> senoraraton: JS doesn't do magic interpolation of strings... like in PHP
[01:06:13] <devslash> KevinX, this is a form field where you add a value to a form then I need to clear the value when you click on the add icon
[01:06:40] <systemfault> senoraraton: You probably want document.body.innerHTML += `<canvas id="map" width="${gameMapWidth}" height="${gameMapHeight}" style="border:10px solid red"></canvas>`;
[01:07:32] <systemfault> senoraraton: Generally, you should be using DOM methods to create the canvas, not innerHTML with a string
[01:09:02] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:09:12] <senoraraton> Also, webpack broken when I tried to import javascript files, so I HAVE to write everything in TS now.
[01:09:23] <senoraraton> What are "DOM methods"
[01:09:36] <Decker> document.createElement( "canvas" )
[01:09:59] <Decker> then you don't have to re-find it to be able to get a context to draw into it...
[01:10:21] <systemfault> const canvas = document.createElement( "canvas" ); canvas.id = 'map'; canvas.width = gameMapWidth; ..... then document.body.appendChild(canvas)
[01:10:48] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[01:11:43] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:12:20] <senoraraton> That canvas definition doesn't write to the screen.
[01:12:27] <senoraraton> It compiles fine, it just doesn't show anything.
[01:12:32] <senoraraton> O.
[01:13:05] <systemfault> Did you do the appendChild thing?
[01:13:08] <devslash> This is my component: https://pastebin.com/Yqjei6DH I have a bug where the state on line 26 does not get its value changed
[01:13:29] <Decker> have to set the style to get the border...
[01:13:58] <senoraraton> It won't let me change the style of the canvas because its "read-only"
[01:14:14] <systemfault> senoraraton: https://jsfiddle.net/up9tao0y/
[01:15:08] <systemfault> You can make it nicer with Object.assign if you really want...
[01:15:39] <senoraraton> I'm just diverting from where I was failing and trying to do something else.
[01:16:42] <systemfault> I gave you a link... it shows the red bordered canvas in the preview, what more do you want?
[01:17:28] <senoraraton> To understand perlin noise?
[01:17:45] <systemfault> No, you said you add a problem creating the canvas
[01:17:53] <systemfault> You never mentioned perlin noise...
[01:18:00] <systemfault> *had
[01:18:09] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-cd96-4da6-524d-3bb3.res6.spectrum.com)
[01:18:13] <Decker> https://www.youtube.com/watch?v=6-0UaeJBumA
[01:18:13] <skillbot> YouTube Title: Programming Perlin-like Noise (C++)
[01:18:41] *** Joins: kilitary (~kilitary@188.242.187.4)
[01:18:52] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[01:20:00] <senoraraton> I watched that video, and I spent 2 hours reading an implementation in javascript before I got too confused, so I tried to import the JS code to just use it rather than reimplementing it, but it broke because webpack, so I have to convert the code into TS now so that webpack will actually do its thing, which requires me to actually understand it, which is difficult, as per the 2 hours prior.
[01:20:49] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[01:20:54] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:21:17] <LiftLeft2> Is there a good wasm video editing library/module?
[01:21:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[01:21:18] <senoraraton> Primarily I'm confused because the code I looked at took a bunch of shortcuts like it doesn't use a seeding function, and it doesn't properly sort the permutation in a way that is rational, so I have to figure out how to fix those.
[01:21:44] <LiftLeft2> what happened to GreenJello?
[01:21:58] <senoraraton> I also have no idea what "dot product" or "interpolation" mean, and those things seemed very complex when I tried to google them.
[01:22:04] <systemfault> LiftLeft2: Link in the topic
[01:22:07] <Decker> https://d3x0r.org/javascript/a-star/  a mix of perlin noise landscapes, and A* pathing across
[01:22:15] <Decker> don't think that video used dot or cross product
[01:22:37] <Decker> interpolation is just having a point with different values at A and B and finding what it is at A.5
[01:22:42] <senoraraton> If you implement perlin noise, your using dot product and interplation. Its what makes perlin noise, perlin noise.
[01:23:17] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-cd96-4da6-524d-3bb3.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:23:20] <Decker> hmm ya just multi interpolants... which I guess might look like a dot product
[01:23:37] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-cd96-4da6-524d-3bb3.res6.spectrum.com)
[01:23:58] <senoraraton> Its just incredibly difficult.
[01:24:14] <Decker> I found it incredibly straight forward :)
[01:24:39] <senoraraton> I don't understand these things, and it takes me weeks to process them. Programming makes me feel stupid.
[01:24:59] <senoraraton> Its pretty irrational to think I could ever fake this well enough to do it as a job.
[01:25:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:27:00] <ljharb> banana__: you're not authed
[01:27:27] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-cd96-4da6-524d-3bb3.res6.spectrum.com) (Client Quit)
[01:27:43] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:27:55] <banana_> ljharb: you meant he couldnt see what I said
[01:28:12] <ljharb> banana_: yes, that's what that means
[01:28:34] <banana_> but you can see unauthed people's messages?
[01:28:37] *** LiftLeft2 is now known as LiftLeft
[01:29:01] <banana_> that's pretty cool
[01:29:18] <ljharb> banana_: only people currently opped can.
[01:29:19] *** Jaran|zZzZzZz is now known as Jaran
[01:29:32] <banana_> eXtr3m0: yeah when it was Angular2 dude the beta process was a nightmare
[01:29:53] <banana_> and I vaguely remember the angular2 team saying "yeah beta is production ready"
[01:30:21] *** Joins: Bishop_Bautista (~Bishop_Ba@174-087-246-009.res.spectrum.com)
[01:31:10] <banana_> then virtually every tag had a major breaking change afairc
[01:31:41] *** Joins: c4017w (~c4017@209.52.68.8)
[01:31:48] <banana_> then after beta they were like "ok now we're doing semver"
[01:32:23] <banana_> good times
[01:34:22] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[01:34:23] <banana_> then I started to realize that the core JS language usually has less breaking changes than the API in libraries like Angular
[01:34:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:34:48] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[01:36:00] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:36:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:41:44] <dan01> Hmm
[01:41:47] <dan01> still not working
[01:41:57] <corwin> man, I know the feeling :/
[01:41:58] <dan01> Are you it's not nginx that I need to allow cors?
[01:42:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Quit: I have gone to sleep. ZZZzzz…)
[01:42:36] *** Joins: some1 (~Guest83@2001:8a0:7ef1:0:419a:62c0:537c:888e)
[01:42:59] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:43:08] <stenno> the port is important
[01:43:22] <ljharb> some1: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[01:45:30] *** Parts: some1 (~Guest83@2001:8a0:7ef1:0:419a:62c0:537c:888e) ()
[01:47:59] *** Joins: zxvf (~zxvf@2001:8a0:7ef1:0:419a:62c0:537c:888e)
[01:48:50] <zxvf> hello
[01:49:00] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[01:49:11] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[01:50:21] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 245 seconds)
[01:50:36] <zxvf> I am trying to author a user script for getting rid of the annoying notification counter that exists on Linkedin, Facebook, etc. page titles, the "(1)" thing
[01:50:50] <zxvf> this is what I did so far:
[01:51:51] <KevinX> zxvf Are you going to paste a bunch of code here?
[01:52:03] <zxvf> https://pastebin.com/eRSGJwdq
[01:52:20] <systemfault> Are we supposed to fill the rest?
[01:52:20] <D4mned> iv been reading something on a site similar to stackoverflow
[01:52:21] <zxvf> no, I pastebin'ed it.
[01:52:22] <D4mned> (s,[a,...b]=s.split(/ +:/))=>a.split` `.concat(b)
[01:52:28] <D4mned> what the hell is this
[01:52:41] <KevinX> zxvf all that does is replace the title
[01:52:54] <zxvf> yes, and that is what i want to do
[01:52:54] <systemfault> zxvf: Is that what you want?
[01:53:00] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[01:53:00] *** Quits: D4mned (~D1mned@212.101.234.163) (Read error: Connection reset by peer)
[01:53:21] <KevinX> oh in the tab. gotcha
[01:53:25] <zxvf> but I need to listen when the page is trying to change it itself
[01:53:31] <KevinX> the userscript probably runs too early
[01:53:40] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[01:53:56] <KevinX> maybe you can add a mutation observer on the title tag? not sure
[01:54:20] <zxvf> it seems that they change the title during the rendering
[01:54:31] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ade4:669:9939:72f3) (Ping timeout: 245 seconds)
[01:54:32] <zxvf> oh can I listen for title changes?
[01:54:33] <corwin> back in the day we would just stuff that into a script block after the content at the bottom of the page.  No doubt it's much simpler to do these days.
[01:54:35] *** Joins: D4mned (~D1mned@212.101.234.127)
[01:55:45] <zxvf> or some event that they are using to force partial page refresh that is forcing the notifications on my throat?
[01:56:08] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[01:57:02] *** Joins: pavonia (~user@user/siracusa)
[01:58:00] <KevinX> D4mned Seems like sometthing is missing, but the first split is like a default value on the parameter b, which is an array
[01:58:34] <KevinX> zxvf i believe you can observe title changes, but one way to find out ;-)
[01:58:53] <stenno> a `tar` enthusiast
[01:58:59] <KevinX> If not, then maybe observe something in the notification area
[01:59:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[01:59:39] <zxvf> stenno: :') :') 😂😂
[01:59:44] *** stenno is now known as czvf
[01:59:49] <czvf> challenger appeared
[01:59:52] *** czvf is now known as stenno
[02:00:19] * zxvf does not remember what the tar c option did
[02:00:29] <systemfault> I'm of the xvzf school... not zxvf
[02:00:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4174:ac1c:e6ad:68b5)
[02:01:02] <stenno> i just use 'xf'
[02:01:15] <stenno> zxvf: create tar.gz
[02:02:19] <zxvf> i typed zxvf so many times in the past that it evolved into my nick. in an era where linux package management was somewhat limited.
[02:02:20] <stenno> D4mned: looks like code golfing
[02:02:47] <stenno> actually a code golfer wouldn't use concat
[02:03:03] <stenno> maybe there is a restriction
[02:03:13] <D4mned> iam wondering how is this possible
[02:03:20] <stenno> how what is possible
[02:03:22] <D4mned> (s,[a,...b]=s.split(/ +:/))=>a.split` `.concat(b)
[02:03:28] <D4mned> what is s in this case ?
[02:03:42] <stenno> first parameter of a fat arrow function
[02:03:46] <stenno> (s) => s + 1
[02:03:49] <stenno> like that
[02:03:53] <D4mned> ah
[02:04:11] <D4mned> ahhh i see it now !
[02:04:16] <D4mned> thanks lol
[02:04:18] <stenno> n> const foo = (s, y=s+1) => [s,y]; foo(1)
[02:04:19] <jellobot> (okay) [ 1, 2 ]
[02:04:25] <stenno> its super golfy
[02:04:33] <stenno> thats really no production code
[02:04:38] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[02:04:43] *** phryk_ is now known as phryk
[02:05:07] *** Quits: ttytwister_ (~ttytwiste@188.113.176.117) (Quit: Leaving)
[02:05:15] <stenno> have to admit that i am also surprised that that works
[02:05:19] <stenno> 'ttytwister' lol
[02:05:28] <stenno> irc nicks are on point today
[02:06:17] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:06:23] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[02:06:45] <banana_> I think function parameters have a certain scope
[02:06:45] <stenno> must be code golfing
[02:07:08] <stenno> ooh i see why the concat
[02:07:08] <banana_> forgot any specifics
[02:07:32] <stenno> its code golfing alright
[02:08:23] *** Joins: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net)
[02:08:33] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Client Quit)
[02:08:48] <banana_> talking about:
[02:08:49] <banana_> n> const foo = (s, y=s+1) => [s,y]; foo(1)
[02:08:50] <jellobot> (okay) [ 1, 2 ]
[02:09:14] <stenno> n> const foo = (s,[a,...b]=s.split(/ +:/))=>a.split` `.concat(b); foo('a b c : d e f : lol')
[02:09:15] <jellobot> (okay) [ 'a', 'b', 'c', ' d e f', ' lol' ]
[02:09:41] <stenno> wonder  what the actual task was
[02:12:23] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:39] <stenno> n> const foo = (s,[a,...b]=s.split(/ +:/))=>[...a.split` `,b]; foo('a b c : d e f : lol')
[02:12:40] <jellobot> (okay) [ 'a', 'b', 'c', [ ' d e f', ' lol' ] ]
[02:12:49] <stenno> i see
[02:13:22] <stenno> n> const foo = (s,[a,...b]=s.split(/ +:/))=>[...(a.split` `),b]; foo('a b c : d e f : lol')
[02:13:23] <jellobot> (okay) [ 'a', 'b', 'c', [ ' d e f', ' lol' ] ]
[02:13:26] <stenno> meh
[02:15:50] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:4917:bc56:f54d:812b) (Ping timeout: 252 seconds)
[02:16:34] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:17:10] <stenno> n> const foo = (s,[a,...b]=s.split(/ +:/))=>[...a.split` `,...b]; foo('a b c : d e f : lol')
[02:17:11] <jellobot> (okay) [ 'a', 'b', 'c', ' d e f', ' lol' ]
[02:17:24] <stenno> yeah its golfed, and this is longer now
[02:17:34] <stenno> so it has to be concat
[02:17:47] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Remote host closed the connection)
[02:18:14] <zxvf> based on your guidance i came up with this: https://kopy.io/Zgk6J
[02:19:10] <zxvf> but can not attest if it works until someone does an action which generates a notification.
[02:21:32] <devslash> what am I doing wrong in this fiddle /
[02:21:32] <devslash> https://jsfiddle.net/pd7etcf6/2/
[02:21:38] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:22:40] <devslash> actually this is a better xample
[02:22:42] <devslash> example
[02:22:44] <devslash> https://jsfiddle.net/pd7etcf6/3/
[02:23:32] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1cf4:b504:d97f:804d)
[02:24:03] <dan01> If I do a  client.db("localDb").collection("person").insertOne(person);
[02:24:20] <dan01> I get a  MongoServerError: Collection already exists. NS: localDb.person
[02:24:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4174:ac1c:e6ad:68b5) (Ping timeout: 260 seconds)
[02:24:27] <dan01> Not sure what I'm doing wrong
[02:24:30] <stenno> M OMEGALUL N G O
[02:25:17] *** Tobbi__ is now known as Tobbi
[02:25:36] <zxvf> tks
[02:26:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:26:03] <zxvf> i need to wait for some notification generating event
[02:27:01] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[02:28:07] <devslash> does anyone know why this doesnt work
[02:29:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:29:38] <banana_> yeah scratch what I was saying earlier
[02:29:41] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:29:49] <stenno> devslash: works for me
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:02] <banana_> about functions ^ nonsense. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#earlier_parameters_are_available_to_later_default_parameters explains it
[02:30:05] <devslash> not for me
[02:30:07] <banana_> n> const foo = (s, y=s+1) => [s,y]; foo(1)
[02:30:07] <jellobot> (okay) [ 1, 2 ]
[02:30:10] <banana_> ^ how that works
[02:30:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:36] <stenno> banana_: yep, default params are great
[02:30:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:31:23] <stenno> what i meant with 'i am surprised that it works' is that i can use the first passed param in an expression for the default value of the second passed param
[02:31:58] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe) (Read error: Connection reset by peer)
[02:32:27] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:8cbb:90c8:fb87:52b1) (Quit: Client closed)
[02:32:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:32:57] *** Quits: pizdets (~pizdets@183.182.110.173) (Ping timeout: 240 seconds)
[02:33:01] <stenno> n> ({a: 23}).toString()
[02:33:01] <jellobot> (okay) '[object Object]'
[02:33:07] <stenno> ^ devslash
[02:33:13] <stenno> is that what you mean with 'not working'
[02:33:15] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:33:19] <stenno> because you failed to mentioned what is 'not working'
[02:33:51] *** Joins: pizdets (~pizdets@183.182.114.249)
[02:33:55] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (Quit: ZNC - https://znc.in)
[02:34:32] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: Ping timeout (120 seconds))
[02:34:36] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[02:34:45] <devslash> yea i am working on that part of it
[02:34:57] *** Joins: henry40408 (~henry4040@175.181.155.165)
[02:35:10] <devslash> oh I got it now
[02:35:48] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:35:55] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:36:21] <stenno> also there is no reason whatsoever to use `alert`
[02:36:49] <stenno> you could just log to console and then you can inspect the object in your dev console
[02:36:57] *** Quits: pmercado (~pmercado@186.107.59.154) (Ping timeout: 250 seconds)
[02:37:55] *** Joins: crashrep (~crashrep@user/crashrep)
[02:38:29] <stenno> if you actually want to express object as a string in a more... verbose manner, you could maybe use JSON.stringify
[02:39:35] *** Joins: mknod (~mknod@user/mknod)
[02:40:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:40:14] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[02:45:16] <ljharb> or npmjs.com/object-inspect
[02:45:16] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[02:47:04] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[02:49:24] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[02:50:03] *** Quits: D4mned (~D1mned@212.101.234.127) (Quit: Leaving)
[02:50:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:51:24] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[02:51:49] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[02:52:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:52:13] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:54c4:4447:22bb:35aa)
[02:52:53] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[02:54:26] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[02:54:40] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:56:33] *** Quits: zxvf (~zxvf@2001:8a0:7ef1:0:419a:62c0:537c:888e) (Ping timeout: 256 seconds)
[02:57:24] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[03:02:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[03:02:40] <banana_> yeah https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters i think doesn't explain the this keyword in default parameters too much
[03:04:53] *** Joins: zxvf (~zxvf@2001:8a0:7ef1:0:419a:62c0:537c:888e)
[03:05:54] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[03:06:04] <banana_> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters#scope_effects explains a second scope created that's a parent scope of the function scope. but doesn't explain if the `this` keyword is the same as the function block it surrounds.
[03:06:13] <zxvf> KevinX is there sthg obviously wrong in my code?
[03:06:24] <zxvf> https://kopy.io/Zgk6J
[03:07:25] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[03:07:54] <KevinX> `getElementById('title')` is this right?
[03:08:13] <stenno> it is but i prefer to use querySelector('#title')
[03:08:24] <velix> silly: how are you doing? me 304
[03:08:25] <stenno> oh sorry
[03:08:29] <systemfault> I have used mutation observers like.... once in my entire life
[03:08:30] <stenno> you were answering to another person
[03:08:36] <systemfault> But wouldn't that cause an infinite loop?
[03:08:37] <KevinX> yeah, they are targeting the <title> tag
[03:09:10] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Read error: Connection reset by peer)
[03:09:13] <systemfault> "If the title is changed... then change the title"? (I really don't know)
[03:10:03] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[03:10:56] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[03:11:25] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[03:11:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:13:08] *** Joins: vysn (~vysn@user/vysn)
[03:13:37] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[03:13:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:13:52] <KevinX> i cant remember exactly but i think if nothing changes it wont trigger. It might not even trigger the second time either (maybe requires a setting)
[03:14:16] <KevinX> put a console.log in there to confirm
[03:14:24] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[03:14:43] <KevinX> if it does, then just check the title value first
[03:14:54] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[03:15:14] <KevinX> another option is to delete FB ;-)
[03:15:18] *** Joins: matsaman (~matsaman@user/matsaman)
[03:15:23] <systemfault> I wish I could...
[03:15:26] *** Joins: ferdna (~ferdna@user/ferdna)
[03:15:40] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[03:15:45] <systemfault> Facebook Messenger is the easiest communication channel I have with my family...
[03:15:48] <KevinX> i still have mine but i log in  almost never
[03:15:49] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[03:15:57] <KevinX> Yeah I use messenger daily though
[03:16:23] <stenno> i use whatsapp for IM with family and some friends
[03:16:25] <KevinX> but the site and the scrolling is too addictive for me if left unchecked
[03:16:30] <stenno> not that much better than facebook messenger
[03:16:53] <stenno> given that whatsapp is owned by facebook
[03:17:29] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[03:17:53] <stenno> ljharb: regarding not being authed, we can set +f on the channel which would forward unregistered people to somewhere else like ##please-register
[03:19:17] <Maxdamantus> stenno: personally, I find that quite annoying, because I think if services are down when connecting, you'll be put in the unregistered channel.
[03:19:33] <stenno> that is indeed the case, yes
[03:19:51] <stenno> i can see how that can be annoying, fair
[03:19:53] <Maxdamantus> stenno: even though you get authenticated once they come back (using authentication in the `AUTH` command on connection)
[03:20:33] <stenno> i auth with SASL for the longest time now, i forget that people join FN without being authed
[03:20:36] <stenno> derp
[03:20:44] <stenno> join libera* of course >.<
[03:21:25] <Maxdamantus> Even using SASL, you can end up joining without being authed. It's just that the server seems to remember your authentication details until they come back up.
[03:21:46] <stenno> actually didn't know about getting authed retroactively
[03:23:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[03:24:05] *** Joins: Betal (~Betal@user/betal)
[03:27:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[03:27:49] *** Quits: LiftLeft (~LiftLeft@mobile-166-171-250-251.mycingular.net) (Ping timeout: 240 seconds)
[03:29:47] <Maxdamantus> er, when I said "AUTH" before, I meant "USER".
[03:31:16] <Maxdamantus> and actually, dunno what exactly happens when using SASL. I assumed SASL on IRC normally means just providing the authentication details in "USER", but it looks like there's a separate "SASL" command which I guess is normally just used to do the same thing (though might also support authentication mechanism other than a plaintext password)
[03:33:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:34:47] <Maxdamantus> actually, looks like irssi at least doesn't pass the password using "USER". It uses a "PASS" command.
[03:36:20] <stenno> sasl is done before connection
[03:36:29] <stenno> or during connection
[03:36:48] *** Joins: va5c0 (~vasco.nun@31.127.137.56)
[03:36:50] <Maxdamantus> It will happen before the "NICK" and "USER" commands are sent.
[03:36:57] <stenno> yep
[03:37:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:37:02] <Maxdamantus> Same with "PASS".
[03:37:04] <KevinX> couldn't the bot do something?
[03:37:29] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:37:33] <KevinX> (regarding when someone isn't authed and messaging)
[03:37:34] <stenno> pass is done after connection though
[03:37:51] <Maxdamantus> What do you mean by "after connection"?
[03:37:58] <Maxdamantus> Technically, everything happens after connection.
[03:38:12] <stenno> well, sasl auth is done during connection, pass is done after
[03:38:15] <Maxdamantus> You don't send anything to the IRC server before establishing the TLS connection.
[03:38:33] <Maxdamantus> No, PASS is also done before the NICK/USER commands are sent.
[03:39:26] <stenno> i'd have to ask in #libera about this i have to admit
[03:39:47] <stenno> i am pretty certain that something like that is why its superior to PASS
[03:40:11] <stenno> but i cannot prove it, only 'someone who knows about it told me so'
[03:40:57] <stenno> The server MAY, upon receiving the PASS command, use the password to automatically perform SASL PLAIN authentication with services on behalf of the client.
[03:41:19] <stenno> sounds as if there is really no difference?
[03:41:31] <Maxdamantus> https://gist.githubusercontent.com/Maxdamantus/46735fdf09d95cf777b882bada19d175/raw/2a538ab23d8502cb45bf5e22646f6c2894707c40/gistfile1.txt
[03:41:34] <stenno> reading https://gist.github.com/grawity/8389307
[03:41:41] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[03:42:35] *** Quits: zxvf (~zxvf@2001:8a0:7ef1:0:419a:62c0:537c:888e) (Quit: Client closed)
[03:42:42] <stenno> tiled window manager?
[03:42:43] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:42:46] <ljharb> stenno: yes, that's right - but we'd still need a way to tell those people how to register
[03:42:58] <ljharb> KevinX: no, the bot would have to be opped for that
[03:43:00] <Maxdamantus> Tiled terminal multiplexer (tmux).
[03:43:15] <Maxdamantus> Though I also happen to be using a tiled window manager (sway).
[03:43:19] <stenno> sweet
[03:43:39] <stenno> well from what i have seen shortly it seems you are correct
[03:43:43] <systemfault> Well, Ubereats just decided that I was living at 555 Market St. San Francisco...
[03:43:53] <ljharb> systemfault: that's uber's hq
[03:43:59] <systemfault> ljharb: Haha
[03:44:03] <devslash> ljharb, sorry to ask again but what was the syntax for an event callback with a parameter
[03:44:08] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:54c4:4447:22bb:35aa) (Quit: Textual IRC Client: www.textualapp.com)
[03:44:10] <ljharb> devslash: syntax?
[03:44:17] <devslash> yea
[03:44:24] <ljharb> devslash: and event listener is `.addEventListener(eventName, function (e) { … })`?
[03:44:25] <Maxdamantus> Dunno where people are expected to upload screenshots these days, so copying the terminal text seemed cleaner.
[03:44:28] <ljharb> devslash: is that what you mean?
[03:44:33] <devslash> no
[03:44:34] <stenno> Maxdamantus: love it!
[03:44:52] <devslash> instead of onClick={someHandler} you can pass a param to someHandler
[03:45:15] <devslash> you told me the syntax the other day but I forgot to save it
[03:45:15] <systemfault> I thought for a second that we had just gotten a Chipotle in Canada.. :'(
[03:46:00] <KevinX> Not sure you're missing much
[03:46:21] <devslash> Chipotle sucks
[03:46:39] <devslash> overpriced crappy food IMO
[03:46:44] <systemfault> Better than what we have...
[03:48:57] *** Joins: Lenkov45 (~Lenkov45@45.133.193.6)
[03:49:19] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[03:49:20] <stenno> Maxdamantus: i asked in #libera and they confirmed that sasl auth happens at an earlier stage, and therefore avoids a possible race condition with joining registered-only channels
[03:50:41] <Maxdamantus> stenno: in general, yes. But there seems to be an extra condition for when services are unavailable, so it will still let you connect.
[03:50:55] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[03:51:15] *** Joins: onosendi (~onosendi@user/onosendi)
[03:51:20] <stenno>  <NthDegree> if on a less secure IRC server (not libera) you use SASL rather than PRIVMSGing nickserv, it can save you in the event of
[03:51:30] <stenno>     a netsplit where someone could potentially change nick to be nickserv and start stealing passwords
[03:51:35] <Maxdamantus> stenno: so you'll get some 001-005 message or something telling you that services are down, and when they come back up it will complete the authentication.
[03:52:22] <theskillwithin> i'm for anything that doesn't require us to manually tell people to register and ident
[03:52:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:53:03] <Maxdamantus> I'm not, if there are side effects that are quite annoying for regular users who are doing the right thing.
[03:53:36] <stenno> the current way is annoying for op ( ljharb specifically) but most comfortable for 'newbies'
[03:53:50] <stenno> i should stay opped up during my day because of this really
[03:54:24] <theskillwithin> when im op'd znc doesn't tell me the user is unregistered, so I end up talking to someone who no one else can see haha
[03:54:26] <Maxdamantus> I've used "PASS" authentication for years (should be equivalent to SASL), and I remember occasionally ending up in "unrestered" channels, probably due to connecting while services were down (or connecting to a netsplitted server).
[03:55:01] <stenno> Maxdamantus: well #libera confirmed that sasl is always preferrable to pass
[03:55:01] <onosendi> devslash: https://gist.github.com/f291ca4c23aacc1ab753659e48f7f47f
[03:55:08] <Alex8532> Hello :)
[03:55:25] <stenno> actually the network ops were explicit in saying to always use SASL
[03:55:30] <devslash> thank you
[03:56:02] <stenno> maybe PASS is not what i think it is
[03:56:10] <stenno> and i am confusing something
[03:56:27] <Maxdamantus> PASS is what is used in my gist.
[03:56:45] <onosendi> devslash: of course, if you don't need `event` then just `onClick={() => { handler('some arg'); }}`.
[03:56:47] <edk> pass is not equivalent to sasl
[03:56:59] <Maxdamantus> edk: equivalent to SASL PLAIN.
[03:57:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:57:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:57:01] *** Joins: wroathe (~wroathe@user/wroathe)
[03:57:04] <edk> it still isn't
[03:57:05] <stenno> no
[03:57:11] <theskillwithin> we could make a bot that notifies people, but op'ing a bot scares me
[03:57:11] <Maxdamantus> What's the difference?
[03:57:13] <devslash> right. I needed to pass the ID which comes from another field
[03:57:48] <stenno> Maxdamantus: sasl auth is done at an earlier stage of the auth handshake/process
[03:57:59] <edk> handling pass at all is kind of a quality-of-life hack; if you connect and your server password (which is what it's for) hasn't been consumed the server invents a nickserv identify command for you and sends it
[03:58:01] <Maxdamantus> stenno: look at my gist again.
[03:58:34] <edk> this doesn't happen until after you're introduced to the network
[03:58:36] <Maxdamantus> stenno: the server doesn't send you all of the server information or allow you to join channels until you've provided a NICK and USER.
[03:58:40] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[03:58:49] <Maxdamantus> stenno: PASS and SASL both happen before you've provided PASS and USER.
[03:58:58] <Maxdamantus> er, before you've provided NICK and USER*
[03:59:13] <Maxdamantus> edk: https://gist.githubusercontent.com/Maxdamantus/46735fdf09d95cf777b882bada19d175/raw/2a538ab23d8502cb45bf5e22646f6c2894707c40/gistfile1.txt
[03:59:16] <stenno> it will prevent aforementioned race condition
[03:59:17] <edk> you send the PASS command before you've done those things yes, but it is not used until after you've completed the handshake
[03:59:30] <Maxdamantus> edk: what handshake? You mean the TLS handshake?
[03:59:35] <edk> no, the IRC handshake
[03:59:50] <edk> (the IRC word is "registration" but that tends to confuse people who think it means nickserv registration)
[03:59:56] <Maxdamantus> The IRC handshake is sending the "USER" and "NICK" commands.
[04:00:07] <edk> and PASS, and maybe doing SASL
[04:00:18] <stenno> Maxdamantus: edk is a network op btw :P
[04:00:23] <edk> the part you seem to be missing is that just because you send PASS during the handshake phase doesn't mean it's actually doing anything
[04:00:43] *** Joins: jopamo (~me@gateway/tor-sasl/jopamo)
[04:01:02] <edk> the server holds onto your password until the moment of registration, when it figures out whether you needed a password to get in
[04:01:19] <Maxdamantus> :maxdamantus0 MODE maxdamantus0 :+iw
[04:01:19] <Maxdamantus> PASS foobar
[04:01:19] <Maxdamantus> :strontium.libera.chat 462 maxdamantus0 :You are already connected and cannot handshake again
[04:01:32] <edk> if you didn't, it sends ":you PRIVMSG NickServ :IDENTIFY the-password" later on your behalf
[04:01:33] <Maxdamantus> It doesn't let you do PASS after the handshake.
[04:01:41] *** Joins: maxdamantus0 (~a@124.197.32.108)
[04:01:45] <edk> please read what i'm typing, it's not about when you send it
[04:01:54] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[04:01:59] *** Quits: maxdamantus0 (~a@124.197.32.108) (Client Quit)
[04:02:09] <edk> the server just remembers your password until you complete the handshake, it only uses it once you're connected
[04:02:21] <edk> as opposed to sasl which is magic and really does happen during the handshake
[04:03:09] <Maxdamantus> So why doesn't the server just treat "PASS" and "SASL PLAIN" the same way?
[04:03:17] <stenno> hysterical raisins?
[04:03:56] * Maxdamantus tries.
[04:04:28] *** Joins: crashrep (~crashrep@user/crashrep)
[04:04:45] <edk> the short answer is that yes, but it's not trivial; the server doesn't know that you wanted to SASL, and all it could do is make the registration hang until your SASL goes through, and if it failed there would be no opportunity for the client to do anything
[04:04:54] <edk> could you think of something sensible to do in this situation? well, probably
[04:05:16] <edk> but it seems easier for clients to just do sasl
[04:06:27] <jopamo> Hi everybody, I am learning basic nodejs console js. What do people usually use to share code? Replit or a pastebin?
[04:07:05] *** Quits: admin123 (~harrymore@2607:fb90:558f:42d1:ed7f:df64:71cb:d760) (Ping timeout: 268 seconds)
[04:07:07] <stenno> jopamo: i just paste it to my gist usually
[04:07:15] <stenno> !paste
[04:07:15] <jellobot> stenno, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[04:07:31] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:8006:7f43:87cf:5d6)
[04:07:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:07:57] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:8006:7f43:87cf:5d6) (Client Quit)
[04:08:19] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 268 seconds)
[04:08:55] <Maxdamantus> Hmm.. Okay, well it looks like irssi has SASL built-in now, so I guess I can start using it.
[04:08:56] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 268 seconds)
[04:09:11] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[04:09:23] <Maxdamantus> Last time I looked into it, you had to use some perl plugin.
[04:09:33] <stenno> or just use weechat which is irssi with all the plugins you want pre-installed :P
[04:09:38] <stenno> (more or less)
[04:10:32] <stenno> Maxdamantus: you can even do pubkey auth so no need to actually send your plaintext pw
[04:10:38] <stenno> SASL with pubkey
[04:10:48] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[04:10:48] <onosendi> ^
[04:11:36] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[04:11:45] *** Joins: audiobirb (~audio@user/audio)
[04:11:48] *** Joins: thither (~thither@2600:1700:22f1:cc00:a42e:76c2:34b0:a73)
[04:12:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[04:13:26] <jopamo> thanks. I think I am trying to figure out how to delay node from trying to init the methods/functions inside the scoringAlgorithms array of objects until after user input is taken?
[04:13:33] <jopamo> https://gist.github.com/jopamo/c95d90ee74e71e04e3482e3e761bb3ff
[04:14:05] <jopamo> I am a noob, so the problem is likely fundamental. :)
[04:14:28] <onosendi> jopamo: fyi, gistfile1.js would have given you JavaScript syntax highlighting :)
[04:14:59] <jopamo> ah, i'll redo real quick
[04:15:51] <jopamo> https://gist.github.com/jopamo/a805864b01477ebdd258eef15b5208a0
[04:16:00] *** Joins: fef (~thedawn@user/thedawn)
[04:16:10] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:17:35] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:17:39] <jopamo> index.js just requires that file and runs runProgram(). I can make it work if I get the user input globally, but I want to do it in runProgram() if I can.
[04:17:59] *** Quits: va5c0 (~vasco.nun@31.127.137.56) (Quit: WeeChat 3.4)
[04:18:19] <Maxdamantus> stenno: well, my password is just randomly generated anyway, so using public key authentication would only really protect against replay attacks from a hacked Libera server.
[04:18:37] <Maxdamantus> (I only connect to Libera using verified TLS)
[04:18:41] <stenno> i assume you use ssl anyway
[04:18:43] <stenno> right
[04:18:45] <stenno> but still
[04:19:46] <stenno> is there a reason to not use pubkey then?
[04:19:48] <stenno> :P
[04:20:01] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[04:20:49] *** Joins: deltab (~deltab@user/deltab)
[04:20:53] <Maxdamantus> Just that it's more complicated. I'm not going to enter a password manually when connecting either way, so either my password is stored or my private key is stored (in such a way that my IRC client can access it).
[04:21:07] <stenno> its really not complicated, you have to set it up once anyway
[04:21:12] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:21:44] <stenno> also even if there was literally no functional difference, its way cooler
[04:21:55] <stenno> i am amazed that you don't think this way too
[04:22:09] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:22:26] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[04:22:42] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[04:22:44] <ljharb> thither: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[04:23:19] <ljharb> stenno: feel free to stay opped for this if you want; just be sure you can tell the difference between an unauthed speaker and an authed one. another op's client didn't make it clear.
[04:23:36] <stenno> i trust in weechat
[04:23:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1cf4:b504:d97f:804d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:24:21] <thither> (Reposting post registration with NickServ) Hey all - getting weird behavior in this library with buffers/file descriptors - https://gist.github.com/danthedaniel/e786c14e0a854c7f42f3f9e665ce6c5a
[04:24:28] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[04:24:29] <thither> Any help is appreciated! :D
[04:24:37] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[04:24:46] *** Joins: maxdamantus0 (~max@124.197.32.108)
[04:24:56] *** ChanServ sets mode: +o Maxdamantus
[04:25:02] <stenno> nice
[04:25:18] *** Quits: maxdamantus0 (~max@124.197.32.108) (Client Quit)
[04:25:31] <ljharb> ezio: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[04:25:51] <ljharb> thither: you're set now, thanks. you can also ask in #node.js in the future, since Buffer is more of a node thing
[04:25:53] *** Maxdamantus sets mode: -o Maxdamantus
[04:26:04] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Client Quit)
[04:26:05] <thither> I'll go spam over there, too :P
[04:26:10] <ljharb> thither: altho if it's with vercel you likely need to ask them
[04:26:12] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:26:20] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[04:26:22] <ljharb> things like vercel are often too bespoke to be generally helped :-/
[04:26:26] <thither> I also have an issue locally though
[04:26:33] <thither> One that seems related
[04:26:34] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:26:58] <ljharb> thither: right but the build process is still vercel's, no?
[04:27:10] <ljharb> it's all next.js
[04:27:13] <stenno> i just really really hate being opped up but i guess its for the good of the channel
[04:27:20] <thither> It's NX, so a Google offshoot thing actually
[04:27:45] <thither> NX calling into NextJS. The errors are in NX's stdout piping code
[04:28:01] <ljharb> stenno: today's a very rare peak tho; usually it's once a week
[04:28:02] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:28:08] <stenno> right
[04:28:10] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[04:28:13] <ljharb> thither: ah. nx is very new
[04:28:24] <thither> I kinda hate it
[04:28:29] <stenno> jopamo: sorry i am too tired and this is a lot of code to look into right now
[04:28:31] <Sqaure> I've forgot how cookie auth works. I know the headers and all but one thing bugs me. Say keep track of logged in users by giving them a cookie containing their userid. What stops a client from passing this cookie manually?
[04:28:40] <thither> But it's less work to just keep using it now that the app is all set up to use it
[04:29:05] <thither> Sqaure cryptographically signed cookies
[04:29:07] <stenno> Sqaure: you'd generate (or let generate) a unique session token
[04:29:18] <thither> Or that - both work
[04:29:49] <Sqaure> ah ok.
[04:30:08] <thither> JWTs storing user IDs are basically a JSON blob with a signature that only the server can write
[04:30:10] <stenno> if the cookie just contains the id of the user (and the id is a simple numerical value like 1,2,3) its indeed possible
[04:30:16] <stenno> JWT are NOT for sessions
[04:30:20] <stenno> !jwt
[04:30:20] <jellobot> stenno, Don't use JWT for sessions. http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions -- JWT was never meant to be used for sessions, and its popularity happened purely because of marketing: https://youtu.be/GrLtOjCTB1s?t=1h2m44s  |  Instead, use session cookies: https://gist.github.com/joepie91/cf5fd6481a31477b12dc33af453f9a1d
[04:30:26] <thither> gg
[04:31:13] <stenno> you should use a library on the server side which handles sessions for you
[04:31:33] <banana_> well joepie91's opinion
[04:31:46] <stenno> if you implement your own stuff it will most likely end up worse than existing solutions, and can introduce severy security issues
[04:32:28] <banana_> all seriousness yeah I hate working on project using jwt session tokens
[04:32:56] <stenno> i think the links make it clear that that is more than just 'an opinion'
[04:33:06] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:33:12] <utoneq> isn't jwt to store more than just a sessionid?
[04:33:49] <banana_> nice article though I'll pass this along. the issue is some projects are out of your control
[04:33:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:34:03] <stenno> that is certainly true, yes
[04:34:08] <utoneq> what do you mean by stopping the client from passing a cookie?
[04:34:17] <onosendi> jopamo: so what's wrong with this exactly?
[04:34:34] <stenno> JWT can be used for SSO stuff
[04:35:28] <stenno> no, not SSO
[04:35:32] <stenno> single access token
[04:35:33] <utoneq> on top you can store a cryptographically signed picture of your penis in it.
[04:35:47] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:35:49] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[04:35:49] <jopamo> scoringFunction in scoringAlgorithms does not work, I don't know how to make it wait for the readline-sync input
[04:36:20] <jopamo> stenmo: no worries
[04:37:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:37:18] <utoneq> .on('data', callback)
[04:37:33] <jopamo> onosendi: I keep playing with the variables, I don't actually even know what needs to be global.
[04:37:58] <jopamo> onosendi: it works if I bring in the readline-sync input globally
[04:39:45] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:35bf:8b36:d4db:71cc)
[04:41:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:42:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:43:36] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[04:45:14] <onosendi> jopamo: Is this what's supposed to happen? https://dpaste.org/FMT4
[04:45:43] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[04:46:22] *** Joins: Guest47 (~Guest47@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[04:47:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:47:22] <jopamo> onosendi: that's what it's doing currently, it should return the word score for the selected algorithm. it does work if you shuffle the vars somewhat and do the readline-sync input globally
[04:47:52] *** Parts: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) ()
[04:49:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[04:49:47] *** Joins: ezio47 (~ezio@user/ezio)
[04:49:54] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[04:50:40] *** Quits: Lenkov45 (~Lenkov45@45.133.193.6) (Ping timeout: 256 seconds)
[04:51:06] *** Joins: Lenkov45 (~Lenkov45@45.133.193.13)
[04:51:20] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:51:23] *** Quits: ezio47 (~ezio@user/ezio) (Client Quit)
[04:51:23] *** Quits: Guest47 (~Guest47@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Quit: Client closed)
[04:51:54] <onosendi> jopamo: ah, one second.
[04:52:16] *** Joins: ezio (~ezio@user/ezio)
[04:52:22] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[04:52:32] <ezio> In this example, what does mergeMap do? of('a', 'b', 'c').pipe(mergeMap(x => interval(1000).pipe(map(i => x+i)))).subscribe(x => console.log(x));
[04:52:38] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[04:52:51] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[04:53:34] <stenno> its a custom function, is this rxjs?
[04:53:46] <stenno> https://www.learnrxjs.io/learn-rxjs/operators/transformation/mergemap
[04:53:57] <ezio> Yes.  It's an example from their documentation.
[04:54:06] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Remote host closed the connection)
[04:54:14] <ezio> stenno, thanks
[04:54:52] <stenno> rxjs is pretty cool
[04:55:27] <ezio> It is, but it's also hard to wrap your head around when you first get in deep.
[04:55:29] <stenno> maybe i should just use that instead of constantly complaining about the lack of iterator-helpers
[04:55:32] <stenno> yes, true
[04:56:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[04:56:30] <thither> So they literally just updated the package that was broken 3 hours ago. I started working on this a few hours before that :P
[04:56:35] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:57:05] <ezio> I had to take functional programming back in university, but several people in the class, not me, went over the prof's head and got him booted from the class.
[04:57:26] <ezio> I actually like that prof.  No one else did.  But he was my thesis advisor.
[04:57:36] <stenno> rxjs gets a bad rep because its associated with angular, but it works fine as a standalone
[04:57:37] *** Quits: thither (~thither@2600:1700:22f1:cc00:a42e:76c2:34b0:a73) (Quit: Client closed)
[04:57:56] <stenno> ezio: that sucks for both the prof and for you
[04:58:21] <stenno> bad rap*
[04:58:42] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:58:47] <ezio> Anyways, he tried to teach us Scheme, and it was tough.
[04:59:08] <ezio> We were all pulling our hair out.
[05:01:40] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:02:47] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:04:41] *** Joins: Rockwood (~Rocky@user/rocky)
[05:06:32] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:08:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[05:08:18] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[05:09:56] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[05:10:13] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:12:26] *** Quits: stagas (~stagas@2a02:587:c44d:80c7:c321:2f69:9f0c:3ded) (Ping timeout: 245 seconds)
[05:14:28] *** Quits: Alex8532 (~Alex8532@user/alex8532) (Quit: Going offline, see ya! (www.adiirc.com))
[05:15:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[05:15:37] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[05:16:26] <jopamo> onosendi: sorry, I should have been more organized. here's the working version that has the readline-sync input global. https://github.com/jopamo/a1
[05:17:06] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[05:17:31] <onosendi> jopamo: I'm in the middle of cleaning it up :P
[05:18:31] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Remote host closed the connection)
[05:18:34] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:20:57] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[05:21:33] <jopamo> onosendi: awesome
[05:23:22] *** Joins: Rockwood (~Rocky@user/rocky)
[05:23:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[05:25:12] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[05:26:58] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:28:13] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:35bf:8b36:d4db:71cc) (Quit: I have gone to sleep. ZZZzzz…)
[05:29:07] <jopamo> onosendi: I think I have been stuck on this thing for like 5 hours, so I am anxious to know what I am doing wrong. :D
[05:30:36] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:32:51] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:33:02] <Rockwood> stenno, are you there?
[05:33:31] <Rockwood> jopamo, what is the issue?
[05:34:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:37:54] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[05:38:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:39:37] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 240 seconds)
[05:40:56] <jopamo> https://github.com/jopamo/a1 `initialPrompt();` needs to be called inside of a function, not global. Been banging head against wall. Iamanoob. onosendi is about finished I think though.
[05:43:57] <onosendi> jopamo: https://gist.github.com/onosendi/f29a4a24487f0a82a36fb53de63c1781
[05:44:36] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:45:32] <Rockwood> onosendi, do you know PHP too?
[05:45:42] <Rockwood> as backend
[05:45:55] <onosendi> Rockwood: I haven't written PHP in 10 years, so no, not really.
[05:46:10] <Rockwood> ah okay
[05:47:19] *** Joins: jopamo_ (~me@gateway/tor-sasl/jopamo)
[05:48:09] <onosendi> jopamo: the problem was `inputWord` was scoped to `runProgram`, so your algorithms array wasn't getting an updated version of `inputWord`.
[05:49:15] *** Quits: jopamo (~me@gateway/tor-sasl/jopamo) (Ping timeout: 276 seconds)
[05:49:25] *** Joins: Rockwood_ (~Rocky@user/rocky)
[05:50:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[05:50:17] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[05:50:57] <jopamo_> that makes sense, thanks alot for your help.
[05:52:17] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:53:14] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:00:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:03:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[06:05:50] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[06:07:13] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:13:15] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:14:19] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:14:19] *** jazzy2 is now known as jazzy
[06:15:29] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:19:30] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 250 seconds)
[06:23:36] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[06:27:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[06:28:37] *** Quits: Lenkov45 (~Lenkov45@45.133.193.13) (Ping timeout: 240 seconds)
[06:29:18] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[06:29:50] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:32:42] *** Joins: yaalon (~yaalon@cpe-70-120-73-36.satx.res.rr.com)
[06:34:36] *** Joins: Lenkov45 (~Lenkov45@45.133.193.10)
[06:34:40] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[06:34:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:35:22] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[06:37:17] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Quit: leaving)
[06:37:39] *** Joins: Maxdamantus (~Maxdamant@124.197.32.108)
[06:38:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:38:30] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[06:40:07] *** Quits: Maxdamantus (~Maxdamant@124.197.32.108) (Client Quit)
[06:40:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[06:43:34] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[06:46:57] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[06:48:37] *** Joins: stagas (~stagas@2a02:587:c44d:80c7:563d:ad27:f973:e9e3)
[06:58:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[07:03:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[07:03:44] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[07:10:09] *** Quits: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl) (Quit: Konversation terminated!)
[07:16:05] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[07:17:51] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[07:18:41] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[07:20:50] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[07:21:10] *** Joins: FiskFan1999 (~FiskFan19@wvlist.net)
[07:22:02] <FiskFan1999> Hello. I have the following javascript in an html document: https://bpa.st/O7WQ in which I would like to be able to shuffle around rows of a table with a button placed on each row. I'm confused why the moveDown function does not work the same as the moveUp command does
[07:25:21] *** Joins: sam_1 (~sam_1@87.51.251.118)
[07:28:21] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[07:29:53] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[07:35:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:35:38] <matsaman> FiskFan1999: what's it do instead?
[07:35:39] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[07:36:13] <FiskFan1999> In my testing it does not do anything, and it also doesn't give any error. I am testing some more atm
[07:36:27] *** Joins: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net)
[07:37:30] *** Quits: Lenkov45 (~Lenkov45@45.133.193.10) (Ping timeout: 250 seconds)
[07:37:38] <FiskFan1999> Sorry, I did figure it out. I somehow forgot to add "this" as the input for onclick="moveRowDown(this)", my apologies
[07:37:44] <matsaman> =)
[07:37:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[07:38:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:38:11] <matsaman> might I suggest using mouseup/click event listeners instead of the 'onclick' attribute
[07:38:19] <matsaman> less to keep track of that way
[07:38:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:39:04] *** Joins: fef (~thedawn@user/thedawn)
[07:40:26] <FiskFan1999> I'll check that out, thanks matsaman
[07:40:40] <FiskFan1999> I'm pretty new to using javascript in web applications actually, i'm really enjoying what i'm learning though
[07:42:32] <matsaman> can be fun indeed
[07:43:57] *** relms is now known as Room-Wah
[07:44:55] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[07:44:56] <matsaman> FiskFan1999: aaannnnddd, something else to consider
[07:45:18] <matsaman> a lot of the convenience of jQuery has been added to ordinary JavaScript at this point
[07:45:47] *** Quits: yaalon (~yaalon@cpe-70-120-73-36.satx.res.rr.com) (Remote host closed the connection)
[07:46:22] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:49:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[07:50:30] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:50:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[07:51:05] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:51:07] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Read error: Connection reset by peer)
[07:51:42] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[07:52:12] *** Joins: salad1 (~cucumber@82.76.150.118)
[07:52:12] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[07:53:12] *** Joins: Maxattax97 (~max@199.8.13.227)
[07:54:16] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[07:55:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[07:55:50] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[07:56:45] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:57:35] <Sqaure> can you post a faked form (for development purposes) in browser?
[07:58:11] <FiskFan1999> Thanks guys, cya later
[07:58:13] *** Parts: FiskFan1999 (~FiskFan19@wvlist.net) (WeeChat 3.4)
[07:58:18] <Sqaure> I often think: "-Damn, I can only do GET requests in a browser.
[07:58:41] <crashrep> You can use curl for that, for browsers I don't know.
[07:59:21] <theskillwithin> a faked form?
[07:59:43] <theskillwithin> axios-mock-adapter
[08:01:49] <matsaman> the only thing keeping form submissions in line is the post processing done on the data afterward
[08:02:23] <matsaman> you can send any value for any input, it's up to the backend to sanitize it
[08:04:20] <Sqaure> i was thinking i could issue some post command in console. Many forms have small amount of data. Possibly enjoy a possible redirect reflected in the browser, when that is applicable..
[08:04:30] <Sqaure> Just wishing here =D
[08:06:44] *** Quits: N4buc0 (~N4buc0@191.250.117.129) (Ping timeout: 256 seconds)
[08:09:01] <matsaman> you can modify any HTML & JS in the browser and send whatever you want
[08:11:30] *** Joins: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com)
[08:15:15] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[08:15:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:23:55] *** Quits: yaalon (~yaalon@2603-8081-7004-2832-4c4d-ff46-972f-97a6.res6.spectrum.com) ()
[08:25:44] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[08:25:52] *** Joins: zebrag (~chris@user/zebrag)
[08:29:49] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[08:29:51] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:32:05] *** Quits: Maxattax97 (~max@199.8.13.227) (Remote host closed the connection)
[08:35:20] *** Quits: stagas (~stagas@2a02:587:c44d:80c7:563d:ad27:f973:e9e3) (Ping timeout: 268 seconds)
[08:35:51] *** Joins: stagas (~stagas@2a02:587:c434:5625:8160:4208:2b4c:be27)
[08:36:11] *** Joins: c4017w (~c4017@209.52.68.8)
[08:37:12] *** Joins: ferdna (~ferdna@user/ferdna)
[08:39:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:41:38] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[08:43:37] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[08:46:46] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:47:43] <Sqaure> found this (excerpt) : fetch('http://localhost:3002/slogin/', {
[08:47:43] <Sqaure>   method: 'POST',
[08:47:44] <Sqaure>   body:....
[08:48:02] <Sqaure> good enough to login atleast!
[08:48:39] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:48:45] <friend> if I want to use one value or another, are there problems if I use let x=a||b as opposed to let x=a?a:b;
[08:50:40] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[08:51:15] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[08:51:39] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[08:54:42] <KevinX> I believe || just has higher precedence. I personally only use || if it's easy to read (same for &&)
[08:55:01] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:55:47] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:56:43] <theskillwithin> in the example given, logically they are the same I believe.  so no problems
[08:58:25] <systemfault> friend: Use ?? instead of || :)
[08:58:49] <KevinX> ?? only works with undefined though
[08:59:21] <systemfault> And null
[08:59:25] <theskillwithin> it really just depends on what you want to be treated as falsy
[09:00:11] <KevinX> yeah null too :D
[09:00:19] <theskillwithin> but not 0
[09:01:33] <KevinX> I never thought about it, but I guess that's what they mean by null_ish_?
[09:02:12] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:02:29] <friend> if ((p.x||p.left)&&(p.y||p.top) { let x=p.x||p.left; let y=p.y||p.top;}
[09:02:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:02:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:02:42] *** Joins: wroathe (~wroathe@user/wroathe)
[09:02:57] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[09:03:03] <KevinX> Yeah that's extremely readable
[09:03:16] <theskillwithin> i agree, i hate how you space your code
[09:03:29] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[09:03:43] <systemfault> I personally haven't witnessed a case where someone really wanted the quirk of || when used to initialize a variable... They usually want ?? but use || because it did not exist until recently.
[09:04:06] <xsperry> where's the quirk?
[09:04:14] <theskillwithin> good point systemfault
[09:04:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:04:35] <systemfault> xsperry: Well, you'll get the default if a falsy value is used
[09:04:56] <systemfault> n> 0 || 10
[09:04:57] <jellobot> (okay) 10
[09:04:59] <systemfault> n> 0 ?? 10
[09:05:00] <jellobot> (okay) 0
[09:05:13] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[09:05:55] <friend> wait holdon, I've never seen ?? lol is ?? the same as let x=a?a:b
[09:06:19] <theskillwithin> no
[09:06:26] <friend> drats
[09:06:29] <KevinX> I rarely see || these days
[09:06:41] <KevinX> Maybe in react in place of &&
[09:06:48] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:07:14] <KevinX> loading || <TheThing />
[09:07:29] <theskillwithin> friend https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator
[09:07:52] <KevinX> friend only if `a` is nullish
[09:07:56] <systemfault> friend:  ?? will use the right-side value if the left-side is null or undefined
[09:08:23] <systemfault> friend:  || will use the right-side value if the left-side is falsy (null or undefined or false or empty string... )
[09:08:54] <systemfault> So, in practice... ?? is less error-prone
[09:08:56] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[09:09:54] <KevinX> Personally if I see || and the left side isn't super obvious I'll consider it a code smell and refactor it
[09:10:15] <systemfault> I personally just stopped using || for that purpose
[09:10:54] <systemfault> I don't have to ask myself... can the left-side ever have a falsy value?!
[09:11:25] <systemfault> My brainpower is limited, I'd rather use patterns that makes errors impossible/unlikely
[09:11:39] <friend> so in a cartesion coordinate space -1 might return falsey making it a problem to use ||
[09:12:03] <systemfault> n> !!(-1)
[09:12:04] <jellobot> (okay) true
[09:12:09] <systemfault> -1 is truthy
[09:12:34] <KevinX> You have to use < or >
[09:12:45] <friend> n>-1||50
[09:12:46] <jellobot> (okay) -1
[09:13:47] <theskillwithin> edge case where I like 0 to be falsely is where if im measuring the length of something and want it to be false if length is 0,  but really you could say shoudln't write code like that and make it more explicit to its meaning
[09:14:47] <silly> n> ~-1
[09:14:47] <jellobot> (okay) 0
[09:15:01] <systemfault> Yup, that's an evil trick
[09:15:26] <systemfault> A classic with Array#indexOf
[09:15:30] <friend> when I read code, i substitute "or" for || so it sounds good when I read it. x=a or b
[09:16:14] *** Quits: sfields (~sfields@2605:a601:adea:7a00:c4ee:5808:64b3:bc82) (Remote host closed the connection)
[09:16:21] <friend> but I have to say to myself, is X equal to A i so A, otherwise B when I use x=a?a:b
[09:16:36] *** Joins: sfields (~sfields@2605:a601:adea:7a00:c4ee:5808:64b3:bc82)
[09:16:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:17:14] <Maxdamantus> and && or || or && and
[09:17:19] <Maxdamantus> and and or or or and and
[09:17:27] <Maxdamantus> Dunno. I think I prefer the former.
[09:20:20] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[09:22:16] *** Joins: georgy (~bc8147f2@cerf.good1.com)
[09:24:57] <ljharb> georgy: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic.
[09:24:58] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[09:26:09] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:26:09] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:26:09] *** Joins: wroathe (~wroathe@user/wroathe)
[09:26:19] <georgy> n> true || false
[09:26:20] <jellobot> (okay) true
[09:26:22] <georgy> n> false || false
[09:26:23] <jellobot> (okay) false
[09:26:28] <georgy> n> false || true
[09:26:28] <jellobot> (okay) true
[09:26:34] <georgy> seems fine to me? like in any other language
[09:26:44] <ljharb> n> 0 || 1 @ georgy
[09:26:45] <jellobot> georgy, 1
[09:26:59] <ljharb> georgy: in many languages, || and && are logical operators. in JS, they're not, they're value selection operators.
[09:27:10] <ljharb> iow, you don't always get a boolean out.
[09:27:38] <georgy> yeah good point. but then again, you get a value that you can use as bool
[09:27:39] <ljharb> eg, in php, `||` is a logical operator. so they added `?:` to act like JS's `||`.
[09:27:58] <ljharb> georgy: sure. but that can lead to bugs, since 0 and the empty string and NaN etc are falsy, but might mean real values.
[09:28:02] <friend> ljharb drops mic.   That cleared things up or me. Thanks for everyone's help.
[09:30:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:31:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:31:11] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:32:23] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:36:47] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[09:36:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:36:58] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[09:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:40:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:41:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[09:45:40] *** Joins: Rockwood (~Rocky@user/rocky)
[09:46:10] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:46:52] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Remote host closed the connection)
[09:47:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[09:48:08] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:48:41] *** Joins: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net)
[09:52:42] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[09:55:08] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[09:56:12] *** Quits: mintoyatsu (~mint@ip24-255-4-17.tc.ph.cox.net) (Changing host)
[09:56:12] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[09:58:22] *** Joins: duds-_ (~duds-@gateway/tor-sasl/duds)
[09:58:46] *** Quits: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[09:59:32] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[10:00:15] *** Joins: han-solo (~han-solo@user/han-solo)
[10:01:44] *** duds-_ is now known as duds-
[10:03:57] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:06:16] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[10:07:46] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[10:09:40] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[10:09:55] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:11:50] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[10:13:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[10:14:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:14:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[10:16:22] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:16:23] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[10:16:23] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[10:30:36] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:31:33] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:37:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:39:42] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:40:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:45:24] *** Quits: Aljone (~Aljone1@87.71.123.31) (Ping timeout: 256 seconds)
[10:45:53] *** Joins: Aljone (~Aljone1@77.125.178.214)
[10:46:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:49:11] *** Joins: kilitary (~kilitary@188.242.187.4)
[10:50:14] *** Joins: fef (~thedawn@user/thedawn)
[10:50:33] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[10:53:17] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 240 seconds)
[10:54:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[10:55:06] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[11:02:26] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[11:02:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:04:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:08:07] *** Quits: w0ng (~w0ng@103.1.212.158) (Quit: w0ng)
[11:09:16] *** Joins: w0ng (~w0ng@103.1.212.158)
[11:09:50] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[11:20:06] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[11:22:24] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[11:24:05] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:26:56] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[11:27:36] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[11:30:27] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[11:30:52] *** Joins: fef (~thedawn@user/thedawn)
[11:31:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:33:38] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:35:00] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Quit: Leaving)
[11:35:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:36:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:37:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:38:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:39:36] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[11:41:02] *** Joins: paule32 (~paul@nat-91-137-22-14.net.encoline.de)
[11:41:02] *** Quits: paule32 (~paul@nat-91-137-22-14.net.encoline.de) (Changing host)
[11:41:02] *** Joins: paule32 (~paul@user/paule32)
[11:41:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:42:51] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[11:44:19] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[11:44:21] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[11:44:50] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[11:45:41] *** Quits: kilitary (~kilitary@188.242.187.4) (Read error: Connection reset by peer)
[11:49:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[11:49:09] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[11:49:45] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[11:54:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:56:56] *** Joins: D4mned (~D1mned@212.101.234.127)
[12:01:00] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:02:41] *** Joins: vysn (~vysn@user/vysn)
[12:04:23] *** Joins: kilitary (~kilitary@188.242.187.4)
[12:05:23] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[12:05:25] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[12:05:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[12:07:44] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:10:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[12:16:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:18:38] *** Joins: realies3 (~realies@user/realies)
[12:18:41] *** Quits: realies (~realies@user/realies) (Ping timeout: 256 seconds)
[12:18:41] *** realies3 is now known as realies
[12:22:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d180:c928:f791:f80d)
[12:22:48] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:24:30] *** Quits: stagas (~stagas@2a02:587:c434:5625:8160:4208:2b4c:be27) (Ping timeout: 260 seconds)
[12:26:06] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 250 seconds)
[12:27:24] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:30:26] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 250 seconds)
[12:31:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[12:36:03] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[12:38:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:38:24] *** Joins: stagas (~stagas@2a02:587:c41d:f5c1:e6c2:4c9f:1d6c:265b)
[12:39:33] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:42:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:43:51] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[12:44:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:51:17] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[12:55:56] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[12:59:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 250 seconds)
[12:59:36] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[13:00:46] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[13:01:56] *** Joins: noarb (~noarb@user/noarb)
[13:03:16] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:12:28] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f)
[13:12:33] <dan01> Hey guys
[13:12:48] <dan01> If I do a request with curl I get back Json data
[13:13:09] <dan01> however in js, using fetch, I get back an Object with a value property that contains an array of Uint8
[13:13:17] <dan01> Why the difference?
[13:14:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[13:16:32] *** Joins: gebbione (~gebbione@cpc152037-finc21-2-0-cust213.4-2.cable.virginm.net)
[13:17:15] <gebbione> hi is yarn info --name-only the command that would show installed packages?
[13:19:08] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[13:19:34] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[13:20:07] <silly> dan01, in your devtools go to network tab, right click the request in question, choose copy as curl and compare the clipboard contents to your curl request
[13:20:43] <dan01> silly: thanks!
[13:22:44] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[13:24:16] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:28:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[13:29:37] *** Joins: thiras (~thiras@user/thiras)
[13:35:26] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[13:37:14] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:38:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:41:59] *** Joins: sam_1 (~sam_1@87.51.251.118)
[13:42:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:43:51] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[13:46:24] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[13:46:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[13:49:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:49:50] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f) (Ping timeout: 268 seconds)
[13:50:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:51:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:54:33] *** Joins: D3mned (~D1mned@212.101.253.58)
[13:54:33] *** Quits: D4mned (~D1mned@212.101.234.127) (Read error: Connection reset by peer)
[13:55:10] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[14:03:25] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[14:03:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[14:03:51] *** Joins: sam_1 (~sam_1@87.51.251.118)
[14:05:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:07:15] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[14:08:04] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:08:57] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[14:13:16] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[14:17:03] *** Quits: The_Blode (uid537595@user/the-blode/x-7164444) (Quit: Connection closed for inactivity)
[14:20:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[14:26:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:30:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[14:30:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[14:32:06] *** Quits: Wizzzzzy (~wizzzzzy@148.252.128.154) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:32:33] *** Joins: han-solo (~han-solo@103.104.47.42)
[14:34:39] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f)
[14:35:48] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) ()
[14:39:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:42:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:46:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[14:50:19] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Remote host closed the connection)
[14:51:54] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[14:54:14] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[14:55:04] <Rockwood> o/
[14:56:06] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:56:37] <wez> \o
[14:58:09] *** Quits: han-solo (~han-solo@103.104.47.42) (Changing host)
[14:58:09] *** Joins: han-solo (~han-solo@user/han-solo)
[15:03:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:03:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:04:17] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[15:04:51] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:07:50] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[15:09:20] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:13:20] *** Quits: friend (~friend@2002:492b:aba9:1::1006) (Remote host closed the connection)
[15:14:50] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[15:16:03] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Ping timeout: 276 seconds)
[15:22:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:27:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:32:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:38:46] *** Joins: pingpongball (~pingpongb@43.228.192.105)
[15:39:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:42:52] <dan01> hey guys
[15:43:00] <dan01> What's the role of JSON.stringify?
[15:43:10] <dan01> I mean ok, transform a JS object into a string, right?
[15:43:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:43:33] <dan01> Well, in a REST endpoint what's the diff between returning a JSON.stringify and an JS object?
[15:43:49] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[15:44:37] <vdamewood> dan01: On which end?
[15:45:23] <Maxdamantus> dan01: HTTP transmits byte streams, not JSON objects.
[15:45:39] <Maxdamantus> dan01: so if you want to transmit an object, you need to convert it into a string.
[15:47:14] <dan01> vdamewood: on the backend
[15:47:37] <dan01> Yeah, but look, I'm using hapi.js, but it's not relevant, but just for the point
[15:47:45] <vdamewood> dan01: What Maxdamantus said.
[15:47:56] <dan01> I can return myObject or return JSON.stringify(myObj)
[15:48:01] <dan01> I can do both
[15:48:17] <vdamewood> Then odds are, your framewortk is doing a stringify in the background.
[15:48:26] <dan01> ah ok
[15:48:28] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[15:49:00] <Maxdamantus> I would be worried about a framework where both of those do the same thing.
[15:49:27] <vdamewood> I would curl a couple of requests and see if they're different.
[15:49:33] <Maxdamantus> Either the framework does `JSON.stringify` in which case you should not do it, or the framework doesn't do `JSON.stringify` in which case you should do it.
[15:49:38] <vdamewood> s/they're/the responses are/
[15:50:30] <vdamewood> Perhaps if you return a string, the framework sets Content-Type to text/plain, and if you return a JSON object it sets the Content-Type to application/json
[15:50:58] <Maxdamantus> That sounds like a very evil framework.
[15:51:15] <vdamewood> I've seen worse.
[15:53:59] *** Quits: pingpongball (~pingpongb@43.228.192.105) (Quit: Client closed)
[15:55:50] <dan01> No there is indeed a difference
[15:55:57] <dan01> if I return a JS object
[15:56:09] <dan01> I can't json parse it in the frontend
[15:56:18] <dan01> but with JSON stringify I cna
[15:56:20] <dan01> can
[15:56:27] <dan01> however in curl, they look the same
[15:56:30] <Maxdamantus> Okay, so it's presumably just turning into "[object Object]"
[15:56:42] <Maxdamantus> Hm.
[15:56:53] <dan01> well maybe not
[15:56:56] <Maxdamantus> What does it look like in the network tab?
[15:56:57] <dan01> let me test again
[15:57:10] <Maxdamantus> You should be able to see the response body there.
[16:01:18] <dan01> sure
[16:01:21] <dan01> just a sec
[16:01:27] <dan01> I need to finish something
[16:02:00] * vdamewood finishes something else.
[16:09:27] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[16:09:49] *** ChanServ sets mode: +o stenno
[16:10:23] *** Joins: totallynotstenno (~totallyno@2a01:598:a00e:c6f0:1185:e15b:18e7:ec29)
[16:10:41] *** Quits: totallynotstenno (~totallyno@2a01:598:a00e:c6f0:1185:e15b:18e7:ec29) (Client Quit)
[16:10:48] *** stenno sets mode: -o stenno
[16:14:55] <stenno> well that works
[16:15:01] <stenno> should i op up then
[16:15:04] <stenno> i really don't wanna lol
[16:16:36] <hassoon_> stenno: what are you uop to
[16:16:41] <hassoon_> * uo to
[16:16:49] <stenno> try again
[16:17:05] <stenno> well unregistered people cannot talk in this channel
[16:17:06] * hassoon_ eyes his keyboard
[16:17:11] <hassoon_> * up to
[16:17:32] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[16:17:41] <stenno> but when i op up, i see them talk anyway and can inform them that they need to register/authenticate
[16:18:29] <hassoon_> stenno: how about you ignore their existence alltogether ?
[16:18:37] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[16:19:52] <stenno> well, that is currently what i am doing, however ljharb is opped up permanently for exactly that reason
[16:19:58] <stenno> its just to improve the... service :D
[16:20:19] <stenno> and ljharb cannot be awake for 24 hours a day, the noob
[16:20:52] <stenno> what i am worrying about is that people will treat me differently when i am opped up
[16:21:28] <stenno> for 99% percent of the time i want to be treated as just another channel member
[16:22:39] <stenno> this is also mentioned in the libera channel op guidelines, and also i know about the snafu principle
[16:24:35] <Maxdamantus> Wouldn't it make more sense if someone in a different timezone did it?
[16:24:38] <Maxdamantus> Sun Jan 30 01:54:38 AM NZDT 2022
[16:24:44] <Maxdamantus> eh, can't be bothered.
[16:24:54] <stenno> well i am in CET
[16:24:56] <stenno> in europe
[16:25:07] <stenno> ljharb is in the USA so that would lead to some nice coverage
[16:25:09] <Maxdamantus> Oh, thought you were in US.
[16:25:17] <stenno> thank the lord that i am not
[16:25:37] <stenno> i am german, i thought you would have noticed by my terrible grammar and spelling
[16:26:36] <Maxdamantus> Ich habe nicht.
[16:26:48] <Pajus> I knew from the smell
[16:27:04] <stenno> smell like potatos and liberal democracy
[16:32:01] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[16:33:39] <silly> "terrible grammar and spelling" nu tu ma nich so
[16:33:39] <austincheney_> stenno, Americans generally have terrible spelling and grammar so not a strong identifier of anything
[16:34:12] <stenno> silly: ich habe in meinen letzten saetzen bereits mindestens 2 grammatikfehler entdeckt!
[16:34:49] <silly> lol, i didn't wcid
[16:36:06] *** Quits: georgy (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[16:36:20] <stenno> i guess it suffices
[16:36:37] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[16:36:44] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[16:36:46] *** Joins: Naan (~naan@user/naan)
[16:40:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:44:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:44:54] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[16:46:49] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:46:57] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[16:49:08] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[16:50:59] <qswz> n> await [1, 5].reduce((p, v) => p.then(async () => { const w = await Promise.resolve(4); return v+w }), Promise.resolve())
[16:51:00] <jellobot> (okay) 9
[16:51:22] <qswz> ljharb: the problem is it return the last value, not an array
[16:51:35] <qswz> would expect [5,9]
[16:51:52] <stenno> can't you resolve to []
[16:52:25] <stenno> n> await [1, 5].reduce((p, v) => p.then(async () => { const w = await Promise.resolve(4); return [...v, w+v[v.length-1]] }), Promise.resolve([]))
[16:52:26] <jellobot> (fail) TypeError: v is not iterable
[16:52:43] <stenno> err
[16:52:48] <stenno> random variables lol
[16:52:53] <stenno> but something like that
[16:53:30] <stenno> n> await [1, 5].reduce((p, v) => p.then(async () => { const w = await Promise.resolve(4); return [...p, w+v]}), Promise.resolve([]))
[16:53:31] <jellobot> (fail) TypeError: p is not iterable
[16:53:40] <stenno> ooh hm
[16:53:42] <stenno> its a promise
[16:53:56] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:53:59] <stenno> qswz: why not generators
[16:54:02] <stenno> and for-await-of
[16:54:14] <stenno> in lieu of iterator-helpers
[16:54:23] <qswz> stenno: I'd prefer simple one liners
[16:54:32] <qswz> and non mutating
[16:54:39] <stenno> certain things are just not possible with .reduce chaining
[16:54:45] <qswz> as it it was Promise.all
[16:54:49] <qswz> as if*
[16:55:01] <qswz> that's why I said Promise.map should exist
[16:55:02] <stenno> yes, iterator-helpers
[16:56:20] <qswz> in the future yes
[16:57:03] <dan01> hey guys
[16:57:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:57:11] <dan01> is there a way in nodejs to have a timer?
[16:57:26] <qswz> n> timers
[16:57:27] <jellobot> (okay) { setTimeout: { [Function: setTimeout] [Symbol(nodejs.util.promisify.custom)]: [Getter] }, clearTimeout: [Function: clearTimeout], setImmediate: { [Function: setImmediate] [Symbol(nodejs.util.promisify.custom)]: [Getter] }, clearImmediate: [Function: clearImmediate], setInterval: [Function: setInterval], clearInterval: [Function: clearInterval], _unrefActive: [Function: deprecated], active: [Function: deprecated], unenroll: [F …
[16:57:29] <dan01> like const start = time.start .... do stuff const stop = time.stop?
[16:57:40] <qswz> console.time
[16:57:55] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:57:56] <qswz> and console.timeEnd()
[16:57:57] <dan01> yeah, but I want to get that time, not just print it?
[16:58:08] <dan01> Console time only prints, right?
[16:58:24] <qswz> n> perf_hooks
[16:58:24] <jellobot> (okay) { PerformanceEntry: [class PerformanceEntry], PerformanceMark: [class PerformanceMark extends InternalPerformanceEntry], PerformanceMeasure: [class PerformanceMeasure extends InternalPerformanceEntry], PerformanceObserver: [class PerformanceObserver], PerformanceObserverEntryList: [class PerformanceObserverEntryList], monitorEventLoopDelay: [Function: monitorEventLoopDelay], createHistogram: [Function: createHistogram], perfor …
[16:58:33] *** zauberfisch_ is now known as zauberfisch
[16:58:42] <qswz> or just Date.now()
[16:59:21] <dan01> Ah ok
[16:59:22] <dan01> performance.now();
[16:59:25] <dan01> sounds good
[17:01:47] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:01:52] *** Joins: Arash_ (~Arash@104.245.146.61)
[17:02:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[17:05:35] <qswz> I'll for of
[17:06:17] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-140.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[17:06:18] *** Joins: thiras (~thiras@user/thiras)
[17:07:37] *** Quits: Arash_ (~Arash@104.245.146.61) (Read error: Connection reset by peer)
[17:08:17] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:09:04] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:12:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:12:43] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[17:17:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[17:21:08] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:21:31] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:24:49] *** Joins: heatwave (~heatwave@43.247.41.109)
[17:29:57] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[17:30:13] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:34:04] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[17:37:04] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[17:37:39] *** Joins: ferdna (~ferdna@user/ferdna)
[17:38:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[17:39:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:40:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:42:17] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f) (Ping timeout: 240 seconds)
[17:42:42] *** Quits: heatwave (~heatwave@43.247.41.109) (Quit: WeeChat 3.4)
[17:43:00] *** Joins: heatwave (~heatwave@43.247.41.109)
[17:44:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:45:00] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:45:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[17:45:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:46:02] *** Joins: pingpongball (~pingpongb@43.228.192.105)
[17:50:57] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[17:51:16] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:52:12] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[17:53:38] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[17:55:46] *** Joins: revolve (~u0_a227@82-132-239-184.dab.02.net)
[17:56:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7)
[17:58:29] <boris[m]> Hello! can someone please explain why this: https://github.com/tastejs/todomvc/blob/master/examples/vanillajs/js/store.js#L135, is needed?
[17:58:51] <boris[m]> couldn't you just `window.app.Store = Store;` ?
[17:59:37] <silly> localStorage data survives page reloads
[18:00:06] <silly> oh, the export you mean
[18:00:36] <silly> n> globalThis.something.somethingElse = "something"
[18:00:37] <jellobot> (fail) TypeError: Cannot set properties of undefined (setting 'somethingElse')
[18:02:10] <silly> there's a matrix bridge for #javascript?
[18:02:18] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:02:27] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:04:15] <qswz> I've just ate 20 avocados today
[18:04:17] <boris[m]> hmm, can you explain in more detail please?
[18:04:38] <silly> boris[m], "Cannot set properties of undefined"
[18:04:38] <boris[m]> (there is a matrix bridge for libera.chat silly)
[18:04:44] <silly> oic
[18:05:12] <silly> if window.app is not defined, then it must be undefined
[18:05:27] <silly> and apparently you "Cannot set properties of undefined"
[18:05:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:05:32] <boris[m]> but why is `window` undefined in this scope. Doesn't come into the function as argument?
[18:05:43] <silly> it's not window that is undefined
[18:05:52] <silly> but window.app
[18:06:27] <boris[m]> so its app, however we set it to `window.app = window.app`
[18:06:47] <silly> yes, there's the || or operator
[18:07:17] <boris[m]> so from where do you get the window.app on the right side?
[18:07:26] <silly> if window.app is truthy, i.e. true, a number other than 0, a string or []/{} then it's set to window.app
[18:07:53] <boris[m]> I see now !
[18:08:00] <silly> otherwise an empty object is assigned
[18:08:01] <boris[m]> thank you very much !
[18:08:34] <boris[m]> so it's something like a validation check
[18:08:50] <silly> so to speak, yes
[18:09:05] <boris[m]> can you please explain the reference window reload you mentioned ?
[18:09:23] <boris[m]> s/reference//
[18:09:24] <silly> i meant page refresh
[18:09:40] <silly> pressing F5 will destroy `window`
[18:09:56] <boris[m]> ok so ... ?
[18:10:15] <silly> everything that was assigned to `window` is permanently lost
[18:10:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:10:32] <silly> this is why they use localStorage, which is persistent
[18:10:57] <qswz> sessionStorage too
[18:11:05] <boris[m]> but localStorage has nothing to do with this assignment they are doing there, correct?
[18:11:11] <silly> and indexedDB
[18:11:17] <boris[m]> i.e. window.app = window.app
[18:11:19] <silly> boris[m], yes
[18:11:47] <boris[m]> ok I think I got you ! thank you very much
[18:12:00] <boris[m]> join matrix :D
[18:12:06] <silly> it's just that they use it in their script and i didn't focus on the highlighted line
[18:12:22] <boris[m]> sure no problem <#
[18:12:28] <boris[m]>  * sure no problem <3
[18:12:55] <silly> i have revolt in the next window and i don't like it
[18:13:10] <silly> it's wasting so much space
[18:13:34] <boris[m]> try element
[18:13:42] <boris[m]> but then there are so many clients to sue
[18:14:03] <boris[m]> https://matrix.org/clients/
[18:14:17] <silly> hah, not in the debian repository
[18:14:43] <boris[m]> but I think Element is, no ?
[18:15:54] <boris[m]> at least there is a flatpack
[18:15:57] <silly> doesn't seem so
[18:16:26] <boris[m]> web then ?
[18:17:23] <boris[m]> https://element.io/get-started#linux
[18:17:45] <silly> add another repo
[18:17:51] <boris[m]> yes you need to add it into sources.list
[18:18:23] <boris[m]> but like I said you can try https://app.element.io/?pk_vid=d4b162e0e6c511851631808451ab93fb
[18:18:41] <boris[m]> I mean https://app.element.io/#/welcome
[18:18:47] <silly> looks like electron to me
[18:18:53] <silly> https://packages.element.io/debian/pool/main/e/element-desktop/
[18:19:18] <boris[m]> it is electron, yes
[18:19:32] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f)
[18:19:40] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:48e1:be0c:b23c:dea9)
[18:19:42] <silly> luckily i have 32gb ram now
[18:19:50] <boris[m]> :D
[18:19:58] <boris[m]> its pretty low on resources
[18:20:20] <ph88> i have two html files that are formatted differently .. Does someone know a tool that can tell me the diff on a (semantic) tag level ?
[18:20:42] <silly> that's good, other than ram, i'm pretty on the low end of hardware
[18:21:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:21:03] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[18:21:18] <boris[m]> I am running it on a dual core
[18:21:41] <qswz> ph88: why not formatting them first
[18:22:11] *** Quits: pingpongball (~pingpongb@43.228.192.105) (Quit: pingpongball)
[18:22:21] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f) (Read error: Connection reset by peer)
[18:22:29] <silly> qswz, that won't help if elements are just in a different order
[18:22:36] <silly> ph88, search google
[18:23:17] <silly> there seem to be many options and none here ever diffs their html
[18:23:37] <silly> !npm html-differ
[18:23:39] <jellobot> silly, npm.im/html-differ 1.4.0|2019-01-31|Compares two HTML
[18:23:48] <silly> but who knows...
[18:26:59] <ph88> silly, yes that package looks good .. just that it crashes on node v17.3.0
[18:27:19] *** Joins: voltage_ (voltage@user/voltage)
[18:27:22] <silly> use nvm to quickly switch to v16
[18:28:04] <ph88> good idea
[18:29:08] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:30:35] <qswz> Promise.map = async function (arr, cb) { const r=arr.map(()=>null); for (let i=0;i<arr.length;i++){r[i] = await cb(arr[i]);} return r; }
[18:33:04] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:33:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[18:33:39] <stenno> qswz: yep, for example
[18:33:48] <stenno> qswz: also consider web streams
[18:33:53] <qswz> Promise.moosh
[18:34:18] <stenno> lul
[18:34:22] <stenno> n> ReadableStream
[18:34:23] <jellobot> (fail) ReferenceError: ReadableStream is not defined
[18:34:53] <qswz> n> stream.ReadableStream
[18:34:53] <jellobot> (okay) undefined
[18:34:58] <stenno> n> const { ReadableStream } = require('node:stream/web'); ReadableStream
[18:34:59] <jellobot> (okay) [class ReadableStream]
[18:35:20] <qswz> non
[18:35:24] <qswz> wow*
[18:35:25] <stenno> oui
[18:35:27] *** Joins: src (~src@user/src)
[18:35:34] <stenno> https://nodejs.org/api/webstreams.html
[18:35:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:35:38] <qswz> prend ma bière
[18:36:06] <stenno> vite vite a la garde
[18:36:20] <stenno> gare
[18:36:31] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[18:37:15] <qswz> you're safe, trais always late in France
[18:37:19] <qswz> trains*
[18:37:24] *** Quits: D3mned (~D1mned@212.101.253.58) (Quit: Leaving)
[18:37:25] <stenno> same in germany
[18:37:40] <DPA> Promise.map = async(arr,cb)=>Promise.all(arr.map(cb))
[18:38:00] <qswz> DPA: nah, I want sequential processing
[18:38:01] <stenno> promise.all doesn't regard order though
[18:38:03] <stenno> yep
[18:38:03] <qswz> intentioanlly
[18:38:42] <DPA> Ok, I see.
[18:39:03] <stenno> and it gets worse if you have to handle the result of the previous promise
[18:39:07] <ph88> silly, i tried node 16 down to 12 unfortunately same error on every version :(
[18:39:15] <silly> je ne sais pas, et puis c'amette egale
[18:39:27] <qswz> ça m'est égal
[18:39:33] <qswz> es igual
[18:39:37] <silly> ph88, did you check their github for issues?
[18:39:46] *** Joins: pulse (~pulse@user/pulse)
[18:39:57] <stenno> j'ai un grande queue de boeuf
[18:40:10] <silly> mi francaise est u boeuf
[18:40:21] <qswz> sounds like a porno transcript there
[18:40:45] <silly> une i meant to say une
[18:41:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:41:24] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[18:41:26] <qswz> Shia la boeouf
[18:42:32] <stenno> Ils viennent jusque dans vos bras
[18:42:33] <stenno> Égorger vos fils, vos compagnes!
[18:42:50] <qswz> hah, our anthem is savage
[18:42:51] <stenno> your national anthem is just a bit insane
[18:42:54] <stenno> yeah
[18:43:05] <relipse> I have drag and drop images onto canvas, but how do i select an image thatis already on the canvas and drag it around? https://cworklog.com/eingame2/level_editor.php
[18:44:08] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94) (Quit: Leaving)
[18:44:24] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 250 seconds)
[18:44:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:45:28] <qswz> carefully
[18:46:04] <qswz> either the image is drawn in canvas, so you need hit detection to know yu clicked it
[18:46:17] <qswz> either overlay image above canvas
[18:47:36] <qswz> https://stackoverflow.com/questions/13916966/adding-collision-detection-to-images-drawn-on-canvas
[18:48:31] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:297f:fa61:535f:aa91)
[18:50:44] <qswz> if my API list function supports an `ids` param, to pass a list of ids
[18:51:24] <qswz> if one of id is not found, should I just return list without it, or should it 404?
[18:51:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:51:52] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9e6c:25c0:d8a4:b335)
[18:52:10] <qswz> bah nvm, we go with #1, no big deal
[18:54:19] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9e6c:25c0:d8a4:b335) (Client Quit)
[18:55:59] <boris[m]> Just read about greenjello. Such a shame. Rest in peace ❤
[18:56:37] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:57:26] <qswz> when a jsx line ends with })}))}
[18:57:29] <qswz> :/
[18:58:14] <silly> or random array mapping function with })))))
[18:58:22] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[18:58:40] <hassoon_> qswz: meh beautify the code
[18:59:10] *** Joins: Syana (~Syana@88.121.162.133)
[19:00:36] *** Parts: Syana (~Syana@88.121.162.133) ()
[19:03:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:07:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[19:11:13] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:13:29] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61)
[19:14:45] *** Quits: revolve (~u0_a227@82-132-239-184.dab.02.net) (Read error: Connection reset by peer)
[19:17:17] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[19:20:03] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:20:56] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:21:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61) (Read error: Connection reset by peer)
[19:21:56] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61)
[19:23:40] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:27:43] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[19:27:53] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Client Quit)
[19:29:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[19:32:25] *** Joins: voltage (voltage@user/voltage)
[19:32:54] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[19:32:58] *** voltage is now known as voltage_
[19:36:21] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[19:41:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:41:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:42:17] *** Quits: Aljone (~Aljone1@77.125.178.214) (Ping timeout: 240 seconds)
[19:42:43] *** Joins: Aljone (~Aljone1@87.71.55.225)
[19:45:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:45:55] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[19:46:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:49:23] *** Joins: fef (~thedawn@user/thedawn)
[19:51:02] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[19:51:08] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36)
[19:51:39] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[19:52:13] *** Joins: carro7 (~cucumber@82.76.150.118)
[19:52:13] *** Quits: salad1 (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[19:53:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:ec86:7a91:dddd:e8c7) (Ping timeout: 250 seconds)
[19:55:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[19:55:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:55:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:55:55] *** Joins: wroathe (~wroathe@user/wroathe)
[19:58:22] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[19:59:05] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[20:00:40] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:01:42] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:03:33] <sgen> So I havent touched front end dev in a while. I used to use gulp for my build pipeline but Im having some issues getting my old gulpfiles to run atm. How poplar is webpack by comparison now? Has everyone just stopped using gulp / grunt and switched to webpack?
[20:03:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:05:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[20:05:59] *** Joins: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net)
[20:05:59] *** Quits: z1haze (~z1haze@ip24-251-237-210.ph.ph.cox.net) (Changing host)
[20:05:59] *** Joins: z1haze (~z1haze@user/z1haze)
[20:06:11] <z1haze> what are you guys using for basic date formatting stuff?
[20:06:54] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[20:07:35] <z1haze> has i found this https://www.npmjs.com/package/date-format-lite, its very light and does the trick, but im wondering if modern js has come along enough to not really need a lib to do it anymore
[20:08:30] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[20:10:22] *** Joins: onosendi (~onosendi@user/onosendi)
[20:10:36] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:12:16] *** Joins: han-solo (~han-solo@103.104.47.42)
[20:12:16] *** Quits: han-solo (~han-solo@103.104.47.42) (Changing host)
[20:12:16] *** Joins: han-solo (~han-solo@user/han-solo)
[20:12:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:13:12] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[20:13:25] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:15:15] *** Joins: xse (~xse@user/xse)
[20:16:57] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:19:03] *** Joins: fef (~thedawn@user/thedawn)
[20:23:54] <FlorianBad> To use the mouse position in a mousedown event we typically grab the position from a mousemove event. But if the user never moved the mouse in the page these are then undefined... Is there a way around this?
[20:26:07] <Decker> down has the same position
[20:26:23] <FlorianBad> hmm really?
[20:27:00] <Decker> ya, because I mouse-lock for dragging dialog frame on down... and then just update onmove
[20:27:03] <FlorianBad> event.offsetX and .offsetY? is it reliable?
[20:27:21] <qswz> sgen: check react-scripts
[20:27:22] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[20:27:40] <qswz> simplified scripts
[20:27:53] <FlorianBad> ok I didn't realize that, that's great
[20:28:11] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[20:28:24] <Decker> I use clientx/clientY
[20:29:33] <FlorianBad> in fact it seems all of them have that, wheel, mouseup/down, etc.
[20:30:35] *** Joins: crashrep (~crashrep@user/crashrep)
[20:33:33] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:34:09] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:38:04] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:39:58] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:41:07] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[20:42:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:43:51] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:59b3:de52:25e7:b808)
[20:44:56] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:45:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:45:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:49:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[20:53:33] *** Quits: heatwave (~heatwave@43.247.41.109) (Quit: WeeChat 3.4)
[20:56:07] *** Joins: heatwave (~heatwave@43.247.41.109)
[21:11:15] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[21:12:09] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[21:12:44] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:f8f2:a6ee:f8f:27a0)
[21:15:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:15:45] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[21:16:02] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[21:16:58] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:319a:8ff4:9a9c:6a36) (Ping timeout: 260 seconds)
[21:21:39] <BSaboia> How to convert a date to yyyy-MM-dd in JavaScript? (I am using App Scripts from Google, so I am inside a Google Sheet)
[21:22:28] <ljharb> BSaboia: a Date object?
[21:22:35] <Decker> BSaboia the toString method on dates takes a format string
[21:23:23] <Decker> nevermind I'm wrong - ave to assemble it with a template string and expressions
[21:24:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:24:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:24:07] *** Joins: wroathe (~wroathe@user/wroathe)
[21:25:36] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (Ping timeout: 250 seconds)
[21:26:26] *** Joins: Rockwood (~Rocky@user/rocky)
[21:28:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[21:29:25] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:30:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:30:56] <Rockwood> o/
[21:32:14] <BSaboia> Decker, yes, it seems that there is no .toString overload that takes a format string
[21:32:28] <Decker> `${date.getFullYear()} ${date.getMonth()+1} ${date.getDate()}`  or something :)
[21:33:26] <Rockwood> Decker, Jquery i loves years back :S
[21:35:28] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:35:49] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[21:36:56] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:39:00] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:59b3:de52:25e7:b808) (Quit: Leaving)
[21:42:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:44:53] *** Joins: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[21:45:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:46:08] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[21:46:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:47:20] *** Quits: sfields (~sfields@2605:a601:adea:7a00:c4ee:5808:64b3:bc82) (Quit: Leaving)
[21:49:55] *** Joins: taupiqueur (~taupiqueu@140.147.204.77.rev.sfr.net)
[21:51:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[21:55:20] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:56:09] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[21:58:19] <austincheney_> n> var d = new Date();`${d.getFullYear()}-${d.getMonth() + 1}-${d.getDay()}`;
[21:58:20] <jellobot> (okay) '2022-1-6'
[21:58:28] <austincheney_> BSaboia, ^
[21:58:34] *** austincheney_ is now known as austincheney
[21:58:49] <austincheney> that is unpadded
[22:00:59] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[22:01:07] <Decker> n> const date=new Date("2022-1-6"); `${date.getFullYear()} ${(date.getMonth()+1).padStart(2,"0")} ${date.getDate()}`  or something :)
[22:01:08] <jellobot> (fail) SyntaxError: Unexpected identifier
[22:01:20] <Decker> n> const date=new Date("2022-1-6"); `${date.getFullYear()} ${(date.getMonth()+1).padStart(2,"0")} ${date.getDate()}`
[22:01:20] <jellobot> (fail) TypeError: (date.getMonth(...) + 1).padStart is not a function
[22:01:47] <Decker> n> const date=new Date("2022-1-6"); `${date.getFullYear()} ${(''+(date.getMonth()+1)).padStart(2,"0")} ${(''+date.getDate()).padStart(2,"0")}`
[22:01:47] <jellobot> (okay) '2022 01 06'
[22:01:54] <austincheney> n> var d = new Date();`${d.getFullYear()}-${(d.getMonth() + 1) < 10 ? `0${(d.getMonth() + 1)}` : (d.getMonth() + 1)}-${(d.getDay() < 10) ? `0${d.getDay()}` : d.getDay()}`;
[22:01:55] <jellobot> (okay) '2022-01-06'
[22:03:14] <BSaboia> austincheney, that's what I need, thanks
[22:03:32] <BSaboia> But I actually did something more standard (I guess)
[22:05:16] <BSaboia>     parsedDate = new Date(dateString).toISOString().split('T')[0];
[22:05:16] <BSaboia>     parsedDate = new Date(dateString).toISOString().split('T')[0];
[22:05:16] <BSaboia> n> const d = new Date(); `${d.toISOString().split('T')[0]}`;
[22:05:17] <jellobot> (okay) '2022-01-29'
[22:05:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:05:44] <BSaboia> (sorry for the copy-paste multi lone)
[22:07:09] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[22:18:03] <qswz> or .toJSON().slice(0, 10)
[22:18:07] <qswz> more or less same
[22:18:53] <qswz> that works for the next 7978 years
[22:18:54] <silly> toISOJSON()
[22:20:59] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[22:22:46] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[22:22:58] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[22:23:48] <systemfault> Date handling is cancer.
[22:24:18] <silly> yea, cancer too
[22:24:27] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[22:24:50] <systemfault> Probably worse than cancer... science is getting better and better at curing cancer... but date handling is just as bad now that it ever was.
[22:25:48] <silly> temporal supposedly makes it all better
[22:26:24] <onosendi> What's the status on temporal?
[22:26:40] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[22:27:06] <qswz> b> Temporal
[22:27:07] <jellobot> (fail) ReferenceError: Temporal is not defined
[22:28:48] <silly> it's still not back from the future
[22:28:50] *** Quits: taupiqueur (~taupiqueu@140.147.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[22:37:26] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:41:15] *** Joins: jake_ (~jake@2600:6c44:257f:e1f7::1a29)
[22:42:14] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[22:42:18] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[22:42:38] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[22:42:51] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[22:43:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:43:25] *** Quits: jake_ (~jake@2600:6c44:257f:e1f7::1a29) (Client Quit)
[22:43:44] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[22:44:49] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[22:45:45] <stenno> b should have Temporal though
[22:46:08] <stenno> its stage-3
[22:47:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:48:01] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[22:48:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:50:55] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[22:53:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[22:53:19] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[22:53:58] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[22:55:03] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[22:57:50] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:57:51] <qswz> need to load the polyfill
[22:57:54] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[22:58:08] <qswz> small change
[22:58:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:58:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:58:25] *** Joins: wroathe (~wroathe@user/wroathe)
[22:59:14] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[22:59:47] *** Joins: nomic (~nomic@185.192.69.3)
[23:00:57] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[23:04:31] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[23:08:18] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[23:10:09] *** Joins: audiobirb (~audio@user/audio)
[23:10:33] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[23:11:39] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[23:12:16] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[23:13:48] <ljharb> stenno: it's not stable yet
[23:13:54] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[23:13:58] <ljharb> stenno: and thus, no production-ready polyfill exists
[23:14:04] <ljharb> qswz: so, there's nothing to load
[23:14:06] <stenno> pity, gotcha
[23:14:14] <ljharb> (really, it shouldn't be stage 3 yet)
[23:14:22] <stenno> oof
[23:16:45] <qswz> ljharb: about Promise.map?
[23:16:56] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:17:44] <qswz> I pinged you becauseyour version was giving the return value I needed
[23:18:09] <qswz> I made a less elegant Promise.map
[23:18:30] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[23:18:59] <qswz> http://vpaste.net/yP7t6
[23:19:04] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[23:20:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[23:20:07] <ljharb> qswz: no about temporal
[23:20:16] <ljharb> qswz: Promise.map doesn't make sense, because promises don't execute
[23:20:17] <qswz> ah ok
[23:20:41] <qswz> ok, so what naming?
[23:20:44] <ljharb> qswz: also yours isn't "map", it's serial
[23:20:45] <ljharb> map is concurrent
[23:20:46] <qswz> waterfall?
[23:21:22] <ljharb> what you actually want is literally just `Promise.all(arr.map(cb))`
[23:21:41] *** Joins: Betal (~Betal@user/betal)
[23:22:03] <qswz> no, like I said to omeone else saying the same, I want intentionallly it to be sequentional
[23:22:23] <qswz> so it's more gentle to our API
[23:23:33] <ljharb> qswz: ok, so then you want something a bit trickier
[23:23:55] <stagas> a for loop with await promise
[23:23:59] <ljharb> never a loop :-)
[23:25:21] <ljharb> qswz: `Promise.all(arr.reduce((acc, item, i) => i === 0 ? cb(item) : acc.slice(0, -1).concat(Promise.resolve(acc[acc.length - 1]).then(() => cb(item))), []))`
[23:25:33] <ljharb> qswz: there's not really a good name for that tho
[23:25:40] <ljharb> qswz: `mapSerial`, maybe
[23:26:25] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:29:03] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[23:29:26] <qswz> ok
[23:29:33] <stagas> why not a loop: for (const item of arr) await item
[23:29:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[23:30:22] <qswz> for loop is so much clearer
[23:30:29] <qswz> let's be honest
[23:30:36] <silly> lol
[23:30:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:31:15] <qswz> fun exercise to write it without loop, but practically, loop ftw
[23:31:28] <ljharb> than the impl details of the abstraction, sure
[23:31:32] <ljharb> but you wouldn't write that inline.
[23:31:41] <ljharb> and `mapSerial(arr, cb)` is much clearer than the loop
[23:31:53] <qswz> sure I made a helper
[23:32:40] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[23:33:40] <buu> qswz: You know what's horrifying?
[23:33:46] <buu> qswz: maps inside jsx
[23:33:51] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[23:33:52] <buu> jsx in general really
[23:34:10] <qswz> https://github.com/js-temporal/temporal-polyfill is reliable?
[23:34:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[23:34:22] <qswz> might be good in the bot
[23:34:38] <qswz> buu: noway
[23:34:40] <heatwave> buu: not when its formatted correctly
[23:34:56] <qswz> other templating system have stupid {{#for...
[23:34:58] <ljharb> maps inside jsx are fine
[23:35:02] <ljharb> as is jsx in general
[23:35:03] <gebbione> anyone knows how to list of the versions of yarn installed? I need to switch to a different versions. I can see the yarn set version command but not sure which one is installed
[23:35:05] <qswz> jsx is pure JS inside {}
[23:35:11] <ljharb> qswz: it's not backwards compatible enough, no
[23:35:16] <ljharb> qswz: it's fine for a playground tho
[23:35:23] <ljharb> gebbione: what do you mean versions
[23:35:27] <ljharb> gebbione: also why are you using yarn
[23:35:28] <qswz> like a bot?
[23:35:57] <heatwave> gebbione: yarn --version..?
[23:36:13] <gebbione> heatwave,  that shows the version used in a specific project
[23:36:21] <ljharb> qswz: lol yeah, but since the proposal's still in flux it's better to have nothing than the wrong thing
[23:36:26] <ljharb> gebbione: yarn only has one version
[23:36:28] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[23:36:39] <ljharb> gebbione: you can `npm show yarn versions` if you want to list all the published ones, i guess
[23:36:45] <gebbione> in one folder i get 3... in another 1
[23:36:51] <buu> qswz: There's nothing wrong with being explicit in your templates
[23:36:57] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[23:37:11] <buu> {{if this}} <br> {{else}} <dd> {{end}}
[23:37:21] <buu> Better than nested ?:
[23:37:28] <qswz> {users.map(user => (
[23:37:32] <buu> noty
[23:37:36] <qswz>   <li> ...
[23:37:47] <qswz> ))}
[23:37:50] <silly> buu, uh this works?
[23:37:54] <qswz> simply
[23:38:04] <silly> nvm...
[23:38:07] <gebbione> ljharb, about your question - gebbione: also why are you using yarn - i am using a framework that uses node based frontend packages so i need yarn or npm
[23:38:08] <ljharb> buu: templates? lol that's gross and archaic
[23:38:14] <ljharb> gebbione: right. npm is the standard
[23:38:27] <ljharb> gebbione: and yarn 1 and 2 are EOL, and yarn pnp breaks things, and yarn's got no features npm doesn't have
[23:38:28] *** Joins: matsaman (~matsaman@user/matsaman)
[23:38:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:38:37] <ljharb> including workspaces and overrides
[23:38:38] <buu> ljharb: yeah especially templates that can only loop with maps
[23:38:55] <ljharb> buu: templates in general are the technique from the 200s
[23:38:56] <ljharb> *2000s
[23:39:06] <buu> ljharb: So why is react vue and angular still using them
[23:39:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:39:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:39:16] *** Joins: wroathe (~wroathe@user/wroathe)
[23:39:19] *** Joins: mohab (~mohab@156.223.20.133)
[23:39:26] <qswz> it's funny because yarn users actually also have npm installed
[23:39:27] <ljharb> buu: react's not? jsx isn't templates.
[23:39:30] <buu> Uh
[23:39:34] <buu> I beg to differ
[23:39:35] <ljharb> buu: and angular is garbage, and vue i don't use
[23:39:44] <ljharb> buu: it's not ¯\_(ツ)_/¯ jsx is syntax to make objects.
[23:39:50] <ljharb> buu: templates are static files that are interpolated with values.
[23:40:11] <buu> Oh yes because that's in a dictionary
[23:40:19] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:f0fd:3e07:f200:ff88)
[23:40:30] <ljharb> buu: the ecosystem defined these things long ago
[23:40:38] <ljharb> buu: nobody's calling jsx "templates" but you :-)
[23:41:06] <qswz> ljharb: is jsx a template by that definition?
[23:41:07] <ljharb> you go ahead and call it whatever you like tho, doesn't change the direction the ecosystem has chosen
[23:41:09] <ljharb> qswz: no
[23:41:10] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[23:41:18] <qswz> hah, ok, interesting$
[23:41:20] <ljharb> qswz: because you don't ship `.jsx` files or use them as input for a function
[23:41:33] <gebbione> i am glad i sparked that conversation
[23:41:39] <buu> ljharb: It's literally a template by any definition
[23:41:44] <qswz> how do you call jsx then? just a language?
[23:41:51] <ljharb> buu: i've never seen a definition of it where jsx qualifies.
[23:41:54] <ljharb> qswz: yes, it's syntax
[23:41:57] <ljharb> qswz: and it's code.
[23:42:00] <qswz> ah right
[23:42:10] <ljharb> gebbione: so why yarn?
[23:42:21] <qswz> transforms to createElement(..
[23:42:25] <ljharb> yep
[23:42:32] <ljharb> it's just sugar for `React.createElement` calls.
[23:42:40] <ljharb> (something slightly different, with the new transform, but the same concept)
[23:42:43] <buu> Well, sugar implies its sweet
[23:42:54] <qswz> I'm on avocadodiet
[23:42:58] <qswz> no sugar
[23:43:08] <buu> But that's meaningless logic because literally every "template" has been transformed for the past 30 years
[23:43:12] <buu> Even php does it
[23:43:18] <qswz> still some kiwis, oranges, persimmnons tho
[23:43:21] <gebbione> ljharb, i dont focus on front end.. latest i used yarn vs npm the debate was that yarn was definitely faster and there was a trend to replace npm. So i tried yarn by first updating to its latest version that anyway is not working well
[23:43:37] <buu> Perl has been using compiled templates since, well, a very long time ago
[23:43:37] <ljharb> gebbione: yarn isn't meaningfully faster, and there has never been any such trend
[23:43:38] <gebbione> at least in symfony encore/webpack as install was not doing much
[23:43:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:43:52] <buu> gebbione: The trend, like many trends, died off
[23:43:54] <ljharb> gebbione: and the slight trendiness of yarn has reversed; the trend now is that companies are ditching yarn and moving back to npm, slowly
[23:43:57] <buu> :shrug:
[23:43:58] <gebbione> ljharb, this has been in companies i have been at
[23:44:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:44:04] <buu> I don't make the trends I just report on them
[23:44:13] <qswz> yarn is just hype
[23:44:21] <ljharb> gebbione: if the answer is "your company makes you" then that's fine, you're stuck with your employer's bad decisions
[23:44:27] <qswz> hype startups wouod use it
[23:44:57] <qswz> as well as kubernetes
[23:45:37] <ljharb> k8s is at least legit
[23:45:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:46:16] <samsch> I dunno, K8s and yarn seem similar in legitness to me. Both solve a problem you probably shouldn't have in the first place.
[23:46:22] <gebbione> ljharb, no. right now i run my own code
[23:46:34] <gebbione> but in the past i considered yarn or had to use it
[23:46:44] <gebbione> not working for a client now so i can use whatever i want
[23:46:49] <ljharb> gebbione: ok but now, when you have the freedom to use the better thing, why yarn
[23:47:17] <qswz> no longer better
[23:47:19] <qswz> used to be
[23:47:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:47:31] <gebbione> but basically for some reason yarn install was not working well (v3) and when running yarn encore dev i had dependencies errors
[23:47:33] <ljharb> qswz: npm is the better thing
[23:47:41] <ljharb> gebbione: ok so, try npm then
[23:47:46] <gebbione> i didnt think it was yarns' fault
[23:47:50] <gebbione> but npm just worked
[23:48:24] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[23:48:29] <qswz> yarn have extra features, like yarn workspaces
[23:48:41] <ljharb> qswz: npm has that.
[23:48:42] <qswz> but you don't need it
[23:48:45] <ljharb> qswz: npm also has overrides.
[23:48:47] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:48:48] <qswz> oh right
[23:48:56] <ljharb> npm has every feature yarn has now, afaik
[23:48:56] <qswz> and alias
[23:49:10] *** Quits: mohab (~mohab@156.223.20.133) (Quit: WeeChat 3.4)
[23:49:21] *** Joins: N4buc0- (~N4buc0@191.250.117.129)
[23:49:23] <qswz> npm / yarn islike vanilla/ jquery
[23:49:27] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:f0fd:3e07:f200:ff88) (Remote host closed the connection)
[23:49:28] <qswz> same story
[23:51:08] <ljharb> no it's not
[23:51:12] <ljharb> jquery was good and useful
[23:51:18] <ljharb> and still is, it's just not the best way to solve problems anymore
[23:51:32] <ljharb> also, vanilla didn't exist in terms of jquery's features
[23:52:09] <samsch> ljharb, of the top of your head, is tape's .deepEqual() equivalent to Jest's .toEqual()?
[23:53:15] <ljharb> samsch: i believe so; jest/jasmine has toBe for "equal" and toEqual for "deep equal"
[23:53:15] <qswz> just use assert
[23:53:16] <samsch> jquery is still useful, but no longer good.
[23:53:31] <ljharb> jquery's still good. it's just that there's better choices.
[23:53:49] <systemfault> Is there a better choice in its category?
[23:54:00] <qswz> const {deepStrictEqual: same}=require('assert')
[23:54:11] <samsch> systemfault, Individual libraries for the various features that you actually need
[23:54:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:54:33] <samsch> And at least some of those exist (Axios, and I think there's a similar selector engine)
[23:54:37] <ljharb> qswz: assert throws; it's awkward.
[23:54:38] <systemfault> samsch: And discarding the huge ecosystem of jQuery plugins?
[23:54:47] <ljharb> qswz: it's better to use an assertion framework that doesn't terminate the test when there's a failure.
[23:54:53] <stenno> most jquery plugins were terrible UI shit
[23:54:58] <samsch> I kinda always avoided jquery plugins, so eh
[23:55:02] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[23:55:28] <systemfault> stenno: Most packages on NPM are shit as far as I'm concerned.... but some of them are gems
[23:55:32] <ljharb> jquery *plugins* were always bad
[23:55:42] <stenno> systemfault: is that a ruby reference
[23:55:48] <systemfault> ljharb: Yeah, the model has always been awful
[23:55:56] <systemfault> stenno: I don't know anything about Ruby :/
[23:55:58] <stenno> (ruby calls their packages 'gems')
[23:56:03] <systemfault> Ah
[23:56:11] <samsch> The jquery plugin system itself is bad, imo
[23:56:21] <stenno> i used 'parse-csv' npm package recently and it was great
[23:56:23] <systemfault> samsch: It's basically, "extend the prototype"
[23:56:29] <samsch> Yeah, eww
[23:56:37] <systemfault> IIRC jQuery.fn is jQuery.prototype or something like that
[23:57:04] *** Joins: medium_cool (~medium_co@136.36.128.48)
[23:57:14] <stenno> and you are supposed to IIFE it to avoid collisions or so
