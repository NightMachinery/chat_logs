[00:15:15] *** Joins: vicfred (~vicfred@user/vicfred)
[00:50:58] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:51:00] <FromDiscord> <SirOlaf> Are there Nim bindings for https://github.com/ocornut/imgui_club/blob/master/imgui_memory_editor/imgui_memory_editor.h and if not, how would I go about creating them?
[01:10:56] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[01:13:30] *** Joins: vicfred_ (~vicfred@fixed-187-190-192-58.totalplay.net)
[01:15:56] *** Joins: vicfred__ (~vicfred@94.198.42.69)
[01:16:46] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 272 seconds)
[01:18:27] *** Quits: vicfred_ (~vicfred@fixed-187-190-192-58.totalplay.net) (Ping timeout: 245 seconds)
[01:22:02] *** Quits: vicfred__ (~vicfred@94.198.42.69) (Quit: Leaving)
[01:22:12] *** Joins: vicfred (~vicfred@user/vicfred)
[01:39:59] <FromDiscord> <lamersc.com 🐧> In reply to @SirOlaf "Are there Nim bindings": Seems pretty niche of a usage, so I don’t think there’d be binding yet
[01:42:34] <FromDiscord> <SirOlaf> Damn. Any good way of binding it or something?
[03:28:29] *** Joins: vicfred_ (~vicfred@fixed-187-190-192-58.totalplay.net)
[03:31:14] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 252 seconds)
[03:46:56] <FromDiscord> <demotomohiro> nimgl contains imgui binding
[03:46:57] <FromDiscord> <demotomohiro> https://github.com/nimgl/nimgl
[03:46:58] <fn> <12R2D299> 4GitHub: 7"NimGL is a Nim library that offers bindings for popular libraries used in computer graphics"
[03:47:11] <FromDiscord> <@bracketmaster-5a708063d73408ce4> any idiomatic and elegant ways to remove a certain character from a string?
[03:48:53] <FromDiscord> <exelotl> you mean remove all occurrences, or remove a certain index?
[03:49:05] <FromDiscord> <@bracketmaster-5a708063d73408ce4> all occurences
[03:52:48] <FromDiscord> <exelotl> good question lol
[03:53:21] <FromDiscord> <exelotl> I'd have thought `filterIt` would have worked but I think I'm doing something wrong
[03:59:04] <FromDiscord> <exelotl> I guess `s = s.replace("x", "")` is the easiest way, but if you're intending to modify `s` like that it's gonna be a pretty slow / wasteful solution
[04:01:16] <FromDiscord> <carmysilna> `s.keepItIf(it != 'x')`
[04:02:54] *** Quits: vicfred_ (~vicfred@fixed-187-190-192-58.totalplay.net) (Ping timeout: 265 seconds)
[04:04:25] <FromDiscord> <exelotl> jank https://play.nim-lang.org/#ix=3u5i
[04:04:40] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[04:06:03] <FromDiscord> <exelotl> oh it's just cause `s` isn't a seq
[04:07:42] <FromDiscord> <exelotl> `filterIt` failed for the same reason, well it would work but return a `seq[char]` rather than a `string`
[04:08:52] <FromDiscord> <exelotl> if you change the signature of `keepItIf` to accept `seq|string` it works fine
[04:11:22] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3u5j
[04:11:28] <FromDiscord> <Elegantbeef> Probably the simplest solution
[04:12:01] <FromDiscord> <carmysilna> sent a code paste, see https://play.nim-lang.org/#ix=3u5k
[04:12:34] <FromDiscord> <Elegantbeef> well forgot the characters to remove in the parameter list and `s: var string` 😛
[04:13:56] <FromDiscord> <Elegantbeef> Also why are you using inject in a procedure?
[05:30:58] *** Quits: TakinOver (~quassel@47.150.206.35) (Ping timeout: 240 seconds)
[05:40:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @elegantbeef\:matrix.org  - your link from earlier is empty?
[05:41:11] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Also - is it guaranteed that integer arrays in nim are always initialized to zero?
[05:41:31] <FromDiscord> <Elegantbeef> Nim 0 inits all memory unless overridden
[05:41:38] <FromDiscord> <Elegantbeef> http://ix.io/3u5j here is what i suggested
[05:42:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I see it now. That's rather elegant.
[05:43:16] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Also - is there a place in the manual where nim's init behaviors are explicitly mentioned?
[05:44:37] <FromDiscord> <Elegantbeef> Well without `{.noInit.}` or `{.requiresInit.}` in the type the memory is 0'd
[05:45:30] <FromDiscord> <Elegantbeef> so references/pointers are nil, value types are full of 0's which can be wrong for the data type IE `var a: range[1..2]; echo a`
[05:51:16] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ok - I'll take your word for it
[05:58:12] <FromDiscord> <Elegantbeef> Well it is explained in more detail https://nim-lang.org/docs/manual.html#statements-and-expressions-var-statement
[06:17:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thx!
[06:30:42] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:19:49] <fn> <11ForumUpdaterBot99> New thread by AIR: Mac GUI, see https://forum.nim-lang.org/t/8268
[07:29:55] *** Joins: rockcavera (~rc@192.12.112.215)
[07:29:55] *** Quits: rockcavera (~rc@192.12.112.215) (Changing host)
[07:29:55] *** Joins: rockcavera (~rc@user/rockcavera)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:40:25] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:40:25] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:40:25] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[09:40:25] *** Quits: koltrast (55df89c8@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[09:40:25] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:40:25] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:40:26] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[09:40:32] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[09:40:33] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:41:05] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:41:26] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[09:41:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:43:11] *** Joins: koltrast (efd259d6@h77-53-57-114.cust.a3fiber.se)
[09:43:36] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[09:43:37] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297::) (*.net *.split)
[09:43:47] *** Joins: blackbeard420 (~blackbear@2600:3c03:e000:297::)
[09:45:57] *** Joins: sagax (~sagax@213.138.71.146)
[09:52:17] *** Joins: Ekho (~Ekho@user/ekho)
[11:33:45] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[11:45:06] *** Joins: max22- (~maxime@2a01cb0883359800249283adc5fba247.ipv6.abo.wanadoo.fr)
[11:53:27] *** Joins: Schnouki (~schnouki@user/schnouki)
[13:18:15] *** Quits: max22- (~maxime@2a01cb0883359800249283adc5fba247.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:25:10] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:27:19] *** Joins: pro (~pro@user/pro)
[13:30:19] <FromDiscord> <Clonkk> Was "examples" removed from category in testament ?
[13:30:44] <FromDiscord> <Clonkk> WHen I use devel I can't do `testament c examples`
[13:32:33] <fn> <11ForumUpdaterBot99> New thread by Wag: How I can help fix cross compilation?, see https://forum.nim-lang.org/t/8269
[13:36:19] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[13:50:34] *** Quits: aeverr (~deodex@ai126197048203.18.access-internet.ne.jp) (Ping timeout: 258 seconds)
[14:21:37] *** Joins: max22- (~maxime@2a01cb08833598001909bbd67c1c5131.ipv6.abo.wanadoo.fr)
[14:38:48] <FromDiscord> <planetis> if my nim module is a port of another project in say cpp should my license header include the original author?
[14:44:12] <FromDiscord> <haxscramper> that depends on the license
[14:44:37] <FromDiscord> <sealmove> looool Scala 3 changes the syntax to indentation based xD wtf
[14:44:41] <FromDiscord> <haxscramper> See if wrapper qualifies as "derivative work" or something like that
[14:46:08] <FromDiscord> <haxscramper> or port
[14:46:27] <FromDiscord> <haxscramper> But it would make sense to credit the original author
[14:46:31] <FromDiscord> <sealmove> upper code: Scala 2, lower code: Scala 3 https://media.discordapp.net/attachments/371759389889003532/869161250033106954/unknown.png
[14:47:50] <FromDiscord> <haxscramper> it feels like they took all syntaxes at once. I looked at the documentation and it such a mess
[14:48:14] <FromDiscord> <saem> I thought scala's expression based nature allowed it to omit braces in many occasions but that could be my memory playing tricks on me.
[14:48:38] <FromDiscord> <sealmove> it does, but they want to enforce coding style
[14:50:14] <FromDiscord> <sealmove> I didn't even know it was possible to have both indentation-based and non-indentation-based syntax at the same time :O haven't seen it in other language I think.
[14:53:30] <FromDiscord> <generic linux user> In reply to @haxscramper "that depends on the": on cc-3.0?
[14:57:08] <FromDiscord> <planetis> its mit licensed
[14:58:22] <FromDiscord> <planetis> i just dont know how to do it properly, if someone can make a suggestion its here https://github.com/nim-lang/threading/pull/8
[14:58:34] <FromDiscord> <no name fits> I always found the acronym for MIT a little funny, since it means "mine" in danish. Really accentuates the yoink
[15:24:22] <FromDiscord> <arnetheduck> btw @treeform, when `jsony` parses to JsonNode, does it use its own parser or that of JsonNode? also, did you consider any different representations of "dynamic" json? JsonNode doesn't implement the json spec, so it's a bit messy to use unfortunately https://github.com/treeform/jsony#full-support-for-json-in-json
[15:24:24] <fn> <12R2D299> 4GitHub: 7"A loose, direct to object json parser with hooks."
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:41:48] <FromDiscord> <Schelz> Hi, is there any way to get all the drivers (harddisk/ssd) installed on a computer ?
[16:42:13] <FromDiscord> <Schelz> (edit) "Hi, is there any way to get ... all" 03added "name of"
[16:45:01] <FromDiscord> <enthus1ast> @Schelz\: https://github.com/johnscillieri/psutil-nim/blob/e94c423b78a5fe1806643926a30a7e02d49124d3/src/psutil/psutil_windows.nim#L48
[16:46:44] <FromDiscord> <enthus1ast> Ah the Name... not the type
[16:48:09] <FromDiscord> <enthus1ast> https://stackoverflow.com/questions/46548099/how-to-get-drive-name-from-drive-letter
[16:49:19] <FromDiscord> <enthus1ast> Then iterate from a to z and call GetVolumeInformation
[17:05:54] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 265 seconds)
[17:09:15] <FromDiscord> <Schelz> got it sir it was very helpful
[17:09:24] *** Joins: arkurious (~arkurious@user/arkurious)
[17:13:12] *** Quits: max22- (~maxime@2a01cb08833598001909bbd67c1c5131.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[17:14:42] *** Joins: max22- (~maxime@2a01cb088335980049115fb62541246f.ipv6.abo.wanadoo.fr)
[17:17:47] <fn> <11ForumUpdaterBot99> New thread by Veksha: Parallel: invalid control flow for 'parallel', see https://forum.nim-lang.org/t/8270
[17:28:50] *** Joins: aeverr (~deodex@ai126197048203.18.access-internet.ne.jp)
[17:31:59] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Read error: Connection reset by peer)
[17:32:03] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[17:33:40] *** Joins: TechAspirer (~kayabaNer@user/kayabanerve)
[17:36:22] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 245 seconds)
[17:36:43] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[17:39:43] *** Quits: TechAspirer (~kayabaNer@user/kayabanerve) (Ping timeout: 268 seconds)
[17:39:43] *** Quits: max22- (~maxime@2a01cb088335980049115fb62541246f.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[17:45:58] *** Joins: rockcavera (~rc@192.12.112.212)
[17:45:58] *** Quits: rockcavera (~rc@192.12.112.212) (Changing host)
[17:45:58] *** Joins: rockcavera (~rc@user/rockcavera)
[18:09:19] *** Joins: Guest31 (~Guest31@213.194.184.110)
[18:18:34] *** Quits: Guest31 (~Guest31@213.194.184.110) (Ping timeout: 246 seconds)
[18:30:23] *** Joins: Vladar (~Vladar@46.162.2.53)
[18:31:34] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[18:32:50] *** Joins: rockcavera (~rc@192.12.112.212)
[18:32:50] *** Quits: rockcavera (~rc@192.12.112.212) (Changing host)
[18:32:50] *** Joins: rockcavera (~rc@user/rockcavera)
[18:49:11] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[19:27:31] *** Joins: Riceberry75 (~Riceberry@ppp-94-66-136-39.home.otenet.gr)
[19:27:52] *** Riceberry75 is now known as Riceberry
[19:41:22] *** Joins: max22- (~maxime@2a01cb08833598007c093942225e32b0.ipv6.abo.wanadoo.fr)
[19:41:35] <FromDiscord> <treeform> In reply to @arnetheduck "btw <@107140179025735680>, when `jsony`": It uses it's own parser. What don't you like about JsonNode?
[19:43:15] <FromDiscord> <enthus1ast> @treeform\: i'm trying out jsony json-in-json, but im getting the error "Error\: undeclared identifier\: 'JsonNode'"
[19:44:21] <FromDiscord> <enthus1ast> ah must import stdlibs json for this
[19:44:31] <FromDiscord> <enthus1ast> ic
[20:12:16] <FromDiscord> <treeform> I'll add that do the docs.
[20:13:16] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[20:17:18] <FromDiscord> <creonico> How can I trow and error and end my program when a condition is not met?
[20:17:23] <FromDiscord> <creonico> (edit) "trow" => "throw"
[20:18:02] <FromDiscord> <treeform> I usually use `assert`'s will not optimize out variant `doAssert`
[20:18:13] <FromDiscord> <treeform> (edit) "will not optimize out variant" => "will-not-optimize-out-variant"
[20:21:49] <FromDiscord> <Rika> personally i would only do that for sanity checks
[20:21:58] <FromDiscord> <Rika> or actually not even, just for debugging i feel
[20:33:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:39:37] *** Quits: Riceberry (~Riceberry@ppp-94-66-136-39.home.otenet.gr) (Ping timeout: 246 seconds)
[20:43:22] *** Joins: Riceberry (~Riceberry@ppp-94-66-136-39.home.otenet.gr)
[21:29:07] *** Quits: max22- (~maxime@2a01cb08833598007c093942225e32b0.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[21:57:21] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3u91
[22:03:43] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:03:45] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[22:07:44] <FromDiscord> <carmysilna> sent a code paste, see https://play.nim-lang.org/#ix=3u95
[22:18:16] <FromDiscord> <Rika> `ValueError` btw lol
[22:28:41] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3u9a
[22:29:03] <FromDiscord> <dankrad> Only valid values are `SomeStr1`, `SomeStr2`, `SomeStr3`
[22:31:13] <FromDiscord> <dankrad> The only current solution that came to my mind is to add a custom pragma to the enum, I can check against. But I don't want to do this if there's a way without custom pragmas.
[22:45:30] <FromDiscord> <haxscramper> You can validate input using `let intVal = parseInt(<user input>)` and `intVal in low(EnumInt) .. high(EnumInt)`
[22:45:50] <FromDiscord> <haxscramper> If you have holes in your enum then you can implement a macro that lists all possible integer values
[22:45:59] <FromDiscord> <haxscramper> Or there is an iterator that supports holes
[22:46:50] *** Joins: max22- (~maxime@2a01cb0883359800e12f44b4de2cf38c.ipv6.abo.wanadoo.fr)
[22:47:04] <FromDiscord> <haxscramper> devel has `std/enumutils.items` that can iterate over enum with holes https://github.com/nim-lang/Nim/blob/devel/lib/std/enumutils.nim#L79
[22:48:38] <FromDiscord> <haxscramper> but I assume you are not on devel
[22:50:33] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3u9h
[22:50:40] <FromDiscord> <arnetheduck> In reply to @treeform "It uses it's own": well, it's a low-level type sort of that would ideally correspond to the spec (there's no such thing as an `int` in the spec for example) - instead, it was implemented as a mix between "this seems convenient in nim" and "this seems to work for the json example I'm looking at" compromising correctness - it has grown even more ugly in `devel` - https://github.com/status-im/nimbus-eth2/issues/2
[22:50:43] <FromDiscord> <dankrad> But this won't change anything in my case. intVal = 0 is also in EnumStr
[22:51:29] <FromDiscord> <haxscramper> Then set correct values for `EnumStr`
[22:51:58] <FromDiscord> <haxscramper> If `0` is a valid integer value, there is no way to check whether it is really allowed or not
[22:52:04] <FromDiscord> <dankrad> The problem is that the config file is not mine. I'm operating on a config file of a game
[22:53:39] <FromDiscord> <zetashift> ah damn I keep forgetting `=>` in `sugar` doesn't work for func's
[22:54:00] <FromDiscord> <haxscramper> I don't understand, why do you want to convert `parseInt` to Str enum in the first place then
[22:54:05] <FromDiscord> <dom96> In reply to @zetashift "ah damn I keep": You can add `{.nosideeffect.}`
[22:54:08] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3u9i
[22:54:33] <FromDiscord> <zetashift> In reply to @dom96 "You can add `{.nosideeffect.}`": oh sweet, thanks!
[22:54:35] <FromDiscord> <haxscramper> You first try to parse int, check if it is a valud value for `EnumInt`. If not you parse as string
[22:54:39] <FromDiscord> <haxscramper> Into `EnumStr`
[22:55:08] <FromDiscord> <haxscramper> And `parseEnum` uses string representation, so it will fail for `0` input
[22:56:06] <FromDiscord> <arnetheduck> In reply to @arnetheduck "well, it's a low-level": now, jsony (and nim-json-serialization which btw should be rebenchmarked, it's changed a bit) solve a slightly different problem than "dynamic json" - the mapping-to-objects is sometimes nice and sometimes not, so we're still looking for a sane json implementation that both corresponds to the spec and can deal with the dynamic case well (including roundtripping and stuff like that)
[22:56:33] <nixfreak_nim[m]> I would like to create nim program to convert an ascii / txt file into a csv file. The problem is that not all the rows are the same, so I want to remove all the whitespaces in the file and replace with "," instead.  I was thinking of read the entire file and scanning line by line for text and how many whitespaces in that row, then using cli commands replace remove all whitespaces and then replace with ",".  Right now its a real pain in the
[22:56:34] <nixfreak_nim[m]> ass to use awk and bash since the columns are not same either. I guess I'm looking for suggestions how to make this a lot easier since I'm dealing with thousands of entries  
[22:57:45] <FromDiscord> <dankrad> I did, but I thought, maybe there's a way to determine it on compile time.
[22:59:13] <FromDiscord> <dankrad> This don't work when the user has inserted `0`, because then I can do with the example above\:↵`Antialiasing(parseInt("0"))`, which isn't correct.
[23:00:32] <FromDiscord> <dankrad> I think the only working solution is to change 1, 2 and 3 to strings.
[23:00:38] <FromDiscord> <zetashift> maybe this can come in handy https://github.com/Vindaar/shell↵(<@709044657232936960_nixfreak_nim=5b=4datrix=5d>)
[23:00:56] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3u9l
[23:01:03] <FromDiscord> <haxscramper> that part is unfixable in that case
[23:01:37] <FromDiscord> <haxscramper> `LowMediumHigh(0)` raises `RangeDefect` which should not be caught, so
[23:03:08] <FromDiscord> <dankrad> What do you mean? Why shouldn't they be caught?
[23:03:23] <FromDiscord> <haxscramper> it is a defect
[23:03:37] <FromDiscord> <haxscramper> Defects can be caught unless you have \`--panics\:on\`\`
[23:03:47] <FromDiscord> <haxscramper> If you do, defect is allowed to abort your program on spot
[23:04:07] <FromDiscord> <dankrad> Ahh .. ok, didn't knew. Then there's one more reason to change it to strings
[23:04:08] <FromDiscord> <haxscramper> which is a bad idea to have something like that IMO, but anyway
[23:05:38] <FromDiscord> <dankrad> got it
[23:05:39] <FromDiscord> <dankrad> thank you
[23:13:28] <FromDiscord> <treeform> In reply to @arnetheduck "well, it's a low-level": I agree json spec is a little loose around the edges, especially numbers. Like how you can send a large int64 between some languages but not JS because its only supports 52bit integers. Probably making every JS number a float64 would have fixed this issue.
[23:14:24] <FromDiscord> <treeform> And duplicate keys...
[23:14:49] <FromDiscord> <treeform> For my I just want to read/write json and not dwell on it.
[23:14:57] <FromDiscord> <treeform> I think JsonNode is fine...
[23:15:22] <FromDiscord> <arnetheduck> yeah, it's both loose and isn't and the problem is that the nim json module is loose in other places than the spec so that becomes a problem when we want to implement some standard protocols that are ok vs the json spec but not ok vs the json nim module
[23:15:46] <FromDiscord> <treeform> but usually protocols are loose themselves
[23:15:54] <FromDiscord> <arnetheduck> not the ones we deal with
[23:16:00] <FromDiscord> <treeform> One time I had to read json that produced unquoted keys....
[23:16:04] <FromDiscord> <treeform> its not valid json!
[23:16:10] <FromDiscord> <treeform> but you could eval() it in js
[23:16:13] <FromDiscord> <arnetheduck> well, that's a whole different story 🙂
[23:17:01] <FromDiscord> <treeform> My points is basically no one really follows the spec that well, you just do what you got to do 🙂
[23:18:51] <FromDiscord> <arnetheduck> well, yeah, the world is messy enough though, no need for the json module to mess it up further and we've run into the problem N times too many by now (ie really, the _last_ thing we want to spend time on is writing yet another json module)
[23:18:53] <FromDiscord> <treeform> json is almost like a natural language in that it has dialects, like python's json and go's json.
[23:19:14] <FromDiscord> <treeform> What problems do you run into?
[23:19:36] <FromDiscord> <arnetheduck> initially, crashes and security issues in the parser because numbers are poorly supported
[23:20:19] <FromDiscord> <arnetheduck> later, the lack of control over int vs float which is kind of arbitrary in the impl
[23:20:57] <FromDiscord> <arnetheduck> ie json is used for external data mostly, so under no circumstances whatsoever should it raise a Defect
[23:21:11] <FromDiscord> <arnetheduck> (edit) "ie json is used for external data mostly, so under no circumstances whatsoever should it raise a Defect ... " 03added "when parsing"
[23:21:33] <FromDiscord> <treeform> Defect like a segfault?
[23:22:06] <FromDiscord> <treeform> try: parse(x) catch ... should probably be done for all json parsing 🙂
[23:23:09] <FromDiscord> <arnetheduck> defect like a defect 🙂 it's messy in Nim, as haxscramper points out, since there are different dialects of the language where `try/except` does different things, it's not covered by the effect system (which we use to enforce error handling) etc
[23:24:04] <FromDiscord> <treeform> true you could get json that is very nested and it could crash the stack.
[23:24:18] <FromDiscord> <treeform> should add a depth check to jsony
[23:24:28] <FromDiscord> <arnetheduck> well, the code was previously casting to `int` without doing a range check - stuff like that
[23:24:38] <FromDiscord> <arnetheduck> (edit) "casting" => "converting"
[23:24:50] <FromDiscord> <haxscramper> Defect should be deprecate IMO
[23:25:05] <FromDiscord> <haxscramper> In the several years of using nim I had exactly zero use cases for it
[23:25:10] <FromDiscord> <arnetheduck> this causes crashes which in our code translates to remote exploits which is bad
[23:25:11] <FromDiscord> <haxscramper> And tons of issues like that
[23:25:13] <FromDiscord> <treeform> Is there a good test suite of valid json and invalid json?
[23:25:30] <FromDiscord> <treeform> especially very valid looking json that is invalid?
[23:26:06] <fn> <06Prestige99> https://github.com/json-schema-org/JSON-Schema-Test-Suite ?
[23:26:06] <fn> <12R2D299> 4GitHub: 7"A language agnostic test suite for the JSON Schema specifications"
[23:26:16] <FromDiscord> <arnetheduck> well, there's also the "valid-but-json-module-doesn't-support-it" category
[23:26:25] <FromDiscord> <arnetheduck> https://github.com/nst/JSONTestSuite comes up in a quick google
[23:26:26] <fn> <12R2D299> 4GitHub: 7"A comprehensive test suite for RFC 8259 compliant JSON parsers"
[23:26:56] <FromDiscord> <arnetheduck> In reply to @haxscramper "And tons of issues": don't get me started 🙂
[23:28:46] <FromDiscord> <haxscramper> Maybe there are valid uses for it. Somewhere
[23:28:55] <FromDiscord> <haxscramper> I would be curious if someone could share
[23:56:30] <FromDiscord> <hamidb80> In reply to @Rika "hm i guess, but": {.nanChecks: on, infChecks: on.}
[23:58:47] <FromDiscord> <haxscramper> I mean - why should this have an ability to abort your program
[23:58:57] <FromDiscord> <haxscramper> Why not just exceptoin
