[00:30:38] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[00:31:37] *** Joins: Yardanico (~quassel@2a01:4f8:c2c:df22::2)
[00:42:00] *** Joins: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de)
[00:42:29] <FromDiscord> <Yardanico> moved eventer bot to libera chat
[00:44:57] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[01:18:43] <madprops> Editor shows an error but it still compiles https://i.imgur.com/M7mVd6r.png
[01:28:07] <FromDiscord> <Yardanico> how are you compiling it?
[01:28:12] <FromDiscord> <Yardanico> i mean the command
[01:32:29] <madprops> nim js file.nim
[01:32:54] <madprops> ah i guess it's just not an error for js
[01:34:53] <FromDiscord> <Yardanico> you might try to specify --backend:js in your .nim.cfg or .nims file but I'm not certain it'll work
[01:50:48] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[01:54:29] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[02:38:53] <FromDiscord> <retkid> i know the answer is no but
[02:39:10] <FromDiscord> <retkid> do you think theres any known way to bundle efficient c binaries into a jvm enviroment
[02:39:14] <FromDiscord> <retkid> (edit) "enviroment" => "environment"
[02:39:57] <FromDiscord> <retkid> I would like to integrate nim into some java stuff because im afraid physics calculations might be too expensive for java
[02:49:15] <FromDiscord> <retkid> yea no
[02:49:19] <FromDiscord> <retkid> this is currently not a thing
[02:49:20] <FromDiscord> <retkid> :\
[02:54:49] *** Quits: max22- (~maxime@2a01cb08833598008d8190374bd4676f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:57:25] <FromDiscord> <undersquire> In reply to @retkid "do you think theres": it is possible
[02:57:35] <FromDiscord> <undersquire> take a look at JNI
[02:57:56] <FromDiscord> <retkid> but idk if that would help preformance at all
[02:57:56] <FromDiscord> <treeform> In reply to @retkid "do you think theres": Don't ask me why I looked into it, regular java api looked really hard but I found this https://github.com/jnr/jnr-ffi
[02:57:58] <nrds> <04prestigebot99> 4GitHub: 7"Java Abstracted Foreign Function Layer"
[02:57:59] <FromDiscord> <retkid> (edit) "preformance" => "performance"
[02:58:44] <FromDiscord> <treeform> Android Java has the NDK which feels better.
[02:59:15] <FromDiscord> <retkid> Well, the only reason i would do this is for making my code run as fast as i can
[02:59:15] <FromDiscord> <treeform> Desktop java JNI looks kind of hard
[02:59:18] <FromDiscord> <retkid> but
[02:59:25] <FromDiscord> <retkid> I don't think this would help at all
[02:59:35] <FromDiscord> <undersquire> In reply to @retkid "Well, the only reason": just dont use Java then ðŸ˜‰
[02:59:51] <FromDiscord> <retkid> In reply to @undersquire "just dont use Java": CANT
[02:59:53] <FromDiscord> <treeform> In my experience java is ok at speed, depending how you write it.
[02:59:53] <FromDiscord> <undersquire> Java itself is not that slow
[03:00:12] <FromDiscord> <retkid> so my dumb idea requires a ton of java work
[03:00:12] <FromDiscord> <undersquire> you just have to avoid the GC as much as possible to avoid serious performance drops
[03:00:27] <FromDiscord> <undersquire> In reply to @retkid "so my dumb idea": what are you trying to make that needs Java (or is it an assignment)?
[03:00:28] <FromDiscord> <treeform> My ex-coworkers where very good at writing java-xml-java-deeply nested monsters that ran pretty slow.
[03:00:33] <FromDiscord> <treeform> so don't do that and your java should be fast
[03:00:39] <FromDiscord> <retkid> In reply to @undersquire "what are you trying": im doing some physics stuff in minecraftr
[03:00:40] <FromDiscord> <retkid> (edit) "minecraftr" => "minecraft"
[03:00:42] <FromDiscord> <undersquire> Ah
[03:00:49] <FromDiscord> <retkid> involving fluid dynamics and stuff
[03:00:52] <FromDiscord> <undersquire> Java is fine for it, just do the physics in java
[03:01:10] <FromDiscord> <retkid> well im afraid all of the calculations will just make it run like molasis
[03:01:23] <FromDiscord> <retkid> the game im basing it off runs like bytecode and still struggles
[03:01:25] <FromDiscord> <undersquire> ðŸ˜‚ trust me Java is really good at optimizing stuff
[03:01:30] <FromDiscord> <undersquire> math should be fine
[03:02:04] <FromDiscord> <undersquire> it probably isnt worth the effort to try to use C with Java (trust me it can be a pain)
[03:02:07] <FromDiscord> <treeform> The key to making simulation stuff in java is to avoid OOP and use flat arrays as much as possible. SOA vs AOS
[03:02:11] <FromDiscord> <undersquire> ^
[03:02:24] <FromDiscord> <undersquire> this helps avoid the GC
[03:02:26] <FromDiscord> <retkid> In reply to @treeform "The key to making": im learing to ue hashmaps
[03:02:29] <FromDiscord> <treeform> But that actually a key in any language ðŸ™‚
[03:02:31] <FromDiscord> <retkid> (edit) "ue" => "use"
[03:02:34] <FromDiscord> <undersquire> ye
[03:03:35] <FromDiscord> <retkid> for some reason hasmaps run like 186x faster
[03:03:40] <FromDiscord> <retkid> (edit) "hasmaps" => "hashmaps"
[03:03:41] <FromDiscord> <treeform> Many java (and non Java) games allocate most things upfront and have some thing used in-use and not-in-use flags, to get around GC.
[03:04:06] <FromDiscord> <treeform> So there is no allocations per frame.
[03:04:11] <NimEventer> New Nimble package! tkrzw - Wrappers over the Tkrzw Database Manager C++ library., see https://git.sr.ht/~ehmry/nim-tkrzw
[03:04:32] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[03:04:34] <FromDiscord> <retkid> with a game like minecraft where you might break a hole in a wall
[03:04:42] <FromDiscord> <retkid> and you gotta depressurize a part of a space station
[03:04:49] <FromDiscord> <retkid> you cant really prebake stuff
[03:05:37] <FromDiscord> <retkid> and you can obviously do generalizations, like if a large area of 0 pressure encounters a small area of preasure, just delete the area with preasureb
[03:05:45] <FromDiscord> <retkid> (edit) "preasureb" => "preasure"
[03:06:09] <FromDiscord> <retkid> Idk, i've been procrastinating starting this because its kinda scary to me lol
[03:06:12] <FromDiscord> <treeform> Is that minecraft or ss13?
[03:06:22] <FromDiscord> <retkid> In reply to @treeform "Is that minecraft or": porting ss13 to minecraft for no reason
[03:06:31] <FromDiscord> <retkid> at least thats my goal
[03:06:39] <FromDiscord> <treeform> ss13 has two models handling pressures
[03:06:47] <FromDiscord> <treeform> one is pre "voxel"
[03:06:50] <FromDiscord> <retkid> I might start digging around in gonecode
[03:06:55] <FromDiscord> <retkid> (edit) "gonecode" => "gooncode"
[03:07:21] <FromDiscord> <treeform> and one is per "region" where regions are created and destroyed and have nodes telling you how much goes from one to the other.
[03:07:34] <FromDiscord> <treeform> region is much faster and much more predictable
[03:07:46] <FromDiscord> <treeform> voxel is super slow, but can be more "fun".
[03:08:06] <FromDiscord> <treeform> Different servers choose one or the other and that sets up the mood.
[03:08:32] <FromDiscord> <retkid> so, my idea is currently that all sealed areas will be regions until something else is found in them
[03:08:37] <FromDiscord> <retkid> then they split into voxels or something
[03:08:55] <FromDiscord> <retkid> i need to start writing the code to get a solid understaning of it
[03:08:56] <FromDiscord> <retkid> (edit) "understaning" => "understanding"
[03:08:58] <FromDiscord> <treeform> yeah
[03:09:04] <FromDiscord> <retkid> i also have to polish up my fluid dynamics stuff
[03:09:06] <FromDiscord> <treeform> Minecraft is also 3d
[03:09:10] <FromDiscord> <treeform> its like much harder
[03:09:21] <FromDiscord> <treeform> if you like ss13 checkout my blog post: https://blog.istrolid.com/blog/space-station-13-remakes.html
[03:09:27] <FromDiscord> <retkid> 1^2 vs 1^3
[03:09:31] <FromDiscord> <retkid> exponentially harder
[03:10:09] <FromDiscord> <treeform> You probably want regions, some sort of quad tree
[03:10:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:10:19] <FromDiscord> <treeform> then breakout into voxels when its interesting
[03:10:28] <FromDiscord> <retkid> so what im doing is, im never announcing anything to anyone, im just gonna work and see what happens
[03:10:30] <FromDiscord> <treeform> door or a hole opened up
[03:10:41] <FromDiscord> <retkid> if i announce anything publicly it'll be a finished or semi-finished product
[03:10:48] <FromDiscord> <retkid> but it may just go nowhere
[03:10:51] <FromDiscord> <retkid> /sh\
[03:10:53] <FromDiscord> <retkid> (edit) "/sh\" => "Â¯\_(ãƒ„)_/Â¯"
[03:11:17] *** Joins: flynn (~mcbloch@user/flynn)
[03:11:23] <FromDiscord> <treeform> You have seen: https://minecraft-spacestation13.weebly.com/
[03:11:30] <FromDiscord> <retkid> I have, im pretty sure
[03:11:38] <FromDiscord> <retkid> that one got abandoned
[03:11:54] <FromDiscord> <retkid> they have a github of unusable code because forge sucks
[03:12:19] <FromDiscord> <retkid> https://github.com/birdbrainswagtrain/MineStation13
[03:12:21] <nrds> <04prestigebot99> 4GitHub: 7"A Minecraft mod intended to replicate the popular BYOND game, Space Station 13."
[03:12:53] <FromDiscord> <retkid> I have other people who may or may not help me so im doing it all alone
[03:25:04] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 258 seconds)
[03:27:11] <FromDiscord> <retkid> :nim2:
[03:35:29] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[03:36:00] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3vW2
[03:36:10] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Client Quit)
[03:38:06] <FromDiscord> <dain> like i want to parse the json without having to write it all in a busy nested line, but break it up into blocks like they do in that section
[03:38:15] <FromDiscord> <dain> (edit) "parse" => "deal with"
[03:46:46] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[03:51:19] <Pyautogui> Is it good Nim to use references like you would use pointers in C? Like https://play.nim-lang.org/#ix=3vWy.
[03:52:03] <FromDiscord> <Elegantbeef> You use references when you want references, if you want a pointer you use a pointer
[03:52:11] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3vWz
[03:52:22] <FromDiscord> <Elegantbeef> You also dont need to use cast for simple conversions
[03:52:30] <Pyautogui> Got it.
[04:03:42] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[04:18:34] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3vWD
[04:21:57] <FromDiscord> <haxscramper> Not right now, kv matching requires {} syntax
[04:22:39] <FromDiscord> <dain> oh :(
[04:22:53] <FromDiscord> <haxscramper> So for json you can only use it
[04:23:02] <FromDiscord> <dain> oh btw, are the docs correct here? https://nim-lang.github.io/fusion/src/fusion/matching.html#matching-different-things-kvminuspairs-matching
[04:23:08] <FromDiscord> <dain> there is no "file" key in the json
[04:24:51] <FromDiscord> <haxscramper> It does not show output, so technically it is a correct example as it only describes syntax. But this should be clarified, yes
[04:25:02] <FromDiscord> <haxscramper> And added to tests
[04:31:07] <FromDiscord> <dain> sent a code paste, see https://paste.rs/6yw
[04:33:56] *** Joins: vicfred (~vicfred@user/vicfred)
[04:45:05] <FromDiscord> <haxscramper> I think I should add your example to docs
[04:46:32] <FromDiscord> <dain> thx
[04:47:29] <FromDiscord> <dain> I had to fumble around to figure out how it worked because the existing json examples were trivial. wasn't quite sure how it worked on jq-style transformations of deeply nested data
[04:47:49] <FromDiscord> <dain> might be worth going through the jq tutorials and seeing how much can be translated into the nim pattern matching way
[04:49:50] <FromDiscord> <dain> take a big json object and pull interesting data out of it from different parts
[04:51:42] <FromDiscord> <haxscramper> Good idea. I'm not entirely familiar with jq (google-query-every-time basically), so if you have some real-world examples, or just things that your were confused I would rally appreciate it
[04:52:38] <FromDiscord> <haxscramper> Because key-value pattern handling wasn't given that much thought when fusion matching was designed, so documentation is naturally lacking in use cases and examples
[04:53:30] <FromDiscord> <dain> yeah. I think it would be something loads of people would try to use it on. since json processing is so common (more common than writing AST macros)
[04:54:35] <FromDiscord> <dain> my motivation was actually to refute this blowhard: http://www.smashcompany.com/technology/why-i-prefer-dynamic-typing-over-static-typing-the-speed-of-adapting-to-change
[04:56:30] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[04:57:51] <FromDiscord> <enthus1ast> i took some babysteps in dynamic nimja template evaluation, at least it works with nimscript \:)
[04:58:11] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[04:58:20] <FromDiscord> <haxscramper> Before reading the article itself I think I should point out that nim stdlib json is slow, and handling massive amounts of it with pattern matching would be even slower. Instead I would recommend using treefrom/jsony, which has support for dynamic nodesâ†µ(@dain)
[04:58:40] <FromDiscord> <haxscramper> And dynamic nodes could be checked with pattern matching
[04:59:19] <FromDiscord> <dain> ooo
[04:59:20] <FromDiscord> <dain> thanks
[04:59:53] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/875898479526944819): i took some babysteps in dynamic nimja template evaluation, at least it \~works\~ somehow got me a nimja template withouth recompile the binary with nimscript \:)
[05:01:15] <FromDiscord> <haxscramper> In reply to @haxscramper "Before reading the article": > #1 â€“ the external API is bloated, so writing a schema for the whole thing would be difficult to justify in terms of business. We only need a tiny slice of the data. More so, when the API ambushes you with an unexpected change, you have a lot of work to do to adapt to the changeâ†µâ†µOkay, that is literally what I just said
[05:02:06] <FromDiscord> <haxscramper> Efficient compiled schema for whatever you need, and some randomized garbage that cannot be mapped onto anything sane, like value that can be int/string/bool/array at the same time
[05:03:29] <FromDiscord> <haxscramper> So yes, if you want to completely dismantle these arguments I suggest you check out jsony as well
[05:04:05] <FromDiscord> <haxscramper> The only thing is lacking is support for data validation, and I'm not sure what treefrom's plans on that one
[05:05:09] <FromDiscord> <dain> ya my intuition was: the code bloat goes away when you have pattern matching and object variants and discriminated unions
[05:05:18] <FromDiscord> <dain> (edit) "and" => "/"
[05:05:25] <FromDiscord> <haxscramper> "Great" article btw, comparing java vs anything would make your argument look convincing, yeah, that
[05:05:54] <FromDiscord> <haxscramper> In reply to @dain "ya my intuition was:": Yes. Pattern matching reduces boilerplate for dealing with loosely structured information
[05:06:28] <FromDiscord> <haxscramper> So it is a fixup for statically typed languages that makes it possible to easily deal with this
[05:07:30] <FromDiscord> <haxscramper> And would bet there is an introspection framework for java that makes it a one-liner
[05:07:53] <FromDiscord> <dain> oh and while we're on the subject of the docs, the part in "ref object matching" where it talks about the need for "of" isnt quite clear to me. is it talking about the double `of of` thing?
[05:08:13] <FromDiscord> <dain> that looks weird and scary
[05:08:34] <FromDiscord> <haxscramper> Yes. 'of' itself is a nim operator they you can use, like 'instanceof' in java
[05:09:05] <FromDiscord> <haxscramper> And it can be used in prefix, and case also uses of ... So you get this weird 'of of'
[05:11:16] <FromDiscord> <haxscramper> In reply to @haxscramper "And would bet there": Nim has static codegen and introspection and it is arguably easier to use, but java also has its powerful sides. This article is as bad as "beating C with Haskell" where they have hyper-optimized Haskell code vs some cave-tier C one. Same story here, except nim making it more obvious how to have code hyper-optimized for readability
[05:12:45] <FromDiscord> <haxscramper> Although admittedly patter matching looks like regex
[05:22:12] <FromDiscord> <dain> > Instead I would recommend using treefrom/jsony, which has support for dynamic nodesâ†µi'm a little confused by what you say here. aren't the stdlib JSON nodes dynamic before you cast them?
[05:23:09] <FromDiscord> <dain> the jsonny `fromJSON` proc returns a `JsonNode` which is the stdlib one right?
[05:23:13] <FromDiscord> <dain> https://nimdocs.com/treeform/jsony/jsony.html#fromJson%2Cstring
[05:23:24] <FromDiscord> <enthus1ast> yes
[05:32:37] *** Joins: dsrw (~dsrw@134.41.79.252)
[05:32:58] <FromDiscord> <haxscramper> In reply to @dain "the jsonny `fromJSON` proc": I was talking about this https://nimdocs.com/treeform/jsony/jsony.html#fromJson%2Cstring%2Ctypedesc%5BT%5D
[05:33:24] <FromDiscord> <haxscramper> Json string to any type
[05:33:47] *** Joins: jfrent (~josiah@user/jfrent)
[05:34:22] <FromDiscord> <dain> ah I see, thanks
[05:34:24] <FromDiscord> <haxscramper> https://github.com/treeform/jsony/blob/master/tests/test_objects.nim
[05:35:12] <FromDiscord> <dain> so if I'm to understand it: you can mix and match between putting the json into types you define upfront, and doing ad-hoc parsing?
[05:37:01] <FromDiscord> <haxscramper> More or less h https://github.com/treeform/jsony#full-support-for-json-in-json
[05:37:03] <nrds> <04prestigebot99> 4GitHub: 7"A loose, direct to object json parser with hooks."
[05:40:26] <FromDiscord> <Ayy Lmao> Is there a way to escape backticks within a `quote do` block in a macro?
[05:41:08] <FromDiscord> <Elegantbeef> You can always change the insert character
[05:41:40] <FromDiscord> <Ayy Lmao> I've been trying to do that but I'm not exactly sure how it works. It isn't behaving how I would expect.
[05:41:42] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/macros.html#quote%2Ctyped%2Cstring notice it has a second parameter
[05:44:03] <FromDiscord> <Ayy Lmao> I'll try to write an example
[05:44:59] <FromDiscord> <Elegantbeef> I've personally never used any other symbol but i recall some library was using `@` instead, though dont recall how ðŸ˜€
[05:47:57] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3vWS
[05:48:41] <FromDiscord> <Elegantbeef> why are you even using a macro here?
[05:49:00] <FromDiscord> <Ayy Lmao> It's just my simple example of the problem I am having. What I'm doing is more complicated and requires a macro
[05:49:01] <FromDiscord> <Elegantbeef> Assuming this is representative of the proc logic
[05:49:13] <FromDiscord> <Elegantbeef> Just making sure
[05:50:17] <FromDiscord> <xflywind> In reply to @Elegantbeef "https://nim-lang.org/docs/macros.html#quote%2Ctyped": Dev docs have some examples
[05:50:44] <FromDiscord> <Elegantbeef> https://nim-lang.github.io/Nim/macros.html#quote%2Ctyped%2Cstring
[05:51:58] <FromDiscord> <Rika> In reply to @Elegantbeef "https://nim-lang.org/docs/macros.html#quote%2Ctyped": The last time I used it changing that parameter did nothing
[05:53:59] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3vWT
[05:54:35] <FromDiscord> <Elegantbeef> Yea you dont need the accquote it's just `@tyName`
[05:54:46] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3vWU like so
[05:56:32] <FromDiscord> <Ayy Lmao> That seems to work for my simple example but it is failing for my more complicated one. I'll try to boil down the issue
[05:58:28] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3vWW
[05:58:33] <FromDiscord> <Ayy Lmao> It doesn't work for `@tyName = distinct int`
[06:01:24] *** Quits: KurtGodel (~AdiIRC@180.150.11.50) (Read error: Connection reset by peer)
[06:01:44] *** Joins: KurtGodel (~AdiIRC@180.150.11.50)
[06:02:32] <FromDiscord> <Elegantbeef> Yea the prefix operator there isnt parsable
[06:03:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3vWX
[06:06:29] *** Quits: dsrw (~dsrw@134.41.79.252) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:11:09] <NimEventer> New thread by Kalbhairab: Notification show, see https://forum.nim-lang.org/t/8323
[06:11:58] *** Joins: dsrw (~dsrw@134.41.79.252)
[06:12:31] <FromDiscord> <Ayy Lmao> Strange. Well I guess the template is the way to go for now. I wonder why there is no way to simply escape the backticks. I feel like that would be conceptually much simpler and not have errors like this. Maybe I am just not understanding it properly.
[06:14:57] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:21:44] *** Quits: dsrw (~dsrw@134.41.79.252) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:01:13] <NimEventer> New thread by Alexeypetrushin: Print why assert failed?, see https://forum.nim-lang.org/t/8324
[07:12:13] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:13:11] <FromDiscord> <undersquire> Nim is named after this right https://en.m.wikipedia.org/wiki/Nimrod_(computer)
[08:13:52] <FromDiscord> <Elegantbeef> No it's named after nimrod the king from the bible
[08:14:07] <FromDiscord> <undersquire> Ah ok lol
[08:14:19] <FromDiscord> <undersquire> Oh that makes sense with the crown ðŸ˜‚
[08:19:15] <FromDiscord> <Elegantbeef> Yea the language was also named nimrod, and nimble was named babel iirc
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:45:31] <NimEventer> New question by Alex Craft: Nim enum converter macro?, see https://stackoverflow.com/questions/68780268/nim-enum-converter-macro
[09:07:53] <FromDiscord> <Jonah> how can i get nimble to always have `-d:ssl` enabled when building my app
[09:08:34] <FromDiscord> <Jonah> nvm, i had the wrong filename for `nim.cfg`
[09:08:46] <FromDiscord> <Elegantbeef> you can make a `config.nims` and put `switch("define", "ssl")`
[09:08:52] <FromDiscord> <Elegantbeef> Or a `nim.cfg` ofc
[09:59:56] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Read error: Connection reset by peer)
[10:01:08] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[10:08:41] <FromDiscord> <Bung> @ElegantBeef scripter ready for use ?
[10:09:09] <FromDiscord> <Elegantbeef> Nope i've been a tremendously bad developer
[10:10:04] <FromDiscord> <Bung> that's bad news to me
[10:11:29] <FromDiscord> <Elegantbeef> I apologize, but the way to support Nim -\> nimscript object variants is quite complex and i havent being wanting the self pain to write it
[10:31:27] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:34:44] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 272 seconds)
[10:39:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[10:39:54] <FromDiscord> <Bung> Dont be , I think I just need find another solution.
[10:40:27] *** Joins: flynn (~mcbloch@user/flynn)
[10:41:36] <FromDiscord> <treeform> In reply to @dain "so if I'm to": Its much faster to parse json string > objects direclty, then go json string > json nodes > objects. That's the main reason why Jsony is fast.
[10:42:15] <FromDiscord> <treeform> it just does less work
[10:59:14] <FromDiscord> <Chiggy> Hello. I installed nim on windows, and also have cygwin installed. However, I get compile errors. and I was able to find an issue for itâ†µ<https://github.com/nim-lang/Nim/issues/10645> It mentions a config.nims. But it doesnt exist for me. What do I do?
[11:00:54] <FromDiscord> <Elegantbeef> Create the file in the location and plop in the fields it gave
[11:01:14] <FromDiscord> <Chiggy> oh ok
[11:02:17] <FromDiscord> <Elegantbeef> Though it doesn support cygwin, so consider using mingw
[11:04:50] *** Joins: max22- (~maxime@2a01cb088335980078b5faece525f4e7.ipv6.abo.wanadoo.fr)
[11:05:56] <FromDiscord> <Chiggy> In reply to @Elegantbeef "Though it doesn support": um, from this page <http://mingw-w64.org/doku.php/download>?
[11:07:31] <FromDiscord> <Elegantbeef> If you just use choosenim it should work ok
[11:12:58] *** Joins: xet7 (~xet7@user/xet7)
[11:15:28] <FromDiscord> <Chiggy> In reply to @Elegantbeef "If you just use": I installed using choosenim and still same error
[11:17:35] <FromDiscord> <Chiggy> I downloaded https://github.com/dom96/choosenim/releases/download/v0.7.4/choosenim-0.7.4_windows_amd64.zip and extracted it. Ran the runme.bat file
[11:19:02] <FromDiscord> <Chiggy> output https://media.discordapp.net/attachments/371759389889003532/875994404698095636/unknown.png
[11:20:21] <FromDiscord> <Elegantbeef> you did add that directory to your path?
[11:20:37] <FromDiscord> <Chiggy> yeah
[11:20:56] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/875994880441217034/unknown.png
[11:21:13] <FromDiscord> <Chiggy> and it works too https://media.discordapp.net/attachments/371759389889003532/875994951740182558/unknown.png
[11:24:32] <FromDiscord> <Elegantbeef> You did create that config file?
[11:26:41] <FromDiscord> <Chiggy> new error this time
[11:26:52] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/875996378080370718/unknown.png
[11:28:42] <FromDiscord> <Chiggy> config https://media.discordapp.net/attachments/371759389889003532/875996833850224690/unknown.png
[11:29:01] <FromDiscord> <Elegantbeef> IT cannot find mingw, so it's not in your path
[11:29:21] <FromDiscord> <Chiggy> In reply to @Chiggy "um, from this page": But I havent installed mingw yet
[11:29:33] <FromDiscord> <Elegantbeef> Choosenim should install it
[11:29:34] <FromDiscord> <Chiggy> I thought choosenim would install it and stuff
[11:29:48] <FromDiscord> <Chiggy> In reply to @Chiggy "output": well thats the whole output of choosenim
[11:30:06] <FromDiscord> <Chiggy> now what
[11:30:36] <FromDiscord> <Chiggy> (edit) 
[11:32:24] <FromDiscord> <Elegantbeef> Have you restarted/logged out and back in? I know windows can be finicky with the path
[11:32:38] <FromDiscord> <Chiggy> let me restart explorer
[11:32:55] <FromDiscord> <Rika> I believe you have to relog
[11:33:26] <FromDiscord> <Chiggy> hmm ight I will restart my laptop
[11:36:19] <FromDiscord> <Chiggy> ok I have restarted my laptop
[11:36:31] <FromDiscord> <Chiggy> now how do I check if mingw got installed by choosenim
[11:36:56] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/875998910177501194/unknown.png
[11:37:02] <FromDiscord> <Elegantbeef> run `x86_64-w64-mingw32-gcc.exe`
[11:37:32] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/875999058584539136/unknown.png
[11:37:35] <FromDiscord> <Chiggy> nope
[11:37:49] <FromDiscord> <Chiggy> where does choosenim install it
[11:41:26] <FromDiscord> <Elegantbeef> I dont know but i think it's either in program files or in a `.nim` directory in documents
[11:41:43] <FromDiscord> <Chiggy> documents has no .nim
[11:42:05] <FromDiscord> <Chiggy> I do have a .nimble in my Home directory
[11:42:28] <FromDiscord> <Chiggy> and theres also a .choosenim there
[11:42:35] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/876000334244376617/unknown.png
[11:43:02] <FromDiscord> <Chiggy> and nothing in program files either
[11:43:31] <FromDiscord> <Chiggy> can I just manually install those 2 exes
[11:43:41] <FromDiscord> <Chiggy> if so, how or from where
[11:45:45] <FromDiscord> <Elegantbeef> I do not know
[12:22:41] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[12:26:53] <FromDiscord> <Chiggy> Ok now I installed mingw. Install gcc and stuff. And am using it. And I get a different error now
[12:27:06] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/876011533958791198/unknown.png
[12:27:26] <FromDiscord> <Chiggy> why has getting nim to compile become such a challenge for me
[12:27:28] <FromDiscord> <Chiggy> (edit) "why has getting nim to compile become such a challenge for me ... " 03added "lol"
[12:28:54] <FromDiscord> <Chiggy> Ok adding the config file helped
[12:28:57] <FromDiscord> <Chiggy> it compiled now
[12:30:40] <FromDiscord> <hamidb80> hey
[12:31:31] <FromDiscord> <hamidb80> how can i get stats of a file in nim [eg. modified date,  creation date ,...]? i couldn't find any examples
[12:32:36] <FromDiscord> <Elegantbeef> `std/os` has a few of those `getCreationDate`, `getLastModificationTime`
[12:33:31] <FromDiscord> <Elegantbeef> `getFileInfo` for the whole lot
[13:43:53] *** Joins: tdc (~tdc@217.61.224.137)
[15:22:17] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 258 seconds)
[15:27:51] <FromDiscord> <dom96> In reply to @Chiggy "where does choosenim install": Choosenim doesnâ€™t install it if itâ€™s already in your path
[15:28:34] <FromDiscord> <Chiggy> I am pretty sure ming wasnt in my path tho
[15:28:53] <FromDiscord> <dom96> In reply to @Chiggy "": Then whatâ€™s this?
[15:29:27] <FromDiscord> <Chiggy> I probably lack knowledge but, arent those different?
[15:29:52] <FromDiscord> <Chiggy> I thought cygwin and mingw were different things
[15:30:28] <FromDiscord> <dom96> Yes, but choosenim just looks for any gcc
[15:30:39] <FromDiscord> <Chiggy> ah I see
[15:30:45] <FromDiscord> <Chiggy> I did have gcc in the path yeah
[15:30:59] <FromDiscord> <dom96> The real problem is your custom config I guess
[15:31:03] <FromDiscord> <Gabryx86_64> In reply to @Chiggy "I thought cygwin and": doest cygwin need a dll on path?
[15:32:17] <FromDiscord> <Chiggy> In reply to @dom96 "The real problem is": Yeah I didnt understand much why its like needed. I can see in the mingw bin folder both `gcc.exe` and the other file are present. Why does using the other file solve the issue ðŸ¤”
[15:32:56] <FromDiscord> <Chiggy> (edit) "other file" => "`x86_64-w64-mingw32-gcc.exe`" | "other file" => "`x86_64-w64-mingw32-gcc.exe`"
[16:18:19] <FromDiscord> <enthus1ast> i'm playing with nimscript, to make my template engine dynamic, currently i evaluate a whole nim script set a global variable and get the content of the variable with selectUniqueSymbol() and getGlobalValue().â†µâ†µI was wondering if/how it is possible to just let the vm epand a macro, and get the expanded nim into the compiled program
[16:19:09] <FromDiscord> <Rika> call the macro?
[16:20:02] <FromDiscord> <enthus1ast> let the vm call the macro?
[16:20:30] <FromDiscord> <Rika> ah, from the vm
[16:20:32] <FromDiscord> <enthus1ast> the problem is that the macro is only partial valid, and gets valid when inside a proc body
[16:21:51] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3vYV
[16:22:01] <FromDiscord> <enthus1ast> as far as i see i can only get symbols from the vm
[16:23:57] <FromDiscord> <haxscramper> You can convert data betweem VM and compiled part by registering callbacks
[16:23:57] <FromDiscord> <haxscramper> https://github.com/haxscramper/hnimast/blob/master/tests/tNimscriptInterop.nim
[16:24:33] <FromDiscord> <haxscramper> `selectUniqueSymbol` might work as well, but I would try to use callback implementation
[16:24:35] *** Joins: ploki (~ploki@37.164.139.241)
[16:24:59] <FromDiscord> <haxscramper> Nim my earlier example I also used it https://github.com/haxscramper/hack/blob/22088c696fa45cc01d059084d73d1b6a4e449063/testing/nim/compilerapi/nims_template.nim#L63
[16:27:26] <FromDiscord> <haxscramper> I'm not sure what you mean by "let the vm expand a macro, and get the expanded nim into the compiled program". You could theoretically use `semMacroExpr` or `semSym` from `compiler/sem.nim`
[16:27:42] <FromDiscord> <haxscramper> Take in call to a macro, get it's expanded form
[16:28:22] *** Quits: max22- (~maxime@2a01cb088335980078b5faece525f4e7.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:28:26] <FromDiscord> <haxscramper> it is not exported though
[16:29:52] <FromDiscord> <haxscramper> Also if you drop `evalPass` then you woudl basically expand a macro
[16:30:29] <FromDiscord> <enthus1ast> i was thinking about two options how to use a dynamic template\:â†µ1. have the whole stuff (with the outer proc definition ) in a dynamic evaluated nim script.â†µ2. have the outer proc definition in compiled code, then register all parameters of the compiled proc to the vm, evaluate the template, get the return code out of the vm, return it in compiled code
[16:31:20] <FromDiscord> <haxscramper> By "get the return code out of the vm, return it in compiled code" you mean return value of the compiled part?
[16:31:21] <FromDiscord> <enthus1ast> (3. much better option, but lack of knowledge)
[16:32:24] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3vYY
[16:34:15] <FromDiscord> <haxscramper> So you want to define a compiled proc that calls into VM?
[16:34:18] <FromDiscord> <enthus1ast> yep
[16:35:30] <FromDiscord> <Rika> nimscripter time i guess
[16:35:35] <FromDiscord> <Rika> unless im misunderstanding
[16:35:46] <FromDiscord> <haxscramper> no, nimscripter does this other way
[16:35:55] <FromDiscord> <haxscramper> VM into compiled
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:02] <FromDiscord> <Rika> well im not seeing the use for the other way
[16:37:09] <FromDiscord> <enthus1ast> then there could be a define that tells if the template is dynamically evaluated (eg. when developing a web site) but in production it is compiled
[16:37:16] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vZ0
[16:37:37] <FromDiscord> <haxscramper> so basically the idea is - you `processModule` inside of compiled proc body
[16:37:54] <FromDiscord> <haxscramper> `processModule` for the proc implementation
[16:38:00] <FromDiscord> <haxscramper> And some glue code for it to set `result` in the end
[16:38:01] <FromDiscord> <enthus1ast> but then i must convert between PNode and NimNode or?
[16:38:29] <FromDiscord> <haxscramper> Where nimnode comes from?
[16:38:40] <FromDiscord> <haxscramper> I mean, there is nim node, we are not doing macro code right now?
[16:39:42] <FromDiscord> <enthus1ast> so the macro is expanded inside the vm (where i generate NimNodes) the vm does its magic and outputs PNodes?
[16:41:12] <FromDiscord> <haxscramper> Here, the `# <- vm` part is written manually, or it is a `compileTemplate("file.nwt")`?
[16:41:31] <FromDiscord> <enthus1ast> yes this should be a compileTemplate("file.nwt")
[16:41:44] <FromDiscord> <enthus1ast> at least this is what i had in mind
[16:41:53] <FromDiscord> <haxscramper> okay, then it doesn't matter because macro be expanded in `processModule3`
[16:42:38] <FromDiscord> <haxscramper> So your proc implementation would be a `processModule(graph, m, newCall(graph.getIdent("compileTemplate"), newLit("file.nwt"))`
[16:42:39] <FromDiscord> <haxscramper> Roughly speaking
[16:42:40] <FromDiscord> <haxscramper> But!
[16:43:06] <FromDiscord> <haxscramper> you can do better than this, and instead of calling into vm that calls into vm to expand macro to generate code to compile it in vm
[16:43:18] <FromDiscord> <haxscramper> you can just implement `compileTemplate(file: string): PNode`
[16:43:48] <FromDiscord> <haxscramper> And then processModule(graph, m, compileTempate("file.ntw"))\`
[16:45:00] <FromDiscord> <haxscramper> But this would require adapting macro implementation so it works at both runtime and compile time .. which is not impossible, I have tons of code that interacts with both runtime and compiletime AST
[16:45:40] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:45:54] <FromDiscord> <haxscramper> And if template parser works at compile-time there is nothing stopping it from working at runtime as well
[16:57:43] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vZ8
[16:58:33] <FromDiscord> <haxscramper> https://haxscramper.github.io/hnimast/src/hnimast/hast_common.html#newWhen%2CN%2CN%2CN for generic codegen procs
[17:00:36] <FromDiscord> <haxscramper> Also, I would suggest simplifying AST definition, because it is super overloaded with fields - better introduce `NStmtList` kind and pack all subnodes in there
[17:12:56] <ploki> hey, is it possible for c codegen to not produce exceptions related code when using custom =destroy ?
[17:13:05] <ploki> consider this: https://play.nim-lang.org/#ix=3vZb
[17:14:07] <ploki> in the produced c, the destroy is handled with setjmp,exceptions,safepoint ...
[17:15:10] <FromDiscord> <haxscramper> Does `{.emit: "//".}` solve the issue?
[17:15:46] <FromDiscord> <enthus1ast> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: i'm trying, and playing with this, thank you really much!
[17:28:41] *** Joins: arkurious (~arkurious@user/arkurious)
[17:55:46] *** Joins: vrilles (~vrilles@user/aman)
[18:23:18] *** Joins: yoctocell (~user@h87-96-130-155.cust.a3fiber.se)
[18:24:11] *** Quits: yoctocell (~user@h87-96-130-155.cust.a3fiber.se) (Remote host closed the connection)
[18:29:44] *** Joins: max22- (~maxime@2a01cb0883359800ce9ac2b76dc707b2.ipv6.abo.wanadoo.fr)
[18:32:58] *** Joins: vsantana (~Thunderbi@fttx-17713614957.usr.predialnet.com.br)
[19:45:38] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:49:36] *** Quits: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733) (Ping timeout: 272 seconds)
[19:53:54] *** Joins: rockcavera (~rc@192.12.115.201)
[19:53:54] *** Quits: rockcavera (~rc@192.12.115.201) (Changing host)
[19:53:54] *** Joins: rockcavera (~rc@user/rockcavera)
[20:14:52] *** Quits: ploki (~ploki@37.164.139.241) (Quit: Client closed)
[20:49:10] <FromDiscord> <dom96> hm, anybody using --header in Nim to generate headers? Once I add a {.byref.} to one of my types Nim seems to fail to generate that type's {.header.} #include
[20:49:18] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[20:52:34] <FromDiscord> <enthus1ast> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\: when i'm calling processModule and i set up `graph` and `m` like in your hacks, then it does evaluate in its own module right? so it does behave differently than the macro or?
[20:52:58] <FromDiscord> <enthus1ast> the macro expands in place
[20:53:29] <FromDiscord> <enthus1ast> but for the processModule i must get the return code and the params in and out right?
[20:54:18] <FromDiscord> <enthus1ast> what kinda works in my playground code is, when i let a vm callback sets a closure variable, that i then return
[20:54:56] <FromDiscord> <haxscramper> `processModule` acts as if you were supplying new chunks of code in repl
[20:55:17] <FromDiscord> <haxscramper> So yes, it does process everything in one module
[20:55:17] <FromDiscord> <haxscramper> Except for imported stuff that are processed as regular nim code
[20:55:33] <FromDiscord> <enthus1ast> oh pardon i call processModule3
[20:55:35] <FromDiscord> <haxscramper> Yes, macro expands in place when you call it, like any regular nim code
[20:56:19] <FromDiscord> <haxscramper> yes, I know, in the end I just got confused with 1/2/3 as well. But they all act identically
[20:56:33] <FromDiscord> <haxscramper> processModule2 from my very first example does the same
[20:57:11] <FromDiscord> <Ayy Lmao> In reply to @dom96 "hm, anybody using --header": `--header` in the compiler? I'm not seeing that in the docs, what does it do?
[20:57:22] <FromDiscord> <haxscramper> It is deprecatedâ†µ(@Ayy Lmao)
[20:57:25] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/commit/279df834bae8b6972af6cbcbdd57c1d53e1df9c7
[20:57:46] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3w0x
[20:58:04] <FromDiscord> <haxscramper> yes, because you need to do `nkReturnStmt` obviously
[20:58:12] <FromDiscord> <dom96> In reply to @haxscramper "https://github.com/nim-lang/Nim/commit/279df834bae8": ugh
[20:58:16] <FromDiscord> <enthus1ast> `obviously` ;)
[20:58:33] <FromDiscord> <haxscramper> well, I mean it is identical to nim code
[20:58:33] <FromDiscord> <haxscramper> macro code
[20:58:57] <FromDiscord> <haxscramper> so you can use `dumpAstGenRepr` or what it is called
[20:59:01] <FromDiscord> <dom96> Well I submitted https://github.com/nim-lang/Nim/issues/18694 anyway
[20:59:21] <FromDiscord> <haxscramper> and replace literal/ident construction with their more verbose conterpats
[20:59:37] <FromDiscord> <haxscramper> yeah, good idea
[20:59:37] <FromDiscord> <haxscramper> I think hnimast needs pnodeAstGenRepr
[21:00:12] <FromDiscord> <haxscramper> And I should also use `newIf` and other shortcut calls instead of this `nnkIf.newTree()` abomination wherewher possible
[21:01:21] <FromDiscord> <dom96> Guess I'll be hacking around this ugh
[21:01:28] <FromDiscord> <Ayy Lmao> I've been confused about things with FFI for a while. Am I supposed to be relying on having a header to interface with libraries? In c it seems to be possible to get away with not using a header, but c++ appears to be a different story.
[21:01:57] <FromDiscord> <enthus1ast> sent a long message, see https://paste.rs/5c1
[21:02:07] <FromDiscord> <haxscramper> I'm pretty sure you need header to interface with C++ in almost every scenario
[21:02:15] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/lij
[21:03:51] <FromDiscord> <Ayy Lmao> In reply to @haxscramper "I'm pretty sure you": Yeah I'm finding that seems to be the case as I get deeper into it.
[21:04:35] <FromDiscord> <Rika> In reply to @haxscramper "https://github.com/nim-lang/Nim/commit/279df834bae8": why is araq so aggressive?
[21:04:42] <FromDiscord> <Rika> ive always thought about that
[21:07:08] <FromDiscord> <Ayy Lmao> Has anyone gotten pixie to compile for visual studio? I keep getting tons of errors like ` error C2664: 'm128i _mm_loadu_si128(const m128i )': cannot convert argument 1 from 'void ' to 'const m128i '`
[21:08:58] *** Joins: ploki (~ploki@37.164.139.241)
[21:09:52] <FromDiscord> <dom96> sent a code paste, see https://play.nim-lang.org/#ix=3w0B
[21:14:49] *** Quits: ploki (~ploki@37.164.139.241) (Quit: Ping timeout (120 seconds))
[21:15:16] *** Joins: ploki (~ploki@37.164.139.241)
[21:18:15] *** Joins: Mister_Magister (~Mister_Ma@user/mister-magister/x-2636733)
[21:22:10] <FromDiscord> <haxscramper> https://github.com/haxscramper/hack/commit/fe67a0082adda327310d817ac774d6ecc8998789 [enthus1ast](https://matrix.to/#/@sn0re:matrix.code0.xyz)
[21:23:40] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0D
[21:23:59] <FromDiscord> <gerwy> Is devel much faster than stable 1.4.8?
[21:24:25] <FromDiscord> <haxscramper> most likely no
[21:24:31] <FromDiscord> <haxscramper> and "much faster" itself does not really mean anything
[21:25:00] <FromDiscord> <haxscramper> if you are asking about IC - I don't know, but IIRC it is still in experimental/break-everything state
[21:26:15] <FromDiscord> <gerwy> I just have a project and id like to optimize the shit out of it
[21:26:22] <FromDiscord> <gerwy> Im already going with simd
[21:26:43] <FromDiscord> <gerwy> Next step is also using gpu, but i have some issues with that
[21:27:15] <FromDiscord> <haxscramper> then nim devel is unlikely to add anything
[21:28:04] <FromDiscord> <haxscramper> you might also consider closely examining how you handle data, cache etc, before going to GPU, but I'm not really qualified to give any meaningful optimization suggestions
[21:28:45] <FromDiscord> <enthus1ast> yeah also when i do this -\> Error\: 'return' not allowed here
[21:29:05] <FromDiscord> <haxscramper> ah
[21:29:12] <FromDiscord> <haxscramper> yes, 300iq moment
[21:29:20] <FromDiscord> <haxscramper> return needs to be in fucntion
[21:29:21] <FromDiscord> <haxscramper> function
[21:29:48] *** Quits: vrilles (~vrilles@user/aman) (Quit: vrilles)
[21:29:51] <FromDiscord> <haxscramper> try writing `return 12` in toplevel statement in a repl
[21:30:07] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0G
[21:31:24] <FromDiscord> <haxscramper> also this would just be a horrible implementation performance-wise, I think there must be a way to cache sem of the executed call
[21:31:58] <FromDiscord> <enthus1ast> currently performance is my last concern hahaha
[21:32:47] <FromDiscord> <enthus1ast> mh ok so this means i cannot return from there
[21:35:34] <FromDiscord> <enthus1ast> mh i also cannot access the outer scope
[21:35:43] <FromDiscord> <enthus1ast> i think i have a fundamental flaw in my code
[21:42:02] <FromDiscord> <enthus1ast> In case you want to have a look at the hot mess\:â†µâ†µhttps://github.com/enthus1ast/nimja/blob/1ad62023817e87a77ca7d1075a639f0e9b469c57/src/nimja/parser.nim#L400â†µhttps://github.com/enthus1ast/nimja/blob/dynamic/tests/basic/test_dynamic.nim
[21:51:05] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 248 seconds)
[21:59:08] *** Quits: KurtGodel (~AdiIRC@180.150.11.50) (Read error: Connection reset by peer)
[21:59:26] *** Joins: KurtGodel (~AdiIRC@180.150.11.50)
[22:13:58] <FromDiscord> <haxscramper> https://github.com/haxscramper/hack/commit/a1e6341dc5a7f34744682f4b48818c5a68facd0b
[22:13:59] <FromDiscord> <haxscramper> okay, I think it does what you need to do
[22:14:45] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3w0Q
[22:15:04] <FromDiscord> <haxscramper> I returned `processModule2()` that takes stream because it is easier to write test examples this way
[22:16:22] *** Quits: max22- (~maxime@2a01cb0883359800ce9ac2b76dc707b2.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[22:17:18] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0R
[22:17:54] <FromDiscord> <haxscramper> I used your exampel
[22:17:55] <FromDiscord> <haxscramper> `        parseNode(graph, m, llStreamOpen("templateExecutedInVm()"))` is your implementation code, it calls into macro/template that is expanded in VM
[22:17:57] <FromDiscord> <Chiggy> sent a code paste, see https://play.nim-lang.org/#ix=3w0S
[22:18:11] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0T
[22:18:37] <FromDiscord> <gerwy> In reply to @haxscramper "you might also consider": Well yeah im already doing few thingsâ†µI could try to work with one buffer instead of two buffers in game of life, two speed things up im swapping their pointers instead of swapping data
[22:19:00] <FromDiscord> <haxscramper> Right now, there is still a bug where repeated calls to `runtimeImplBody()` does not return correct resutls
[22:19:00] <FromDiscord> <haxscramper> But internal logic functions fine
[22:19:31] <FromDiscord> <gerwy> And i will involve simd to it too, with 8 cells 1-bit data i should be able to compute like 32 of cells at the same time
[22:20:07] <FromDiscord> <haxscramper> [enthus1ast](https://matrix.to/#/@sn0re:matrix.code0.xyz)\:
[22:20:10] <FromDiscord> <enthus1ast> yes
[22:24:36] <FromDiscord> <Ayy Lmao> What's the best way to go from an utf16 encoded int to a string? Casting to a Rune seems to work ok but I'm not sure if it's right.
[22:25:34] <FromDiscord> <enthus1ast> thank you [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)
[22:32:27] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0Y
[22:35:56] <FromDiscord> <Chiggy> In reply to @haxscramper "You can directly access": Oh thats cool. And one more thing, how can I find out the index, if I have an object? (I got this object via sugar collect)
[22:36:02] <FromDiscord> <Chiggy> (edit) "an object?" => "a node?"
[22:36:11] <FromDiscord> <Chiggy> (edit) "node?" => "json?"
[22:37:08] *** Joins: vicfred (~vicfred@user/vicfred)
[22:37:13] <FromDiscord> <haxscramper> Not sure what do you mean by "find index". You can search in json array with `std/sequtils.findIt`, or something like that
[22:39:18] <FromDiscord> <Chiggy> In reply to @haxscramper "Not sure what do": Like, if my array is like `[ {'a':1} , {'b':2}]` and I already have the `{'b':2}` element, how can I get its index, so I can delete it?
[22:39:26] <FromDiscord> <Chiggy> thats what I meant
[22:39:47] <FromDiscord> <enthus1ast> you cant, you ,ust search for it or loop through the array with pairs()
[22:40:03] <FromDiscord> <enthus1ast> you cant, you must search for it or loop through the array with pairs()
[22:40:13] <FromDiscord> <Chiggy> oh
[22:40:31] <FromDiscord> <enthus1ast> how do you got the element in the first place?
[22:40:50] <FromDiscord> <Chiggy> using the collect macro
[22:42:32] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3w0Z
[22:42:34] <FromDiscord> <haxscramper> I forgot there is no `findIt` in stdlib
[22:43:04] <FromDiscord> <enthus1ast> then i would use .pairs() , identify the element, store the index somewhere, then after the loop delete it
[22:44:15] <FromDiscord> <enthus1ast> yes \: )
[22:47:46] <FromDiscord> <Chiggy> ok this is weird, but I was just typing find, and vscode intellisense got me this, and it seems to work? https://media.discordapp.net/attachments/371759389889003532/876167729822969856/unknown.png
[22:49:37] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/876168195365535804/unknown.png
[22:50:42] <FromDiscord> <enthus1ast> yes when you want to loop a second time, this works
[22:50:53] <FromDiscord> <Chiggy> huh?
[22:51:03] *** Joins: max22- (~maxime@2a01cb08833598007b294824358e8e13.ipv6.abo.wanadoo.fr)
[22:51:32] <FromDiscord> <enthus1ast> when you have the index during a collect, you can store it, and delete it. Then find does not have to loop over the seq again
[22:52:03] <FromDiscord> <Chiggy> hmm thats true
[22:52:45] <FromDiscord> <enthus1ast> but you cant delete during iterating, so this must be done afterwards
[22:53:55] <FromDiscord> <enthus1ast> but find also does only find the first
[22:54:14] <FromDiscord> <enthus1ast> it might not be the element you want to delete (if you have multiple of them)
[22:54:54] <FromDiscord> <Chiggy> am gonna be honest and just say, I am actually very new to nim, but I have been trying to read the docs and the tutorials. I am an intermediate python guy, who wanted to optimize some code.
[22:55:12] <FromDiscord> <Chiggy> In reply to @enthus1ast "it might not be": btw yes I only have 1 occurence
[22:55:22] *** Quits: ploki (~ploki@37.164.139.241) (Quit: Client closed)
[22:59:06] <FromDiscord> <Chiggy> Ok I am confused. Whats wrong here? â†µ`gt_raw_data` is an array of json and so is `old_players_gts`.  I got both by using `parseJson(string)` proc. https://media.discordapp.net/attachments/371759389889003532/876170580443934730/unknown.png
[23:02:30] <FromDiscord> <Chiggy> Um, anyone?
[23:03:34] <FromDiscord> <enthus1ast> mh
[23:03:50] <FromDiscord> <enthus1ast> sure that old\_player\_gts is not a string?
[23:04:33] <FromDiscord> <Chiggy> Yeah
[23:04:44] <FromDiscord> <Chiggy> can I somehow echo the type during runtime
[23:04:47] <FromDiscord> <Chiggy> that would confirm
[23:05:11] <FromDiscord> <dom96> https://nim-lang.org/docs/json.html#pairs.i%2CJsonNode
[23:05:16] <FromDiscord> <dom96> idx is the key
[23:05:40] <FromDiscord> <enthus1ast> ah did not know this
[23:06:22] <FromDiscord> <Chiggy> wait but its an array of jsonNodes, so uh, what will the value of key
[23:08:10] <FromDiscord> <dom96> you'll get a runtime error
[23:08:19] <FromDiscord> <Chiggy> I did
[23:08:20] <FromDiscord> <Chiggy> lol
[23:08:28] <FromDiscord> <Chiggy>  https://media.discordapp.net/attachments/371759389889003532/876172942600450128/unknown.png
[23:08:45] <FromDiscord> <Chiggy> In reply to @Chiggy "can I somehow echo": .
[23:10:35] <FromDiscord> <Chiggy> so `typeof(old_players_gts)` gives `JsonNode`
[23:10:54] <FromDiscord> <Chiggy> I am confused right now
[23:11:20] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3w13
[23:14:20] <FromDiscord> <Chiggy> sent a code paste, see https://play.nim-lang.org/#ix=3w14
[23:15:24] <FromDiscord> <enthus1ast> but it looks a little complicated, maybe keep it simple, if you do not have so many elements in the list, then the find options could be good/fast
[23:16:49] <FromDiscord> <Chiggy> In reply to @enthus1ast "but it looks a": just shy of 43k elements
[23:17:22] <FromDiscord> <enthus1ast> ok maybe little optimization could not hurt here \:)
[23:17:34] <FromDiscord> <Chiggy> Yeah
[23:17:46] <FromDiscord> <Chiggy> the part of code I am writing took 2 seconds in python
[23:18:19] <FromDiscord> <Chiggy> lets see how long it will take in nim
[23:20:32] <FromDiscord> <enthus1ast> if you just want to delete them from the list then you could also use filterIt
[23:21:44] <FromDiscord> <Chiggy> rn the del works pretty well, but I think I will be needing the filter function later on since I use `filter()` function in my python code
[23:22:56] <FromDiscord> <enthus1ast> or, even build a table or a hashset first, delete the ones you wanto to delete, depending on the size of  gt\_raw\_data and old\_players\_gts
[23:23:04] <FromDiscord> <enthus1ast> if both are relly big, this explodes
[23:23:19] <FromDiscord> <enthus1ast> and transform the hashset into seq (if you need to)
[23:23:20] <FromDiscord> <Chiggy> gt_raw_data size is not fixed
[23:23:30] <FromDiscord> <Chiggy> but old players will just keep on increasing each time the code runs
[23:23:50] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/876176616030634055): if both are really big, this explodes
[23:24:13] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/876176679997964358): then transform the hashset into seq (if you need to)
[23:24:16] <FromDiscord> <Chiggy> what does explode mean here?
[23:24:27] <FromDiscord> <Chiggy> like really good for performance and speed?
[23:24:56] *** Quits: notchris (sid181145@id-181145.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:25:02] <FromDiscord> <Chiggy> and also, why do people talk with webhooks?
[23:25:05] <FromDiscord> <Chiggy> (edit) "webhooks?" => "webhooks in hee?"
[23:25:07] <FromDiscord> <Chiggy> (edit) "hee?" => "here?"
[23:25:12] <FromDiscord> <enthus1ast> i mean when your outer loop contains 40k elems and every loop iteration it has to also loop through 40k elements of the inner loop
[23:26:01] <FromDiscord> <Chiggy> In reply to @Chiggy "like really good for": .
[23:26:26] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) (Ping timeout: 258 seconds)
[23:26:33] <FromDiscord> <enthus1ast> then it might be better to build a hashset, then exlude the items, then build a seq out of the hashset again
[23:27:03] *** Quits: euantorano (sid180289@id-180289.brockwell.irccloud.com) (Ping timeout: 276 seconds)
[23:28:27] *** Quits: LyndsySimon (sid34452@id-34452.tooting.irccloud.com) (Ping timeout: 252 seconds)
[23:28:39] *** Joins: ormiret (sid314108@tooting.irccloud.com)
[23:28:42] <FromDiscord> <Chiggy> that sounds complex ngl
[23:29:44] *** Joins: euantorano (sid180289@brockwell.irccloud.com)
[23:30:21] *** Joins: LyndsySimon (sid34452@id-34452.tooting.irccloud.com)
[23:31:34] *** Joins: notchris (sid181145@stonehaven.irccloud.com)
[23:34:51] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/ahp
[23:34:54] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[23:35:01] <FromDiscord> <enthus1ast> the hash solution is very fast
[23:35:43] <FromDiscord> <Chiggy> outer is just a sequence that contains 1,2,3, ... 39,999, 40k ?
[23:35:51] <FromDiscord> <enthus1ast> yeah
[23:35:56] <FromDiscord> <enthus1ast> in this example
[23:36:04] <FromDiscord> <Chiggy> yeah
[23:36:35] <FromDiscord> <enthus1ast> so after the excl call, outerHash does not contains elements from the innerHash set
[23:36:59] <FromDiscord> <Chiggy> basically like set difference?
[23:37:04] <FromDiscord> <enthus1ast> yes
[23:37:15] <FromDiscord> <enthus1ast> ehm
[23:37:17] <FromDiscord> <enthus1ast> kindof
[23:37:47] <FromDiscord> <enthus1ast> so depending on your data and what you wanna do i would consider this
[23:38:16] <FromDiscord> <Chiggy> Do you know python
[23:38:17] <FromDiscord> <enthus1ast> or with a table where the key is eg. playername
[23:38:56] <FromDiscord> <enthus1ast> yes
[23:41:12] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[23:41:26] <FromDiscord> <Chiggy> ok give me 5 minutes then
[23:41:59] <FromDiscord> <enthus1ast> i have to go drinking, you know germans like to drink \:)
[23:45:23] <FromDiscord> <Chiggy> you there or did you go
[23:45:46] <FromDiscord> <enthus1ast> here
[23:46:06] <FromDiscord> <Chiggy> <https://gist.github.com/Chiggy-Playz/09daa4563f5b7dd0275d92ffbefef60e> check this. I tried to tell what variable is supposed to contain what data
[23:47:50] <FromDiscord> <Chiggy> the issue in my python code begins at line 60. Its just, too unoptimized /  slow. And I told you the number of rows in old_gt_data keeps on increasing. So the time taken to run my py code also increases. My target is around 30 seconds. When I ran the code for the first time, it ran in 8 seconds. Pretty good I would say. Then it has increased to 90 seconds.
[23:49:46] <FromDiscord> <Chiggy> after seeing my coding and figuring out how it works, would hash table be a good way? I just want it to be fast af. Since the code is supposed to run every minute
[23:56:01] <FromDiscord> <Chiggy> Lol you going through it right now or?
[23:56:16] <FromDiscord> <Chiggy> coz I am sorta waiting on you to know your opinion so I could advance
