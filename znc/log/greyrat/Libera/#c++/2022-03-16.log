[00:01:57] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:02:12] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:03:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:07:30] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 252 seconds)
[00:08:18] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:12:40] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 250 seconds)
[00:14:40] *** Joins: Enitin (~Enitin@82.180.145.228)
[00:15:50] *** Quits: TSDXIII (~TSDXIII@188.168.50.119) (Quit: Leaving)
[00:16:08] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:08] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:22] *** Joins: sobkas (~sobkas@95.175.17.217)
[00:16:23] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[00:16:23] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:16:24] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:16:32] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[00:21:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:22:43] *** Joins: TSDXIII (~TSDXIII@188.168.50.119)
[00:24:36] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[00:25:45] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:25:45] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:27:17] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[00:27:52] *** Parts: jplejacq (~jplejacq@68.71.169.160) (Leaving.)
[00:29:48] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[00:33:48] *** Quits: Guest7359 (~Guest@host242.190-139-77.telecom.net.ar) (Remote host closed the connection)
[00:33:53] *** Quits: magla (~gelignite@d536591f.access.ecotel.net) (Quit: Stay safe!)
[00:33:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 252 seconds)
[00:35:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:35:42] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[00:36:30] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[00:36:58] *** Joins: kevr (~kevr@user/kevr)
[00:37:34] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:f470:9081:bd76:4326)
[00:39:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[00:40:37] *** Quits: Fairy (~Fairy@2001:464a:4992:0:5c5f:ad85:d2cd:496f) (Ping timeout: 240 seconds)
[00:42:19] *** Quits: Giovanni (~Giovanni@176.219.119.243) (Ping timeout: 250 seconds)
[00:42:34] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[00:43:48] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5) (Ping timeout: 240 seconds)
[00:49:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:51:51] *** Joins: Kerr (~Kerr@2601:602:ce80:df10::b76e)
[00:51:53] *** Joins: Guest54 (~Guest54@2620:10d:c092:400::4:755a)
[00:52:14] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[00:54:14] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[00:54:44] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Quit: Leaving)
[00:55:05] *** Joins: mags_ (~mags@096-042-013-246.res.spectrum.com)
[00:56:05] *** Quits: mags_ (~mags@096-042-013-246.res.spectrum.com) (Client Quit)
[00:58:15] *** Inline__ is now known as Inline
[00:59:01] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66009957729108fab4e2.ipv6.abo.wanadoo.fr)
[01:05:55] *** Joins: thedude (~thedude@096-042-013-246.res.spectrum.com)
[01:05:57] *** Quits: thedude (~thedude@096-042-013-246.res.spectrum.com) (Client Quit)
[01:06:53] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[01:06:53] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[01:08:18] *** Joins: thedude (~thedude@096-042-013-246.res.spectrum.com)
[01:11:05] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[01:11:30] *** Quits: thedude (~thedude@096-042-013-246.res.spectrum.com) (Client Quit)
[01:12:29] *** Joins: guest283 (~guest283@096-042-013-246.res.spectrum.com)
[01:12:29] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:14:14] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d5:1441:6595:2578) (Quit: Konversation terminated!)
[01:14:14] *** Quits: guest283 (~guest283@096-042-013-246.res.spectrum.com) (Client Quit)
[01:14:43] *** Joins: guest283 (~guest283@096-042-013-246.res.spectrum.com)
[01:15:23] *** Quits: joomla9 (uid543104@id-543104.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:21:07] *** Joins: badone (~badone@209.132.189.152)
[01:21:41] *** Quits: guest283 (~guest283@096-042-013-246.res.spectrum.com) (Quit: leaving)
[01:21:55] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:25:54] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com) (Ping timeout: 250 seconds)
[01:26:03] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[01:26:22] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[01:27:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[01:30:55] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:30:55] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:32:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:35:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:37:10] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 250 seconds)
[01:37:44] *** Joins: Enitin (~Enitin@82.180.145.223)
[01:38:10] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Quit: leaving)
[01:38:25] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:38:42] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[01:38:43] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a0f7-4a6c-9396-dfff.res6.spectrum.com)
[01:39:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:40:33] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Client Quit)
[01:40:52] *** Joins: guest2583 (~guest2583@096-042-013-246.res.spectrum.com)
[01:41:14] *** Quits: guest2583 (~guest2583@096-042-013-246.res.spectrum.com) (Client Quit)
[01:42:48] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[01:43:11] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[01:43:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:44:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:44:02] *** ChanServ sets mode: +v npaperbot
[01:44:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:44:58] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[01:45:14] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[01:46:37] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[01:49:17] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:52:31] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[01:55:29] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[01:58:12] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[02:00:06] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:01:55] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[02:02:06] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[02:03:00] *** Quits: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[02:03:55] *** Joins: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net)
[02:11:57] *** Joins: nshire (~nshire@user/nshire)
[02:12:20] *** Quits: TSDXIII (~TSDXIII@188.168.50.119) (Read error: Connection reset by peer)
[02:12:38] *** Joins: TSDXIII (~TSDXIII@188.168.50.119)
[02:13:08] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 250 seconds)
[02:15:05] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:15:17] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:15:36] *** Joins: Betal (~Betal@user/betal)
[02:20:04] *** Joins: TapewormFromUran (~TapewormF@188.168.50.119)
[02:20:31] *** Quits: TSDXIII (~TSDXIII@188.168.50.119) (Quit: Leaving)
[02:23:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:25:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[02:29:48] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:30:25] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[02:30:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:32:10] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[02:32:46] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[02:32:48] *** Quits: pizdets (~pizdets@183.182.110.208) (Ping timeout: 265 seconds)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.115.244)
[02:33:48] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[02:36:07] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:39:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:41:47] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:755a) (Quit: Client closed)
[02:42:37] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:05] *** Joins: abode_ (~abode@2.51.240.182)
[02:44:55] *** Quits: TapewormFromUran (~TapewormF@188.168.50.119) (Quit: Leaving)
[02:45:25] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[02:45:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:46:50] *** Quits: abode (~abode@2001:8f8:1263:8366:8230:49ff:fe6e:36b5) (Ping timeout: 260 seconds)
[02:48:43] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:48:43] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:51:53] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[02:58:50] *** Quits: kilian (~kilian@2a03:4000:33:556:1812:cff:fefe:9efd) (Quit: WeeChat 2.1)
[02:59:08] *** Joins: lnslbrty (~NULL@user/lnslbrty)
[02:59:11] *** Quits: andreasbuhr (~quassel@p549db53a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:01:20] *** Joins: Brainium (~brainium@user/brainium)
[03:08:38] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:08:48] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:21:22] *** Joins: ymwm (~yingmanwu@110.85.123.64)
[03:21:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:22:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:29:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:29:28] *** Joins: namkeleser (~namkelese@125.7.37.86)
[03:30:18] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:34:37] *** Quits: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[03:35:01] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:36:35] *** Joins: veverak (~veverak@89.102.98.161)
[03:36:39] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:39:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:44:12] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 252 seconds)
[03:46:21] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[03:47:52] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[03:50:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:52:48] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[03:53:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:54:18] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:55:16] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:55:16] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:55:29] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[03:55:30] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:57:07] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[03:58:00] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:58:36] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[03:59:16] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[04:00:49] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[04:02:47] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:02:47] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:06:47] *** Joins: xkuru (~xkuru@user/xkuru)
[04:08:25] *** Joins: x_kuru (~xkuru@user/xkuru)
[04:10:09] *** Quits: InPhase (~InPhase@openscad/inphase) (Quit: rebooting)
[04:11:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[04:11:29] *** Joins: InPhase (~InPhase@openscad/inphase)
[04:11:53] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 268 seconds)
[04:12:03] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[04:13:32] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[04:14:47] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:15:25] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[04:15:46] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 250 seconds)
[04:16:45] *** Quits: Kerr (~Kerr@2601:602:ce80:df10::b76e) (Quit: Client closed)
[04:20:55] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[04:21:11] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:21:24] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[04:23:18] *** Quits: nostar (~nostar@68.51.221.108) (Remote host closed the connection)
[04:24:19] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[04:24:21] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[04:26:11] *** Joins: markmark (~mark@user/markmarkmark)
[04:26:23] *** Quits: markmark (~mark@user/markmarkmark) (Client Quit)
[04:26:43] *** Joins: markmark (~mark@user/markmarkmark)
[04:29:00] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:29:23] *** Quits: markmarkmark (~mark@user/markmarkmark) (Quit: WeeChat 2.9)
[04:33:10] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[04:34:15] *** Quits: proller (~p@2a02:6b8:b081:26::1:13) (Ping timeout: 252 seconds)
[04:34:31] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[04:36:01] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Ping timeout (120 seconds))
[04:36:26] *** markmark is now known as markmarkmark
[04:37:01] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:37:55] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[04:38:22] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[04:40:16] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[04:40:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:42:33] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:44:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[04:44:50] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:49:08] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 250 seconds)
[04:51:36] *** Joins: rgrinberg (~textual@177.244.18.30)
[04:54:15] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:56:39] *** Joins: frost (~frost@user/frost)
[04:56:39] *** Joins: pulse (~pulse@user/pulse)
[04:57:40] *** Quits: syrius_ (syrius@titan.stormtek.net) (Ping timeout: 272 seconds)
[04:57:54] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:00:23] *** Quits: rb (~augh@alogs.space) (Remote host closed the connection)
[05:01:16] *** Joins: proller (~p@2a02:6b8:b081:15::1:2b)
[05:01:37] *** Joins: rwb (~augh@alogs.space)
[05:03:40] *** Joins: syrius (syrius@titan.stormtek.net)
[05:04:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:05:42] *** Joins: CormacAttack (~mac@144.62.85.200)
[05:07:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[05:11:29] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:11:29] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:11:42] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[05:11:44] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[05:18:09] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:18:09] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:20:25] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 256 seconds)
[05:27:08] *** Joins: Kerr (~Kerr@2601:602:ce80:df10::b76e)
[05:30:18] *** Quits: llh (~UPP@user/llh) (Ping timeout: 250 seconds)
[05:36:57] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 252 seconds)
[05:37:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:38:36] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[05:41:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[05:43:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:43:56] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:44:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:44:02] *** ChanServ sets mode: +v npaperbot
[05:46:55] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[05:49:37] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 240 seconds)
[05:56:30] *** Joins: syrius (syrius@titan.stormtek.net)
[05:57:30] *** Joins: ferdna (~ferdna@user/ferdna)
[05:59:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:02:26] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[06:06:06] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 252 seconds)
[06:06:06] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66009957729108fab4e2.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[06:06:57] *** Joins: syrius (syrius@titan.stormtek.net)
[06:09:43] *** Quits: clime (~clime@89-24-57-215.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[06:10:04] *** Quits: nshire (~nshire@user/nshire) (Quit: Leaving)
[06:10:24] *** Joins: Inline__ (~Inline@p200300cd470a26002e72b25ea400e9f0.dip0.t-ipconnect.de)
[06:12:57] *** Quits: Inline (~Inline@p200300cd470cd6007b9a329b320e25d9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:19:38] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[06:23:10] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:25:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[06:26:10] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[06:30:33] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[06:30:41] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:32:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:32:34] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[06:38:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:39:56] *** Joins: zer0x (~zer0x@1.55.211.113)
[06:41:53] *** Quits: CormacAttack (~mac@144.62.85.200) (Quit: WeeChat 3.4)
[06:42:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[06:48:49] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:51:46] *** Quits: emerent (~quassel@p200300cd5743c35fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:52:05] *** Joins: emerent (~quassel@p200300cd5743c36fba27ebfffed28a59.dip0.t-ipconnect.de)
[06:57:38] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[06:58:23] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[06:59:32] *** Joins: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[07:04:54] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:06:45] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:09:24] *** Quits: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Ping timeout: 240 seconds)
[07:17:45] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:18:16] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:19:19] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[07:20:10] *** Joins: noarb (~noarb@user/noarb)
[07:20:22] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:21:06] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[07:23:30] *** Joins: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a)
[07:24:16] *** Joins: noarb (~noarb@user/noarb)
[07:29:47] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:30:12] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:31:51] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[07:36:32] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Client Quit)
[07:37:33] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[07:39:08] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:42:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[07:44:33] *** Quits: caramel_ (~caramel@user/caramel) (Ping timeout: 252 seconds)
[07:47:20] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:2c82:d072:775d:d666:396a:a209)
[07:48:56] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[07:52:38] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:52:52] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 250 seconds)
[07:53:07] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:54:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[07:57:45] *** Joins: rgrinberg (~textual@177.244.18.30)
[08:05:28] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[08:11:08] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:11:19] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 256 seconds)
[08:13:07] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[08:21:00] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[08:21:00] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[08:21:00] *** Joins: blinky42 (~quassel@user/blinky42)
[08:21:26] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[08:23:35] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 252 seconds)
[08:23:48] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[08:25:49] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[08:26:43] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:27:00] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[08:31:23] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:32:31] *** Quits: sreve (~quassel@p4ff44c9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:32:34] *** Joins: sreve_ (~quassel@p549d70f6.dip0.t-ipconnect.de)
[08:32:51] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[08:32:52] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:33:35] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:34:15] *** Joins: Giovanni (~Giovanni@176.54.32.122)
[08:36:29] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[08:38:22] *** Quits: Giovanni (~Giovanni@176.54.32.122) (Remote host closed the connection)
[08:38:58] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:39:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:43:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:55:10] *** Joins: caramel (~caramel@user/caramel)
[08:55:30] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[08:57:05] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[08:57:31] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:57:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:58:30] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:2c82:d072:775d:d666:396a:a209) (Quit: Leaving)
[09:00:12] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:03:12] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:04:17] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[09:05:33] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[09:07:14] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[09:10:10] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[09:17:42] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[09:18:47] *** Joins: Atque (~Atque@user/atque)
[09:21:46] *** Joins: savolla (~quassel@84.44.28.28)
[09:22:37] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Quit: Leaving)
[09:24:39] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[09:26:17] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[09:29:31] *** Quits: savolla (~quassel@84.44.28.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:35:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138)
[09:38:22] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[09:39:55] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[09:40:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:42:02] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[09:43:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:43:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:44:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:44:03] *** ChanServ sets mode: +v npaperbot
[09:45:13] *** Joins: tapeworm (~tapeworm@188.168.50.119)
[09:47:40] *** Joins: Electron (~ElectronA@user/electronapps)
[09:49:12] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[09:50:29] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Ping timeout: 256 seconds)
[09:51:20] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:54:40] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[09:55:25] *** Joins: teepee (~teepee@openscad/teepee)
[10:03:26] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[10:06:20] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 250 seconds)
[10:06:42] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:08:04] *** Quits: zer0x (~zer0x@1.55.211.113) (Ping timeout: 250 seconds)
[10:21:34] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:21:51] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 252 seconds)
[10:22:39] *** Joins: Enitin (~Enitin@82.180.145.227)
[10:26:57] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Ping timeout: 240 seconds)
[10:27:17] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[10:32:39] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:33:12] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[10:33:47] *** Quits: namkeleser (~namkelese@125.7.37.86) (Ping timeout: 256 seconds)
[10:34:11] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[10:35:17] *** Quits: Electron (~ElectronA@user/electronapps) (Ping timeout: 240 seconds)
[10:36:52] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[10:37:15] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 252 seconds)
[10:38:05] *** Joins: Enitin (~Enitin@82.180.145.226)
[10:39:49] *** Joins: JohnMS_AWAY (~kvirc@194.110.240.100)
[10:41:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:44:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:44:24] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[10:47:03] *** Joins: ymwm_ (~yingmanwu@110.85.123.64)
[10:49:54] *** Quits: ymwm (~yingmanwu@110.85.123.64) (Ping timeout: 252 seconds)
[10:53:37] *** Quits: Kerr (~Kerr@2601:602:ce80:df10::b76e) (Ping timeout: 256 seconds)
[10:59:56] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[11:00:10] *** Joins: rvalue (~rvalue@user/rvalue)
[11:01:31] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[11:03:15] *** Quits: rg (~r-g@gateway/tor-sasl/r-g) (Ping timeout: 240 seconds)
[11:04:57] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[11:05:30] *** Joins: evangeline (~Eleanor@178.79.105.181)
[11:06:25] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[11:08:21] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:09:00] *** Joins: Enitin (~Enitin@82.180.145.225)
[11:11:21] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[11:13:04] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.143)
[11:14:22] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.143) (Max SendQ exceeded)
[11:14:51] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.23)
[11:15:33] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4.1)
[11:16:03] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.23) (Max SendQ exceeded)
[11:16:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.143)
[11:21:48] *** Joins: hachikuji[m] (~hachikuji@2001:470:69fc:105::1:dc1a)
[11:21:48] *** Joins: zer0x (~zer0x@1.55.211.113)
[11:23:03] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:26:46] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:26:49] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:30:38] *** Joins: jancoow (~jancoow@user/jancoow)
[11:30:54] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:795e:a75c:8fe1:c5f2)
[11:31:09] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[11:34:18] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:34:36] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 240 seconds)
[11:36:39] *** Quits: caramel (~caramel@user/caramel) (Quit: Leaving)
[11:36:45] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[11:41:09] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:41:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:41:51] *** Joins: caramel (~caramel@user/caramel)
[11:44:26] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:45:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[11:45:17] *** Joins: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6)
[11:47:50] *** Quits: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6) (Remote host closed the connection)
[11:47:58] *** Joins: andreasbuhr (~quassel@p549db9c0.dip0.t-ipconnect.de)
[11:48:24] *** Joins: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6)
[11:49:50] *** Quits: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6) (Remote host closed the connection)
[11:50:18] *** Joins: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6)
[11:50:38] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[11:51:50] *** Quits: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6) (Remote host closed the connection)
[11:52:18] *** Joins: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6)
[12:01:20] *** gentooclimax is now known as climax
[12:02:06] *** climax is now known as gentooclimax
[12:03:26] *** Joins: Kerr (~Kerr@2601:602:ce80:df10::b76e)
[12:03:53] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[12:04:56] *** Joins: ivii (~ivan@user/ivii)
[12:05:06] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[12:06:51] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:11:30] *** Joins: xkuru (~xkuru@user/xkuru)
[12:12:51] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[12:13:07] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:13:12] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:13:42] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[12:13:48] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[12:15:53] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[12:20:14] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[12:21:15] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:22:59] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Client Quit)
[12:23:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl)
[12:28:41] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:30:55] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:31:54] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:35:50] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[12:35:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:36:21] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[12:38:10] *** Quits: martiert_work (~martiert_@2001:420:44c1:2617:a6ae:11ff:fe11:bb70) (Ping timeout: 268 seconds)
[12:39:18] *** Quits: C-Man (~C-Man@78.31.190.82) (Ping timeout: 250 seconds)
[12:40:19] *** Joins: x_kuru (xkuru@user/xkuru)
[12:40:41] *** Quits: abode_ (~abode@2.51.240.182) (Remote host closed the connection)
[12:42:13] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:42:44] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4.1)
[12:42:45] *** Joins: v4mp (~v4mp@user/v4mp)
[12:44:07] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[12:45:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:46:56] *** Quits: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[12:47:06] *** Joins: Furai (~Furai@furai.pl)
[12:47:07] *** Joins: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de)
[12:53:01] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 240 seconds)
[12:54:15] *** gentooclimax is now known as climax
[12:55:12] *** climax is now known as gentooclimax
[12:55:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:56:38] *** Joins: Enitin (~Enitin@82.180.145.226)
[13:12:46] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[13:14:12] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:15:32] *** Joins: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse)
[13:17:33] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:17:33] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:18:57] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 252 seconds)
[13:20:57] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:2083:aeda:2f62:4140:50c2:58b8)
[13:21:08] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[13:29:30] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[13:39:31] *** Joins: Guest1637 (~martiert_@2001:420:44c1:2617:cbd6:972c:422:e9e3)
[13:42:14] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (Quit: ...)
[13:42:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:43:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:44:05] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:44:05] *** ChanServ sets mode: +v npaperbot
[13:44:11] *** Joins: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se)
[13:44:18] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[13:45:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[13:47:15] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:49:24] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:55:04] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[13:55:31] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 256 seconds)
[13:56:56] *** Joins: unknow (~i.am@user/marlboro)
[13:57:01] *** gentooclimax is now known as climax
[14:01:25] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[14:03:55] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:08:31] *** Joins: Posterdati (~posterdat@user/Posterdati)
[14:09:17] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[14:16:20] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:29:22] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:30:53] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[14:32:00] *** Joins: nwulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:32:38] *** Joins: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:cd3f:3878:6759:a1f0)
[14:33:00] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[14:34:57] <ville> you know what should have been part of the standard library from day one? a parser for the language. that seems like a pretty good rule for any general purpose language
[14:35:00] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:2083:aeda:2f62:4140:50c2:58b8) (Ping timeout: 250 seconds)
[14:36:19] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[14:37:36] *** Quits: j0hn_mc_clane (~j0hn_mc_c@84.198.240.138) (Ping timeout: 252 seconds)
[14:38:06] *** Joins: Markow (~Markow@176.122.215.103)
[14:39:34] <hachikuji[m]> and it would be as awful as most things in STL and you'd have to write one yourself anyway
[14:41:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:41:50] <PJBoy> hah
[14:42:31] <PJBoy> also GCC and MSVC would make their own extensions to the grammar anyway
[14:43:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:43:13] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[14:43:14] *** Joins: constxd (~brad@142.134.78.128)
[14:43:17] <constxd> kings
[14:43:31] <constxd> is it possible to call a static method on an inomplete class type
[14:44:24] <PJBoy> an incomplete class is one where the class isn't defined yet, so there are no static member functions to call
[14:44:41] <constxd> hmm
[14:44:55] <constxd> the method i want to be able to call is defined in a parent class
[14:45:17] <constxd> i was hoping there was a way to declare a class that derives from another one, but not specify anything else about it
[14:46:03] <constxd> like class A : public B; and then call A::SomeMethodFromB();
[14:46:23] <anyone> what if you later have class A : public B { void SomeMethodFromB(); }, then you're fucked
[14:46:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:47:06] <constxd> ok
[14:47:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[14:48:29] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[14:48:31] <constxd> right now in A.h i have class A : public B { /* uses some types defined in foo.h */ }
[14:48:49] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[14:48:57] <constxd> the problem is A.h gets included in a lot of places but i don't want foo.h to get included there
[14:48:58] *** Quits: Shell (~shell@user/shell) (Quit: ZNC 1.8.2 - https://znc.in)
[14:49:04] <anyone> then use some pimpl mechanism
[14:49:39] <constxd> ok
[14:49:46] <constxd> gotta change a lot of . to ->
[14:49:52] <constxd> was hoping there was a nicer way
[14:50:21] *** Joins: tradar (~tradar@user/tradar)
[14:51:32] <anyone> use more references
[14:51:58] *** Joins: Shell (~shell@user/shell)
[14:53:23] <PJBoy> use modules <_<
[14:54:51] * hachikuji[m] uploaded an image: (57KiB) < https://libera.ems.host/_matrix/media/r0/download/midov.pl/AMKHjjIflBHFwRhAQbqyesqP/image.png >
[14:54:53] <hachikuji[m]> just 5 more years
[14:58:45] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 256 seconds)
[14:59:06] <hachikuji[m]> I hope they will at least integrate to cmake nicely when it finally happens and people start adopting it
[14:59:18] *** Joins: Enitin (~Enitin@82.180.145.223)
[14:59:56] *** Quits: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:cd3f:3878:6759:a1f0) (Remote host closed the connection)
[15:00:15] *** Joins: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:d01:f723:a859:5382)
[15:03:39] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[15:04:13] *** Quits: ironman (~ironman@2405:201:1010:b033:b90c:86ca:3fd:ed2a) (Quit: Leaving)
[15:04:59] *** Quits: BluesBoy (~bboy@user/bluesboy) (Quit: leaving)
[15:06:56] *** climax is now known as gentooclimax
[15:07:15] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 250 seconds)
[15:11:27] *** Quits: JohnMS_AWAY (~kvirc@194.110.240.100) (Ping timeout: 256 seconds)
[15:12:06] *** Quits: tradar (~tradar@user/tradar) (Remote host closed the connection)
[15:12:25] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[15:12:49] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:13:55] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[15:13:59] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[15:14:26] *** Joins: Guest5497 (~Guest54@2620:10d:c092:400::4:3a1c)
[15:15:11] *** Joins: undephin3d (~undephin3@158.181.72.102)
[15:16:57] *** gentooclimax is now known as climax
[15:18:20] *** Joins: daswf852 (~daswf852@user/daswf852)
[15:18:49] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:18:49] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:20:51] *** Joins: cnihelton (~cnihelton@2804:431:c7f1:71ba:101e:e464:f430:e831)
[15:21:24] *** Quits: proller (~p@2a02:6b8:b081:15::1:2b) (Ping timeout: 240 seconds)
[15:22:42] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 252 seconds)
[15:24:41] <ville> yes whilst it wouldn't necessarily beat any speed contests, it would have at least give the programmers the ability to work with their own language properly. certainly on the feature list of new languages worth considering for me
[15:24:50] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[15:26:12] <hachikuji[m]> in C++ that's done in form of templates
[15:28:40] <hachikuji[m]> they're maybe not as strong as LISP macros but they get the job done in most cases
[15:29:55] *** Joins: JohnMS_AWAY (~kvirc@89-64-70-205.dynamic.chello.pl)
[15:30:08] *** Joins: yhirose3 (~yhirose3@user/yhirose3)
[15:30:24] <bpalmer> It's nice that it's easy to make tooling for languages like go or java (both of which include a parser for their own grammars), but I don't see why it's particularly useful in a language.
[15:31:08] <bpalmer> external tooling is just that; you need to have something like macros to fundamentally change the language. And they don't need to actually parse the code.
[15:32:24] <ville> bpalmer: yes in a non-trivial project you may wish to write code generation tools
[15:32:51] <hachikuji[m]> but code generation tools don't necessarily need to parse C++
[15:33:01] <ville> holy fuck.
[15:33:34] <hachikuji[m]> I needed to parse some C code before, never hit a case where I'd need to parse C++ yet
[15:34:16] <PJBoy> why did you need to parse C?
[15:34:34] <PJBoy> we do have clang-query for C++ parsing
[15:35:02] <bpalmer> aye. A reasonable external tool.
[15:36:13] <hachikuji[m]> PJBoy: to have same thing you can do in C++ by adding template <...> over your code
[15:36:34] <ville> hachikuji[m]: no one wants to tmp. that's a non-starter
[15:36:40] <PJBoy> oh so you're doing like a C preprocessing step
[15:36:50] <hachikuji[m]> in any case, if you will be parsing C++ you will have a very specific problem that "standard" things won't solve
[15:37:00] <ville> nonsense
[15:38:00] <hachikuji[m]> tell me about it once you deal with non-standard code that uses specific compiler extensions lol
[15:38:21] <ville> then you're not parsing c++
[15:39:25] <bpalmer> of course, the real issue is that until you go through the preprocessor phases, you don't have much of a language to parse. And in order to go through the preprocessor, you have to be able to specify all the things that the preprocessor needs.
[15:39:40] <bpalmer> Again, this is pointing at needing an external (namely, the first chunk of the compiler)
[15:39:47] <hachikuji[m]> ville: define "C++"
[15:40:10] <ville> hachikuji[m]: pick any version of the standard you like
[15:41:32] <ville> bpalmer: preprocessing is one of the phases yes: http://www.eelis.net/c++draft/lex.phases
[15:41:39] <hachikuji[m]> why does it have to be locked into a standard?
[15:41:49] <ville> hachikuji[m]: "it"?
[15:41:59] <hachikuji[m]> yes
[15:42:15] <ville> i don't know what you refer to by the use of "it" in the sentence
[15:42:38] <TinoDidriksen> If your code isn't Standard compliant, then it is by definition not C++.
[15:42:41] <hachikuji[m]> the C++ programming language, umbrella term that dates all the way back to C with classes
[15:42:46] <TinoDidriksen> No
[15:42:59] <hachikuji[m]> so Linux kernel is not written in C too I guess
[15:43:01] <ville> c++ is defined by an international standard. that's the definition i use when i say c++
[15:43:05] <TinoDidriksen> This channel only cares about Standard C++.
[15:43:18] <TinoDidriksen> The kernel is in GNU C, not Standard C.
[15:43:26] <ville> hachikuji[m]: that is a fair thing to say. they use bunch of gnu-isms
[15:43:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:43:48] *** Joins: C-Man (~C-Man@78.31.190.82)
[15:44:39] *** Quits: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:d01:f723:a859:5382) (Read error: Connection reset by peer)
[15:44:53] *** Joins: Dumbledore (~Prof_Dumb@152.57.55.57)
[15:45:41] <hachikuji[m]> too bad, in real world there's more than the standard and people care about it anyway
[15:45:50] <TinoDidriksen> That's what the #C++-general channel is for.
[15:46:35] <hachikuji[m]> fair
[15:46:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:47:57] *** Quits: hinata (~hinata@2405:204:9191:6c24:b0df:3244:37ff:e0f6) (Ping timeout: 240 seconds)
[15:49:31] <ville> it'd be fun to see how the landscape would have shaped out to be with a parser available from the getgo. for example are there language features you could have dropped altogether
[15:51:16] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 250 seconds)
[15:51:17] *** Joins: furrymcgee (~devuan@cgn-213-196-210-225.nc.de)
[15:51:41] *** Quits: Dumbledore (~Prof_Dumb@152.57.55.57) (Ping timeout: 256 seconds)
[15:52:48] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[15:52:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[15:53:28] *** Joins: callq (~callq@157.41.137.81)
[15:54:01] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[15:57:45] *** climax is now known as gentooclimax
[15:58:29] *** Quits: cnihelton (~cnihelton@2804:431:c7f1:71ba:101e:e464:f430:e831) (Quit: cnihelton)
[16:00:31] *** Joins: p|q (~plq@94.54.154.86)
[16:01:10] *** Joins: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:fad1:4135:102a:8b94)
[16:03:51] *** Joins: AmR (~AmREiSa@156.207.194.71)
[16:05:22] *** Quits: ERROH (~mama@user/mama) (Ping timeout: 268 seconds)
[16:09:29] *** Joins: x_kuru (xkuru@user/xkuru)
[16:09:40] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:11:03] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[16:13:13] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[16:15:36] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[16:17:44] *** Joins: blackout69 (~blackout6@37.183.198.248)
[16:19:00] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 240 seconds)
[16:19:14] <Guest5497> I have a function that accept a vector<RowArguments>. I want to return a prepared sql statement like so: "insert table SET, %c=%d", specifying the colname/value etc. So currently I have this: https://ideone.com/m6IrB6 It works only for 1 row argument. I want to extend so that I can accommodate this query https://stackoverflow.com/a/29529915 (the
[16:19:15] <Guest5497> first one). The problem is, I don't know how to interpolate a for loop inside a string. Can someone point me in the right direction?
[16:20:13] *** Parts: blackout69 (~blackout6@37.183.198.248) ()
[16:20:49] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[16:26:18] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 260 seconds)
[16:26:26] <ville> c++ doesn't have means to "interpolate a for loop inside a string".
[16:27:19] *** Joins: atharv_ (~athar@2409:4042:4c04:87e6:e52b:46d3:e3c7:8673)
[16:27:58] *** gentooclimax is now known as climax
[16:30:05] *** climax is now known as gentooclimax
[16:30:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:30:10] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:30:16] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 250 seconds)
[16:31:21] <rpav> though i prefer varadic printing/"stringing", e.g. print(1, "foo", x, ...) or str(...), and any string interpolation such as "a b c ${...} d e f" can be rewritten trivially as `str("a b c ", ..., " d e f");` .. so you could use a similar mechanism
[16:31:44] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[16:31:57] *** Joins: rvalue (~rvalue@user/rvalue)
[16:32:04] <rpav> lambdas and variadic templates.. two of the best tools of the last decade of C++
[16:32:15] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[16:35:21] *** Joins: Hercules (~Hercules@user/hercules)
[16:36:03] *** Quits: Hercules (~Hercules@user/hercules) (Remote host closed the connection)
[16:36:08] *** Joins: x_kuru (xkuru@user/xkuru)
[16:37:05] *** Joins: ymwm__ (~yingmanwu@27.153.166.146)
[16:39:15] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[16:39:24] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[16:39:28] *** Joins: useretail (~useretail@185.132.19.151)
[16:39:42] *** Quits: ymwm_ (~yingmanwu@110.85.123.64) (Ping timeout: 252 seconds)
[16:40:34] *** Quits: atharv_ (~athar@2409:4042:4c04:87e6:e52b:46d3:e3c7:8673) (Quit: Leaving)
[16:42:12] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[16:42:12] *** Joins: cation21 (cation@user/cation)
[16:44:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:45:39] *** cation21 is now known as cation
[16:46:09] <fluter> hi, what's the point of dynamic_cast of a pointer to an void* pointer?
[16:46:13] <fluter> e.g. : decltype(dynamic_cast<const volatile void*>(static_cast<T*>(nullptr)))
[16:46:22] <fluter> in implementation of https://en.cppreference.com/w/cpp/types/is_polymorphic
[16:46:39] <ville> it only works on dynamic types?
[16:46:55] <ville> ...source types
[16:47:16] *** Joins: Pr_Dumbledore (~Prof_Dumb@152.57.242.199)
[16:47:29] <anyone> to find the most derived class
[16:47:44] <ville> i doesn't matter what you cast to, as anything may be cast to more cv-qualified void* so that's a fair pick
[16:47:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[16:49:02] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[16:49:13] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:49:37] *** Quits: Dumbledore (~Prof_Dumb@2409:4042:228f:4a6:fad1:4135:102a:8b94) (Ping timeout: 240 seconds)
[16:50:50] *** Joins: BluesBoy (~bboy@user/bluesboy)
[16:52:48] <fluter> i mean why would you dynamic cast to a void pointer?
[16:53:14] <fluter> void pionter is compatible with any kind of pointer, right?
[16:53:56] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[16:56:01] <ville> you need something to cast to
[16:57:02] <ville> if you picked some other type the dynamic_cast would fail if there was no relation between the source and destination types. picking void const volatile* sidesteps that issue
[16:57:48] <ville> but still requires the source type is polymorphic. that is have something virtual about it
[16:58:02] <fluter> ville: what is the result of dynamic_cast<const volatile void*>( ... ) ?
[16:58:24] <fluter> do you mean int *p; dynamic_cast<const volatile void*>(p) would fail?
[16:58:33] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:58:40] <ville> yes. int is not a polymorhic type
[16:58:49] <ville> polymorphic
[16:59:33] <fluter> but this is used in traits, dynamic_cast is a runtime operation, is_polymorhic is compile time
[16:59:37] <fluter> how does this work?
[17:00:13] <ville> you are telling it the source type through T. that it can check. is T polymorphic type.
[17:02:01] <fluter> to check is some code, right? is this a compiler hack?
[17:02:02] <ville> the check on the source type being a polymorphic type is a compile-time check, then the "second" check whether the dynamic_cast succedes from T to D is a runtime check
[17:02:33] <fluter> but then why would it need to do dynamic_cast at all?
[17:02:46] <ville> but the trait never gets that far. decltype() is what's called unevaluated context (sorry drawing a blank on the correct name). the cast or its result is never used
[17:02:48] <fluter> the check on the source type being a polymorphic type is a compile-time check --  this is all the traist need
[17:04:01] <ville> http://www.eelis.net/c++draft/expr.context#1
[17:04:47] *** Quits: Pr_Dumbledore (~Prof_Dumb@152.57.242.199) (Ping timeout: 256 seconds)
[17:06:38] <ville> even though it says unevaluated operand, it's not quite as completely unevaluated as you might think. some checks are still performed on it. and it happens that it'll check whether the source type of the dynamic_cast is a polymorphic type or not
[17:07:35] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[17:16:29] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[17:17:46] *** Joins: Rynn (~rynn@216.30.158.198)
[17:19:09] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[17:19:34] *** Joins: darkbit (~db@136.158.8.67)
[17:20:37] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:21:10] *** Joins: drbeco (~beco@user/beco)
[17:23:05] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[17:25:07] *** Joins: sebbu (~sebbu@user/sebbu)
[17:25:09] *** Joins: wakeup (~wakeup@user/wakeup)
[17:29:11] *** Joins: cnihelton (~cnihelton@152.250.199.129)
[17:31:02] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:31:52] *** Joins: ERROH (~mama@user/mama)
[17:35:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:36:44] *** Joins: nq (~nq@2a02:2f08:e015:a900:cafd:3575:1a3d:974)
[17:37:02] *** Quits: ymwm__ (~yingmanwu@27.153.166.146) (Ping timeout: 240 seconds)
[17:37:05] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:37:05] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:37:21] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[17:37:23] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:37:40] *** Quits: jfsimon1981 (~jfsimon19@200.5.132.77.rev.sfr.net) (Ping timeout: 272 seconds)
[17:38:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:39:08] *** Quits: miklcct (~quassel@vps.miklcct.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:39:44] *** Joins: miklcct (~quassel@vps.miklcct.com)
[17:40:54] *** Quits: callq (~callq@157.41.137.81) (Ping timeout: 250 seconds)
[17:42:11] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:42:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:42:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:43:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:44:06] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:44:06] *** ChanServ sets mode: +v npaperbot
[17:44:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:44:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:45:46] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:46:50] <Guest5497> I'm really struggling with this:( Â  So, I am trying to write a prepare sql statement for multiple row arguments. I can write my statement just for a single row argument. https://ideone.com/m6IrB6 But I'm not sure how to extend if for a vector of args, eg: vector<TagDbRowObjet>. I have searched around for "c++ string for loop interpolation" but I
[17:46:50] <Guest5497> did not find anything. Can someone point me to what I should be looking at?
[17:48:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:48:15] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Ping timeout: 240 seconds)
[17:48:18] <bpalmer> Guest5497: you probably want to just repeatedly concatenate to a string using a standard c++ for loop. You can either just concatenate directly in string, or use something like a stringstream
[17:48:33] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[17:49:45] <Guest5497> bpalmer hmm i see. For n args, I would `%c=%s`, "%c=%d"Â  n times
[17:49:48] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:50:14] <bpalmer> Guest5497: yes.
[17:50:18] <Alipha> Guest5497: it's not possible to pass in a variable number of arguments to that Query constructor where the number of arguments is determined at runtime.
[17:51:33] <bpalmer> well, for n elements in the vector, that is. If you actually had separate arguments, you *could* do something fancier.
[17:51:57] <Alipha> Does Query have a different constructor you can call that will take in a container of arguments or something? Or can you create the Query object and then modify it?
[17:52:03] <Guest5497> I'm actually confused...we use a 3rd part to do the query construction https://github.com/facebook/squangle/blob/main/squangle/mysql_client/Query.h#L452 and the code snippet I shared https://ideone.com/m6IrB6 I find a bit confusing to read. Specificallt the ` "%C=%s,"Â "%C=%d",` part -- are these two separate strings?
[17:52:13] <Guest5497> specfically*
[17:53:52] <bpalmer> Guest5497: no, that's subtly using c++'s implicit string concatenation for string literals
[17:54:07] <Alipha> Looks like you want this constructor? https://github.com/facebook/squangle/blob/main/squangle/mysql_client/Query.h#L144
[17:54:16] <bpalmer> Guest5497: since there are no intervening commas between the two string literals.
[17:54:48] <Alipha> << "foo" "bar";
[17:54:49] <geordi> foobar
[17:55:08] <Guest5497> ahh ok thanks that makes sense
[17:55:25] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[17:55:32] <bpalmer> I would add parentheses; that's a trap just waiting to catch people.
[17:56:16] <Guest5497> thanks a lot of folks, trying to wrap my head around this
[17:56:54] <Guest5497> so basically I want to do is change it to this sql query: https://stackoverflow.com/a/452934
[17:57:43] <Guest5497> I'm still not quite sure how to do the placeholder thingie for multiple args. I get the idea that I'd have write a loop and concatenate "%c=%s" n times
[17:59:14] <Guest5497> but how do pass in the concrete values, if I don't know how long the vector is before runtime?
[17:59:40] <Guest5497> eg: query(%c %c, rowArg[0], rowArgs[1]) -- this fine, if I know that rowArgs will be of size 2
[17:59:50] <anyone> Something that just occurred to me.. C++ has nothrow and then has noexcept. I get why (one is a type/instance and the other is a keyword), but it does reek a bit of lack of consistency
[18:00:00] <Guest5497> but if it's a variable lengh how do I do it?
[18:00:37] <Raziel> Guest1637, a loop and you give it the length too?
[18:00:46] <Raziel> or a variadic templatee or macro
[18:00:49] <Raziel> err, Guest5497
[18:00:51] <Raziel> too many guests.
[18:01:33] <fluter> hi, should i use std::copy or std::memcpy to copy chunks of chars?
[18:01:35] <Guest5497> ahh I am so confused :(
[18:02:02] <Alipha> Guest5497: you can't use that Query constructor. You have to use the Query constructor which takes a std::vector<QueryArgument>
[18:02:53] <Alipha> Guest5497: https://github.com/facebook/squangle/blob/main/squangle/mysql_client/Query.h#L144
[18:02:54] <Guest5497> Alipha ah I see ok. I'm a bit hesitant to touch QueryArgument because it's constructed internally from the placeholder strings...
[18:03:41] *** Quits: v4mp (~v4mp@user/v4mp) ()
[18:03:51] <bpalmer> I skimmed briefly through that file and there's some mention of a %V which accepts a list of lists to be interpreted as values rows
[18:04:27] *** gentooclimax is now known as climax
[18:06:26] <Alipha> You also are able to append Query objects to each other, it seems. So maybe something like `query += Query("%C=%s", foo, bar);` would work
[18:07:03] <bpalmer> fluter: probably std::copy will use memmove or memcpy anyway.
[18:07:36] <fluter> bpalmer: ok, so i should use memcpy directly
[18:07:40] <bpalmer> fluter: technically std::copy allows the flexibility of different execution policies
[18:07:57] <fluter> what is exeuction policy
[18:08:42] <bpalmer> fluter: https://en.cppreference.com/w/cpp/algorithm/execution_policy_tag_t . You can specify if it's allowed to do things in parallel.
[18:09:12] <bpalmer> If you're not already using them, you probably don't want to start.
[18:09:30] <fluter> oh right, it's the multi threading stuff.
[18:09:46] <fluter> no i'm not using them.
[18:10:13] <Guest5497> thanks Alipha and folks I'm gonna try that
[18:10:15] <bpalmer> With just the standard stuff, I'd probably use std::copy if I was copying containers in c++ and memcpy only if I was doing pod
[18:10:33] <bpalmer> but I don't know of anything that would really spell a reason to do one over the other.
[18:11:00] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:11:39] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Ping timeout: 256 seconds)
[18:15:02] *** Quits: kerat58 (~keeerat@user/tarek58) (Ping timeout: 240 seconds)
[18:16:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:16:16] *** Joins: Guest9 (~Guest9@cpe-174-102-106-83.columbus.res.rr.com)
[18:19:16] *** Quits: andreasbuhr (~quassel@p549db9c0.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:20:15] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:22:54] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:23:16] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[18:24:02] *** Inline__ is now known as Inline
[18:24:22] *** Quits: nwulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[18:32:01] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:34:12] *** Quits: JohnMS_AWAY (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 250 seconds)
[18:34:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:35:45] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[18:35:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f011:5c41:91d3:3525)
[18:35:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f011:5c41:91d3:3525) (Changing host)
[18:35:49] *** Joins: skapata (~Skapata@user/skapata)
[18:36:04] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[18:42:11] <PJBoy> I'd use copy wherever possible
[18:42:21] <PJBoy> and memcpy if I wanted implicit lifetime semantics
[18:45:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:45:34] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[18:47:02] <Alipha> Yes, use std::copy so that you can be consistent, since you can use std::copy with all copyable types
[18:48:04] <AliceMeows> https://godbolt.org/z/h7ETjY1Ez could line 21 be made less verbose?
[18:48:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:48:49] *** climax is now known as gentooclimax
[18:49:15] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:50:58] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[18:51:30] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[18:51:37] *** Quits: lh_mouse_ (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:52:08] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[18:52:12] *** Quits: zer0x (~zer0x@1.55.211.113) (Ping timeout: 240 seconds)
[18:52:15] *** Joins: jokoon (~eio@2a01:e0a:542:e160:b803:62be:51a0:d0a7)
[18:53:17] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Ping timeout: 240 seconds)
[18:56:13] *** Joins: tungki (~tungki@subs20-114-142-172-16.three.co.id)
[18:56:25] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:56:59] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:57:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:58:36] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 240 seconds)
[18:59:46] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 250 seconds)
[19:00:05] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:01:41] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:01:44] *** Quits: meandrain (~meandrain@2a02:2f0e:f70f:6e00:4ce0:6366:566f:39a0) (Ping timeout: 268 seconds)
[19:04:51] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[19:05:32] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:09:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[19:13:52] *** Joins: Enitin (~Enitin@82.180.145.223)
[19:14:17] *** Joins: pulse (~pulse@user/pulse)
[19:16:55] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[19:21:00] *** Joins: meandrain (~meandrain@2a02:2f0e:f70f:6e00:7123:9386:396e:d8d7)
[19:23:36] *** Joins: Brainium (~brainium@user/brainium)
[19:32:24] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[19:34:56] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[19:39:04] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:40:03] *** Quits: tungki (~tungki@subs20-114-142-172-16.three.co.id) (Ping timeout: 256 seconds)
[19:44:19] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[19:45:30] *** Quits: Tokamak (~Tokamak@172.58.188.132) (Remote host closed the connection)
[19:46:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:49:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:51:28] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[19:53:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[19:54:17] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:54:48] *** Quits: jokoon (~eio@2a01:e0a:542:e160:b803:62be:51a0:d0a7) (Ping timeout: 250 seconds)
[19:57:57] <PJBoy> `return {};`?
[19:58:15] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:58:19] <PJBoy> I don't see a reason to use in_place
[19:58:27] <PJBoy> oh uh
[19:58:40] <PJBoy> I see
[19:59:21] <PJBoy> then no
[19:59:48] <AliceMeows> I figured as much
[20:01:19] <PJBoy> there's `return std::make_optional<S>();`
[20:01:40] *** Quits: ville (~ville@user/ville) (Quit: ville)
[20:02:41] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Client Quit)
[20:03:23] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:04:07] <Alipha> Which will call the move ctor, whereas the in_place ctor call won't?
[20:07:00] *** Joins: ville (~ville@user/ville)
[20:08:17] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[20:11:06] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:12:36] <the_lanetly_052> Hi, does assignment of string to string_view (std::string name = "Hello"; std::string_view = name;) lead to copy of string?
[20:12:58] <PJBoy> make_optional uses in_place
[20:12:58] <AliceMeows> It should not
[20:13:02] <PJBoy> so it's all good
[20:13:21] <PJBoy> yet another case of make_ functions not being identical to ctor calls
[20:13:52] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:15:39] <the_lanetly_052> should i use std::string& name_ref = name; or std::string_view name_ref = name; to avoid copy ?
[20:16:17] <AliceMeows> it shouldn't copy in either case
[20:16:50] <the_lanetly_052> thanks
[20:17:11] *** Quits: Guest5497 (~Guest54@2620:10d:c092:400::4:3a1c) (Quit: Client closed)
[20:19:28] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[20:19:58] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[20:21:33] <AliceMeows> the_lanetly_052: https://godbolt.org/z/PGPE8K4bW
[20:22:46] <AliceMeows> Changes to 's' are reflected in 'sv'
[20:24:02] <the_lanetly_052> thank you let me use string_view then
[20:27:21] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[20:38:46] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Quit: WeeChat 3.3)
[20:43:23] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[20:44:27] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:44:51] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5) (Remote host closed the connection)
[20:45:14] *** Joins: Kasreyn_ (~i@h5ef52142.selulun.dyn.perspektivbredband.net)
[20:46:39] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:46:47] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[20:50:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:55:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:57:13] *** Joins: tungki (~tungki@subs30-116-206-14-34.three.co.id)
[20:57:24] <welder> is accessing arry with negative index an UB? if i is an int which may be negative, is foo[i] valid?
[20:57:44] <AliceMeows> Yes its UB
[20:57:58] <constxd> if foo is in fact an array it's UB but not if foo is a pointer
[20:58:01] *** Guest1637 is now known as martiert_work
[20:58:26] <welder> that's how i thought constxd
[20:58:55] <constxd> { int a[] = {1, 2, 3, 4}, *p = a + 2; cout << p[-1] << endl; }
[20:58:56] <geordi> 2
[21:00:21] *** Quits: ski (~ski@remote12.chalmers.se) (Remote host closed the connection)
[21:01:22] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[21:01:25] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:06:00] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[21:07:13] *** Quits: meandrain (~meandrain@2a02:2f0e:f70f:6e00:7123:9386:396e:d8d7) (Quit: Leaving...)
[21:08:37] *** Joins: wakeup (~wakeup@user/wakeup)
[21:16:53] *** Quits: Figworm (FiggyWitIt@user/figworm) (Ping timeout: 250 seconds)
[21:17:00] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:18:12] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:18:12] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:18:25] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:18:28] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[21:19:44] *** Joins: Figworm (FiggyWitIt@user/figworm)
[21:21:46] *** Joins: zen_coder (~zen_coder@141.113.64.102)
[21:22:14] *** Joins: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0)
[21:22:18] <zen_coder> Can anybody tell me how to fix this compile time error with gcc7 https://wandbox.org/permlink/NLzKeIsfGxgzKS7g ?
[21:22:20] <zen_coder> error: 'bool SomeClass::foo()' is private within this context
[21:22:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:22:28] <zen_coder> gcc9 it compile fine
[21:23:11] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:23:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:23:42] <AliceMeows> The link seems to be broken
[21:23:56] <anyone> wandbox is broken on firefox
[21:24:00] <ville> that's just wandbox now
[21:24:41] <zen_coder> can I post somewhere else?
[21:24:52] <AliceMeows> godbolt would do
[21:25:46] <zen_coder> https://godbolt.org/z/xEs44Te3s
[21:26:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-026-027.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:29:25] *** Quits: Figworm (FiggyWitIt@user/figworm) (Ping timeout: 256 seconds)
[21:29:31] <AliceMeows> zen_coder: I suspect its a bug in gcc
[21:29:47] <zen_coder> is a workarround possible?
[21:31:07] *** Quits: tungki (~tungki@subs30-116-206-14-34.three.co.id) (Ping timeout: 256 seconds)
[21:31:32] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[21:31:52] *** Joins: Figworm (FiggyWitIt@user/figworm)
[21:32:11] <ville> make it public?
[21:32:21] <zen_coder> hehe
[21:32:34] <zen_coder> without changing the signature of the class
[21:32:39] <zen_coder> keeping it private
[21:33:52] <ville> use a newer g++?
[21:34:56] *** Quits: yhirose3 (~yhirose3@user/yhirose3) (Quit: WeeChat 2.8)
[21:39:22] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[21:42:01] <zen_coder> okay, so no workaround possible while using gcc7
[21:43:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.143) (Ping timeout: 240 seconds)
[21:43:11] <anyone> well the bug could be with gcc9 if the expectation is that it should keep failing
[21:43:34] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[21:43:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:44:06] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:44:06] *** ChanServ sets mode: +v npaperbot
[21:44:38] <ville> the work around would be to ifdef it public on gcc7 but you didn't want that
[21:44:52] *** Joins: jfsimon1981 (~jfsimon19@38.60.6.84.rev.sfr.net)
[21:45:31] <ville> if you're already building it other compilers, then you will catch attempted public accesses to it anyway as it would be private on those other compilers
[21:46:05] <ville> so you won't have that function called from the wrong places on gcc7 builds either
[21:47:00] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:50:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[21:50:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[21:51:17] *** Quits: zen_coder (~zen_coder@141.113.64.102) (Quit: Konversation terminated!)
[21:51:32] *** Joins: clime (~clime@37-48-56-199.nat.epc.tmcz.cz)
[21:52:01] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[21:54:31] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:55:10] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:56:23] *** Joins: unyu (~pyon@user/pyon)
[21:57:11] *** Quits: foobaz21266 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:01:59] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[22:07:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[22:10:29] <ville> i suppose you could see if: https://bloglitb.blogspot.com/2011/12/access-to-private-members-safer.html works out
[22:11:07] <AliceMeows> https://godbolt.org/z/KTMvz1jE7
[22:11:08] <AliceMeows> This works
[22:11:13] <AliceMeows> Its a shame he left
[22:11:21] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 252 seconds)
[22:14:45] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 256 seconds)
[22:22:19] *** Quits: cnihelton (~cnihelton@152.250.199.129) (Quit: cnihelton)
[22:31:18] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[22:32:26] *** Joins: wakeup (~wakeup@user/wakeup)
[22:33:10] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[22:38:43] *** Quits: malloy (~jimery@120.235.172.192) (Ping timeout: 265 seconds)
[22:40:35] *** Joins: malloy (~jimery@120.235.172.170)
[22:43:41] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:44:22] <AliceMeows> https://godbolt.org/z/vPKojEh77 this also works
[22:45:05] *** Quits: irf21k (~irf21k@2401:4900:336e:1da1:1:0:4fb8:9ff0) (Read error: Connection reset by peer)
[22:46:54] *** Joins: pulse (~pulse@user/pulse)
[22:47:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:47:38] *** Joins: proller (~p@80.240.216.69)
[22:50:13] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:50:34] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[22:51:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:54:25] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[22:55:31] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::43)
[22:55:51] *** Joins: magla (~gelignite@d5362120.access.ecotel.net)
[22:56:24] *** Joins: cnihelton (~cnihelton@2804:431:c7f1:71ba:2ce4:3fa:6eb1:ed9d)
[22:56:43] *** Joins: hashfuncf39 (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[23:03:02] *** Joins: z3t0_alt (~z3t0@146.71.14.98)
[23:03:06] <z3t0_alt> hi all
[23:03:10] <z3t0_alt> how are you?
[23:03:39] <Alipha> z3t0_alt: hi
[23:03:49] *** Quits: mixfix41 (~sdenyninn@user/mixfix41) (Ping timeout: 256 seconds)
[23:04:03] <evangeline> is there any way to make the [] work in this example: https://godbolt.org/z/ETs9nE35v (its trying to access an element in the member 'buffer' variable)?
[23:04:58] <z3t0_alt> Has anyone else run into an issue where clang-tidy fails to analyze a pch file that is produced by gcc? I wonder if theres a way to make these two tools work together well.
[23:05:07] <z3t0_alt> The same issue seems to be reported here, https://gitlab.kitware.com/cmake/cmake/-/issues/22081
[23:06:19] *** Quits: wakeup (~wakeup@user/wakeup) (Ping timeout: 256 seconds)
[23:06:54] <Alipha> evangeline: d is a DataT*, so d[i] is using the pointer's built-in subscript operator. it's not calling DataArray::operator[]
[23:06:55] *** Joins: proller (~p@2a02:6b8:b081:8803::1:2f)
[23:07:01] *** Joins: wakeup (~wakeup@user/wakeup)
[23:07:02] <TinoDidriksen> z3t0_alt, off topic - maybe ask #C++-general or #cmake
[23:07:31] <Alipha> evangeline: and DataT* is a primitive type and you can't overload operators for it
[23:08:32] <evangeline> Alipha, so d[i] is actually "using the [] of a pointer" ?
[23:08:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[23:08:43] <Alipha> evangeline: yes
[23:08:44] <evangeline> Can I change DataT* in order to overload [] somehow ?
[23:09:07] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[23:09:35] <Alipha> evangeline: i would suggest making PDataT an actual class, which wraps the DataT* pointer.
[23:10:20] *** Joins: KAHR-Alpha_ (~Alpha@2a01cb0d024a66009957729108fab4e2.ipv6.abo.wanadoo.fr)
[23:10:52] <evangeline> Alipha, so I would have  DataT* d; member variable inside PDataT class ?
[23:11:02] <Alipha> evangeline: yes
[23:11:25] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 240 seconds)
[23:11:54] <evangeline> Alipha, not sure how to use [] then ...
[23:12:19] *** Joins: Enitin (~Enitin@82.180.145.230)
[23:12:19] <Alipha> move it into PDataT
[23:14:16] <z3t0_alt> TinoDidriksen thanks
[23:15:39] <evangeline> Alipha, I'm not exactly sure how to do it: https://godbolt.org/z/dTnvfoeW9
[23:15:42] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:15:56] *** Joins: wakeup (~wakeup@user/wakeup)
[23:17:59] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[23:18:16] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[23:19:18] <Alipha> evangeline: maybe something like this: https://godbolt.org/z/T8TWjTWjT
[23:20:22] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[23:20:47] <evangeline> Alipha, thank you, let me check it
[23:21:12] *** Joins: joomla9 (uid543104@id-543104.lymington.irccloud.com)
[23:23:37] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[23:23:50] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[23:23:53] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 256 seconds)
[23:24:49] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:25:35] *** Quits: wakeup (~wakeup@user/wakeup) (Ping timeout: 256 seconds)
[23:35:13] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:37:19] *** Joins: wakeup (~wakeup@user/wakeup)
[23:38:32] *** Quits: furrymcgee (~devuan@cgn-213-196-210-225.nc.de) (Quit: leaving)
[23:39:48] *** Quits: undephin3d (~undephin3@158.181.72.102) (Ping timeout: 240 seconds)
[23:40:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[23:41:21] *** Joins: plastico (~plastico@neomutt/plastico)
[23:43:01] <anyone> https://godbolt.org/z/h77fx3xEh  does the copyctor really need to be present/visible/usable if there's copy elision anyway?
[23:44:30] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[23:44:41] <AliceMeows> anyone: NRVO is not guaranteed
[23:44:46] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[23:45:12] <Zogatribe> anyone: as-if rule
[23:45:24] <AliceMeows> anyone: https://godbolt.org/z/s47YvGrnG this works though
[23:46:13] <anyone> aight, i'll just wrap it in unique_ptr. Some libraries are really silly :-/
[23:48:15] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:48:34] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[23:50:15] <bpalmer> anyone: note that copy elision is mandatory if you didn't give it a name.
[23:50:20] <bpalmer> anyone: return S();
[23:51:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:51:37] <bpalmer> Also, struct S { S(const S&) = delete; };  may be a better way to go than struct S { private: S(const S&); /* unsupported */};
[23:52:40] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[23:53:27] *** Joins: foobaz21266 (~foobaz212@152.37.103.80)
[23:53:52] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:56:21] *** Joins: vin (~vin@user/crash)
[23:58:12] <vin> I want to represent 1.0e12 addresses in a variable, so the data type must be 5B atleast. How can create one without using additional bytes?
[23:58:37] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[23:59:35] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
