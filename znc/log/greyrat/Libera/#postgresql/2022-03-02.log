[00:00:23] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f)
[00:03:16] <urandom9000> ??paste
[00:03:16] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[00:03:16] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[00:06:14] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f) (Remote host closed the connection)
[00:06:35] *** Joins: Atque (~Atque@user/atque)
[00:06:49] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f)
[00:07:20] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[00:10:27] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:7631:50ab:7dd5:742c)
[00:10:58] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f) (Ping timeout: 250 seconds)
[00:12:54] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[00:15:34] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:16:09] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[00:17:05] *** Joins: _xxoxx (~Junxter@121.237.63.222)
[00:19:47] *** Quits: Junxter (~Junxter@121.237.60.195) (Ping timeout: 256 seconds)
[00:20:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:23:12] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[00:23:44] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[00:26:34] *** Quits: bmomjian (~bruce@momjian.us) (Quit: Leaving.)
[00:26:40] *** Joins: bmomjian1 (~bruce@momjian.us)
[00:28:22] *** Joins: velix (~velix@user/velix)
[00:28:52] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Ping timeout: 272 seconds)
[00:29:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:30:10] *** Quits: Siecje (~Siecje@97.111.200.32) (Remote host closed the connection)
[00:31:57] <velix> Hmm.. I'd love to abuse postgresql as a queue. Can I lock rows with ROW EXCLUSIVE MODE on select or isn't that recommended?
[00:33:48] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[00:37:36] <nbjoerg> velix: there are a couple of excellent blog posts to find via your search engine of choice
[00:39:33] <velix> nbjoerg: I wouldn't have come here to get humilated with that text, if I didn't try before.
[00:39:42] <velix> but thanks for your input.
[00:40:07] <velix> @mods: Could you change the topic please? " Don't ask to ask; just ask!" is missleading friendly.
[00:40:44] <velix> recommendation: "Please ask only, if you didn't find anything in your search engine of choice".
[00:41:36] <nbjoerg> velix: chill
[00:42:31] <nbjoerg> from "I find something easily" to "you might not have found something" is a huge variance and there is nothing humiliating about "what you look for can be found"
[00:42:45] *** Joins: Shells (~michelle@2407:8800:bc20:200a:fd89:d378:3752:5ca3)
[00:45:35] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 256 seconds)
[00:47:35] <velix> nbjoerg: https://blog.gougousis.net/queueing-with-skip-locked/ <-- tanks
[00:47:37] <velix> +h
[00:49:13] *** Quits: ekathva (~ekathva@2001:999:51:19b8:30eb:aab6:8fa5:4db8) (Remote host closed the connection)
[00:49:15] <nbjoerg> I was thinking along the lines of https://blabosoft.com/implementing-queue-in-postgresql which is a bit more refined
[00:49:38] <nbjoerg> (but I wouldn't use a uuid as primary key)
[00:49:49] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f)
[00:50:22] <velix> nbjoerg: may I ask why?
[00:50:25] <velix> no wait, let me google
[00:50:35] <nbjoerg> the UPDATE + RETURNING trick is handy
[00:51:41] <velix> nbjoerg: oh, UUID is bad indeed.
[00:51:45] <velix> Since it's not sortable.
[00:51:50] <velix> But there are sortable UUIDs
[00:53:16] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:53:53] <nbjoerg> uuids are just generally more heavy and sequences are already optimized for concurrent access
[00:54:01] *** Quits: michalz (~michalz@185.246.204.93) (Remote host closed the connection)
[00:54:06] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e89e:d311:f480:788f) (Ping timeout: 245 seconds)
[00:54:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 272 seconds)
[00:54:34] <nbjoerg> depending on whether you need to handle different states, the UPDATE+RETURNING can also be changed into a DELETE+RETURNING
[00:54:41] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 256 seconds)
[00:55:06] <nbjoerg> so I don't think the comment in gougousis post is correct
[00:56:01] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[00:56:29] <nbjoerg> ah, he's talkign about mysql
[00:56:36] <velix> oops :D
[00:57:05] <velix> the simpsons got all my attention :D
[00:58:19] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[00:59:18] <nbjoerg> so going back to the original question: it can be used and it will scale to some point. there are concerns about autovacuum not working too well for such tables, so expect some churn. it is not the most scalable solution too
[00:59:48] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[00:59:49] <velix> nbjoerg: I don't want to heavy use it ;)
[01:00:00] <velix> nbjoerg: beanstalkd and others might be better for this though.
[01:00:16] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[01:00:38] <nbjoerg> well, if you concurrency is limited, I think it is a perfectly fine solution compared to added another software component
[01:02:05] <velix> I want to use it as queue for processing PDFs. So I've got like 3 LibreOffice workers grabbing a task from it.
[01:02:19] <velix> 32 cores... 90% of the time idle ;)
[01:02:29] <nbjoerg> yeah, that sounds entirely sensible
[01:02:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:02:48] <nbjoerg> especially if you combine it with LISTEN/NOTIFY
[01:02:58] * velix looks this up
[01:06:49] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[01:07:37] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Remote host closed the connection)
[01:08:00] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[01:09:05] <velix> nbjoerg: nice feature.
[01:13:14] *** Joins: merzo (~Thunderbi@192.162.238.196)
[01:14:26] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Ping timeout: 260 seconds)
[01:14:45] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[01:14:45] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 256 seconds)
[01:18:14] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[01:18:24] <velix> lol, I was notifying in the wrong database :D
[01:18:31] <velix> and wondered, why nothing happened
[01:18:54] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[01:20:06] <velix> hmm... I'm using pgbouncer. Could this be a problem for LISTEN/NOTIFY?
[01:20:19] <Berge> velix: Yes. Consider allas.
[01:20:21] <Berge> ??allas
[01:20:21] <pg_docbot> Nothing found
[01:20:23] <Berge> hm
[01:20:31] <Berge> https://github.com/johto/allas
[01:20:41] <Berge> ?learn allas https://github.com/johto/allas
[01:20:42] <pg_docbot> Successfully added 1 keyword
[01:21:07] <velix> Berge: thanks, I'll try.
[01:22:08] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[01:22:41] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[01:22:41] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[01:22:41] *** Joins: hoppity (~hoppity@user/hoppity)
[01:23:16] *** Joins: zeden (~zeden@user/zeden)
[01:26:54] *** Quits: _xxoxx (~Junxter@121.237.63.222) (Read error: Connection reset by peer)
[01:26:59] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 252 seconds)
[01:27:11] *** Joins: Junxter (~Junxter@121.237.63.222)
[01:32:47] <velix> Oh, I guess I need to do some more reading. I've set 'LISTEN channel;' on one terminal and on the other 'notify channel, 'foo';' - on the same DB. Doesn't it work across two channels?
[01:33:02] *** Quits: Junxter (~Junxter@121.237.63.222) (Quit: Leaving)
[01:36:00] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 272 seconds)
[01:37:00] <ilmari> oh, that's a brilliant (if obscure) name for a pooler. allas is finnis for pool or basin
[01:37:49] <ilmari> *finnish
[01:37:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:38:19] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[01:38:40] <velix> ilmari: but it's not a complete pooler, is it?
[01:39:14] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[01:39:14] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[01:39:14] *** Joins: hoppity (~hoppity@user/hoppity)
[01:39:34] *** Joins: jazzy (~jaziz@user/jaziz)
[01:39:51] <velix> Can anyone verify that listen/notify doesn't work across sessions?
[01:40:18] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[01:40:33] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[01:41:06] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[01:41:06] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[01:41:06] *** Joins: hoppity (~hoppity@user/hoppity)
[01:44:36] <velix> I don't get the point that it works in ONE session only
[01:44:43] <nbjoerg> works fine here
[01:44:45] <ilmari_> velix: no, it's only for LISTEN/NOTIFY, but it's still a good name
[01:45:08] <velix> nbjoerg: I'm connected to the same DB from two different terminals. crazy.
[01:45:22] <ilmari_> the whole point is notifying other sessions of an event
[01:45:27] <nbjoerg> if you try it with psql, make sure to run a command like 'select 1;'
[01:45:37] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 250 seconds)
[01:46:15] <ilmari_> psql only polls the socket for events after it's sent a command
[01:46:53] <velix> nbjoerg: meeeh
[01:47:19] * velix sets up a php example
[01:48:05] *** Quits: TomyWork (~TomyLobo@p200300e80f158200e0a0a550bb296489.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:49:17] <ilmari> velix: not sue why you're asking me about the technical details when I was just commenting on the linguistics of the name, which kinda indicates that I've never heard of it before …
[01:49:27] <ilmari> *sure
[01:49:40] <velix> ilmari: I am sorry, again
[01:49:52] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[01:49:53] <velix> please add "mind your words" to the topic
[01:50:12] *** Joins: xocolatl (~xocolatl@193.32.126.237)
[01:52:48] *** Quits: xocolatl_ (~xocolatl@194.110.113.87) (Ping timeout: 250 seconds)
[01:55:03] *** Quits: pateh (~pateh@81-197-66-239.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[01:55:28] *** Joins: pateh (~pateh@81-197-66-239.elisa-laajakaista.fi)
[01:57:39] *** Joins: k-man (~jason@user/k-man)
[01:59:50] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:cb7:7f8e:c4e2:3669)
[02:01:34] *** Quits: merzo (~Thunderbi@192.162.238.196) (Ping timeout: 260 seconds)
[02:03:15] <velix> Wow, works perfectly.
[02:03:19] <velix> Interesting function, thanks.
[02:03:37] *** Joins: dfg (~dfg@dfg.rocks)
[02:03:37] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[02:03:37] *** Joins: dfg (~dfg@user/dfg)
[02:04:22] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:cb7:7f8e:c4e2:3669) (Ping timeout: 260 seconds)
[02:05:12] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:254f:fda4:cde:8b08) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:05:54] <velix> Funny. I'm using pgbouncer, but notify works :D
[02:06:15] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:07:10] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:7631:50ab:7dd5:742c) (Remote host closed the connection)
[02:07:33] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:7631:50ab:7dd5:742c)
[02:09:20] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:254f:fda4:cde:8b08)
[02:11:49] <StuckMojo> velix: it'll work through pgbouncer if you're using session pooling
[02:12:02] <StuckMojo> as opposed to transaction or statement
[02:12:30] <StuckMojo> it might work with transaction, if you held a transaction open...maybe. but that would be bad form anyway
[02:14:16] <velix> StuckMojo: let me look it up.
[02:14:30] <velix> Damn... why did you gave me a new toy? :D
[02:14:43] <velix> give*
[02:16:02] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[02:16:02] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[02:16:02] *** Joins: hoppity (~hoppity@user/hoppity)
[02:16:10] <velix> StuckMojo: yeah, "pool_mode = session"
[02:16:49] <StuckMojo> that's why. you stay connected to the same pool connection the whole time your client is connected
[02:17:32] <velix> Yeah. I've experienced that the latency is dramatically low using this ppol mode.
[02:18:19] *** Joins: telser_ (~quassel@user/telser)
[02:18:22] *** Joins: systwi_ (~systwi@173.20.216.139)
[02:18:34] <StuckMojo> transaction scales out more
[02:19:01] *** Joins: danieli1 (~danieli@user/danieli)
[02:19:05] *** Quits: marco44 (~marco44@82-64-126-208.subs.proxad.net) (Ping timeout: 256 seconds)
[02:19:05] *** Quits: w0rp (~w0rp@w0rp.com) (Ping timeout: 256 seconds)
[02:19:20] *** Joins: dewey (~dewey@notmyhostna.me)
[02:19:20] *** Quits: dewey (~dewey@notmyhostna.me) (Changing host)
[02:19:20] *** Joins: dewey (~dewey@user/dewey)
[02:19:22] <velix> StuckMojo: I'll keep it in mind.
[02:19:25] *** Joins: n_shp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[02:19:27] *** Joins: marco44 (~marco44@82-64-126-208.subs.proxad.net)
[02:19:30] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[02:19:32] *** Joins: sgjennings (~jennings@104.207.155.11)
[02:19:39] *** Quits: sebastorama (~sebastora@104.131.87.249) (Ping timeout: 256 seconds)
[02:19:43] *** Joins: webstrand (~webstrand@user/webstrand)
[02:19:44] *** Joins: dharrigan_ (~dharrigan@user/dharrigan)
[02:19:52] *** Joins: Philonous_ (~Philonous@user/philonous)
[02:20:07] <StuckMojo> i.e. will session you can only have as many concurrent open connections as you have server side pool slots
[02:20:13] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: rdunklau (~rdunklau@static-176-158-121-96.ftth.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: shachaf (~shachaf@user/shachaf) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: johto (~marko@joh.to) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: nshp (~hi@45.79.184.145) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: dewey_ (~dewey@notmyhostna.me) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: dminuoso (~dminuoso@user/dminuoso) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: jasonaowen (~owenja@user/jasonaowen) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: mason (~mason@redhat/mason) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: corelax (~corelax@user/corelax) (Ping timeout: 256 seconds)
[02:20:13] *** Quits: AlbertLast (~nix@0exclusive.de) (Ping timeout: 256 seconds)
[02:20:17] *** dharrigan_ is now known as dharrigan
[02:20:18] *** Joins: sebastorama (~sebastora@104.131.87.249)
[02:20:28] *** Joins: rdunklau (~rdunklau@static-176-158-121-96.ftth.abo.bbox.fr)
[02:20:29] *** Quits: hoppity (~hoppity@user/hoppity) (Ping timeout: 256 seconds)
[02:20:31] <StuckMojo> where with transaction you can have 10K clients concurrently connected with only 500 server connections
[02:20:40] *** Joins: dminuoso (~dminuoso@static.88-198-218-68.clients.your-server.de)
[02:20:41] *** Joins: corelax (~corelax@user/corelax)
[02:20:47] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: c2main (~quassel@user/c2main) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: telser (~quassel@user/telser) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: danieli (~danieli@user/danieli) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: janos (~janos@fedora/janos) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Philonous (~Philonous@user/philonous) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: synic (~squish@li74-118.members.linode.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: Zubin (~rubin@ender.afternet.org) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: jennings (~jennings@104.207.155.11) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: crunchy_david (~david@pgguru.net) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: mxco86 (~mxco86@user/mxco86) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: webstran- (~webstrand@user/webstrand) (Ping timeout: 256 seconds)
[02:20:47] *** danieli1 is now known as danieli
[02:20:47] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: ern (~ern@user/ern) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: systwi (~systwi@173-20-216-139.client.mchsi.com) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: entil (~mjt@nysv.org) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: koollman (~samson_t@user/koollman) (Ping timeout: 256 seconds)
[02:20:52] <StuckMojo> s/connections/connections, for example. i've done it/
[02:20:53] *** Joins: blinky43 (~quassel@jabber.blinkylight.net)
[02:20:55] *** Joins: c2main (~quassel@82.66.25.238)
[02:20:55] *** Quits: c2main (~quassel@82.66.25.238) (Changing host)
[02:20:55] *** Joins: c2main (~quassel@user/c2main)
[02:20:56] *** n_shp is now known as nsnhp
[02:21:02] *** nsnhp is now known as nshp
[02:21:11] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[02:21:18] *** Joins: cliluw (~cliluw@47.147.77.43)
[02:21:32] *** Joins: AlbertLast (~nix@0exclusive.de)
[02:21:38] *** Joins: shachaf (~shachaf@user/shachaf)
[02:21:45] *** Joins: johto (~marko@joh.to)
[02:21:49] *** Joins: mason (~mason@redhat/mason)
[02:21:58] *** Joins: jasonaowen (~owenja@user/jasonaowen)
[02:22:01] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[02:22:09] *** Joins: entil (~mjt@nysv.org)
[02:22:21] *** Joins: koollman (samson_t@sp1.kooll.org)
[02:22:22] *** Joins: crunchy_david (~david@pgguru.net)
[02:22:25] *** Joins: RonWhoCares_ (~ronpi@104.158.0.91)
[02:22:27] *** Joins: ern (~ern@user/ern)
[02:22:32] *** Joins: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net)
[02:22:32] *** Quits: hoppity (~hoppity@mobile-166-172-56-167.mycingular.net) (Changing host)
[02:22:32] *** Joins: hoppity (~hoppity@user/hoppity)
[02:22:39] *** Joins: simplicity (~yti@user/simplicity)
[02:23:01] *** Joins: janos (~janos@fedora/janos)
[02:23:04] <velix> StuckMojo: I'd be happy to have 100 users a month ;)
[02:23:05] *** Quits: koollman (samson_t@sp1.kooll.org) (Changing host)
[02:23:05] *** Joins: koollman (samson_t@user/koollman)
[02:23:12] *** Joins: Auron956 (Auron956@user/auron)
[02:23:15] <velix> StuckMojo: but I'll give it a try. thanks.
[02:23:48] *** Joins: lechner (~lechner@debian/lechner)
[02:23:57] <StuckMojo> oh, well just leave it then ;)
[02:24:21] <StuckMojo> session is guaranteed to work. transaction can be tricky if you set any session variables and such
[02:24:46] *** Quits: Auron (Auron956@user/auron) (Ping timeout: 272 seconds)
[02:25:25] *** Quits: RonWhoCares (~ronpi@104.158.0.91) (Ping timeout: 272 seconds)
[02:25:37] *** Joins: Zubin (rubin@2600:3c02::f03c:91ff:fe70:4a45)
[02:25:37] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[02:25:38] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[02:25:38] *** Joins: iliv (~iliv@user/iliv)
[02:26:09] *** Joins: mxco86 (~mxco86@user/mxco86)
[02:28:42] *** Joins: Guest2436 (~Joe@81-175-133-91.bb.dnainternet.fi)
[02:33:07] *** Joins: synic (~squish@li74-118.members.linode.com)
[02:33:52] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[02:33:56] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[02:34:18] *** Joins: dlam (~dlam@dlam.me)
[02:34:29] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:39:13] *** Quits: Guest2436 (~Joe@81-175-133-91.bb.dnainternet.fi) (Quit: Leaving...)
[02:40:19] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:45:46] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[02:47:17] <velix> I think combining the "queue" and notify/listen isn't that easy. Because when all workers are processing, the'll miss the notification.
[02:47:19] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (Remote host closed the connection)
[02:47:34] <velix> So polling from the workers might be better.
[02:49:04] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[02:49:23] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[02:49:27] *** Quits: hoppity (~hoppity@user/hoppity) (Remote host closed the connection)
[02:49:34] *** Joins: k8yun (~k8yun@user/k8yun)
[02:49:34] *** Quits: Snow-Man (~sfrost@tamriel.snowman.net) (Ping timeout: 250 seconds)
[02:49:40] <nbjoerg> velix: the idea is normally that after you are done with a task, you check again if there is work todo
[02:49:50] <nbjoerg> velix: or a notification pending
[02:49:52] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[02:50:15] <velix> nbjoerg: oh, I thought notifications are fired once only
[02:50:23] <velix> So when nobody listens, it's pending?
[02:50:24] <velix> interesting.
[02:50:34] <nbjoerg> no, I mean: you check the work table
[02:50:48] <nbjoerg> worker always has a listen registered
[02:53:55] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[02:54:37] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:59:59] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:01:17] *** Joins: Snow-Man (~sfrost@tamriel.snowman.net)
[03:01:42] *** Quits: zlinux (~zlinux@149.109.5.240) (Ping timeout: 250 seconds)
[03:04:02] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[03:04:31] <velix> nbjoerg: So, as soon as the job is done, I'll listen for a new job and try to attach then.
[03:04:52] <velix> nbjoerg: By my problem is, when there are 10 jobs in the queue while all workeres were processing, nobody will get notificated.
[03:05:24] <peerce> our workers always checked for more work before they exit
[03:05:38] <peerce> and they woke up on a timer, sleep 10 seconds, check for mroe work, do a whole batch.  rinse repeat
[03:05:47] <velix> Sure, but I'd do this by polling the queue table e.g. ever 10 seconds.
[03:05:48] <velix> Yeah
[03:06:11] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Ping timeout: 245 seconds)
[03:06:11] <velix> notify/listen is interesting, indeed. but the "normal polling" might be better for my case.
[03:06:39] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:7631:50ab:7dd5:742c) (Ping timeout: 250 seconds)
[03:07:01] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:09:00] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[03:11:36] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:70c7:798c:aae6:d9e1)
[03:13:16] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:14:15] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[03:16:27] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[03:18:38] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[03:19:02] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[03:20:08] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:20:50] *** Quits: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[03:24:49] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:27:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:31:21] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:31:48] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:33:05] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[03:36:36] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 240 seconds)
[03:36:45] <StuckMojo> ??auth
[03:36:45] <pg_docbot> https://www.postgresql.org/docs/current/static/client-authentication.html
[03:37:00] *** Quits: JamesHarrison (~jharrison@83.151.206.91) (Ping timeout: 240 seconds)
[03:40:11] *** Joins: nuh^ (~nuh@207.243.108.170)
[03:40:49] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[03:48:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[03:49:56] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[03:50:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:52:11] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[03:52:44] *** Joins: JamesHarrison (~jharrison@83.151.206.91)
[03:56:00] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[03:56:35] *** Quits: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:57:20] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:254f:fda4:cde:8b08) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:40] *** Quits: xinming (~xinming@115.221.13.9) (Ping timeout: 272 seconds)
[04:03:04] *** Joins: xinming (~xinming@115.221.9.212)
[04:05:57] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[04:10:05] *** Joins: xiongxin (~Thunderbi@117.136.39.218)
[04:26:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:29:08] *** Quits: jhammerman (~joe.hamme@205.209.24.227) (Quit: jhammerman)
[04:30:12] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 240 seconds)
[04:30:49] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[04:32:57] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[04:36:29] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[04:39:29] *** Joins: funhouse (~funhouse@user/funhouse)
[04:39:42] <funhouse> Does anyone know what Im doing wrong here?
[04:40:23] <funhouse> disregard thank you
[04:46:05] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[04:47:16] *** Joins: mniip (mniip@libera/staff/mniip)
[04:47:44] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Remote host closed the connection)
[04:48:58] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26)
[04:53:18] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:81f:6e:2be2:8546:ba26) (Ping timeout: 260 seconds)
[04:55:06] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[05:00:21] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[05:01:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:01:33] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[05:06:14] *** Joins: s3a (~s3a@ip216-239-66-174.vif.net)
[05:06:42] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 268 seconds)
[05:10:27] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:11:42] *** Quits: MrZeus_ (~MrZeus@185.195.232.164) (Ping timeout: 250 seconds)
[05:11:55] *** Quits: tehenderz (~tehenderz@ti0018a400-10211.bb.online.no) (Ping timeout: 256 seconds)
[05:12:01] *** Joins: tehenderz_ (~tehenderz@ti0018a400-10454.bb.online.no)
[05:12:37] *** Quits: tobs (~tobs@taboege.de) (Ping timeout: 240 seconds)
[05:12:46] *** Joins: tobs (~tobs@taboege.de)
[05:13:53] *** Quits: xiongxin (~Thunderbi@117.136.39.218) (Ping timeout: 256 seconds)
[05:14:41] *** Quits: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz) (Ping timeout: 252 seconds)
[05:15:41] *** Quits: Auron956 (Auron956@user/auron) ()
[05:16:12] *** Joins: jkavalik (~jkavalik@ip-78-102-141-139.net.upcbroadband.cz)
[05:18:35] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:18:54] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Killed (NickServ (GHOST command used by Nekomander)))
[05:19:33] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:20:38] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[05:22:13] <funhouse> is it possible to change a column to primary serial ?
[05:22:16] <funhouse> ALTER TABLE addresses6 ALTER COLUMN a_id TYPE SERIAL PRIMARY KEY;
[05:22:20] <funhouse> This doesnt seem to work
[05:24:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:26:24] <peerce> serial is not an actual datatype
[05:27:25] <peerce> alter table name alter column id add genereated always as identity;
[05:27:43] <funhouse> peerce ok, basically my column is currently an INTEGER, I want to change it so its the primary key with auto increment
[05:28:48] *** Joins: xiongxin (~Thunderbi@117.136.39.218)
[05:29:01] <peerce> alter table name add primary key (id)
[05:30:34] <peerce> you will also need to initialize the associated sequence to max(id)... like, select setval('sequencename', max(id)) from tablename;
[05:35:17] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[05:37:02] <velix> UH, why is this free? https://www.cybertec-postgresql.com/en/pgwatch2-v1-9-beta-released/
[05:37:11] <velix> I don't trust free stuff :D
[05:37:42] <velix> looks nice: https://demo.pgwatch.com/
[05:38:49] <velix> it has stats for about anything, even pgBouncer
[05:39:19] <velix> Other corporations want $$$$$ for this
[05:39:23] <velix> and even more $$$ a month
[05:39:25] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 240 seconds)
[05:46:37] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[05:55:00] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 240 seconds)
[05:57:49] *** Quits: f3f3lix (~weechat@55d4a3d9.access.ecotel.net) (Ping timeout: 256 seconds)
[05:59:17] *** Joins: f3f3lix (~weechat@55d4b9eb.access.ecotel.net)
[05:59:31] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[06:00:00] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[06:05:38] *** Quits: tozhu (~tozhu@218.89.234.137) (Quit: tozhu)
[06:07:55] <funhouse> peerce thank you again 🙏
[06:08:10] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:09:12] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[06:11:04] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:11:36] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 245 seconds)
[06:12:13] *** Joins: justAstache (~justache@user/justache)
[06:13:57] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 256 seconds)
[06:16:12] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[06:19:33] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[06:21:00] *** Quits: n0fun (~jack@i577BC0A3.versanet.de) (Ping timeout: 272 seconds)
[06:27:33] *** Quits: Su-Shee (~Susanne@p4ffc7919.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:29:15] *** Joins: Su-Shee (~Susanne@p5089413f.dip0.t-ipconnect.de)
[06:42:50] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[06:42:51] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[06:45:03] *** Quits: xiongxin (~Thunderbi@117.136.39.218) (Quit: xiongxin)
[06:46:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:46:22] <funhouse> hmm peerce how would I do the second query
[06:46:25] <funhouse> update?
[06:46:52] <funhouse> peerce when i do
[06:46:53] <funhouse>  ALTER TABLE addresses6 ADD PRIMARY KEY (a_id);
[06:47:00] <funhouse> column "a_id" of relation "addresses6" contains null values
[06:47:02] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 250 seconds)
[06:47:48] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[06:50:31] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 256 seconds)
[06:51:19] *** Joins: Vacuity (~Vacuity@user/vovo)
[06:52:14] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 250 seconds)
[06:56:46] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[07:07:23] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:09:57] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:10:31] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:10:32] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:12:36] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:70c7:798c:aae6:d9e1) (Ping timeout: 240 seconds)
[07:18:02] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[07:18:17] <dodobrain> hi all, i'm not sure if i should be asking here or in #python or elsewhere. with psycopg2 if i attempt to execute a statement such as pgcursor.execute("SET ROLE org-foo"), i get a psycopg2.errors.SyntaxError: syntax error at or near "-"
[07:18:41] <dodobrain> is this a known issue or something i'm not doing correctly ?
[07:19:35] *** jazzy2 is now known as jazzy
[07:19:42] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[07:19:58] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[07:19:58] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[07:19:58] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[07:20:44] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:22:26] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 245 seconds)
[07:23:49] <dodobrain> err, my bad.. it was quoting
[07:36:39] *** Quits: SwK (~SwK_@user/swk) (Read error: Connection reset by peer)
[07:37:04] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[07:37:18] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[07:37:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:41:47] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[07:43:15] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 256 seconds)
[07:44:59] *** Shells is now known as Michelle
[07:46:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:48:35] *** Quits: sreve (~quassel@p549d706d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:48:49] *** Joins: sreve (~quassel@p549d70f6.dip0.t-ipconnect.de)
[07:49:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:50:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:50:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:51:49] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[07:51:50] *** Joins: k8yun (~k8yun@user/k8yun)
[07:56:17] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 256 seconds)
[07:57:16] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[08:02:36] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:9d4b:bf25:26b7:c649) (Ping timeout: 240 seconds)
[08:04:42] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:7401:e850:bd68:4c37)
[08:06:02] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[08:06:12] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[08:11:44] *** Joins: carragom (~textual@201.204.94.76)
[08:15:06] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:16:34] *** Joins: SwK (~SwK_@2600:1700:5360:40d0:1def:9524:9552:263b)
[08:16:34] *** Quits: SwK (~SwK_@2600:1700:5360:40d0:1def:9524:9552:263b) (Changing host)
[08:16:34] *** Joins: SwK (~SwK_@user/swk)
[08:17:29] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 256 seconds)
[08:21:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:26:38] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[08:30:51] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[08:31:25] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 256 seconds)
[08:31:47] *** Joins: TzilTzal (~TzilTzal@58.96.213.198)
[08:32:33] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 256 seconds)
[08:35:07] *** Joins: tozhu (~tozhu@139.207.169.35)
[08:35:07] *** Quits: tozhu (~tozhu@139.207.169.35) (Client Quit)
[08:35:35] *** Quits: nuh^ (~nuh@207.243.108.170) (Remote host closed the connection)
[08:35:40] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[08:35:46] *** Quits: TzilTzal (~TzilTzal@58.96.213.198) (Client Quit)
[08:37:00] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:39:03] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[08:46:33] *** Joins: zlinux (~zlinux@149.109.5.240)
[08:47:28] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:2f72:a092:8fb5:c5ec)
[08:51:47] *** Quits: Xgc (~Xgc@user/xgc) (Ping timeout: 256 seconds)
[08:55:07] *** Joins: Xgc (~Xgc@user/xgc)
[08:58:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:59:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:59:58] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[09:01:37] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[09:02:03] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:02:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[09:08:36] *** Quits: tehenderz_ (~tehenderz@ti0018a400-10454.bb.online.no) (Ping timeout: 240 seconds)
[09:09:11] *** Joins: tehenderz (~tehenderz@ti0018a400-10675.bb.online.no)
[09:09:28] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 272 seconds)
[09:09:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:10:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:10:40] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:12:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[09:12:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[09:17:44] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:32:33] *** Joins: ba|ch (~user@p200300f3a70c0de379267f3d2e9e5d8b.dip0.t-ipconnect.de)
[09:32:57] *** Quits: bird (~bird@136-25-143-83.cab.webpass.net) (Quit: bird)
[09:33:59] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:34:36] *** Joins: bird (~bird@136-25-143-83.cab.webpass.net)
[09:36:19] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:37:23] *** Joins: manti7 (~manti7@176.10.104.94)
[09:38:54] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:42:55] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:44:12] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:44:25] *** Joins: rvalue (~rvalue@user/rvalue)
[09:51:04] *** Quits: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net) (Quit: WeeChat 2.8)
[09:51:39] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:52:33] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:54:56] *** Quits: netameta_ (~netameta@2a00:a040:193:50fe:3c90:62f7:61d3:94f9) (Ping timeout: 245 seconds)
[09:55:13] *** Joins: gslin (~gslin@114-34-121-114.hinet-ip.hinet.net)
[10:04:27] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:06:33] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[10:07:59] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[10:10:11] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:10:51] *** Joins: fef (~thedawn@user/thedawn)
[10:11:26] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[10:15:21] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[10:17:27] *** Joins: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch)
[10:17:37] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:2f72:a092:8fb5:c5ec) (Ping timeout: 240 seconds)
[10:18:22] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[10:20:16] *** Joins: darutoko (~darutoko@37.21.249.141)
[10:21:37] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 240 seconds)
[10:22:09] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Ping timeout: 252 seconds)
[10:22:58] *** Joins: Giovanni (~Giovanni@31.206.54.14)
[10:25:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:26:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[10:33:11] *** Joins: randir (~randir@93.159.239.42)
[10:34:12] *** Joins: mrwick (~mrwick@user/mrwick)
[10:36:12] *** Joins: shiranaihito (~textual@219.85.159.146)
[10:37:40] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[10:40:23] *** Joins: ponsfrilus1 (~Thunderbi@vpn-251-179.epfl.ch)
[10:41:21] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:41:48] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[10:41:49] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:41:56] *** Quits: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch) (Ping timeout: 272 seconds)
[10:41:56] *** ponsfrilus1 is now known as ponsfrilus
[10:42:57] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:45:01] *** Quits: Giovanni (~Giovanni@31.206.54.14) (Remote host closed the connection)
[10:45:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 260 seconds)
[10:47:27] *** Quits: fcr (~fran@r186-48-67-193.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[10:55:34] *** Joins: fcr (~fran@r167-56-79-74.dialup.adsl.anteldata.net.uy)
[10:56:25] *** Joins: gleu (~guillaume@pop.92-184-121-19.mobile.abo.orange.fr)
[10:58:12] *** Quits: tehenderz (~tehenderz@ti0018a400-10675.bb.online.no) (Ping timeout: 240 seconds)
[10:58:50] *** Joins: tehenderz (~tehenderz@ti0018a400-10760.bb.online.no)
[10:59:22] <mhmd> Hi, I'm learning about access control in postgres. by default pg_hba.conf contains "local all all _ peer", it also contains "local all postgres _ peer" and "host all all 127.0.0.1/32 scram-sha-256". The first rule seems to covering the two other roles, so why those two rules exist?
[11:01:10] <Zr40> 'local' means unix socket, not localhost. So it's distinct from the last rule
[11:02:19] <Zr40> the rule for user 'postgres' exists by default so that you can remove or change the rule for all users without removing the ability to log in using the OS user named 'postgres'
[11:02:23] <Zr40> first matching rule wins
[11:02:57] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[11:05:00] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[11:06:21] <mhmd> so 'user' here means OS user and not DB user?
[11:07:18] <mhmd> DB users are separate from OS users, right?
[11:07:59] <capitol> yes, they are separate
[11:08:32] <mhmd> which one is pg_hba.conf pointing to?
[11:09:59] <mhmd> I think an OS user named 'postgres is also created when postgres is installed
[11:10:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:10:32] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 240 seconds)
[11:11:39] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:11:44] <mhmd> and postgres has a database user with name 'postgres'
[11:11:59] <mhmd> which is a little confusing
[11:12:08] <mhmd> if that's correct
[11:12:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:12:46] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:13:11] *** Joins: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de)
[11:16:09] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Client Quit)
[11:16:25] <Zr40> users in pg_hba.conf relate to database users
[11:16:40] <Zr40> and when peer auth is used, that would permit logins from same-named OS users
[11:17:14] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:18:38] <mhmd> aha
[11:18:56] <mhmd> and other than peer, it's database user
[11:19:20] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Client Quit)
[11:20:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[11:22:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.126)
[11:25:18] <mhmd> I don't think that I would be using unix socket connections directly a password protected TCP connection seems fine, so if I have access to database via tcp, is it safe to remove the 'local' connections? or are there other tools using it by default, and removing it will break them?
[11:25:48] *** Joins: shka (~herr@109.231.3.55)
[11:25:55] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:28:48] *** Joins: rendar (~rendar@user/rendar)
[11:28:52] *** Quits: shiranaihito (~textual@219.85.159.146) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:31:20] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[11:34:19] *** Joins: palasso (~palasso@user/palasso)
[11:34:31] *** Joins: michalz (~michalz@185.246.204.93)
[11:36:39] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[11:36:47] *** Quits: dminuoso (~dminuoso@static.88-198-218-68.clients.your-server.de) (Changing host)
[11:36:47] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[11:36:53] *** Joins: randir (~randir@93.159.239.42)
[11:42:17] *** Joins: shiranaihito (~textual@2001-b011-4011-3c80-191f-b869-8b3f-22db.dynamic-ip6.hinet.net)
[11:46:13] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[11:47:41] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[11:49:09] *** Joins: ivii (~ivan@user/ivii)
[11:50:22] *** Joins: robert_sss (~robert@185.183.147.199)
[11:50:37] <robert_sss> ??paste
[11:50:37] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[11:50:37] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[11:52:04] *** Quits: gleu (~guillaume@pop.92-184-121-19.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[11:54:11] *** Joins: gleu (~guillaume@pop.92-184-121-19.mobile.abo.orange.fr)
[12:00:28] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 272 seconds)
[12:00:57] *** Joins: tozhu (~tozhu@14.26.19.108)
[12:00:59] *** Quits: tozhu (~tozhu@14.26.19.108) (Client Quit)
[12:01:40] *** Joins: jazzy3 (~jaziz@user/jaziz)
[12:03:53] *** Quits: robert_sss (~robert@185.183.147.199) (Quit: Konversation terminated!)
[12:05:12] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[12:05:31] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Read error: Connection reset by peer)
[12:05:32] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[12:08:51] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[12:09:35] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 240 seconds)
[12:10:17] *** jazzy3 is now known as jazzy
[12:12:57] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[12:13:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[12:14:08] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[12:20:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7c7e:38e:e009:ee02)
[12:22:33] *** Joins: MrZeus_ (~MrZeus@89.238.176.167)
[12:23:45] *** Joins: xocolatl_ (~xocolatl@193.32.126.231)
[12:24:59] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Quit: Leaving.)
[12:26:15] *** Quits: xocolatl (~xocolatl@193.32.126.237) (Ping timeout: 256 seconds)
[12:27:17] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[12:27:18] *** Joins: Auron (Auron956@user/auron)
[12:32:29] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[12:33:19] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a)
[12:34:00] *** Joins: Guest6803 (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp)
[12:34:45] *** Quits: Tuju (~tuju@214-204-50-195.sta.estpak.ee) (Ping timeout: 256 seconds)
[12:35:19] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[12:41:37] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (Ping timeout: 240 seconds)
[12:45:06] *** Joins: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net)
[12:45:51] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 256 seconds)
[12:46:36] *** Quits: Guest6803 (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 240 seconds)
[12:48:12] <ne2k> Zr40 what happens to ident auth if a user's username is changed while they're logged in? I presume this attack avenue has been explored and closed off?
[12:48:41] *** Joins: xocolatl (~xocolatl@194.110.113.87)
[12:48:43] <ne2k> or maybe there isn't even any possible threat there. just thougth it was intriguing
[12:51:39] *** Quits: xocolatl_ (~xocolatl@193.32.126.231) (Ping timeout: 250 seconds)
[12:51:45] *** Joins: xocolatl__ (~xocolatl@193.32.126.219)
[12:52:26] *** Quits: dreinull30 (~dreinull@2a01:4f8:1c1c:8981::1) (Quit: The Lounge - https://thelounge.chat)
[12:53:45] *** Joins: dreinull30 (~dreinull@2a01:4f8:1c1c:8981::1)
[12:53:58] *** Joins: xocolatl_ (~xocolatl@193.32.126.213)
[12:55:09] *** Quits: xocolatl (~xocolatl@194.110.113.87) (Ping timeout: 256 seconds)
[12:55:34] <Zr40> ne2k: if they're already authenticated, well, they're already inside
[12:55:51] <Zr40> but for new connections the new name of course applies
[12:56:55] <ne2k> Zr40, I guess I was thinking of whether you could somehow become more privileged by... I don't know, really. ;-) don't think I've quite woken up yet
[12:57:10] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[12:57:13] *** Quits: xocolatl__ (~xocolatl@193.32.126.219) (Ping timeout: 268 seconds)
[12:57:25] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[12:57:33] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:03:02] *** Quits: gleu (~guillaume@pop.92-184-121-19.mobile.abo.orange.fr) (Ping timeout: 240 seconds)
[13:05:00] *** Joins: TomyWork (~TomyLobo@p200300e80f1582006cfbc2328999b9c3.dip0.t-ipconnect.de)
[13:09:08] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[13:09:48] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[13:10:08] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[13:10:16] *** Joins: jtomas (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[13:12:43] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: au revoir)
[13:14:29] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[13:15:21] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Client Quit)
[13:15:45] *** Joins: zz1 (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp)
[13:16:14] *** Joins: gleu (~guillaume@pop.92-184-121-95.mobile.abo.orange.fr)
[13:17:00] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[13:17:41] <velix> I've played with notfiy/listen now, but for my processing tasks, it's really not useful. I'm always missing tasks. So when I need to check the queue the "normal way" AND the "listen way", it's double to trouble :D
[13:17:44] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 272 seconds)
[13:18:04] *** zz1 is now known as zz
[13:18:08] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[13:18:33] *** Quits: zz (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp) (Killed (NickServ (GHOST command used by anyone!~filler@a4.inai.de)))
[13:18:52] *** Joins: zz (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp)
[13:18:54] *** Quits: zz (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp) (Killed (NickServ (GHOST command used by anyone!~filler@a4.inai.de)))
[13:19:44] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:20:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:21:05] <Myon> it's most useful to wake up listeners, yeah
[13:21:24] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 240 seconds)
[13:21:35] <ne2k> velix, I haven't used it. what goes wrong that makes you miss things when using listen?
[13:22:34] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[13:22:56] <velix> ne2k: let me draw an image
[13:23:05] <velix> words aren't easy here.
[13:23:09] <Berge> velix: https://gist.github.com/berge/fa26304f968ca64ef8c45eecffe5039c
[13:25:07] <velix> ne2k: https://bpa.st/raw/SLHQ
[13:25:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:25:59] <velix> Berge: +1
[13:28:44] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:33:52] *** Quits: carragom (~textual@201.204.94.76) (Quit: Textual IRC Client: www.textualapp.com)
[13:37:06] <velix> I'll really do good old polling then :D
[13:37:18] <velix> worker done: poll, poll, poll.
[13:38:00] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[13:42:05] <aLeSD[m]> hi guys
[13:44:11] <aLeSD[m]> I have a big problem : I have to create a table with a uint256 as PK  ... how ?
[13:44:38] <aLeSD[m]> if I use a TEXT it is terrible slowly on UPDATEs
[13:45:12] <rk4> curious as to how slow terribly slow is
[13:46:00] <aLeSD[m]> lol
[13:47:20] <aLeSD[m]> BIGINT is not enough
[13:47:40] <ne2k> aLeSD[m], use numeric
[13:48:00] <ne2k> aLeSD[m], https://stackoverflow.com/a/69441515
[13:48:28] *** Joins: n0fun (~jack@mue-88-130-48-071.dsl.tropolys.de)
[13:48:36] <ne2k> aLeSD[m], also... why would you use text to store a number? and how did you determine that something was slow? what is meant by slow? what type of updates?
[13:50:25] <aLeSD[m]> UPDATE assets SET prop=$1 WHERE is=$2;
[13:50:33] <aLeSD[m]> s/is/id/
[13:50:41] <aLeSD[m]> id is the uint256
[13:50:59] <aLeSD[m]> I have to run 10000 updates sometimes
[13:51:45] <ne2k> aLeSD[m], are you calling update separately 10000 times?
[13:52:52] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[13:52:52] *** Joins: iliv (~iliv@user/iliv)
[13:53:08] <aLeSD[m]> inside a BEGIN COMMIT tx
[13:53:51] <aLeSD[m]> ne2k: is it ok ?
[13:54:52] <ne2k> aLeSD[m], if so, that's probably your problem... you want to use something like this: update assets set prop=s.prop where id=s.id from json_to_recordset('[{"id":1,"prop":"a"},{"id":2,"prop":"b"},...]') as s(id int, prop text);
[13:55:29] <Myon> update test set t = v.t from (values (1, 'a'), (2, 'b')) v(id, t) where test.id = v.id;
[13:56:02] <ne2k> aLeSD[m], or you could do insert into assets(id, prop) values (1, 'a'), (2, 'b') on conflict (id) do update set prop=excluded.prop;
[13:56:27] <ne2k> Myon, I refrained from recommending values because processing very large values lists is (or at least was) monstrously inefficient
[13:56:53] <aLeSD[m]> ok ... I will try to give it a try
[13:56:56] <Myon> true, though at that point a temp table makes sense
[13:57:33] <Myon> but the values version doesn't need ('[{"  :)
[13:57:36] <ne2k> Myon, json_to_recordset was recommended to me when I had that problem and the performance improvement was beyond astonishing, and I've been swearing by it since
[13:58:27] <ne2k> Myon, particularly as the application I was writing was in node and turning the stuff to insert or update into a json is veh easy
[13:58:35] <Myon> ack
[13:58:39] <ne2k> ack?
[13:58:52] <Myon> acknowledgement
[13:59:10] <ne2k> Myon, ah. wondered if it might be a sort of "aiyah" type of exclamation of despair ;-)
[13:59:16] <Myon> (man ascii)
[13:59:20] <ne2k> like argh
[13:59:29] <ne2k> yeah, I know... but some people do say ACK to mean, like, ARGH
[13:59:52] <Myon> not tech people
[14:00:18] <ne2k> tech people is a continuum... lol. best to check
[14:01:37] *** Quits: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[14:01:49] *** Joins: tozhu (~tozhu@119.128.179.209)
[14:03:51] <aLeSD[m]> ne2k: I will use insert into assets(id, prop) values (1, 'a'), (2, 'b') on conflict (id) do update set prop=excluded.prop;
[14:03:54] <aLeSD[m]> is it fast ?
[14:04:08] <aLeSD[m]> but what is the syntax (1, 'a') ?
[14:04:17] <Myon> give it a try
[14:04:36] <Myon> VALUES can contain more than one row, that's the first one
[14:09:04] *** Joins: merzo (~Thunderbi@192.162.238.196)
[14:12:15] <ne2k> ??values
[14:12:16] <pg_docbot> https://www.postgresql.org/docs/current/static/sql-values.html
[14:12:31] <ne2k> aLeSD[m], you're not familiar with values lists?
[14:15:09] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[14:20:27] *** Quits: tozhu (~tozhu@119.128.179.209) (Quit: tozhu)
[14:22:51] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:27:38] <aLeSD[m]> I am unfamiliar with everuthing
[14:27:40] <aLeSD[m]> s/everuthing/everything/
[14:27:51] *** Quits: Tuju (~tuju@214-204-50-195.sta.estpak.ee) (Remote host closed the connection)
[14:28:53] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[14:30:11] *** Joins: Tuju (~tuju@214-204-50-195.sta.estpak.ee)
[14:33:47] <ne2k> aLeSD[m], what are you doing this from? some programming language?
[14:34:24] <velix> Myon: aren't you the package master? Did you see an alternative for this? https://github.com/Jakeii/nanoid-postgres
[14:34:31] *** Quits: ferz (~ferz@146-241-187-124.dyn.eolo.it) (Ping timeout: 245 seconds)
[14:35:08] <Myon> velix: pgspeck?
[14:36:21] <velix> Myon: I think it's something different. This snippet creates nanoids
[14:36:44] <velix> no encryption, but pgspeck is on my list now ;)
[14:37:15] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[14:37:40] <velix> I guess the snippet is so straight forward that I can use it.
[14:37:56] <Myon> is that about alphanumeric ids? that's what pgspeck does, iirc
[14:38:22] <velix> Myon: it actually creates statistically unique, short uuids.
[14:39:20] <Myon> I first parsed that as NaN-OID
[14:39:50] <velix> hrhrhrhrhr
[14:41:02] <Myon> what about base64(uuid())?
[14:42:34] <velix> Myon: there are statistical analyses of those stuff and base64(uuid) etc. have highly collision rates and are NOT nano ;)
[14:42:48] <velix> Myon: there is a challenge to generate a short, but statistically unique ID.
[14:42:49] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:42:57] <velix> And nanoid can do this damn quick and statistically unique.
[14:43:29] <velix> it's very unlikely to create the same ID from a length >= 8
[14:43:49] <velix> there are calculators for this on several websites, which calculate the wahrscheinlich
[14:43:52] <velix> eerm propability
[14:49:39] <ne2k> Wahrscheinlichkeitsrechnungslehrergewerkschaftvorsitzender
[14:50:56] *** Joins: ferz (~ferz@146-241-198-147.dyn.eolo.it)
[14:52:28] <maret> Quick question about how to do optimistic locking logic. Right now I am inserting and /or updating multiple values using insert into table foo (col_a) values('row1'), ('row2'),('row3),  ... ON conflict(unique_constrain) DO UPDATE SET col_a = excluded.col_a;
[14:52:57] <maret> now I wan to add optimistic locking based on updated_at column
[14:53:28] <velix> ne2k: I have longer words than this in #postgresql-lounge.
[14:54:20] <maret> my question is should I split the query above into batch insert and batch update with where updated_at = XYZ condition or  should I rewrite the query  above to include where clause using created_at column for existing rows
[14:55:03] <ne2k> velix: my favourite real one is Rindfleischettiketierungsüberwachungsaufgabenübertragungsgesetz
[14:55:21] *** Quits: ferz (~ferz@146-241-198-147.dyn.eolo.it) (Ping timeout: 245 seconds)
[14:55:56] <ne2k> I still can't quite get my head around whether you do or don't insert -s or -en when forming compounds
[14:56:23] <Myon> -s is Genitiv, -en is Plural
[14:56:39] *** Joins: tozhu (~tozhu@119.128.179.209)
[14:56:41] *** Joins: Klinda (~superleag@user/klinda)
[14:59:15] <ne2k> Myon, but sometimes you get neither, or other things https://www.dartmouth.edu/~deutsch/Grammatik/Wortbildung/Komposita.html#:~:text=the%20two%20parts%20of%20the%20compound%20may%20also%20have%20a%20connecting%20element%20(die%20Fuge)%20that%20can%20have%20various%20forms I don't think it's entirely logical, and you have to get a feel for it
[15:00:42] <Myon> I don't know either :)
[15:00:54] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:07:26] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 260 seconds)
[15:08:37] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[15:09:07] *** Joins: nyov (~nyov@user/nyov)
[15:12:56] <PSz> Hello. I can't find any info about FTS operator '<2>' in tsquery.
[15:14:25] <PSz> There is only '<->' operator in documentation.
[15:14:50] *** Joins: ferz (~ferz@146-241-198-147.dyn.eolo.it)
[15:16:01] <PSz> Let's try: SELECT websearch_to_tsquery('english', '"pg: test test"'); -- Result: 'pg' <2> 'test' <-> 'test'
[15:16:44] *** Joins: mattil (~mattil@87-92-22-248.bb.dnainternet.fi)
[15:16:44] *** Quits: mattil (~mattil@87-92-22-248.bb.dnainternet.fi) (Read error: Connection reset by peer)
[15:17:11] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:17:28] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[15:17:28] *** Quits: randir (~randir@93.159.239.42) (Quit: Leaving...)
[15:17:51] *** Joins: randir (~randir@93.159.239.42)
[15:19:05] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[15:20:34] *** Joins: ekathva (~ekathva@2001:999:51:19b8:865d:874e:7a83:9797)
[15:22:38] <depesz> I don't see <2> in there: 'pg' <-> 'test' <-> 'test'
[15:22:59] <depesz> I do see <2> in pg13, though
[15:23:54] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a)
[15:25:37] <depesz> PSz: https://www.postgresql.org/docs/13/textsearch-intro.html and sach for <2>
[15:25:39] <depesz> search
[15:28:12] *** Joins: Atque (~Atque@user/atque)
[15:31:38] *** Quits: randir (~randir@93.159.239.42) ()
[15:32:46] <aLeSD[m]> <ne2k> "aLeSD, what are you doing this..." <- ne2k: from golang
[15:33:30] <ne2k> aLeSD[m], personally, I would use the json_to_recordset approach
[15:33:53] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:34:00] <ne2k> I'm guessing you have an array of id/prop pairs you want to overwrite
[15:34:55] <ne2k> you could just make it an array of two-element arrays if it's always the same prop, rather than an object, which would reduce the size of the json. if there's any reason to care about that. which there probably isn't
[15:39:06] *** Joins: rufito (~phil@186-79-11-47.baf.movistar.cl)
[15:44:18] <ne2k> is there way to check in a check constraint that a string is a valid ipv4 address (via cast to inet type) without writing a nasty regex? e.g. check string::inet does not raise invalid input syntax error
[15:44:44] <ne2k> I suspect I could do a function with a try/catch in it and return true/false, but wanted to know if there was a built-in way
[15:46:00] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[15:47:06] <Myon> try-catch
[15:47:20] <Myon> or use an inet column in the first place
[15:47:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[15:49:49] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:53:39] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 256 seconds)
[15:55:51] <ne2k> Myon, I know about begin exception end in plpgsql. are you saying there's an actual try-catch thing that I can use without writing a function?
[15:57:22] <Myon> no, you have to do exactly that
[15:57:55] <Myon> a "would this input be valid for type X" function would be nice to have
[15:59:43] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[15:59:43] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[15:59:43] *** Joins: iliv (~iliv@user/iliv)
[16:00:22] <ne2k> Myon, can the type be specific as some internal reference that can be a value, or would it have to be text and dynamic sql?
[16:00:54] <ne2k> also, can you have anonymous functions that return values? I know about DO but that's void only
[16:00:55] <Myon> sounds like dynamic sql is needed
[16:01:14] <ne2k> Myon, I was just wondering how types are stored internaly
[16:02:09] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[16:02:19] <ne2k> and whether you can cast by using an internal type identifier
[16:02:49] <Myon> no
[16:04:54] <ilmari> someting like execute format('select %I %L', typename, value);
[16:04:57] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[16:07:11] <ne2k> ilmari thank you, that %I and %L knowledge has saved me much pain with quoting...
[16:07:14] <ilmari> hm, no, it needs to be %s, not %I
[16:07:30] <ilmari> type names like "double precision" need to _not_ be quoted
[16:07:42] <Myon> but others have to...
[16:08:09] <ilmari> such as?
[16:08:16] <Myon> create type "foo bar" ...
[16:08:52] <Myon> maybe looking up the type input function and calling that directly is easier
[16:09:45] <aLeSD[m]> ne2k: thanks
[16:09:57] <Myon> select typinput from pg_type where oid = 'double precision'::regtype;
[16:10:32] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a)
[16:11:50] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 260 seconds)
[16:13:16] <ilmari> Myon: how about typmodin? and then you need to know what the arguments are if they take more than just the value (e.g. enum_in, range_in, timestamp_in)
[16:13:49] <ilmari> I assume the oid argument is the type, but what is the integer? the length/precision?
[16:14:25] <maret> I have a date '2022-03-02 10:20:19.017918 +00:00' as a string, how do I convert it so I can use in where clause againts timestamp with time zone column (values comes from the database)
[16:14:54] <maret> should I use TO_TIMESTAMP and fill format?
[16:15:57] <ne2k> https://dbfiddle.uk/?rdbms=postgres_14&fiddle=606e68a5ef3dbd58246022a7222f75df
[16:16:22] <ne2k> maret, ::timestamptz
[16:16:34] <ilmari> maret: it will automatically be converted if you do timestamptz_column = '…'
[16:16:44] <ne2k> ah yes, that's true
[16:17:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:30] <maret> in my case i got an error operator does not exist: text = timestamp with time zone Hint: No operator matches the given name and argument types. You might need to add explicit type casts.
[16:17:38] <ne2k> Myon, ilmari, see fiddle. seems to work but I'm not sure it handles edge cases. feels like something that ought to be built in
[16:17:58] <ilmari> maret: change the order of the operands
[16:18:09] <ilmari> the column needs to be on the left
[16:18:18] <ilmari> (for the type inference and automatic casting to work)
[16:20:45] <ne2k> but I guess it might encourage more dynamic dumbness and storing everything as text, rather than using columns properly
[16:20:57] *** Joins: Rashad (~textual@2a01:9700:1356:c700:40e4:f44c:4548:bcbb)
[16:21:08] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:21:09] <ilmari> maret: see https://www.postgresql.org/docs/current/typeconv-oper.html for how operator type resolution works
[16:21:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[16:21:32] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:22:49] <ne2k> Myon, it seems you can just put the cast in the check constraint and it "does the right thing", afaics.
[16:23:12] <ne2k> so seemingly no function required https://dbfiddle.uk/?rdbms=postgres_14&fiddle=d2416dbfeeb1ff196a3fa426e07d2050
[16:23:40] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:24:00] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[16:24:13] <ne2k> Myon, am I missing something dumb or is this a valid approach?
[16:24:40] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[16:26:56] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[16:27:44] <ilmari> I guess the check expression throwing the exception is just as valid as postgres itself throwing it when the expression returns false
[16:28:03] <ilmari> but again. why not just use an inet column?
[16:28:33] <ilmari> you could also define it as a domain, so you can reuse it
[16:29:17] <maret> thanks I had to cast. Btw is it save to use updated_at for optimistic locking?
[16:31:15] *** Quits: merzo (~Thunderbi@192.162.238.196) (Remote host closed the connection)
[16:34:21] *** Joins: ponsfrilus1 (~Thunderbi@vpn-251-179.epfl.ch)
[16:35:44] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[16:36:36] *** Quits: ponsfrilus (~Thunderbi@vpn-251-179.epfl.ch) (Ping timeout: 272 seconds)
[16:36:37] *** ponsfrilus1 is now known as ponsfrilus
[16:38:07] *** Joins: merzo (~Thunderbi@192.162.238.196)
[16:40:39] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Read error: Connection reset by peer)
[16:41:11] *** Joins: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net)
[16:43:13] <Myon> ilmari: good question, but aren't typmods always optional?
[16:43:33] <Myon> (real verification with the typmod would be even better, of course)
[16:44:27] <Myon> ne2k: if you want errors, you might as well use the real type for the column
[16:44:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:46:26] <ilmari> Myon: more fun. enum_in and range_in want the actualy type OID, as you'd expect, but array_in wants the _base_ type
[16:46:53] <ilmari> e.g. array_in('{1,2,3}', 'int'::regtype, 0), not 'int[]'::regtype
[16:47:14] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[16:47:19] <ilmari> i.e. the element type, not the array type
[16:47:23] <PSz> depesz: Thx.
[16:48:38] *** Quits: john_johnk (~Thunderbi@102.178.207.77.rev.sfr.net) (Ping timeout: 272 seconds)
[16:48:51] <Myon> ilmari: sounds like a built-in function might make a lot of sense if building it from scratch isn't trivial
[16:49:06] <Myon> though most cases will need it for a fixed type where it's not a problem
[16:50:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:56:07] *** Joins: mlaogd^ (~mlaogd@207.243.108.170)
[16:56:59] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:10:16] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[17:10:36] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[17:13:22] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[17:15:20] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[17:15:38] *** Joins: twb (~twb@203.7.155.73)
[17:16:10] *** Joins: randir (~randir@93.159.239.42)
[17:16:26] <twb> Does psql have an output format similar to sqlite3 -line?  I want to just get a single row that's got a lot of columns, so I want written "downwards" instead of "rightwards", if you know what I mean
[17:16:38] <twb> Something deb822/ldif-ish
[17:17:43] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:17:43] <twb> "\? variables" mentions format but doesn't give much detail
[17:17:50] <Myon> twb: \x \gx psql -x
[17:18:06] <twb> Myon: perfect
[17:18:11] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[17:18:40] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:20:43] *** Quits: randir (~randir@93.159.239.42) (Client Quit)
[17:25:12] *** Joins: randir (~randir@93.159.239.42)
[17:26:08] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[17:27:37] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[17:27:50] *** Quits: bmomjian1 (~bruce@momjian.us) (Read error: Connection reset by peer)
[17:27:52] *** Joins: bmomjian (~bruce@momjian.us)
[17:29:22] *** Joins: jringstad__ (~Amadiro@191.96.180.90)
[17:29:24] *** Quits: jringstad__ (~Amadiro@191.96.180.90) (Remote host closed the connection)
[17:29:43] *** Joins: jringstad__ (~Amadiro@191.96.180.90)
[17:30:47] *** Quits: jringstad__ (~Amadiro@191.96.180.90) (Remote host closed the connection)
[17:31:04] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[17:31:48] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 240 seconds)
[17:32:20] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Ping timeout: 272 seconds)
[17:33:00] *** Joins: Amadiro (~Amadiro@191.96.180.90)
[17:35:22] *** Joins: kakashiA1 (~kakashi@41.141.67.71)
[17:44:31] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[17:44:40] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:46:32] *** Quits: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 240 seconds)
[17:46:43] *** Joins: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net)
[17:46:59] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[17:53:22] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[17:54:14] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[17:55:08] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 272 seconds)
[17:55:22] *** Joins: justAstache (~justache@user/justache)
[17:55:59] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:58:18] *** Quits: michalz (~michalz@185.246.204.93) (Ping timeout: 272 seconds)
[18:00:46] *** Quits: s3a (~s3a@ip216-239-66-174.vif.net) (Ping timeout: 245 seconds)
[18:03:05] *** Joins: michalz (~michalz@185.246.204.77)
[18:05:59] *** Joins: bancroft (~bancroft@user/bancroft)
[18:06:39] <bancroft> Can you configure postgres to prioritize CPU power on replication instead of servicing user queries?
[18:06:52] <bancroft> strickly on the read-only databases
[18:08:25] <Myon> not really
[18:08:55] <Myon> is replay CPU-bound for you as opposed to IO-bound?
[18:09:18] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[18:09:31] <bancroft> it is CPU bound
[18:09:46] <bancroft> a single long query can produce replication lag spikes
[18:10:03] <Myon> that doesn't prove anything
[18:10:18] <Myon> lag measured how?
[18:10:21] <bancroft> ***corr. a ton of slow queries does this
[18:10:39] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[18:10:47] <Yngve> how do you know they are CPU bound?
[18:12:08] <bancroft> There was a high CPU utilization as reported by prometheus, might be due to slow queries keeping CPU under load. These slow queries triggers a series of events viz: slow queries keeping CPU busy > which increases replication lag as we are using synchronous replication > which in turn increases the query duration and deadlocks and conflicts.
[18:13:05] <bancroft> if I could prioritize replication instead of servicing user queries then that would solve my problem, but as someone else posted above that's not possible
[18:15:51] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:16:23] <Myon> it might just be a replication conflict due to vacuum
[18:16:59] <Myon> do you have hot_standby_feedback enabled?
[18:17:38] <bancroft> on the standby yes I have it enabled
[18:18:30] <Myon> you probably shouldn't use HA standby servers for load balancing then
[18:20:02] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[18:21:16] <bancroft> forgive me but what does that have to do with hot_standby_feedback being enabled?
[18:21:44] <bancroft> my processes pick a random replica to connect to for reading
[18:22:57] <Myon> if replay is halted because of a replication conflict, sync repl will also halt
[18:23:23] <Myon> if you want the sync standby to be responsive, don't put queries on it
[18:25:13] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[18:25:34] *** Joins: vit (~vit@chello085216193138.chello.sk)
[18:25:51] *** Quits: merzo (~Thunderbi@192.162.238.196) (Quit: merzo)
[18:25:56] *** vit is now known as Guest3952
[18:25:59] <ne2k> is there some obvious reason why insert on conflict do nothing doesn't work for check constraints?
[18:26:15] <Myon> "on conflict"
[18:26:40] <ne2k> doesn't the data you're trying to insert conflict with the check constraint?
[18:26:54] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:26:58] <Myon> that's a different failure mode
[18:27:11] *** Joins: sabra_ (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net)
[18:27:18] *** Quits: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 250 seconds)
[18:27:30] <ne2k> my point is, would it be dumb to want a thing that lets you insert a bunch of stuff, some of it invalid, and have it only insert the valid stuff and reject the rest?
[18:28:49] <Myon> that would make sense, but it doesn't work like that
[18:29:33] <ne2k> (utlimately to try to work out that I definitely don't need a function for my OR ::inet check thing)_
[18:30:08] <ne2k> I'm fairly sure I don't, as there is no case in which, were it a function that returned true/false, it would succeed, whereas if it were just an error it would fail
[18:30:55] <ne2k> (I was testing to make sure it wasn't the case that if you had an on conflict do nothing, it would allow the good rows if it were a function but would error out completely if it were an error. but as that doesn't happen I think it's good)
[18:31:01] *** Joins: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de)
[18:31:04] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.133)
[18:33:42] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.126) (Ping timeout: 260 seconds)
[18:38:51] *** Quits: winstreak (~winstreak@dslb-094-218-009-104.094.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[18:39:50] <bancroft> Myon: What is most important to me is to have the same data everywhere, no matter which database is called. So how can I get HA with that in mind if not in my current setup?
[18:40:38] *** Joins: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net)
[18:41:20] <Myon> bancroft: just like that, but don't send read queries to the sync standby servers
[18:41:22] *** Quits: sabra_ (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 272 seconds)
[18:41:36] <Myon> if you want read balancing, attach other non-sync standbys
[18:41:39] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:42:23] <bancroft> Myon: then what is the point of my current standby's if they can't write or read?
[18:42:29] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:42:33] *** Joins: SAS (~SAS@2001:41d0:1:4547::1)
[18:43:02] <Myon> bancroft: did you want HA or not?
[18:43:31] <Myon> HA is about wasting hardware in the hope you won't need it
[18:43:40] *** Joins: winstreak (~winstreak@154.28.188.41)
[18:43:44] *** Joins: winstr3ak (~winstreak@154.28.188.41)
[18:43:46] <Myon> alternatively, go with async repl
[18:44:04] <ilmari> or get beefier servers that can keep up with the load
[18:44:46] <bancroft> Ohhh, I think I understand now
[18:46:33] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[18:46:43] <bancroft> Thank you Myon and ilmari
[18:51:01] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Ping timeout: 256 seconds)
[18:56:46] <twb> grumble that this python code is doing a confusing dance to avoid triggering fkey constraints
[18:56:58] <twb> Which PROBABLY would've been fine by the end of the transaction anyway
[18:57:18] <twb> But I can't be arsed doing a schema change to enable deferral
[18:58:55] *** Quits: zlinux (~zlinux@149.109.5.240) (Read error: Connection reset by peer)
[18:59:31] *** Joins: zlinux (~zlinux@149.109.5.240)
[19:01:33] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[19:03:22] *** Joins: hoppity_ (~hoppity@166.172.56.167)
[19:04:09] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[19:04:09] *** Quits: hoppity_ (~hoppity@166.172.56.167) (Read error: Connection reset by peer)
[19:04:23] *** Quits: shiranaihito (~textual@2001-b011-4011-3c80-191f-b869-8b3f-22db.dynamic-ip6.hinet.net) (Ping timeout: 256 seconds)
[19:06:35] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:06:41] *** Joins: hoppity_ (~hoppity@166.172.56.167)
[19:19:16] *** Quits: winstr3ak (~winstreak@154.28.188.41) (Quit: Leaving)
[19:19:16] *** Quits: winstreak (~winstreak@154.28.188.41) (Quit: Leaving)
[19:19:21] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 256 seconds)
[19:21:00] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[19:22:20] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[19:23:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 240 seconds)
[19:26:34] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
[19:27:51] *** Quits: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 256 seconds)
[19:28:32] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:28:57] <Myon> django?
[19:29:34] *** Joins: sabra (~sabra@99-105-192-94.lightspeed.livnmi.sbcglobal.net)
[19:30:10] *** Quits: bsenst (~bastianfr@2001:470:69fc:105::1:433b) (Quit: You have been kicked for being idle)
[19:30:12] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[19:31:32] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[19:31:40] *** Joins: mizi (~mizi@user/mizi)
[19:32:36] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[19:32:45] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[19:36:46] *** Quits: hoppity_ (~hoppity@166.172.56.167) ()
[19:37:17] *** Joins: eric (~user@45.91.144.178)
[19:37:21] <eric> Hello
[19:37:47] <eric> i need random numbers between 1 000 000 and 9 999 999
[19:37:52] <eric> i tried this :
[19:37:59] <eric> (SELECT floor(random() * ((9999999 - 1000000) + 1000000) )::int)
[19:38:17] <eric> this can give me : 476659 !
[19:38:38] <eric> i think i missed something...
[19:38:58] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[19:38:58] *** Joins: iliv (~iliv@user/iliv)
[19:43:36] <ne2k> eric, you shouldn't have brackets around the sum. you're supposed to add the offset to random() * scale, you are multiplying random() by offset plus scale
[19:44:12] <peerce> floor(random() * (9999999 - 1000000) + 1000000 )
[19:44:17] <peerce> floor(random() * 9999999 - 1000000 + 1000000 )
[19:44:42] <peerce> floor(random()*8999999 + 1000000 )
[19:45:03] <peerce> actually
[19:45:12] <peerce> floor(random()*9000000 + 1000000 )
[19:45:23] <peerce> since random() < 1.0
[19:45:35] <peerce> it can be zero but will never be 1.0
[19:46:35] <ne2k> https://dbfiddle.uk/?rdbms=postgres_14&fiddle=11fcabb268b480797b085f41fa94693b
[19:47:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:47:12] <ne2k> https://stackoverflow.com/questions/1400505/generate-a-random-number-in-the-range-1-10
[19:49:23] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Ping timeout: 256 seconds)
[19:49:54] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:51:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:51:10] <eric> ne2k: peerce  your are right ! So sorry and many thanks !
[19:51:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:52:02] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 240 seconds)
[19:52:56] *** Quits: Spansh (sid299284@lymington.irccloud.com) (Read error: Connection reset by peer)
[19:53:04] *** Joins: Spansh (sid299284@id-299284.lymington.irccloud.com)
[19:53:09] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[19:54:34] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:8d0:f5fa:6344:b56a)
[20:00:25] <ne2k> random int in range a to b is trunc(random() * (b - a + 1) + a)
[20:01:08] <ne2k> ??random
[20:01:09] <pg_docbot> http://blog.rhodiumtoad.org.uk/2009/03/08/selecting-random-rows-from-a-table/ :: http://www.depesz.com/2007/09/16/my-thoughts-on-getting-random-row/
[20:01:09] <pg_docbot> https://blog.2ndquadrant.com/tablesample-and-other-methods-for-getting-random-tuples/ :: https://www.postgresql.org/docs/current/static/functions-math.html
[20:01:15] <ne2k> ??randomint
[20:01:15] <pg_docbot> Nothing found
[20:01:22] <ne2k> ??randominteger
[20:01:22] <pg_docbot> Nothing found
[20:01:40] <ne2k> might be worth a factoid? it's a reasonbly common question iirc
[20:02:01] <ne2k> or people could just use google and get that incorrect stackoverflow answer!!11
[20:02:01] *** Quits: gleu (~guillaume@pop.92-184-121-95.mobile.abo.orange.fr) (Quit: Leaving.)
[20:03:30] *** Quits: kakashiA1 (~kakashi@41.141.67.71) (Ping timeout: 252 seconds)
[20:04:49] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4)
[20:08:34] <ne2k> eric, the way to remember is that you have to multiply random() by how many values you want to choose from, and that the number of numbers between a and b inclusive is b - a + 1
[20:08:39] *** Joins: leighbb (~leighbb@user/leighbb)
[20:09:26] <Myon> randomint(upper, lower) should be a built-in function
[20:09:40] <ne2k> upper, lower? not lower, upper?!
[20:09:46] <Myon> err yes
[20:09:49] <depesz> when reading pg_waldump output - can I somehow know if given record related to row inserted/updated?
[20:09:58] <ne2k> orly?
[20:10:31] <Myon> I'd also be interested in seeing the actual wal bytes with waldump
[20:10:44] *** Joins: zeden (~zeden@user/zeden)
[20:11:24] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[20:12:05] <depesz> create or replace function randomint(p_lower int8, p_upper int8) returns int8 language sql as $$ select p_lower + floor(random() * (p_upper - p_lower + 1)); $$;
[20:12:10] <depesz> here you go :)
[20:13:21] <ne2k> ah, is trunc wrong because it would go screwy with negatives, whereas floor Does The Right Thing ™?
[20:13:55] <depesz> hmm .. haven't tested for negatives ...
[20:14:12] <depesz> seems to be working fine.
[20:14:12] <Myon> ne2k: exactly
[20:14:52] <Myon> trunc still works fine, it's just a slightly wrong distribution
[20:15:37] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[20:16:27] <ne2k> Myon, https://dbfiddle.uk/?rdbms=postgres_14&fiddle=6ba387cf3525eef99797c2f2822ef09c well it sure looks like something's gone wrong with my brain...
[20:16:57] <ne2k> URGH
[20:16:58] <ne2k> sorry
[20:17:04] <ne2k> ignore the idiot that I am
[20:17:19] <ne2k> https://dbfiddle.uk/?rdbms=postgres_14&fiddle=3d0496e37fcd4835b76d95ee1d4c921e
[20:17:27] <Myon> rubber duck idiot testing
[20:17:51] <ne2k> Myon, I think trunc is wrong as it never hits -50
[20:18:23] <Myon> it is wrong, yes. I was trying to say that you can't really test that in 1min
[20:24:04] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:27:50] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:5338:646a:c01a:3e25)
[20:28:15] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:28:23] <peerce> huh, I thought this would show the funky distribution from trunc vs floor.  https://dbfiddle.uk/?rdbms=postgres_14&fiddle=deb972f2ad1be366fc23ef6e2da2a606   but it doesn't.
[20:29:19] <ne2k> peerce, your version has the + offset outside the trunc/floor; mine had it inside. I don't know if that is the difference
[20:29:20] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[20:30:04] <ne2k> peerce, https://dbfiddle.uk/?rdbms=postgres_14&fiddle=0c17469544e488d30f4de2833a4d0363
[20:30:40] <ne2k> ah, how about if both are negative?
[20:30:47] <Myon> right, that fixes the problem
[20:31:04] *** Quits: Emet-Selch (~haise01@user/haise01) (Read error: Connection reset by peer)
[20:31:44] <Myon> in peerce's version random()*expr is always >= 0, so there's no difference
[20:32:05] <ne2k> https://dbfiddle.uk/?rdbms=postgres_14&fiddle=edefa38130e792c6df3f9d828f69bf0c
[20:33:09] <peerce> ahhhh, yeah, you're right.
[20:33:14] <ne2k> ah, so the floor/trunc difference would only come into effect if you didn't enforce that upper be greater than lower
[20:33:56] <ne2k> https://dbfiddle.uk/?rdbms=postgres_14&fiddle=e7abc652b910e6f66919f31b723be098 hmst
[20:34:33] <ne2k> I suspect the "+1" is wrong now
[20:34:44] <peerce> yeah, boom. https://dbfiddle.uk/?rdbms=postgres_14&fiddle=0c17469544e488d30f4de2833a4d0363
[20:35:56] <peerce> need more coffee. brb.
[20:41:48] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:42:46] *** Joins: gleu (~guillaume@pop.92-184-121-95.mobile.abo.orange.fr)
[20:45:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[20:49:34] *** Joins: xocolatl (~xocolatl@14.149.88.79.rev.sfr.net)
[20:51:09] *** Quits: xocolatl_ (~xocolatl@193.32.126.213) (Ping timeout: 256 seconds)
[20:52:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[20:53:20] *** Quits: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:55:03] *** Quits: eric (~user@45.91.144.178) (Remote host closed the connection)
[20:58:17] <twb> if two concurrent transactions both delete the same row, what happens
[20:58:39] <Zr40> one succeeds, the other sees nothing to delete
[20:59:19] <Zr40> it would block while the first one hasn't committed or rolled back yet
[20:59:21] <twb> I thought the "the other guy got there first" would only happen if the other transaction was closed before
[20:59:29] <twb> oh OK
[20:59:58] <twb> So it's a little bit like a row or table lock?
[21:00:45] <peerce> yeah, the deleted row is locked until COMMIT when the delete actually happens
[21:02:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7c7e:38e:e009:ee02) (Remote host closed the connection)
[21:03:16] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7c7e:38e:e009:ee02)
[21:03:48] *** Quits: ponsfrilus (~Thunderbi@vpn-251-179.epfl.ch) (Ping timeout: 240 seconds)
[21:04:21] <ysch> twb: Note that what actually happens depends on the used transaction isolation level --- above Read Committed, the other transaction will get serialization exception (and, normally, would be rolled back).
[21:04:52] <Myon> but it will wait in any case
[21:05:01] <twb> k
[21:05:50] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Remote host closed the connection)
[21:06:10] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[21:06:21] <twb> I think I mostly don't care.  This is for code that reads the TV guide out of an MPEG-2 stream and puts it into pg.  I have separate runs for each station because you can't physically tune to >1 station at a time.
[21:07:07] <twb> There is a DELETE to say "forget about broadcasts that have already finished" and it WAS jumping through hoops to only delete from "its own" station
[21:07:17] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Excess Flood)
[21:07:35] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:07:51] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:7c7e:38e:e009:ee02) (Ping timeout: 252 seconds)
[21:09:11] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:10:40] *** Joins: jmarsac (~jmarsac@2a01:cb1d:1f5:ca00:bc5b:997:417f:aa9c)
[21:10:53] *** Joins: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de)
[21:11:28] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.133) (Ping timeout: 272 seconds)
[21:12:05] *** Joins: carragom (~textual@201.204.94.76)
[21:12:12] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:12:49] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[21:15:05] *** Quits: jmarsac (~jmarsac@2a01:cb1d:1f5:ca00:bc5b:997:417f:aa9c) (Client Quit)
[21:17:38] *** Joins: the_lanetly_052_ (~the_lanet@194.135.152.253)
[21:18:21] *** Quits: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:20:41] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[21:21:33] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[21:23:28] *** Joins: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de)
[21:24:06] *** Joins: econo (uid147250@user/econo)
[21:24:22] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[21:25:21] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 268 seconds)
[21:25:24] *** Quits: martti (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[21:28:33] *** Joins: hoppity_ (~hoppity@166.172.56.167)
[21:30:01] *** Quits: ns12 (~ns12@user/ns12) (Quit: bye)
[21:31:07] *** Joins: ns12 (~ns12@user/ns12)
[21:31:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e094:afa3:d932:3273)
[21:32:02] *** Joins: sakasama (~sakasama@user/sakasama)
[21:34:56] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[21:35:21] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd) (Ping timeout: 252 seconds)
[21:36:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:e094:afa3:d932:3273) (Ping timeout: 268 seconds)
[21:44:54] *** Quits: MrZeus_ (~MrZeus@89.238.176.167) (Ping timeout: 250 seconds)
[21:45:33] *** Joins: xocolatl_ (~xocolatl@193.32.126.231)
[21:48:16] *** Quits: xocolatl (~xocolatl@14.149.88.79.rev.sfr.net) (Ping timeout: 245 seconds)
[21:48:33] *** Joins: xocolatl (~xocolatl@193.32.126.213)
[21:51:05] *** Joins: k8yun (~k8yun@user/k8yun)
[21:52:00] *** Quits: xocolatl_ (~xocolatl@193.32.126.231) (Ping timeout: 272 seconds)
[21:53:25] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[21:57:01] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 245 seconds)
[21:57:11] *** Joins: kapil (~kapil@2a01:4f9:c010:c9c3::1)
[21:57:20] <maret> what are advantage of using version column to create optimistic isolation on application level compared to using Repeatable Read Isolation Level. ?
[21:57:27] *** Quits: twb (~twb@203.7.155.73) (Ping timeout: 256 seconds)
[21:59:03] <peerce> i've never found a need to use anything other than the default transaction level.   no idea what 'optimistic isolation on an application level' even means.
[21:59:05] <maret> I've seen reasonable argument that postgres and I am sure other db have concurency control implemented, yet I ORM and other tools often implement some form of concurecny control
[21:59:30] <peerce> many ORM's are written/designed by folks who either don't undertsand or dislike relational databases
[21:59:37] *** Joins: MrZeus_ (~MrZeus@217.138.254.103)
[21:59:46] <maret> sorry i mean optimistic locking for example by checking a version column for a row to see if data havent been updated
[22:00:24] <peerce> how would you even know what version to expect?   are you storing per row details somewhere else too ?
[22:01:08] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:02:19] <maret> I in my case I am group rows by updating one of columns (group_id) during initial importing of data where I don't know up front what group_id I am going to end up with
[22:02:46] *** Joins: xocolatl_ (~xocolatl@194.110.113.71)
[22:03:19] *** Joins: magla (~gelignite@55d4a4ec.access.ecotel.net)
[22:03:59] <peerce> presumably group_id is the PK of a group table ?    use select for update on that before you do anything else, then that group is locked for updates from any other sessions until your transaction commit's or rollback's
[22:04:06] <maret> peerce I think the idea is that you read row first and when you are doing update you run queryion -> row.version = version , or I think you could use something like updated_at
[22:04:26] <maret> and in case something else has changed version value your update won't update naything
[22:05:17] *** Quits: xocolatl (~xocolatl@193.32.126.213) (Ping timeout: 240 seconds)
[22:05:31] <maret> peerce yeah I was looking that that, but my understanding is that I need to  use Repeatable Read Isolation Level
[22:05:46] <peerce> why?
[22:06:53] <peerce> if you lock stuff you're going to change, the default level works just fine.
[22:07:13] *** Quits: iliv (~iliv@user/iliv) (Ping timeout: 272 seconds)
[22:07:20] <peerce> AND, do note, that any higher isolation level simply means you'll get a lot more errors you need to rollback and rretry transactions, with all the code complexity that ensues
[22:07:22] <maret> well AFAIK with read commited isolation level the second update would overwrite first update. In my case I think it safer to repeated the whole process whenever there is data incosistency
[22:07:41] <peerce> when you've done an update, that row remains locked until commit.
[22:07:54] <maret> so thats  why I think that Repeatable Read Isolation Level might be safer because AFAIk it throws an error so I can repeat the proicess
[22:08:12] <peerce> so if someone else tries to update the same row, they will have to wait until you've committed your changes
[22:08:29] *** Quits: carragom (~textual@201.204.94.76) (Ping timeout: 250 seconds)
[22:09:58] <maret> yeah I have to think a bit if thats good enough for my case basically if I am fine with data being overwritten even though they are up to date
[22:10:16] <maret> thing is I am doing some data processing  which might be worth repeating in case there was an update
[22:11:29] <peerce> again, select for update before changing stuff, and that simply won't happen
[22:11:39] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[22:12:40] <peerce> always do those locks in the same deterministic order to prevent possible mutual deadlocks
[22:13:55] <maret> ou ok I think I misuderstood the documentation. So in let say i have 1 transaction  which reads data start processing them. Second transaction reads some of the same data , it will wait for the first transaction to release data and basically run select again with udpated data?
[22:14:34] <Ankhers> Are there downsides to using text_pattern_ops instead of the default behaviour?
[22:14:41] <ysch> maret: Do you understand that "optimistic locking" is a technique applicable in very specific situation, which is when one needs to update a single row only, and that update depends on *nothing else* in the database? If so, why (if you're ok with not using SERIALIZABLE, anyway) do you think RR gives you anything but [useless] extra retries?
[22:16:27] <maret> ysch thanks for extra info, I am just trying to understand  the whole topic, so it bit confusing to me what use when
[22:16:32] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[22:18:59] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[22:19:51] *** Joins: maciek_ (~maciek@99-145-198-91.lightspeed.sntcca.sbcglobal.net)
[22:20:17] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[22:22:12] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:5338:646a:c01a:3e25) (Ping timeout: 240 seconds)
[22:22:16] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Remote host closed the connection)
[22:22:41] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[22:26:30] <maret> hmm and follow up the thing I am worried about is that 1 first transaction reads data , does some processing , updates them while second transaction already read old version, is doing a processing
[22:27:29] <maret> I need it to do the processing  with data being already updating, so thats why I thought that the approach would be to figure out if data have been updating and if yes just read and process them again
[22:31:27] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[22:32:55] *** Quits: bmomjian (~bruce@momjian.us) (Ping timeout: 256 seconds)
[22:34:30] <ysch> maret: Well, again, this is *not* how optimistic locking is supposed to work. Using it, you just 1) "SELECT ..., version_num_field FROM a_table WHERE ... id = $1;" 2) Later, do "UPDATE a_table SET ... WHERE id = $the_same_id AND version_num_field = $the_value_that_was_read_in_1;" and this is it (that single select in the first transaction and update in the second is *all* that one is supposed to do in those whole transactions, otherwise the technique is
[22:34:30] <ysch> not reliable).
[22:35:25] *** Quits: darutoko (~darutoko@37.21.249.141) (Quit: Leaving)
[22:37:03] <maret> i see, so would be the solution select for update ? because if I understand it correctly it isnt reliable for my case either thats why I thought about using  RR, because I would get error so I could retry the processing (done on application level)
[22:42:49] <maret> peerce or am I missing something?  Seems like select for update would be enough If I would'nt do any processing on application leve
[22:44:10] *** Quits: hoppity_ (~hoppity@166.172.56.167) (Remote host closed the connection)
[22:44:39] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:44:45] *** Joins: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net)
[22:45:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:47:21] <peerce> the select for update will lock any rows it returns.  a second connection that tries to select the same rows will wait for the first connection to COMMIT before it returns them, so that second transaction will see the new values
[22:48:57] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[22:49:11] *** Quits: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net) (Remote host closed the connection)
[22:49:26] *** Joins: hoppity_ (~hoppity@166.172.56.167)
[22:50:27] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[22:50:38] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[22:51:14] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[22:51:45] <ysch> maret: Frankly, I don't understand your case. I mean, if you want to use values of several rows in the first or second transaction, you need to think/analyze/test the possible scenarios (and in some of those, at first glance, "SELECT ... FOR UPDATE" *might* be useful in RC just to get the actual data... but in the others, it would be useless).
[22:51:54] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[22:52:57] *** Quits: fcr (~fran@r167-56-79-74.dialup.adsl.anteldata.net.uy) (Ping timeout: 240 seconds)
[22:54:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:55:21] *** Joins: merzo (~Thunderbi@192.162.238.196)
[22:59:12] *** Joins: fcr (~fran@r167-56-61-107.dialup.adsl.anteldata.net.uy)
[22:59:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:01:59] *** Quits: dmvrtx (~dmvrtx@znc.dmvrtx.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:04:07] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[23:08:06] *** Joins: raptelan (~raptelan@208.127.242.47)
[23:08:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:08:50] <raptelan> Why can a user who does not have any priviliges on a schema list objects within that schema?
[23:10:46] *** Quits: libsys (~libsys@186.105.160.21) (Ping timeout: 245 seconds)
[23:11:01] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 240 seconds)
[23:11:11] *** Joins: libsys (~libsys@186.105.137.250)
[23:11:59] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[23:13:46] <peerce> because all users are members of the group "public", and public typicalyl has 'usage' permission for a schema, even if it doesn't have the rights to access the contents of any table IN that schema
[23:18:26] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[23:20:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:21:09] <Snow-Man> you don't need usage rights to see what's in a schema
[23:25:48] *** Quits: tehenderz (~tehenderz@ti0018a400-10760.bb.online.no) (Ping timeout: 240 seconds)
[23:26:31] *** Joins: tehenderz (~tehenderz@ti0018a400-11191.bb.online.no)
[23:29:04] *** Quits: rufito (~phil@186-79-11-47.baf.movistar.cl) (Quit: Leaving)
[23:29:24] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Ping timeout: 240 seconds)
[23:33:18] *** Quits: gleu (~guillaume@pop.92-184-121-95.mobile.abo.orange.fr) (Quit: Leaving.)
[23:37:46] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:38:23] *** Quits: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net) (Quit: Leaving)
[23:40:14] <otisolsen70> I have set up PG12 for streaming replication. I ran pg_basebackup and now tried to start the slave. But I get this in the logs: "pg_ctl: could not start server; Examine the log output." and then there is nothing else in the log.
[23:40:43] <Myon> how did you try to start?
[23:41:02] <otisolsen70> systemctl start postgresql
[23:41:25] <Myon> Debian?
[23:41:44] <otisolsen70> According to 'ps' PG is running, however.
[23:41:46] <otisolsen70> Yes
[23:41:56] <Myon> check /var/log/postgresql/postgresql-*.log
[23:42:02] <otisolsen70> Sorry. It is not running.
[23:43:22] *** Joins: ur5us_ (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[23:44:59] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:45:40] <otisolsen70> Right. Port conflict.
[23:45:46] <otisolsen70> Thanks.
[23:47:21] *** Quits: michalz (~michalz@185.246.204.77) (Remote host closed the connection)
[23:52:35] <otisolsen70> I am configuring streaming replication in a situation where the network between master and slave may be down sometimes for several hours. This currently results in missing WAL segments when they reconnect and me having to reinit the slave. I have plenty of free space on master, so I am thinking: increase max_wal_size and min_wal_size to respectively 2GB and 1GB; then increase wal_keep_segments to 100.  As I understand, this will keep
[23:52:36] <otisolsen70> up to between 100-200 GB WAL files around. Correct?
[23:54:17] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:55:01] *** Parts: FreeBDSM_ (~FreeBDSM@user/freebdsm) (Leaving)
[23:55:41] *** Quits: olebra (olebra@cassarossa.samfundet.no) (Quit: WeeChat 3.0)
[23:57:26] <otisolsen70> Or is max_wal_size the total size of all WAL files?
[23:59:17] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::78dd)
