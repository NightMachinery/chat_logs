[00:00:07] <stewie925> oh its running a SELECT * query from the database , NOT reading excel
[00:00:07] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[00:00:30] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:01:10] <stewie925> ugh - almost 1M rows and 50 columns
[00:01:47] *** Joins: toad_X (~ali@159.146.40.81)
[00:02:14] *** Joins: crashrep (~crashrep@user/crashrep)
[00:02:59] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[00:02:59] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[00:04:08] *** Joins: vakera_pingveno (~dan@70-139-136-209.lightspeed.hstntx.sbcglobal.net)
[00:06:57] *** Quits: toad_X (~ali@159.146.40.81) (Ping timeout: 240 seconds)
[00:07:01] *** Quits: grooverman (~grooverma@152.250.149.217) (Read error: Connection reset by peer)
[00:07:55] *** Joins: grooverman (~grooverma@152.250.149.217)
[00:09:18] *** Joins: vlm (~vlm@user/vlm)
[00:10:25] <ChrisWarrick> you probably don’t want to work with a database using pandas
[00:10:42] <ChrisWarrick> just write a SQL query (it will be nicer anyway)
[00:12:34] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[00:14:13] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:14:36] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 240 seconds)
[00:16:10] *** Joins: maggotbrain (~maggotbra@2601:602:9200:e4e0:8a7c:1fa1:6fbf:4bbf)
[00:16:19] <stewie925> ChrisWarrick: its a code we inherited from another team :(
[00:17:25] *** Quits: maggotbrain (~maggotbra@2601:602:9200:e4e0:8a7c:1fa1:6fbf:4bbf) (Remote host closed the connection)
[00:20:17] *** Quits: resmo (~resmo@2a00:d420:9:8a00:999f:c73c:fc43:e307) (Ping timeout: 240 seconds)
[00:21:34] <stewie925> looks like there is an option of chunking
[00:22:10] *** Joins: onichomp (~onichomp@2806:264:4408:2be:f870:5efc:af85:a8ae)
[00:22:20] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[00:22:28] *** Joins: gardintrapp (~oddbjorn@206.51-174-232.customer.lyse.net)
[00:24:59] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[00:25:10] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:25:38] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[00:28:10] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[00:28:50] *** Quits: a1eaiact1 (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[00:28:58] *** Joins: maggotbrain (~maggotbra@2601:602:9200:e4e0:8a7c:1fa1:6fbf:4bbf)
[00:30:01] *** Quits: NovaXrine_ (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:30:21] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[00:30:30] *** Joins: widp (~widp@124.123.106.12)
[00:30:35] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 250 seconds)
[00:32:13] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[00:32:37] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[00:32:42] *** Joins: bahamas (~lucian@84.232.140.158)
[00:33:00] *** Quits: Indecisive (~chaz@wsip-98-171-200-135.om.om.cox.net) (Ping timeout: 240 seconds)
[00:33:06] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:33:08] *** Joins: baffodoro (~raffaem@45.91.20.168)
[00:33:39] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[00:33:48] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[00:34:30] *** Quits: cuanim (~cuanim@user/cuanim) (Read error: Connection reset by peer)
[00:34:33] *** Joins: waynew (~wayne@user/waynew)
[00:34:47] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:35:57] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[00:36:00] *** Quits: paul424 (~tom@ip-5-172-239-101.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:36:12] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 240 seconds)
[00:37:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[00:37:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:39:14] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[00:39:18] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[00:39:43] *** Joins: waynew (~wayne@user/waynew)
[00:40:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:41:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:42:03] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 252 seconds)
[00:42:57] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[00:43:09] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[00:43:17] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[00:45:21] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[00:45:47] *** Joins: Enitin (~Enitin@82.180.145.226)
[00:45:59] *** Joins: mud (~mud@user/kadoban)
[00:46:45] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[00:46:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:48:27] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:b9b1:84a9:128d:44ec) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:48:45] *** Joins: storm_ (~storm@176.33.68.86)
[00:49:02] *** Joins: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz)
[00:50:28] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:50:39] *** Joins: Pickchea (~private@user/pickchea)
[00:51:24] *** Quits: maxzor (~maxzor@2a01cb04054faa00ed919463e5f3a61d.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[00:52:09] *** Joins: Oddity (~Oddity@user/oddity)
[00:52:12] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[00:52:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:52:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[00:52:48] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:53:12] *** Joins: esaym153 (~esaym153@net153.net)
[00:53:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[00:53:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:54:57] *** lawt2 is now known as lawt
[00:55:01] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 256 seconds)
[00:56:26] *** Joins: maggotbrainX (~maggotbra@2601:602:9200:e4e0:3039:2327:8f9e:2ba5)
[00:56:58] *** Quits: maggotbrain (~maggotbra@2601:602:9200:e4e0:8a7c:1fa1:6fbf:4bbf) (Ping timeout: 260 seconds)
[00:57:14] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[00:57:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[00:58:20] *** Quits: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:59:12] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:59:14] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[00:59:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:59:33] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 256 seconds)
[00:59:55] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[01:00:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:00:18] *** Quits: maggotbrainX (~maggotbra@2601:602:9200:e4e0:3039:2327:8f9e:2ba5) (Client Quit)
[01:00:21] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[01:00:23] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:00:36] *** Joins: maggotbrain (~maggotbra@2601:602:9200:e4e0:3039:2327:8f9e:2ba5)
[01:01:05] *** Joins: vanessa (~farawayas@103.160.128.7)
[01:01:22] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[01:01:32] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Read error: Connection reset by peer)
[01:03:30] *** Quits: PaterTemporalis (~woooopsie@168.182.232.78) (Ping timeout: 252 seconds)
[01:03:37] *** Joins: Enitin (~Enitin@82.180.145.230)
[01:04:03] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 252 seconds)
[01:04:10] *** Joins: PaterTemporalis (~woooopsie@168.182.232.78)
[01:06:06] *** Joins: vlado (~vlado@181.50.79.237)
[01:06:17] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:07:04] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4.1)
[01:07:36] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:09:57] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:11:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[01:11:40] *** Joins: ham5urg (~ham5urg@p200300d167282e009af384a00c8ea1ca.dip0.t-ipconnect.de)
[01:11:45] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 250 seconds)
[01:12:12] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Ping timeout: 240 seconds)
[01:12:51] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:5455:7996:42cf:6660) (Ping timeout: 252 seconds)
[01:12:58] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[01:13:00] *** Joins: bahamas (~lucian@84.232.140.158)
[01:13:08] <ham5urg> What is the modules name which handles os-signals? E.g. when a shutdown is propagated to the running processes.
[01:13:41] <SnoopJ> ham5urg, the `signal` module is what you want if you'd like to register a handler for signals from the OS
[01:13:46] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:13:49] <ham5urg> Thanks
[01:13:58] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:14:10] <SnoopJ> If you want to do something at exit, the `atexit` module can also be handy
[01:14:51] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[01:14:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[01:15:41] *** Joins: kostkon (~kostkon@2a02:587:a106:f8d0:28a:a3d5:fa76:ae0a)
[01:16:03] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[01:17:41] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[01:18:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:19:31] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[01:19:31] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[01:19:49] *** Joins: kostkon_ (~androirc@athedsl-237515.home.otenet.gr)
[01:19:55] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[01:20:12] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[01:20:22] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[01:21:05] *** Quits: strugee (~strugee@rrcs-50-74-115-74.nyc.biz.rr.com) (Ping timeout: 256 seconds)
[01:21:24] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[01:21:34] *** Joins: strugee (~strugee@173.211.12.73)
[01:23:05] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[01:23:23] *** Joins: nomic2 (~nomic@185.217.117.249)
[01:23:28] *** Joins: TheCat (~TheCat@user/z-cat)
[01:23:28] *** Quits: nomic2 (~nomic@185.217.117.249) (Read error: Connection reset by peer)
[01:24:13] *** Quits: stockholm (~Andreas@p200300d2c70c00004c35e0b4ad8e7716.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:25:03] *** Parts: ecrump_ (~ecrump@75.161.248.175) (Leaving)
[01:26:23] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:26:36] *** Quits: rootx74 (~rootx74@user/rootx74) (Ping timeout: 245 seconds)
[01:26:37] *** Quits: maggotbrain (~maggotbra@2601:602:9200:e4e0:3039:2327:8f9e:2ba5) (Ping timeout: 240 seconds)
[01:29:29] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[01:29:35] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[01:29:54] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 252 seconds)
[01:30:17] *** Joins: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4)
[01:30:29] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[01:30:29] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[01:30:48] *** Joins: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833)
[01:30:55] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[01:31:37] <stewie925> SnoopJ: so I modified my code to introduce chunksize in the pandas read_sql_query()
[01:31:47] *** Joins: pwug (~pwug@user/pwug)
[01:31:51] <SnoopJ> stewie925, did that resolve your memory problem?
[01:31:54] <stewie925> I specified a chunksize of 50,000 rows (it has 96 columns)
[01:32:13] <stewie925> well, it iterated 8 times then it got killed
[01:32:20] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[01:32:29] <stewie925> maybe I should lower the chunksize becuse of that 96 columns
[01:32:52] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[01:32:53] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:32:54] <stewie925> so it read 50k rows at a time for 8 times
[01:33:06] <stewie925> and went into memory problems - strange no?
[01:33:29] <stewie925> let me reduce it to 25.000
[01:33:29] <SnoopJ> not particularly, sounds like it's about the same problem, you just approach the OOM condition more slowly
[01:33:51] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[01:34:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:34:21] <stewie925> ugh WT#
[01:34:49] *** Joins: Staunch (~Staunch@134.238.165.172)
[01:35:23] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:35:43] <stewie925> so frustratng lol
[01:35:55] <stewie925> it gave me a little glimmer of hope
[01:36:11] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 245 seconds)
[01:36:41] <SnoopJ> stewie925, are you storing the data from each iteration?
[01:36:53] *** Joins: rickybob (~rickybob@35.143.255.39)
[01:36:56] <stewie925> let me post my code - brb
[01:38:37] <stewie925> bpa.st/2NIA
[01:38:48] *** Joins: Enitin (~Enitin@82.180.145.226)
[01:38:53] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[01:38:53] <stewie925> https://bpa.st/2NIA
[01:39:00] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[01:39:06] *** Quits: admin123 (~harrymore@ool-18b9adbf.dyn.optonline.net) (Ping timeout: 245 seconds)
[01:39:22] *** Quits: BobRockHR (~andrija@user/BobRockHR) (Quit: WeeChat 3.4.1)
[01:39:25] *** Joins: maggotbrain (~maggotbra@2601:602:9200:e4e0:e388:264:8c2a:98ba)
[01:39:32] <stewie925> that line #5 is not needed, I will remove it
[01:39:35] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:39:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:39:46] <jinsun__> so you are storing the dfs in a list
[01:40:15] * SnoopJ doesn't see anything being stored that isn't necessary to the function's work
[01:40:36] <stewie925> jinsun - hey ltns
[01:40:47] <jinsun__> so that won't help with the memory problems, you are supposed to process the chunks in the loop and throw them away
[01:41:01] <stewie925> jinsun_:  so what should I do to make it work :(
[01:41:42] <jinsun__> well you can't just fix this part, will have to rewrite the part that is using this function too
[01:41:57] *** Quits: zzbot (~zzbot@user/zzbot) (Remote host closed the connection)
[01:42:18] <stewie925> I rewrote that code that calls this function by just passing the chunksize parameter
[01:42:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:42:36] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[01:42:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:42:50] *** Quits: greedom (~greedom@p200300de671bab00ebb70478d84b6287.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:43:10] *** Joins: kosh (~kosh@user/kosh)
[01:43:21] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:43:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:43:24] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[01:43:26] <jinsun__> that is fine, but that part should not expect a single big dataframe as the returned value, it will have to be rewritten to accept an Iterable of chunks, and then change this function to yield chunks instead of appending and concatting
[01:43:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:56] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[01:44:17] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[01:44:39] <stewie925> ohhhh hmmmmm I "think" I understand what you meant
[01:45:15] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:45:17] <jinsun__> whether that will be possible to do or not depends on what the caller is doing, should be possible in most cases but with a lot of pain
[01:45:38] *** Joins: Viewday115 (~Viewday@user/viewday)
[01:46:20] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[01:47:38] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 272 seconds)
[01:48:56] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[01:50:17] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[01:50:30] *** Joins: jdmark (~jdmark@user/jdmark)
[01:51:18] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[01:52:07] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[01:52:12] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:52:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:52:53] <stewie925> trying to digest this - https://pythonspeed.com/articles/chunking-pandas/
[01:54:10] *** Joins: Viewday1151 (~Viewday@user/viewday)
[01:54:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:55:24] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Ping timeout: 240 seconds)
[01:55:25] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:55:34] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:55:41] *** Viewday1151 is now known as Viewday115
[01:56:01] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:56:24] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:56:52] *** Quits: XV8 (~XV8@2601:5cb:c001:50::94d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:57:12] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[01:57:23] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[01:57:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50::94d3)
[01:58:20] *** Joins: maxzor (~maxzor@2a01cb04054faa009e4b0faced436b62.ipv6.abo.wanadoo.fr)
[01:58:25] <jinsun__> stewie925: the important part is that it is not storing the chunks for use later, it is doing from operations on the chunk and only storing the results
[01:58:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:58:36] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[01:58:44] <jinsun__> and the results are much smaller than the chunks
[01:58:46] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[01:59:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:59:26] <stewie925> basically consuming every chunk
[01:59:29] <jinsun__> s/from/some
[01:59:35] <stewie925> and "throw" it away
[01:59:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:00:26] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[02:00:28] *** Joins: a1eaiact1 (~a1eaiacta@user/a1eaiactaest)
[02:00:31] <jinsun__> yeah
[02:00:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:01:14] <stewie925> yeah trying to visualize how to do it to the existing code -  I could just call the pd.read_sql_query directly from the calling module...
[02:01:50] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 260 seconds)
[02:02:13] *** Quits: rickybob (~rickybob@35.143.255.39) (Ping timeout: 256 seconds)
[02:02:14] <stewie925> just stepping away for late late lunch - be back in 30 min
[02:02:23] <stewie925> thank you jinsun!
[02:02:30] *** Joins: Guest49 (~Guest49@2600:1700:2050:1040:5d4c:e061:4689:d06a)
[02:02:35] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[02:02:36] <stewie925> maybe lightbulb will flash while on my break lol
[02:02:53] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:03:00] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 240 seconds)
[02:03:14] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:a9ce:1cfd:6f06:91b5) (Quit: pvergain)
[02:03:47] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-207.range86-150.btcentralplus.com) (Quit: Leaving.)
[02:03:47] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[02:04:23] *** Joins: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de)
[02:04:50] <k`> would anyone mind helping me out with my code?
[02:04:52] <k`> https://justpaste.it/9d7i1
[02:04:55] <k`> this only outputs around 100 results
[02:05:01] <k`> and it should give me 1500 according to kucoin API
[02:06:11] *** Quits: maxzor (~maxzor@2a01cb04054faa009e4b0faced436b62.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:08:39] *** Quits: Guest49 (~Guest49@2600:1700:2050:1040:5d4c:e061:4689:d06a) (Quit: Client closed)
[02:09:08] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[02:09:15] *** Joins: jpn (~jpn@user/jpn)
[02:09:18] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 260 seconds)
[02:09:20] *** Quits: al_ (~al@134.17.36.147) (Read error: Connection reset by peer)
[02:10:16] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[02:11:00] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[02:12:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[02:13:48] *** Joins: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com)
[02:13:54] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8144-30ff-3cf9-8b7f.res6.spectrum.com) (Read error: Connection reset by peer)
[02:14:29] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:14:31] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[02:14:37] *** Quits: ub (~Thunderbi@p200300ecdf158894bc3487aad6770a01.dip0.t-ipconnect.de) (Quit: ub)
[02:14:42] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:14:45] <rama_> k`: is the response paginated?
[02:15:08] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[02:15:34] *** Joins: Batzy (~quassel@user/batzy)
[02:15:41] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[02:16:39] *** Joins: zmt00 (~zmt00@user/zmt00)
[02:16:48] <switchnode> is `PyTuple_SetItem(tuple, i, item)` evil if `item` is already the element of the tuple at `i`? i'm confused about whether this actually changes the reference count.
[02:17:37] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[02:18:03] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Ping timeout: 250 seconds)
[02:18:58] <k`> rama_: no but i need for it to be
[02:19:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[02:19:27] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[02:19:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:19:50] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:20:21] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[02:20:51] <SnoopJ> switchnode, if I'm reading the implementation right, Py_XSETREF() will (erroneously) decrement the refcount in that case
[02:21:28] <SnoopJ> unless it's holding a reference that should be decremented in any case; it's very possible I read it wrong
[02:23:01] <nedbat> k`: often, an API will give you only 100 results, and then you have to ask for the next 100
[02:23:41] *** Quits: storm_ (~storm@176.33.68.86) (Remote host closed the connection)
[02:23:55] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[02:25:58] *** Joins: src (~src@user/src)
[02:26:19] <SnoopJ> ah, it steals a reference, but in that case it will be stealing from itself. I would probably just do the pointer comparison before calling it
[02:27:03] <switchnode> SnoopJ: thanks
[02:27:24] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 240 seconds)
[02:28:10] <k`> nedbat: yeah this one gives you 1500
[02:28:12] <k`> but same idea
[02:28:19] <k`> for some reason if i start at time 0
[02:28:22] <k`> it only returns 100
[02:28:31] <k`> but if i enter an actual unix date start and end it gives me the full 1500
[02:28:33] <k`> no idea why
[02:28:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[02:28:54] *** Quits: flyback (~flyback@2601:540:8201:1e60::de9) (Remote host closed the connection)
[02:29:12] <nedbat> k`: sorry, i don't know why either, and wish that everyone would just stop with the coins already.
[02:29:39] <SnoopJ> +1
[02:29:54] <switchnode> i've got a big benchmark that's failing _somewhere_ in a PyTuple_SetItem under conditions of high memory pressure, which makes me suspect there's a reference counting error somewhere triggering aborts during gc, so i was really hoping that was it...
[02:30:13] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[02:31:19] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[02:31:36] *** Joins: flyback (~flyback@2601:540:8201:1e60::de9)
[02:31:40] <k`> bUt I hAvE wInnInG AlGo
[02:31:41] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:31:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:31:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[02:31:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:31:59] *** Quits: MasterK (~MK@86.121.141.249) (Remote host closed the connection)
[02:32:06] <nedbat> k`: you get to be at the top of the ponzi scheme? :)
[02:32:31] <k`> i fonly
[02:32:33] <k`> if only*
[02:32:36] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[02:33:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:34:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:34:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:34:21] *** Joins: ThanatosJ (~Thanatos@102.89.34.47)
[02:34:46] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[02:34:56] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[02:35:19] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[02:35:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:36:12] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[02:36:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:36:42] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:36:47] *** Quits: XV8 (~XV8@2601:5cb:c001:50::94d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:36:51] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[02:36:51] *** Joins: iflema (~ian@user/iflema)
[02:37:01] *** Joins: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com)
[02:37:11] <switchnode> the only other suspicious call involves assigning a new reference from PyArray_SimpleNewFromData to the same tuple on each iteration of a loop, but the underlying array data is declared on the stack and NPY_ARRAY_OWNDATA isn't set, which seems to me like it should be fine
[02:37:18] *** Joins: storm_ (~storm@176.33.68.86)
[02:37:35] <switchnode> but obviously something isn't :I
[02:37:48] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[02:38:13] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:38:13] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:39:37] *** Quits: daedw (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 256 seconds)
[02:40:59] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:41:11] *** Quits: daedw_ (~daedw@cpe-70-95-200-209.san.res.rr.com) (Ping timeout: 245 seconds)
[02:41:13] *** Joins: wakeup (~wakeup@user/wakeup)
[02:41:31] *** Joins: moog_ (~moog@107.126.53.19)
[02:41:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[02:42:31] *** Joins: XV8 (~XV8@2601:5cb:c001:50::94d3)
[02:42:33] *** Quits: nelgau (~nelgau@cpe-75-82-216-42.socal.res.rr.com) ()
[02:43:49] *** Quits: moog (~moog@98.97.82.161) (Ping timeout: 240 seconds)
[02:44:41] *** Joins: moog__ (~moog@98.97.82.161)
[02:45:03] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:45:17] *** Joins: Elzington_ (~Elzington@87.249.134.10)
[02:45:49] *** Quits: Elzington_ (~Elzington@87.249.134.10) (Max SendQ exceeded)
[02:46:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:46:11] *** Joins: Elzington_ (~Elzington@87.249.134.10)
[02:46:50] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:47:19] *** Quits: moog_ (~moog@107.126.53.19) (Ping timeout: 250 seconds)
[02:48:14] *** Quits: Elzington (~Elzington@68.235.43.14) (Ping timeout: 268 seconds)
[02:49:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[02:50:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:51:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:51:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[02:52:05] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 250 seconds)
[02:52:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:52:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:52:38] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[02:53:27] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:53:49] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:54:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[02:55:44] <mattf> in regex how do i match anything but not a / except if it is a \/
[02:56:05] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[02:56:22] <BtbN> (\/|[^/])
[02:56:27] <BtbN> and then you add a ton of escapes
[02:56:28] <mattf> oooh
[02:56:35] <mattf> the or thing
[02:56:42] <mattf> i forgot that exists
[02:58:25] <nedbat> mattf: if you don't mind me asking, what's the bigger picture here?  It might be easier with something other than regex.
[02:59:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:00:12] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[03:00:14] <mattf> i want to make my irc bot have a regex substitute command
[03:00:14] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[03:02:10] *** Quits: XV8 (~XV8@2601:5cb:c001:50::94d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:43] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[03:03:05] *** Joins: XV8 (~XV8@2601:5cb:c001:50::94d3)
[03:03:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:03:51] <mattf> re.compile(r"^[sS]/((?:\/|[^/])+)/((?:\/|[^/])+)(?:/(.+)?)?$")
[03:03:56] *** Quits: a1eaiact1 (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 252 seconds)
[03:03:58] <mattf> well this still stops on the /
[03:04:21] <mattf> i want to have a sed like syntax: s/pattern/replacement/flags
[03:04:30] <mattf> and match for the groups pattern, replacement and flags
[03:04:37] <mattf> but still be able to have a \/ inside them
[03:05:03] <mattf> i think ive fallen into the golden incompleteness problem
[03:05:17] <mattf> godel
[03:05:21] <mattf> yeah
[03:05:30] <mattf> better subprocess it to sed maybe
[03:05:50] <aclark> nedbat: came across dinghy recently, nice!
[03:06:16] <nedbat> aclark: thanks.  it has not caught fire yet :)
[03:06:23] <nedbat> (in either sense of the phrase)
[03:07:02] *** Quits: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:07:03] *** Joins: bindu_ (~bindu@user/bindu)
[03:07:09] <aclark> heh
[03:07:11] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[03:07:26] <kaleido> i got some elite python3 for you! "print('Hello, World!')"
[03:07:32] * kaleido retires a hundredaire
[03:07:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[03:08:08] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[03:08:20] <nedbat> kaleido: it's a great first step :)
[03:08:40] * SnoopJ prefers to keep his fires and his nautical misadventures very separated
[03:08:47] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:09:00] *** bindu_ is now known as bindu
[03:09:38] <nedbat> :)
[03:10:12] *** Joins: korg815 (~korg815@user/korg815)
[03:10:59] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:11:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:11:44] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:12:08] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:12:23] <SnoopJ> switchnode, you're hunting a leak in code that's using numpy's C-API, or somesuch?
[03:12:47] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[03:12:56] *** Joins: toad_X (~ali@159.146.40.81)
[03:14:03] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:14:45] *** Quits: toad_X (~ali@159.146.40.81) (Client Quit)
[03:14:47] <switchnode> SnoopJ: yes (well, not a _leak_ i think, but some kind of memory problem)
[03:15:01] <SnoopJ> ouch
[03:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:15:41] *** Joins: djapo (~archangel@user/djapo)
[03:16:17] *** Joins: dthpulse (~quassel@podciarou.sk)
[03:16:26] *** Joins: hams (~hams@73.232.205.0)
[03:16:26] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[03:16:26] *** Joins: hams (~hams@user/hams)
[03:16:42] <SnoopJ> switchnode, CPython ships a pretty good suppression file for valgrind, if its memory tools would be helpful
[03:16:47] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 250 seconds)
[03:17:00] <SnoopJ> (which will depend on the shape of your application, in particular if it will be intolerably slow under valgrind, heh)
[03:19:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:19:46] *** Joins: crashrep (~crashrep@user/crashrep)
[03:20:07] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[03:20:29] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[03:21:31] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[03:21:32] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[03:21:32] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:22:02] *** Quits: Moosadee (~Moosadee@198.248.38.26) (Client Quit)
[03:22:20] <switchnode> SnoopJ: thanks. unfortunately the situation is Complex™, but i will definitely look into it
[03:22:44] <SnoopJ> yea, if you're into "worrying about refcounts" land, that might be the wrong tool :(
[03:22:54] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:23:40] <stewie925> I have a follow up on the pandas chunksize issue - https://bpa.st/EQNA
[03:24:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:24:45] <stewie925> does that look right?
[03:24:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:25:12] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:25:14] <stewie925> so I say `df = pd.read_sql_query(query, conn, chunksize=chunksize) `
[03:26:02] <stewie925> so that would be an implicit iteration of (chunksize) rows?
[03:26:17] <SnoopJ> stewie925, have you done a "napkin math" estimate of how much memory the data you want to load should consume?
[03:26:22] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[03:26:33] <hams> any good tutorials out there on cleaning a dataset?
[03:27:30] <stewie925> SnoopJ the data is ~ 1M rows with 96 columns
[03:27:54] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[03:28:05] <SnoopJ> stewie925, I don't know if that means "yes" or "no"
[03:28:13] <stewie925> sorry, no
[03:28:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:29:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:29:19] <SnoopJ> stewie925, that's a helpful thing to have in-hand when working this kind of problem because it gives you a sense of scale
[03:29:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:30:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:30:47] *** Quits: ThanatosJ (~Thanatos@102.89.34.47) (Ping timeout: 268 seconds)
[03:30:51] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[03:31:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:31:11] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[03:31:26] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[03:31:35] *** Joins: Axy (~Axy@user/axy)
[03:31:39] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[03:31:39] *** Quits: Syzygy (~Syzygy@2001:871:265:1cdc:d51:72bc:2a08:c00) (Remote host closed the connection)
[03:31:57] *** Joins: Syzygy (~Syzygy@2001:871:265:1cdc:380e:d245:dc0d:937b)
[03:32:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:32:52] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[03:33:44] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[03:34:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:34:03] *** Joins: fling (~fling@user/fling)
[03:34:30] *** Quits: storm_ (~storm@176.33.68.86) (Quit: Leaving)
[03:35:06] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[03:35:06] *** Joins: Barones (~Barones@user/Barones)
[03:35:14] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:35:26] *** Quits: hexenbane9 (~hexenbane@fixed-187-188-14-118.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[03:36:53] *** Joins: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs)
[03:38:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[03:40:58] *** Quits: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[03:41:15] *** Joins: ThanatosJ (~Thanatos@197.210.47.129)
[03:41:39] <grym> hams: it's very dataset dependent
[03:42:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:42:23] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:dc10:74ee:ac7c:6d24)
[03:43:00] *** Quits: onichomp (~onichomp@2806:264:4408:2be:f870:5efc:af85:a8ae) (Ping timeout: 252 seconds)
[03:44:17] <SnoopJ> is there any way to do the equivalent of `source somefile.sh` from Python, so that the changes will apply to new subprocesses? (this is unfortunately how the upstream vendor does this, and I'd rather not replace the file)
[03:44:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:44:36] *** Quits: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se) (Ping timeout: 240 seconds)
[03:44:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:46:55] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[03:48:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:48:47] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[03:49:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:49:11] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e)
[03:49:14] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:49:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:49:33] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[03:50:00] *** Joins: tijuco (~tijuco@user/tijuco)
[03:51:14] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 252 seconds)
[03:52:10] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:52:42] <stewie925> hmm how do I specify to write the column headers for the first chunk only in to_csv
[03:52:55] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:53:19] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:53:40] *** Joins: Viewday1150 (~Viewday@user/viewday)
[03:54:20] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[03:54:32] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 252 seconds)
[03:55:09] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:55:11] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:55:11] *** Viewday1150 is now known as Viewday115
[03:57:51] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:58:36] *** Quits: dreamon (~dreamon@pd9503ce4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:59:04] <jinsun__> stewie925: you can do .to_csv(header=False) to prevent writing headers
[03:59:18] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:59:36] <stewie925> yeah, but only if its not thef first chunk
[03:59:52] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[04:00:24] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Quit: Leaving...)
[04:00:28] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Quit: WeeChat 3.4)
[04:01:29] <jinsun__> yeah that you'll have to do "manually", treat the first chunk differently, in general the chunks are independent, they don't know that they are the first or not
[04:02:15] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[04:02:23] <stewie925> ahhh so for the first chunk I will write the headers and set mode='w' , AND the succeeding chunks with header=False and mode='a' (for append)
[04:02:36] <stewie925> thank you - I will try that out
[04:03:09] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[04:03:28] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:04:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:04:48] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[04:04:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:04:53] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[04:04:56] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[04:05:19] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[04:05:23] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[04:06:19] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[04:06:33] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 268 seconds)
[04:07:37] *** Quits: bambams (~bambams@user/bambams) (Quit: Lost terminal)
[04:08:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:08:32] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[04:08:58] *** Joins: trainsley69_ (~trainsley@c83-252-9-242.bredband.tele2.se)
[04:09:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[04:09:37] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 240 seconds)
[04:14:09] *** Joins: hiroshi_ (~freedom@151.35.190.68)
[04:14:25] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[04:14:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[04:14:41] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[04:14:46] *** Joins: Guest80 (~Guest80@BSN-142-100-91.dynamic.siol.net)
[04:14:50] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:14:51] *** Quits: barry1 (~Thunderbi@222.129.35.38) (Ping timeout: 250 seconds)
[04:14:54] <Guest80> hello
[04:15:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[04:16:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[04:16:50] *** Joins: agireud (~agireud@user/agireud)
[04:17:22] *** Joins: iflema_ (~ian@user/iflema)
[04:17:51] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[04:18:40] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[04:19:06] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[04:19:45] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:19:56] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:20:09] <BrenBarn> SnoopJ: I doubt it can be done without lots of pain
[04:20:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:20:40] <BrenBarn> I mean, you could stick the source command on the front of whatever you're trying to subprocess
[04:20:45] <BrenBarn> but you'd have to do that for every subprocess
[04:20:50] <SnoopJ> I guess this thingy retains its shell script entrypoint just to do that, then
[04:21:03] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:21:18] <nedbat> Guest80: hey, what's up?
[04:21:21] <SnoopJ> at least in this distributable, but hopefully the one that isn't dockerized will not have this problem in the first place
[04:21:36] <SnoopJ> (actually, I'm not entirely sure *this* distributable has the problem, but OpenVINO is weird)
[04:22:11] <BrenBarn> there are some SO questions about it: https://stackoverflow.com/questions/7040592/calling-the-source-command-from-subprocess-popen
[04:22:16] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[04:22:18] *** Quits: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833) (Quit: Leaving)
[04:22:29] <BrenBarn> https://stackoverflow.com/questions/56320680/how-to-source-a-file-having-environment-variables
[04:22:32] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:22:38] *** Joins: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833)
[04:23:05] <BrenBarn> it looks like the answers are either "prepend source to the real comamnd youi want to run" or "source and output the environment, then manually parse that and stick it back into the Python environment"
[04:23:09] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[04:23:16] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[04:23:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50::94d3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:23:50] <SnoopJ> makes sense; I figured I was going to be stuck doing an alley-oop before entering the Python program, but I was curious. Thanks.
[04:25:49] *** Quits: Guest80 (~Guest80@BSN-142-100-91.dynamic.siol.net) (Ping timeout: 256 seconds)
[04:25:54] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[04:26:12] *** Quits: vlado (~vlado@181.50.79.237) (Quit: WeeChat 3.4)
[04:26:52] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[04:27:12] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[04:28:21] *** Joins: Praise (~Fat@user/praise)
[04:28:39] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 256 seconds)
[04:30:13] *** Joins: Thanattt (~Thanatos@102.89.33.179)
[04:31:50] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 268 seconds)
[04:32:56] *** Joins: XV8 (~XV8@2601:5cb:c001:50::94d3)
[04:33:05] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38ed:fe77:bdd1:d85e) (Quit: Client closed)
[04:33:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[04:33:45] *** Quits: ThanatosJ (~Thanatos@197.210.47.129) (Ping timeout: 256 seconds)
[04:33:48] *** Joins: bindu_ (~bindu@user/bindu)
[04:34:10] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Read error: Connection reset by peer)
[04:34:12] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[04:34:32] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[04:34:36] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:34:39] *** Joins: Lunatrius` (~Lunatrius@77.38.99.224)
[04:34:40] *** Joins: Xardas (~Xardas@149.233.51.127)
[04:34:50] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:35:00] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:35:02] *** Quits: nepeat (~nepeat@79.110.170.59) (Quit: ZNC 1.8.2 - https://znc.in)
[04:35:12] *** Joins: brabrax (~brabrax@user/brabrax)
[04:35:18] *** Quits: MercilessDeth (~brad@136.49.59.177) (Remote host closed the connection)
[04:35:28] *** Joins: nepeat (~nepeat@79.110.170.59)
[04:35:35] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:35:43] *** Joins: MercilessDeth (~brad@136.49.59.177)
[04:35:44] *** bindu_ is now known as bindu
[04:36:01] *** Quits: Lunatrius (~Lunatrius@77.38.99.224) (Ping timeout: 256 seconds)
[04:36:01] *** Lunatrius` is now known as Lunatrius
[04:37:18] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[04:39:35] *** Joins: trace987 (~f200yx10@91.66.151.109)
[04:40:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:40:44] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:40:59] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[04:41:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:41:41] *** Quits: grimvar (~grimvar@i5C75F5BE.versanet.de) (Ping timeout: 256 seconds)
[04:42:55] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[04:43:27] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[04:43:33] *** Joins: grimvar (~grimvar@i5C75F607.versanet.de)
[04:46:29] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[04:46:45] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:46:55] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:47:07] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[04:47:44] *** Joins: nomic (~nomic@185.217.117.249)
[04:48:06] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:52:03] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[04:52:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:56:01] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[04:56:03] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[04:56:41] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[04:57:46] *** Quits: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:57:49] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[04:58:18] *** Joins: cliluw (~cliluw@47.147.77.43)
[04:58:37] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[04:59:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[05:00:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:00:49] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[05:01:30] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:9f1a:fd00:edba:c2ab)
[05:01:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:02:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:03:51] *** Quits: parv (~quass@user/parv) (Ping timeout: 252 seconds)
[05:05:36] *** Joins: Enitin (~Enitin@82.102.22.86)
[05:06:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:10:01] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:10:57] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:12:02] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:12:09] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[05:12:21] *** Joins: onichomp (~onichomp@2806:264:4408:2be:5544:8bff:50cc:d07a)
[05:14:07] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:14:47] *** Joins: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz)
[05:14:59] *** Quits: hiroshi_ (~freedom@151.35.190.68) (Quit: hiroshi_)
[05:15:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:15:21] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 245 seconds)
[05:16:20] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:16:42] *** Joins: Pandadub (~Barones@user/Barones)
[05:17:47] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[05:18:01] *** Quits: tapeworm (~tapeworm@188.168.50.119) (Read error: Connection reset by peer)
[05:18:11] *** Joins: Pandadub (~Barones@user/Barones)
[05:19:07] *** Joins: jdmark2 (~jdmark@user/jdmark)
[05:19:29] *** Joins: hanzo (uid532183@user/hanzo)
[05:19:56] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 268 seconds)
[05:20:21] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[05:20:26] *** Joins: ideopathic (~ideopathi@2600:1702:8b0:a500:11e0:5434:c70d:2044)
[05:21:47] *** Quits: strugee (~strugee@173.211.12.73) (Ping timeout: 268 seconds)
[05:22:30] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 260 seconds)
[05:22:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:22:56] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[05:23:30] *** Joins: strugee (~strugee@rrcs-50-74-115-74.nyc.biz.rr.com)
[05:23:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:24:33] *** Joins: src (~src@user/src)
[05:24:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:24:47] *** Quits: BrokenCog (~BrokenCog@jachin.hartnell.edu) (Quit: Reconnecting)
[05:25:03] *** Joins: BrokenCog (~BrokenCog@jachin.hartnell.edu)
[05:26:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[05:26:30] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:38] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:27:18] <BrokenCog> I'm trying to understand something about Pandas to_sql and SQLAlchemy ... I've created a table with "datetime = Column( String, primary_key=True)" ... first, is a String valid as a primary_key? And, then, if I insert records with duplicate datetime stamps, shouldn't that throw a UNIQUE violation or whatever the primary key constraint error is?
[05:27:50] *** Joins: Wulf (~Wulf@user/wulf)
[05:28:11] <BtbN> strings can be primary keys in most/all relational databases
[05:28:14] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[05:28:28] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:28:28] <BtbN> not neccesarily the most efficient thing, but sure works. Adds a Unique-Constraint to them
[05:28:37] <BtbN> So yeah, if you got a duplicate datetime, it'll fail
[05:28:42] <BrokenCog> yeah, I wasn't really doubting that.  this is SQLite3 ... shold have mentioned that.
[05:29:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:29:06] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 245 seconds)
[05:30:01] <BrokenCog> right.  it's not efficient for sure, but the datetime stamp is what makes entries unique so I'm not sure what else I would use as the primary key, unless I made the id primary and then manually checked each record's datetime  existing before inserting!?
[05:30:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:30:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:31:32] <phy1729> Have you considered using a DateTime column instead of a String?
[05:31:40] <BtbN> SQLite ain't got those
[05:31:56] <phy1729> It gets converted to a number iirc
[05:32:03] *** Joins: LiTHiuM (~Imk0tter@221.sub-174-204-129.myvzw.com)
[05:32:04] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[05:32:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:32:18] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[05:32:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:32:25] <BrokenCog> I don't think SQLite supports datetime as type? ...
[05:32:32] <BtbN> It has a datetime() built in function, which returns a unix timestamp, but that's it.
[05:33:00] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 252 seconds)
[05:33:04] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[05:33:16] <phy1729> https://www.sqlite.org/datatype3.html   DATETIME is NUMERIC
[05:33:33] <grym> (or TEXT)
[05:34:05] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:34:26] <BrokenCog> so String in SQLAlchemy syntax.
[05:35:01] *** Quits: Imk0tter (~Imk0tter@172.58.228.212) (Ping timeout: 250 seconds)
[05:35:03] <grym> sqlite is also not strictly typed unless you tell it to be
[05:35:24] <BtbN> If you use SQLAlchemy anyway, I'm pretty sure it can abstract all that stuff away
[05:35:34] <BtbN> so you just give it a datetime object, and it takes care of the rest
[05:35:40] <BrokenCog> yes.
[05:36:06] <phy1729> I just know I have an app sitting over >>> there using sqlalchemy and SQLite with a Column(DateTime  (ok actually a subclass of mine that enforces tzinfo=timezone.utc) and .schema shows DATETIME
[05:36:48] <BrokenCog> I'm okay with the slight prefromance issue using TEXT as a datetime stamp.   it's the primary key issue ... I can insert the same data with duplicate datetime (string) data without an error, which is what I'm trying to understand.
[05:36:49] <BtbN> DATETIME is not a type SQLite knows, so it defaults to NUMERIC
[05:36:57] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[05:37:00] <BtbN> which happens to work out if you store unix timestamps in there
[05:37:33] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[05:37:35] <phy1729> I'm literally staring at the output of sqlite3 .schema on the db
[05:38:10] <BrokenCog> ""Datetime" DATETIME,"
[05:38:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:38:26] <BrokenCog> that's from .schema.  that doesn't mean the data is stored as such.
[05:38:31] <BtbN> You even linked the documentation page yourself that explains the behaviour, phy1729
[05:38:38] <BrokenCog> it just means the DB SQLite is translating.
[05:38:58] <BrokenCog> the record is storing a number (unix seconds).
[05:39:01] <BtbN> There's 4 rules, and then the "everything else" case of "Otherwise, the affinity is NUMERIC.", which is why DATETIME is NUMERIC
[05:39:16] <phy1729> which is still better than string
[05:39:20] <grym> why?
[05:39:32] <grym> iso8601 is perfectly reasonable
[05:39:44] <BtbN> But slow to look up in a DB
[05:39:52] <phy1729> numeric is going to be more efficient for basically any operation
[05:40:23] *** Quits: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[05:41:38] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[05:41:45] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[05:41:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:42:43] <BrokenCog> SQLAlchemy has DateTime, which is how I've defined the field ... but it allows duplicates despite being marked as primary key.
[05:42:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:45:27] <BrokenCog> SQLAlchemy has this UNIQUE ... that isn't the same as primary_key is it!?
[05:45:31] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:45:40] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[05:46:06] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[05:46:07] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[05:46:09] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:46:13] *** Joins: Sonaida (~Guest42@190.80.246.124)
[05:46:33] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:46:54] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:47:49] *** Quits: Sonaida (~Guest42@190.80.246.124) (Quit: Client closed)
[05:49:04] <grym> no, though primary keys must also be unique
[05:49:12] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[05:49:52] <BrokenCog> right, but, I mean I don't explicitly need to say "primary_key=True, unique=True"
[05:50:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:50:17] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:51:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[05:51:10] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[05:51:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[05:51:42] *** Quits: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net) (Ping timeout: 252 seconds)
[05:52:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:52:43] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[05:52:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:52:47] *** Joins: Techcable (~Techcable@user/Techcable)
[05:53:10] *** Joins: kurfen_ (~kurfen@176.119.195.10)
[05:53:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:53:23] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[05:53:26] *** Joins: Viewday1154 (~Viewday@user/viewday)
[05:53:37] *** Quits: kurfen (~kurfen@176.119.195.8) (Ping timeout: 240 seconds)
[05:55:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 252 seconds)
[05:55:32] *** Viewday1154 is now known as Viewday115
[05:56:43] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[05:56:47] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[05:57:10] <phy1729> no
[05:57:11] *** Joins: Pandadub (~Barones@user/Barones)
[05:59:33] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[06:01:01] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[06:04:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:04:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:04:45] *** Joins: haasn` (~nand@haasn.dev)
[06:06:15] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:06:27] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:08:45] *** Quits: haasn (~nand@haasn.dev) (Ping timeout: 256 seconds)
[06:08:45] *** haasn` is now known as haasn
[06:08:57] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 256 seconds)
[06:08:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:09:16] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[06:10:34] <BrokenCog> bbl.
[06:10:36] *** Quits: BrokenCog (~BrokenCog@jachin.hartnell.edu) (Quit: leaving)
[06:11:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[06:11:32] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[06:11:47] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[06:12:11] *** Joins: Pandadub (~Barones@user/Barones)
[06:12:47] *** Joins: Trashlord (~trash@user/trashlord)
[06:12:57] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[06:13:25] *** Quits: Thanattt (~Thanatos@102.89.33.179) (Ping timeout: 240 seconds)
[06:13:41] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[06:13:45] <hanetzer> heyo. if I wanted to have an indexed list of weekdays, Sun...Sat as the key, and 0...6 as the value, what datastructure would you suggest I use?
[06:14:28] <hanetzer> (the point is to take Jan 1 of any given year, subtract the value based on the key/weekday of that date, and find the prior sunday)
[06:15:13] <hanetzer> so if Jan 1 is already a sunday, subtracting 0 will not change anything, but if its a Monday, subtracting 1 will give you the prior sunday, Dec 31, and so on
[06:15:14] <grym> hanetzer: a dict, probably, or perhaps an enum
[06:16:19] *** Quits: PaterTemporalis (~woooopsie@168.182.232.78) (Ping timeout: 256 seconds)
[06:16:20] <hanetzer> dict is `weekdays = { 'sun': 0, 'mon': 1, ... }` and so on, correct?
[06:16:25] <grym> yes
[06:18:13] <SnoopJ> hanetzer, you want the Sunday before 1 Jan in an arbitrarily chosen year?
[06:18:27] <hanetzer> gotcha. I'm not much of a pythonist, but a project I'm working on will be using the skyfield module for astronomical calculations, so yeh, dusting off what little python I do know.
[06:18:32] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:18:33] <hanetzer> SnoopJ: more or less, yes.
[06:18:45] <hanetzer> unless  Jan 1 is a sunday, in which case, I want jan 1 :)
[06:18:47] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[06:19:24] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[06:21:24] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:22:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:22:58] *** Parts: nosolls (~nosollsma@user/nosolls) ()
[06:23:24] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[06:25:28] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:25:35] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:25:41] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Client Quit)
[06:25:53] <karlpinc> hanetzer: I don't recall my python either, but last time I paid attention the "arrow" date library did "everything".  You might want to look at that.
[06:25:57] *** Tatarize is now known as Tat
[06:26:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 256 seconds)
[06:26:56] <hanetzer> karlpinc: I'll look into it, thanks. but it has to interwork with skyfield
[06:28:34] <SnoopJ> hanetzer, the datetime.date class keeps track of its weekday (starting from Monday = 0), I would probably do something like this: https://bpa.st/KTVQ
[06:28:55] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[06:29:02] <karlpinc> hanetzer: I'd think about getting the julian date of the first of the year, and then do "something" modulo 7.  (but listen to SnoopJ )
[06:29:13] <SnoopJ> that's pretty much what I did :)
[06:29:21] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[06:29:29] <SnoopJ> no modulus, but same idea
[06:31:02] *** Joins: brookesy66 (~will@203.185.205.85)
[06:32:26] <jinsun__> with dateutil you can do `dateutil.parser.parse("Jan 1") - dateutil.relativedelta.relativedelta(weekday=dateutil.relativedelta.SU(-1))`
[06:33:03] <SnoopJ> TIL relativedelta
[06:33:09] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:9f1a:fd00:edba:c2ab) (Quit: dclxvi)
[06:34:03] <jinsun__> those repeated names are annoying, but that is consistent with datetime I guess :D
[06:34:12] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[06:34:52] <SnoopJ> stdlib (Library of Congress)
[06:35:40] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[06:36:33] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[06:38:53] *** Joins: rootx74 (~rootx74@user/rootx74)
[06:39:36] *** Joins: qlixed (~qlixed@181.44.129.13)
[06:39:47] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[06:39:52] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[06:39:56] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[06:40:12] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 240 seconds)
[06:40:39] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[06:41:05] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:41:29] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[06:41:57] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[06:42:04] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:43:41] <hams> say, i want to delete rows that have a particular word in it
[06:44:01] <hams> i want to delete test out of a csv file
[06:45:13] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[06:45:36] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[06:46:09] *** Quits: mdq (~mdq@freeshell.de) (Ping timeout: 256 seconds)
[06:46:09] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[06:46:32] *** Joins: mdq (~mdq@freeshell.de)
[06:48:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[06:48:59] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[06:49:31] <hams> df[~df.Team.str.startswith('Fin')]
[06:52:31] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[06:53:43] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:55:02] *** Joins: rickybob (~rickybob@35.143.255.39)
[06:57:17] *** Quits: vakera_pingveno (~dan@70-139-136-209.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[06:57:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:57:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:58:15] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 252 seconds)
[06:59:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:59:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:59:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:01:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[07:01:25] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[07:01:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:04:15] *** Joins: ubert1 (~Thunderbi@p200300ecdf1588c644ba34ac9ed54fc8.dip0.t-ipconnect.de)
[07:04:46] *** Quits: widp (~widp@124.123.106.12) (Read error: Connection reset by peer)
[07:04:55] *** Quits: ubert (~Thunderbi@p200300ecdf158894f1c8f499466ba149.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:04:55] *** ubert1 is now known as ubert
[07:05:00] *** Joins: widp (~widp@124.123.106.12)
[07:05:12] *** Quits: widp (~widp@124.123.106.12) (Read error: Connection reset by peer)
[07:05:35] *** Joins: widp (~widp@124.123.106.12)
[07:09:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[07:11:48] *** Quits: zunk (~zunk@user/zunk) (Ping timeout: 240 seconds)
[07:13:02] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[07:14:36] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[07:16:10] *** Joins: ham5urg_ (~ham5urg@p5ddfcad4.dip0.t-ipconnect.de)
[07:17:19] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[07:17:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[07:17:51] *** Quits: ham5urg (~ham5urg@p200300d167282e009af384a00c8ea1ca.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:19:11] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Client Quit)
[07:19:26] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[07:23:18] *** Joins: pdc (~raffaem@45.91.20.168)
[07:23:39] *** Joins: tijuco (~tijuco@user/tijuco)
[07:25:00] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[07:27:41] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:29:45] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:30:01] *** Joins: tijuco (~tijuco@user/tijuco)
[07:32:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:36:27] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[07:36:46] *** Quits: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:36:54] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[07:37:18] *** Joins: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz)
[07:37:21] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[07:37:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:40:08] *** Joins: waynew (~wayne@user/waynew)
[07:40:17] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:40:46] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:43:37] *** Parts: orbisvicis_ (~orbisvici@user/orbisvicis) (Leaving)
[07:43:47] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[07:45:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:45:56] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[07:48:34] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[07:50:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:51:20] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:53:13] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[07:53:32] *** Joins: Viewday1159 (~Viewday@user/viewday)
[07:55:06] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:55:06] *** Viewday1159 is now known as Viewday115
[07:56:50] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:56:52] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[08:00:24] *** Joins: saroy (~Sandipan@45.249.73.234)
[08:00:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[08:01:40] *** Quits: llh (~UPP@user/llh) (Read error: Connection reset by peer)
[08:01:41] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[08:03:58] *** Quits: jle (~jle@user/jle) (Ping timeout: 268 seconds)
[08:03:59] *** Quits: Morfeus (~csurlee@user/morfeus) (Ping timeout: 256 seconds)
[08:04:19] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:04:33] *** Joins: Morfeus (~a@ip-046-223-149-227.um13.pools.vodafone-ip.de)
[08:04:33] *** Quits: Morfeus (~a@ip-046-223-149-227.um13.pools.vodafone-ip.de) (Changing host)
[08:04:33] *** Joins: Morfeus (~a@user/morfeus)
[08:04:39] *** Quits: rickybob (~rickybob@35.143.255.39) (Read error: Connection reset by peer)
[08:04:44] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[08:04:47] *** Quits: luva (~luva@185.168.9.232) (Ping timeout: 252 seconds)
[08:05:09] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:05:16] *** Joins: adeliktas3 (~adeliktas@i59F5FF29.versanet.de)
[08:05:16] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:05:38] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[08:06:10] *** Joins: luva (~luva@185.168.9.232)
[08:06:15] *** Quits: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:06:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:06:38] *** Joins: asdfasdf (~Barones@2804:7f3:898a:2ff9:12e7:60d8:157a:2f34)
[08:06:39] *** Joins: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de)
[08:06:41] *** Quits: adeliktas (~adeliktas@i59F5FD1E.versanet.de) (Ping timeout: 250 seconds)
[08:06:41] *** adeliktas3 is now known as adeliktas
[08:07:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:07:17] *** Joins: de-facto (~de-facto@user/de-facto)
[08:09:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:09:12] *** Quits: Pandadub (~Barones@user/Barones) (Ping timeout: 252 seconds)
[08:10:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:13:52] *** Joins: zunk (~zunk@user/zunk)
[08:14:25] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[08:14:43] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[08:16:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:16:40] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:16:47] *** Joins: shokohsc0 (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[08:16:54] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[08:16:54] *** shokohsc0 is now known as shokohsc
[08:17:10] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[08:17:55] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 256 seconds)
[08:20:22] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[08:20:59] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:21:01] *** Quits: src (~src@user/src) (Quit: leaving)
[08:21:22] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:21:38] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[08:22:08] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:25:34] *** Quits: ProdIssue (~nicbr@cpe-71-77-64-33.nc.res.rr.com) (Quit: Leaving)
[08:28:32] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[08:30:02] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:31:23] *** Joins: haasn (~nand@haasn.dev)
[08:31:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:31:31] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 256 seconds)
[08:32:35] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[08:33:30] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:38:19] *** Joins: maxzor (~maxzor@2a01cb04054faa0075bf012840890cfe.ipv6.abo.wanadoo.fr)
[08:39:26] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[08:41:02] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[08:41:57] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[08:42:24] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[08:42:39] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[08:43:31] *** lukedashjr is now known as luke-jr
[08:43:39] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:45:02] *** Quits: justm3 (~Username@84.84.41.7) (Ping timeout: 240 seconds)
[08:45:02] *** justm33 is now known as justm3
[08:45:54] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 268 seconds)
[08:47:37] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[08:48:50] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[08:49:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:51:25] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[08:51:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[08:53:28] *** Joins: crashrep (~crashrep@user/crashrep)
[08:53:41] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[08:53:48] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:54:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:54:25] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[08:56:14] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[08:56:56] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[08:57:58] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[08:58:01] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:58:43] *** Joins: crashrep (~crashrep@user/crashrep)
[08:58:44] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:58:48] *** Joins: hams (~hams@73.232.205.0)
[08:58:48] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[08:58:48] *** Joins: hams (~hams@user/hams)
[08:59:49] *** Quits: asdfasdf (~Barones@2804:7f3:898a:2ff9:12e7:60d8:157a:2f34) (Quit: Leaving)
[09:00:15] *** Quits: rootx74 (~rootx74@user/rootx74) (Quit: Leaving)
[09:00:24] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[09:00:35] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[09:00:42] *** Joins: davor_ (~davor@user/davor)
[09:01:00] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[09:03:04] *** Joins: djapo (~archangel@user/djapo)
[09:04:26] <mattf> kinda off topic but anyone is interested on test some python repl for irc that I made (I want to know how hackeable and unsafe it is) pm me if you want
[09:07:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[09:13:48] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[09:15:26] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:16:22] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[09:16:53] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[09:17:25] *** lukedashjr is now known as luke-jr
[09:17:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[09:17:46] *** Quits: brookesy66 (~will@203.185.205.85) (Quit: WeeChat 3.4.1)
[09:19:58] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:22:21] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:22:37] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8)
[09:22:37] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 240 seconds)
[09:24:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:24:32] *** Quits: sreve (~quassel@p4ff44c40.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:24:42] *** Joins: sreve (~quassel@p4ff44e04.dip0.t-ipconnect.de)
[09:27:19] *** Joins: uxemacs (~timothy@user/uxemacs)
[09:27:53] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[09:28:38] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[09:28:54] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8)
[09:28:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[09:30:39] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[09:30:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[09:32:29] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:33:10] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[09:33:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[09:36:11] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[09:36:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:36:41] <LuxuryMode> Running into this error with Python 3.10.2 and pip 22.0.4:  Failed to build cffi lxml pillow psycopg2 pycrypto pycurl pynacl ERROR: Could not build wheels for pynacl, which is required to install pyproject.toml-based projects. Any ideas how to resolve this?
[09:36:55] <LuxuryMode> Python 3.10.3*
[09:37:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:37:48] <phy1729> Is there another error above that?
[09:37:54] <cyphase> mattf, sure, give me access and i'll leave a note on your desktop letting you know how secure it is
[09:38:18] <cyphase> that reminds me of the SQL injection trophy in Schemaverse
[09:38:29] <mattf> cyphase: i take you are not really interested :P
[09:38:50] <LuxuryMode> phy1729: oh shoot, there is https://bpa.st/5N2Q
[09:39:03] <cyphase> mattf, i am interested if you want to share it, but due to busyness i make no promises of actually doing anything with it :)
[09:39:20] <phy1729> Exception: ERROR: The 'make' utility is missing from PATH        so install make
[09:39:44] <mattf> cyphase: it is on irc.dot.org.es #bots
[09:39:48] <LuxuryMode> yeah, I guess I need `apt-get install build-essential`
[09:39:56] <mattf> 6667 or 6697 ssl
[09:40:28] <LuxuryMode> thanks phy1729
[09:41:26] *** Joins: bahamas (~lucian@84.232.140.158)
[09:44:03] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[09:45:27] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 252 seconds)
[09:45:35] *** Joins: r4ulrm (~raul@181.27.127.43)
[09:45:55] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:49:11] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[09:53:40] *** Joins: Viewday1151 (~Viewday@user/viewday)
[09:54:04] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[09:54:37] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[09:55:11] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:55:11] *** Viewday1151 is now known as Viewday115
[09:55:21] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[09:55:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:55:36] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:55:46] *** lukedashjr is now known as luke-jr
[09:56:04] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Client Quit)
[09:56:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:57:36] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:58:33] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:59:45] *** Quits: ACfromTX (~acroft@47-219-46-13.tyrmcmtk01.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[10:01:16] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:01:43] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:02:48] *** Quits: uxemacs (~timothy@user/uxemacs) (Quit: Konversation terminated!)
[10:05:15] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:05:49] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[10:06:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:06:21] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 252 seconds)
[10:08:07] *** Quits: onichomp (~onichomp@2806:264:4408:2be:5544:8bff:50cc:d07a) (Read error: Connection reset by peer)
[10:08:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:08:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[10:08:38] *** Joins: han-solo (~han-solo@user/han-solo)
[10:09:09] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[10:10:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:11:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[10:11:53] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:12:36] <LuxuryMode> I just can't seem be able to install ruamel.yaml.clib successfully https://bpa.st/HHGA I keep installing more and more packages with apt-get but to no avail. Any ideas?
[10:12:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[10:13:03] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[10:13:30] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[10:13:30] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:af5f:77d2:3c1:32bb)
[10:13:52] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[10:14:30] <phy1729> That looks like an upstream bug. Are you on a more obscure arch or something?
[10:15:02] <phy1729> hrm aarch64 isn't that rare; dunno
[10:15:17] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[10:16:00] <LuxuryMode> phy1729: on a docker image using debian:bullseye-slim
[10:18:46] <LuxuryMode> Perhaps I should try the non-slim version ¯\_(ツ)_/¯
[10:19:01] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:19:17] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:20:36] *** Joins: manti7 (~manti7@176.10.104.94)
[10:21:01] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[10:23:55] *** Quits: ExpiredKebab (~sgreadly@47-72-210-135.dsl.dyn.ihug.co.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:24:24] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:a53e:3ddf:531b:d987)
[10:27:28] *** Joins: white2 (~mahengrui@user/mahengrui1)
[10:29:14] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:29:24] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[10:29:29] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8)
[10:30:12] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:30:39] *** Joins: vlm (~vlm@user/vlm)
[10:31:40] *** Joins: rootx74 (~root@108.61.89.107)
[10:31:55] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[10:32:03] *** Joins: j0hn_mc_clane (~j0hn_mc_c@dD577050E.access.telenet.be)
[10:32:03] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:32:15] *** Joins: oakl11f (~a09q1as@2a02:587:3f37:6c00:807f:a760:1362:9520)
[10:32:20] *** Quits: rootx74 (~root@108.61.89.107) (Changing host)
[10:32:20] *** Joins: rootx74 (~root@user/rootx74)
[10:32:21] *** Joins: gulzar (~gulzar@49.206.240.149)
[10:34:27] *** Quits: Elzington_ (~Elzington@87.249.134.10) (Ping timeout: 250 seconds)
[10:35:41] *** Joins: Elzington (~Elzington@68.235.43.37)
[10:36:25] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:36:41] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[10:37:07] *** chowmein__ is now known as chowmeined
[10:37:11] *** Joins: cheater (~Username@user/cheater)
[10:38:33] *** Quits: ideopathic (~ideopathi@2600:1702:8b0:a500:11e0:5434:c70d:2044) (Ping timeout: 250 seconds)
[10:39:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:40:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:40:17] *** Joins: Elzington_ (~Elzington@66.63.167.156)
[10:40:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:40:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:41:23] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[10:41:28] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[10:42:39] *** Quits: j0hn_mc_clane (~j0hn_mc_c@dD577050E.access.telenet.be) (Ping timeout: 256 seconds)
[10:43:12] *** Quits: Elzington (~Elzington@68.235.43.37) (Ping timeout: 252 seconds)
[10:43:12] *** Joins: sudomann (~sudomann@98.219.211.182)
[10:43:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:45:37] *** Quits: oakl11f (~a09q1as@2a02:587:3f37:6c00:807f:a760:1362:9520) (Quit: Leaving)
[10:45:52] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: Lost terminal)
[10:48:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[10:48:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:49:40] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[10:50:36] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:51:25] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[10:54:07] *** Joins: han-solo (~han-solo@user/han-solo)
[10:55:07] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[10:56:07] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:56:08] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:56:32] *** Joins: audio (~audio@user/audio)
[10:57:09] <hanetzer> huh.... can you nest a function definition inside another function?
[10:57:38] <Repiphany> Yes
[10:57:50] <hanetzer> is the inner function accessible/visible outside it?
[10:58:04] *** Joins: rvalue (~rvalue@user/rvalue)
[10:58:05] <Repiphany> If you return it, sure
[10:58:25] *** Joins: ACfromTX (~acroft@47-219-46-13.tyrmcmtk01.res.dyn.suddenlink.net)
[10:58:45] <hanetzer> https://github.com/skyfielders/python-skyfield/blob/master/skyfield/almanac.py#L59 the interest here is the season_at function
[10:59:52] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[11:00:39] <Repiphany> What about it
[11:02:44] <hanetzer> as in, I'd like to be able to just call season_at(t), where ... actually, this is such a small bit of code I can just do the thing manually :)
[11:03:35] <Repiphany> season_at has to be created with an ephemeris
[11:04:00] <Repiphany> You can just chain the function call, like `seasons(your_ephemeris)(t)`
[11:04:13] <hanetzer> huh. neat. lemme try
[11:04:21] *** Quits: hams (~hams@user/hams) (Quit: Leaving)
[11:04:31] <Repiphany> hanetzer: https://en.wikipedia.org/wiki/Closure_(computer_programming)#Anonymous_functions
[11:05:31] <hanetzer> that explains it. never quite grokked those.
[11:05:45] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[11:07:57] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 252 seconds)
[11:10:14] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:10:24] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[11:10:25] *** Quits: zamba (~marius@185.47.250.222) (Ping timeout: 256 seconds)
[11:14:05] *** iflema_ is now known as iflema
[11:15:03] *** Joins: zamba (~marius@185.47.250.222)
[11:15:08] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[11:15:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:15:22] *** Joins: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de)
[11:17:14] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[11:17:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[11:18:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:18:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[11:19:12] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:19:29] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[11:19:36] *** lukedashjr is now known as luke-jr
[11:19:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:20:32] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:20:36] *** Quits: zamba (~marius@185.47.250.222) (Ping timeout: 252 seconds)
[11:21:15] *** Quits: maxzor (~maxzor@2a01cb04054faa0075bf012840890cfe.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[11:21:25] <TML> hanetzer: it's worth the time to figure them out, they're one of the cooler things in CompSci IMO
[11:22:00] *** Joins: zamba (~marius@185.47.250.222)
[11:22:16] *** Joins: resmo (~resmo@2a00:d420:9:8a00:9123:f02a:45a0:f8a6)
[11:22:19] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:22:34] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[11:23:24] *** Joins: NealRame (~a@89.187.163.193)
[11:23:25] *** Joins: parv (~quass@user/parv)
[11:23:43] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[11:23:47] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[11:25:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:27:28] *** Joins: f1se4 (~f1se4@213.195.112.15)
[11:27:32] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[11:27:45] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Ping timeout: 252 seconds)
[11:28:06] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[11:29:07] *** Joins: amke[m] (~amkematri@2001:470:69fc:105::1:bdaf)
[11:29:44] *** Joins: mrwick (~mrwick@user/mrwick)
[11:29:55] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[11:31:04] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:32:00] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:13] *** amke[m] is now known as predawn[m]
[11:33:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:33:47] *** Quits: emerent (~quassel@p200300cd5743c3f3ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:34:01] *** Joins: emerent (~quassel@p200300cd5743c377ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:34:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[11:34:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:35:00] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[11:35:21] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[11:36:24] *** Joins: Atque (~Atque@user/atque)
[11:36:37] *** Joins: predawn (~predawn@223.233.73.96)
[11:38:19] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[11:39:42] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[11:43:25] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:46:26] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:46:27] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[11:46:50] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[11:47:43] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[11:48:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:49:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:51:47] *** Joins: palasso (~palasso@user/palasso)
[11:52:35] <audio> https://bpa.st/VEVA
[11:52:41] <audio> my computer runs out of memory around index (batch) 20. any way I can get this to run fully? there are ~3000 batches. https://bpa.st/VEVA
[11:52:56] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[11:53:19] *** Joins: nelgau (~nelgau@cpe-75-82-216-42.socal.res.rr.com)
[11:53:53] *** Joins: Viewday1157 (~Viewday@user/viewday)
[11:54:38] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[11:54:56] *** Quits: predawn (~predawn@223.233.73.96) (Changing host)
[11:54:56] *** Joins: predawn (~predawn@user/predawn)
[11:54:57] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[11:55:24] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:55:24] *** Viewday1157 is now known as Viewday115
[11:56:59] <Repiphany> Why do you need to extend a python list with a numpy array
[11:57:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:58:43] <audio> Repiphany, ...good point
[12:00:52] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[12:01:37] <parv> audio, What is the purpose of pickle'ing the numpy data?
[12:01:52] <audio> parv, so it's of smaller size so i can load it in kaggle
[12:01:58] <audio> non-pickled it's 47GB
[12:02:06] <audio> they're images
[12:02:40] <audio> Repiphany, that helped completely, thanks
[12:02:54] <audio> type(np.array) != list
[12:02:57] <parv> audio, Ok
[12:04:48] *** Joins: grooverman_ (~grooverma@152.250.149.217)
[12:04:50] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[12:04:59] <parv> Do appends of pickle dumps to a file work (as in would pickle be able to generate the all the data structures from such a file)?
[12:05:41] *** Quits: remote (~self@user/hackers) (Ping timeout: 252 seconds)
[12:06:39] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:06:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:06:48] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 252 seconds)
[12:08:50] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[12:09:53] *** Joins: upsala (~zcb@185.209.196.134)
[12:10:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:10:57] *** Joins: andreasbuhr (~quassel@p549db93e.dip0.t-ipconnect.de)
[12:11:11] *** Quits: ham5urg_ (~ham5urg@p5ddfcad4.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[12:11:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:12:00] *** Joins: NeoCore (~neocore@139.28.219.229)
[12:12:33] *** Joins: remote (~self@user/hackers)
[12:14:33] *** Joins: ham5urg (~ham5urg@p2e54d3b5.dip0.t-ipconnect.de)
[12:15:13] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:73cd:7334:b93a:a1b8) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:15:28] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fc5f:853e:195:e93c)
[12:16:19] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[12:16:42] *** Joins: Payam67 (~Payam@138.106.57.131)
[12:17:04] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[12:17:38] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:18:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[12:19:17] *** Quits: predawn (~predawn@user/predawn) (Quit: Client closed)
[12:19:30] <placeb0> hello, does anyone know why line 10 here https://bpa.st/55RA is marked as a syntax error?
[12:19:56] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[12:20:04] <placeb0> basically the error is that the break isn't in a loop, but to me it looks like it is...
[12:20:19] <Repiphany> What loop
[12:20:21] <mrwick> placeb0: I see no loop there
[12:20:27] *** Joins: reset (~reset@user/reset)
[12:20:46] <mrwick> placeb0: none of those semicolons are necessary
[12:21:12] *** Joins: Indecisive (~chaz@wsip-98-171-200-135.om.om.cox.net)
[12:21:24] <placeb0> mrwick: I get the same error without the semicolon too
[12:21:29] <TML> placeb0: a break outside of a loop is a SyntaxError
[12:21:39] <TML> placeb0: You have no loops in the code you shared
[12:21:39] <jinsun__> placeb0: loop means for or while, def and if are not loops
[12:21:48] <placeb0> uh
[12:21:50] <placeb0> I SEE
[12:22:08] <mrwick> placeb0: do you mean to have a recursive function?
[12:22:12] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[12:22:13] <placeb0> is there any way I can use break or something similar whithout a for or while loop?
[12:22:22] *** Joins: argument (~0ptions@90.249.16.86)
[12:22:22] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[12:22:22] *** Joins: argument (~0ptions@user/argument)
[12:22:24] <placeb0> (for and while loops are forbitten in this exersise)
[12:23:06] <TML> placeb0: it might be easier if you describe your goal than to try and decode it from code that doesn't do what your goal is
[12:23:06] <placeb0> mrwick: a recursive function to do what?
[12:23:35] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 268 seconds)
[12:23:52] *** Quits: white2 (~mahengrui@user/mahengrui1) (Quit: Leaving)
[12:24:24] <placeb0> TML: to create a function that will not take any parameters and will return the square root of all numbers from 10 to 100 which are not divisible by 7 without using for or while
[12:24:27] <TML> placeb0: break's only job is to terminate a loop - if you don't have a loop, there's no need for "break or something similar" - I am having difficult picturing what you think the application flow looks like there
[12:24:30] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:25:26] <placeb0> I see, I was thinking break would work the same way it works in other languages
[12:25:33] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[12:25:40] <TML> it does
[12:25:49] <placeb0> basically I want to skip all numbers that are not divisable with 7
[12:25:50] <TML> that's the same way break works in all the languages I know
[12:25:53] <mrwick> placeb0: your last line calls the function from within the function, the whitespace is important
[12:26:57] <placeb0> mrwick: do you mean I should replace it with a return?
[12:27:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:27:54] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Client Quit)
[12:28:14] <TML> placeb0: Are you allowed to use a list expression in this scenario?
[12:28:57] <placeb0> TML: yes
[12:28:59] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[12:29:10] <TML> [x**0.5 for x in range(1, 101) if x % 7 != 0]
[12:29:13] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[12:29:34] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[12:29:45] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[12:29:50] <placeb0> but I am not allowed to use a for
[12:29:58] <TML> That's not a for
[12:30:03] <TML> That's a list expression
[12:30:13] <parv>  Yes, but uses a loop.
[12:30:15] <TML> [foo for foo in bar] is a list expression
[12:30:23] <Repiphany> (comprehension, not expression)
[12:30:33] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:30:38] <TML> Repiphany: Ooops, right - sorry.
[12:30:43] <placeb0> well, the exercise says to not use a for
[12:30:45] <TML> Too early in the morning here
[12:30:49] <TML> placeb0: That's not a for loop
[12:30:52] <placeb0> maybe I should get more details about that
[12:30:58] *** Joins: luigibu (~luigi@93.176.153.88)
[12:31:19] <placeb0> TML: it doesn't say 'for loop', it just  says 'for', so I'm not sure
[12:31:45] <TML> Well, if you can't use for, while, or a list comprehension, I'm not sure how they expect you to loop
[12:32:03] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[12:32:07] <placeb0> I believe the goal is to rule out for to make us use map
[12:32:21] <jinsun__> return [1.0, 1.414, 1.732, 2.0, ....]
[12:32:23] <TML> map over what, though
[12:32:38] *** Joins: grooverman (~grooverma@152.250.149.49)
[12:32:59] <placeb0> I guess I need to get more details on the requirements I guess...
[12:33:03] <TML> Are you given input that holds the values?
[12:33:04] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:33:12] <placeb0> no
[12:33:15] <jinsun__> just type the whole answer out if you can't loop
[12:33:34] <Repiphany> Example of hiding a loop in a recursive function https://bpa.st/RBSA
[12:33:36] <TML> jinsun__: Yeah, that was another thought I had - just directly encode the values and call it done
[12:33:37] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:33:39] <placeb0> that's practically correct
[12:33:41] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:33:57] *** Quits: grooverman_ (~grooverma@152.250.149.217) (Ping timeout: 240 seconds)
[12:34:18] <TML> placeb0: https://bpa.st/TB4Q
[12:34:19] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:34:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:34:35] <placeb0> Repiphany: thanks, though the function has to not take any parameters
[12:34:38] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[12:35:04] <placeb0> TML: I mean that's correct
[12:35:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:35:31] *** Parts: nickodd (~nickodd@user/nickodd) ()
[12:35:34] <TML> placeb0: Seems like a bad course you're putting yourself through, in my book
[12:36:16] <deltab> placeb0: is there a URL for the exercise?
[12:36:31] <placeb0> deltab: no, just what I pasted
[12:37:01] <deltab> are you meant to use recursion?
[12:37:13] <Repiphany> list(map(lambda x: x ** 0.5, filter(lambda x: x % 7, range(10, 101))))
[12:37:45] <placeb0> deltab: yes
[12:38:07] <TML> Repiphany: gross
[12:38:09] <TML> :)
[12:38:17] <placeb0> why is it gross?
[12:38:21] <Repiphany> Gross just like whatever "exercise" this is
[12:38:29] *** Joins: VoidSync (~sync@user/voidsync)
[12:38:34] <audio> Repiphany, can you see what's wrong with my code? https://bpa.st/I7QQ
[12:38:47] <audio> images.pickle is supposed to be several GB but it's only a few bytes
[12:39:01] <Repiphany> np.append doesn't modify arrays in place
[12:39:03] <TML> placeb0: I personally would not be a huge fan of writing code like that
[12:39:08] <audio> son of a
[12:39:41] <placeb0> TML: I'm not sure what do you mean by *this*
[12:40:06] <placeb0> maybe I should also mention that I have only been studying python for 3 days, so there is that
[12:40:22] <TML> placeb0: I personally would not be a huge fan of code like that which Repiphany provided - while it does the job, it's too clever by half for my taste
[12:40:29] <TML> clever code is bad code in my book
[12:40:45] <Repiphany> filter and map are not idiomatic python
[12:40:55] <placeb0> I actually didn't know what lambda was
[12:41:03] <audio> Repiphany, any suggestions?
[12:41:09] <jinsun__> and it is as much loop as a list comprehension, just because your random restrictions say that "for" is a loop and map is not doesn't mean it is right
[12:41:13] <Repiphany> List comprehensions do the same thing without ugly lambdas and all you have to do is use the `for` keyword
[12:41:31] <placeb0> jinsun__: never claimed otherwise
[12:41:37] <placeb0> some teachers are idiots
[12:41:38] <TML> and without nesting function calls 3 levels deep :)
[12:41:44] <Repiphany> audio: I have no idea what `data` looks like
[12:41:45] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:42:06] <TML> placeb0: No chance in your case to avoid taking training from an idiot teacher?
[12:42:27] <jinsun__> placeb0: try to ignore any random restrictions placed on you, and just learn the proper way of doing things
[12:42:43] <placeb0> TML: oh that's not my teacher, I'm just helping out my sister (who is not in IT)
[12:42:54] <placeb0> as I said I don't even know python
[12:43:04] <TML> placeb0: No chance in your sister's case to avoid taking training from an idiot teacher?
[12:43:18] <audio> Repiphany, any suggestions on appending how i want to append
[12:43:32] <placeb0> the teacher is a biology teacher, maybe all these restrictions have some meaning when you are writing code regarding DNA etc
[12:43:35] <placeb0> but probably not
[12:43:38] <TML> No
[12:43:55] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[12:43:59] <Repiphany> audio: all_images = np.concatenate(list_of_image_arrays)
[12:44:08] <placeb0> TML: my sister studies biology, she doesn't even care about that
[12:45:34] <Repiphany> I don't get why you need to make a new data structure when you presumably have all of `data` in memory already
[12:46:05] <audio> Repiphany, TypeError: only integer scalar arrays can be converted to a scalar index
[12:46:45] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[12:47:21] <audio> oh, syntax is wrong
[12:48:55] <parv> placeb0, With global variable & recursion: https://termbin.com/32g8
[12:49:33] <audio> now, ValueError: all the input arrays must have same number of dimensions, but the array at index 0 has 1 dimension(s) and the array at index 1 has 4 dimension(s)
[12:50:15] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Remote host closed the connection)
[12:50:27] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[12:50:32] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[12:50:46] <placeb0> parv: actually that looks good
[12:51:02] <placeb0> only the **0.5 is missing, but that's not an issue
[12:51:27] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 265 seconds)
[12:51:29] *** Joins: rvalue- (~rvalue@user/rvalue)
[12:51:43] <parv> placeb0, "Left that as an exercise for the reader"
[12:52:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:53:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:53:38] <placeb0> parv: what does the global last do?
[12:55:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:56:08] *** rvalue- is now known as rvalue
[12:56:14] <parv> placeb0, `last` is defined outside the function; with `global` declaration, value can be assigned to such a variable inside the function so that it keeps its value between each (recursive) function call.
[12:56:49] <placeb0> oh, so basically you are declaring a global variable?
[12:57:20] <audio> Repiphany, i'm having a problem with the initial np array
[12:57:23] <parv> placeb0, That's the use of it in the context anyway. For details, see https://docs.python.org/3.6/reference/simple_stmts.html#the-global-statement
[12:57:29] <audio> i'm not sure what its shape should be Repiphany
[12:57:43] <placeb0> thanks parv
[12:57:44] <Repiphany> You're the one with the data, how am I supposed to know
[12:57:51] *** Quits: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:58:10] <audio> Repiphany, well the shape of the images are (369, 376, 3)
[12:58:21] <audio> so those are the numpy array shapes
[12:58:28] <Repiphany> What array are you trying to write to file
[12:58:49] <audio> literally all of them in data
[12:59:00] <audio> there are images, and there are labels, and they're all arrays
[12:59:09] <Repiphany> Are you trying to write a single array or a list of arrays
[12:59:19] <audio> np.array of np.arrays
[12:59:31] <parv> As I am using 3.10, I ought to supply the relevant link: https://docs.python.org/3.10/reference/simple_stmts.html#the-global-statement
[12:59:35] <audio> forget the fact that the variables have the name "list" in them. i may change that
[13:00:02] <Repiphany> Do you mean you want one array shaped like (N, 369, 376, 3) where N is the number of images
[13:00:08] <audio> yes
[13:00:36] <Repiphany> np.stack instead of concatenate
[13:00:54] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:00:59] *** Joins: dsrt^ (~dsrt@96-67-120-105-static.hfc.comcastbusiness.net)
[13:02:38] <audio> Repiphany, ...can i store this in a variable? docs seem to not show anything that shows it can do this
[13:03:02] <Repiphany> stacked_array = np.stack(list_of_image_arrays)
[13:03:15] <audio> ok
[13:03:52] *** Joins: Enitin (~Enitin@82.180.145.226)
[13:04:03] <caveman> how to use pynacl to load existing public-private key pair?
[13:04:09] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[13:04:32] *** Joins: vladoski (~vladoski@217.147.130.65)
[13:04:50] <audio> Repiphany, i'm still running this through a for loop. number of items in list never gets past 100
[13:05:33] *** Joins: upsala (~zcb@185.209.196.134)
[13:05:50] *** Quits: baloona (~baloona@mail.baloona.de) (Remote host closed the connection)
[13:05:52] <Repiphany> How big is N
[13:06:39] *** Joins: baloona (~baloona@mail.baloona.de)
[13:06:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:07:01] *** Quits: XV8 (~XV8@2601:5cb:c001:50::94d3) (Ping timeout: 240 seconds)
[13:07:06] <caveman> i guess:  loaded_private_key_pair = nacl.public.PrivateKey(private_key_from_file)
[13:07:18] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[13:07:54] <audio> Repiphany, 300k+
[13:07:59] <audio> 309k to be exact
[13:08:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[13:08:44] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[13:09:05] <caveman> a85encode vs. b85encode?
[13:09:08] <Repiphany> Have you tried creating an empty array of shape (309000,369,376,3)
[13:10:08] <audio> Repiphany, what would i use, np.zeros?
[13:10:10] <caveman> oh, got it.  b has less symbols.
[13:10:17] <Repiphany> np.empty
[13:10:19] <audio> ok
[13:10:54] <audio> Repiphany, labels_list should have a shape of something like (309000, 494)
[13:10:58] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:fc5f:853e:195:e93c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:11:14] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[13:11:15] <audio> it's a list of one-hot encoded arrays with 494 classes
[13:11:34] <audio> s/list/np.array
[13:11:53] *** Joins: XV8 (~XV8@2601:5cb:c001:50:fcf2:9798:9069:d69d)
[13:11:58] *** Joins: raxor2k (~raxor2k@78.158.247.94)
[13:12:26] <audio> Repiphany, would creating the initial empty array truly solve the problem we have though?
[13:12:42] <audio> it's running through a for loop, and stack only "stacks" 100 items
[13:12:43] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:12:55] <audio> after each iteration i print the shape, and the first dimension is always 100
[13:13:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:13:45] <Repiphany> A 309000*369*376*3 array of bytes is 120GiB regardless of how you concatenate the data
[13:14:14] <Repiphany> Are you really trying to write that to a single file to read back as a numpy array
[13:14:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:14:50] <audio> Repiphany, wow, really? that's larger than the set of actual images. are you sure?
[13:15:12] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[13:15:23] <Repiphany> 309000*369*376*3/1024**3
[13:16:13] *** Quits: XV8 (~XV8@2601:5cb:c001:50:fcf2:9798:9069:d69d) (Ping timeout: 240 seconds)
[13:16:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:17:02] *** Joins: XV8 (~XV8@2601:5cb:c001:50:eda7:4ec1:7fba:b4ce)
[13:17:25] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[13:17:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[13:18:20] *** Joins: kosh (~kosh@user/kosh)
[13:18:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[13:19:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:20:21] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[13:20:46] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[13:21:37] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[13:22:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[13:24:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:25:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[13:25:57] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[13:26:42] *** Joins: Pickchea (~private@user/pickchea)
[13:27:25] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-219-172.wlan.tudelft.nl)
[13:29:01] *** Quits: kostkon_ (~androirc@athedsl-237515.home.otenet.gr) (Ping timeout: 240 seconds)
[13:29:04] *** Joins: rendar (~rendar@user/rendar)
[13:29:06] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-219-172.wlan.tudelft.nl) (Client Quit)
[13:30:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:31:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:31:14] *** dcaro_away is now known as dcaro
[13:31:27] *** Joins: paul424 (~tom@ip-5-172-234-126.multi.internet.cyfrowypolsat.pl)
[13:32:03] *** Joins: Midjak (~Midjak@82.66.147.146)
[13:32:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:34:55] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Ping timeout: 250 seconds)
[13:34:56] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[13:35:50] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[13:36:41] *** Joins: Syzygy_ (~Syzygy@178-190-83-4.adsl.highway.telekom.at)
[13:36:43] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[13:36:46] *** Joins: wakeup (~wakeup@user/wakeup)
[13:37:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[13:38:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[13:39:13] *** Quits: Syzygy (~Syzygy@2001:871:265:1cdc:380e:d245:dc0d:937b) (Ping timeout: 256 seconds)
[13:40:36] *** Joins: sawk (~quassel@78.6.80.66)
[13:41:42] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[13:41:57] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[13:43:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:44:33] *** Joins: kostkon_ (~androirc@athedsl-237515.home.otenet.gr)
[13:47:07] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:47:14] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:47:18] *** Joins: jpn (~jpn@user/jpn)
[13:47:36] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[13:48:38] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[13:48:38] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:48:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:49:12] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[13:49:29] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:50:17] *** Joins: ice9 (~ice9@user/ice9)
[13:50:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[13:50:45] *** Quits: lidless (lidless@user/lidless) (Ping timeout: 252 seconds)
[13:50:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:51:10] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:51:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[13:51:28] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:fc5f:853e:195:e93c)
[13:51:37] *** Joins: lidless (lidless@2600:3c02::f03c:93ff:fe98:5c43)
[13:51:41] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[13:51:57] *** Joins: jinsun (~jinsun@user/jinsun)
[13:52:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:53:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:54:14] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[13:54:48] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[13:55:05] *** Quits: kostkon_ (~androirc@athedsl-237515.home.otenet.gr) (Ping timeout: 256 seconds)
[13:55:19] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 256 seconds)
[13:56:01] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:56:47] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:57:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[13:58:26] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Quit: Leaving)
[14:01:20] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-219-172.wlan.tudelft.nl)
[14:01:48] *** Joins: shuck (~shuck@user/shuck)
[14:02:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:03:03] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[14:03:15] *** Joins: schumaml (~schumaml@dslb-092-074-004-229.092.074.pools.vodafone-ip.de)
[14:04:25] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[14:05:25] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[14:05:54] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[14:07:37] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[14:09:27] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[14:11:23] *** Quits: syx (~sy@zm.is) (Quit: bai)
[14:12:25] *** Quits: Indecisive (~chaz@wsip-98-171-200-135.om.om.cox.net) (Remote host closed the connection)
[14:13:17] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Ping timeout: 240 seconds)
[14:13:56] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:16:11] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:16:54] *** Joins: kostkon_ (~androirc@5-203-233-26.pat.nym.cosmote.net)
[14:17:03] *** Quits: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz) (Ping timeout: 268 seconds)
[14:17:25] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:18:58] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:20:30] *** Joins: shad (~shad@user/shad)
[14:20:49] *** Joins: bahamas (~lucian@86.120.77.115)
[14:20:56] *** Joins: rsx (~dummy@ppp-188-174-154-241.dynamic.mnet-online.de)
[14:22:07] *** Quits: kostkon_ (~androirc@5-203-233-26.pat.nym.cosmote.net) (Read error: Connection reset by peer)
[14:22:12] *** Joins: Thanattt (~Thanatos@105.112.189.65)
[14:22:21] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:c954:6e68:e236:70b7)
[14:23:11] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[14:23:29] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[14:23:50] *** Joins: marcello42 (~mp@p200300dfaf10fe01941e9df12982197b.dip0.t-ipconnect.de)
[14:24:47] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[14:25:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:25:38] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:25:43] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[14:26:19] *** Joins: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de)
[14:28:05] *** Joins: Everything (~Everythin@37.115.210.35)
[14:30:05] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[14:31:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 240 seconds)
[14:31:32] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[14:31:35] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[14:32:21] *** Joins: zaz\ (~zaz@poneybl.eu)
[14:34:06] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[14:34:33] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[14:35:31] *** luke-jr- is now known as luke-jr
[14:35:58] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[14:36:44] *** Joins: ircuz (~ircuz@5.2.79.79)
[14:36:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:40:26] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:41:13] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[14:41:46] *** Joins: tomg_ (~tomg@user/tomg)
[14:41:51] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:41:53] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 252 seconds)
[14:43:23] *** Joins: sudomann (~sudomann@98.219.211.182)
[14:43:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:43:50] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[14:43:56] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[14:43:57] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 240 seconds)
[14:44:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[14:44:53] *** Joins: ice9 (~ice9@user/ice9)
[14:45:00] <jaggz> I wish I understood what's going on with np fft
[14:45:01] <jaggz> https://i.imgur.com/ToI3XWc.png
[14:45:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:45:34] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[14:46:10] <jaggz> fft returns an array of the same length as the input
[14:46:22] <jaggz> s/returns/is returning/
[14:47:37] <jaggz> now, if I have my own data, with each sample having a microseconds in time associated with it, how do I get the fft of that?
[14:48:22] <jaggz> https://live.staticflickr.com/65535/51956075020_db14b480cd_k.jpg
[14:48:24] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:c954:6e68:e236:70b7) (Read error: Connection reset by peer)
[14:48:26] <jaggz> that's heart/ECG data
[14:48:43] <jaggz> oh, pardon me, milliseconds is the X axis
[14:49:08] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:2046:4bf3:9a7e:f84e)
[14:49:09] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[14:49:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[14:50:09] <jaggz> you can see, when zoomed in, each sample I get is roughly 4 milliseconds apart: https://live.staticflickr.com/65535/51955994805_57cfecbc68_k.jpg
[14:50:24] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:51:10] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[14:51:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:51:37] <jaggz> how do I get an fft of this with the frequency values representing actual time?
[14:52:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:54:00] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[14:54:16] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[14:54:37] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:2046:4bf3:9a7e:f84e) (Ping timeout: 240 seconds)
[14:54:52] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:55:21] *** Joins: ham5urg_ (~ham5urg@pd95eb3a0.dip0.t-ipconnect.de)
[14:56:23] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[14:56:45] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 252 seconds)
[14:56:54] <parv> jaggz, That data is analogous to the np.sin(t) result; so pass that data to `numpy.fft.fft`?
[14:57:01] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[14:57:05] *** Quits: ham5urg (~ham5urg@p2e54d3b5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:57:39] *** Quits: Payam67 (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[14:58:29] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:59:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:00:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:00:30] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[15:00:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[15:01:25] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[15:01:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:01:41] *** Joins: predawn (~predawn@user/predawn)
[15:01:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:01:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:02:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:02:11] *** Quits: predawn (~predawn@user/predawn) (Client Quit)
[15:02:13] <guardian> hello, is it "pythonic" to write a function that takes a list or set that acts as an out parameter?
[15:02:41] <KirkMcDonald> Not usually.
[15:02:45] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[15:02:45] <nedbat> guardian: it seems a bit unusual, but it could be ok. what does the function do?
[15:03:29] <supakeen> I've had one of those exactly once and it was in a technical interview 🙂
[15:03:56] <jaggz> parv, well, the ECG data is a lot more than just sin() -- the sin() you see there is apparently noise from the 60Hz AC in the environment
[15:04:01] <jaggz> (it's on battery, but it's picking it up still)
[15:04:22] <jaggz> so I'm trying to analyze which "bins" it's located in in my FFT data so I can zero it out and inverse-fft it
[15:04:49] <supakeen> don't (nearly all) the ECGs have a band stop for that?
[15:05:01] *** Joins: ham5urg (~ham5urg@p2e54dffa.dip0.t-ipconnect.de)
[15:05:11] *** Joins: thorbw (~tw@46.230.130.50)
[15:05:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[15:06:26] <supakeen> (and one on 50Hz too usually)
[15:06:43] *** Quits: ham5urg_ (~ham5urg@pd95eb3a0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:06:46] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:07:26] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:07:46] *** Joins: pankid (~quassel@pankid.club)
[15:07:55] *** Joins: ham5urg_ (~ham5urg@p5ddfc07e.dip0.t-ipconnect.de)
[15:09:54] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[15:09:55] *** Quits: ham5urg (~ham5urg@p2e54dffa.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:11:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:11:01] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[15:11:03] <jaggz> supakeen, no
[15:11:27] <jaggz> supakeen, some of the signals are within that range.. you can't just get rid of them
[15:11:37] <jaggz> ideally you use more leads so you can remove the noise
[15:11:45] <jaggz> but with the 1-3 leads it gets more difficult
[15:11:49] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[15:11:57] <jaggz> I'm going to do more tests using twisted leads, which can reduce it
[15:12:07] <jaggz> https://github.com/jaggzh/ecg-test-examination
[15:13:05] <jaggz> so, what I'm trying to do right now is do some zeroing out of the FFT (which will indeed remove some of the signal I want, but I want to see how useful it is)
[15:13:21] *** Joins: nesoi (~Adium@60-241-111-113.static.tpgi.com.au)
[15:13:33] <jaggz> but I don't know how to get the actual time-based frequency data out of this thing
[15:13:48] <jaggz> that should run, and has sample data in it
[15:13:57] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[15:14:05] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 256 seconds)
[15:15:52] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[15:15:56] <supakeen> You are overcomplicating, if you use your favorite search engine for 'ecg band stop' you'll find enough references that that's how it's normally done.
[15:16:23] *** Quits: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833) (Remote host closed the connection)
[15:16:37] <supakeen> Don't make this so dependent on the measurement setup, it's going to lead to reproducability problems down the line too.
[15:16:45] *** Joins: chilversc (~chilversc@user/chilversc)
[15:18:30] <supakeen> As in, getting your CMRR up is going to be a never ending process and is never going to be perfect.
[15:18:51] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:19:33] <jaggz> cmrr?
[15:19:41] <supakeen> Common Mode Reduction Ratio.
[15:20:10] <gulzar> Hi.  My table and data https://paste.debian.net/1235308/    .. Issue the last entry at id 48  . that 'tid' makes python connection cursor to throw Exception:     (1292, "1292: Truncated incorrect DOUBLE value: 'ebe82ad1438c25c6f3cce197611376c8e8eda018'", None)   . Any idea why this entry is doing this. tid is varchar
[15:21:14] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Ping timeout: 260 seconds)
[15:22:07] <supakeen> gulzar: This is #python, but you need to show the query. you're likely operating on that value in a different way.
[15:22:34] <supakeen> Usually an `AND` instead of a comma that tries to convert the two values together.
[15:23:00] <Eryn83FL_Matrix[> ok peeps
[15:23:01] <Eryn83FL_Matrix[> i got a hard one for python
[15:23:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:23:37] <Eryn83FL_Matrix[> i need to make a var=1.2.5.4.74  flipped to var=74.4.5.2.1 ...
[15:23:49] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 240 seconds)
[15:23:57] <Eryn83FL_Matrix[> would i have to do some voodoo of converting it to a list or somethiung
[15:24:01] <gulzar> supakeen https://bpa.st/OWAQ
[15:24:04] <supakeen> Not much voodoo.
[15:24:23] <nedbat> Eryn83FL_Matrix[: ".".join(reversed(var.split("."))
[15:24:36] <supakeen> `".".join(reversed("1.23.45.67".split(".")))`
[15:24:40] <supakeen> Grrr beaten by the bat.
[15:24:40] *** JMatrix1[m] is now known as JMatrix36[m]
[15:24:50] <nedbat> supakeen: except yours isn't a syntax error :)
[15:24:53] <gulzar> this is to fetch the data.  to add : https://bpa.st/MAHQ
[15:25:28] *** Joins: TheCat (~TheCat@user/z-cat)
[15:25:30] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[15:26:02] *** Quits: ravan_ (~ravan@user/ravan) (Remote host closed the connection)
[15:26:21] *** Joins: ravan_ (~ravan@user/ravan)
[15:26:22] <gulzar> supakeen I am able to do sql queries, as listed in first link.
[15:26:36] *** Quits: adeliktas (~adeliktas@i59F5FF29.versanet.de) (Quit: Ping timeout (120 seconds))
[15:26:39] <supakeen> gulzar: I dunno, there's plenty of things wrong here (string formatting in queries, etc) but I don't see anything obviously wrong as in a conversion on `tid`.
[15:27:06] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[15:27:16] *** Joins: adeliktas (~adeliktas@i59F5FF29.versanet.de)
[15:27:20] <gulzar> supakeen yes. but only when this hash is used to add data. SQL works form cli, python goes crazy
[15:27:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:27:41] *** Joins: jpn (~jpn@user/jpn)
[15:28:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:28:16] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[15:28:27] <guardian> nedbat: it fills 2 different sets, while iterating on mongodb documents
[15:28:43] <guardian> nedbat: it's called multiple times, because processing is batched
[15:29:00] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Remote host closed the connection)
[15:29:23] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 256 seconds)
[15:29:34] <nedbat> guardian: that sounds ok to me. write a very clear docstring. Also, consider whether you might want a class instead, with two sets as attributes.
[15:30:10] *** Joins: janemba (~janemba@94.204.254.193)
[15:30:19] <guardian> thanks
[15:30:24] *** Joins: nomic (~nomic@185.217.117.249)
[15:30:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:30:51] *** Quits: luva (~luva@185.168.9.232) (Ping timeout: 252 seconds)
[15:31:35] *** Joins: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch)
[15:31:49] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[15:31:57] *** Quits: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:31:57] *** Joins: Morfeus^ (~a@ip-046-223-149-227.um13.pools.vodafone-ip.de)
[15:31:58] *** Quits: Morfeus^ (~a@ip-046-223-149-227.um13.pools.vodafone-ip.de) (Changing host)
[15:31:58] *** Joins: Morfeus^ (~a@user/Morfeus/x-8490356)
[15:32:27] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:32:30] *** Quits: Morfeus (~a@user/morfeus) (Ping timeout: 252 seconds)
[15:32:30] *** Morfeus^ is now known as Morfeus
[15:32:31] *** Quits: Morfeus (~a@user/Morfeus/x-8490356) (Changing host)
[15:32:31] *** Joins: Morfeus (~a@user/morfeus)
[15:32:55] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[15:32:56] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:33:01] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[15:33:09] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[15:33:10] *** Joins: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de)
[15:34:13] *** Joins: de-facto (~de-facto@user/de-facto)
[15:34:59] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:35:12] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:37:07] *** Joins: spithash (~spithash@user/spithash)
[15:37:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:37:54] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--422.oracle-ocna.com)
[15:38:10] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[15:38:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:39:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:39:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:39:24] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[15:39:31] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 245 seconds)
[15:39:59] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[15:40:10] *** Quits: trace987 (~f200yx10@91.66.151.109) (Remote host closed the connection)
[15:40:29] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 256 seconds)
[15:40:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:40:50] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[15:40:55] *** Joins: luva (~luva@146.70.62.252)
[15:41:03] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:41:15] *** Quits: ccapndave (~ccapndave@xcpe-194-230-18-202.cgn.res.adslplus.ch) (Quit: Textual IRC Client: www.textualapp.com)
[15:41:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:42:13] *** Joins: trace987 (~f200yx10@ip5b42976d.dynamic.kabel-deutschland.de)
[15:42:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[15:43:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[15:43:39] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:43:45] <gulzar> supakeen changed string formatting but no help
[15:47:41] <jaggz> what's the way to display an array with its indices?  like [5, 6, 7, 8]  ->   "0:5, 1:6, 2:7, 3:8"
[15:48:09] <jaggz> I forgot the function that interleaves stuff
[15:48:18] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:48:22] <han-solo> `enumerate` ?
[15:48:24] <jaggz> thanks
[15:48:35] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:49:22] *** Joins: Enitin (~Enitin@82.180.145.227)
[15:50:16] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[15:50:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:50:52] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[15:51:08] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Client Quit)
[15:51:33] *** Joins: Pickchea (~private@user/pickchea)
[15:51:41] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:51:46] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Client Quit)
[15:52:17] *** Quits: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:52:53] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:53:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:53:29] *** Quits: nesoi (~Adium@60-241-111-113.static.tpgi.com.au) (Quit: Leaving.)
[15:54:04] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--422.oracle-ocna.com) (Remote host closed the connection)
[15:54:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:54:21] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--422.oracle-ocna.com)
[15:54:24] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[15:54:36] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[15:54:36] *** Joins: Viewday115 (~Viewday@user/viewday)
[15:55:06] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[15:57:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[15:57:59] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[15:58:21] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[15:59:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:59:36] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[16:00:03] *** Quits: luke-jr- (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[16:00:26] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[16:00:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:00:58] *** Joins: Nact (~l@2a02:2788:11c8:31d:aacb:a105:f6fd:377a)
[16:02:23] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[16:03:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:03:48] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[16:05:02] *** Joins: otiose (~otiose@156.146.48.156)
[16:05:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:07:00] *** Quits: belphegor666 (~satan@ip-046-223-002-003.um13.pools.vodafone-ip.de) (Changing host)
[16:07:00] *** Joins: belphegor666 (~satan@user/belphegor666)
[16:10:20] <Gustavo6046> What if the stdlib was split between convenient and commonly used data structures and stuff, and more topical things like HTTP and encryption? I have a feeling this could help make a more embeddable distribution right out of the gate. :)
[16:10:28] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:10:31] *** Quits: grimvar (~grimvar@i5C75F607.versanet.de) (Ping timeout: 268 seconds)
[16:10:34] <Gustavo6046> Unless that has already been odne lol
[16:10:37] <Gustavo6046> done*
[16:10:57] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[16:11:58] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:12:17] *** Joins: otisolsen70_ (~otisolsen@sas08110.nat.sas.com)
[16:13:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[16:13:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:14:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 268 seconds)
[16:16:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[16:16:23] *** Joins: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833)
[16:16:55] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:17:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:17:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:18:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:18:51] <supakeen> I believe there has been some talk for a without-batteries distribution but it often amounts to nothing.
[16:19:15] <supakeen> A bunch is getting removed for 3.12 at least.
[16:19:54] <supakeen> Oh, 3.13 🙂
[16:20:09] *** Joins: julius3 (~raffaem@45.91.20.92)
[16:20:12] *** Quits: baffodoro (~raffaem@45.91.20.168) (Ping timeout: 240 seconds)
[16:20:23] *** Quits: pdc (~raffaem@45.91.20.168) (Ping timeout: 256 seconds)
[16:20:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:20:53] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[16:21:01] *** Joins: baffodoro (~raffaem@45.91.20.92)
[16:22:11] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:22:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:22:15] *** Quits: jdmark2 (~jdmark@user/jdmark) (Quit: Leaving)
[16:22:17] *** Quits: wickedjargon (~wickedjar@2607:fea8:56a0:6510::f833) (Quit: Leaving)
[16:23:11] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[16:26:26] *** Quits: zamba (~marius@185.47.250.222) (Quit: WeeChat 2.8)
[16:26:26] *** Joins: gloomy76 (~gloomy@fwdkanyc05.novozymes.com)
[16:27:11] *** Joins: grimvar (~grimvar@i5C75F499.versanet.de)
[16:27:17] *** Joins: LAVBoy (~LAVBoy@85.249.46.8)
[16:27:22] <gloomy76> what's the type annotation for a function that takes a set, list, or generator as input and returns a collection of the same kind as output?
[16:28:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:28:41] <gloomy76> I can "overload"  the signature (def foo(a: List[int]) -> List[int]; def foo(a: Set[int]) -> Set[int]; etc.) but I'm sure there's a more elegant way?
[16:28:52] *** Joins: wakeup (~wakeup@user/wakeup)
[16:29:51] *** Joins: zamba (~marius@80.86.134.239)
[16:30:07] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[16:31:06] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[16:31:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[16:31:33] <The-Compiler> gloomy76: a TypeVar with a restriction on those types, see https://mypy.readthedocs.io/en/stable/generics.html#type-variables-with-value-restriction
[16:31:58] <gloomy76> Thanks :)
[16:33:00] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[16:33:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[16:33:20] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[16:33:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:33:40] <nedbat> gloomy76: is it important that it return the same type? You could just annotate it as Iterable[int]
[16:34:02] *** Quits: otisolsen70_ (~otisolsen@sas08110.nat.sas.com) (Quit: Leaving)
[16:34:07] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:34:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:34:36] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:35:57] *** Quits: julius3 (~raffaem@45.91.20.92) (Remote host closed the connection)
[16:35:57] *** Quits: baffodoro (~raffaem@45.91.20.92) (Remote host closed the connection)
[16:39:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[16:39:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:39:30] *** Joins: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de)
[16:39:40] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[16:40:38] *** Quits: paul424 (~tom@ip-5-172-234-126.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[16:41:04] *** Joins: novns (~novns@user/novns)
[16:41:14] *** Joins: wyclif (~wyclif@user/wyclif)
[16:41:29] *** Joins: bloody (~bloody@user/bloody)
[16:41:37] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:41:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:41:55] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[16:41:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:42:53] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[16:42:54] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:43:50] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:44:33] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[16:44:54] *** Joins: sudomann (~sudomann@98.219.211.182)
[16:45:01] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:45:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:46:53] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[16:47:01] *** Quits: ircuz (~ircuz@5.2.79.79) (Quit: Lost terminal)
[16:47:15] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[16:48:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:48:10] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[16:49:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[16:51:11] *** Joins: merist (~merist@87.249.134.10)
[16:52:58] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:53:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:54:12] *** Quits: merist__ (~merist@87.249.134.29) (Ping timeout: 240 seconds)
[16:55:53] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[16:56:32] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:57:06] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:ae35:29ba:a5e:b3d2)
[16:57:07] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[16:57:11] *** Quits: Foxyloxy_ (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:58:17] *** Quits: gulzar (~gulzar@49.206.240.149) (Quit: Client closed)
[16:58:18] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[17:00:05] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[17:00:27] *** Quits: Thanattt (~Thanatos@105.112.189.65) (Read error: Connection reset by peer)
[17:01:00] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[17:02:33] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:03:13] *** Joins: phlixi_ (~phlixi@aftr-62-216-205-226.dynamic.mnet-online.de)
[17:04:01] *** Quits: raxor2k (~raxor2k@78.158.247.94) (Remote host closed the connection)
[17:04:42] *** Quits: phlixi (~phlixi@aftr-62-216-205-153.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[17:05:42] *** Joins: Thanattt (~Thanatos@105.112.189.65)
[17:07:38] *** Joins: han-solo (~han-solo@user/han-solo)
[17:08:38] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:09:43] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[17:10:07] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:11:26] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[17:11:27] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:11:56] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[17:12:12] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[17:12:39] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[17:14:47] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[17:16:54] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:17:58] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[17:18:08] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:18:57] *** Joins: jpn (~jpn@user/jpn)
[17:18:58] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:19:39] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[17:20:08] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[17:20:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:21:44] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:22:23] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:22:55] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[17:24:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:24:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[17:27:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:28:59] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[17:30:21] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:30:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:30:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:31:51] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:31:55] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 268 seconds)
[17:32:50] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:33:42] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:34:24] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:35:41] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Ping timeout: 252 seconds)
[17:36:25] *** Joins: spetrosi (~spetrosi@ip-86-49-252-108.net.upcbroadband.cz)
[17:37:57] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[17:38:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:39:00] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[17:39:48] *** Joins: nickodd (~nickodd@user/nickodd)
[17:41:09] <mrwick> doing a merge and a redefinition in the super class was found: https://bpa.st/HWRA
[17:41:42] <mrwick> was this just a mistake, that self._activity was initialised again?
[17:43:53] <mrwick> indeed it was superflouous, removed. thanks for listening
[17:44:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:44:50] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[17:46:12] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[17:47:32] *** Joins: CodePoint_ (~CodePoint@2607:fb90:25df:e3d4:20e4:9377:5749:e49a)
[17:47:37] *** Quits: f1se4 (~f1se4@213.195.112.15) (Quit: WeeChat 3.4.1)
[17:48:47] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[17:48:47] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[17:49:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:49:14] *** Joins: cincoswim (~cincoswim@24-52-65-147.telesystem.us)
[17:49:18] *** Joins: wyclif (~wyclif@user/wyclif)
[17:49:32] <gloomy76> nedbat just seeing now - well it's a bit nicer, then the typechecker doesn't complain when you use .add or .append depending on the type of collectoin
[17:49:47] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:49:59] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 260 seconds)
[17:50:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:50:43] <gloomy76> Does anyone know if there's refactoring tool that automatically changes import types? (like convert `from foo import bar` to `import foo` and automatically replace all occurrences in code, and all 900 other possible combinations permitted by python's import system)
[17:50:54] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:50:55] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Client Quit)
[17:51:00] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[17:53:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:54:20] *** Joins: Viewday1157 (~Viewday@user/viewday)
[17:54:36] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[17:54:36] *** Viewday1157 is now known as Viewday115
[17:55:01] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[17:55:11] *** Joins: CodePoint__ (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:55:35] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Ping timeout: 260 seconds)
[17:55:45] *** Joins: theprophet (~theprophe@212.58.102.155)
[17:55:47] *** Quits: CodePoint_ (~CodePoint@2607:fb90:25df:e3d4:20e4:9377:5749:e49a) (Ping timeout: 250 seconds)
[17:56:43] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[17:56:57] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:58:23] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 260 seconds)
[17:58:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:58:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:58:54] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:59:17] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d5c4:f026:e451:bdeb) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:59:48] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:01:12] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[18:01:24] *** gentooclimax is now known as climax
[18:02:37] *** Quits: grooverman (~grooverma@152.250.149.49) (Remote host closed the connection)
[18:03:36] *** Joins: grooverman (~grooverma@152.250.149.49)
[18:04:18] *** Joins: gopar (~gopar@2600:8804:670d:2f00:14ac:487e:e822:ba6e)
[18:04:20] *** climax is now known as gentooclimax
[18:04:53] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:fc5f:853e:195:e93c) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:04:55] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[18:04:57] *** Quits: CodePoint__ (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[18:05:09] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:c915:7285:d52a:a00e)
[18:05:15] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[18:05:30] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:05:56] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[18:06:37] *** Joins: bahamas (~lucian@86.120.77.115)
[18:06:56] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:07:25] *** Quits: LAVBoy (~LAVBoy@85.249.46.8) (Ping timeout: 240 seconds)
[18:07:38] *** Joins: LAVBoy (~LAVBoy@85.249.42.176)
[18:07:41] *** PublicWiFi is now known as McDonaldsWiFi
[18:08:01] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[18:08:04] *** Joins: MasterK (~MK@86.121.240.25)
[18:08:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:08:35] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:10:02] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[18:10:15] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[18:11:27] *** Parts: rewrit3 (~rewrit3@user/rewrit3) ()
[18:11:47] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:12:26] *** Joins: fillx (~fillx@185.103.110.235)
[18:13:10] *** Parts: fillx (~fillx@185.103.110.235) (Leaving)
[18:13:12] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:50] *** Joins: fillx (~fillx@user/fillx)
[18:14:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:16:38] *** Joins: jpn (~jpn@user/jpn)
[18:17:02] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:18:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:18:16] *** Quits: gopar (~gopar@2600:8804:670d:2f00:14ac:487e:e822:ba6e) ()
[18:18:48] *** Joins: wyclif (~wyclif@user/wyclif)
[18:18:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:20:18] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[18:20:42] *** Joins: rvalue (~rvalue@user/rvalue)
[18:21:39] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[18:21:42] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[18:22:04] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:23:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b054-1bff-9e6a-67ba.res6.spectrum.com)
[18:23:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[18:23:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:23:35] *** Joins: purple_cthulhu (~rax@2.186.248.21)
[18:24:00] <fillx> hello, what does this error signify? https://bpa.st/DLWA
[18:24:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:24:42] *** Joins: kts (~kts@103.73.237.196)
[18:25:00] *** Quits: fillx (~fillx@user/fillx) (Quit: Leaving)
[18:25:09] <mrwick> probably New is meant to be defined in an inheriting class
[18:25:20] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[18:25:29] <grym> ^
[18:25:45] <grym> passing a bare self is also weird
[18:25:58] <mrwick> do we use the word "subclass" for this?
[18:26:04] <grym> sure
[18:26:37] <mrwick> ah yes, good subclass and superclass, hence the builtin super()
[18:27:09] * SnoopJ blinks at `html2lib`
[18:28:41] <jinsun> it is to convert .html to .lib :D
[18:29:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:29:43] <mrwick> looks like google can still be sometimes helpful: https://docs.wxpython.org/wx.html2.WebView.html#wx.html2.WebView.New
[18:30:03] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:30:51] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[18:31:05] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:31:48] *** Joins: kalib_23-1 (~kalib_23-@2607:fea8:651e:1900:7913:8c49:97ae:d687)
[18:31:56] <mrwick> even further: https://github.com/salmoni/Salstat/blob/d829343d0416c6e729610c043987852e12971306/salstat.py#L1188
[18:32:01] * mrwick gives up
[18:32:03] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Quit: Konversation terminated!)
[18:32:45] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 256 seconds)
[18:33:34] <kalib_23-1> When thinking about loops in python, and conditions, is it preferred to do it with the one line syntax such as `return sum(float(i) for i in lst])` or in a more regular multi line thing such as: `for i in lst: | return float(i)` ? Which one is the best/suggested practice?
[18:34:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:34:24] <grym> kalib_23-1: it's very context dependent.  you can do "too much work" in a comprehension, you can do "too little" work in a for loop...
[18:34:27] <jinsun> well returning in a loop will be wrong, so don't do that
[18:34:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:34:41] *** Joins: fifihyperbola (~fifihyper@212.219.41.130)
[18:35:01] *** Joins: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de)
[18:35:04] <SnoopJ> kalib_23-1, It Depends™ but a good rule of thumb is that complicated comprehensions are harder to read than their equivalent for loops
[18:35:13] <jinsun> the equivalent thing would be appending in a loop and returning after the loop
[18:35:14] <grym> kalib_23-1: comprehensions should produce a value, though, so if you want to apply a mutating function to every element of an iterable, use a for loop there for sure
[18:35:15] *** Quits: menace (~someone@ppp-93-104-177-126.dynamic.mnet-online.de) (Changing host)
[18:35:15] *** Joins: menace (~someone@user/menace)
[18:35:16] <kalib_23-1> grym so there's not really one over the other in terms of preference?
[18:35:36] <SnoopJ> there certainly is a preference, it just depends on who you ask :)
[18:35:39] <grym> kalib_23-1: it's a matter of judgement, so all you're going to get are heuristic advice
[18:35:43] <kalib_23-1> I see.. yes, that's my point as well.. It feels to me that for loops are simpler to read.
[18:35:48] <grym> kalib_23-1: then write loops!
[18:35:52] <kalib_23-1> but maybe because I am just starting with python.
[18:35:53] *** menace is now known as Deknos
[18:36:08] <grym> i use comprehensions a lot when i'm filtering
[18:36:14] <SnoopJ> kalib_23-1, comprehensions can feel a little weird at first, especially if you're used to other languages that don't have them (which is most of them)
[18:36:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:36:31] <mrwick> comprehensions are definitely great for quick filters, but suck when they get huuuuuggee and span multiple lines
[18:36:34] <kalib_23-1> SnoopJ yes..I can see your point..
[18:36:49] <grym> kalib_23-1: `the_things_i_want = [element for element in all_the_things if isgood(element)]`  is really normal code for me, the equivalent for loop is not
[18:37:32] <grym> because it's clunky to make an empty list outside the loop, loop over another list, append if good, etc.
[18:37:38] <kalib_23-1> There's also the confusing fact (to me at least) that they can change depending on the situation, for example when you have an if/else condition, you move the for to after the conditions, such as `new_temps = [temp / 10 if temp != -9999 else 0 for temp in temps]`
[18:38:11] *** Joins: vaaqif (~vaaqif@cpc151159-smal19-2-0-cust83.19-1.cable.virginm.net)
[18:38:24] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:38:31] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[18:38:34] <kalib_23-1> vs having the for at the beginning when it's just if: `new_temps = [temp / 10 for temp in temps if temp != -9999]`
[18:38:58] <jinsun> that is because the if else is part of the expression, in the first case
[18:39:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:39:19] <jinsun> and in the second case it is used for filtering the for loop
[18:39:20] <kalib_23-1> ps: sorry if these are dumb questions.. just starting with python now..
[18:39:43] <kalib_23-1> gothca jinsun
[18:40:31] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:41:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[18:41:16] *** Quits: saroy (~Sandipan@45.249.73.234) (Remote host closed the connection)
[18:41:25] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:41:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[18:41:45] *** Joins: faceface (~faceface@user/faceface)
[18:41:47] <jinsun> the rule is that you write the same way you write a normal for loop, just the final part moves to the front
[18:42:05] *** Quits: bboles (~bboles@64.94.212.195) (Quit: ZNC 1.8.2 - https://znc.in)
[18:42:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:42:15] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 252 seconds)
[18:42:24] *** Joins: bboles (~bboles@64.94.212.195)
[18:42:27] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:42:36] <jinsun> and just get rid of the colons and newlines become optional
[18:42:39] *** Joins: saroy (~Sandipan@45.249.73.212)
[18:42:57] *** Joins: Iolo (~iolo@user/Iolo)
[18:43:09] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[18:43:11] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Ping timeout: 256 seconds)
[18:43:24] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:43:48] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 240 seconds)
[18:43:58] *** Quits: marcello42 (~mp@p200300dfaf10fe01941e9df12982197b.dip0.t-ipconnect.de) (Quit: WeeChat 3.4.1)
[18:44:01] <jinsun> not very hard if you understand a few examples
[18:45:18] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[18:45:35] <kalib_23-1> thanks
[18:46:01] *** Quits: purple_cthulhu (~rax@2.186.248.21) (Ping timeout: 256 seconds)
[18:47:34] <jinsun> kalib_23-1: here your comprehensions converted to for loops, https://bpa.st/QESQ
[18:47:40] *** Joins: zacts (~zacts@user/zacts)
[18:48:59] *** ouemt is now known as cl
[18:49:33] <jinsun> so you can see it is consistent with the simple rules I gave
[18:49:56] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[18:50:11] <celphi> Am I missing something here? Wouldnt this be 6? https://www.geeksforgeeks.org/find-number-of-islands/
[18:50:17] <kalib_23-1> I see.. I guess it's mostly a matter of getting used to it. thanks
[18:50:34] <mrwick> jinsun: would there be any difference at all? performance? memory?
[18:51:13] <mav`rik> celphi: I'm guessing connections can also be on the diagonal?
[18:51:30] <celphi> yeah that's only thing i could see
[18:51:30] <kalib_23-1> good question.. but I'd guess that, if any, it should be very very little, since python is not compiled and the python interpreter would read line by line... so being a single line maybe it could potentially be a bit faster
[18:51:54] <celphi> mav`rik: but why would n,e,s,w include diagnol?
[18:51:58] <kalib_23-1> mrwick
[18:52:08] <mav`rik> kalib_23-1: Python _is_ compiled though, to bytecode (and, in some implementations like Jython, or pypy, something much further)
[18:52:18] *** Joins: ianliu (~ianliu@177.197.106.106)
[18:52:19] *** Quits: ianliu (~ianliu@177.197.106.106) (Client Quit)
[18:52:30] <jinsun> mrwick: comprehension would be slightly better in some cases, but won't be much difference
[18:53:10] <mav`rik> celphi: see the comment further down: "A cell in 2D matrix can be connected to 8 neighbours.", so it's n, ne, e, se, s, sw, w, nw
[18:53:16] * mrwick has a disability reading comprehensions like that :-\
[18:53:26] <celphi> mav`rik: let me show you my example though
[18:53:27] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:54:14] <celphi> https://bpa.st/DC2Q
[18:54:14] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[18:54:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:55:02] <celphi> im only capturing n,e,s,w
[18:55:22] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:55:26] <mav`rik> celphi: sure, which is why you're getting 6 for the result rather than the expected 5
[18:55:36] <celphi> no i get 5
[18:55:43] <celphi> with my script
[18:55:43] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:55:58] *** Joins: cdown_ (~cdown@163.114.130.1)
[18:56:25] <celphi> damnnit - i used different dataset
[18:56:44] <celphi> spent 30mins trying to figure this out and it was typo in data
[18:56:57] <mav`rik> celphi: yeah, your row 5 had an out-of-place 1 at the end. Oops
[18:57:12] <mav`rik> s/5/4/
[18:57:15] <celphi> yeah
[18:57:20] <celphi> so annoyed
[18:57:41] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:57:54] *** Joins: kuwv (~kuwv@pool-173-67-205-36.clppva.fios.verizon.net)
[18:58:29] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 256 seconds)
[18:58:32] *** cdown_ is now known as cdown
[18:58:51] <kuwv> Howdy, now that setup.py is deprecated what is the idiomatic approach to building projects with gcc or clang?
[18:58:58] *** Joins: jpn (~jpn@user/jpn)
[19:00:02] *** Joins: PaterTemporalis (~woooopsie@168.182.232.78)
[19:01:14] *** Joins: purple_cthulhu (~rax@2.186.248.10)
[19:01:43] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:01:45] <vitali64> hi
[19:01:53] <vitali64> i made a bot in python
[19:02:00] <vitali64> but it doesn't work correctly
[19:02:10] <vitali64> let me show you
[19:02:19] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[19:02:43] *** Joins: cincoswim (~cincoswim@24-52-65-147.telesystem.us)
[19:02:45] *** Joins: vitaliBot (~vitaliBot@xdsl-31-164-198-163.adslplus.ch)
[19:02:48] <celphi> mav`rik: `_count_isles(r+1, c+1, isles) _count_isles(r-1, c+1, isles) _count_isles(r-1, c-1, isles) _count_isles(r+1, c-1, isles)`
[19:02:52] <csm3105> Hi guys, I'm creating a Python module that connects to a database in postgresql, I attach all the module content in the following link https://bpa.st/DLDA
[19:03:01] <vitali64> when typing :help, it works as intended
[19:03:02] <vitali64> :help
[19:03:02] <vitaliBot> Hi! I'm a bot created by vitali64!
[19:03:02] <vitaliBot> I don't really do anything special
[19:03:02] <vitaliBot> for now except saying hi (say :hi)!
[19:03:03] <celphi> how come it doesnt get 6 when i add these
[19:03:13] <vitali64> when I type :hello, it crashes :(
[19:03:15] <vitali64> :hello
[19:03:15] <vitaliBot> hi!
[19:03:15] <vitaliBot> sup?
[19:03:15] *** Quits: vitaliBot (~vitaliBot@xdsl-31-164-198-163.adslplus.ch) (Client Quit)
[19:03:15] <grym> vitali64: don't join bots here
[19:03:22] <vitali64> grym: ok
[19:03:42] <vitali64> but yeah
[19:03:47] <vitali64> that's my problem
[19:03:56] <celphi> crash could be anything
[19:04:08] <celphi> what does error say
[19:04:08] <grym> vitali64: pastebin code and traceback to bpa.st/+python+pytb and show us u
[19:04:13] <vitali64> ok
[19:04:16] <dTal> You probably want to look at the error in the terminal, vitali64
[19:04:21] <vitali64> but there's no error
[19:04:21] *** Joins: Guest84 (~Guest84@59.89.62.167)
[19:04:27] <mav`rik> celphi: Because the answer _should_ be 5 for the data-set described in the problem?
[19:04:28] <csm3105> The structure is the following: in database.py is where I establish the connection to the database and in models.py where I create the models of the database, in this case I am only interested in havin a table Issues because it is where I will store the information of the Issues that I reveive from GitLab
[19:04:36] <DaPinkOne> vitali64, i'm guessing that you split on : because in the format of privmsg, the format includes a :. if there's a : in the message, you probably didn't account for that.
[19:04:41] *** Quits: Guest84 (~Guest84@59.89.62.167) (Client Quit)
[19:04:52] <celphi> omg mav`rik lol i need to go back to bed.
[19:05:06] <celphi> lol.
[19:05:25] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[19:05:32] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:05:40] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Client Quit)
[19:05:54] <csm3105> And schemas.py is where I use pydantic for the analysis and validation of data, in crud.py i have the reusable  functions to interact with de db, in this case only to insert data, and main.py is where I integrate everything
[19:06:07] <vitali64> https://paste.debian.net/1235338/
[19:06:10] *** Quits: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:06:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:06:52] *** Joins: cincoswim (~cincoswim@24-52-65-147.telesystem.us)
[19:07:01] <csm3105> I know that probably is not the best way to do it but I want to understand why when I run it stays thinking and does nothing...
[19:07:34] <csm3105> I have tries to execute only database.py and it works correctly so the connection to the database is being done fine
[19:07:55] <csm3105> one of the doubts I have is that I don't know if the content in schemas.py is well defined
[19:08:45] <mav`rik> vitali64: your code appears to be working as defined, your "hello" resulted in an in-channel "hi!\nsup?" and your "help" showed the 3 messages as the code describes. Am I misunderstanding your issue?
[19:09:25] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:10:14] <vitali64> yes
[19:10:24] <vitali64> mav`rik: the bot quits for some reason
[19:10:31] <vitali64> when it shouldn't
[19:10:47] <vitali64> ah
[19:10:53] <vitali64> using another prefix worked
[19:11:04] <vitali64> nevermind!
[19:11:07] <vitali64> it doesn't
[19:11:46] <vitali64> and sometimes, it quits before even saying anything
[19:11:50] <han-solo> csm3105: maybe try `next(get_db())`
[19:12:03] *** Quits: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net) (Remote host closed the connection)
[19:12:48] <DaPinkOne> vitali64, have you read the docs for this library you're using? they discuss this in the first few sentences.
[19:12:54] <vitali64> ah?
[19:13:13] <DaPinkOne> under "typical usage" https://github.com/luk3yx/miniirc
[19:13:27] <DaPinkOne> this may be the issue?
[19:13:38] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:14:13] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[19:14:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:14:38] *** Joins: maxtim (~maxtim__@c-73-21-43-6.hsd1.ga.comcast.net)
[19:15:35] <csm3105> han-solo, where should I use that? when calling create_issue(), like `crud.create_issue(next(get_db()), issue)`?
[19:15:45] *** Joins: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de)
[19:16:19] <vitali64> DaPinkOne: let me test
[19:16:25] <csm3105> I'm also not sure if I'm creating properly the issue object because those are class attributes and not instances attribtues
[19:16:45] <vitali64> DaPinkOne: nope
[19:16:46] <han-solo> csm3105: yep
[19:16:54] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Ping timeout: 252 seconds)
[19:17:00] <vitali64> wait
[19:17:03] <vitali64> it rejoins?
[19:17:15] <vitali64> and quits
[19:17:22] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:17:31] <vitali64> and rejoins?
[19:17:35] <vitali64> weird
[19:18:04] *** Quits: fifihyperbola (~fifihyper@212.219.41.130) (Quit: Client closed)
[19:18:16] <csm3105> han-solo, including what you have told me does the same
[19:18:39] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 260 seconds)
[19:18:59] <SnoopJ> kalib_23-1, I'm a strong believer that there aren't any dumb questions, just context-inappropriate ones. And in here, "Anything Python is on-topic" :)
[19:19:34] <kalib_23-1> ;]
[19:19:43] <csm3105> han-solo, what about the point of class attributes vs instance attributes? is this object properly created then?
[19:20:02] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[19:20:02] <han-solo> csm3105: where exactly ?
[19:20:26] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[19:20:32] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[19:21:12] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[19:21:12] <csm3105> han-solo, between L122-L133 (main.py)
[19:21:56] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:22:16] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:22:20] <han-solo> those seem fine ?
[19:22:24] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 252 seconds)
[19:22:38] *** Quits: kalib_23-1 (~kalib_23-@2607:fea8:651e:1900:7913:8c49:97ae:d687) (Quit: Client closed)
[19:22:40] *** Joins: Pickchea (~private@user/pickchea)
[19:22:41] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:23:02] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[19:23:09] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:c915:7285:d52a:a00e) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:23:20] *** Joins: Guest20 (~Guest20@223.229.241.137)
[19:23:24] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[19:23:29] <Guest20> h0ola
[19:23:45] <mefistofeles> hi
[19:23:46] <csm3105> han-solo, I'm not sute if I can assign values to these class attributes in the same way as if they where instance attributes
[19:24:05] *** Joins: grooverman (~grooverma@152.250.149.49)
[19:24:24] *** Joins: Enitin (~Enitin@82.180.145.226)
[19:24:25] <han-solo> csm3105: you can, pydantic likely rewrites the __init__ using those annotations
[19:24:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:24:43] *** Quits: Guest20 (~Guest20@223.229.241.137) (Client Quit)
[19:25:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:26:06] <han-solo> those are not exactly class attributes
[19:26:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:26:39] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[19:27:00] <csm3105> han-solo, I'm not sure if should get rid of this get_db() method...It still keeps listening to permanently
[19:27:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:27:09] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Ping timeout: 256 seconds)
[19:27:29] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:28:02] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:28:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[19:28:41] <han-solo> i'm not sure why you made it a generator, just for doing `crud.create_issue(next(get_db()), issue)` ?
[19:29:33] *** Quits: b10n1k (~iob@nat1.prg.suse.com) (Ping timeout: 252 seconds)
[19:30:12] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--422.oracle-ocna.com) (Ping timeout: 240 seconds)
[19:30:33] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[19:31:16] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:31:29] <han-solo> csm3105: https://bpa.st/RG7A # maybe ?
[19:31:37] *** Joins: revolve_ (~u0_a227@82-132-239-27.dab.02.net)
[19:32:10] <han-solo> ...or is this a fastapi thing, and you removed the rest of the code ?
[19:32:15] <csm3105> han-solo, what do u mean by generator? I'm just following this tutorial https://fastapi.tiangolo.com/tutorial/sql-databases and trying to adapt it to my use case, and I'm not using FastApi or Flask or any other HTTP server because I just want to play with the database and make some manual tests
[19:32:29] <csm3105> han-solo, probably
[19:32:51] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 252 seconds)
[19:33:08] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:33:33] <han-solo> `def get_db():..yield db` make it a generator
[19:33:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:34:09] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:34:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:34:24] *** Joins: tarel2 (~tarel2@139.28.216.245)
[19:34:28] <han-solo> fastapi had it has a dependency, in their router view function
[19:34:37] <han-solo> so it will automatically work
[19:35:16] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:35:25] *** Quits: sawk (~quassel@78.6.80.66) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:35:28] *** Quits: Nact (~l@2a02:2788:11c8:31d:aacb:a105:f6fd:377a) (Quit: Konversation terminated!)
[19:35:36] *** Joins: sawk (~quassel@78.6.80.66)
[19:35:46] <csm3105> han-solo, I dont want to use FastApi, I just want to use Pydantic and SQLAlchemy
[19:35:47] <tarel2> What was the point in learning python you felt like yeah I'm a real programmer?
[19:35:53] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[19:35:55] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[19:35:55] <jinsun> kuwv: setup.py is not deprecated, just invoking it directly using python is deprecated, have to use a proper build frontend like pip or python -m build
[19:35:57] <DaPinkOne> vitali64, the irc.Handler seems to require a colon=False argument. It's noted in a deprecation warning, but I am getting some weird behavior without it.
[19:36:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:36:28] *** Joins: cdown_ (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[19:36:37] <grym> csm3105: > I just want to use Pydantic and SQLAlchemy  that's  https://sqlmodel.tiangolo.com/
[19:36:50] <kuwv> ok, that makes sense
[19:36:59] <DaPinkOne> the docs do discuss this underneath the "Handler" section
[19:37:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:37:44] *** Joins: widp` (~user@124.123.106.12)
[19:37:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:37:52] <widp`> Hello
[19:38:00] <widp`> why does this not work:
[19:38:17] <widp`> for i in a:
[19:38:17] <widp`> 	powerset.add(set(i))
[19:38:17] <widp`>  
[19:38:29] <widp`> where a = {1,2,3}
[19:38:36] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[19:38:50] <csm3105> grym, but will this force me to use FastApi at some point?
[19:39:00] <widp`> I get : TypeError: 'int' object is not iterable
[19:39:00] <widp`>  
[19:39:02] *** Joins: logithack (~logithack@p200300cfbf3266009685a4bef43ea8e9.dip0.t-ipconnect.de)
[19:39:14] <grym> csm3105: no?
[19:39:17] *** Quits: cdown (~cdown@163.114.130.1) (Ping timeout: 256 seconds)
[19:39:20] *** cdown_ is now known as cdown
[19:39:29] *** Joins: R2Racoon (~R2Racoon@181.62.52.196)
[19:39:29] <grym> csm3105: it is pydantic and sqla mooshed together
[19:39:47] <grym> as it happens, it works nicely with fastAPI as a result (because that is pydantic and starlette mooshed together)
[19:39:53] <grym> and you can get a distributive moosh
[19:40:00] <SnoopJ> widp`, please don't paste source in the channel, use https://bpa.st  Your error is because set() expects an iterable (tuple, list, etc.) as its input, but you are passing an integer. Maybe you wanted `powerset.add({i})` ?
[19:40:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:40:25] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:40:57] <logithack> I'm trying to get some data out of namespaced XML document. I can find the target element using an XPath expression, but I can't extract the namespaced attribute value. See here: https://bpa.st/ARUQ Any ideas?
[19:41:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:41:13] <csm3105> grym, ok I'll try sqlmodel, but my point is I would like to learn how Pydantic and SQLAlchemy works together
[19:41:23] <widp`> SnoopJ: that doesn't work either
[19:41:30] <han-solo> csm3105: https://bpa.st/ET4Q # does this work ?
[19:41:51] <han-solo> only change is in the `main.py`
[19:41:53] <SnoopJ> widp`, sets aren't hashable, so adding them to a powerset does seem kind of weird. I don't have any further recommendations for you, but you are probably not seeing the same error now.
[19:42:00] <SnoopJ> (we can't see your screen)
[19:42:44] <grym> csm3105: read its source
[19:42:46] <widp`> yeah SO says use frozenset
[19:42:51] <grym> csm3105: since that's what sqlmodel does for you
[19:43:41] <jinsun> widp`: you can use more-itertools for powerset, it gives a list of tuples https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.powerset
[19:44:07] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c4ec:7584:bbd2:af2d)
[19:44:07] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c4ec:7584:bbd2:af2d) (Changing host)
[19:44:07] *** Joins: skapata (~Skapata@user/skapata)
[19:44:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[19:44:32] <widp`> not sure what being "hashable" has to do with having a set of sets
[19:44:49] <DaPinkOne> widp`, sets are much like hashmaps under the sheets
[19:45:01] <jinsun> sets can contain only hashable stuff, so you can't have sets of sets
[19:45:16] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[19:45:34] <CrtxReavr> hashable has a few definitions. . . one of them is un-mutable.
[19:45:44] <grym> csm3105: i've only played with it a little, but as far as i can tell, sqlmodel.SqlModel is both a pydantic.BaseModel and a sqla.Base
[19:45:46] <CrtxReavr> Another is can be used as a dict key in python.
[19:45:46] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:46:03] <grym> csm3105: 'can be used as a key' is a consequence, not a definition
[19:46:11] <grym> err CrtxReavr ^
[19:46:24] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[19:46:31] <CrtxReavr> type at least two characters before banging on the tab key. . .
[19:46:58] <widp`> I See
[19:47:00] <grym> hashable means __hash__ exists and returns an int and two things that compare equal have the same int
[19:47:06] <SnoopJ> widp`, it's possible my guess about what the new error message is isn't a good guess. It would help a lot to not have to guess.
[19:47:26] *** Joins: nomic (~nomic@185.217.117.249)
[19:47:33] <CrtxReavr> Python even allow a set of sets?
[19:47:40] <widp`> you know what they say it is better to guess than to be sorry
[19:47:49] <SnoopJ> CrtxReavr, no
[19:47:49] <grym> CrtxReavr: of frozensets
[19:48:07] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:48:38] <csm3105> han-solo, no, it prints the database.py and keeps running permanently without any other output aside the print...
[19:49:08] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[19:49:41] * CrtxReavr snickers: https://bpa.st/6QWQ
[19:49:56] <grym> CrtxReavr: er, yes?
[19:50:22] <grym> that's what should happen
[19:50:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:50:43] <CrtxReavr> Just amused that comes right out says it can't handle an unhashable type as a set member.
[19:50:45] *** Joins: Payam69 (~Payam@138.106.57.131)
[19:51:14] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[19:51:21] <grym> well, that's how you tell if you can add something to a set or not
[19:51:29] <grym> (https://bpa.st/467Q  this works, though)
[19:51:41] <DaPinkOne> a = [1,2,3]; superset = {frozenset(a[:n]) for n in range(len(a)+1)} kindof works
[19:51:46] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:51:47] <CrtxReavr> Indeed.
[19:52:27] <DaPinkOne> i feel like this would be a prebuilt in functools. something about permutations
[19:53:13] <SnoopJ> DaPinkOne, it gets kind of tricky when you want to do a powerset (which is all subsets of some reference set)
[19:53:23] <SnoopJ> There are 3rd-party libraries for this, though
[19:53:32] *** Joins: Viewday1151 (~Viewday@user/viewday)
[19:53:52] <DaPinkOne> sets not being subscriptable seems to throw a major wrench in things
[19:54:20] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:54:21] *** Viewday1151 is now known as Viewday115
[19:54:22] <CrtxReavr> Sets are un-ordered, so subscripting one would be. . . fortunately not a thing.
[19:54:50] <csm3105> grym, does also flask_sqlalchemy include some validation mecanisms as sqlmodels does with Pydantic?
[19:54:56] <DaPinkOne> widp`, is a python set really what you need for your use case?
[19:55:30] <csm3105> because I preffer to use Flask in the case I have to implement some restful API
[19:55:38] <grym> csm3105: i have no idea, i've not used that one.  When i want nice validators, i use either pydantic or attrs
[19:56:03] <grym> i've used flask+attrs+desert before, which was fine, but i've come to vastly prefer fastAPI
[19:56:11] <csm3105> grym, Ok, i see...thanks
[19:56:27] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[19:56:37] *** Quits: grooverman (~grooverma@152.250.149.49) (Read error: Connection reset by peer)
[19:56:56] *** Joins: grooverman (~grooverma@152.250.149.217)
[19:57:01] *** Quits: gloomy76 (~gloomy@fwdkanyc05.novozymes.com) (Quit: Client closed)
[19:57:34] <SnoopJ> DaPinkOne, not really, you can still iterate them, so you can build a list if you need a place to store data while you assemble your selections. This may be how some of those libraries do it
[19:57:46] * SnoopJ hasn't ever looked at a powerset implementation
[19:59:42] <jinsun> it is just 2 lines https://github.com/more-itertools/more-itertools/blob/master/more_itertools/recipes.py#L447-L448
[20:00:14] <DaPinkOne> that's pretty straight forward
[20:00:53] <DaPinkOne> or it's short anyways. there's some itertools magic in there
[20:01:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:09] <cvmn> is there any neat way to have an object api that allows me to define my own methods?
[20:01:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:01:28] <DaPinkOne> "object api"?
[20:01:36] <grym> cvmn: `class Name:`
[20:01:42] <SnoopJ> jinsun, I'm thinking of a powerset implementation that behaves more like a set, but sure
[20:01:46] <cvmn> one way is to define a function x, then do like x.f = x.
[20:01:54] <jinsun> yeah combinations is really doing most of the work there
[20:02:04] <cvmn> err, myobject.f = x
[20:02:15] <ldericher> can I somehow tell `pydantic` to not include a field in a Model's string representation?
[20:02:20] <grym> cvmn: setattr
[20:02:24] <grym> ldericher: yes, but i forget how
[20:02:28] <grym> one sec
[20:02:35] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[20:02:53] <SnoopJ> https://pydantic-docs.helpmanual.io/usage/models/#automatically-excluded-attributes ?
[20:03:10] <grym> ldericher: Field(...) takes a repr:bool now, i think
[20:03:22] <cvmn> grym: setattr is only needed when method's name is chosen at run time by the user?
[20:03:38] <grym> cvmn: sure. you can also just literally myobject.f = x
[20:03:49] <cvmn> yes.  this is what i'm doing.
[20:04:02] <cvmn> i wonder if there is an easier way?
[20:04:13] <CrtxReavr> That seems pretty easy.
[20:04:14] <SnoopJ> oh, yea I guess if you wanted to exclude it *only* from the repr, making it private won't work
[20:04:31] <cvmn> def x(...)...; myobject.f = x;  <--- can i simplify it even more?
[20:04:36] <ldericher> SnoopJ, yes, only from the repr
[20:05:14] <SnoopJ> ldericher, what grym said, then
[20:05:22] <SnoopJ> https://pydantic-docs.helpmanual.io/usage/schema/#field-customization
[20:06:02] * SnoopJ wishes the Pydantic docs had an API reference section
[20:06:07] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[20:06:13] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[20:07:02] *** Quits: logithack (~logithack@p200300cfbf3266009685a4bef43ea8e9.dip0.t-ipconnect.de) (Quit: Leaving)
[20:07:39] *** Joins: rje_ (~textual@50.35.241.164)
[20:07:48] <phy1729> For sqlalchemy's MetaData naming_convention what's the difference between name, label, and key?
[20:07:51] *** Joins: dos_ (~dos@149.167.160.80)
[20:07:57] <grym> ldericher: https://bpa.st/WJSQ
[20:08:10] <grym> ldericher: you need a pretty new pydantic for this, my old one didn't have it
[20:08:13] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:08:19] <grym> so 1.8.1 was Too Old
[20:08:45] *** Quits: R2Racoon (~R2Racoon@181.62.52.196) (Ping timeout: 256 seconds)
[20:08:52] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[20:09:01] <SnoopJ> It was added in v1.9.0a1 https://pydantic-docs.helpmanual.io/changelog/#v190a1-2021-12-18-changes
[20:09:56] <grym> cvmn: i can't think of a simpler way to assign something than by assigning it
[20:10:10] <han-solo> csm3105: it works fine, other than the mistaken `models.Issue` and the wrong paramater assignment
[20:10:14] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 252 seconds)
[20:10:27] *** Joins: sudomann (~sudomann@98.219.211.182)
[20:10:33] <han-solo> though, i tried it on sqlite instead of postgres
[20:10:33] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[20:11:05] <dos_> hello guys, decent question. how can I perform take users input and throw output in pysimplegui. so far i've made the gui but, not functional
[20:11:15] *** Quits: Payam69 (~Payam@138.106.57.131) (Quit: Client closed)
[20:11:35] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:11:53] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[20:11:53] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:12:09] *** Quits: rje_ (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[20:12:12] <csm3105> han-solo, sorry, what do you mean by "other than the mistaken models.Issue and the wrong parameter assignment"?
[20:12:19] <ldericher> grym, yeah, mine supports it, and I can control the pydantic version on the target system :)
[20:12:22] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:12:25] <grym> ldericher: nice.
[20:12:28] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:12:42] <han-solo> csm3105: https://bpa.st/D4VA
[20:12:47] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 260 seconds)
[20:12:52] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[20:13:26] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[20:13:32] <jinsun> cvmn: you can skip the myobject.f = x part and just use x directly
[20:14:32] <grym> ^ sure, you can also just call x from inside `myobject`.
[20:14:36] <cvmn> jinsun: how?
[20:14:45] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[20:14:59] <jinsun> x(myobject) instead of myobject.f() ?
[20:15:18] *** Joins: bahamas (~lucian@84.232.140.158)
[20:15:19] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[20:15:23] <cvmn> myobject assumes that x is a special method's name that it internally calls.
[20:15:34] <rvalue> any good resource like challenges or exercises for numpy? i havent learned numpy inside out so hoping to learn cools tricks and anything i dont use in numpy
[20:15:35] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[20:16:14] <han-solo> csm3105: and it works fine in postgres as well
[20:16:29] <grym> cvmn: https://bpa.st/5XAQ  this is a very silly thing to do
[20:16:31] <grym> but it's certainly legal
[20:16:38] *** Quits: revolve_ (~u0_a227@82-132-239-27.dab.02.net) (Read error: Connection reset by peer)
[20:16:42] <grym> (Foo class has no business existing, here)
[20:16:45] <SnoopJ> rvalue, if you want to "learn numpy inside out," the basics section of the documentation is extremely good, particularly the section on how indexing works: https://numpy.org/devdocs/user/basics.indexing.html
[20:17:28] <SnoopJ> as far as challenges and exercises, Advent of Code and Project Euler both have plenty of exercises that numpy would be useful for
[20:17:32] <cvmn> grym: inside class Foo, i have x = None.  i just update it by myobject = Foo(x=myfunc).  is it better now?
[20:17:32] <grym> cvmn: https://bpa.st/JZEQ  and this is even worse :)
[20:17:41] <grym> cvmn: no
[20:17:43] <grym> that's worse
[20:17:45] *** Joins: zebrag (~chris@user/zebrag)
[20:17:54] <cvmn> mega-interesting.
[20:18:05] <grym> functions are first class; just ... call 'em
[20:18:08] <csm3105> han-solo, can you paste the code you say it's working on postgres? the very same you pasted before?
[20:18:09] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:18:20] <grym> you don't need to hang them on an object more tightly scoped than `module`
[20:18:29] <rvalue> omg i dont want to spend a year on numpy.. something intermediate/advanced will do
[20:18:35] <cvmn> grym: the class gives objects, that contains a method to allow the user define some function's content.
[20:18:43] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[20:18:44] <rvalue> project euler :|
[20:18:47] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:30ce:2414:18b0:d4d2)
[20:18:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[20:19:02] <SnoopJ> rvalue, I assure you that the page I linked takes substantially less than a year to read.
[20:19:05] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[20:19:23] <SnoopJ> (and accounts for probably 80% of the numpy performance problems I've seen)
[20:19:27] *** Joins: tejr_ (~tejr@user/tejr)
[20:19:56] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[20:20:11] <cvmn> grym: i don't get why the 2nd is worse.
[20:20:13] <rvalue> SnoopJ: i know all on that page.. thats pretty much basic
[20:20:23] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[20:20:26] <SnoopJ> rvalue, I don't have any further recommendations for you, then. Best of luck.
[20:20:27] *** tejr_ is now known as tejr
[20:20:28] <grym> cvmn: a class with static methods only doesn't need to exist (that's just a module with functions)
[20:20:33] <grym> or did you mean your second example
[20:20:50] <han-solo> csm3105: https://bpa.st/YLQA
[20:20:57] <rvalue> not looking for performance problems.. more like differents kind of usage problems
[20:21:22] <cvmn> grym: basically i'm defining a class that allows the programmer to use it while being able to supply a custom 'cost' function.  e.g. each object has a function to calculate its own cost.
[20:21:50] *** Quits: purple_cthulhu (~rax@2.186.248.10) (Quit: Leaving.)
[20:22:44] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[20:22:47] * cvmn switching to caveman
[20:22:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[20:22:55] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[20:23:08] <grym> cvmn: you cannot stop people from doing that anyway.  monkeypatching as an API is not something i think i'd enjoy using
[20:23:12] *** rootx74 is now known as skraito
[20:23:12] *** Quits: skraito (~root@user/rootx74) (K-Lined)
[20:23:27] *** Joins: rootx74 (~root@2001:19f0:5:446d:5400:3ff:feea:eab7)
[20:23:39] *** Joins: skapate (~Skapata@user/skapata)
[20:25:53] <csm3105> han-solo, omg thank you very much you are awesome, but one question...i think you missed the schemas.py
[20:26:19] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[20:26:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:27:01] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[20:27:31] <han-solo> csm3105: ah yeah, my bad. But no change there anyway
[20:27:48] *** Quits: Syzygy_ (~Syzygy@178-190-83-4.adsl.highway.telekom.at) (Ping timeout: 240 seconds)
[20:27:54] <csm3105> han-solo, ok thanks, i'm going to try it
[20:27:55] *** Joins: rje (~textual@50.35.241.164)
[20:28:04] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[20:29:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:30:05] *** Joins: hams (~hams@73.232.205.0)
[20:30:05] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[20:30:05] *** Joins: hams (~hams@user/hams)
[20:30:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[20:30:09] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08)
[20:30:45] *** Quits: widp` (~user@124.123.106.12) (Ping timeout: 268 seconds)
[20:30:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[20:31:49] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:33:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 240 seconds)
[20:33:30] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:fdd5:f352:87eb:3be3)
[20:33:31] *** LiTHiuM is now known as Imk0tter
[20:33:45] *** Quits: widp (~widp@124.123.106.12) (Remote host closed the connection)
[20:33:48] *** Quits: rje (~textual@50.35.241.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:34:24] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb)
[20:35:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:35:24] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[20:35:24] *** tomg_ is now known as tomg
[20:35:47] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[20:36:06] *** Quits: schumaml (~schumaml@dslb-092-074-004-229.092.074.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[20:36:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:36:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:37:08] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[20:38:45] *** Joins: ianliu (~ianliu@177.197.106.106)
[20:40:12] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[20:40:12] *** Quits: sawk (~quassel@78.6.80.66) (Ping timeout: 240 seconds)
[20:40:17] *** Joins: Barones (~Barones@user/Barones)
[20:40:42] <ianliu> is it possible to annotate a dictionary that will be used as kwargs when calling a function? Something like "foo: myfun.Args = dict(...)", where myfun is a function like: "def myfun(x: int, y: str):"? I think I could manually create a typing.TypedDict, but I was thinking if is there something more automated
[20:42:06] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:42:14] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:42:17] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Ping timeout: 240 seconds)
[20:42:27] *** Joins: wac (~wac@user/wac)
[20:42:48] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[20:44:24] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:45:01] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:45:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:46:29] *** Quits: LAVBoy (~LAVBoy@85.249.42.176) (Ping timeout: 256 seconds)
[20:46:45] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[20:47:23] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Quit: leaving)
[20:47:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::81cb) (Ping timeout: 250 seconds)
[20:48:21] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:48:23] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[20:48:50] *** Quits: mantra (~mantra@216.73.163.136) (Ping timeout: 260 seconds)
[20:48:51] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:49:21] <csm3105> han-solo, grym I think I am stupid, I realized that the ip i was setting was not the correct one associated to the docker container where I have postgresql deployed, i'v changed and it works, thanks a lot for the help
[20:49:39] *** Joins: mantra (~mantra@216.73.163.101)
[20:50:56] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:51:26] <SnoopJ> ianliu, by "used as kwargs" do you mean `func(**thisobj)` ?
[20:51:45] *** Joins: dfdfd (~dfdfd@103.146.11.40)
[20:52:14] <ianliu> SnoopJ: yes
[20:53:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:53:31] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 256 seconds)
[20:53:36] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:53:43] *** Joins: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be)
[20:53:47] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[20:53:49] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:54:13] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[20:54:20] <SnoopJ> ianliu, I would annotate it as dict or TypedDict, then. You could possibly use `inspect.getfullargspec()` to retrieve the annotations for a function in order to generate a suitable TypedDict for a function, but it may not be worth bothering.
[20:55:48] *** Quits: rootx74 (~root@2001:19f0:5:446d:5400:3ff:feea:eab7) (Ping timeout: 240 seconds)
[20:56:40] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[20:58:50] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:00:18] *** Joins: dez (uid92154@user/dez)
[21:00:53] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[21:01:00] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[21:02:12] *** Joins: Syzygy (~Syzygy@213142096160.public.telering.at)
[21:02:34] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:03:05] *** Quits: makoto2600 (~makoto260@94.86-180-91.adsl-dyn.isp.belgacom.be) (Quit: Leaving)
[21:03:19] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:03:34] *** Joins: Enitin (~Enitin@82.180.145.226)
[21:03:34] *** Joins: AaronXn (~aaronxn@96-19-96-19-106-14.cpe.sparklight.net)
[21:03:50] *** Joins: badsektor (~badsektor@user/badsektor)
[21:04:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:04:21] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:04:23] <badsektor> how do i get each element in a string like this? "L2, L3, L3, L4, R1, R2,  ...."
[21:04:46] <grym> badsektor: csv?
[21:04:46] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[21:04:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:05:00] <badsektor> what is csv
[21:05:20] <grym> comma-separated values, a collection of file formats that have strings like this in them very often
[21:05:50] <badsektor> oh you mean there is a modulew caled csv?
[21:06:00] <grym> there is one of those, too
[21:06:19] <han-solo> badsektor: is the input a string or something like a list with str elements in it ?
[21:06:21] <moonmoon> ianliu: something like https://bpa.st/SPRA works
[21:06:21] *** Joins: twiclo1 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[21:06:27] <Repiphany> "a, b, c".split(", ")
[21:06:27] <badsektor> how do i turn a line like that into a list for starters?
[21:06:38] *** Joins: greedom (~greedom@p200300de67129700fcb07913b27e4da4.dip0.t-ipconnect.de)
[21:06:40] <badsektor> oh split(), thank you
[21:06:46] <moonmoon> (assumes the function in question is annotated, however)
[21:07:18] <twiclo1> I'm trying to use yt-dlp on my pinephone and it's taking a solid minute to even start up. Is there any way I can run this under some python command to see what's taking so long?
[21:07:18] <CrtxReavr> stuff_list =  "a, b, c".split(", ")
[21:07:26] <grym> badsektor: [x.strip() for x in val.split(",")] will work, but it's brittle
[21:07:42] <grym> badsektor: https://bpa.st/D5LA
[21:07:46] <badsektor> thanks guys
[21:08:49] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[21:08:57] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[21:08:58] <han-solo> grym: i think that's the robust version ?
[21:09:00] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[21:09:08] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Client Quit)
[21:09:18] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[21:09:41] <deniska> depending on where a string comes from, csv may or may not be the right module to use
[21:09:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:09:51] *** flooded is now known as _flood
[21:09:53] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:10:33] <grym> han-solo: i've seen a looot of wacky csv out there; i'm sure it'll break (mine doesn't permit quoted commas, for example)
[21:10:54] <han-solo> grym: ah
[21:11:05] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Remote host closed the connection)
[21:11:14] *** Joins: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20)
[21:11:39] <han-solo> seems like advent of code ?
[21:11:45] <grym> ¯\_(ツ)_/¯
[21:11:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:11:55] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[21:12:18] <han-solo> badsektor: is this for advent of code ?
[21:12:33] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[21:12:34] <badsektor> @han-solo yes lol
[21:12:40] <han-solo> ah
[21:13:39] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[21:13:44] *** Joins: Guts71 (~Guts71@41.104.96.154)
[21:14:41] <ianliu> moonmoon: your link doesn't seem to load!
[21:15:06] <moonmoon> hmm? works for me so idk what to say
[21:15:08] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.4.1)
[21:15:14] *** Quits: ubert (~Thunderbi@p200300ecdf1588c644ba34ac9ed54fc8.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:15:31] <ianliu> weird, it is timing out for me
[21:15:54] <ianliu> https://bpa.st/SPRA    < This link is timing out for me
[21:15:56] <ianliu> strange
[21:16:31] *** Quits: bauripalash (~bauripala@2401:4900:3826:2e1d:1:2:8841:9e20) (Read error: Connection reset by peer)
[21:16:38] <ianliu> on another machine it is working, maybe something wrong with my ISP...
[21:16:51] <ianliu> *on another remote machine*
[21:18:01] <ianliu> moonmoon: thanks!
[21:18:34] *** Quits: dos_ (~dos@149.167.160.80) (Remote host closed the connection)
[21:18:59] *** Joins: paul424 (~tom@ip-5-172-233-166.multi.internet.cyfrowypolsat.pl)
[21:19:56] *** Quits: dfdfd (~dfdfd@103.146.11.40) (Remote host closed the connection)
[21:20:06] *** Joins: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net)
[21:20:13] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[21:20:38] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 252 seconds)
[21:20:55] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 260 seconds)
[21:21:30] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:a6b5:c1b1:c8e6:637a)
[21:21:41] <BrokenCog> using Pandas.DataFrame ... if I print( df.columns ), I get the columns, but, not the index.  If I print(df.iloc[0]), I get the columns plus the index column ... is there a mechanism to rename the index column?
[21:22:48] *** Quits: vladoski (~vladoski@217.147.130.65) (Remote host closed the connection)
[21:23:56] *** Joins: bahamas (~lucian@84.232.140.158)
[21:25:01] <SnoopJ> twiclo1, the `yt-dlp` executable is "just" a Python script, so you can run it like: `python3 $(which yt-dlp)`, or run it with your favorite profiler (cProfile + SnakeViz might be helpful here)
[21:25:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[21:25:10] <badsektor> guys, for advent of code 2016 day 1, how does this look? https://bpa.st/7J5Q
[21:25:19] <badsektor> how to improve it?
[21:25:35] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[21:25:50] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[21:26:52] *** Joins: hicham (~hicham@2a01:e34:ee18:a4d0:3814:a70e:9b38:e3c2)
[21:27:24] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 240 seconds)
[21:27:45] <k`> would someone help me with this by any chance? https://justpaste.it/9qzkm
[21:28:01] <gitesh> What does class Meta do in django?
[21:28:02] <k`> so i'm trying to make an API call to kucoin... but i can only get 1500 max responses out of it
[21:28:19] <gitesh> I tried to read django documention but didn't get it yet
[21:28:21] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 250 seconds)
[21:28:30] <k`> so i need to forward the UTC timestamp from 0 (each pairing is different) and add 25 hours onto it UTC time and then loop that
[21:28:49] <k`> so i need a way to capture what 0 is in UTC
[21:29:04] <k`> and then add 25 hours onto it with the time_increment var
[21:29:56] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[21:30:04] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:31:03] *** Joins: shad (~shad@user/shad)
[21:32:24] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[21:32:42] <Pici> k`: I'm not exactly sure what you're asking, but if you want to add times, you can add a timedelta(hours=25) object to an existing datetime object to get 25 hours after that datetime
[21:32:50] *** Joins: sudomann (~sudomann@98.219.211.182)
[21:33:00] <ianliu> huh, I'm debugging why I can't access bpa.st, and it seems to be because my machine has ipv6 disabled. I have another laptop on the same network that can access bpa.st, and it has a ipv6 ip. Is bpa.st only accessible via ipv6?
[21:33:26] <k`> Pici: could i PM you?
[21:33:39] *** Parts: kuwv (~kuwv@pool-173-67-205-36.clppva.fios.verizon.net) ()
[21:33:42] <Pici> k`: I'd prefer not. Lets keep this in-channel.
[21:33:43] <BrokenCog> ianliu: unlikely.  more likely is your router or machine only configured with IP6.
[21:33:47] <BrokenCog> PING bpa.st (37.139.11.170) 56(84) bytes of data.
[21:33:49] <SnoopJ> ianliu, I don't think so, `ping -4 bpa.st` works fine
[21:33:51] <k`> gets so confusing okay
[21:34:26] *** Joins: vlado (~vlado@181.50.79.237)
[21:34:44] <k`> okay, let me think about this for a second
[21:34:45] <SnoopJ> oh neat, `curl` takes -4 as well. Yea, it should be accessible from IPv4
[21:35:01] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[21:35:04] <ianliu> BrokenCog: I have a laptop with ipv4 and v6, and my main desktop with only ipv4, and my desktop can't connect with "telnet bpa.st 443", while my laptop can, but it goes through ipv6
[21:35:14] <ianliu> strange
[21:35:23] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:35:24] <SnoopJ> ianliu, that sounds like you have some sort of routing issue on your local network
[21:35:32] <ianliu> yeah, maybe
[21:35:43] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:a6b5:c1b1:c8e6:637a) (Ping timeout: 250 seconds)
[21:36:02] <ianliu> SnoopJ: can you telnet bpa.st 443 through ipv4?
[21:36:10] <BrokenCog> k`: agreed.  investigate 'route'
[21:36:18] <SnoopJ> ianliu, yes
[21:36:22] <BrokenCog> sorry ... ianliu not k`
[21:36:42] *** Joins: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660)
[21:36:56] <ianliu> I can successfully traceroute bpa.st on both machines, but telnet timesout
[21:37:28] <ianliu> yeah, ping -4 bpa.st fails
[21:37:39] <badsektor> how to have a list of two values as each item and append two values at a time toi t?
[21:37:40] <ianliu> strange. Thanks, I will investigate
[21:38:03] *** Quits: spetrosi (~spetrosi@ip-86-49-252-108.net.upcbroadband.cz) (Quit: Leaving)
[21:38:12] *** Quits: ianliu (~ianliu@177.197.106.106) (Quit: WeeChat 3.4.1)
[21:38:21] *** Quits: greedom (~greedom@p200300de67129700fcb07913b27e4da4.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:38:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:39:02] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[21:39:13] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[21:39:54] *** Quits: hicham (~hicham@2a01:e34:ee18:a4d0:3814:a70e:9b38:e3c2) (Quit: Leaving)
[21:40:10] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[21:42:58] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[21:44:50] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 252 seconds)
[21:45:52] <Imk0tter> is there any way to return a tuple of optional arguments; ie: return (x = 0, y = 0)
[21:46:10] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Quit: WeeChat 2.8)
[21:46:32] <phy1729> Tuples don't have optional arguments
[21:46:37] <BrokenCog> Imk0tter: x=0;y=0;(x,y)
[21:47:02] <BrokenCog> which isn't what you're asking, but, gives the result.
[21:47:11] *** Joins: cincoswim (~cincoswim@24-52-65-147.telesystem.us)
[21:47:16] *** Quits: saroy (~Sandipan@45.249.73.212) (Remote host closed the connection)
[21:47:17] <BrokenCog> going back to pandas.DataFrame ... supposedly 'df.index.name = None' should remove that index ?
[21:47:28] <BrokenCog> any idea why it wouldn't?
[21:47:36] <Imk0tter> i have a function with option arguments: def f(x = 0, y = 0) and another function that returns (x, y); how can i pass the tuple returned by the other function to function f as optional arguments?
[21:47:50] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 268 seconds)
[21:47:53] <phy1729> f(*the_tuple)
[21:47:56] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Quit: The Lounge - https://thelounge.chat)
[21:48:07] <sco1> https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists
[21:48:36] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:49:07] <jinsun> BrokenCog: it doesn't remove the index, it just removes the name of the index (which is like the "header" of the index)
[21:49:19] *** Joins: rje (~textual@65.141.156.170)
[21:49:31] <BrokenCog> jinsun: ahhh. okay that makes sense with my results.  thanks.
[21:49:48] <Imk0tter> phy1729: function f is used beyond the function that returns the tuple (x, y)
[21:49:55] <badsektor> how do you check for tuple list items in an if() ?
[21:50:02] <Imk0tter> it passes f(x = 100, y = 100)
[21:50:27] <badsektor> how to do this correctly? if (x,y) == traverselist[i]:
[21:50:32] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[21:50:44] <phy1729> Imk0tter: the definition isn't   f(*, x=0, y=0)   so  f(1, 2)   is valid too
[21:51:05] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:51:37] <mav`rik> badsektor: you want to check if the tuple is present in the list? Or something else?
[21:51:37] <Imk0tter> i'm trying to figure out the long term solution to the problem
[21:52:00] <badsektor> mav`rik: yes the formetr
[21:52:01] <phy1729> If you want to pass via keywords, then return a dict and f(**the_dict)
[21:52:16] <BrokenCog> jinsun: what's confusing me is if I: "print( "index:", df.index.names )" I get "Datetime" (type() shows<class 'pandas.core.indexes.datetimes.DatetimeIndex' for df.index.  But, when I 'print(df.iloc[0])' I get Name: <dateinfo> in the output, but no "Datetime" column data.
[21:52:30] <InPhase> badsektor: What's going wrong when you try it?
[21:52:54] <badsektor> it says: TypeError: list indices must be integers or slices, not tuple
[21:52:57] <mav`rik> badsektor: that is, the list is a collection of tuples and you want to know if that particular tuple is present. _Or_ you have a list of integers and you want to know if all of the elements in the tuple are also in the list?
[21:53:07] <InPhase> badsektor: And what is the value of i?
[21:53:25] <badsektor> i is in a for loop, you know what i will just have two separqte lists for x and y
[21:53:32] <InPhase> badsektor: Do a print(i) right before the list to be sure.
[21:53:33] <mav`rik> Imk0tter: long term in what manner?
[21:53:38] <InPhase> badsektor: I mean, right before the if.
[21:53:42] <badsektor> ok
[21:54:22] <InPhase> badsektor: I'm going to bet you're doing for i in traverselist, and that i is your elements instead of an index.  But let's see the output.  :)
[21:54:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[21:54:59] <jinsun> BrokenCog: hmm, a bit confusing description, so hard to imagine how your df looks, but .iloc[0] will give you one row, not a column, and row.name will have the data from the index
[21:55:01] <badsektor> InPhase: it prints tuples
[21:55:15] <InPhase> badsektor: Yep.
[21:55:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:55:33] <InPhase> badsektor: So did you do what I guessed?
[21:55:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[21:56:07] <badsektor> InPhase: yes, it is a for i in traverselist: if(x,y) == traverselist[i]: return 1
[21:56:07] <BrokenCog> jinsun: yes, iloc[0] prints the data in a format of: ColName: data, one line per column with the last being "Name: <dateinfo>" which is the index. I'm not using row.name
[21:56:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:56:24] <mav`rik> badsektor: then you should be able to do if (x,y) == i:
[21:56:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:56:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[21:56:34] <badsektor> mav`rik: oh of course!
[21:56:53] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[21:56:58] <BrokenCog> jinsun: and, one of the lines is "datetime: <dateinfo>" which is the duplicate of of Name, presumably because I did df.set_index(['datetime'])
[21:57:26] <InPhase> badsektor: Maybe change that from i to e (where e means element) to make it a little clearer.
[21:57:52] *** Joins: bahamas (~lucian@84.232.140.158)
[21:58:11] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[21:58:31] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:58:44] *** dcaro is now known as dcaro_away
[21:58:47] <badsektor> InPhase: right i was totally confused about it, i thought i is index number
[21:59:11] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[22:00:07] <jinsun> BrokenCog: a bit weird, set_index removes the column and puts it in the index, doesn't keep it in both places, unless you used drop=False
[22:00:23] <BrokenCog> let me dcheck
[22:00:39] <BrokenCog> no, df.reset_index(drop=True, inplace=True)
[22:00:40] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:00:47] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-219-172.wlan.tudelft.nl) (Ping timeout: 252 seconds)
[22:00:47] <jinsun> BrokenCog: but anyway that is not the question I guess? I didn't understand if there was a question
[22:00:49] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Quit: Leaving)
[22:01:05] *** Joins: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de)
[22:01:22] *** Quits: ivanf (~ivan@user/ivanf) (Remote host closed the connection)
[22:01:24] *** Joins: upsala (~zcb@185.209.196.134)
[22:01:34] <BrokenCog> partly ... I'm trying to figure out why my efforst don't make the index behave as I anticpiate :)>
[22:02:27] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[22:02:43] <BrokenCog> jinsun: https://termbin.com/jmne
[22:03:05] <jinsun> BrokenCog: oh reset_index is different from set_index, that will set your index to 0,1,2,.... and move the index to one of the columns
[22:03:20] <BrokenCog> ahhhh.
[22:04:08] <jinsun> but since you had drop=True it doesn' put the index in columns it just throws it away
[22:05:08] *** Joins: matsaman (~matsaman@user/matsaman)
[22:05:16] <badsektor> guys this is for adventofcode 2016 day1, part2, https://bpa.st/PAKA .. please give me notes
[22:06:05] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:06:05] *** Quits: Syzygy (~Syzygy@213142096160.public.telering.at) (Read error: Connection reset by peer)
[22:06:12] <badsektor> the input is like L1, R3, L5, L2, as in turn right and walk 3 steps, then turn left, etc, and you need to tell when you first visit a block you visited earlier
[22:08:39] <badsektor> amazing how function final() can access x and y in the main function
[22:09:15] <badsektor> it should actually be called final(x,y) but i called it final() but it worked anyway, how so?
[22:09:27] <matsaman> badsektor: NESW has a constant relationship for each pair in either direction, so you don't strictly have to hardcode all those relationships
[22:09:49] <jinsun> badsektor: because you didn't have a main function, your x and y are global
[22:10:02] <badsektor> hmmm
[22:10:08] <BrokenCog> badsektor: look at line 39 and 40.  that declares x and y as GLOBAL
[22:10:09] <mav`rik> badsektor: checktraverse could probably be reduced to `return (x, y) in traverse`
[22:10:26] <badsektor> cool
[22:10:29] <matsaman> badsektor: all the if facing stuff in the final loop looks pretty duplicated
[22:11:16] <mefistofeles> ↑
[22:11:31] *** Joins: y04nn (~y04nn@2a03:1b20:1:e011::a19e)
[22:11:57] *** Quits: y04nn (~y04nn@2a03:1b20:1:e011::a19e) (Remote host closed the connection)
[22:12:22] <badsektor> matsaman: yeah it is ugly
[22:12:35] *** Joins: LAVBoy (~LAVBoy@0896332783.static.corbina.ru)
[22:13:01] <badsektor> welp, it works olol
[22:13:22] <mefistofeles> badsektor: oh sure, but you wanted notes :p
[22:13:26] <badsektor> :D
[22:13:51] <mav`rik> badsektor: more a performance thing than anything, but I'd probably use a set rather than a list for tracking where you've traversed. Membership checks are faster for larger groups of values, and there are a few other things you could then do.
[22:14:07] <badsektor> i will look up sets, thanks
[22:14:36] <badsektor> thanks a lot guys i will bother you again another time
[22:14:39] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[22:15:06] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:ae35:29ba:a5e:b3d2) (Quit: No Ping reply in 180 seconds.)
[22:15:22] <mefistofeles> :/
[22:15:26] <mefistofeles> that was weird, right?
[22:16:01] *** Joins: nomic (~nomic@185.217.117.249)
[22:16:19] *** Joins: dclxvi (~dclxvi@2a02:8084:84:4100:9932:768:517e:6102)
[22:16:38] *** Joins: ham5urg (~ham5urg@p200300d1673dce00b04be155a3a3d7ca.dip0.t-ipconnect.de)
[22:16:59] <BrokenCog> solving his homework.
[22:17:12] *** Joins: ivii (~ivan@user/ivii)
[22:17:28] <mefistofeles> yeah, probably
[22:17:35] <mav`rik> aoc is more "personal advancement" than homework, and it doesn't seem bad to get the opinions of people you look up to, or have more experience than you
[22:17:37] *** Quits: ham5urg_ (~ham5urg@p5ddfc07e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[22:17:55] *** Joins: zacts (~zacts@user/zacts)
[22:18:16] *** Joins: fluiD (~fluiD@161.97.236.182)
[22:18:23] <Barones> is it pythonic to use try-except blocks in everything or Can I use conditional to handle wrong behavior? The context is Im defining def get_change(amount_of_money, money_to_be_spent), I want to handle the situation that money_to_be_spent is bigger than amount_of_money, would I do it in try-exception or conditionals?
[22:18:57] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[22:19:00] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:19:19] <han-solo> that seems like a job for guard `if`
[22:19:43] <fluiD> anyone here have any experience with AstroPy?
[22:20:15] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[22:20:48] *** Joins: b10n1k (~iob@dynamic-2a00-1028-8390-9e8a-0000-0000-0000-92cb.ipv6.o2.cz)
[22:20:55] <mefistofeles> fluiD: just the bare minimum, it's been years since I last used it, but feel free to ask your question
[22:21:09] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[22:21:13] *** Joins: ErkiS (~opera@85.253.137.91.cable.starman.ee)
[22:22:28] *** Joins: ThanatosJ (~Thanatos@105.112.189.65)
[22:22:54] <fluiD> I moved code from one computer to another. Now it seems convinced that the sun is always at a declination of just a couple of degrees.
[22:23:42] *** Joins: upsala (~zcb@185.209.196.134)
[22:23:53] *** Quits: Thanattt (~Thanatos@105.112.189.65) (Ping timeout: 252 seconds)
[22:24:21] <fluiD> I keep changing the time and the sun does move, but only a couple of degrees at most.
[22:24:36] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[22:24:56] *** Joins: trashbird (~trashbird@user/trashbird)
[22:25:13] <BrokenCog> fluiD: what are you getting your geolocation data from?  a USB GPS?
[22:25:15] <fluiD> The code worked on a different computer. I don't know why it would be different
[22:25:17] <SnoopJ> Barones, I would probably write an `if` for that, e.g. `if (money_to_be_spent > amount_of_money): raise ValueError("Spend amount is higher than available money")`
[22:25:19] <BrokenCog> IP address?
[22:25:20] <fluiD> Manually typed in.
[22:25:32] <BrokenCog> check you typed it correctly/the same.
[22:25:35] <Imk0tter> is there an easy way to iterate two sets simultaneously given they have the same number of elements?
[22:25:41] *** Joins: grooverman_ (~grooverma@189.110.77.226)
[22:25:59] <fluiD> BrokenCog, oh... I forgot to apply units. That will make a difference
[22:26:06] <SnoopJ> Imk0tter, `for Avalue, Bvalue in zip(setA, setB): ...`
[22:26:07] <phy1729> Probably can zip, but sets don't have a specified order
[22:26:08] <BrokenCog> indeed.
[22:26:31] <SnoopJ> but yea, sets don't have order so if the order matters, you may want to convert them to tuples/lists first
[22:26:32] *** Quits: rwb (~augh@alogs.space) (Quit: ZNC - https://znc.in)
[22:26:38] <Barones> nice, thanks SnoopJ
[22:26:44] *** Joins: rwb (~augh@alogs.space)
[22:27:07] *** Joins: grooverman__ (~grooverma@152.250.164.233)
[22:27:10] *** Quits: grooverman_ (~grooverma@189.110.77.226) (Read error: Connection reset by peer)
[22:27:31] <SnoopJ> Barones, the distinction I'd make here is that try/except is what you want when an "exceptional" condition will occur somewhere else that brings an exception the code you're writing, and you want to handle that.
[22:27:45] *** Quits: dclxvi (~dclxvi@2a02:8084:84:4100:9932:768:517e:6102) (Ping timeout: 252 seconds)
[22:28:15] <fluiD> Scratch that, I do have units properly set.
[22:28:34] <SnoopJ> e.g. `try: result = might_fail(data); except ValueError as exc: handle_error(exc)`
[22:28:53] <SnoopJ> but there aren't hard rules about when to use one or the other :)
[22:28:57] *** Quits: grooverman (~grooverma@152.250.149.217) (Ping timeout: 240 seconds)
[22:29:06] *** Joins: src (~src@user/src)
[22:29:58] *** Joins: bahamas (~lucian@84.232.140.158)
[22:29:59] *** Quits: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660) (Ping timeout: 260 seconds)
[22:30:13] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Quit: leaving)
[22:30:32] *** Joins: kostkon_ (~androirc@2a02:1388:97:596:bd22:5c0c:7fc3:990c)
[22:30:49] <fluiD> I change my time by 6 hours and the sun moves 0.015 degrees
[22:31:06] <mav`rik> Imk0tter: what are you trying to achieve with your two sets?
[22:31:13] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[22:32:18] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[22:32:46] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Remote host closed the connection)
[22:32:47] *** Quits: ham5urg (~ham5urg@p200300d1673dce00b04be155a3a3d7ca.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:32:55] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[22:33:31] <SnoopJ> fluiD, perhaps you can share a short program that reproduces the problem?
[22:33:35] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[22:33:37] *** Quits: ThanatosJ (~Thanatos@105.112.189.65) (Read error: Connection reset by peer)
[22:34:36] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[22:35:03] <fluiD> Here's what I'm getting: https://paste.ofcode.org/p3GJMSS6JSCqLEXHv5v8S
[22:35:22] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[22:35:38] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[22:35:50] *** Joins: audio (~audio@user/audio)
[22:35:51] *** Joins: ivanf (~ivan@user/ivanf)
[22:36:04] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:36:50] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[22:37:12] *** Joins: Wh0 (~V@103.249.234.63)
[22:37:27] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[22:37:50] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[22:37:52] <SnoopJ> fluiD, where does `Time` come from?
[22:38:01] <fluiD> Astropy.Time
[22:38:09] *** Joins: jpn (~jpn@user/jpn)
[22:40:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:40:23] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[22:40:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:40:33] <fluiD> I did verify that the t variable does change by 6 hours
[22:40:43] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[22:41:01] <SnoopJ> fluiD, what is u.deg?
[22:41:24] <fluiD> Astropy.Units
[22:41:31] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[22:41:33] <fluiD> just defines the number as being in degrees
[22:41:42] <SnoopJ> makes sense. This is why a complete program is helpful
[22:42:19] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[22:42:37] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:42:41] *** Quits: Elzington_ (~Elzington@66.63.167.156) (Quit: Leaving)
[22:42:56] <SnoopJ> hm, I can see that class but I can't work out the parts that are missing.
[22:43:27] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:43:44] <fluiD> Let me get a better example. I'm also running the same code on the computer that is working.
[22:43:46] *** Joins: polyrob (~rob@user/polyrob)
[22:43:49] *** Joins: jpn (~jpn@user/jpn)
[22:44:30] *** Joins: rootx74 (~root@2001:19f0:5:446d:5400:3ff:feea:eab7)
[22:45:33] *** Joins: marcello42 (~mp@p5084bed4.dip0.t-ipconnect.de)
[22:45:55] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[22:46:09] <AhmedAmerican> how to make sure that my string contains digits and hyphen.
[22:46:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[22:46:26] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 260 seconds)
[22:46:39] *** Joins: zrsm (~mrrobot@173.171.254.123)
[22:47:01] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[22:47:11] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:47:30] <AhmedAmerican> `bool(re.match('[\d-]+$', '2015-07-01'))` return True because there's `digits` and `-`
[22:47:54] <AhmedAmerican> but `bool(re.match('[\d-]+$', '20150701'))` will also return `True`, how to tell that it must contains digits and hyphen ?
[22:48:30] <mav`rik> AhmedAmerican: would you instead prefer to parse the string as if it were a date, rather than check if it contains digits and hyphen?
[22:48:59] <AhmedAmerican> nope am not dealing with a date.
[22:49:10] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:49:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:49:27] <AhmedAmerican> it can be like that `301562-22`
[22:49:56] <fluiD> probably two different re.match() commands
[22:50:07] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[22:50:19] *** Joins: ano (~ano@user/ano)
[22:50:40] <mav`rik> AhmedAmerican: does it matter how many hyphens, or where they sit?
[22:50:51] *** Joins: plastico (~plastico@neomutt/plastico)
[22:50:56] *** Quits: Staunch (~Staunch@134.238.165.172) (Remote host closed the connection)
[22:51:00] <AhmedAmerican> it should contain 1 hyphen only and many digits
[22:51:13] <mav`rik> AhmedAmerican: can the hyphen be at the start, or end?
[22:51:15] <AhmedAmerican> DD-DD or DD-DDDD
[22:51:23] *** Quits: rootx74 (~root@2001:19f0:5:446d:5400:3ff:feea:eab7) (Ping timeout: 252 seconds)
[22:51:23] <AhmedAmerican> it's vary
[22:51:27] *** Joins: rootx74_ (~root@2001:19f0:5:446d:5400:3ff:feea:eab7)
[22:51:29] <AhmedAmerican> DDDDD-DD
[22:51:45] <AhmedAmerican> it always should be between digits.
[22:51:47] *** Joins: Elzington (~Elzington@66.63.167.156)
[22:51:57] <mav`rik> AhmedAmerican: r"\d+-\d+$"
[22:52:03] <audio> it's said that a numpy array with shape (100, 369, 375, 3) has 4 dimensions, but it is also said that the 4th dimension in this case, 3, is itself 3 dimensional. this is confusing. can someone elucidate this for me?
[22:52:43] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[22:52:49] <fluiD> AhmedAmerican, [0-9][0-9]*-[0-9][0-9]* assuming you want at least one digit on each side of the hyphen
[22:53:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:54:16] <mav`rik> AhmedAmerican: however, to be more proper and not match "unusual" digit types (because unicode has quite a few in the digits class) r"[0-9]+-[0-9]+$" if what you want is decimal digits only
[22:54:37] *** Parts: ErkiS (~opera@85.253.137.91.cable.starman.ee) ()
[22:55:18] *** Stench is now known as Staunch
[22:55:41] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[22:56:02] <SnoopJ> audio, the number of dimensions is the number of entries in the shape. 3 here is the "size" (in numpy jargon) of that dimension.
[22:56:09] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[22:56:12] <audio> SnoopJ, thanks
[22:56:33] <audio> SnoopJ, but if we were speaking mathematically, how would we think of "size"?
[22:56:41] <audio> out of curiosity
[22:56:49] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[22:56:52] <SnoopJ> audio, I don't really know what you mean.
[22:58:10] <audio> SnoopJ, the shape i gave as an example (100, 369, 375, 3) is a real example of something i'm dealing with, a set of images, and the last dimension, 3, represents the 3 RGB channels of the image
[22:58:32] <SnoopJ> audio, I work with data like this on a daily basis. What is your question?
[22:58:38] <audio> SnoopJ, mathematically, wouldn't we think of this vector of having 3 dimensions?
[22:58:51] <audio> rather than a size of 3 as numpy would put it?
[22:58:52] <SnoopJ> audio, mathematically speaking we would consider the entire image as a tensor
[22:59:32] <audio> right
[22:59:46] <SnoopJ> perhaps you'd understand it if I said it's a tensor product: R^b x R^w x R^h x R^c where b,w,h,c are batch size, width, height, and number of colors?
[23:00:02] <SnoopJ> err, tensor product is probably the wrong terminology, I mean the space the tensors "live" in
[23:00:20] *** Joins: velix (~velix@user/velix)
[23:00:34] <SnoopJ> it might also help to remember that the data is all 1D in memory, and numpy uses shape information to re-interpret that data
[23:01:07] <velix> While this works fine, I'd love to add [ '/usr/bin/env', 'bash', '-c' ... ] to it, but it doesn't work. How do I correctly set the bash interpretor? https://bpa.st/WJZQ
[23:01:43] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[23:01:50] <SnoopJ> oh wait no, tensor product is the right term, but it can be used for either vector spaces or vectors themselves
[23:02:07] <audio> SnoopJ, maybe you can help me with the problem i'm currently having (unrelated to the question)
[23:02:34] <audio> SnoopJ, have you ever used tensorflow?
[23:02:51] <SnoopJ> yep
[23:02:54] <audio> SnoopJ, https://bpa.st/CMPQ
[23:03:05] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[23:03:06] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:03:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:04:11] <audio> i'm trying to build up images_list and labels_list to have all of the 309k images/labels, but my code only makes it so that there are 100 items. Oops, disregard the .take(1). let me do a new paste
[23:04:31] <audio> https://bpa.st/ZABA
[23:04:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:04:32] <velix> Could anyone please have a quick look? Sorry for annoying you
[23:05:04] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[23:05:45] <mav`rik> velix: isn't it up to the script itself to determine she shell?
[23:05:52] <mav`rik> s/she/the/
[23:06:15] <audio> SnoopJ, how can i get all the 309k items?
[23:06:31] <audio> i've tried np.append, np.concatenate, now np.stack, with the help of someone here
[23:06:41] <velix> mav`rik: Yeah, it has a #!shebang. I just was just curious, how to add it from outside. To make it more portable.
[23:07:02] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:07:17] *** Joins: iflema_ (~ian@user/iflema)
[23:07:23] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[23:07:26] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[23:07:32] *** Quits: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:a53e:3ddf:531b:d987) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:07:55] <SnoopJ> audio, that sounds like you want to load the images themselves rather than load them into batches?
[23:08:01] *** Joins: ExpiredKebab (~sgreadly@2407:7000:89aa:b303:2821:d42:df49:416)
[23:08:09] <han-solo> velix: i'm curious, how is `[ '/usr/bin/env', 'bash', '-c' ... ]` failing ?
[23:08:15] <audio> SnoopJ, no, they need to be numpy arrays
[23:08:16] *** Joins: cheater (~Username@user/cheater)
[23:08:18] <mav`rik> velix: you can prefix the command with whatever you need. But the script is going to be written in a language that only it knows to be a given format, so why not leave it to the script itself?
[23:08:24] <audio> SnoopJ, wait, yea
[23:08:25] <SnoopJ> audio, I mean loading them as numpy arrays
[23:08:51] <SnoopJ> audio, the extremely naïve solution is to make the batch_size equal to the number of images and load them all into one great big batch which you can bust out into smaller batches as needed.
[23:08:51] *** Joins: frannk (~frannk@186.249.21.18)
[23:09:01] <velix> han-solo: 1 sec, the VPN kicked me.
[23:09:05] <SnoopJ> The way you're currently doing it is going to be S L O W because you're doing so much reallocation/etc.
[23:09:25] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[23:09:30] <velix> mav`rik: sure. I just wanted to figure this out ;)
[23:09:43] <han-solo> but as mav`rik if your script have that shebang, it should be fine
[23:09:47] <audio> SnoopJ, i tried that earlier, but that was without numpy-ization. let me try again
[23:10:09] <audio> SnoopJ, numpyization -> converting lists into numpy arrays
[23:10:14] <audio> that's not vectorization is it?
[23:10:32] <velix> han-solo: 127  1100101: processing.sh: Command not found.
[23:10:37] <SnoopJ> no, vectorization refers to "doing something" (like an arithmetic operation) to many elements of an array at once
[23:11:01] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:12:44] <velix> han-solo & mav`rik: I am stupid! Thanks for help.
[23:13:19] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:13:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[23:13:43] <velix> The "-c" was wrong of course :D
[23:13:55] *** Joins: Staunch (~Staunch@134.238.165.172)
[23:14:02] <SnoopJ> audio, i.e. the naïve way to add 1 to every element of an array is to loop over the array and add 1 to each element. This is slower than doing it N elements at a time, often using SIMD instructions on the particular CPU
[23:14:15] <SnoopJ> most of numpy's job is handling stuff like this
[23:14:39] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Read error: Connection reset by peer)
[23:14:43] *** Joins: cdown_ (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:14:45] *** cdown_ is now known as cdown
[23:15:23] *** Joins: widp (~widp@124.123.106.12)
[23:16:28] *** Quits: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[23:16:48] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:17:22] <KnowledgeShark> Greetings SnoopJ, and others here! Good afternoon; I am learning how to create a write_log() function from a stack article. My attempts to create a working printing -> dbf04.log has failed so far. The code runs without traceback; however no dbf04.log gets created or an empty file doesn't get written/appended to. My dpaste is here: https://dpaste.com/AQRV5YX7Y ; any help is greatly appreciated! Thanks in advance! :)
[23:17:50] *** Joins: wolfdale8 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:18:37] <SnoopJ> KnowledgeShark, when you're using the .write() API, the contents will only get written to the file when you .flush() or .close() the file. This is one of the main reasons not to use this API, because it's annoying to keep track of when you have to do this.
[23:18:38] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:19:13] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Remote host closed the connection)
[23:19:44] <SnoopJ> The `logging` module is really good and can do this with a handler that outputs to a file. Highly recommend it.
[23:20:02] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 240 seconds)
[23:20:06] *** Quits: Staunch (~Staunch@134.238.165.172) (Remote host closed the connection)
[23:20:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[23:20:28] *** Joins: pmcnabb5 (~pmcnabb@user/pmcnabb)
[23:20:28] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:20:53] <KnowledgeShark> SnoopJ: With that said sir, would this be on line #15 ? And duly note on the logging module. Would you recommend a working example of said module?
[23:21:24] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 240 seconds)
[23:21:24] *** pmcnabb5 is now known as pmcnabb
[23:21:27] *** Joins: slav0nic (slav0nic@python.su)
[23:21:33] <SnoopJ> The documentation has a nice tutorial: https://docs.python.org/3.8/howto/logging.html#logging-basic-tutorial
[23:21:39] *** Quits: kostkon_ (~androirc@2a02:1388:97:596:bd22:5c0c:7fc3:990c) (Ping timeout: 252 seconds)
[23:21:43] <KnowledgeShark> SnoopJ: Much appreciated! :)
[23:21:45] <KnowledgeShark> Thank you
[23:21:49] *** Joins: justOkay (~justache@user/justache)
[23:21:56] *** Joins: jpn (~jpn@user/jpn)
[23:22:08] *** Joins: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660)
[23:22:18] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:22:27] <SnoopJ> KnowledgeShark, line 15 doesn't make sense to me. Actually, this whole paste doesn't make sense to me. You never call log_file(), so I would expect a NameError at Line 13 (coming from the call at Line 18)
[23:23:11] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[23:23:33] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[23:23:37] <KnowledgeShark> SnoopJ: Line 18 should read: "log_file('log_file now written...') as remedy?
[23:23:40] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[23:23:45] *** Quits: frannk (~frannk@186.249.21.18) (Quit: leaving)
[23:24:00] <SnoopJ> that would produce a non-empty file, at least. The paste still doesn't make sense to me, though.
[23:24:08] <Kaedenn> Using only what Python 2.7 provides in the standard library (on a production system that doesn't have pip), how do I implement a timeout on a subprocess invoked with subprocess.Popen?
[23:24:15] *** Joins: frannk (~frannk@186.249.21.18)
[23:24:30] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:fdd5:f352:87eb:3be3) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:24:34] <Kaedenn> I need to kill the process after five seconds.
[23:24:42] <Kaedenn> The invoked child process, that is
[23:24:47] <KnowledgeShark> SnoopJ: Do you know of a working example of this .write() API for logging?
[23:25:11] <SnoopJ> Kaedenn, you could start the process and poll() it yourself, calling terminate() or kill() as needed.
[23:25:22] *** Quits: frannk (~frannk@186.249.21.18) (Client Quit)
[23:25:31] <Kaedenn> That's a good idea, because I don't use .communicate()
[23:25:34] *** Joins: frannk (~frannk@186.249.21.18)
[23:25:56] <SnoopJ> KnowledgeShark, I don't really know what you're trying to do, so no, I don't have any recommendation
[23:26:17] *** Quits: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[23:26:26] <Kaedenn> actually, I do use .communicate. I can see what I can do to get the stdout and stderr
[23:26:31] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[23:27:02] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[23:27:05] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[23:27:16] *** Joins: flower__ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[23:27:37] <KnowledgeShark> SnoopJ: I am looking for a way to output prints (even if it's re-writing them) so they all go to a .log file. I want to be able to run my program looping and have prints that output to a log that keeps track of my progress through the json batch processing. And then I intend to "tail -f python.log" and watch live as it's running; rather than prints & inputs. Like WGET is capable of.
[23:28:11] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:28:18] <SnoopJ> KnowledgeShark, my main suggestion for logging would be to use the logging module. It has already solved a lot of the problems you will face if you want to write your own from scratch.
[23:28:31] *** Joins: joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:b592:2856:39c5:889e)
[23:28:43] *** Joins: Staunch (~Staunch@134.238.184.213)
[23:28:57] <KnowledgeShark> SnoopJ: Thank you. I will read the tutorial. Thank you for your time and expertise.
[23:29:20] <SnoopJ> KnowledgeShark, case in point: the logging module can make the `tail` step unnecessary altogether, because a Logger in that library can output to multiple places (i.e. the terminal *and* a file) at once.
[23:29:30] *** Joins: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com)
[23:29:55] <KnowledgeShark> SnoopJ: Even better! Great to know. You have convinced me it's the better route.
[23:29:55] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[23:30:45] *** Quits: Wh0 (~V@103.249.234.63) (Quit: Leaving)
[23:31:18] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:31:31] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:31:33] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:af5f:77d2:3c1:32bb) (Quit: pvergain)
[23:32:05] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[23:32:11] <Kaedenn> Does a return inside of a try...finally block skip the finally block?
[23:32:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:c45b:6de3:6013:2c08) (Ping timeout: 240 seconds)
[23:32:19] <SensibleSalmon[m> KnowledgeShark SnoopJ I also recommend the package 'loguru'--bit more intuitive than just logger, and has pretty colors
[23:32:19] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:26] <Tat> No.
[23:32:31] <han-solo> Kaedenn: no
[23:32:37] <Kaedenn> kk, thanks
[23:32:45] <SnoopJ> yea, there are a variety of not-logging choices that provide other features. I've tried a few, not super keen on them, but they have their target audience
[23:32:48] <Tat> You must *always* run a finally. Returns don't change that.
[23:33:11] <SnoopJ> (we use `eliot` and `coloredlogs` in a few projects at $employer)
[23:33:31] <SnoopJ> although the latter is more like a plugin for `logging` than a replacement
[23:33:46] <tarel2> How do you find where pip install python-docx-0.8.11 , I'm the pi os , Debian based ?
[23:34:05] <Tat> python needs a logger that will, if asked, run arbitrary code for bewildering reasons. This is why java's better than python.
[23:34:10] <tarel2> the location of the folder or files , new to pythong
[23:34:36] <han-solo> tarel2: which pip is that ?
[23:34:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[23:34:58] <mav`rik> Tat: are we trolling about Log4J's recent debacle?
[23:35:18] <SnoopJ> Tat, it wouldn't be too hard to write a subclass of Logger that was susceptible to Log4Shell. I wouldn't be surprised if someone has already done exactly that for the cheap-joke appeal
[23:35:49] <SnoopJ> (and probably someone somewhere has a non-ironic (and cursed?) reason to want JNDI in Python)
[23:35:51] <tarel2> pip 20.3.4
[23:36:22] <han-solo> tarel2: `python3 -c 'import docx; print(docx.__file__)` # maybe
[23:36:29] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[23:36:32] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:36:36] <han-solo> otherwise try with the other pythons you likely have
[23:36:43] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[23:36:50] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 260 seconds)
[23:37:00] *** Quits: rootx74_ (~root@2001:19f0:5:446d:5400:3ff:feea:eab7) (Ping timeout: 240 seconds)
[23:37:04] <zrsm> o\
[23:37:23] *** Joins: rootx74 (~root@108.61.89.107)
[23:38:29] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[23:38:48] <SnoopJ> ah interesting, `loguru` is also partially interoperable with `logging` without being based on it. Neat.
[23:40:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:41:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[23:41:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:42:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:42:33] *** Joins: magla (~gelignite@d53678fd.access.ecotel.net)
[23:42:33] *** Quits: cdown (~cdown@cpe-98-15-154-102.hvc.res.rr.com) (Ping timeout: 252 seconds)
[23:42:43] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[23:42:53] <tarel2> han-solo , thanks so much , found it .   So bad at finding stuff in Linux
[23:43:17] *** Quits: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:43:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:43:31] *** Quits: LAVBoy (~LAVBoy@0896332783.static.corbina.ru) (Ping timeout: 256 seconds)
[23:43:54] <han-solo> tarel2: there's also `python3 -m site` which will show the locations it will search for modules
[23:44:57] <SensibleSalmon[m> SnoopJ: yeah, IIRC it's supposed to be a near-drop-in replacement. Provides neat multiprocess goodness too, which I've found very useful.
[23:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:08] <SnoopJ> SensibleSalmon[m, can you say more?
[23:45:17] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[23:45:28] <Imk0tter> is there anyway to draw from one canvas to another with tkinter?
[23:45:37] *** Joins: shad (~shad@user/shad)
[23:45:38] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Quit: leaving)
[23:45:42] *** Joins: unyu (~pyon@user/pyon)
[23:45:47] <SensibleSalmon[m> SnoopJ: does automagical queueing stuff under the hood so you can send log messages from worker processes back to parent process with minimal boilerplate.
[23:45:47] *** Joins: djapo (~archangel@user/djapo)
[23:46:31] <SensibleSalmon[m> Works best with sharing-by-inheritance, which is common but I imagine would be complicated for more distributed systems, but that was my original draw to it; was instrumenting a multiprocess workflow and wanted a single log sink.
[23:46:33] <SnoopJ> sounds interesting. cc grym ^ and: https://github.com/Delgan/loguru#asynchronous-thread-safe-multiprocess-safe
[23:47:08] *** Joins: c_89 (~c_89@151.54.144.26)
[23:47:34] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[23:47:47] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:48:55] *** Joins: llh (~UPP@user/llh)
[23:49:08] *** Joins: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81)
[23:49:54] <KnowledgeShark> SensibleSalmon[m: Thank you for the package recommendation. I like colors as well as functionality. :)
[23:49:59] *** Joins: thevar1able (~textual@144-178-79-140.static.ef-service.nl)
[23:50:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[23:51:17] <SensibleSalmon[m> np!
[23:51:27] <KnowledgeShark> SensibleSalmon[m: Such as running 10 different .py's and all of them being reported to 1 central logging output?
[23:52:25] <SensibleSalmon[m> KnowledgeShark: the structure I use it in is `python -m my_module_with_a_main`, which spawns ~2 dozen `Process()` style children, who all report back to the original console-and-log-file sink.
[23:53:19] <KnowledgeShark> SensibleSalmon[m: That is above my full understanding at this time. It reads more advanced than my question I gather.
[23:53:36] *** Quits: thevar1able (~textual@144-178-79-140.static.ef-service.nl) (Client Quit)
[23:53:48] <KnowledgeShark> SensibleSalmon[m: Thank you again. I will spend the day learning of logging and read about loguru also.
[23:53:55] <KnowledgeShark> SnoopJ: Again, thank you!
[23:54:01] *** Quits: mwichmann_ (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[23:55:08] *** Joins: parv (~quass@user/parv)
[23:55:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:55:16] *** Joins: stockholm (~Andreas@p200300d2c70a98008cf092380e131bc0.dip0.t-ipconnect.de)
[23:55:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:55:24] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[23:55:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:55:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:55:54] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:57:24] *** Quits: treason (~treason@2a02:c7e:3456:c900:e511:7234:1ba:ec81) (Remote host closed the connection)
[23:57:25] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 250 seconds)
[23:58:33] *** Joins: GiovanniBF (~Giovanni@45.86.202.164)
[23:59:06] *** Quits: GiovanniBF (~Giovanni@45.86.202.164) (Client Quit)
[23:59:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[23:59:19] *** Joins: GiovanniBF (~Giovanni@45.86.202.164)
