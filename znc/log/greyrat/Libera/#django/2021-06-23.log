[05:26:58] <Batzy> FunkyBob well i fixed it
[05:27:01] <PaulWay[w]> There are two bad signs in a project.  One is PHP.  The other is MySQL.
[05:27:01] <Batzy> you tend to be purposefully dense
[05:27:09] <Batzy> what is so wrong with mysql?
[05:27:14] <FunkyBob> Batzy: you never showed us anything... what could we do?
[05:27:26] <FunkyBob> I tried to ask for your traceback... you just gave terse answers
[05:27:34] <Batzy> FunkyBob explain why django refuses to use another db engine maybe
[05:27:37] <FunkyBob> so fuck off with your "purposefully dense" bullshit
[05:27:41] <Batzy> but besides that i fixed it quickly after you replied
[05:27:44] <PaulWay[w]> Well, apart from being bought out by Oracle and having to fork.
[05:27:47] <Batzy> hense the terseness
[05:27:48] <Batzy> hence*
[05:27:49] <PaulWay[w]> Steady there FunkyBob :-)
[05:28:06] <PaulWay[w]> I just think it's been pretty ordinary as a database engine.
[05:28:08] <Batzy> PaulWay[w] i am sort of forced into it, it works well enough
[05:28:18] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[05:28:19] <Batzy> PaulWay[w] django has 2 choices
[05:28:22] <Batzy> actually
[05:28:48] <PaulWay[w]> It works, yes.
[05:30:08] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:33:00] *** Joins: Skyz (~Skyz@user/skyz)
[05:33:14] <FunkyBob> PaulWay[w]: well, given it's included in all the CI tests... yeah, it works...
[05:33:26] <FunkyBob> so we know the drivers work, and django's integration with them works...
[05:33:55] <bparker> there's plenty of existing docker containers that run django/db/webserver
[05:34:00] <FunkyBob> sure
[05:34:06] <bparker> I've used some and written some
[05:34:30] <FunkyBob> so whatever the issue is... it's something in Batzy's config. But to find out, we'd need to see it... and the traceback.
[05:34:51] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 265 seconds)
[05:36:08] <bparker> at least with debian-based distros, the only thing you really need to install mysqlclient via pip is the libmysqlclient-dev OS package, besides the usual build-essential etc.
[05:36:33] <bparker> my Dockerfiles do just that
[05:36:36] <bparker> and they work
[05:36:46] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:37:22] <Batzy> bparker got a django+mysql+nginx i can use? :)
[05:37:54] <bparker> https://www.google.com/search?q=docker+django+nginx+github
[05:38:02] <bparker> take your pick
[05:38:37] <FunkyBob> for apk stuffs... we use mariadb-client and mariadb-dev to be able to build mysqlclient
[05:39:02] <FunkyBob> we use a 2-stage build so we don't pull in the compiler, dev packages, etc, to the final image
[05:40:57] *** Joins: diek (~diek@187.36.4.113)
[05:41:03] <Batzy> who is we
[05:41:27] <FunkyBob> my dayjob
[05:41:32] <FunkyBob> it's not a django project, however
[05:41:36] <Batzy> mm
[05:47:16] *** Quits: Skyz (~Skyz@user/skyz) (Ping timeout: 246 seconds)
[05:48:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[05:48:37] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[05:50:50] *** Quits: yanchai (~yanchai@124.105.86.225) (Ping timeout: 252 seconds)
[05:54:54] *** Joins: skyz (~skyz@user/skyz)
[05:59:44] *** Joins: diek (~diek@187.36.4.113)
[06:00:11] *** skyz is now known as skyzone
[06:00:46] *** skyzone is now known as skyztwo
[06:00:54] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:02:24] *** skyztwo is now known as skyz
[06:04:27] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[06:07:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:12:38] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[06:14:53] *** Quits: skyz (~skyz@user/skyz) (Quit: Client closed)
[06:21:42] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[06:23:25] *** Joins: doc|work (~doc@user/doc)
[06:26:20] <doc|work> Hi, so I'm moving a few models into separate apps and followed https://realpython.com/move-django-model/#the-short-way-reference-the-new-django-model-to-the-old-table to have it ignore the actual migrations when run, but when I try to migrate it to get everything squared away I get The field XYZ was declared with a lazy reference to 'customuser.user', but app 'customuser' isn't installed - it is listed in the settings.INSTALLED_APPS though. Anyone know how to fix
[06:26:21] <doc|work>  this?
[06:33:14] <PaulWay[w]> Feels like this is a lot more complicated than a 'simple move'...
[06:35:06] <FunkyBob> at first it looked like "some Fkeys are referring to it, and thigns are messy" ... but when there's a custom user involved... whoo-boy
[06:45:26] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 268 seconds)
[06:46:35] <doc|work> I never said simple move :)
[06:46:51] *** Joins: Croves (~Croves@2804:14c:578b:9102:b1c6:fb69:47f1:6720)
[06:47:05] <doc|work> I have a project that had all the models in one app, now trying to fix that.
[06:47:16] <doc|work> shouldn't be anything majorly crazy though I think
[06:47:21] *** Parts: Croves (~Croves@2804:14c:578b:9102:b1c6:fb69:47f1:6720) ()
[06:49:12] *** Joins: diek (~diek@187.36.4.113)
[06:50:29] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[06:59:29] <FunkyBob> doc|work: ok, and you've updated all the Fkey and M2M and OneToOne field references, also?
[06:59:33] <FunkyBob> for the new app labels
[07:00:28] <doc|work> FunkyBob, yep
[07:02:40] <doc|work> do I need to set app_label on the models? I've set db_table to match the existing tables, and one thing I found in a search about this suggested app_label on the customer user models but it didn't change anything.
[07:04:37] <FunkyBob> no, it should be implied by the app they're imported from
[07:05:50] * doc|work nods
[07:05:53] <doc|work> thought that
[07:16:07] *** Quits: jasonbraganza (~jasonbrag@user/jasonbraganza) (Quit: Au revoir …)
[07:18:01] *** Joins: jasonbraganza (jasonbraga@user/jasonbraganza)
[07:21:05] *** Joins: diek (~diek@187.36.4.113)
[07:25:45] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:26:51] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[07:27:50] *** Joins: diek (~diek@2804:14d:7681:82bd:5dc3:e9ae:5910:688d)
[07:35:09] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[07:42:00] *** Quits: diek (~diek@2804:14d:7681:82bd:5dc3:e9ae:5910:688d) (Remote host closed the connection)
[07:42:38] *** Joins: diek (~diek@2804:14d:7681:82bd:5dc3:e9ae:5910:688d)
[07:44:55] <doc> anyone got any other ideas?
[07:47:00] *** Quits: diek (~diek@2804:14d:7681:82bd:5dc3:e9ae:5910:688d) (Ping timeout: 244 seconds)
[07:53:02] *** Quits: blackleitus (~blackleit@189.195.192.28) (Read error: Connection reset by peer)
[07:58:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:00:09] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[08:00:34] *** justBull is now known as justK
[08:03:52] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:08:19] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Quit: Kalov)
[08:09:31] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:23:59] *** Quits: Adamantike (~adamantik@201.254.79.74) (Quit: The Lounge - https://thelounge.chat)
[08:24:19] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[08:28:30] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:29:19] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[08:49:08] <doc|work> PaulWay[w], I hadn't said it was a simple move :)
[08:49:36] <PaulWay[w]> OK, that seemed to be the intent of the document.
[08:55:04] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[09:04:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[09:51:39] *** Joins: noyb (~noyb@user/noyb)
[10:19:01] *** Joins: pradhvan (~pradhvan@103.94.114.237)
[10:20:02] *** Quits: pradhvan (~pradhvan@103.94.114.237) (Remote host closed the connection)
[10:22:13] <zamba> is it possible to quickly join in a field from a "neighbouring" model? with neighbouring i mean a model that uses the same foreign key as another model
[10:22:30] <zamba> https://dpaste.org/sxE2
[10:22:33] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:23:21] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Quit: Leaving)
[10:23:36] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:23:55] <zamba> nevermind, this is better, as it shows the get_context_data as well: https://dpaste.org/zTWt/slim
[10:25:20] <zamba> i want to populate the time_set with the startnumber from the registration_set for the actual runner..
[10:25:44] <zamba> and i also want to exclude the object from registration_set if the same runner id is present in the time_set
[10:25:48] <zamba> is this even possible?
[10:27:21] <zamba> if the question even makes sense..?
[10:29:37] *** Joins: mattil (~mattil@airio.portalify.com)
[10:33:48] *** Joins: diek (~diek@187.36.4.113)
[10:38:13] *** Quits: diek (~diek@187.36.4.113) (Ping timeout: 258 seconds)
[10:44:25] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Ping timeout: 246 seconds)
[10:44:42] *** Quits: serghei (~egrep@user/serghei) (Quit: serghei)
[10:49:15] <serafeim> hello my friends
[10:49:50] *** Joins: serghei (~serghei@user/serghei)
[10:49:51] <serafeim> let's suppose i've got a django-filters filter. is there some good way to handle errors in the user input in the filters ?
[10:51:27] <PaulWay[w]> You mean telling the user 'invalid input'?
[10:51:34] <serafeim> yes
[10:51:35] <PaulWay[w]> A 400 error usually suffices.
[10:51:49] <serafeim> PaulWay[w]: are you using django-filters ?
[10:51:57] <PaulWay[w]> If you mean "is there a standard piece of code that handles this for me" then I don't know for django-filters.
[10:52:14] <PaulWay[w]> I wrote my own, but I'm using DRF.
[10:52:21] <serafeim> no i don't use DRF ...
[10:52:39] <PaulWay[w]> It's based on DRF and drf_yasg(2)?'s Parameter declaration.
[10:52:51] <PaulWay[w]> How does django-filters declare a filter?
[10:52:56] <serafeim> the thing is that I've got a filter where I can filter by the year. if the user enters a character there it throws
[10:53:17] <serafeim> so the user sees the 500 error instead of an error message saying: "pelase enter a number in the year field"
[10:53:48] <serafeim> django filters uses some declarative way to render the filters. it's excellent and very convenient but has the problem i mentioned
[10:53:56] <PaulWay[w]> Sure.  Can you catch the error it's generating and return the right 400 response?
[10:54:04] <PaulWay[w]> I mean, this should ideally go in django-filters IMO.
[10:54:58] <PaulWay[w]> I'd consider django-filters defective if it just threw a 500 error on an invalid parameter input.
[10:55:12] <PaulWay[w]> That should just be a 400 error with the appropriate error message.
[10:55:52] <serafeim> hmmm yes that gave me an idea
[10:57:14] <PaulWay[w]> Ideally it should take care of that for you.
[11:07:09] <serafeim> i ended up encapsulating the throw-related code in an exception and just return the initial queryset if it throws: https://dpaste.org/c3Wi
[11:14:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[11:15:13] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 244 seconds)
[11:18:34] <zamba> anyone have any idea on my question?
[11:21:51] <serafeim> zamba: if they have the same foreign_key you should be able to join using __
[11:22:11] <serafeim> what do you want to get
[11:27:17] <zamba> i want to get startnumber from the registration model into the time model joined with the runner id and the run
[11:32:03] <serafeim> so you need a registration model ?
[11:33:23] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:35:03] <serafeim> i can't understand what[11:55:34] *** Quits: serghei (~serghei@user/serghei) (Quit: serghei)
[11:56:25] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:57:26] *** Joins: serghei (~egrep@user/serghei)
[12:01:42] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:5d49:5698:a506:6b51)
[12:04:51] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 258 seconds)
[12:06:15] <jor> zamba: not sure, my first try would be a filter with subquery that gets the non-foreign key id.
[12:07:10] <jor> alternatively, i'd just go raw sql with and .extra call
[12:15:25] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:17:25] *** Quits: anas (~anas@196.235.97.18) (Quit: WeeChat 3.2)
[12:22:18] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[12:27:11] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[12:35:21] *** Joins: diek (~diek@187.36.4.113)
[12:36:27] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:38:38] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[12:40:12] <zamba> i'll probably end up massaging this through python... :)
[12:40:45] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[12:41:29] *** Joins: Jebediah (~Jebediah@2a02:a03f:e5ac:f300:3d26:47a5:18bf:94d7)
[12:50:30] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:5d49:5698:a506:6b51) (Ping timeout: 268 seconds)
[12:51:03] *** Joins: wattux (~wattux@212.51.23.106)
[12:52:57] *** Joins: Jebediah64 (~Jebediah@2a02:a03f:e5ac:f300:4016:c944:dd46:91a9)
[12:53:08] *** Parts: Jebediah64 (~Jebediah@2a02:a03f:e5ac:f300:4016:c944:dd46:91a9) ()
[12:53:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:54:16] *** Quits: Jebediah (~Jebediah@2a02:a03f:e5ac:f300:3d26:47a5:18bf:94d7) (Ping timeout: 246 seconds)
[12:57:13] *** Joins: Tas-sos (~Tas-sos@ppp079167220109.access.hol.gr)
[13:01:15] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:11:08] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[13:21:53] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[13:35:03] <zamba> how can i modify an existing queryset?
[13:35:49] <zamba> i want to exclude some objects from it.. i attempted to do run.registration_set.exclude(...) and run.registration_set.all().exclude(...), but getting back 'Registration' object is not iterable
[13:39:24] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:39:55] <GinFuyou> zamba, what exactly is run?
[13:41:04] <GinFuyou> queryset methods usually return changed queryset, not modifying original self
[13:43:46] <wallbroken> GinFuyou: may i ask you help with this? https://docs.djangoproject.com/en/3.2/ref/contrib/messages/
[13:44:12] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[13:44:13] <wallbroken> i want to let the user know that a specified item can't be ordered
[13:44:49] <GinFuyou> Yeah you could use messages framework for it
[13:45:08] <GinFuyou> Though maybe better to use form validation
[13:45:13] <GinFuyou> depends
[13:46:06] <zamba> ah, i filtered it in the template instead :)
[13:46:35] <zamba> https://dpaste.org/gONU
[13:48:29] <wallbroken> GinFuyou: can you assist me in doing tha?
[13:48:35] <wallbroken> i have totally no idea
[13:49:55] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[13:50:39] *** Quits: Tas-sos (~Tas-sos@ppp079167220109.access.hol.gr) (Ping timeout: 258 seconds)
[13:51:11] <GinFuyou> wallbroken, about what exactly? It just stores texts to be displayed later (on next request of that user).
[13:51:36] <wallbroken> GinFuyou: do you remember my view?
[13:51:47] <GinFuyou> somewhat
[13:52:13] <wallbroken> https://dpaste.org/VdVb#L10
[13:52:16] <wallbroken> this is it
[13:54:33] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 268 seconds)
[13:54:43] <wallbroken> how to implement the messages in that?
[13:55:26] <GinFuyou> the way it shown in link you've seen https://docs.djangoproject.com/en/3.2/ref/contrib/messages/#adding-a-message
[13:56:45] <wallbroken> in th view?
[13:57:46] <GinFuyou> 1st section in the view, 2nd in the template
[14:03:06] <wallbroken> if itm_not_ordered is not null
[14:03:14] <wallbroken> how to check if the array is empty or not?
[14:03:20] <wallbroken> "is not null" would work?
[14:07:41] *** Quits: t0mab (~t0mab@stakhanov.u-strasbg.fr) (Ping timeout: 265 seconds)
[14:11:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:13:10] <GinFuyou> wallbroken, https://dpaste.org/sEC0#L
[14:18:22] *** Joins: zothix (~zoth@user/zothix)
[14:20:15] <zothix> Hi i am running django with gunicorn and trying to get logs of my print statements, https://dpaste.org/0yWV#L1,2   <= this has all my gunicorn configs and command used to run it, it does show print statements when i add true in capture output like => --capture-output=True but then it crashes on start saying because i added explicitly true in this option
[14:21:54] *** Quits: rowbots (~dirgeable@h69-129-115-197.arvdco.broadband.dynamic.tds.net) (Ping timeout: 240 seconds)
[14:23:05] <GinFuyou> how does it shows prints if it crashes on start?
[14:26:38] *** Joins: xkuru (~xkuru@user/xkuru)
[14:27:23] <wallbroken> GinFuyou: what is that?
[14:29:05] <GinFuyou> That view optimized even further
[14:29:11] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:4e72:c2e4:1b69:825a)
[14:29:40] <wallbroken> GinFuyou: i didn't used it
[14:29:45] <wallbroken> because it doesn't work
[14:31:48] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[14:32:56] <GinFuyou> then make it work. I've even added debug print there to help with it
[14:33:27] *** Quits: xkuru (~xkuru@user/xkuru) (Quit: Unvirtualizing)
[14:33:50] <zothix> GinFuyou, its running on docker, i dont really know how it works that way but it kinda shows old logs of print statements before it crashes
[14:33:53] *** Joins: xkuru (~xkuru@user/xkuru)
[14:34:22] *** Joins: t0mab (~t0mab@stakhanov.u-strasbg.fr)
[14:36:00] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[14:36:53] <wallbroken> GinFuyou:
[14:36:53] <wallbroken> AttributeError at /minicart/sendmail/
[14:36:54] <wallbroken> 'str' object has no attribute 'clone'
[14:38:21] *** Joins: shangxiao (~davids@101.181.150.156)
[14:40:30] <GinFuyou> wallbroken, what is full traceback?
[14:41:11] <wallbroken> https://dpaste.org/4TQa
[14:42:37] *** Joins: slav0nic (slav0nic@python.su)
[14:43:18] <GinFuyou> Ah, I see Exists needs a qs after all, OK
[14:44:52] <zothix> GinFuyou, what do you recommend to do here :3
[14:45:29] <zothix> GinFuyou, my gunicorn is pip installed if that makes a difference
[14:47:06] <wallbroken> GinFuyou: what?
[14:54:04] <GinFuyou> wallbroken, nothing, just have to be more verbose, I hoped it will assume this by default https://dpaste.org/kKF0#L10,11
[14:54:27] <GinFuyou> at worst case we can fall back to Count() since it's a simple aggregation function
[14:56:22] *** Joins: Crassus (~Crassus@user/crassus)
[14:57:31] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[14:57:41] *** Joins: thiras (~thiras@user/thiras)
[14:57:42] <zothix> GinFuyou, any help man .-.?
[14:59:53] <wallbroken> GinFuyou: i'm not following you
[15:00:00] <wallbroken> how to make your view work?
[15:00:17] <zothix> https://dpaste.org/JRf3 as u can see if i put explicit true, the config is same just that it prints old pint statements before crashing
[15:00:23] <GinFuyou> zothix, well I don't quite follow. What is exact error message? You have that capture_output in the config file? Or you don't have a config file?
[15:00:39] <GinFuyou> wallbroken, I've added changes, have you tried them?
[15:01:54] <zothix> GinFuyou, https://dpaste.org/0yWV#L1,2 this is log from "error_logs" file, the first 2 highlighted commands shows what command i used to run gunicorn, my problem is i am supposed to see output of print statements in error_logs but its not there
[15:02:18] <zothix> when i add  --capture-output = true, it shows old requests print statemen[16:00:21] <doev> mayhew, but the imports in models/__init__ isn't required, right?
[16:01:36] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[16:01:39] <mayhew> doev: I think they are if you want Django to know about them
[16:01:40] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:4e72:c2e4:1b69:825a) (Ping timeout: 268 seconds)
[16:02:30] <mayhew> like, Django won't scan your entire project's .py files for things that inherit from db.Model. It only looks inside a specific module for each app.
[16:04:41] <doev> mayhew, actually in the admin interface it works without. I just have to import inside the admin.py and register the models. But I am to new to django to understand the background.
[16:06:02] <mayhew> ah cool, I haven't actually tried it. I guess another thing to check would be to see if it autodetects changes to models / creates migrations for you. I recommend trial and error here :) you'll find out easily enough.
[16:06:44] <moldy> https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL is there something in django / python to parse this data?
[16:07:46] <doev> mayhew, I don't know about autodetects. Atm I use mange.py makemigrations and migrate.
[16:08:59] <mayhew> doev: yeah that's what I mean by autodetect: it knows about your models and makemigrations and stuff works. If all that works you should be golden to organize your project however you see fit.
[16:09:07] <moldy> doev: the imports in __init__ are required
[16:09:20] <moldy> django looks for a module / package called `models` and loads the models from there
[16:09:51] <doev> moldy, good to know. will keep thatin mind.
[16:10:21] <mayhew> moldy: you should be able to base64 decode it after stripping the hard-coded data URL prefix
[16:10:23] *** Joins: lbracher (~lbr@94.105.104.226.dyn.edpnet.net)
[16:10:26] <jor> moldy: in django/python by default, doubt it, data-uri is not something that you usually send server-side. But it's just base64 with a prefix... i'm sure somebody on pypi made a library :)
[16:10:49] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:634a:99fe:bd5c:fd4d)
[16:11:09] <moldy> jor: yeah i am not sending it, but i'm receiving it :)
[16:11:25] <moldy> i am just too lazy to write the code to strip the prefix :p
[16:11:31] <doev> actually I try the M2M-Relationship inside the admin interface. It works ootb with a multiselectable listbox. Good for small lists, but not if the list will increase. I guess if I like it more comfortable, I have to code an own ui for that?
[16:11:32] <jor> well, fix it at the source, make it send proper binary data ;p
[16:11:50] <jor> moldy: https://pypi.org/project/python-datauri/ ;p
[16:12:06] <moldy> jor: i could do that, but i actually like this format, because it also specifies the image's mime type
[16:12:23] <moldy> and since there is a standard js function to generate this, most of my clients will probably like it, too
[16:12:48] <jor> moldy: base64 is pretty inefficient... and http has proper mime type headers :)
[16:12:49] <moldy> jor: ah nice, thanks
[16:13:20] <moldy> jor: standard http headers would require an extra request, i am receiving binary data as part of a bigger json request
[16:13:44] <moldy> yeah base64 has overhead, but i don't mind in this case, those are fairly small image files
[16:14:09] <mayhew> moldy: you probably shouldn't just trust the mime type in that string as it's user input
[16:14:36] <moldy> mayhew: pillow also checks if it's a valid image or not, i think
[16:14:55] <mayhew> yeah, but use pillow as the authoritative source of the image type, not that input string
[16:15:18] <moldy> not sure if pillow has something to detect the type, actually
[16:16:03] <moldy> worst case i can see here is that i generate an incorrect extension in the filename
[16:17:16] <jor> moldy: well, it sorta does. I just tries reading the file with different decoders, If I remember correctly
[16:18:58] <moldy> jor: yeah, it throws an exception if it doesn't recognize the image format, but i haven't seen an API that tell you the format so far
[16:19:02] <mayhew> moldy: https://stackoverflow.com/questions/32679589/how-to-get-the-format-of-image-with-pil
[16:19:06] <moldy> i didn't specifically look for it though
[16:19:13] <mayhew> see also the comment about using `Image.MIME[img.format]`
[16:19:16] <moldy> ah, nice
[16:20:29] <doev> I really early run into the "cyclic import" problem, when I divide my model into multiple modules. I have not really a strategy against this issue.
[16:21:49] <mayhew> doev: that's more of a Python problem though, Sentry also has this problem it appears which is why they're using imports inside functions: https://github.com/getsentry/sentry/blob/master/src/sentry/models/user.py#L351
[16:21:59] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[16:22:12] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[16:30:52] *** Joins: brownan (~brownan@136.56.137.143)
[16:31:14] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[16:34:42] <moldy> doev: either do what sentry does, or refactor
[16:35:08] <moldy> also note that in some cases (ForeignKey), you can specify the model as a string
[16:37:22] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[16:37:30] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:634a:99fe:bd5c:fd4d) (Ping timeout: 240 seconds)
[16:41:24] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[16:41:32] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[16:42:38] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[16:42:48] *** Quits: zothix (~zoth@user/zothix) (Quit: Leaving)
[16:45:38] <mad_moses> Hi, can I modify the auto generated admin for the django User somehow? (I want to add some fields and some filters)? Or do I have to create a new "app" for it?
[16:46:31] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 264 seconds)
[16:46:36] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[16:47:34] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[16:51:01] <moldy> is Content-Language a valid header in an HTTP request, or is it response only?
[16:53:05] <b-rex> moldy: afaik the browser would use the Accept-Language header in the request
[16:53:18] <b-rex> https://docs.djangoproject.com/en/3.2/topics/i18n/
[16:53:55] *** Joins: dez (uid92154@user/dez)
[16:55:40] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:cc51:6a87:699f:ab8a)
[16:56:15] <moldy> b-rex: i am considering having the client send both
[16:57:31] <b-rex> whether django handle Content-Language from a request, i don't know. it would likely be up to your view to handle it.
[16:57:48] <moldy> b-rex: i think accept-language specifies how the server should respond, it doesn't necessarily tell you which language the request body is in
[16:57:54] <moldy> b-rex: yeah, for sure
[16:58:38] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:58:38] *** ChanServ sets mode: +v EvilDMP
[17:02:48] <moldy> i can't find anything in the RFC that but forbids sending this as a request header, but, not sure
[17:03:05] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[17:04:03] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[17:04:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:04:07] *** ChanServ sets mode: +v EvilDMP
[17:10:17] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[17:10:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[17:13:54] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:15:27] <jor> well, sure... you can set whatever header you want.... but it's up to the other side to decide if that makes any sense :)
[17:17:54] <doev> moldy, thanks. Using Strings for the models reduces the need of imports.
[17:18:33] <moldy> jor: some headers are explicitly request or response only
[17:19:14] <moldy> but Content-Language is a "representation header", which i read as "can be used in both", but i might be wrong
[17:33:08] *** Joins: Adamantike (~adamantik@201.254.79.74)
[17:33:15] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[17:34:58] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Ping timeout: 246 seconds)
[17:35:28] <doev> I want to validate that a many2many-relationship has between 1 and 10 relations. I have to use the function 'clean_fields', right? And I have to call the super() first, to get default functionality, right?
[17:35:42] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:36:33] <doev> But I don't understand, why there are different functions, ... .clean(), .clean_fields() and .validate_unique()
[17:38:24] *** Quits: Adamantike (~adamantik@201.254.79.74) (Read error: Connection reset by peer)
[17:38:30] *** Joins: Adamantike8 (~adamantik@201.254.79.74)
[17:39:13] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[17:40:36] <moldy> doev: you might have to override full_clean() actually
[17:41:14] <moldy> hmm actuall, clean() probably :p
[17:42:57] <doev> I have no idea how to get the count of relations of a ... field = models.ManyToManyFiled(...)
[17:43:00] *** Joins: Magician (deepy@user/deepy)
[17:44:47] *** Quits: deepy (deepy@user/deepy) (Ping timeout: 244 seconds)
[17:44:54] <moldy> i'd probably validate this outside of the model
[17:46:08] <doev> I remember that there is a shell and I will use it to explore the API. To bad that completion is not working.
[17:49:53] <moldy> doev: i'd probably add the code to validate this to the form or the view
[17:54:18] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[17:57:42] <doev> I see that validation is running in the forms of the admin interface. I can easy save invalid records from the shell.
[17:59:42] <doev> But you can never trust what the client is sending to the backend, so there must be a validation on the backend too. So you have to implement it twice?
[18:01:10] <GinFuyou> no, you can use same validation
[18:01:22] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:01:24] <GinFuyou> from forms and models
[18:03:09] <mayhew> doev: calling .save() on a model doesn't run the validations, if that's what you're wondering. If you want to run the model validations you need to call .full_clean() explicitly I think.
[18:03:40] <moldy> if you want to be super-safe, use db-level constraints
[18:04:20] <doev> mayhew, yes full_clean gives me the validation errors. Is full_clean automatically called for data that received over http?
[18:04:22] <moldy> but in this specific case, that might not be possible, or at least rather tricky
[18:04:44] <mayhew> doev: it's called automatically when you use a ModelForm
[18:04:45] <moldy> https://stackoverflow.com/a/20917007/1180983
[18:05:44] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:05:44] *** ChanServ sets mode: +v EvilDMP
[18:08:21] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[18:09:11] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[18:10:47] *** Joins: mattil (~mattil@airio.portalify.com)
[18:12:07] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:13:19] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: Textual IRC Client: www.textualapp.com)
[18:13:41] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[18:19:22] *** Quits: shangxiao (~davids@101.181.150.156) (Quit: WeeChat 3.2)
[18:22:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[18:25:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:25:31] *** ChanServ sets mode: +v EvilDMP
[18:29:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[18:30:00] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:30:13] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:31:22] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:33:28] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:34:30] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[18:34:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:34:36] *** ChanServ sets mode: +v EvilDMP
[18:34:41] *** Quits: wintrmute (~wintrmute@bit.pappanaka.com) (Client Quit)
[18:34:41] *** Joins: znpy (~znpy@user/znpy)
[18:35:35] *** Joins: wintrmute (~wintrmute@bit.pappanaka.com)
[18:38:00] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 244 seconds)
[18:48:39] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:cc51:6a87:699f:ab8a) (Ping timeout: 244 seconds)
[18:49:51] <doev> there is only a radio button on form-level and on model-level there is only the choices-parameter?
[19:00:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:02] *** Joins: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi)
[19:03:17] *** Quits: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi) (Remote host closed the connection)
[19:03:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:05:44] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[19:06:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:06:53] *** ChanServ sets mode: +v EvilDMP
[19:09:07] *** Quits: doev (~doev@82.115.100.62) (Ping timeout: 246 seconds)
[19:11:15] *** Joins: deniska (~denis@user/deniska)
[19:11:24] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:b13b:5bb7:da87:468b)
[19:12:12] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 250 seconds)
[19:12:54] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[19:15:44] *** Joins: doev (~doev@82.115.100.62)
[19:18:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 265 seconds)
[19:19:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:19:10] *** ChanServ sets mode: +v EvilDMP
[19:23:49] *** Quits: doev (~doev@82.115.100.62) (Ping timeout: 246 seconds)
[19:26:40] *** Quits: lbracher (~lbr@94.105.104.226.dyn.edpnet.net) (Ping timeout: 265 seconds)
[19:27:04] *** Joins: sandeepk (~sandeepk@223.130.30.101)
[19:27:25] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[19:30:15] *** Joins: diek (~diek@187.36.4.113)
[19:31:15] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[19:33:26] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:b13b:5bb7:da87:468b) (Ping timeout: 250 seconds)
[19:33:29] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[19:36:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[19:37:56] *** Quits: normic (~normic@p57bcd98d.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[19:38:44] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 268 seconds)
[19:39:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:39:36] *** ChanServ sets mode: +v EvilDMP
[19:43:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 250 seconds)
[19:44:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:44:36] *** ChanServ sets mode: +v EvilDMP
[19:49:18] <mad_moses> Hi, I wrote a SimpleListFilter which leads to duplicates. Any idea what is wrong or going on? =>https://dpaste.org/E9VK
[19:51:21] <moldy> mad_moses: try throwing a .distinct() at it
[19:52:04] <mad_moses> moldy: thank you.
[19:58:34] *** Quits: sandeepk (~sandeepk@223.130.30.101) (Ping timeout: 250 seconds)
[20:02:29] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[20:02:39] *** Quits: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052) (Remote host closed the connection)
[20:03:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:03:10] *** ChanServ sets mode: +v EvilDMP
[20:04:56] *** Joins: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9)
[20:07:44] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[20:11:12] <mihael> I have the following user model: https://dpaste.org/HjnX Now I need to define another user types, how do I best approach on defining another user types?
[20:11:52] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:11:52] *** ChanServ sets mode: +v EvilDMP
[20:15:04] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[20:18:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[20:25:14] *** Quits: Adamantike8 (~adamantik@201.254.79.74) (Quit: The Lounge - https://thelounge.chat)
[20:29:18] <nedbat> a fellow engineer told me that a good part of the time it takes to start up a django site is spent compiling regexes (for example in url patterns).  Does this ring a bell?
[20:29:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:29:47] *** ChanServ sets mode: +v EvilDMP
[20:33:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:34:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 265 seconds)
[20:37:10] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:37:10] *** ChanServ sets mode: +v EvilDMP
[20:38:12] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 265 seconds)
[20:38:54] *** Joins: cliluw (~cliluw@47.147.80.149)
[20:40:37] *** Quits: rwb (~augh@theguntretort.com) (Ping timeout: 265 seconds)
[20:40:39] *** Quits: mihael (~mihael@2001:4454:2c7:6800:fdc0:acab:5394:aab9) (Quit: Client closed)
[20:40:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[20:43:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:43:24] *** ChanServ sets mode: +v EvilDMP
[20:45:15] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[20:45:15] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[20:46:54] <rixx> I've recently optimised Django startup time in a project and I don't think URL compilation was the biggest culprit (though it was one of the chunks that I couldn't reduce by other means)
[20:47:21] <rixx> I wanted to write a blog post but then forgot, mea culpa
[20:47:37] <ChrisWarrick> that’d be an interesting reason, although I’d probably profile it, since it might be project-specific
[20:47:52] <GinFuyou> do startup time matters that much?
[20:48:02] <ChrisWarrick> and yeah, that
[20:48:40] <ChrisWarrick> get your hands on a spring boot hello world, that’s super slow
[20:48:56] *** Joins: rwb (~augh@theguntretort.com)
[20:49:12] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:48] <rixx> django.urls makes up 0.13s of a project of a decent size with a 1.5s (now: 1.0s) startup time, so it's not a major contributor ime
[20:50:17] <rixx> so I'd say if url patterns make up a major chunk, go get profiling and see if you accidentally import slow stuff in there
[20:51:05] <rixx> getting startup times down mattered to me because I was frustrated by the time I spent refreshing a page after a change, only to see that Django was still reloading. Maybe hot reloading has spoiled me
[20:51:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:51:06] *** ChanServ sets mode: +v EvilDMP
[20:51:31] <rixx> getting down to just under a second from 1.5-1.7s has been a quality of life improvement, as silly as that sounds
[20:51:49] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[20:53:06] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[20:54:09] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:57:27] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[20:58:20] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:25] <nedbat> rixx: that's very helpful, thanks
[20:58:37] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[20:58:50] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[20:59:09] *** Quits: himcesjf (uid409730@id-409730.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:01] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[21:05:25] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:06:14] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[21:13:07] *** Joins: diek (~diek@187.36.4.113)
[21:13:17] <Batzy> man docker is insane
[21:13:25] <Batzy> its try to erase whole files. not even delete them just
[21:13:30] <Batzy> literally remove all of the text inside
[21:13:30] <Batzy> lol
[21:14:38] <Batzy> https://github.com/yoshitakameguro/docker-django-uwsgi-nginx-mysql
[21:14:47] <Batzy> for some reason this straight up ignores my models
[21:14:50] <Batzy> when i try to make a migration
[21:14:52] <Batzy> no idea why
[21:15:08] <Batzy> it runs so i know ive referenced my django project just fine
[21:17:17] <Batzy> docker is insanely confusing man
[21:17:19] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:17:32] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:17:42] <Batzy> turns out the deletion wasnt docker, but idk why it just straight up ignores my models still
[21:18:46] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:19:08] <ChrisWarrick> Batzy: did you build your image after making changes?
[21:19:17] <Batzy> yep
[21:20:12] <ChrisWarrick> Batzy: if you look into the container (docker exec -it /bin/bash containername), do you see the correct models.py?
[21:20:23] <ChrisWarrick> Batzy: does your app work outside of docker?
[21:20:42] <Batzy> yeah it idd
[21:20:43] <Batzy> did*
[21:20:44] <Batzy> sec
[21:22:21] *** Joins: salman (~user@user/salman)
[21:22:58] <Batzy> OCI runtime exec failed: exec failed: container_linux.go:380: starting container process caused: exec: "/bin/bash": stat /bin/bash: no such file or directory: unknown
[21:23:21] <ChrisWarrick> /bin/sh
[21:23:28] <ChrisWarrick> docker exec -it /bin/sh containername
[21:23:32] <Batzy> oh duh
[21:23:37] <Batzy> also
[21:23:40] <Batzy> containername goes first
[21:23:41] <Batzy> i think
[21:24:11] *** Joins: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net)
[21:24:28] <Batzy> oh i think i see what happened
[21:24:36] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[21:24:38] <Batzy> hm
[21:24:48] *** Quits: salman (~user@user/salman) (Remote host closed the connection)
[21:25:10] *** Joins: salman (~user@user/salman)
[21:26:13] <pierrepaul> hmmm
[21:26:49] <ChrisWarrick> Batzy: okay, what happened?
[21:27:05] <Batzy> ChrisWarrick the directory structure feels not quite right
[21:27:08] <Batzy> which is weird...since it ran
[21:27:38] <hylje> that's always fun
[21:28:01] <Batzy> hm
[21:28:05] <ChrisWarrick> Batzy: not quite right?
[21:28:06] <Batzy> it's still not finding migrations
[21:28:08] <Batzy> weird
[21:28:26] <Batzy> ChrisWarrick yeah it copied everything outside of the project directory into the nginx html path
[21:28:34] <Batzy> so i put everything back into an app directory
[21:28:43] <ChrisWarrick> Batzy: fix your dockerfile
[21:28:57] <Batzy> im not sure how
[21:30:50] <Batzy> really bizarre that it runs
[21:30:52] <Batzy> without error
[21:31:23] <ChrisWarrick> Batzy: the sample project installs some stuff probably
[21:32:05] <Batzy> i didnt know docker well enough to do this setup myself
[21:32:08] <Batzy> as you can probably tell
[21:35:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 252 seconds)
[21:35:06] *** Joins: normic (~normic@p4fc30985.dip0.t-ipconnect.de)
[21:36:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:36:08] *** ChanServ sets mode: +v EvilDMP
[21:37:58] <ChrisWarrick> it might be good to see your project tree and your dockerfile
[21:43:21] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:44:23] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[21:45:14] <Batzy> docker is so confusing holy shit
[21:45:21] <Batzy> ChrisWarrick like the example i have 3 docker files
[21:45:25] <Batzy> and a docker-compose.yml
[21:45:35] <ChrisWarrick> Batzy: okay, pastebin all that, and a directory tree
[21:45:49] *** Joins: ktosiek (~ktosiek@li1810-126.members.linode.com)
[21:45:53] <LuxuryMode> I have been adding a `details` property to some of my models to get a better str repr of my model objects like this https://dpaste.org/JKY4 Is there a way to automatically iterate all the fields and create a dictionary with the values as the value of the field? Wanted to know if a generic solution is possible.
[21:46:01] <Batzy> ChrisWarrick why is it so confusing though
[21:46:24] <hylje> LuxuryMode: yes, Model._meta.get_fields()
[21:46:25] <ChrisWarrick> Batzy: well, you might want to review docs or tutorials or such
[21:46:42] <Batzy> insane
[21:46:44] <LuxuryMode> hylje: thanks, I'll try that!
[21:46:48] <Batzy> ok let me pastebin sec
[21:47:36] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[21:48:48] <Batzy> https://bpa.st/G7ZQ ChrisWarrick this work?
[21:48:53] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:53] <ChrisWarrick> Batzy: your dockerfile seems very strange
[21:50:17] <ChrisWarrick> Batzy: honestly, I’d look for a better template
[21:50:31] <LuxuryMode> hylje: now that I have the list of fields with `get_fields()` how would I get the value of that field for a particular instance?
[21:50:37] <LuxuryMode> of each* field
[21:50:51] <Batzy> ChrisWarrick this was honestly the best one
[21:50:55] <ChrisWarrick> Batzy: no, it isn’t
[21:50:57] <Batzy> do you know one that would be better
[21:51:06] <ChrisWarrick> Batzy: I don’t have anything at hand
[21:51:11] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 265 seconds)
[21:51:15] <hylje> something to the tune of "for field in get_fields(): field_value=getattr(self, field.name)
[21:51:22] <ChrisWarrick> Batzy: mounting your code as a volume I would consider a no-no, and why does it build an image for mysql?
[21:51:32] <Batzy> ChrisWarrick project uses mysql
[21:51:50] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[21:51:58] <hylje> get_fields() normally returns you everything that kinda resembles a field, so try introspecting the field objects themselves for just the kinds of fields you want
[21:52:04] <LuxuryMode> Awesome, thanks hylje
[21:52:08] <LuxuryMode> I'll try my hand at this
[21:52:12] <hylje> eg. reverse foreign key managers are probably not what you want
[21:52:24] <Batzy> ill get rid of this template though
[21:52:26] <ChrisWarrick> Batzy: look for a better example, perhaps start with something that doesn’t do a database
[21:52:38] <hylje> even though they are a kind of a field
[21:52:38] <ChrisWarrick> Batzy: then you can just add in a mysql service to your docker-compose
[21:52:54] *** Joins: diek (~diek@187.36.4.113)
[21:53:37] <Batzy> so just a django nginx template i guess
[21:54:15] <Batzy> https://github.com/WesleyCharlesBlake/django-uwsgi-nginx-docker
[21:54:18] <Batzy> does this look better?
[21:56:10] <Batzy> it's python 2.7
[21:56:10] <Batzy> hm
[21:56:29] <hylje> ah, vintage
[21:56:45] <ChrisWarrick> look at the last commit date
[21:58:44] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[21:59:18] <ChrisWarrick> Batzy: I’d start with https://github.com/tiangolo/uwsgi-nginx-docker
[21:59:26] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[22:02:05] *** Quits: bambanxx (~bambanx@pc-223-49-214-201.cm.vtr.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:07:22] <Batzy> i dont see an obvious way
[22:07:30] <Batzy> to just "add mysql" here
[22:07:35] <Batzy> docker-compose makes it obvious
[22:09:02] <Batzy> what the hell is going on
[22:09:15] <Batzy> every docker is like a million files, a million other commands and stuff to keep track of
[22:09:23] <Batzy> and theyre all always different
[22:13:03] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[22:14:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:23:53] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:24:52] <ChrisWarrick> well, that sometimes happens
[22:25:13] <ChrisWarrick> you’ll have two things in a docker-compose: one with your dockerfile based on tiangolo’s image, and another with mysql
[22:30:16] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:32:31] <Batzy> ill do it later, i am too tilted right now
[22:32:37] <Batzy> docker sucks
[22:32:39] <Batzy> but it also doesnt
[22:33:04] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[22:33:10] *** Joins: tbcr (~tbcr@user/tbcr)
[22:39:54] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[22:40:19] *** Quits: salman (~user@user/salman) (Ping timeout: 244 seconds)
[22:40:28] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:42:21] *** Joins: Skyz (~Skyz@user/skyz)
[22:42:48] <ChrisWarrick> you can always deploy without docker if you don’t feel comfortable with it
[22:45:51] *** Joins: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[22:49:37] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 258 seconds)
[22:49:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:49:39] *** ChanServ sets mode: +v EvilDMP
[22:50:50] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[22:52:18] *** Joins: salman (~user@user/salman)
[23:05:20] *** Quits: normic (~normic@p4fc30985.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:12:16] <jrabbit> If docker isn't solving a problem for you you can always use service runners and stuff
[23:12:48] <jrabbit> but compose's main value proposition is you don't have to manage (read juggle) databases locally
[23:12:49] <Batzy> ChrisWarrick im not using docker for deployment, although i have been toying with the idea
[23:12:50] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[23:13:15] <jrabbit> coordinating services in general but for web dev it's having the right db every time
[23:13:17] <Batzy> jrabbit wdym? because you can run the db in a container?
[23:13:29] <jrabbit> and it's always the *right* db
[23:13:44] *** Joins: slavfox (~slavfox@93.158.232.111)
[23:13:54] <jrabbit> if you have 6 projects how do you keep track of which versions of mysql, postgres you need
[23:14:08] <jrabbit> and or want to not run dbs all the time
[23:14:22] *** Quits: rwb (~augh@theguntretort.com) (Ping timeout: 252 seconds)
[23:14:30] <Batzy> yeah--right
[23:14:56] <Batzy> if you build a docker django app, do you deploy it with docker usually?
[23:15:06] <Batzy> how do you do that? you just run docker on some server?
[23:15:07] <jrabbit> yes
[23:15:27] <Batzy> interesting
[23:15:30] <jrabbit> yeah I keep the dev and prod images the same and make the differences in compose files
[23:15:46] <Batzy> that's a neat idea
[23:15:52] <jrabbit> and for prod i use the base.yml + prod.yml
[23:16:18] <Batzy> the reason i started using docker is because just using django's development mode wouldnt do everything i needed
[23:16:22] <jrabbit> this approach works for side-car services like a x11 server for web tests
[23:16:26] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:ffde:191f:cd94:68ae)
[23:16:29] <Batzy> i have a SPA that is exchanging cookies back and forth with django
[23:16:33] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[23:16:39] <Batzy> so i needed a setup where this was all behind nginx
[23:17:07] <jrabbit> yeah if you're running multiple things compose makes it easier to set them up locally reliably and repeatably
[23:17:21] <Batzy> yep exactly
[23:17:27] <jrabbit> nginx + gunicorn + db is a pretty common django pattern
[23:17:44] <Batzy> i was doing nginx + uwsgi + mysql because i was using pythonanywhere
[23:17:48] <Batzy> and that's the stack they use
[23:17:48] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[23:17:53] <Batzy> is gunicorn 'better'?
[23:18:18] <jrabbit> it preforks, i like it for production.
[23:18:23] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[23:18:40] <jrabbit> it's the python equiv of unicorn from ruby if you're familiar with it
[23:18:59] <jrabbit> I think github uses it still
[23:19:06] <jrabbit> (unicorn)
[23:19:50] <jrabbit> the wsgi running server tends not to matter unless your needs conflict with the design
[23:20:07] *** Quits: davep (uid504677@id-504677.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:20:39] <jrabbit> they all do the right thing just have qildly different implementation wrt threads, processes etc
[23:20:45] <jrabbit> *w
[23:20:50] <Batzy> preforks?
[23:21:19] <jrabbit> some wait until a connection to spawn workers, gunicorn maintains them is my understanding
[23:22:00] <jrabbit> there might be other impacts i'm not a threads guru or anything
[23:23:06] <Batzy> i see
[23:23:32] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 250 seconds)
[23:23:50] *** Quits: salman (~user@user/salman) (Remote host closed the connection)
[23:24:29] <jrabbit> never heard anything bad about uwsgi
[23:25:00] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[23:25:17] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[23:27:30] <Batzy> yeah looks like it works fine
[23:29:37] <Batzy> jrabbit is there much point using docker if you're not deploying with docker
[23:33:00] <Batzy> would it be possible to have a docker container ssh tunnel to a remote host where my db is so it thinks the db is local?
[23:36:58] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:ffde:191f:cd94:68ae) (Ping timeout: 250 seconds)
[23:38:22] *** Joins: rwb (~augh@theguntretort.com)
[23:40:52] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[23:41:33] *** Quits: maloik (~maloik@187.147.145.201) (Read error: Connection reset by peer)
[23:41:40] *** Joins: maloik_ (~maloik@189.201.147.213)
[23:43:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 268 seconds)
[23:44:20] *** Quits: knbk_ (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[23:47:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:47:53] *** ChanServ sets mode: +v EvilDMP
[23:52:41] *** Joins: thiras (~thiras@user/thiras)
[23:56:51] *** Joins: diek (~diek@187.36.4.113)
