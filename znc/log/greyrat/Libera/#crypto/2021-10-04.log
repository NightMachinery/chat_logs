[00:01:14] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 246 seconds)
[00:12:54] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[00:13:14] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[00:18:16] *** Joins: mouseghost (~draco@user/mouseghost)
[00:22:20] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[00:22:58] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[00:24:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:27:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:29:45] *** Quits: gabriel1_ (~gabriel1@37.172.164.136) (Remote host closed the connection)
[00:30:13] *** Joins: sm2n (~sm2n@user/sm2n)
[00:43:20] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:45:15] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:47:19] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[00:47:20] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:47:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:49:04] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[00:49:09] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:49:29] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 245 seconds)
[00:50:00] *** Lord_of_Life_ is now known as Lord_of_Life
[00:52:38] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:53:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[00:55:04] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[01:15:31] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[01:29:38] *** Joins: msfninja (~kali@user/msfninja)
[01:45:35] *** Joins: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com)
[01:52:16] *** Quits: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr) (Ping timeout: 252 seconds)
[01:55:07] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[02:00:46] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[02:02:38] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:05:56] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:09:19] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[02:10:55] *** Quits: BadKarma (~BadKarma@user/badkarma) (Quit: night)
[02:30:14] *** Quits: lord| (~lordpipe@user/lordpipe) (Quit: https://i.imgur.com/xacQ09F.mp4)
[02:31:02] *** Joins: lord| (~lordpipe@user/lordpipe)
[02:33:29] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:36:23] *** Joins: machinedgod (~machinedg@24.105.81.50)
[02:36:34] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[02:37:50] *** Joins: igemnace (~ian@user/igemnace)
[02:41:21] <ericonr> Is there any well integrated password manager that creates passwords from a word list?
[02:41:50] <ericonr> Those are actually copiable by hand if necessary, while the alphanumeric codes are basically impossible.
[02:42:04] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[02:42:55] *** Quits: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752) (Remote host closed the connection)
[02:50:19] *** Joins: sec^nd (~sec^nd@gateway/tor-sasl/secnd/x-45171752)
[02:51:16] *** Quits: Narrat (~omnius@p200300df5f0e906306ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:55:08] <snappy> yes 1password -- their built-in pw generator is similar to this: https://1password.com/password-generator/
[02:55:13] <snappy> select the dropdown for a "memorable" password
[03:03:29] *** Joins: AllMyNames (~AllMyName@user/allmynames)
[03:04:55] <ericonr> snappy: nice, thanks. Unfortunate that they don't seem to have open sourced their stuff >.<
[03:05:27] <snappy> no, i doubt they will
[03:07:37] <ericonr> I'd be okay with proprietary server if the local version were FOSS ;-;
[03:10:01] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[03:14:30] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[03:19:33] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[03:33:58] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[03:47:30] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[03:49:25] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:03:26] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:06:38] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[04:10:44] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[04:29:01] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Ping timeout: 252 seconds)
[04:29:56] *** Joins: igemnace (~ian@user/igemnace)
[04:56:59] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 245 seconds)
[05:09:55] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[05:11:56] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:14:54] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[05:17:58] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Ping timeout: 252 seconds)
[05:22:59] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[05:25:46] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[05:41:37] <gggpkm> is there good way to do privacy preserved proof
[05:41:42] <gggpkm> for a simple example, assume playing card game ,each player should verify other's card at the game end
[05:44:06] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[05:44:25] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[05:45:57] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:49:04] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[05:49:10] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[05:53:14] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[06:03:01] <Alipha> gggpkm: for that example, you can create random 128-bit values x and y. Then you compute h = H(x || y || cards) and share h and x with the other player. Then when you "reveal" your cards at the end, you also reveal y and the other player can then compute the hash to verify h
[06:04:07] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[06:04:20] <Alipha> Though that does mean eventually revealing `cards`
[06:14:14] <gggpkm> Alipha, if I share x and y ,others can try to compute the card one by one to get the card value
[06:15:19] *** Quits: linear_cannon (~linear@50.35.78.163) (Quit: linear_cannon)
[06:18:03] <maroon> gggpkm, you dont reveal 'y' until after the hand
[06:18:46] <maroon> revealing h before the card reveal means the dealer can't cheat because they dont have the time to brute force 2^128 'y' values to find a match
[06:20:25] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[06:20:33] <snappy> why do you need x? wouldn't y sort of work as a key?
[06:20:49] <Alipha> Yeah, x seems unnecessary actually
[06:21:15] <maroon> that's similar to what online poker sites do with 'provably fair', they use a random 'seed' to generate a shuffle of the deck, then reveal hash(seed) before the play, and also offer the player the chance to have their seed also used to generate the shuffle
[06:21:46] <Alipha> Though an externally-provided x value, such as a timestamp, may be useful to prevent reuse of h, depending upon the situation
[06:22:00] <maroon> the house uses the same seed for all hands on a given day, and then the following day they reveal the seed, and players can verify that hash(seed) matches, and that the shuffle also matched
[06:22:58] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:23:27] <snappy> maroon: can they reproduce the shuffle order, who gets what cards, etc.?
[06:23:36] <snappy> "they" == players
[06:24:12] <maroon> yes, they generate the shuffle from the output of something like hash(server-seed|client-seend|counter++)
[06:24:57] <maroon> so once the player finds out what server-seed was, and verifies that hash(server-seed) matches the string given the prior day, they can re-create the hands
[06:25:37] <snappy> hm, not ideal
[06:26:42] <maroon> why not? by allowing the player to contribute a seed, that keeps the house from generating a server-seed that will give themselves blackjack too often
[06:27:19] <snappy> the contributory part is good, don't get me wrong
[06:27:31] <snappy> but i would like any hands i muck to remain private
[06:27:39] <snappy> or not reveal
[06:29:30] <maroon> i understand the reason to not want to reveal what you folded, but that wouldn't allow all the players to verify everyone's hand, that the house didn't secretly give aces to a house shill
[06:31:23] <maroon> and you can't have a separate seed for each player, because that would allow 2 players to be given the same card
[06:32:37] <maroon> if it's a game that only 1 player is there, like blackjack not poker, the player can always keep their seed private, but that doesnt help at all in the bluff games
[06:38:54] <maroon> i guess there could be a trusted <cough> 3rd party site that will verify the hands without reveal mucks
[06:44:26] <gggpkm> explain  hash(server-seed|client-seend|counter++) 
[06:45:46] <maroon> if counter starts as 1, and server-seed is foo, and client seed is bar, the first card is calculated from $sha256(foo bar 1)
[06:46:11] <maroon> when no more portion of the hash digest remains, you generate the next cards from $sha256(foo bar 2)
[06:47:30] <maroon> if both seeds are very long, it's impossible to bruteforce a secret 128-bit y value that works for $sha256(y client-seed 0) == deadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef
[06:48:59] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[06:50:16] <maroon> though, there are some online casinos that publish hash(server-seed) that they will be using on specific dates in the future, so i guess you can take several days to try to solve for the seed
[06:51:18] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[06:56:34] <gggpkm> Does  "server-seed|client-seend|counter++"  means bitwise OR operation on the three number ?
[06:56:54] <maroon> in this syntax it means concatenate strings together
[06:57:09] <maroon> append
[06:57:46] <maroon> maybe i was supposed to use || ?
[06:59:00] <gggpkm> yeah
[06:59:03] <gggpkm> okay
[07:01:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[07:04:10] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:05:57] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[07:22:23] *** Joins: linear_cannon (~linear@50.35.78.163)
[07:23:39] *** Quits: _rtypo (~alex@user/rtypo) (Ping timeout: 245 seconds)
[07:29:54] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[07:32:33] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[07:34:42] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[07:36:56] *** Joins: Wulf (~Wulf@user/wulf)
[07:45:38] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[07:46:00] <gggpkm> maroon, can this cooperate on  blockchain
[07:49:48] <maroon> not sure exactly how you mean
[07:51:49] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[07:54:43] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[07:57:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[07:58:30] *** Joins: Wulf (~Wulf@user/wulf)
[07:58:45] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:06:12] *** Joins: paul0 (~paul0@2804:1b3:8401:fbfd:b959:b935:3df0:da36)
[08:22:58] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:26:01] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:45:02] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:45:25] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374)
[08:45:31] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[08:46:15] *** Joins: tent405 (~tent405@185.246.209.58)
[08:47:28] *** Quits: shawn_ (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net) (Ping timeout: 252 seconds)
[08:48:04] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[09:12:02] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[09:16:08] <gggpkm> put the provable data on the chain
[09:18:47] *** Joins: moose (~moose@user/moose)
[09:19:48] <maroon> gggpkm, do you mean putting the hash(server-seed) visible on the chain, so the casino can't change it later on?
[09:20:09] <gggpkm> yep
[09:21:05] <maroon> i havent checked, but i assumed the casinos put that data out there signed by some kind of public key, but i dont know that for sure
[09:25:51] <yawkat> and what would be the point
[09:26:36] <yawkat> you presumably have to save the hands you got somewhere too. might as well save the seed hash then
[09:27:18] <maroon> the point is that when the casino deals a hand of blackjack, they weren't just cheating and saying that the cards dealt to themselves were Ace/King blackjack!
[09:27:34] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[09:28:02] <yawkat> yes, but what is the point of the blockchain part
[09:28:56] <maroon> oh that part? i dunno, other than keeping the casino from lying when they produce another-hash(another-server-seed) that they actually used when shuffling the deck
[09:29:56] <maroon> when your only tool is a hammer, every problem resembles a nail. when your only tool is bitcoin, every problem resembles a blockchain!
[09:38:29] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:41:34] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[09:57:56] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[10:02:41] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[10:03:04] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:05:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:fc00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[10:11:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:14:54] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 245 seconds)
[10:16:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:27:29] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:31:59] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 245 seconds)
[10:41:05] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[10:44:37] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:45:10] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:50:22] *** Joins: andreasbuhr (~quassel@p548ddd54.dip0.t-ipconnect.de)
[11:00:07] <bugweiser> just got home, need to sleep. But, maroon, I did notice I failed to address your question why mod95. It was a combination of: realising that ascii 0 to 31 and 127 to 255 would quite surely go unused, additionally, not having to type to much from the message tool into irc was also a consideration, additionally, tab vs space would be hard to recognise (in off chance of typing stuff manually) and irc wouldn't support new lines anyway (additionally,
[11:00:07] <bugweiser>  commands wouldn't require new lines at all). That wasn't all, it was also me being 'cheap': not having to do any kind of output transformation (such as base64 or 85) so neither needing that code (or write it, not a problem by the way) or more importantly having to do that extra work. I'm always told "to make it go fast you must make it do less" :)
[11:01:30] <maroon> base94 is commonly used, well maybe not THAT common. it can either be setup to translate 13 bits into 2 text, or 9 binary into 11 text
[11:01:48] *** Joins: gabriel1_ (~gabriel1@37.164.4.83)
[11:04:00] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:04:28] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 252 seconds)
[11:07:43] *** Joins: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr)
[11:08:27] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[11:10:25] <bugweiser> yeah, but i'd need to repack
[11:10:47] <bugweiser> now i'd have: char in, modular addition, char out. done
[11:11:14] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[11:11:38] <bugweiser> even if i'd use the next cheapest method of filling up a double float up to 8 chars and then call nbr.toString(36) ..
[11:14:03] <bugweiser> I will admit I also hoped it *might* annoy a potential attacker that a nice odd non-power of 2 value was used :)
[11:14:27] <maroon> what's the largest integer your float can hold as an actual integer? somewhere around 2**53-1 ?
[11:14:44] <bugweiser> including the 1. yes
[11:15:14] <bugweiser> max_safe_int is defined as 2**53-1, couse we couldn't detect overflow at 2**53
[11:15:20] <maroon> so using float math won't work for strings longer than 53//8=6 bytes
[11:15:48] <bugweiser> 2**53 / 95 ... :)
[11:16:11] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[11:16:16] *** Quits: andreasbuhr (~quassel@p548ddd54.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:17:05] <maroon> if you're using base94 to translate from 9 binary to 11 text, you can split the 9 binary into a 4-byte 32-bit value and a 5-byte 40-bit number, it should be possible to do the remaining math without hitting an overflow
[11:17:22] *** Joins: andreasbuhr (~quassel@p548ddd54.dip0.t-ipconnect.de)
[11:17:25] <bugweiser> I basically didn't want to waste anything on an output transform, so just xoring bytes wasn't an option. So if I wanted to do the same conceptually I had to use modular addition instead.
[11:17:38] <bugweiser> yes, but look at all the packing and then we need to stringify it..
[11:17:57] <bugweiser> my method completely side-steps both problems :)
[11:18:11] <maroon> if you want to keep it simple, just do mime/base64 - you probably already have a subroutine that does that, and your strings are so short it probably doesnt matter a little extra length
[11:18:20] <maroon> if you dont have that, then hex
[11:18:57] <bugweiser> I just mentioned that :) I didn't want to waste any operation on base64 (or 85). Neither packing Nor stringification.
[11:19:50] <bugweiser> perhaps node supports the non-standard atob and btoa, but the encoding tool must just be a html file and not depend on browser features.
[11:20:27] <bugweiser> additionally, it would still be wasteful. Cycles are being spent on doing the stringification  :)
[11:21:40] <maroon> ah, i see atob and btoa is basically mime
[11:22:13] <bugweiser> lets say those 2 functions have a rather 'interesting' history in javascript :)
[11:22:16] <maroon> there might be differences in how it handles binary strings that aren't a multiple of 3 length
[11:22:43] <bugweiser> ohh. padd, no padd... me shrugs.
[11:23:07] <bugweiser> it isn't free, and i can't trust atob btoa to be on all browsers
[11:23:23] <maroon> padding is just wasteful, when i had to code that in C, i just ignored the padding and calculated the length based (pun) on the actual string
[11:24:29] <bugweiser> yeah, agree. I have some very fast encoders/decoders of my own over the years. 
[11:25:21] <maroon> base94 is if you're needing to cram as much possible decoded data into an irc message without cheating by putting in an ircv3 tag
[11:25:58] <bugweiser> we'd be missing a character in base 94 :)
[11:26:19] <maroon> that leaves the space out of the encoding, 0x21 thru 0x7e
[11:26:30] <bugweiser> (TAB I just intentionally (and practiaclly) pretend doesnt' exist
[11:26:41] <bugweiser> yes, but then I can't use spaces in the commands :)
[11:26:49] <maroon> avoids ambiguity for strings beginning or ending with space
[11:27:07] <bugweiser> wrap in something: like 
[11:27:27] <maroon> sure you can, you're translating 9 binary to 11 text, so it doesn't matter whether the binary is a UTF8 string or whatever
[11:28:36] <bugweiser> but this is ONLY designed to pass commands, and they are mandatory in printable ascii. (or utf-8 if we wanna nitpick, it's the same in this range anyhow, even as far as raw bytes goes :) )
[11:30:48] <maroon> if you're wanting your output to have same length as the input, you simply need to have as many valid characters in the input as you have in the output, and they don't need to be the same, you can have input 0x20-0x7e which gets packed to shorter binary, then encrypted to same length ciphertext, and your encoding output can be 0x21-0x7f
[11:31:20] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[11:31:47] <maroon> so for encryption you'd either need to use a stream cipher, or use a block cipher in CFB or CTR mode, as ciphertext stealing gets complicated
[11:32:08] <bugweiser> lol, and we are packing *and* stringifying :) Thats work :) Cpu cycles
[11:33:05] <bugweiser> I don't nececarily want input lengt to be identical to output lengt (adding some random chars was in the back of my mind).
[11:33:21] <bugweiser> i just want to save on any imaginale cycle that is'nt needed per se.
[11:33:40] <bugweiser> s/imaginale/imaginable/
[11:34:37] <maroon> ok, then a stream encryption cipher which outputs byte values from 0-94. You can then have ciphertext = ( (plaintext-32) + stream) mod 95 + 32, and then decode it by subtracting the stream instead of adding
[11:35:27] <maroon> when yoour 'binary' alphabet has 95 chars instead of a 2^n size, you can't use xor
[11:36:00] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:01] <bugweiser> nope, hence modular addition
[11:36:39] <bugweiser> (and modular subtraction for decoding)
[11:38:02] <bugweiser> also you don't need to waste cycles on doing: plaintext-32
[11:38:46] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[11:38:48] <bugweiser> just grab the byte, add the uniform random value in range 0-94. Also no modulo :) couse you then branch if this resulting sum is over 126
[11:38:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:33] <bugweiser> you add 32+1=33 and do bitwise AND instead. No real mod95 needed :)
[11:39:48] <maroon> well the modulo math is a lot more efficient than branching
[11:40:12] <maroon> ah, the caesar cipher encoding! :)
[11:40:20] <bugweiser> I'll be sure to test it :)
[11:42:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:42:09] <maroon> or have an array containing your base95 alphabet repeated twice, so then your encoding is array[stream+plainbyte]
[11:42:45] *** Quits: gabriel1_ (~gabriel1@37.164.4.83) (Remote host closed the connection)
[11:43:03] <bugweiser> jup, that would work :)
[11:43:24] <bugweiser> even simpler (at a mild cost)
[11:43:25] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[11:43:37] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:44:39] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[11:45:59] <bugweiser> anyway, you all are kind to help me answer/reason about some fundamentals, least I can do is explain how I got to this modular95 addition. It married together a bunch of properties, all working hand in hand. :)
[12:03:02] *** Joins: Warped (~Warped@user/warped)
[12:05:56] *** Joins: vernaz (~vernaz@148.63.127.167)
[12:07:10] *** Quits: tolarz (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 2.3)
[12:07:54] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[12:20:26] *** Quits: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 2.3)
[12:21:16] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[12:24:59] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:25:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:26:23] *** Joins: BadKarma (~BadKarma@user/badkarma)
[12:29:45] *** Quits: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Quit: WeeChat 3.0)
[12:30:35] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[12:31:30] *** Quits: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Client Quit)
[12:39:06] *** Quits: andreasbuhr (~quassel@p548ddd54.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:39:52] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[12:40:09] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[12:40:27] *** Joins: shawn_ (~tent405@185.246.209.58)
[12:40:31] *** Quits: tent405 (~tent405@185.246.209.58) (Read error: Connection reset by peer)
[12:41:45] *** Quits: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de) (Client Quit)
[12:47:15] *** Joins: gggpkm_ (~gggpkm@188.119.64.181)
[12:50:34] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Ping timeout: 252 seconds)
[12:50:48] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[12:50:59] *** Joins: sm2n (~sm2n@user/sm2n)
[12:58:13] *** Joins: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com)
[13:01:33] *** Joins: lampilelo (~user@user/lampilelo)
[13:05:19] *** gggpkm_ is now known as gggpkm
[13:07:48] *** Parts: lampilelo (~user@user/lampilelo) (ERC (IRC client for Emacs 27.2))
[13:22:39] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[13:23:01] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[13:25:35] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[13:30:46] *** Quits: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr) (Ping timeout: 252 seconds)
[13:31:37] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[13:39:21] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:40:43] *** Joins: vernaz_ (~vernaz@2001:818:d8da:9b00:a83d:9ad3:5468:e2c1)
[13:42:16] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 252 seconds)
[13:43:01] *** Joins: Guest65 (~Guest65@94-36-102-198.adsl-ull.clienti.tiscali.it)
[13:45:23] *** Joins: gabriel1_ (~gabriel1@37.165.181.63)
[13:47:49] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 252 seconds)
[14:01:57] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[14:02:39] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[14:05:25] *** Joins: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr)
[14:08:48] *** Quits: paul0 (~paul0@2804:1b3:8401:fbfd:b959:b935:3df0:da36) (Quit: Leaving)
[14:19:25] *** Joins: JTL (~irc@user/jtl)
[14:27:27] *** Joins: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt)
[14:34:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 246 seconds)
[14:43:05] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[14:43:42] *** Quits: vernaz_ (~vernaz@2001:818:d8da:9b00:a83d:9ad3:5468:e2c1) (Remote host closed the connection)
[14:47:55] *** Joins: gabriel1__ (~gabriel1@37.171.214.110)
[14:50:31] *** Quits: gabriel1_ (~gabriel1@37.165.181.63) (Ping timeout: 252 seconds)
[15:00:44] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614)
[15:03:39] *** Quits: yggdrasil (~yggdrasil@75-161-21-194.albq.qwest.net) (Ping timeout: 245 seconds)
[15:05:26] *** Joins: yggdrasil (~yggdrasil@67-0-88-50.albq.qwest.net)
[15:07:22] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[15:07:45] *** Joins: kish` (~aqua@user/aqua)
[15:09:10] *** Quits: rqsd (~rqsd@user/rqsd) (Ping timeout: 252 seconds)
[15:11:14] *** Joins: rqsd (~rqsd@user/rqsd)
[15:18:59] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[15:28:40] *** Joins: igemnace (~ian@user/igemnace)
[15:33:32] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614) (Remote host closed the connection)
[15:34:45] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[15:34:55] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[15:38:06] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[15:38:46] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:39:35] *** Joins: igemnace (~ian@user/igemnace)
[15:39:58] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Ping timeout: 252 seconds)
[15:44:21] *** Joins: ze26zefo (bfa39a78db@ircbox.informatik.uni-erlangen.de)
[15:45:41] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[15:48:02] *** Joins: esses (uid38151@id-38151.hampstead.irccloud.com)
[15:48:43] *** Joins: szarkaorg (~szarka@2001-48F8-9004-E05-E5F7-B73E-512E-142C-dynamic.midco.net)
[15:50:58] *** Quits: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr) (Ping timeout: 252 seconds)
[15:51:27] *** Joins: _rtypo (~alex@user/rtypo)
[15:52:07] *** Quits: szarkanet (~szarka@2001-48F8-9004-E05-AD86-4432-59A4-445A-dynamic.midco.net) (Ping timeout: 252 seconds)
[15:52:25] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[15:54:39] *** Joins: dez (uid92154@user/dez)
[15:55:37] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[15:56:56] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[15:59:06] *** Quits: Dan0maN (~Dan0maN@user/dan0man) (Ping timeout: 260 seconds)
[16:04:05] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614)
[16:08:37] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614) (Ping timeout: 252 seconds)
[16:10:29] *** Joins: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com)
[16:13:07] *** Joins: Dan0maN (~Dan0maN@user/dan0man)
[16:21:26] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614)
[16:22:07] *** Joins: vernaz_ (~vernaz@148.63.127.167)
[16:25:46] *** Quits: vernaz (~vernaz@2001:818:d8da:9b00:bd33:2309:7921:b614) (Ping timeout: 252 seconds)
[16:26:52] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[16:30:38] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[16:33:02] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:34:29] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[16:38:58] *** Joins: machinedgod (~machinedg@135-23-192-217.cpe.pppoe.ca)
[16:40:36] *** Quits: AllMyNames (~AllMyName@user/allmynames) (Quit: Leaving)
[16:40:52] *** Joins: AllMyNames (~AllMyName@user/allmynames)
[16:42:30] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[16:44:15] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[16:48:12] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[16:48:46] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[16:49:35] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[16:51:45] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:52:49] *** Quits: lxlldr (~I@a89-152-175-20.cpe.netcabo.pt) (Ping timeout: 245 seconds)
[16:59:06] *** Joins: chomwitt (~chomwitt@ppp-2-85-111-14.home.otenet.gr)
[17:01:55] *** Quits: gabriel1__ (~gabriel1@37.171.214.110) (Ping timeout: 252 seconds)
[17:08:32] *** Quits: gggpkm (~gggpkm@188.119.64.181) (Remote host closed the connection)
[17:09:46] *** Quits: Guest65 (~Guest65@94-36-102-198.adsl-ull.clienti.tiscali.it) (Ping timeout: 256 seconds)
[17:11:03] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[17:16:57] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[17:17:38] *** ze26zefo is now known as tolarz
[17:18:12] *** Joins: gggpkm (~gggpkm@188.119.64.181)
[17:23:51] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[17:24:07] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[17:29:45] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[17:30:29] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[17:30:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:44:16] *** Quits: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net) (Ping timeout: 252 seconds)
[17:47:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[17:47:18] *** Joins: HifiKuno (~HifiKuno@167-179-170-202.a7b3aa.bne.nbn.aussiebb.net)
[17:47:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:48:37] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[17:49:54] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 245 seconds)
[17:49:58] *** Guyver2_ is now known as Guyver2
[17:51:05] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[17:54:53] *** Joins: cwebber (~user@user/cwebber)
[17:58:26] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[18:02:11] *** swebb_ is now known as swebb
[18:10:14] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:11:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:15:47] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[18:16:30] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:18:44] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Read error: Connection reset by peer)
[18:19:01] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:21:01] *** Joins: cousteau (~cousteau@user/cousteau)
[18:21:09] <cousteau> Hi! 
[18:23:57] *** Joins: mouseghost (~draco@user/mouseghost)
[18:26:20] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[18:26:23] <cousteau> I read that there was some drama with the implementation of SHA3 and the choice of the "capacity" parameter, which sacrificed potential post-quantum security for the sake of efficiency, and that there were possible plans to revert to the original specification.  How did all that end up? 
[18:26:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 252 seconds)
[18:30:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[18:43:51] <wasamasa> > In response to the controversy, in November 2013 John Kelsey of NIST proposed to go back to the original c = 2d proposal for all SHA-2 drop-in replacement instances.[35] The reversion was confirmed subsequent drafts[36] and the final release.[4]
[18:44:36] *** Quits: chiselfu1e (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:44:56] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:45:29] <cousteau> I... totally missed that last part. 
[18:45:38] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:49:15] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[18:49:35] <cousteau> I somehow only read the first two references, but the "and the final release" was on a separate line and I missed that part. 
[18:50:19] *** Quits: cwebber (~user@user/cwebber) (Ping timeout: 252 seconds)
[18:54:03] <cousteau> I was interested in whether SHA-3 would resist quantum attacks.  Apparently it doesn't, but SHA-2 does. 
[18:57:47] *** Quits: vernaz_ (~vernaz@148.63.127.167) (Remote host closed the connection)
[19:02:18] *** Joins: kish` (~aqua@user/aqua)
[19:02:23] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:23:37] *** Joins: vernaz (~vernaz@148.63.127.167)
[19:24:27] *** Joins: Narrat (~omnius@p200300df5f0b351c06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[19:47:25] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[19:49:45] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[19:51:11] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[19:52:29] *** Quits: damarusama (~damarusam@209.52.44.123) (Quit: leaving)
[19:53:20] *** Quits: cacu[m] (~cacuconve@2001:470:69fc:105::b9df) (Ping timeout: 246 seconds)
[19:54:06] *** Joins: cacu[m] (~cacuconve@2001:470:69fc:105::b9df)
[20:03:02] *** Joins: imi (~imi@catv-80-98-11-3.catv.broadband.hu)
[20:05:24] *** Quits: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net) (Read error: Connection reset by peer)
[20:07:57] *** Joins: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr)
[20:10:13] *** Joins: CryptoClub (~fafs@static-110-97-62-95.ipcom.comunitel.net)
[20:16:27] *** Quits: semisimple (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.2)
[20:21:38] *** Quits: MacGyver (~macgyver@user/macgyver) (Remote host closed the connection)
[20:23:20] *** Joins: MacGyver (~macgyver@user/macgyver)
[20:32:49] *** Joins: vernaz_ (~vernaz@148.63.127.167)
[20:33:36] *** Joins: zro (~zro@user/zro)
[20:34:54] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 260 seconds)
[20:42:00] *** Joins: aleck1 (~aleck@user/aleck)
[20:44:40] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 252 seconds)
[20:54:04] *** Quits: vernaz_ (~vernaz@148.63.127.167) (Remote host closed the connection)
[21:08:21] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Quit)
[21:08:28] *** Joins: Moonligh2 (~Moonlight@64.253.17.179)
[21:08:42] *** Joins: semisimple (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de)
[21:18:01] *** Joins: mei (~mei@user/mei)
[21:22:05] *** Joins: mouseghost (~draco@user/mouseghost)
[21:24:29] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[21:31:15] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[21:34:13] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 252 seconds)
[21:34:16] *** Guyver2_ is now known as Guyver2
[21:37:37] *** sarnold_ is now known as sarnold
[21:51:25] *** Quits: Moonligh2 (~Moonlight@64.253.17.179) (Ping timeout: 268 seconds)
[22:02:35] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[22:02:59] *** Quits: shawn_ (~tent405@185.246.209.58) (Quit: Leaving)
[22:04:19] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.2.1)
[22:09:31] *** Joins: d1cor (~diego@179.63.242.100)
[22:22:03] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[22:23:37] *** Quits: fanis30 (~fanis30@adsl-141.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[22:24:28] *** Joins: Guyver2_ (~Guyver@2001:985:f3f:1:8053:e6d0:4807:ca53)
[22:24:43] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 268 seconds)
[22:25:15] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[22:25:22] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[22:26:30] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[22:26:52] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:27:11] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 268 seconds)
[22:27:12] *** Guyver2_ is now known as Guyver2
[22:37:31] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:5090:c36b:b72b:7d01)
[22:39:45] *** Joins: qbt (~qbt@user/edun)
[22:45:39] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[22:47:21] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[22:47:46] *** Joins: kish` (~aqua@user/aqua)
[22:59:15] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:5090:c36b:b72b:7d01) (Ping timeout: 268 seconds)
[22:59:27] *** Quits: FireFly (firefly@glowbum/gluehwuermchen/firefly) (Ping timeout: 265 seconds)
[22:59:46] *** Joins: FireFly (firefly@glowbum/gluehwuermchen/firefly)
[23:02:06] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[23:14:40] *** Quits: semisimple (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[23:16:04] *** Joins: semisimple (~semisimpl@ipbcc1ab10.dynamic.kabel-deutschland.de)
[23:17:22] *** Joins: Guyver2_ (~Guyver@2001:985:f3f:1:8053:e6d0:4807:ca53)
[23:19:37] *** Joins: Seirdy0 (~Seirdy@sourcehut/user/seirdy)
[23:20:13] *** Quits: Guyver2 (~Guyver@2001:985:f3f:1:8053:e6d0:4807:ca53) (Ping timeout: 268 seconds)
[23:20:13] *** Guyver2_ is now known as Guyver2
[23:20:15] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:20:38] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[23:22:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 245 seconds)
[23:26:09] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[23:27:28] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:30:10] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[23:32:46] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 250 seconds)
[23:34:09] *** Seirdy0 is now known as Seirdy
[23:34:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[23:34:57] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[23:36:02] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:41:49] *** Quits: imi (~imi@catv-80-98-11-3.catv.broadband.hu) (Ping timeout: 252 seconds)
[23:45:08] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[23:45:38] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[23:55:01] *** Joins: imi (~imi@catv-80-98-11-3.catv.broadband.hu)
