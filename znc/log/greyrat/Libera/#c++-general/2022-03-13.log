[00:02:04] *** Quits: paul424 (~tom@ip-5-172-236-117.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:02:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[00:03:48] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[00:06:25] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[00:11:02] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[00:11:16] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[00:11:22] *** Joins: nafen_ (~nafen@gateway/tor-sasl/nafen)
[00:12:55] *** Joins: filename (~kilitary@188.68.215.221)
[00:18:17] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[00:18:51] *** Joins: nafen_ (~nafen@gateway/tor-sasl/nafen)
[00:19:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:20:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:33:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:36:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:38:02] *** Joins: _filename (~kilitary@188.242.105.134)
[00:40:30] *** Quits: filename (~kilitary@188.68.215.221) (Ping timeout: 250 seconds)
[00:40:33] *** _filename is now known as filename
[00:40:51] *** Quits: ville (~ville@user/ville) (Quit: ville)
[00:41:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:46:32] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:50:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:52:53] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[00:53:13] *** Joins: nafen_ (~nafen@gateway/tor-sasl/nafen)
[00:58:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:00:57] *** Quits: kaichiuchu (~mike@user/kaichiuchu) (Ping timeout: 240 seconds)
[01:02:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:02:54] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:03:19] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:11:32] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:db92:dbdf:1da7:6fb9)
[01:11:32] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:db92:dbdf:1da7:6fb9) (Changing host)
[01:11:32] *** Joins: RoKenn (~RoKenn@user/rokenn)
[01:16:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[01:19:47] *** Inline__ is now known as Inline
[01:22:55] *** Quits: andreasbuhr (~quassel@p5dcf991b.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:25:41] *** Quits: AmR (~AmREiSa@156.199.236.198) (Quit: Konversation terminated!)
[01:27:31] *** Quits: robod34 (~Username@79.113.243.73) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:29:20] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 272 seconds)
[01:34:09] *** Quits: Giovanni (~Giovanni@176.55.170.26) (Ping timeout: 252 seconds)
[01:43:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:43:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:43:54] *** ChanServ sets mode: +v npaperbot
[01:57:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:58:33] <johnny> on a similar note..  let's say you have an interface, but one implementation doesn't use the arguments, but you don't want the compiler/linter to complain. i realize i used (void)arg in the body.. i have no idea where and how i heard about that even :(
[01:59:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:00:34] <PJBoy> that's a cast to void, very very common
[02:00:56] *** Joins: manjaro-user (~manjaro-u@199-7-159-1.eng.wind.ca)
[02:01:03] <PJBoy> it's like an explicit acknowledgement that it's unused
[02:02:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:03:35] <johnny> it's weird when you don't realize how you picked up a technique like that
[02:04:18] <johnny> i've browsed a fair amount of C++ code before ever writing C++ tough
[02:04:20] <johnny> though*
[02:04:51] <johnny> hmm.. on another note.. sometimes i feel like it's somehow a rare skill to be able to read code in other languages, but it shouldn't be should it?
[02:05:20] <johnny> not that i'd say i could produce it of course! and then there's langauges like haskell where i  might not be abel to understandw hat's going on quite so well
[02:05:48] <johnny> i dun have much experience with the *log style languages either
[02:06:20] <johnny> i am a fan of the declarative type conceptually though
[02:07:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[02:12:08] *** Joins: CaCode (~CaCode@user/cacode)
[02:12:52] <Alipha> johnny: oh, i fully expect to be able to read any code in any language that derives its syntax from C... or BASIC, pascal..
[02:13:22] <johnny> maybe it's just that tons of folks aren't used to the code being available, so it just doesn't occur to them to read it
[02:14:12] <johnny> certainly a ton of folks seem to prefer to rewrite something they don't understand than to understand it if it was written in say a different style, even in the same language
[02:14:37] <Alipha> johnny: and c++ programmers will generally just omit the parameter name instead of casting to void, eg, `void foo(int, int) {}
[02:15:13] <johnny> i assume that doxygen will handle cases like that and still show the argument name of the interface? or?
[02:16:03] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[02:22:29] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[02:22:49] <PJBoy> guess you'll have to check
[02:22:53] *** Joins: Guest7469 (~Guest@host76.190-137-36.telecom.net.ar)
[02:25:13] *** Quits: Leone (~Leo@216.154.12.122) ()
[02:28:15] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5325)))
[02:28:16] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[02:30:12] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[02:33:42] *** Quits: magla (~gelignite@d5366f7c.access.ecotel.net) (Quit: Stay safe!)
[02:34:03] <Alipha> johnny: if you have separate declarations and definitions, then you could include the param name in the declaration but not the definition. Or, you can put the name in a comment, eg, void foo(int /* bar */) {}
[02:34:11] <Alipha> Or you can just use the void cast
[02:34:46] <johnny> i was just asking if it would reflect in the doxygen based on the "parent" (since C++ doesn't have a separate interface)
[02:35:09] <johnny> i've never used doxygen on my projects since it's just me
[02:35:34] <Alipha> I don't know what doxygen does, sorry
[02:36:25] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[02:37:06] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:42:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:43:36] <johnny> then i'll just continue with void casting then
[02:43:52] <johnny> at leastfor now
[03:00:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:02:18] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:03:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:05:34] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:1030:27f5:3084:25d2)
[03:09:43] <hnOsmium0001[m]> johnny: if you have access to c++17, you can also use the [[maybe_unused]] attribute
[03:10:10] <johnny> ain't no maybe here tho
[03:10:17] *** Joins: Leone (~Leo@216.154.12.122)
[03:13:31] <PJBoy> that attribute sucks
[03:15:33] *** rdrg109_ is now known as rdrg109
[03:19:38] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:24:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:27:56] *** Joins: pulse (~pulse@user/pulse)
[03:31:15] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7) (Quit: Quit)
[03:39:07] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:39:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:41:48] *** Joins: ferdna (~ferdna@user/ferdna)
[03:48:40] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:50:33] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[03:52:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:55:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[04:00:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:04:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:20:20] *** Quits: CalamityBlue (~CalamityB@user/CalamityBlue) (Read error: Connection reset by peer)
[04:21:37] *** Parts: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) ()
[04:25:28] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:28:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7)
[04:30:33] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:33:36] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:34:04] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 250 seconds)
[04:36:17] *** Joins: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88)
[04:40:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[04:44:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[04:44:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[04:44:42] *** Joins: skapata (~Skapata@user/skapata)
[04:54:16] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d9af:8eb3:1109:8cbb) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:56:04] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:59:18] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[05:01:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:02:58] *** Quits: Guest7469 (~Guest@host76.190-137-36.telecom.net.ar) (Remote host closed the connection)
[05:05:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:05:29] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:15:55] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:20:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:22:10] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:22:18] *** Joins: ymwm_ (~yingmanwu@27.153.166.227)
[05:25:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:27:48] *** Quits: filename (~kilitary@188.242.105.134) (Ping timeout: 250 seconds)
[05:37:01] *** Joins: _filename (~kilitary@188.242.105.134)
[05:37:01] *** _filename is now known as filename
[05:42:30] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:adfa:97b2:16e:b6e4)
[05:43:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:43:55] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:43:55] *** ChanServ sets mode: +v npaperbot
[05:47:44] *** Quits: manjaro-user (~manjaro-u@199-7-159-1.eng.wind.ca) (Ping timeout: 272 seconds)
[05:47:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:49:00] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[05:50:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[05:52:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[06:02:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:05:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[06:14:28] *** Joins: Inline__ (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[06:17:01] *** Quits: Inline (~Inline@p200300cd472d8600a7f83f236a05ec56.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:21:24] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[06:26:42] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[06:26:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:28:54] *** Quits: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie) (Ping timeout: 272 seconds)
[06:30:36] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[06:40:30] *** Quits: proller (~p@2a02:6b8:b081:b65a::1:2b) (Ping timeout: 252 seconds)
[06:42:21] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:44:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[07:02:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:06:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[07:13:29] *** Quits: emerent (~quassel@p200300cd5743c3f6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:14:13] *** Joins: emerent (~quassel@p200300cd5743c31aba27ebfffed28a59.dip0.t-ipconnect.de)
[07:14:59] *** Joins: adeliktas0 (~adeliktas@i59F5FF5C.versanet.de)
[07:17:21] *** Quits: adeliktas (~adeliktas@i59F4D539.versanet.de) (Ping timeout: 252 seconds)
[07:17:21] *** adeliktas0 is now known as adeliktas
[07:21:21] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:25:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:43:01] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:46:10] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[07:57:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:03:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:06:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:07:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[08:10:20] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:14:27] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:16:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:44:12] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::43)
[08:53:40] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:54:59] *** Quits: AssKoala (~asskoala@user/asskoala) (Remote host closed the connection)
[08:55:42] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:57:36] *** Joins: _filename (~kilitary@188.242.105.134)
[08:59:27] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[08:59:27] *** _filename is now known as filename
[09:03:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:06:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[09:12:48] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e196:6345:d265:9a7) (Quit: Quit)
[09:22:24] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:27:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:43:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:43:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:43:54] *** ChanServ sets mode: +v npaperbot
[10:04:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:07:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[10:15:14] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:18:48] *** Joins: ac_slater (~ac_slater@c-73-221-73-144.hsd1.wa.comcast.net)
[10:20:07] <ac_slater> hey guys, I feel like I lost a lot of intuition lately. Can someone help me with this? I just want to init an unordered_map with a template pack. I think I need to help it along, curious how you all would do it
[10:20:11] <ac_slater> https://coliru.stacked-crooked.com/a/0eacec8a2af5988c
[10:20:39] <ac_slater> seems like I want to take an initializer list of std::pair or something
[10:24:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:26:11] *** Joins: tlophd_becky__ (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[10:26:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[10:26:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[10:26:20] *** Joins: skapata (~Skapata@user/skapata)
[10:27:02] *** Quits: thad_the_man_2 (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net) (Ping timeout: 272 seconds)
[10:30:24] <Alipha> ac_slater: yeah, unfortunately, there's not a great way to do that. You need to tell make_map that the {} expression is a std::pair, eg, make_map(std::pair{"a", 1})
[10:30:50] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:33:40] <ac_slater> Alipha: I see. So it's the template pack and not the map ctor
[10:33:54] <ac_slater> thanks Alipha
[10:34:13] <Alipha> Indeed
[10:56:48] *** Joins: pepperon1 (~pepperoni@172.58.99.255)
[10:57:26] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:59:54] *** Quits: pepperoni (~pepperoni@172.58.99.238) (Ping timeout: 256 seconds)
[11:04:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:08:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:19:25] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:22:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:24:57] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::43) (Ping timeout: 240 seconds)
[11:25:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:27:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:40:19] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:41:13] *** Joins: toulene (~toulene@user/toulene)
[11:42:51] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:45:35] *** Joins: toulene (~toulene@user/toulene)
[11:47:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8da:9afd:10c2:81a6)
[11:58:17] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:59:31] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[12:05:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:08:16] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[12:08:20] *** Quits: pepperon1 (~pepperoni@172.58.99.255) (Read error: Connection reset by peer)
[12:08:41] *** Joins: pepperoni (~pepperoni@172.58.99.255)
[12:09:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:10:51] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[12:14:28] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[12:16:15] <ac_slater> hmm I see std::mem_fn is going away in c++20. Should I be using std::bind since it seems to not be disappearing ?
[12:26:48] *** Joins: robod34 (~Username@79.113.243.73)
[12:31:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:35:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[12:45:08] *** Joins: blackout69 (~blackout6@37.183.230.121)
[12:45:56] <Raziel> ac_slater, it's not going away, it's just constexpr'd
[12:46:09] <ac_slater> oh you're right thansk
[12:46:12] <ac_slater> thansk *
[12:46:14] <ac_slater> thanks *
[12:46:18] <Raziel> anyway, there's very few times when using mem_fn directly is really the best approach v:
[12:46:20] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[12:46:23] <ac_slater> yea I know
[12:46:50] <ac_slater> I usually use std::apply and std::invoke but I have a case where I need to do the classic dispatch map, as in std::string to mem_fn...
[12:47:04] <Raziel> sounds fair enuff
[13:03:56] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[13:06:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:07:50] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[13:10:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:19:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:24:14] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:25:51] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[13:26:07] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:27:31] *** Joins: ARoxdale (~ARoxdale@ip-84-203-29-247.broadband.digiweb.ie)
[13:29:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:29:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:31:24] *** Joins: manjaro-user (~manjaro-u@199.119.235.163)
[13:32:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:38:38] <manjaro-user> tsk. Can a byte array that is interpreted as a utf8, be unconverted back into a byte array?
[13:39:04] *** Joins: chris64 (~chris@user/chris64)
[13:40:06] <Raziel> "interpreted" implies it doesn't modify the underlying data, so... probably?
[13:41:28] <manjaro-user> hmmmmm
[13:42:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:43:22] <manjaro-user> I'm trying to get a javascript blob into a c++ object. I can use the text() function and have that interpreted as a QString, but it seems I lose data integrity with that. The byte size is totally different.
[13:43:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:43:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:43:56] *** ChanServ sets mode: +v npaperbot
[13:44:04] <Raziel> unfortunately I'm not too familiar with how Qt handles these things. I guess worst case scenario you just make a copy, so you can keep the original as well
[13:44:24] <manjaro-user> if I use the arrayBuffer() function, while that preserves the data in javascript, I can't figure out how to transfer it to c++. I am considering writing it physically to a file and just reading from it.
[13:45:26] <manjaro-user> Raziel: Well I am curious; In c++ proper [ we'll call it ], have you ever had to transfer data from javascript to a c++ object?
[13:47:26] <Raziel> when you say data, how is that data formatted?
[13:48:01] <Raziel> I have transferred data around in different formats, usually xml/json if it's between languages or platforms and binary if it's not
[13:48:32] <manjaro-user> hmmmm
[13:48:49] <manjaro-user> If I post the 5 lines of javascript, is that enough information?
[13:49:11] <Raziel> probably
[13:49:32] <manjaro-user> fetch( "%1", { headers: { 'range': 'bytes=%2-%3', }, } )
[13:49:33] <manjaro-user> .then( res => res.blob() )
[13:49:35] <manjaro-user> .then( async(blob) => {
[13:49:37] <manjaro-user> 	const byteArray = await blob.arrayBuffer();
[13:49:38] <manjaro-user> 	%4.setByteArray( byteArray );
[13:49:40] <manjaro-user> });
[13:49:41] <manjaro-user> oops!
[13:49:55] <manjaro-user> sorry! this stupid irc client interprets \n as returns
[13:49:57] <Raziel> you could use a paste website next time :p
[13:50:15] <manjaro-user> Yeah I know. I was trying to fit it into one line. SORRY
[13:50:26] <manjaro-user> %1 is an url argument.
[13:50:33] <Raziel> I guess it still doesn't tell me much about what's in there, but you seem to want to save text as a binary byte array?
[13:50:41] <Raziel> which, you can, but why?
[13:51:24] <manjaro-user> Not text.
[13:51:30] <manjaro-user> Here let me do a proper pastebin.
[13:54:54] <manjaro-user> https://paste.centos.org/view/8bae478c
[13:56:38] <manjaro-user> Raziel: ^ You might be asking why I don't just create a request in c++ to do the same thing this javascript is doing, but by doing it in javascript on a page, it allows me to avoid anti-webcrawler shennanigans on the server end.
[13:56:40] <Raziel> so you're saving... files, of whatever arbitrary type they may be? then yeah, you have to do binary, but then why would you interpret them as utf8?
[13:58:16] <Raziel> where is your actual problem? the transferring between js and cpp part? or the loading the binary blob into cpp?
[13:58:20] <manjaro-user> Raziel: Oh utf8 happens to be one of the methods that works with Qt. Basically, you can call this function: `void setString( QString s );` in javascript, and have it work. You can not however do, `void setByteArray(QByteArray ba );`
[13:58:59] <Raziel> sounds like the problem is the actual transferring. so I take it both the js and the cpp are running in the same process?
[13:59:47] <manjaro-user> yeah sort of. Basically QWebEngine allows me to run javascript on whatever page it has loaded.
[13:59:53] <Raziel> right
[14:00:58] <manjaro-user> You can even do a lambda callback, however it doesnt work with an example like that javascript because it is asynchronous.
[14:01:38] <Raziel> to be honest, I have no idea what the proper way of doing that through qt is then, or if there is one. as for alternatives, saving a binary file and loading it in through cpp should work, as might sockets/websockets, but that does feel ass-backwards considering
[14:02:13] <Raziel> what about QDataStream? does that work across em?
[14:03:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:04:00] <manjaro-user> Raziel: Tahts a good question. I'll look that up. Also its comforting that you agree that the file saving feels ass backwards, and yet its a workable solution.
[14:04:45] <manjaro-user> I did file a bug report, and in the meantime, I'll probably just go with the ass backwards way. https://bugreports.qt.io/browse/QTBUG-101670
[14:06:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:09:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:09:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:12:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[14:20:07] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[14:22:43] <xkoncek> {auto [x, y] = {0, 1};}
[14:22:44] <geordi> error: cannot decompose inaccessible member 'initializer_list<int>::_M_array' of 'initializer_list<int>'
[14:22:57] <xkoncek> would they finally fix this?
[14:23:46] <xkoncek> nevermind, i remembered i can use 2 lines
[14:25:33] *** Inline__ is now known as Inline
[14:28:00] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 252 seconds)
[14:28:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:36:12] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[14:38:27] *** Joins: lxsameer (lxsameer@user/lxsameer)
[14:43:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:46:04] *** Joins: blackout69 (~blackout6@37.183.198.248)
[14:46:42] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[14:50:01] <LordKalma> !rq
[14:50:01] <nolyc> LordKalma: <PJBoy> aka 0DR violatio :D
[14:51:11] *** Joins: ivii (~ivan@user/ivii)
[14:55:34] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:07:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:07:35] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:08:25] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:08:49] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[15:10:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:10:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[15:26:38] <xkoncek> odr is the thing that manifests in link errors?
[15:29:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:32:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:50:07] <very_sneaky> does anybody know of any good linear algebra _and_ calculus libraries? looking for things like numerical integration, derivation, interpolation, extrapolation, as well as the linear algebra things like matrix multiplication, dot/cross products, vector rotation using quaternions/euler angles etc. My google fu hasn't yielded me anything that does all of this, which is frustrating because i
[15:50:09] <very_sneaky> really don't want to be implementing the basics myself
[15:51:52] *** Joins: plastico (~plastico@neomutt/plastico)
[15:54:19] *** Joins: proller (~p@80.240.216.69)
[15:57:39] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Quit: Leaving)
[15:59:26] <cbreak> eigen can do the linear algebra part... the rest I don't think so :/
[16:01:42] <very_sneaky> yeah, this is what i'm noticing :\
[16:01:58] <m_ben> very_sneaky: had the following in my github recommendations a few days ago: https://github.com/CD3/libInterpolate haven't tried it yet though
[16:02:58] <very_sneaky> eigen can do the linear algebra (including vector rotations, which not all can) - armadillo can do linear algebra + interp/extrap, but no vector rotations, blaze can only do the linear algebra, xtensor can do interp, extrap, maybe some integration, some linear algebra, but not the rotations
[16:04:00] <very_sneaky> m_ben: cool, cheers
[16:04:24] <m_ben> try to search on github for such things, it's a lot better than google
[16:04:24] <very_sneaky> brings in both eigen and boost :\
[16:04:38] <cbreak> eigen and boost are good :)
[16:05:14] <very_sneaky> sure, no complaints, just a lot of dependency for interpolation
[16:05:54] <cbreak> at work, I think some use https://www.alglib.net/, but I don't know it myself
[16:06:38] <LordKalma> I'll make my own numpy++
[16:07:11] <very_sneaky> LordKalma: that's the stated goal of xtensor
[16:07:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:07:38] <very_sneaky> cbreak: looks interesting, certainly covers part of the solution space not saturated by the others
[16:07:43] <very_sneaky> it does numerical integration, for one.
[16:08:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[16:10:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:12:26] <very_sneaky> well, it looks like armadillo comes the closest - it does everything except for quaternions/euler angle rotations. maybe i should just cop that and write my own standalone geometry library
[16:13:02] <cbreak> that's not going to help make the field of geometry libraries smaller :)
[16:13:32] <very_sneaky> cbreak: can you recommend any?
[16:15:12] *** Quits: manjaro-user (~manjaro-u@199.119.235.163) (Ping timeout: 250 seconds)
[16:18:56] <cbreak> I usually end up using either eigen, or live-of-the-land in existing projects
[16:19:44] <cbreak> most of my recent work was in python :( so it was mostly numpy, or tensorflow, or the USD library
[16:20:17] <cbreak> don't think this is useful for you
[16:21:50] <very_sneaky> all good, it just looks like i'm going to have to implement _something_ myself, unless i want to bring in multiple math libs as dependencies and handle the conversions
[16:22:26] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[16:28:35] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:28:40] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[16:29:20] *** Joins: aosync (~aws@mx1.aosync.me)
[16:30:16] *** Quits: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de) (Client Quit)
[16:30:51] *** Joins: Inline (~Inline@p200300cd473ac50039f51e8a2d5e1728.dip0.t-ipconnect.de)
[16:35:51] *** Joins: ymwm__ (~yingmanwu@27.153.167.53)
[16:36:52] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[16:38:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:38:21] *** Quits: ymwm_ (~yingmanwu@27.153.166.227) (Ping timeout: 252 seconds)
[16:40:33] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[16:41:14] *** Quits: zoraj_ (~zoraj@209.126.81.159) (Quit: ZNC - https://znc.in)
[16:43:31] *** Quits: artok_ (~azo@mobile-access-bcee54-113.dhcp.inet.fi) (Quit: fa)
[16:57:55] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[17:01:45] *** Quits: aosync (~aws@mx1.aosync.me) (Remote host closed the connection)
[17:02:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:02:26] *** Joins: aosync (~aws@mx1.aosync.me)
[17:04:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[17:07:46] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:07:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:10:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:11:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:11:25] *** Joins: pulse (~pulse@user/pulse)
[17:12:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:18:13] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:22:48] *** Quits: lxsameer (lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[17:23:31] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:24:58] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[17:29:09] *** Quits: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:32:37] <ashafq> cbreak: Thank you for your help yesterday. I am refactoring the interaction between audio and disk-read threads.
[17:34:01] *** Joins: Hawker (~pi@user/hawker)
[17:38:48] *** Joins: darkbit (~db@136.158.8.67)
[17:40:48] <Hawker> Hey I was wondering if one of you knew which library that these slides use... is it #include <socket.h>? https://www.csd.uoc.gr/~hy556/material/tutorials/cs556-3rd-tutorial.pdf
[17:42:59] <ashafq> Hawker: That looks like posix libraries
[17:43:13] <m_ben> Hawker: probably the one provided by your OS. on linux you can read the documentation with "man socket"
[17:43:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:43:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:43:56] *** ChanServ sets mode: +v npaperbot
[17:44:33] <Hawker> so how would I be importing it?
[17:44:55] <Hawker> and I guess side question, would I need to worry about any compiler flags with g++?
[17:44:56] <ashafq> #include <socket.h> ? What is your OS?
[17:45:05] <Hawker> ashafq, Deb 11
[17:45:15] <Hawker> Just wanted to confirm
[17:45:31] <ashafq> Hawker: Then it's part of libc
[17:46:10] <ashafq> The only thing you'll want to add is `g++ -pthreads` when you add pthread support
[17:46:44] <Hawker> ashafq, ok, already using it too.
[17:46:53] <Hawker> thanks guys, I'm new to socket programming lol
[18:08:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:11:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[18:14:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:24:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:35:19] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[18:35:58] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[18:36:20] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[18:39:08] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[18:39:08] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[18:39:08] *** Joins: AssKoala (~asskoala@user/asskoala)
[18:40:32] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4)
[18:42:26] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[18:44:48] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:45:16] *** Joins: Rayke (rayke@user/rayke)
[18:57:37] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[18:58:09] *** Joins: toulene8 (~toulene@user/toulene)
[18:58:39] *** Quits: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[18:59:17] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[19:00:15] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[19:00:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c)
[19:00:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c) (Changing host)
[19:00:21] *** Joins: skapata (~Skapata@user/skapata)
[19:01:17] *** Joins: Guest1057 (~Guest10@2a02:21b0:644c:7e9f:3d6c:4ef2:3791:f782)
[19:02:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:03:33] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 252 seconds)
[19:08:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:11:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[19:12:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:15:59] *** Quits: Guest1057 (~Guest10@2a02:21b0:644c:7e9f:3d6c:4ef2:3791:f782) (Ping timeout: 256 seconds)
[19:16:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[19:23:43] *** Quits: toulene8 (~toulene@user/toulene) (Read error: Connection reset by peer)
[19:24:01] *** Joins: toulene (~toulene@user/toulene)
[19:26:43] *** Joins: ferdna (~ferdna@user/ferdna)
[19:27:05] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:27:19] *** Parts: bv (~bv@user/bv) (WeeChat 3.3)
[19:31:17] <Alipha> xkoncek: a compile or link error is the most common result of an ODR violation, but you can have more insidious results, such as defining two different inline functions with the same name in different TUs, taking function pointers to them, but then the function pointers end up pointing to the same function because the function definitions "get merged"
[19:32:42] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[19:34:11] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:40:12] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[19:42:18] *** Joins: AmR (~AmREiSa@156.199.236.198)
[19:46:44] *** Joins: mrvn (~mrvn@ip-046-005-255-082.um12.pools.vodafone-ip.de)
[19:46:54] *** Quits: darkbit (~db@136.158.8.67) (Ping timeout: 272 seconds)
[19:48:05] <mrvn> cbreak: I just want the code to fail at the point where the asser is so I can look at a backtrace to find the UB.
[19:48:33] <cbreak> that is too late
[19:48:36] <cbreak> make it fail before
[19:48:42] <cbreak> when you try to dereference null pointers
[19:48:47] <Alipha> mrvn: it would be better to just use address and UB sanitizers instead.
[19:49:30] <mrvn> Say I have this code where foo is one compilation unit and bla another that I need to find: https://godbolt.org/z/v99Gq5YcT   Is the second assert the best one can do?
[19:50:39] <cbreak> no
[19:50:43] <cbreak> it's negatively braindead.
[19:51:03] <cbreak> look, you don't seem to understand this:
[19:51:16] <cbreak> the address space is FULL of invalid addresses
[19:51:33] <cbreak> there's an incredible amount of unused possibley pointers that are all not used
[19:51:36] <Alipha> mrvn: the second assert is just adding pointless logic and doesn't do anything more than the first assert
[19:51:54] <cbreak> the start of the address space is just one of them
[19:52:21] <mrvn> cbreak: I understand all the theory. But I do have running code that fails because it accesses 0x16 from Foo &foo; foo.z;
[19:52:22] <cbreak> c++ guarantees that references refer to objects that at least were alive at the time they were bound.
[19:52:42] <cbreak> mrvn: yes. So someone invoked UB.
[19:52:48] <mrvn> and I need to find it
[19:52:51] <cbreak> you can't avoid that there
[19:53:02] <cbreak> find the problem before it invokes UB
[19:53:18] <mrvn> And I want to detect the case in foo() and not 1 hour later when something uses the ref.
[19:53:20] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Quit: Stay safe!)
[19:53:30] <cbreak> detect it before.
[19:53:35] <mrvn> cbreak: how?
[19:53:52] <cbreak> by checking pointers for validity before you dereference them
[19:53:53] <Alipha> mrvn: if you're compiling without optimizations, the compiler will likely dutifully check the address of the reference
[19:54:18] <Alipha> mrvn: use address and undefine sanitizers
[19:55:16] <PJBoy> re compiling without optimisations: it does not
[19:55:39] <mrvn> cbreak: have you ever tried to debug such a problem? There a millions of places this could be.
[19:55:45] <cbreak> sure.
[19:55:59] <cbreak> but those are easy to find, if I can reproduce them
[19:56:02] <mrvn> Alipha: thanks, didn't think to check the asm for no optimization. You get the warning but also the code.
[19:56:07] <cbreak> just look at the stack trace of a crash
[19:56:29] <PJBoy> ubsan's definitely the way to go https://godbolt.org/z/TdheWrTx4
[19:56:31] <cbreak> or the core dump, if you're on linux
[19:56:35] <mrvn> cbreak: the stacktrace shows me the place where the ref gets accessed, not where it gets created. No help there.
[19:56:41] <PJBoy> there's no point continuing the discussion after seeing the ubsan output
[19:57:17] <mrvn> There's no point now because Alipha solved it. Just turn of -O2 for that function.
[19:57:34] <PJBoy> I did that, it didn't do a nullptr check
[19:57:48] <PJBoy> https://godbolt.org/z/77ajxYsMc
[19:57:57] <PJBoy> meanwhile ubsan tells you what's wrong and where
[19:58:00] <Alipha> mrvn: why are you not using ubsan and asan
[19:58:06] <PJBoy> why would you not want to use the best tool for the job
[19:58:08] <mrvn> https://godbolt.org/z/onaaPbMzh
[19:58:26] <PJBoy> your assert doesn't seem to be firing
[19:58:42] <PJBoy> meanwhile there's a warning saying it probably won't work
[19:58:58] <mrvn> PJBoy: asm output looks right.
[19:59:10] <PJBoy> you gonna debug your code by reading the ASM?
[19:59:20] <PJBoy> try ubsan, it gives useful human information
[19:59:29] <mrvn> NO. I run it with the volatile hack and already found the culprid in the backtrace.
[19:59:34] <PJBoy> it's literally purpose built for the job
[19:59:44] <PJBoy> its full name is "undefined behaviour sanitizer"
[19:59:50] <PJBoy> and it will find all kinds of other forms of UB
[20:00:04] <PJBoy> plus it's not horribly questionable in the best case scenario
[20:00:40] <mrvn> PJBoy: good long term plan but I just had to fix that one case now.
[20:00:51] <PJBoy> yeah so use ubsan, it catches that one case
[20:01:05] <PJBoy> then you've simultaneously achieved your long term plan and this one case
[20:01:17] <PJBoy> it's not like you need to set anything up
[20:01:37] <mrvn> PJBoy: I would have to learn how to use it first.
[20:01:49] <PJBoy> the -fsanitize=undefined
[20:01:52] <PJBoy> it's in the godbolt I linked
[20:02:17] <PJBoy> it's a really good tool
[20:02:36] <Alipha> It's literally just a command line flag
[20:03:05] <Alipha> -fsanitize=undefined,address,leak -D_GLIBCXX_DEBUG
[20:06:46] <mrvn> and then I have to recompile everything. Takes 4 hours to build.
[20:07:15] <mrvn> long term plan.
[20:09:28] <PJBoy> four hours eh?
[20:09:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:09:59] <PJBoy> so you only get to do one clean build a day
[20:10:36] <PJBoy> man that's tough
[20:10:39] <mrvn> PJBoy: potentially 2 or 3. So really not something I wanted to do.
[20:10:52] <mrvn> I wanted to use it now and not wait 4 hours.
[20:10:55] <PJBoy> you work over 12 hour days sometimes?
[20:11:15] <mrvn> If I take a 4 hour break then yes.
[20:11:30] <PJBoy> ah right, well that's great
[20:11:38] <PJBoy> just compile and take a four hour break
[20:12:45] <PJBoy> four hour build's still pretty crazy
[20:12:46] <mrvn> Now I don't have to.
[20:13:02] <PJBoy> you'll definitely want to make the most out of your builds
[20:13:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:13:46] <mrvn> Nah, this will run through now hopefully and I will throw the whole thing out when it's done.
[20:14:00] <mrvn> Not my code, not my problem.
[20:15:42] * PJBoy shrugs
[20:16:23] <mrvn> If it fails again I will do a full rebuild overnight. I will know in 2 hours.
[20:17:23] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[20:17:46] <mrvn> Luckily there was a testcase that failed in the first minute.
[20:21:44] *** Joins: paul424 (~tom@ip-5-172-236-205.multi.internet.cyfrowypolsat.pl)
[20:21:58] <cbreak> For that, maybe some kind of compile cache would help
[20:22:06] <cbreak> I don't trust those things at all... but...
[20:22:27] <mrvn> cbreak: adding a compiler option means everything is a miss.
[20:22:52] <cbreak> yeah. but at least you don't have to pay 4 hours again when switching back
[20:23:00] <mrvn> ccache includes the inode of the compiler, all the flags and the hash of the input in it's lookup. It's pretty reliable.
[20:23:27] <mrvn> I have ccache on per default system wide.
[20:26:52] <xkoncek> i have been on Fedora Rawhode for some time but my sources are still not compilable with clang, it complains about some __begin and it has to do with std::ranges
[20:27:30] <xkoncek>  /usr/bin/../lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/bits/iterator_concepts.h:982:13: error: no matching function for call to '__begin'
[20:27:55] <PJBoy> clang still hasn't implemented ranges
[20:28:26] <PJBoy> gcc hasn't finished implementing it either
[20:28:43] <PJBoy> too busy working on C++23 >_>
[20:29:42] <xkoncek> i could start tinkering my build system with modules again, but even if i start i lose any syntax highlightin in my IDE once i use `import`
[20:34:17] <mrvn> xkoncek: it doesn't assume import is defined to something it can ignore?
[20:35:15] <xkoncek> kdevelop uses clang backend, it can already recognize `import` as keyword, but i don't think it knows how to actually import imported symbols
[20:35:25] <xkoncek> as opposed to #include
[20:36:26] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:36:41] <mrvn> ahh, that would break all the tab-completion and type inspection in the IDE.
[20:37:40] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:37:40] *** Parts: Hawker (~pi@user/hawker) (Leaving)
[20:40:27] *** Joins: Guest1082 (~Guest10@2a02:21b0:644c:7e9f:3d6c:4ef2:3791:f782)
[20:44:57] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[20:51:18] <xkoncek> it would be really convenient to be able to write C wrappers in a single file without exposing the whole C included header
[20:57:29] *** Parts: mrvn (~mrvn@ip-046-005-255-082.um12.pools.vodafone-ip.de) ()
[20:59:35] <PJBoy> maybe one day they'll get modules working
[21:00:46] *** Quits: ymwm__ (~yingmanwu@27.153.167.53) (Ping timeout: 250 seconds)
[21:10:15] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:11:16] *** Quits: Guest1082 (~Guest10@2a02:21b0:644c:7e9f:3d6c:4ef2:3791:f782) (Quit: Client closed)
[21:11:32] *** Joins: angelacrust (~angelacru@182.64.84.36)
[21:13:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[21:13:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:13:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[21:15:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:15:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:17:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:33:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:33:14] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:38:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea)
[21:38:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:42:05] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:43:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:43:57] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:43:57] *** ChanServ sets mode: +v npaperbot
[21:45:24] *** Quits: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (Ping timeout: 240 seconds)
[21:46:48] *** Joins: jbalint (~jbalint@071-090-119-177.res.spectrum.com)
[21:49:58] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:50:25] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[21:56:34] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:55e3:354c:cb16:8919)
[21:57:21] <zen_coder> I getting following linker error in a big legacy project "error: undefined reference to 'ffi_type_pointer'... collect2: error: ld returned 1 exit status"
[21:57:28] *** Quits: pepperoni (~pepperoni@172.58.99.255) (Read error: Connection reset by peer)
[21:57:59] *** Joins: pepperoni (~pepperoni@172.58.99.255)
[21:58:26] <zen_coder> this "ffi_type_pointer" seems to come from libffi, but nobody is using this library in the whole project
[21:59:11] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:59:42] <Alipha> zen_coder: could be another library is using it
[22:01:29] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[22:03:16] <zen_coder> I guess so, but how do I find this out?
[22:04:52] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:05:47] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[22:06:39] *** Quits: cheetahw26 (~cheetahw2@14.150-pool-xdsl-mi.sccoast.net) (Quit: Client closed)
[22:08:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:09:21] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[22:09:44] <zen_coder> Alipha: I get this error when linking to executable
[22:10:09] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:10:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:12:29] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:13:11] <Alipha> No idea, sorry
[22:14:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:15:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:15:40] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[22:15:51] *** Quits: angelacrust (~angelacru@182.64.84.36) (Quit: Client closed)
[22:16:22] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:17:38] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Quit: ZNC - https://znc.in)
[22:18:30] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[22:22:25] *** Quits: Figworm (FiggyWitIt@user/figworm) (Quit: Figworm)
[22:22:37] *** gentooclimax is now known as climax
[22:23:58] *** Quits: mgot_ (~mgot@vps-35cddd71.vps.ovh.net) (Quit: Goodbye)
[22:24:48] *** Joins: mgot (~mgot@vps-35cddd71.vps.ovh.net)
[22:25:48] *** climax is now known as gentooclimax
[22:26:12] <PJBoy> ldd
[22:26:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:28:37] <PJBoy> the linker should say where the undefined reference is
[22:29:09] <PJBoy> like `main.cpp:(.text+0x10): undefined reference to `ffi_type_pointer'` or something
[22:29:27] <PJBoy> then you know it's main.cpp that wanted that
[22:36:55] <LordKalma> https://www.reddit.com/r/cpp/comments/td5np8/to_save_c_we_must_save_abi/
[22:36:56] <LordKalma> hot takes
[22:39:02] <great_taste> do any of you guys have a stroustrup hair style?
[22:39:16] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:39:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:40:02] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:40:18] <PJBoy> I hate people that write so many words
[22:40:25] <zen_coder> PJBoy: he said that the undefined reference is in a .so file
[22:41:14] <PJBoy> saying there's a C ABI is already enough to make me think they don't get it
[22:41:42] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[22:41:42] <PJBoy> well there you go then, that so needs libffi
[22:45:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:46:08] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[22:47:26] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:48:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[22:51:53] <zen_coder> PJBoy: but why?
[22:51:59] <zen_coder> I do not see any include
[22:53:22] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[22:57:03] <PJBoy> transitive dependencies
[22:57:18] <PJBoy> i.e. an include of a header file that includes the libffi function
[23:01:24] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8da:9afd:10c2:81a6) (Ping timeout: 240 seconds)
[23:02:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9d44:ce22:b648:2a17)
[23:03:51] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[23:08:25] <PJBoy> from that reddit thread
[23:08:28] <PJBoy> \> by policy, a feature without two implementations is removed
[23:08:34] <PJBoy> that's obviously such bullshit
[23:08:42] <PJBoy> just look at modules
[23:08:56] <PJBoy> that shit *barely* has one implementation years after C++20
[23:09:50] <mort> how are you supposed to make your types hashable? I found on the web someone saying you should do `template<> struct std::hash<YourType> { std::size_t operator()(const YourType &s) { ... } };` but GCC complains about that
[23:09:58] <mort> "error: specialization of 'template<class _Tp> struct std::hash' in different namespace"
[23:11:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:13:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:14:18] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Read error: Connection reset by peer)
[23:14:49] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5) (Ping timeout: 268 seconds)
[23:15:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[23:16:05] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[23:17:44] <xkoncek> i once wanted to save an address of a goto label to a variable outside of the function
[23:17:50] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:18:03] <xkoncek> as a struct data member
[23:18:21] <mort> you can do that with GCC extensions
[23:19:13] <xkoncek> but not outside of the function
[23:20:07] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:23:23] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[23:24:20] <mort> true
[23:24:30] <mort> well, not outside the stack frame, you can use it as a form of longjmp up the stack iirc
[23:25:15] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[23:25:38] <Alipha> mort: put that inside `namespace std {` and remove the std::
[23:25:49] <xkoncek> i wanted a poor-man's coroutine
[23:29:38] <RandomReader> that actually should be equivalent without a namespace {} wrapper
[23:30:21] <RandomReader> unless you're already inside a different namespace, but that'd be a different error
[23:30:33] <RandomReader> I wonder what the nuance is
[23:31:31] *** Parts: v4mp (~v4mp@user/v4mp) ()
[23:32:07] *** Joins: v4mp (~v4mp@user/v4mp)
[23:32:15] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:33:23] <RandomReader> ...oh, it's a version thing, gcc7 and later is fine, 6 is not
[23:33:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[23:34:34] *** Joins: teepee (~teepee@openscad/teepee)
[23:36:54] <RandomReader> https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56480
[23:39:44] <RandomReader> so I'm not crazy, that's always been valid C++11, gcc just missed that standard defect fix around the '11 timeframe
[23:40:04] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:40:32] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[23:42:34] *** Joins: lxsameer (lxsameer@user/lxsameer)
[23:42:47] *** Joins: teepee (~teepee@openscad/teepee)
[23:43:19] <PJBoy> don't jump to conclusions
[23:43:28] <PJBoy> you're still crazy
[23:43:35] <RandomReader> :(
[23:44:40] <RandomReader> I wonder if there are any compilers or analyzers that have DR granularity .. that would make for some interesting codebase checks
[23:44:50] <PJBoy> I need an extension that replaces all links to http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#NNN with https://cplusplus.github.io/CWG/issues/NNN.html
[23:45:23] *** Joins: ferdna (~ferdna@user/ferdna)
[23:46:06] <RandomReader> Chrome?  Redirector could probably do it, let me try...
[23:46:15] <PJBoy> chrome-like, yeah
[23:47:42] <PJBoy> looks promising
[23:48:01] <RandomReader> ...yep, it works: https://chrome.google.com/webstore/detail/redirector/ocgpenflpmgnfapjedencafcfakcekcd
[23:48:22] <RandomReader> http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#*  ->  https://cplusplus.github.io/CWG/issues/$1.html
[23:48:37] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:48:51] <RandomReader> I use it to force reddit links to old.reddit, although there is a subtlety I haven't figured out yet where I still need to hit enter in the URL bar to make the page load properly
[23:49:03] <RandomReader> some subset doesn't use old. and still has the JS folding
[23:50:25] <PJBoy> works like a charm, nice one
[23:52:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:52:21] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:53:26] <johnny> RandomReader, do you stay logged out of reddit?
[23:53:34] <RandomReader> I don't have an account
[23:53:37] <johnny> ah o
[23:53:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:ad63:bd3f:cc95:19ea) (Ping timeout: 252 seconds)
[23:54:01] <RandomReader> it just comes up a lot in the things I search for
[23:54:25] <johnny> i'e never bothered with something like that redirector extension because i do have one. it lets you choose it as an option to use old reddit
[23:54:51] <johnny> but definitely would have to use such a thing if i didn't :)
[23:57:37] <RandomReader> I keep wondering why they don't just permanently fix it
[23:57:57] <RandomReader> if there's a benefit to the new style, I haven't figured out what it is .. it's even lousy on mobile, which is what I would have thought it was meant for
[23:58:34] <johnny> i don't really talk to many non nerds on the internet, so my sample of opinions is too biased
[23:58:55] <johnny> i don't bother asking the subset of people i talk to about anything fancy looking.
[23:59:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:59:26] <RandomReader> hehe
[23:59:55] <johnny> the worst part is all these nerds consider themselves paragons of logic and rationality, when i know it's not true
