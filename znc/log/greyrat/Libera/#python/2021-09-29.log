[00:00:14] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-80.dynamic.3bb.co.th)
[00:01:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:01:21] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 245 seconds)
[00:01:40] *** Joins: wyclif (~wyclif@user/wyclif)
[00:02:16] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Leaving...)
[00:02:38] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:03:23] *** Quits: p-i- (~Ohmu@mx-ll-223.206.71-80.dynamic.3bb.co.th) (Ping timeout: 252 seconds)
[00:05:20] *** Quits: mukul (~mukul@c-24-6-109-135.hsd1.ca.comcast.net) (Quit: Leaving.)
[00:05:53] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[00:06:13] *** Quits: KombuchaKip (~kip@192.252.230.5) (Remote host closed the connection)
[00:06:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:06:38] *** Joins: mike18 (~geri@216.200.232.252)
[00:07:10] *** Joins: wyclif (~wyclif@user/wyclif)
[00:07:11] <mike18> hi - i need some help with matplotlib: https://ideone.com/DgbQjp how can i set the ylabel for the 3 plots and the title?
[00:07:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:08:16] *** Joins: KombuchaKip (~kip@192.252.230.5)
[00:08:32] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[00:08:59] *** Quits: iomari891 (~iomari891@102.91.4.149) (Ping timeout: 265 seconds)
[00:09:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[00:09:58] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[00:09:59] <SnoopJ> mike18, call set_ylabel() on the Axes instances. plt.*() functions generally operate on the current Axes instance (which will usually be the last subplot in this case)
[00:10:14] <SnoopJ> https://matplotlib.org/stable/gallery/lines_bars_and_markers/csd_demo.html#sphx-glr-gallery-lines-bars-and-markers-csd-demo-py
[00:11:03] <p-i-_> Samian: wow! Some real gems in this channel. Starred!
[00:11:11] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 246 seconds)
[00:11:24] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[00:12:14] <p-i-_> I've been using numba to accelerate some code but to be able to insert C++ chunks like GL-shader-code is sweet.
[00:13:00] <SnoopJ> it looks more like that code generates an entire extension module for you
[00:13:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:13:26] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f) (Ping timeout: 245 seconds)
[00:13:31] *** Quits: int3l (~int3l@78-83-113-66.spectrumnet.bg) (Quit: WeeChat 3.3)
[00:13:56] *** Joins: apocalyptech (~apocalypt@wilug/apocalyptech)
[00:14:28] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:14:42] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:15:02] *** Quits: hanaan (~naan@user/naan) (Read error: Connection reset by peer)
[00:15:46] <p-i-_> https://github.com/p-i-/PiCxx <-- I rolled my own some years back, but this looks next-level
[00:16:20] <SnoopJ> CFFI is pretty dang good
[00:16:36] <apocalyptech> Howdy all!  So I love using the `g` "general" numerical format because if a float val happens to be close enough to an int, it outputs the number as if it was just an int.  (ie: `'{:g}'.format(1.0)` outputs `1` instead of `1.0`)
[00:17:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:17:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:17:34] *** Quits: PickleRick (~William@188.31.49.21.threembb.co.uk) (Quit: Leaving)
[00:17:52] <apocalyptech> One thing I'd like to avoid in the thing I'm currently working on, though, is how `:g` will revert to scientific notation once numbers get too small, etc.  Like `'{:g}'.format(0.000008)` will output `8e-06` instead of what I'd like, which is `0.000008`
[00:18:12] *** Joins: wyclif (~wyclif@user/wyclif)
[00:18:17] <apocalyptech> Obviously in those cases I could just use the `f` formatter instead, but I'd love to keep the representing-as-int behavior
[00:18:25] <apocalyptech> Is there any formatter that'll do that for me automatically?
[00:18:53] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Remote host closed the connection)
[00:19:08] <newdimension> This is an example of a python logging formatter: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'   What are the "variables" called? e.g. %(message)s. I'd like to find a list of all that's available
[00:19:37] <grym> newdimension: it's on the page for logging docs; sec
[00:19:41] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[00:20:03] <grym> newdimension: they are LogRecord attributes; https://docs.python.org/3/library/logging.html#logrecord-attributes
[00:20:17] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Leaving...)
[00:20:54] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[00:21:35] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:588:33b7:952:7ce8)
[00:21:47] <newdimension> grym: Thank you! I had that page open. I'm not sure why I still can't navigate the docs properly
[00:22:13] <grym> newdimension: when in doubt, C-f :)
[00:22:25] <grym> or google <thing> site:docs.python.org
[00:22:30] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[00:22:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 265 seconds)
[00:22:42] <newdimension> I just read the Formatter objects sections (https://docs.python.org/3/library/logging.html#formatter-objects) and it made sense to me that if it's not in that section it wouldn't be there
[00:22:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:22:45] <grym> newdimension: for offline use, zeal or dash are nice
[00:22:59] <grym> and have freeform text search
[00:23:03] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:23:04] <SnoopJ> some of the stdlib docs are particularly messy, but the logging module's documentation is rich. Not exactly the most organized, though.
[00:23:17] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:23:40] *** Joins: zebrag (~chris@user/zebrag)
[00:23:40] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:23:42] *** Joins: wyclif (~wyclif@user/wyclif)
[00:23:59] *** Joins: waynew (~wayne@user/waynew)
[00:24:04] <SnoopJ> the web docs are generated from https://github.com/python/cpython/tree/main/Doc as another offline option (but the website looks nice and is usually where I go)
[00:24:06] *** Quits: cutotopo (~cutotopo@151.49.208.192) (Quit: cutotopo)
[00:25:18] *** Quits: Akuli (~Akuli@82-203-161-82.bb.dnainternet.fi) (Quit: Leaving)
[00:25:23] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[00:25:33] <newdimension> Got it, thank you!
[00:26:40] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:27:03] <ablegreen> this snippet of code looks ugly to me: https://bpa.st/DZQA -- how can i simplify it without resorting to magic constants and other programming no-no's?
[00:27:25] *** Joins: cdown (~cdown@89.32.122.5)
[00:27:28] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[00:27:40] <ablegreen> basically i want to map strings to a corresponding integer
[00:27:40] <apocalyptech> ablegreen: https://docs.python.org/3/library/enum.html could probably reduce that down to practically nothing
[00:27:46] <newdimension> I have a decorator that logs the run time of a function. I'm adding that at a few function in my program to diagnose a slow runtime. In terms of logging I created a logger that catches logs from the module of the decorator and I'm creating a file handler with a hardcoded path of the log file I want. Is there any better way to do any of this?
[00:27:46] <newdimension> Especially the hardcoding a path part.
[00:27:57] <grym> ablegreen: you want an enum.Enum
[00:28:17] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[00:28:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:28:22] <KirkMcDonald> newdimension: Use a profiler?
[00:28:24] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[00:29:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:29:31] <newdimension> Example of what I'm talking about https://dpaste.org/xU3V
[00:29:44] <newdimension> KirkMcDonald: Would that be an IDE function? I'm using Pycharm
[00:29:44] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:30:23] <KirkMcDonald> newdimension: It's a thing in the standard library: https://docs.python.org/3/library/profile.html
[00:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[00:30:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[00:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:31:10] <ablegreen> apocalyptech: grym: oh i guess https://docs.python.org/3/library/enum.html#programmatic-access-to-enumeration-members-and-their-attributes would work. getting an enum's name
[00:31:11] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:31:13] <ablegreen> thanks
[00:31:24] <apocalyptech> ablegreen: cheers!
[00:31:35] <KirkMcDonald> newdimension: Or you may be able to just run your script inside of the profiler, e.g. `python3 -m cProfile foo.py`
[00:31:42] <ablegreen> oh and it even acts like a dictionary! TIL!
[00:31:46] <KirkMcDonald> newdimension: There are many ways to use the profiler.
[00:32:09] *** Quits: arinov (~arinov@31.142.40.252) (Quit: WeeChat 3.1)
[00:32:17] <KirkMcDonald> newdimension: And there are third-party profilers, e.g. line_profiler.
[00:32:19] *** Quits: grooverman (~grooverma@179.99.120.247) (Read error: Connection reset by peer)
[00:32:27] *** Joins: arinov (~arinov@31.142.40.252)
[00:32:33] <newdimension> KirkMcDonald: I'll look into those thanks! I'm still interested in any feedback on the logger if people have any. As that would be useful regardless of the use-case
[00:32:47] *** Joins: fikran (~fikran@user/fikran)
[00:33:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:34:08] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Quit: Leaving)
[00:34:43] *** Joins: wyclif (~wyclif@user/wyclif)
[00:34:57] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:35:16] <Samian> SnoopJ you don't like pybind11 ?
[00:35:27] <Samian> you'd use cffi over pybind11 ?
[00:35:37] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[00:36:09] <SnoopJ> Samian, I've never used pybind11 but I don't dislike it. It's a fine choice for more explicit generation of a module.
[00:36:18] <jinsun> apocalyptech: `'{:f}'.format(1.0).rstrip(".0")` maybe?
[00:36:30] <SnoopJ> cppyy is also good (and may get even better with the changes planned for C++20 modules)
[00:36:32] *** Joins: tnez (~el@user/tnez)
[00:37:01] <KirkMcDonald> jinsun: That'll turn 10 into "1".
[00:37:20] <jinsun> oh yes, bad
[00:37:36] <apocalyptech> jinsun: Yeah, I suppose I could do some stripping via methods like that
[00:37:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:38:02] <apocalyptech> jinsun: I've actually just gone ahead and done my usual thing when I run into this which is comparing `round(val, 6)` to `int(val)` and formatting differently based on that result
[00:38:44] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2.1)
[00:39:02] *** Quits: Cyp (~cyp@192038129207.mbb.telenor.dk) (Read error: Connection reset by peer)
[00:39:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[00:39:22] *** Joins: Cyp (~cyp@192038129207.mbb.telenor.dk)
[00:39:30] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[00:39:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[00:40:01] <jinsun> some regex will do proabably, but I guess not much better than the round comparison your doing
[00:40:15] *** Joins: wyclif (~wyclif@user/wyclif)
[00:40:24] *** Quits: arinov (~arinov@31.142.40.252) (Ping timeout: 265 seconds)
[00:40:30] <KirkMcDonald> Once upon a time I wrote a Rational type in JavaScript that has a custom toDecimal() method, that formats the value as a string with some very particular rules.
[00:40:38] <apocalyptech> heh, yeah, adding regex to this would make me feel itchy.  :D
[00:40:41] *** Joins: Naan (~naan@user/naan)
[00:40:44] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[00:41:42] <KirkMcDonald> E.g. if the value is an integer, it formats it with no decimal point. But if the value *rounds* to an integer within the given number of decimal places, it displays it as e.g. "1.0".
[00:41:56] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f)
[00:41:59] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[00:42:02] <apocalyptech> Ah, fun
[00:42:23] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[00:42:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:42:56] *** Joins: grooverman (~grooverma@177.102.119.40)
[00:43:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:44:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:45:24] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[00:45:29] *** Quits: Cyp (~cyp@192038129207.mbb.telenor.dk) (Ping timeout: 246 seconds)
[00:45:31] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:45] *** Joins: wyclif (~wyclif@user/wyclif)
[00:46:34] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f) (Ping timeout: 260 seconds)
[00:47:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:c115:6e13:6a0a:2e74) (Quit: Textual IRC Client: www.textualapp.com)
[00:48:35] <jiffe> if I perform `x = 'string'` and then 'y = x' is y a separate instance of the string or does it point to the same string x references in memory ?
[00:48:36] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:49:27] <apocalyptech> jiffe: Separate.  (Also that's pretty easy to just test out yourself, eh? :)
[00:49:46] <SnoopJ> jiffe, it depends on the implementation.
[00:50:04] <apocalyptech> Huh, does it?
[00:50:16] <grym> apocalyptech: consider python -c "x = 'string'; y=x; print(y is x)"  returns True for me
[00:50:25] <ssbr> huh? aren't you both wrong? x = y *always* means that x and y are two references to the same object.
[00:50:31] <ssbr> unconditionally
[00:50:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:50:44] <KirkMcDonald> jiffe: Both names refer to the same object, but strings are immutable.
[00:50:47] <SnoopJ> oh wait sorry no it does not depend on the implementation
[00:50:53] <SnoopJ> because of what KirkMcDonald just said, those are exactly the same object
[00:50:56] <grym> you're just adding another name
[00:51:04] <SnoopJ> jiffe, this is a helpful read about names: https://nedbatchelder.com/text/names1.html
[00:51:15] *** Joins: wyclif (~wyclif@user/wyclif)
[00:51:24] * SnoopJ was thinking along the lines of a slightly different question
[00:51:28] <apocalyptech> Oh feh, yeah, y'all are right.  :P
[00:51:30] <apocalyptech> (of course)
[00:51:44] <apocalyptech> Wasn't thinkin' about string immutability properly.
[00:52:49] <apocalyptech> I was jumping to answering the question "If I then do `x = 'foo'`, does the value of y also change", which wasn't what was asked.  :)
[00:53:47] <SnoopJ> apocalyptech, right and *that's* where what I said might come into play. The implementation does have some freedom to choose how to lay things out, since the language itself doesn't really acknowledge memory.
[00:53:55] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:54:36] <Samian> anyone know a way to speed this up? [np.unique(np.round(ra.random(64) * 100)).tolist() for _ in range(500)]
[00:54:54] <Samian> np.unique is very expensive..  If it could take 2d arrays and perform np.unique per row, it may be faster.
[00:56:21] *** Quits: StickyIcky2 (~StickyIck@ec2-34-201-88-49.compute-1.amazonaws.com) (Ping timeout: 245 seconds)
[00:56:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:56:26] <Repiphany> What is ra.random(64)*100 meant to produce
[00:56:45] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[00:56:47] *** Joins: wyclif (~wyclif@user/wyclif)
[00:56:51] <grym> 100 random floats
[00:56:57] <Samian> Repiphany  a random distribution of 64 numbers between 0 and 100
[00:57:20] *** Joins: StickyIcky2 (~StickyIck@187.211.36.68)
[00:57:26] <Repiphany> Why not np.random.randint
[00:57:53] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[00:58:45] <Samian> good question, let me see
[00:59:29] <grym> Samian: np.random.choice(100, (64,50))
[00:59:29] <grym> :)
[00:59:39] <Samian> ahh nice grym
[01:00:04] <grym> Samian: possibly 101 not 100
[01:00:14] <grym> i think it's exclusive
[01:00:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:00:48] <grym> it is exclusive, so if you want any 100s to be possible, then .choice(101, ...
[01:01:15] <grym> and (64, 500), i meant to type
[01:01:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:02:17] *** Joins: wyclif (~wyclif@user/wyclif)
[01:02:52] <Samian> it's also not sorted like np.unique
[01:03:21] <grym>  forgot unique sorts
[01:03:32] <Repiphany> np unique takes an axis parameter
[01:03:37] <grym> you can.. yeah, that
[01:03:48] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[01:04:10] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[01:04:22] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[01:05:23] <grym> so i guess that'd be np.unique(np.random.choice(101, (64,500)), axis=1)
[01:05:34] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[01:05:54] <Samian> niiiceee yess I think that's it, it'll sort each row separately
[01:06:12] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[01:06:18] <grym> close, forgot replace=False
[01:06:59] *** Quits: Sky_Net (~Sky_Net@176.14.213.149) (Read error: Connection reset by peer)
[01:07:11] <Repiphany> It's not obvious what you're trying to use the array for, there's probably a more specific way to do whatever you're later intending with it
[01:07:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[01:07:24] <grym> you might need to do some mgrid hackery there
[01:07:40] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[01:07:48] *** Joins: wyclif (~wyclif@user/wyclif)
[01:07:52] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 250 seconds)
[01:08:23] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:08:29] <Samian> right, with replace=False np.unique(np.random.choice(10)) is not guaranteed to return 10 numbers, because any two numbers that are the same means one is excluded. There would be 9 numbers in the array in that case.  That's the behavior I was looking for
[01:08:59] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[01:09:24] <grym> Samian: well, then you're in trouble
[01:09:25] <Repiphany> You're not going to be able to produce a 2d np array with a variable number of elements per row, obviously
[01:09:29] <grym> because you can't have ragged arrays
[01:10:33] *** Joins: arinov (~arinov@176.89.27.241)
[01:11:40] <newdimension> Any feedback on this in terms of making it more Pythonic? https://dpaste.org/L6nD
[01:11:42] *** Quits: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr) (Quit: leaving)
[01:11:58] <grym> Samian: might as well do x = [random.sample(range(101),64) for _ in range(500)]  at that point
[01:12:16] <Samian> grym I'm curious what error np.unique would throw if the output was a 2d jagged array
[01:12:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:12:30] <grym> Samian: er,  x = [sorted(random.sample(range(101),64)) for _ in range(500)]  at that point
[01:12:31] <tar_xvf> newdimension: you could have defined each new variable in terms of the last one, like past_week = past_day * 7
[01:12:47] <grym> Samian: there basically just aren't jagged 2d arrays to use to find out
[01:12:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:13:03] <grym> numpy _hates_ making them, you'd have to do horrible nan-padding things
[01:13:19] *** Joins: wyclif (~wyclif@user/wyclif)
[01:13:40] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:13:41] <Samian> grym  that list comprehension is close to where I started: [np.unique(np.round(ra.random(64) * 100)).tolist() for _ in range(500)]..   I'm curious how much faster it is. let me time it
[01:13:43] <grym> but it's always possible to pick 64 unique things from a 101-element collection
[01:13:55] <grym> np.array([sorted(random.sample(range(101),64)) for _ in range(500)]) :/
[01:14:24] <newdimension> tar_xvf: Good idea!
[01:14:27] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[01:15:48] <grym> Samian: for np.array([sorted(random.sample(range(101),64)) for _ in range(500)]) , %timeit returns 17.4 ns ± 0.218 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each)
[01:15:54] <grym> Samian: Good Enough TM
[01:16:16] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:16:48] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[01:16:51] *** Quits: kostkon (~androirc@2a02:587:a104:3da6:185b:b019:5370:b96e) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[01:16:58] <grym> or, uh, was i timing the wrong thing...
[01:17:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:17:04] *** Quits: elena_re (~elena@31.173.82.95) (Quit: WeeChat 3.2)
[01:17:10] <grym> i think i was; now getting 16.2 ms ± 119 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)
[01:17:17] <grym> still, not bad
[01:17:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Client Quit)
[01:18:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:18:21] <grym> (pro tip, %timeit thefunction(), not  %timeit thefunction )
[01:18:25] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:18:49] *** Joins: wyclif (~wyclif@user/wyclif)
[01:19:14] *** Gustavo6046_ is now known as Gustavo6046
[01:19:42] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[01:19:44] <Samian> grym how does that compare with "[np.unique(np.round(ra.random(64) * 100)).tolist() for _ in range(500)]" ?
[01:19:47] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:19:49] <Samian> i'm trying to time it myself right now
[01:20:45] <Samian> I'm running timeit.timeit('[np.unique(np.round(ra.random(64) * 100)).tolist() for _ in range(500)]', number = 1000), but python returns NameError: name 'np' is not defined
[01:21:24] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[01:22:18] *** Joins: ppw (~ppw@user/ppw)
[01:23:15] *** Quits: Narrat (~omnius@p200300df5f13e70206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:23:28] <ppw> is it possible to switch from Code to Markdown in a Jupyter notebook with a keyboard shortcut?
[01:23:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[01:23:52] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[01:23:54] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[01:24:01] *** Joins: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net)
[01:24:19] *** Joins: wyclif (~wyclif@user/wyclif)
[01:24:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:24:35] <Widdershins> ppw: help > keyboard shortcuts
[01:25:16] <ppw> my God, my noobery. thank you.
[01:26:22] *** Quits: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt) (Ping timeout: 252 seconds)
[01:28:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:28:56] *** Quits: Samian (~Sami@user/samian) (Remote host closed the connection)
[01:29:02] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[01:29:03] *** Joins: sudorm (~sudorm@2a01cb00838f6100e5222e3ded465743.ipv6.abo.wanadoo.fr)
[01:29:16] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:29:21] *** Parts: ppw (~ppw@user/ppw) ()
[01:29:50] *** Joins: wyclif (~wyclif@user/wyclif)
[01:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[01:30:42] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[01:30:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[01:30:56] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:31:05] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[01:31:29] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[01:32:29] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[01:33:02] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f)
[01:33:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:34:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:35:20] *** Joins: wyclif (~wyclif@user/wyclif)
[01:35:53] <jeho> stewie925, how did your coding challenge quiz go?
[01:36:28] *** Quits: DmanT (~dmant@2a02:908:416:a6e1:8777:a39f:3f17:b754) (Remote host closed the connection)
[01:36:36] <stewie925> I haven't heard back from them... I only got to finish partially on two questions
[01:36:48] <jeho> 4 questions total?
[01:37:22] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f) (Ping timeout: 252 seconds)
[01:38:00] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[01:38:06] <stewie925> no 2 questions, 1 hour
[01:38:28] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[01:39:42] <jeho> ah
[01:40:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:40:18] <jeho> btw, i worked out a solution to that 3some numbers challenge
[01:40:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:40:53] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[01:41:15] <stewie925> oh, nice!
[01:41:44] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:49] <jeho> do you want me to give you a few tips on how to crack it, or do you want to take a quick look at the code?
[01:42:26] <stewie925> jeho: really appreciate your reply - yes could you share tips on how to crack it?
[01:42:34] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:43:25] <stewie925> in the. meantime I am going thru ALL of the problems for the one month challenge in hackerrank
[01:43:50] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[01:43:56] <jeho> stewie925, okay.. this is not the only way to do it, but these are the things I used. Two nested loops to get n1 and n2.. a dict (or unordered_map if C++) will give n3
[01:44:26] <jeho> you can reduce the number of iterations the inner loop has to perform by calculating the range of valid values for n2
[01:44:46] <jeho> sort and dedup `nums`
[01:45:16] <jeho> populate the dict with the nums' values, and the count of how many times each number occurs
[01:45:17] <stewie925> deduce = remove duplicates?
[01:45:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:45:26] <jeho> dedupe
[01:45:27] <stewie925> dedup I mean
[01:45:29] <jeho> dedup
[01:45:31] <jeho> yeah
[01:45:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[01:46:12] <stewie925> thank you, I copied and pasted your tips above :)
[01:46:21] *** Joins: wyclif (~wyclif@user/wyclif)
[01:46:34] <jeho> after you calculate the range of valid values - or the range - the inner loop needs to iterative over, you can use binary search to get to the starting index of the range
[01:46:42] <jeho> cool
[01:48:05] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f)
[01:48:47] <stewie925> appreciate it, jeho!
[01:48:53] <jeho> for instance if the outer loop is currently on the value -5, then the valid range the inner loop should iterate over would be 5/2 to 5 * 2 + 1
[01:49:24] <jeho> anything lower or higher than that range would be impossible to find a valid value for n3
[01:49:36] *** Quits: sudorm (~sudorm@2a01cb00838f6100e5222e3ded465743.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[01:50:34] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:1a5b:75ca:5cd8:ebeb) (Ping timeout: 252 seconds)
[01:50:36] <stewie925> that's good...  we don't have to iterate throughout
[01:51:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:51:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:51:50] <jeho> yeah
[01:51:51] *** Joins: wyclif (~wyclif@user/wyclif)
[01:52:36] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f) (Ping timeout: 245 seconds)
[01:52:58] <jeho> dedup-ing nums speeds up the processing a lot.. the test cases have a lot of repeated characters intended to bog algorithms down
[01:53:14] <jeho> the hash map can hold the frequency counts of the digits
[01:53:24] <jeho> numbers rather
[01:53:57] <stewie925> jeho:  so I am thinking the collections.Counter is in the cards
[01:54:12] <nyuszika7h> I found out my issue with argparse btw, that mysterious error message was because subparsers are not supported with parse_intermixed_args
[01:54:13] <jeho> yes. that would work
[01:54:30] *** Quits: waynew (~wayne@user/waynew) (Quit: stay salty my friends. gopher://gopher.waynewerner.com)
[01:54:45] <jeho> a Counter is essentially what I implemented in C++ and Rust for this
[01:55:57] <stewie925> I really, really love python programming
[01:56:05] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com)
[01:56:22] <jeho> i love programming in general, but python i've found particularly nice
[01:56:31] <stewie925> I agree, jeho
[01:56:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:57:09] <jeho> you can do things in python that one line that take 4 or so lines in other languages
[01:57:21] *** Joins: wyclif (~wyclif@user/wyclif)
[01:57:23] <stewie925> like the ternary operators
[01:57:27] <jeho> that take one line
[01:57:31] <stewie925> and the list comprehensions
[01:57:40] <jeho> list comprehensions are a good example
[01:57:51] <jeho> other languages hav better ternary syntax though
[01:57:56] <stewie925> I bet there is a lot more
[01:58:06] <stewie925> java's ternary operator is a chore
[01:58:20] <jeho> it's the same one a s C/C++ uses
[01:58:24] <jeho> same syntax
[01:58:31] <stewie925> python is almost like spoken english
[01:58:32] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[01:58:44] <stewie925> a = 0 if True else 1
[01:59:09] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:59:16] <jeho> int a = (is_true) ? 0 : 1;
[01:59:43] <stewie925> Ive seen one list comprehension that uses two for loops - think that's too much
[01:59:56] <jeho> that's not uncommon
[02:00:14] <twainwek> i'm trying to install a package via pip and it's complaining about not being able to find libpng devel package. on my system, there is no 'libpng' but a 'libpng16' with libpng16.so etc. How can i get it to use libpng16 instead of libpng without changing my system itself
[02:00:23] <stewie925> yeah, I hate that java ternary operator, not as straightforward as python - even a child could understand the python version easily
[02:00:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[02:00:29] <jeho> 3 is pushing it.. and definitely if a comprehension uses 4, it's best to just use regular loops
[02:00:35] <BtbN> twainwek, install the corresponding -dev package.
[02:00:38] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:00:39] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[02:01:02] <stewie925> jeho: I think using two for-loops in a list comprehension  is almost like showing off ... LOL...
[02:01:12] <jeho> Rust's ternary is: let a = if is_true { 0 } else { 1 };
[02:01:14] <twainwek> BtbN: there is no 'libpng' package. only libpngXX
[02:01:15] *** Joins: gggp (~textual@60.10.23.159)
[02:01:32] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[02:01:34] <BtbN> Consult with your distro about the correct package name, but you need development headers and libs for libpng.
[02:01:42] <stewie925> like the HackerRank problems Discussion section - there are those who share a one-line solution.  I held back from saying "what a show-of"
[02:01:46] <jeho> nah.. 2 isn't showing off.. but 3 or more is just being a dick
[02:02:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:02:31] <stewie925> oh yes  I mean 3 for-loops
[02:02:48] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[02:02:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:02:57] <jeho> i see a lot of people posting their one-liners in python thinking they're the shit becasue they used one line.. but a lot of them have really crappy performance
[02:03:05] <stewie925> but personally Ive only done one for loop for list comprehensions... maybe I should practice two for-loops
[02:03:42] <jeho> yeah.. it would be good to get familiar with 2 for's in comprehensions.. it'll bend your brain trying to absorb it at first
[02:03:45] <twainwek> BtbN: i already have the headers and libs for libpng. But it's not 'libpng', but 'libpng16'. I need pip to point to the right library instead of assuming that a bare 'libpng' library exists
[02:03:57] <stewie925> speaking of HackerRank discussions, I actually comment on one solution with a few lines of code - saying this is better than the one-liners,
[02:04:03] <BtbN> That's just distro package names really
[02:04:09] <BtbN> libpng is libpng
[02:04:33] <jeho> the trick to understanding the order of the loops in a comprehension is imagining two nested loops.. the one that indents more is the one that goes second in the comprehensions
[02:04:43] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:04:47] <twainwek> no, it's libpng16 installed under /usr/include/libpng16 and libpng16.so*. there is *no* 'libpng'
[02:05:03] <jeho> and by reverse reasoning, the for loop that comes second in a comprehension is thee inner loop
[02:05:05] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[02:05:14] <BtbN> That IS libpng
[02:05:18] <BtbN> just version 1.6 of it...
[02:05:25] <twainwek> yes, but pip does not know that.
[02:05:40] <BtbN> pip does not really care either. The invidual setup.py files will
[02:05:40] <twainwek> > "How can i get it to use libpng16 instead of libpng without changing my system itself"
[02:05:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:06:00] <BtbN> If that package does wonky stuff and does not just use pkg-config or something, you're in for pain
[02:06:10] <BtbN> The normal procedure is to install the correct -dev package, and that's it
[02:06:15] <BtbN> and compilers, obviously
[02:06:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:07:01] *** Joins: jess (~jess@libera/staff/jess)
[02:07:04] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[02:07:48] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net)
[02:07:53] <stewie925> I am on this hacker rank problem now - I am determined to make this work lol - https://tinyurl.com/tr2sesxw
[02:07:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[02:08:22] *** Joins: wyclif (~wyclif@user/wyclif)
[02:08:23] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[02:08:37] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[02:08:49] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[02:10:27] <dba> let say I have 5 threads working on a list and one of them failed for some reason, how do I complete or resume the failed thread?
[02:11:01] <graingert[m]> dba: Like a ThreadPoolExecutor worker?
[02:11:32] <dba> graignert[m], yes
[02:11:50] <dba> graingert[m]: Yes
[02:12:09] <graingert[m]> And where did the failure occur?
[02:13:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[02:13:22] <dba> graingert[m]: this is my thread results = pool.starmap(scrap_data, zip(dates[0], dates[1])) . How do I know where the failure occur?
[02:13:47] <graingert[m]> Do you get an Exception?
[02:13:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:14:03] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[02:14:04] <graingert[m]> You can put a try/catch in your `def scrap_data`
[02:14:07] <jeho> stewie925, which one?
[02:14:10] *** Quits: emf (~emf@163.114.132.6) (Ping timeout: 252 seconds)
[02:14:26] <stewie925> Counting Sort
[02:14:31] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:14:36] <stewie925> sorry, Jeho:  Counting Sort
[02:14:40] <jeho> oh good.. that's a good tool to learn
[02:15:02] <stewie925> Im just gonna use collections.Counter() its so damn helpful
[02:15:21] <jeho> don't depend on that.. implement a proper counting sort
[02:15:21] *** Joins: edr (~edr@user/edr)
[02:15:47] <jeho> a counting sort can be implemented with an array
[02:16:11] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com) (Remote host closed the connection)
[02:16:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:16:30] *** Joins: fonini__ (~fofoni@user/fofoni)
[02:16:36] <dba> graingert[m]: try/catch will handle the failure on the code level but what if the code supposed to run fin and thread failed?
[02:16:49] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com)
[02:17:11] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 246 seconds)
[02:17:43] <graingert[m]> dba: Failed in what way?
[02:18:10] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:18:11] *** Quits: jstein_ (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:18:19] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:18:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[02:18:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:19:23] *** Joins: wyclif (~wyclif@user/wyclif)
[02:19:28] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:19:33] *** Quits: fofoni_ (~fofoni@user/fofoni) (Ping timeout: 268 seconds)
[02:19:57] <dba> graingert[m]: I dont know. let me rerun the code again and see if it will failed as it did earlier and get back to you
[02:19:58] *** Joins: farmfrmjakestate (~farmfromj@user/farmfrmjakestate)
[02:20:21] <graingert[m]> Ok I'll let you
[02:21:02] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com) (Ping timeout: 246 seconds)
[02:21:35] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[02:21:56] *** Joins: vicfred (~vicfred@user/vicfred)
[02:21:59] *** Quits: kib (~kib@user/kib) (Quit: WeeChat 3.2.1)
[02:22:53] *** Joins: dulanic (~dulanic@47.187.144.163)
[02:22:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:23:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:24:34] *** Quits: farmfrmjakestate (~farmfromj@user/farmfrmjakestate) (Ping timeout: 250 seconds)
[02:24:53] *** Joins: wyclif (~wyclif@user/wyclif)
[02:25:25] *** Joins: somlis (~somlis@user/somlis)
[02:28:02] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[02:28:04] *** Joins: nomic (~nomic@185.192.69.207)
[02:28:29] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[02:28:33] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:28:34] *** Joins: somlis2 (~somlis@user/somlis)
[02:28:39] *** Joins: kib (~kib@user/kib)
[02:28:55] *** Quits: kib (~kib@user/kib) (Client Quit)
[02:29:23] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[02:29:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:30:24] *** Joins: wyclif (~wyclif@user/wyclif)
[02:30:31] *** Quits: StickyIcky2 (~StickyIck@187.211.36.68) (Read error: Connection reset by peer)
[02:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:32:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:32:29] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:32:44] *** Quits: fonini__ (~fofoni@user/fofoni) (Quit: Leaving)
[02:33:50] *** Quits: joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:5472:b8f:9f13:742a) (Quit: Leaving)
[02:34:01] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:34:47] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:35:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:35:54] *** Joins: wyclif (~wyclif@user/wyclif)
[02:36:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:37:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:39:43] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[02:40:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[02:40:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:40:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:41:24] *** Joins: wyclif (~wyclif@user/wyclif)
[02:42:08] *** Joins: fikran (~fikran@user/fikran)
[02:43:08] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2.1)
[02:45:28] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[02:45:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:46:37] *** Joins: elkclone (~elkclone@user/elkclone)
[02:46:48] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:46:55] *** Joins: wyclif (~wyclif@user/wyclif)
[02:48:00] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[02:50:00] *** Quits: mike18 (~geri@216.200.232.252) (Remote host closed the connection)
[02:51:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:52:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[02:52:25] *** Joins: wyclif (~wyclif@user/wyclif)
[02:57:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[02:57:55] *** Joins: wyclif (~wyclif@user/wyclif)
[03:00:25] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:b453:9856:447e:e0a7) (Read error: Connection reset by peer)
[03:02:04] *** Quits: emerent (~quassel@p200300cd574855d6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:02:12] *** Joins: emerent (~quassel@p200300cd574855a2ba27ebfffed28a59.dip0.t-ipconnect.de)
[03:02:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[03:02:42] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:02:56] *** Joins: Cyp (~cyp@213.237.87.7)
[03:03:23] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:3056:7138:5c42:14fe)
[03:03:26] *** Joins: wyclif (~wyclif@user/wyclif)
[03:06:45] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:08:01] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:3056:7138:5c42:14fe) (Ping timeout: 245 seconds)
[03:08:57] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:3056:7138:5c42:14fe)
[03:10:20] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:10:33] *** Joins: JanC (~janc@user/janc)
[03:11:37] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:12:12] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:14:20] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:43c:8672:c8bc:2f25)
[03:14:42] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Read error: Connection reset by peer)
[03:14:59] *** Joins: Robin_Jadoul (~Robin_Jad@152.67.64.160)
[03:18:17] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[03:18:22] *** Joins: P1ro (~quassel@user/p1ro)
[03:19:16] *** Quits: mei (~mei@user/mei) (Ping timeout: 245 seconds)
[03:21:35] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 246 seconds)
[03:23:10] <rapier> guys, one question: is there real person makes python software using PyQt5?
[03:24:35] *** Joins: Duckle9 (~Duckle@user/duckle)
[03:25:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:25:40] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 250 seconds)
[03:26:02] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:26:03] *** Quits: Duckle (~Duckle@user/duckle) (Ping timeout: 265 seconds)
[03:26:03] *** Duckle9 is now known as Duckle
[03:26:16] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (Ping timeout: 252 seconds)
[03:26:28] *** Quits: nomic (~nomic@185.192.69.207) (Quit: Leaving)
[03:26:42] *** Joins: zebrag (~chris@user/zebrag)
[03:26:55] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:27:32] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[03:27:48] *** Joins: rtur (~weechat@mail.rtur.org)
[03:28:10] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:30:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[03:31:17] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:31:46] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:50] <mefistofeles> rapier: of course there are many people making software with it
[03:33:00] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[03:33:24] *** Joins: nomic (~nomic@185.192.69.207)
[03:34:13] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[03:35:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[03:35:08] *** Quits: luva (~luva@5.180.62.228) (Ping timeout: 252 seconds)
[03:37:00] *** Joins: luva (~luva@5.180.62.231)
[03:37:03] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:9895:b4de:9998:1cda) (Ping timeout: 250 seconds)
[03:38:17] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:43c:8672:c8bc:2f25) (Quit: Textual IRC Client: www.textualapp.com)
[03:39:37] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[03:44:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:44:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:44:59] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:70e6:4ace:868a:87fb)
[03:45:02] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (Ping timeout: 246 seconds)
[03:46:11] *** Joins: dnns01 (~quassel@173.212.236.80)
[03:46:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:47:32] *** Joins: eniac_ (~eniac@gateway/tor-sasl/eniac)
[03:49:21] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:70e6:4ace:868a:87fb) (Client Quit)
[03:49:33] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[03:49:35] *** Quits: jazzy (~jaziz@2600:380:4618:e5c2:19a1:5296:f678:d178) (Ping timeout: 246 seconds)
[03:50:19] <rapier> mefistofeles, is there anything similar to system where you click on control and make the code?
[03:50:29] <rapier> i think pyqt5 very complicated
[03:50:52] *** Joins: Barones (~Barones@177.132.237.5)
[03:51:18] *** Quits: gggp (~textual@60.10.23.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:52:18] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:52:37] <mefistofeles> rapier: to system? I don't know what system are you talking about. But there are symple GUI frameworks, surely. https://pysimplegui.readthedocs.io/en/latest/ this is a somewhat popular one
[03:52:41] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:53:17] *** Quits: flokuehn (~flokuehn@i5E86B39D.versanet.de) (Ping timeout: 252 seconds)
[03:55:02] *** Joins: flokuehn (~flokuehn@mue-88-130-54-143.dsl.tropolys.de)
[03:55:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:56:27] *** Joins: akk (~akk@75.161.146.115)
[03:56:35] <rapier> mefistofeles, like Delphi, where you double click on controls and you write the code
[03:57:52] <mefistofeles> rapier: ah no, not that I am aware of
[03:58:08] <rapier> i'd like to design the interface and write code for functionalities only
[03:58:23] <rapier> write the code for the interface is insane
[03:58:36] <rapier> s/ interface gui
[03:59:49] *** Joins: jazzy (~jaziz@2600:380:4557:1bb1:c061:3679:1363:3566)
[04:00:01] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[04:00:15] <grym> there's a lot to be said for declarative UI
[04:00:29] * grym has written a lot of XAML 
[04:00:39] *** Joins: alzgh (~alzgh@user/alzgh)
[04:01:20] <alzgh> hello, I was reading the inlline documentation of my python installation inside of ipython and I'm wondering where those files are store?
[04:01:44] <nedbat> alzgh: can you show us an example of the docs you're seeing?
[04:01:46] <rapier> grym, yeah, this is insane
[04:01:50] <alzgh> like writing `help(str.split)`
[04:02:01] <rapier> why have they changed that?
[04:02:26] <rapier> it seemed gui programming like delphi and visualbasic were the future
[04:02:47] <nedbat> alzgh: that text is compiled into the code
[04:03:10] <alzgh> where can I find the repository where it's held nedbat
[04:03:14] *** Quits: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 246 seconds)
[04:03:30] <jinsun> alzgh: https://github.com/python/cpython/tree/main/Doc
[04:04:19] <jinsun> or actually that is for the website you want docstrings, which will be in the code in other folders in the same repo
[04:04:21] <grym> rapier: more control, easier to version
[04:04:55] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:05:21] <nedbat> alzgh: https://github.com/python/cpython/blob/main/Objects/clinic/unicodeobject.c.h#L857-L869
[04:05:41] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:05:51] *** Quits: eniac_ (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[04:06:04] <rapier> indeed
[04:06:14] <alzgh> thank you very much nedbat and jinsun much appreciated :D
[04:12:02] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[04:16:21] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[04:20:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 245 seconds)
[04:22:11] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[04:23:07] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (Remote host closed the connection)
[04:23:23] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[04:23:44] *** Joins: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net)
[04:24:38] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:26:22] *** Joins: Code_Bleu (~Code_Bleu@user/code-bleu/x-6939963)
[04:26:41] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[04:28:13] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3d27-f9b8-30f5-ae89.res6.spectrum.com) (Read error: Connection reset by peer)
[04:30:00] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: hej-hej!)
[04:30:26] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:32] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[04:31:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:33:22] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[04:33:46] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:588:33b7:952:7ce8) (Ping timeout: 256 seconds)
[04:34:30] *** Quits: briian (uid321220@id-321220.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:35:01] *** Joins: vlm (~vlm@user/vlm)
[04:35:04] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com)
[04:35:56] *** Quits: Barones (~Barones@177.132.237.5) (Ping timeout: 245 seconds)
[04:37:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:37:24] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[04:38:30] *** Joins: Barones (~Barones@2804:7f3:8987:b8e9:ca77:fb84:280a:faba)
[04:40:01] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[04:40:26] *** Joins: mickey (~user@user/mickey)
[04:43:26] *** Quits: Robin_Jadoul (~Robin_Jad@152.67.64.160) (Ping timeout: 245 seconds)
[04:45:23] *** Joins: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b)
[04:49:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[04:49:43] *** Joins: awwk (~jfaust@user/awwk)
[04:50:11] *** Joins: hexenbane (~hexenbane@2806:2f0:91a1:73a8:4bba:aafe:1c21:83b9)
[04:50:11] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[04:50:14] *** Joins: vimart (~vimart@148.252.128.183)
[04:50:18] *** Parts: awwk (~jfaust@user/awwk) (o.o)
[04:51:28] *** Joins: fikran (~fikran@user/fikran)
[04:52:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4c9f:c8e3:5089:fce9)
[04:54:00] *** Joins: califax- (~califax@user/califx)
[04:56:26] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:57:11] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[04:57:11] *** brabrax_ is now known as brabrax
[04:58:04] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[04:58:30] *** Quits: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b) (Quit: Client closed)
[04:58:30] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[04:58:31] *** califax- is now known as califax
[04:59:01] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:59:51] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[05:00:05] *** Quits: junktext (~junktext@77.247.181.217) (Ping timeout: 264 seconds)
[05:00:05] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[05:00:07] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:00:15] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[05:01:22] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:3056:7138:5c42:14fe) (Ping timeout: 260 seconds)
[05:02:23] *** Quits: subopt (~subopt@2603-8081-2302-459a-5423-ed59-3c4f-3049.res6.spectrum.com) (Ping timeout: 246 seconds)
[05:03:08] *** Joins: mgedmin (~mg@user/mgedmin)
[05:03:34] *** Quits: firetramp (~ashleigh@82.8.162.2) (Ping timeout: 252 seconds)
[05:03:41] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[05:06:50] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:a4f6:635d:6e2c:5a38)
[05:07:21] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:08:12] *** Quits: white5moke (~pi0xxdmqj@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[05:08:50] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com) (Remote host closed the connection)
[05:09:25] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com)
[05:09:28] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:10:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[05:10:44] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com) (Remote host closed the connection)
[05:10:59] *** Joins: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com)
[05:13:30] *** Joins: mossman93 (~quassel@user/mossman93)
[05:13:41] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:3968:b06d:7c29:56eb)
[05:17:05] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-11dd-67ac-2a26-67df.res6.spectrum.com)
[05:18:19] *** Joins: _xor (~xor@74.215.232.67)
[05:18:24] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:18:50] <_xor> Probably a dumb question, but what should I look into in order to resolve locale.textdomain not being found? (the textdomain method I mean)
[05:19:25] *** Joins: ixokani (~swinnenb@user/swinnenb)
[05:20:22] <_xor> I'm trying to run ulauncher on FreeBSD. It seems to import the module fine but bombs on trying to call textdomain. From what I'm currently reading in the docs, could it be some i18n/l10n stuff needs to be pre-generated or possibly it's not searching /usr/local/... when trying to use gettext?
[05:20:28] <mefistofeles> _xor: can you share your code?
[05:20:43] <_xor> Not my code, but...
[05:20:48] <_xor> https://github.com/Ulauncher/Ulauncher/blob/ea06bc90116a1745b2314e51873beaf14855f07b/bin/ulauncher
[05:21:17] <_xor> Line 11 is where it's having an issue and throws: "AttributeError: module 'locale' has no attribute 'textdomain'"
[05:21:29] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:23:02] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 246 seconds)
[05:24:27] <mefistofeles> _xor: that's strange, I guess just for sanity check, what does that return? 'textdomain' in locale.__dir__()
[05:24:37] <mefistofeles> in a python interpreter after you import locale, of course
[05:24:46] *** Quits: Ivii (~Ivyy@2001:a61:1329:3e01:9a7e:c76a:1eb0:fb28) (Remote host closed the connection)
[05:25:14] <_xor> dunno, lets see
[05:25:27] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[05:25:41] <_xor> False, apparently.
[05:25:51] <mefistofeles> _xor: ha! what python version is it?
[05:25:56] <_xor> 3.8
[05:26:25] <_xor> I haven't written any py in quite a while, so one of the first things I did is pull up the docs for 3.8 to make sure it exists in that version, and it looks like it should.
[05:26:50] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Remote host closed the connection)
[05:27:19] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[05:27:29] <mefistofeles> _xor: when you run the python interpreter, what does it says at the header? As soon as you run it
[05:27:42] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[05:28:05] <_xor> Python 3.8.12 (default, Sep 27 2021, 00:14:22)
[05:28:22] <mefistofeles> _xor: and next line after that one?
[05:28:34] <_xor> [Clang 12.0.1 (git@github.com:llvm/llvm-project.git llvmorg-12.0.1-0-gfed41342a on freebsd13
[05:28:40] <mefistofeles> hmm
[05:28:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[05:29:03] <mefistofeles> I wonder if it's a clang thing... for the lack of better ideas
[05:29:51] <_xor> My initials were maybe one (or more) of the following...
[05:30:17] *** Quits: Barones (~Barones@2804:7f3:8987:b8e9:ca77:fb84:280a:faba) (Remote host closed the connection)
[05:30:32] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Client Quit)
[05:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:30:54] <_xor> 1) Since it looks like locale can (does?) utilize gettext from the system, maybe it's not finding it for some reason. That's semi-common in FreeBSD-land so a majority of stuff installs to PREFIX /usr/local and for some Linux-centric packages, they assume /usr/lib and the like.
[05:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:31:20] <_xor> 2) During installation maybe it missing generating some static translation files (i.e. using gettext) or something, not sure.
[05:31:37] <mefistofeles> _xor: did you build python yourself?
[05:32:13] <_xor> Define "yourself" heh. Is it a source build? Yes. Did I directly build it? No, it's from the platform package manager (FreeBSD + pkg).
[05:32:23] <mefistofeles> ok yes, that
[05:32:43] <_xor> Another thing of note though is that I'm only seeing this issue with this py app, none of the others have any issues.
[05:32:54] <_xor> Might indicate it's something specific with this one, but who knows.
[05:32:55] <mefistofeles> maybe something in the build process not linking to the C lib gettext or something
[05:33:06] <_xor> Could be.
[05:33:40] <mefistofeles> _xor: check the comment at https://docs.python.org/3/library/locale.html#for-extension-writers-and-programs-that-embed-python
[05:33:50] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:33:52] <mefistofeles> the second paragraph, I guess. Feels like it's relevant
[05:33:53] *** Quits: jpic (~jpic@cust-east-parth2-46-193-105-98.wb.wifirst.net) (Ping timeout: 246 seconds)
[05:34:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:34:54] <_xor> hmm
[05:35:17] <mefistofeles> _xor: doesn't FreeBSD have a default python that comes with it by "default"?
[05:35:27] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[05:35:30] <_xor> Nope.
[05:35:33] <mefistofeles> hm ok
[05:35:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:35:52] <_xor> The base system targets a basic install and then adding in packages as required.
[05:36:31] <_xor> Hmm, gettext-tools is listed as a dependency for it, so that part of it shouldn't be a problem.
[05:37:37] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4c9f:c8e3:5089:fce9) (Read error: Connection reset by peer)
[05:38:05] *** Joins: yaalon_ (~yaalon@2603-8081-7002-fce2-31e7-c2fe-2213-971e.res6.spectrum.com)
[05:38:51] *** Quits: yaalon (~yaalon@2603-8081-7002-fce2-294b-61ef-eb7f-312d.res6.spectrum.com) (Ping timeout: 245 seconds)
[05:38:57] <mefistofeles> _xor: https://cgit.freebsd.org/ports/tree/lang/python38/Makefile#n61
[05:39:18] <mefistofeles> not sure what that means though
[05:39:31] <_xor> I do :/
[05:39:37] <_xor> I was just wondering that too lol.
[05:39:54] <_xor> Apparently I do need NLS support, which I disable by default. Going to override it for that specific package.
[05:40:07] <mefistofeles> _xor: oh!
[05:40:08] <mefistofeles> hah
[05:40:16] <_xor> Well, at least it's something (probably) with the package build and not my broader py install.
[05:40:19] <mefistofeles> makeflags can bite you xD
[05:40:21] <_xor> I perfer this over that.
[05:40:27] <_xor> Yup lol.
[05:40:28] <mefistofeles> _xor: no worries
[05:41:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:41:46] *** Joins: defjam (~eb0t@90.196.142.47)
[05:41:47] *** Joins: audio (~audio@2603-8081-1800-1546-1420-7e7c-b9a2-7d5d.res6.spectrum.com)
[05:42:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[05:46:14] <_xor> All right, build has been kicked off. Lets see what happens when it's done.
[05:47:36] *** Joins: sydbarret (~anton@static-186-121-195-114.acelerate.net)
[05:47:41] *** Parts: sydbarret (~anton@static-186-121-195-114.acelerate.net) ()
[05:48:28] <mefistofeles> _xor: let us know
[05:50:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:51:21] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 245 seconds)
[05:52:16] *** Joins: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b)
[05:53:16] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:53:26] *** Quits: nergar (~Nergar@177.225.129.223) (Read error: Connection reset by peer)
[05:53:27] *** Quits: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b) (Client Quit)
[05:54:24] *** Joins: frost (~frost@59.71.244.36)
[05:54:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:58:12] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-c4b5-f493-7437-ddea.res6.spectrum.com)
[05:58:51] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-11dd-67ac-2a26-67df.res6.spectrum.com) (Ping timeout: 245 seconds)
[05:59:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[05:59:32] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:00:31] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[06:02:17] *** Joins: Izem (~user@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[06:03:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:03:27] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:4d79:5188:7874:8b2e)
[06:04:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:08:53] *** Quits: neopolitan (~neopolita@45.76.61.24) (Quit: The Lounge - https://thelounge.chat)
[06:09:12] *** Joins: awwk (~jfaust@user/awwk)
[06:09:34] *** Parts: awwk (~jfaust@user/awwk) ()
[06:09:42] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:13:56] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[06:14:54] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[06:15:06] <twainwek> what is the difference between 'foo_%d' % (a,)' and 'foo_%d' % a' where a is an integer
[06:15:11] *** Quits: LiftLeft (~LiftLeft@172.83.47.108) (Ping timeout: 252 seconds)
[06:15:15] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[06:15:19] *** Joins: txtsd (~txtsd@user/txtsd)
[06:15:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:17:03] <meejah> twainwek: nothing .. but you should use format() or f-strings these days, probably
[06:17:12] <mefistofeles> ↑
[06:17:52] <grym> f'foo_{a}'
[06:18:02] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[06:18:20] <twainwek> i always use format, but im looking through this codebase and i keep seeing 'foo_%d' % (a,)
[06:19:26] <meejah> twainwek: if there's two args, like "foo_%d: %s" % (42, "universe")
[06:19:38] <meejah> ...then you need a tuple, so they might just be going for "consistency"..?
[06:21:38] <twainwek> heh looking at two functions adjacent to each other, consistency does not seem to be a concern
[06:22:05] <twainwek> ok i take it it's not actually significant and move on
[06:22:22] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[06:22:38] *** Joins: jmft2 (~jmft2@213.31.248.255)
[06:22:49] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[06:23:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:23:53] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:23:55] *** Quits: gitly (~gitly@148.252.132.144) (Ping timeout: 265 seconds)
[06:24:02] <meejah> yeah, it's basically just special-case for single-arg
[06:25:45] *** Joins: gitly (~gitly@85.255.233.42)
[06:27:03] *** Parts: apocalyptech (~apocalypt@wilug/apocalyptech) ()
[06:27:09] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:27:11] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[06:27:19] <lpapp> hi, is it okay to ask here about PyArg_ParseTuple?
[06:27:42] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:27:53] <energizer> yes lpapp
[06:28:23] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 252 seconds)
[06:30:01] <lpapp> we seem to use this for making python bindings for C++ code. What is this function part of actually? I can see that Python/C API reference manual. How does this binding from C++ to Python work?
[06:30:39] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[06:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:34] *** Quits: yaalon_ (~yaalon@2603-8081-7002-fce2-31e7-c2fe-2213-971e.res6.spectrum.com) (Ping timeout: 250 seconds)
[06:32:42] <meejah> lpapp: it's part of "The Python/C API"
[06:33:00] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[06:33:32] <meejah> (you can of course use it from C++ too .. although I suspect there are less-painful ways ..)
[06:33:41] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:34:55] *** audio is now known as audiocat
[06:35:14] <_xor> mefistofeles: Yup, it was NLS. After rebuilding py38 with the NLS option enabled it seems to launch fine now.
[06:35:29] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:36:39] <lpapp> meejah: is this Python/C API commonly used for creating python bindings for C/C++ code?
[06:36:55] <lpapp> I have so far only heard of boost python to binding C++ code.
[06:37:08] <lpapp> and the way PyQt and PySide did.
[06:37:28] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[06:39:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[06:39:46] *** Joins: wyclif (~wyclif@user/wyclif)
[06:40:00] *** Parts: Izem (~user@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (ERC (IRC client for Emacs 27.1))
[06:40:09] <meejah> lpapp: I think cffi is the recommended way .. but what are you doing? (and yes, I would probalbly look at the boost libs before the raw C API)
[06:40:49] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.71-80.dynamic.3bb.co.th) (Remote host closed the connection)
[06:41:24] *** Joins: p-i- (~Ohmu@223.206.71.80)
[06:42:29] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[06:42:36] <lpapp> we have python bindings in our project, and just trying to understand how this binding is done.
[06:42:47] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[06:42:52] <lpapp> Not looking for new ways of re-architecting a huge codebase.
[06:43:24] <mefistofeles> _xor: nice, good to know!
[06:44:18] *** Joins: yaalon (~yaalon@2600:100c:b03e:b27c:8de3:76b:6af6:230e)
[06:46:45] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:47:49] *** Joins: lethu (~lethu@user/lethu)
[06:50:51] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[06:50:51] *** Joins: LiftLeft (~LiftLeft@172.98.92.52)
[06:50:55] <meejah> lpapp: I see .. well, yeah it's certainly possibly to do it with the Python/C API
[06:51:49] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: buh bye)
[06:54:37] *** Joins: Grace (uid33812@id-33812.lymington.irccloud.com)
[06:54:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:56:24] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[06:56:33] <Grace> Hi! I'm writing a quick and dirty deserialization function for some objects. As part of the serialization, the class name is stored (so the deserializer knows what to generate when deserializing), and I need to construct an object of that type when deserializing. Wondering what the most idiomatic way of doing it is.
[06:56:46] <Grace> Currently using this but not sure if there are any weird subtleties with eval to be aware of:
[06:56:59] <Grace> eval(json.loads(input)['_obj_type'] + '()')
[06:57:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 246 seconds)
[06:57:53] *** jmiehe1 is now known as jmiehe
[06:58:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[06:59:11] *** Joins: iflema (~ian@user/iflema)
[06:59:36] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:00:08] *** Quits: yaalon (~yaalon@2600:100c:b03e:b27c:8de3:76b:6af6:230e) (Remote host closed the connection)
[07:00:16] <energizer> grace are you aware that you're asking for trouble
[07:00:37] <Grace> what's the trouble?
[07:00:42] <energizer> your question is either novice or expert and i cant tell which
[07:00:46] <Grace> novice lol
[07:00:48] *** Joins: fikran (~fikran@user/fikran)
[07:00:57] <Grace> I'm trying to figure out if there are any pitfalls to be aware of
[07:01:01] <kenwoodfox> Hey #python, im working on a project and having some trouble getting my pyplot annotations to work, heres my code so far https://github.com/KenwoodFox/EG-207-CCEMS/blob/lab1/python/goldplot/__main__.py
[07:01:01] <kenwoodfox> im not even seeing anything when i attempt to label the max value (on line 76), my y scale is epoch time, and my x is temp.
[07:01:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:01:40] <energizer> Grace: it might be fine but usually people work hard to avoid using eval
[07:01:59] <energizer> Grace: i'd have to think carefully about what would happen in your particular situation and i'd rather not do that
[07:02:22] <energizer> Grace: instead i'd use a dedicated serialization library
[07:02:26] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:02:31] <Grace> is there a very simple one you'd recommend?
[07:02:42] <BrenBarn> kenwoodfox: do you have the x and y reversed there?
[07:02:50] <Grace> right now all I'm doing is dumping the content of vars() to serialize
[07:02:54] <BrenBarn> the plot is `plot(time_scale, temp_reading` but annotation has `xy=(max_temp, now - 1)`
[07:03:02] <BrenBarn> so it looks like time and temp are switched
[07:03:02] <Grace> and then to load I'm running loads on it and then assigning to __dict__
[07:03:10] <kenwoodfox> BrenBarn: Oh boy, i hope i dont, it should be temp by time, let me try fixing that ohboy
[07:03:21] <energizer> Grace: can you show the code you're using?
[07:03:52] <kenwoodfox> BrenBarn: oh, wait no thats correct, my y is epoch and my x is value
[07:04:16] <BrenBarn> then why is the plot call the other way around?
[07:04:19] <lpapp> is there a way to use METH_VARARGS | METH_NOARGS?
[07:04:33] <Grace> energizer: https://hastebin.com/ulofeqeloq.py
[07:04:34] <lpapp> I.e. when no parameter is passed to the function, it should be like None
[07:04:39] <lpapp> Maybe, just a default value with METH_VARARGS?
[07:05:31] <salparadise> Grace: I usually have classmethod (loads) that takes in json to construct a class, and also have an instance method that dumps json for serializing
[07:05:32] <Grace> main application is for people to subclass it. serialization should be human readable and human editable.
[07:05:35] <energizer> Grace: example here's one https://desert.readthedocs.io/
[07:05:37] <kenwoodfox> BrenBarn: im not sure, inverting it did not seem to help,
[07:05:45] <kenwoodfox> BrenBarn: is .plot not (y by x?)
[07:06:05] <lpapp> optional with |
[07:06:10] <BrenBarn> did you look at the documentation: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html
[07:06:16] <Grace> salparadise: that's exactly what's going on here
[07:06:34] <salparadise> yep I see that, use @dataclass and you get a lot of this for free
[07:06:35] <kenwoodfox> Oh no you're right im all mixed up, thats right, the other one is inverted i dont know my x from my y on graph paper
[07:06:40] <kenwoodfox> i want time on the bottom
[07:06:41] <kenwoodfox> time is x
[07:07:05] <BrenBarn> ok, so switch it
[07:07:15] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:07:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:07:18] <BrenBarn> the thing is that if you have xy switched the annotation may be out of the visible plot area
[07:07:19] <kenwoodfox> BrenBarn: yep, still no results unfortunatly
[07:07:27] <Grace> salparadise: wait, if I do that, is that behavior overridable?
[07:07:43] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:4cc3:2606:1608:5ce0) (Quit: Leaving)
[07:07:48] <Grace> because I want subclasses to be able to implement their own serialization functions if needed
[07:07:58] <kenwoodfox> BrenBarn: Yeah matplotlib docs said that could happen, im just trying to get it in where i cans see it rn, then i can fix functionality
[07:08:05] <kenwoodfox> BrenBarn: so far ive not even seen it get drawn anywhere
[07:08:11] <salparadise> Grace: sure
[07:08:32] <BrenBarn> oh why do you have xycoords set to "figure pixels"?
[07:08:52] <BrenBarn> I think you want it in data coordinates
[07:09:02] <Grace> hmm I will read about this. thanks.
[07:09:06] <energizer> Grace: marshmallow.rtfd.io is good. desert.rtfd.io is a wrapper around marshmallow to make it convenient for dataclasses.
[07:09:09] <Grace> energizer: guessing no built in support for this?
[07:09:13] <kenwoodfox> BrenBarn: trying data again, ive been cycling thru all of the xcorgs to find a working one,
[07:09:15] *** Joins: P1ro_ (~quassel@user/p1ro)
[07:09:44] <Grace> this is mostly for a research project right now, so trying to keep things easy to modify until more stability required (fewer packages, etc.)
[07:10:03] <kenwoodfox> Omg it works yay!
[07:10:10] <kenwoodfox> It points at every data point but it draws on the screen
[07:10:12] <kenwoodfox> thank u!
[07:10:55] <energizer> Grace: dataclasses is in the standard library. you can do MyClass(**json.loads(s)) if it's simple types. if you're nesting objects inside each other or having more non-json types, marshmallow/desert start becoming more important
[07:11:08] <BrenBarn> you bet
[07:11:35] <Grace> ah, yes, nesting is an issue. was going to do some string hacks to try to make it to work but it's nice to have a prepackaged solution.
[07:11:46] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:3968:b06d:7c29:56eb) (Ping timeout: 245 seconds)
[07:12:05] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) ()
[07:12:07] <salparadise> Grace: something like https://hastebin.com/abevunumax.rb
[07:12:18] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 250 seconds)
[07:12:37] <Grace> salparadise: that's a problem though, because it assumes that the deserializer knows that the object is a MoSTSchedule type
[07:12:47] <Grace> but in this application, it could be a subclass of it
[07:12:57] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[07:13:12] <Grace> and I would need to generate an object of the subclass's type, not the base MoSTSchedule type
[07:13:19] *** Joins: yaalon (~yaalon@2600:100c:b015:43e5:798d:9b92:84b4:470)
[07:13:30] <salparadise> sounds like you need a factory of some kind then, getattr is better than eval, one sec.
[07:15:23] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[07:16:19] <energizer> Grace: btw this is kinda what standard library `pickle` is for, but it's asking for trouble in sorta the same ways as `eval`
[07:16:50] <Grace> so what's the 'asking for trouble' part?
[07:17:10] <Grace> the obvious one I'm thinking is that some clueless user might mess with the _schedule_type variable and blow up the function
[07:17:14] <Grace> but are there any other pitfalls?
[07:17:15] *** Joins: Wulf (~Wulf@user/wulf)
[07:17:29] <energizer> https://nedbatchelder.com/blog/202006/pickles_nine_flaws.html
[07:18:35] <Grace> > A pickle is a binary data stream (actually instructions for an abstract execution engine.) If you open a pickle as a plain file, you cannot read its contents. The only way to know what is in a pickle is to use the pickle module to load it. This can make debugging difficult, since you might not be able to search your pickle files for data you are interested in
[07:18:39] <Grace> yeah, not suitable for this application
[07:20:17] *** Joins: vorlket (~vorlket@1.156.42.89)
[07:20:40] <Grace> (sort of a way to describe code transforms, so an optimizing compiler could spit out one of these objects to describe all the code transforms. The goal is to do this in a way that users can modify, so if they know better than the compiler pass then they can edit the object pretty easily)
[07:20:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[07:21:10] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:21:51] <Grace> security against malicious isn't a problem, but users making sloppy mistakes and editing the file wrong and blowing up their system is
[07:22:04] <Grace> against malicious inputs*
[07:23:11] <vorlket> Hi, https://bpa.st/XFOA
[07:24:14] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[07:25:02] *** Quits: yaalon (~yaalon@2600:100c:b015:43e5:798d:9b92:84b4:470) (Remote host closed the connection)
[07:25:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:25:32] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 246 seconds)
[07:25:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:26:23] <salparadise> Grace: something like a registry may work https://hastebin.com/ipijaviruv.py
[07:26:29] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[07:26:44] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[07:27:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[07:27:38] <Grace> so basically adding some guardrails?
[07:27:42] *** Joins: jonthesnow (~xizhendu@240e:404:8a40:559f:4d3:b5f6:f5be:5)
[07:27:47] <Grace> so you can't eval arbitary stuff?
[07:27:54] <Grace> that makes sense
[07:27:54] *** Joins: wyclif (~wyclif@user/wyclif)
[07:28:03] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:28:07] <salparadise> I mean you don't need it really.
[07:28:14] *** Quits: hexenbane (~hexenbane@2806:2f0:91a1:73a8:4bba:aafe:1c21:83b9) (Remote host closed the connection)
[07:28:28] <energizer> the most lightweight serialization is https://hynek.me/articles/serialization/
[07:28:39] <Grace> whitelist won't work for this situation in the long run (needs to be user-extensible, having ppl go to the core library to change every time they want to add a new code transform isn't feasible) but I could add some sanity checks (just letters and numbers, etc.)
[07:29:18] <salparadise> you can just add new schedules, with @dataclass class AnotherSchedule(BaseSchedule) and implement serialize and that is all
[07:29:42] *** Joins: davor_ (~davor@user/davor)
[07:29:52] *** Quits: davor (~davor@user/davor) (Ping timeout: 252 seconds)
[07:30:02] <salparadise> and then to deserialize call deserialize_schedules(serialized_data)
[07:30:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:30:54] *** Joins: pzuidhoek (~textual@82-95-239-200.ip.xs4all.nl)
[07:31:02] <Grace> wait, do all subclasses of a dataclass have to also be dataclasses?
[07:31:03] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:30] <Grace> I really like the ability to separate what's actually important to the class to serialize and what's just working scratch/cache
[07:31:34] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:32:05] <Grace> assuming these annotations support arbitrary types (incl. nesting)
[07:32:21] <salparadise> I believe so, but you don't have to use dataclasses, I just used it because the unpacking of construction and the "asdict"
[07:32:33] <energizer> whats the point of inheritance here?
[07:32:49] <salparadise> init_subclass
[07:33:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[07:33:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[07:33:19] <salparadise> but that maybe indulgence on my part, you can do whatever to add the class to a registry
[07:33:23] *** Joins: wyclif (~wyclif@user/wyclif)
[07:33:29] <energizer> i'd use a decorator
[07:34:09] <salparadise> yep, works just as well.
[07:34:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:34:17] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[07:34:28] <Grace> energizer: so basically these applications represent transforms to code, so you could imagine a class that represents a loop tiling, a class that represents reordering, etc.
[07:34:56] <energizer> Grace: those sound like functions more than classes, no?
[07:35:01] <Grace> yes
[07:35:23] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[07:35:32] <Grace> I'm building this on top of a system (still private, but it's a quasi-successor to halide if you're familiar to it) that treats them as imperative functions
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:10] <energizer> i've heard of halide but havent used it
[07:36:12] <Grace> but there are reasons why you'd want to manipulate and store the parameters to these functions, or make higher-level ones
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:44] <Grace> e.g. there's a core function for loop tiling, i.e. turn for i in range(n) to for i_out in range(n/b)... for i_in in range(b)
[07:37:23] <Grace> but there is a need for an object to describe multiple loop tilings
[07:37:36] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:8ce1:5a93:8746:765c)
[07:37:52] <Grace> because there are some programs that decide what the best tile sizes (i.e. value of parameter b) are for several loops at once
[07:38:14] <Grace> and these objects need to be stored, and editable by users who know things (e.g. machine architecture, etc.) that the automatic thing doesn't
[07:39:23] <Grace> so serializability is important so the users can easily edit what transforms happen, and so (maybe later) they can be added to a database of parameters vs. performance to be learned (via integration with an autotuner called GPTune)
[07:40:37] *** Quits: pzuidhoek (~textual@82-95-239-200.ip.xs4all.nl) (Quit: Textual IRC Client: www.textualapp.com)
[07:41:31] *** Joins: yaalon (~yaalon@2600:100c:b034:bcae:f5df:f90f:b4b2:e1e3)
[07:41:34] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[07:41:37] <energizer> i think i get what you mean. i'd use one of the libraries i mentioned, but i understand you may be reluctant to add dependencies. anyway i gotta go.
[07:41:47] <Grace> thanks so much for your help!
[07:41:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[07:42:13] <Grace> I'll probably need to use those libraries if this project ends up progressing any further than gradware :P
[07:42:23] <Grace> so hopefully I actually do need them lololool
[07:42:34] <energizer> good luck! :)
[07:43:51] *** Quits: zepolen (~zepolen@2a02:587:8608:c7cb:8ce1:5a93:8746:765c) (Ping timeout: 245 seconds)
[07:44:37] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[07:45:08] *** Quits: LiftLeft (~LiftLeft@172.98.92.52) (Ping timeout: 246 seconds)
[07:49:51] *** Quits: yaalon (~yaalon@2600:100c:b034:bcae:f5df:f90f:b4b2:e1e3) (Remote host closed the connection)
[07:51:16] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[07:51:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[07:52:08] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[07:53:39] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[07:54:43] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:55:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:55:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:59:16] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[07:59:45] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 265 seconds)
[08:00:01] *** slavfox_ is now known as slavfox
[08:01:02] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[08:01:12] *** Quits: gitly (~gitly@85.255.233.42) (Ping timeout: 265 seconds)
[08:01:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:02:52] *** Joins: yaalon (~yaalon@2600:100c:b010:65fe:d506:35a4:5ab8:885c)
[08:03:04] *** Joins: gitly (~gitly@85.255.235.80)
[08:04:40] *** Joins: alxndr (~alexander@ybti.net)
[08:05:10] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[08:05:31] *** Quits: vimart (~vimart@148.252.128.183) (Ping timeout: 245 seconds)
[08:05:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:06:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:06:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:07:46] *** Joins: pwnd_sfw4 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[08:08:05] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[08:08:29] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 264 seconds)
[08:08:29] *** pwnd_sfw4 is now known as pwnd_sfw
[08:08:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:10:41] *** Joins: curiosity (uid507362@user/cypris)
[08:10:53] *** Quits: somlis2 (~somlis@user/somlis) (Read error: Connection reset by peer)
[08:11:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:12:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:13:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[08:13:06] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:16:59] *** Quits: defjam (~eb0t@90.196.142.47) (Ping timeout: 246 seconds)
[08:19:02] *** Joins: defjam (~eb0t@90.202.255.249)
[08:29:30] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[08:29:59] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[08:30:33] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:30:41] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:30:41] *** pwnd_sfw1 is now known as pwnd_sfw
[08:33:51] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Ping timeout: 245 seconds)
[08:36:06] *** Joins: stranac (~stranac@195.29.239.126)
[08:38:50] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Quit: ZZZzzz…)
[08:39:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:41:46] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[08:45:59] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[08:46:34] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[08:48:08] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[08:49:44] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[08:50:08] *** Joins: grawity (grawity@star.nullroute.eu.org)
[08:52:27] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:52:58] *** Joins: Andrew_ (~andrew@user/andrewyu)
[08:53:35] *** Quits: AndrewYu (~andrew@user/andrewyu) (Ping timeout: 252 seconds)
[08:53:53] *** Joins: upsala (~zcb@185.213.155.160)
[08:54:14] *** Quits: Dotz0cat (~Dotz0cat@h171.119.90.75.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[08:54:22] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[08:55:14] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 252 seconds)
[08:55:27] *** lukedashjr is now known as luke-jr
[08:55:40] *** Joins: Dotz0cat (~Dotz0cat@h171.119.90.75.dynamic.ip.windstream.net)
[08:56:46] *** Quits: martums (~martums@user/martums) (Ping timeout: 245 seconds)
[08:56:56] *** Joins: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr)
[08:57:15] *** Joins: mei (~mei@user/mei)
[08:59:29] *** Quits: grawity (grawity@star.nullroute.eu.org) (Remote host closed the connection)
[08:59:36] *** Quits: faceface (~faceface@user/faceface) (Remote host closed the connection)
[08:59:54] *** Joins: grawity (grawity@star.nullroute.eu.org)
[09:00:33] *** Parts: ksynwa (~ksynwa@5.45.111.57) (WeeChat 2.8)
[09:02:06] *** Joins: dvx (~dvx@185.63.97.64)
[09:03:01] *** Quits: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr) (Ping timeout: 245 seconds)
[09:07:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:07:21] *** Joins: zepolen (~zepolen@2a02:587:8608:c7cb:7ada:17a5:80cb:1ddc)
[09:08:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[09:10:09] *** Joins: fikran (~fikran@user/fikran)
[09:10:58] *** Joins: martums (~martums@user/martums)
[09:11:55] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[09:14:36] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:16:04] <vorlket> How do you test if two nodes in a DAG is weakly connected?
[09:17:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:20:44] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[09:21:18] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[09:25:28] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[09:25:45] *** Quits: nomic (~nomic@185.192.69.207) (Quit: Leaving)
[09:28:52] <eniac> https://outbreak.info/
[09:30:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:30:38] <eniac> oops
[09:30:38] <eniac> wrong #
[09:30:39] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[09:30:48] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[09:30:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:34:46] *** Joins: yaalon_ (~yaalon@2600:100c:b010:65fe:390d:af19:670d:a54f)
[09:35:59] *** Joins: ub (~Thunderbi@178.115.72.201.wireless.dyn.drei.com)
[09:37:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:38:11] *** Quits: yaalon (~yaalon@2600:100c:b010:65fe:d506:35a4:5ab8:885c) (Ping timeout: 246 seconds)
[09:40:07] *** Quits: langAt (uid520190@user/langat) ()
[09:40:19] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[09:40:30] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[09:42:01] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[09:44:41] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[09:45:30] *** Joins: VaniaPy (~VaniaPy@adsl-196.176.58.192.tellas.gr)
[09:46:00] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:c557:3000:456f:7739)
[09:46:40] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:13] *** Joins: seednode (~seednode@user/seednode)
[09:48:20] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[09:49:28] *** Joins: emf (~emf@2620:10d:c090:400::5:8ff1)
[09:54:01] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[09:54:47] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:56:14] *** Quits: emf (~emf@2620:10d:c090:400::5:8ff1) (Quit: emf)
[09:56:32] *** Joins: emf (~emf@2620:10d:c090:400::5:8ff1)
[09:56:39] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:a4f6:635d:6e2c:5a38) (Read error: Connection reset by peer)
[09:57:05] *** smol_dragon is now known as A_Dragon
[09:57:17] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[09:57:58] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[09:58:04] *** Joins: manti7 (~manti7@176.10.104.94)
[09:59:05] *** Joins: gusto (~Augustus@109.255.100.54)
[10:01:15] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[10:08:26] *** Quits: defjam (~eb0t@90.202.255.249) (Ping timeout: 245 seconds)
[10:08:44] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:09:54] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:09:55] *** Quits: rapier (~marcos@170.233.159.1) (Ping timeout: 252 seconds)
[10:10:18] *** Joins: defjam (~eb0t@90.209.55.200)
[10:12:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[10:14:15] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[10:14:18] *** Joins: langAt (uid520190@user/langat)
[10:15:09] *** Joins: kosh (~kosh@user/kosh)
[10:15:12] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[10:16:59] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[10:17:29] *** Joins: rindolf (~shlomif@87.68.240.138.adsl.012.net.il)
[10:17:40] *** Joins: VaniaPy31 (~VaniaPy@adsl-196.176.58.192.tellas.gr)
[10:17:42] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:18:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[10:19:08] <Mogget> In Perl, I can do this $uri =~ s{^(https?:)/{0,2}}{$1//}i; to replace any occurrence of http: and https: with 0, 1 or 2 // with the same with 2 // in it. I tried doing this, which does not work in python re.sub(r'^(https?:)/{0,2}', '$1//', stringvar, 1)
[10:19:15] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Quit: ZNC - http://znc.in)
[10:19:21] <Mogget> Is it possible to use the first group in the replacement string?
[10:19:23] *** Quits: ska (~ska@user/ska) (Ping timeout: 252 seconds)
[10:19:26] *** Quits: curiosity (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[10:19:44] <Mogget> Or do i have to do a match first, then get the group from that match in the sub?
[10:19:58] *** Joins: jpic (~jpic@cust-east-parth2-46-193-105-98.wb.wifirst.net)
[10:20:35] *** Joins: wyclif (~wyclif@user/wyclif)
[10:20:51] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[10:20:57] <Mogget> The output of the re.sub above would be '$1//' + the rest of the url.
[10:21:58] <BrenBarn> did you read the documentation?
[10:22:01] *** Joins: node1 (~node1@user/node1)
[10:22:11] *** Quits: jazzy (~jaziz@2600:380:4557:1bb1:c061:3679:1363:3566) (Ping timeout: 245 seconds)
[10:22:27] <BrenBarn> hint: `$1` is not how you write a group reference in Python
[10:22:53] <Mogget> BrenBarn: Doing it as we write now, but my brain stumbles through the text. Rereading it now
[10:23:25] <energizer> it's something weird like \g<1>
[10:24:16] <Mogget> ok, so what I am doing is ok, but I need to find out what a group reference is. Thank you.
[10:25:39] <hexology> \1 and \g<1> are both valid
[10:25:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[10:26:04] *** Joins: wyclif (~wyclif@user/wyclif)
[10:26:17] <energizer> maybe need to use r"" for \1 tho
[10:26:24] <hexology> yes, definitely
[10:26:39] <Mogget> When I got the \g<1> reference from energizer, it was easy enough to find that specific area in the doc, but until he wrote that, I had no idea that section talked about using groups in the replacing string.
[10:27:31] <energizer> Mogget: yeah that page is best read as a reference for someone who already knows it
[10:28:21] <energizer> there's a regex tutorial in the docs somewhere that i remember being pretty good
[10:28:43] <Mogget> I think this specific problem would have been sorted by tagging  that group somehow with "using groups in replacement string" or something in that line.
[10:29:14] <Mogget> energizer: I know regular expressions pretty well, just not pythons syntax sorounding the re module.
[10:30:13] <energizer> yeh. sometimes documentation improvements are accepted; other times the authors are unfortunately territorial.
[10:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:31:03] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[10:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:20] *** Joins: spithash (~spithash@user/spithash)
[10:32:51] *** Joins: ska (~ska@user/ska)
[10:34:06] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[10:34:49] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:34:58] *** Joins: aniruddha (uid340443@2a03:5180:f:3::5:31db)
[10:35:02] *** Parts: VaniaPy31 (~VaniaPy@adsl-196.176.58.192.tellas.gr) ()
[10:35:56] *** Quits: emf (~emf@2620:10d:c090:400::5:8ff1) (Ping timeout: 245 seconds)
[10:36:09] *** Joins: Huitzilopochtli (~ronnie@45.64.220.161)
[10:36:30] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Ping timeout: 276 seconds)
[10:37:02] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[10:37:19] *** Joins: mbrndtgn7 (~mbrndtgn@undecidable.de)
[10:37:32] *** Joins: Alan4 (~alan@user/alan)
[10:38:00] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[10:38:00] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Remote host closed the connection)
[10:38:01] *** Quits: Strom (strom@fedora/strom) ()
[10:38:01] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[10:38:19] *** Joins: cebor (~cebor@user/cebor)
[10:38:29] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[10:38:48] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:38:56] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Read error: Connection reset by peer)
[10:38:56] *** mbrndtgn7 is now known as mbrndtgn
[10:38:58] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:39:00] *** Quits: Alan (~alan@user/alan) (Ping timeout: 250 seconds)
[10:39:01] *** Alan4 is now known as Alan
[10:39:10] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[10:39:10] *** Joins: Strom (strom@fedora/strom)
[10:40:01] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[10:40:02] *** Joins: chele (~chele@user/chele)
[10:40:13] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[10:41:32] *** dcaro_away is now known as dcaro
[10:43:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[10:43:33] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Quit: WeeChat 3.3)
[10:43:49] *** Parts: wyclif (~wyclif@user/wyclif) ()
[10:43:53] *** Joins: metaace_ (~metaace@user/metaace)
[10:44:13] <spaceone> why does the following work in py2 but not in py3?:
[10:44:17] <spaceone> class foo:
[10:44:20] <spaceone>    o = True
[10:44:25] <spaceone>     c = [x for x in a if o]
[10:44:38] <spaceone> in python3: `o` is undefined?
[10:45:11] *** Joins: Phoman (~Phoman@dynamic-077-006-094-025.77.6.pool.telefonica.de)
[10:45:36] *** Quits: metaace (~metaace@user/metaace) (Ping timeout: 276 seconds)
[10:46:08] <Phoman> Hi all. How can I turn a file containing strings like "CYA]]L\u0013VRUV\u0018\u000e\u0018" into 'CYA]]L\x13VRUV\x18\x0e\x18' for further processing? Thanks in advance!
[10:46:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:46:15] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Quit: leaving)
[10:46:19] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:46:33] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[10:46:54] <The-Compiler> spaceone: I don't see a problem with `o`, but `a` is undefined, no matter the Python version
[10:46:54] <spaceone> ok nvm, generator expressions have their own scope now
[10:47:04] <Wulf> does python expose a list of keywords like "global"?
[10:47:13] <spaceone> The-Compiler: oh sorry, forget to assing a to something in the example
[10:47:14] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[10:47:28] <The-Compiler> Wulf: https://docs.python.org/3/library/keyword.html
[10:48:00] <The-Compiler> spaceone: if I assign a, your snippet works fine for me
[10:48:05] *** Quits: jonthesnow (~xizhendu@240e:404:8a40:559f:4d3:b5f6:f5be:5) (Ping timeout: 264 seconds)
[10:48:07] <Phoman> Ah, nevermind
[10:48:17] <Phoman> I found unicode_escape
[10:48:21] <Wulf> The-Compiler: thanks. Another module I never seen before :)
[10:48:36] *** Quits: Phoman (~Phoman@dynamic-077-006-094-025.77.6.pool.telefonica.de) (Quit: WeeChat 3.3)
[10:48:50] <The-Compiler> Wulf: yeah, I was surprised too when I saw it the first time :)
[10:48:52] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[10:49:29] <energizer> spaceone: did that come up in real code? i've only ever seen it in demo examples
[10:49:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Remote host closed the connection)
[10:51:27] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[10:52:22] *** Joins: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de)
[10:52:32] <spaceone> The-Compiler: energizer: https://bpa.st/A5RQ
[10:52:37] <spaceone> found during py2→3 migration
[10:53:04] <energizer> yeah that's in the language reference somewhere
[10:55:11] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[10:56:35] *** Quits: ub (~Thunderbi@178.115.72.201.wireless.dyn.drei.com) (Ping timeout: 246 seconds)
[10:57:41] *** Joins: legola (~legola@46.235.100.217)
[10:58:29] *** Joins: emf (~emf@2620:10d:c090:400::5:8ff1)
[10:59:03] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[10:59:46] <energizer> spaceone: "These references follow the normal rules for name resolution with an exception that unbound local variables are looked up in the global namespace." https://docs.python.org/3/reference/executionmodel.html
[10:59:48] *** Quits: yaalon_ (~yaalon@2600:100c:b010:65fe:390d:af19:670d:a54f) ()
[11:00:18] <hexnewbie> spaceone: It should be noted that in Python 2 “c = {x for x in a if o}” fails with the same error as a list comprehension in 3.
[11:01:00] <KirkMcDonald> It is only list comprehension in Python 2 that don't define a new scope.
[11:01:13] <hexnewbie> spaceone: So whatever the actual rules are, that's a side-effect of list comprehensions being rewritten to work the same way as generator expressions, dict and set comprehensions
[11:01:29] <KirkMcDonald> comprehensions*
[11:02:25] <hexnewbie> spaceone: So it was already true in Python 2.7, just *only* list comprehensions were an exception for compatibility reasons
[11:04:07] *** Quits: defjam (~eb0t@90.209.55.200) (Read error: Connection reset by peer)
[11:09:34] *** Joins: defjam (~eb0t@90.199.243.11)
[11:10:31] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[11:10:59] <ssbr> spaceone: that's a really neat example btw, good job isolating it :)
[11:15:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:15:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:17:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[11:17:34] *** Joins: beuys (~beuys@user/beuys)
[11:18:22] <beuys> Hello! I read that Python is single threaded and Python web apps use a long running Python program to serve requests. Does that mean in a web server context, Python does not make use of multiple cores?
[11:19:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:19:31] *** Joins: fikran (~fikran@user/fikran)
[11:19:53] <spaceone> hexnewbie: KirkMcDonald : thanks :-)
[11:20:07] <energizer> beuys: python servers can use multiple processes or threads or coroutines
[11:20:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:20:20] *** Joins: wyclif (~wyclif@user/wyclif)
[11:20:45] <energizer> or, uh, computers
[11:21:18] <beuys> energizer: But if it is a long running Python process that does this, wouldn't the GIL prevent Python running on more then one core?
[11:22:01] <ssbr> beuys: each process will often use only one thread at a time, but most web services use more than one process. In fact, as energizer noted, it's actually best practice to use more than one *computer*, in case one goes offline.
[11:22:05] <pr100> I guess the underlying point is that an asyncio event loop runs in a single thread, and that's one way deal with io-bound stuff like a web server
[11:22:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[11:23:05] <beuys> ssbr: So if one has a 8-core computer serving a Django app that is CPU bound and 7 cores are sleeping you would tell them to add 7 more computers?
[11:23:24] <ssbr> beuys: no, you'd run 7 more worker processes.
[11:23:42] <beuys> ssbr: So the GIL does not enforce its thing OS wide but program wide?
[11:23:52] <ssbr> beuys: yes, it's just a regular lock. Locks are per-process.
[11:24:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:24:23] <beuys> ssbr: And Django handles this? Spawning multiple processes?
[11:24:41] *** Quits: Huitzilopochtli (~ronnie@45.64.220.161) (Ping timeout: 264 seconds)
[11:24:43] <energizer> that's not django's job
[11:25:11] <energizer> you'd have a web server program that invokes django
[11:25:32] <beuys> Aha
[11:25:57] <energizer> like uwsgi or gunicorn or waitress
[11:25:59] *** Quits: b_jonas (~x@catv-176-63-3-104.catv.broadband.hu) (Quit: leaving)
[11:26:00] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[11:26:03] <beuys> I always thought Python is different in this regard.
[11:26:05] <ssbr> beuys: I've never run Python servers in the real world :)  I'd expect nginx or whatever to have an option for this. Django won't see that it's even happening (because django is a library, in Python-space -- there's one instance per worker process!)
[11:26:45] <beuys> How about Apache and mod_wsgi?
[11:26:48] *** Quits: jpic (~jpic@cust-east-parth2-46-193-105-98.wb.wifirst.net) (Remote host closed the connection)
[11:26:49] <spaceone> do you have an alternative for my broken py3 code from above? currently i stickt to `d = (lambda _o, _a: [x for x in _a if _o])(o, a)`
[11:26:53] <energizer> the standard thing is (nginx|apache) <--> (uwsgi|gunicorn) <--> (django|flask|pyramid)
[11:27:08] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[11:27:22] <beuys> energizer: You need Apache *and* uwsgi?
[11:27:30] <ssbr> energizer: man, things have changed.
[11:28:07] <energizer> beuys: you don't neeeeeeed nginx, but people seem to like it
[11:28:18] <ssbr> spaceone: that is not the worst solution I've ever seen. Mostly, one "isn't supposed to do stuff like that" in class scope. As you've noticed, it can get very confusing very fast.
[11:28:28] <ssbr> spaceone: so that kind of workaround seems good to me.
[11:29:02] <ssbr> energizer: what happened to like -- apache with mod_wsgi <-> django/etc.
[11:29:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:29:38] *** Quits: emf (~emf@2620:10d:c090:400::5:8ff1) (Ping timeout: 260 seconds)
[11:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[11:30:39] <energizer> ssbr: i'm sure there's a good history written up somewhere...
[11:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:31:42] <ssbr> energizer: maybe not the history, but at least the "why" -- like, these seem like redundant layers
[11:31:56] *** Quits: wyclif (~wyclif@user/wyclif) (Read error: Connection reset by peer)
[11:32:02] <ssbr> apache or nginx run a forked worker model which then runs uwsgi/gunicorn which run a forked worker model which then run Python
[11:32:06] <ssbr> what's up with that?
[11:32:21] <energizer> i think 'static files' is the standard answer, but i never dug into it
[11:32:53] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[11:33:03] <ssbr> I am hopefully understandably skeptical of that answer :P
[11:33:17] <energizer> yes i have expressed some skepticism of it in here myself
[11:33:49] <ssbr> I'm very unfamiliar with how normal people write web software. I just use The Cloud Thing Provided By My Employer
[11:34:01] <ssbr> it tends to be a mixed bag.
[11:34:11] <energizer> nowadays there's fancier async stuff with hypercorn and starlette/fastapi which introduces some of its own machinery
[11:35:25] <ssbr> maybe if I pretend GAE is good enough for long enough it'll someday be true
[11:35:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:07] <ssbr> running a kubernetes cluster with independently allocated reverse proxies and worker runners with separate message queue brokers and databases is for people with more time than I have
[11:37:21] <pr100> cloud provisioned k8s is expensive unless you have enough workloads to keep a few nodes busy
[11:37:25] *** Joins: newpy (~newpy@2602:ffc6:400:ba::203)
[11:37:58] *** Joins: mickey8 (~user@user/mickey)
[11:38:54] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:56] <pr100> but running a web server in e.g. cloud run using pubsub and one of the off-the-shelf cloud databases is actaully a good way to avoid having to roll a whole of stuff yourself (and for low volume deployments, you can often fit within a free tier)
[11:38:56] *** Joins: rendar (~rendar@user/rendar)
[11:39:00] <ssbr> I'm told you used to be able to drop a shell script with `echo 200 OK` in a folder and you were now running a web server, but that's before even my time
[11:39:21] <ssbr> s/even // I'm just adopting curmudgeonly ways
[11:39:54] <ssbr> pr100: unless your cloud database is spanner, apparently
[11:40:01] <hexnewbie> You can always create such a web server with netcat, or socat to support TLS
[11:40:01] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[11:40:16] <newpy> is there a good example of numpy.default_rng?
[11:40:22] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Quit: leaving)
[11:40:22] *** Joins: ali1234 (~al@user/ali1234)
[11:40:25] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[11:40:48] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[11:41:02] <hexnewbie> Of course, why do that, when Python is so much simpler, and more powerful *while* being simpler
[11:41:03] <newpy> ie. how best to pass around seeds/rng's
[11:41:08] <energizer> oh someone who believes in it has written an answer https://serverfault.com/a/590833
[11:41:38] <energizer> newpy: what is the confusion?
[11:41:46] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[11:42:05] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[11:42:09] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[11:42:10] *** mickey8 is now known as mickey
[11:42:16] <newpy> energizer, more aesthetic concern, do I just pass the seed/rng to every function that needs a random #?
[11:42:27] <energizer> newpy: yes
[11:42:34] <newpy> and set default_rng in the main entry point of the app?
[11:42:36] <ssbr> energizer: so they're using nginx as a load balancing reverse proxy for uWSGI?
[11:42:57] <ssbr> my default position then would be to just use uWSGI (or whatever), and "a load balancing thingie"
[11:43:05] <ssbr> damn I hit enter before I could edit that last phrase and it shows
[11:43:08] *** Joins: sudorm (~sudorm@2a01cb0110525b99f475dbeb38fe0055.ipv6.abo.wanadoo.fr)
[11:43:13] *** Joins: shad (~shad@user/shad)
[11:43:32] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:43:37] <ssbr> (I mean like -- if you're using a cloud platform, "run your own nginx" doesn't seem likely to be how load balancing will work.)
[11:44:21] <newpy> oh also, is there any significant difference from passing rng vs passing seeds to functions and calling default_rng(seed) in said functions?
[11:44:55] <hexnewbie> newpy: It sounds like the latter won't be random at all
[11:45:06] <energizer> hexnewbie: right
[11:45:14] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:45:19] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[11:45:22] <newpy> ah ok, saw an example do that and was curious
[11:45:35] <pr100> right, if you're using a cloud platform; the default position is that there would already be load balancing
[11:46:08] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:46:09] <hexnewbie> I do use that in my unit tests, as I want them to *not* be random, that is, to be predictable and doing the same each time, while observing some variability in data.
[11:46:18] *** Quits: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me) (Ping timeout: 265 seconds)
[11:46:52] <energizer> newpy: seed the rng once
[11:47:03] <ssbr> pr100: and in that case, you just run uWSGI bare, if even that (depending on if it's PaaS/serverless or not), right?
[11:47:15] *** Joins: jmft2 (~jmft2@213.31.248.255)
[11:47:16] <ssbr> something something docker containers or something
[11:48:12] <energizer> ssbr: yeh there could be some other tool/environment for balancing/revproxying
[11:48:20] <pr100> probably yeah, actually tuning what goes into your container and what's left for the orchestration framework is a non-trivial problem. But for a first pass doing it as you say is fine
[11:48:22] *** Quits: dre (~dre@2001:8003:c932:c301:c3b5:3d4:768d:4c71) (Ping timeout: 265 seconds)
[11:48:55] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:49:26] <ssbr> thanks for educating me :)
[11:49:33] *** Joins: Meteorhead (~Meteorhea@165.225.77.51)
[11:50:03] <ssbr> (I remain glad that I just make Rust and C++ code go zoom, but it's good to know a little about real world programming)
[11:50:26] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[11:50:55] <pr100> I've been using cloud run a bit recently - I just have uvicorn with a fastapi application, so each instance is single threaded, but the cloud run infrastracture spawn new instances as the number of requests go up. However it might be that you'd actually get better cost/performance by having multiple workers in each container. It depends on lots of
[11:50:55] <pr100> things...
[11:51:21] *** Joins: eldenring0 (uid506233@id-506233.lymington.irccloud.com)
[11:52:17] *** Quits: neolem[m] (~neolem@2001:470:69fc:105::c675) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: Maciej (~maciej@2001:470:69fc:105::ed7d) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: bim9262[m] (~bim9262@user/bim9262) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[11:52:19] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[11:52:26] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[11:52:28] *** Quits: Mikaela- (~mikaela-@Feneas/Mikaela-) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: Vipulk (~vipulk@user/vipulk) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: canardo (~canardo@2001:470:69fc:105::e110) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: rolandog[m] (~rolandogm@2001:470:69fc:105::972f) (Quit: Bridge terminating on SIGTERM)
[11:52:30] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Bridge terminating on SIGTERM)
[11:52:30] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[11:52:30] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: Bridge terminating on SIGTERM)
[11:52:33] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Bridge terminating on SIGTERM)
[11:52:33] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: YoungChiefBTW (~youngchie@user/youngchiefbtw) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: jwon (~jwon@user/jwon) (Quit: Bridge terminating on SIGTERM)
[11:53:53] *** Joins: iomari891 (~iomari891@197.210.71.224)
[11:54:35] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:54:39] *** Quits: elkclone (~elkclone@user/elkclone) (Ping timeout: 265 seconds)
[11:54:43] *** Joins: pycode (~pycode@2001:b07:5d28:551:95ce:78fe:f143:3dc4)
[11:54:49] *** Quits: legola (~legola@46.235.100.217) (Remote host closed the connection)
[11:55:39] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:56:00] *** Joins: legola (~legola@46.235.100.217)
[11:56:07] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 252 seconds)
[11:56:18] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[11:56:23] *** Joins: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me)
[11:57:38] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 260 seconds)
[11:58:33] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[11:59:45] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[11:59:54] <p-i-> My C-lib wrapper is working for everything except td_set_log_message_callback https://bpa.st/3QZA
[12:00:09] <p-i-> When the C-lib invokes the callback function it segfaults
[12:00:13] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[12:00:13] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[12:00:13] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[12:00:13] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[12:00:13] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:00:13] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[12:00:19] <p-i-> And I can't figure out why.
[12:00:25] *** Joins: jwon (~jwon@user/jwon)
[12:00:39] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[12:00:39] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[12:00:39] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[12:00:39] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[12:00:53] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[12:00:53] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[12:00:53] *** Joins: psydroid (~psydroid@user/psydroid)
[12:00:53] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[12:00:53] *** Joins: neolem[m] (~neolem@2001:470:69fc:105::c675)
[12:00:53] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[12:00:53] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[12:00:54] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[12:00:54] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[12:00:54] *** Joins: allegary (~allegary@apache/committer/gjm)
[12:00:56] *** Quits: legola (~legola@46.235.100.217) (Ping timeout: 265 seconds)
[12:01:07] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[12:01:07] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[12:01:08] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[12:01:08] *** Joins: jinsun_ (~jinsun@user/jinsun)
[12:01:22] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[12:01:23] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[12:01:23] *** Joins: bim9262[m] (~bim9262@user/bim9262)
[12:01:23] *** Joins: Maciej (~maciej@2001:470:69fc:105::ed7d)
[12:01:23] *** Joins: Vipulk (~vipulk@user/vipulk)
[12:01:23] *** Joins: Mikaela- (~mikaela-@Feneas/Mikaela-)
[12:03:26] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[12:03:33] *** Joins: jpic (~jpic@193.56.33.8)
[12:04:16] *** Joins: plastico (~plastico@neomutt/plastico)
[12:04:18] *** Joins: holgersson (~quassel@user/holgersson)
[12:10:11] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:13:21] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[12:13:39] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[12:14:23] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:14:34] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[12:16:00] *** Joins: node1 (~node1@user/node1)
[12:16:07] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 240 seconds)
[12:17:05] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[12:17:42] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[12:18:48] *** Joins: holgersson (~quassel@user/holgersson)
[12:19:04] <p-i-> I think it's an issue of persistence
[12:19:33] <p-i-> That I convert the python function to a C-function, which is passed to the C-lib
[12:19:49] <p-i-> But as I don't maintain a reference to it, it is deallocated by the time it is invoked from C-land
[12:19:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[12:20:58] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 260 seconds)
[12:21:15] *** Joins: Naan (~Naan@user/naan)
[12:21:19] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:22:19] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[12:23:08] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:23:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[12:24:07] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[12:24:32] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[12:24:48] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:25:12] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[12:26:21] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[12:26:55] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[12:28:54] <p-i-> yup, that was it
[12:28:57] *** Joins: slav0nic (slav0nic@python.su)
[12:29:38] *** Quits: sudorm (~sudorm@2a01cb0110525b99f475dbeb38fe0055.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[12:29:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:29:59] *** Quits: mijofa (~mike@119-17-140-127.77118c.mel.nbn.aussiebb.net) (Read error: Connection reset by peer)
[12:31:13] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[12:31:16] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:47] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:34:14] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 246 seconds)
[12:35:20] *** Joins: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp)
[12:36:08] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[12:37:32] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:37:40] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[12:38:44] *** Joins: brelod (~me@90.244.150.142)
[12:38:51] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[12:40:51] *** Joins: wyclif (~wyclif@user/wyclif)
[12:43:01] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[12:45:05] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[12:45:27] *** Quits: kouhai9 (~kouhai@user/kouhai) (Remote host closed the connection)
[12:45:27] *** Quits: _0az3 (~az0@user/az0) (Remote host closed the connection)
[12:46:18] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:46:34] *** Joins: _0az3 (~az0@user/az0)
[12:46:38] *** Joins: kouhai9 (~kouhai@user/kouhai)
[12:47:38] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Remote host closed the connection)
[12:48:05] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[12:48:56] *** Joins: p-i-_ (~Ohmu@223.206.71.80)
[12:50:30] *** Joins: ValentynOG-MWE (~ValentynO@31.40.105.59)
[12:51:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:52:26] *** Quits: p-i- (~Ohmu@223.206.71.80) (Ping timeout: 246 seconds)
[12:52:29] *** Joins: rolandog[m] (~rolandogm@2001:470:69fc:105::972f)
[12:53:13] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[12:53:52] *** Joins: somlis (~somlis@user/somlis)
[12:54:09] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:56:27] *** Quits: jpic (~jpic@193.56.33.8) (Ping timeout: 240 seconds)
[12:56:38] *** Joins: just-me (~just-me@46.104.45.114)
[12:56:42] *** Joins: ar1nov (~arinov@213.194.126.155)
[12:56:50] *** Joins: jpic (~jpic@193.56.33.8)
[12:57:42] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:58:16] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 252 seconds)
[12:58:35] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:59:05] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:00:17] *** ixokani is now known as swinnenb
[13:00:46] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[13:01:36] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[13:02:57] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[13:03:51] *** Quits: newpy (~newpy@2602:ffc6:400:ba::203) (Ping timeout: 245 seconds)
[13:05:29] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[13:06:41] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 264 seconds)
[13:08:48] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[13:08:50] *** Joins: Tireos (~Tireos@94.158.34.36)
[13:09:55] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f17d-df99-d880-46ae.res6.spectrum.com)
[13:10:51] *** Joins: AutomatedTester (uid395371@selenium/developer/AutomatedTester)
[13:11:07] *** Quits: jmft2 (~jmft2@213.31.248.255) (Read error: Connection reset by peer)
[13:11:19] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:11:52] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:12:11] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-c4b5-f493-7437-ddea.res6.spectrum.com) (Ping timeout: 245 seconds)
[13:15:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[13:15:55] *** Joins: wyclif (~wyclif@user/wyclif)
[13:16:43] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:17:30] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:4d79:5188:7874:8b2e) (Read error: Connection reset by peer)
[13:17:38] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Ping timeout: 246 seconds)
[13:19:00] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[13:20:44] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[13:20:54] *** erica is now known as birb
[13:21:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[13:21:29] *** Quits: Balzy (~Balzy@host-87-17-16-102.retail.telecomitalia.it) (Ping timeout: 246 seconds)
[13:21:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:23:16] *** Joins: Atque (~Atque@user/atque)
[13:23:51] *** Quits: vorlket (~vorlket@1.156.42.89) (Ping timeout: 245 seconds)
[13:23:57] *** Joins: Balzy (~Balzy@host-79-20-148-220.retail.telecomitalia.it)
[13:26:27] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[13:26:37] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:27:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[13:27:23] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:27:58] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[13:28:52] *** Joins: fikran (~fikran@user/fikran)
[13:32:11] *** Joins: Tas-sos (~Tas-sos@78-157-62.adsl.cyta.gr)
[13:32:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:33:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:34:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:36:57] *** Joins: SteveR (~SteveR@103.215.168.1)
[13:37:08] <SteveR> hi there
[13:37:35] <SteveR> i have a dictionary {'apple' : 'a', 'boy': 'b'} . i want to convert this into "apple a boy b"
[13:40:03] <bjs> SteveR: there wasn't actually a question there
[13:40:17] <SteveR> how can i convert this
[13:40:25] <bjs> SteveR: ah,  what part are you struggling with?
[13:41:12] <SteveR> [str(xx), str(yy) for xx,yy in  x.items()]
[13:41:20] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[13:41:21] <SteveR> this one kind of works though [str(xx) for xx in  x]
[13:41:41] <bjs> SteveR: okay,  this [... for ... in ...] will create a list not a string, so you'll need to join things up and format them
[13:41:52] <bjs> SteveR: (it might be easier to start with a normal `for` loop before trying to make it one line)
[13:42:19] <bjs> SteveR: str(xx) + " " + str(yy)   will make a string with a space between (see also: f"{xx} {yy}" which is a nicer way of writing it)
[13:42:41] *** Joins: darksun (~darksun@user/darksun)
[13:43:08] <SteveR> this works , how can i put in a single line
[13:43:08] <SteveR> https://dpaste.org/C0A7
[13:43:26] <bjs> SteveR: ah okay, you can use str.join() and your list
[13:43:37] <bjs> " ".join(["a", "b", "c"]) gives you "a b c"
[13:43:59] <pr100> `' '.join(f'{k} {v}' for k, v in x.items())`
[13:44:09] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:46:52] *** Joins: wyclif (~wyclif@user/wyclif)
[13:47:34] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[13:47:46] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Ping timeout: 252 seconds)
[13:48:08] <wyclif> So I'm using pyenv to manage my versions, but running python3 won't start my global version of python unless I am in a new shell, when I am in tmux it uses an earlier version
[13:48:11] <wyclif> So when I run
[13:48:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:48:17] <wyclif> pyenv global
[13:48:33] <wyclif> it's '3.9.7'
[13:49:13] <wyclif> but when I fire up tmux and have some pane management going, and I run 'python3', 3.8.2 starts up
[13:49:42] <wyclif> I looked at my ~/.zshrc, and I thought I had everything sorted there
[13:49:56] *** Quits: p-i-_ (~Ohmu@223.206.71.80) (Remote host closed the connection)
[13:50:31] *** Joins: p-i- (~Ohmu@223.206.71.80)
[13:51:02] <wyclif> I have 'export PYENV_ROOT="$HOME/.pyenv" in my ~/.zshrc
[13:51:27] <wyclif> and 'export PATH="$PYENV_ROOT/bin:$PATH"
[13:52:16] <wyclif> What am I doing wrong?
[13:53:03] <Repiphany> eval "$(pyenv init --path)"
[13:53:35] <wyclif> I have 'if command -v pyenv 1>/dev/null 2>&1; then'
[13:53:45] <wyclif> 'eval "$(pyenv init -)"'
[13:55:02] <wyclif> Repiphany: So I need to add ' --path' instead of ' -' ?
[13:55:30] *** birb is now known as her
[13:55:55] <nyuszika7h> you need `-` in zshrc and `--path` in profile
[13:56:20] <wyclif> in profile?
[13:56:52] <nyuszika7h> yes, in ~/.profile (might need to have ~/.zprofile source ~/.profile too)
[13:57:07] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:57:10] <wyclif> OK, I had no idea. I'll check
[13:57:21] <nyuszika7h> though technically both can probably go in zshrc if you don't care about GUI environments etc. using the wrong Python, it's just recommended to put the PATH stuff in .profile
[13:57:30] *** Joins: shad (~shad@user/shad)
[13:57:43] <wyclif> you mean .zprofile?
[13:58:17] <nyuszika7h> I mean .profile because that's sourced globally by every login session, so things like GUIs or other non-shell sessions will use your pyenv Python as well
[13:58:26] <nyuszika7h> for me .zprofile is just one line: source ~/.profile
[13:58:31] <wyclif> I do have a .zprofile, there's only one line in there: 'eval "$(/opt/homebrew/bin/brew shellenv)"'
[13:59:46] <wyclif> So I should 'source ~/.profile' and then I need just one line in there with ' --path'?
[14:00:25] <wyclif> I wonder why this didn't set up correctly, I folled the install instructions to a T
[14:00:34] <wyclif> *followed
[14:00:55] <wyclif> echoed the paths and everything
[14:01:06] <nyuszika7h> I would put both the homebrew command and eval "$(pyenv init --path)" in ~/.profile and then source it from ~/.zprofile to make sure it's consistent everywhere, but simply putting the pyenv command in ~/.zprofile will work for use in the shell too
[14:01:30] <nyuszika7h> are you sure you're using the latest instructions? this behavior was changed in pyenv a few months ago or so, pyenv init - used to include pyenv init --path
[14:01:46] <wyclif> I'm not sure, now that you mention it
[14:01:58] <wyclif> Is there any guide to this online?
[14:02:06] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-9cf3-4260-a35d-73be.res6.spectrum.com)
[14:02:14] <nyuszika7h> https://github.com/pyenv/pyenv#basic-github-checkout
[14:02:23] <nyuszika7h> or you can use https://github.com/pyenv/pyenv-installer
[14:02:35] *** Joins: node1 (~node1@user/node1)
[14:03:00] <greyrat> > Coroutines use the Python await or yield keyword to suspend and resume execution instead of a chain of callbacks
[14:03:07] <greyrat> What's the difference between yield and await?
[14:03:34] <bjs> greyrat: yield is for generators,  a long long time ago before Python even had async or await, it only had yield
[14:03:40] <bjs> and people used it to make coroutines
[14:04:17] <greyrat> bjs: It seems to me that modern coroutines can still be awaited using the yield keyword?
[14:04:26] <bjs> greyrat: no
[14:04:35] *** Joins: somlis (~somlis@user/somlis)
[14:04:38] <bjs> greyrat: yield is for generators,  modern coroutines use async/await
[14:04:41] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f17d-df99-d880-46ae.res6.spectrum.com) (Ping timeout: 245 seconds)
[14:05:19] <greyrat> Hmm. Tornado coroutines work using both yield and await. How's that possible?
[14:05:33] <bjs> greyrat: you can have yield and await in the same function,  it's just both a coroutine and a generator
[14:05:39] <bjs> (an "async generator")
[14:05:54] <bjs>  also I think tornado supports the very old generator-only style of coroutines
[14:06:00] <wyclif> nyuszika7h, thanks, that ~/.profile heads up was helpful, I see now that it a better way, I'm going to try to configure it to use that now
[14:06:12] <bjs> since tornado is very very old
[14:06:43] <greyrat> bjs: Yes, I don't think tornado is doing async generators. Can the old coroutines be 'await'ed though?
[14:06:48] <bjs> greyrat: no
[14:06:59] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 246 seconds)
[14:07:14] <bjs> greyrat: yield is for generators and await is for coroutines.  Before we had coroutines people faked them using yield
[14:07:34] <greyrat> Well then I don't understand how tornado works. You can do `yeild some_tornado_function(..)` or `await some_tornado_function(...)`, and both work.
[14:07:35] <bjs> "people" here really usually means tornado, the library is very old and predates async/await
[14:07:48] <bjs> greyrat: you don't get to choose which in the function
[14:07:52] *** Joins: rsx (~dummy@ppp-188-174-134-72.dynamic.mnet-online.de)
[14:07:58] <bjs> greyrat: in a function that yield's you cannot decide to use await instead
[14:08:26] <jinsun> I think you can make them awaitable with asyncio.coroutine (but that is going away in 3.10) https://docs.python.org/3/library/asyncio-task.html#generator-based-coroutines
[14:08:29] <greyrat> bjs: This is the point of confusion, indeed. Both work, I have tested them.
[14:08:44] <bjs> greyrat: no they do not both work at the same time, you have to choose https://www.tornadoweb.org/en/stable/guide/coroutines.html#native-vs-decorated-coroutines
[14:09:21] <bjs> either you use a generator to "fake" a coroutine,  or you use async/await.  Tornado supports both (after all, it predates async/await) but prefers async/await where possible
[14:10:16] <greyrat> bjs: Yes, exactly in that doc; You see that the function `c()` is once returned with yield, and once awaited. Does `c` return different stuff based on its caller?
[14:10:25] <bjs> greyrat: no not *in the same function*
[14:10:44] <bjs> no it's based on whether it's a faked coroutine (where you write a generator, and use `yield`) or whether they're "real" coroutines (with async/await)
[14:11:00] <greyrat> bjs: How does `c()` know this?
[14:11:03] <bjs> greyrat: it doesn't
[14:11:13] <greyrat> So what is the return type of `c()`?
[14:11:23] <greyrat> If it's a coroutine, shouldn't it always be awaited?
[14:11:41] <bjs> greyrat: yes.
[14:12:04] *** Joins: alzgh (~alzgh@user/alzgh)
[14:12:12] <greyrat> ? But the gen-style just yields it directly. Who is going to await it?
[14:12:45] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[14:12:53] <bjs> greyrat: okay,  a long long long time ago.  Tornado existed but async/await did not
[14:13:09] <bjs> there were no coroutine objects, only generators.  This has never gone away
[14:13:19] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:5435:afc4:e6b4:ce6b)
[14:13:58] <bjs> then in 3.5 Python introduced async/await to make this nicer, and now you can use async/await for everything.  Except tornado still supports coroutines made out of "yield" generators.  and it has a special function (@tornado.gen.coroutine) to do this
[14:14:26] <greyrat> Ah, I think I got it.
[14:14:38] <greyrat> The decorator is awaiting the yielded coroutine, correct?
[14:14:38] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[14:14:56] <greyrat> Or it is just passing the coroutine to its caller to be awaited.
[14:15:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:15:35] <greyrat> Hmm. I am actually confused. What does the decorator do with the returned value? :))
[14:15:46] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 252 seconds)
[14:16:55] <greyrat> (What I don't understand is, how the new coroutine objects integrate with the old generator API.)
[14:19:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[14:19:47] <greyrat> Anyway, thanks, my understanding improved compared to before.
[14:19:47] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:20:02] <bjs> greyrat: @tornado.gen.coroutine "upgrades" a 'faked' yield coroutine into a Future
[14:20:07] <rendar> greyrat, my advice is just to focus on the new syntax of await/async, that's it
[14:21:12] <bjs> greyrat: faked coroutines are deprecated and tornado only supports them because of how old it is
[14:22:47] <rendar> i don't think you need to get every detail of how coroutines where implemented before python 3.5, just move on! :)
[14:24:06] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:24:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:24:31] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:6085:da4b:6a02:2ff5)
[14:24:32] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:6085:da4b:6a02:2ff5) (Client Quit)
[14:24:36] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[14:25:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:26:04] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:26:26] *** Quits: just-me (~just-me@46.104.45.114) (Read error: Connection reset by peer)
[14:26:54] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:27:02] *** Joins: mrwick (~mrwick@user/mrwick)
[14:30:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:34:35] *** Quits: k162 (~k162@user/k162) (Ping timeout: 252 seconds)
[14:36:19] *** Joins: k162 (~k162@user/k162)
[14:36:36] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:36:54] *** Joins: Payam (~Payam@138.106.57.131)
[14:38:00] *** Joins: nyloc (~nyloc@p4fde5e51.dip0.t-ipconnect.de)
[14:39:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[14:39:18] <wyclif> :q!
[14:39:22] *** Parts: wyclif (~wyclif@user/wyclif) ()
[14:39:56] *** Joins: legola (~legola@46.235.100.217)
[14:40:17] *** Quits: pycode (~pycode@2001:b07:5d28:551:95ce:78fe:f143:3dc4) (Ping timeout: 264 seconds)
[14:40:47] <Payam> hi, I use pytest to run tests according to this: https://bpa.st/D6HQ the unittests are done using unittest framework. However I don't know if the tests are executed in paralell. And I would like to print out the results in a table. Can anyone put me on right direction?
[14:42:27] <nyloc> Hi, I have a strange problem, I have a package p that has an __init__.py that does "from . import a, b, c" and in module a I have a line that says  "from . import b, c" an windows this errors out with an cannot import name 'b' from partially initialized module p, but under Linux the same thing works without an error.
[14:42:41] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 246 seconds)
[14:42:58] <bjs> nyloc: how do you run the code on each
[14:43:00] <nyloc> I can see that there is a circular import and this might be a problem, but I don't get why it is not a problem under linux
[14:43:40] <nyloc> bjs: to test I just did  a python interactive shell and executed "from p import b"
[14:43:41] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 265 seconds)
[14:43:49] <nyloc> same on windows and linux
[14:44:14] *** Joins: gusto (~Augustus@109.255.100.54)
[14:44:24] <bjs> nyloc: and as a check, are you actually running the same version of Python for each?
[14:44:59] <bjs> nyloc: I'd expect an error like "Cannot import name 'b'" in the other too
[14:44:59] <nyloc> Yes just checked 3.9.6 on both sides
[14:46:32] <nyloc> bjs: Yeah it is really strange it seems I have to boil it down to a minimal example to figure it out.
[14:46:47] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[14:46:54] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[14:46:59] <nedbat> nyloc: "python -v " will show a lot of detail about what's happening during imports. there might be an answer there
[14:47:19] <nyloc> nedbat ok, I will try that
[14:47:29] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 264 seconds)
[14:48:08] <nyloc> Wao you that was a lot of output, gives me something to read :P
[14:48:17] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:48:25] <bjs> nyloc: is the code of the package exactly the same for both? and the import you gave exactly the same?
[14:48:44] <bjs> or are you generalising from a bigger test case here
[14:48:55] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:49:40] <nyloc> It is a bigger project but I checked out the same code from our corporate git repo and build with the "same" toolchain (poetry) on windows and linux
[14:49:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:52:55] *** Joins: node1 (~node1@user/node1)
[14:52:56] *** Quits: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 250 seconds)
[14:54:23] *** dcaro is now known as dcaro_lunch
[14:54:49] <bjs> nyloc: sounds like a lot of noise there,  possibly there's some other difference you didn't notice
[14:55:29] *** Joins: wyclif (~wyclif@user/wyclif)
[14:55:56] <nyloc> bjs: I really hope there is otherwise I really have trouble to understand this ;). I will try to build a minimal version to reproduce.
[14:56:28] <wyclif> Why is it when I run python/pyenv with 3.9.7 as my global version, it will use that in a new shell but won't when running tmux (uses an earlier version)
[14:56:44] *** Joins: adder (~adder@user/adder)
[14:56:57] <adder> I'm writing a TCP SYN port scanner with trio and tractor. The goal is to scan 64K ports as fast as possible. My approach is splitting 64K port range into smaller batches, opening a tractor nursery used to spawn as many actors as there are CPU cores, and running batchworkers in actors. Each batchworker opens a trio nursery and spawns a task for each port. If some packets are lost on their way back, the process is repeated until all ports are scanned. This
[14:56:57] <adder> approach takes about 8 seconds on a 4-core machine with direct
[14:56:57] <adder> Cat5e link to the router. I wanted to push this even further, so I tried using PyPy, but it takes orders of magnitude more time to complete the scan (I cancelled it after 8 minutes). My question is: is this outcome expected, considering that PyPy is meant for CPU-bound work, while what I do here is entirely I/O-bound?
[14:56:59] <wyclif> I've been faffing around with it for over an hour and I still can't figure out what I'm doing wrong
[14:57:24] <wyclif> I tried moving the #PATH info from ~/.zshrc to ~/.profile to no avail
[14:57:46] <wyclif> I also tried looking at the tmux preferences
[14:58:26] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:58:29] <nyloc> wyclif: Have you checked what the environment in tmux looks like and if it differs from that of new shell?
[14:59:00] <wyclif> I installed pyenv with homebrew, and set it up to work with zsh
[14:59:24] <nedbat> adder: pypy won't speed up io-bound tasks
[14:59:36] <wyclif> Setting the $PATH in ~/.zshrc
[14:59:58] <wyclif> When I run 'pyenv versions'
[15:00:19] <wyclif> I get the system and 3.9.7 (global) listed
[15:00:44] <adder> nedbat, okay, I see. I didn't expect it to slow them down this much either :)
[15:00:53] <wyclif> When I fire up a new shell by itself, and start python3, it uses the latest version
[15:01:10] <nedbat> adder: i don't know why it would be slower either
[15:01:12] <wyclif> However, when I do this in a tmux session, it uses 3.8.2
[15:01:15] <wyclif> I don't get it
[15:01:25] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[15:01:52] <bjs> wyclif: is tmux actually using zsh
[15:02:10] <bjs> and it's not something silly like it's actually using bash :P
[15:03:00] <wyclif> I have my #PATH set in ~/.profile thinking it because that's sourced globally by every login session, so things like GUIs or other non-shell sessions will use your pyenv Python as well
[15:03:45] <wyclif> bjs: I looked at tmux preferences but I'm not sure where that setting is, I thought it was under "tmux" in preferences
[15:04:15] <bjs> wyclif: in my .tmux.conf I have set -g default-shell $SHELL
[15:04:37] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[15:04:58] <wyclif> interesting
[15:05:13] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:05:14] <wyclif> I don't have any $PATH lines in .tmux.conf
[15:05:16] <bjs> wyclif: presumably tmux should be sourcing ~/.profile regardless but i'm constantly confused by how the actual process of sourcing shellscripts at login/startup works :P
[15:05:27] <bjs> nor do i
[15:05:39] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[15:05:57] *** Joins: arseru (uid515527@user/arseru)
[15:06:00] <wyclif> My understand was that it's best to put all $PATH info in ~/.profile because that's global, unlike ~/.zshrc
[15:06:12] <bjs> iirc tmux is a login shell and login shells always source ~/.profile which can then source ~/.bashrc or ~/.zshrc if they choose to
[15:07:05] *** Quits: ValentynOG-MWE (~ValentynO@31.40.105.59) (Quit: Client closed)
[15:07:07] <wyclif> bjs: Is that line in your .tmux.conf at the top, the first line?
[15:07:43] <bjs> wyclif: https://github.com/bensimner/dotfiles/blob/master/tmux/.tmux.conf
[15:07:45] <arseru> Hi! It's been a while and I'm still not sure where to uniquely define the deps of my python library. Is it in requirements.txt? in setup.cfg->install_requires? in pyproject.toml? let's say the dep is requests>=1 and pyyaml>=2, I want a unique place where I can define that, and it can work for packaging, tox testing, local development, etc. For everything really
[15:08:14] <wyclif> bjs: thanks, will have a look-see!
[15:08:40] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[15:09:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:09:47] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:09:50] *** Joins: computeiro (~Wender@189.37.68.209)
[15:09:50] <jinsun> arseru: it should be in setup.cfg install_requires if you are using setuptools
[15:10:14] <arseru> jinsun: but can I have it like `install_requires = requirements.txt` ? is it a good idea?
[15:10:56] <jinsun> I don't think you can do that
[15:11:03] <arseru> the thing is, right now I have a requirements.txt with core deps of the library, and a requirements-dev.txt with tox and other dev stuff that also has a line `-r requirements.txt` to install the whole stack
[15:11:06] *** Joins: Siecje (~Siecje@216.154.5.139)
[15:11:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[15:11:31] <Siecje> I'm trying to debug but I can't step into a function, the only thing special in the function is it has
[15:11:38] <arseru> jinsun: exactly, it doesn't work, but if I want to develop locally, I don't want to have core deps defined in two different places
[15:11:39] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[15:11:39] <Siecje> asyncio.get_event_loop().run_until_complete(pptr_render_pdf(html))
[15:11:42] <nyloc> bjs: The dammed minimal example won't error out on windows nor linux... https://gist.github.com/nylocx/6790853376d980fcd904fef5c57293e2
[15:11:54] <bjs> nyloc: :)
[15:12:05] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:12:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:12:58] <arseru> when developing locally, I should always have my own library installed as a best practice? I'm used to just modify code and try if it works, but I'm not sure that's the best way when scaling up
[15:13:21] <nyloc> if I run `python -c "from cyclic_test import b"` it just works with a was run - b was run 42 - package initialized
[15:13:31] <wyclif> exit
[15:13:34] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[15:14:04] <jinsun> arseru: well you can have madatory and optional dependencies both in setup.cfg, and get rid of requirements.txt
[15:15:17] <arseru> jinsun: the optional ones would be the ones needed for developers?
[15:16:23] <jinsun> arseru: yes you can define extras_require, and call it dev or something, see https://setuptools.pypa.io/en/latest/userguide/dependency_management.html?highlight=extras_require#optional-dependencies
[15:16:25] *** Joins: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl)
[15:17:46] <jinsun> arseru: also you can have your package installed and modify it using pip install --editable
[15:18:10] *** Joins: elkclone (~elkclone@user/elkclone)
[15:18:21] <arseru> jinsun: thanks so much! I'll try all of this :)
[15:19:54] <nyloc> Anyone here who knows a minimal example to reproduce the error "ImportError: cannot import name 'b' from partially initialized module 'cyclic_test' (most likely due to a circular import)"
[15:21:00] <Wulf> nyloc: foo.py: from bar import b;   bar.py: from foo import a
[15:21:42] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:23:49] *** Joins: vimart (~vimart@148.252.128.183)
[15:24:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[15:27:19] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[15:28:36] *** Joins: dez (uid92154@user/dez)
[15:29:33] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:29:50] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:825d:ca87:abe3:b552)
[15:30:12] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[15:30:32] *** AutomatedTester is now known as DavidBurns
[15:30:45] *** Joins: adder` (~adder@user/adder)
[15:32:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:bf46:17dc:ccf8:ba)
[15:33:22] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:33:28] *** Quits: adder (~adder@user/adder) (Ping timeout: 265 seconds)
[15:35:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[15:35:53] *** Joins: Guest82 (~textual@189.174.22.173)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[15:36:25] <nyloc> Wulf: Ok this works now I have to figure out where my case is more like the foo bar case than in the gist I posted
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:40] *** Joins: shad (~shad@user/shad)
[15:36:45] <nyloc> As from the structure I would expect it to be as the latter
[15:37:29] *** Joins: ShinyCyril (~ShinyCyri@2607:fb90:a091:a289:5bc:caf1:e30d:3bdd)
[15:38:12] *** Joins: fikran (~fikran@user/fikran)
[15:39:28] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[15:40:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:35] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[15:40:36] *** Quits: Guest82 (~textual@189.174.22.173) (Quit: Textual IRC Client: www.textualapp.com)
[15:40:59] *** Joins: Retr0id1 (~Retr0id@user/retr0id)
[15:42:10] *** Quits: Retr0id (~Retr0id@user/retr0id) (Ping timeout: 265 seconds)
[15:42:10] *** Retr0id1 is now known as Retr0id
[15:43:03] *** Joins: rpino (~textual@189.174.22.173)
[15:43:11] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:44:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:45:41] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 246 seconds)
[15:45:48] *** cdown_ is now known as cdown
[15:46:24] *** Joins: xiongxin (~quassel@119.123.100.167)
[15:47:00] *** Joins: mindraj (~mindraj@user/mindraj)
[15:47:13] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[15:49:41] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 245 seconds)
[15:50:02] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[15:50:34] *** Quits: ShinyCyril (~ShinyCyri@2607:fb90:a091:a289:5bc:caf1:e30d:3bdd) (Quit: ShinyCyril)
[15:51:25] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[15:51:35] *** Quits: ar1nov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[15:52:19] *** Quits: enrh (~enrh@user/enrh) (Ping timeout: 265 seconds)
[15:53:34] *** Joins: enrh (~enrh@user/enrh)
[15:53:39] <Payam> what does loadfilescheduling mean? in pytest?
[15:54:20] <Payam> got it
[15:54:59] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[15:56:32] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[15:57:59] *** Quits: arti (~arti@193.40.103.195) (Quit: No Ping reply in 180 seconds.)
[15:58:32] *** Quits: mindraj (~mindraj@user/mindraj) (Read error: Connection reset by peer)
[15:58:40] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[16:02:31] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-11e5-eaf7-be1f-d354.res6.spectrum.com)
[16:02:40] *** Quits: paul424 (~chatzilla@pfn101.internetdsl.tpnet.pl) (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
[16:03:26] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-9cf3-4260-a35d-73be.res6.spectrum.com) (Ping timeout: 245 seconds)
[16:03:43] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[16:04:03] *** Joins: Barones (~Barones@2804:7f3:8987:b8e9:ca77:fb84:280a:faba)
[16:04:21] *** Quits: Grace (uid33812@id-33812.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:04:38] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[16:05:40] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:06:12] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[16:07:10] <rapha> good day all
[16:08:27] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:08:31] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:08:54] <rapha> does somebody know a python library or command line tool that is actually maintained or at least documented and working (i.e. not a long-ago abandoned academic exercise, former PhD thesis, etc.) for sequence tagging/labelling? (if its intended for parts-of-speech tagging but could be repurposed for custom categories that'd also be ok)
[16:09:24] <rapha> my feeling is something like this must exist but my google-fu is not up to par due to not knowing the right search words
[16:10:02] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:13:20] *** Quits: rpino (~textual@189.174.22.173) (Quit: Textual IRC Client: www.textualapp.com)
[16:14:15] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[16:15:05] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 264 seconds)
[16:16:32] <Masklin_Gurder> How do I split a list of unknown length into evenly sized sublists?
[16:17:18] <Masklin_Gurder> If the list was 1000 elements long for example, and I asked to split into 3 chunks, it would make three lists of length 333,333,334.
[16:17:30] <Masklin_Gurder> There must be existing code for this...
[16:17:47] <BtbN> How do you possibly have a list with unknown length?
[16:18:43] <lericson> Masklin_Gurder: that's pretty easy to implement yourself no
[16:19:08] <Masklin_Gurder> BtbN: I mean it's unknown enough that I can't hardcode the limits
[16:19:18] <Masklin_Gurder> lericson: Probably but Python isn't about reinventing ugly wheels
[16:19:26] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[16:19:37] <BtbN> so, gets its current length, divide by 3, grab 3 slices?
[16:20:16] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Remote host closed the connection)
[16:20:46] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:20:51] <lericson> starts = range(len(L)//3); stops = [*starts[:-1], None]; Lsubs = [L[start:stop] for start, stop in zip(starts, stops)]
[16:20:59] <Masklin_Gurder> BtbN: The '3' is also variable
[16:21:04] <BtbN> yes, so?
[16:21:14] <BtbN> make it a variable then
[16:22:00] <lericson> oh wait
[16:22:37] <Masklin_Gurder> FINE
[16:23:07] <Payam> using pytest should it be `pytest -n=auto` or `pytest -n auto` ?
[16:23:19] <rwbrambler> I'm using Python Flask with wfastcgi 3 on IIS and wfastcgi keeps re-initializing every few clicks when browsing the site.  It says wfastcgi.py will be restarted when files change... but no files are being changed.  Any ideas how I can track this down?
[16:23:44] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[16:24:11] *** Joins: sgn (~sgn@user/sgn)
[16:24:19] <lericson> Masklin_Gurder: starts = list(range(0, len(L), len(L)//3))[:-1]; stops = [*starts[1:], None]; Lsubs = [L[start:stop] for start, stop in zip(starts, stops)]
[16:25:10] *** Quits: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:25:33] *** Joins: dpreacher (~dpreacher@user/dpreacher)
[16:26:17] <lericson> tbh starts = [3*i for i in range(3)] is probably easier on the eyes
[16:26:44] <lericson> ah shit, len(L)*i of course
[16:26:55] <lericson> ah shit, len(L)*i//3 of course
[16:26:58] <lericson> ok never mind
[16:27:29] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:28:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[16:29:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:30:08] <pr100> Masklin_Gurder: check the grouper recipe in the itertools docs: https://docs.python.org/3/library/itertools.html
[16:30:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:31:44] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[16:31:58] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:34:00] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[16:34:04] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[16:34:38] *** Joins: zegalch (~zegalch@178.128.75.133)
[16:35:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[16:36:46] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 245 seconds)
[16:37:30] <arseru> Does anyone have the same error I do when setting a "extras_require" param in setup.cfg, then having a `-e .` in requirements.txt file, and running `python -m pip install -r requirements.txt`? Error here: https://bpa.st/PTFA
[16:38:01] <Yhg1s> arseru: the error means you set extra_requires to a string instead of a dict.
[16:38:14] <Yhg1s> oh, setup.cfg. How did you set it in setup.cfg?
[16:38:32] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 246 seconds)
[16:38:52] *** Joins: seednode3 (~seednode@user/seednode)
[16:38:53] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 246 seconds)
[16:39:02] *** Joins: wender (~Wender@189.37.68.209)
[16:39:15] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:39:18] <arseru> Yhg1s: oh, my mistake, I found the right format here https://setuptools.pypa.io/en/latest/userguide/dependency_management.html#optional-dependencies
[16:39:35] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (Ping timeout: 246 seconds)
[16:39:43] *** Joins: slavfox (~slavfox@93.158.232.111)
[16:39:46] *** Joins: decimuscorvinus_ (~jimmy@136.37.105.112)
[16:40:02] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 252 seconds)
[16:40:17] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 264 seconds)
[16:40:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[16:41:02] *** Quits: jwon (~jwon@user/jwon) (Ping timeout: 268 seconds)
[16:41:02] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 268 seconds)
[16:41:02] *** seednode3 is now known as seednode
[16:41:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 264 seconds)
[16:41:31] *** Quits: computeiro (~Wender@189.37.68.209) (Ping timeout: 252 seconds)
[16:42:31] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:42:50] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[16:43:24] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:43:40] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[16:45:12] *** Joins: computeiro (~Wender@189.37.68.209)
[16:45:31] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 245 seconds)
[16:46:35] *** Quits: wender (~Wender@189.37.68.209) (Ping timeout: 252 seconds)
[16:46:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[16:47:23] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[16:49:07] *** Quits: legola (~legola@46.235.100.217) (Remote host closed the connection)
[16:49:32] *** Joins: sudorm (~sudorm@2a01cb00838f6100a0683d10645f8d7e.ipv6.abo.wanadoo.fr)
[16:50:47] *** Joins: Organizers|Robin (~Robin_Jad@152.67.64.160)
[16:52:05] *** Quits: dpreacher (~dpreacher@user/dpreacher) (Ping timeout: 252 seconds)
[16:52:56] *** Joins: fdan (~fdan@192.146.154.3)
[16:53:30] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:54:29] *** Joins: shad (~shad@user/shad)
[16:56:05] *** Quits: {HD} (~{HD}@86.106.121.200) (Ping timeout: 260 seconds)
[16:56:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:56:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[16:56:46] *** Quits: Lewky (~Lewky@146.70.50.74) (Ping timeout: 260 seconds)
[16:57:09] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[16:57:11] *** Joins: LiftLeft (~LiftLeft@172.98.92.64)
[16:57:27] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[16:57:38] *** Joins: srhm (~srhm@user/srhm)
[16:57:48] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[16:58:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[16:58:36] *** Quits: vimart (~vimart@148.252.128.183) (Quit: WeeChat 2.8)
[16:58:42] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[16:59:19] <andi_> is there a nice way to check multiple values against the same value, eg. i want to know if any of x,y,z is > 0.95
[17:00:17] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Remote host closed the connection)
[17:00:28] <Repiphany> any(value > 0.95 for value in [x, y, z])
[17:00:31] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Quit: Leaving)
[17:00:59] <Repiphany> or (np.array([x, y, z]) > 0.95).any() if you use numpy
[17:01:09] *** Quits: etienneme (~etienne@user/etienneme) (Quit: ZNC 1.8.2 - https://znc.in)
[17:01:38] *** Joins: etienneme (~etienne@user/etienneme)
[17:01:43] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:01:45] <andi_> my current code is if any([x<limit, y<limit, z<limit])
[17:01:46] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:02:33] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:02:52] *** Joins: ano (~ano@user/ano)
[17:02:57] <sturm_> Are GPG signatures listed on the new PyPI interface anywhere? I can't seem to see them on packages I'm uploading.
[17:03:27] *** Joins: gggp (~textual@60.10.23.159)
[17:03:38] <Yhg1s> andi_: max(x, y, z) > 0.95
[17:04:17] <andi_> Yhg1s: oh that's neat!
[17:04:38] *** dcaro_lunch is now known as dcaro
[17:05:50] *** Joins: rpino (~textual@189.174.22.173)
[17:06:00] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:07:15] *** Joins: node1 (~node1@user/node1)
[17:07:57] <pr100> although if there are very many values you miss the benefits of short circuiting with max?
[17:08:22] <lericson> yes
[17:08:35] *** Joins: Tireos969 (~Tireos@91.223.118.130)
[17:08:42] <lericson> so would the numpy variant
[17:09:15] *** Parts: Siecje (~Siecje@216.154.5.139) (Leaving...)
[17:10:43] *** Joins: DerpGusta (~quassel@user/derpgusta)
[17:11:21] *** Quits: Tireos (~Tireos@94.158.34.36) (Ping timeout: 245 seconds)
[17:12:21] *** Quits: rpino (~textual@189.174.22.173) (Quit: Textual IRC Client: www.textualapp.com)
[17:13:24] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:15:21] *** Joins: Tireoss (~Tireos@91.223.118.131)
[17:15:28] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[17:15:46] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:52a:385a:e8d1:65eb)
[17:15:59] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:16:41] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[17:18:26] *** Quits: Tireos969 (~Tireos@91.223.118.130) (Ping timeout: 245 seconds)
[17:18:53] <MrMobius> is there a way to advance to the next value in a loop without leaving the loop body? ie for animal in ["cat","blue","dog","bird"]. when it gets the the adjective blue, it should fetch the next items to form "blue dog"
[17:19:08] <MrMobius> i know i can do it with a state machine but i was wondering if there's a cleaner way
[17:19:18] <zln> damn you pygame!
[17:19:23] <zln> no irc channel either
[17:20:28] <SnoopJ> MrMobius, it seems like you're only asking half your question. Do you have some existing code you're trying to modify, maybe?
[17:20:46] *** Joins: nomic (~nomic@185.192.69.207)
[17:21:55] *** DavidBurns is now known as AutomatedTester
[17:21:57] <MrMobius> SnoopJ, im trying to parse a markup file where a series of words describe something. sometimes one word in the list describes the thing and sometimes 2 or 3 words together describe it
[17:22:07] <MrMobius> so not modifying anything. its just something im wondering about
[17:22:18] *** Joins: SteveR (~SteveR@192.146.154.3)
[17:22:41] *** Joins: candyman (~candyman@user/candyman)
[17:23:18] *** Joins: {HD} (~{HD}@86.106.121.213)
[17:23:19] <MrMobius> like SNOOPY WHITE SLOW EARS BIG NOSE BIG
[17:23:52] <MrMobius> 5 words describing the thing but only 3 descriptions
[17:24:31] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:26:51] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Read error: Connection reset by peer)
[17:27:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:27:49] <jinsun> the way to skip an iteration is to use continue, and if you want to keep the value storred somewhere to use later append to a list that you defined before starting the loop
[17:30:31] *** Quits: gggp (~textual@60.10.23.159) (Ping timeout: 245 seconds)
[17:30:44] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[17:31:46] *** Quits: jpic (~jpic@193.56.33.8) (Ping timeout: 245 seconds)
[17:31:55] *** Joins: gggp (~textual@60.10.194.42)
[17:33:10] <Yhg1s> MrMobius: 'it = iter(your_list); for item in it: ...; next_item = next(it); ...'
[17:33:11] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[17:34:07] *** Joins: belphegor666 (~satan@user/belphegor666)
[17:34:32] *** Joins: iflema (~ian@user/iflema)
[17:34:58] *** her is now known as erica
[17:37:22] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:37:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[17:37:50] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3d27-f9b8-30f5-ae89.res6.spectrum.com)
[17:38:39] *** Joins: jpic (~jpic@193.56.33.8)
[17:41:52] *** Quits: sudorm (~sudorm@2a01cb00838f6100a0683d10645f8d7e.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[17:41:52] <MrMobius> Yhg1s, perfect. thanks!
[17:44:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:45:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:45:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[17:45:48] *** Quits: adder` (~adder@user/adder) (Quit: Leaving)
[17:46:08] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Remote host closed the connection)
[17:46:48] <SnoopJ> MrMobius, storing the iterator works for the general problem of looking ahead in the iterator (worth mentioning too that `more-itertools` has the peekable() decorator which lets you .peek() at the next item). If you get much more complex than that, you might want to look at parsimonious, which is a great parser-generator; you feed it a grammar, it spits out a parser.
[17:46:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:47:04] <SnoopJ> in this case though, doing exactly what Yhg1s said is probably sufficient :)
[17:47:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:47:35] *** Joins: fikran (~fikran@user/fikran)
[17:48:44] <MrMobius> ya looking ahead but also skipping the next item on the next iteration
[17:48:53] <MrMobius> thanks
[17:49:03] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Quit: Ping timeout (120 seconds))
[17:49:05] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Remote host closed the connection)
[17:49:32] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[17:49:37] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:54:00] *** Joins: grooverman (~grooverma@177.102.119.40)
[17:54:48] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:57:52] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[17:58:13] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:59:02] *** Joins: wender (~Wender@189.37.68.209)
[18:00:13] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[18:00:39] *** Quits: nomic (~nomic@185.192.69.207) (Quit: Leaving)
[18:01:11] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:01:17] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 264 seconds)
[18:01:23] *** Quits: computeiro (~Wender@189.37.68.209) (Ping timeout: 252 seconds)
[18:03:40] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[18:05:17] *** Joins: ar1nov (~arinov@213.194.126.155)
[18:05:18] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[18:05:18] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:06:20] *** Quits: wender (~Wender@189.37.68.209) (Ping timeout: 252 seconds)
[18:08:12] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[18:08:19] *** Joins: ub (~Thunderbi@178.115.55.159.wireless.dyn.drei.com)
[18:08:36] *** Quits: cheater (~Username@user/cheater) (Remote host closed the connection)
[18:09:34] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:10:05] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[18:11:31] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 265 seconds)
[18:13:28] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[18:14:32] *** Joins: aselman4 (~aselman4@136.2.33.166)
[18:14:40] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[18:15:08] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:15:25] *** Parts: MrMobius (~MrMobius@208.58.206.154) (Leaving)
[18:15:31] *** Joins: cheater (~Username@user/cheater)
[18:15:50] *** Parts: aselman4 (~aselman4@136.2.33.166) ()
[18:15:56] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Read error: Connection reset by peer)
[18:17:39] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[18:17:47] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[18:17:59] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:19:44] <SnoopJ> I am writing part of a parametrized test that I expect to fail, but the exception will vary. Is it better to move that part of the test into its own unit and decorate `@pytest.mark.xfail`, or use `with pytest.raises(Exception)` in that clause?
[18:20:12] *** Quits: iomari891 (~iomari891@197.210.71.224) (Read error: Connection reset by peer)
[18:21:35] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:21:55] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[18:22:06] *** Joins: srhm (~srhm@user/srhm)
[18:22:19] *** Joins: node1 (~node1@user/node1)
[18:22:33] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[18:22:42] <Wooble> SnoopJ: if you're testing that the code under test raises an exception, the latter, IMO. I see xfail as being for temporary expected failures, not failures by design.
[18:23:15] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-509b-8499-b4b2-d246.res6.spectrum.com)
[18:24:16] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-11e5-eaf7-be1f-d354.res6.spectrum.com) (Ping timeout: 245 seconds)
[18:24:17] <SnoopJ> I'm inclined to agree, especially because this test is just making sure the instance method in question fails for invalid inputs
[18:24:20] <SnoopJ> Thanks
[18:25:25] <Yhg1s> Probably not Exception, though. Perhaps parameterise the exception as well.
[18:25:35] *** Quits: Tireoss (~Tireos@91.223.118.131) (Quit: Leaving)
[18:28:09] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[18:28:31] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:28:41] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:29:06] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[18:29:06] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[18:29:36] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:30:20] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:30:35] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:30:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[18:31:02] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[18:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:36] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:31:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:37:59] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:31cf:4d74:8bdf:4bff)
[18:38:27] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[18:39:28] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-79c3-eb84-501d-4a08.res6.spectrum.com)
[18:41:46] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-509b-8499-b4b2-d246.res6.spectrum.com) (Ping timeout: 245 seconds)
[18:43:02] *** Joins: alex11 (~alex11@user/alex11)
[18:43:19] <jamwil> Are there any alternatives to PyPDF2 that have been more actively maintained recently? Looking to add headers/footers, watermarks and document security.
[18:43:20] *** Joins: taoe (~textual@pool-100-7-98-213.rcmdva.fios.verizon.net)
[18:43:37] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[18:45:56] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[18:46:34] *** Joins: xiongxin (~quassel@119.123.100.167)
[18:46:53] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[18:48:26] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[18:48:35] *** Quits: taoe (~textual@pool-100-7-98-213.rcmdva.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:49:29] *** Quits: ub (~Thunderbi@178.115.55.159.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[18:49:46] *** Joins: ub (~Thunderbi@178.115.55.159.wireless.dyn.drei.com)
[18:50:17] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:50:40] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 265 seconds)
[18:51:18] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:51:53] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 246 seconds)
[18:52:55] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[18:53:05] *** Quits: ub (~Thunderbi@178.115.55.159.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[18:53:11] *** Joins: ub1 (~Thunderbi@178.115.55.159.wireless.dyn.drei.com)
[18:54:15] <Dev0n> if I have celery tasks in a flask app that calls external endpoints using the requests lib and updates database entries using sqlalch+psycopg2, am I safe to run this with a gevent loop and assign like a concurrency of 500 per cpu core?
[18:54:36] <Dev0n> I'm currently using a prefork loop and that's limited per cpu core so only 2-4 tasks can really run at the same time
[18:55:29] *** ub1 is now known as ub
[18:55:41] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[18:57:51] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[18:59:04] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[19:01:52] *** Quits: Barones (~Barones@2804:7f3:8987:b8e9:ca77:fb84:280a:faba) (Remote host closed the connection)
[19:02:30] *** Joins: Pici (bnrubin@2600:3c03::f03c:91ff:fe60:2576)
[19:04:32] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:04:45] *** Joins: michelem (~Adium@51.154.167.11)
[19:04:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:05:19] *** Quits: xiongxin (~quassel@119.123.100.167) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:05:52] <Pici> I know I've used this before, but I can't remember what the name of the call is.  Basically I'm looking for something that takes an iterable and when you loop through it, it returns the current item and a number for the current loop.  So I don't have to intialiaze and do the counting myself.
[19:06:18] <SnoopJ> Wooble, Yhg1s as I think about it some more, the 'other' exception in this case is an OverflowError caused by trying to pass in a negative value for a std::size_t parameter, raised by SWIG's machinery. I'm not even sure if I want to test that, but there isn't a lot of variation, I think I'll just write out the cases explicitly with specific exceptions.
[19:06:45] <SnoopJ> (these are wrappers for specializations of a template, Rectangle<std::size_t> and Rectangle<float>)
[19:07:01] <grym> Pici: enumerate()
[19:07:19] <Pici> grym: thanks! thats exactly what I was thinking of.
[19:07:23] *** Quits: VaniaPy (~VaniaPy@adsl-196.176.58.192.tellas.gr) (Quit: Connection closed)
[19:07:40] *** Joins: kubek (~kubek@2a01:114f:95e:c800:d97f:d01:bd57:4dc6)
[19:08:41] <kubek> hello
[19:11:19] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[19:11:41] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:13:31] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[19:17:15] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 265 seconds)
[19:19:43] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:23:08] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:23:28] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[19:23:34] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[19:24:26] *** Quits: runelind (~runelind@user/runelind) (Read error: Connection reset by peer)
[19:25:41] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[19:27:26] *** Joins: runelind (~runelind@user/runelind)
[19:27:53] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[19:28:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[19:29:31] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:30:25] *** Joins: stdout (~stdout@216.163.21.11)
[19:30:41] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:31:44] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[19:31:52] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:33:14] *** Quits: kubek (~kubek@2a01:114f:95e:c800:d97f:d01:bd57:4dc6) (Quit: Client closed)
[19:33:15] *** Joins: KeiraT (~k@lulzsec.co.uk)
[19:33:47] *** Quits: ub (~Thunderbi@178.115.55.159.wireless.dyn.drei.com) (Remote host closed the connection)
[19:34:33] *** Joins: han-solo (~hanish@user/han-solo)
[19:35:52] *** Joins: jazzy (~jaziz@2600:380:4557:1bb1:c061:3679:1363:3566)
[19:35:55] *** Quits: nyloc (~nyloc@p4fde5e51.dip0.t-ipconnect.de) (Quit: Client closed)
[19:36:13] *** Joins: Pandadub (~Barones@189.50.80.77)
[19:37:47] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 240 seconds)
[19:38:53] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[19:39:13] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Ping timeout: 252 seconds)
[19:40:21] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[19:42:29] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[19:43:22] *** Joins: cmnky (~cmnky@user/cmnky)
[19:44:16] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 245 seconds)
[19:44:29] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:46:18] *** Quits: ar1nov (~arinov@213.194.126.155) (Quit: kotletki)
[19:46:34] <twainwek> is there a way to disable numpy's broadcasting mechanism or get warnings when it's broadcasting?f
[19:46:44] *** Quits: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:47:28] <p-i-> kinda wish I could do nonlocal.quit_flag = True instead of requiring 2 lines
[19:48:26] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[19:50:33] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[19:52:26] <SnoopJ> twainwek, can you tell us what problem you're trying to solve? As far as I know, broadcasting can't be disabled, because it's one of the main features of the library.
[19:52:28] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[19:52:28] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:52:38] *** Quits: jpic (~jpic@193.56.33.8) (Remote host closed the connection)
[19:53:01] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[19:53:15] *** Quits: rsx (~dummy@ppp-188-174-134-72.dynamic.mnet-online.de) (Quit: rsx)
[19:53:58] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[19:54:40] *** Joins: karl404 (~Guest47@81.30.70.253)
[19:54:46] <karl404> Hi all
[19:54:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:54:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:54:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[19:55:54] <karl404> Could someone please help me with transforming a sql query to a string? I'll really appreciate that.
[19:55:56] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:56:10] <SnoopJ> karl404, let's assume yes, ask your question
[19:56:34] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[19:56:48] *** Joins: BSaboia (~bsaboia@45.179.224.249)
[19:56:56] *** Joins: fikran (~fikran@user/fikran)
[19:57:08] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:57:25] <karl404> Currently I'm making use of pd.read_sql with a provided SQL query, but I would like to learn how I can transform the output as a string instead of a float for example
[19:58:32] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[19:58:37] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[19:59:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:00:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[20:01:08] <SnoopJ> karl404, it would help a lot to see an example of what your code currently looks like. Pandas has a lot of ways to transform data, perhaps you want something like `str_result = result.some_column.astype(str)` ?
[20:02:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:03:53] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[20:05:05] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Quit: Leaving)
[20:05:25] <karl404> SnoopJ result = pd.read_sql_query("select COUNT(orders) as totalorders FROM ordertable", connection)
[20:05:26] <karl404> result = result['totalorders'].astype(str)
[20:06:26] <SnoopJ> there's probably a way to express what you want in the query as well, but I don't know what the best spelling of that is
[20:07:22] <SnoopJ> karl404, that second line will replace the entire result, which might not be what you want to do. If you want to just replace the 'totalorders' column, it should read `result['totalorders'] = ...`
[20:07:27] <SnoopJ> but otherwise looks like what I had in mind
[20:08:17] <karl404> Okay. Thanks SnoopJ
[20:08:17] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:09:06] *** Joins: teut (~teut@182.69.68.230)
[20:09:16] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[20:09:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[20:09:24] *** Quits: karl404 (~Guest47@81.30.70.253) (Quit: Client closed)
[20:10:00] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:10:01] <twainwek> I'm just trying to debug/understand an issue
[20:10:21] <twainwek> What is the difference between a numpy array of shape (3,1) and (3,)?
[20:10:26] *** Joins: mickey (~user@user/mickey)
[20:10:42] *** Quits: impermanence (~impermane@73.94.243.213) (Ping timeout: 268 seconds)
[20:10:54] <SnoopJ> twainwek, the first one has two dimensions, the second has only one
[20:11:22] <SnoopJ> (you can check with `arr.ndim`)
[20:11:35] <twainwek> I've narrowed down the issue I am having to numpy not broadcasting x + b where x.shape=(3,2) and b.shape=(3,1), but accepting x+b if b.shape=(3,)
[20:14:17] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:15:08] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[20:15:31] <SnoopJ> twainwek, broadcasting can be summarized as "reading the dimensions of both arrays from the right, they must be compatible. A dimension with size 1 is compatible with anything."
[20:16:06] <SnoopJ> given (3, 2) and (3,), reading from the first we first see 2 and 3. 2 != 3 and neither is 1, so these shapes are not "broadcast-compatible" in the numpy jargon.
[20:16:34] <SnoopJ> helpful reading about how broadcasting works: https://scipy.github.io/old-wiki/pages/EricsBroadcastingDoc
[20:16:48] <twainwek> But (3,2) + (3,) works
[20:17:15] <twainwek> I lied
[20:17:17] *** Joins: Akuli (~Akuli@213.216.211.143)
[20:17:18] <twainwek> please ignore
[20:17:33] *** Quits: dhill (dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[20:17:45] <twainwek> It was actually (2,3)
[20:18:23] <SnoopJ> right, that's compatible because 3 == 3 (you stop comparing when you exhaust one or both of the shapes)
[20:18:38] <twainwek> that's actually a very useful way of viewing it. thanks
[20:19:13] *** Joins: jdmark2 (~jdmark@097-102-095-007.res.spectrum.com)
[20:19:17] <SnoopJ> the case where they're equal is relatively straightforward, in the case where one of them is 1, I think of it as that array "stretching" along that axis to match the size of the other one.
[20:19:25] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[20:19:30] *** Joins: martums4 (~martums@user/martums)
[20:19:51] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:21:02] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:22:17] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Ping timeout: 250 seconds)
[20:22:36] *** Quits: arinov (~arinov@176.89.27.241) (Ping timeout: 245 seconds)
[20:22:53] *** Quits: martums (~martums@user/martums) (Ping timeout: 264 seconds)
[20:22:53] *** martums4 is now known as martums
[20:22:56] *** Joins: Narrat (~omnius@p200300df5f13e77906ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:23:29] * SnoopJ isn't sure if the more modern docs have an analogous explanation yet
[20:24:24] <SnoopJ> aha, it does! twainwek, this is essentially the same information: https://numpy.org/devdocs/user/basics.broadcasting.html
[20:25:07] <hodapp> siiiiigh... trying to wrangle a matplotlib plot (by way of seaborn). ax.tick_params(rotation=45) properly rotates the text in question - some X & Y labels in question. Yet, if I do ax.get_xticklabels(), the "actual" tick labels are... not that.
[20:25:16] <hodapp> so where else that tick_params effects could text be?
[20:25:27] *** dcaro is now known as dcaro_away
[20:25:48] *** Quits: Meteorhead (~Meteorhea@165.225.77.51) (Quit: Client closed)
[20:26:34] *** Joins: magla (~gelignite@55d44db2.access.ecotel.net)
[20:27:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:27:23] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[20:28:15] *** Quits: teut (~teut@182.69.68.230) (Quit: Client closed)
[20:28:33] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Remote host closed the connection)
[20:28:39] <lxwulf> hi guys how can remove those [] in my json file when i generated my data.json? --> https://bpa.st/DZAQ
[20:28:57] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:29:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[20:29:34] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[20:29:38] <bjs> lxwulf: but the [] are part of the json
[20:29:41] <bjs> why do you want to remove them?
[20:30:21] <lxwulf> bjs, yes of course xD but not those in between when you look at the data.json file i only need those at the beginning and at the end
[20:30:42] <bjs> lxwulf: it's because you do many json.dump()s
[20:30:55] <bjs> lxwulf: why not do 1 big json.dump with a big array (list)
[20:31:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:31:48] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:31:55] <lxwulf> im new to python can you explain me this further? but yes i understand that i do several dumps because of my loop right?
[20:32:35] *** Joins: arinov (~arinov@77.67.139.108)
[20:33:23] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[20:34:56] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[20:36:02] *** Joins: cheater (~Username@user/cheater)
[20:36:25] *** Quits: pycode (~pycode@2001:b07:5d28:551:bf46:17dc:ccf8:ba) (Ping timeout: 252 seconds)
[20:36:29] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[20:36:33] *** Joins: teut (~teut@182.69.68.230)
[20:36:39] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[20:37:41] <jinsun> lxwulf: don't append data to a json file in a loop, append the data to a list (create an empty one before the loop), then after the loop is done, dump the list to the json file
[20:38:23] <Wulf> jinsun: that might get too big.
[20:38:47] * hodapp gives up, stabs matplotlib in the face
[20:38:49] <Wulf> but python's json module can generate output part by part too
[20:39:16] <bjs> lxwulf: yes, the simplest way is to instead of doing dump() in a loop,  make a list of dicts and them dump() the entire thing.  There are also clever ways to generate *Really big* json output on-demand but they're more complicated
[20:39:37] <bjs> it's easier to build the entire thing then just do 1 big dump()
[20:40:20] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[20:42:20] <lxwulf> bjs, i think that makes sense but i dont know how i should exactly do that i made a new "my_list = []" and then i need to but there my json output right? then save it into "data.json" or im wrong?
[20:43:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:43:55] <bjs> lxwulf: then my_list.extend(data)  then at the end open+json.dump(my_list, ...)
[20:44:14] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[20:44:56] *** Quits: teut (~teut@182.69.68.230) (Quit: Client closed)
[20:46:21] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:46:52] <lxwulf> bjs, i ended with this --> https://bpa.st/WERQ
[20:47:11] *** Joins: oz4ga (~tim@93.90.4.233)
[20:48:07] <bjs> lxwulf: well it removed the [] you wanted,  but I guess there's a problem because they're all the same
[20:48:26] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:48:33] <lxwulf> bjs, big uff...
[20:48:35] <bjs> lxwulf: here you're doing `data = json.loads(blacklist)` *outside* the loop, so you're always re-using the same data each time.  maybe you wanted to start from a fresh blacklist each loop? idk what you're really trying to do though
[20:48:39] <bjs> lxwulf: uff?
[20:48:57] <jinsun> how did you end up with json with single quotes
[20:49:13] <bjs> jinsun: lxwulf print()'ed they didn't json.dump()
[20:49:29] <bjs> the json part hasn't come yet
[20:49:45] <lxwulf> bjs, "blacklist" is just a templated because i want to write everytime the same data except IP and PORT
[20:49:56] <jinsun> okay so the choice of languagge should have been python not json, it looks bad
[20:50:19] <bjs> lxwulf: yeah but you want to create a new blacklist each time
[20:50:21] <bjs> jinsun: what?
[20:50:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:50:37] <bjs> oh the paste formatting, yeah
[20:50:41] <jinsun> yeah
[20:51:32] <Wulf> https://bpa.st/L5SA
[20:51:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:51:42] <Wulf> (don't do that)
[20:52:04] <lxwulf> bjs, it was my idea yes but im open for other methods ^^ i thought python need to know how it should build the json so i created the template its name is only because the have a "blacklist" key init
[20:52:20] <bjs> lxwulf: yeah you just need to do that `data = ...` line inside the loop
[20:52:58] *** Joins: eem (~eem@user/eem)
[20:53:47] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Enough internet today!)
[20:53:59] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[20:54:31] *** Joins: matsaman (~matsaman@user/matsaman)
[20:56:07] *** Joins: emf (~emf@2601:602:9401:b660:47d:d5f4:4143:7c05)
[20:56:57] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:57:23] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:57:30] *** Joins: srhm (~srhm@user/srhm)
[20:58:43] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[20:59:16] *** Joins: michelem (~Adium@51.154.167.11)
[21:00:02] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:00:09] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[21:00:45] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Client Quit)
[21:00:46] *** Joins: greedom (~greedom@2001:16b8:328f:4500:1498:4686:1441:5788)
[21:02:08] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:19] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[21:02:23] <lxwulf> bjs, thank so much for helping
[21:02:35] <lxwulf> bjs, it works! <3
[21:02:41] *** Quits: emf (~emf@2601:602:9401:b660:47d:d5f4:4143:7c05) (Quit: emf)
[21:03:31] *** Joins: pycode (~pycode@2001:b07:5d28:551:f042:e75a:9bb3:ea30)
[21:04:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Read error: Connection reset by peer)
[21:04:06] *** Joins: emf (~emf@2620:10d:c090:400::5:d028)
[21:04:33] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[21:04:53] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[21:04:58] <lxwulf> bjs, okay maybe not that precise....it only takes the last ip adress...
[21:05:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:05:05] *** Quits: michelem (~Adium@51.154.167.11) (Quit: Leaving.)
[21:05:32] <bjs> lxwulf: can you share the code and output?
[21:05:45] <lxwulf> bjs, yes sure just a moment
[21:06:54] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9de6:7cb1:acca:d016)
[21:07:20] *** Quits: gitly (~gitly@85.255.235.80) (Ping timeout: 250 seconds)
[21:08:01] *** Parts: neilthereildeil (~neilthere@204.115.183.4) ()
[21:08:05] <lxwulf> bjs, here my new situation --> https://bpa.st/UMTA
[21:08:12] *** Quits: dhill_ (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[21:08:28] <bjs> lxwulf: you need to move the `data = json.loads(blacklist)` inside the loop
[21:08:48] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[21:08:49] <bjs> lxwulf: and the json.dump need to be after the loop, not inside it
[21:08:52] <bjs> otherwise you'll dump many times
[21:09:26] *** Joins: gitly (~gitly@85.255.235.214)
[21:09:28] <bjs> although here it's being hidden because you're dumping then overwriting it many times :P
[21:10:22] *** Joins: c4017_ (~c4017@S0106c0943583f893.vf.shawcable.net)
[21:11:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:7c23:81da:5ebd:9b10)
[21:11:34] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:12:24] <stewie925> really nervous about ny python interview (and mysql) later this afternoon...
[21:12:31] <stewie925> my
[21:12:36] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[21:13:32] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[21:13:54] *** Quits: c4017__ (~c4017@2604:3d08:747f:7c90:6970:bd0b:559e:756f) (Ping timeout: 260 seconds)
[21:14:14] *** Joins: stevea (~stevea@user/stevea)
[21:14:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:14:49] <lxwulf> bjs, yes right! sorry you wrote this before but i changed my device and lost my history and yah i have a big alzheimer disease ^^'
[21:15:10] <lxwulf> bjs, now it works flawlessly thank you so much
[21:15:34] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:15:35] <lxwulf> bjs, i hope i can come back when i have question to another project =)
[21:16:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:17:15] *** Quits: rindolf (~shlomif@87.68.240.138.adsl.012.net.il) (Ping timeout: 265 seconds)
[21:17:32] <Wulf> stewie925: name two mariadb (hope you're not using mysql anymore) statements that help a lot with optimizing queries.
[21:20:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[21:21:48] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[21:21:52] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: buh bye)
[21:22:17] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 264 seconds)
[21:22:31] *** Quits: greedom (~greedom@2001:16b8:328f:4500:1498:4686:1441:5788) (Remote host closed the connection)
[21:23:33] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[21:24:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[21:27:06] *** Joins: KombuchaKip (~kip@192.252.230.5)
[21:27:54] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:27:55] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[21:28:11] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[21:28:27] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[21:29:15] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:29:29] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: buh bye)
[21:31:27] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-79c3-eb84-501d-4a08.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:32:02] <cmnky> in my main script, if I declare "global x" and then "x = 4" and then call a function from another source file, will it be visible ?
[21:32:15] <bjs> cmnky: "global" means "per file"
[21:32:24] <cmnky> ah ha
[21:32:37] <bjs> cmnky: so you can say "global x" inside a function to write to that files x
[21:32:52] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-8024-4278-4019-3e5b.res6.spectrum.com)
[21:32:57] <cmnky> right, I'm calling an imported function from another file
[21:33:06] *** Joins: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net)
[21:33:20] <bjs> cmnky: if you `import foo` and then `foo.bar()` if `def bar(): global x; x = 4` then `foo.x` will be 4
[21:33:27] <energizer> that's why you can work around the GIL by using multiple files
[21:33:38] *** Quits: tar_xvf (~tar_xvf@c-76-116-112-52.hsd1.nj.comcast.net) (Client Quit)
[21:33:48] <cmnky> its cool, I'll just move the declataration to the other file
[21:34:09] *** Joins: p-i-_ (~Ohmu@223.206.71.80)
[21:34:50] <energizer> (kidding, kidding)
[21:35:35] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[21:36:19] *** Quits: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-8024-4278-4019-3e5b.res6.spectrum.com) (Quit: Client closed)
[21:36:28] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[21:36:38] *** Joins: emf_ (~emf@2620:10d:c090:400::5:b24f)
[21:37:07] *** Joins: reset (~reset@user/reset)
[21:37:43] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-8024-4278-4019-3e5b.res6.spectrum.com)
[21:37:47] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Client Quit)
[21:37:52] *** Joins: Elodin (~weechat@user/elodin)
[21:37:58] *** Quits: p-i- (~Ohmu@223.206.71.80) (Ping timeout: 252 seconds)
[21:38:22] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[21:39:24] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:40:02] *** Quits: emf (~emf@2620:10d:c090:400::5:d028) (Ping timeout: 260 seconds)
[21:40:04] *** Joins: schemanic (~schemanic@204.13.45.2)
[21:40:06] *** Quits: stevea (~stevea@user/stevea) (Quit: Either I or my computer has gone to sleep. ZZZzzz…)
[21:40:58] <stewie925> Wulf: they will be asking MySQL questions
[21:41:20] <Wulf> stewie925: Okay. Could you answer mine?
[21:41:36] <SnoopJ> hodapp, it's possible that seaborn creates its own Artist instances that aren't part of the tick system. I would be tempted to examine that object in a debugger with a good variable inspector (I like pudb) to see what's going on inside the Figure
[21:42:02] <Wulf> Actually I don't know how to do that properly in recent mariadb versions.
[21:42:14] <SnoopJ> although if that were the case I'd be surprised since setting the rotation does work...
[21:42:14] <stewie925> thank you for the question - I need to look that up
[21:42:44] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:42:56] <Wulf> stewie925: Problem might be "Help, our website is slow. We suspect a slow mysql query. We need YOU to speed it up!" :-)
[21:43:24] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:43:32] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[21:44:10] <Wulf> stewie925: And I'd expect a mysql+python dev to be able to take user queries (e.g. from web browser) and safely execute it in mysql. E.g. WHERE filters or LIMITs.
[21:44:49] <stewie925> wulf: arghhhhhh -   all I can think of is that tables need to be defined with primary keys , Ive had experience with using table relationships (foreign keys). and can't put them in words right now
[21:44:55] *** Joins: grooverman (~grooverma@177.102.119.40)
[21:44:59] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:45:47] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[21:45:50] <stewie925> wulf: I remember optimizing SELECT to specify the columns you need only
[21:46:07] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[21:46:08] <stewie925> so it doesn't have to pull columns you don't need
[21:46:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[21:46:48] <SnoopJ> hodapp, it would help to see some code that shows off the confusing thing you're seeing, and to understand what output you expect (I wouldn't expect the rotation to change the actual text, for instance, so I'm not entirely sure what the task is)
[21:47:21] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[21:47:29] <han-solo> you could index the columns that gets queried frequently or something too, right ?
[21:47:33] <Wulf> stewie925: Proper database indices, JOINs that actually make use of them, etc.  SHOW FULL PROCESSLIST; can help. Or EXPLAIN SELECT ...;
[21:48:22] <stewie925> han-solo:  yes that too
[21:48:25] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[21:48:46] <Wulf> stewie925: Of course I don't know what kind of job you're applying for and what they might expect from you.
[21:48:46] <stewie925> wulf: thank you!
[21:49:08] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:49:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[21:49:16] <stewie925> Wulf:  I am applying for  a python developer with MySQL experience
[21:49:22] <stewie925> meeting is at 1 pm PST
[21:49:24] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[21:49:27] *** Joins: Samian (~Sami@user/samian)
[21:49:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[21:49:33] <stewie925> Im nervous is all
[21:49:48] <Wulf> stewie925: what's PST again as offset to UTC?
[21:50:06] <stewie925> PST is behind UTC by 7 hours
[21:50:15] <stewie925> California time
[21:50:25] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[21:50:33] <energizer> isnt it daylight savings now
[21:50:42] <Samian> How do you unit test a function that's supposed to generate a random distribution of numbers in a list?  I'm trying to replace such a function. I want a unit test that will prove the behavior is the same..
[21:50:47] <Wulf> energizer: guess so. So, PDT?
[21:51:03] <energizer> Wulf: i'd think so
[21:51:03] <stewie925> yes, its PDT currently
[21:51:38] <grym> Samian: seed your rng in the test
[21:51:40] <energizer> Samian: are they ints or floats
[21:51:40] <stewie925> ok need to brush up on the joins, inner joins, outer joins
[21:51:53] <hodapp> Samian: hm, either use a random seed and check some specific values, or do something like a chi^2 test that the samples have confidence N of having come from distribution X and understand that sometimes it might just fail at random
[21:51:55] <grym> Samian: or make assertions about the distribution it generates
[21:52:04] <Wulf> stewie925: for some reason I ended up using LEFT JOIN most of the time.
[21:52:07] <Samian> grym  right, but two random gens might not have the exact same behavior, or should it?
[21:52:12] <han-solo> stewie925: https://joins.spathon.com/
[21:52:32] <grym> Samian: judicious use of np.isclose and hodapp's suggestion will do, no?
[21:52:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:52:58] <Samian> grym  suppose you coded your own random normal distribution function. You wouldn't expect it to have the exact same inputs-outputs, even with same seed, as np.random.random would you?
[21:52:59] <stewie925> thank you han-solo
[21:53:02] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:7577:3b8e:f14c:a803)
[21:53:13] <energizer> stewie925: another perspective https://blog.jooq.org/say-no-to-venn-diagrams-when-explaining-joins/
[21:53:23] <Wulf> stewie925: perhaps write a simple python program that dumps data from table. That's the least I'd expect.
[21:53:42] <grym> Samian: i would expect that, if enough samples were generated, i would get a collection of values whose computable statistics obey those of a normal distribution
[21:53:57] <energizer> Samian: why do you want to make your own rng?
[21:55:19] <stewie925> thank you energizer!
[21:55:56] *** Quits: emf_ (~emf@2620:10d:c090:400::5:b24f) (Quit: emf_)
[21:56:15] <Samian> energizer  I want to remake def generate_uniform_input_batch in https://github.com/facebookresearch/dlrm/blob/main/dlrm_data_pytorch.py
[21:56:20] <stewie925> Wulf, in my past work I didn't remember using left joins, usually join but in the old syntax (select cols from a, b where.col = b.col)
[21:56:22] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[21:56:22] <Samian> that call is super slow
[21:56:35] <Wulf> stewie925: eww.
[21:58:02] <energizer> Samian: kolmogorov-smirnov test
[21:58:56] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:7577:3b8e:f14c:a803) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:45] *** Joins: emf (~emf@2620:10d:c090:400::5:b24f)
[21:59:47] <Samian> grym  that call is similar to the question I asked yesterday. It generates a table where each row is a sorted distribution of X numbers. The catch is that each row has a chance of being an element or two shorter than the other rows, because the np.unique line may remove an element, or two, or three even (it's a probability distribution whether two random numbers as the same)
[22:00:43] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:03:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:40] *** Quits: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:04:27] *** Joins: tar_xvf (~tar@c-76-116-112-52.hsd1.nj.comcast.net)
[22:04:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:06:17] *** Joins: fikran (~fikran@user/fikran)
[22:09:12] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:11:31] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[22:12:32] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[22:13:54] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[22:14:00] *** Joins: oz4ga (~tim@93.90.4.233)
[22:15:21] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[22:15:24] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[22:17:01] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:18:00] *** Quits: Narrat (~omnius@p200300df5f13e77906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[22:18:57] *** Joins: seednode3 (~seednode@user/seednode)
[22:20:04] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[22:23:01] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Ping timeout: 245 seconds)
[22:24:15] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:26:14] *** Quits: arinov (~arinov@77.67.139.108) (Ping timeout: 265 seconds)
[22:27:24] *** Quits: metaace_ (~metaace@user/metaace) (Remote host closed the connection)
[22:27:42] *** Joins: metaace (~metaace@user/metaace)
[22:31:18] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[22:34:11] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 252 seconds)
[22:35:27] *** Joins: nomic (~nomic@185.192.69.207)
[22:37:27] *** Parts: kouhai9 (~kouhai@user/kouhai) (sayonara)
[22:37:36] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:52a:385a:e8d1:65eb) (Ping timeout: 245 seconds)
[22:39:48] *** Joins: cursey (~cursey@136-26-145-118.cab.webpass.net)
[22:44:25] *** Quits: _0az3 (~az0@user/az0) (Quit: afk)
[22:44:54] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: Ping timeout (120 seconds))
[22:44:59] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[22:45:14] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[22:46:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[22:46:22] *** Joins: Russell- (russell@bnc4free/staff/russell)
[22:46:35] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:46:57] *** Joins: _0az3 (~az0@user/az0)
[22:47:16] *** Quits: Russell (russell@bnc4free/staff/russell) (Ping timeout: 252 seconds)
[22:47:16] *** Quits: Scotteh (~Scotteh@user/scotteh) (Ping timeout: 252 seconds)
[22:47:26] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[22:47:32] *** Joins: Scotteh (~Scotteh@user/scotteh)
[22:48:35] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[22:48:35] <andi_> if i have a a directory root containing files e.g. myoutput.csv and in addition i have another dir inside root called ref containing another myoutput.csv what's a good way to zip those two together? so that i e.g. get a tuple (myoutput.csv, ref/myoutput.csv)?
[22:48:38] *** Russell- is now known as Russell
[22:49:55] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:e429:af12:c956:fdff)
[22:50:02] <spaceone> is it possible to call an async function syncronously?
[22:50:08] <grym> spaceone: no
[22:50:52] <energizer> yes
[22:50:59] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[22:51:15] <energizer> well, spaceone what do you mean
[22:52:49] <spaceone> an async function should be similar to a generator function - with syntax sugar for await instead of yield...
[22:53:17] <energizer> `await` is like `yield from` not `yield`
[22:53:27] <spaceone> so, shouldn't there be utilities to immediately jump back into a async function. so that it's resolved syncronously
[22:53:49] *** Joins: teut (~teut@182.69.68.230)
[22:54:12] *** Quits: nomic (~nomic@185.192.69.207) (Quit: Leaving)
[22:54:20] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:54:32] *** Joins: nomic (~nomic@185.192.69.207)
[22:55:11] <energizer> spaceone: async framework functions like trio.run() of course need to execute async functions synchronously
[22:56:12] <spaceone> i will have a look at that lib
[22:57:22] <energizer> spaceone: but like, if you need to execute an async function, use an async lib
[22:57:39] <spaceone> maybe asyncio.run_until_complete() is what i am looking for
[22:57:43] <energizer> i should've stuck with grym's answer...
[22:57:49] <spaceone> :-D
[22:57:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:58:15] <energizer> spaceone: asyncio < trio but sure
[22:58:44] <spaceone> i changed a library into async functions. unfortionately the lib has unittests. now i need to migrate those, too .-(
[22:59:08] *** Joins: elena (~elena@31.173.82.95)
[22:59:14] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[22:59:57] <zln> can I assign name to nametuple dynamicall if I subclassed it? class nt(namedtuple('name', ['a', 'b', 'c'])):
[23:00:00] <zln> ?
[23:00:35] <grym> zln: easier to make a dataclasses.dataclass
[23:00:44] <grym> then it's a real class and it'll subclass properly
[23:00:50] <zln> hmm, letme check
[23:00:52] <zln> thanks
[23:01:03] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[23:01:04] *** Quits: magla (~gelignite@55d44db2.access.ecotel.net) (Quit: Stay safe!)
[23:01:08] <zln> what's the thing with dataclass btw?
[23:01:10] <grym> namedtuples are poor subsitutes for struct-like classes
[23:01:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:01:21] <grym> dataclasses/attrs are better options for "here's a blob of data!"
[23:01:44] <grym> substitutes, even
[23:01:44] <zln> alright. thanks
[23:02:10] *** elena is now known as elena_re
[23:04:42] *** Joins: arinov (~arinov@213.194.126.155)
[23:06:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[23:06:38] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[23:06:51] *** Quits: emf (~emf@2620:10d:c090:400::5:b24f) (Quit: emf)
[23:06:54] *** Quits: Elodin (~weechat@user/elodin) (Quit: WeeChat 3.2)
[23:06:55] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:07:15] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[23:07:22] *** Joins: prs (~Priyanshu@2409:4063:6e19:7eff::7248:8a04)
[23:08:22] *** Joins: y04nn (~y04nn@193.32.127.238)
[23:08:41] *** Quits: schemanic (~schemanic@204.13.45.2) (Quit: Client closed)
[23:09:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:09:56] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:10:01] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[23:10:07] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:11:39] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[23:12:15] <zln> grym: if I want to store a dataclass say point(x, y, w, h) in a dataclass container class Points then the attribute in this that will store the point would be 'object' woldn't it?
[23:12:38] <zln> type of the attribute I mean
[23:13:08] <grym> Points sounds like a list of Point to me
[23:13:10] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[23:13:15] <energizer> what kind of point has a width
[23:13:16] <grym> and a Point has, probably, four floats
[23:13:32] <grym> (and yeah, that's a bounding box ... )(
[23:13:33] <zln> lol, energizer well, maybe I misspelld :p
[23:13:39] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[23:13:49] <zln> grym, I would assign every Points object a name
[23:13:49] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:13:56] <zln> ah
[23:13:56] <grym> zln: ok
[23:13:58] <grym> sure
[23:14:00] <zln> maybe I don't need to
[23:14:02] <zln> :D
[23:14:04] <zln> nv
[23:14:53] *** Joins: stevea (~stevea@user/stevea)
[23:15:30] <zln> I'll need to store coordinates like A1, A2 with x and y values in each. How should I store the the point objects. Any recommendations? I want to refer to them like A1, J2 etc
[23:15:49] <grym> zln: https://bpa.st/YYSA
[23:16:05] <grym> zln: but a list of Point() will do.  or a dict, a set, ... whatever container you need
[23:16:08] <zln> grym, you are grym. That was fast :D
[23:16:20] <grym> zln: i use this idiom a LOT.
[23:16:37] <zln> what is redundant:typing....
[23:16:45] <grym> a list of points.  i gave it a rude name
[23:16:51] <zln> Ah, as will I :D
[23:16:55] <zln> lol
[23:17:24] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[23:17:39] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[23:17:44] *** Joins: Auron (~Auron956@user/auron)
[23:19:08] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:368:2f35:99d9:2851)
[23:19:09] *** Quits: oz4ga (~tim@93.90.4.233) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:20] *** Quits: eniac (~eniac@gateway/tor-sasl/eniac) (Remote host closed the connection)
[23:20:25] *** Joins: eniac (~eniac@gateway/tor-sasl/eniac)
[23:25:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:26:38] *** Quits: thurs806 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[23:30:27] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:7c23:81da:5ebd:9b10) (Quit: Client closed)
[23:30:46] *** Quits: hifi (hifi@m.vi.fi) (Ping timeout: 252 seconds)
[23:31:01] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Quit: ZNC 1.8.2 - https://znc.in)
[23:31:17] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[23:31:42] *** Quits: holgersson (~quassel@user/holgersson) (Quit: No Ping reply in 180 seconds.)
[23:32:07] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[23:32:23] *** Joins: emf (~emf@2620:10d:c090:400::5:b24f)
[23:32:37] *** Quits: Guest8130 (~il@irc.oh1cgn.fi) (Ping timeout: 250 seconds)
[23:32:58] *** Joins: holgersson (~quassel@user/holgersson)
[23:33:07] *** Joins: stevea (~stevea@user/stevea)
[23:33:35] *** Quits: emf (~emf@2620:10d:c090:400::5:b24f) (Client Quit)
[23:34:30] *** Quits: stevea (~stevea@user/stevea) (Client Quit)
[23:35:01] *** Joins: hifi (hifi@m.vi.fi)
[23:35:39] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 268 seconds)
[23:35:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:35:54] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[23:36:38] *** Joins: Guest8130 (~il@irc.oh1cgn.fi)
[23:36:53] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:38:08] *** Joins: tofran (~tofran@37.189.158.134)
[23:39:30] *** Quits: teut (~teut@182.69.68.230) (Quit: Client closed)
[23:39:51] *** Joins: teut (~teut@182.69.68.230)
[23:40:56] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:41:07] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:43:38] <bob_x2> is there any python static code analyzer which can draw some dependency charts ?
[23:45:06] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:45:08] *** Quits: elena_re (~elena@31.173.82.95) (Quit: WeeChat 3.2)
[23:45:46] *** Joins: elena (~elena@31.173.82.95)
[23:46:27] *** elena is now known as elena_re
[23:46:30] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: Ping timeout (120 seconds))
[23:46:56] *** Quits: Dev0n (~Dev0n@user/dev0n) (Ping timeout: 246 seconds)
[23:47:12] *** Joins: Dev0n (~Dev0n@user/dev0n)
[23:47:14] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[23:47:21] *** Quits: mgubyt (u@mgub.yt) (Quit: ZNC - https://znc.in)
[23:47:28] *** Quits: dodo (~dodo@user/dodo) (Remote host closed the connection)
[23:47:35] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[23:47:35] *** Joins: mgubyt (u@mgub.yt)
[23:47:54] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:47:54] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 260 seconds)
[23:48:56] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:49:13] *** Quits: gustaf (~gerikson@user/gerikson) (Ping timeout: 268 seconds)
[23:49:14] *** Quits: teut (~teut@182.69.68.230) (Quit: Client closed)
[23:49:27] *** Quits: kujo2 (~kujo@188.166.12.52) (Ping timeout: 240 seconds)
[23:49:46] *** Quits: rookie101 (~rookie@207.154.204.166) (Ping timeout: 260 seconds)
[23:50:07] *** Quits: erry (~erry@errietta.me) (Ping timeout: 240 seconds)
[23:50:08] *** Joins: gustaf (~gerikson@user/gerikson)
[23:51:33] <The-Compiler> bob_x2: something like https://pylint.pycqa.org/en/latest/technical_reference/features.html#imports-checker-options or https://modulegraph.readthedocs.io/ ?
[23:51:40] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[23:51:49] *** Joins: dodo (~dodo@user/dodo)
[23:51:59] *** Joins: kujo2 (~kujo@188.166.12.52)
[23:52:24] *** Joins: erry (~erry@errietta.me)
[23:52:52] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 252 seconds)
[23:53:27] *** Quits: Peng_ (~mnordhoff@ultimate1.mnrd.us) (Ping timeout: 240 seconds)
[23:54:09] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[23:54:44] *** Joins: gitly (~gitly@85.255.237.14)
[23:54:45] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[23:56:18] <SnoopJ> The-Compiler, oh hey, that's neat
[23:56:26] <SnoopJ> the pylint feature, I mean
[23:56:37] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 252 seconds)
[23:56:53] *** Joins: Betal (~Betal@user/betal)
[23:57:04] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[23:57:33] *** Joins: Peng_ (~mnordhoff@ultimate1.mnrd.us)
[23:58:41] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[23:59:46] <altendky> welp, i'm finally doing some light db work with sqlite...  aiosqlite specifically.  i'm trying to make sure i get my head on straight about multiple async tasks and the db and commits and transactions etc.  it seems like either each task should use it's own connection or the 'shared' connection should be protected to avoid use by multiple tasks at once.  sound good or am i missing something?
