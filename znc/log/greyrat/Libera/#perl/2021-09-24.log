[00:06:14] *** Quits: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc) (Ping timeout: 260 seconds)
[00:06:37] *** Joins: Darkcoal (~user@139.64.17.159)
[00:11:12] *** Joins: proller (~p@80.240.216.69)
[00:13:53] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[00:15:52] <simcop2387> daemon: this is impressive looking, https://www.phoronix.com/scan.php?page=news_item&px=BPFILTER-2021
[00:15:53] <Paperbot> Link title(s): [ BPF-Based Linux Firewall "bpfilter" Shows Impressive Performance Potential - Phoronix ]
[00:16:59] <simcop2387> the xdp support is really interesting since that can be fully offloaded onto good nics (and is needed at 100+gbe)
[00:18:07] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:29:14] <gordonfish> simcop2387: Interesting. netfilter (iptables, and more recently, nft) worked really well in my experience, but it's nice to see new offerings like that.
[00:36:34] * GumbyPAN CPAN Upload: Syntax-Operator-Zip-0.01 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Operator-Zip-0.01
[00:38:15] <buZz> hahaha https://opensource.com/article/18/1/my-delorean-runs-perl
[00:38:16] <Paperbot> Link title(s): [ My Delorean runs Perl | Opensource.com ]
[00:39:59] <LeoNerd> ^-- first attempt at a Zip operator
[00:40:56] <gordonfish> Great scott
[00:41:32] * GumbyPAN CPAN Upload: Task-AlienDev-0.01 by PLICEASE https://metacpan.org/release/PLICEASE/Task-AlienDev-0.01
[00:44:44] *** Quits: Darkcoal (~user@139.64.17.159) (Quit: Darkcoal)
[00:47:16] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[00:49:31] <daemon> simcop2387, it certainly does will have to take a read
[00:51:33] * GumbyPAN CPAN Upload: App-TimeTracker-3.010 by DOMM https://metacpan.org/release/DOMM/App-TimeTracker-3.010
[00:52:43] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[01:00:21] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[01:02:24] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[01:02:45] *** Joins: semeion (~semeion@user/semeion)
[01:04:54] *** Joins: eseyman (~manu@lfbn-idf1-1-2271-214.w92-151.abo.wanadoo.fr)
[01:07:18] *** Joins: jgaz (~jgaz@2600:8805:d800:b3e::2a2)
[01:11:41] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[01:15:19] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (Quit: boopin and beepin)
[01:21:26] *** Joins: Darkcoal (~user@139.64.17.159)
[01:29:08] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[01:29:08] *** Quits: ufobat_ (~martin@dynamic-095-114-044-173.95.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[01:29:23] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[01:36:32] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[01:41:41] *** Quits: jgaz (~jgaz@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[01:44:32] *** Quits: whynot (~whynot@37.73.107.58) (Ping timeout: 252 seconds)
[01:45:17] *** Joins: jgaz (~jgaz@2600:8805:d800:b3e::2a2)
[01:46:12] *** Joins: whynot (~whynot@88.155.3.197)
[01:49:35] *** Quits: jgaz (~jgaz@2600:8805:d800:b3e::2a2) (Client Quit)
[01:51:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[01:53:03] *** Quits: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b) (Ping timeout: 268 seconds)
[01:53:07] *** Quits: whynot (~whynot@88.155.3.197) (Quit: leaving)
[02:01:02] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[02:01:25] *** Joins: proller (~p@2a02:6b8:b081:a406::1:22)
[02:02:57] *** Joins: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b)
[02:06:23] *** Joins: tejr (~tejr@user/tejr)
[02:08:48] *** Quits: Darkcoal (~user@139.64.17.159) (Read error: Connection reset by peer)
[02:10:01] *** Joins: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc)
[02:17:23] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[02:25:40] *** Joins: aspic (~shifty~~~@ppp121-44-126-192.syd-gls-har-bras39.tpg.internode.on.net)
[02:26:16] *** Quits: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc) (Ping timeout: 252 seconds)
[02:26:57] *** Joins: Darkcoal (~user@139.64.17.159)
[02:31:32] *** Quits: aspic (~shifty~~~@ppp121-44-126-192.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[02:31:44] * GumbyPAN CPAN Upload: App-perlimports-0.000020 by OALDERS https://metacpan.org/release/OALDERS/App-perlimports-0.000020
[02:34:07] *** Joins: anthk_ (~anthk_@92.176.105.30)
[02:34:17] *** Quits: pizdets_ (~pizdets@183.182.111.150) (Ping timeout: 264 seconds)
[02:34:35] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[02:35:40] *** Quits: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no) (Quit: Leaving)
[02:38:01] *** Joins: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no)
[02:41:35] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[02:42:43] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[02:46:05] *** Quits: miojo (~miojo@191.253.152.1) (Quit: Client closed)
[02:48:07] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (Quit: boopin and beepin)
[02:48:39] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[02:58:34] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:05:32] *** Joins: normskal (~normskal@101.175.64.73)
[03:08:40] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[03:24:54] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:25:41] *** Joins: aspic (~shifty~~~@ppp121-44-126-192.syd-gls-har-bras39.tpg.internode.on.net)
[03:30:04] *** Quits: dev_ (~moo@2a02:587:de1f:bc00:ec75:22cd:4d13:d1ca) (Ping timeout: 252 seconds)
[03:38:59] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (Quit: boopin and beepin)
[03:39:28] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[03:42:46] *** Quits: normskal (~normskal@101.175.64.73) (Quit: Client closed)
[03:51:28] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[03:51:39] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[03:52:11] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:59:22] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[04:00:50] *** Joins: zgu|skaro (~zgu@2603-7080-b704-0800-16be-797d-71a4-f478.res6.spectrum.com)
[04:02:02] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[04:04:56] *** Joins: Adura (~Adura@user/adura)
[04:06:56] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[04:08:08] *** Quits: aspic (~shifty~~~@ppp121-44-126-192.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[04:08:44] *** Joins: aspic (~shifty~~~@ppp121-44-109-47.syd-gls-har-bras38.tpg.internode.on.net)
[04:10:17] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[04:16:43] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:31:23] *** Joins: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b)
[04:32:17] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[04:35:45] *** Quits: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b) (Changing host)
[04:35:45] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[04:37:09] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[04:41:14] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 265 seconds)
[04:43:15] *** Joins: anthk_ (~anthk_@92.176.105.30)
[04:46:46] *** Quits: Darkcoal (~user@139.64.17.159) (Quit: Darkcoal)
[04:52:16] *** Quits: jaytee80 (~jaytee80@47.190.14.171) (Quit: Client closed)
[04:52:47] *** Quits: aspic (~shifty~~~@ppp121-44-109-47.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[04:53:04] *** Joins: aspic (~shifty~~~@ppp121-44-110-185.syd-gls-har-bras38.tpg.internode.on.net)
[04:59:55] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:01:10] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[05:01:22] *** Quits: proller (~p@2a02:6b8:b081:a406::1:22) (Ping timeout: 252 seconds)
[05:01:25] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:03:34] *** Quits: Su-Shee (~Susanne@p4ffc778c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:05:00] *** Joins: Su-Shee (~Susanne@p5089490d.dip0.t-ipconnect.de)
[05:13:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[05:24:15] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[05:24:35] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:26:02] *** Joins: semeion (~semeion@user/semeion)
[06:06:53] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[06:12:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:13:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:18:51] *** Quits: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b) (Remote host closed the connection)
[06:25:22] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[06:28:20] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[06:28:46] *** Joins: dehhy^ (~dehhy@12.203.127.82)
[06:30:46] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:59:25] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:01:35] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[07:16:28] *** Joins: Martchus_ (~martchus@2a01:c22:7a76:9800:d250:99ff:fe49:3cce)
[07:17:16] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[07:17:17] *** Quits: Martchus (~martchus@2a01:c22:7a1f:6300:d250:99ff:fe49:3cce) (Ping timeout: 246 seconds)
[07:17:44] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[07:19:22] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[07:21:05] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[07:33:38] *** Joins: pj (~pj@ghettoforge/pj)
[07:34:36] *** Joins: semeion (~semeion@user/semeion)
[07:38:22] <simcop2387> mst, https://i.redd.it/f0l5imzc6bp71.jpg
[07:43:27] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Ping timeout: 265 seconds)
[07:48:22] *** Quits: aspic (~shifty~~~@ppp121-44-110-185.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[07:48:39] *** Joins: aspic (~shifty~~~@ppp121-44-114-88.syd-gls-har-bras39.tpg.internode.on.net)
[08:10:08] *** Joins: seoul_man (~meh@097-080-088-148.res.spectrum.com)
[08:11:24] *** Joins: dev_ (~moo@ppp-94-67-198-74.home.otenet.gr)
[08:11:39] *** Joins: ritsch_master (~user@77.119.200.38.wireless.dyn.drei.com)
[08:25:53] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:3d53:7013:6e81:3d2c) (Ping timeout: 246 seconds)
[08:30:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[08:31:23] * GumbyPAN CPAN Upload: SPVM-0.9015 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9015
[08:31:28] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (Ping timeout: 252 seconds)
[08:32:03] *** Joins: anomander (~anomander@vps-e9abfd3d.vps.ovh.net)
[08:36:50] *** Joins: jplesnik (~jplesnik@83.240.62.176)
[08:39:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[08:40:15] *** Joins: mattil (~mattil@airio.portalify.com)
[08:44:19] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:46:32] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:48:59] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:00:50] *** Joins: diskin (~diskin@176.106.23.15)
[09:04:16] *** Joins: rindolf (~shlomif@87.68.240.138.adsl.012.net.il)
[09:12:40] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 252 seconds)
[09:14:35] *** Joins: samir (~azureuser@user/samir)
[09:28:37] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 252 seconds)
[09:28:59] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[09:29:00] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[09:29:00] *** Joins: blinky42 (~quassel@user/blinky42)
[09:36:29] * GumbyPAN CPAN Upload: App-Greple-subst-2.2902 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-Greple-subst-2.2902
[09:37:36] *** Joins: normskal (~normskal@101.175.64.73)
[09:38:20] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.1 Beta Build (2021/09/22 UTC) 64 Bit)
[09:38:37] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:50:18] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Quit: bye bye!)
[10:06:24] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (Quit: boopin and beepin)
[10:07:10] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[10:08:08] *** Joins: tobybl (~tobybl@31.111.35.255)
[10:20:56] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:21:33] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:22:03] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[10:22:10] *** Joins: mattil (~mattil@airio.portalify.com)
[10:33:22] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:36:35] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[10:37:49] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[10:43:58] *** Joins: art1 (~romeyke@p200300ccdf06d00037405456f0fa164d.dip0.t-ipconnect.de)
[10:59:24] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:59:44] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:00:17] *** Quits: aspic (~shifty~~~@ppp121-44-114-88.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[11:00:20] *** Joins: mattil_ (~mattil@airio.portalify.com)
[11:00:25] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[11:00:28] *** Joins: aspic (~shifty~~~@ppp121-44-98-189.syd-gls-har-bras38.tpg.internode.on.net)
[11:05:39] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[11:13:47] *** Quits: ignarps (~iggy@user/ignarps) (Ping timeout: 252 seconds)
[11:17:59] *** Joins: ignarps (~iggy@user/ignarps)
[11:18:00] *** Joins: randir (~randir@93.159.239.42)
[11:30:41] *** Joins: Pali (~pali@user/pali)
[11:31:45] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[11:32:55] *** Quits: mattil_ (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[11:34:01] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[11:34:29] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[11:35:11] *** Quits: ignarps (~iggy@user/ignarps) (Quit: ZNC - https://znc.in)
[11:35:31] *** Joins: ignarps (~iggy@user/ignarps)
[11:36:43] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:37:07] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[11:37:24] *** Joins: tejr (~tejr@user/tejr)
[11:44:38] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[11:44:38] *** diskin is now known as Guest6777
[11:44:38] *** diskin_ is now known as diskin
[11:45:48] *** Joins: mattil (~mattil@airio.portalify.com)
[11:47:32] *** Quits: Guest6777 (~diskin@176.106.23.15) (Ping timeout: 265 seconds)
[11:50:26] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[11:50:36] *** Joins: X-Scale` (~ARM@31.22.200.105)
[11:51:34] *** X-Scale` is now known as X-Scale
[11:54:39] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:01:15] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:05:22] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[12:06:45] * GumbyPAN CPAN Upload: PICA-Data-1.31 by VOJ https://metacpan.org/release/VOJ/PICA-Data-1.31
[12:09:43] <zln> simcop2387: :D
[12:11:22] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:11:55] *** Joins: mattil (~mattil@airio.portalify.com)
[12:21:24] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:22:27] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:23:04] *** Joins: mattil_ (~mattil@airio.portalify.com)
[12:23:21] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[12:28:42] *** Quits: mattil_ (~mattil@airio.portalify.com) (Ping timeout: 260 seconds)
[12:33:34] *** Quits: holyghost (~holyghost@109.136.39.83) (Quit:  bbl)
[12:34:13] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:34:32] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[12:36:18] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[12:36:39] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[12:36:43] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:37:02] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[12:42:42] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[12:44:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[12:44:35] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[12:51:34] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[12:56:34] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[13:02:04] *** Joins: mattil (~mattil@airio.portalify.com)
[13:08:45] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:08:51] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:12:35] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[13:16:40] *** Quits: Peppard (~quassel@2001:470:1f0b:751:d501:b7a7:6d8e:18fd) (Quit: No Ping reply in 180 seconds.)
[13:17:32] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[13:17:49] *** Joins: Peppard (~quassel@2001:470:1f0b:751:e8e6:b6d3:a46d:1842)
[13:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:31:02] *** Joins: csrf (~csrf@user/csrf)
[13:32:39] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:36:55] * GumbyPAN CPAN Upload: App-Music-ChordPro-5.983 by JV https://metacpan.org/release/JV/App-Music-ChordPro-5.983
[13:40:34] *** Joins: mattil (~mattil@airio.portalify.com)
[13:45:41] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[13:48:27] *** Joins: ritsch_m` (~user@77.119.204.17.wireless.dyn.drei.com)
[13:48:53] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[13:49:31] *** Quits: ritsch_master (~user@77.119.200.38.wireless.dyn.drei.com) (Ping timeout: 250 seconds)
[13:50:18] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[13:55:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:56:03] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[14:02:03] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:02:39] *** Joins: mattil (~mattil@airio.portalify.com)
[14:09:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:22:52] *** Quits: Su-Shee (~Susanne@p5089490d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:24:20] *** Joins: Su-Shee (~Susanne@p4ffc7d33.dip0.t-ipconnect.de)
[14:29:50] <simcop2387> Genio, more reasons to hate dell laptops, https://news.ycombinator.com/item?id=28639952
[14:29:51] <Paperbot> Link title(s): [ Putting a DELL XPS laptop in a bag voids its warranty | Hacker News ]
[14:30:33] *** PonyBlocks is now known as PonyWhisper
[14:30:41] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 252 seconds)
[14:39:24] *** Joins: Adoi (~Adoi@user/adoi)
[14:39:34] *** Quits: ritsch_m` (~user@77.119.204.17.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[14:41:46] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[14:47:09] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[14:47:49] *** Joins: miojo (~miojo@191.253.152.1)
[14:53:47] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[14:56:52] *** Joins: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc)
[14:57:29] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 265 seconds)
[15:00:56] *** Joins: anthk_ (~anthk_@92.176.105.30)
[15:02:14] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[15:13:27] *** Quits: aspic (~shifty~~~@ppp121-44-98-189.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[15:14:21] *** Joins: aspic (~shifty~~~@ppp121-44-106-22.syd-gls-har-bras38.tpg.internode.on.net)
[15:22:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:24:20] *** Joins: mattil (~mattil@airio.portalify.com)
[15:29:03] <daemon> simcop2387, E_STACK_FULL 
[15:29:15] <simcop2387> ?
[15:29:21] <daemon>  <simcop2387> Genio, more reasons to hate dell laptops, https://news.ycombinator.com/item?id=28639952
[15:29:22] <daemon> :)
[15:29:22] <Paperbot> Link title(s): [ Putting a DELL XPS laptop in a bag voids its warranty | Hacker News ]
[15:29:36] <simcop2387> ah i see, didn't grok that so early in the morning
[15:30:31] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[15:33:28] <daemon> I am having fun returning a phone I just got
[15:33:41] <daemon> gave up waiting in queue and called the 'I want to leave'(cancellation line) instead
[15:33:46] <daemon> amazingly they answer that very fast
[15:34:13] <ehuelsmann[m]> daemon: usually sales works pretty well too.
[15:34:16] * daemon hates PBX+Company policies
[15:34:31] <daemon> ehuelsmann[m], I found holding down # or 0 normally jumps most of them too or pressing nothing at all
[15:34:32] <Altreus> maybe this is why my other laptop keeps turning itself back on
[15:34:39] <Altreus> It's not even a dell
[15:34:53] <Altreus> If I don't turn it off I'll find it's awake again when I get to where i'm going
[15:35:37] <simcop2387> Altreus: yea apparently not uncommon
[15:36:01] <daemon> maybe it has to be awake for it to connect to wireless and send all its voice logs and such to google, amazon, microsoft, its manufacturer or other selected partners
[15:36:16] <Altreus> maybe it's just windows being stupid
[15:36:32] <Altreus> I did manage to ameliorate the problem by turning my *mouse* off, but it still wakes up occasionally
[15:36:33] <daemon> and with that my phone is going back, shame really was nice phone
[15:36:51] <Altreus> what phone have you got/
[15:36:56] <daemon> OPPO X3 find Pro
[15:37:20] <Altreus> x3
[15:37:30] <Altreus> that sounds extremely obscure
[15:37:40] <daemon> its from one of the biggest phone brands in the world
[15:37:45] <daemon> just not this part of the world
[15:37:50] <daemon> 1100 GBP phone
[15:37:53] <simcop2387> daemon: i bought a pixel 5a, plan to try completely degoogling it and seeing how i like lineageos
[15:38:01] <Altreus> and it's going back
[15:38:01] <simcop2387> but i have to figure out if volte will work fine first
[15:38:04] <Altreus> Glad I didn't bother then
[15:38:05] <daemon> simcop2387, before you do try nova launcher
[15:38:08] <daemon> you will find it in the app store
[15:38:16] <simcop2387> daemon: been using that for about 6 years now
[15:38:19] <daemon> Altreus, there is nothing wrong with it, its rather fantastic to be honest
[15:38:23] <daemon> it just does not match my criteria
[15:38:27] <simcop2387> that and FCC launcher, but that's only for my car radio
[15:38:30] <Altreus> I'm thinking of getting a pixel because de-samsunging my phone will be a massive improvement
[15:38:35] <daemon> simcop2387, ah I realy like it :)
[15:38:46] <Altreus> so I won't need to de-google it until the novelty wears off
[15:38:49] <daemon> Altreus, most older samsungs can run lineage no problem
[15:38:59] <simcop2387> daemon: just the ability to make a folder that launches stuff makes for a really nice main screen
[15:39:03] <daemon> just the S21 line that cannot yet
[15:39:12] <Altreus> simcop2387: but the FCC won't let me be or let me be me so let me see
[15:39:19] <daemon> simcop2387, I have mine utterly black, not even the dock is shown, all gestures
[15:39:25] <daemon> on a black background
[15:40:14] <daemon> think I will try a Xiaomi next
[15:40:29] <daemon> 11t Pro looks pretty sweet
[15:40:40] <simcop2387> Altreus: yea it's a weird name but it's made to act like most "modern" radios that have touch screens.  likely going to start making a new version of the mount for the car radio that adds a bunch of nice hardware buttons once i get my 3d printer back
[15:41:27] <simcop2387> daemon: i like the phases of the moon live background from the old astronomy cast app.  not sure if it still is associated with them or not anymore.  that or the Earthbound enemy live wallpaper that's on F-Droid (Abstract Art)
[15:42:30] <simcop2387> daemon: yea the quick as hell lineage os builds being available for the pixel 5a were what made me go there over the one plus stuff.  did the purchase though because i caused some kind of fun problem to the screen on my current phone
[15:42:59] <simcop2387> https://photos.app.goo.gl/WFyMJA2Z68VsXZt68
[15:43:00] <Paperbot> Link title(s): [ Shared album - Ryan Voots - Google Photos <https://photos.google.com/share/AF1QipNKEFodUCTuXpo9HTYPGYo2evZxaM4m5OS2vSSmBTtZcdyFi6HIQi82RI-iIOl0IA?key=NC0yTUhILWZnS1l2eEllSHAwRmNtZDlBWHViclFn> ]
[15:43:22] <simcop2387> it's been getting worse
[15:43:39] <simcop2387> and yes that does have my phone password/pattern
[15:44:28] <simcop2387> there's now a 1 pixel thick horizontal line that's growing across the screen at that divot
[15:45:07] <simcop2387> what i can't figure out is how i managed to drop it or hit it and damage the internal screen without damaging the frame or glass
[15:45:52] <daemon> simcop2387, wonder if you can use nova on lineage
[15:46:12] <simcop2387> no reason you shouldn't be able to.  it's just a build of android
[15:46:28] <simcop2387> with no google stuff by default (but you can put it in place)
[15:47:24] <daemon> must admit I do use quite a bit of google stuff
[15:47:31] <daemon> my lights are controlled by google assitant lol
[15:48:06] <daemon> speaking of which
[15:48:09] <Altreus> oh I have a cool device on my wall that activates/deactivates my lights
[15:48:13] <simcop2387> yea i use a good bit of it too but i like the idea of removing it and only putting the stuff in that i use
[15:48:17] <Altreus> It's in a stupid place though
[15:48:17] <daemon> what about other apps like microsoft authenticator and steam authenticator
[15:48:38] <daemon> oh you can still use such things on lienage?
[15:48:45] <daemon> I assumed just all google stuff would be gone and uninstallable
[15:48:50] <daemon> I assumed just all google stuff would be gone and un installable
[15:49:02] <simcop2387> steam should work fine, at the worst you should be able to extract the key and put it into another TOTP app (i put my steam authenticator into KeepPassXC/Keepass2Android)
[15:49:25] <simcop2387> no you can add the google stuff back in to lineage, and only put in the pieces you want/need
[15:49:26] <daemon> simcop2387, https://event.mi.com/uk/sales2021/xiaomi-product-launch-2021 - tempted but ~~ not sure I actually like the design :|
[15:49:28] <Paperbot> Link title(s): [ Let the MAGIC begin ]
[15:49:38] <simcop2387> https://wiki.lineageos.org/gapps.html
[15:49:38] <Paperbot> Link title(s): [ Google apps | LineageOS Wiki ]
[15:49:39] <daemon> ok cool
[15:49:48] <simcop2387> how well any of this works... i don't know yet
[15:49:53] <daemon> wonder if my old phone is supported
[15:50:22] <daemon> ok its not :|
[15:50:32] <simcop2387> mine sort of is (LG V30) but i'd have to give up VoLTE which basically makes it useless.  that's because it's from just before there was a standard android way to support it so there's a horrible hack from LG to do it
[15:50:42] <daemon> LG G6 for me
[15:51:16] <simcop2387> from what i can find the pixed 5a should do volte on it but i'll have to experiment for a few days to get it going properly
[15:51:22] <daemon> then again maybe there is hope https://www.getdroidtips.com/lineage-os-17-1-lg-g6
[15:51:22] <Paperbot> Link title(s): [ Download and Install Lineage OS 17.1 for LG G6 based on Android 10 Q ]
[15:51:56] <daemon> ah so I need to install android 10 on it with a rom flash
[15:52:44] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[15:53:31] <daemon> well I will give it a go after this oppo is shipped back, luckily I have done that a few times with other phones
[15:53:33] <daemon> so should not be so bad
[15:54:15] <daemon> it is slightly worrying though that my device is not listed on lineago OS's main site
[15:54:19] <daemon> and is instead on some third party domain
[15:54:40] <simcop2387> yea had i not had a broken screen i'd do the same with my old lg too once i replaced it.  since it wouldn't have a sim then volte doesn't matter.  but it's not worth it to replace the screen since it's only officially at android 8 (with a hacked up european rom it's on 9).
[15:55:15] <daemon> mine is insured thankfully :) but its still 95% working anyhow
[15:55:20] <simcop2387> not worth it to replace the screen when the screen replacement is $120-130 to diy it, and $300-400 to get it done professionally and brand new phone is $450
[15:55:27] <daemon> weirdly the fault with mine is on the earpiece, it works fine in speaker phone mode
[15:55:32] <daemon> but in normal phone mode is quiet 
[15:55:39] <simcop2387> mine had a plan on it but that expired a few years ago
[15:55:51] <daemon> bank = insure all phone in house :D
[15:56:42] <daemon> I do have a spare couple od older LG's as well as another G6, so after the OPPO is back ill plop my sim in one of those and send mine in on insurance get that ear piece fixed 
[15:56:48] <simcop2387> i've generally not been able to get that on any phone that's well beyond the manufacturer's support and warranty.  they dropped mine rather quickly because of the hacks they had to do for volte and other bits sadly.  no way of knowing that when i got it.
[15:57:31] *** Quits: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc) (Ping timeout: 252 seconds)
[15:57:37] <simcop2387> yea i wanted a spare one to play with but it is not to be, i usually keep them and abuse them until they're not economical to repair anymore and *then* get a new phone
[15:57:38] <daemon> ah my insurer just offers you another handset (upgrade) or a 'good as new' direct replacement if its to awkward to fix
[15:57:50] <simcop2387> which company?
[15:57:56] <daemon> not sure lets see
[15:57:59] <daemon> if you are in the uk
[15:58:04] <daemon> jsut get a nationwide bank account
[15:58:08] <simcop2387> ah that'd be the difference, yea i'm US
[15:58:10] <daemon> for 12 quid a month you get the insurance policy
[15:58:38] <daemon> 'FlexPlus includes Worldwide Family Mobile Phone Insurance. It covers your family’s phones against loss, theft, damage and breakdown. Anywhere in the world.' ... who is the carrier
[15:58:43] <simcop2387> i've seen at least one here that'll keep taking your money unless you cancel the policy when they no longer actually cover your phone.  not sure that's legal but...
[15:59:02] <simcop2387> t-mobile for me, but i never buy carrier phones
[15:59:12] <daemon> no I meant the insurance carrier
[15:59:26] <daemon> FlexPlus Worldwide Family Mobile Phone Insurance has been arranged for Nationwide by Lifestyle Services Group Limited (Financial Services Register No.315245) with a single provider Assurant General Insurance Limited (Financial Services Register No. 202735).
[15:59:29] *** Joins: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc)
[15:59:44] <daemon> so those 
[15:59:45] <daemon> :)
[16:00:42] <simcop2387> oh forget the name now.  it was the one that came from the carrier that a coworker had years ago.  think it was one of the crappy low cost mvno carriers
[16:01:01] <simcop2387> might have been boom or boost forget which exactly
[16:01:18] <haarg> i wish i could extract the steam authenticator key without wiping my phone
[16:02:07] <daemon> curious, why? you can just reinstall steam authenticator on a new phone
[16:02:32] <daemon> you do not even need a password
[16:02:38] <daemon> it will ask your previous phone to auth it
[16:02:53] <daemon> I think that is ... wait no
[16:03:02] <haarg> wiping my phone is not exactly convenient
[16:03:07] <daemon> I did have to give my password, then auth it on the other phones steam authenticator
[16:03:47] <haarg> i'm not switching to a new phone
[16:03:53] <daemon> simcop2387, I only installed nova launcher on the oppo so I could config it to be more like my LG was, now I can't use my LG's interfance -_-
[16:04:05] <daemon> interface*
[16:04:27] <haarg> i can't extract the key without root, which means unlocking the bootloader, which means a full reset.
[16:04:42] <simcop2387> haarg: you likely can actually, see if you can make a backup of your phone with adb and you can pull it
[16:04:55] <daemon> ooh adb backup yeah
[16:05:06] <haarg> i'm pretty sure it doesn't allow access to that
[16:05:15] <simcop2387> haarg: what device?
[16:05:20] <haarg> pixel 5
[16:05:33] <simcop2387> oh you definitely can, turn on the developer settings and the usb debugging
[16:05:44] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[16:05:48] <haarg> that doesn't help anything
[16:05:54] <daemon> wonder how difficult it would be to locate though
[16:05:59] <daemon> I would expect such a thing to be encrypted
[16:06:04] <simcop2387> haarg: so you've tried adb backup then?
[16:06:07] <haarg> yes
[16:06:21] <haarg> steam doesn't allow access to that key via a backup
[16:06:55] <simcop2387> i get it in my adb backups, that's how i did it from my non-rooted tablet
[16:07:03] <daemon> is there nothing you can boot into like TWMP that does not wipe the device but allows a copy before the OS is even loaded
[16:07:18] *** Joins: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b)
[16:07:20] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[16:07:24] <simcop2387> daemon: you have to unlock the bootloader to do that
[16:07:48] <daemon> you can't do anything from the hard boot menu power+volume normally?
[16:09:00] <daemon> the only reason I am curious is that somehow at some point I had to connect a phone into some fake rs-232 type interface to put things on it, think it was an old sony or E71
[16:09:09] <daemon> I assumed you could do such a thing with modern phones
[16:09:09] <simcop2387> here's another way that might work, haarg https://medium.com/@BoberMod/extract-steam-authenticator-mafile-from-non-root-android-device-any-version-3177e4158e15
[16:09:10] <Paperbot> Link title(s): [ Extract Steam Authenticator .maFile from non-root Android device (any version) | by BoberMod | Me... ]
[16:09:51] <simcop2387> looks like it's basically installing another app on top of steam to replace it but keep the cache directory (where the key is)
[16:12:02] <daemon> kind of cool attack vector
[16:12:16] <simcop2387> yea not one i really thought about but it is neat
[16:12:30] <simcop2387> i mostly put the key into keepassxc so that it's backed up properly
[16:13:06] <haarg> i don't really care about backing it up, i just don't want to have to get my phone to log into steam
[16:13:08] <daemon> I do not do anything with mine ... should I
[16:13:14] <daemon> I assume if you lose your phone steam is a nightmare to get back?
[16:13:36] <haarg> not really
[16:13:56] <daemon> oh I see you want to write 'steam-auth.pl' :)
[16:14:09] <simcop2387> daemon: you may have to give steam a copy of your id to get it back, depending on how much they decide to trust you during customer support
[16:14:37] <daemon> hmmm I wonder if they provide backup emergency codes like google
[16:14:39] <daemon> I should check that out
[16:14:46] <haarg> i've deactivated steam authenticator with just my email and being already logged in i think
[16:14:52] <daemon> that being said ... both my phones are authed to steam at the moment perfectly happy
[16:15:05] <daemon> as I have ... 5 phones on premesis I should probably set one up with google/microsoft and steam auth
[16:15:10] <daemon> throw it in a corner left on as a backuyp
[16:15:14] <haarg> never had to contact support, but i don't remember the exact process
[16:15:29] <simcop2387> haarg: yea it's the not being logged in and needing it and not having it that gets more complicated
[16:15:57] <daemon> you can entirely disable it
[16:16:11] <simcop2387> as long as you aren't selling stuff on the marketplace anyway
[16:16:13] <daemon> I have done that before, I do not recall why but it was not to difficult
[16:16:30] <haarg> i would just leave it off if they didn't force you to use it for some things
[16:16:50] <simcop2387> same here, my password is already 33 characters
[16:17:23] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:21:18] <daemon> nah when you disable it entirely they do disable it entirely
[16:21:39] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[16:22:12] * GumbyPAN CPAN Upload: PGObject-Util-DBAdmin-1.5.0 by EHUELS https://metacpan.org/release/EHUELS/PGObject-Util-DBAdmin-1.5.0
[16:22:47] <haarg> they disable it entirely. and they disable some other features as well.
[16:22:58] <haarg> like the marketplace
[16:23:13] <daemon> ah I never really used that, I thought it was just for stickers and stuff
[16:24:43] *** Joins: proller (~p@2a02:6b8:0:40c:a533:3735:2c43:5ecd)
[16:28:08] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:28:49] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[16:29:16] *** Joins: mattil (~mattil@airio.portalify.com)
[16:29:17] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[16:35:17] <ircuser> eval: my $isvalid = 1; return $isvalid ? $isvalid : $isvalid;
[16:35:20] <perlbot> ircuser: 1
[16:35:22] <ircuser> :-o
[16:35:38] <daemon> that is correct
[16:35:52] <daemon> then again it also would be
[16:36:02] <daemon> eval: 1 ? 2 : 3
[16:36:03] <perlbot> daemon: 2
[16:36:07] <daemon> eval: 0 ? 2 : 3
[16:36:08] <perlbot> daemon: 3
[16:36:48] <ircuser> I improved on this silly meme: i.redd.it/651pzyex0ap71.jpg
[16:36:58] <ircuser> optimized it
[16:37:03] <daemon> :)
[16:37:54] <ircuser> so I got a new jerb recently and I am supposed to use win10 laptop with putty for all linux needs
[16:38:05] <ircuser> anyone got any tips for writing perl over putty?
[16:38:19] <daemon> putty the windows TTY emulator?
[16:38:24] <haarg> have you tried crying?
[16:38:34] <ircuser> not yet
[16:38:38] <jdv> find a better jerb
[16:38:47] <daemon> it works perfectly well with a few tweaks
[16:38:50] <ircuser> I just got this one, cmon
[16:38:57] <haarg> do you actually have to use putty?
[16:39:01] <haarg> windows has ssh now
[16:39:08] <daemon> you can even integrate pagent(puttsy tty system) with ssh
[16:39:09] <ircuser> I am no admin on this machine
[16:39:12] <daemon> so you can use git like you was on linux
[16:39:23] <daemon> and no need for admin rights for that
[16:39:24] <ircuser> which button do I press to open windows terminal
[16:39:36] <jdv> but, i did that for 7 years - its fine
[16:39:37] <daemon> windows+r 'cmd' or 'powershell'
[16:39:56] <daemon> or is it just 'ps' for powershell
[16:39:59] <jdv> i guess it was win8 at the time - no idea - i try to keep anything m$ at arm's length
[16:40:07] <daemon> eh w/e just get vscode and the git plugin and the perl plugins
[16:40:09] <ircuser> powershell is the what now? it has no vim in there
[16:40:40] <ircuser> it has ssh :-o
[16:40:53] <ircuser> OpenSSH at that
[16:43:02] <ircuser> the powershell's backgroudn colors messes with vim syntax highlighting
[16:43:22] <daemon> ircuser, https://i.imgur.com/ShgaEpn.png
[16:43:28] <daemon> vscode+git+perl plugins
[16:43:32] <ircuser> exiting vim causes prompt to not new line
[16:43:34] <ircuser> literally unsable
[16:44:02] <shaldannon> https://beebom.com/how-change-powershell-color-scheme-windows-10/
[16:44:03] <Paperbot> Link title(s): [ How to Change PowerShell Color Scheme on Windows 10 | Beebom ]
[16:44:49] <ircuser> so I need to get vscode it seems
[16:44:49] <haarg> "windows terminal" is an actual multi-tabbed terminal for windows released by microsoft
[16:44:55] <daemon> ircuser, and that is without WSL
[16:45:07] <daemon> with WSL you can run it in native linux*
[16:45:17] <daemon> though you need admin rights to enable WSL
[16:45:25] <daemon> WSL2*
[16:46:08] <daemon> what you could do is setup a userland socks5 proxy and then chain proxy a linux box through the windows box :D
[16:46:23] <ircuser> I will pull the plug on myself if I have to hear windows beep for every tab item I press
[16:46:43] <daemon> you can disable that in putty settings
[16:46:56] <daemon> Terminal->Beep
[16:47:33] <daemon> beware its configured per profile, so you will want to edit the 'default' one and then save to default, and then change it on any others you have in the same method
[16:48:46] <ircuser> there, no more beeping at least on my test server
[16:49:17] <ircuser> what is the name of that windows app store where I can get vscode
[16:49:49] <shaldannon> I hope this new job of yours is worth the pain you're currently going through
[16:50:19] <daemon> ircuser, https://i.imgur.com/s5gBhru.png
[16:50:35] <daemon> ircuser, microsoft store
[16:50:41] <daemon> though you can just type vscode in google and download it there
[16:51:58] <ircuser> yea, the penny is indeed pretty, I wouldnt be sitting here
[16:52:30] <ircuser> oh, well, thanks, now all sessions wont beep
[16:52:47] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[16:53:34] <daemon> ircuser, as I said you have to do that per saved profile
[16:53:43] <daemon> on mine you can see 'Opus EXT'
[16:53:46] <daemon> I would have to do that same for that
[16:53:52] <daemon> but any new ones I created would be inherited from default
[16:53:58] *** Quits: tobybl (~tobybl@31.111.35.255) (Ping timeout: 265 seconds)
[16:55:03] <daemon> also it won't effect the any you have open, to do that you can right click on the title bar and click 'change settings'
[16:55:55] <ircuser> advanced stuff right there
[16:56:10] <daemon> I would suggest in the window->appearance tab enabling a decent font and an appropriate setting, cleartype etc
[16:56:20] <daemon> eh its not advanced its just puttys way of doing things is a bit weird
[17:00:39] <zgu> doesn't windows have a built in openssh package now? and a semi-decent terminal you can install?
[17:01:37] <ircuser> it does, openssh is there
[17:01:38] <Altreus> p sure that's poweshell
[17:01:41] <Altreus> powershell
[17:01:50] <zgu> p-p-p-powershell
[17:01:51] <ircuser> powershell is not decent by any measures, must be some other
[17:02:13] <Altreus> it's decent if measured against cmd
[17:02:50] <ircuser> holly smokes the cmd.exe can be resized
[17:02:54] <ircuser> after all these years
[17:06:49] *** Quits: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc) (Ping timeout: 252 seconds)
[17:07:13] *** Joins: Darkcoal (~user@51.158.144.31)
[17:07:29] <daemon> you can get classical cmd if you preffer
[17:07:57] <daemon> infact you can even get the really-classic command, the one you could not resize at all
[17:08:18] *** Parts: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (ERC (IRC client for Emacs 27.2))
[17:11:19] *** Quits: Darkcoal (~user@51.158.144.31) (Read error: Connection reset by peer)
[17:11:43] *** Joins: ritsch_master (~user@77.119.204.17.wireless.dyn.drei.com)
[17:11:53] <zgu> there's a Windows Terminal or something now
[17:12:24] <haarg> https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701
[17:12:26] <Paperbot> Link title(s): [ Get Windows Terminal - Microsoft Store ]
[17:12:43] <zgu> with multiple tabs and some of the other bells and whistles that every other terminal emulator had by 2005
[17:13:16] <zgu> hmm, ASCII has a BEL character, but did they add a WHISTLE anywhere in unicode?
[17:15:52] *** Quits: aspic (~shifty~~~@ppp121-44-106-22.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[17:17:25] *** Joins: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc)
[17:22:20] <Altreus> I found 㖅
[17:22:38] *** Joins: choroba (~E.Choroba@88.146.255.106)
[17:22:48] <Altreus> Last time I tried to install "Windows Terminal" it just told me I already had it but it was called powershell
[17:23:08] <daemon> n ASCII and Unicode the character with the value 7 is BEL. It can be referred to as control-G or ^G in caret notation. Unicode also includes a character for the visual representation of the bell code, "symbol for bell" (␇) at U+2407, not to mention U+237E (⍾).
[17:23:35] *** Quits: Darkcoal (~user@2001:16a2:777f:9b00:1331:29ab:2fd7:aedc) (Ping timeout: 250 seconds)
[17:23:38] <Altreus> that's a space invader
[17:23:46] <Altreus> perlbot: utf8 ⍾
[17:23:47] <perlbot> Altreus: U+237E (e2 8d be): BELL SYMBOL [⍾] 
[17:23:51] <daemon> not tom ention ASCII is a subset of unicode anyway
[17:23:57] <daemon> so it automatically inherits BEL
[17:24:04] <Altreus> yeah but they asked about WHISTLE
[17:24:44] <daemon> oh same as you https://unicode-explorer.com/c/846D
[17:24:45] <Paperbot> Link title(s): [ 葭 U+846D bulrush, reed; flute, whistle | CJK Ideograph - Unicode Explorer ]
[17:25:40] *** Joins: Darkcoal (~user@139.64.17.159)
[17:25:56] <Altreus> that was the other one
[17:25:58] <Altreus> :)
[17:26:06] <Altreus> I got "Sound of a whistle"
[17:26:15] <Altreus> perlbot: utf8 㖅
[17:26:15] <perlbot> Altreus: U+3585 (e3 96 85): CJK UNIFIED IDEOGRAPH-3585 [㖅] 
[17:26:24] <Altreus> nice names they get, eh?
[17:26:32] <Altreus> like mathematicians numbering jokes
[17:27:12] <daemon> oh god I will have to 'read' some chinese on monday, 'read' here meaning looking it up in the guide and matching it to the appropriate english word
[17:27:33] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:27:49] <daemon> I am really terrible with languages
[17:29:02] <Altreus> can't you just use google translate
[17:29:07] <daemon> not from a phone screen
[17:29:19] <daemon> unless I can take picture with my other phone and send that to translate somehow
[17:29:40] <Altreus> it literally has camera mode where it translates words you point at
[17:29:50] <daemon> oooh ok I will do that
[17:30:04] <Altreus> never tried with chinese though
[17:30:25] <daemon> it should be fine with this its only single words
[17:30:41] <daemon> though they are technical things like wipe cache
[17:30:42] <daemon> etc
[17:30:48] <daemon> which might be a problem
[17:31:15] <daemon> I done it once anyhow it should not be so bad
[17:44:21] *** Quits: jplesnik (~jplesnik@83.240.62.176) (Quit: Leaving)
[17:45:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:49:55] *** Quits: ircuser (~ircuser@89.111.36.243) (Quit: leaving)
[18:01:22] * GumbyPAN CPAN Upload: Photonic-0.019 by WLMB https://metacpan.org/release/WLMB/Photonic-0.019
[18:05:27] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[18:07:14] *** Joins: jaytee80 (~jaytee80@47.190.14.171)
[18:10:35] *** Joins: lllh (~llh@198.48.244.21)
[18:11:24] * GumbyPAN CPAN Upload: Bio-MUST-Core-0.212670 by DBAURAIN https://metacpan.org/release/DBAURAIN/Bio-MUST-Core-0.212670
[18:12:10] *** Quits: llh (~llh@user/llh) (Ping timeout: 260 seconds)
[18:22:41] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:22:55] *** Joins: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net)
[18:24:52] *** Quits: Darkcoal (~user@139.64.17.159) (Ping timeout: 252 seconds)
[18:26:19] *** tbcr_ is now known as tbcr
[18:26:25] * GumbyPAN CPAN Upload: App-DBBrowser-2.282 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.282
[18:26:38] *** Quits: tbcr (~tbcr@75.183.195.9) (Changing host)
[18:26:38] *** Joins: tbcr (~tbcr@user/tbcr)
[18:26:59] *** Joins: Darkcoal (~user@51.15.9.205)
[18:27:09] <jaytee80> So eval( { require $libname } ), doesn't do the same as what I need, which is eval( "use $libname" ). 
[18:27:18] *** Quits: proller (~p@2a02:6b8:0:40c:a533:3735:2c43:5ecd) (Remote host closed the connection)
[18:27:29] *** Joins: gast0n (~g4570n@user/gast0n)
[18:28:17] <jaytee80> The first one says "Can't locate $libname", the second one works... why wouldn't it find the lib in the first instance?
[18:29:18] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[18:29:26] *** Joins: proller (~p@2a02:6b8:0:40c:44dd:f49d:5bb4:9994)
[18:29:29] <jaytee80> Second one works with eval( "require $libname" ). But why does using the subref version prevent it from finding a library?
[18:29:35] <haarg> require accepts a file name
[18:29:52] <haarg> require "Foo/Bar.pm" rather than require "Foo::Bar"
[18:30:19] <jaytee80> But the second version works with $libname being Foo::Bar, it's just in string eval.
[18:30:21] <haarg> it only works with a module name in bareword form: require Foo::Bar
[18:30:44] <jaytee80> Ok, now that makes sense. 
[18:30:51] <jaytee80> but whhhhyyyyy that sucks.
[18:31:01] <daemon> you can convert an IPv4 to an int, can you also convert an IPv6, if so how
[18:31:15] <haarg> also require and use are different. use can't accept a variable at all, it only works with bareword form
[18:31:17] <Altreus> if only someone had written a module like Module::Runtime
[18:32:02] <haarg> there are tons of modules that implement this, including Module::Runtime
[18:32:10] <haarg> most of them are terrible
[18:32:45] <daemon> eval: use Net::IP; my $ip = new Net::IP('2a00:23c7:551f:f800:e427:3cd0:8f:99c9'); $ip->intip();
[18:32:46] <perlbot> daemon: ERROR: Can't locate Net/IP.pm in @INC (you may need to install the Net::IP module) (@INC contains: $BLEAD/lib/site_perl/5.35.3/x86_64-linux $BLEAD/lib/site_perl/5.35.3 $BLEAD/lib/5.35.3/x86_64-linux $BLEAD/lib/5.35.3) at (IRC) line 1. BEGIN failed--compilation aborted at (IRC) line 1. 
[18:32:52] <daemon> simcop2387, module request :D
[18:33:21] <simcop2387> huh thought that was there already
[18:33:26] <haarg> Module::Runtime is only a bit shit, rather than being terrible
[18:33:29] <simcop2387> will add it after work
[18:33:33] <daemon> cheers
[18:33:40] *** Quits: genio (sid223130@id-223130.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[18:33:47] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 245 seconds)
[18:33:50] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 246 seconds)
[18:33:54] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:34:01] <daemon> ooh it did it
[18:34:03] <daemon> 55828301500051808507578227647650437577 apparently
[18:34:06] *** Joins: japh (~scp1@host-78-78-207-134.mobileonline.telia.com)
[18:34:07] <daemon> that is a long long int
[18:34:07] *** Quits: japh (~scp1@host-78-78-207-134.mobileonline.telia.com) (Changing host)
[18:34:07] *** Joins: japh (~scp1@user/japh)
[18:34:18] <Altreus> or is it a long long long
[18:34:18] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[18:34:28] <Altreus> or maybe a la lu la lu long
[18:34:29] *** Joins: genio (sid223130@id-223130.ilkley.irccloud.com)
[18:34:31] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:34:37] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[18:35:04] <daemon> well
[18:35:06] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[18:35:08] <daemon> an ipv6 is meant to be 128bit
[18:35:19] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[18:35:22] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[18:35:32] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[18:35:45] *** Joins: thrig (~thrig@65.113.153.50)
[18:36:12] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:36:26] * GumbyPAN CPAN Upload: DBIx-SearchBuilder-1.70 by BPS https://metacpan.org/release/BPS/DBIx-SearchBuilder-1.70
[18:38:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[18:39:38] <tirnanog> daemon: is a 128-bit string what you want then?
[18:40:15] <daemon> lol
[18:40:22] <tirnanog> binary string, I mean
[18:40:26] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[18:43:59] <jaytee80> Module::Runtime seems to work. Most importantly it was already installed so mucho less work.
[18:44:21] <thrig> mucho less trabajo, get it right
[18:44:36] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[18:45:03] <jaytee80> I mean that's only 2/3 right
[18:45:22] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[18:45:43] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[18:45:56] <jaytee80> mucho menos trabajo 
[18:48:21] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[18:48:31] *** Quits: Lynx_ (~x@fuchshai.geomar.de) (Ping timeout: 265 seconds)
[18:51:18] <tirnanog> sweval: use Math::BigInt; use Socket qw(AF_INET6 inet_pton); my $packed = inet_pton(AF_INET6, '2a00:23c7:551f:f800:e427:3cd0:8f:99c9'); [ Math::BigInt->from_bytes($packed)->bstr ]
[18:51:19] <perlbot> tirnanog: ["55828301500051808507578227647650437577"]
[18:51:35] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:53:17] *** Joins: celphi (sid97751@user/celphi)
[18:54:54] <Altreus> isn't that the new emergency services phone number?
[18:55:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[18:58:14] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[19:03:11] <genio> nah. it's the remix to 867-5309/Jenny
[19:03:14] <thrig> that one needs a different tune
[19:03:40] <SKYDAD> can someone tell me how to connect a perl bot to more then one server @ a time
[19:05:58] <genio> SKYDAD: that's a bit vague. What "perl bot" are we talking about?
[19:06:27] <thrig> perlbot: botsnack
[19:06:27] <perlbot> thrig: I'm not your prank monkey
[19:07:35] <SKYDAD> idlerpg perl bot
[19:07:40] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[19:09:16] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:12:02] <daemon> +7eval: (8*4)
[19:12:06] <daemon> eval: (8*4)+7
[19:12:08] <perlbot> daemon: 39
[19:14:14] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[19:14:45] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:15:36] <gordonfish> Who saw your hostname and ip on the wall....
[19:15:46] <thrig> creepy!
[19:20:08] <gordonfish> 8.67.53.09 return NXDOMAIN, someone needs to get a PTR for this
[19:20:52] <genio> SKYDAD: No idea. Never heard of it or used it. what do the docs say?
[19:21:01] <gordonfish> And/or 86.75.3.09 too
[19:21:36] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[19:22:18] <gordonfish> (jenny.jenny is also unregistered.)
[19:23:37] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[19:24:58] <Altreus> Jenny I've got your number / 55828301500051808507578227647650437577
[19:25:03] <Altreus> doesn't have the same ring to it
[19:25:17] <thrig> hence need for a different tune...
[19:25:22] <gordonfish> Maybe it'll sounds better in hex?
[19:25:39] <Altreus> It's the Nightwish cover
[19:32:33] <gordonfish> 00001000 00000110 00000111 - 00000101 00000011 00000000 00001001 would also be a bit much to sing
[19:33:36] <daemon> oh-oh-oh-oh-one-oh-oh-oh ...
[19:33:45] <daemon> could be a Christmas carol
[19:34:09] <gordonfish> 000 000 00 11 0
[19:36:30] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:37:04] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[19:39:38] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[19:41:46] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 260 seconds)
[19:42:01] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[19:42:48] *** Joins: Tempesta (~Tempesta@user/tempesta)
[19:43:10] <gordonfish> It's still singable in octal: 10 6 7 - 5 3 0 11
[19:43:16] <aquanight> gordonfish: objection: it would be 00111000 00110110 00110111 00101101 00110101 00110011 00110000 00111001
[19:43:29] <SKYDAD> lol
[19:44:42] <rindolf> gordonfish: heh
[19:45:11] *** Quits: ritsch_master (~user@77.119.204.17.wireless.dyn.drei.com) (Remote host closed the connection)
[19:46:05] <shaldannon> somehow, I see numbers and "singable" and thing 867-5309
[19:46:20] <shaldannon> yeah, late to the party
[19:46:26] <gordonfish> aquanight: String wise, yeah
[19:46:33] * GumbyPAN CPAN Upload: Mojo-Leds-1.11 by EBRUNI https://metacpan.org/release/EBRUNI/Mojo-Leds-1.11
[19:46:38] <aquanight> gordonfish: exactly
[19:46:43] <aquanight> what else would it be?
[19:47:18] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:47:23] <aquanight> I mean if you want I could go track down how to encode the digits in DTMF/PCM or something
[19:48:18] <gordonfish> aquanight: Numbers?
[19:48:28] <gordonfish> (Like I did)
[19:48:49] <gordonfish> I just wrote each digit as binary
[19:48:54] <thrig> 00111000 and such could be fed to Music::RhythmSet but they don't look very good for that
[19:49:59] <aquanight> gordonfish: right, mine was the same just using ASCII digits since phone numbers aren't "numbers" in a proper sense
[19:50:14] <rindolf> heh - https://www.facebook.com/groups/it.humor.and.memes/posts/6791203810905345/
[19:50:14] <Paperbot> Link title(s): [ IT Humor and Memes ]
[19:52:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:52:47] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[19:52:50] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:52:58] <gordonfish> aquanight: Good point
[19:53:06] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[19:57:46] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[19:58:32] *** Parts: art1 (~romeyke@p200300ccdf06d00037405456f0fa164d.dip0.t-ipconnect.de) ()
[19:59:02] *** Quits: proller (~p@2a02:6b8:0:40c:44dd:f49d:5bb4:9994) (Ping timeout: 260 seconds)
[19:59:02] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Ping timeout: 252 seconds)
[19:59:13] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[19:59:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:59:41] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Client Quit)
[20:03:08] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[20:04:06] <jaytee80> $str = "ffffff", what unpack recipe will do the same as eval( "0x$str" )
[20:05:06] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 260 seconds)
[20:06:07] *** Quits: Pny (pny1312@user/pny) (Ping timeout: 252 seconds)
[20:06:14] *** Quits: PonyWhisper (ponyblocks@user/ponyblocks) (Ping timeout: 246 seconds)
[20:08:26] *** Joins: proller (~p@2a02:6b8:0:40c:6e95:dcd1:193d:336e)
[20:09:04] <LeoNerd> Oh something with H in it probably
[20:09:14] <LeoNerd> The pack/unpack "H" formats are weeeird
[20:09:21] <jaytee80> hex $str seems to do what I want
[20:09:36] <LeoNerd> That's usually much better, yes
[20:10:24] <Altreus> eval "0x$str" can also be spelled oct, I think
[20:10:31] <Altreus> eval: oct "0xffff"
[20:10:33] <perlbot> Altreus: 65535
[20:10:57] <Altreus> oct, as you can tell by the name, does "how Perl parses a numerical literal"
[20:11:13] <thrig> eval: hex ffffff
[20:11:14] <perlbot> thrig: 16777215
[20:11:15] <jaytee80> octal literal. This is hexidecimal
[20:11:21] <Altreus> jaytee80: no
[20:11:22] <zgu> it's clearly meant to make hex decoding easier
[20:11:31] <alh> eval: print `dc -e '16i FFFFp'`
[20:11:32] <Altreus> jaytee80: it does whatever perl would do if it encountered that
[20:11:32] <perlbot> alh: 65535 
[20:11:37] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[20:11:37] <rindolf> r-oct-ober ;)
[20:11:42] <Altreus> eval: oct "0b1111"
[20:11:43] <perlbot> Altreus: 15
[20:11:53] <Altreus> jaytee80: you may now ask why
[20:12:02] <jaytee80> eval: oct 'ffffff'
[20:12:04] <perlbot> jaytee80: 0
[20:12:11] <jaytee80> eval: hex 'ffffff'
[20:12:12] <zgu> eval: oct '777'
[20:12:13] <perlbot> jaytee80: 16777215
[20:12:14] <perlbot> zgu: 511
[20:12:16] <LeoNerd> You -can- unpack it using unpack "H*"  but then you'll have a new problem:
[20:12:22] <zgu> eval: oct '0777'
[20:12:23] <perlbot> zgu: 511
[20:12:24] <LeoNerd> eval: [ unpack "H*", "ffffff" ]
[20:12:25] <perlbot> LeoNerd: ["666666666666"]
[20:12:28] <Altreus> 'ffffff' is not octal, but oct understands '0xffffff'
[20:12:30] <LeoNerd> Er.. .pack
[20:12:32] <LeoNerd> eval: [ pack "H*", "ffffff" ]
[20:12:33] <perlbot> LeoNerd: ["\377\377\377"]
[20:12:46] <zgu> eval: oct '7700'
[20:12:47] <perlbot> zgu: 4032
[20:12:51] * zgu hijacks perlbot's plane
[20:12:58] <Altreus> eval: oct '0x7700'
[20:13:00] <perlbot> Altreus: 30464
[20:13:02] <zgu> err. no that's 7500
[20:13:03] <Altreus> bahahaha
[20:13:08] <LeoNerd> See, having done that if you want it as an integer you'll have to then unpack it with one of the number formats, but since it's only 3 bytes long it will need some zero-padding, but then the zero-padding length would depend on how long the string is.. and basically it's all a mess
[20:13:15] <LeoNerd> So,... hex() or oct() are much better
[20:13:45] <thrig> snakes on a perlbot plane?
[20:14:06] <Altreus> hex is best here of course
[20:14:13] <Altreus> but I don't think there's a bin
[20:14:20] <Altreus> although there is a module for arbitrary base
[20:14:31] <LeoNerd> eval: hex "0b100011110101"
[20:14:32] <perlbot> LeoNerd: 3113817216188673
[20:14:41] <LeoNerd> uhhmmm... no perl
[20:14:45] <LeoNerd> eval: oct "0b100011110101"
[20:14:46] <perlbot> LeoNerd: 2293
[20:14:49] <LeoNerd> That's better
[20:15:01] <LeoNerd> Also, hex() is terribly named. It should be unhex()
[20:15:15] <LeoNerd> hex() implies it turns something into hex; a shortcut for  sprintf "%x"
[20:16:09] <Altreus> 0b100011110101 is definitely a hexadecimal number
[20:16:30] <Altreus> maybe that's why they put the 0b behaviour in oct!
[20:17:03] <thrig> 0z... Zalgo numbers when
[20:17:45] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[20:17:56] <jaytee80> It's named that because it's mean to be read as "this literal I'm putting in here is meant to be a hex number"
[20:18:18] <Altreus> yeah but you still can't explain oct
[20:18:21] <Altreus> nor can I
[20:18:44] <jaytee80> 0xffffff is frowned upon by some jerks, so they want hex( 'ffffff' ) instead. Its more cLeArEr
[20:19:01] <Altreus> 0xffffff is a literal, 'ffffff' is the number
[20:19:10] <Altreus> it's not more clearer, it's a different thing
[20:19:17] <Altreus> er no wait
[20:19:19] <Altreus> do you mean
[20:19:30] <Altreus> people want you to *put* hex('ffffff') instead of the literal?
[20:19:49] <Altreus> if so, please put oct('0xffffff') until they fuck off
[20:19:49] <jaytee80> yes, that's exactly what PBP wants
[20:19:54] <Altreus> PBP can fuck off
[20:19:57] <Altreus> why are you using that
[20:20:01] <Altreus> perlbot: pbp
[20:20:01] <perlbot> Altreus: Perl Best Practices by Damian. http://www.oreilly.com/catalog/perlbp/   # But keep in mind, it is only 'a' way, not 'the' way. | See Perl::Critic::Community for our perlcritic recommendations.
[20:20:11] <Altreus> I was expecting that to be far more rude
[20:20:26] <Altreus> PBP is about 50% relevant, at a guess
[20:21:43] *** Joins: R2robot (~R2robot@user/r2robot)
[20:21:59] <LeoNerd> Perl "Best according to some guy in the 1990s who wanted to sell Perl books and hasn't been relevant for at least 10 years now" Practices
[20:22:16] <jaytee80> I'm running percritic on a 300k line codebase ATM, and it mostly  doesn't like just 3 things I've done: 1. return undef 2. eval()ing strings (mostly used by me to speculatively load modules in a way that rpm-find-deps won't do something stupid),  and 3. package vars in open. 
[20:22:23] <Altreus> Damian is no longer relevant?
[20:22:38] <LeoNerd> He's mostly Raku these days
[20:23:02] <Altreus> 3. as in open our $filename?
[20:23:08] <Altreus> filename ... filehandle I mean
[20:23:13] <Altreus> or like open FILEHANDLE
[20:23:15] <jaytee80> as in open LOG
[20:23:21] <Altreus> ok yeah good critic
[20:23:24] <LeoNerd> Oh bareword handles. Yeah don't do that
[20:23:41] <Altreus> are they package or are they actually global
[20:23:43] <zgu> yeah always use lexical filehandles
[20:23:55] <jaytee80> So 2 of those 3 are arguably good things and they third I'll just do anyways.
[20:24:34] <Altreus> I have recently intentionally used return undef
[20:24:37] <Grinnz> note that return undef is correct, bare return is objectively wrong
[20:24:45] <jaytee80> It's #1 that really doesn't matter for me. return undef is only bad if it's called in a list context. I forbid returning list context in my codebase so...
[20:25:12] <Altreus> Grinnz: do you mean that return (); is explicit that you're intentionally returning according to the caller's context?
[20:25:27] <Grinnz> no, it just shows the intent
[20:25:29] <Altreus> jaytee80: return undef is good BECAUSE it might be called from a list context
[20:25:30] <zgu> ran across some old perl code at work in the build system for a third party library that's full of 2-arg opens with global/bareword handles and & subroutine calls
[20:25:43] <Grinnz> bare return in list context results in bugs
[20:25:55] <Altreus> yes, I've caused them myself
[20:25:55] <Grinnz> because accidental list context is extremely common
[20:26:00] <Altreus> normally in hashes
[20:26:08] <alh> I usually have the reverse problem 
[20:26:15] <alh> return undef; fills values into a list in list context when I don't want them
[20:26:30] <Grinnz> if it's a list-returning function, you would return an empty list instead, yes
[20:26:38] <Altreus> right, which is why return () is fine because it shows intent
[20:26:43] <Altreus> (which is what I meant but I used more words)
[20:26:45] <LeoNerd> I still need to think about  :scalar  and  :list  as function attrs
[20:27:01] <LeoNerd> sub x :scalar { ... }    my @list = x();   # would maybe warn?
[20:27:15] <LeoNerd> sub y :list { ... }    my $s = y();   # would definitely warn
[20:27:17] <jaytee80> if( @stuff = sub_that_fails() )... this evals to true if return undef is used, but does what you want if return; is used.
[20:27:17] <Altreus> nah, that seems like the point of a list
[20:27:36] <Grinnz> jaytee80: yes, that is a list-returning sub
[20:27:40] <Altreus> jaytee80: but my %hash = ( key => sub_that_returns_nothing )
[20:27:50] <Altreus> now you have a bug
[20:27:56] <Grinnz> anyway see the docs for the policy i wrote for this reason
[20:28:12] <Altreus> jaytee80: especially if it's my %hash = ( key => sub_that_returns_nothing, key2 => sub_that_returns_nothing )
[20:28:13] <jaytee80> Altreus, you should have been checking defined( $hash{key} ) then.
[20:28:21] <Altreus> jaytee80: now you have key => key2
[20:28:22] <Grinnz> that does not help
[20:28:26] *** Quits: gggpkm (~gggpkm@111-251-149-92.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[20:28:37] <Altreus> but it is defined, because you didn't return undef
[20:28:43] <Altreus> you returned zero items
[20:28:53] <Altreus> you get a warning if you're lucky, and a bug if you're not
[20:28:57] <Grinnz> https://metacpan.org/pod/Perl::Critic::Policy::Community::EmptyReturn
[20:28:57] <Paperbot> Link title(s): [ Perl::Critic::Policy::Community::EmptyReturn - Don't use return with no arguments - metacpan.org ]
[20:28:59] <alh> Interesting. I'm in the return; 99% of the time, and return undef is only used when intentionally needed
[20:29:18] <Altreus> sweval: sub return_nothing { return } +{ key1 => return_nothing }
[20:29:19] <Grinnz> alh: then you get a bug whenever a scalar-returning function is used in list context
[20:29:20] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[20:29:20] <perlbot> Altreus: Odd number of elements in anonymous hash at (IRC) line 1. {key1 => undef}
[20:29:28] <Altreus> sweval: sub return_nothing { return } +{ key1 => return_nothing, key2 => return_nothing }
[20:29:29] <alh> Yeah I don't do that
[20:29:29] <perlbot> Altreus: {key1 => "key2"}
[20:29:33] <Grinnz> are you sure?
[20:29:35] <Altreus> jaytee80: please observe these two evals
[20:29:45] <alh> I've had more bugs where 'return undef;' screwed me over than the reverse
[20:29:46] <alh> ¯\_(ツ)_/¯
[20:30:02] <Altreus> alh: what if you accidentaly change the function so it no longer returns undef where once it used to?
[20:30:10] <Grinnz> hash construction and function arguments are list context
[20:30:18] <Grinnz> are you sure you never call functions in those?
[20:30:32] <alh> Usually yes. I also write a lot of tests.
[20:30:45] <Altreus> LeoNerd: my $s = () = y()  # does this protect you from :list?
[20:30:46] <alh> I understand what you're saying but return; vs return undef; can both cause bugs depending on how they are used
[20:30:47] <Grinnz> it's easier just to not have the problem
[20:31:00] <Grinnz> return undef causes zero problems in a scalar-returning function
[20:31:13] <alh> I've had it cause bugs. *shrug*
[20:31:13] <Altreus> alh: but Grinnz is saying that return () is preferable so you know it's explicitly empty-in-list-context
[20:31:19] <Grinnz> it is not possible for it to cause bugs
[20:31:21] <Altreus> rather than oops-i-forgot
[20:31:31] <alh> Well, you're wrong, because it has in code I've used.
[20:31:34] <jaytee80> In my usages, I have zero problems, but I'm still migrating to return because some other fool could call in list context.
[20:31:41] <LeoNerd> Altreus: sure, it allows you to circumvent it. The point of the attr is for accidental cases
[20:31:44] <Grinnz> i am not wrong, you are missing some part of what i'm saying
[20:31:53] <alh> Sounds very much like a preference thing
[20:31:58] <jaytee80> I never return arrays. Ever. If I need to I return an arrayref, and then check the ref for undef before using it.
[20:32:01] <Grinnz> it is impossible for return undef to be incorrect in a scalar-returning function
[20:32:11] <alh> Sure.
[20:32:13] <Grinnz> yes, i prefer not having bugs
[20:32:13] <LeoNerd> Also, the point of  :scalar  would be to make a bare 'return' mean 'return undef'
[20:32:32] <Altreus> LeoNerd: I think this is perfectly legitimate to put into an array though
[20:32:35] <LeoNerd> Usually, when you define a function, you have in mind if it should be void/scalar/listy, so... that's the time when you should annotate this
[20:32:35] <Altreus> not a warning situation
[20:32:42] <Altreus> oh
[20:32:44] <Grinnz> jaytee80: then you should never need bare return at all
[20:32:45] <LeoNerd> Yeah.. which is why I said "maybe"
[20:32:51] <LeoNerd> You've convinced me it shouldn't warn
[20:32:53] <Altreus> But I suppose you would say my @array = (x())
[20:33:00] <jaytee80> Grinnz: is it possible for return to be incorrect in a scalar returning function?
[20:33:06] <Grinnz> yes
[20:33:12] <LeoNerd> my @arr = (x(), y(), z())  when all three were :scalar functions, is perfectly legitimate
[20:33:16] <Altreus> LeoNerd: I like the idea of both warnings be parensable
[20:33:21] <Grinnz> if it's used in list context, you will return the wrong number of arguments into that list that expected a scalar
[20:33:25] <Altreus> for list, =()=, and for scalar, (x())
[20:35:35] <Altreus> jaytee80: a scalar-returning function is defined as one that /always/ returns a scalar
[20:35:41] <Altreus> jaytee80: bare return does not do that
[20:36:03] <Altreus> in fact it fairly explicitly only returns a scalar if it has to
[20:36:11] <jaytee80> scalar returning fuction requires :scalar? 
[20:36:19] <Altreus> no that's LeoNerd musing on new syntax
[20:36:36] <Altreus> he's a little bit smitten with the possibilities of the next generation of perls :)
[20:36:40] <Grinnz> you would define a function as scalar-returning basd on how it's documented and thus how people would tend to use it
[20:37:07] <Grinnz> any context-sensitivity leads to bugs when people use them in a list
[20:37:22] <Altreus> An example of scalar-returning functions are all the (simple) column accessors on a DBIC result object which I may or may not have intercepted and replaced with bareword return and screwed up a fair few tests
[20:37:26] <Grinnz> bare return is one common way this happens, wantarray is another (but of course harder to do accidentally)
[20:38:08] <Altreus> never seen a good use of wantarray, except for void context checking
[20:38:24] <Altreus> which in e.g. Scope::Guard is quite helpful
[20:39:02] <Grinnz> my only uses of wantarray are when it's required to emulate an interface that already is unfortunate
[20:39:11] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 252 seconds)
[20:39:16] <Grinnz> like context sensitive builtins
[20:39:32] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[20:39:49] <Grinnz> void context sensitivity is also possible to accidentally cause bugs, though it's less common
[20:40:13] <Grinnz> for example if you make it the last statement in a function and then at some point that function gets called in non-void context, oops, everything's broken
[20:40:34] <haarg> void context sensitivity can be acceptable if the conditional thing is a die
[20:40:53] <Altreus> Yeah wantarray for validation is the only way I've seen it used for good
[20:41:05] <Altreus> Wantarray to decide what to return ... is kinda done for you by perl
[20:41:44] <haarg> I've seen void wantarray checks used to decide between returning a new value or modifying their input
[20:41:47] <Altreus> if I wanted a list I'd have used list context. Returning a reference is not helpful
[20:41:55] <haarg> Which is extremely broken
[20:42:07] <Altreus> that sounds like CGI
[20:42:13] <jaytee80> It seems bare return vs return undef is religion.
[20:42:26] <Altreus> "how many interfaces can we support with one sub?"
[20:42:29] <haarg> that behavior was suggested multiple times for the potential core trim function
[20:42:42] <Grinnz> perlbot: wantarray
[20:42:42] <perlbot> Grinnz: http://www.perlmonks.org/?node_id=729965
[20:44:01] <Grinnz> jaytee80: if you consider wanting code to be robust rather than fragile a religion, sure
[20:44:19] <Grinnz> i just consider it "being a professional"
[20:44:37] <Grinnz> and "learning from CVEs"
[20:45:42] <jaytee80> I just changed 115k lines of code to bare return... it seems it avoids other bugs. Either way you get bugs.
[20:47:32] <jaytee80> I theory I could change it back... but I don't see a compelling reason why at this point.
[20:47:59] <Grinnz> you do not get bugs either way. it is based on how you use the function
[20:48:24] <Grinnz> don't change things mindlessly
[20:48:51] <Grinnz> perlbot: wantarray is also https://seclists.org/vulnwatch/2006/q4/6
[20:48:51] <perlbot> Grinnz: Stored wantarray is http://www.perlmonks.org/?node_id=729965 | https://seclists.org/vulnwatch/2006/q4/6
[20:48:51] <Paperbot> Link title(s): [ Vulnwatch: PacSec Hype Security Team: CGI.pm param injection ]
[20:48:54] <simcop2387> going from android 8 to android 11 is unsettling.  everything is different
[20:50:08] <Grinnz> jaytee80: if it was working correctly with return undef, it should stay returning undef
[20:50:28] <Grinnz> if you change a function that does so to bare return you are introducing bugs unnecessarily
[20:50:34] <haarg> bare return is broken unless your function never returns anything
[20:50:59] <haarg> and a function that returns nothing is probably shit
[20:51:21] <jaytee80> It works correctly both ways, as far as my testing goes. But perlcritic complains one way.
[20:51:33] <genio> with which rule set?
[20:51:35] <haarg> it's either an assert, which is fine, or it has global impact, which is awful
[20:52:40] <Grinnz> perlbot: wantarray is also https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-1573
[20:52:41] <perlbot> Grinnz: Stored wantarray is http://www.perlmonks.org/?node_id=729965 | https://seclists.org/vulnwatch/2006/q4/6 | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-1573
[20:52:41] <Paperbot> Link title(s): [ CVE -  CVE-2014-1573 ]
[20:52:50] <Grinnz> jaytee80: perlcritic is wrong, i have explained why
[20:53:06] <Grinnz> and this is exactly the reason i wrote a competing policy
[20:53:16] <jaytee80> Yeah, I just don't understand that yet.
[20:53:35] <Grinnz> feel free to ask for clarification
[20:54:28] <Grinnz> perlbot: wantarray =~ s/CVE-2014-1573/CVE-2014-1572/
[20:54:28] <perlbot> Grinnz: Stored wantarray as http://www.perlmonks.org/?node_id=729965 | https://seclists.org/vulnwatch/2006/q4/6 | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-1572
[20:54:56] <Grinnz> it was the getting admin access CVE that really sucked
[20:56:05] *** Joins: pizdets (~pizdets@183.182.115.95)
[20:56:09] <jaytee80> I've never used wantarray once in my 20 years of perling.
[20:56:21] <Grinnz> bare return is a version of wantarray
[20:56:44] <Grinnz> so is returning a context sensitive builtin, but none of those are common enough to be a gotcha
[20:57:35] <jaytee80> So you have a competing rule for perlcritic to avoid bare return?
[20:58:53] <tirnanog> except where the sub is seen to be used in only a void context. seems reasonable.
[20:59:02] <tirnanog> https://metacpan.org/pod/Perl::Critic::Policy::Community::EmptyReturn
[20:59:02] <Paperbot> Link title(s): [ Perl::Critic::Policy::Community::EmptyReturn - Don't use return with no arguments - metacpan.org ]
[21:04:05] <thrig> never return! always goto &elsewhere!
[21:04:37] <xq> I was surprised to see ProhibitExplicitReturnUndef policy recommended
[21:05:15] <simcop2387> thrig, i prefer comefrom &elsewhere
[21:05:20] <xq> in the blog post that is
[21:06:02] <thrig> or there's aspect oriented programming, if you want some extra wtf (but apparently Java don't need AOP so much no more?)
[21:06:10] <Grinnz> what blog post?
[21:06:19] <xq> https://phoenixtrap.com/2021/09/21/everyones-a-perl-critic/
[21:06:22] <Paperbot> Link title(s): [ Everyone’s a (Perl) critic, and you can be too! - The Phoenix Trap ]
[21:06:42] <Grinnz> oh i missed that one was in the list
[21:07:04] <xq> it's a pretty bad policy in my view
[21:07:42] <Grinnz> it is actively harmful as jaytee80 just demonstrated yes
[21:08:06] <aquanight> gordonfish: just for you I went and wasted the time to do it. (Maybe. I geniunely had no idea what I was doing and hacked this from quick wikipedia reads.)
[21:08:34] <aquanight> hmm
[21:08:36] * aquanight pokes perlbot
[21:08:37] <aquanight> https://l.perl.bot/p/dzergh
[21:08:38] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[21:09:30] <Grinnz> mjgardner: perhaps you could omit the prohibit return undef policy from your list? the rest are good or mediocre
[21:10:10] <xq> mjgardner: I agree with the above request
[21:10:35] <Grinnz> oh that's why i didn't see it, it's not a list of recommendations
[21:10:43] <Grinnz> still unfortunate that it's presented as such
[21:10:56] *** Quits: dehhy^ (~dehhy@12.203.127.82) (Remote host closed the connection)
[21:11:20] <Grinnz> but it's just a list of the core gentle policies
[21:12:19] <Grinnz> god i didn't realize it was enabled that low too
[21:12:47] <aquanight> you know what I'm just going to go right ahead and say it
[21:13:00] <aquanight> maybe we just shouldn't do a => 4, b => func(), c => other
[21:13:04] <aquanight> maybe instead
[21:13:12] <aquanight> a => 4, b => scalar func(), c => other
[21:13:14] <Grinnz> yeah good luck enforcing that
[21:13:17] <aquanight> then func can do whatever the fuck it likes
[21:13:33] <aquanight> Grinnz: simple: perlcritic policy: don't call functions as part of a list without 'scalar' operator
[21:13:34] <Grinnz> in a function you provide to arbitrary cpan users
[21:13:46] <Grinnz> i can control the function, not the users
[21:14:28] <Grinnz> like, you think they could have fixed the bugzilla cve from terrible devs calling param in a list that way?
[21:16:29] <Grinnz> also it's a complex/impossible perlcritic policy
[21:16:47] <aquanight> I just get annoyed at this "one person used something a certain way, then some other people were idiots, so now the entire feature is bad" thing that seems to happen all the time.
[21:17:05] <Grinnz> because you can't statically detect context, and it would prevent the use of any functions that return a list
[21:17:17] <Grinnz> yeah well welcome to humans
[21:17:31] <aquanight> yeah well I'm sick and tired of humans ruining a perfectly good thing.
[21:17:33] <Grinnz> it's not about it having been used badly
[21:17:35] <thrig> C also printf in see
[21:17:46] <Grinnz> it's about the extreme likelihood that it will continue to happen
[21:18:21] <Grinnz> and it's not even really their fault, perl was designed to promote context sensitivity
[21:18:29] *** Quits: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b) (Remote host closed the connection)
[21:18:32] <Grinnz> it just turns out that was maybe taken too far
[21:18:55] <aquanight> context sensitivity probably makes more sense if you have a stronger typing mechanism
[21:19:13] *** Joins: JustMe (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[21:19:13] <Grinnz> or if it was clearer when things happened yeah
[21:19:18] <aquanight> e.g. %x = () isn't "assign a list and it's magically reinterpreted as a hash", you could apply a 'hash' type to the expression
[21:19:18] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Ping timeout: 260 seconds)
[21:19:34] <aquanight> and now it actually syntactically has to be a sequence of (scalar key), (scalar value)
[21:19:38] <aquanight> isntead just a generic list
[21:19:51] <Grinnz> and now you're halfway to raku
[21:19:51] <aquanight> instead of*
[21:20:32] <aquanight> and leads to shit like this where we now have two perlcritic policies saying the exact same thing
[21:20:56] <aquanight> like explicit return undef bad because if (@thing = func)
[21:21:08] <Grinnz> well
[21:21:13] <aquanight> but empty return bad because a => func() in lists
[21:21:16] <aquanight> so which the fuck is it
[21:21:42] * GumbyPAN CPAN Upload: Net-Dimona-0.02 by GARU https://metacpan.org/release/GARU/Net-Dimona-0.02
[21:21:42] <Grinnz> the problem is that the core one takes an opinion conway had and presents it as a gospel everyone should adhere to
[21:22:07] <Grinnz> and then the cves happened
[21:22:12] <aquanight> the problem is people taking perlcritic as gospel in general.
[21:22:21] <Grinnz> and core policies can never change
[21:22:33] <aquanight> like anything regarding coding style it can be a "good idea" but it should never be friggin gospel
[21:22:36] <xq> so ProhibitExplicitReturnUndef was added in 2005
[21:23:17] <aquanight> if you don't treat it as gospel then it's easier to ignore when it gets extra incovenient or when you're in a just plain DGAF coding situation
[21:23:53] <Grinnz> it's not that it intends to present it as gospel, it just ends up that way because it's the defaults for a widely used tool which is not sufficiently self aware of the importance of such defaults
[21:24:15] <xq> I guess I just don't get it. Then again I disagree with a lot of other stuff in the PBP so not too surprised.
[21:24:38] <xq> (as far as I understand ProhibitExplicitReturnUndef is PBP-related)
[21:25:07] <Grinnz> it was solving a real problem conway had at the time, but a much rarer one and trivial to avoid
[21:25:26] <Grinnz> unlike the accidental list context that is everywhere
[21:25:54] <aquanight> except accidental list context is easy to fix too
[21:26:00] <xq> which real problem does prohibiting explicit undef solve?
[21:26:24] *** Joins: kensanata (~user@user/kensanata)
[21:26:41] <aquanight> xq: I think it's the idea of things that do if (my @results = some_func) or whatever
[21:26:52] <aquanight> and for some dumb reason someone decided a list-returning func should 'return undef;' on failure
[21:26:56] <Grinnz> it is easy to fix for yourself singularly
[21:27:01] <aquanight> at least that's what I understood the problem to be
[21:27:10] <Grinnz> it is not easy to fix in the general collective of perl programmers
[21:27:23] <xq> aquanight: ah, good example
[21:27:42] <Grinnz> conway's problem is easy to fix: make sure list returning functions return a list
[21:27:42] <aquanight> the problem of course is that it's entirely legal to use an intended-to-be scalar func in that manner
[21:27:52] <aquanight> and a function intending to return scalar would ordinarily return undef on failure
[21:28:26] <aquanight> but if (my @results = scalar_func_that_returns_explicit_undef) { } produces a true result either way
[21:28:34] <aquanight> as oppsoed to my $result = the_same_func
[21:28:47] *** Quits: proller (~p@2a02:6b8:0:40c:6e95:dcd1:193d:336e) (Ping timeout: 240 seconds)
[21:28:57] <Grinnz> which comes back to, don't overuse contact sensitivity
[21:29:01] <Grinnz> context
[21:29:03] <aquanight> the root of the problem is using a function intended for scalar use in a list context / list use in a scalar context
[21:29:17] <aquanight> the problem is it's not an easy problem to solve
[21:29:28] <aquanight> sometimes you can't *not* "overuse" it
[21:29:43] <Grinnz> not if you're designing the api
[21:29:52] <xq> `if (my @arr = stuff()) {}` is a code that smells of complexity
[21:30:01] <aquanight> Grinnz: I guess what I mean is
[21:30:06] <Grinnz> eh, it's common enough with list returning functions
[21:30:21] <aquanight> you could decide if your function is scalar-intended in which case you WANT explicit 'return undef' so that a => func() works right
[21:30:36] <aquanight> or if it's list-intended in which case you want return ();
[21:30:46] <aquanight> but either way someone will ALWAYS use it wrong
[21:30:56] <aquanight> and you really can't do anything about it
[21:31:20] <Grinnz> people can always use functions wrong, that's their problem if they didn't follow the docs
[21:31:28] <aquanight> if you want to get super anal-retentive about it
[21:31:33] <Grinnz> but using a scalar function in a list isn't using it wrong
[21:31:39] <Grinnz> it's just what happens
[21:31:44] <aquanight> the best you can do is slap a "die if/unless wantarray" at the start of your func
[21:31:53] <Grinnz> that's just worse
[21:31:54] *** Quits: rindolf (~shlomif@87.68.240.138.adsl.012.net.il) (Ping timeout: 260 seconds)
[21:32:01] <aquanight> is it though?
[21:32:12] <Grinnz> it causes perfectly reasonable code to die
[21:32:21] <aquanight> because welcome to literally every other programming language where trying to use a function with the wrong context dies at compile time at least
[21:32:33] <Grinnz> compile time would be reasonable
[21:32:38] <Grinnz> but that's not possible
[21:32:43] <aquanight> exactly
[21:32:50] <aquanight> so the best you can do is just die at runtime
[21:33:04] <aquanight> and hope that it makes the wrong-context situation obvious instead of a quiet CVE in waiting
[21:33:22] <Grinnz> or just write it to work correctly when used as documented
[21:33:30] <aquanight> yes
[21:33:37] <aquanight> if they use the right context it doesn't die
[21:33:42] <aquanight> if they use the wrong context it dies
[21:33:47] <Grinnz> no
[21:34:01] <aquanight> so you can pick which one you're intending and make them use it the right way.
[21:34:35] <Grinnz> using a scalar function in a list is still using it to get a scalar as documented
[21:34:53] <aquanight> except perl doesn't see it that way
[21:35:14] <aquanight> I get that it would be nice if we could just do that. But apparently shit like this means we can't have nice things.
[21:35:24] <aquanight> so isntead I'll just make people slap a 'scalar' in front.
[21:35:37] <Grinnz> user hostility is your choice
[21:36:10] <aquanight> if it came to something that would spawn CVEs if they do it wrong?
[21:36:48] <Grinnz> trying to prevent any way a user can use a function wrong is a fools errand
[21:37:18] <Grinnz> there are far easier ways for them to cause themselves a cve than that
[21:37:22] <xq> was the param() function properly documented at the time of CVE-2014-1572 ?
[21:37:34] <Grinnz> yes, as a context sensitive method
[21:37:43] <jaytee80> okokok, installing no empty return policy. I know what I'll be doing the rest of the damn day.
[21:37:44] <xq> so they simply made a mistake
[21:38:11] <Grinnz> a mistake encouraged by the design of the language yes
[21:38:17] *** Joins: nrl^ (~nrl@12.203.127.82)
[21:38:26] <aquanight> I mean to be fair
[21:38:51] <aquanight> things like this is why I've wanted stuff like being able to put custom compile-time checks on sub calls
[21:40:12] <aquanight> but if I had to pick a real fault, it's that we have list context within a larger list expression (as opposed to just "the whole list").
[21:40:12] <xq> are there legitimate uses for wantarray then?
[21:40:30] <aquanight> I don't think there's very many times I want 1, 2, 3, func(), 4 where func() returns many things
[21:40:43] <Grinnz> xq: i mentioned before the only one i run into is emulating already context sensitive apis
[21:41:21] <aquanight> xq: for some reason, 'wantarray' is basically a bad word.
[21:41:30] <Grinnz> it's never something you have to use, but it's the only way to do that thing
[21:41:37] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:41:38] <xq> Grinnz: a perlcritic policy that prohibits wantarray seems more and more like a good idea
[21:41:45] <aquanight> xq: already exists
[21:41:47] <Grinnz> ... that's why i have one
[21:41:47] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[21:41:51] <xq> ah
[21:42:11] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[21:42:49] <Grinnz> aquanight: i can think of a lot of cases where I've done that (usually dereferencing an array in modern code because I'm trying to avoid list returns altogether)
[21:43:16] <aquanight> I don't know if there's a better name for what "1, 2, 3, func(), 4" type constructs are, but I'm wondering if at some point we should consider changing that to be "each item is scalar context"
[21:43:30] <Grinnz> simple case: %foo = (%foo, stuff)
[21:43:52] <aquanight> yeah hashes complicate that, because %thing = (%defaults, %whatever) is a good way to do that
[21:43:59] <Grinnz> that's a series of comma operators
[21:44:28] <aquanight> I mean @thing = func; obviously should be list context. But sometimes I think @thing = 1, 2, func; should maybe have func be scalar
[21:44:34] <Grinnz> basically you want a comma operator that enforces scalar context on its operands
[21:44:43] <Grinnz> but forms a list still
[21:44:50] <aquanight> sure?
[21:45:00] <xq> wasn't there something like that in perlsecret
[21:45:02] <aquanight> at the very least, the a => thing, b=> func() scenario would've never happened
[21:45:24] <Grinnz> xq: probably the ~~ which doesn't work for all values
[21:45:31] <xq> the forbidden operators
[21:46:22] *** Quits: miojo (~miojo@191.253.152.1) (Quit: Client closed)
[21:46:49] *** Joins: miojo (~miojo@191.253.152.1)
[21:49:52] <shaldannon> as opposed to the smooth operator(s)?
[21:50:43] <jaytee80> Stupid question, how do you enable one policy in a .perlcriticrc file?
[21:51:18] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[21:51:26] <jaytee80> nvm, I got it. include up top.
[21:52:53] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[21:55:03] *** Quits: summerisle (~eof@tty3.dev) (Quit: In my vision, I was on the veranda of a vast estate, a palazzo of some fantastic proportion.)
[21:55:42] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[22:00:49] *** Joins: semeion (~semeion@user/semeion)
[22:00:58] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[22:01:23] *** Joins: semeion (~semeion@user/semeion)
[22:04:57] <aquanight> and ins't ~~ now a smartmatch operator?
[22:05:13] <aquanight> another neat idea ruined by bad usage
[22:06:01] *** Joins: Moonlight (~Moonlight@64.253.17.178)
[22:06:46] <gordonfish> Or a reminder to buy Pringles
[22:09:22] <gordonfish> { Re: <aquanight> https://l.perl.bot/p/dzergh } Wow.. nice
[22:09:22] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[22:09:42] <aquanight> gordonfish: I make no claims to its accuracy
[22:10:05] <aquanight> but I forgot how quickly PCM explodes in size
[22:10:29] <aquanight> at 8000 8-bit samples per second a simple 7-digit number explodes fast.
[22:12:15] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:13:49] <aquanight> also I'm sure someone will eventually come by and crucify me for the C-style for loop(s)
[22:14:00] <aquanight> ah no I only used one
[22:14:43] <gordonfish> C-style loops have thier uses
[22:15:25] *** Joins: summerisle (~eof@tty3.dev)
[22:15:53] <aquanight> oh sure
[22:16:18] <aquanight> but I'm sure someone will be like "for my $t (0 .. $dur * PCM_FREQ)" or something like that.
[22:17:10] <aquanight> because everything has to be foreach loops and C-style fors are forever bad or something.
[22:19:02] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[22:19:41] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[22:19:41] *** Joins: judabuda (kowbunga@user/judabuda)
[22:22:42] <aquanight> now see
[22:23:11] <aquanight> admittedly I'm using return \@array to return array results. But that was chiefly because I thought in my head "these could end up being pretty big arrays, maybe I shouldn't return copies of them"
[22:24:10] <jaytee80> Not nearly as much as I'll be crucified for what I just pasted.
[22:24:20] <jaytee80> https://l.perl.bot/p/7rgx4a
[22:24:21] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[22:24:24] <aquanight> I'd probably still do that if I was ever doing something of this nature for real, since those feel like they should be discrete objects and not lists
[22:24:56] <aquanight> jaytee80: my only complaint is you don't need the 'use strict' afterward: no strict is lexically scoped
[22:25:05] *** Joins: EGD (~egd@user/egd)
[22:25:20] <jaytee80> I probably *should* feel dirty when I use no strict 'refs'; ## no critic
[22:25:36] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:26:02] <aquanight> I mean, if you "want" to feel nicer about it there are some alternatives
[22:26:12] <aquanight> Symbol::qualify for one example
[22:26:18] <aquanight> er
[22:26:22] <aquanight> ::qualify_to_ref that is
[22:26:42] <aquanight> it's basically "no strict but I want to hide that I'm no stricting like a total coward"
[22:26:58] <aquanight> well no strict 'refs' in particular
[22:27:09] <aquanight> but then 'refs' is literally the only one to have runtime effect
[22:27:25] <jaytee80> I don't want to necessarily hide it. The above at least will show up if you do a perlcritic --force 
[22:27:38] <aquanight> right
[22:28:07] <aquanight> you can also do: $::{$class . ".."}->{$param_name} I think
[22:28:12] <aquanight> er
[22:28:15] <aquanight> you can also do: $::{$class . "::"}->{$param_name} I think
[22:28:26] <aquanight> it might not be that simple
[22:28:32] <aquanight> it's probably easier to use Symbol::qualify_to_ref
[22:28:39] <aquanight> but it doesn't matter
[22:28:45] <aquanight> what you have is a perfectly cromulant solution
[22:28:49] <jaytee80> Basically I don't see any way to runtime define subs as closure without no strict refs.
[22:28:57] <aquanight> just, as I said, the only real complaint is the unnecessary re-use after
[22:29:14] <aquanight> if you need to put more code after, you can have the same effect by puttting that bit in a nested block
[22:29:56] <aquanight> I honestly think { no strict 'refs'; <thing (single statement>; } should be an automatic shut up to perlcritic
[22:30:11] <aquanight> because that's like a "yes I know I'm doing something weird go the fuck away" signal if ever there was one
[22:30:36] <jaytee80> I mean that's what ## no critic is.
[22:30:50] *** Quits: pizdets (~pizdets@183.182.115.95) (Ping timeout: 252 seconds)
[22:31:33] *** Joins: anthk_ (~anthk_@106.83-213-54.dynamic.clientes.euskaltel.es)
[22:31:37] <jaytee80> It's funny though that the no critic is needed on the no strict line but NOT the "doing weird shit" line.
[22:33:42] <xq> jaytee80: dynamically generating subs can be problematic
[22:33:45] <xq> example:
[22:34:50] <xq> based on your code above: if someone sees `$obj->param2;` and they want to find the definition of it by searching for `sub param2`, they will not be able to
[22:35:24] <jaytee80> But if they search param2 it will go right to that line.
[22:35:25] <xq> and I don't think there is anywhere an advanced enough 'jump to definition' function in any editor that will be able to do it based on that code
[22:35:41] <xq> searching for param2 will find every place where it's called
[22:36:02] <jaytee80> But lets get even worse... the code right above what I posted gets the list of sub names from a database. 
[22:36:27] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[22:36:28] <jaytee80> it'll showup nowhere.
[22:36:35] <xq> yeah, that's even worse
[22:37:10] <xq> you better have a very good justification for writing something like that
[22:37:12] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 250 seconds)
[22:38:00] <jaytee80> BUT, I'm not sure I'm worried about people trying to find code that doesn't really exist anywhere here. Essentially, the actual code is in a ParameterContainer class, and they know from docs that all Parameters will have their code handled there.
[22:39:09] <aquanight> xq: sounds like a problem perldoc can solve
[22:42:11] <jaytee80> Justification: this is a part of a driver for something that requires a "user definable" protocol to the device. Essentially, if the user has custom device that also does param2, they click on a web page to add param2 to the protocol, and now the driver can magically do param2. Boss says it has to happen without writing code (odd isn't it?)
[22:42:45] <jaytee80> code is harder to maintain now, but drivers are easier to maintain
[22:44:01] <jaytee80> ls
[22:44:27] <aquanight> ultimately, "don't do X weird thing because people won't understand the code" is not by itself a good reason to not do something. Better is "if you do X weird thing you might need to make some extra effort so people can understand what you're after"
[22:47:46] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 265 seconds)
[22:48:08] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[22:48:16] *** Joins: horsepatat (~horsepata@212.3.198.184)
[22:49:53] *** Quits: Moonlight (~Moonlight@64.253.17.178) (Ping timeout: 250 seconds)
[23:01:01] *** Quits: horsepatat (~horsepata@212.3.198.184) (Ping timeout: 252 seconds)
[23:01:01] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 252 seconds)
[23:02:20] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:10:15] *** Joins: bmeneg (~bmeneg@2804:828:f232:1c6c:1056:f77d:9322:a90b)
[23:11:25] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[23:11:37] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:11:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Client Quit)
[23:11:52] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:12:50] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[23:18:40] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:19:32] <gordonfish> aquanight: Agreed.
[23:28:49] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:30:51] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[23:31:39] *** Quits: EGD (~egd@user/egd) ()
[23:34:36] *** Quits: superkuh (~superkuh@user/superkuh) (Remote host closed the connection)
[23:40:15] *** Joins: superkuh (~superkuh@user/superkuh)
[23:55:07] <jaytee80> svn hell exists and I live there.
[23:55:42] <jaytee80> Restore old version of file... fine. Run checks, all good. Commit? Screw you it's out of date.
[23:56:58] * GumbyPAN CPAN Upload: DBIx-SearchBuilder-1.71 by BPS https://metacpan.org/release/BPS/DBIx-SearchBuilder-1.71
[23:56:58] * GumbyPAN CPAN Upload: Test2-Tools-LoadModule-0.007 by WYANT https://metacpan.org/release/WYANT/Test2-Tools-LoadModule-0.007
