[00:04:22] <dthompson> dto: give it a shot!
[00:05:30] <dto> ok so a game that can be controlled with directionals and one button... i.e. something i can do with dance pad on my stream :) with a black background
[00:06:10] <Mattykins> Hi technomancy, I hear that you are the resident Fennel expert! :P if youre around do you mind if I bug ya with a question or two 
[00:06:17] <dto> hey Mattykins 
[00:06:21] <Mattykins> hey dto 
[00:06:21] <dto> dthompson: whats your progress ? 
[00:06:35] <dto> Mattykins: i might make a game for this jam after all!
[00:06:42] <Mattykins> dto, yay! Do eeeeet!
[00:06:47] <Mattykins> I am starting on mine today
[00:06:53] <Mattykins> i think ive settled on using fennel/love2d
[00:06:58] <Mattykins> really enjoying it so far
[00:07:15] <dto> sweet!
[00:07:52] <dthompson> dto: not a lot right now, but I'm going the shoot-em-up route this time. got a player that can move and shoot. working on a couple of basic enemies.
[00:08:15] <dto> cool dthompson 
[00:08:24] <dto> i might do something called Particle Dance
[00:08:31] <dto> where particles appear to the beat
[00:08:34] <dto> and u gotta stompem
[00:08:34] <dthompson> Dance Dance Particle
[00:08:41] <dthompson> that sounds cool
[00:08:45] <Mattykins> played with a ddr pad I hope!
[00:08:52] <dto> yeah it'll be optional tho. 
[00:08:52] <dthompson> I've thought about doing a rhythm-based shooter before
[00:08:56] <Icefoz> Ok I feel a little better about my own progress so far: https://alopex.li/temp/progress/day01_01.png
[00:09:10] <dthompson> Icefoz: looks great!
[00:09:10] <Icefoz> which is basically 2 hours of messing around with Fennel and Love2d's particle system
[00:09:12] <dto> nice particles bro!
[00:09:32] <dto> can u script individual particles in Scheme
[00:09:49] <Icefoz> you could but it probably wouldn't be terribly efficient
[00:10:12] <Mattykins> Icefoz, very cool!
[00:10:12] <dto> they'd be Smarticles(TM)
[00:10:19] <dthompson> I've got most of the essential stuff down. players, enemies, bullets, collision.
[00:10:50] <dthompson> now it's a matter of putting together an interesting enough small level and coming up with as decent of programmer art as I can muster
[00:10:58] <Mattykins> Quick fennel question, I found some lua code I wanna call (function to take hsv and return rgb color), I put it in a file called "helpers.lua", how do I call that func from fennel land? I could easily port to fennel but i wanna learn how to do it this way too
[00:11:16] <Icefoz> the point of particles is you have a list of different instances of the same sort of state, and a single function that zips through them as fast as possible doing basically fixed-function updates.
[00:11:33] <technomancy> Mattykins: https://fennel-lang.org/see can help with that
[00:11:39] <technomancy> Mattykins: best take this to #fennel tho
[00:11:50] <Mattykins> oh i didnt know there was a fennel channel, will join, ty
[00:16:23] <dto> Icefoz: ah i see. thanks
[00:16:34] * dto shmoops Mattykins 
[00:16:40] <dto> shm0000ooo000p
[00:22:38] <dto> dthompson: glad to hear of progress. onward ho!
[00:25:33] * dto commences review of xelf core code i haven'tr looked at in years
[00:27:51] <dto> borodust: any way to get usb camera video into your game engine? 
[00:30:04] <dthompson> dto: thanks! we'll see if I can get something playable enough to submit. lots of family events going on.
[00:30:14] <borodust> dto: nothing out of the box
[00:31:10] <borodust> the only help is you can blit images into texture in background
[00:31:38] <borodust> not gonna be too easy and i won't be able to help :(
[00:31:57] * borodust is focusing on jam's game
[00:41:08] <dto> borodust: ok cool!
[00:41:17] <dto> i'll work on my xelf-based stuff for now :)
[00:41:24] <dto> borodust: what game u making?
[00:43:20] <borodust> dto: https://github.com/borodust/notalone-thriced/blob/master/docs/design.org
[00:47:10] <dto> nice design. i'm about to start working omy design doc too
[00:55:17] <borodust> noice! glhf ;p
[01:07:30] <dto> ok so i have a rough draft, lol is it okay if i remix one of my old games to be dance oriented and change it all around? 
[01:11:16] <borodust> yup, should be good
[01:11:36] <dto> want to see what i have so far? 
[01:11:39] <dto> for a doc
[01:14:30] <dto> https://gitlab.com/dto/djam/-/blob/main/djam.org
[01:24:16] *** Quits: dra (~dra@2a04:4540:641a:ef00:f09a:5895:b098:1e62) (Remote host closed the connection)
[01:42:02] *** Quits: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net) (Remote host closed the connection)
[02:06:57] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:09:39] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:29:04] <Mattykins> dto, looks awesome dude!
[02:29:13] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[02:34:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 265 seconds)
[02:34:09] <dto> :)
[03:03:27] * dthompson hacks a little bit more
[04:19:25] *** Quits: dthompson (~user@pool-96-230-58-118.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[04:31:51] *** Joins: vidak (~user@106-69-161-181.dyn.iinet.net.au)
[04:33:06] <vidak> mornin' all from UTC+8!
[04:40:37] <shoshin> hi vidak!
[04:40:45] <vidak> (:
[04:58:48] *** Quits: psyklax (~psyklax@2603-9001-0200-3c16-0000-0000-0000-0003.inf6.spectrum.com) (Quit: WeeChat 3.3)
[04:58:59] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[05:03:28] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:06:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[05:06:43] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:11:11] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 264 seconds)
[05:14:04] *** Parts: vidak (~user@106-69-161-181.dyn.iinet.net.au) (ERC (IRC client for Emacs 27.2))
[05:21:07] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[05:45:45] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[06:49:13] <technomancy> boooo no arm64 butler builds https://github.com/itchio/butler/issues/224
[07:15:59] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 264 seconds)
[07:18:17] <Icefoz> Looks like it should be simple enough.
[09:03:57] *** Joins: contrapunctus (a75f5b1571@jabberfr.org)
[09:08:15] <contrapunctus> Thinking of making a procedurally-generated 3D planet in Common Lisp (as a starting point for a game)...I've played with CL a little in the past (= SLIME etc is set up and I'm familiar with Emacs), but I have no game dev experience...where might I start?
[09:09:02] *** Joins: yumaikas (~yumaikas@2601:281:c102:7920:9cad:ac0:a84c:3cbb)
[09:09:06] <yumaikas> o/
[09:12:21] <contrapunctus> Hey, yumaikas 
[09:12:32] <yumaikas> How goes it?
[09:13:33] <yumaikas> contrapunctus: Working on my entry to the Lisp Game Jam
[09:13:46] <yumaikas> Using Janet and Jaylib (a wrapper around Raylib)
[09:23:48] <yumaikas> *crickets*
[09:39:38] <contrapunctus> yumaikas: perhaps you entered right after my question 🤔
[09:39:49] <contrapunctus> > Thinking of making a procedurally-generated 3D planet in Common Lisp (as a starting point for a game)...I've played with CL a little in the past (= SLIME etc is set up and I'm familiar with Emacs), but I have no game dev experience...where might I start?
[09:40:03] <yumaikas> I did enter right after your question
[09:40:10] * yumaikas doesn't know, tbh
[09:40:39] <yumaikas> 3d generated planet I'd start with getting a formula for plotting points in 3d space
[09:40:53] <yumaikas> Maybe a space-filling curve of some sort?
[09:41:24] <yumaikas> *or*
[09:41:44] <yumaikas> 3D Perlin noise as offsets from the center of the planet
[09:42:56] <yumaikas> Though, you're going to need a 3D library first, and I don't know of the Common Lisp one
[09:42:58] <yumaikas> *ones
[09:49:41] <contrapunctus> I...I know some of these words 😶
[09:49:50] <contrapunctus> 😅
[09:50:28] <yumaikas> What OS are you on?
[09:50:38] <contrapunctus> Debian Testing
[09:51:36] <|3b|> "procedurally-generated ... planet" is enough for multiple books on it's own, as is the presumed "[draw in] 3D" part :p
[09:51:55] <yumaikas> https://www.cliki.net/graphics%20library
[09:52:28] * contrapunctus looks up "3D library" to find out what they do, and gets 3D _model_ libraries
[09:52:39] <yumaikas> |3b|: I mean, I'm assuming this is more something like a planet version of that Mountain game?
[09:53:11] <yumaikas> contrapunctus: For any realtime display, you'll want something that exposes OpenGL bindings, I think?
[09:53:18] <yumaikas> Or just a CL Game engine
[09:55:25] <|3b|> so first question is what you want from the "3d planet": globe at arms length (sphere with picture of ground/water on it)? view from near orbit (previous + mountain-level details distorting the sphere)? view from airplane level (add hill-level details, larger buildings)? walking on ground?
[09:56:20] <|3b|> if airplane or ground level, do you need to be able to travel to /all/ of the planet, or is just a few km enough?
[09:57:46] <|3b|> oh yeah, add in atmosphere for near-orbit levels and below
[09:59:04] <contrapunctus> |3b|: from 'as seen in space' to 'walking on ground'.
[09:59:25] * |3b| looks at "Mountain" game, and that adds another axis: does it need to be a planet sized planet or is asteroid size OK
[09:59:51] <contrapunctus> Planet or somewhere in between, probably.
[10:00:19] <|3b|> combining all of them sounds like a bad idea for a game-jam scale project :)
[10:00:42] <contrapunctus> Oh, it's not a game jam project o.o
[10:00:57] <yumaikas> Ah
[10:01:06] <|3b|> ah, if it is a long-term project, that makes it a bit more practical
[10:01:14] <contrapunctus> I'm not nearly as confident in my programming (let alone game programming) to join things like that 😅
[10:01:15] <|3b|> though still very large
[10:01:44] <|3b|> well, it also isn't a very good scale for "learning to program better" :)
[10:02:05] <|3b|> though if it is a particularly interesting topic for you, the interest might outweigh that
[10:02:23] <yumaikas> contrapunctus: How much programming *do* you know?
[10:02:58] <|3b|> and "generate and draw a planet" isn't really game specific, those are both fields on their own :) (admittedly lots of overlap with some of game dev, since games tend to happen on or around planets)
[10:03:25] <yumaikas> Though some happen in a black void
[10:04:32] <|3b|> yeah, there are some pretty large subsets of "game" that don't really need a planet as such, was thinking of a limited set when i said that
[10:05:06] <yumaikas> |3b| What sort fo stuff do you get up to?
[10:05:32] <contrapunctus> yumaikas: I see a few graphics libraries...cl-horde3d, cl-opengl, clinch, okra (OGRE)...and do cl-sdl2/lispbuilder-sdl count? I've spent a few years working on an Elisp time tracker (~2k SLoC), an Emacs sxiv interface (~100 SLoC), and some Scheme scripts.
[10:05:38] * |3b| was thinking of 3d games, while most 2d games don't really care about a "planet" so much as a "map" at most. many just want a "level", or not even that much and just have a bunch of separate images
[10:06:40] <yumaikas> Eh, most 3D games only really want a map or a level, which usually means a terrain mesh and various objects that represent the elements of the level
[10:06:49] <|3b|> yumaikas: not much lately :( theoretically i do 3d programming, VR etc. more practically i do tools/libs/etc for such. in reality i tend to not get much of anything done
[10:07:28] <yumaikas> sdl/sdl2 are more 2D libs, they *can* do 3D by hooking into OpenGL, I think, but then you're outside of that
[10:07:39] <|3b|> yumaikas: yeah, in 3d games, "map" or "level" tends to be the "restricted to a few km" subset of "ground-level planet"
[10:08:16] <|3b|> contrapunctus: currently, for CL you probably want cl-opengl
[10:08:17] <yumaikas> contrapunctus: tbh, if you're wanting to learn 3d programming, it might be better to start with Unity or Godot to get some of the basics under your belt, and then come back?
[10:08:57] <|3b|> to use opengl, you also need some way to talk to the OS for creating windows into which to draw said OpenGL, and also to handle input. that is mostly cl-sdl2 currently
[10:09:28] <contrapunctus> But...learning non-Lisp languages is so meh :\
[10:10:02] <|3b|> (sdl/sdl2 also does some 2d stuff, but we tend to ignore it these days, since it is usually easier to just do 2d stuff with 3d APIs anyway)
[10:10:29] <contrapunctus> |3b|, yumaikas: I'll look into cl-opengl, thanks 🙂
[10:11:11] <yumaikas> contrapunctus: your call, heh
[10:11:38] <|3b|> unfortunately there aren't any really good options for "easy + powerful game dev" yet. i think trivial-gamekit is one of the better options currently for getting started, though i haven't actually looked at it
[10:12:55] <contrapunctus> .o(No structural editing? Edit-compile-reload cycle? "Hello cringe department.")
[10:13:45] <|3b|> borodust: trivial-gamekit readme points to freenode for irc, might want to update that unless you are still there too :)
[10:13:46] <contrapunctus> (And macros.)
[10:14:35] <|3b|> contrapunctus: yeah, but "click a few buttons and have something that looks sort of like a game" can balance that out a bit if your goal is to finish a game :)
[10:14:37] <yumaikas> contrapunctus: If you want those with gamedev, Love2D+Fennel or Janet+Raylib are both solid choices. They aren't CL, but Janet does have structural editing, and both Janet and Fennel could be wired up to live-edit things, though I fin a file-watcher to be sufficient for my purposes.
[10:18:28] <|3b|> if you don't care quite as much about actually finishing a game any time soon (or want to finish a particular game that you know is a bad fit for the non-CL options), then comfort of staying in CL (or something with similar features) might be more important
[10:18:43] <yumaikas> ^
[10:22:05] <|3b|> CL game devs tend to spend a lot of time writing tools and libraries rather than working on the games, since there aren't enough of us for the tools/libraries to have already been written
[10:22:41] <mfiano> and even if there was, CL devs still tend to write their own :p
[10:22:50] <|3b|> that too :/
[10:23:14] <|3b|> even when there are tools/libs, we don't like them for various reasons :p
[10:24:28] <mfiano> I talked about this before, but I think it is due to how flexible the language is. It's easier to bend the language to your own thought processes than to try to understand someone else's.
[10:25:25] <mfiano> Lisp's curse is it is too expressive :)
[10:25:37] <contrapunctus> mfiano: is there any higher-level library (than cl-opengl) which I could use for my situation? (Procedural generation of a planet.)
[10:26:03] <|3b|> cl-opengl is mostly for drawing the planet, not generating it
[10:26:19] <contrapunctus> Yeah...
[10:26:20] <mfiano> Currently, not that I'm aware of. For generating you can take a look at mfiano/cricket
[10:26:53] <mfiano> Or maybe mfiano/syntex (undocumented)
[10:26:54] <|3b|> (though if you want to run code for generating the planet on a GPU, cl-opengl is one of the ways you could talk to the GPU, and probably the preferred one if you are also using it for drawing)
[10:27:29] <mfiano> For generating on the gpu, take a look at mfiano/umbra 's noise functions
[10:28:44] <|3b|> for "ground to space" level of planet generation, you will probably need to be (re)generating it as you draw it, just because planets are really big :/
[10:28:45] <contrapunctus> mfiano: re: Cricket, nice! a Common Lisp library with documentation 😁
[10:29:04] <mfiano> There isn't any magic planet creator though, and I don't that would be useful anyway as it has to make assumptions about the game using it
[10:29:32] <mfiano> contrapunctus: Thanks :)
[10:30:49] <|3b|> earth is about 500,000,000 sq km, so just storing a 1km resolution grid of heights is big enough to be a problem. and for ground level you would want at worst a few m resolution, preferably less than 1m, which would increase that by a factor of ~1000000
[10:31:45] <contrapunctus> |3b|: hm...I wonder how Pioneer does it 🤔
[10:33:19] <|3b|> generally, you just only generate the parts you need, and/or store some huge data set on disk and only load the parts you need
[10:33:41] <contrapunctus> Right...
[10:33:50] <|3b|> though 500,000,000,000,000 is big enough to be a problem for disks too :)
[10:34:51] <contrapunctus> I guess I could start with just...generating a kilometer of terrain or something...
[10:35:08] <mfiano> First tule of gamedev is everything is cheated
[10:35:11] <mfiano> rule*
[10:35:42] <|3b|> other options include "cheat", for example having an orbit-scale generator/renderer, and a fixed transition to a "short-range walking-level renderer"
[10:36:08] <mfiano> Procedural terrain doesn't need anything but a PRNG seed and maybe some texture samples to generate more from
[10:36:33] <|3b|> which "pioneer" are you talking about? failed to find any obvious options when i searched
[10:36:42] <contrapunctus> |3b|: https://github.com/pioneerspacesim/pioneer
[10:37:01] <contrapunctus> mfiano: I see 🤔
[10:38:16] <mfiano> You can tell my the trailer they load LOD levels as you get closer
[10:38:22] <mfiano> s/my/by/
[10:38:44] <contrapunctus> mfiano: is that also sufficient to generate, say, rocks, plateaus, caves, etc?
[10:39:02] <|3b|> yeah, they seem to be doing mostly generate on demand
[10:39:10] <mfiano> https://pioneerspacesim.net/#slide0
[10:39:21] <mfiano> watch 0:15-0:20 carefully
[10:40:00] <mfiano> contrapunctus: definitely
[10:40:13] <mfiano> coherent noise is typically layered for that
[10:42:19] <mfiano> http://libnoise.sourceforge.net/examples/complexplanet/index.html
[10:42:43] <mfiano> this planet is rendered with libnoise, and afaik cricket can do everything libnoise can do and more
[10:43:12] *** Joins: selwyn_ (~selwyn@user/selwyn)
[10:43:21] <|3b|> looks like they also stop somewhere between "airplane" and "walking" level if you can't leave your ship, which probably means you can get away with somewhere in the tens of meter resolution range
[10:43:59] <mfiano> err it's _generated_ with libnoise...rendering is another story :)
[10:44:26] <mfiano> Looks like they used a mixture of Terragen and Celestia for rendering
[10:44:58] <contrapunctus> mfiano: looks great :o
[10:45:58] <contrapunctus> And terrain generated this way is destructible? (e.g. craters caused by weapons, footsteps)
[10:46:09] <|3b|> you usually layer that on top
[10:46:43] <|3b|> store enough to recreate the generated parts, then store any modifications on top of that
[10:47:08] <|3b|> (and frequently, cheat by having modifications disappear after some time so they don't accumulate into huge amounts that will never be seen again)
[10:47:48] <|3b|> and also tune gameplay so it is unlikely for anyone to generate enough modifications to amount to an overly large data set
[10:48:04] <mfiano> Procedural generation is harder than making all the art yourself...you spend forever tweaking parameters to try and simulate various materials
[10:48:28] * |3b| wouldn't say it is harder, just that it isn't easier and is a different skillset
[10:48:35] <mfiano> Don't mean to dissuade you, but you should know what you're getting into, gameplay aside :)
[10:52:36] <mfiano> contrapunctus: I recommend playing around with cricket to see how things work. It has all the functionality you'll need for generation. Composition/rendering is another story
[10:53:47] *** Quits: yumaikas (~yumaikas@2601:281:c102:7920:9cad:ac0:a84c:3cbb) (Ping timeout: 264 seconds)
[10:53:58] <mfiano> Some day soon I hope to have a renderer with various knobs and switches for cricket to speed up the generation feedback loop
[10:54:54] <|3b|> contrapunctus: a large part of "how pioneer does it" : https://pioneerwiki.com/wiki/FAQ#What.27s_the_history_of_Pioneer = 13 years of development :)
[10:56:01] <contrapunctus> 😶️
[10:56:05] <mfiano> 13 years into hours times number of developers dividing by life expectancy will give you an idea of how many clones of yourself you will need
[10:56:28] <contrapunctus> "clones of yourself" ahahaha
[10:56:47] <mfiano> assuming you all have the collective skillsets of Pioneer :)
[10:57:01] <|3b|> well, should be easier if you start now than in 2008, lots more info available on the net for various parts, and computers are a lot more powerful so you can get away with less efficient code for a lot of things
[10:57:12] <contrapunctus> I hope others join in some day, when (if) there's something worth showing.
[10:57:32] <contrapunctus> (If I get around to making it, it will be FOSS.)
[11:02:22] *** Quits: selwyn_ (~selwyn@user/selwyn) (Quit: Leaving)
[11:04:20] <contrapunctus> Thanks for the guidance everyone :)
[11:54:23] *** Quits: Mattykins (~Matt@136-26-68-242.cab.webpass.net) (Ping timeout: 264 seconds)
[12:24:35] <borodust> |3b|: woops, thanks!
[12:31:23] <borodust> for higher level than cl-opengl thing is CEPL probably
[13:21:27] *** Quits: flatwhatson (~flatwhats@110-174-24-103.tpgi.com.au) (Remote host closed the connection)
[13:24:21] *** Joins: flatwhatson (~flatwhats@110-174-24-103.tpgi.com.au)
[15:19:00] *** Joins: dthompson (~user@pool-96-230-58-118.bstnma.fios.verizon.net)
[15:19:00] *** ChanServ sets mode: +o dthompson
[15:37:56] *** Joins: selwyn_ (~selwyn@user/selwyn)
[15:38:09] *** Quits: selwyn_ (~selwyn@user/selwyn) (Remote host closed the connection)
[15:51:01] *** Quits: dthompson (~user@pool-96-230-58-118.bstnma.fios.verizon.net) (Quit: Later)
[17:19:33] *** Joins: rtypo (~alex@user/rtypo)
[17:19:41] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[17:30:46] *** Joins: psyklax (~cy@2603:9001:200:3c16::d)
[17:37:31] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[17:48:00] *** Joins: makomo_ (~makomo@user/makomo)
[18:15:50] *** Joins: thrig (~thrig@70.97.65.251)
[18:26:21] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 265 seconds)
[18:39:14] *** Joins: notzmv (~zmv@user/notzmv)
[18:46:08] <dto> greetings, lisplings. happenings? 
[18:47:51] <borodust> jam ;p
[18:47:55] <borodust> hi
[18:48:10] <dto> hey borodust so i might participate
[18:48:18] <dto> some kind of dance pad controlled game, or maybe just a game
[18:48:23] <dto> how ru? 
[18:48:35] *** Joins: yumaikas (~yumaikas@c-73-169-66-238.hsd1.co.comcast.net)
[18:48:52] <borodust> good, thanks
[18:51:57] *** Joins: makomo_ (~makomo@user/makomo)
[18:53:14] <yumaikas> Morning
[18:54:45] <borodust> yo
[18:57:30] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[18:57:52] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[19:05:21] <dto> Mr. Puppywups is coming over
[19:05:26] <dto> oops wrong channel
[19:18:37] *** Joins: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net)
[19:38:57] <dto> borodust: the new Atari console is out and apparently quite good. can we dev for it with your libs? 
[19:41:45] <borodust> if it's just another linux as i heard, then it's probably possible
[19:46:13] *** Quits: makomo_ (~makomo@user/makomo) (Ping timeout: 252 seconds)
[19:52:05] <dto> sweet!
[19:52:32] <dto> i won't buy one just yet, but let me get myself reoriented with xelf and modernize one or two of my designs
[19:55:50] *** Quits: Psybur (~Psybur@mobile-166-170-34-168.mycingular.net) (Remote host closed the connection)
[20:04:55] *** Quits: thrig (~thrig@70.97.65.251) (Ping timeout: 252 seconds)
[20:15:56] *** Quits: psyklax (~cy@2603:9001:200:3c16::d) (Ping timeout: 245 seconds)
[20:17:38] <dto> https://www.logotech.com/technology/usb-flash-drives.html?gclid=CjwKCAjwk6-LBhBZEiwAOUUDp2Lgo9drNOmLna6eHvVPm1f4M1WTx56rzRrf5fn9c72XhTJO1ca2_xoC2wYQAvD_BwE   could sell game as cartridge with custom art :)
[20:19:54] <dto> ooh https://www.everyusb.com/custom-shape-flash-drives
[20:48:29] <dto> https://www.youtube.com/watch?v=f6iS6YvWpPs borodust some fun with 2600 homebrew games :) wouuld love to clone this for the jam, instead of my dance pad idea
[20:58:00] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[21:14:21] <borodust> dto: sounds fun!
[21:21:54] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[21:33:25] *** Quits: yumaikas (~yumaikas@c-73-169-66-238.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[21:42:17] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[23:07:48] *** Joins: notzmv (~zmv@user/notzmv)
[23:46:21] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:46:59] *** Joins: srhm (~srhm@user/srhm)
[23:55:55] <dto> dipped into my old game graphics and found some ideas too :) https://usercontent.irccloud-cdn.com/file/M2PiVUGB/Screenshot_2021-10-17_16-25-35.png
