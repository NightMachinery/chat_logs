[00:02:35] <theskillwithin> interesting https://elad2412.github.io/the-new-css-reset/
[00:06:11] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[00:06:59] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com) (Ping timeout: 264 seconds)
[00:10:48] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:12:58] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7)
[00:13:02] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[00:13:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:14:02] *** Joins: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860)
[00:14:51] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[00:15:19] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[00:15:30] *** Quits: federico_it (~textual@176.206.87.127) (Quit: Textual IRC Client: www.textualapp.com)
[00:16:38] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:17:04] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:17:41] <ThePendulum> wonder what other use there is for 'all'
[00:18:35] *** Joins: Koopz4 (~Koopz@h2950341.stratoserver.net)
[00:19:17] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[00:19:21] <ThePendulum> never really used :is or :where, seem useful
[00:20:05] <sheetjs> n> class Foo{}; Foo
[00:20:07] <jellobot> (okay) [class Foo]
[00:20:12] <sheetjs> n> eval("class Bar{}"); Bar
[00:20:13] <jellobot> (fail) ReferenceError: Bar is not defined
[00:20:13] *** Quits: Koopz (~Koopz@koopz.rocks) (Quit: Goodbye ZNC)
[00:20:13] *** Koopz4 is now known as Koopz
[00:21:08] <theskillwithin> I was a fan of normalize,  but normalize has split into 2 now,  and im reconsidering now.
[00:22:27] <phantomotap> normalize split into 2?
[00:22:47] <Rockwood> good night
[00:22:48] <Rockwood> cya
[00:22:52] <Rockwood> lol
[00:23:04] <Rockwood> almost morning 02:23 AM here
[00:23:06] <Rockwood> cya
[00:23:17] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[00:23:19] <theskillwithin> yeah phantomotap https://necolas.github.io/normalize.css/  and  https://csstools.github.io/normalize.css/  i think
[00:23:54] <theskillwithin> phantomotap https://github.com/csstools/normalize.css/#differences-from-necolasnormalizecss
[00:23:54] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[00:24:25] <phantomotap> thanks for the linkss.
[00:24:54] *** Quits: pizdets_ (~pizdets@183.182.111.255) (Quit: pizdets)
[00:25:38] <derjanni> death to css animations
[00:25:57] <phantomotap> hear hear!
[00:26:39] *** Joins: pizdets (~pizdets@183.182.111.255)
[00:27:10] <theskillwithin> huh?  css animations are awesome
[00:27:25] <derjanni> which purpose to they serve?
[00:27:45] <phantomotap> depends on how you use them, and they often suck. eg. scrolling down scrolls right for what f'ng reason?
[00:28:11] <ljharb> theskillwithin: that reset relies on super new css features, which makes it useless fwiw
[00:28:26] <ljharb> theskillwithin: new css features require like a half decade at least
[00:29:41] <derjanni> does anyone remember the page HTML/CSS transition animations in IE6/IE7 back in 1999-2003?
[00:29:55] *** Joins: delvx (~arek@77.252.63.98)
[00:29:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:30:08] <phantomotap> i don't.
[00:30:25] <theskillwithin> ljharb well thats the point
[00:30:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:31:51] <theskillwithin> ljharb i think these are implemented already in the major browsers
[00:33:26] <derjanni> phantomotap: https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/ms533435(v=vs.85)
[00:33:35] <derjanni> discontinued in IE9
[00:33:48] *** Joins: Guest43 (~Guest43@p200300c8cf2dff0069ff7208c1a11f02.dip0.t-ipconnect.de)
[00:34:10] <theskillwithin> ljharb or of course, Safari still in technology preview
[00:34:34] <derjanni> https://internetbrothers.com/dhtml_transitions.htm
[00:35:08] <derjanni> "With the introduction of Microsoft's Internet Explorer 4.x, page transitions came along. Built-in to the browser itself, transitions are IE exclusive effects that are applied to the entire document upon page enter or exit."
[00:35:25] <ljharb> theskillwithin: yes but "the latest version" is not all people need to support
[00:35:47] <derjanni> Server-side javascript, HTML/CSS effects: are we innovating backwards?
[00:36:05] <theskillwithin> ljharb or wait it does work on safari
[00:36:21] <ljharb> theskillwithin: no browser is actually evergreen
[00:36:31] <ljharb> derjanni: serverside JS is an improvement
[00:36:43] <ThePendulum> CSS effects even more-so
[00:36:47] <ljharb> derjanni: and css animations are FAR better than JS ones
[00:36:56] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:36:56] <ljharb> anything that means you need less JS is an automatic improvement
[00:36:58] <theskillwithin> ljharb thats because you keep yours up to date, if you wait long enough it is
[00:37:04] <derjanni> lijharb: I would say, JavaScript improved a lot. not necessarily programming istelf.
[00:37:05] <ljharb> theskillwithin: no, it's not
[00:37:16] <ljharb> theskillwithin: there are tons of users on old chrome, if you look at any major company's analytics
[00:37:19] <ljharb> theskillwithin: let alone firefox and safari
[00:37:25] <ljharb> theskillwithin: auto-updating simply doesn't work 100% of the time
[00:37:31] <ljharb> derjanni: both
[00:37:37] <derjanni> the IE4/5/6 animations were HW-accelerated :D
[00:38:04] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 244 seconds)
[00:38:16] <derjanni> I personally prefer the people that claim the death of OOP
[00:39:23] <ljharb> sure, IE did a lot right
[00:39:27] <phantomotap> oop is dead; lon live oop!
[00:39:30] <phantomotap> long*
[00:39:33] <ljharb> OOP isn't dead, but it should be
[00:39:46] <derjanni> no
[00:39:48] <ljharb> it can't die as long as universities keep churning out brainwashed CS students
[00:39:56] <ThePendulum> what would I blame my problems on without OOP
[00:40:06] <ljharb> ThePendulum: java'll still be around
[00:40:16] <ljharb> it'll just be faked functions and null pointers by then tho
[00:40:17] <derjanni> who ever wants OOP dead has never seen a 400k+ lines of code application environment
[00:40:52] <ljharb> derjanni: i've seen plenty. trying to make a 400k+ line of code app work well is treating the symptoms - treat the root cause and don't write apps that big
[00:40:54] <ljharb> big is broken
[00:43:52] <phantomotap> but... i mean, sometimes necessary
[00:45:03] <ljharb> nope
[00:45:15] <ljharb> that's like saying ODing on drugs is sometimes necessary
[00:45:28] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[00:45:31] <phantomotap> no. some applications can't really be small.
[00:46:06] <ljharb> phantomotap: sure but those can absolutely be composed of small codebases
[00:46:10] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[00:46:24] <ljharb> i have never once seen a large codebase that actually needed to be that large
[00:46:36] <ljharb> and i've seen some of the larger codebases out there
[00:46:44] *** Joins: nomic (~nomic@185.198.243.184)
[00:47:32] <zsoc> Is there still no reasonably compact way to pick properties from 1 object, assigning them to a new object, *while* renaming them (like with destructure syntax)
[00:47:33] <phantomotap> well, yeah you can build stuff from components. no one said that big apps had to be just one big .c file.
[00:48:02] <ljharb> zsoc: `const { a: b } = o; const o2 = { b }`?
[00:48:16] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[00:48:25] <zsoc> Yes, use two lines lol. Just was trying to avoid the pollution, but I guess if it is its own function, there's no pollution :p
[00:48:30] <ljharb> phantomotap: it's not a big codebase if it's actually separated into properly encapsulated components (even if you have a mega repo)
[00:48:38] <ljharb> zsoc: yup
[00:48:51] <ThePendulum> ok ansible genuinely sometimes throws some excessively useful errors https://www.pastery.net/vwadpq/
[00:49:30] <theskillwithin> ljharb well its worked in chrome for awhile, so even some old users are fine.  ur talking like under 2% of users, so another year and should be fine.  but the entire point of it is its showing a cleaner way using new features, so even this argument right now is silly
[00:49:58] <ljharb> theskillwithin: sure, it's a really nifty example
[00:50:07] <ljharb> theskillwithin: production stuff can't care about that tho :-)
[00:50:18] <ljharb> theskillwithin: and it's definitely way more than 2% of users, if you look at the analytics of larger sites, sadly
[00:50:38] <ljharb> believe me, i would *love* if it actually was plausible to tell everyone to ignore old browsers, but it's not
[00:50:45] <theskillwithin> also that can be a lot of users if its on a larger site
[00:51:01] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:51:42] <theskillwithin> my sample came from stats from only 10k users
[00:51:43] *** Quits: delvx (~arek@77.252.63.98) (Quit: WeeChat 3.3)
[00:52:20] <theskillwithin> or more i guess if i spread it out for a few weeks
[00:52:34] <theskillwithin> idk why but I hate google analytics
[00:52:45] <ljharb> hate all you like, it's the best
[00:52:56] <theskillwithin> yeah
[00:53:04] <theskillwithin> industry standard as well
[00:53:15] <theskillwithin> and its free
[00:53:46] <ljharb> yep
[00:53:54] <hassoon> 'evening
[00:54:32] <ljharb> !ugt
[00:54:32] <jellobot> ljharb, Universal Greeting Time (or UGT) is a convention that states when a user enters an IRC channel it is always morning and upon leaving it is always night, regardless of the actual physical locations of the users in the channel. http://www.total-knowledge.com/~ilya/mips/ugt.html
[00:54:49] <hassoon> ljharb: me
[00:54:51] <hassoon> * meh
[00:54:59] <ThePendulum> /meh
[00:55:03] <ljharb> you h, all right, h-assoon
[00:55:23] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:55:27] <hassoon> indeed irc clients should support a /meh command
[00:55:55] * theskillwithin meh
[00:56:02] * ljharb h
[00:56:21] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[00:56:57] <gkatsev> lol
[00:58:39] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[01:04:45] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[01:07:46] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[01:09:26] <theskillwithin> I'm tempted to get the new MBP instead of waiting for the new mac pro which will probably cost more than 2x as much
[01:09:44] <phantomotap> mbp?
[01:09:48] <theskillwithin> macbook pro
[01:10:46] <phantomotap> oh. sorry. i didn't read that sentence right.
[01:11:14] <theskillwithin> I have the trash can mac pro from 10 years ago and it still works fine,  but itching to upgrade
[01:11:59] <phantomotap> wow. ten years is a long time even for me to hold on to a laptop.
[01:13:02] <gkatsev> 2013
[01:13:16] <theskillwithin> well the mac pro's last longer than the laptops
[01:13:23] <theskillwithin> but cost a lot more
[01:13:35] *** Quits: src (~src@user/src) (Ping timeout: 260 seconds)
[01:13:42] *** Quits: tex (~super@user/dix) (Ping timeout: 244 seconds)
[01:13:51] *** Quits: cparker (~cparker@c-76-127-239-113.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[01:14:07] <theskillwithin> gkatsev hehe im rounding up
[01:15:05] <gkatsev> I just ugpraded my 12 year old desktop
[01:15:07] <ljharb> laptop > desktop
[01:15:20] <phantomotap> ++
[01:15:31] <ljharb> people who think they need a desktop because it's more powerful are the same people that think they need trucks to haul a lot of "nothing" around town
[01:15:50] <ljharb> and with a laptop you can take it when you need to, like on a trip or to the couch or something
[01:15:55] *** Quits: pmercado (~pmercado@190.22.168.79) (Ping timeout: 260 seconds)
[01:16:00] <theskillwithin> work provides me a laptop already, so for my home computer makes sense to have a desktop
[01:16:08] <ljharb> why does that make sense
[01:16:14] <ljharb> i have two laptops sitting in front of me rn, works great
[01:16:44] <ljharb> i keep my work and personal stuff somewhat separate, so having a desktop for personal stuff would mean i couldn't do personal stuff anywhere else
[01:16:45] <ljharb> which would suck
[01:18:10] <theskillwithin> the only thing that would suck is if it needs to spin up the fan to support 2 4k monitors and heavy builds
[01:19:07] <systemfault> A desktop is only good if you're a PC gamer... otherwise, it's just bad.
[01:19:32] <ljharb> theskillwithin: lol what are you building that's heavy
[01:19:40] *** Joins: sillyslux__ (~silly@user/silly)
[01:19:55] <ljharb> or is this one of those "why do you have a truck? are you hauling big stuff?" and they say "i help someone move every year or two!"
[01:19:59] <ljharb> conversations
[01:20:17] <theskillwithin> my coworkers who use laptops complain about fan at full speed all the time, and lag
[01:20:24] <ljharb> then they have a shitty laptop probably :-p
[01:20:39] <theskillwithin> this new laptop is deff more powerful
[01:20:40] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com)
[01:20:41] <ljharb> or they cheaped out
[01:22:26] <theskillwithin> gatsby builds can be pretty heavy if your processing thousands of images on build
[01:22:53] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:23:05] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 265 seconds)
[01:23:24] <ljharb> lol but why are you doing that
[01:23:35] <ljharb> even airbnb doesn't process more than a thousand images on build
[01:24:28] <theskillwithin> thats different, gatsby is more for static sites
[01:24:48] <theskillwithin> you probably have a lot of images pre-optimized
[01:25:17] <ljharb> and why wouldn't you
[01:25:17] <theskillwithin> and it also creates the like blur up/svg trace/etc preloader for the image
[01:25:27] <ljharb> if your images are committed to the repo why not just pngcrush them in situ
[01:25:28] <ljharb> once
[01:25:35] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com) (Ping timeout: 264 seconds)
[01:25:49] <theskillwithin> images are in contentful
[01:26:30] <ljharb> so optimize them and replace them in contentful
[01:26:39] <ljharb> why do the work a billion times if you could do it once
[01:26:57] <theskillwithin> its just how gatsby works
[01:27:04] <Maxdamantus> I'm still using a desktop for now, partly because I have a lot of harddrives, but also because I don't want to upgrade every two years.
[01:27:22] <Maxdamantus> I bought a fairly high-end laptop 5 years ago and can't imagine using it for anything serious nowadays.
[01:28:25] <ljharb> 3-4 years is the max time before upgrading a computer
[01:28:36] <Maxdamantus> I only replaced my not-even high-end desktop of 7 years last year, because of some sort of power failure that seemed to destroy either the motherboard or CPU.
[01:29:26] <Maxdamantus> Right, and so far my upgrade cycle for desktops has been 6 or 7 years.
[01:29:41] <theskillwithin> you probably don't use mac tho
[01:29:44] <Maxdamantus> If I were using laptops, I would probably have to do it much more frequently.
[01:30:02] <ljharb> windows needs replacement sooner than macs do
[01:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:22] * Maxdamantus doesn't use Windows or Mac.
[01:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:31:24] <theskillwithin> ljharb what monitors do you use?
[01:32:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7) (Quit: Client closed)
[01:32:04] *** Quits: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[01:32:07] <Maxdamantus> Also, even when I did upgrade my desktop, I'm still using the same case.
[01:32:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7)
[01:32:18] <theskillwithin> one of my monitors is https://www.amazon.com/gp/product/B07NS7JKJH  and another one is outdated and I need to upgrade
[01:32:37] <Maxdamantus> and monitors, of course.
[01:33:40] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[01:33:54] <phantomotap> Maxdamantus, assuming that means linux, what flavor do you use?
[01:34:09] <theskillwithin> I was thinking about getting a nice benq monitor but its like more than twice as much
[01:34:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6ccf:bc6:7bec:d17c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:35:12] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:6ccf:bc6:7bec:d17c)
[01:35:34] <Maxdamantus> phantomotap: currently debian, but with most software used by my active user installed through nix.
[01:37:02] <Maxdamantus> and for personal development, I normally just use a debian VM.
[01:40:35] *** Quits: hax (~hax@user/hax) (Remote host closed the connection)
[01:40:44] <theskillwithin> monitors for laptops can be tricky, because then there not running at native resolution
[01:40:51] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:40:53] *** Joins: hax (~hax@69.165.175.67)
[01:40:53] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[01:40:53] *** Joins: hax (~hax@user/hax)
[01:41:23] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:44:18] <Maxdamantus> You mean in terms of UI scaling, or in terms of having to go through something like DisplayLink which might not support full resolution?
[01:44:49] <theskillwithin> I think in terms of scaling, cuz thats what the setting is called I tweak
[01:44:55] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[01:45:13] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:45:53] <theskillwithin> "scaled resolution"
[01:45:54] *** Joins: pluri (~pluri@user/pluri)
[01:46:12] <Maxdamantus> Right. Theoretically that should be solvable, just a matter of specifying different DPIs for different monitors. Though so far I haven't got around to getting that to work properly.
[01:47:41] <Maxdamantus> My new laptop at work has a 3840x2160 internal display, which doesn't currently work very well alongside the 1920x1080 external displays I use. Haven't fully switched to using it yet.
[01:48:10] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[01:48:20] *** Quits: Guest43 (~Guest43@p200300c8cf2dff0069ff7208c1a11f02.dip0.t-ipconnect.de) (Quit: Client closed)
[01:48:29] *** Joins: Guest43 (~Guest43@p200300c8cf2dff0069ff7208c1a11f02.dip0.t-ipconnect.de)
[01:48:44] <Maxdamantus> at least on X11, the software I use (mainly Firefox) doesn't seem to support rescaling the UI depending on which display it's on.
[01:49:05] <phantomotap> i don't know of any software that does that *properly*.
[01:49:36] <Maxdamantus> I think I've read that Firefox does do it on Wayland, but haven't tried that.
[01:51:08] <phantomotap> you may be right. i haven't tried anything wayland yet so i have no ideas. i'm more or less stuck on openbox.
[01:51:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6ccf:bc6:7bec:d17c) (Ping timeout: 260 seconds)
[01:53:29] <Maxdamantus> I might end up just scaling the internal one down to 1920x1080, since I will probably still primarily use external displays (with an external keyboard/mouse) once I do switch.
[01:54:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[01:56:08] <Maxdamantus> The performance thing certainly still seems to apply to my work devices. Haven't tested it myself, but according to online benchmarks, I think the CPU in my new work laptop is basically on-par with the CPU in my 6-year-old work desktop.
[01:56:50] <Maxdamantus> and the laptop has less memory (though that might be acceptable given that it has a much faster SSD).
[01:58:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d13c:5504:c021:3627)
[01:58:57] *** Joins: jellobot2 (~jellobot@li334-26.members.linode.com)
[01:58:57] *** ChanServ sets mode: +v jellobot2
[01:58:57] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Killed (zirconium.libera.chat (Nickname regained by services)))
[01:58:57] *** jellobot2 is now known as jellobot
[01:59:40] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[02:00:30] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[02:01:32] *** Quits: jess (~jess@libera/staff/jess) ()
[02:08:04] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:84ec:9194:1039:8cc3)
[02:14:48] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[02:19:49] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[02:23:44] <ljharb> theskillwithin: i don't use any, my laptop screen is enough
[02:24:00] <ljharb> theskillwithin: i have my ipad stand above the laptop screen tho
[02:30:47] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[02:32:55] *** Quits: pizdets (~pizdets@183.182.111.255) (Ping timeout: 260 seconds)
[02:33:09] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:45] *** Joins: pizdets (~pizdets@183.182.110.228)
[02:34:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:34:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:34:53] *** Joins: wroathe (~wroathe@user/wroathe)
[02:46:23] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Quit: The_Jag)
[02:46:46] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 245 seconds)
[02:56:05] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[02:56:46] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[03:15:27] *** Joins: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it)
[03:17:56] <systemfault> I use my old Apple Thunderbolt Display I bought like 10 years ago... :/
[03:19:30] <systemfault> The front camera is pretty bad by today's standard... but it's still a 2560 × 1440 monitor, still better than 1080p
[03:20:20] <ljharb> those are nice monitors
[03:20:28] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:23:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[03:24:17] <ThePendulum> I got two Dell UltraSharp 23" 1080p IPS screens, been looking for an upgrade but I'm contemplating between 1440p and 4K. I'd go from 23" to 27", so the upgrade from 1080p to 1440p would be less impressive, but 4K is going to require fractional scaling which isn't great in linux, and demand a lot from games
[03:25:41] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[03:26:36] <Maxdamantus> I will probably upgrade one of my home displays to 4k if proper UI scaling works on Linux for Firefox/Chrome.
[03:28:26] <Maxdamantus> where "proper" basically just means it changes what the "GDK_SCALE" value is or whatever, depending on which display it's on (I don't rely on funny things like having a single window across multiple displays, though I might have multiple Firefox windows on multiple displays).
[03:29:32] <Maxdamantus> I suspect macOS already does that, since they've been using HiDPI displays for a while, but I've never really looked into it outside of X11.
[03:30:06] *** Quits: deadk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:30:55] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[03:31:37] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[03:31:41] *** Joins: edk (edk@libera/staff/edk)
[03:31:58] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[03:32:21] <theskillwithin> systemfault I think I have one of those same monitors!!! its like a 1440p monitor right?
[03:32:33] <theskillwithin> mine is about 10 years old as well
[03:32:40] *** edk is now known as deadk
[03:33:37] <systemfault> theskillwithin: Yeah, and it still works with my MBP using that Tbolt 2 -> 3 adapter
[03:33:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:34:25] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[03:36:22] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Client Quit)
[03:36:57] <theskillwithin> Its still holding up good for me, the only downside really is it has like an inch border around it
[03:38:35] <theskillwithin> I think having all your monitors be 4k might be overkill
[03:38:47] <theskillwithin> theres a performance hit
[03:40:54] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[03:41:04] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[03:41:25] <sillyslux__> there's 4k and 4k, i rather like to speak about sizes and dpi
[03:44:38] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d13c:5504:c021:3627) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:45:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d13c:5504:c021:3627)
[03:45:24] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d13c:5504:c021:3627) (Client Quit)
[03:54:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[03:59:00] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:08:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[04:10:44] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[04:15:06] *** Quits: dmanto (~dmanto@host128.190-231-77.telecom.net.ar) (Ping timeout: 245 seconds)
[04:23:19] *** Quits: thetoloachekid (~ttk@189.147.239.212) (Ping timeout: 244 seconds)
[04:23:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:25:20] *** robyndrake is now known as learningbot
[04:28:17] *** Parts: learningbot (~robyndrak@user/robyndrake) ()
[04:29:08] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[04:31:55] *** Joins: realies7 (~realies@user/realies)
[04:32:51] *** Quits: realies (~realies@user/realies) (Ping timeout: 260 seconds)
[04:32:51] *** realies7 is now known as realies
[04:33:27] *** Quits: Guest43 (~Guest43@p200300c8cf2dff0069ff7208c1a11f02.dip0.t-ipconnect.de) (Quit: Client closed)
[04:34:31] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:37:19] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:37:49] *** Joins: Intelo (~Intelo@88.246.77.74)
[04:38:45] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:44:23] *** Joins: ferdna (~ferdna@user/ferdna)
[04:44:33] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:45:06] *** Joins: Deide_ (~Deide@217.155.19.23)
[04:47:16] *** Quits: Deide_ (~Deide@217.155.19.23) (Changing host)
[04:47:16] *** Joins: Deide_ (~Deide@user/deide)
[04:47:31] *** Deide_ is now known as Deidde
[04:50:47] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[04:50:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[04:54:19] *** Quits: realies (~realies@user/realies) (Ping timeout: 260 seconds)
[04:55:45] *** Quits: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net) (Ping timeout: 265 seconds)
[04:58:38] *** Joins: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[04:58:54] *** Quits: Deidde (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:59:16] *** Quits: audiobirb (~audio@2603-8081-1800-1546-2a4e-13bb-e70f-f3f7.res6.spectrum.com) (Ping timeout: 245 seconds)
[04:59:21] *** Joins: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net)
[05:01:33] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:16:35] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[05:16:36] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:16:42] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[05:16:54] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:17:12] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:19:21] *** Quits: rveerman (~rene@2001:980:ed77:1:4ed8:deaa:2d35:e43b) (Quit: WeeChat 2.8)
[05:20:46] *** Joins: Alex123 (~Adium@47.176.169.186)
[05:22:22] *** Joins: realies (~realies@user/realies)
[05:22:45] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:27:54] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[05:28:32] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[05:35:40] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[05:37:52] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[05:40:23] *** Joins: Guest95 (~Guest95@113.166.72.126)
[05:46:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7) (Quit: Client closed)
[05:48:36] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:49:23] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[05:49:34] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:50:22] *** Quits: Alex123 (~Adium@47.176.169.186) (Quit: Leaving.)
[05:51:25] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Client Quit)
[05:53:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:53:30] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[05:56:20] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:00:26] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 260 seconds)
[06:01:31] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:02:11] *** Joins: audio (~audio@2603-8081-1800-1546-4c20-8f2a-933f-a559.res6.spectrum.com)
[06:03:41] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[06:05:23] *** Joins: Enissay (~Enissay@user/enissay)
[06:07:39] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:08:02] *** Joins: silly_ (~silly@user/silly)
[06:08:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:09:09] *** Joins: Rockwood (~Rocky@user/rocky)
[06:10:27] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:10:31] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[06:10:48] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 244 seconds)
[06:10:56] *** Joins: silly_ (~silly@user/silly)
[06:13:42] *** audio is now known as audiocat
[06:14:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[06:24:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:24:49] *** Joins: pmercado (~pmercado@190.22.168.79)
[06:25:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:25:38] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:25:38] *** Joins: wroathe (~wroathe@user/wroathe)
[06:29:16] *** Quits: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860) (Ping timeout: 245 seconds)
[06:31:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:35:52] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:37:03] *** Joins: Rockwood (~Rocky@user/rocky)
[06:39:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:40:40] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:43:20] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[06:44:47] *** Quits: Guest95 (~Guest95@113.166.72.126) (Ping timeout: 256 seconds)
[06:46:15] *** Joins: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl)
[06:47:04] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f511:4a27:3395:8d89)
[06:52:11] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:52:48] *** Joins: zyweo (~Svew@user/zyweo)
[06:58:30] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:59:21] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:59:22] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[07:03:52] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com)
[07:03:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:04:57] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-059d-66fa-1d81-0fa5.res6.spectrum.com)
[07:05:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:05:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:06:27] *** Joins: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860)
[07:07:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:07:35] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[07:09:56] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-059d-66fa-1d81-0fa5.res6.spectrum.com) (Quit: Leaving.)
[07:11:02] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[07:11:03] *** Quits: stiv3n (~stiv3n@107.182.237.15) (Ping timeout: 260 seconds)
[07:11:09] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:11:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[07:11:28] *** Joins: Rockwood (~Rocky@user/rocky)
[07:11:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:12:49] *** Joins: stiv3n (~stiv3n@107.182.237.15)
[07:17:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:18:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:23:26] *** Quits: audiocat (~audio@2603-8081-1800-1546-4c20-8f2a-933f-a559.res6.spectrum.com) (Ping timeout: 245 seconds)
[07:25:14] *** Quits: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:26:14] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:26:57] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:33:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:34:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:36:53] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:37:00] *** Quits: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860) (Ping timeout: 260 seconds)
[07:37:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[07:38:45] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:39:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:44:35] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:45:21] *** Quits: tnsi (~tnsi@075-128-103-056.res.spectrum.com) (Ping timeout: 244 seconds)
[07:45:36] *** Joins: tnsi (~tnsi@075-128-103-056.res.spectrum.com)
[07:54:41] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:55:40] *** Joins: Guest35 (~Guest35@183.82.77.17)
[07:59:52] *** Quits: w0ng (~w0ng@103.212.224.228) (Ping timeout: 260 seconds)
[08:08:01] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:f511:4a27:3395:8d89) (Ping timeout: 245 seconds)
[08:11:48] *** Joins: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860)
[08:11:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:12:39] *** Quits: pmercado (~pmercado@190.22.168.79) (Ping timeout: 260 seconds)
[08:13:36] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:14:09] *** Joins: nomic (~nomic@185.192.69.98)
[08:14:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:16:00] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7044:756:d99d:264e) (Quit: Leaving)
[08:16:11] *** Joins: zebrag (~chris@user/zebrag)
[08:21:39] *** Quits: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 265 seconds)
[08:25:18] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b)
[08:26:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:27:23] *** Quits: zeromule (~eric@2601:602:8d80:4e50:916f:cc7e:5c49:2860) (Ping timeout: 264 seconds)
[08:34:30] *** Parts: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) ()
[08:42:43] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:45:06] <ThePendulum> "The development of Git began on 3 April 2005.[16] Torvalds announced the project on 6 April and became self-hosting the next day.[16][17] The first merge of multiple branches took place on 18 April"
[08:45:26] <ThePendulum> this guy is more motivated than I am... he might be going places
[08:45:31] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b) (Ping timeout: 245 seconds)
[08:47:36] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:84ec:9194:1039:8cc3) (Quit: you are feeeling very sleeeeeepyy......)
[08:48:01] *** Joins: jazzy2 (~jaziz@user/jaziz)
[08:49:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:49:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[08:53:26] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:55:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:56:22] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[08:58:06] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[08:59:24] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[09:01:15] *** Parts: Nod0n[m] (~nod0nmatr@2001:470:69fc:105::211) ()
[09:03:03] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:05:25] <sickdyd> ThePendulum: damn, Git is fairly "young". I actually started using it a few years ago. What was being used previously?
[09:05:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:05:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:05:39] *** Joins: wroathe (~wroathe@user/wroathe)
[09:06:04] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:06:34] *** Quits: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (Quit: xsznix)
[09:07:38] *** Joins: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[09:08:11] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[09:08:54] <ThePendulum> sickdyd: it's inspired by BitKeeper which came around about 5 years earlier, and uninspired/unspires/despired/? by Concurrent Version System from the 80s. the requirements for git included "when I doubt, do the exact opposite of CVS"
[09:09:37] <ThePendulum> I briefly used subversion / svn but that's also from 2000, not sure if CVS was the main player before that
[09:10:07] <robertmaxrees> CVS, sourcesafe, and bitkeeper are others
[09:10:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[09:11:13] <robertmaxrees> good ol' svn.  quite a few (D)VCS out there.
[09:11:36] <ThePendulum> apparently one of the official meanings of git is "Goddamn idiotic truckload of sh*t"
[09:13:24] <ThePendulum> I was 5 in 2000 so I don't have much reference from what was the bees knees before that. I don't even know why I was using svn, this would've been 2007 or so, git would've been around
[09:14:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[09:18:37] *** Joins: w0ng (~w0ng@185.218.127.39)
[09:22:19] *** Quits: Guest35 (~Guest35@183.82.77.17) (Ping timeout: 256 seconds)
[09:24:38] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[09:29:13] <theskillwithin> I was 5 in 1994
[09:30:01] *** Joins: tex (~super@user/dix)
[09:30:03] <theskillwithin> graduated HS in 2007.    007 james bond
[09:36:01] *** Joins: mei (~mei@user/mei)
[09:39:25] <theskillwithin> im just old enuff to have remembered AOL
[09:40:38] *** Joins: thojanssens__ (~thojansse@ptr-178-51-118-44.dyn.mobistar.be)
[09:41:16] <theskillwithin> robertmaxrees You've got mail!
[09:43:57] <Maxdamantus> I was 7 or 8 in 2000, though I did use svn in university.
[09:44:42] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b)
[09:44:58] <Maxdamantus> I also figured out how to use git during university, and used git-svn from then on to interact with university repositories (other than the two or so that weren't already just git repositories)
[09:49:13] <theskillwithin> ugh Maxdamantus is younger than me, and smarter than me. fuck
[09:49:57] <Maxdamantus> I know the feeling.
[09:54:11] *** Joins: D4mned (~Dmnd@212.101.253.209)
[10:00:25] *** Joins: diophantoz (~diophanto@user/diophantoz)
[10:03:22] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[10:06:23] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com)
[10:09:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:11:37] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[10:19:08] <theskillwithin> im not js genius,  but give me any design, and ill make frontend from scratch
[10:19:47] <theskillwithin> also fuck component libraries,  ill write components from scratch
[10:20:46] <theskillwithin> meh thats just my job
[10:22:00] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 265 seconds)
[10:23:34] *** Joins: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[10:23:59] <D4mned> wew
[10:24:14] <D4mned> share ur repos to share the love man
[10:25:34] *** Quits: nomic (~nomic@185.192.69.98) (Quit: Leaving)
[10:26:26] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (Ping timeout: 260 seconds)
[10:27:01] <theskillwithin> https://youtu.be/6rhRPrcHyt4?t=189
[10:27:01] <skillbot> YouTube Title: The Black Keys - Thickfreakness (Full Album Stream)
[10:27:10] *** Joins: Rockwood (~Rocky@user/rocky)
[10:31:08] <theskillwithin> D4mned https://gist.github.com/theskillwithin/36d4c1016a5ef8d2cba0599be9b456a8
[10:32:01] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[10:32:40] <D4mned> cool thanks
[10:33:13] <theskillwithin> i could prob improve that now,  but like, can write from scratch instead of using component libasrary tabs
[10:33:25] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:88c2:b610:c323:81a)
[10:33:41] <D4mned> yeah
[10:34:14] <theskillwithin> when using component library, you paint yourself into a corner,  inside a black box
[10:34:27] <D4mned> true
[10:34:27] <theskillwithin> just do from scratch
[10:34:40] <D4mned> depends on ur project though
[10:34:46] <theskillwithin> yes
[10:35:01] <D4mned> resuing other peoples work isnt a bad idea
[10:35:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:35:16] <theskillwithin> correct
[10:35:35] *** Joins: Ilyu (~quassel@78.202.228.230)
[10:36:03] *** Quits: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Quit: Leaving)
[10:40:56] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:41:13] *** Parts: diophantoz (~diophanto@user/diophantoz) (Leaving)
[10:41:55] <fweht> hi, i just tried to translate an SVG via svg.js and it seems that they always apply a transformation matrix, is there an easy way to actually translate the coordinates of the points?  i mean it shouldnt be super hard to do it by hand but maybe there is a handy library for this?
[10:43:06] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:43:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi)
[10:44:08] <Maxdamantus> fweht: if you want something simple for creating/manipulating matrices, I'd go with gl-matrix.
[10:44:36] <fweht> Maxdamantus: even simpler, just add a constant value to every x-coordinate
[10:45:15] <Maxdamantus> fweht: well, since you're saying that the library uses matrices, it sounds like you need to construct a matrix that does that.
[10:46:09] <Maxdamantus> so with gl-matrix, you'd probably do something like: const mat = mat3.create(); mat3.fromTranslation(mat, [x, y]);
[10:46:20] <Maxdamantus> then you can pass in `mat` as your transformation matrix.
[10:47:26] *** Quits: tnsi (~tnsi@075-128-103-056.res.spectrum.com) (Ping timeout: 260 seconds)
[10:47:43] <fweht> yeah but this is not about interesting matrices, it just applies a simple translation matrix (but like it adds the matrix to the svg, you can do that apparently without touching the coordinates)
[10:47:45] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[10:47:47] <Maxdamantus> You could also just look at the source of `fromTranslation` and construct that matrx yourself: https://github.com/toji/gl-matrix/blob/master/src/mat3.js#L444
[10:48:05] <Maxdamantus> Ah.
[10:48:09] <fweht> the matrix is not the problem, its just about manipulating the coordinates vs adding an attribute
[10:48:57] <fweht> the svg then looks like this `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs" transform="matrix(1,0,0,1,-5,0)"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev/svgjs"><path xmlns="http://www.w3.org/2000/svg" d="M2...` (so the transformation is an attribute)
[10:51:17] *** Joins: tnsi (~tnsi@075-128-103-056.res.spectrum.com)
[10:51:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:146e:edfd:ccd9:4c5c)
[10:52:18] <Maxdamantus> Looks like there was at some point some `pathSegList` attribute which might have been able to access elements of the path, but looks like that doesn't currently work.
[10:52:38] <Maxdamantus> So the reliable thing would probably be to just parse the points and translate them yourself.
[10:54:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:54:17] <Maxdamantus> To do it correctly across an arbitrary SVG, you'd need something that lets you map over all points, taking into account any current transformation.
[10:54:21] <fweht> Maxdamantus: yeah think so too!
[10:54:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:56:32] <Maxdamantus> since if a path is already under some transformation matrix `m`, you'd need to project the points through `m`, then apply your desired transformation, then project it back through `1/m`.
[10:58:15] <fweht> Maxdamantus: yup, but i dont want to have any transformation matrix in the svg!  makes life only complicated, at least for simple translations
[10:58:18] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:58:30] <Maxdamantus> or equivalently, multiply your desired transformation matrix by `1/m` then project the points through that (dunno about whether your matrix is on the left or the right, I don't think about matrices very often)
[10:58:50] *** Joins: pluri (~pluri@user/pluri)
[10:59:07] <fweht> that was just the output of svg.js (which i assumed would perform the transformation directly on the coordinates)
[10:59:29] *** Quits: pluri (~pluri@user/pluri) (Client Quit)
[11:00:26] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[11:00:31] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-fc36-762a-4044-8514.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:00:36] *** Joins: pluri (~pluri@user/pluri)
[11:00:46] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:13] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Read error: Connection reset by peer)
[11:03:19] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[11:07:41] *** Joins: marek851[m] (~marek851m@2001:470:69fc:105::1:23c2)
[11:07:46] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[11:08:10] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[11:08:13] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:09:44] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Quit: leaving)
[11:10:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:11:50] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[11:14:50] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[11:15:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:34] *** s is now known as Skeleswant
[11:16:01] *** Parts: marek851[m] (~marek851m@2001:470:69fc:105::1:23c2) ()
[11:16:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:16:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:17:06] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:88c2:b610:c323:81a) (Quit: you are feeeling very sleeeeeepyy......)
[11:17:53] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:18:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:19:07] <OhTheCode> fweht - i've had this problem but didn't spend the time trying to fix it, check this out but i don't think it will fix it - https://codepen.io/leaverou/pen/RmwzKv
[11:19:24] <fweht> OhTheCode: cool, thanks a lot!
[11:19:57] <OhTheCode> fweht - i forgot about how to do matrix multiplication, i got the feeling that it can get pretty complicated
[11:20:25] <fweht> nonon its nots about matrix multiplication!  its just that svg.js does simple translations via transformation matrices
[11:20:33] <fweht> and id like to perform it directly on the coordinates
[11:22:16] <OhTheCode> transformations on co-ordinates , isn't that was like matrix multiplication.... good luck
[11:23:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:25:34] *** Joins: salad (~cucumber@86.121.64.41)
[11:26:53] <OhTheCode> i tried to do it in inkscape, it just adds transform attribute
[11:26:57] *** Joins: kogepan (~kogepan@user/kogepan)
[11:27:01] <OhTheCode> https://stackoverflow.com/questions/13329125/removing-transforms-in-svg-files
[11:27:48] <fweht> nono sorry if im using the wrong words, i mean if the svg contains `<circle cx="50" cy="50" r="40" stroke="green" stroke-width="4" fill="yellow" /> ` i it to change to `<circle cx="20" cy="50" r="40" stroke="green" stroke-width="4" fill="yellow" /> ` if the translation along x is -30 for example
[11:28:01] <PowaBanga> Hi, I am triyng to recover img in a value on this page : https://ddaynormandy.forumgaming.fr/h8-images1#titrespages So i did that, but it do not work : https://pastebin.com/raw/g5WWGhx3 ☹️
[11:28:16] <fweht> thanks for the stackexchange link!
[11:30:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:31:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi)
[11:31:39] *** Joins: pluri (~pluri@user/pluri)
[11:32:08] <OhTheCode> PowaBanga - what do u want to get - there are 9 images so idmgDOM[0].src will give the url of the first image
[11:33:44] <PowaBanga> ho, i was thinking that the log should answer all my table
[11:34:54] <OhTheCode> idmgDOM is an object with the info of the 9 images
[11:35:41] <pluri> is there any hack I can use to make jQuery trigger the .done() callback of an ajax request, when the browser tab is hidden? I've tried looping an audio file, but the .done() callback isn't performed until the tab is visible again.
[11:35:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:07] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 260 seconds)
[11:37:25] *** Joins: delvx (~arek@77.252.63.98)
[11:38:06] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[11:38:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:55] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:42:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:42:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:43:12] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:44:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:48:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:51:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[11:51:40] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:57:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:57:39] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:59:01] *** Joins: Naan (~Naan@user/naan)
[12:00:10] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:01:07] *** Quits: D4mned (~Dmnd@212.101.253.209) (Quit: Leaving)
[12:03:28] <velix> Doesn't tenary operator exist anymore in JS? container.style.background = ((map.getZoom() <= 11) ? 'rgba(0, 255, 0, 1)' : 'rgba(255, 0, 0, 1)');
[12:03:41] <velix> ah, typo. thanks
[12:06:35] <OhTheCode> velix - js is backward compatible, they can't take something away that worked before
[12:06:58] <velix> I was sleep drunk
[12:07:00] <velix> Yes, sorry.
[12:07:16] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[12:07:47] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:09:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:12:12] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 265 seconds)
[12:12:25] <delvx> OhTheCode: unfortunately
[12:12:57] <OhTheCode> its good and bad i think
[12:15:11] *** Joins: amcsi (~amcsi@2E6BC1DC.catv.pool.telekom.hu)
[12:15:18] <delvx> it's bad and necessary I'd say
[12:15:40] *** Joins: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de)
[12:19:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:20:00] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:21:11] <PowaBanga> ok thank you very much for your answer OhTheCode 🙂
[12:21:35] <PowaBanga> this help me very much 🙂
[12:21:59] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:d910:ef69:fa9b:b59c)
[12:22:11] <OhTheCode> no problem
[12:22:51] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:25:48] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[12:33:29] <hassoon> 'morning
[12:40:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:41:37] *** Joins: paule32 (~paule32@user/paule32)
[12:44:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[12:47:33] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-44c8-9d91-ebf0-9dd5.res6.spectrum.com)
[12:47:38] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (Ping timeout: 246 seconds)
[12:48:31] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:52:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:57:59] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:d910:ef69:fa9b:b59c) (Ping timeout: 264 seconds)
[12:58:19] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[13:00:24] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:55e7:35aa:fff6:d4b8)
[13:01:59] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[13:03:05] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[13:24:21] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-44c8-9d91-ebf0-9dd5.res6.spectrum.com) (Quit: Leaving.)
[13:25:26] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-5464-73ae-0b70-823c.res6.spectrum.com)
[13:26:21] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:55e7:35aa:fff6:d4b8) (Ping timeout: 245 seconds)
[13:29:35] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[13:34:35] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 264 seconds)
[13:36:46] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b) (Ping timeout: 245 seconds)
[13:40:38] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[13:41:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:44:03] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-5464-73ae-0b70-823c.res6.spectrum.com) (Quit: Leaving.)
[13:44:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f0d7:b1d7:13ad:c435)
[13:45:06] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 245 seconds)
[13:45:32] *** Joins: delvx (~arek@77.252.63.98)
[13:46:49] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f0d7:b1d7:13ad:c435) (Client Quit)
[13:47:29] *** Joins: kmh (~kmh@2a00:6020:5004:6800:74ab:af57:2aa5:a7aa)
[13:49:19] *** Joins: Ilyu (~quassel@78.202.228.230)
[13:57:05] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[13:58:27] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:58:51] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 245 seconds)
[13:58:55] *** Quits: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:59:27] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:00:28] *** Joins: delvx (~arek@77.252.63.98)
[14:00:57] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[14:02:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Client Quit)
[14:02:46] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:03:34] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Client Quit)
[14:03:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:04:39] *** Quits: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Read error: Connection reset by peer)
[14:05:29] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[14:05:40] *** Joins: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[14:06:05] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[14:06:17] *** Joins: kenoba (~kenoba@user/kenoba)
[14:06:39] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[14:08:14] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[14:09:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Ping timeout: 260 seconds)
[14:09:44] *** Joins: kenoba (~kenoba@user/kenoba)
[14:11:17] *** Quits: konrados (~konrados@user-5-173-16-28.play-internet.pl) (Ping timeout: 244 seconds)
[14:13:33] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net)
[14:16:44] *** Joins: nomic (~nomic@185.198.243.251)
[14:17:22] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net) (Client Quit)
[14:18:34] *** Joins: stenno (~stenno@user/stenno)
[14:21:40] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:23:17] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net)
[14:24:35] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[14:25:04] *** Joins: hemstock (~hemstock@68.71.244.6)
[14:25:21] *** Quits: hemstock (~hemstock@68.71.244.6) (Client Quit)
[14:27:57] *** Joins: nomic (~nomic@185.198.243.251)
[14:28:28] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[14:28:47] *** Joins: nomic (~nomic@185.198.243.251)
[14:28:52] *** Joins: nomic2 (~nomic@185.198.243.251)
[14:28:52] *** Quits: nomic2 (~nomic@185.198.243.251) (Client Quit)
[14:29:41] *** Joins: nomic2 (~nomic@185.198.243.251)
[14:29:42] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[14:29:51] *** Quits: nomic2 (~nomic@185.198.243.251) (Client Quit)
[14:30:14] *** Joins: nomic (~nomic@185.198.243.251)
[14:33:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:35:24] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:36:34] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[14:36:48] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:40:35] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[14:45:06] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[14:47:59] *** Joins: hemstock (~hemstock@68.71.244.6)
[14:50:15] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[14:54:16] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:55:41] *** Joins: xhd (~xhd@165-73-119-36.ip.afrihost.capetown)
[14:57:26] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[14:57:49] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[15:00:49] *** Joins: incognito (~relativit@user/incognito)
[15:04:25] *** Joins: pycurious (~Adium@user/pycurious)
[15:06:35] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:07:35] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 264 seconds)
[15:07:53] *** Joins: lembron (~admin@user/lembron)
[15:09:31] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:09:49] <lembron> uhm, wasnt there a "extra name" for this 'csv-like json' construct? aka "{fields:[id, name, age], data:[[1, tom, 12], [2, dan, 13], ...]}"
[15:17:50] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[15:18:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:19:42] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[15:20:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[15:21:07] <FlorianBad> `const http = new XMLHttpRequest(); http.onreadystatechange = function(){ var s = this.readyState; ... };`  > Is it safe to use 'this' to get to the http object?
[15:23:14] <stenno> safe?
[15:23:17] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[15:24:11] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[15:24:13] <FlorianBad> stenno: well, in a sense "reliable / good practice"
[15:24:24] <FlorianBad> or "future-proof"
[15:24:45] <stenno> no, its not future-proof, just use fetch
[15:26:44] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 258 seconds)
[15:27:58] <FlorianBad> hmm, I see. But in the context of XMLHttpRequest, the usage of "this" would be perfectly fine here, right?
[15:28:23] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net) (Ping timeout: 256 seconds)
[15:28:47] <stenno> i don't really know, probably? i have been using fetch exclusively for the last years
[15:29:15] *** Joins: rannnn8888 (~rannnn888@bzq-79-178-144-104.red.bezeqint.net)
[15:29:24] <Alexendoo> In the context of event listeners in general, I prefer to reference the thing by its name rather than through `this`
[15:29:53] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 265 seconds)
[15:29:57] <stenno> var this = http.readyState ..
[15:30:00] <stenno> err
[15:30:08] <Alexendoo> Particularly relevant since most of the time the callbacks are arrow functions
[15:30:08] <stenno> var s = http.readyState
[15:30:25] <stenno> not in this case though so i was wondering
[15:30:43] <FlorianBad> Alexendoo: an you have no problem using that name within a function that will be executed async? Meaning that this name was declared outside of it.. It feels a bit weird too
[15:30:59] <FlorianBad> (meaning a callback)
[15:31:03] <Alexendoo> FlorianBad: Not at all, it's a normal closure
[15:31:25] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[15:31:51] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:31:53] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:31:58] <FlorianBad> ok
[15:32:05] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:32:38] <FlorianBad> I know everybody is doing it, I just feel strange about it, maybe because a callback is somewhat "detached" from where it was.... But I guess this is just a ....*feeling* lol
[15:32:45] <Deneb> when can you use .push() on an array? Sometimes it seems it works, other times you get an error saying .push() is not a function ?
[15:33:25] <Deneb> either it exists and works or it doesn't?
[15:33:58] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:34:08] <efdee> it always exists and works. if you get an error, you're trying to call 'push' on something that's not an array
[15:36:02] <Deneb> efdee: odd. I created and array content = new uint8Array([]); then tried content.push(x) and got an error. If I just do content = new arry[] then it works. I don't understand the difference. Sometimes when I copy the array to a file it shows text, other times it shows a list of comma separated numbers. Can't get my head around it.
[15:36:54] <Alexendoo> A Uint8Array is a separate thing from arrays
[15:37:09] *** Joins: src (~src@user/src)
[15:37:09] <Deneb> ok, I understand that uint9Attay is creating a specific type of array, just don't get why some arrays behave differently to others and you can or annot do certain things with them
[15:37:34] <Deneb> Alexendoo: oh? the type clearly states 'Array@ so its an array no?
[15:38:20] <Alexendoo> In a conceptual sense it is, but it's not a javascript Array
[15:38:49] <Deneb> I understand its a thing called a 'typed array' but what does that mean 'not a javascript array' ? even more puzzled now?
[15:39:50] <efdee> it's stupid terminology. uint8array, float32array, etc are all arraybuffers. arraybuffers have a fixed length so it doesn't make sense to have "push"
[15:40:02] <stenno> typed arrays behave more like C arrays
[15:40:11] <efdee> these are not what people mean when they say "array" in javascript though
[15:40:15] <Alexendoo> Deneb: Captial A Array, as in the thing that [1, 2, 3] is
[15:40:53] <Deneb> ah I see. Yes, in C an attay is of fixed length. Of, so noted, so in JavaScript is any typed array fixed then?
[15:41:43] <stenno> they are fixed length, yes
[15:41:47] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer
[15:41:54] <stenno> The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer.
[15:42:44] *** Joins: Vishz (~Vishz@183.82.77.17)
[15:42:48] <Alexendoo> The typed arrays could have been called typed views or something to make it clearer
[15:43:26] <stenno> yeah typed arrays are basically views on array buffers
[15:43:32] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[15:43:58] <Deneb> stenno ok. So in this case I am picking up bytes from a process which I need to add to a container. I initially used a TextArea object, but that changes the data (line endings) so what I probably need is array[] as opposed to sometypeArray() ?
[15:44:27] <stenno> oh wait is this node.js ?
[15:44:37] <stenno> or browser js
[15:44:38] <Deneb> stenno: no, browser
[15:44:41] <stenno> ok
[15:44:49] <stenno> how are you getting the binary data?
[15:45:21] <Deneb> from a javascript emulator. It is essentially program code - 8-bit bytes.
[15:46:22] <Deneb> stenno the process emulates GPIB so sends the data one byte at a time. The receivng process known only to start receiving, read the sent bye and store it somewhere and do something with all received bytes when the signal is received that the process is complete
[15:46:41] <stenno> sounds like you need a stream
[15:46:43] *** Quits: prawnsa__ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[15:47:05] <Deneb> I initially put the bytes into a string and that worked, but I now need to develop this further to support binary data.
[15:47:42] <Deneb> the emulator is a javascript program that runs in the browser. I am writing an extension to it.
[15:48:05] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[15:49:10] *** Joins: pulse (~pulse@user/pulse)
[15:49:26] <stenno> can't you handle the data on receiving, put it in a view, handle it, and then save it to another data structure?
[15:50:16] <stenno> you can do a lot of really funky stuff in the browser with data views
[15:50:27] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:51:08] *** Joins: bomb (~bomb@user/bomb)
[15:52:54] *** Joins: voltage_ (voltage@user/voltage)
[15:53:35] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView
[15:53:42] <stenno> if that is really neccessary here
[15:54:47] *** Joins: crazyhorse (~crazyhors@193-115-124-81.tpgi.com.au)
[15:56:07] <Deneb> stenno: hmm, possibly. Interesting.
[15:56:11] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:56:11] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:57:38] *** Joins: pmercado (~pmercado@190.22.168.79)
[15:58:27] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[15:58:34] <zsoc> doesn't... "throttle" denote that the throttled thing gets dropped, and not just... delayed until later?
[15:59:33] <stenno> thats what i would understand of it
[16:00:08] <stenno> if it was delayed until later, it'd be debouncing, right?
[16:00:28] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 258 seconds)
[16:00:43] <zsoc> https://github.com/sindresorhus/p-throttle/blob/main/index.js
[16:00:56] <zsoc> Imagine my surprise, then (sorry for nearly unreadable code, it *is* sindre after all)
[16:01:08] *** Joins: Naan (~Naan@user/naan)
[16:01:39] *** Joins: delvx (~arek@77.252.63.98)
[16:01:55] <zsoc> it's just shoving the promises into the queue with an optional abort handler? how is that throttling anything.. that's closer to.. debouncing?
[16:02:27] *** Joins: Guest6219 (~Guest62@mail.bfc-net.de)
[16:02:49] <stenno> debouncing meaning collecting requests and bundling them into a single one after a delay
[16:03:20] <stenno> for me throttling means that once a function has been called in a certain interval, it cannot be called again -> the request gets discarded
[16:03:28] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[16:03:30] <stenno> s/requests/calls/ or w/e
[16:04:01] <zsoc> Yeah me too, although now looking at lodash's throttle, it has the same behavior. It queues it with an optional cancellation trigger? Either my life is a lie or some fucky things are happening. Or something that isn't either of those.
[16:04:09] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:04:15] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:04:45] *** Joins: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net)
[16:05:52] <zsoc> promise-throttle behaves the same way as p-throttle, with an entirely different implementation tho... queued with optional abort handler...
[16:06:17] <stenno> that spaghetti at p-throttle
[16:06:28] <lembron> uhm, wasnt there a "extra name" for this 'csv-like json' construct? aka "{keys:[id, name, age], data:[[1, tom, 12], [2, dan, 13], ...]}" -- some random stack says "compressed JSON" or "jsontable" but i believe ther is smth a little bit more "official" these days?
[16:06:29] <zsoc> I just want a throttle package that gives me the option to throw away the thing that's throttled lol. I don't think I'm asking for much.
[16:07:05] <zsoc> lembron: that.. would be valid json if there were double quotes around the keys and strings... no?
[16:07:58] <zsoc> arrays / lists are comma separated in JSON (and in a lot of formats, tbf)
[16:08:11] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[16:08:32] <lembron> zsoc sure with quotes, just to lazy for typing them out :D  - and yea whole point is that its still valid json, while removing the 80% wasted characters repeating the fieldnames
[16:08:44] <lembron> obvs. also only works with uniform data, hence table/csv like
[16:09:11] <zsoc> er... but it isn't *different* from JSON, it's just JSON and whatever is parsing it is contracted to handle the data in a certain way
[16:09:21] <zsoc> it's not "more compressed" so much as... you have to do extra work on the other side lol
[16:09:53] <zsoc> not to mention less human readable... which maybe is okay? i guess JSON isn't supposed to be, per se, but i always found it a bonus :p
[16:10:01] <stenno> zsoc: i wonder if the call actually get registered in p-threads, looking at strictDelay function
[16:10:34] <Decker> https://github.com/d3x0r/json6 handles the unquoted fieldnames... https://github.com/d3x0r/jsox would handle the unqouted string values; and also has tag support so you could do 'type{id,name,age} [ type{1,tom,12},type{2,bob.13},...]'
[16:10:37] <zsoc> stenno: the docs say strictDelay is just a more accurate but more resource intense way of calculating the timing (for timing precise needs)... so i didn't bother to look that hard. maybe i should have lol
[16:10:43] <Alexendoo> zsoc: the lodash one queues a single call, if you do five at once that are in the throttle-y period it throws 4 away
[16:10:43] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[16:10:47] <Decker> which defines the field names for any object later as tagged types sorta
[16:11:15] <stenno> zsoc: same goes for windowedDelay though
[16:11:40] <lembron> well, you CAN do extra work on the other side - if you verify fields are where oyu think they are you could just batch the rest (see for example grouped mysl-inserts)
[16:11:43] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:11:53] <zsoc> Alexendoo: That cool, but I want 0 queued lol. I basically want a function wrapper that throws away all calls if it's within the same N ms window as the last call. That has to be a tiny package... you're telling me i have to write it?
[16:12:11] <zsoc> why isn't ljh awake at 5am, i'm sure they would have an answer for me lol
[16:12:24] <lembron> jsox gets somewhat closer indeed - but im not looking for smth cutom / new - but "whats the slang-term for what i had above?"
[16:12:34] <lembron> cause i definitly have seen it out in the wild
[16:12:44] <stenno> zsoc: just pass limit = 1 ?
[16:12:45] <bomb> wait, what? ljharb is sleeping!?
[16:12:46] <zsoc> lembron: it seems like a serialized version of EAV almost? which is a database thing
[16:13:13] <zsoc> @stenno: i did
[16:13:17] <zsoc> stenno: OH, I DIDN'T TRY LIMIT 0
[16:13:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:13:29] <stenno> oh limit = 1 would be a 1-long queoe
[16:13:31] <stenno> queue
[16:13:33] <stenno> i see
[16:13:35] <stenno> yeah 0 makes sense
[16:13:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:14:07] <zsoc> The docs are just wrong. Limit is defined as "The maximum number of calls within an interval."
[16:14:14] <stenno> oh! duh
[16:14:14] <zsoc> but it's really "The maximum number of queued calls in an interval" lol
[16:14:17] <stenno> yeah
[16:15:19] *** Joins: Rockwood_ (~Rocky@user/rocky)
[16:15:44] *** Joins: salad (~cucumber@86.121.64.41)
[16:16:28] <zsoc> @stenno: you'll never guess what happens when I use limit: 0
[16:16:49] <Alexendoo> I'd guess nothing happens
[16:16:52] <stenno> it doesn't throttle at all
[16:17:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:17:24] <stenno> actually i know what would happen if i read the code
[16:17:54] <Alexendoo> if it's 0 calls per interval nought should run
[16:18:01] *** Quits: crazyhorse (~crazyhors@193-115-124-81.tpgi.com.au) (Remote host closed the connection)
[16:18:37] <zsoc> yeah i feel dumb for trying it first lol... just 8am things
[16:18:52] <zsoc> Should I even bother opening up an issue? maybe this is out of scope and i want a different word
[16:19:05] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[16:19:32] <zsoc> I had this problem once with a react form package, it couldn't submit forms. It had like 100 different hooks and api things and catches and yadda yadda... but i literally just wanted the form to post action to the server, via the browser's regular submit event
[16:19:51] <zsoc> Alexendoo: "should" maybe, but 0 behaves exactly like 1 :p
[16:20:09] <Alexendoo> ah
[16:20:21] <Alexendoo> Well I think that's a fair edge case to overlook tbf :P
[16:20:37] <zsoc> Am I using the wrong word? It's not rate limiting that I want. It's literally throttling. I don't know what I"m missing.
[16:20:39] <stenno> actually this sounds like the most likely usecase for throttling
[16:20:49] <stenno> just once
[16:21:01] <Alexendoo> It queueing all the calls is surprising to me though
[16:21:10] <stenno> does it really thoguh?
[16:21:21] <Alexendoo> Yeah it doesn't seem to drop any intermediate ones
[16:21:31] <zsoc> at this point i'm just going to store timestamp of execution and subtract against current time stamp per run lol
[16:22:11] <zsoc> let me ask github's code-stealing AI thing to write the function for me, see how many security holes i can create
[16:22:21] <Alexendoo> I guess throttling as in bandwidth works that way, so it's not a novel interpretation of the word
[16:23:07] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 260 seconds)
[16:24:08] <zsoc> It's true, but usually when someone is "throttling" (ala API calls) they really want rate limiting anyway lol (or some combination of X in Y Nms)
[16:25:06] <zsoc> Copilot wants me to use a magical function called pThrottle with a "concurrency" option... that's cute
[16:26:15] <zsoc> Ah there we go, yeah it wrote a function wrapper that checks subtracts two Date.now() against the ms param lol... okay then
[16:27:13] <Alexendoo> In my mind rate limiting is a category that throttling is part of
[16:27:16] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[16:28:19] <Alexendoo> Language, huh
[16:28:23] <zsoc> rate-limiting = how many tasks can be *started* in a certain window of time. It also doesn't talk about how many can still be running / run at once, depending on how long those things take.
[16:28:42] <zsoc> rate limiting, throttling, and concurrency, all have intermingling roles (at least as i understood their definitions before this morning lol)
[16:29:12] <ljharb> bomb: ?
[16:29:21] <ljharb> zsoc: what do you want
[16:29:28] <zsoc> i wasn't the one that pinged you, tbf
[16:29:35] <ljharb> lol i know
[16:29:46] <ljharb> zsoc: you're looking for "debounce" or "throttle"
[16:29:47] <bomb> LIES
[16:29:50] <ljharb> the latter in this case, i think
[16:29:51] <zsoc> I want a throttle package to actually throttle, or give me the option to throttle. Every one I've looked at *queues* the throttled function
[16:30:09] *** Quits: rannnn8888 (~rannnn888@bzq-79-178-144-104.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:30:11] <ljharb> what `lodash.throttle` does is "actual" throttling
[16:30:19] <ljharb> that's what every interview question wants when they ask about throttling
[16:30:19] <zsoc> and gives you some abort handler with an option to cancel it... i don't want that, i just want it to throttle (or let me give it an option to queue 0 tasks)
[16:30:28] <zsoc> Then what is it i want?
[16:30:40] <ljharb> i have no idea
[16:31:09] <ljharb> tell me what you want again without using the word "throttle"?
[16:31:49] <zsoc> I want a function wrapper that allows a function to only run once ever Nms interval. If another function call happens before then, it's just dropped (and not queued anywhere to run at the end of the interval)
[16:32:01] <stenno> 'calling a function at most once in a certain interval, discarding all following calls'
[16:32:09] <zsoc> Not debounced (bundled with the other call) or throttled (into a queue somewhere)
[16:32:16] <ljharb> zsoc: ah ok
[16:32:33] <ljharb> zsoc: that's basically a tweak on throttle, but i've never had that use case because silently dropping things sounds horrific
[16:32:34] <efdee> when i throttle i usually want something to execute after a certain period of _not_ being executed
[16:32:40] <ljharb> everyone does
[16:32:43] <Decker> I usually let subsequent function calls bump the timer to fire later
[16:32:46] <zsoc> What I want is simple and I can write in 10 lines but... i thought this was obvious... and edge cases to avoid lol
[16:32:51] <stenno> efdee: thats debounce though?
[16:33:03] <efdee> stenno: yes, possibly so
[16:33:09] <zsoc> ljharb: it's a bot trigger that I don't want spammed :p
[16:33:55] <ljharb> zsoc: lol
[16:34:20] <samsch> zsoc, that sounds like a rate limit to me, just a silent one
[16:34:24] <Decker> let doing; if( !doing ) doing=setTimeout( ()=>{doing=null; /*do stuff*/}, nms );   10 lines?   Even if you add
[16:34:40] <Decker> if( doing ) clearTimeout() it's only like 3
[16:35:01] <Decker> hooray for single threadedness :)
[16:35:04] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:35:22] <zsoc> That's... definitely one implementation... very uh.. readable.
[16:35:38] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:35:45] <Decker> after you compile it it's even less readable
[16:36:06] <ljharb> zsoc: ok let's say `f` is the function. let fn = f; throttle(() => { try { return fn?.(); } finally { fn = null; } });`?
[16:36:10] <zsoc> i don't think i can have a conversation about compiling server side js on a tuesday morning
[16:36:12] <ljharb> forgot a backtick
[16:36:52] *** Joins: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl)
[16:37:35] <stenno> wonder if there's an elegant hof solution
[16:37:47] <stenno> but it kinda depends on external storage
[16:37:54] <zsoc> the half elegant solution is a small package that does what i want
[16:37:56] <stenno> or state rrather
[16:38:51] <zsoc> if by "external" you mean "the current timestamp"? which i'd much rather just... check, and keep the last one in the closure. Because a setTimeout is adding more timers to my env for no reason
[16:39:06] *** Joins: Guest4341 (~Guest43@p200300c8cf2dff005209dc5ffb43a83c.dip0.t-ipconnect.de)
[16:41:38] <stenno> i just mean a state which signifies that the function is currently not callable
[16:41:41] <stenno> like a boolean
[16:42:01] <zsoc> Gotcha. But with the idea that it will be a function wrapper.... we have state built in. Closures are cool and stuff.
[16:42:32] <zsoc> also why are like 25% of the packages i try to pull from npm distributed in ESM only and not transpiled down to any reasonable set of compatibility? is this okay now? the stuff i miss in a year of not being in the trenches...
[16:43:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:43:49] <stenno> zsoc: dunno how you are supposed to use closures for mutable state lol
[16:44:26] <stenno> const withThrottle = (ms) => (f) => { if (!foo) { setTimeout(() => foo = true, ms); return f; }}
[16:44:31] <stenno> somthing like that
[16:45:08] <zsoc> stenno: https://gist.github.com/jkantr/bb0c080846a81fe2008ba88c462eff98
[16:45:37] <ljharb> zsoc: you could also use a WeakSet
[16:45:39] <stenno> oh ok, fair
[16:45:54] <ljharb> zsoc: then when you remove the function from the WeakSet after calling it, it's gone, but when you add it and it's already there, it's ignored
[16:46:22] <zsoc> Oh that's pretty interesting, implementation wise.
[16:46:23] <Decker> how do you dispatch the weakset then? :)
[16:46:24] <ljharb> zsoc: so you'd basically do `if (!set.has(f)) { set.add(f); f(); } setTimeout(() => set.delete(f), delay)`
[16:46:30] <ljharb> Decker: dispatch?
[16:46:34] <Decker> n/m
[16:46:37] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[16:47:09] *** Quits: Covrus (~Covrus@user/covrus) (Quit: WeeChat 3.3)
[16:47:15] <notchris> o/
[16:47:17] <zsoc> what do i call this package... better-p-throttle obviously (i guess i could just fork the thing and add a no-queue option lol)
[16:47:28] <stenno> actual-throttle
[16:47:35] <stenno> to rub it in
[16:47:45] <stenno> and stirr some drama
[16:47:48] <notchris> thottle
[16:48:51] *** Quits: Vishz (~Vishz@183.82.77.17) (Ping timeout: 256 seconds)
[16:48:55] *** Joins: Covrus (~Covrus@user/covrus)
[16:49:01] <notchris> mornin stenno
[16:51:05] <stenno> hi
[16:53:16] <stenno> zsoc: sometimes i just forget about the existence of `let` :/
[16:53:35] <zsoc> I was so confused when you said stuff in a closure wasn't mutable lol
[16:54:34] <stenno> const withThrottle = (ms) => { let called = false; return (f) => called ? _=>_ : ((setTimeout(() => foo = true, ms),f)};
[16:54:51] <stenno> hmmm
[16:54:54] <stenno> not really lol
[16:54:57] <stenno> ah well whatever
[16:55:57] <notchris> https://notchr.is/notgame/
[16:56:43] <zsoc> imma be honest with you straight out of the game, it seems like a game
[16:56:47] <zsoc> s/game/gate/
[16:57:02] <stenno> or actually
[16:57:22] <efdee> notchris: welp there goes work for today
[16:57:34] <notchris> :O
[16:57:43] <notchris> dont worry i only made 3 levels and one impossible one
[16:58:01] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 245 seconds)
[16:59:08] <stenno> n> const withThrottle=ms=>{let c=false;return (f)=>c?_=>_:((setTimeout(()=>c=false,ms),f)}; const ft = withTrottle(20)(()=>1); [ft(),ft(),ft(),ft()]
[16:59:15] <jellobot> (timeout)
[16:59:16] <stenno> D:
[16:59:31] <stenno> oh gotta set true
[16:59:45] <stenno> n> const withThrottle=ms=>{let c=false;return (f)=>c?_=>_:((c=true,setTimeout(()=>c=false,ms),f)}; const ft = withTrottle(20)(()=>1); [ft(),ft(),ft(),ft()]
[16:59:46] <jellobot> (fail) SyntaxError: Unexpected token '}'
[17:00:16] <Decker> and that's readable? :)
[17:00:54] <stenno> yes, perfectly readable
[17:01:08] <stenno> totally not confusing at all and also working perfectly
[17:01:32] <Decker> lol
[17:01:52] <stenno> n> const withThrottle=ms=>{let c=false;return (f)=>c?_=>_:(c=true,setTimeout(()=>c=false,ms),f)}; const ft = withTrottle(20)(()=>1); [ft(),ft(),ft(),ft()]
[17:01:52] <jellobot> (fail) ReferenceError: withTrottle is not defined
[17:01:55] <stenno> last try
[17:02:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi) (Quit: Leaving)
[17:02:07] <efdee> yea the impossible level is kind of har
[17:02:08] <efdee> d
[17:02:27] <stenno> something like that at least
[17:02:29] <stenno> cba
[17:02:49] <stenno> i am like a cat, i try something, if it fails i claim that it didn't bother me in the first place
[17:02:54] <Decker> you don't need the bool - the result of setTimeout is not false
[17:03:32] <stenno> huh?
[17:03:40] <stenno> i am using comma operator here
[17:03:47] <stenno> return value is f
[17:03:54] <stenno> of the (..) construct
[17:05:45] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[17:05:48] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:08:18] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[17:08:26] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[17:08:57] <notchris> efdee: ill add more levels
[17:09:05] <notchris> its way more fun to code the game then to make levels
[17:09:11] <notchris> than
[17:16:20] *** Quits: kogepan (~kogepan@user/kogepan) (Quit: Leaving)
[17:16:27] *** Joins: kogepan_ (~kogepan@user/kogepan)
[17:16:54] *** Quits: kogepan_ (~kogepan@user/kogepan) (Remote host closed the connection)
[17:17:11] *** Joins: kogepan_ (~kogepan@user/kogepan)
[17:17:15] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[17:18:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:18:28] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[17:18:41] *** kogepan_ is now known as kogepan
[17:19:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:25:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:26:27] *** Joins: nomic (~nomic@185.198.243.251)
[17:27:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:32:05] <efdee> notchris: isn't that always the case. mechanics > content
[17:32:12] <notchris> yepp
[17:32:15] <notchris> ri
[17:32:16] <notchris> rip
[17:36:06] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[17:36:48] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:e38d:c3e8:c35a:a089)
[17:38:00] <iffraff> Hi I'm using cyrpress for e2e tests. regarding clean data sets, what do people here do? One thing you can do is have your data in a db container, stop and restart the container before each test. Another is you can run a drop db and recreate/seed db between each test. A third is you can randomize inputs. The first (for me) takes the longest ( ~14-18 seconds ), the second take ~10-12 seconds, the third feels really dirty to me.
[17:38:00] <iffraff> Are there other options? what do people prefer?
[17:38:25] *** Joins: sam_1 (~sam_1@87.51.251.118)
[17:38:34] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[17:41:29] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[17:42:08] *** Joins: justHaunt (~justache@user/justache)
[17:43:37] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-31e2-5508-09ab-38ae.res6.spectrum.com)
[17:44:10] *** Joins: pulse (~pulse@user/pulse)
[17:45:20] *** Joins: pycurious (~Adium@user/pycurious)
[17:45:36] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[17:45:43] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[17:45:43] *** ChanServ sets mode: +v jellobot
[17:46:48] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-31e2-5508-09ab-38ae.res6.spectrum.com) (Client Quit)
[17:48:17] *** Quits: mven (~mven@ip70-173-103-41.lv.lv.cox.net) (Ping timeout: 244 seconds)
[17:48:45] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[17:49:16] *** Joins: incognito (~relativit@user/incognito)
[17:50:51] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[17:51:28] <zsoc> TIL reassigning closure variables is not a thing
[17:51:47] <zsoc> i mean it's a thing, it just doesn't do anything useful lol - it should have been obvious but i've never thought it through. Mutation it is :p
[17:53:45] <samsch> hrm?
[17:54:04] <stenno> zsoc: wait!
[17:54:18] <stenno> so i was right all along :v
[17:55:06] <samsch> n> function a() { let v = 1; return (n) => { if (n == null) { return v; } v = n; } } const u = a(); u(4); console.log(u());
[17:55:10] <jellobot> (okay) 4
[17:55:35] <stenno> n> const foo = () => { let x = false; return () => { console.log(x); x = !x; }}; const t = foo(); [t(), t()]
[17:55:35] <jellobot> (okay) false true [ undefined, undefined ]
[17:55:38] <stenno> hmm
[17:55:40] <zsoc> oh no
[17:55:43] <stenno> works
[17:55:58] <stenno> actually thats a bad test
[17:56:04] *** Joins: voltage_ (voltage@user/voltage)
[17:56:21] <stenno> n> const foo = () => { let x = 23; return () => { console.log(x++); }}; const t = foo(); [t(), t()]
[17:56:21] <jellobot> (okay) 23 24 [ undefined, undefined ]
[17:56:32] <stenno> works
[17:57:02] <zsoc> But why does it work here and not... here. I am in the twilight zone. I see I'm having one of those mornings. Maybe it's meditation time lol.
[17:57:37] <samsch> Or food time
[17:57:48] <zsoc> Ah, it's because I am not very smart. I see. Thank you for the clarification. You might be right about the food thing, I don't eat in the mornings generally tho lol
[18:00:04] *** Joins: konrados (~konrados@user-5-173-144-8.play-internet.pl)
[18:07:43] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:09:57] *** Joins: sylario (uid115390@id-115390.tinside.irccloud.com)
[18:12:02] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[18:12:46] <ljharb> zsoc: huh? sure it's a thing
[18:13:34] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[18:18:23] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[18:20:30] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:22:15] <zsoc> yeah, it works how i originally expected it to... just this library was... reassigning the variable *outside* of the closure, which doesn't even make sense conceptually so I was not expecting it o.o
[18:24:57] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:25:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:25:33] <zsoc> But it makes an interesting point... which is this: https://gist.github.com/jkantr/9dcaece3e8d05ce45bd59831b07d5eff (if i wasn't clear before lol)
[18:26:53] <zsoc> although... maybe just obvious and not interesting - just confused me in the context i guess
[18:27:40] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 258 seconds)
[18:28:21] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:30:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:31:39] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:33:53] *** Joins: federico_it (~textual@176.206.87.127)
[18:34:33] *** Quits: xhd (~xhd@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[18:36:51] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:37:32] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:37:56] *** Quits: Guest6219 (~Guest62@mail.bfc-net.de) (Quit: Client closed)
[18:44:13] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[18:45:31] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 245 seconds)
[18:48:34] *** Joins: leviathan (~leviathan@199-83-221-152.PUBLIC.monkeybrains.net)
[18:50:06] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:54:07] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[18:55:16] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:e38d:c3e8:c35a:a089) (Ping timeout: 258 seconds)
[18:55:19] <qswz> https://twitter.com/cyrilauburtin/status/1453019778449395713
[18:55:27] *** Joins: iffraff (~quassel@136.49.178.170)
[18:55:38] <ljharb> qswz: btw get an irc bouncer
[18:55:55] <qswz> ljharb: yea I should some day, sorry for missing those offline messages
[18:56:33] <qswz> how's the bot going
[18:56:39] <qswz> let me ask him/her directly
[18:57:00] <qswz> n> ({x: 1)} |> %.x
[18:57:01] <jellobot> (fail) SyntaxError: Unexpected token ')'
[18:57:08] <qswz> n> ({x: 1}) |> %.x
[18:57:08] <jellobot> (fail) SyntaxError: Unexpected token '>'
[18:57:25] <qswz> b> ({x: 1}) |> %.x
[18:57:27] <jellobot> (okay) 1
[18:57:56] <qswz> b> ({x: 2}) |> %.x > %**2
[18:57:57] <jellobot> (okay) false
[18:58:02] <qswz> b> ({x: 2}) |> %.x |> %**2
[18:58:03] <jellobot> (okay) 4
[18:58:06] <stenno> wwhats that now
[18:58:13] <qswz> k, nuff with this toy operator
[18:58:15] <stenno> oh i see
[18:58:33] <stenno> is that pluck literal
[18:58:40] <qswz> b> #[1, 2][0]
[18:58:40] <jellobot> (okay) 1
[18:58:54] <qswz> b> #{x: 1}.x
[18:58:56] <jellobot> (okay) 1
[18:59:01] <stenno> b> #{...{a:23}}
[18:59:02] <jellobot> (okay) Record { a: 23 }
[19:00:04] <stenno> n> Array.from([1,2,3].entries().filter(([k,v]) => v % 2))
[19:00:06] <jellobot> (fail) TypeError: [1,2,3].entries(...).filter is not a function
[19:00:13] <qswz> b> #{x: 1} === #{x: 1}
[19:00:14] <jellobot> (okay) true
[19:00:34] <stenno> still no iterator helpers
[19:00:44] <qswz> ljharb said it's too early
[19:00:54] <stenno> well it is like that then
[19:00:55] <ljharb> it's not stage 3 yet, and it's still likely to change the names of stuff
[19:01:26] <qswz> https://github.com/ljharb/jellobot/pull/2#issuecomment-951147232
[19:01:31] <ljharb> and core-js's approach of just shipping shit is not something i want to reward :-) they already have to make a breaking change to drop TypedArray fromAsync, as of a 5 minute conversation in tc39 today
[19:01:58] <stenno> n> new Set([#[1,2,3]]).has(#[1,2,3])
[19:01:59] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[19:02:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[19:02:06] <stenno> b> new Set([#[1,2,3]]).has(#[1,2,3])
[19:02:07] <jellobot> (okay) true
[19:02:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[19:02:22] <qswz> b> let x=Symbol('x'); #{[x]: 2}
[19:02:23] <jellobot> (okay) Record {}
[19:02:29] <qswz> b> let x=Symbol('x'); #{[x]: 2}[x]
[19:02:29] <jellobot> (okay) undefined
[19:02:31] <ljharb> syntax is easier because it changes less often
[19:02:34] <stenno> no error?
[19:02:53] <stenno> b> #{foo: _=>'it doesnt work'}
[19:02:53] <ljharb> why would there be an error, records can have symbol keys
[19:02:53] <jellobot> (fail) Error: TypeError: cannot use a function as a value in a record
[19:02:55] <qswz> makes sens they only ccept string keys
[19:02:56] <stenno> ^ that
[19:03:04] <ljharb> stenno: symbols are primitives. functions are objects.
[19:03:15] <stenno> ooh right
[19:03:19] <stenno> ok
[19:04:33] <qswz> b> await async do { const v=timers.promises.setTimeout(1000).then(()=>2); v}
[19:04:34] <stenno> n> const foo = Object.assign({}, #{a: 23}); foo.a
[19:04:35] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[19:04:35] <jellobot> (okay) 2
[19:04:39] <stenno> b> const foo = Object.assign({}, #{a: 23}); foo.a
[19:04:40] <jellobot> (okay) 23
[19:04:50] <stenno> nice nice
[19:05:08] <qswz> n> Object.entries(#{a: 23})
[19:05:09] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[19:05:13] <qswz> b> Object.entries(#{a: 23})
[19:05:14] <jellobot> (okay) [ [ 'a', 23 ] ]
[19:05:17] *** Quits: KevinX (~KevinX@185.153.176.133) (Ping timeout: 244 seconds)
[19:05:38] <stenno> mixins will be cool with records/tuples
[19:05:39] <qswz> b> Reflect.ownKeys(Record)
[19:05:40] <jellobot> (okay) [ 'length', 'name', 'prototype', 'isRecord', 'fromEntries' ]
[19:06:27] <ljharb> mixins are gross and hopefully will never happen
[19:06:36] <ljharb> it's a bad pattern and it shouldn't be a thing
[19:06:52] <qswz> n> Record.fromEntries(Object.entries(JSON.parse('{"x":1}')))
[19:06:52] <jellobot> (fail) ReferenceError: Record is not defined
[19:06:56] <qswz> b> Record.fromEntries(Object.entries(JSON.parse('{"x":1}')))
[19:06:57] <jellobot> (okay) Record { x: 1 }
[19:08:01] <qswz> b> const {x} = #{x: 2}; x
[19:08:03] <jellobot> (okay) 2
[19:08:45] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:11:15] <stenno> ljharb: s/mixin/object decorator/
[19:12:17] <ljharb> stenno: same junk :-)
[19:12:32] <ljharb> protocols are good, mixins are bad, to be clear
[19:12:55] <stenno> isn't that part of monads
[19:13:17] <stenno> oh hm not quite
[19:13:21] <systemfault> Saying the M-word here... :/
[19:13:32] <stenno> n> const withIt = (obj) => Object.assign(obj, #{[Symbol.asyncIterator]: async function* () { yield* Object.entries(this) }}); const bla = withIt({a: 23});
[19:13:33] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[19:13:58] <stenno> b> const withIt = (obj) => Object.assign(obj, #{[Symbol.asyncIterator]: async function* () { yield* Object.entries(this); }}); const bla = withIt({a: 23});
[19:13:59] <jellobot> (okay) [Function (anonymous)]
[19:13:59] *** Square is now known as Sqaure
[19:15:11] <stenno> b> const withIt = (obj) => Object.assign(obj, #{[Symbol.asyncIterator]: async function* () { yield* Object.entries(this); }}); const bla = withIt({a: 23}); bla
[19:15:12] <jellobot> (okay) { a: 23 }
[19:15:40] *** Joins: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[19:15:42] <stenno> b> const withIt = (obj) => Object.assign(obj, #{[Symbol.asyncIterator]: async function* () { yield* Object.entries(this); }}); const bla = withIt({a: 23}); for await (const x of bla) { console.log(x); }
[19:15:43] <jellobot> (fail) TypeError: Object is not async iterable
[19:18:21] <stenno> not my day today
[19:18:44] <qswz> n> const A=X=>class extends X{#a=1}, B=X=>class extends X{#b=2}; new class extends A(B(class{#c=3})){}
[19:18:46] <jellobot> (okay) {}
[19:21:07] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:21:09] <qswz> n> A=X=>class extends X{a=1}, B=X=>class extends X{b=2}; (new class extends A(B(class{#c=3; woop(){return [this.a+this.b+this.#c]}})){}).woop()
[19:21:10] <jellobot> (okay) [ 6 ]
[19:21:37] <qswz> doesn't work with all private fields
[19:22:46] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:23:34] <qswz> n> A=X=>class extends X{a=1}, B=X=>class extends X{#b=2}; class C extends A(B(class{})) { #c=3; woop(){return [this.a+this.#b+this.#c]}} new C().woop()
[19:23:35] <jellobot> (fail) SyntaxError: Private field '#b' must be declared in an enclosing class
[19:23:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[19:23:54] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:23:57] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[19:24:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:24:19] <stenno> b> const withIt = (obj) => Object.assign(obj, #{async* [Symbol.asyncIterator]() { yield* Object.entries(this); }}); const bla = withIt({a: 23}); for await (const x of bla) { console.log(x); }
[19:24:19] <jellobot> An async internal error occured: Only properties and spread elements are allowed in record definitions. (1:46)
[19:24:32] <stenno> oh of course
[19:25:12] <efdee> what is #{} ?
[19:25:26] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:25:33] <stenno> records / tuples
[19:25:40] <efdee> oh
[19:25:42] <qswz> b> #{} @ efdee
[19:25:43] <jellobot> efdee, Record {}
[19:25:47] <efdee> thanks
[19:25:47] <stenno> https://github.com/tc39/proposal-record-tuple
[19:25:48] <qswz> as it's name sys
[19:25:50] <qswz> says*
[19:28:51] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[19:29:06] *** Joins: Rockwood (~Rocky@user/rocky)
[19:29:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[19:31:01] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[19:31:35] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 264 seconds)
[19:33:32] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[19:33:41] <qswz> b> #[1,2] + #[6,2]
[19:33:41] <jellobot> (okay) '1,26,2'
[19:34:27] *** Quits: X-Scale (~ARM@31.22.144.14) (Ping timeout: 260 seconds)
[19:34:52] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[19:35:05] *** X-Scale` is now known as X-Scale
[19:35:10] *** Joins: Rockwood_ (~Rocky@user/rocky)
[19:37:03] <stenno> b> #[1,2].concat(#[3,4])
[19:37:04] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': Tuple { '0': 3, '1': 4 } }
[19:37:24] <stenno> wat
[19:37:55] <stenno> is that supposed to happen?
[19:38:04] <stenno> b> #[1,2].concat([3,4])
[19:38:05] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': 4 }
[19:38:11] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 264 seconds)
[19:38:16] <stenno> oh i see now
[19:38:27] <stenno> thats strange stil right
[19:39:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:27] <jaawerth> it looks weird but the logic makes sense to me, since array.concat takes arrays or values that it auto-wraps and doesn't convert iterables, so I would expect Tuple.concat to act the same for tuples. hwoever, with the literal syntax being so similar it does look counterintuitive
[19:41:26] <stenno> jaawerth: but the result in the first one should be similar to the second one at least?
[19:41:47] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[19:42:08] <stenno> #[1,2].concat(#[3,4]) should be #[1,2,#[3,4]] but it becomes #[#[1,2],#[3,4]]
[19:42:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:42:36] <stenno> n> [1,2].concat([3,4])
[19:42:37] <jellobot> (okay) [ 1, 2, 3, 4 ]
[19:42:56] <stenno> b> #[1,2].concat(...#[3,4])
[19:42:56] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': 4 }
[19:43:10] <qswz> b> [...#[1,2], ...#[3,4]]
[19:43:11] <jellobot> (okay) [ 1, 2, 3, 4 ]
[19:43:23] <stenno> doesnt make sense
[19:43:24] <qswz> b> Tuple.fromEntries([...#[1,2], ...#[3,4]])
[19:43:26] <jellobot> (fail) TypeError: Tuple.fromEntries is not a function
[19:43:39] <qswz> b> Reflect.ownKeys(Tuple)
[19:43:40] <jellobot> (okay) [ 'length', 'name', 'prototype', 'isTuple', 'from', 'of' ]
[19:43:47] <qswz> b> Tuple.from([...#[1,2], ...#[3,4]])
[19:43:49] <jellobot> (okay) Tuple { '0': 1, '1': 2, '2': 3, '3': 4 }
[19:43:56] <qswz> I never use concat anyway
[19:44:05] <stenno> but why does it behave the way it does here
[19:44:06] <qswz> always spread
[19:44:10] <stenno> #[1,2].concat(#[3,4]) should be #[1,2,#[3,4]] but it becomes #[#[1,2],#[3,4]]
[19:44:11] <jaawerth> hmm I see, yeah. Tuple.concat isn't auto-wrapping like array.concat does eh
[19:44:20] <qswz> because concat does nasty black magic
[19:44:41] <qswz> well, it auto flatten arrays
[19:45:12] <qswz> why did that add a .concat method to Tuple, that is the question
[19:45:16] <qswz> they*
[19:45:44] <qswz> b> Reflect.ownKeys(#[])
[19:45:45] <jellobot> (okay) []
[19:45:45] <ljharb> concat is glorious
[19:45:53] <jaawerth> that part makes sense to me since it's analogous to what it does for arrays, but then Tuple.concat is splitting up the array passed to it and treating its elements as individual ones, so it doesn't seem like a mirror of array.concat
[19:45:54] <ljharb> and it is a *good* thing that it works that way
[19:46:03] <ljharb> jaawerth: that's what array concat does.
[19:46:17] <ljharb> n> [1, 2].concat(3, [4, 5], [], [[6]])
[19:46:18] <jellobot> (okay) [ 1, 2, 3, 4, 5, [ 6 ] ]
[19:46:37] <jaawerth> well, I guess it's how you read it - I always read array.concat's behavior as flattening its own type/-like
[19:46:51] <ljharb> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]])
[19:46:52] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': Tuple { '0': 4, '1': 5 }, '3': Tuple {}, '4': Tuple { '0': Tuple { '0': 6 } } }
[19:47:00] <ljharb> ok so yeah that's not the same :-p
[19:47:07] <jaawerth> it's almost the opposite
[19:47:15] <ljharb> also the inspect output of that is terrible, but object-inspect doesn't handle nonexistent things yet
[19:47:17] <qswz> b> Object.getOwnPropertyNames(#[].__proto__)
[19:47:18] <jellobot> (fail) TypeError: Cannot convert undefined or null to object
[19:47:20] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[19:47:20] <Alexendoo> could be a bug in the transform
[19:47:31] <ljharb> b> #[1, 2].concat(3, [4, 5], [], [[6]])
[19:47:32] <jellobot> (fail) Error: TypeError: cannot use an object as a value in a record
[19:47:34] <qswz> b> Object.getOwnPropertyNames(Tuple)
[19:47:35] <jellobot> (okay) [ 'length', 'name', 'prototype', 'isTuple', 'from', 'of' ]
[19:47:38] <ljharb> b> #[1, 2].concat(3, [4, 5], [], [#[6]])
[19:47:38] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': 4, '3': 5, '4': Tuple { '0': 6 } }
[19:47:52] <ljharb> yeah something's wrong there
[19:47:55] <stenno> yay
[19:47:58] <stenno> i found a bug
[19:48:02] <jaawerth> wooo
[19:48:03] <ljharb> please go file it :-)
[19:48:08] <qswz> b> Object.getOwnPropertyNames(new Tuple())
[19:48:09] <jellobot> (okay) []
[19:48:15] <qswz> I suck
[19:48:16] <stenno> where do i have to file it to?
[19:48:21] <qswz> how can I display concat
[19:49:06] <stenno> and what _should_ #[1,2].concat(#[3,4]) give? is it #[1,2,3,4] or #[1,2,#[3,4]] ?
[19:49:17] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-58b5-e5b6-f2cd-d0d0.res6.spectrum.com)
[19:49:18] <qswz> I guess #1
[19:49:29] <qswz> n> [1,2].concat([3,4])
[19:49:30] <jellobot> (okay) [ 1, 2, 3, 4 ]
[19:49:35] <ljharb> stenno: i would expect `#[1, 2, 3, 4]`
[19:49:39] <stenno> right
[19:49:44] <ljharb> stenno: iow, that like array concat, it should unwrap one level only
[19:50:21] <samsch> Huh, I missed pipeline making it to s2
[19:50:36] <samsch> That was... a *looooong* time in stage 1
[19:50:44] <stenno> ljharb: which implementation is used? where can i submit an issue?
[19:50:53] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[19:50:58] <stenno> s/can/should/
[19:51:07] <ljharb> stenno: babel's monorepo i think
[19:51:11] <ljharb> samsch: many years
[19:51:18] <ljharb> samsch: hit stage 2 in the last meeting
[19:51:28] <samsch> \o/
[19:51:51] <stenno> 600 open issues
[19:51:56] <samsch> I think I figured out and then forgot which version of the proposal I liked better like three separate times
[19:52:29] <ljharb> stenno: that number is never meaningful
[19:52:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[19:53:16] <samsch> I wonder what the record is for longest time in 1+ stage that did eventually get advanced
[19:54:14] <stenno> ljharb: 'how are you using babel?' D:
[19:54:19] <jaawerth> hmm ljharb: is that actually behaving as defined going by https://tc39.es/proposal-record-tuple/#sec-isconcatspreadable or am I misreading the ? and ! notation there?
[19:54:52] <Alexendoo> The demo the proposal link works like that at least, so I assume it's a babel bug
[19:55:00] <Alexendoo> links
[19:55:09] <qswz> would be cool is 39 could be a TLD, tc.39
[19:55:38] <qswz> well ignorit
[19:56:01] <qswz> so file it to babybel
[19:56:30] <stenno> i am overwhelmed creating an issue for this
[19:56:34] <stenno> what a shame lol
[19:56:49] <Swahili> Q: I have a script that throws when an async call that sends some data is preceded with another async call. Wondering if it's my miss understand of javascript or the library. Does someone mind a quick look? Right at the bottom where the comments are https://paste.sh/CQBYKDDf#X6DrmiPsNDO4KHSseYNo806N
[19:56:53] <qswz> I ust wrote a beautiful return result?.response?.result?.importSummary?.successRowCount;
[19:57:19] <qswz> Swahili: that's a bit X/Y-iky
[19:57:49] <Swahili> qswz: tks for looking! x-y-iky, that does it mean? hard to follow you mean?
[19:57:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:58:11] <ljharb> stenno: come on, file it
[19:58:31] <qswz> Swahili: yea the async / await in the event handler here doesn't do much
[19:58:35] <ljharb> jaawerth: let me look
[19:58:50] <ljharb> jaawerth: that says records and tuples are always concat spreadable
[19:59:05] <stenno> ok
[19:59:09] <ljharb> unless Tuple.prototype[Symbol.isConcatSpreadable] is false, i guess
[19:59:12] <stenno> i will file a bug report regarding https://babeljs.io/docs/en/babel-plugin-proposal-record-and-tuple
[19:59:17] <qswz> Swahili: I mean I don't understand well what you want
[19:59:31] <efdee> Swahili: it would help if you include the actual error that you're getting
[19:59:47] <stenno> and i assume we are using the programmatic approach calling 'babel.transform' and 'babel.parse'
[19:59:50] <stenno> actually i can check this
[20:00:25] <stenno> yes it uses babel.parse
[20:00:26] *** Rockwood_ is now known as Rockwood
[20:00:55] <Swahili> qswz: efdee yeah sure, was mostly a sanity check. as the error seems specific to the library. I'll double check and share a proper question if I find something there.
[20:02:03] <ljharb> stenno: ohhh sorry didn't understand your question
[20:02:12] *** Quits: iffraff (~quassel@136.49.178.170) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:02:13] <ljharb> stenno: yeah you can just assume it'd work the same way with any transpilation mechanism tho
[20:02:20] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[20:06:37] <stenno> ljharb: can you give me `npx envinfo --preset babel`
[20:06:52] <stenno> i need it to describe the 'Environment' in the bug report
[20:08:45] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:09:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:10:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:10:49] <stenno> n> process.version
[20:10:50] <jellobot> (okay) 'v17.0.1'
[20:11:55] <ljharb> stenno: just put node 17, they don't need all that info. i'd have to run it inside the docker image and i can't easily do that
[20:12:02] <stenno> kk
[20:13:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:15:00] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:15:42] <stenno> b> #[1,2].concat(#[3,4],[5,6])
[20:15:43] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': Tuple { '0': 3, '1': 4 }, '2': 5, '3': 6 }
[20:15:55] <stenno> b> #[1,2].concat(#[3,4],[5,[6]])
[20:15:56] <jellobot> (fail) Error: TypeError: cannot use an object as a value in a record
[20:16:09] <stenno> :|
[20:18:25] *** Joins: matsaman (~matsaman@user/matsaman)
[20:19:08] <stenno> b> [1,2].concat(#[3,4],[5,[6]])
[20:19:09] <jellobot> (okay) [ 1, 2, Tuple { '0': 3, '1': 4 }, 5, [ 6 ] ]
[20:19:33] <stenno> b> #[1,2].concat(#[3,4],[5,#[6]])
[20:19:33] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': Tuple { '0': 3, '1': 4 }, '2': 5, '3': Tuple { '0': 6 } }
[20:19:36] <stenno> nice
[20:21:26] *** Quits: amcsi (~amcsi@2E6BC1DC.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[20:23:35] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[20:23:58] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[20:24:07] *** Joins: noarb- (~noarb@user/noarb)
[20:24:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:26:34] <kalen> now that class/new/this are mostly discouraged, what is the preferred way of creating module components outside of react/vue/svelte/etc? is it to return something like: export default function Component(props) { ... return Object.freeze({method1, method2, ...}); } ?
[20:27:39] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 260 seconds)
[20:28:27] *** Joins: delvx (~arek@77.252.63.98)
[20:29:31] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[20:29:50] <samsch> Outside of react/vue/svelte/[library that defines what "components" are], "components" is a very arbitrary and vague term.
[20:31:12] <kalen> then forget i used the term component, and just imagine i'm talking about what would typically be expressed as a "class Object" that's returned from a module.js file
[20:32:15] <samsch> No class-like thing at all. function exports only. Maybe a function which creates an initial state, and the other might take that state as an argument. No methods
[20:32:27] <samsch> More functional-ish programmin
[20:32:55] <kalen> right, so basically the example i provided? or do you have a slightly different pattern you use?
[20:33:20] <stenno> b> #[#[1]].flatten()
[20:33:21] <kalen> no methods, hmm
[20:33:22] <jellobot> (fail) TypeError: Tuple(...).flatten is not a function
[20:33:24] <stenno> b> #[#[1]].flat()
[20:33:25] <jellobot> (okay) Tuple { '0': 1 }
[20:35:34] <samsch> kalen, `function makeInitialState() { return { count: 1 } } function incrementCount(state) { return { ...state, count: state.count + 1 }; } module.exports = { makeInitialState, incrementCount }` That's one possible thing I might do. But tbh I don't have a "pattern" that I'd follow, more a bunch of various things I avoid.
[20:36:07] <kalen> what are the main things you like to avoid, aside from class/new/this
[20:37:22] <samsch> The things I write that are actually stateful are very few and far between, besides React components via hooks (where eventually it breaks down to a useState or third party hook like react-use useAsyncFn).
[20:37:24] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:98a0:181d:c4ff:b2ac) (Quit: Textual IRC Client: www.textualapp.com)
[20:37:38] <samsch> Any OO-like stuff I avoid.
[20:37:44] <kalen> interesting
[20:40:03] <kalen> so imagine you're writing a module that processes video files. it can parse metadata, strip tags, etc. my instinct is to create a video object with methods for parse() and stripTags() and properties like `.path`. but i'm guessing you'd avoid that and just have standalone functions like parseVideo(videoPath) and stripTags(videoPath)?
[20:40:53] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[20:40:57] <samsch> That would be fairly accurate, yeah.
[20:41:04] <kalen> hmm
[20:41:32] <samsch> From an instinctual point of view anyway
[20:42:15] <kalen> the object way just seems so nicely organized :/
[20:42:16] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[20:42:38] <kalen> functions all over the place is definitely more flexible, but seems really loosey-goosey
[20:43:39] <samsch> If they can be fully independent, you get the most benefit, because they can be in separate packages, and you can upgrade, deprecate, or do whatever to the individual parts with the least total chaos.
[20:45:01] <samsch> (Also, "fully independent" doesn't mean they don't share deps, and stuff that can be extracted from both can be upgraded for both simultaneously without touching the outward facing packages if it doesn't have any effect. And if you do a breaking change, you can update the outer packages incrementally.)
[20:47:15] *** Joins: c4017w (~c4017@209.52.68.8)
[20:47:15] *** Quits: stiv3n (~stiv3n@107.182.237.15) (Ping timeout: 260 seconds)
[20:52:12] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:52:22] <qswz> oh nice, tuple have .flat
[20:52:28] <qswz> that's what I wanted to check
[20:52:42] <qswz> b> #[].flatMap
[20:52:43] <jellobot> (okay) [Function: flatMap]
[20:52:46] *** Joins: incognito (~relativit@user/incognito)
[20:53:54] <qswz> man, you can build a whole company around a simple js lib https://react-query.tanstack.com/
[20:54:01] <qswz> but congrats to him
[20:54:51] <stenno> looks useful
[20:55:42] <qswz> it def is yea
[20:55:44] *** Joins: jazzy (~jaziz@user/jaziz)
[20:56:21] <qswz> basically eliminates your ugly useEffect/useState
[20:56:26] <stenno> yeah
[20:56:33] <sheetjs> tanner was involved in the early days of chartjs as well
[20:57:22] <sheetjs> qswz: you can build a consultancy around anything
[20:57:56] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[21:00:52] <efdee> the thing is that running a consultancy/training firm around a library creates conflicting interests wrt the usability and documentation of your library
[21:01:02] *** Joins: Junxter (~Junxter@121.237.60.100)
[21:01:31] *** Quits: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:57] <OnkelTem> Hi folks
[21:01:58] <sheetjs> it's javascript.  especially for web libraries, you have to be aggressive in deciding what to include and what to keep separate
[21:02:21] <sheetjs> if this were python, it would be ok to have a massive library that does everything
[21:02:31] <OnkelTem> Is there a way to maintain a package version using separate .version file instead of package.json?
[21:02:53] <OnkelTem> ("define maintain" they will say)
[21:02:53] <sheetjs> package.json has to have the version number
[21:03:19] <sheetjs> you can programmatically modify the package.json if you want to keep the source of truth elsewhere
[21:04:08] <sheetjs> OnkelTem: to expose the version in scripts, we generally write a small javascript file and inject it into the build
[21:04:17] <OnkelTem> I need to detect somehow if the version was updated using GitLab CI
[21:04:33] <sheetjs> why is gitlab ci changing the version number?
[21:05:11] <OnkelTem> No, it isn't. It just publishes the package. And it won't work if the version stays the same
[21:06:14] <sheetjs> then change it
[21:06:20] <OnkelTem> I mean... some time ago we bumped version inside CI. That looked like a good idea for some time but then I saw the bad parts
[21:07:04] <OnkelTem> So it's now up to a programmer to run 'npm run release'. But I'm not sure how to check if they do this
[21:07:14] <sheetjs> so why not check the remote and local version
[21:07:26] <OnkelTem> Hmm... how?
[21:07:27] <qswz> sheetjs: true, you're another example
[21:07:42] <sheetjs> remote version: `npm info $PACKAGE version`
[21:07:48] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:07:55] <OnkelTem> oh dear
[21:08:01] <OnkelTem> right! haha. Thanks sheetjs!
[21:08:15] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 260 seconds)
[21:08:15] *** Joins: Rockwood (~Rocky@user/rocky)
[21:08:33] <sheetjs> qswz: it has taken a life on its own
[21:09:26] <sheetjs> tanner probably gets a bunch of people who need general react help
[21:09:39] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: WeeChat 3.0)
[21:10:04] <stenno> n> ((c)=>c.replace(/\w/g,m=>(x='olzeasgtb'.indexOf(m),x<0?m:x)))('hello')
[21:10:06] <jellobot> (okay) 'h3110'
[21:10:34] <stenno> n> ((c)=>c.replace(/\w/g,m=>(x='olzeasgtb'.indexOf(m),x<0?m:x)))('leet hacker')
[21:10:36] <jellobot> (okay) '1337 h4ck3r'
[21:11:06] <sheetjs> on a side note
[21:13:03] <Pajus> omg
[21:13:12] <sheetjs> typescript supports snake case
[21:13:14] <sheetjs> https://github.com/microsoft/TypeScript/blob/main/lib/lib.webworker.d.ts#L3086
[21:13:50] *** Joins: silly (~silly@user/silly)
[21:15:55] <stenno> (c=>c.replace(/\w/g,m=>(x='olzeasgtb'.indexOf(m),x<0?m:x)))
[21:15:58] <stenno> can it be shorter?
[21:16:57] <stenno> c=>c.replace(/\w/g,m=>(x='olzeasgtb'.indexOf(m),x<0?m:x))
[21:18:03] *** Joins: delvx_ (~arek@77.252.63.98)
[21:18:19] <Alexendoo> sheetjs: stronger than that, it's from whatwg :p https://encoding.spec.whatwg.org/#example-end-of-stream
[21:18:38] <sheetjs> snake case ftw
[21:19:21] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:146e:edfd:ccd9:4c5c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:41] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 245 seconds)
[21:20:20] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:20:33] *** Joins: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl)
[21:28:09] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[21:30:41] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[21:32:23] <qswz> n> '_|\u00af|'.repeat(5)
[21:32:24] <jellobot> (okay) '_|¯|_|¯|_|¯|_|¯|_|¯|'
[21:32:55] <qswz> n> '_/\u00af\\'.repeat(5)
[21:32:56] <jellobot> (okay) '_/¯\\_/¯\\_/¯\\_/¯\\_/¯\\'
[21:33:08] <qswz> n> console.log('_/\u00af\\'.repeat(5))
[21:33:09] <jellobot> (okay) _/¯\_/¯\_/¯\_/¯\_/¯\
[21:33:11] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:33:43] <qswz> fun fact this "overscore" char is named the same as our president
[21:35:10] <qswz> I'd like a president that says bicycles have all rights on the road
[21:35:15] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[21:35:54] <qswz> a bit less than urgency vehicles, but more than all the filthy individual cars killing the environment
[21:36:15] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 265 seconds)
[21:36:56] <stenno> n> '\u223f'.repeat(5)
[21:36:57] <jellobot> (okay) '∿∿∿∿∿'
[21:37:44] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[21:38:17] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[21:39:28] <qswz> nice snake
[21:40:06] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[21:40:39] <qswz> ____ڪ
[21:42:20] *** Joins: haise01 (~haise01@user/haise01)
[21:44:57] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[21:45:35] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 260 seconds)
[21:49:28] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:c437:e03:5857:7143)
[21:50:55] <qswz> does snake case still allow capitals sometimes?
[21:53:35] <Alexendoo> You wouldn't for normal snake case, but there is SCREAMING_SNAKE_CASE
[21:54:00] <ljharb> indeed
[21:54:06] <ljharb> snake_case is gross tho
[21:54:56] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[21:55:18] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[21:58:08] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:59:21] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[22:00:33] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[22:02:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:04:40] <qswz> what's missing in useQuery is a dependencies array, a bit like useEffect
[22:05:02] <qswz> else I'm putting a key like 'shit'+JSON.stringify(..) to achieve this
[22:05:11] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-58b5-e5b6-f2cd-d0d0.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:05:19] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:146e:edfd:ccd9:4c5c)
[22:05:19] *** Joins: jbiggs (~AdminUser@mta.banff.ca)
[22:06:35] *** Joins: incognito (~relativit@user/incognito)
[22:07:50] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:18:49] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[22:21:21] <jaawerth> ljharb: this has obviously come up before but I'm curious how far you'll go with it - in your opinion is it inherently gross or gross specifically in JS since it breaks consistency with native and most userland APIs
[22:21:37] *** Joins: Rockwood (~Rocky@user/rocky)
[22:25:33] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[22:27:29] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:29:32] <systemfault> I disagree with snake_case being gross, it's probably the most readable convention there is... it's just that, IMHO, a good developer uses the conventions defined for the language they use.
[22:29:51] <jaawerth> I like snake_case in a vacuum, I just avoid it in JS because it clashes
[22:30:07] <jaawerth> but only when kebab-case isn't an option!
[22:30:11] <ljharb> jaawerth: certainly the latter for one
[22:30:18] <ljharb> jaawerth: but also i think aesthetically it's displeasing
[22:30:23] <systemfault> U wouldn't have any issue reading an entire book where all the spaces are replaced by underscores.
[22:30:33] <ljharb> obv i use snake_case in ruby or php, and would in python
[22:30:43] <systemfault> *I
[22:31:04] <ljharb> an entire book isn't comparable
[22:31:39] *** Joins: delvx_ (~arek@77.252.63.98)
[22:32:34] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[22:33:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:34:35] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[22:35:49] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:38:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:42:39] <stenno> ljharb: qswz  Alexendoo https://github.com/bloomberg/record-tuple-polyfill/pull/48
[22:44:27] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:10] *** Quits: jbiggs (~AdminUser@mta.banff.ca) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:46:28] *** Joins: jbiggs (~AdminUser@mta.banff.ca)
[22:46:34] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[22:46:57] <ljharb> stenno: lol nice
[22:47:05] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:47:12] <ljharb> not published yet tho
[22:47:20] <stenno> yep
[22:47:20] <ljharb> i'll ping them
[22:47:29] <stenno> it has been referenced in the issue already
[22:47:32] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[22:48:26] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[22:49:03] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[22:51:10] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[22:52:41] *** jazzy2 is now known as jazz-o-lantern
[22:52:46] <ljharb> link?
[22:54:12] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[22:57:06] *** Joins: delvx_ (~arek@77.252.63.98)
[22:57:15] *** Joins: irrgit (~irrgit@192.241.175.183)
[22:57:42] <stenno> ljharb: https://github.com/babel/babel/issues/13886
[23:00:21] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[23:01:02] *** Joins: pavonia (~user@user/siracusa)
[23:01:12] <ljharb> thanks
[23:03:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[23:04:27] *** jazz-o-lantern is now known as Guest3278
[23:04:35] *** jazzy2 is now known as jazz-o-lantern
[23:04:49] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 258 seconds)
[23:04:58] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[23:05:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:06:50] *** Quits: Guest3278 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[23:06:56] *** cthulchu is now known as cth
[23:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[23:09:41] *** Joins: X-Scale` (~ARM@31.22.167.71)
[23:10:11] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 258 seconds)
[23:10:52] *** X-Scale` is now known as X-Scale
[23:12:51] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[23:13:29] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-6001-f576-91fc-2e1b.res6.spectrum.com)
[23:15:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:18:23] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[23:19:11] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[23:26:12] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:26:38] <ljharb> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]])
[23:26:39] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': Tuple { '0': 4, '1': 5 }, '3': Tuple {}, '4': Tuple { '0': Tuple { '0': 6 } } }
[23:27:02] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:27:09] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:27:09] *** ChanServ sets mode: +v jellobot
[23:27:13] <ljharb> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]])
[23:27:15] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': Tuple { '0': 4, '1': 5 }, '3': Tuple {}, '4': Tuple { '0': Tuple { '0': 6 } } }
[23:27:18] <ljharb> hm
[23:27:43] <qswz> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]]).flat(3)
[23:27:44] <jellobot> (okay) Tuple { '0': 1, '1': 2, '2': 3, '3': 4, '4': 5, '5': 6 }
[23:28:15] <qswz> that's actually how concat should be
[23:28:20] <qswz> instead of magic unfolding
[23:28:35] <jaawerth> it's still magic unfolding, just differently
[23:28:47] <qswz> b> #[1, 2].concat(3, ...#[4, 5])
[23:28:48] <jellobot> (okay) Tuple { '0': Tuple { '0': 1, '1': 2 }, '1': 3, '2': 4, '3': 5 }
[23:29:07] <qswz> hm shit
[23:29:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[23:29:14] <qswz> still slightly buggy
[23:29:40] <ljharb> yeah
[23:29:48] <hassoon> tuple? thought that exists only in python
[23:30:33] <ljharb> hassoon: it's a proposal
[23:30:48] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[23:30:51] <hassoon> !mdn tuple
[23:30:52] <jellobot> hassoon, JavaScript data types and data structures - Programming languages all have built-in data structures, but these often differ from one language to another. This article attempts to list the built-in data structures available in JavaScript and what properties they have. These can be used to build other data structures. Wherever possible, comparisons with other languages are drawn. https://mdn.io/tuple
[23:31:06] <hassoon> oww for real..
[23:32:30] <ljharb> why "oww"
[23:33:20] <qswz> "Programming languages all have built-in data structures"
[23:33:32] <qswz> "these often differ from one language to another"
[23:33:51] *** Joins: delvx (~arek@77.252.63.98)
[23:34:00] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[23:34:03] <stenno> wise words lol
[23:34:19] <qswz> kinda obvious facts no?
[23:34:22] <stenno> yeah
[23:34:34] <qswz> cmon mdn, go straight in the action
[23:34:35] <Alexendoo> Maybe not if its your first language
[23:34:43] <ljharb> or if you're a java dev
[23:34:47] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[23:34:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[23:34:50] <ljharb> java devs think everything's java
[23:35:03] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:35:24] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:36:30] <matsaman> java devs wear adult diapers
[23:36:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Ping timeout: 256 seconds)
[23:37:18] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:47] <jaawerth> I feeling testing these using numbers in the value positions just makes it harder to read the output :P
[23:38:56] <jaawerth> b> #['a','b'].concat(['c','d'], #['e', 'f'])
[23:38:57] <jellobot> (okay) Tuple { '0': Tuple { '0': 'a', '1': 'b' }, '1': 'c', '2': 'd', '3': Tuple { '0': 'e', '1': 'f' } }
[23:39:03] <hassoon> meh never never heard of tuples in a javascript anyway
[23:39:11] <hassoon> javascript is about objects
[23:39:16] <hassoon> and that's good enough for me
[23:39:21] <jaawerth> it's a new spec proposal
[23:39:29] <hassoon> meh @ proposals
[23:39:53] *** Joins: rickbutton[m] (~rickbutto@2001:470:69fc:105::1:2465)
[23:39:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[23:39:56] <jaawerth> cool story
[23:40:02] <hassoon> sure it is
[23:40:24] <jaawerth> ljharb: anyway going back to the spec reading that seems broken then, since both tuple and other array-likes should end up flattening, right?
[23:40:32] <theskillwithin> Java is a ship port in Indonesia
[23:40:38] <ljharb> oops no i just failed to update the polyfill, one sec
[23:40:41] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:40:45] <ljharb> hassoon: JS is not about objects, half of the things are primitives
[23:40:48] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:40:48] *** ChanServ sets mode: +v jellobot
[23:41:05] <hassoon> theskillwithin: and a coffee type name afaik
[23:41:35] <hassoon> ljharb: sure primitives are present too, but objects are very popular
[23:41:41] <ljharb> lol
[23:41:42] <jaawerth> what I don't understand is that there are multiple repos on gh named jabbascript but not a single one of them is an ook-style esoteric compile-to-js language where you code like jabba talks
[23:42:23] <phantomotap> huttese i think
[23:42:26] <theskillwithin> theres a coffee called mocha java,  its a 50/50 blend of sumatra (indonesia) and ethiopian (mocha is the name of the ship port there)
[23:42:42] <hassoon> theskillwithin: i see, cool fact
[23:42:49] <jaawerth> good point I did not search for huttese. but jabbascript is *right there* come on
[23:43:01] <hassoon> jabbascript ?
[23:43:04] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:43:10] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:43:10] *** ChanServ sets mode: +v jellobot
[23:44:21] <jaawerth> yes I'm just surprised it hasn't been done insofar as I can tell given how much people like forking ook and also puns
[23:45:13] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:45:23] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:45:23] *** ChanServ sets mode: +v jellobot
[23:45:45] *** Joins: snedd (~snedd@86.14.114.137)
[23:47:12] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:47:18] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:47:18] *** ChanServ sets mode: +v jellobot
[23:48:16] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:48:23] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:48:23] *** ChanServ sets mode: +v jellobot
[23:49:04] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:49:39] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:49:39] *** ChanServ sets mode: +v jellobot
[23:50:02] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:50:16] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[23:55:30] *** Quits: Intelo (~Intelo@88.246.77.74) (Quit: Client closed)
[23:55:54] <ljharb> welp, frequent reconnects got the bot banned for 4 hours
[23:55:57] <ljharb> soooo it'll be back later
[23:56:20] <ljharb> somehow even though v0.0.4 of the R&T polyfill is installed, it's not updating the in-memory bot instance
[23:58:54] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[23:59:52] <stenno> ljharb: maybe you can ask for unban with the network ops
