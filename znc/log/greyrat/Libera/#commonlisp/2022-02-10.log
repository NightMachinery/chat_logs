[00:12:10] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) ()
[00:14:25] *** Quits: Guest4452 (~Guest44@95.175.104.154) (Ping timeout: 256 seconds)
[00:20:13] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[00:20:48] *** Joins: kpoeck (~kpoeck@2a01:598:91b7:2092:92c:dbb1:4146:b900)
[00:23:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 250 seconds)
[00:25:54] *** Quits: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it) (Remote host closed the connection)
[00:27:03] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[00:27:20] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[00:28:02] *** Quits: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it) (Client Quit)
[00:31:59] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[00:34:31] *** Joins: morganw (~user@80.225.24.132)
[00:47:01] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a0fc:a799:c64b:23c5)
[00:47:27] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47)
[00:51:25] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a0fc:a799:c64b:23c5) (Ping timeout: 240 seconds)
[00:55:11] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[00:57:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:02:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[01:22:03] *** Joins: dra (~dra@2a04:4540:6407:b000:11f6:2ee1:9b7c:4495)
[01:22:30] *** Quits: wacki (~wacki@87.122.91.145) (Quit: Leaving.)
[01:24:18] *** Quits: dra (~dra@2a04:4540:6407:b000:11f6:2ee1:9b7c:4495) (Remote host closed the connection)
[01:27:03] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[01:28:15] <jasom> ~s is your friend
[01:30:42] <AeroNotix> not my friend
[01:31:24] *** Joins: Guest4491 (~Guest44@95.175.104.154)
[01:32:07] *** Quits: kpoeck (~kpoeck@2a01:598:91b7:2092:92c:dbb1:4146:b900) (Quit: Client closed)
[01:41:31] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47) (Ping timeout: 250 seconds)
[01:42:30] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47)
[01:44:08] *** Quits: Guest4491 (~Guest44@95.175.104.154) (Quit: Client closed)
[01:44:34] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ff:95b4:ed73:4847:2d48:d42e)
[01:47:49] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47) (Ping timeout: 250 seconds)
[01:50:11] *** Joins: gaqwas (~john@dynamic-077-002-022-171.77.2.pool.telefonica.de)
[01:55:07] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ff:95b4:ed73:4847:2d48:d42e) (Quit: Leaving)
[01:59:20] *** Quits: cosimone (~user@93-34-133-254.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:03:49] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:11:16] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[02:13:03] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[02:13:06] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[02:16:12] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:21:41] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[02:28:24] *** Quits: gaqwas (~john@dynamic-077-002-022-171.77.2.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:35:17] *** Quits: hashfuncd0d (~user@162.254.115.155) (Ping timeout: 256 seconds)
[02:45:26] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 252 seconds)
[02:53:57] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:4100:dd4:ee5e:72a7) (Ping timeout: 240 seconds)
[02:58:49] *** Quits: pve (~pve@178-55-207-193.bb.dnainternet.fi) (Quit: leaving)
[02:59:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:03:57] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[03:09:31] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[03:20:45] *** Joins: alvaro121 (~aa@201.230.126.66)
[03:20:51] *** Quits: alvaro121_ (~aa@201.230.126.66) (Ping timeout: 256 seconds)
[03:25:01] *** Joins: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925)
[03:34:26] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[03:40:38] *** Quits: semz_ (~semz@user/semz) (Ping timeout: 260 seconds)
[03:48:00] *** Joins: semz (~semz@user/semz)
[04:01:53] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[04:02:50] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:06:37] *** Quits: leo_song (~leo_song@user/leo-song/x-7207016) (Read error: Connection reset by peer)
[04:10:12] *** Joins: leo_song (~leo_song@user/leo-song/x-7207016)
[04:12:11] *** Joins: linfocito (~linfocito@191.189.26.81)
[04:14:34] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[04:21:01] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:23:03] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[04:23:21] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:30:24] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:37:37] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[04:37:37] *** Quits: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net) (Remote host closed the connection)
[04:47:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[04:48:08] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[04:57:45] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:57:52] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[04:58:11] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[05:01:15] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:01:43] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:05:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[05:07:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[05:10:00] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[05:12:27] <AeroNotix> opinions: what is "the best" (your interpretation of) package to look at for good cffi API/bindings.. something which goes beyond just providing symbols for the raw functions to a bound library
[05:13:53] <AeroNotix> I've wrote a few packages like this and have never felt fully satisfied with the end product
[05:13:55] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:17:01] *** Joins: Brucio-61 (~Brucio-75@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[05:18:22] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:29:10] *** Quits: Brucio-61 (~Brucio-75@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:32:07] *** Joins: Brucio-61 (~Brucio-75@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[05:38:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[05:42:42] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[05:43:24] *** Joins: Rue (~rue@2001-b011-1000-1402-f4fe-f6f9-1dd3-9979.dynamic-ip6.hinet.net)
[05:46:00] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Quit: The Lounge - https://thelounge.chat)
[05:46:59] <jcowan> I use ex/vi for essentially all editing, including Lisp stuff.
[05:48:18] *** Parts: linfocito (~linfocito@191.189.26.81) ()
[05:50:56] *** Quits: Brucio-61 (~Brucio-75@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Remote host closed the connection)
[05:57:44] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[05:57:59] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[06:03:07] *** Joins: Brucio-61 (~Brucio-6@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[06:05:17] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[06:18:57] *** Joins: Josh_2 (~user@37.25.47.130)
[06:19:02] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[06:19:17] <Josh_2> With Jonathan how do I encode a <val>:false ?
[06:19:25] <Josh_2> nil is encoded as []
[06:28:19] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[06:31:00] <waleee> Josh_2: looks like :false ? https://github.com/Rudolph-Miller/jonathan/blob/master/src/encode.lisp#L257
[06:32:23] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:b92:1a0:165b:5914)
[06:32:42] <Josh_2> Seems to encode as "false" rather than false
[06:33:59] <Josh_2> Weird how t encodes as <val>:true while false <val>:"false"
[06:34:05] <Josh_2> nil as*
[06:34:34] <waleee> is jonathan in quicklisp?
[06:35:07] <Josh_2> Hmm perhaps I am just missing something
[06:35:54] <mfiano> https://sabracrolleton.github.io/json-review#encoding-symbols
[06:35:58] <mfiano> See (3)
[06:37:43] <mfiano> Seems you can dynamically bind *false-value* too
[06:38:21] <mfiano> Which you probably want to also change the empty array and nil bindings too.
[06:38:32] <mfiano> Welcome to the world of json, and why there are so many libraries.
[06:39:05] <Josh_2> *false-value* is for parsing
[06:39:24] *** Joins: pillton (~user@14-203-5-190.static.tpgi.com.au)
[06:40:29] <mfiano> Then yeah, write methods if you don't mind it screwing other things up, or use another library if you don't mind it screwing other things up.
[06:42:40] *** Joins: razetime (~quassel@49.207.198.36)
[06:42:49] <pillton> Has anyone seen/read any material which develops abstractions for probabilistic inference?
[06:50:08] <Bike> like bayesian stuff? dunno if i've seen software for that
[06:51:37] <mfiano> _death may have some interesting code laying around for that sort of thing.
[06:51:52] <pillton> Bike: Yeah. MIT has a probabilistic computing page but the paper list is huge.
[07:00:22] <Bike> i liked "An Introduction to Kolmogorov Complexity and Its Applications", but it's mostly theory and i don't know if that's what you want
[07:02:50] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:07:31] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[07:07:42] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[07:08:30] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Client Quit)
[07:11:48] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:41] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:16:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:20:57] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 240 seconds)
[07:21:19] <Josh_2> Is there a base36 library?
[07:21:47] <pillton> Bike: Thanks. I'll take a look.
[07:22:25] <pillton> Bike: I am more interested in modelling the computations rather than the theory.
[07:22:59] <Bike> not something i have practical experience with, i'm afraid
[07:24:30] *** Quits: AeroNotix (~xeno@185.107.67.252) (Quit: WeeChat 3.4)
[07:26:24] <pillton> Bike: No problem. I only ask here because of the wide range of backgrounds.
[07:26:57] <pillton> Sorry for the off-topic discussion. I didn't where else to ask.
[07:27:15] <pillton> I didn't know where else to ask*
[07:29:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:29:46] <Bike> not a problem
[07:31:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:34:05] <beach> Good morning everyone!
[07:40:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[07:42:56] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:e8ea:b48d:a0c7:7ddc)
[07:48:53] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:50:42] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[07:56:16] *** Joins: sloanr (~user@70-59-77-137.mpls.qwest.net)
[08:08:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:13:06] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:13:25] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[08:16:14] *** Joins: semz_ (~semz@user/semz)
[08:18:46] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:24:49] *** Joins: pingpongball (~pingpongb@43.228.192.100)
[08:27:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:28:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[08:29:54] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:31:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:34:47] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:36:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[08:48:10] *** Joins: wacki (~wacki@87.122.91.78)
[08:54:13] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[08:54:26] *** semz_ is now known as semz
[08:56:03] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[08:57:49] *** Quits: pingpongball (~pingpongb@43.228.192.100) (Quit: pingpongball)
[09:06:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:11:05] *** Joins: Oddity (~Oddity@user/oddity)
[09:17:37] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[09:34:32] *** Quits: sloanr (~user@70-59-77-137.mpls.qwest.net) (Ping timeout: 256 seconds)
[09:37:27] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:e8ea:b48d:a0c7:7ddc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:37:49] *** Joins: occ (~occ@user/occ)
[09:40:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:49:01] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[09:49:43] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[09:51:26] *** Joins: kathe (~kathe@49.33.236.127)
[09:51:34] <kathe> good morning everyone. :)
[10:01:23] *** Joins: pingpongball (~pingpongb@43.228.192.100)
[10:11:10] *** Quits: pingpongball (~pingpongb@43.228.192.100) (Quit: Client closed)
[10:28:01] *** Quits: kathe (~kathe@49.33.236.127) (Quit: Leaving)
[10:30:26] <qhong> what does the entry "foreign function __select" from sb-sprof mean? I don't think my code do any threading/asynchronous stuff
[10:32:50] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[10:33:08] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:36:56] *** Joins: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d)
[10:37:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[10:44:13] *** Joins: shka (~herr@109.231.0.226)
[10:52:54] *** Quits: dre (~dre@2001:8003:c932:c301:3356:3f6e:5d90:d014) (Quit: Leaving)
[10:53:48] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[10:54:50] *** Joins: karlosz (~karlosz@47.151.136.69)
[11:06:04] *** Quits: ahlk` (~user@2600:1700:31c0:3a10::43) (Remote host closed the connection)
[11:12:00] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[11:14:33] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[11:19:40] *** Joins: gaqwas (~john@dynamic-095-115-033-085.95.115.pool.telefonica.de)
[11:26:17] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[11:27:10] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9)
[11:27:11] *** Joins: pingpongball (~pingpongb@43.228.192.100)
[11:31:57] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[11:32:25] *** Joins: amb007 (~a_bakic@8.36.22.93.rev.sfr.net)
[11:33:38] *** Joins: foxfromabyss (~foxfromab@2a01:c22:359b:f500:f091:bd50:7991:d99c)
[11:35:06] *** Quits: foxfromabyss (~foxfromab@2a01:c22:359b:f500:f091:bd50:7991:d99c) (Client Quit)
[11:35:37] *** Quits: borodust (~irc@user/borodust) (Remote host closed the connection)
[11:38:06] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[11:41:40] *** Joins: ebrasca (~user@librepanther.com)
[11:49:02] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:56:26] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[11:57:48] *** Joins: Krystof (~user@81.174.155.115)
[11:57:59] <pingpongball> epony
[11:59:06] *** Joins: pve (~pve@178-55-163-48.bb.dnainternet.fi)
[12:00:37] *** Joins: ogamita (~pjb@2a01:cb11:8036:90c2:9d7d:7385:bf16:b209)
[12:01:03] *** Quits: phantomics (~phantomic@71-218-126-185.hlrn.qwest.net) (Ping timeout: 256 seconds)
[12:05:49] *** Joins: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de)
[12:07:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:07:51] *** Quits: pingpongball (~pingpongb@43.228.192.100) (Ping timeout: 256 seconds)
[12:08:14] *** Joins: occ (~occ@user/occ)
[12:12:03] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[12:12:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[12:12:06] *** Quits: amb007 (~a_bakic@8.36.22.93.rev.sfr.net) (Ping timeout: 260 seconds)
[12:12:26] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[12:12:37] *** Joins: amb007 (~a_bakic@229.149.22.93.rev.sfr.net)
[12:12:47] *** Joins: borodust (~irc@user/borodust)
[12:13:12] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[12:14:12] *** Joins: phantomics (~phantomic@71-218-115-230.hlrn.qwest.net)
[12:17:02] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[12:18:03] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[12:21:44] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[12:21:57] *** Quits: Brucio-61 (~Brucio-6@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:22:35] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[12:23:09] *** Quits: borodust (~irc@user/borodust) (Remote host closed the connection)
[12:25:54] *** Joins: borodust (~irc@user/borodust)
[12:29:09] *** Quits: borodust (~irc@user/borodust) (Remote host closed the connection)
[12:29:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:31:01] *** Joins: borodust (~irc@user/borodust)
[12:40:24] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[12:41:17] *** Quits: gaqwas (~john@dynamic-095-115-033-085.95.115.pool.telefonica.de) (Ping timeout: 256 seconds)
[12:41:35] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[12:44:15] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:44:38] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[12:48:05] *** Quits: occ (~occ@user/occ) (Read error: Connection reset by peer)
[12:48:13] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[12:51:19] *** Joins: dre (~dre@2001:8003:c932:c301:c29e:700:d5d3:6fcd)
[12:51:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:54:43] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 250 seconds)
[12:58:51] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Ping timeout: 256 seconds)
[13:05:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[13:07:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:09:17] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[13:10:12] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:14:43] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:16:10] <mfiano> Hello all.
[13:16:25] <mfiano> In a function of mine, I have an #'equal hash table, and I am checking if some key (a list) is present, if so, returning the value, and if not performing an expensive operation to calculate the value, before storing it and returning it...
[13:17:37] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Remote host closed the connection)
[13:19:22] *** Joins: kathe (~kathe@49.32.232.67)
[13:19:30] <kathe> hello everyone. :)
[13:19:30] <mfiano> A simple cache if you will. The key to test for is bound to a lexical variable stored with (list ...), and I would like to declare this variable as dynamic-extent for optimization purposes. In the second branch, the part that stores the key and calculated value if it doesn't exist, should I #'copy-list or #'copy-tree, and is this enough to not have any stack-allocated memory escape the
[13:19:32] <mfiano> function?
[13:21:05] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[13:21:48] *** Joins: treflip (~user@user/treflip)
[13:26:16] <saturn2> mfiano: you have to copy all otherwise inaccessible parts of your list
[13:26:42] <mfiano> Luckily they are not aggregate elements.
[13:26:46] <mfiano> Just symbols
[13:27:41] <saturn2> if they're interned symbols then copying the list structure should be enough
[13:28:02] <mfiano> Ok, thanks.
[13:34:14] *** Parts: kathe (~kathe@49.32.232.67) ()
[13:47:17] *** Quits: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d) (Ping timeout: 240 seconds)
[13:47:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[13:50:06] *** Joins: Guest4430 (~Guest44@95.175.104.154)
[13:51:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[13:54:18] <pingpongball> is there any package system like pip for python , npm-yarn for js, cargo for rust,
[13:54:19] <pingpongball> what is for common list?
[13:54:22] <pingpongball> p
[13:54:43] <jackdaniel> it is quicklisp, see quicklisp.org
[13:55:02] <pingpongball> oh ok.
[13:55:09] <pingpongball> thanks
[13:55:27] <jackdaniel> mind that in common lisp we call such libraries "systems" while a "package" denotes a namespace
[13:55:38] <jackdaniel> i.e a single system may have multiple packages
[13:55:59] <pingpongball> oh ok :)
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:56:42] <jackdaniel> quite unfortunate name given that it introduces plenty of confusion, but it is what it is
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:03:34] *** Joins: jack_rabbit (~knusbaum@23.249.37.254)
[14:03:37] *** Joins: mgxm (~mgxm@user/mgxm)
[14:03:41] *** Joins: ebrasca` (~user@librepanther.com)
[14:03:42] *** Joins: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot)
[14:03:54] *** Joins: ASau` (~user@lmpc.drb.insel.de)
[14:03:55] *** Joins: boro (~irc@user/borodust)
[14:04:18] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[14:06:00] *** Joins: jmpeax_ (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com)
[14:06:04] *** Joins: gjvc_ (~gjvc@user/gjvc)
[14:06:12] *** Joins: jackdani1l (~jack@turtleware.eu)
[14:06:15] *** Joins: utis_ (~utis@84.208.160.26)
[14:06:43] *** Joins: Dynom_ (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[14:07:07] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[14:07:12] *** Quits: jackdaniel (~jack@user/jackdaniel) (Killed (NickServ (GHOST command used by jackdani1l!~jack@turtleware.eu)))
[14:07:24] *** jackdani1l is now known as jackdaniel
[14:07:29] *** Quits: jackdaniel (~jack@turtleware.eu) (Changing host)
[14:07:29] *** Joins: jackdaniel (~jack@user/jackdaniel)
[14:07:29] *** ChanServ sets mode: +o jackdaniel
[14:11:02] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[14:11:02] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[14:11:02] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (*.net *.split)
[14:11:02] *** Quits: knusbaum (~knusbaum@23.249.37.254) (*.net *.split)
[14:11:02] *** Quits: phantomics (~phantomic@71-218-115-230.hlrn.qwest.net) (*.net *.split)
[14:11:02] *** Quits: amb007 (~a_bakic@229.149.22.93.rev.sfr.net) (*.net *.split)
[14:11:02] *** Quits: ebrasca (~user@librepanther.com) (*.net *.split)
[14:11:02] *** Quits: alvaro121 (~aa@201.230.126.66) (*.net *.split)
[14:11:02] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[14:11:02] *** Quits: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net) (*.net *.split)
[14:11:02] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[14:11:03] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (*.net *.split)
[14:11:03] *** Quits: utis (~utis@84.208.160.26) (*.net *.split)
[14:11:03] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (*.net *.split)
[14:11:03] *** Quits: dbotton (sid492350@lymington.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: froggey (~froggey@li1514-95.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: mgxm_ (~mgxm@user/mgxm) (*.net *.split)
[14:11:03] *** Quits: ASau (~user@lmpc.drb.insel.de) (*.net *.split)
[14:11:03] *** Quits: contrapunctus (a75f5b1571@jabberfr.org) (*.net *.split)
[14:11:03] *** Quits: stack1 (~stack@ctrl-c.club) (*.net *.split)
[14:11:03] *** Quits: cross_ (~cross@spitfire.i.gajendra.net) (*.net *.split)
[14:11:03] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[14:11:03] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (*.net *.split)
[14:11:03] *** Quits: jmpeax (~jmpeax@host-68-169-157-168.VALOLT2.epbfi.com) (*.net *.split)
[14:11:03] *** Quits: russe (~user@cl-user.org) (*.net *.split)
[14:11:03] *** Quits: les_ (~whome@user/les) (*.net *.split)
[14:11:03] *** Quits: TMA (~tma@twin.jikos.cz) (*.net *.split)
[14:11:03] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: materialfuture (~materialf@149.248.8.187) (*.net *.split)
[14:11:03] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[14:11:40] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[14:13:51] *** Quits: pillton (~user@14-203-5-190.static.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[14:16:13] *** Joins: amb007 (~a_bakic@229.149.22.93.rev.sfr.net)
[14:16:13] *** Joins: alvaro121 (~aa@201.230.126.66)
[14:16:13] *** Joins: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net)
[14:16:13] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[14:16:13] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[14:16:13] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[14:16:13] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[14:16:13] *** Joins: froggey (~froggey@li1514-95.members.linode.com)
[14:16:13] *** Joins: stack1 (~stack@ctrl-c.club)
[14:16:13] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[14:16:13] *** Joins: danieli (~danieli@user/danieli)
[14:16:13] *** Joins: Shinmera (~shinmera@shirakumo/shinmera)
[14:16:13] *** Joins: russe (~user@cl-user.org)
[14:16:13] *** Joins: les_ (~whome@user/les)
[14:16:13] *** Joins: TMA (~tma@twin.jikos.cz)
[14:16:13] *** Joins: hubvu_ (sid495858@tinside.irccloud.com)
[14:16:13] *** Joins: materialfuture (~materialf@149.248.8.187)
[14:16:13] *** Joins: skyl4rk (~tlvb@user/tlvb)
[14:17:24] *** Joins: phantomics (~phantomic@71-218-115-230.hlrn.qwest.net)
[14:21:05] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[14:30:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:33:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:44:27] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[14:44:28] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[14:44:51] *** Joins: specbot (~specbot@common-lisp.net)
[14:45:21] *** Quits: taiju (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925) (Ping timeout: 245 seconds)
[14:45:28] *** Joins: minion (~minion@common-lisp.net)
[14:46:27] *** Joins: Brucio-61 (~Brucio-6@2001:638:504:20e0:a511:8858:bc9:9aae)
[14:54:47] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[15:01:11] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:3c97:bf3a:3e4c:7eb2)
[15:02:12] *** Joins: frgo (~frgo@p548a3783.dip0.t-ipconnect.de)
[15:03:49] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9) (Ping timeout: 240 seconds)
[15:06:34] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9)
[15:09:29] <pingpongball> i was thinking what if someone replaced parens with indentation
[15:10:02] <phoe> pingpongball: you aren't the first
[15:10:29] <phoe> there was a recent fosdem talk by the lemweb duo at https://fosdem.org/2022/schedule/event/lispforeveryone/ that describes exactly the idea
[15:10:45] <pingpongball> :D
[15:10:46] <phoe> not strictly #commonlisp though, so #lisp might be a better place to discuss it
[15:10:55] <jackdaniel> pingpongball: suposedly the python author was so much dissatisfied with lisp that he designed python
[15:11:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:12:06] <pingpongball> oh Why did MIT replace the Lisp programming class with Python in their undergraduate CS curriculum? on quora i was on
[15:14:51] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:16:26] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[15:19:17] <phoe> pingpongball: #lisp or #lispcafe might be good discussion spots for that
[15:19:33] <phoe> #commonlisp is strictly on-topic with regard to Common Lisp the language
[15:25:02] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:25:03] *** Quits: Guest4430 (~Guest44@95.175.104.154) (Ping timeout: 256 seconds)
[15:25:21] *** Joins: occ (~occ@user/occ)
[15:27:05] <pingpongball> https://www.youtube.com/watch?v=p8-rZOCn5rQ
[15:27:25] <phoe> pingpongball: #commonlisp is strictly on-topic with regard to Common Lisp the language
[15:28:14] <beach> pingpongball: Please don't post links without a description of what we might expect if we follow it.
[15:28:41] <pingpongball> oh fav programming langauge :)
[15:30:16] <beach> pingpongball: Then, what phoe said (twice).
[15:30:32] <pingpongball> yes i'll not post :)
[15:30:44] <pingpongball> only talk common lisp
[15:37:18] <rotateq> pingpongball: And one day you can also not just speak but think in it. :)
[15:37:37] <pingpongball> :)
[15:38:01] <pingpongball> i'm currently learning  this lisp :)
[15:38:09] <pingpongball> pcl
[15:38:37] <pingpongball> rotateq , lets say if i finished basic common lisp, whats next?
[15:39:16] <pingpongball> it would be cool if i build something out of lisp
[15:41:40] <beach> pingpongball: Next, you learn idiomatic Common Lisp.  This can be done from more books like PAIP, Keene, etc., or it can be done by reading existing code.
[15:41:58] <pingpongball> example
[15:42:18] <jackdaniel> minion: tell pingpongball about paip
[15:42:18] <minion> pingpongball: paip: Paradigms of Artificial Intelligence Programming. More about Common Lisp than Artificial Intelligence. Now freely available at https://github.com/norvig/paip-lisp
[15:42:47] <pingpongball> oh ok thanks
[15:43:03] <pingpongball> i was interested and written so many things in python+pytorch, it would be cool there
[15:43:55] <rotateq> Oh this is one of those wonderful timeless books. :)
[15:46:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:46:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[15:50:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:52:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:58:12] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[15:58:49] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Quit: "bye :* ")
[15:59:54] *** Joins: notzmv (~zmv@user/notzmv)
[16:11:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[16:11:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:18:40] *** Joins: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se)
[16:18:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[16:20:26] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[16:20:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[16:20:54] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:20:54] *** boro is now known as borodust
[16:30:44] *** Quits: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[16:39:31] *** Quits: occ (~occ@user/occ) (Ping timeout: 245 seconds)
[16:42:13] *** Joins: VincentVega (~user@212.97.4.87)
[16:43:52] *** Joins: vcarvalho (~vcarvalho@161.230.15.110)
[16:46:47] <vcarvalho> Greetings! I'm new using common lisp, and was trying to use the cl-glfw3 system when i stumbled onto a problem with window-hint. There is also an issue in the repo https://github.com/AlexCharlton/cl-glfw3/issues/33, but when trying to use something of the form of %glfw:window-hint, my window doesn't open up. What am i doing wrong?
[16:52:32] <jackdaniel> perhaps someone could point out what you are doing wrong if they had seen the code in question
[16:53:20] <jackdaniel> sometimes when you minimize the code to show to others the crux of the issue you may find the problem yourself
[16:54:51] *** Joins: Cymew (~ante@h-158-174-56-13.A137.corp.bahnhof.se)
[16:56:13] *** Joins: Guest4427 (~Guest44@95.175.104.154)
[16:57:02] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[16:59:02] *** Joins: Bike (~Glossina@71.69.170.70)
[16:59:29] <Guest4427> f
[16:59:55] <Guest4427> Sorry, that was just a misclick
[17:00:58] <vcarvalho> That's my bad, jackdaniel, here is the code in question https://pastebin.com/XfuU5NSF. I'm sure the issue is a gap in my knowledge
[17:01:47] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[17:04:16] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:11:36] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[17:11:55] <jackdaniel> vcarvalho: the problem is that window-hint is declared to accept as the second argument an int, so it doesn't recognize the keyword :opengl-core-profile
[17:12:01] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:12:03] <jackdaniel> you may either put there verbatim #x00032001
[17:12:13] <jackdaniel> or (cffi:foreign-enum-value '%glfw::opengl-profile :opengl-core-profile)
[17:13:03] <jackdaniel> also you should probably pull window hints into with-init-window
[17:13:14] <jackdaniel> otherwise you may have no context and error is waiting to hatch
[17:22:42] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Remote host closed the connection)
[17:25:10] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[17:26:48] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:b44a:bac5:1717:8117)
[17:29:43] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:31:37] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[17:36:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:40:58] *** Joins: xsperry (~xs@user/xsperry)
[17:43:03] *** Quits: razetime (~quassel@49.207.198.36) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:43:46] <vcarvalho> Yep, that was it! Thanks for the help jackdaniel
[17:44:26] *** Joins: parjanya (~esb@2804:14c:1ad:9351:eda3:e794:1704:f373)
[17:47:08] <parjanya> mornings! is there any usual way of defining a function to be called just before delete-package-ing its package? so it can finish off its processes, close connections etc
[17:51:05] <Bike> no. packages are just namespaces, not systems.
[17:51:20] <jackdaniel> sure
[17:52:43] <jackdaniel> parjanya: you may define your own function (defun delete-package* (package) (do-cleanup package) (delete-package package))
[17:53:06] <jackdaniel> ("sure" was directed to vcarvalho)
[17:57:21] <jackdaniel> alternatively you could register a finalizer to the package, but there is no telling when it will be executed (if at all)
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:04:00] <parjanya> jackdaniel: thanks, I was afraid so, but perhaps there were some hidden sorcery available : o )
[18:05:13] <jackdaniel> some implementations offer the "advice" abstraction that allows you to define :before and :after functions
[18:05:55] <jackdaniel> that said 1) it is not portable; 2) I'm not sure if it'd work with functions in CL package (due to the package lock)
[18:06:17] *** Joins: occ (~occ@user/occ)
[18:07:57] <lisp123> To add, it is relatively easy to add advices
[18:08:14] <lisp123> redefine DEFUN for your package where it looks up potential advice beforehand
[18:08:35] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[18:08:52] <lisp123> Now to get the exact same level of flexibility as CLOS will take much more work, although maybe theres a way to piggy back off generic functions
[18:09:26] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:09:34] *** Joins: gamaliel (~gamaliel@24.171.221.171)
[18:11:08] <lisp123> portable defadvice: https://www.reddit.com/r/Common_Lisp/comments/czrkx0/cladvice_a_portable_defadvice_macro_sbcl_ccl_lw/
[18:11:37] <phoe> lisp123: 404
[18:11:39] *** Quits: gamaliel (~gamaliel@24.171.221.171) (Client Quit)
[18:11:47] <jackdaniel> not really
[18:11:52] <jackdaniel> (not really 404)
[18:11:59] *** Joins: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de)
[18:12:07] <jackdaniel> ah, link behind the reddit one
[18:12:32] <lisp123> https://github.com/szos/cl-advice
[18:12:37] <lisp123> phoe: thanks
[18:12:48] <jackdaniel> also, that's confusing: "portable" and then only four implementations mentioned
[18:12:59] <lisp123> jackdaniel: lol that's true
[18:13:15] <lisp123> and not everyones favourite Lisp in C ;)
[18:13:48] <lisp123> Although I wonder if there is much that DEFADVICE can do that generic functions can't
[18:14:55] <jackdaniel> define multiple after / before advices against the same class set
[18:16:14] <jackdaniel> (if we talk about the ordinary use, of course you may define a single before method that calls functions from the list)
[18:16:56] <jackdaniel> and the prime promise is that you may attach advices to non-generic functions
[18:17:02] <jackdaniel> s/promise/premise/
[18:17:14] <rotateq> jackdaniel: and then thinking about all those implementations that don't exist yet or are used on other planets :)
[18:17:50] <jackdaniel> I think that it was either a braino in reddit title or it just hints tested implementations
[18:17:59] <jackdaniel> because there doesn't seem to be some implementation-specific parts in the repository
[18:18:27] *** Quits: Guest4427 (~Guest44@95.175.104.154) (Ping timeout: 256 seconds)
[18:19:21] <etimmons> I think the Reddit post was actually for this library: https://github.com/lisp-mirror/budden-tools/tree/master/cl-advice
[18:20:39] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[18:24:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[18:26:51] *** Joins: aeth (~aeth@user/aeth)
[18:36:37] *** cross_ is now known as cross
[18:39:02] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Read error: Connection reset by peer)
[18:39:20] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[18:44:34] *** Joins: AeroNotix (~xeno@185.107.67.252)
[18:45:39] <clos-encounters> If I maphash over a synchronized hash table (in sbcl) is the lock held for the whole map or just for individual remhash / setf operations?
[18:46:25] <AeroNotix> clos-encounters: which synchronized hash table?
[18:46:37] <AeroNotix> I doubt it though, no matter what
[18:46:47] <Bike> an sbcl hash table with :synchronized, presumably
[18:46:58] *** Quits: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[18:47:01] <clos-encounters> ya, in sbcl
[18:47:25] <AeroNotix> in that case I'd suggest reading the docs
[18:47:36] <AeroNotix> the :synchronized arg seems to has some 'interesting' clauses
[18:47:36] <Bike> yeah the docstring on maphash explains
[18:48:07] <Bike> "Consequences are undefined if HASH-TABLE is mutated during the call to MAPHASH [except for the current key]. This applies to all threads [...] even for synchronized hash-tables"
[18:48:11] <AeroNotix> http://clhs.lisp.se/Body/03_f.htm see this also
[18:49:47] <clos-encounters> the docstring for sbcl's implementation of maphash has the answer I needed
[18:50:22] <AeroNotix> clos-encounters: the way I see it, the docstring is a rewording of the spec
[18:50:43] <Bike> it's not. the spec does not contemplate concurrency.
[18:51:01] <AeroNotix> Bike: it can't
[18:51:15] <AeroNotix> Bike: so it's an interesting dilemma for implementations, that
[18:51:20] <AeroNotix> where they add things like :synchronized
[18:51:30] <clos-encounters> right. I had to look to the more specific docs
[18:51:30] <AeroNotix> since the spec was created without thought to things like concurrency
[18:51:40] <clos-encounters> implementation* specific
[18:52:36] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[18:53:38] <jackdaniel> :synchronized :rollback-on-conflict ,)
[18:53:46] <AeroNotix> clos-encounters: I think if it were me I'd avoid things like :synchronized
[18:54:12] <AeroNotix> reasoning is that 1) it's implementation-specific and 2) it feels much safer to wrap entire blocks of operations with a mutex
[18:54:24] <AeroNotix> but ultimately up to you, of course
[18:54:48] <AeroNotix> clos-encounters: bordeaux-threads has rw-locks, too
[18:55:37] <AeroNotix> hmm I may be wrong about RW locks, looking now
[18:55:41] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[18:56:01] <clos-encounters> AeroNotix: Yeah I agree.  I'm already in the middle of switching to an unsynchronized table and managing concurrent access more expliclty.
[18:56:24] <AeroNotix> I'd be interested to see why SBCL added that :synchronized option
[18:56:44] <jackdaniel> synchronization of hash table access may be more robust than "slap a mutex over it"
[18:57:07] <AeroNotix> jackdaniel: for some definition of robust?
[18:57:20] <clos-encounters> I thought, hey, if maphash already locks the table, then I might as well use it. But I see that holding a lock for a whole map is a much less sensible default.
[18:58:09] <clos-encounters> I see that as of last month :sychronized is no longer marked as an experimental option.
[18:58:43] <jackdaniel> AeroNotix: locking is usually quite slow
[18:58:55] <jackdaniel> you may explore the topic with https://en.wikipedia.org/wiki/Concurrent_hash_table as a starting point
[18:58:56] <AeroNotix> jackdaniel: I can't imagine that :synchronized tables are much faster though
[18:59:10] <jackdaniel> well, imagination is something that can be trained I believe
[18:59:26] <AeroNotix> clos-encounters: there is sb-ext:with-locked-hash-table too
[18:59:27] <Bike> there are lock free hash table implementations, though sbcl's is not one
[19:00:01] <AeroNotix> right.. if it were lock-free they'd have called it out - 'synchronized' (to me) implies a big fat mutex
[19:00:03] <_73> Say I have a class slot that only makes sense if it is of a certain type is there any reason not to specify a :TYPE in the slots specifier? I ask because I have seen a lot of other peoples code where they don't specify a :TYPE in this situation.
[19:00:29] <jackdaniel> Bike: ccl offers a lockfree synchronization
[19:00:35] <Bike> oh, really? that's cool
[19:00:48] *** Joins: lambdart (~lambdart@189.4.76.230)
[19:00:48] <mfiano> _73: It is not guaranteed to be checked, as with most type declarations, it is implementation-dependent.
[19:01:07] <mfiano> _73: Some implementations, like SBCL, will check it at runtime, others, will not.
[19:01:08] <jackdaniel> (you may still use a lock or nothing at all - depending on parameters)
[19:01:12] <AeroNotix> sbcl uses sb-thread:mutex
[19:01:36] <jdz> mfiano: I think CCL does check, SBCL might need some specific safety level (that's more than 1) to do that.
[19:01:39] <mfiano> _73: I think it would be better to define auxiliary methods on initialize-instance or similar generic functions to do the type checking yourself.
[19:02:16] <mfiano> Why rely on some or most implementation's behaviors when you can do it for all quite easily?
[19:02:18] <_73> mfiano: Ok that makes sense
[19:02:35] <mfiano> via check-type, assert, or your own thing
[19:02:40] <jackdaniel> well, that should be checked also on (setf slot-value)
[19:03:32] <jackdaniel> (and that could be implemented with mop too - given that you subclass standard-effective-slot-definition and specialize on that)
[19:04:47] <mfiano> If you are exporting slots to your public interface, you have other problems, as they are implementation details...unless you really know what you're doing I guess.
[19:05:05] <jackdaniel> accessors resolve to (setf slot-value) underneath
[19:06:33] <beach> Are you sure about that?
[19:06:36] <mfiano> Depends on the class
[19:07:13] <mfiano> slot-value is undefined on instances of structure-class.
[19:07:55] *** Joins: Guest4494 (~Guest44@95.175.104.87)
[19:07:56] <beach> Also, in some cases it is possible to use a faster path by doing STANDARD-INSTANCE-ACCESS directly.
[19:09:01] <mfiano> Yes, I have a metaclass for this. I feel dirty whenever I bring standard-class closer to structure-class semantics though, as I am giving up some interactivity in the process.
[19:09:12] <fe[nl]ix> AeroNotix: adding RW locks is on the roadmap, but I can't give you a timeline
[19:09:58] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[19:09:58] <jackdaniel> 1) I've assumed standard-class, 2) using standard-instance-access will work on standard-efficient-slot-definition but is not guaranteed to work on its subclasses (that's why slot-value-using-class is specified I believe)
[19:11:01] <beach> *effective
[19:11:01] <jackdaniel> and yes, if you do low level access, then I wouldn't expect type checks
[19:11:13] <jackdaniel> yes, effective*
[19:11:55] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[19:12:32] <jackdaniel> and, without certainity but with a strong conviction I believe that accessor defined by the defclass form on a subclass of standard-effective-slot-definition will call slot-value-using-class
[19:13:17] <jackdaniel> s/ I believe/, I believe/
[19:13:42] <jackdaniel> (possibly indirectly via slot-value)
[19:14:59] *** Joins: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net)
[19:26:24] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[19:27:32] *** Joins: amk (~amk@109.255.169.126)
[19:34:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[19:34:55] <jcowan> Lock-free is all very well, but it doesn't solve the problem of transactions.  I would use it only when the transaction size is 1 operation, now and forever.  Its utility also depends on whether contention is actually commonplace: if not, you might as well pay the price for a mutex given that you won't be paying it often
[19:35:37] <jcowan> It's considerations like these that caused Sun/Oralce to deprecate (almost?) all of its locking classes like Vector and Hashtable.
[19:35:45] *** Joins: aeth (~aeth@user/aeth)
[19:39:11] <jackdaniel> it seems that when the slot type is not T, then a portable program can't use standard-instance-access, because the slot is not "directly accessible"
[19:39:35] <jackdaniel> according to the section "instance structure protocol" in amop
[19:41:58] *** Noisytoot_ is now known as Noisytoot
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:53:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:54:17] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (ERC (IRC client for Emacs 27.2))
[19:58:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[19:59:18] *** Joins: pingpongball (~pingpongb@43.228.192.121)
[19:59:52] <luis> AeroNotix: yes
[20:00:55] *** Joins: aeth_ (~aeth@user/aeth)
[20:01:11] <luis> I've just come across https://github.com/m2ym/trivial-types which seems neat and useful. No one appears to have stepped up to maintain it. fe[nl]ix et al: any objections to forking this into the sharplispers github?
[20:01:21] *** Quits: Cymew (~ante@h-158-174-56-13.A137.corp.bahnhof.se) (Ping timeout: 256 seconds)
[20:01:26] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[20:02:41] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[20:02:46] *** aeth_ is now known as aeth
[20:03:01] <luis> Actually, I'm confused by https://github.com/quicklisp/quicklisp-projects/blob/master/projects/trivial-types/source.txt How come there are two sources?
[20:05:18] <AeroNotix> luis: seems like the digikar99 is a fork, which has additional work on it
[20:05:27] <AeroNotix> as of ~3 months ago, which in CL terms is extremely recent
[20:05:47] <AeroNotix> seems like it's 'maintained' to me, at least there
[20:06:17] <luis> Better than maintained than CFFI possibly! I'm still confused by the two sources, though.
[20:06:33] <AeroNotix> I'm quickloading it to see which source it actually pulls in
[20:07:28] <AeroNotix> luis: seems potentially like it pulls in the m2ym source
[20:08:50] <edgar-rft> the first link (m2ym) says: This repository has been archived by the owner. It is now read-only.
[20:10:55] <luis> edgar-rft: yes, indeed, which is why I'm trying to find out if anybody's stepped in to maintain the project. Seems like digikar99 may have, but quicklisp is apparently not picking it up.
[20:10:56] <AeroNotix> luis: oh I dunno, this actually looks like the digikar99 source
[20:11:08] <AeroNotix> luis: no, I was wrong -- the source I have locally is the digikar99 fork
[20:11:21] <AeroNotix> after pulling in w/ quicklisp
[20:11:35] <AeroNotix> https://github.com/quicklisp/quicklisp-projects/issues/2011
[20:11:43] <AeroNotix> luis: seems like digikar99 requested this as of last year
[20:12:18] <phoe> luis: want to see some inception?
[20:12:28] <AeroNotix> luis: additionally came across lisp-maintainers... what's the / is there a relationship between lisp-maintainers and sharplispers?
[20:12:35] <phoe> https://github.com/lisp-maintainers/cl-syntax
[20:12:41] <phoe> oh right, this
[20:12:42] <luis> AeroNotix: not that I know of
[20:12:45] <phoe> AeroNotix: I do not think there is any
[20:13:01] <AeroNotix> seems like there could be some useful collaboration
[20:13:13] <phoe> I think lisp-maintainers is digikar's invention for forking projects that are abandoned elsewhere
[20:13:19] <phoe> not unlike sharplispers
[20:13:49] <AeroNotix> lisp-maintainers at least reports more users which are associated it
[20:13:56] <AeroNotix> including yourself michal
[20:14:04] <phoe> wait
[20:14:11] <phoe> lisp-maintainers?...
[20:14:14] <phoe> or do you mean sharplispers
[20:14:15] <AeroNotix> https://github.com/lisp-maintainers/lisp-maintainers#phoe---micha%C5%82-phoe-herda
[20:14:22] <AeroNotix> no, lisp-maintainers
[20:14:23] <phoe> gasp
[20:14:26] <luis> lisp-maintainers says it's an "open org" but it doesn't have any public members
[20:14:30] <edgar-rft> luis: to me it looks as if problems had been found with the original code which was unmaintained, so digikar99 forked the project an added some bugfixes (but Xach prpbably knows better than me).
[20:14:44] <AeroNotix> https://github.com/quicklisp/quicklisp-projects/issues/2011
[20:14:53] <AeroNotix> is where the digikar99 fork was placed into quicklisp
[20:15:55] <phoe> AeroNotix: I don't think it's a list of people actively participating in that github org, more just another list of lispers that can be donated to
[20:16:04] <luis> AeroNotix: yes, but this commit adds m2ym's repo not digikar99's: https://github.com/quicklisp/quicklisp-projects/commit/4c733f7cf65fa757cd7f2756083b0839ed252da0
[20:16:09] <Guest74> maybe sharplispers would like to take over this https://github.com/JMC-design/clx-cursor . Another of mikhail's deleted repositories. I don't do any maintenance on it.
[20:17:18] <phoe> Guest74: how much software depends on it?
[20:17:52] <Guest74> no idea. I don't maintain it.  I just fork repositories that may disappear.
[20:18:06] <etimmons> this looks relevant as well: https://github.com/quicklisp/quicklisp-projects/issues/1983
[20:18:23] <etimmons> Looks like QL went from m2ym -> digikar -> m2ym
[20:18:29] *** Joins: nature (~nature@45.32.235.173)
[20:18:56] <AeroNotix> well that doesn't make sense as the source that quicklisp pulled in appears to be the digikar99 fork
[20:19:12] <AeroNotix> is there no thing in quicklisp to tell me the _actual_ coordinates of what it pulled in?
[20:19:18] <AeroNotix> e.g. metadata about a system
[20:19:45] <AeroNotix> I'm saying it's digikar99's fork because of the presence of a .gitignore which is not in the m2ym source
[20:20:00] <AeroNotix> uh yes it is
[20:20:02] <AeroNotix> nvm
[20:21:39] <AeroNotix> Xach: ^
[20:21:53] <AeroNotix> how do you determine the original source location of a system installed through quicklisp?
[20:21:59] <AeroNotix> seems like that information is not available
[20:22:05] <AeroNotix> (which would be a nice addition)
[20:22:23] <phoe> AeroNotix: (ql-dist:archive-url (slot-value (ql-dist:find-system "trivial-types") 'ql-dist::release))
[20:22:28] <AeroNotix> thanks
[20:22:28] <pingpongball> i was thinking this common lisp tutorial https://www.udemy.com/course/common-lisp-programming/?couponCode=6926D599AA-LISP4ALL
[20:22:47] <AeroNotix> phoe: still no
[20:22:51] <AeroNotix> that's still not good enough
[20:22:55] <pingpongball> oh it sucks
[20:23:01] <AeroNotix> that just gives the tar.gz of the quicklisp package
[20:23:04] <phoe> huh
[20:23:05] <phoe> no idea then
[20:23:08] <AeroNotix> I want the original git repo
[20:23:11] <phoe> minion: tell pingpongball about pcl
[20:23:11] <minion> pingpongball: look at pcl: pcl-book: "Practical Common Lisp", an introduction to Common Lisp by Peter Seibel, available at http://www.gigamonkeys.com/book/ and in dead-tree form from Apress (as of 11 April 2005).
[20:23:36] <pingpongball> yes i'm on my way:)
[20:23:54] <AeroNotix> phoe: even grepping all files within the quickisp dir doesn't reference the repo itself, I think it literally just isn't included alongside the source code.
[20:24:14] <etimmons> AeroNotix: https://github.com/quicklisp/quicklisp-controller/issues/18
[20:24:35] <AeroNotix> etimmons: cool
[20:24:58] <Guest74> anybody who uses multilanguage input have any links to an informative read on how to do that on linux?  I'm trying to add support and can't find relevant stuff in the kernel.
[20:25:07] <etimmons> I opened that issue, but have not had any time to poke at it
[20:26:00] <etimmons> But looking at the source code, it seems to only read the first line in any source.txt: https://github.com/quicklisp/quicklisp-controller/blob/5608e75ec9c4e1f33438c204d37f4d4ca2b21ff6/upstream.lisp#L139
[20:26:17] <AeroNotix> etimmons: I'm already 3 forks deep, not working on what I originally wanted to work on ... .soooo :)
[20:27:12] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[20:27:25] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:28:25] <AeroNotix> etimmons: https://github.com/quicklisp/quicklisp-controller/pull/14
[20:28:37] <AeroNotix> etimmons: 4 years old with zero input from others
[20:29:10] <AeroNotix> etimmons: out of interest did you ever run the quicklisp-controller locally?
[20:29:25] <AeroNotix> wondering if it's feasible to do, how much data is it, what are the required non-lisp system dependencies, etc
[20:29:26] <etimmons> yes
[20:29:32] <AeroNotix> in the case of e.g. cffi bindings
[20:29:37] <etimmons> Well, sort of
[20:29:47] <AeroNotix> seems ripe for containerizing tbh
[20:30:14] <AeroNotix> https://github.com/quicklisp/quicklisp-controller/blob/master/debian-setup/bootstrap.sh
[20:30:15] <etimmons> I ran it locally while testing https://github.com/quicklisp/quicklisp-controller/pull/21 , but I think I may have limited it to only systems I was interested in
[20:30:16] <AeroNotix> e.g. this
[20:31:18] <etimmons> I maintain this: https://gitlab.common-lisp.net/cl-docker-images/cl-devel A docker image that has many implementations and foreign deps already installed.
[20:31:30] <AeroNotix> neat
[20:31:49] <AeroNotix> so that + jamming in the bootstrap.sh script should get some reproducible environment for quicklisp-controller, perhaps
[20:32:15] <etimmons> When I first started, I based the list of packages off https://github.com/quicklisp/quicklisp-controller/blob/master/debian-setup/debian-8-packages.txt
[20:32:46] <AeroNotix> I'll give it a go just using your container image + running the bootstra.sh script directly, I'm interested if it Just Works
[20:32:57] <AeroNotix> otherwise I entirely cannot be bothered to even poke at this
[20:33:30] <etimmons> I've been trying to keep package names up to date between Debian versions, but given that the debian-9 package list is four years old at this point, there's almost certainly foreign deps missing for new QL systems
[20:33:52] <etimmons> (the debian-9 package list in the ql-controller repo, that is)
[20:34:16] <AeroNotix> I wonder how Xach maintains it all
[20:34:34] <AeroNotix> I do truly feel sorry for them that likely this is a bunch of unpaid and underappreciated work that is mostly done solo
[20:34:51] <AeroNotix> whereas it provides incredible, modern features to the CL ecosystem
[20:34:59] <etimmons> I wanna say I've seen him mention Docker at some point. But that could have just been a fever dream
[20:35:18] <AeroNotix> I think ql single-handedly brought the CL ecosystem lightyears ahead, in terms of dependency management
[20:35:28] <AeroNotix> which is a huge part of the development lifecycle
[20:36:58] <etimmons> Yep. I started using CL after QL was already on the scene. So I have not first-hand experience, but from what I can gather, things were not pretty beforehand
[20:37:12] <etimmons> * no
[20:37:40] <AeroNotix> the wild west
[20:39:07] <AeroNotix> etimmons: your docker image is a chunky monkey
[20:39:45] <etimmons> 6 implementations and a crapload of foreign deps will do that
[20:39:52] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[20:39:55] <AeroNotix> luis: I put up a couple of cffi PRs, if you have time to take a gander
[20:40:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:40:39] <etimmons> I also have much more streamlined ones that contain a single impl and only common foreign deps
[20:44:27] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9) (Quit: Leaving)
[20:44:54] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[20:45:29] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[20:45:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:46:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:47:15] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[20:49:38] *** Quits: pingpongball (~pingpongb@43.228.192.121) (Quit: Client closed)
[20:51:40] *** Quits: Rue (~rue@2001-b011-1000-1402-f4fe-f6f9-1dd3-9979.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[20:56:33] <AeroNotix> etimmons: the boostrap script fails
[20:56:56] <AeroNotix> https://gist.github.com/AeroNotix/de2a07a312e875b7afe01a3cb717d2fe not difficult to fix... but... $TIME
[20:56:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:57:17] <AeroNotix> any way this all seems extremely ripe to just containerize it all for reproducibility
[21:00:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[21:00:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:01:02] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:3c97:bf3a:3e4c:7eb2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:56] <lisp123> Bike: Thanks for your help a couple of days ago, I finally got it and and putting the final touches on my ordinary lambda list to function call macro
[21:04:39] <Bike> happy to help
[21:05:04] * phoe orders ELS tickets
[21:05:19] <lisp123> phoe: Attending in person?
[21:05:37] <phoe> lisp123: t, I will want to help organize the streaming on-site
[21:05:58] <lisp123> Nice, jealous - you will have a great time
[21:05:59] <Shinmera> oh, it's finally up?
[21:06:12] <phoe> Shinmera: what is finally up?
[21:06:24] <Shinmera> the registration
[21:06:38] <phoe> nope
[21:06:40] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[21:06:40] *** Joins: Everything (~Everythin@37.115.210.35)
[21:06:47] <Shinmera> then what tickets are you ordering
[21:07:02] <phoe> the big steel bird ones
[21:07:13] <Shinmera> ah.
[21:07:21] <phoe> well, okay, they are not ELS tickets, right
[21:07:39] <phoe> they are metatickets in a way
[21:18:41] <etimmons> AeroNotix: You might be able to get pretty far by just commenting out this line: https://github.com/quicklisp/quicklisp-controller/blob/master/debian-setup/bootstrap.sh#L23 Most, if not all, of those packages should already be in the image
[21:21:24] <Xach> etimmons: i have a way to dump all foreign dependencies, expressed as pathnames to shared libraries, i just don't do anything with that data (yet)
[21:22:05] <Xach> partly because pathnames to shared libraries is extremely os- and distro-specific
[21:22:32] <Xach> but it could be used to map back go package names on my specific os and distro
[21:23:00] <jackdaniel> Xach: do you have any opinion about this patch? https://github.com/xach/zpb-ttf/pull/13
[21:23:26] *** Quits: amb007 (~a_bakic@229.149.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[21:23:48] *** Joins: amb007 (~a_bakic@89.132.22.93.rev.sfr.net)
[21:23:50] <Xach> jackdaniel: i don't like it much that ccl requires it, but it's not so offensive that i would reject it
[21:24:15] <Xach> I will get it merged "soon"
[21:24:17] <jackdaniel> right, the fact that it defaults to thread-private streams is annoying
[21:24:19] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:24:21] <jackdaniel> OK, thanks
[21:24:53] <Xach> you should make a patch that lets it load OTF files that wrap a single TTF file!
[21:25:05] <Xach> and for extra credit, Type1 font support
[21:25:16] <Xach> (with otf wrapper support)
[21:25:26] <jackdaniel> is that the one with 3 postscript-like virtual machines?
[21:25:44] <Xach> I don't know
[21:26:01] *** Quits: Guest4494 (~Guest44@95.175.104.87) (Ping timeout: 256 seconds)
[21:26:36] <jackdaniel> apparently fonts in XXI century must be turing complete
[21:26:49] <etimmons> Xach: That could be cool to have. Do you use Debian to build still or another OS these days?
[21:26:56] <Xach> etimmons: debian 10, i think.
[21:28:24] <Shinmera> I have now also booked the flights (and soon lodging)
[21:29:36] *** Joins: ldb (~user@user/ldb)
[21:35:15] <fe[nl]ix> luis: no objection from me
[21:35:52] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[21:37:41] *** Joins: unyu (~pyon@user/pyon)
[21:39:33] *** Joins: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d)
[21:49:53] *** Quits: amb007 (~a_bakic@89.132.22.93.rev.sfr.net) (Ping timeout: 250 seconds)
[21:50:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:50:27] *** Joins: amb007 (~a_bakic@226.134.22.93.rev.sfr.net)
[21:52:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:54:37] *** Quits: amb007 (~a_bakic@226.134.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[21:55:03] *** Joins: amb007 (~a_bakic@212.150.22.93.rev.sfr.net)
[21:56:17] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:b92:1a0:165b:5914) (Ping timeout: 240 seconds)
[21:59:59] <Xach> etimmons: https://www.quicklisp.org/tmp/fl-alist.sexp approximately
[22:00:19] *** Quits: Brucio-61 (~Brucio-6@2001:638:504:20e0:a511:8858:bc9:9aae) (Ping timeout: 268 seconds)
[22:02:24] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:02:41] *** Quits: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net) (Remote host closed the connection)
[22:02:51] *** Quits: amb007 (~a_bakic@212.150.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[22:03:05] *** Joins: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net)
[22:03:34] <jasom> AeroNotix: agreed about quicklisp; prior to quicklisp if a system depended on any other systems, I would just write the 20% of it that I needed for myself as by experience that was faster than getting it to work.  If the words "ASDF-INSTALL" appeared anywhere on the homepage, I backed away slowly without looking it in the eyes.
[22:03:35] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:c170:ec30:68fa:bc68)
[22:03:38] *** Joins: amb007 (~a_bakic@203.148.22.93.rev.sfr.net)
[22:03:59] *** Quits: vcarvalho (~vcarvalho@161.230.15.110) (Ping timeout: 256 seconds)
[22:06:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:07:01] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:07:37] *** Quits: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[22:08:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:13:58] * NotThatRPG wishes he was going to ELS
[22:14:37] *** Quits: mepy (~mepy@37.100.156.164) (Quit: Leaving)
[22:14:55] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:15:19] *** Quits: amb007 (~a_bakic@203.148.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[22:15:25] *** Joins: amb007 (~a_bakic@32.151.22.93.rev.sfr.net)
[22:15:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[22:17:36] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:19:57] <ldb> this year's?
[22:20:10] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[22:21:16] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:22:10] <NotThatRPG> ldb: Yes.
[22:23:16] *** Joins: Brucio-61 (~Brucio-6@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[22:24:37] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:c170:ec30:68fa:bc68) (Ping timeout: 240 seconds)
[22:32:45] <jcowan> jackdaniel: Yes, otherwise they are not copyrightable (mere glyphs are not, in the U.S. at least)
[22:34:58] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[22:35:17] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[22:39:10] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[22:40:04] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:833f:e9c7:6325:4206)
[22:50:01] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:b44a:bac5:1717:8117) (Remote host closed the connection)
[22:55:33] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:57:15] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[22:57:51] <jackdaniel> that's a very poor reason for that
[22:59:14] *** Joins: unyu (~pyon@user/pyon)
[22:59:16] *** Joins: aeth_ (~aeth@user/aeth)
[22:59:22] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[22:59:24] *** aeth_ is now known as aeth
[23:01:49] *** Quits: amb007 (~a_bakic@32.151.22.93.rev.sfr.net) (Ping timeout: 250 seconds)
[23:01:54] <jackdaniel> text rendering is already ridiculus even without purposeful obfuscation
[23:02:09] *** Joins: amb007 (~a_bakic@187.13.23.93.rev.sfr.net)
[23:04:29] *** Joins: vcarvalho (~vcarvalho@161.230.15.110)
[23:07:19] *** Joins: mepy_ (~mepy@37.100.156.164)
[23:08:29] <dbotton> Is there any general document anyone knows concerning thread safety in lists and hashes (at the least) on SBCL and ECL?
[23:09:32] <jackdaniel> I don't think so, but both have: a) threading primitives (mutexes etc), 2) synchronized hash tables (both through locks), 3) extensible cas operators (i.e atomic-push, atomic-pop)
[23:09:45] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[23:10:15] <AeroNotix> I'd also look at what (if anything) the spec says regarding these types of things, vs any implementation-specific details
[23:10:26] <phoe> the spec doesn't
[23:10:32] <jackdaniel> the standard doesn't concern itself with concurrency at all
[23:10:33] <phoe> it ignores the multiprocessing aspect completely
[23:10:39] <AeroNotix> shame
[23:10:52] <dbotton> time when it was done
[23:11:39] <dbotton> I was looking for something written up in general to know if to write one
[23:12:07] <lisp123> quick question
[23:12:17] <jackdaniel> Bike works on a memory model document for common lisp, but I don't know how advanced it is
[23:12:25] <jackdaniel> and whether it is the thing you are looking for
[23:12:33] <lisp123> I can't do (defgeneric abcd (xyz &optional (something default))) right?
[23:12:38] <Bike> nobody claims to conform to it anyway, so
[23:12:39] <lisp123> Does it go into the defmethod?
[23:12:43] <Bike> lisp123: nope. defaults are per method.
[23:12:51] <AeroNotix> Bike: you got a link to that document
[23:12:52] <lisp123> Bike: thanks
[23:13:11] <dbotton> CLOG makes heavy use of multiprocessing so looking to introduce people to issues and solutions  that are unfamiliar
[23:13:26] <Bike> lemme dig through my gists here...
[23:13:35] <dbotton> maybe a multiprocessing in lisp for beginners
[23:13:45] <Bike> https://gist.github.com/Bike/a89cbfda64ace273b12eed8675dda632 bam @ AeroNotix
[23:14:04] <jackdaniel> dbotton: for concurrency primitives the facto standard is a library bordeaux-threads that works on most implementations
[23:14:09] <Bike> keep in mind this is supposed to be a standard, rather than a description of what implementations actually do
[23:14:42] <jackdaniel> for atomic operations - manuals of each implementation
[23:14:51] <Bike> as far as i know, for example, no implementation actually defines how concurrent reads and writes work
[23:14:54] <jackdaniel> for parallel primitives (promises and such) check out the library lparallel
[23:15:09] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[23:15:13] <Bike> sbcl's manual kind of suggests reading the linux kernel's guide to fences
[23:15:19] <AeroNotix> Bike: thanks
[23:15:20] <dbotton> I am using bordeaux-threads
[23:15:46] <Bike> "concurrent reads and writes" other than CAS which is a read-write-modify, i mean
[23:16:01] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:16:08] <dbotton> I don't recall bordeaux-threads having hashes
[23:16:27] <AeroNotix> not to beat a dead horse but concurrency specifically is something I think that should be standardized for CL
[23:16:28] <dbotton> bike, neat thanks
[23:17:15] <jackdaniel> AeroNotix: how many languages have concurrency in the standard?
[23:17:20] <dbotton> agreed (but I am coming from Ada that had it in its standard from start)
[23:17:25] <AeroNotix> jackdaniel: how many languages are standardized?
[23:17:26] <Bike> java, C++, uhhhhh ada apparently
[23:17:30] <karlosz> when is registration for els supposed to open? also hoping to get my metal tube tickets soon
[23:17:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:17:44] <dbotton> Ada had it since '80s
[23:18:14] <AeroNotix> Go, too
[23:18:15] <Bike> what are ada's semantics for operating outside of mutual exclusion?
[23:18:38] <AeroNotix> as well as a memory model
[23:18:42] <AeroNotix> (somewhat)
[23:18:44] <dbotton> Tasks and Task types were in from the first standard and memory models
[23:19:00] <dbotton> 95 standard then added protected types
[23:19:56] <dbotton> Mutual exclusion was not added till later, the Rendezvous was its semantics
[23:19:58] <AeroNotix> Looks like Fortran, might, too
[23:20:07] <dbotton> maybe now
[23:20:32] <Bike> hm, i see. looks like in ada 83 you can use "pragma SHARED" to accesses acquire-release (or maybe sequentially consistent?). neat.
[23:20:39] <Bike> to make accesses*
[23:22:30] <Bike> and a rendezvous is kind of an acquire-release as well
[23:22:35] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[23:22:41] <Bike> the explanation i found is phrased in terms of preemptive multitasking, but whatever
[23:23:29] <dbotton> Is there a cross platform version of hashes using locks?
[23:23:44] <AeroNotix> dbotton: aside from bordeaux-threads + hashes?
[23:23:56] <dbotton> I didn't see that in bordeaux-threads
[23:24:08] <AeroNotix> well I just mean using a lock around a hashtable
[23:24:29] <dbotton> ah, well one that us already canned
[23:24:37] <AeroNotix> canned?
[23:24:38] <dbotton> that does exactly that
[23:25:05] <dbotton> an existing system in quicklisp
[23:25:24] <dbotton> I don't like rolling my own if something exists (and is tested)
[23:25:37] *** Joins: kpoeck (~kpoeck@2a01:598:92b9:9cd8:b0cc:7f85:fb88:b866)
[23:25:58] *** Quits: amb007 (~a_bakic@187.13.23.93.rev.sfr.net) (Ping timeout: 260 seconds)
[23:26:32] *** Joins: amb007 (~a_bakic@31.132.22.93.rev.sfr.net)
[23:26:34] <AeroNotix> https://github.com/no-defun-allowed/concurrent-hash-tables google returns this
[23:26:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:26:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:26:54] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:28:10] <jackdaniel> dbotton: sbcl and ecl have an extension :synchronized t
[23:28:35] <jackdaniel> ccl has :shared key that defaults to a synchronized hash table
[23:28:38] <AeroNotix> they appear to be asking for a library which provides a cross-platform interface to those
[23:28:54] *** Quits: kpoeck (~kpoeck@2a01:598:92b9:9cd8:b0cc:7f85:fb88:b866) (Client Quit)
[23:28:57] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[23:29:41] <Bike> oh, and there actually is a very brief mention of concurrency in the standard: the description of the abort restart mentions that "in some [...] multi-processing situations" it should maybe just kill the process instead of returning to the REPL or whatever
[23:29:45] <Bike> problem solved
[23:29:47] <jackdaniel> (defun make-hash-table* (&rest args) #+(or sbcl ecl) (apply #'make-hash-table :synchronized t args) #-(or sbcl ecl) (make-hash-table)) here
[23:29:53] <jackdaniel> a portability library
[23:30:07] <AeroNotix> jackdaniel: doesn't work on acl
[23:30:10] <AeroNotix> ;)
[23:30:32] *** Quits: amb007 (~a_bakic@31.132.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[23:31:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[23:34:50] <jackdaniel> so?
[23:35:07] <random-nick> you can also add mezzano to that list
[23:41:36] *** Quits: phantomics (~phantomic@71-218-115-230.hlrn.qwest.net) (Quit: Ex-Chat)
[23:42:04] <dbotton> perfect thanks
[23:45:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[23:46:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:46:36] <random-nick> also, wouldn't you want to use a mutex in case of unknown implementation support?
[23:48:44] <Bike> you might have an application where mutexes are actually too slow
[23:52:26] *** Quits: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d) (Ping timeout: 245 seconds)
