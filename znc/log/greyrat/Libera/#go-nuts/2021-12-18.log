[00:02:41] <dostoyevsky2> j416: I guess me using every programming language in just vim, even with syntax highlighting off, has its advantages
[00:05:05] <foobaz> gopls works great for me, the only time it has issues is when my scripts change a file, it doesn't pick up those changes, so e.g. will warn about a new function/variable not existing
[00:05:31] <foobaz> i use gopls in vim, with syntax highlighting on :)
[00:07:00] <j416> foobaz: yes, that
[00:07:06] <j416> happens all the time for me
[00:07:26] <foobaz> to fix it, i quit vim and reopen, i'm guessing this causes gopls to restart
[00:07:44] <foobaz> do you kill it yourself so that you can keep your vim tabs open?
[00:07:52] <j416> yes, killall gopls will cause vim (?) to reload gopls
[00:08:11] <j416> but never used tabs in vim
[00:08:17] <foobaz> maybe the solution is to add "killall gopls" to our scripts
[00:08:21] <j416> heh.
[00:08:34] <foobaz> what? do you at least use :split and :vsplit?
[00:08:39] <j416> sure
[00:09:01] <foobaz> tabs are :tabe path/to/file and gt to switch tabs, try them out
[00:09:21] <j416> never learnt about them really; tried it once but didn't see the benefit
[00:09:54] <foobaz> there's not much to learn, gT cycles in the opposite direction, and that's all there is to it
[00:10:06] <j416> thanks!
[00:10:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:10:24] <j416> tried now again; still don't see why I'd want them :D
[00:10:28] <j416> I bet they're useful for some
[00:10:36] <foobaz> well there's no accounting for taste :P
[00:10:56] <j416> I use tmux windows instead, one vim + terminal in each typically (one for each project)
[00:11:20] <j416> (well, in various pane configs depending on, but vim + 1..* terminals)
[00:11:38] <foobaz> but then you can't copy/paste between files using the y and p operators
[00:11:55] <j416> I can copypaste using tmux :)
[00:12:08] <foobaz> smh
[00:12:28] <j416> or just mouse select and normal copy
[00:12:35] <dostoyevsky2> what packages should I look into for writing terminal UIs in Go?
[00:13:05] <lungaro> dostoyevsky2, probably termui
[00:13:16] <foobaz> agreed https://github.com/gizak/termui
[00:13:19] <dostoyevsky2> I saw TUI for python yesterday: https://github.com/willmcgugan/textual
[00:13:42] <dostoyevsky2> Not sure if Go has a similar lib
[00:14:30] <foobaz> in python i use urwid http://urwid.org/
[00:18:02] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[00:21:48] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[00:23:15] *** Joins: evocatus (~evocatus@62.182.78.42)
[00:23:24] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[00:24:37] *** Quits: yonson (~yonson@2600:8801:d900::16db) (Remote host closed the connection)
[00:27:00] *** Joins: yonson (~yonson@2600:8801:d900::16db)
[00:28:28] *** Joins: juan42 (~juan42@cpe-76-171-37-136.socal.res.rr.com)
[00:31:13] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[00:39:52] *** Joins: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de)
[00:42:06] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[00:42:52] *** Quits: foobaz (~oofabz@phoenix.frammish.org) (Quit: ZNC 1.8.2 - https://znc.in)
[00:43:06] *** Joins: foobaz (~oofabz@phoenix.frammish.org)
[00:44:04] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[00:57:28] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[01:27:21] *** Quits: g2anj_ (~v@58.228.230.4) (Ping timeout: 256 seconds)
[01:30:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:36:41] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[01:49:14] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[01:50:01] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[01:54:11] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314) (Ping timeout: 252 seconds)
[02:00:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:02:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:03:40] *** Joins: fikran (~fikran@user/fikran)
[02:07:39] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:11:35] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8d58:daf:1eca:e9ec) (Quit: Textual IRC Client: www.textualapp.com)
[02:14:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:23:34] *** Quits: internut (~internut@2601:280:4e00:7b70:6892:7b6b:de75:4f3b) (Remote host closed the connection)
[02:24:02] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) ()
[02:24:32] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[02:26:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com)
[02:27:12] *** Joins: Garb00 (~Garb0@user/garb0)
[02:27:21] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:29:57] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 240 seconds)
[02:34:42] *** Joins: krux02 (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de)
[02:39:48] *** Joins: Garb000 (~Garb0@user/garb0)
[02:43:00] *** Quits: Garb00 (~Garb0@user/garb0) (Ping timeout: 268 seconds)
[02:45:50] *** Joins: internut (~internut@2601:280:4e00:7b70:6892:7b6b:de75:4f3b)
[02:46:42] *** Joins: Garb00 (~Garb0@user/garb0)
[02:46:56] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:47:49] *** Joins: remote (~self@user/hackers)
[02:49:17] *** Quits: Garb000 (~Garb0@user/garb0) (Ping timeout: 240 seconds)
[02:49:23] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[02:58:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:04:30] *** Joins: lowhope (~lowhope@cow9.org)
[03:05:22] *** Joins: Ergo^ (~ergo@91.238.59.144)
[03:08:02] *** Joins: andlabs_ (~andlabs@2604:ca00:140:2751:34cc:9a06:d8ac:ece2)
[03:09:32] <lowhope> Hi. Is there some way to run code before any OS threads besides the main thread get started? Or is there a way to kill all other OS threads?
[03:11:30] *** Quits: andlabs (~andlabs@ool-457dd512.dyn.optonline.net) (Ping timeout: 260 seconds)
[03:14:37] <KirkMcDonald> Hmm. I'm not actually sure when the runtime starts the goroutine worker-threads.
[03:15:08] <KirkMcDonald> But the language does provide that package initialization is done sequentially in a single goroutine.
[03:15:12] <lowhope> KirkMcDonald: yeah. That's my problem. I'm trying to use Linux namespaces so I need a way to make sure my thread is the only thread and act as a bottleneck
[03:15:46] <lowhope> Oh, so maybe I can just do it in init()?
[03:16:59] <KirkMcDonald> You could perhaps start with just doing GOMAXPROCS=1
[03:17:25] <lowhope> Oh, and then adjust it up?
[03:18:06] <KirkMcDonald> Yeah. Though the runtime will also sometimes spin up other threads for e.g. syscalls.
[03:18:17] <lowhope> yikes
[03:18:58] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:19:11] *** Joins: mickey8 (~user@user/mickey)
[03:19:52] <KirkMcDonald> That said, I guess I'm not totally clear on what you're doing.
[03:20:03] <lowhope> I'm entering a network namespace
[03:20:05] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[03:20:09] <KirkMcDonald> Can't you do this at the process level, rather than the thread level?
[03:20:31] <lowhope> No, Linux namespaces are thread level
[03:20:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:20:40] <lowhope> So I need there not to be any other threads
[03:21:24] <bpalmer> KirkMcDonald: yeah, but I don't think you can stop an init() from starting its own goroutine, and you can't stop other packages from having been initted() before your package
[03:21:30] <lowhope> yep
[03:21:57] <KirkMcDonald> bpalmer: True.
[03:22:28] <lowhope> I can lock the OS thread, enter the namespace, kill all other threads, and then unlock if it's possible to do that
[03:23:05] <KirkMcDonald> I admit that I have not used Linux namespaces directly myself, but it would be very surprising to me if there wasn't a way to do this for the whole process.
[03:24:40] *** Joins: cmj (~cmj@68.207.254.124)
[03:25:54] <bpalmer> I see from a few years ago some discussion that the way to do this is to exec() into a new process with nsenter , that sets all the namespaces before go starts
[03:26:24] <lowhope> bpalmer: yeah. I think it has to be that way
[03:27:02] <KirkMcDonald> That makes sense.
[03:28:48] <lowhope> Thanks KirkMcDonald bpalmer
[03:36:08] *** Joins: Garb000 (~Garb0@user/garb0)
[03:38:49] *** Quits: Garb00 (~Garb0@user/garb0) (Ping timeout: 256 seconds)
[03:40:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[03:41:14] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[03:44:00] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[03:51:35] *** Joins: andlabs (~andlabs@ool-457dd512.dyn.optonline.net)
[03:54:57] *** Quits: andlabs_ (~andlabs@2604:ca00:140:2751:34cc:9a06:d8ac:ece2) (Ping timeout: 240 seconds)
[04:03:26] *** Quits: internut (~internut@2601:280:4e00:7b70:6892:7b6b:de75:4f3b) (Remote host closed the connection)
[04:04:45] *** Joins: internut (~internut@2601:280:4e00:7b70:dc72:39bb:3f58:42db)
[04:07:00] *** Quits: krux02 (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:08:57] *** Quits: internut (~internut@2601:280:4e00:7b70:dc72:39bb:3f58:42db) (Ping timeout: 240 seconds)
[04:11:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:13:00] *** Joins: fikran (~fikran@user/fikran)
[04:13:32] *** Joins: Garb0 (~Garb0@user/garb0)
[04:14:31] *** Quits: Garb000 (~Garb0@user/garb0) (Ping timeout: 256 seconds)
[04:16:33] *** Joins: arinov (~arinov@213.194.126.155)
[04:16:33] *** Joins: Garb00 (~Garb0@user/garb0)
[04:18:29] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 256 seconds)
[04:21:16] *** Quits: andlabs (~andlabs@ool-457dd512.dyn.optonline.net) (Read error: Connection reset by peer)
[04:24:57] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:25:22] *** Joins: andlabs (~andlabs@ool-457dd512.dyn.optonline.net)
[04:28:21] *** Quits: juan42 (~juan42@cpe-76-171-37-136.socal.res.rr.com) (Quit: Client closed)
[04:43:41] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[04:45:38] *** Joins: DM430784214951 (~DM4307@047-234-129-039.res.spectrum.com)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:34] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[05:05:47] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[05:07:08] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Client Quit)
[05:18:37] *** Joins: cmj (~cmj@68.207.254.124)
[05:22:47] *** Quits: andlabs (~andlabs@ool-457dd512.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:30] *** Joins: shtirlic (~shtirlic@95-55-120-100.dynamic.avangarddsl.ru)
[05:34:44] *** Quits: shtirlic_ (~shtirlic@178.70.132.77) (Ping timeout: 252 seconds)
[05:34:49] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[05:39:31] *** Quits: hellstabber (uid531276@id-531276.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:45:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:57:37] *** Quits: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:59:01] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[06:07:17] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 256 seconds)
[06:20:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:22:20] *** Joins: fikran (~fikran@user/fikran)
[06:23:44] *** Joins: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de)
[06:26:17] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[06:26:46] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:27:23] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:27:24] *** Joins: darkapex (~darkapex@user/darkapex)
[06:38:36] *** Joins: internut (~internut@2601:280:4e00:7b70:dc72:39bb:3f58:42db)
[06:42:57] *** Quits: internut (~internut@2601:280:4e00:7b70:dc72:39bb:3f58:42db) (Ping timeout: 240 seconds)
[06:47:17] *** Quits: tristero (~nobody@user/tristero) (Quit: WeeChat 3.3)
[06:55:09] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[06:59:37] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 240 seconds)
[07:15:24] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[07:16:49] *** Quits: cmj (~cmj@68.207.254.124) (Quit: Leaving)
[07:17:35] *** Quits: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:19:37] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 240 seconds)
[07:35:31] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:35:54] *** Quits: Garb00 (~Garb0@user/garb0) (Remote host closed the connection)
[07:42:12] *** Quits: moog (~moog@107.77.244.45) (Remote host closed the connection)
[07:49:25] *** Joins: jackneillll (~jackneill@20014C4E18209D002096A9905534DEFE.dsl.pool.telekom.hu)
[07:51:58] *** Quits: jackneilll (~jackneill@86FF442A.dsl.pool.telekom.hu) (Ping timeout: 260 seconds)
[08:04:46] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[08:13:53] *** Joins: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de)
[08:17:39] *** Joins: Sal1 (~Sal-LT@cable-178-149-77-220.dynamic.sbb.rs)
[08:18:00] *** Parts: Sal1 (~Sal-LT@cable-178-149-77-220.dynamic.sbb.rs) ()
[08:18:24] *** Joins: off^ (~off@64.253.22.77)
[08:26:49] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[08:27:00] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[08:29:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[08:31:40] *** Joins: fikran (~fikran@user/fikran)
[08:36:57] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[08:39:34] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:45:17] *** Quits: ropes (~ropes@133.77.127.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[08:46:34] *** Joins: ropes (~ropes@133.77.127.34.bc.googleusercontent.com)
[08:47:32] *** Quits: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:52:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:59:33] *** Joins: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de)
[09:03:49] *** Quits: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:04:34] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[09:08:39] *** Joins: darkapex_ (~darkapex@user/darkapex)
[09:08:41] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[09:09:26] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 260 seconds)
[09:10:26] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[09:17:04] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 268 seconds)
[09:22:56] <hendry> ltabus: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, Go BuildID=S-YAjLvwitv23EOSoqYK/vvnF_t74JdNES8e-Qfpl/KhlcpjQseS6OAxK9Hf7B/n1RFiBNTvu7rym_HtlCM, not stripped ... i thought go produces static binaries, not dynamic?
[09:29:53] <hendry> CGO_ENABLED=0 go build # is what I was after
[09:30:19] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[09:34:31] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 245 seconds)
[09:37:51] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:44:26] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[10:02:37] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 240 seconds)
[10:03:26] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[10:04:59] *** Joins: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de)
[10:30:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:32:00] *** Joins: fikran (~fikran@user/fikran)
[10:34:08] *** Quits: normen (~normen@p200300d7170316007c2b35ecd5d6dd1b.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:42:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:45:23] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:46:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:46:37] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:50:30] *** Joins: darkapex (~darkapex@user/darkapex)
[10:50:37] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[10:53:35] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[10:58:13] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 240 seconds)
[11:03:14] *** Joins: jasonwucj (uid13975@id-13975.ilkley.irccloud.com)
[11:08:25] <mikoto-chan> what does loop variable i captured by func literal mean?
[11:11:36] <rewt> you have a closure inside a loop that uses the loop variable
[11:11:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[11:12:03] <rewt> maybe you're firing off goroutines
[11:12:43] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[11:12:44] <rewt> in which case all of them (give or take) will use the last value of that loop variable
[11:14:39] <rewt> you can add a locally-scoped var to shadow the loop var, something like:    for i, e := range mySlice { i := i; e := e; doStuffWith(i, e) }
[11:15:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-60a6-7749-daab-1d70.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[11:15:49] <mikoto-chan> I have indeed read about it before
[11:16:04] <rewt> (in that specific example they're not needed; just showing the concept)
[11:18:10] <rewt> if you're firing off goroutines, another way is to pass them in as args
[11:19:05] <rewt> something like:  for i := range mySlice { go func(i int) { doStuffWith(i) }(i) }
[11:19:45] <rewt> that does pretty much the same thing; the func sees a newly created var, not the loop var itself
[11:21:14] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f9ee:8477:aec1:8916)
[11:31:43] *** Joins: normen (~normen@pd9eeca92.dip0.t-ipconnect.de)
[11:32:14] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (Ping timeout: 260 seconds)
[11:50:52] *** Joins: mrig (~AdiIRC@user/mrig)
[11:53:31] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 256 seconds)
[11:55:54] *** Joins: jespada (~jespada@87.74.33.157)
[11:56:08] *** Joins: juan42 (~juan42@cpe-76-171-37-136.socal.res.rr.com)
[12:05:25] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 256 seconds)
[12:07:05] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[12:07:52] *** Quits: normen (~normen@pd9eeca92.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[12:09:28] *** Quits: juan42 (~juan42@cpe-76-171-37-136.socal.res.rr.com) (Quit: Client closed)
[12:11:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[12:12:01] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[12:12:39] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Remote host closed the connection)
[12:12:54] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[12:13:40] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Remote host closed the connection)
[12:14:22] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[12:18:57] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 240 seconds)
[12:19:07] *** Joins: rendar (~rendar@user/rendar)
[12:19:57] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:30:42] *** Joins: shka (~herr@109.231.0.226)
[12:37:48] *** Joins: normen (~normen@pd9eeca92.dip0.t-ipconnect.de)
[12:38:42] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[12:38:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:39:46] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:41:20] *** Joins: fikran (~fikran@user/fikran)
[12:56:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[12:57:00] *** Joins: LtHummus_ (~lthummus@97-126-121-3.tukw.qwest.net)
[12:57:17] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Ping timeout: 240 seconds)
[12:58:40] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[13:22:24] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[13:23:30] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:24:48] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[13:29:02] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 240 seconds)
[13:29:37] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[13:30:07] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:30:20] *** Joins: mrig (~AdiIRC@user/mrig)
[13:34:02] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 260 seconds)
[13:57:08] *** Quits: girafe2 (~girafe@176-147-142-235.abo.bbox.fr) (Quit: Leaving)
[13:57:40] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[14:12:26] *** Quits: nightwatch (~vvlad@ipservice-092-213-074-022.092.213.pools.vodafone-ip.de) (Quit: Leaving)
[14:18:20] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[14:44:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:47:44] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[14:48:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:50:41] *** Joins: fikran (~fikran@user/fikran)
[14:55:52] *** Joins: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac)
[14:58:27] *** Quits: off^ (~off@64.253.22.77) (Remote host closed the connection)
[15:06:06] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[15:06:28] *** Joins: darkapex (~darkapex@user/darkapex)
[15:10:02] <mikoto-chan> >Fatalln call has possible formatting directive %s
[15:10:31] <mikoto-chan> what does this mean?
[15:11:32] <mikoto-chan> oh I see, mixed up ln and f
[15:12:23] *** Joins: huan (~huan@79.162.203.187)
[15:21:07] *** Quits: normen (~normen@pd9eeca92.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[15:23:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[15:31:01] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[15:44:24] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[15:44:47] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[15:47:10] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[15:51:00] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[15:51:13] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[15:56:03] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 268 seconds)
[16:02:55] *** Joins: henry404080 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:04:03] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Read error: Connection reset by peer)
[16:04:03] *** henry404080 is now known as henry40408
[16:07:29] *** Joins: danmurf (uid480399@user/danmurf)
[16:08:29] <mikoto-chan> is there some article/mail from the Go team on why they moved a few functions from ioutil to io?
[16:10:26] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[16:10:31] <ikke> https://go.dev/doc/go1.16#ioutil
[16:16:32] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: The Lounge - https://thelounge.chat)
[16:18:27] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[16:18:49] *** Joins: mickey8 (~user@user/mickey)
[16:21:56] <mikoto-chan> ikke: thanks!
[16:22:04] *** Quits: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac) (Quit: mikoto-chan)
[16:22:43] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:22:46] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[16:23:03] <aLeSD> hi there ... is there any way to mock http.Post ?
[16:23:28] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Client Quit)
[16:24:43] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[16:28:22] <bpalmer> sure, it uses the Client's RoundTripper, which is an interface
[16:29:17] <bpalmer> well, http.Post is a wrapper around DefaultClient.Post, so set up your own client with its own round tripper
[16:31:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:40:01] <aLeSD> ok
[16:41:13] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[16:45:07] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[16:46:37] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 240 seconds)
[16:47:21] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:56:17] <j416> aLeSD: although you may be better of using https://pkg.go.dev/net/http/httptest#Server
[16:58:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[16:58:36] *** icyphox is now known as icy
[16:58:43] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[17:00:00] *** Joins: fikran (~fikran@user/fikran)
[17:11:19] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:22:03] *** Joins: independent56 (~independe@2.26.38.174)
[17:23:00] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 268 seconds)
[17:25:37] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[17:31:56] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 252 seconds)
[17:43:08] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[17:43:08] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[17:43:08] *** Joins: menace (~someone@user/menace)
[17:43:20] *** menace is now known as Deknos
[17:44:52] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[17:59:36] *** Joins: bt-01 (~bt-01__@49.207.0.191)
[18:02:32] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[18:05:11] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[18:09:43] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:12:43] *** Joins: palindrome (~palindrom@109.76.93.68)
[18:12:54] *** Joins: SteveR (~SteveR@103.215.168.1)
[18:13:21] <SteveR> Hi there
[18:13:25] <SteveR> any idea why this doesnt work
[18:13:26] <SteveR> https://pasteboard.co/X2b08GXcIt8N.png
[18:13:30] <palindrome> newb question, I have $GOPATH=${HOME}/dev/go, would it make sense to create personal projects inside of this directory?
[18:14:31] <since_> Yes in ~/dev/go/src/yourgoprojectname/
[18:14:53] <SteveR> could someone help me on why GOPATH is not working for me
[18:15:29] <since_> SteveR: do you mean "cd $GOPATH"
[18:16:03] <SteveR> since_ no, but even cd $GOPATH doesnt take me to the GOPATH directory
[18:16:15] <since_> echo $GOPATH
[18:17:03] <since_> Per default yout gopath is ~/go so if you use ~/go you do not need to set gopath
[18:17:10] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[18:17:14] <SteveR> if i do go even GOPATH, i get $HOME/go
[18:17:37] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 240 seconds)
[18:17:42] <SteveR> since_ i am a newbie, when i create a project
[18:17:50] <SteveR> do i need to create a src directory under ~/go
[18:17:53] <since_> SteveR: yes thes the default, when its not set
[18:18:03] <since_> SteveR: yes
[18:18:05] *** Quits: aeadio (~aead@user/aead) (Read error: Connection reset by peer)
[18:18:54] *** Joins: aead (~aead@user/aead)
[18:19:38] <SteveR> since_ what if i create go files in $HOME/test/something.go
[18:19:45] <SteveR> what is the consequence? or drawback?
[18:21:25] <since_> When you use external libraries they will not be found in this folder, as go looks in ~/go/src/
[18:21:35] <since_> Or your custom GOPATH
[18:22:22] *** Quits: palindrome (~palindrom@109.76.93.68) (Quit: WeeChat 3.3)
[18:22:39] <since_> in ~go/ you will have "src" "pkg" and "bin"
[18:23:17] <SteveR> since_ i see only pkg and bin in ~/go
[18:24:56] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:04] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[18:27:27] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:29:12] <ikke> 0
[18:32:09] <since_> 1
[18:33:05] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:38:56] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:41:27] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 250 seconds)
[18:41:58] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:42:02] *** Joins: mrig (~mrig@user/mrig)
[18:45:15] *** Quits: evocatus (~evocatus@62.182.78.42) (Client Quit)
[18:46:40] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[18:47:11] *** Joins: alpha (~alpha@103.87.214.42)
[18:48:02] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[18:48:29] <aLeSD> j416: thanks
[18:48:40] <aLeSD> how could I handle null JSON values ?
[18:48:40] *** Quits: martin_ (nobody@188.113.85.137) (Quit: WeeChat 3.0)
[18:48:50] <aLeSD> in sql tehere is sql.NullString
[18:49:17] *** Quits: alpha (~alpha@103.87.214.42) (Quit: Leaving)
[18:50:11] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[18:54:50] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com)
[18:56:36] *** Joins: martin_ (nobody@188.113.85.137)
[19:05:24] <since_> SteveR: then create src and put your *.go project source files in ~/go/src/myprojectname/
[19:06:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:09:21] *** Joins: fikran (~fikran@user/fikran)
[19:14:41] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[19:18:27] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[19:18:33] *** Joins: mrig (~mrig@user/mrig)
[19:21:28] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[19:27:26] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[19:32:30] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 268 seconds)
[19:34:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:36:17] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com)
[19:37:17] *** Joins: UsbSick (~UsbSick@2600:6c48:757f:e654:217f:9d34:6545:b1a6)
[19:37:58] *** Quits: huan (~huan@79.162.203.187) (Quit: Leaving)
[19:39:26] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[19:42:30] *** Joins: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05)
[19:48:04] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[19:55:04] *** Joins: huan (~huan@79.162.203.187)
[19:56:32] *** Quits: internut (~internut@2601:280:4e00:7b70:4018:4e45:8c2f:6f05) (Ping timeout: 240 seconds)
[20:00:35] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:07:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d1c-130f-54e8-1ad6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:14:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d5a4-1687-e9ec-e2fe.res6.spectrum.com)
[20:18:22] *** Joins: cobber (~protorom@i577BCBBB.versanet.de)
[20:30:37] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[20:32:00] <cobber> when testing a cli package (parse & validate command line, produce suitable errors), is it customary to pass 3 Reader/Writer variables for stdin/stdout/sterr, or is overwriting os.Stdout etc. more idiomatic? My search bubble just returns articles about reading & writing from/to pipes etc. :-(
[20:35:11] *** Joins: internut (~internut@98.38.226.136)
[20:40:10] *** Quits: huan (~huan@79.162.203.187) (Quit: Leaving)
[20:43:44] *** Joins: hellstabber (uid531276@id-531276.hampstead.irccloud.com)
[20:45:30] <shiroyasha> cobber: I usually do something like `func (cli *CLI) ParseArgs(args []string) error` and write tests for that method. `*CLI` is a custom struct that contains all I need for that CLI, and `main` is just a wrapper for it.
[20:47:51] <shiroyasha> So that I don't care if the args come from `os.Args` or whether I'm writing to `os.Stdout`; `*CLI` only sees `[]string` and `io.Writer` respectively.
[20:48:53] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (Quit: Surfing the great wave off Kanagawa)
[20:49:11] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[20:53:19] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[20:56:16] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:56:48] *** Quits: hellstabber (uid531276@id-531276.hampstead.irccloud.com) ()
[20:57:42] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[20:57:42] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[20:57:42] *** Joins: menace (~someone@user/menace)
[20:58:02] *** menace is now known as Deknos
[20:59:06] <cobber> huh? where is io.Writer come from in your ParseArgs() ? I've already got args as an array of strings... but I want to check for the right error when the wrong combination of args are provided - e.g. water -hot -cold - makes no sense :-)
[21:00:17] *** Quits: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se) (Ping timeout: 240 seconds)
[21:00:19] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[21:00:19] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[21:00:19] *** Joins: tane (~tane@user/tane)
[21:01:40] <cobber> and the program *can* take arguments from stdin - so I need to pipe in data - e.g. is I do something like os.Exit(cli.Run(os.Args,os.Stdin,os.Stdout,os.Stdout)) then I can replace stdin/stdout/stderr with io.Reader/io.Writer and test it that way - just seems a bit... awkward
[21:02:09] <since_> cobber: there is also the // Output comment: https://pkg.go.dev/testing#hdr-Examples
[21:05:59] <cobber> good point... forgot about examples...
[21:06:14] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[21:06:32] <cobber> but they can't simulate stdin either, can they?
[21:07:18] *** Joins: aml (~antoon_i@h-85-24-213-163.A392.priv.bahnhof.se)
[21:07:26] <cobber> e.g. to test sort(1): seq 20 | sort -rn
[21:08:41] <cobber> nope - no mention of input in https://pkg.go.dev/testing :-(
[21:09:22] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[21:11:48] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[21:12:41] <seebs> things on stdin aren't exactly *arguments*
[21:13:00] <seebs> anyway, the usual idiom is that you have a thing which runs on an io.Reader, and in production it's run on os.Stdin, and in testing you run it on a bytes.Buffer containing your test data.
[21:13:54] <cobber> seebs - ok... so passing in io.Readers/Writers is the way to go - works fine
[21:14:02] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 240 seconds)
[21:15:19] <cobber> yes, I know stdin isn't where arguments come from - but it's a program which processes "any number of files in a single process", so it makes sense to be able to pipe the output from e.g. find(1) into it
[21:15:45] <cobber> and it doesn't make sense to use xargs(1) :-)
[21:16:11] <cobber> all good, thanks for the hints / confirmation
[21:16:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:17:01] <seebs> i'm not sure it doesn't make sense to use xargs, but i guess cpio did the same thing. that said, usually if you're taking filenames on stdin, those *aren't* parsed for flag-like qualities, at all, so you don't need to worry about "-hot -cold" showing up on stdin
[21:17:08] <seebs> because those would just be raw file names that should not be treated specially
[21:18:30] *** Joins: bt-01- (~bt-01__@49.207.0.191)
[21:18:40] *** Joins: fikran (~fikran@user/fikran)
[21:21:41] <cobber> typical consultant answer: "it depends" :-) The program is called "expunge" and it deletes "all but the newest x files" - so it provides both expunge -keep 5 *.log and find ./ -maxdepth 1 \*.log | expunge -keep 5 -stdin
[21:22:01] <cobber> it's just a little side project to get comfortable with go :-)
[21:22:06] *** Quits: bt-01 (~bt-01__@49.207.0.191) (Ping timeout: 260 seconds)
[21:22:57] <cobber> if you add xargs in the mix, you (can) get multiple lists and it would keep the 5 most recent of each list it was given
[21:25:37] <seebs> ahh, yeah, that's a good reason to take lists on stdin.
[21:25:54] <seebs> although i would observe that i'd probably want the most recent 5 for each log type
[21:27:24] <cobber> then you should run it once per log type... eg: find logs -maxdepth 1 -name apache\*.log | expunge -keep 5 -stdin
[21:27:44] <seebs> yeah, that makes sense
[21:27:58] <cobber> I didn't want too much logic in there - just sort by age and remove duplicates... but that's a different story and already works just fine
[21:33:48] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[21:37:51] *** Quits: bt-01- (~bt-01__@49.207.0.191) (Quit: Leaving)
[21:42:06] *** Quits: redquasar (~redquasar@redquasar.xyz) (Read error: Connection reset by peer)
[21:42:19] *** Joins: redquasar (~redquasar@redquasar.xyz)
[21:50:31] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[22:02:30] *** Quits: anonton (~anonton@2001:470:69fc:105::1:4e88) (Changing host)
[22:02:30] *** Joins: anonton (~anonton@user/anonton)
[22:02:36] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[22:07:42] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[22:08:00] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[22:12:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[22:12:32] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[22:14:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:35:34] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[22:44:07] *** Joins: cmj (~cmj@68.207.254.124)
[23:17:34] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[23:19:21] *** Quits: aead (~aead@user/aead) (Quit: ZNC - https://znc.in)
[23:25:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:28:01] *** Joins: fikran (~fikran@user/fikran)
[23:31:18] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Remote host closed the connection)
[23:32:15] *** Joins: aead (~aead@user/aead)
[23:33:33] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:34:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706)
[23:38:41] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:950c:831c:57ec:7706) (Ping timeout: 245 seconds)
[23:43:45] *** Quits: cobber (~protorom@i577BCBBB.versanet.de) (Quit: cobber)
[23:44:22] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[23:49:51] *** Quits: carlavilla (~carlavill@2a0c:5a84:3407:5100:221:6bff:fe3b:cee4) (Remote host closed the connection)
