[00:22:55] *** Quits: infinityfye (~infinityf@156.212.25.109) (Ping timeout: 252 seconds)
[00:26:31] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[00:50:32] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:53:01] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[01:11:31] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d13:5f00:5d1e:324b:75a2:55b) (Quit: LostKobrakai_)
[01:11:33] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[01:14:01] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 252 seconds)
[01:23:57] *** Joins: infinityfye (~infinityf@156.212.25.109)
[01:24:01] <josevalim> benwilson512: on master live components are called with <.live_component module={FooComponent} id="example" />
[01:24:49] <josevalim> elixir v1.13 will also support plugins for mix format, so the plan is to have ~H formatted from the comfort of `mix format`
[01:25:07] <josevalim> function components do not support file based stuff for now tho
[01:25:29] <josevalim> Oh, LostKobrakai already said this :)
[01:25:30] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[01:30:36] *** Quits: infinityfye (~infinityf@156.212.25.109) (Quit: Leaving)
[01:35:18] *** Joins: srfsh (~srfsh@user/srfsh)
[01:42:12] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d13:5f00:5d1e:324b:75a2:55b)
[01:42:23] *** LostKobrakai_ is now known as LostKobrakai[awa
[01:43:30] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d13:5f00:5d1e:324b:75a2:55b) (Client Quit)
[02:05:51] *** Joins: hoppity (~user@user/hoppity)
[02:06:02] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[02:08:39] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 250 seconds)
[02:20:42] <benwilson512> josevalim: is there a module based component that isn't a stateful live component?
[02:22:43] <benwilson512> I think my general concern with the rise of ~H is that, for an HTML oriented templating tool, prevents easy interoperability existing HTML oriented tooling
[02:23:26] <benwilson512> it is _definitely_ true that some of this could just me being old(er) school and cranky, but "back in my day" templates got their own files :D
[02:23:54] <benwilson512> the practical upside though is that it didn't require tooling that was fancy enough to go "oh, within this Elixir file, there is this indented segment over here that should be treated differently"
[02:24:42] <benwilson512> and that was partially why I was so excited about HEEx, is that it returned a lot of the templating content into something that was vaguely HTML shaped, whereas eex and leex suffered from extensive tag mismatch
[02:25:50] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[02:28:05] <benwilson512> on the solution side: I'm not really advocating for a 1:1 between modules and components, I like the move towards functions. I'm just looking for an easy merging of function components that can point to templates elsewhere, ideally with some nice and easy co-located convention
[02:28:59] <benwilson512> https://www.irccloud.com/pastebin/tLfulPHF/
[02:29:56] <benwilson512> I realize I can probably stitch that together by doing a `use Phoenix.View` in addition to the other imports / uses and dorking with its path options, but this feels like a pattern that deserves first class support
[02:41:09] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Quit: Leaving)
[02:50:53] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d1f:d611:c784:7f39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:58:57] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[03:11:33] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[03:13:58] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 252 seconds)
[03:29:14] *** Joins: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net)
[03:32:20] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Changing host)
[03:32:20] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[03:34:52] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 252 seconds)
[03:56:21] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Ping timeout: 245 seconds)
[04:00:50] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[04:34:45] *** Joins: ur5us (~ur5us@2406:e002:6bf4:3401:c1e8:2153:2220:83c3)
[05:04:04] *** Quits: Poeticode (~Poeticode@user/poeticode) (Read error: Connection reset by peer)
[05:04:10] *** Quits: FMJz_______ (sid279245@lymington.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: gmc (sid58314@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: wojtekmach (sid183574@lymington.irccloud.com) (Ping timeout: 260 seconds)
[05:04:18] *** Joins: FMJz_______ (sid279245@id-279245.lymington.irccloud.com)
[05:04:19] *** Joins: Poeticode (~Poeticode@user/poeticode)
[05:04:21] *** Joins: wojtekmach (sid183574@id-183574.lymington.irccloud.com)
[05:04:44] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Read error: Connection reset by peer)
[05:04:45] *** Quits: triskite3 (uid414920@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[05:04:45] *** Quits: bodgix (~bodgix@vps-ae17da44.vps.ovh.net) (Ping timeout: 260 seconds)
[05:04:53] *** Joins: triskite3 (uid414920@id-414920.uxbridge.irccloud.com)
[05:04:56] *** Joins: bodgix (~bodgix@vps-ae17da44.vps.ovh.net)
[05:05:09] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[05:05:22] *** Joins: gmc (sid58314@id-58314.ilkley.irccloud.com)
[05:14:27] *** Parts: ahappydeath (~silbermm@user/ahappydeath) (WeeChat 3.2.1)
[05:14:34] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[05:55:37] *** Quits: ahappydeath (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[07:02:51] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:c1e8:2153:2220:83c3) (Remote host closed the connection)
[07:03:08] *** Joins: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b)
[07:11:06] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[07:19:16] *** Joins: srfsh (~srfsh@user/srfsh)
[07:36:50] *** Joins: holmes (~holmes@user/holmes)
[07:48:18] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Ping timeout: 260 seconds)
[08:07:18] *** Quits: holmes (~holmes@user/holmes) (Quit: Textual IRC Client: www.textualapp.com)
[08:14:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[08:20:31] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[08:36:39] *** Joins: iamzk (~iamzk@c-73-240-209-70.hsd1.or.comcast.net)
[08:37:09] *** Quits: iamzk (~iamzk@c-73-240-209-70.hsd1.or.comcast.net) (Client Quit)
[08:42:17] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[08:51:19] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:11:18] <serafeim> hello friends
[09:26:27] <serafeim> let's suppose i want to do a try-catch in elixir. and do nothign on the catch clause. how to do that ?
[09:27:29] <Nicd> you can't do nothing
[09:30:06] <serafeim> is this snippet ok: https://dpaste.org/tAK3 ? 
[09:30:27] <serafeim> i want to import the file only if it's there
[09:30:37] <serafeim> if not i don't wanna do anything
[09:30:58] <Nicd> sure
[09:31:03] <serafeim> thanks
[09:44:30] *** Joins: wonko (~wjc@62.115.229.50)
[09:57:06] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 260 seconds)
[10:04:39] *** Quits: Sgeo (~Sgeo@user/sgeo) (*.net *.split)
[10:04:39] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[10:04:39] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au) (*.net *.split)
[10:04:39] *** Quits: fhunleth___ (sid79501@lymington.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[10:04:39] *** Quits: ley (sid320610@hampstead.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: mooff (~mooff@awful.cooking) (*.net *.split)
[10:04:39] *** Quits: henry40408 (~henry4040@112-104-97-56.adsl.dynamic.seed.net.tw) (*.net *.split)
[10:04:39] *** Quits: stiang (sid245441@helmsley.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: bcardarella (sid1539@uxbridge.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[10:04:39] *** Quits: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net) (*.net *.split)
[10:04:39] *** Quits: paak (~Peter@mail.krupl.net) (*.net *.split)
[10:04:39] *** Quits: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[10:04:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[10:26:26] *** Joins: Sgeo (~Sgeo@user/sgeo)
[10:26:26] *** Joins: cursey (~cursey@user/cursey)
[10:26:26] *** Joins: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au)
[10:26:26] *** Joins: fhunleth___ (sid79501@lymington.irccloud.com)
[10:26:26] *** Joins: sm2n (~sm2n@user/sm2n)
[10:26:26] *** Joins: ley (sid320610@hampstead.irccloud.com)
[10:26:26] *** Joins: mooff (~mooff@awful.cooking)
[10:26:26] *** Joins: henry40408 (~henry4040@112-104-97-56.adsl.dynamic.seed.net.tw)
[10:26:26] *** Joins: stiang (sid245441@helmsley.irccloud.com)
[10:26:26] *** Joins: bcardarella (sid1539@uxbridge.irccloud.com)
[10:26:26] *** Joins: nisstyre (~wes@user/nisstyre)
[10:26:26] *** Joins: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[10:26:26] *** Joins: paak (~Peter@mail.krupl.net)
[10:26:26] *** Joins: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[10:26:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[10:28:51] *** Quits: cursey (~cursey@user/cursey) (Max SendQ exceeded)
[10:29:25] *** Joins: cursey (~cursey@user/cursey)
[10:46:53] *** Joins: Guest2390 (~Guest23@165.225.95.46)
[10:47:41] *** Quits: Guest2390 (~Guest23@165.225.95.46) (Client Quit)
[11:06:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[11:08:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:16:45] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:24:43] *** Joins: ziggurat_ (~AdminUser@50.239.20.16)
[11:35:03] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee)
[11:35:06] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[11:35:59] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:37:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:15] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:47:07] *** Joins: ur5us (~ur5us@2406:e002:6c1b:8401:c25c:308:58bb:a8d1)
[11:50:53] *** Joins: notzmv (~zmv@user/notzmv)
[11:51:33] *** Quits: ziggurat_ (~AdminUser@50.239.20.16) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:53:29] *** Joins: ziggurat_ (~quassel@50.239.20.16)
[11:54:28] <josevalim> benwilson512: yeah, i agree. we are getting there
[11:54:45] <josevalim> but if the concern is formatting the plan is also to have that as part of mix format
[12:00:28] *** Quits: ziggurat_ (~quassel@50.239.20.16) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:09:25] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.3)
[12:10:03] *** Joins: Rubyn (~Rubyn@user/rubyn)
[12:25:43] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Ping timeout: 250 seconds)
[12:26:45] *** b3k1 is now known as B3k
[12:36:53] *** Joins: ziggurat_ (~quassel@50.239.20.16)
[12:44:38] *** Quits: ur5us (~ur5us@2406:e002:6c1b:8401:c25c:308:58bb:a8d1) (Ping timeout: 260 seconds)
[12:48:37] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:48:43] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:49:55] *** Quits: ziggurat_ (~quassel@50.239.20.16) (Remote host closed the connection)
[12:50:24] *** Joins: ziggurat_ (~quassel@50.239.20.16)
[12:59:58] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[13:25:20] *** Quits: mooff (~mooff@awful.cooking) (Quit: Quit)
[13:29:48] *** Joins: mooff (~mooff@awful.cooking)
[13:36:01] *** Quits: mooff (~mooff@awful.cooking) (Quit: Quit)
[13:36:39] *** Joins: mooff (mooff@awful.cooking)
[14:23:12] <benwilson512> josevalim: +1. I know this has been a massive effort, definitely excited by everything.
[14:36:10] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[14:48:11] *** Joins: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de)
[14:49:10] *** Joins: phaleth (~phaleth@user/phaleth)
[14:53:14] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[14:53:32] *** Joins: xcm (~xcm@user/xcm)
[15:08:55] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[15:09:03] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:09:19] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Client Quit)
[15:09:35] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:10:39] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.3)
[15:14:03] *** Joins: Rubyn (~Rubyn@user/rubyn)
[15:30:29] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[15:51:28] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:52:47] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[16:04:47] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[16:04:55] <ahappydeath> join #go-nuts
[16:04:59] <ahappydeath> ]join #go-nuts
[16:05:03] <rawtaz> ha!
[16:05:13] <ahappydeath> whoops
[16:05:16] <ahappydeath> lolol
[16:05:17] <rawtaz> that must be the most joinfail i've ever seen :D
[16:05:28] *** Joins: DerShodan (~DerShodan@213-225-10-185.nat.highway.a1.net)
[16:06:53] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[16:15:36] <DerShodan> Hi! Quick questions about ExUnit testing - if you take a look at https://pastebin.com/zSGSHa8Y - this doesn't work. Do you know a way i can hand over function parameters directly at `setup :funcion`?
[16:19:50] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[16:20:30] *** Joins: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[16:26:52] <Nicd> perhaps something like `setup context do create_user(context, %{username: "some guy"}) end`
[16:43:11] <arathunku[m]> <DerShodan> "Hi! Quick questions about ExUnit..." <- it looks like there's no option to do that, take a look: https://github.com/elixir-lang/elixir/blob/7636046bd930bd96b89fd9aa0e882571434a3e1e/lib/ex_unit/lib/ex_unit/callbacks.ex#L233 It needs to be a block
[16:44:26] <DerShodan> Oh I see - that's a bit of a shame. I would have found this exceedingly elegant :)  Thanks for your answer anyways!
[16:45:16] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2011:9ad:7cba:6f6)
[16:47:43] <Nicd> https://gitlab.com/code-stats/code-stats/-/blob/master/test/code_stats_web/controllers/preferences_controller_test.exs#L7-10
[16:50:49] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:01:52] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[17:33:48] *** Joins: warmwaffles (~warmwaffl@108.174.85.188)
[17:35:54] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:13] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:41:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:46:31] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[17:46:49] <mekhami> can a genserver process schedule a message to itself like, let's say "wake myself up in 10 minutes" and then hibernate?
[17:46:50] *** Joins: lizzin (~lizzin@065-190-009-253.inf.spectrum.com)
[17:55:54] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 276 seconds)
[18:00:01] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Ping timeout: 252 seconds)
[18:06:31] <warmwaffles> I don't see why not using `send_after`
[18:08:52] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:14:33] *** Quits: drewolson9 (~drewolson@user/drewolson) (Quit: The Lounge - https://thelounge.chat)
[18:14:52] *** Joins: drewolson (~drewolson@user/drewolson)
[18:18:54] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:28:10] *** Joins: hoppity` (~user@66.222.130.63)
[18:29:31] *** Joins: nickjj_ (~nickjj@user/nickjj)
[18:30:54] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 260 seconds)
[18:31:53] *** Quits: nickjj (~nickjj@user/nickjj) (Ping timeout: 264 seconds)
[18:34:29] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[18:39:13] *** Joins: mekhami (~lawrence@2603-8080-1802-bc00-0aef-5467-2571-d127.res6.spectrum.com)
[18:39:27] <mekhami> sorry, my internet went out and i don't know if anyone answered my last question
[18:39:55] <hoppity`> mekhami: what's the question?
[18:39:55] <benwilson512> mekhami: yes, Process.send_after
[18:40:13] <warmwaffles> hoppity`, >  can a genserver process schedule a message to itself like, let's say "wake myself up in 10 minutes" and then hibernate?
[18:40:24] *** Joins: mahmutov (~mahmutov@37.155.74.145)
[18:40:44] *** Joins: natrys (~natrys@user/natrys)
[18:41:58] *** Quits: lizzin (~lizzin@065-190-009-253.inf.spectrum.com) (Quit: Client closed)
[18:43:11] <m1dnight> It depends what you call hibernate. 
[18:43:26] <mekhami> benwilson512: i mean literally using :hibernate
[18:43:33] *** Joins: srfsh (~srfsh@user/srfsh)
[18:43:41] <benwilson512> mekhami: whether you hibernate or not is orthogonal right?
[18:44:00] <benwilson512> like, call Process.send_after(self(), :ping, delay) then return the hibernate tuple from your genserver callback
[18:44:36] <benwilson512> ir 
[18:44:41] <benwilson512> or are you trying to hibernate after 10 min
[18:44:46] <benwilson512> or hibernate _until_ 10 min from noiw
[18:46:28] *** Joins: lizzin (~lizzin@065-190-009-253.inf.spectrum.com)
[18:46:45] <benwilson512> if it's more like the "hibernate after 10 min" then check the hibernate_after option
[18:46:49] <mekhami> i want to hibernate until 10 minutes from now
[18:46:55] <benwilson512> sure so
[18:47:03] <mekhami> then wake up and do a thing
[18:47:06] <benwilson512> queue up a message to be sent to yourself 10 min from now, then return the hibernate tuple
[18:47:11] <m1dnight> https://erlang.org/doc/man/proc_lib.html#hibernate-3, this says that any process that is currently hibernating will just wake up when it receives a message.
[18:47:19] <benwilson512> right
[18:47:36] <m1dnight> And assuming here that send_after is done by another process, it's just like any other message.
[18:48:01] <benwilson512> yeah it's I think technically a BIF, but it's logically equivalent to that
[18:48:21] *** Joins: jbell (~jbell@159.178.91.78)
[18:49:12] <benwilson512> mekhami: is this making sense or no?
[18:50:18] <mekhami> the part about 'assuming here that send_after is done by another process' is what isn't correct in my case.
[18:50:26] <mekhami> basically, let me give you the context so this isn't an AB problem
[18:51:13] <mekhami> i have a process that collects some state (from sqs messages.) then every ten minutes it needs to process something in its state. In between those ten minutes, I wanted to hibernate to save that memory, but I need the process to wake up on that schedule even though it's hibernated
[18:51:31] <benwilson512> literally call Process.send_after
[18:51:33] <benwilson512> why wouldn't that work?
[18:51:40] <mekhami> and hibernate won't remove that from the scheduler?
[18:51:44] <benwilson512> no
[18:52:00] <mekhami> i was reading something that i can't find now that implied that it would, but i'll try it out myself and see.
[18:52:23] <mekhami> alternatively, i just use something like oban to schedule all the events that process would handle.
[18:52:50] <benwilson512> using a queue to manage a queue is generally not desirable
[18:53:01] <benwilson512> if you're using SQS I'd consider broadway_sqs
[18:57:23] <m1dnight> https://exbin.call-cc.be/DehydrateSpelunker
[18:57:31] <m1dnight> I tried this one, and seems to work for me. 
[19:05:56] *** Quits: DerShodan (~DerShodan@213-225-10-185.nat.highway.a1.net) (Quit: Client closed)
[19:06:34] <mekhami> benwilson512: i am using broadway
[19:06:39] <mekhami> it's more complicated than what i'm suggesting here
[19:06:43] <mekhami> i boiled it down a bit
[19:07:24] <mekhami> i'm pulling sqs messages off a queue and then i have to do some processing of that message, create some new data structures that get scheduled to send to another service
[19:07:36] <m1dnight> But why can you not let another process send it a message? 
[19:07:46] <m1dnight> You are assuming that you cannot wake up said genserver, why not?
[19:08:32] <mekhami> because the process that receives the original message and does the work on it to create the new data structures is the only one that knows the schedule (it's dynamic based on the sqs payload)
[19:10:43] <m1dnight> Well, why can't it do a send_after to itself?
[19:11:34] <mekhami> that's the tactic i'm working on now but i had read somewhere, i thought, that hibernating would discard any pending messages
[19:12:04] *** Quits: ahappydeath (~silbermm@user/ahappydeath) (Ping timeout: 252 seconds)
[19:12:09] <josevalim> mekhami: broadway doesn't give you a lot of control over the processes processing the messages
[19:13:03] <josevalim> so ideally you would use broadway to do the processing and then have it Process.send_after(...) to the process that will deliver it later
[19:13:36] <josevalim> the issue though is shutdown. now any shutdown you do needs to wait for 10 minutes since you may have queued stuff
[19:14:55] <mekhami> josevalim: that's tolerable behaviour, because we'd have to persist all that queued state before we shut down anyway, losing those queued events would not be acceptable from a business perspective
[19:15:12] <mekhami> right now we use broadway to pull messages off of SQS and then create our own genserver process and ack the message back to SQS
[19:15:21] <mekhami> so broadway's job is considered done after we successfully create our own process
[19:15:41] <mekhami> (to that extent we probably aren't even using broadway for anything that ExAws doesn't provide)
[19:15:43] <josevalim> mekhami: can you put it back in another queue instead with a delivery time?
[19:16:09] <josevalim> get the message, process it, put it in another queue to say "deliver it in 10 minutes", then ack it
[19:16:31] <mekhami> that's essentially what we're doing, just using our custom genserver process as a sort of queue
[19:16:37] <mekhami> rather than writing it back to the SQS queue
[19:16:44] <mekhami> because we easily bump into SQS queue limit lengths
[19:16:51] <mekhami> that's why we're rewriting to this strategy
[19:17:09] <josevalim> which sqs queue limit lengths?
[19:17:19] <josevalim> like the queue is too large?
[19:17:40] <mekhami> yeah
[19:17:46] <mekhami> 20k for a FIFO queue
[19:17:56] <josevalim> mekhami: what is the margin of error for something to be delivered in 10 minutes?
[19:18:06] <josevalim> and are the payload sizes too big?
[19:18:15] <hoppity`> Has anyone used PGAdmin 4 to dump a Postgres database? Can you give me some tips on how to do it properly?
[19:18:15] <mekhami> the payload sizes are realy big right now but we're working on minimizing them
[19:18:21] <josevalim> I see
[19:18:38] <mekhami> josevalim: it's not necessarily ten minutes, it's a time determined by our customers, and there's not a lot of tolerance in those timings, as its emergency messaging services
[19:18:53] <josevalim> cause another option is to use broadway batching and then you queue a 30 seconds batch
[19:19:01] <josevalim> that would address the large queues but it won't address the large payload sizes
[19:19:40] <josevalim> another idea is to write the batches to S3, and then the sqs message is just a metadata of s3 entries to deliver
[19:20:00] <josevalim> other than that, putting it in the GenServer is fine, just remember to stress and test the shutdown logic
[19:20:00] <mekhami> hm, that's a thought
[19:20:15] <mekhami> yeah we're loadtesting the hell out of it once its done. 
[19:21:12] <mekhami> thanks for your time. this is our first elixir service so i'm quite nervous about it.
[19:21:27] <josevalim> i mentioning s3 and batching in case you want to avoid a 10 minute shutdown. perhaps even more time, depending on what the user chooses
[19:22:00] <mekhami> we have this concept of a write through store that updates a database with the current state of each process (which message in the process is sent, which are remaining etc)
[19:22:17] <mekhami> and so the shutdown should just be 'everybody write your state to the write-through and then suicide'
[19:22:30] <mekhami> and then we spin back up another node that pulls off the write through
[19:22:35] <mekhami> and restarts with that last known state
[19:22:46] <josevalim> yup, that should work just fine too
[19:23:01] <josevalim> just remember that all processes have 5 seconds to shutdown by default, so you probably want to bump that
[19:23:10] <mekhami> ooh good to know. 
[19:23:26] <josevalim> and remember to load test  your deployments to make sure data is not missed
[19:23:52] <josevalim> i.e. start the load testing and then do a new deploy
[19:24:23] <mekhami>  what would be the flow where data would be missed?
[19:24:58] <josevalim> you don't give enough time for your processes to shut down
[19:25:08] <mekhami> ah yeah okay, misunderstood
[19:25:19] <josevalim> or you tell your node to shutdown while it is still receiving requests
[19:26:10] <josevalim> mekhami: in your supervision tree you want the Broadway pipeline to come after your GenServers. this way Broadway drains the pipeline first, and then you start persisting to the database
[19:26:52] <josevalim> the good news is that you likely have those problems regardless of the stack, the runtime just gives you a good mental model to think about those issues
[19:26:58] <josevalim> (at least in my experience)
[19:27:01] <josevalim> and good luck!
[19:27:21] <mekhami> thank you very much :) always appreciate the extra insight, lots of things i'm not experienced enough to think of yet hah
[19:27:32] *** Joins: robert__ (~robert@136.49.193.254)
[19:27:36] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[19:36:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[19:48:38] *** Quits: mekhami (~lawrence@2603-8080-1802-bc00-0aef-5467-2571-d127.res6.spectrum.com) (Quit: WeeChat 2.8)
[19:48:39] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[19:54:34] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[20:05:51] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[20:13:07] *** Quits: lizzin (~lizzin@065-190-009-253.inf.spectrum.com) (Quit: Ping timeout (120 seconds))
[20:13:43] *** Joins: lizzin (~lizzin@065-190-009-253.inf.spectrum.com)
[20:13:56] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[20:23:34] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 252 seconds)
[20:31:55] *** nickjj_ is now known as nickjj
[20:34:10] *** Joins: havenwood9 (~havenwood@about/ruby/havenwood)
[20:35:08] *** Joins: kenichi_ (~kenichi@nakamura.io)
[20:35:16] *** Quits: kenichi (~kenichi@nakamura.io) (Ping timeout: 250 seconds)
[20:35:21] *** kenichi_ is now known as kenichi
[20:35:29] *** Quits: picasso (mike@potbox.pixor.net) (Ping timeout: 264 seconds)
[20:36:01] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Ping timeout: 265 seconds)
[20:36:01] *** havenwood9 is now known as havenwood
[20:36:13] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee) (Ping timeout: 252 seconds)
[20:36:58] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee)
[20:37:36] *** Joins: picasso (mike@potbox.pixor.net)
[20:55:11] *** Quits: lizzin (~lizzin@065-190-009-253.inf.spectrum.com) (Quit: Ping timeout (120 seconds))
[21:01:48] *** Joins: lizzin (~lizzin@065-190-009-253.inf.spectrum.com)
[21:10:25] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[21:11:25] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Client Quit)
[21:12:31] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[21:13:17] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[21:13:52] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:20:00] *** Quits: lizzin (~lizzin@065-190-009-253.inf.spectrum.com) (Ping timeout: 256 seconds)
[21:23:28] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:32:26] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2011:9ad:7cba:6f6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:44:16] *** Joins: wonko (~wjc@62.115.229.50)
[21:51:00] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:2011:9ad:7cba:6f6)
[21:51:30] *** Joins: notzmv (~zmv@user/notzmv)
[21:56:24] <hoppity`> I'm having an issue where using Mix gen.live generates .heex files and my Phoenix installation (previouslt 1.5.9, now 1.6.0) complains about live_modals missing @socket. Does anyone know how to fix
[22:03:04] *** Joins: lizzin (~lizzin@065-190-009-253.inf.spectrum.com)
[22:07:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[22:10:29] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:14:37] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 250 seconds)
[22:15:52] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Quit: Leaving)
[22:20:07] <josevalim> hoppity`: live_modal no longer needs to receive a socket argument i think
[22:20:49] <josevalim> hoppity`: best fix is to call `mix archive.install hex phx_new` to update your app generator and then `mix phx.gen.new example` and compare the live_modal implementations
[22:22:02] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:24:17] *** LostKobrakai_ is now known as LostKobrakai[awa
[22:24:17] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee) (Quit: LostKobrakai[awa)
[22:27:49] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee)
[22:30:11] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d9e:3100:8197:5b21:6f15:6aee) (Client Quit)
[22:42:55] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[22:47:54] *** Joins: natrys (~natrys@user/natrys)
[22:50:28] *** Joins: ur5us (~ur5us@2406:e002:6c21:1b01:1d94:5568:cc90:9ee2)
[23:03:15] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:15:56] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[23:18:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:26:46] *** Quits: ur5us (~ur5us@2406:e002:6c21:1b01:1d94:5568:cc90:9ee2) (Ping timeout: 245 seconds)
[23:31:46] *** Joins: skali (~skali@178.214.251.8)
[23:36:17] *** Quits: lizzin (~lizzin@065-190-009-253.inf.spectrum.com) (Quit: Ping timeout (120 seconds))
[23:39:36] *** Joins: ur5us (~ur5us@2406:e002:6c21:1b01:1d94:5568:cc90:9ee2)
[23:49:58] *** Quits: skali (~skali@178.214.251.8) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:58:24] *** Joins: mahmutov_ (~mahmutov@5.176.41.106)
[23:58:30] *** Quits: mahmutov (~mahmutov@37.155.74.145) (Ping timeout: 260 seconds)
