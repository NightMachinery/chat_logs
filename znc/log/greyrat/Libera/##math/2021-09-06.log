[00:00:07] *** Quits: Nalt (~Nalt|||@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 245 seconds)
[00:00:07] *** Joins: pazof (~Paul@117.105.62.94.rev.vodafone.pt)
[00:00:22] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:00:26] *** Joins: biberao (~Unknown@user/biberao)
[00:00:27] <biberao> hi
[00:00:32] <pazof> hi
[00:00:35] *** Quits: Guest84 (~Guest84@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[00:00:58] <[itchyjunk]> wait
[00:01:17] <[itchyjunk]> don't wait, nm that
[00:01:26] <Z-module> remember, extra multiples of 2pi i k  don't change anything.  You need all the extra mutliples  2pi i k/3
[00:01:28] <pazof> how long?
[00:01:33] <Z-module> sorry,  2pi i k/4
[00:01:45] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 248 seconds)
[00:02:00] *** Joins: APic (apic@apic.name)
[00:02:43] <Z-module> the 4th roots of 1 are all the  e^(i 2pi k/4)  and *these* are the factors to use, to multiply against some single 4th root of the original thing
[00:03:01] <Z-module> but also, for ease in calculating, just remember that the 4th roots of 1 are nothing but 1, i, -1, -ik
[00:03:05] <Z-module> -i  rather
[00:03:30] <Z-module> crap, I said k/3 up there when I meant k/4
[00:03:31] <Z-module> sorry
[00:04:06] <biberao> sup
[00:04:11] <Z-module> 2 e^(i pi/3)  is *one* particular 4th root of your original thing. So this times any of 1, i, -i, -1  give all possible 4th roots.
[00:04:13] <riv> how to show that pi/4 = 4 atan(1/5) - atan(1/239) ?  I tried rewriting atan as an integral and joining them to get this integrand, -239/(t^2 + 57121) + 20/(t^2 + 25) but that didn't seem useful
[00:05:57] <int-e> riv: use the addition formula of tangent? pari/gp: (a(u,v) = (u+v)/(1-u*v)); (d(x) = a(x,x)); a(d(d(1/5)),-1/239)
[00:06:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[00:06:09] <int-e> results in 1 = atan(pi/4).
[00:06:18] *** Quits: DefiantN (~DefiantN@user/defiantn) (Remote host closed the connection)
[00:06:23] <int-e> err. tan(pi/4), ouch
[00:07:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:07:35] <riv> thanks
[00:08:32] <int-e> (the function names are "a" = add, "d" = double)
[00:08:45] <riv> so nice
[00:08:48] <riv> one liner :D
[00:08:56] *** Joins: Tangoose (~Arco@68.40.3.32)
[00:09:04] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[00:10:04] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[00:10:18] <int-e> riv: oh and you need to check thsat you really get pi/4 and not some other solution of tan(x) = 1. but that's easy enough by approximation
[00:10:56] <CuriousErnestBro>  qergle Essentials of Stochastic Processes Rick Durrett
[00:11:05] <riv> it is a great solution, but it leaves me wondering how 1/239 was found
[00:11:10] *** Quits: Dexel (~Arco@68.40.3.32) (Ping timeout: 240 seconds)
[00:12:25] <int-e> riv: probably exactly like this... consider: a(d(d(1/5)),-1)
[00:12:32] <Juliu> Z-module, why are the 4th roots of 1 not 1, i, -1, -i ?
[00:13:07] <riv> ... omg
[00:13:12] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:13:16] <riv> that's amazing
[00:17:57] *** Quits: gayuncle (~yrdaddy@c-24-7-80-129.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:18:03] <[itchyjunk]> I just understood what you said before
[00:18:23] <[itchyjunk]> once i have a root of z, i can multiply it by another complex number that represents this rotation to get the rest
[00:18:34] <[itchyjunk]> in this case, it was 1,-1,i,-i
[00:18:43] <[itchyjunk]> hmmmm
[00:19:03] <[itchyjunk]> i gues this is true for all 4th roots because the angle between them would be pi/2 ?
[00:19:30] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Remote host closed the connection)
[00:19:57] <Z-module> they are, Juliu
[00:21:24] <Z-module> [itchyjunk]: simply because 1^4 = i^4 = (-1)^4 = (-i)^4 = 1.   1 = e^(i 2pi 0/4),  i = e^(i 2pi 1/4), -1 = e^(i 2pi 2/4),  -i = e^(i 2pi 3/4)
[00:22:46] <riv> alright I did 5 intgrals
[00:23:01] <Z-module> so in general if  z^4 = w    for some specific z, some specific nonzero w, then also  (z i)^4 = (z (-1))^4 = (z (-i))^4 = w
[00:23:45] *** Joins: diamondbond (~diamondbo@175.157.48.199)
[00:24:03] <Juliu> Z-module, ok
[00:24:28] *** Quits: diamondbond (~diamondbo@175.157.48.199) (Remote host closed the connection)
[00:24:35] <riv> https://i.postimg.cc/ZqL7W24f/Screenshot-2021-09-05-19-27-44.png actually
[00:24:40] <riv> thsi one is interesting
[00:24:51] <riv> i get the 22/7 < pi bit
[00:24:56] <riv> but how are they getting the 1/256 bit?
[00:24:59] *** Joins: DefiantN (~DefiantN@user/defiantn)
[00:25:56] *** Quits: anovick (~anovick@IGLD-83-130-127-193.inter.net.il) (Ping timeout: 250 seconds)
[00:26:17] <riv> perhaps we make the integrand  a little larger
[00:26:21] <riv> something like that
[00:26:26] <droid3> hey guys i cannt think great today. Anybody have an example of a infinite element field that is not finitely generated and not commutative.
[00:26:44] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[00:27:05] <Z-module> droid3, do you mean group?
[00:27:39] <droid3> Obviously most people can think of an infinite element field that is not finitely generated and commutative. Q is an example.
[00:28:03] <Z-module> Fields are commutative by definition. Do you mean division ring?
[00:28:05] <droid3> O sorry i meant to say group instead of field yes Z-module.
[00:28:13] *** Quits: dangrenier83 (~username@user/dangrenier83) (Ping timeout: 252 seconds)
[00:28:17] <Z-module>  use the free group on infinitely many generators x_1, x_2, x_3, ...
[00:28:57] <[itchyjunk]> makes sense
[00:29:03] <Z-module> or easier,  Q x S_3
[00:29:19] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[00:29:27] <droid3> O yes that some right thanks.
[00:30:37] <Z-module> the free group example is nicer in that it has trivial center -- it is "as noncommutative as possible"
[00:30:38] <int-e> riv: x^4(1-x)^4 <= 1/256
[00:30:45] <int-e> riv: for x in [0,1]
[00:31:14] <int-e> riv: you've probably maximized x(1-x) before...
[00:31:52] *** Quits: magla (~gelignite@55d40548.access.ecotel.net) (Quit: Stay safe!)
[00:32:08] <[itchyjunk]> prnciple root is just the case where k = 0 ?
[00:32:12] <[itchyjunk]> https://i.ibb.co/MMdvYGF/image.png
[00:32:15] <riv> huh
[00:32:15] <droid3> Yes nice one Z-module also got an example of
[00:32:18] <droid3> Also an example of infinite element group that is finitely generated but non-communicative
[00:32:19] <riv> I got 1/630
[00:32:24] <[itchyjunk]> i've done this minus the principle root part
[00:32:30] <Z-module> free group on 2 generators
[00:32:34] <[itchyjunk]> i don't see the significance of this in my picture
[00:32:39] <riv> int-e, I see! thank you
[00:32:42] <int-e> riv: that's better than 1/256
[00:32:49] <riv> byt maybe a little harder to do
[00:32:57] <droid3> probably the set of matrices over a field
[00:33:28] <droid3> but it have to be a subset that is finitely generated
[00:33:44] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 250 seconds)
[00:33:47] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 252 seconds)
[00:33:54] <int-e> riv: yeah, the beauty of 1/256 is that you don't even need a calculator
[00:34:14] <Z-module> [itchyjunk]: there isn't really a universally accepted definition of "principal nth root" of a complex number, but most often they mean the one with smallest Arg, where Arg = principal arg = value in [0, 2pi)
[00:34:36] <Juliu> << 1/256
[00:34:53] <Juliu> 0.00390625
[00:34:53] *** Joins: hyiltiz (~quassel@31.220.5.250)
[00:34:59] <Juliu> I need a calculator for that
[00:35:17] <[itchyjunk]> ah okay
[00:35:21] <droid3> ya never mind i got a few for the case of infinite element group that is finitely generated but non-abelian
[00:35:39] <[itchyjunk]> so it's not special in other way other than convenience
[00:36:01] <Z-module> there are many, droid3, probably the easiest being Z x S_3
[00:36:46] <droid3> ya that i good one to.
[00:36:50] <Z-module> a minimal generating set there would be  { (1, () ),  (0, (1 2)),  (0, (1 2 3)) }
[00:37:05] <arseniiv> I read that complex analysis book adviced by barravince and oh my still itâ€™s an analysis textbook, with inequalities and tricky situations, though I see the author tried to minimize that. But proving Cauchy integration theorem by chunks still reminds us: analysis is full of technicalities to prove things which seem obvious or essential
[00:37:47] *** Joins: Everything (~Everythin@37.115.210.35)
[00:38:44] *** Quits: llorllale (~llorllale@97.108.193.189) (Quit: WeeChat 3.2.1)
[00:39:01] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Quit: gone too far)
[00:39:22] <droid3> Z-module curious do we have any classification theory currently for the case of finitely generate non-communicative groups. We got a great classical classification for the case of finitely generated commutative groups being uniquely isomorphic to Z^r x Zp^m x Zq^n...xZ etc
[00:40:03] <droid3> Hows the progress on the non-communicative case????
[00:40:15] <droid3> Anybody know more about it.
[00:41:13] <droid3> It seems the best we done so far is classify the finite simple groups. And that was a ridiculous complex feat spreading many volumes of math journals.
[00:41:17] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[00:41:26] *** Quits: carter (sid14827@id-14827.helmsley.irccloud.com) (Ping timeout: 256 seconds)
[00:41:29] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[00:42:13] <droid3> I wasnt sure if the finitely generated noncommunicative was harder to classify then the finite simple group case interms of complexity ???
[00:43:09] *** Joins: carter (sid14827@id-14827.helmsley.irccloud.com)
[00:43:54] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Remote host closed the connection)
[00:44:11] <Z-module> droid3:  it turns out there exist infinite groups G, that are finitely generated, such that g^101 = e  for all g.  (This forces G to be non-abelian.)
[00:44:16] <Z-module> This result is only 6 years old.
[00:44:41] <Juliu> What about Z,+ ?
[00:45:04] *** Joins: otto_s_ (~user@p5b04481b.dip0.t-ipconnect.de)
[00:45:05] <Z-module> nothing in Z is a torsion element, other than 0
[00:45:22] <Juliu> I meant, isnt that infinite but finitely generated?
[00:45:43] <Z-module> sure, that part is easy
[00:46:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:46:49] <Z-module> droid3: well, every countable group whatsoever embeds in some 2-generated group
[00:47:04] <droid3> Z-module but that doesnt imply that particular group makes all infinite element groups that are finitely generated non-abelian or abelian?
[00:47:09] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[00:47:12] *** Quits: otto_s (~user@p5b044ad0.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[00:47:18] *** Joins: pounce (~pounce@facebook/engineering/pounce)
[00:47:39] <droid3> Confused about why that is significant that g^101 = 1 that just a particular case / group?
[00:47:43] <Z-module> a finitely generated abelian *torsion* group is of course finite.
[00:48:16] *** Joins: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca)
[00:48:32] <Z-module> droid3, it's quite quite difficult to write down finitely generated infinite groups of "bounded exponent" such as exponent 101
[00:48:32] <droid3> rank = 0  its just a direct product of finite cyclic groups ya its finite.
[00:48:52] <[itchyjunk]> why does closed imply finite? in topological sense
[00:49:06] <Z-module> [itchyjunk]: it's doesn't. What detail did you omit?
[00:49:06] <Koen_> it doesn't
[00:49:24] <[itchyjunk]> hmm someone was closed manifold then they talked about finiteness
[00:49:26] <[itchyjunk]> i'll aks them again
[00:49:47] <droid3> That how we get the classification theorem for all finite abelian groups  from finitely generated abelian groups. It follows trivially because every finite group is finitely generated.
[00:49:52] <Z-module> by the way, that word has a different meaning for manifolds than in topology in general
[00:50:08] <Z-module> yes droid3
[00:51:02] <droid3> Anyway Z-module i was " it's quite quite difficult to write down finitely generated infinite groups of "bounded exponent" such as exponent 101"
[00:51:29] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:51:30] <Z-module> it's difficult to do for any exponent
[00:51:42] <droid3> Ya true but how does this imply a classification for finitely generated nonabelian groups
[00:51:48] <Z-module> it doesn't at all
[00:53:01] *** Quits: robin (~robin@user/terpri) (Read error: Connection reset by peer)
[00:53:47] <droid3> hummm so it seems the most difficult part of classifying all groups in general is the abeilan vs nonabelian nature
[00:54:44] <Z-module> even restricting to just abelian groups, there's nothing remotely like a full classification, except in very special cases such as f.g., or countable and torsion, and a few other cases.
[00:56:22] <droid3> ya but how many groups are infinite element groups that are not countable. That would be practical to want to work will.
[00:56:47] <droid3> regardless of abelian or nonabelian nature.
[00:57:22] <droid3> Is there infinite or finite do we know a method of counting isomorphic ones ...etc?
[00:57:29] <Z-module> not at all
[00:59:32] <droid3> How about restricting to finite nonabelian groups instead of infinite element countable/uncountable cases.
[00:59:47] <Gustavo6046> I am the square root of minus one. Ask me anything!
[00:59:48] <droid3> Do we make any current progress on that area
[01:00:50] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[01:00:53] *** Joins: h4zel (~hazel@user/h4zel)
[01:01:02] <droid3> Do we at least have a formula to count the different finite nonabelian groups that are nonisomorphic to one another ?
[01:01:41] <Z-module> Here's a wacky one for you, droid3:  If G is finitely generated, and if g^2 = e for all g, or g^3 = e for all g, or g^4 = e for all g, or g^6 = e for all g, then G must be finite. But we don't know the answer in the case that g^5 = e for all g.
[01:02:05] <droid3> I mean i can write a program to count them when the multiplication and addition tables are reasonable managable for a computer to run there all combinations.
[01:02:14] <droid3> But this get impractical fast.
[01:02:53] <droid3> Didnt know if somebody cleave came up with a way to count all finite nonabelian groups that are isomorphically different. Like some kind of closed form formula for it?
[01:04:17] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:04:28] *** Joins: flynn (~mcbloch@user/flynn)
[01:05:24] <droid3> Z-module that neat so maybe someday based on the elements of a group not exceeding a certain order or all having a certain order that would imply some kind of classification theorem for the case of finitely generated nonabeilan side of things. That a wacky cool property though
[01:06:26] *** Joins: gggp (~textual@60.10.23.169)
[01:08:10] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[01:08:15] <Z-module> even in the finite group case that you just asked about, nothing very general can be said. We do know all the finite simple groups, but we can't systematically say how to *combine*/extend those in all possible ways, neatly.
[01:09:37] *** Quits: Koen_ (~Koen@246.244.88.92.rev.sfr.net) (Quit: Leaving...)
[01:10:14] <Z-module> I do like this fact a lot:  There is a single countable abelian group (in fact, the direct sum of aleph_0 copies of Q x Q/Z ) that contains subgroups isomorphic to any possible countable abelian group.  But we can prove that no nonabelian countable group has this property, concerning all possible countable groups.
[01:10:17] <droid3> ya it would be nice Z-module if someday we could extend it. With some Jordanâ€“HÃ¶lder Theorem like theorem
[01:10:42] <droid3> " but we can't systematically say how to *combine*/extend those in all possible ways, neatly."
[01:11:10] <droid3> thats the be issue from going from classifying all finite groups from finite simple groups
[01:11:11] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[01:11:39] <droid3> So cool when / if that day comes.
[01:12:20] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:12:33] *** Joins: Guest84 (~Guest84@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:12:51] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[01:13:23] *** Joins: montxero (~user@149.167.149.74)
[01:14:29] *** Quits: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca) (Ping timeout: 252 seconds)
[01:15:23] <droid3> Z-module though it seems someday there should be a way to classify all finite groups by there finite simple groups we got jordan holder theorem already.
[01:17:29] *** Joins: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca)
[01:20:00] *** Joins: specing (~specing@user/specing)
[01:20:07] <droid3> ya why exactly is it so hard to go from jordan-holder theorem break the finite group down into its finite simples groups and classify it that way??
[01:22:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:22:47] <droid3> Its not like in this case where working with infinite element simple groups.
[01:23:26] <droid3> which what i am aware has no known classification theorem for infinite simple groups.
[01:24:25] <droid3> But where dealing with finite simple groups applied to finite groups with Jordan-Holder theorem. What is the difficult part in classify finite groups if you got Jordan-Holder and the classification of finite simple groups?
[01:24:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:24:57] <droid3> Z-module or InPhase or any other guys that are aware of these answers possible.
[01:25:20] *** Lord_of_Life_ is now known as Lord_of_Life
[01:25:38] <loopspace> Extension problem, for one thing
[01:25:50] <droid3> what do you mean by that
[01:26:07] <droid3> can you elaborate on it.
[01:26:26] <int-e> you have to deal with synthesizing semidirect products, hmm.
[01:26:59] <loopspace> droid3: https://usercontent.irccloud-cdn.com/file/9OGyH7ZQ/image.png
[01:28:51] <int-e> And I'd speculate that you'll have to do some checking for duplicates (isomorphic groups produced in different ways) too.
[01:28:58] *** Joins: DrNostril (~DrNostril@185.183.105.244)
[01:30:56] <Z-module> anyway, until my googling a few hours ago, I was not aware that the Burnside odd-exponents situation had been improved from 665 down to 101, just six years ago.
[01:31:12] <Z-module> and we're still in the dark about exponent 5.
[01:31:25] <loopspace> droid3: also: https://usercontent.irccloud-cdn.com/file/S0Yn6GGQ/image.png
[01:32:40] *** Quits: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[01:32:43] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[01:33:35] <Z-module> oh crap, Adian died last year; his final fully detail proof might never come out.
[01:34:23] <droid3> "Jordanâ€“HÃ¶lder theorem states that any two composition series of the same group have the same length and the same composition factors (up to permutation)." So how does this make the extension problem still hard there same length and same composition factors
[01:35:06] <droid3> we can break all finite groups down into there composition series we cannt we just classify them by the composition series itself?
[01:35:42] <loopspace> Extension problem: reconstructing the group from the factors
[01:35:55] <loopspace> (groups)
[01:36:55] <droid3> so its hard to take the finite simple groups and build back up an isomorphism for the finite group from them.
[01:37:11] <droid3> In general
[01:37:45] <loopspace> droid3: a larger excerpt of the last blurb with a little more context, in case you find it interesting https://usercontent.irccloud-cdn.com/file/G44zv21J/image.png
[01:38:29] <loopspace> Some progress exists; e.g. with respect to finding the multiplication table (schrier)
[01:38:48] <loopspace> See the remark on the first page and the footnote though
[01:38:58] <droid3> how about a formula for counting the nonisomorphic finite groups
[01:39:40] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[01:39:53] <int-e> loopspace: thanks, that explicitly states that isomorphism testing is a bottleneck.
[01:40:37] <int-e> (See the Remark to the left)
[01:46:48] *** Quits: gb73d (gb73d@host-92-10-214-66.as13285.net) ()
[01:53:32] <[itchyjunk]> How does the  successor function work/ is defined?
[01:53:44] <greenbagels> for integers?
[01:53:53] <[itchyjunk]> for natural numbers
[01:54:30] <int-e> which natural numbers?
[01:54:43] <greenbagels> https://en.wikipedia.org/wiki/Peano_axioms#Formulation
[01:55:06] <[itchyjunk]> oh ohh
[01:55:11] <int-e> . o O ( S(x) = x u {x} )
[01:55:13] <[itchyjunk]> there are different natural numbers?
[01:55:27] *** Quits: Europa_ (~Europa@user/europa) (Remote host closed the connection)
[01:55:34] <int-e> there are different constructions for the natural numbers
[01:55:45] <[itchyjunk]> S n * 0 = 0 is getting simplified to n * 0 = 0 and i am trying to understand why
[01:55:51] *** Joins: Europa (~Europa@user/europa)
[01:56:18] <Izem> that
[01:56:19] <int-e> [itchyjunk]: it's a syntax problem? (S n) * 0
[01:56:40] <Izem> s one famous function I always see but I don't know what it does
[01:57:12] <[itchyjunk]> hmm
[01:57:40] <[itchyjunk]> idk what you mean by syntax problem. i still don'tget what's happening with the added () this time :s
[01:58:08] <int-e> [itchyjunk]: If the definition is like on the wiki, then x * 0 is 0 for any x.
[01:58:20] <int-e> including x = S n.
[01:58:48] *** Quits: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[01:58:49] <[itchyjunk]> ah
[01:59:03] <int-e> I guess I was too lazy... what I meant is that S n * 0 means (S n) * 0.
[01:59:38] <greenbagels> they could just be equating the two zero-valued expressions instead of turning one into the other
[02:01:30] <int-e> [itchyjunk]: if the definition is not like the one on the wiki (you can do the inductive definition on the first argument instead), then you get S n * 0 = 0 + (n * 0) = n * 0, and if you use induction, you get that n * 0 = 0 by the induction hypothesis.
[02:02:05] <int-e> (base case is 0 * 0 = 0; that is immediate from the definition)
[02:02:12] <[itchyjunk]> oh oh, that looks more fimiliar let me try to understand this one
[02:02:46] <[itchyjunk]> S n * 0 = 0 + (n * 0 ), this part i don't think i get
[02:04:07] <greenbagels> (n + 1) * 0 = 0 * n + 0
[02:04:11] *** Joins: p0indexter (~alpha@user/p0indexter)
[02:04:27] <[itchyjunk]> ohhhhhhhh
[02:04:38] <int-e> [itchyjunk]: you'd have S n * m = m + n * m.
[02:04:44] <int-e> with m = 0
[02:05:20] <int-e> Or, possibly, S n * m = n * m + m, but that's unlikely because people make definitions convenient
[02:05:37] *** Quits: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae) (Quit: Surfing the great wave off Kanagawa)
[02:07:04] <greenbagels> [itchyjunk]: if you're just starting from something like, the peano axioms, you wouldn't be able to just say what i said though
[02:07:04] <[itchyjunk]> Makes sense!
[02:07:05] <[itchyjunk]> https://bpa.st/A4JA
[02:07:43] *** Joins: orbatos (~orbatos@user/orbatos)
[02:07:44] <greenbagels> you'd have to show that S(n) = n+1 and that multiplication is distributive
[02:07:46] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:07:57] *** Joins: mrus (~mrus@149.28.224.172)
[02:08:16] <[itchyjunk]> greenbagels, there is something called `simpl` which took S n * 0 = 0 to n * 0 = 0
[02:08:26] <[itchyjunk]> i was trying to understand how, and it seems this explanation holds
[02:08:33] <[itchyjunk]> the inductive definition
[02:09:44] <greenbagels> the recursive definition of multiplication, you mean?
[02:10:05] <greenbagels> i guess we still don't know how you're defining N
[02:10:16] <greenbagels> whatever it seems you got it
[02:10:37] <[itchyjunk]> uh i don't fully understand how nat is defined
[02:10:57] <[itchyjunk]> https://coq.inria.fr/library/Coq.Init.Nat.html
[02:11:00] <[itchyjunk]> it's mentioned there
[02:13:20] <int-e> [itchyjunk]: `the type is here: https://coq.inria.fr/library/Coq.Init.Datatypes.html#nat
[02:14:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:14:49] <int-e> so you have addition defined recursively on the first argument (0 + b = b; S a + b = S (a + b)) and same for multiplication (0 * b = 0; S a * b = b + (a * b))
[02:14:50] <[itchyjunk]> is that inductive definition? where is the induction happening? :S
[02:14:59] *** Quits: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[02:15:58] <greenbagels> inria develops coq?
[02:16:31] <[itchyjunk]> you know her?
[02:16:53] <[itchyjunk]> i know the french made the coq
[02:17:00] <[itchyjunk]> coq means rooster in french apparently
[02:17:21] <greenbagels> inria isn't a person :p
[02:17:37] <int-e> [itchyjunk]: the induction is part of the construction... you basically get properties 6..9 from that, for free. https://en.wikipedia.org/wiki/Peano_axioms#Formulation
[02:18:02] <int-e> Oh and property 1
[02:18:11] <greenbagels> its a french comp sci research institution
[02:18:56] <greenbagels> wtf they made eigen too
[02:19:01] * greenbagels trails off into offtopic whispers
[02:19:16] <[itchyjunk]> how did you know about this research institute in the first place, greenbagels ?
[02:19:21] <[itchyjunk]> came across their work?
[02:19:26] <greenbagels> [itchyjunk]: ##math-offtopic
[02:20:57] <int-e> [itchyjunk]: it's probably best to take it for granted (magic!)... it's hard to explain (I'm not sure I'm even up to the task, actually; I certainly don't have the patience for it)
[02:21:51] <[itchyjunk]> yes, hide it under abstraction till some day it magically makes sense
[02:23:02] <int-e> [itchyjunk]: note that induction is quite foundational in Coq: https://coq.inria.fr/distrib/current/refman/language/cic.html (CIC = calculus of inductive constructions)
[02:27:18] *** Joins: Guest63 (~Guest63@93-137-100-132.adsl.net.t-com.hr)
[02:29:37] *** Joins: cafkafk (~cafkafk@user/cafkafk)
[02:30:47] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:31:40] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:34:09] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[02:34:31] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[02:35:35] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[02:36:06] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:38:21] *** Joins: seninha (~seninha@user/seninha)
[02:38:53] *** Joins: frelleck (~frelleck@user/frelleck)
[02:45:47] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[02:45:55] <Guest63> When I'm doing induction and in particular writing the inductive hypothesis step, is the proper formulation "assume P(n) is true for some n in N"? The proofs I've seen so far simply "assume P(n)", and it's unclear how n is bound here. I know that what I'm trying to prove in this part is "whenever P(n) is true, P(n++) is also true", so it seems
[02:45:56] <Guest63> logical to me to start from "some n in N", and then since I started from this random, generic n in N, when I show that what naturally follows is P(n++), I've by implication shown that this works (this P(n) => P(n++)) for EVERY n in N (since, again, I started from a generic one). And then combining that and P(0) I get that P(n) holds for all n in N.
[02:45:56] <Guest63> Is my reasoning correct?
[02:52:36] <int-e> Guest63: You're right that n will be a natural number. It's kind of implied by the context though (which almost certainly establishes that you're doing an induction proof)
[02:53:02] <int-e> So it's very common to just omit the fact from the text and get to the real meat of the argument instead.
[02:53:43] <mornfall> (or well, something discrete and ordered, anyway)
[02:54:45] <Guest63> int-e My question is more about whether it's "for some n" or "for any n" or "for every n" or "for a number n" or what, because I don't think the formulations which effectively mean "for all n" can be assumed, because that's what we're trying to prove.
[02:55:09] <int-e> Guest63: it's for an arbitrary but fixed n
[02:55:16] <mornfall> (and sometimes it helps to take (âˆ€k < n. P(k)) â†’ P(n), fwiw)
[02:55:32] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:55:36] <cuppajoeman> Yeah, if you want to be explicit, you could say, let k be an natural number and assume that for P(k) holds, now we'll show that  P(k+1) is also true.
[02:55:36] *** Joins: qu4nt1n (~qu4nt1n@194.5.53.189)
[02:56:50] <Guest63> Okay, great. That was what I assumed as well. I think it's confusing to say, essentially, "assume P(n)".
[02:57:07] <int-e> Guest63: You want to show P(n) -> P(n+1) for all n. In order to do that, you fix a particular value for n (but leave it unspecified)... and you want to show the implication P(n) -> P(n+1). To that end, you assume P(n), and then show P(n+1).
[02:58:20] <int-e> But the pattern is part of basically every proof by induction. So there's little value in spelling it out in suchdetail.
[02:59:16] *** Quits: trbp (~trbp@user/trbp) ()
[02:59:28] *** Quits: cafkafk (~cafkafk@user/cafkafk) (Quit: WeeChat 3.1)
[03:00:44] <Guest63> When doing a proof by contradiction, do you do the same thing at the beginning, or do you assume, essentially, what you're trying to prove? I think these two approaches are equivalent in that case.
[03:01:21] <int-e> To prove P -> Q by contradiction, you assume P and the negation of Q.
[03:01:28] <int-e> And then you derive a contradiction.
[03:01:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:50] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[03:04:32] <Guest63> Right, right. Perhaps I meant the proof by... counterexample, I suppose. You need to prove whether a statement P(n) is true, and you say okay, if P(n), then this, but this is impossible.
[03:04:56] *** Quits: DrNostril (~DrNostril@185.183.105.244) (Quit: Smell ya later~~)
[03:05:25] *** Joins: BUSY (~BUSY@user/busy)
[03:05:39] <int-e> Wouldn't that show that P(n) isn't always true?
[03:05:46] <Guest63> It would.
[03:07:20] <Guest63> And here I'm asking whether what's assumed there in that "if" is the original P(n) for all n, assuming that was the original formulation of the statement, or P(n) for some arbitrary but fixed n?
[03:07:46] <int-e> Ah, "prove whether ... is true" makes no sense, it's the wrong verb. You can, say, determine whether a statement is proof, which means to either prove it or to disprove it.
[03:08:16] <int-e> ...whether a statement is *true*...
[03:08:54] <int-e> I guess I'm a bit tired :)
[03:09:12] <Guest63> Right, sorry, I rewrote the sentence a few times.
[03:09:27] <Guest63> Determine whether it's true or false.
[03:10:13] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[03:10:18] <int-e> Anyway, what you do when disproving the statement has little connection to the induction proof that would prove it.
[03:10:34] <int-e> So I'm confused by the question.
[03:10:36] <Guest63> I know. I'm asking about what's assumed there precisely.
[03:11:19] <Guest63> Am I assuming the original statement as is, or am I fixing an arbitrary n and then showing that it doesn't work for that n, and therefore it doesn't work for other similar numbers?
[03:13:07] <int-e> Hmm, often you'd just point out a concrete counterexample. But if you proceed by contradiction, you'd assume that P(n) is true for all n, which is the negation of what you want to prove, and then draw conclusions from there. So nothing is yet fixed at this point.
[03:13:57] <Guest63> So you're saying it's okay to assume the proposition itself?
[03:14:21] <int-e> When proving its negation, yes.
[03:15:04] <int-e> It prove that P is false, assume P, and derive a contradiction.
[03:15:15] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8c3c:2bee:6a80:4f74) (Quit: Quit)
[03:15:29] <Guest63> OK, thanks.
[03:16:01] <Guest63> And thanks everyone else.
[03:16:04] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[03:16:39] *** Joins: montxero (~user@149.167.149.74)
[03:16:40] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Ping timeout: 240 seconds)
[03:17:14] <int-e> aside (feel free to ignore): technically that's not even a proof by contradiction. it's just how negations are proved (the introduction rule for negation, to get fully technical about it)
[03:18:58] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[03:23:54] <greenbagels> i always knew int-e was a closet logician
[03:28:03] <jpearse> this guy is like the "9/11 was an inside job" of math lecturers: https://www.youtube.com/watch?v=3cI7sFr707s#t=20m34s
[03:29:34] <int-e> greenbagels: I'm not really trying to hide it...
[03:32:06] <shachaf> Well, how negations are proved in intuitionistic logic, at least.
[03:32:17] <shachaf> Maybe the story is different in e.g. linear logic?
[03:34:38] *** Joins: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de)
[03:35:37] <greenbagels> int-e: no shame...
[03:38:48] *** Quits: qu4nt1n (~qu4nt1n@194.5.53.189) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:39:54] <greenbagels> jpearse: the saddest part of this isn't the fact that the guy argues like a child, it's that people who don't know any better take him seriously
[03:41:08] *** Joins: cjb (~cjb@user/cjb)
[03:41:35] *** Joins: gggp (~textual@111.63.14.116)
[03:41:43] *** Quits: gggp (~textual@111.63.14.116) (Client Quit)
[03:44:01] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 252 seconds)
[03:55:28] *** Joins: Arcorann (~A@user/arcorann)
[03:58:41] *** Quits: Arcorann (~A@user/arcorann) (Read error: Connection reset by peer)
[03:59:57] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[04:00:10] *** Joins: flynn (~mcbloch@user/flynn)
[04:00:36] *** Joins: Arcorann (~A@user/arcorann)
[04:07:39] *** Quits: Guest63 (~Guest63@93-137-100-132.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[04:10:33] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[04:10:47] *** Joins: montxero (~user@149.167.149.74)
[04:11:22] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[04:11:42] *** Quits: cherim (~UserNick@host-217-197-197-182.rev.as20985.net) (Read error: Connection reset by peer)
[04:11:45] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:12:29] *** Joins: cherim (~UserNick@host-217-197-197-182.rev.as20985.net)
[04:12:43] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Killed (NickServ (GHOST command used by [_])))
[04:13:01] *** [_] is now known as [itchyjunk]
[04:13:26] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:15:40] <[itchyjunk]> do triangular number of any pattern
[04:15:48] <[itchyjunk]> you get {1,3,6,..}
[04:16:31] <[itchyjunk]> wait is it {1,3,7} ?
[04:17:37] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:17:41] <[itchyjunk]> no its {1,3,6,..}
[04:18:34] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Quit: qeed)
[04:18:52] <PlanckWalk> Or just {...}
[04:19:11] <[itchyjunk]> how do you mean?
[04:19:33] <PlanckWalk> Well, either notation omits infinitely many terms
[04:19:37] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[04:19:45] <PlanckWalk> And the ones not omitted in your notation don't determine what the rest are
[04:19:58] <PlanckWalk> So you may as well omit them too!
[04:20:20] <[itchyjunk]> okay let S be the set of traingular numbers
[04:20:31] <[itchyjunk]> that doesnt help communicate at all though
[04:21:00] <greenbagels> let (T_n) be the sequence of triangular numbers?
[04:21:03] <PlanckWalk> Anyway yes there are infinitely many patterns they fit
[04:21:43] <greenbagels> what do you mean by patterns
[04:22:23] <[itchyjunk]> oay let (T_n) be the sequenceof traingular number
[04:22:28] <[itchyjunk]> can i induct on those?
[04:22:37] <greenbagels> why not
[04:22:55] <[itchyjunk]> i wanna prove triangular number + some magic = n^2 , n \in N
[04:22:57] <greenbagels> or rather; what lets you induct on other infinite integer sets?
[04:23:07] <[itchyjunk]> i've never thought too much about it
[04:23:11] <[itchyjunk]> ordering maybe?
[04:23:57] <[itchyjunk]> do all triangular number share some algebriac property?
[04:24:07] <[itchyjunk]> else its hard to work with nth case and such
[04:25:15] <PlanckWalk> You could perhaps define "pattern" in terms of a finite specification of properties.
[04:25:59] <[itchyjunk]> I wanna show (8*t) + 1 = n^2, t triangular and n natural number
[04:26:06] <bildramer> consider the following
[04:26:08] <PlanckWalk> Then a sequence "has a particular pattern" if every element satisfies that specification.
[04:26:13] <[itchyjunk]> so for t=1 works
[04:26:20] <PlanckWalk> [itchyjunk]: Do you know the general formula for the n'th triangular number?
[04:26:27] <[itchyjunk]> i dont
[04:26:31] <bildramer> I have a checkerboard pattern
[04:26:39] <[itchyjunk]> in fact, i have to prove it both algebriacally and with dots
[04:26:41] <PlanckWalk> You can do it without that, but it's a lot easier with.
[04:26:45] <bildramer> the black squares are mines in the minesweeper sense, that makes the rest 4s
[04:26:50] <bildramer> density is 0.5
[04:27:12] <[itchyjunk]> https://i.ibb.co/zFwhmF7/image.png
[04:27:18] <bildramer> but also consider 2x2 squares separated by completely free rows and columns of 1 free square
[04:27:25] <[itchyjunk]> i figured i'd do it algebraically first
[04:27:29] <bildramer> that's still mines and 4s, but now with a 4/9 density
[04:27:32] <[itchyjunk]> i tried a few and they seem to check out
[04:27:37] <[itchyjunk]> so it seems true
[04:27:45] <[itchyjunk]> now the easy part of proving it
[04:28:19] <bildramer> are there even more ways to get exclusively mines and 4s with different densities? is there any generalizable theory there? it's close to graph coloring
[04:29:26] <PlanckWalk> bildramer: I'm not sure, but it woulnd't surprise me if you could get mines and 4s with no well-defined density
[04:29:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:29:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:29:48] <bildramer> I would, what the fuck
[04:30:10] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:33] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:31:58] <PlanckWalk> Desnity is usually defined in terms of some sort of limit
[04:32:37] <PlanckWalk> If you can have different patterns in different regions, you can probably ensure that the sequence oscillates.
[04:33:01] <PlanckWalk> (and therefore has no limit)
[04:33:17] <bildramer> sorry I woke up like 3 minutes earlier, I haven't actually thought about whether one area having pattern A "forces" the rest of the infinite board
[04:33:32] <PlanckWalk> Yes, that's what I don't know yet either
[04:34:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:38] <PlanckWalk> E.g. suppose you start with a 2x2 square.  Does that force the rest of the board to be 2x2 squares?
[04:35:10] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[04:35:45] <greenbagels> i think so
[04:35:46] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d90a:f8c7:2281:6efc) (Ping timeout: 240 seconds)
[04:36:20] <greenbagels> no wait; it's a 2x2 square of bombs, right
[04:36:26] <PlanckWalk> Yes
[04:36:33] <PlanckWalk> Oh duh
[04:36:38] <greenbagels> you can extend it to an nxn square
[04:36:41] <PlanckWalk> Fill the entire board with bombs ;-)
[04:36:43] <greenbagels> yeah
[04:36:43] <[itchyjunk]> so i get 8.\sum_1^n k + 1 + 8(n+1)
[04:36:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[04:36:55] <[itchyjunk]> and induction hypothesis says the first part of it is a square
[04:36:55] <PlanckWalk> And yeah, any nxn square pattern works too
[04:36:56] <greenbagels> (really it doesnt have to be a square to begin with)
[04:37:02] <PlanckWalk> Or nxm etc
[04:37:04] <[itchyjunk]> so x^ + 8(n+1) is a square
[04:37:07] <[itchyjunk]> is what i would like to show
[04:37:25] <[itchyjunk]> x^2
[04:37:32] <bildramer> oh
[04:37:40] <PlanckWalk> If it is filled with rectangles, they need to be aligned
[04:37:53] <bildramer> you get 5s at the borders
[04:37:59] <PlanckWalk> Oh right
[04:37:59] <greenbagels> well i guess if you ever want a 4
[04:38:01] <greenbagels> yeah
[04:38:06] <greenbagels> you would need non-rectangles
[04:38:12] <bildramer> could be fixable
[04:38:13] <PlanckWalk> I forgot abotu the middle of the edges :)
[04:38:34] <greenbagels> mm it might be fixable yeah
[04:40:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:40:55] <bildramer> oh
[04:41:03] <PlanckWalk> I think you can have infinite parallel lines with "bumps" on each side every 6 squares
[04:41:55] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[04:42:24] <PlanckWalk> The density of that would also be 4/9
[04:42:48] <bildramer> consider a horizontal pattern that looks like m4m4m4m4 | mm4mmm4m | m4m4m4m4 | 44444444 by rows
[04:43:03] <bildramer> no wait, that would be 424242, nevermind
[04:43:35] *** Joins: DefiantN (~DefiantN@user/defiantn)
[04:43:37] <greenbagels> i dont think you can have a single 3x3 square hmm
[04:44:50] <greenbagels> i think the boundary would be the main issue yeah
[04:45:08] <greenbagels> if you have a fixed bondary of your lattice i mean
[04:45:40] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 240 seconds)
[04:45:55] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f)
[04:49:10] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 240 seconds)
[04:49:54] <bildramer> oh I got it
[04:49:57] <bildramer> lmao
[04:50:24] <bildramer> you can just directly intersperse rows of "one mine every two squares" and "one mine every three squares"
[04:50:37] <bildramer> at least, the second among the first
[04:51:18] <bildramer> I presume that must imply that there's a whole lot of "freedom" that allows you to move around mines
[04:51:31] <bildramer> the alternative being long-range "forcing"
[04:52:19] <greenbagels> question: does having a fixed boundary (say, using Z^+ x Z^+) impose more restrictions than say using all of Z^2 on the allowable densities?
[04:52:24] *** Joins: DefiantN (~DefiantN@user/defiantn)
[04:53:05] <bildramer> probably less
[04:53:12] <PlanckWalk> I don't see how you can interpose those rows
[04:53:35] <PlanckWalk> You can't do it freely, at least
[04:53:46] <bildramer> I mean checkerboard, then *..*..*..*..*.., then checkerboard again
[04:54:10] <bildramer> I think they must have the right "phase" relationship but otherwise doable
[04:54:40] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[04:54:43] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[04:55:26] <greenbagels> you can even do every 4 squares, i think
[04:55:27] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:55:42] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:55:53] <greenbagels> if you start up by lining a bomb underneath another bomb, at least
[04:55:54] <PlanckWalk> Ah I see
[04:55:57] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 245 seconds)
[04:56:10] <greenbagels> because you start making these "U" shapes with the 4s
[04:56:20] <greenbagels> (with more checkerboards beyond)
[04:56:43] <greenbagels> no wait
[04:56:45] <greenbagels> ignore me
[04:56:49] <greenbagels> i forgot about the next line lol
[04:57:01] *** Joins: dez (uid92154@user/dez)
[04:57:33] <PlanckWalk> So yeah, you can freely change the density between 1/2 and 5/12 at least
[04:58:37] <PlanckWalk> (including patterns that oscillate between 1/2 and 5/12)
[04:59:20] <int-e> greenbagels: Do you know the proof that if a finite set of Wang tiles can tile an infinite quadrant, then they can also tile the plane, using KÃ¶nig's lemma? The same argument works here as well..
[05:00:01] <greenbagels> int-e: which konig lemma is this?
[05:00:09] <int-e> the tree one
[05:00:21] <greenbagels> mm i dont think ive heard of it
[05:00:21] <int-e> an infinite, finitely branching tree has an infinite path
[05:00:28] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[05:01:00] <greenbagels> when you say finitely branching you mean any given node has only finitely many children?
[05:01:07] <int-e> yes
[05:01:36] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-af7b-3a1b-89ee-1477.res6.spectrum.com)
[05:02:30] <PlanckWalk> I'm still wondering whether density can be made arbitrarily close to 1
[05:02:56] *** Joins: DefiantN (~DefiantN@user/defiantn)
[05:03:01] <int-e> what you do is collect patterns of size 2nx2n from the quadrant into a tree such that a (2n+2)x(2n+2) pattern becomes the child of the 2nx2n pattern obtained by cutting off the border.
[05:03:17] <PlanckWalk> Exactly 1 is possible if you take the "every square is either a bomb or an empty square with 4 bomb neighbours" literally.
[05:03:28] <int-e> PlanckWalk: the infinite line with bumps thing works, doesn't it?
[05:03:48] <PlanckWalk> Oh.  Right.
[05:03:59] <PlanckWalk> Haha, wrote that myself and forgot it already :)
[05:04:02] <int-e> if the denstity is the density of bombs
[05:04:03] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[05:04:33] <PlanckWalk> It obviously can't be arbitrarily close to zero
[05:04:40] <greenbagels> right, because of the 4s...
[05:04:42] <greenbagels> lol
[05:04:45] <greenbagels> i was just thinking about that
[05:05:18] <int-e> PlanckWalk: you can even make it work for finite sizes: http://paste.debian.net/1210577/
[05:05:21] <PlanckWalk> We know it can be less than 4/9
[05:05:48] <int-e> "it" being the bump thing
[05:05:55] <PlanckWalk> Yep
[05:05:59] <int-e> (if I understand it correctly)
[05:06:10] *** Quits: oj (~oj@user/oj) (Remote host closed the connection)
[05:06:17] <PlanckWalk> It's not quite the same pattern I had in mind but works just as well
[05:06:37] <PlanckWalk> Oh, that finite one doesn't quite work
[05:06:50] <int-e> oh there's a 5
[05:06:51] <int-e> right
[05:08:00] <greenbagels> int-e: never heard about wang tiles until now, neat read
[05:08:45] <PlanckWalk> I wonder if 5/12 is the lower bound?
[05:09:17] <PlanckWalk> It looks like there might be some room to lower if further if we can get more bombs to have only 2 neighbours
[05:10:46] <bildramer> if you think in terms of diagonal lines instead, maybe there's something interesting there
[05:10:58] *** Quits: p0indexter (~alpha@user/p0indexter) (Remote host closed the connection)
[05:11:13] *** Joins: p0indexter (~alpha@user/p0indexter)
[05:11:40] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:11:55] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[05:12:34] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 252 seconds)
[05:15:47] *** Joins: oxum (~oxum@106.203.195.217)
[05:15:52] *** Quits: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[05:19:33] *** Joins: Samian (~Sami@2620:10d:c091:480::1:941f)
[05:20:41] <bildramer> maybe think a bit more systematically. you have a row of free squares and mines, all mines in this and higher rows are ignored for counting purposes, that gives you a periodic pattern like *1*1*1*1* or *21*12*21*12* that the next row must obey (and the free squares will be some new numbers), then store that as a graph and look at transitions
[05:20:55] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[05:21:43] *** Joins: oxum (~oxum@106.203.195.217)
[05:21:47] <bildramer> could make a program
[05:21:51] <bildramer> maybe tomorrow
[05:22:59] <bildramer> and of course if you have A->B and A->C there could be a horizontal boundary that allows ...BBBXCCC...too
[05:23:22] *** Joins: robin (~robin@user/terpri)
[05:23:29] <[itchyjunk]> does 8x^2 + 8(n + 1) look like a square?
[05:24:53] <Z-module> how do you mean?
[05:25:22] <[itchyjunk]> i want to show (8*t) + 1 is always a square
[05:25:25] <[itchyjunk]> t is triangular number
[05:25:43] <[itchyjunk]> i am using sum_1^k n to get my triangle number
[05:25:48] <[itchyjunk]> and was using induction
[05:25:54] <[itchyjunk]> so ended up with that weird thing
[05:26:48] <bildramer> one factor of that is 8
[05:26:53] <[itchyjunk]> https://i.ibb.co/zFwhmF7/image.png
[05:26:57] <bildramer> so the other must be 8, or x^2 + n + 1 = 8
[05:27:27] <bildramer> actually nevermind
[05:27:31] <bildramer> could be other powers of two
[05:27:36] <Z-module> t = k(k + 1)/2 for some k so  8t + 1 = 4k(k + 1) + 1 = 4k^2 + 4k + 1 = (2k + 1)^2
[05:28:02] <[itchyjunk]> oh different formula
[05:28:10] <[itchyjunk]> maybe i shouldn't have gone with the first google formula
[05:28:23] <[itchyjunk]> oh
[05:28:32] <[itchyjunk]> lol that was pretty straight forward
[05:30:13] *** Joins: frost (~frost@59.71.240.119)
[05:30:51] <[itchyjunk]> How do i do that using dots?
[05:31:06] <[itchyjunk]> i did it for first 3 t's
[05:31:16] <[itchyjunk]> but that's doesn't "prove" it right?
[05:37:00] <bildramer> octahedron? some fancy bullshit maybe
[05:38:49] <[itchyjunk]> Greek people did it this back ~400BCE apprently btw
[05:39:07] <[itchyjunk]> crazy how early people were on to stuff
[05:39:17] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 245 seconds)
[05:39:36] <[itchyjunk]> they knew that 8 * triangular number + 1 was always a square
[05:39:38] <[itchyjunk]> i didn't know this
[05:40:41] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[05:41:03] *** Joins: oxum (~oxum@106.203.195.217)
[05:42:36] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[05:42:37] <bildramer> let's see. two triangles make an n(n+1) rectangle, have two of those at the edges of a square, then there are n^2 and (n+1)^2 square gaps. remove one (n+1) row to make one of the gaps n(n+1), fill that, that's 6 triangles used, then add one triangle in the n^2 gap, there's a "triangle minus a row of n" remaining plus the n+1 row from before
[05:43:37] *** Joins: p0indexter (~alpha@user/p0indexter)
[05:43:43] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:45:22] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[05:45:36] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f)
[05:46:17] <bildramer> https://i.imgur.com/XIDYiKh.png
[05:46:18] <bildramer> like this
[05:46:58] *** Joins: kmh_ (~kmh@p200300df5f052300e4bf53d4503676cb.dip0.t-ipconnect.de)
[05:47:45] <qergle> bildramer: why not make a 2(n+1) x 2(n) rectangle, slice off a short edge and put it on the long edge (then add the missing piece)
[05:48:46] *** Quits: kmh (~kmh@p200300df5f429800207f3df7378140bc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:49:04] <PlanckWalk> Lots of ways to do it, yes
[05:49:17] <qergle> say n=4, make a 10x8, slice off a 1x8 and lay it across the side that's now 9, add the missing 1
[05:49:30] <bildramer> yeah that would be simpler
[05:49:35] <qergle> you're left with 9x9
[05:50:10] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f) (Ping timeout: 240 seconds)
[05:50:36] <PlanckWalk> The "fit it in a square" has the advantage of not breaking up any triangles
[05:52:46] <PlanckWalk> I was thinking n(n+1) rectangles arranged symmetrically in a square that has a hole in the middle.
[05:53:19] <PlanckWalk> Rotationally symmetric, that is
[05:54:07] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[05:54:10] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 240 seconds)
[05:54:19] *** Joins: bosspotato__ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca)
[05:54:19] *** Quits: bosspotato__ (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca) (Changing host)
[05:54:19] *** Joins: bosspotato__ (~bosspotat@user/bosspotato)
[05:55:47] *** Quits: metallic (~sillaman@169.red-83-53-69.dynamicip.rima-tde.net) (Quit: Leaving)
[05:56:44] <bildramer> even better
[05:56:49] <int-e> there's this really boring infinite pattern with density 2/5: http://paste.debian.net/1210586/
[05:57:37] <bildramer> oh, nice
[05:57:38] *** Quits: bosspotato_ (~bosspotat@user/bosspotato) (Ping timeout: 256 seconds)
[05:58:13] *** Quits: xff0x (~xff0x@2001:1a81:53d2:1d00:6afe:f077:c625:e6c4) (Ping timeout: 252 seconds)
[05:59:09] *** Joins: oxum (~oxum@106.203.195.217)
[05:59:22] <[itchyjunk]> hmm i don't understand that picture
[05:59:40] <[itchyjunk]> i see the corner triangles
[05:59:55] *** Joins: xff0x (~xff0x@2001:1a81:5209:3600:cabf:37b:4141:3c8)
[06:00:01] <PlanckWalk> Oh yeah, that's a nice 2/5 pattern, and that's as low as it can go.
[06:02:55] <int-e> I'm wondering about a phase transition right now... if we fill the lower half of the plane with mines... how low can the density become in the upper half?
[06:03:48] <int-e> but I guess I should sleep
[06:08:00] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:08:09] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:08:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:08:40] *** Quits: LiftLeft (~LiftLeft@172.98.92.79) (Ping timeout: 252 seconds)
[06:10:20] *** Joins: fstd_ (~fstd@xdsl-78-35-86-220.nc.de)
[06:10:52] *** Quits: fstd (~fstd@xdsl-84-44-235-10.nc.de) (Ping timeout: 252 seconds)
[06:15:34] <PlanckWalk> You can defnitely get full in the bottom half and 5/12 in the top.  Not sure about 2/5 yet
[06:19:40] *** Quits: moog (~moog@mobile-107-107-188-84.mycingular.net) (Ping timeout: 252 seconds)
[06:21:30] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[06:25:40] *** Joins: nehsou^ (~nehsou@68.101.54.227)
[06:26:05] *** Joins: oxum (~oxum@106.203.195.217)
[06:28:40] *** bosspotato__ is now known as bosspotato
[06:30:29] *** Joins: moog (~moog@107.126.53.118)
[06:32:10] *** Quits: ghen (~nobody@2601:649:100:8b0:2ca0:9dc3:e717:abdc) (Ping timeout: 240 seconds)
[06:33:14] *** Joins: _moog (~moog@107.77.244.81)
[06:34:49] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f)
[06:35:32] *** Quits: moog (~moog@107.126.53.118) (Ping timeout: 245 seconds)
[06:36:44] *** Joins: __moog (~moog@107.77.244.81)
[06:38:48] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:39:32] *** Quits: _moog (~moog@107.77.244.81) (Ping timeout: 252 seconds)
[06:40:59] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:43:07] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:43:13] *** Joins: Fohsap (~Muimi@113.235.179.222)
[06:43:54] *** Joins: oxum (~oxum@106.203.195.217)
[06:44:43] *** Joins: _moog (~moog@107.126.53.72)
[06:47:10] *** Quits: __moog (~moog@107.77.244.81) (Ping timeout: 252 seconds)
[06:48:06] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[06:48:44] *** Joins: __moog (~moog@107.126.48.120)
[06:50:08] *** Quits: brettgilio (~brettgili@137.184.3.255) (Quit: The Lounge - https://thelounge.chat)
[06:50:58] *** Joins: brettgilio (~brettgili@137.184.3.255)
[06:51:04] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:51:28] *** Quits: emerent (~quassel@p200300cd5701a153ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:51:34] *** Quits: _moog (~moog@107.126.53.72) (Ping timeout: 252 seconds)
[06:51:43] *** Joins: _moog (~moog@107.126.53.203)
[06:52:03] *** Joins: emerent (~quassel@p200300cd5701a194ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:54:18] *** Quits: __moog (~moog@107.126.48.120) (Ping timeout: 256 seconds)
[06:58:05] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:59:45] *** Joins: oxum (~oxum@106.203.195.217)
[07:01:03] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[07:03:39] *** Joins: oxum (~oxum@106.203.195.217)
[07:04:37] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[07:04:50] *** Joins: oxum (~oxum@106.203.195.217)
[07:06:08] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[07:07:12] *** Quits: xff0x (~xff0x@2001:1a81:5209:3600:cabf:37b:4141:3c8) (Ping timeout: 245 seconds)
[07:08:07] *** Joins: xff0x (~xff0x@2001:1a81:5209:3600:c79f:260f:2c03:1c0b)
[07:08:35] *** Quits: _moog (~moog@107.126.53.203) (Quit: Leaving)
[07:09:23] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:10:24] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Quit: .)
[07:12:37] *** Joins: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de)
[07:12:54] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[07:13:31] *** Quits: struct0 (~struct0@104.248.115.49) (Ping timeout: 252 seconds)
[07:17:12] *** Quits: kakashiAL (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de) (Ping timeout: 245 seconds)
[07:22:10] *** Quits: xff0x (~xff0x@2001:1a81:5209:3600:c79f:260f:2c03:1c0b) (Ping timeout: 240 seconds)
[07:23:18] *** Joins: xff0x (~xff0x@2001:1a81:5209:3600:2bda:f166:a64d:307f)
[07:26:15] *** Joins: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca)
[07:29:14] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[07:29:29] *** Joins: montxero (~user@149.167.149.74)
[07:38:41] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[07:38:49] *** Joins: oxide (~lambda@user/oxide)
[07:41:08] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[07:41:27] <elderK> Hey all. I was wondering if there's a log for this channel.
[07:42:04] <elderK> cherim: I'm still working away on that problem :) Thank you for your help (and pikapika!)
[07:42:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[07:42:43] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[07:43:19] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:43:21] *** Joins: Mija (~Mija@user/mija)
[07:44:36] <Izem> I doubt it
[07:47:19] *** Joins: zacts (~zak@user/zacts)
[07:50:17] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[07:51:57] *** Joins: oxum (~oxum@106.203.195.217)
[07:55:43] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:02:02] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f) (Ping timeout: 252 seconds)
[08:02:11] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[08:05:09] <[itchyjunk]> elderK, no public log. people probably keep log. at least i think this is the case.
[08:05:24] *** Joins: robin (~robin@user/terpri)
[08:09:18] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[08:13:16] <greenbagels> elderK: no public log, but i idle here and keep logs, so if there's something you need from recent weeks i probs can find it
[08:13:26] <greenbagels> idk about right now though, i might fall asleep soon
[08:14:18] *** Quits: Tangoose (~Arco@68.40.3.32) (Remote host closed the connection)
[08:14:24] <qergle> nsabagels
[08:15:08] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[08:15:08] <elderK> Thanks greenbagels.
[08:15:11] <greenbagels> qergle: ;)
[08:16:15] <greenbagels> qergle: i should start changing the color in my name to reflect how PRISMatic i am
[08:17:14] *** Quits: Izem (~Izem@bras-base-london1483w-grc-32-70-52-175-249.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[08:18:39] *** Joins: otto_s (~user@p5b0445ba.dip0.t-ipconnect.de)
[08:20:20] <elderK> greenbagels: If it wouldn't be too much trouble, I'd like the logs for Friday / Saturday. In particular, a discussion I had with pikapika and cherim regarding computing the firing angle for a projectile such that it would hit a moving target. I've hit a dead end with my workings here so I'd like to check that I haven't missed anything.
[08:20:28] <elderK> Unfortunately, I wasn't using my usual IRC client so I didn't have any logs captured :(
[08:20:55] <qergle> bagel â‡” donut â‡” gchq
[08:21:29] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[08:21:40] *** Quits: otto_s_ (~user@p5b04481b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:21:42] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[08:27:00] *** Joins: p0indexter (~alpha@user/p0indexter)
[08:27:48] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 256 seconds)
[08:39:32] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[08:39:48] *** Joins: montxero (~user@149.167.149.74)
[08:40:37] *** Joins: oxum (~oxum@106.203.195.217)
[08:44:57] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[08:45:16] *** Joins: APic (apic@apic.name)
[08:45:25] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[08:52:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[08:56:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[08:57:57] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-237.090.186.pools.vodafone-ip.de)
[08:58:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:00:10] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[09:03:05] *** Quits: nehsou^ (~nehsou@68.101.54.227) (Ping timeout: 252 seconds)
[09:05:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 250 seconds)
[09:05:32] *** Joins: nehsou^ (~nehsou@68.101.54.227)
[09:07:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[09:09:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:09:35] *** Joins: Zianic (~12602@user/zianic)
[09:13:55] *** Joins: hyiltiz (~quassel@31.220.5.250)
[09:14:38] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: my karma ran over your dogma)
[09:17:59] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[09:19:20] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[09:20:27] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[09:22:07] *** Joins: beencubed (~beencubed@209.131.238.248)
[09:24:49] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[09:24:57] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[09:29:00] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:30:09] *** Joins: APic (apic@apic.name)
[09:34:29] *** Joins: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285)
[09:36:53] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:44:53] *** Quits: orbatos (~orbatos@user/orbatos) (Remote host closed the connection)
[09:45:28] *** Joins: nicbk (~nicbk@user/nicbk)
[09:53:25] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:59:36] *** Quits: xff0x (~xff0x@2001:1a81:5209:3600:2bda:f166:a64d:307f) (Ping timeout: 256 seconds)
[10:00:22] *** Joins: oxum (~oxum@106.203.195.217)
[10:00:29] *** Joins: xff0x (~xff0x@2001:1a81:5209:3600:b54c:cd6:7fe8:e9eb)
[10:04:08] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[10:04:37] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Remote host closed the connection)
[10:04:44] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[10:08:02] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f)
[10:16:02] *** Quits: Guest84 (~Guest84@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[10:16:08] *** Joins: ant (~ant@user/strwbrry)
[10:16:50] <ant> What does a double solution mean?
[10:16:58] *** Joins: kakashiAL (~kakashi@ppp-188-174-59-116.dynamic.mnet-online.de)
[10:17:24] <ant> One rational solution (double solution)
[10:22:24] <W> ant, a polynomial can be factored by its roots, but one rot might correspond to more than one factor, so e.g. x^2-2x+1=(x-1)(x-1), because it has just one solution, x=1, but it's double - but that's just one possibility, what is the context?
[10:22:50] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[10:22:53] <W> *because x^2-2+1=0 has just one solution
[10:23:02] <W> *2x
[10:23:06] *** Joins: montxero (~user@149.167.149.74)
[10:23:16] <ant> The context is discriminant of quadratic equations
[10:23:50] <ant> Quadratic formula, sorry
[10:24:56] *** Joins: oxum (~oxum@106.203.195.217)
[10:25:00] <W> yeah, it's basically the same thing, but probably the reverse idea; if the discriminant is positive, there's two real solutions (if it's 0 there's one, as in the equation I used as example)
[10:25:46] <ant> Ah, I get it now, thanks :)
[10:26:59] <W> (and if it's negative, you have to go to the complex numbers and there's two again there, thus the qualifying "real")
[10:28:00] *** Joins: zacts (~zak@user/zacts)
[10:28:08] <W> as for rational (that I now see you wrote), the discriminant has to be a square
[10:28:42] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:29:55] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[10:29:57] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:30:07] *** Joins: APic (apic@apic.name)
[10:32:31] <ant> If b^2-4ac=0, solving for x will result in either +0 or -0, which doesn't matter. That is why it is stated as one rational solution (double solution), correct?
[10:33:10] <W> yeah, and the point about factoring I mentioned further justifying it
[10:33:19] <Gurkenglas> Î´_c:câ†’[[c,d],d] is the usual double-dual embedding. [image of Î´_c, d] is isomorphic to [c,d]. [[c,d],d] can be sent through a... free functor F? and then FÎ´ is the unit of a monad. What do you call this situation?
[10:37:12] *** Quits: HiddenHyde (~HiddenHyd@user/hidden-hyde/x-6930285) (Quit: Leaving)
[10:38:43] *** Quits: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Ping timeout: 252 seconds)
[10:39:03] *** Joins: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[10:39:57] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[10:40:08] *** Joins: APic (apic@apic.name)
[10:40:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[10:43:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:48:57] *** Joins: andreasbuhr (~quassel@p549db26f.dip0.t-ipconnect.de)
[10:49:42] *** Joins: palasso (~palasso@user/palasso)
[10:51:33] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 276 seconds)
[10:52:09] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:53:04] *** Quits: ant (~ant@user/strwbrry) (Quit: Quit)
[10:53:40] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 240 seconds)
[10:55:04] *** Quits: frelleck (~frelleck@user/frelleck) ()
[10:55:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[10:55:30] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:5579:8017:8c36:a4f:814f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:57:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:57:34] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: Ping timeout (120 seconds))
[10:57:47] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[10:59:14] *** Joins: mgrabovs (~mgrabovs@redhat/mgrabovs)
[10:59:42] *** Quits: xff0x (~xff0x@2001:1a81:5209:3600:b54c:cd6:7fe8:e9eb) (Ping timeout: 245 seconds)
[11:00:41] *** Joins: xff0x (~xff0x@2001:1a81:5209:3600:6986:c057:5fff:c53b)
[11:05:42] *** Quits: zacts (~zak@user/zacts) (Quit: leaving)
[11:06:01] *** Quits: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de) (Quit: .)
[11:06:49] *** Joins: madez (~madez@ip-176-199-23-87.hsi06.unitymediagroup.de)
[11:15:04] *** Joins: oxum (~oxum@106.203.195.217)
[11:18:57] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[11:19:28] *** Joins: oxum (~oxum@106.203.195.217)
[11:21:29] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[11:24:07] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[11:34:20] *** Quits: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Ping timeout: 252 seconds)
[11:34:35] *** Joins: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[11:42:46] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[11:42:46] *** Joins: specing_ (~specing@user/specing)
[11:44:25] *** specing_ is now known as specing
[11:45:17] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2)
[11:48:54] *** Joins: oxum (~oxum@106.203.195.217)
[11:49:37] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:49:50] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.1)
[11:51:07] *** Joins: Hash (~weechat@thestonedapes.com)
[11:53:35] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:54:04] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[12:01:08] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:02:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:03:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:07:40] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 240 seconds)
[12:11:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:18:10] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[12:18:34] *** Joins: hyiltiz (~quassel@31.220.5.250)
[12:24:21] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.2.1)
[12:24:33] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[12:24:42] *** Joins: Hash (~weechat@thestonedapes.com)
[12:25:55] *** Quits: Hash (~weechat@thestonedapes.com) (Client Quit)
[12:27:11] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (Quit: The Lounge - https://thelounge.chat)
[12:28:19] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[12:28:28] *** Joins: rubiksdream (~a@1-64-49-062.static.netvigator.com)
[12:30:49] *** Joins: Hash (~weechat@thestonedapes.com)
[12:34:11] *** Quits: Hash (~weechat@thestonedapes.com) (Client Quit)
[12:34:23] *** Quits: andreasbuhr (~quassel@p549db26f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:36:15] *** Joins: Hash (~weechat@thestonedapes.com)
[12:36:37] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:05] *** Quits: mgrabovs (~mgrabovs@redhat/mgrabovs) (Remote host closed the connection)
[12:40:28] *** Joins: mgrabovs (~mgrabovs@redhat/mgrabovs)
[12:40:46] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[12:41:14] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Quit: Leaving)
[12:41:55] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[12:42:33] *** Joins: Turingtoast (~Tino@200116b8601a0400c54d8e3a96f2aa09.dip.versatel-1u1.de)
[12:45:01] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[12:47:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[12:47:24] *** Joins: flynn (~mcbloch@user/flynn)
[12:52:17] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[12:52:35] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[12:54:45] *** Joins: ghen (~nobody@2601:649:100:8b0:d5da:112e:f777:ffe)
[13:01:00] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:04:24] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[13:08:56] *** Quits: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) (Ping timeout: 252 seconds)
[13:09:42] *** Quits: nehsou^ (~nehsou@68.101.54.227) (Remote host closed the connection)
[13:09:43] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Read error: Connection reset by peer)
[13:09:46] *** Joins: khronos (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[13:10:10] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[13:10:43] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:13:47] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[13:14:10] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:15:37] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:16:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:16:50] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 250 seconds)
[13:20:11] *** Joins: andreasbuhr (~quassel@p549db26f.dip0.t-ipconnect.de)
[13:20:11] *** Quits: andreasbuhr (~quassel@p549db26f.dip0.t-ipconnect.de) (Client Quit)
[13:24:30] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:29:55] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:c800:12c3:7bff:fe6d:d374)
[13:31:25] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[13:39:07] *** Quits: oxide (~lambda@user/oxide) (Read error: Connection reset by peer)
[13:44:00] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[13:46:48] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:47:49] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[13:54:22] *** Joins: vysn (~vysn@user/vysn)
[13:54:58] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[13:55:37] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[13:56:49] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:57:04] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:58:08] *** Quits: pi1 (~pi@177.223.162.41) (Quit: WeeChat 2.8)
[14:01:07] *** Quits: bildramer (~bildramer@2a02:587:6214:dd00:210c:81b4:b1a5:f9c4) (Ping timeout: 252 seconds)
[14:03:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:05:55] *** Joins: oxide (~lambda@user/oxide)
[14:07:20] *** Joins: drogas (~drogas@jump2.jet.uk)
[14:08:06] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[14:11:40] *** Quits: ghen (~nobody@2601:649:100:8b0:d5da:112e:f777:ffe) (Quit: Leaving)
[14:14:03] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[14:14:54] *** Joins: bildramer (~bildramer@2a02:587:620c:d300:cfb5:f573:c39a:c618)
[14:18:08] *** Joins: Guest76 (~Guest76@78-2-86-29.adsl.net.t-com.hr)
[14:18:10] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[14:19:51] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[14:21:02] *** Joins: oj (~oj@user/oj)
[14:21:50] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:23:07] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-af7b-3a1b-89ee-1477.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:23:22] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[14:23:37] *** Quits: Guest76 (~Guest76@78-2-86-29.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[14:29:04] *** Joins: Guest76 (~Guest76@78-2-86-29.adsl.net.t-com.hr)
[14:29:16] *** Joins: cadmio (~cadmio@151.37.214.45)
[14:29:16] *** Joins: hyiltiz (~quassel@31.220.5.250)
[14:29:18] <cadmio> Hello
[14:31:25] <cadmio> I had to "Determine the number of conjugacy classes of A_5 and the cardinality of each class."
[14:31:58] <cadmio> I thought that I could you the relation |O(x)| â‹… |Stx| = |G| considering conjugacy as the group action
[14:32:52] <cadmio> but I find it hard to calculate St_x for every x
[14:37:29] *** Quits: oxide (~lambda@user/oxide) (Quit: oxide)
[14:37:49] *** qedo is now known as qed
[14:37:54] *** Joins: dez (uid92154@user/dez)
[14:38:07] *** Quits: qed (~Shimon@bzq-84-108-229-161.cablep.bezeqint.net) (Changing host)
[14:38:07] *** Joins: qed (~Shimon@user/qed)
[14:39:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:39:54] *** Quits: cadmio (~cadmio@151.37.214.45) (Read error: Connection reset by peer)
[14:40:19] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[14:44:36] *** Joins: cadmio (~cadmio@151.37.31.68)
[14:45:20] *** Joins: mbuf (~Shakthi@110.225.244.218)
[14:49:16] <Guest76> Is I = {1, 2, 3, ..., 49, 50}, S = {x in I : x/8 in Z} a valid way to build a set of integers consisting of numbers from 1 to 50 that are divisible by 8?
[14:49:52] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:51:27] *** Joins: savask (~savask@Powder/Developer/savask)
[14:51:56] <qed> yes Guest76
[14:53:42] *** Quits: Turingtoast (~Tino@200116b8601a0400c54d8e3a96f2aa09.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[14:55:00] <Guest76> qed What about this S = { x : x in N, 1 <= x <= 50, x/8 in N}?
[14:55:17] *** Joins: Turingtoast (~Tino@83.126.46.39)
[14:55:22] <gauss> that's bad Guest76
[14:55:26] <gauss> they're both bad
[14:55:35] <Guest76> OK, what would you suggest?
[14:55:41] <Guest76> And why is the first one bad?
[14:56:10] <gauss> you can't just say x/8 in Z
[14:56:26] <gauss> it's not a programming language
[14:56:55] <Guest76> By "in" I mean "\in", and by "Z" I mean "\mathbb{Z}".
[14:57:01] <gauss> I'm aware
[14:57:36] <Guest76> I'm not sure what the issue is then.
[14:57:49] <qed> Guest76, both statements are valid, but usually people use modular arithmetics in such statements
[14:58:06] <Guest76> Not sure why I'd define an extra operator for that.
[14:58:28] <gauss> no it's not valid
[14:58:41] <gauss> x/8 is rational
[14:59:29] <Guest76> Are you saying 0.5 in Z is an invalid statement in mathematics?
[14:59:33] <gauss> Guest76: it's not an "operator"
[14:59:35] <Guest76> It's just a false statement.
[14:59:44] <gauss> yes it's invalid
[14:59:54] <gauss> \in isn't a function returning a boolean
[15:00:14] <gauss> x/8 \in Z isn't a proposition
[15:00:36] <gauss> i would suggest {8*n : n \in N, 1 <= 8*n <= 50}
[15:01:27] <qergle> {x âˆˆ N | 1 â‰¤ x â‰¤ 50, âˆƒk(k âˆˆ N âˆ§ x=8k)}
[15:02:13] <gauss> qergle: your symbols aren't rendering for me
[15:02:36] <qergle> {x \in N | 1 \leq x \leq 50, \existsk(k \in N \wedge x=8k)}
[15:03:17] <gauss> yeah that's good
[15:04:33] <gauss> Guest76: the problem is that x/8 \in Z isn't a predicate
[15:05:44] *** Joins: Arcadia (~Arcadia@user/arcadia)
[15:05:56] <Guest76> Would "x in Z" be a predicate?
[15:06:04] *** Parts: cadmio (~cadmio@151.37.31.68) (WeeChat 3.0)
[15:06:08] <gauss> no
[15:06:11] <gauss> just don't do this
[15:06:38] <gauss> if you must you can do x mod 8 == 0
[15:07:44] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 252 seconds)
[15:07:44] <gauss> as for "why you would introduce a whole new operator", it's because they mean completely different things
[15:07:50] <Guest76> In Tao's Analysis I, he writes S1 intersect S2 := {x in S1 : x in S2}.
[15:08:05] <gauss> that's like saying 5 + 5 = 25, why would you introduce a whole new operator *
[15:08:15] <gauss> Guest76: yes that's valid
[15:08:33] <Guest76> Isn't "x in S2" a non-predicate by your definition?
[15:08:41] <Guest76> And it's used as one there.
[15:09:47] <gauss> hmm
[15:10:00] <gauss> i think it's fine here because you're defining the domain
[15:10:16] <Guest76> if A = {3, 5, 9}, then {x++ : x âˆˆ A} is the set {4, 6, 10}.
[15:10:21] <Guest76> Another statement from his book.
[15:10:25] <gauss> yes
[15:10:27] <gauss> that's also fine
[15:10:36] <Guest76> What's the difference between x in A and x in N?
[15:10:37] <gauss> you can specify the domain on the right in set builder notation
[15:10:39] <qergle> you can also use a mapping on the left of the restriction
[15:11:07] <gauss> Guest76: are you asking literally?
[15:11:08] <qergle> say, {8x | x âˆˆ N, 1 â‰¤ x â‰¤ 6}
[15:11:20] <Guest76> No, I'm not. He specifies the domain on the left as well in the previous quotation with S1 and S2?
[15:11:24] *** Joins: riv (~river@tilde.team/user/river)
[15:11:29] <gauss> Guest76: x \in N is fine, x/8 \in N is not
[15:11:36] <gauss> one is defining the domain
[15:11:43] <gauss> the other is a predicate
[15:11:52] <gauss> you can define the domain on the left or right in set builder notation
[15:12:09] <gauss> so {x in S1 : x in S2} is equivalent to {x : x in S1, x in S2}
[15:12:24] <gauss> x in S2 isn't a predicate here
[15:12:26] <riv> hi
[15:14:21] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:75a9:24ae:99d0:207e) (Remote host closed the connection)
[15:14:40] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:a81a:b71b:876d:3b42)
[15:15:01] *** Quits: APic (apic@apic.name) (Read error: Connection reset by peer)
[15:15:13] *** Joins: APic (apic@apic.name)
[15:15:43] *** Joins: gggp (~textual@111.63.14.116)
[15:16:54] <Guest76> gauss: How about {x in I : y = x/8, y in N }?
[15:17:10] <gauss> Guest76: that's not different
[15:17:16] <gauss> you're thinking too much like a programmer
[15:17:50] <gauss> now you're even defining variables on the stack
[15:23:20] *** Joins: molt (~molt@178-223-40-94.dynamic.isp.telekom.rs)
[15:27:49] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[15:28:43] <Guest76> Lol.
[15:28:55] <Guest76> Yeah, you caught me.
[15:33:51] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:34:17] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[15:35:53] *** Joins: cadmio (~cadmio@151.37.31.68)
[15:36:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:37:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:39:47] <riv> let's do some more integrals
[15:40:28] <Guest76> gauss: {x in X : f(x) in U} Does this work?
[15:43:18] <cadmio> hey riv
[15:43:42] <cadmio> I was trying to solve the exercise noticing that the size of a conjugacy class [g] of the element g in a finite group G is [g] = |G|/|C_G(g)|
[15:44:38] <riv> hey
[15:44:56] <riv> good idea
[15:44:57] <cadmio> and all the cardinalities of these classe must sum up to 60 which 5!/2
[15:45:07] <riv> size of conjugacy class = index of centralizer
[15:45:32] <riv> yeah the class partition the group
[15:45:36] <cadmio> so that I can find both the number and cardinality of the classes
[15:46:13] <riv> the hard part would be picking the set of representatives 'g'
[15:46:41] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:46:49] <cadmio> |id| is easy it's 1, 'cause in the end [g] = Orbit(g)
[15:46:53] *** Joins: flynn (~mcbloch@user/flynn)
[15:47:35] <cadmio> but I don't know how to find the orbits of the other elements
[15:49:05] <riv> the group action is conjugaction
[15:49:22] <riv> so the orbit [g] = Orbit(g) = { g^r | r in G }
[15:49:30] <riv> = { r' g r | r in G }
[15:50:19] <cadmio> right
[15:50:31] <cadmio> and also in this case the stabilizer = centralizer
[15:51:10] <cadmio> in the exercise I did before I found out that if Ïƒ does not commute with any odd permutation. The the centralizer CSn(Ïƒ) of Ïƒ in Sn coincides with the centralizer CAn(Ïƒ) of Ïƒ in An.
[15:51:17] <riv> yep
[15:51:27] <cadmio> so there's no splitting in this case
[15:51:49] <cadmio> so I could resort to check wheter each element commutes with some odd permutation
[15:53:19] <Z-module> cadmio, in very general terms, given some x in S_n (could be in A_n, doesn'
[15:53:43] *** Quits: Guest76 (~Guest76@78-2-86-29.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[15:53:57] <Z-module> doesn't matter), then for any g in S_n, do you know what  g^-1 x g   is in terms of x ? THere's a very particular description of it.
[15:55:10] <cadmio> so how should I proceed?
[15:55:53] <riv> Any suggestions for this integral? int[-inf, inf] e^(i t x) / (e^x + e^(-x)) dx
[15:56:13] <riv> i can replace e^(i t x) with cos(t x), but that doesn't seem to help
[15:56:50] <riv> the integrand is even so i can split the range in half and double the result
[15:56:51] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[15:57:36] <riv> WA is giving me results like 1/2 pi sech(t pi / 2)
[15:57:51] <riv> sech(x) = 2/(e^x + e^(-x))
[15:59:40] <Z-module> it's not even, though, is it?
[15:59:53] <buster> riv, e^(itx) = cos(tx) + i sin(tx)
[16:01:21] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[16:01:45] *** Joins: seninha (~seninha@user/seninha)
[16:02:25] <riv> im confused
[16:02:33] *** Joins: daoudr (~daoudr@178.197.197.112)
[16:02:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:02:34] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[16:02:53] <Z-module> the numerator of your integrad is nonreal (if t is nonzero), and the integral ends up nonreal too
[16:02:54] <riv> yeah the integrand is not even
[16:03:15] <riv> but I showed int[-inf, inf] e^(i t x) / (e^x + e^(-x)) dx = int[-inf, inf] e^(-i t x) / (e^x + e^(-x)) dx
[16:03:33] <Z-module> the real part of the integrand is an even function
[16:03:49] <riv> yeah and the result is real I think
[16:05:41] <Z-module> the imaginary part is odd, and yes, if its integral over [0, +infty) converges  (sure looks like it does), then its integral over (-infty, 0] cancels that out exactly, so yeah, the overall answer is real.
[16:06:59] <riv> parts on (1/(i t) e^(i t x))' sech(x) gives me 1/(i t) e^(i t x) sech(x) + int[-inf,inf] 1/(i t) e^(i t x) tanh(x) sech(x) dx  which seems unhelpful
[16:08:10] <riv> 1/(i t) e^(i t x) sech(x) |_{-inf}^{inf} forgot the evaluation bracket
[16:08:30] <cherim> Sum over residues in the upper half-plane, you'll get a series with a parameter t
[16:08:50] <cherim> It's either directly summable or after differentiation by t
[16:09:02] <cherim> In the second case, integrate back
[16:09:38] <riv> ah
[16:10:22] <riv> so e^x = - e^(-x) when x = i pi / 2 + pi k for all k in Z
[16:11:19] <cherim> Yes, check that the contour can be closed without changing value, compute the residue, sum over k
[16:13:45] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[16:16:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[16:19:47] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[16:20:06] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:20:56] <riv> so im getting  pi * sum[k=0,inf] (-1)^k e^(-pi t (2 k + 1))
[16:21:45] <cherim> Then it's just a geometric series
[16:21:46] *** Quits: cadmio (~cadmio@151.37.31.68) (Quit: WeeChat 3.0)
[16:23:06] <riv> thanks!
[16:24:00] *** Joins: oxide (~lambda@user/oxide)
[16:24:07] *** Quits: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com) (Ping timeout: 252 seconds)
[16:24:55] <cherim> You probably lost a couple of 2s though
[16:26:59] <oj> How do you guys remember the order of matrix multiplication
[16:27:08] <oj> do you have a silly mneumonic or something
[16:32:38] <jmnbtslsQE> the row of the first matrix visually comes into contact with the column of the second matrix
[16:33:05] *** Quits: cuppajoeman (~cuppajoem@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[16:36:03] *** Joins: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com)
[16:36:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:39:10] <oj> hey, that's a good one
[16:39:37] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[16:53:53] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[16:53:58] <Z-module> well, in n x n matrices over K, if you computed a matrix product "the other way", using the ith column of the left matrix and the jth row of the right matrix to get the i,j element of the product, it does all work out to something. You end up with the so-called opposite ring of M_n(K).
[16:58:58] <oj> Z-module: I'm just looking for a quick way to remember which way the multiplication goes
[16:59:05] <oj> so I don't have to look it up
[16:59:09] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[17:00:21] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:02:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[17:03:41] <xaltsc> Hey, does someone know stuff about \ell-adic fields (not p-adic) ? From what I can tell, Q_3(\sqrt{2}) has F_9, but in the general case, if L/Q_p if a finite extension of degree n, I would assume that the residue field is F_{p^n}, and how do different extensions of Q_p with same residue fields compare to one another ? Are they isomorphic as fields ? Are they homeomorphic ? Can the norm on such
[17:03:43] <xaltsc> extensions be expressed as easily as in Q_p ?
[17:04:49] <xaltsc> I said \ell-adic but I really just mean p^r-adic in fact; I'm not concerned with the cases where pâ‰ \ell just yet.
[17:05:01] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:07:33] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[17:09:26] *** Joins: xiongxin8802 (~xiongxin@113.116.34.138)
[17:09:48] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:10:28] <xaltsc> To put it in other terms, how bijective is the map k -> o_k/m_{o_k}, given that k is an \frak{p}-adic extension of a finite extension of Q (or the converse, it commutes anyway), since we know the classification of finite fields.
[17:11:05] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:12:35] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 252 seconds)
[17:13:39] *** Joins: metallic (~sillaman@169.red-83-53-69.dynamicip.rima-tde.net)
[17:14:57] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[17:21:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:23:08] *** Joins: aman (~aman@user/aman)
[17:26:29] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:29:07] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[17:30:38] *** Joins: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de)
[17:31:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[17:32:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:33:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:35:04] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[17:35:16] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3030:ec09:c6b3:660f)
[17:35:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[17:41:21] <[itchyjunk]> Coq has a tactic called `trivial` lol
[17:47:54] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:48:58] *** Quits: molt (~molt@178-223-40-94.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[17:52:14] *** Parts: chamus_ (~Chamus@144.202.104.101) (Quit.)
[17:52:26] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:54:52] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 252 seconds)
[17:55:19] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:55:57] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[17:56:20] *** Quits: mgrabovs (~mgrabovs@redhat/mgrabovs) (Quit: Carpe diem)
[17:59:25] *** Joins: hyiltiz (~quassel@31.220.5.250)
[18:00:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 250 seconds)
[18:00:19] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:01:49] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[18:03:42] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[18:04:28] *** Joins: zacts (~zak@user/zacts)
[18:05:45] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:9491:aca8:36dc:c0bb)
[18:05:55] *** Quits: fstd_ (~fstd@xdsl-78-35-86-220.nc.de) (Remote host closed the connection)
[18:11:49] *** Quits: qbt (~edun@user/edun) (Remote host closed the connection)
[18:11:55] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[18:11:59] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Ping timeout: 252 seconds)
[18:14:40] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Quit: Leaving)
[18:19:04] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[18:20:54] *** Joins: jinsun (~quassel@user/jinsun)
[18:21:18] *** Joins: son0p (~ff@181.136.122.143)
[18:22:13] *** Quits: xiongxin8802 (~xiongxin@113.116.34.138) (Quit: Konversation terminated!)
[18:23:19] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[18:23:34] *** Joins: qbt (~edun@user/edun)
[18:27:45] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-48bc-d9bc-c2f0-e922.res6.spectrum.com)
[18:30:04] *** Quits: Everything (~Everythin@37.115.210.35) (Ping timeout: 252 seconds)
[18:30:42] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[18:32:02] *** Joins: Everything (~Everythin@37.115.210.35)
[18:34:28] *** Quits: zacts (~zak@user/zacts) (Ping timeout: 252 seconds)
[18:42:51] *** Joins: magla (~gelignite@55d47635.access.ecotel.net)
[18:44:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[18:45:19] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:45:21] <Z-module> hmm, if f is nonconstant entire, and L is a "half-line" in the plane -- some translation/rotation of the set [0, +infty) from the real axis -- how do we easily show that f(C) is not a subset of C\L, if we can't appeal to Picard?
[18:45:33] <Z-module> something about using a branch of log, I would imagine
[18:50:30] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 250 seconds)
[18:52:38] *** Joins: oxide (~lambda@user/oxide)
[18:55:48] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[18:58:07] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[18:58:29] *** Joins: nvmd (~nvmd@user/nvmd)
[18:59:10] *** Quits: rubiksdream (~a@1-64-49-062.static.netvigator.com) (Ping timeout: 240 seconds)
[19:02:24] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:02:37] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 245 seconds)
[19:05:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[19:06:21] *** Joins: hyiltiz (~quassel@31.220.5.250)
[19:06:35] *** Joins: cadmio (~cadmio@151.57.172.94)
[19:06:38] <cadmio> Hello
[19:07:32] *** Quits: Turingtoast (~Tino@83.126.46.39) (Ping timeout: 252 seconds)
[19:07:34] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[19:08:08] <Inline> this is so embarassing, couldn't compile macaulay from github even, depends on fflas-ffpack and givaro, when i build them from the submodules directory and install it's ok, but then when i return to the main compilation, it tells me the version of my givaro lib is too old, wth
[19:09:48] <Inline> and when i do all over again starting from the main source tree, it compiles all well until fflas-ffpack, which uses some symbols not found, i tried --enable-debug [thought they got stripped or so] but no dice
[19:09:51] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[19:10:13] <Inline> it's somehow gc specific [garbage collector]
[19:10:32] <shlomif> hi all! does anyone know the current nick of "pyon" / "unyu" / DijkstraGroupie?
[19:10:33] <Inline> i think i give up and use GAP only and Singular maybe too
[19:12:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Ping timeout: 245 seconds)
[19:13:50] *** Joins: seninha (~seninha@user/seninha)
[19:14:38] <Z-module> cadmio, how's it coming in A_5 ?
[19:14:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[19:16:54] *** Joins: kakashiA1 (~kakashi@ppp-188-174-59-116.dynamic.mnet-online.de)
[19:17:10] <cadmio> Z-module: I'm not sure about  my approach of splitting classes of S_5 that not commute with odd permutations
[19:17:26] *** Joins: Turingtoast (~Tino@83.126.46.39)
[19:17:50] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:18:01] *** Joins: flynn (~mcbloch@user/flynn)
[19:18:57] <cadmio> I've found out in a previous exercise that Ïƒ_S_n = Ïƒ_A_n âˆª {(1,2) Ïƒ (1,2)âˆ’1}A^n
[19:19:34] *** Quits: kakashiAL (~kakashi@ppp-188-174-59-116.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[19:20:46] <bosspotato> Z-module: in the case that the set is [0, \infty), weierstrass's theorem implies that any entire function that's nonzero everywhere can be written as exp(g(z)) for an entire function g, and f(C) \subseteq C \ L would imply that there exists n in Z such that 2*pi*n < im(z) < 2*pi*(n+1) for every z in g(C), normally
[19:20:46] <Z-module> right
[19:20:57] <bosspotato> and a contradiction shouldn't be very far from this point
[19:21:50] <Z-module> bosspotato: sure, a simple translation-then-rotation entire function reduces my general L to that case
[19:22:04] <bosspotato> yep
[19:22:37] <Z-module> I wonder if this is how the problem-poser intended it to go. I have to imagine it is.
[19:24:32] <bosspotato> like composing g with exp(-(x-2pi*i)^2) and invoking liouville should do it I would assume
[19:25:09] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[19:26:03] <Z-module> well, the very simple Casorati-Weierstrass already tells us that f(C) has to be dense in the plane
[19:26:20] *** Joins: BlueSky__ (~BlueSky@user/bluesky)
[19:26:21] <bosspotato> ah yeah that's true
[19:27:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[19:28:10] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[19:28:27] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[19:28:33] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:30:57] <cadmio> Z-module: let me know if you've an idea
[19:31:56] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[19:32:13] *** Joins: flynn (~mcbloch@user/flynn)
[19:32:27] *** Joins: riv (~river@tilde.team/user/river)
[19:33:05] *** Joins: NEYi (~NEYi@109.251.216.38)
[19:34:05] *** Quits: riv (~river@tilde.team/user/river) (Client Quit)
[19:34:16] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[19:34:42] *** Quits: Turingtoast (~Tino@83.126.46.39) (Ping timeout: 250 seconds)
[19:35:20] *** Joins: riv (~river@tilde.team/user/river)
[19:35:36] *** Quits: riv (~river@tilde.team/user/river) (Remote host closed the connection)
[19:35:53] *** Joins: riv (~river@tilde.team/user/river)
[19:36:58] *** Quits: BlueSky__ (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[19:39:58] *** Joins: robin (~robin@user/terpri)
[19:40:01] <cadmio> if there were a way to relate the cyclic structure of g to the one of x in g' = xgx it would help
[19:40:15] <cadmio> sorry in g' = xgx^-1
[19:41:34] <Z-module> I like to use ` to indicate inverses of elements, in here.  for ANY x in S_n, and any g in S_n, the two permutations  x  and its conjugate  g`xg   always have the same disjoint-cycle structure, regardless of anything being in A_n
[19:42:42] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:9491:aca8:36dc:c0bb) (Quit: WeeChat 3.2.1)
[19:44:04] *** phasmatodea is now known as plankers
[19:44:37] <cadmio> yes but I'm talking about a relation of g and x
[19:45:33] *** Joins: ferdna (~ferdna@user/ferdna)
[19:45:43] *** Joins: tacegory (~tacegory@user/tacegory)
[19:45:55] <cadmio> between g and x
[19:46:47] <greenbagels> elderK: https://psty.io/p?q=f9a2a this link will be up for 24 hours
[19:47:15] <greenbagels> and is the log of your convo with cherim and pikapika about your problem
[19:47:34] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:47:37] <greenbagels> shlomif: why do you ask?
[19:47:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[19:48:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:48:36] <shlomif> greenbagels: he is an old friend. and i'm /away
[19:48:37] <Z-module> cadmio: what are you actually trying to get now? Just an explicit listing of all the classes in A_5 and what elements are in each?
[19:48:57] <Z-module> (when I say "classes" here, I always mean conjugacy classes)
[19:49:08] <greenbagels> ah i see; i don't think i remember what happened to unyu...
[19:49:20] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[19:49:35] *** Joins: Turingtoast (~Tino@83.126.46.39)
[19:49:54] *** Quits: magla (~gelignite@55d47635.access.ecotel.net) (Quit: Stay safe!)
[19:50:15] <cadmio> maybe by knowing that x is odd I could exclude is in A_n
[19:50:47] <greenbagels> I haven't seen them since about 2019 shlomif
[19:51:03] <greenbagels> or rather, it seems they haven't been here since then
[19:52:08] <Z-module> cadmio: x from S_n is in A_n iff x is even, and some conjugate g`xg of it is in the class [x]_(A_n) iff some even h exists with  g`hx = h`xh
[19:52:32] <Z-module> sorry  g`xg = h`xh   (with h even)
[19:52:55] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:53:07] *** Quits: Maturion (~Maturion@p200300ede715e200ae2d88b9aefd60e0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:54:09] <cadmio> yes I know but have I to check manually that for every x there's a g in A_5?
[19:54:29] <cadmio> for some g in S_5 but not in A_5
[19:54:58] <Z-module> the class [x]_(A_5) is nothing but the set of all  h`xh   as h ranges over A_5
[19:55:29] <cadmio> what I've now are the [x]_S_5
[19:56:23] <cadmio> a sec
[19:56:25] *** Quits: cadmio (~cadmio@151.57.172.94) (Quit: WeeChat 3.0)
[19:56:25] <Z-module> yes, and this  [x]_A_5  class you need is either all of [x]_S_5, or else is just half of that last set with the other half forming a distinct class in A_5
[19:57:59] *** Joins: cadmio (~cadmio@ba-19-140-23.service.infuturo.it)
[19:58:45] <cadmio> and I know that [g] = |O(g)| = |G|/|C_G(g)| but to calculate the centralizer for each g is challenging
[19:59:32] *** Joins: rubiksdream (~a@1-64-49-062.static.netvigator.com)
[20:01:06] <Inline> symmtery is hard
[20:01:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:06:40] *** Quits: anderson (~ande@134.209.221.71) (Quit: bye)
[20:06:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:08:40] *** Joins: anderson (~ande@134.209.221.71)
[20:09:14] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[20:09:17] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[20:09:39] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[20:12:07] <cadmio> ok see you
[20:12:10] *** Quits: cadmio (~cadmio@ba-19-140-23.service.infuturo.it) (Quit: WeeChat 3.0)
[20:13:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:15:10] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[20:17:31] *** Joins: hyiltiz (~quassel@31.220.5.250)
[20:20:22] <shlomif> greenbagels: ok, thanks!
[20:21:48] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[20:22:13] *** Joins: cheater (~Username@user/cheater)
[20:25:12] *** Quits: rubiksdream (~a@1-64-49-062.static.netvigator.com) (Ping timeout: 256 seconds)
[20:29:22] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[20:29:37] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:29:59] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[20:30:21] *** Joins: vysn (~vysn@user/vysn)
[20:30:30] *** Joins: r-g (~r-g@51.15.0.88)
[20:32:25] *** Quits: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[20:32:57] *** Joins: haykam (~haykam@static.100.2.21.65.clients.your-server.de)
[20:33:02] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[20:33:03] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Client Quit)
[20:33:19] *** Joins: vysn (~vysn@user/vysn)
[20:40:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:41:46] *** Quits: daoudr (~daoudr@178.197.197.112) (Quit: Leaving)
[20:45:08] <loopspace> Can someone help clear up the parenthetical remark at the end https://usercontent.irccloud-cdn.com/file/X4HEBsFz/image.png
[20:47:37] *** Joins: dutch (~DutchIngr@user/dutch)
[20:50:13] *** Joins: oxum (~oxum@106.203.195.217)
[20:50:54] <mawk> to generate primes you take random numbers and test their primality
[20:51:04] <mawk> which random numbers should we favor?
[20:51:23] <mawk> obviously odd number is better, but apart from that aren't there numbers more likely to be prime than others?
[20:52:21] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[20:54:36] *** Joins: oxum (~oxum@106.203.195.217)
[20:55:02] <riv> no
[20:55:13] <riv> you can cast out multiples of a bunch of small primes
[20:55:19] <riv> but beyond that there's nothing you can do
[20:55:46] <riv> avoid known composite forms like 2^(2n) - 1 but usually wont be relevant
[20:55:59] *** Joins: slidercrank (~slidercra@user/slidercrank)
[20:57:08] <int-e> riv: not that this changes much... but x^2-1 is composite whenever x > 2.
[20:57:39] <int-e> 2^(2n) - 1 is a very narrow special case of that
[20:58:58] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 240 seconds)
[21:01:19] *** Quits: kakashiA1 (~kakashi@ppp-188-174-59-116.dynamic.mnet-online.de) (Ping timeout: 252 seconds)
[21:01:50] *** Quits: mbuf (~Shakthi@110.225.244.218) (Quit: Leaving)
[21:01:57] *** Joins: Brainium (~brainium@user/brainium)
[21:02:51] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[21:04:07] <Z-module> mawk, well you clearly restrict to just numbers ending in one of 1,3,7,9 in decimal, but the density of primes in each of those four residue classes mod 10 is the same, asymptotically.
[21:06:52] <Z-module> Which reminds me, I haven't mentioned this nice thing in forever: If B is any finite decimal string, and E is any finite decimal string ending in one of 1,3,7,9, there exist infinitely many primes whose string starts with B and ends with E.
[21:07:43] <riv> wow
[21:08:09] *** Quits: oxide (~lambda@user/oxide) (Quit: oxide)
[21:08:18] <Z-module> Imagine B being a string of a googolplex consecutive 6's and E being B with a 7 tacked on the end.
[21:09:01] <cherim> But it looks like a cheap play on Dirichlet
[21:09:04] <Z-module> it is
[21:09:22] <cherim> I think the direct Dirichlet is more elegant than this googleplex thing
[21:09:32] <Z-module> well sure
[21:11:20] *** Quits: Fohsap (~Muimi@113.235.179.222) (Remote host closed the connection)
[21:12:07] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[21:12:52] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[21:14:21] <Z-module> Just so you know, riv, cherim is referring to the Dirichlet refinement of the Prime Number Theorem, stating that for any natural m > 1, and any integer b coprime to m,    lim_{x -> infty} (# of primes p <= x with  p = b (mod m)) / (x/log(x)) = 1/phi(m)     where phi is the totient function.
[21:14:51] <riv> ok!
[21:16:02] <Z-module> in particular with m = 10, the possible b there giving distinct classes of primes are 1,3,7,9, and each of those classes has asymptotically 1/4 of all the primes.
[21:17:21] *** Quits: tomaw (tom@libera/staff/tomaw) (Quit: Quitting)
[21:17:26] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:18:15] <Z-module> (the fact taht the prime 2 isn't in any of those classes has no effect on this result, of course)
[21:18:15] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:18:48] * Z-module <- Master of the Turbo-Obvious
[21:20:51] *** Joins: tomaw (tom@libera/staff/tomaw)
[21:21:23] *** Joins: aakashi2001 (~aakashi20@103.215.99.8)
[21:21:23] *** Quits: aakashi2001 (~aakashi20@103.215.99.8) (Changing host)
[21:21:23] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:23:56] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[21:28:38] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:31:21] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[21:32:32] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:32:34] *** Quits: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net) (Ping timeout: 240 seconds)
[21:32:43] *** Joins: flynn (~mcbloch@user/flynn)
[21:36:41] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:40:43] <[itchyjunk]> Say i have a inf seq i want to sum..
[21:41:10] <[itchyjunk]> i don't remembe how to do it. \sum_1^inf 50 + 10 + 1/5 + ..
[21:41:46] *** Joins: oxum (~oxum@106.203.195.217)
[21:42:05] <Z-module> what's the pattern?
[21:42:27] <Z-module> or the next few terms
[21:42:30] <[itchyjunk]> oh i should figure that out first i guess
[21:42:30] *** Joins: barravince (~vincenzos@2a02:c7f:f220:5500:12bf:48ff:fe76:8be2)
[21:42:37] <Z-module> it's not geometric
[21:42:46] <[itchyjunk]> it's coming from here
[21:42:47] <[itchyjunk]> https://i.ibb.co/rkMSX13/image.png
[21:43:04] <[itchyjunk]> achilles is travelling at 10 yars / sec and the turtle at 1/5 yard per sec
[21:43:04] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[21:43:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:43:30] <[itchyjunk]> so achilles travels first 500 yars and the turtle has moved 10 yards further
[21:43:36] <[itchyjunk]> so he moves 10 yards and so on
[21:43:40] *** Joins: flynn (~mcbloch@user/flynn)
[21:44:19] <[itchyjunk]> so next is .004 yard it seems
[21:45:14] <[itchyjunk]> idk if they want me to actually so some actual infinite seq adding or not there
[21:45:26] <arseniiv> should be a geometric one after all, I guess, as tortoise moves the same velocity ratio less than the Achilles does
[21:45:30] <[itchyjunk]> i had approximated original distance to 510.02
[21:45:43] <[itchyjunk]> oh that true
[21:45:55] <[itchyjunk]> 1/50th speed of achielles each time
[21:46:36] <arseniiv> so you just multiply by that ratio all the way, getting each step in turn, pretty geometric I say :D
[21:47:30] *** Joins: oxum (~oxum@106.203.195.217)
[21:48:01] <arseniiv> sorry I was just messing with IRC windows and saw this part and now bye o/
[21:48:28] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[21:48:40] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:49:26] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[21:49:35] <jpearse> remember that anything below 1.616255(18)Ã—10âˆ’35 m in terms of distance differences is quite hard to pin down... so physically it might have a non-infinite series.
[21:50:27] <[itchyjunk]> i don't think infinity is useful concept for anything "physical"
[21:50:34] <[itchyjunk]> not useful*
[21:50:59] <yashi> It certainly is useful.
[21:51:03] <arseniiv> due to rounding errors, the sum might not converge
[21:51:11] <arseniiv> mwahaha
[21:51:15] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[21:51:22] <jpearse> lol arseniiv now we are both just trolling right?
[21:51:28] *** Joins: oxum (~oxum@106.203.195.217)
[21:51:30] <arseniiv> I guess
[21:52:32] <[itchyjunk]> alright so 500/50 + (500/50)/50 + ....
[21:52:38] *** Joins: econo (uid147250@user/econo)
[21:52:46] <[itchyjunk]> How did sum of infinite series work again?
[21:52:47] <jpearse> i should make a small cgi that works out the amount of steps in zeno's paradox, given a turtle start position and an achilles speed before the system becomes physically unreal to consider any further.
[21:52:59] <[itchyjunk]> i take partial sums and look at it's limit?
[21:53:01] <[itchyjunk]> can't remember shit
[21:53:26] <[itchyjunk]> oh right
[21:53:32] <[itchyjunk]> i make a sequence of partial sums
[21:53:38] <[itchyjunk]> and i take the limti of that
[21:53:41] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[21:53:43] <[itchyjunk]> man i don't wanna do all that
[21:53:57] <[itchyjunk]> i'll just say "look at it, it looks same. what else do you want from me?" argument
[21:53:59] <[itchyjunk]> never fails
[21:54:05] *** Joins: caramel (~caramel@user/caramel)
[21:54:47] *** Joins: BadK4rMa (BadK4rMa@c-73-207-88-254.hsd1.ga.comcast.net)
[21:54:51] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[21:55:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[21:55:41] <[itchyjunk]> that depends on your starting assumption
[21:55:46] <[itchyjunk]> rather than the "paradox" itself
[21:55:50] <[itchyjunk]> so it's not that enlightning
[21:57:36] *** Joins: Koen_ (~Koen@96.250.88.92.rev.sfr.net)
[21:58:02] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:58:50] <arseniiv> [itchyjunk]: you donâ€™t need to go all infinite series to sum 1 + a + aÂ² + â€¦, though :) Assume this exists and equals S, then (assuming a handful of other things work) S = 1 + a S, from which S = 1 / (1 âˆ’ a), and finally we may want to premultiply all that by some b â‰  1
[21:59:25] <arseniiv> from Zenoâ€™s paradoxes, I like the arrow
[21:59:58] <arseniiv> a modern physicist may say itâ€™s about configuration space vs. phase space
[22:02:52] <[itchyjunk]> a being my deffering term?
[22:02:57] <[itchyjunk]> oh right
[22:06:38] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[22:07:04] *** Joins: oxum (~oxum@106.203.195.217)
[22:07:37] *** Joins: riv (~river@tilde.team/user/river)
[22:08:32] <arseniiv> [itchyjunk]: we called that quotient or something, donâ€™t remember now how the terminology goesâ€¦
[22:10:52] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[22:11:42] *** Parts: savask (~savask@Powder/Developer/savask) ()
[22:12:15] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[22:17:36] *** Joins: nicbk (~nicbk@user/nicbk)
[22:17:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[22:18:06] <[itchyjunk]> a(r^n - 1) / (r-1) since i have 500 instead of 1
[22:18:08] <[itchyjunk]> but yeah
[22:18:11] <[itchyjunk]> forgot about this formula
[22:19:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:29:06] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.2)
[22:30:22] <jpearse> i got onto a related topic. i'm reading about the ramanujan summation now and it's blown my mind.
[22:30:46] <riv> oh yeah that stuff is cool
[22:30:50] <riv> did you get cauchy sequences sorted?
[22:30:58] <jpearse> 1+2+3+4+5+6+... = -1/12 ? to me that's like: go home maths, you're drunk.
[22:31:42] <jpearse> riv: yeah i did thanks. it makes more sense now. i think i will have to do a few examples myself to drive it home.
[22:31:47] <riv> good!
[22:32:08] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 252 seconds)
[22:32:32] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:41:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:41:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[22:41:37] *** Joins: magla (~gelignite@55d47635.access.ecotel.net)
[22:41:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:42:26] *** Joins: cebor (~cebor@nimbus.stkn.org)
[22:44:03] *** Joins: lok91 (~lok91@D4709983.rev.sefiber.dk)
[22:45:14] <qergle> jpearse: have you looked over any of the results ramanujan arrived at via his divergent series summation theory?
[22:45:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[22:45:48] <riv> want to evaluate I(w) = int[0,inf] e^(i w t)/sqrt(t) dt
[22:45:55] <riv> I tried t = u^2, dt = 2 u du
[22:46:05] <riv> that gives me int[-inf,int] e^(i w t^2) dt
[22:46:22] <riv> does that seem ok? it looks oscillatory
[22:47:06] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:47:13] <lok91> https://imgur.com/a/ZGSZq67 - isn't this definition of the signum function strange? First of all, I thought there were generally three "cases", i.e. also sgn(x) = 0 if x = 0. But I also think sgn : R \ {0} -> {0, 1} is pretty strange. Wouldn't it be sgn : R \ {0} -> {-1, 1}?
[22:47:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:48:37] <qergle> they're not allowing for x=0
[22:48:49] <lok91> I see, but isn't it standard to allow x = 0?
[22:48:58] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:49:14] <qergle> yes, but in this context of yours they seem to be concerned with R\{0}
[22:49:50] <lok91> Yeah. But why sgn : R \ {0} -> {0, 1}? Isn't the codomain {-1, 1} rather than {0, 1}?
[22:50:01] <qergle> why the domain is punctured? beats me. it must be clear from your context.
[22:50:31] <qergle> maybe you need to post the full page
[22:51:26] <lok91> There's nothing more about that function in the notes (except from a plot) :P  https://imgur.com/a/V8xknMf
[22:51:37] <qergle> but yes, if they're saying the sgn function is from R\{0}â†’{0,1} on the right, it seems inconsistent with the piecewise def on left
[22:51:54] <lok91> But shouldn't {0, 1} be {-1, 1}?
[22:52:02] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[22:52:18] <riv> WA seems happy with integrating e^(i w t^2) dt , but in what sense does it converge?
[22:52:25] <qergle> ok {0,1} is a typo
[22:52:28] <qergle> they meant {-1,1}
[22:52:56] <lok91> Yeah, I thought so
[22:53:25] <lok91> But thanks!
[22:53:59] *** Quits: cebor (~cebor@nimbus.stkn.org) (Changing host)
[22:53:59] *** Joins: cebor (~cebor@user/cebor)
[22:54:06] <qergle> not sure why they exlude 0, though. it's still odd without puncturing the line.
[22:54:45] <lok91> Maybe because you cannot divide by 0?
[22:54:52] <lok91> And they say x/|x|
[22:55:22] <qergle> sure, but you not that the function is equivalent to x/|x| when xâ‰ 0
[22:55:27] <qergle> the defn is piecewise
[22:55:33] <qergle> s/not/note
[22:55:49] <lok91> Indeed - only when non-zero
[22:55:59] <lok91> But if they allowed zero, that definition would be a problem
[22:56:01] <lok91> x/|x|
[22:56:11] <lok91> |0| = 0
[22:56:23] <qergle> so you say sgn(x) = { 1 : x>0, 0 : x=0, -1 : x<0
[22:56:28] <qergle> that's your defn
[22:56:40] <qergle> then you say sgn(x) is equivalent to x/|x| when xâ‰  0
[22:56:53] <lok91> Yeah, but only when x is non-zero :P
[22:57:10] <qergle> but x/|x| isn't the defn!
[22:57:17] <lok91> According to those notes, yes
[22:57:17] <qergle> this is -> sgn(x) = { 1 : x>0, 0 : x=0, -1 : x<0
[22:57:27] <lok91> They say it is the same
[22:57:40] <jpearse> qergle: i haven't seen the results of these ideas apart from learning about their use in physics.
[22:57:45] <qergle> yes, they made up a new function that doesn't include 0 in its domain
[22:57:48] <qergle> it's non-standard
[22:58:10] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:58:10] <qergle> it's standard to say sgn(0)=0
[22:58:25] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:59:02] <qergle> regardless, it's clear. the only issue with their presentation is a typo in the codomain.
[22:59:03] <lok91> But for some of the functions, they specify both the co-domain and the range. For some reason, they only specify the co-domain here, not the range. Would the range be any different?
[22:59:21] <qergle> range is a terrible word, stop using it
[22:59:30] <lok91> Isn't it called range? :P
[22:59:35] <qergle> do you mean image (to contrast with co-domain)?
[23:00:15] <qergle> the problem with range is some people use it synonymously with image and others with co-domain.
[23:00:19] *** Quits: smi (sid510004@id-510004.helmsley.irccloud.com) (Changing host)
[23:00:19] *** Joins: smi (sid510004@user/smi)
[23:00:24] <lok91> This is what I mean by range: https://imgur.com/a/DfwshVR
[23:00:32] <lok91> Is that what you call the image?
[23:00:49] <qergle> yes
[23:01:23] <lok91> So is the image the same as the co-domain in the case of the signum function, since they only specified the co-domain?
[23:01:49] <qergle> in your sgn example, the co-domain specified (once we fix their typo) is {-1,1} and that's also the image (range by your def)
[23:02:09] <lok91> Oh, that's why they don't mention both :)
[23:03:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2)
[23:03:06] <lok91> But what is the actual difference? In the screenshot right above, I am not sure I understand why the co-domain and the range/image is different.
[23:03:17] <lok91> For that other function.
[23:03:25] <lok91> https://imgur.com/a/DfwshVR
[23:04:50] <qergle> the co-domain is specified
[23:04:57] <qergle> it's part of the functions definition
[23:06:09] <lok91> Yes, but my question is why it is different from the range/image in that case :P
[23:06:51] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:06:52] <qergle> on other words, we can define two functions f:Râ†’R f(x)=x^2 or g:Râ†’R_{â‰¥0} g(x)=x^2
[23:07:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:07:14] <qergle> those two are different. in f's case, the image and co-codomain don't match in g's case they do.
[23:07:15] *** Joins: flynn (~mcbloch@user/flynn)
[23:08:28] <lok91> Hm, but why is that the case?
[23:08:36] <qergle> why is what?
[23:09:48] *** Joins: kakashiA1 (~kakashi@aftr-62-216-211-83.dynamic.mnet-online.de)
[23:10:15] <lok91> Why don't they match in f's case? And why do they match in g's case?
[23:10:20] <Z-module> signum's values are any of -1, 0, 1
[23:10:33] <lok91> Z-module: Apparently not according to that definition? :P
[23:10:38] <Z-module> but yeah, if 0 isn't in the domain, you don't get a value 0
[23:10:50] <Z-module> that should not be called "signum"
[23:10:52] <qergle> lok91: because they simply don't. the codomain is part of the definition. we decide what that is when defining the function.
[23:13:04] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Quit: Leaving)
[23:13:42] <lok91> So the codomain is something we decide, not something we can "find"?
[23:13:46] <qergle> right
[23:13:49] <Z-module> right lok91
[23:13:58] <qergle> it is part of the function's definition. not a byproduct.
[23:14:59] <Z-module> in spite of what many lower-level course exercises will lead you to think
[23:15:03] *** Quits: haykam (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[23:15:07] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[23:15:17] *** Joins: haykam (~haykam@static.100.2.21.65.clients.your-server.de)
[23:17:02] <lok91> They often ask what the co-domain is... but maybe that's because they want us to look at definitions :P
[23:17:12] <lok91> Where someone decided it.
[23:18:38] *** Quits: aman (~aman@user/aman) (Quit: aman)
[23:22:55] <lok91> So for example, the floor and ceiling functions... would the range/image also be Z there? Like the co-domain?
[23:23:15] <qergle> didn't we just agree the co-domain is decided by us?
[23:23:16] <Z-module> image is Z for both, yes
[23:23:19] <lok91> That would be something like floor(x) : R -> Z?
[23:23:25] <Z-module> (if the domain is R as usual)
[23:23:39] <lok91> Yeah
[23:23:50] <qergle> therefore no lok91
[23:24:42] <lok91> qergle Well, yes, we agreed on that in general... but these are "standard functions"? Isn't the codomain *always* Z for these functions?
[23:24:51] <qergle> didn't we just agree the co-domain is decided by us?
[23:24:55] <lok91> Can we just decide on a different codomain for standard functions?
[23:25:36] <qergle> we just had a 10 minute debate about your text using a *NONSTANDARD* definition for signum
[23:25:46] *** Joins: jmft2_ (~jmft2@213.31.248.255)
[23:26:23] <qergle> so my answer is no. you're wrong.
[23:26:46] <lok91> OK, sorry :P
[23:26:56] <qergle> when defining a function for me, i insist that you provide the co-domain as part of that/
[23:28:45] <lok91> Then I know that :D
[23:29:13] *** Quits: barravince (~vincenzos@2a02:c7f:f220:5500:12bf:48ff:fe76:8be2) (Quit: Konversation terminated!)
[23:32:44] *** Joins: flegia (~flegia@109-93-187-44.dynamic.isp.telekom.rs)
[23:33:53] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[23:34:16] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[23:34:45] <lok91> Thanks!
[23:34:56] <qergle> lok91: if i seem difficult it's not with that intent, this is the level of rigor needed for these things to make sense to you.
[23:35:13] <qergle> otherwise we can't speak intelligently about why co-domain and image might not match, etc.
[23:37:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:37:09] <lok91> No worries, I'm happy that you explain how things are defined rigorously :D
[23:37:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:39:32] *** Quits: flegia (~flegia@109-93-187-44.dynamic.isp.telekom.rs) (Quit: leaving)
[23:40:00] *** Quits: Turingtoast (~Tino@83.126.46.39) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[23:40:08] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:40:19] *** Joins: flynn (~mcbloch@user/flynn)
[23:44:44] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 252 seconds)
[23:45:00] *** Joins: specing_ (~specing@user/specing)
[23:45:00] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[23:46:39] *** specing_ is now known as specing
[23:47:06] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[23:52:55] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:53:06] *** Joins: flynn (~mcbloch@user/flynn)
[23:54:03] *** Joins: oxum (~oxum@106.203.195.217)
[23:55:58] *** Joins: Kaylah (~Kaylah@ptr-eit6u3f9lwmjtkycmm9.18120a2.ip6.access.telenet.be)
[23:56:46] *** Quits: metallic (~sillaman@169.red-83-53-69.dynamicip.rima-tde.net) (Quit: Leaving)
[23:58:40] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 240 seconds)
[23:59:35] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 250 seconds)
