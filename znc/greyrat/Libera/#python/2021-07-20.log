[00:01:39] *** Quits: audiocat (~audio@2603-8081-1800-00ad-2acc-6c61-53bd-5d99.res6.spectrum.com) (Ping timeout: 255 seconds)
[00:01:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:02:34] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[00:02:45] *** Joins: wyclif (~wyclif@user/wyclif)
[00:03:30] *** Joins: audiocat (~audio@2603-8081-1800-00ad-5c65-aed6-c0c3-cf16.res6.spectrum.com)
[00:04:03] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[00:04:40] <SnoopJ> oh hrm, it points to the #numpy channel, not #python. Dunno if they moved or not, I never heard about it either way
[00:05:05] *** Joins: ttkap (~ttkap@user/ttkap)
[00:07:04] *** Quits: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel) (Ping timeout: 240 seconds)
[00:07:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:08:15] *** Joins: wyclif (~wyclif@user/wyclif)
[00:09:00] *** Joins: GoldAndAppel (goldandapp@gateway/vpn/protonvpn/goldandappel)
[00:11:19] *** Joins: sri19 (~Srain@240-205-21-31.ftth.glasoperator.nl)
[00:11:43] *** Joins: gmcastil (~gmcastil@50-206-38-118-static.hfc.comcastbusiness.net)
[00:12:48] *** Quits: sri19 (~Srain@240-205-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:12:50] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:13:03] *** Joins: qlixed (~qlixed@152.170.36.244)
[00:14:36] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[00:14:45] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Quit: Konversation terminated!)
[00:15:09] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[00:15:19] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[00:15:50] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[00:15:56] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[00:16:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[00:16:38] *** Joins: reset (~reset@user/reset)
[00:17:21] *** Quits: rendar (~rendar@user/rendar) ()
[00:18:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:18:13] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[00:19:17] *** Joins: wyclif (~wyclif@user/wyclif)
[00:19:23] *** Joins: tspng (~tspng@2a02:168:a1a1:1:1011:12f2:8684:6e13)
[00:20:08] *** Joins: p-i- (~Ohmu@node-12lw.pool-118-173.dynamic.totinternet.net)
[00:20:57] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:a95f:2680:bfdb:1d22) (Ping timeout: 252 seconds)
[00:21:33] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-149.hsi5.kabel-badenwuerttemberg.de)
[00:22:56] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[00:24:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:24:36] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05) (Remote host closed the connection)
[00:24:47] *** Joins: wyclif (~wyclif@user/wyclif)
[00:25:43] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05)
[00:29:17] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-0ca1-806b-912b-0cdd.res6.spectrum.com)
[00:29:31] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:29:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[00:30:31] *** Joins: janemba (~janemba@94.204.254.193)
[00:30:36] *** Joins: wyclif (~wyclif@user/wyclif)
[00:31:15] *** Joins: pnoud (~pnoud@user/pnoud)
[00:33:28] <NoImNotNineVolt> so, i'm using suse linux 12 for the first time, and i was wondering, what's the best way to get tox running on here?
[00:33:53] <grym> NoImNotNineVolt: pip, i imagine?
[00:34:23] <NoImNotNineVolt> so, s/tox/pip/ then? :P
[00:34:43] <grym> NoImNotNineVolt: pyenv's great :P
[00:34:56] <grym> i try to avoid distro-supplied pythons regardless of distro
[00:35:10] <NoImNotNineVolt> so, s/pip/pyenv/ then? :P
[00:35:51] <grym> https://github.com/pyenv/pyenv-installer
[00:36:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[00:36:30] <grym> suse's distro python might be sane and include pip, though
[00:36:30] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[00:36:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:39:14] <nedbat> NoImNotNineVolt: what version of Python do you have there?
[00:39:38] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf)
[00:39:42] *** Joins: raxor2k (~raxor2k@46.99.20.151)
[00:39:51] <nedbat> NoImNotNineVolt: try this:  python -m ensurepip --user
[00:39:58] <raxor2k> anyone here who uses replit.com?
[00:40:13] <nedbat> raxor2k: as you know, it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[00:40:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:41:20] *** Joins: wyclif (~wyclif@user/wyclif)
[00:41:20] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 245 seconds)
[00:41:31] <hays> if i wanted to simulate a server that could only accept 5 connections at a time would multiprocessing be a way to do that?
[00:41:43] <hays> eg create a pool of 5 workers
[00:43:19] <NoImNotNineVolt> `python -m ensurepip --user` fails when trying to read from /usr/lib64/python2.7/ensurepip/_bundled/setuptools-41.2.0-py2.py3-none-any.whl'
[00:43:27] <raxor2k> nedbat: I was asking a question ?
[00:43:31] <raxor2k> Im just curious ?
[00:43:37] <NoImNotNineVolt> python is 2.7.17 and python3 is 3.4.10
[00:43:41] <nedbat> raxor2k: i use it
[00:43:48] <NoImNotNineVolt> hooray suse linux 12. :'(
[00:43:50] * SnoopJ has used it as well
[00:43:56] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[00:44:21] <grym> NoImNotNineVolt: yeah, i'd go with pyenv here. and check your openssl version first, too
[00:44:24] <nedbat> NoImNotNineVolt: you want python 3 anyway. does it work?
[00:44:28] <NoImNotNineVolt> this is the only platform that's both supported by 'fortify static code analyzer' and offered as an aws ec2 ami.
[00:44:45] <NoImNotNineVolt> nedbat: that did the trick, thanks!
[00:45:04] *** Quits: Haxxa (~Haxxa@122-199-44-120.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[00:46:37] <rjwiii> Ok ... I'm stumped ... trying to use email & smtplib to send an email from a server to an Exchange server I do a .set_content to some text and then do an .add_alternative to try to do some HTML ... not working. I can't post the code because of company policy ... any ideas?
[00:46:46] <raxor2k> nedbat : ok good. So what was wrong with the question?
[00:47:10] <NoImNotNineVolt> ugh. so, i may need python3.8, and on suse linux 12, that may be.. challenging...
[00:47:39] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:48] <grym> NoImNotNineVolt: what's your openssl version
[00:48:57] <NoImNotNineVolt> 1.0.2p-fips
[00:49:04] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-149.hsi5.kabel-badenwuerttemberg.de) (Quit: leaving)
[00:49:15] <grym> i thiiink that's high enough
[00:49:19] *** Joins: fivegruel (~fivegruel@hsi-kbw-095-208-248-149.hsi5.kabel-badenwuerttemberg.de)
[00:49:36] <grym> like 90% sure
[00:50:17] *** Quits: Strom (strom@fedora/strom) ()
[00:50:37] <grym> NoImNotNineVolt: https://github.com/pyenv/pyenv/wiki#suggested-build-environment  has deps
[00:51:07] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Changing host)
[00:51:08] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[00:52:04] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[00:52:05] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[00:52:22] *** Joins: Strom (strom@fedora/strom)
[00:53:27] <NoImNotNineVolt> hm.
[00:53:40] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[00:55:34] *** Joins: zebrag (~chris@user/zebrag)
[00:56:39] *** Joins: wyclif (~wyclif@user/wyclif)
[00:56:51] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[00:57:03] <NoImNotNineVolt> i have python-devel installed but i see `st27/Parser/../Include/pgenheaders.h:8:20: fatal error: Python.h: No such file or directory` on `#include "Python.h"`
[00:57:35] <NoImNotNineVolt> or do i need python3-devel...
[00:57:48] <nedbat> raxor2k: most people have another question they want to ask the people who say they use repl.it.  You are unusual that way I guess.
[00:58:10] <NoImNotNineVolt> aha, that did the trick.
[00:58:33] <nubonix> how can i schedule an async fun with apscheduler.qtscheduler? i used partial, but im not sure this will work
[00:58:41] <nubonix> async function*
[01:01:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:01:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[01:02:09] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[01:02:11] *** Joins: wyclif (~wyclif@user/wyclif)
[01:04:16] <rjwiii> Ok ... I'm stumped ... trying to use email & smtplib to send an email from a server to an Exchange server I do a .set_content to some text and then do an .add_alternative to try to do some HTML ... not working. All I'm getting is the text portion. Outlook won't let me look at the source. I can't post the code because of company policy ... any ideas? I'm using Anaconda Python 3.6.5
[01:04:24] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:04:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[01:05:28] *** Quits: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net) (Ping timeout: 245 seconds)
[01:07:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:07:40] *** Joins: wyclif (~wyclif@user/wyclif)
[01:07:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:08:27] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[01:09:36] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05) (Remote host closed the connection)
[01:09:36] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 255 seconds)
[01:10:02] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Remote host closed the connection)
[01:10:43] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05)
[01:10:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[01:12:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[01:13:20] *** Joins: wyclif (~wyclif@user/wyclif)
[01:13:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:16:19] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[01:17:59] <HurricaneHarry> raxor2k: i've started using it for a short course.
[01:20:22] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[01:21:52] <NoImNotNineVolt> ah wow pyenv is really nice.
[01:22:38] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:22:58] <rndusr> is there a way to set SO_REUSEPORT on a connection used by socketserver?
[01:23:03] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[01:23:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:23:33] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 255 seconds)
[01:24:06] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[01:24:06] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05) (Remote host closed the connection)
[01:24:13] *** Joins: wyclif (~wyclif@user/wyclif)
[01:24:28] *** Quits: raxor2k (~raxor2k@46.99.20.151) ()
[01:24:32] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[01:24:54] *** Quits: jay-m126_ (~jay-m@129.0.77.209) (Read error: Connection reset by peer)
[01:24:57] *** Quits: dustiestgolf (~anotherus@2601:601:4480:c9c0:8c68:f535:b25f:b841) (Quit: Leaving)
[01:25:04] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[01:25:19] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 244 seconds)
[01:25:21] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05)
[01:26:28] *** Joins: octav1a (~quassel@173.195.145.98)
[01:27:33] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[01:27:47] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c49d-5e9c-d3a7-cf1f.res6.spectrum.com)
[01:27:53] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:27:57] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:28:11] <SnoopJ> NoImNotNineVolt, yea, it's great
[01:28:24] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Client Quit)
[01:28:35] *** Joins: palasso (~palasso@user/palasso)
[01:28:40] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-acff-de01-3c77-7564.res6.spectrum.com) (Ping timeout: 240 seconds)
[01:28:43] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:28:50] *** Quits: sectec84 (~sectec84@24.18.109.173) (Ping timeout: 258 seconds)
[01:29:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:29:32] <SnoopJ> its package names are a little silly as I discovered today, but considering it's a pile of shell script, it's fantastic
[01:29:45] *** Joins: wyclif (~wyclif@user/wyclif)
[01:29:51] *** Quits: LiftLeft (~LiftLeft@154.21.114.43) (Ping timeout: 255 seconds)
[01:30:39] *** Quits: fivegruel (~fivegruel@hsi-kbw-095-208-248-149.hsi5.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[01:30:58] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Client Quit)
[01:31:18] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:33:39] <nedbat> SnoopJ: thanks for the bug report about 3.10.0b4
[01:34:12] <SnoopJ> nedbat, sure! glad it wasn't a bother
[01:34:34] <SnoopJ> went to update mine earlier today and had to do a double-take :)
[01:34:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[01:35:05] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Client Quit)
[01:35:15] *** Joins: wyclif (~wyclif@user/wyclif)
[01:35:25] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:35:28] *** Quits: codl (~codl@user/codl) (Ping timeout: 252 seconds)
[01:35:34] *** Parts: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) ()
[01:35:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:36:45] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Client Quit)
[01:37:05] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:37:05] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 246 seconds)
[01:38:40] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-c49d-5e9c-d3a7-cf1f.res6.spectrum.com) (Ping timeout: 255 seconds)
[01:39:54] <octav1a> Using multiprocessing shared memory. Is it legal / okay to have a large numpy array as one shared block, with multiple threads writing to different places in it (specifically indexed to they wont be writing to the same place), or is it better to have one block per thread?
[01:40:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:40:46] *** Joins: wyclif (~wyclif@user/wyclif)
[01:41:42] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 252 seconds)
[01:42:05] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[01:42:25] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:42:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:43:54] <nedbat> octav1a: it sounds to me like that would be safe
[01:43:57] <mefistofeles> octav1a: assuming all independent (embarrasinlgy parallel) operations and enough memory. Also, it's CPU. Then I'd say yes
[01:44:14] <SnoopJ> it's a pattern that shows up in the numpy docs, even: https://numpy.org/doc/stable/reference/random/multithreading.html
[01:45:41] <SnoopJ> I guess that's not using multiprocessing for very much, though
[01:45:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:46:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[01:46:06] *** Quits: ambv_ (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:46:16] *** Joins: wyclif (~wyclif@user/wyclif)
[01:46:22] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:a95f:2680:bfdb:1d22)
[01:47:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8911-e5b6-6ab4-72d3.res6.spectrum.com)
[01:47:28] *** Quits: boxelephant (~boxelepha@209.143.87.130) (Ping timeout: 265 seconds)
[01:47:57] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05) (Quit: Leaving)
[01:48:31] *** Joins: hafat (~hafat@95.70.168.45)
[01:48:32] *** Joins: Blankspace (~androirc@user/blankspace)
[01:49:03] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[01:49:22] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:50:45] *** Quits: Blankspace (~androirc@user/blankspace) (Read error: Connection reset by peer)
[01:50:55] <rjwiii> Ok ... I'm stumped ... trying to use email & smtplib to send an email from localhost on a server through an Exchange server I do a .set_content to some text and then do an .add_alternative to try to do some HTML ... not working. All I'm getting is the text portion. Outlook won't let me look at the source. I can't post the code because of company policy ... any ideas? I'm using Anaconda Python 3.6.
[01:51:12] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Client Quit)
[01:51:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:51:47] *** Joins: wyclif (~wyclif@user/wyclif)
[01:51:51] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[01:52:18] <FunkyBob> rjwiii: hm... not sure about how exchange/outloo handle it, but have made multi-part/alternative emails ... let me check
[01:52:23] <SnoopJ> octav1a, you'll probably get better performance from the chunked approach if you're going to gather the blocks back together in the end. If you make a view for each block, you won't have to do your own bounds-checking.
[01:52:58] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Ping timeout: 268 seconds)
[01:54:18] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:54:35] <FunkyBob> rjwiii: are you using MIMEMultipart ?
[01:54:54] <nubonix> looking for some help with pendulum... why does it show pendulum.now() as 2:07 pm no matter when i start it? https://bpa.st/LC4Q
[01:55:26] *** Roey is now known as ThePeenerIsKeene
[01:55:33] *** ThePeenerIsKeene is now known as Roey
[01:55:36] <SnoopJ> octav1a, here's what I mean, you could pass the view objects `a, b` around in multiprocessing instead of the original array object: https://bpa.st/K52Q
[01:55:36] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[01:56:04] <rjwiii> FunkyBob: I'm using instructions I found on docs.python.org ... examples of how to send e-mail in python .... using EmailMessage()
[01:56:38] <rjwiii> FunkyBob: Tried MIMEMultipart() with no success ...
[01:56:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[01:56:43] <octav1a> SnoopJ: it's...complicated
[01:57:00] <octav1a> But I just appreciated to know it was not undefined behavior or anything.
[01:57:20] *** Joins: wyclif (~wyclif@user/wyclif)
[01:57:44] *** Quits: ntdll (~ntdll@user/ntdll) (Quit: WeeChat 3.2)
[01:57:57] <winterflaw> I may be wrong, but (at least in C - I don't know if Python will be doing extra magic to stop this problem) those threads must never read or write memory being read/written by other threads
[01:58:50] <FunkyBob> winterflaw: that seems a bit of an oversimplification
[01:58:52] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 268 seconds)
[01:58:53] <SnoopJ> winterflaw, Python doesn't have much in the way of guardrails here
[01:59:04] <FunkyBob> winterflaw: certainly, if they only read from shared memory there's no problem
[01:59:19] <winterflaw> and once you've done all the work, and you come to look at the results, if there are multiple cores, something will need to be done so that the thread doing the final work will be seeing the work done by the other threads up to that point
[01:59:35] <SnoopJ> FunkyBob, it's a problem if someone else is writing and you read before you're 'supposed' to, but that's what synchronization is for :)
[01:59:47] <winterflaw> Funky -> in what way?  I may well be wrong, but I thought that was pretty much accurate
[01:59:55] <FunkyBob> SnoopJ: right... it's once multiple writers are involved things get hairy
[02:00:16] *** Joins: jay-m126_ (~jay-m@129.0.204.222)
[02:00:23] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[02:00:28] <winterflaw> no, even reading is dodge, I think - if you have a thread reading from share memory, there's no guarantee it will see writes made by other threads
[02:00:31] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Ping timeout: 265 seconds)
[02:00:43] <winterflaw> or the order in which writes made by other thread become visible
[02:00:44] <FunkyBob> winterflaw: as I said... if threads are only reading,
[02:00:50] <winterflaw> threads
[02:00:59] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[02:01:02] <FunkyBob> when writing is involved, yes, you need to be careful of race conditions, sequencing, overwrites, etc
[02:01:35] <winterflaw> but some thread will have to written to the shared memory in the first place
[02:01:52] <winterflaw> the later readers are not guaranteed in any way, unless special magic is performed, to see those writes *at all*
[02:02:14] <winterflaw> Snoop -> okay
[02:02:24] <FunkyBob> they'll see the writes... if they read after the write happens
[02:02:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:02:38] <winterflaw> I may be wrong, but no - absolutely not
[02:02:41] <winterflaw> that is *not* correct
[02:02:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:03:18] <winterflaw> without special magic, a write made by a core may in fact never be seen by any other core, *ever*
[02:03:33] <winterflaw> in practise this is unlikely - but in theory, it is allowed
[02:03:35] <SnoopJ> the nice thing about using a view per thread (or worker) here is that it's not even possible to do an OOB write with the object
[02:03:36] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:03:50] <SnoopJ> but "it's complicated" suggests that maybe the task doesn't actually divide up this way :(
[02:03:57] <FunkyBob> winterflaw: not sure what platforms you're working on...
[02:04:04] *** Quits: gmcastil (~gmcastil@50-206-38-118-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[02:04:29] <FunkyBob> there's a lot of hardware in modern CPUs , etc, to ensure cache coherence, etc...
[02:04:33] <winterflaw> pretty much all of them which offer lock-free semantics
[02:04:56] <winterflaw> I have a bunch of devs boards of my own and the GCC compile farm offer a bunch of platforms I can't get
[02:05:21] <winterflaw> I may be wrong, but I think there's stuff going on in the processors which you may not yet know about
[02:05:32] <FunkyBob> so by special magics you're thinking memory barriers, and the like?
[02:05:39] <winterflaw> the main culprit, as far as I understand it, are store buffers and cache invalidation requests
[02:06:13] <winterflaw> yes - also atomic operations, since they force a write to memory, which then forces the processor to honour previously issued barriers
[02:06:15] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:06:16] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[02:06:42] <nubonix> hi there, so im trying to schedule coroutines with apscheduler.qtscheduler, but im having some difficulties, as it does not await the coro. heres the simplest code i can provide to show what im trying to do: code + traceback @ https://bpa.st/PNFA
[02:06:55] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[02:07:28] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 255 seconds)
[02:07:50] <winterflaw> in short, cache coherency isn't as coherent as is possible - there are windows where a core knows it has written something, and will use that written value, but other cores do not yet know; the write hasn't yet managed to reach the cache coherency protocol domain
[02:07:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[02:08:03] <winterflaw> there's a similar problem on the other end, when performing reads
[02:08:09] *** Quits: Barones (~Barones@2804:48dc:8500:0:e81d:c8d1:6a1e:4da2) (Quit: Leaving)
[02:08:14] *** Quits: junktext (~junktext@77.247.181.217) (Ping timeout: 246 seconds)
[02:08:17] <bjs> winterflaw: in Python there is the GIL and you're protected by this stuff
[02:08:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:08:28] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:08:32] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[02:08:37] <FunkyBob> bjs: oooh, boy...
[02:08:38] <bjs> infact big operations like whole operations on data structures are safe to do concurrently
[02:08:44] <bjs> FunkyBob: what?
[02:08:51] <SnoopJ> bjs, when the GIL applies, anyway
[02:09:03] <winterflaw> bjs -> yes, I wondered about spcial stuff Python does, but the original question was as I undestood it talking about multiple threads reading/writing to a block of shared memory
[02:09:13] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 265 seconds)
[02:09:16] <winterflaw> and I thought maybe that would be outside of the GIL?  but I don't know Python internals
[02:09:19] <bjs> SnoopJ: well GIL or no GIL, it's supposed to be a protected operation
[02:09:28] <bjs> that's why Python doesn't even expose atomics
[02:09:31] <SnoopJ> winterflaw, numpy's internals release the GIL when they can
[02:09:44] <bjs> winterflaw: what kind of write/read and what kind of shared memory?
[02:09:47] <winterflaw> understandable, but potentially hazardous
[02:09:54] *** Joins: cuz (~user@38.140.58.234)
[02:09:55] <SnoopJ> not in typical usage, but in this usage? yes
[02:10:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:10:39] <winterflaw> oh FFS
[02:10:44] <bjs> winterflaw: what?
[02:10:44] <winterflaw> bloody hexchat
[02:10:57] <winterflaw> well I tried to copy the name of the person who asked the original question
[02:11:01] <winterflaw> instead, HC wiped the channel history
[02:11:03] <winterflaw> not useful
[02:11:27] <winterflaw> someone asked what kind of read/write -> I was trying to direct them to the person who asked the question
[02:11:30] <FunkyBob> kids these days and their new fangled IRC clients :P
[02:11:34] <winterflaw> octav1a or something like that
[02:11:47] <winterflaw> I'm not entirely a fan of hexchat
[02:11:49] <bjs> winterflaw: do you mean octav1a's question about numpy?  You do have to be careful with numpy
[02:11:54] <bjs> because libraries obviously do their own stuff
[02:12:01] <winterflaw> any client which moves copy to a menu option only seems a bit nuts to me
[02:12:10] <SnoopJ> yea, and ndarray is basically a struct holding strides and a pointer
[02:12:11] <bjs> numpy is mostly "not Python" code
[02:12:13] <winterflaw> yes, that was the original question
[02:12:34] <bjs> but writing to different locations in the numpy array is probably fine.
[02:13:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:13:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:13:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:14:27] <winterflaw> if the shared memory is initialized, written to, the later threads will need magic to ensure they see what was written
[02:14:52] <bjs> returning to Python will do that magic
[02:15:06] <bjs> because it'll take the GIL :)
[02:15:17] <SnoopJ> bjs, I think in this case we want to think of "later threads" as one of the subprocesses multiprocessing will create
[02:15:30] *** Quits: cuz (~user@38.140.58.234) (Ping timeout: 265 seconds)
[02:15:31] <bjs> processes? I thought we talked about threads here
[02:15:48] <SnoopJ> we did but the original question was in the context of multiprocessing
[02:15:50] <bjs> The case I understand is "call some numpy functions in threads to fill in an array; then join threads; then use array"
[02:15:56] <bjs> Ah
[02:16:06] *** Joins: somlis (~somlis@user/somlis)
[02:16:16] <SnoopJ> if it's threads in one process I think what you said has your back
[02:16:30] *** Joins: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net)
[02:16:35] <bjs> Can you even put a numpy array in a shared block with multiprocessing?
[02:16:41] <bjs> It just gives you an mmap.mmap
[02:16:47] <bjs> which is a bytearray()-like thing
[02:16:54] <winterflaw> mmm, I may be wrong, but if those threads spread out over multiple cores, then being in a single process doesn't give protection
[02:17:06] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 255 seconds)
[02:17:08] <bjs> winterflaw: that's the point of the GIL, to give you protection
[02:17:16] <winterflaw> but I have no idea what Python will be doing to help with the situation
[02:17:20] <winterflaw> right
[02:17:21] <bjs> Taking the lock :)
[02:17:51] <SnoopJ> bjs, I'm not sure! In the worst case I think you could stuff the data there and make your own ndarray objects acting as views into it, though?
[02:17:57] *** Joins: ntdll (ntdll@user/ntdll)
[02:18:21] <bjs> SnoopJ: possibly I'm not sure how you do that though
[02:18:33] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[02:18:36] <mike18> hi
[02:18:38] <SnoopJ> ahh, and this is precisely what the multiprocessing docs show
[02:18:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:18:55] <winterflaw> lo
[02:18:57] <mike18> how to have a aws s3 integration between python and golang? is there a aws s3 mock lib i can use?
[02:18:58] *** Joins: LiftLeft (~LiftLeft@172.98.80.138)
[02:19:20] *** Joins: wyclif (~wyclif@user/wyclif)
[02:19:27] <SnoopJ> bjs, you can pass `buffer` to the ndarray constructor, but even touching that you're pretty deep into power-user territory heh.
[02:19:36] <bjs> SnoopJ: neat
[02:19:45] <SnoopJ> neat indeed :)
[02:19:47] <bjs> but yeah to answer octav1a's question, yes it should be fine
[02:19:59] <bjs> so long as you're touching different parts of the array
[02:20:02] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:4ec5:6765:26be:8e46)
[02:20:42] <SnoopJ> and if you're dancing over the same parts, you probably want your own synchronization machinery
[02:20:55] <bjs> well you probably _need_
[02:21:06] <SnoopJ> only if you want correct output ;P
[02:21:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:21:27] *** Joins: darksun (~darksun@user/darksun)
[02:22:10] <winterflaw> correct output is for wimps :-)
[02:22:58] <SnoopJ> oO(weakly interacting massive particles)
[02:23:06] <winterflaw> well done that man :-)
[02:24:00] <winterflaw> they do kinda exist already of course, the weak force bosons
[02:24:38] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[02:24:56] <SnoopJ> definitely #python-offtopic territory :)
[02:25:06] <winterflaw> touche :-)
[02:25:29] <winterflaw> so the GIL is still around then
[02:25:39] <SnoopJ> yup
[02:25:55] <winterflaw> I had a vague impression there was a sort of ongoing move to replace it or at least "do something"?
[02:26:04] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[02:26:10] <winterflaw> no conensus reached yet?
[02:26:12] <bjs> winterflaw: soon we'll have fusion power too
[02:26:23] <winterflaw> ah
[02:26:24] <winterflaw> I see
[02:26:30] <SnoopJ> I would say the consensus that's been reached is "dang, it's hard to get rid of that"
[02:26:40] <bjs> The GIL does a lot of work that's hard to replicate in other ways
[02:26:50] <winterflaw> interesting
[02:26:53] <winterflaw> what sort of work?
[02:27:06] <SnoopJ> probably the kinda-atomicity mentioned earlier counts :)
[02:27:08] <bjs> e.g. all the code that uses threads and just read/write variables and use shared data structures without care :)
[02:27:10] <zware> It's easy to get rid of the GIL, it's hard to make things run fast and not blow up when you do so :)
[02:27:13] <winterflaw> although I understand that may well be an extraordinarily broad question :-)
[02:27:31] <bjs> winterflaw: well it does 1 thing, it protects all accesses to any Python data structure
[02:27:38] *** Joins: p-i-_ (~Ohmu@node-126c.pool-118-173.dynamic.totinternet.net)
[02:27:50] <winterflaw> Python is written in C, right?
[02:27:53] <SnoopJ> CPython is
[02:27:53] <bjs> winterflaw: yes.
[02:28:06] <winterflaw> why not make the data structures lock-free?
[02:28:13] <winterflaw> then you can just go for it
[02:28:15] <bjs> winterflaw: haha
[02:28:17] <Yhg1s> winterflaw: how do you make reference counts lock-free?
[02:28:31] <Yhg1s> (all the other stuff still matters, but pales in comparison with the refcount problem.)
[02:28:33] <SnoopJ> winterflaw, if $THIS thread decrefs an object before $THAT thread acquires a reference, oops, the GC is hungry!
[02:29:03] <winterflaw> well lock-free garbage collection exists
[02:29:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:29:05] <SnoopJ> or do I have that backwards; anyway, yea, reference counts matter
[02:29:11] <winterflaw> the ref-counting - is this for garbage collection?
[02:29:12] <bjs> not to mention that lock-free data structures are incredibly complicated and you can't just generalise an existing one to be lock-free and still work concurrently.
[02:29:17] <Yhg1s> winterflaw: yes.
[02:29:26] <zware> winterflaw: We would also like to not break the world with a 2-to-3-like transition again :)
[02:29:38] <winterflaw> heh
[02:29:39] <winterflaw> amen
[02:29:39] <Yhg1s> (and moving away from refcounting will break all extension modules, especially numpy :P)
[02:29:42] *** Quits: p-i- (~Ohmu@node-12lw.pool-118-173.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[02:29:43] <SnoopJ> sure, nobody's saying it *can't* be done, but CPython isn't in a vacuum, and upending the GC is not small
[02:29:50] <winterflaw> but such a change would be invisible to the user, right?
[02:30:01] <winterflaw> just the GIL wouldn't bother locking accesses to data structures
[02:30:05] <winterflaw> no one notices, things go faster
[02:30:20] *** Joins: wyclif (~wyclif@user/wyclif)
[02:30:22] <bjs> winterflaw: well the problem is that all attempts to remove the GIL have done exactly that
[02:30:24] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[02:30:24] <bjs> except it went slower :)
[02:30:25] <SnoopJ> see the earlier remark about being fast/correct
[02:30:36] <Yhg1s> winterflaw: what change would be invisible to the user?
[02:30:46] <winterflaw> well GC is different to data structures, right?  you can make the data structures lock-free independently of whatever you do or don't do with GC
[02:31:03] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:31:04] <Yhg1s> winterflaw: the data structures *are* free of locks :)
[02:31:12] <Yhg1s> (because the caller needs to hold the GIL anyway)
[02:31:23] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[02:31:27] <bjs> there's just one tiny lock called the GIL, it's really fast to take and release :)
[02:31:30] <winterflaw> yhg -> changing data structure intenral implementations to be lock-free
[02:31:41] *** Joins: brizz (~brizz@74.208.85.67)
[02:31:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 255 seconds)
[02:31:52] <winterflaw> locks don't scale :-)  as you well know! :-)
[02:31:55] <Yhg1s> winterflaw: to what end? how would it help? what would it fix?
[02:32:01] <bjs> and how would you do it?
[02:32:05] *** Joins: pnoud (~pnoud@user/pnoud)
[02:32:24] <Yhg1s> winterflaw: keep in mind that even if the data structures are lock-free, they're still Python objects, so you still need to hold the GIL in order to touch them.
[02:32:40] <brizz> I'm getting the error: OSError: [Errno 28] No space left on device: '/var/opt/pickup/new/a968066b-d19b-403c-b409-ba0f804a43bd', when there is space left (it is at 95% or so)...there are inodes available (not sure if im wording that right)--any ideas?
[02:32:56] <winterflaw> well, I know very little about Python, so I was speculating, right?  this is not a well-informed, carefully thought out proposal
[02:32:56] <winterflaw> the end would be performance
[02:32:56] <winterflaw> no need to use the GIL to control access to the data structures any more
[02:33:08] <bjs> Yhg1s: I think winterflaw is suggesting removing the GIL and using lock-free data structures instead, so you can access them concurrently safely
[02:33:17] *** Quits: Akuli (~Akuli@82-203-167-165.bb.dnainternet.fi) (Quit: Leaving)
[02:33:33] <winterflaw> I wouldn't go so far as say I was saying that, because it would imply I understood that and how Python works internally, which I do not :-)
[02:33:34] <randall> brizz: 5% are reserved for root, so for all aspects, that disk is full.
[02:33:39] <winterflaw> but we were talking about the GIL
[02:33:41] <winterflaw> and someone said
[02:33:43] <Yhg1s> winterflaw: okay, then no, that won't work: you still need to hold the GIL to touch Python objects, even if they don't have their own locks. (They don't have their own locks now.)
[02:33:50] <winterflaw> it controls accesses to all data structures
[02:33:54] <brizz> ive seen df get up to 100% though...
[02:33:56] <Yhg1s> winterflaw: it does, yes.
[02:34:17] <randall> brizz: Yes, when root writes on the remaining 5% ...
[02:34:17] <brizz> and it was at 99% before I started deleting spool items
[02:34:22] <Yhg1s> winterflaw: because it's easy and fast that way. You need to hold the lock for any kind of interaction with Python objects, so it protects everything about all of those interactions.
[02:34:35] *** Quits: oprypin (~irc@pryp.in) (Read error: Connection reset by peer)
[02:34:39] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:34:42] <randall> brizz: Sounds like you're seeing exactly what I've described.
[02:34:43] *** Joins: oprypin_ (~irc@pryp.in)
[02:35:01] <Yhg1s> winterflaw: that's why I said the data structures are already free of locks (of their own)
[02:35:04] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Read error: Connection reset by peer)
[02:35:08] <winterflaw> so you need to hold the GIL to touch any Python object - why is this?  what's being done?
[02:35:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[02:35:09] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[02:35:20] <bjs> winterflaw: because two threads could try and touch the same Python object at the same time
[02:35:21] <Yhg1s> winterflaw: primarily, reference counting.
[02:35:22] <SnoopJ> winterflaw, keeping the refcounts safe is a big one
[02:35:36] <disi> i have some scripts that depend on pkgX... if i just want to drop them into pkgX with 0 modification, is setuptools "scripts" opt good for that? (i ack that entry_points are preferred, just want to know if there's anything deprecated/problematic about "scripts")
[02:35:44] <winterflaw> well, I may be wrong, but as I see it from what's been said the data structure have no locks because they're only ever being accessed by a single thread at a time, right?
[02:35:46] <brizz> ok,thankyou
[02:35:52] *** Joins: wyclif (~wyclif@user/wyclif)
[02:35:55] <bjs> winterflaw: no, there is *a* lock
[02:36:03] <Yhg1s> winterflaw: no, because their access is already protected by a lock.
[02:36:07] <zware> winterflaw: FTR, we're all kind of hoping you do have some previously-unseen insight into how to get rid of the GIL cleanly, but jaded enough to not expect it :)
[02:36:20] <winterflaw> yes - I mean that - in the sense that the GIL is mediating access
[02:36:26] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[02:36:27] <winterflaw> so only one thread ever uses a data structure at a time
[02:36:40] <bjs> winterflaw: oh in that sense, yes.
[02:36:45] <winterflaw> okay
[02:36:50] <Yhg1s> winterflaw: no, the GIL is frequently (potentially) released *during* access.
[02:37:01] <winterflaw> oh?
[02:37:04] <winterflaw> how does that not fall over?
[02:37:06] <bjs> when it's safe to do so :)
[02:37:10] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[02:37:11] <Yhg1s> winterflaw: because it's written to be safe.
[02:37:12] <bjs> The critical parts are always protected
[02:37:22] <winterflaw> okay
[02:37:38] <winterflaw> so the next iceberg in the fog seems to be the question of ref counting for GC
[02:37:39] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:37:45] <Yhg1s> winterflaw: for instance, dict key lookup requires calling __hash__ and/or __eq__ on keys, possibly multiple keys, possibly all of them, which can all execute arbitrary Python code, which can release the GIL.
[02:38:22] <bjs> Yhg1s: don't some builtin operations release the GIL like some string operations?
[02:38:34] <Yhg1s> bjs: sure, when it's safe to do so.
[02:38:53] <winterflaw> so the GC, is it a simple mechanism?  single master lock (GIL) and a counter on each object, and when we're at zero, we know it's ditchable?
[02:38:57] *** Joins: darksun (~darksun@user/darksun)
[02:39:02] <nubonix> hi there, so im trying to schedule coroutines with apscheduler.qtscheduler, but im having some difficulties, as it does not await the coro. heres the simplest code i can provide to show what im trying to do: code + traceback @ https://bpa.st/PNFA
[02:39:06] <Yhg1s> winterflaw: that's how refcounting works, yes.
[02:39:20] <bjs> buhman: are you sure QtScheduler is async?
[02:39:21] <bjs> oops
[02:39:27] <bjs> nubonix: are you sure QtScheduler is async?
[02:39:47] *** Joins: cheater (~Username@user/cheater)
[02:39:56] <nubonix> bjs how else could qtscheduler work
[02:40:09] <nubonix> guis have to be async b/c of the event loop
[02:40:10] <winterflaw> the basic problem with ref-counting GC, if you want to be fully parallel, is that you may just be able to ref an object when someone else deallocates it already
[02:40:18] <raek> winterflaw: there is a reference couting mechanism + a garbage collector that deals with cycles
[02:40:18] <winterflaw> there are a number of methods to circumvent this problem
[02:40:19] <SnoopJ> winterflaw, it's refcounting + mark/sweep for cycles: https://devguide.python.org/garbage_collector/
[02:40:31] <bjs> nubonix: I mean it could just be callback based with a thread that hooks into qt's own event loop. I don't know, what are the docs for that thing?
[02:40:42] <Yhg1s> winterflaw: no, the basic problem with refcounting is that you can't do it without a lock, efficiently :)
[02:40:43] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[02:40:46] <winterflaw> the ones I know about are generation-based, but I've not looked at lock-free GC for two or so years now
[02:40:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[02:41:03] <Yhg1s> winterflaw: you may want to watch one of Larry Hastings' talks on the Gilectomy.
[02:41:07] <nubonix> bjs https://apscheduler.readthedocs.io/en/stable/userguide.html looking more specifically into qtscheduler atm tho
[02:41:13] <winterflaw> you don't need refcounting - there are other ways to approach GC
[02:41:22] <SnoopJ> +1, he's got a lot to say about it :)
[02:41:25] *** Joins: wyclif (~wyclif@user/wyclif)
[02:41:29] <SnoopJ> winterflaw, yes, of course
[02:41:37] <winterflaw> you can't use refcounting as an approach with lock-free, so other ways had to be used
[02:41:37] <Yhg1s> winterflaw: sure. Other python implementations use different GC approaches.
[02:41:40] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[02:41:46] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[02:41:49] <nubonix> bjs this is closer https://apscheduler.readthedocs.io/en/stable/userguide.html?highlight=qtscheduler#choosing-the-right-scheduler-job-store-s-executor-s-and-trigger-s
[02:41:50] <Yhg1s> winterflaw: however, the C API makes it very difficult to just swap.
[02:41:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:42:15] <bjs> winterflaw: you still seem to think that you can just take all the Python data structures and make them lock-free concurrent data structures
[02:42:21] <bjs> that's just not a thing we know how to do :)
[02:42:33] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:42:39] <bjs> You can't just sprinkle CAS and hope
[02:42:45] <bjs> (sadly)
[02:42:45] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:42:56] <winterflaw> bjs - no, not at all : this is a general discussion, and it's moved on to GC
[02:43:04] <winterflaw> we're not even talknig about data structures now
[02:43:15] <bjs> Well you sort of are, a Python object is one kind of data structure
[02:43:42] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 250 seconds)
[02:44:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[02:44:31] <winterflaw> ah, not that I knew :-)  for me data structures are hashes and lists and so on
[02:44:33] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[02:45:08] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[02:45:52] <bjs> winterflaw: well think that Python dict has both senses. There's a hashmap underneath of course, but there's also the Python object structure with a refcount.
[02:45:53] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 258 seconds)
[02:46:12] <winterflaw> right
[02:46:16] <bjs> The GIL protects both things, the updates to the refcount and any operations over the dict that'd otherwise be unsafe
[02:46:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[02:46:45] <nubonix> bjs erm cant even find qtscheduler... wdh.... https://github.com/agronholm/apscheduler/tree/master/apscheduler/schedulers
[02:46:54] *** Joins: wyclif (~wyclif@user/wyclif)
[02:46:58] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:47:04] <bjs> that is,  protecting the actual hashmap itself,  the whole operation can appear non-atomic because it has to hash things and take equality and those can do complicated things
[02:47:36] <bjs> so the GIL is taken and released constantly, but the actual changes to the underlying hashtable is protected by the GIL so you can't have two accesses overwrite each other or something
[02:47:58] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[02:48:19] *** Joins: Elon_Satoshi (~elonsatos@46.102.153.243)
[02:48:33] <bjs> winterflaw: so if you want to remove the GIL you need to do both of those things, protect the refcounts (since they're really part of the API of Python at this point) but also protect the underlying structures when necessary
[02:49:20] <bjs> individual locks for the former makes too much existing code slower (because e.g. for not very concurrent programs you spend a lot of time just taking and releasing locks for no reason) and the latter is just a hard problem in general to do without locks
[02:49:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:49:41] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[02:50:02] <Elon_Satoshi> In an interactive python shell, why does range(4) evaluate to "range(0, 4)" and not something like 0\n1\n2\n3 or [0, 1, 2, 3]?
[02:50:15] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[02:50:16] <SnoopJ> Elon_Satoshi, because it creates an object that represents the range
[02:50:24] <Elon_Satoshi> Oh.
[02:50:25] <Yhg1s> Elon_Satoshi: perhaps you want list(range(4))
[02:50:31] <SnoopJ> If you want a list, you can do li--that ^
[02:50:38] <bjs> Elon_Satoshi: because range is a class, and range(4) is an instance of that class. And when you print that object it prints as range(4).  You can turn it into a list with list(range(4)) or you can just use it like you would a list: print(range(4)[2])
[02:50:40] <nedbat> Elon_Satoshi: in python 2, it produced the list, but in python 3, it makes an iterable object
[02:51:05] <nedbat> winterflaw: do you understand the role of the C API in these considerations?
[02:51:18] *** Quits: cedric (~cedric@2a01:cb11:867:c200:7b58:2860:3969:3b55) (Quit: Konversation terminated!)
[02:51:32] <winterflaw> you can only have lock-free refcounts if you have lock-free garbage collcetion, because without it the thing you're about to ref could disappear just as you're about to touch it : if you do have lock-free GC, I would suspect it provides the functionality that's needed, but in a shape which doesn't fit with the C API - I suspect (very speculatively) you would end up with C API continuing as normal, but without the GIL, just using an
[02:51:32] <winterflaw> atomic op to inc/dec, and then that count hits zero, the ref-count codes submits the allocation to the lock-free GC for actual deallocation
[02:51:36] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[02:51:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:51:53] <bjs> winterflaw: lock-free things are *really complicated* and we really do not know how to build lock-free things in general
[02:51:59] <bjs> locks are simple and fast and efficient :)
[02:52:09] <winterflaw> ned -> I don't think so : what I think of it right now is that it's the API being used for ref-counting?
[02:52:12] *** Joins: CombatVet (~c4@user/combatvet)
[02:52:17] <winterflaw> which may well be completely wrong...
[02:52:24] *** Joins: wyclif (~wyclif@user/wyclif)
[02:52:36] *** Quits: hafat (~hafat@95.70.168.45) (Remote host closed the connection)
[02:53:18] <SnoopJ> it's the API you use to talk to CPython in general
[02:53:19] *** Joins: dre (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49)
[02:53:23] <winterflaw> bj -> I think I could say the same about any complex code, including Python - but people with training and experience get better and better at what they do
[02:53:25] <nedbat> winterflaw: the "C API" is the set of C functions that can be used to interact with Python and Python objects. It's hundreds of functions, and also macros
[02:53:34] <winterflaw> okay
[02:53:35] <SnoopJ> big changes to that API disrupt any projects that depend on it, and that's a *lot* of projects
[02:53:39] <Yhg1s> and it's used by a large portion of the third-party packages.
[02:53:50] <winterflaw> yes
[02:54:03] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[02:54:06] <winterflaw> my view at the moment, which isn't worth a dime :-), is that it wouldn't change
[02:54:11] <winterflaw> not externally
[02:54:15] <nedbat> winterflaw: when I write C code using the C API, the structure of Python reference counting is compiled into my code. Changing it means invalidating all those third-party packages.
[02:54:16] <winterflaw> and not much internally either
[02:54:28] <bjs> winterflaw: I can't imagine a whole lock-free programming language, maybe one or two lock-free data structures in key places but the whole thing seems implausible
[02:54:31] <Yhg1s> winterflaw: you can't make the changes you suggested without very big changes to the C API.
[02:54:34] <winterflaw> I don't think it would change, though, right?
[02:54:43] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[02:54:43] <Yhg1s> if you didn't change anything, sure, it wouldnt' change.
[02:54:46] <winterflaw> only what the ref-counting functions do internally would change
[02:54:58] <SnoopJ> winterflaw, other people need to use those functions
[02:54:58] <winterflaw> their external behaviour is unchanged
[02:55:21] <bjs> winterflaw: except the thing you implement inside those refcount functions have to behave exactly like refcounting ;)
[02:55:30] <SnoopJ> When I write bindings to $employer's C++ product, I have to juggle references sometimes in the associated typemaps.
[02:55:33] *** Joins: rio (~rio@2601:345:4203:41c0:1b83:5855:3366:1bff)
[02:55:50] <Yhg1s> winterflaw: refcounting is *very* much part of the C API. So is the struct layout of Python objects.
[02:55:54] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[02:55:55] <nedbat> winterflaw: you assume they are functions. They are macros:  https://github.com/python/cpython/blob/main/Include/object.h#L463-L477
[02:55:56] <winterflaw> Yh - as I understand it so far, which is highly tentative to say the *least* :-), the central issue being discussed is the work done by the C API when it comes to ref-counting
[02:56:00] <Elon_Satoshi> So... Today I briefly tricked myself into thinking I solved the collatz conjecture
[02:56:05] <nedbat> (well, inlined functions)
[02:56:07] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[02:56:15] <SnoopJ> I think this is the most recent GILectomy talk that Larry has given: https://www.youtube.com/watch?v=pLqv11ScGsQ
[02:56:18] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:a95f:2680:bfdb:1d22) (Quit: Leaving)
[02:56:34] <Yhg1s> winterflaw: I'm not sure what you're suggesting, sorry.
[02:56:38] <Elon_Satoshi> I ran my collatz program that I wrote in Mu's REPL, and I entered a really big number and hit enter... and it kept going, and kept going, and kept going
[02:56:44] <winterflaw> good, macros not used enough in C, in my experience
[02:57:10] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:57:12] <Elon_Satoshi> I actually thought I might have solved the collatz conjecture accidentally, so in a thrill I copied this number that I made by jamming my fingers on the top number row of the keyboard
[02:57:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[02:57:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[02:57:35] <Elon_Satoshi> And then watched as the numbers shrank in the REPL and finally the sequence ended at 1 like it always does
[02:57:35] *** Joins: darksun (~darksun@user/darksun)
[02:57:42] <winterflaw> Yh -> you keep refcounting as it is (except it no longer uses GIL, but just an atomic inc/dec), but when the refcount hits zero, you submit the object to a lock-free GC, and that handles actual dealloc
[02:57:54] *** Joins: wyclif (~wyclif@user/wyclif)
[02:58:05] <bjs> winterflaw: you can usually hit the tab key to complete peoples nicknames in irc, by the way :)
[02:58:07] <rio> What's the collatz conjecture?
[02:58:25] <bjs> rio: hard problem in mathematics, often called the 3n+1 problem
[02:58:27] <winterflaw> ah yes
[02:58:30] <winterflaw> thankyou
[02:58:37] <Elon_Satoshi> rio: https://en.wikipedia.org/wiki/Collatz_conjecture
[02:58:45] <nubonix> bjs yeah, your right, QtScheduler is not async
[02:58:53] <rio> Thank you Elon_Satoshi and bjs
[02:58:54] <Yhg1s> winterflaw: no, really, you should wtach some of Larry's Gilectomy talks. atomic incr/decr won't cut it.
[02:58:54] <Elon_Satoshi> if it's even, divide by 2, if it's odd, multiply by 3 and add 1
[02:59:00] <winterflaw> my teeth not going to brush themselves BTW, excuse me for a bit :-)
[02:59:35] <Elon_Satoshi> the sequence ends in 1 no matter what n (a positive integer) is
[02:59:38] <winterflaw> Yhg1s, not by themselves no, but if there's lock-free GC underneath, then yes - unless there are issues I have no clue about, which there are tons :-)
[03:00:02] <Yhg1s> winterflaw: let's say yes, then, there are many more issues.
[03:00:09] <Elon_Satoshi> but nobody has rigorously proved that it always ends in 1
[03:00:12] <Elon_Satoshi> that's the problem
[03:00:20] *** Joins: tannerstirrat (~tannersti@c-76-25-57-28.hsd1.co.comcast.net)
[03:00:31] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[03:00:49] <Elon_Satoshi> there's even a BOINC pool for checking collatz sequences
[03:00:52] *** Quits: stevieh (~skrodzki@p2e584df2.dip0.t-ipconnect.de) (Quit: Leaving.)
[03:01:19] <tannerstirrat> i'm getting an error from mypy that goes "argument to <function> has incompatible type <subclass>; expected <classABC>"
[03:01:28] <bjs> tannerstirrat: ok
[03:01:37] <tannerstirrat> is this an example of Liskov's principle?
[03:01:53] <tannerstirrat> if so, how would one work around it?
[03:02:13] <bjs> tannerstirrat: well, what exactly happened is hard to tell without the actual error and code.
[03:02:22] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:02:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:03:03] <tannerstirrat> Argument 1 to "_validate_pe_event_changes" of "FsbPolicyEvaluationTestBase" has incompatible type "O365DamPolicyEvaluator"; expected "FsbPolicyEvaluatorABC"
[03:03:25] *** Joins: wyclif (~wyclif@user/wyclif)
[03:03:43] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[03:03:49] <tannerstirrat> where the former type is a subclass of the latter
[03:04:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:05:12] <Yhg1s> tannerstirrat: the error means they aren't. Are you sure you're looking at the right types? Are you sure you aren't, for example, reloading the module containing the FsbPolicyEvaluatorABC?
[03:05:52] <tannerstirrat> i hadn't considered that, but that would square. bleh. lemme go look at the relevant code.
[03:05:54] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Quit: leaving)
[03:06:55] <tannerstirrat> Yhg1s: thank you, that is indeed the problem. hooray for complicated codebases.
[03:07:18] * SnoopJ resets Â«Days since "Most bugs are a result of the execution state not being exactly what you think it is."Â» sign to 0
[03:07:33] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:07:38] <rio> Sorry to interject, what is a good python cryptography library to use? So far I have just stuck with PyNaCl. Are there any others I am missing? I am interested in trying some new ones out.
[03:08:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[03:08:56] *** Joins: wyclif (~wyclif@user/wyclif)
[03:09:08] *** Quits: tannerstirrat (~tannersti@c-76-25-57-28.hsd1.co.comcast.net) (Quit: WeeChat 3.2)
[03:10:33] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:10:50] <Yhg1s> rio: it depends on what you need it to do, but 'cryptography' is the obvious choice for some things.
[03:12:57] <squirrel> why is this statement necessary? https://github.com/python-trio/trio/blob/3f4e1a23e567825926b225f87c64db56d95f96fb/trio/_core/_multierror.py#L158 it's deleting local variables but it's the last statement in a method
[03:13:17] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:14:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:14:15] <graingert> squirrel: filtered_exc.__traceback__ gets those locals
[03:14:26] *** Joins: wyclif (~wyclif@user/wyclif)
[03:14:35] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:14:41] <rio> Yhg1s, you're right. I should have been more clear. I looked at 'cryptography' but unfortunately it doesn't look like it has any public key crypto for key exchanges. I guess you could say I am looking for crypto libs like PyNaCl.
[03:14:41] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:15:13] *** Joins: pnoud (~pnoud@user/pnoud)
[03:15:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[03:16:17] <graingert> rio: which key exchanges are missing?
[03:16:17] *** Gustavo6046_ is now known as Gustavo6046
[03:16:19] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 255 seconds)
[03:16:25] <squirrel> graingert: not sure i follow
[03:16:27] <rio> I should also clarify my use case. I am playing around with these crypto libs to get a feel for them and python as a language. Crypto is just something I am interested in.
[03:16:30] <graingert> squirrel: you should ask on the trio gitter
[03:16:42] <squirrel> good idea
[03:17:04] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 250 seconds)
[03:17:06] *** Joins: zebrag (~chris@user/zebrag)
[03:18:24] <rio> graingert: Nevermind, I skimmed over the docs and missed it. Public key cryptography is included in the 'cryptography' lib.
[03:18:33] *** Joins: darksun (~darksun@user/darksun)
[03:19:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[03:19:30] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:19:46] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[03:23:38] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[03:24:52] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 256 seconds)
[03:25:26] *** Joins: wyclif (~wyclif@user/wyclif)
[03:26:21] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[03:26:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[03:27:04] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[03:28:01] *** Quits: jay-m126_ (~jay-m@129.0.204.222) (Ping timeout: 255 seconds)
[03:28:08] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:4ec5:6765:26be:8e46) (Ping timeout: 240 seconds)
[03:30:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[03:30:59] *** Joins: wyclif (~wyclif@user/wyclif)
[03:31:23] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Quit: WeeChat 3.2-rc1)
[03:31:41] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[03:32:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:32:47] *** Quits: tspng (~tspng@2a02:168:a1a1:1:1011:12f2:8684:6e13) (Quit: Leaving, bye!)
[03:34:00] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Client Quit)
[03:34:17] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[03:36:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[03:36:30] *** Joins: wyclif (~wyclif@user/wyclif)
[03:37:04] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:37:28] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 255 seconds)
[03:37:35] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:37:45] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[03:39:50] *** Joins: CombatVet (~c4@user/combatvet)
[03:40:27] *** Joins: dcaro (~dcaro@user/dcaro)
[03:41:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:41:36] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Read error: Connection reset by peer)
[03:41:49] *** Joins: cjb (~cjb@user/cjb)
[03:41:55] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[03:43:45] *** Quits: spaceone (~spaceone@wc1.wechall.net) (Quit: WeeChat 3.2)
[03:45:10] *** Quits: drewa (~drewa@user/drew) (Quit: WeeChat 3.2)
[03:45:11] *** Quits: Memory (~Wei@143.198.78.64) (Remote host closed the connection)
[03:45:18] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 258 seconds)
[03:45:33] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:46:16] *** Joins: darksun (~darksun@user/darksun)
[03:46:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[03:47:30] *** Joins: wyclif (~wyclif@user/wyclif)
[03:49:09] *** Joins: Naan (~naan@user/naan)
[03:49:22] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[03:49:31] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[03:50:20] *** lukedashjr is now known as luke-jr
[03:51:43] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[03:52:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[03:53:52] *** Joins: tims (~tims@193-82-234-90.tpgi.com.au)
[03:55:37] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:55:38] *** Joins: spaceone (~spaceone@wc1.wechall.net)
[03:55:55] *** Joins: akk (~akk@75.161.155.222)
[03:56:13] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:56:48] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 258 seconds)
[03:56:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:57:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:57:51] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[03:58:14] *** Joins: wyclif (~wyclif@user/wyclif)
[03:59:28] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Remote host closed the connection)
[03:59:48] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[04:00:25] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[04:00:26] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:00:43] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[04:01:23] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:01:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[04:01:49] *** Joins: dcaro (~dcaro@user/dcaro)
[04:02:34] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[04:03:46] *** Joins: YoungPotato (~user@155.98.225.41)
[04:04:42] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Ping timeout: 252 seconds)
[04:06:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[04:06:51] *** Joins: Atque (~Atque@user/atque)
[04:06:55] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[04:07:18] *** Quits: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster) (Remote host closed the connection)
[04:07:43] *** Joins: Achylles (~Achylles_@2804:431:d725:166d:e1ee:92d4:ae07:dd1e)
[04:07:49] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Client Quit)
[04:11:49] *** Quits: brizz (~brizz@74.208.85.67) (Remote host closed the connection)
[04:12:12] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:16:16] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[04:16:36] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:17:04] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Client Quit)
[04:17:51] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 240 seconds)
[04:18:23] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[04:19:25] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[04:22:52] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[04:22:56] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[04:23:15] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[04:23:59] *** Joins: dulanic (~dulanic@47.187.144.163)
[04:26:48] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[04:27:52] *** Quits: Maple (~Maple@user/maple) (Quit: WeeChat 3.2)
[04:27:54] *** Quits: hposca (~hposca@node-1w7jr9phoke2tu92kv7e533az.ipv6.telus.net) (Ping timeout: 252 seconds)
[04:28:30] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Ping timeout: 255 seconds)
[04:32:07] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-0ca1-806b-912b-0cdd.res6.spectrum.com) (Quit: Leaving.)
[04:32:23] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-0ca1-806b-912b-0cdd.res6.spectrum.com)
[04:32:55] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-0ca1-806b-912b-0cdd.res6.spectrum.com) (Client Quit)
[04:34:05] *** Joins: Komu (~Komu__@2a02:3037:410:7dd:b4c9:d13d:2e1d:c5f7)
[04:39:46] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a464-a98a-7d3e-475c.res6.spectrum.com)
[04:40:44] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[04:42:04] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[04:42:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:44:05] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[04:44:43] *** Quits: Komu (~Komu__@2a02:3037:410:7dd:b4c9:d13d:2e1d:c5f7) (Quit: Verlassend)
[04:46:13] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:48:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:48:42] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[04:49:04] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[04:49:46] *** Quits: ttkap (~ttkap@user/ttkap) (Remote host closed the connection)
[04:49:59] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[04:50:15] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[04:50:59] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:51:45] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:52:46] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 268 seconds)
[04:57:10] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:02:59] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[05:04:09] *** Joins: chilversc (~chilversc@user/chilversc)
[05:05:14] <p-i-_> with open('all.txt','w') as f:
[05:05:14] <p-i-_>     s = '\n'.join(l + '\n' for l in all_lines)
[05:05:14] <p-i-_>     f.write(s)
[05:05:26] <p-i-_> How come this is failing every which way?
[05:05:49] <SnoopJ> p-i-_, failing how?
[05:05:54] <grym> p-i-_: do you want a double-spaced file or something?
[05:05:57] <grym> what's the intent here
[05:07:04] *** Joins: codl (~codl@user/codl)
[05:07:09] <p-i-_> ok, so objects are in bytes
[05:07:17] <p-i-_> I'm just trying to dump a bunch of lines to a file
[05:07:25] <p-i-_> But it seems the lines are bytes objects
[05:07:43] <SnoopJ> p-i-_, that would definitely cause a failure there, because you're opening the file in text mode
[05:08:22] <SnoopJ> a mode of 'wb' is how you spell "open for writing bytes"
[05:08:36] <SnoopJ> or you can decode your lines first
[05:10:29] <p-i-_> Thanks!
[05:10:46] <p-i-_> Coding after my sleeping pill...
[05:10:52] <Repiphany> '\n'.join(lines) already adds a newline between each line in lines
[05:11:06] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:11:39] <Repiphany> If you needed double-spaced, '\n\n'.join(...)
[05:12:17] <SnoopJ> note: the above doesn't output a trailing newline
[05:12:30] <Repiphany> b'\n'.join(byte_lines)
[05:13:09] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:13:20] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[05:15:38] *** Quits: Achylles (~Achylles_@2804:431:d725:166d:e1ee:92d4:ae07:dd1e) (Quit: Leaving)
[05:16:51] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:19:00] *** Quits: akk (~akk@75.161.155.222) (Quit: +++)
[05:20:21] <p-i-_> for symbol in SYMBOLS_LOWER:
[05:20:21] <p-i-_>     with open(f'{symbol}.txt','wb') as f:
[05:20:21] <p-i-_>         s = b'\n'.join(bytes(l, 'ascii')  for l in all_lines if bytes(symbol, 'ascii') in l)
[05:20:23] <p-i-_>         f.write(s)
[05:20:28] <p-i-_> Even this is faliing.
[05:20:37] <p-i-_> I'm converting EVERYTHING to bytes.
[05:21:09] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.245)
[05:21:44] *** Joins: sn1tch3r__ (~sn1tch3r@23.82.138.37)
[05:22:17] <grym> p-i-_: be much more precise about "failing"
[05:22:23] <p-i-_> "TypeError: encoding without a string argument"
[05:23:31] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[05:24:00] <p-i-_> Maybe some items in all_lines are strings and other are bytes.
[05:24:09] <p-i-_> But that's why I converted everything.
[05:24:49] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:1dd8:59e9:1c54:8960)
[05:26:20] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.245) (Ping timeout: 268 seconds)
[05:27:42] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 255 seconds)
[05:28:13] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:20] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[05:31:50] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[05:32:24] <nedbat> p-i-_: can you pastebin the whole program?
[05:32:48] *** [_] is now known as [itchyjunk]
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:34:14] *** Quits: YoungPotato (~user@155.98.225.41) (Remote host closed the connection)
[05:37:09] *** Joins: attackthemoon (~attackthe@2600:6c40:1d00:560c:f5b4:bb9d:fee2:4d1a)
[05:37:10] <attackthemoon> rules
[05:37:13] <attackthemoon> oops
[05:37:15] <attackthemoon> haha
[05:38:30] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Ping timeout: 255 seconds)
[05:39:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:40:34] *** Quits: attackthemoon (~attackthe@2600:6c40:1d00:560c:f5b4:bb9d:fee2:4d1a) (Client Quit)
[05:41:26] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[05:43:39] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[05:43:40] *** Jacktar_ is now known as jacktar
[05:48:02] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[05:51:42] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a464-a98a-7d3e-475c.res6.spectrum.com) (Quit: Leaving.)
[05:52:33] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:57:51] *** Joins: califax- (~califax@user/califx)
[05:58:20] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Quit: The Lounge - https://thelounge.chat)
[05:59:39] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 255 seconds)
[06:00:08] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:00:11] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[06:00:11] *** califax- is now known as califax
[06:00:27] <nubonix> is there any way to default pendulum to use my local timezone with timestamps instead of utc...
[06:01:05] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:01:12] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[06:01:12] *** brabrax_ is now known as brabrax
[06:02:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:03:35] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-818a-98d6-4f9a-c55e.res6.spectrum.com) (Read error: Connection reset by peer)
[06:04:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:04:59] *** Joins: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[06:05:16] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:9bf7:5f43:71f2:b737)
[06:06:05] *** Joins: pete443_ (~pete@user/pete443)
[06:06:45] *** Quits: baltazar (~baltazar@84-236-20-145.pool.digikabel.hu) (Ping timeout: 268 seconds)
[06:07:29] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 255 seconds)
[06:08:08] *** Joins: baltazar (~baltazar@178-164-154-141.pool.digikabel.hu)
[06:09:16] *** Joins: skapata (~Skapata@user/skapata)
[06:09:51] <puff> Good evening.  I'm looking for info on how to play videos in mpv via python (on a raspberry pi btw). Not finding a lot of concrete info.
[06:11:03] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[06:12:39] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[06:12:53] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[06:13:26] <iflema> puff over network?
[06:14:15] *** Quits: emerent (~quassel@p200300cd57058c4cba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[06:14:41] *** Joins: emerent (~quassel@p200300cd57058c81ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:15:15] *** Joins: pnoud (~pnoud@user/pnoud)
[06:15:19] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:15:31] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[06:15:48] <SnoopJ> puff, looks like there are a few choices of wrappers. I would personally go with this one because I recognize the author: https://pypi.org/project/pympv/ but there's one that does something similar here: https://github.com/jaseg/python-mpv
[06:16:59] <SnoopJ> both give you basically the interface that libmpv does, the second one looks a little more user-friendly
[06:17:25] *** Quits: syb0rg (~syb0rg@184.170.242.152) (Ping timeout: 246 seconds)
[06:17:55] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:18:11] <SnoopJ> gotten frustrated with VLC, or is this a new project?
[06:18:16] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[06:18:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[06:19:31] *** Joins: wyclif (~wyclif@user/wyclif)
[06:19:41] <SnoopJ> hmm, I take it back, python-mpv has a lot more 'helper' interface in it, I'd go with that one unless I really wanted a direct set of bindings
[06:19:41] *** Joins: deivislk (~deivislk@189.7.117.212)
[06:20:05] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[06:20:08] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:20:32] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 258 seconds)
[06:22:11] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:23:28] *** Joins: dre_ (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49)
[06:24:25] *** Quits: dre (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49) (Ping timeout: 246 seconds)
[06:24:53] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[06:25:48] <Roey> ______GOD______: oh, I seen you; you're here too??
[06:25:56] *** Quits: deivislk (~deivislk@189.7.117.212) (Quit: deivislk)
[06:26:12] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) (Remote host closed the connection)
[06:30:18] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:31:05] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[06:32:17] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[06:33:26] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[06:34:34] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:36:57] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[06:37:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[06:37:36] *** Quits: Syrup (uid10029@user/maple) (Quit: Connection closed for inactivity)
[06:38:04] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[06:41:14] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Ping timeout: 255 seconds)
[06:41:45] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:44:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:45:22] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[06:45:43] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[06:46:09] *** Quits: shailangsa (~shailangs@host86-186-191-14.range86-186.btcentralplus.com) (Ping timeout: 265 seconds)
[06:47:37] <Elon_Satoshi> Is there a random.* function to return a shuffled list instead of modifying a list?
[06:47:44] *** Quits: sn1tch3r__ (~sn1tch3r@23.82.138.37) (Quit: Leaving)
[06:47:53] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a2f5:e803:41c:4e99:cd72:c414) (Ping timeout: 246 seconds)
[06:48:02] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[06:48:05] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[06:48:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 268 seconds)
[06:49:22] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:50:14] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:50:27] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Remote host closed the connection)
[06:50:44] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[06:51:20] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:51:28] <SnoopJ> Elon_Satoshi, `random.sample(lst, k=len(lst))` will do that, not sure if there's a better spelling
[06:51:36] *** Quits: fstd (~fstd@xdsl-78-35-78-211.nc.de) (Ping timeout: 276 seconds)
[06:51:44] *** Joins: arischow (~arischow@103.97.201.36)
[06:52:01] *** Joins: Pixi (~Pixi@user/pixi)
[06:53:15] <______GOD______> Roey: Yes
[06:53:18] <SnoopJ> I would probably write `def shuffled(lst): return random.sample(lst, k=len(lst))` so I could just write `shuffled(lst)` where I'm using it.
[06:54:41] *** Quits: Pixi (~Pixi@user/pixi) (Remote host closed the connection)
[06:55:31] *** Joins: heco (~redrum@user/redrum88)
[06:55:38] *** Joins: monkey_ (~user@190.104.116.134)
[07:00:38] *** Joins: Pixi (~Pixi@user/pixi)
[07:02:40] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 255 seconds)
[07:02:59] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[07:03:32] *** Joins: c10l (~c10l@89.34.167.207)
[07:04:02] *** Quits: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[07:04:27] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 255 seconds)
[07:05:18] <puff> SnoopJ: Thanks. No, not over network, just locally.  I have a python script that gets higher level (more abstract) commands via network and then uses vlc to play a video. I'm looknig at moving to mpv because when I play vlc in fullscreen mode on a raspberry pi, either via the GUI or via the python script, I get a black screen. The mouse pointer appears if I move it around, but no video.
[07:05:18] *** Joins: dwt_ (~dwt_@c-98-200-58-177.hsd1.tx.comcast.net)
[07:05:56] <SnoopJ> I have a faint recollection of that problem, yea :(
[07:06:39] <puff> Yeah, I've been banging my head against a brick wall.
[07:06:58] <puff> I got it working on the pi 4 a few months ago, but couldn't repeat it when buildnig from scratch.
[07:07:57] <puff> TWo months go I got a pi compute module 4 w/EMMC and IO board, couldn't get vlc working in fullscreen, set it aside, came back to it a month later and it miraculously worked.  But I still can't figure out wtf changed to make it work.  Rebuilt it from scratch, not working in fullscreen.
[07:08:38] <SnoopJ> ahh, computers..
[07:08:41] <puff> Whee.
[07:12:33] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 255 seconds)
[07:12:55] *** Quits: arischow (~arischow@103.97.201.36) (Quit: Textual IRC Client: www.textualapp.com)
[07:17:52] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:18:03] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:19:43] <puff> SnoopJ: Error trying to install pympv https://gist.github.com/stevenjowens/cfad476fd8e96c3083c82ff2d5db00fc
[07:21:27] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[07:21:45] *** Quits: finsternis (~X@23.226.237.192) (Read error: Connection reset by peer)
[07:22:01] *** Joins: Fiji (~Fiji@user/fiji)
[07:22:25] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[07:22:55] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[07:23:14] *** Joins: kindablue (znc@irc.tpurist.com)
[07:24:24] <SnoopJ> puff, this is one of those things where Debian thinks they know what does or doesn't belong in Python, you need the `wheel` module. It's provided by the python3-wheel package, or you can `python3 -m pip install wheel` to get the most recent version
[07:25:35] <SnoopJ> puff, but after consideration I think python-mpv will be a nicer experience anyway, it has more directly-useful functions for your task.
[07:31:00] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Ping timeout: 255 seconds)
[07:36:17] *** Joins: sectec84 (~sectec84@24.18.109.173)
[07:36:20] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 245 seconds)
[07:44:41] *** Joins: monkey_ (~user@190.104.116.134)
[07:45:16] *** Joins: Jefren2 (~Jefren@70.35.67.86)
[07:45:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:46:16] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[07:46:39] *** Joins: Jefren3 (~Jefren@70.35.67.43)
[07:47:23] *** Quits: Jefren1 (~Jefren@70.35.66.157) (Ping timeout: 255 seconds)
[07:48:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[07:49:11] *** Joins: Jefren4 (~Jefren@206.253.157.210)
[07:49:25] *** Joins: Mija (~Mija@user/mija)
[07:49:34] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:49:51] *** Quits: Jefren2 (~Jefren@70.35.67.86) (Ping timeout: 258 seconds)
[07:51:13] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 246 seconds)
[07:51:23] *** Quits: Jefren3 (~Jefren@70.35.67.43) (Ping timeout: 258 seconds)
[07:51:32] *** Joins: dcaro (~dcaro@user/dcaro)
[07:52:46] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[07:54:09] *** Joins: Jefren (~Jefren@70.35.67.249)
[07:54:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[07:54:30] *** Joins: justyb11 (~justyb@2601:483:500:3ea:edf6:ee2b:7baf:aab0)
[07:55:16] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:56:25] *** Quits: Jefren4 (~Jefren@206.253.157.210) (Ping timeout: 252 seconds)
[07:58:00] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[07:59:06] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:59:45] <altendky> to walk the mro via the c-api, is there not a function to call?  or did i just miss it.  alternatively i guess i would just get the `__mro__` attribute from the type object and walk through the list.  https://bugreports.qt.io/browse/PYSIDE-1431?focusedCommentId=576321&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-576321
[08:01:22] *** Joins: ionface (~ionface@user/ionface)
[08:04:43] *** Joins: Jefren1 (~Jefren@208.104.190.59)
[08:07:14] <voldial> Is there a vim plugin that adds a status line showing what class/function the cursor is in?
[08:07:19] *** Quits: Jefren (~Jefren@70.35.67.249) (Ping timeout: 246 seconds)
[08:07:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[08:07:32] *** Joins: Jefren2 (~Jefren@70.35.66.224)
[08:08:31] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 268 seconds)
[08:09:24] *** Quits: Jefren1 (~Jefren@208.104.190.59) (Ping timeout: 258 seconds)
[08:10:03] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:11:41] *** Joins: Jefren3 (~Jefren@70.35.66.243)
[08:11:56] *** kevr is now known as evr
[08:13:45] *** Quits: Jefren2 (~Jefren@70.35.66.224) (Ping timeout: 255 seconds)
[08:15:12] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[08:16:04] *** Joins: pnoud (~pnoud@user/pnoud)
[08:16:15] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[08:16:28] *** Joins: Jefren4 (~Jefren@206.253.157.239)
[08:17:11] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:18:06] <japh> if I want to check if a variable is defined, is the right way to use try and except?
[08:19:09] *** Quits: Jefren3 (~Jefren@70.35.66.243) (Ping timeout: 255 seconds)
[08:19:24] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[08:19:29] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[08:19:59] <vdamewood> japh: It's more like you do try, you try to do something with it, then to else for the success part, and except for the oops-I-screwed-up part.
[08:20:00] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[08:20:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (sodium.libera.chat (Nickname regained by services)))
[08:20:01] *** jmcantre2 is now known as jmcantrell
[08:20:15] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[08:20:27] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[08:20:31] <vdamewood> s/to else/do else/
[08:21:17] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[08:21:22] <japh> vdamewood, normaly I'd make sure the variable has some value before I try to use it, but I can't do that here: https://github.com/trapd00r/configs/blob/master/beets/config.yaml#L356
[08:22:51] <japh> it feels like a lot of code to do this, I'm used to   return defined($foo) ? $foo : 'bar'
[08:23:40] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[08:23:53] *** Joins: Jefren (~Jefren@70.35.67.103)
[08:23:55] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[08:24:15] <vdamewood> try: return myartist except: do other stuf.
[08:24:22] <vdamewood> stuff*
[08:24:45] <japh> aah
[08:25:01] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[08:25:57] *** evr is now known as kevr
[08:26:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[08:27:02] *** Quits: Jefren4 (~Jefren@206.253.157.239) (Ping timeout: 258 seconds)
[08:28:14] <BrenBarn> only don't use plain `except:`
[08:28:19] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:29:05] <vdamewood> s/except:/except <blah>:/
[08:29:20] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[08:30:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:33:32] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:33:37] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[08:33:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:33:54] *** Joins: CombatVet (~c4@user/combatvet)
[08:34:00] *** Quits: jabberwo- (~jessy@user/jabberwock) (Ping timeout: 255 seconds)
[08:34:16] *** Joins: lidless (~jessy@user/jabberwock)
[08:34:20] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:34:55] <BrenBarn> that link you gave seems very strange, putting Python code in a YAML file
[08:35:09] <SnoopJ> altendky, can you use the tuple given by `Py_TYPE(obj)->tp_mro` maybe? https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_mro
[08:35:18] <japh> it's inline python in a beets config file
[08:35:59] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:06] <altendky> SnoopJ: but...  but...  isn't this prettier?  `PyObject *mro = PyObject_GetAttr(reinterpret_cast<PyObject *>(objType), PyUnicode_FromKindAndData(PyUnicode_1BYTE_KIND, "__mro__", 7));`
[08:36:35] <SnoopJ> it's certainly more ornate :)
[08:36:35] <altendky> lemme try that (though this didn't seem to fix the underlying problem, maybe, i don't think)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:44] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:37:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:38:02] <altendky> this effort is a continuation of pyside ticket #68 (as in a small number) from like 2012...  their fix to that last year ended up breaking this signal equality check, but only for inherited signals.  blah
[08:38:12] <SnoopJ> if I'm reading that page and/or typeobject.c correctly, I think the member access is exactly the same object minus the cast/calls
[08:38:37] *** Joins: jabberwo- (jessy@user/jabberwock)
[08:39:11] <altendky> i'm lazy apparently.  i hit up arrow and enter and am waiting for it to compile and see what happens.
[08:39:30] *** Joins: djapo (~archangel@user/djapo)
[08:39:41] *** Quits: lidless (~jessy@user/jabberwock) (Ping timeout: 268 seconds)
[08:40:41] <altendky> yep, it compiled and at first glance gave the same output.  tidier, thanks.
[08:41:53] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:42:02] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:42:08] <puff> SnoopJ: are https://pypi.org/project/python-mpv/ and https://github.com/jaseg/python-mpv the same thing?
[08:42:21] <puff> Hm, from the github readme it looks like they are.
[08:42:24] <SnoopJ> puff, yea
[08:43:00] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[08:43:50] <SnoopJ> if you care about changes between Jul 25 2020 and Mar 19 2021, you want the repo for the most recent. Looks like only one commit that has functionality changes, so probably PyPI is fine
[08:43:54] <furrykef> My script often throws a BrokenPipeError if I pipe its output through less and I quit less before seeing all the output. What's the most elegant solution to this problem?
[08:44:03] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-2d17-9892-0825-604c.res6.spectrum.com)
[08:44:14] <puff> Hm, it says I need libmpv.so.  The mpv deb doesn't include a libmpv.so.  There's a libmvp1 package in apt that includes a libmpv1.so....
[08:45:13] <GenTooMan> hmm class methods are kept in a dictionary correct?
[08:45:27] <furrykef> Sure.
[08:45:52] *** Joins: P1RATEZ (piratez@user/p1ratez)
[08:45:55] <furrykef> All identifiers are stored in a dictionary.
[08:47:13] * GenTooMan thought so now to make use of that.
[08:47:24] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[08:49:35] *** Quits: LiftLeft (~LiftLeft@172.98.80.138) (Ping timeout: 252 seconds)
[08:54:07] *** Quits: TomTheDragon (~tom@108-91-122-242.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 240 seconds)
[08:54:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[08:55:20] <puff> SnoopJ: Any idea where to find libmpv.so?
[08:56:03] *** Quits: alexyov (~alexyov@79.124.0.2) (Ping timeout: 255 seconds)
[08:57:08] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:57:24] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[08:57:37] <puff> SnoopJ: Aha, libmpv-dev package.
[08:57:37] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[08:58:04] <SnoopJ> yea, libmpv-dev is what you want
[08:58:11] *** Quits: Jefren (~Jefren@70.35.67.103) (Ping timeout: 268 seconds)
[08:59:39] *** Joins: Jefren (~Jefren@208.104.190.26)
[09:02:49] *** Joins: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de)
[09:03:24] <puff> SnoopJ: "libmpv.so either locally (in your current working directory) or somewhere in your system library search path."
[09:03:43] <puff> SnoopJ: So... define LD_LIBRARY_PATH and point it at the directory that contains libmpv.so?
[09:04:52] <SnoopJ> puff, you shouldn't have to do anything special once you've installed the Ubuntu package
[09:06:33] *** Joins: Jefren1 (~Jefren@70.35.67.131)
[09:07:24] <SnoopJ> if you're worried about whether or not it's set up the way that package needs it, you can run: `python3 -c "import ctypes.util; print(ctypes.util.find_library('mpv') or 'Not Found')"` to check, it'll either print the full filename or "Not Found"
[09:07:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[09:08:00] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:09:12] *** Quits: Jefren (~Jefren@208.104.190.26) (Ping timeout: 258 seconds)
[09:10:19] *** Joins: Jefren2 (~Jefren@70.35.66.80)
[09:10:22] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[09:10:31] *** Joins: cjb (~cjb@user/cjb)
[09:10:34] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[09:11:04] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:11:19] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[09:13:05] *** Quits: Jefren1 (~Jefren@70.35.67.131) (Ping timeout: 265 seconds)
[09:15:08] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 255 seconds)
[09:15:19] *** Joins: Jefren3 (~Jefren@70.35.67.47)
[09:15:33] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[09:15:38] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:17:24] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[09:17:55] *** Quits: Jefren2 (~Jefren@70.35.66.80) (Ping timeout: 265 seconds)
[09:18:13] *** Joins: Jefren4 (~Jefren@70.35.66.41)
[09:19:30] <puff> SnoopJ: Cool, it found it.
[09:20:48] *** Quits: Jefren3 (~Jefren@70.35.67.47) (Ping timeout: 255 seconds)
[09:22:23] *** binchickin3 is now known as binchickin
[09:22:37] <puff> SnoopJ: Aha, libmpv-dev depends on libmpv1.
[09:22:50] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:23:06] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[09:23:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[09:24:16] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[09:24:41] *** Quits: Jefren4 (~Jefren@70.35.66.41) (Ping timeout: 265 seconds)
[09:26:52] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:27:29] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:27:47] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[09:28:30] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:29:16] *** Joins: Jefren4 (~Jefren@70.35.66.59)
[09:30:16] <puff> Doncha just love cryptic options?  The github readme example for python-mpv has it passing ytdl=True as a parameter into the factory method (mpv.MPV(ytdl=True)) but no explanation of that, and the only mention in the source is a comment on a *different* that says "requires ``ytdl`` option to be set".
[09:33:06] *** Joins: stranac (~stranac@195.29.239.126)
[09:36:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[09:36:53] <puff> And yay, test script works.
[09:38:03] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[09:38:11] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:38:40] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[09:41:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:42:52] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[09:43:26] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:45:19] *** Joins: Wulf (~Wulf@user/wulf)
[09:45:47] *** Joins: acid (~acid@user/acid)
[09:46:55] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[09:49:59] *** Quits: Jefren4 (~Jefren@70.35.66.59) (Ping timeout: 268 seconds)
[09:50:01] <puff> Not high on my list of priorities, but I'm curious if MPV will support playing different videos to the two different HDMI outs.
[09:51:42] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf) (Quit: Leaving)
[09:51:49] *** Joins: Jefren4 (~Jefren@70.35.66.218)
[09:52:00] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf)
[09:52:15] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[09:52:44] *** Joins: pwnd_sfw6 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[09:53:32] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:53:34] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[09:53:34] *** pwnd_sfw6 is now known as pwnd_sfw
[09:54:12] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Quit: Leaving)
[09:54:30] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:59:36] <SnoopJ> puff, --ytdl is an mpv option, and another one lets you do what you're thinking of I think: --screen (or maybe --geometry)
[10:02:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[10:03:50] *** Parts: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Leaving)
[10:04:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[10:05:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf) (Quit: Leaving)
[10:05:11] *** Joins: wyclif (~wyclif@user/wyclif)
[10:05:20] *** Joins: ttkap (~ttkap@user/ttkap)
[10:05:22] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf)
[10:06:14] <SnoopJ> oh, probably --fs-screen is even better (it should be mapped as fs_screen)
[10:07:43] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:08:38] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[10:08:53] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[10:10:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[10:10:39] *** Joins: wyclif (~wyclif@user/wyclif)
[10:13:16] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[10:13:19] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[10:13:30] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[10:13:41] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:14:19] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:15:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:16:54] *** Joins: pnoud (~pnoud@user/pnoud)
[10:16:57] *** Quits: kor1 (~kor1@user/kor1) (Quit: Leaving.)
[10:17:52] *** sus is now known as zero
[10:17:57] *** zero is now known as sus
[10:18:06] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[10:19:27] <mat001> Hey. About mocking class objects. Why is OptlyClientMock not assigned to a return_value on line 5? https://bpa.st/MREA
[10:19:43] <mat001> I tried, but the test faile
[10:19:54] <mat001> but works when I don't use return_value
[10:21:59] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[10:23:16] *** Joins: alexyov (~alexyov@79.124.0.2)
[10:23:43] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:24:12] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:26:44] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[10:27:28] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:28:40] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:30:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[10:31:50] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[10:32:13] *** Joins: kenoba (~kenoba@user/kenoba)
[10:32:44] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:34:34] *** Joins: sandeepk (~sandeepk@223.130.30.101)
[10:34:36] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 255 seconds)
[10:35:03] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:36:52] *** Joins: kosh (~kosh@user/kosh)
[10:37:56] *** Joins: darksun (~darksun@user/darksun)
[10:38:58] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[10:39:29] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[10:39:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:40:49] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:41:17] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[10:42:09] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:43:27] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[10:44:26] *** Joins: lethu (~lethu@196.117.25.100)
[10:44:43] *** Joins: rendar (~rendar@user/rendar)
[10:46:45] *** Joins: Jefren (~Jefren@70.35.67.90)
[10:47:02] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:46] *** Joins: seednode (~seednode@user/seednode)
[10:48:01] *** Quits: Jefren4 (~Jefren@70.35.66.218) (Ping timeout: 252 seconds)
[10:48:37] *** Joins: mrwick (~mrwick@user/mrwick)
[10:49:33] *** Quits: justyb11 (~justyb@2601:483:500:3ea:edf6:ee2b:7baf:aab0) (Quit: Leaving)
[10:50:15] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 256 seconds)
[10:50:23] *** Joins: Jefren1 (~Jefren@70.35.66.129)
[10:51:52] *** Joins: Gerula (~Gerula@user/gerula)
[10:52:08] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[10:52:10] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[10:53:05] *** Quits: Jefren (~Jefren@70.35.67.90) (Ping timeout: 256 seconds)
[10:54:33] *** Joins: Jefren2 (~Jefren@208.104.190.36)
[10:55:00] *** Joins: Payam (~Payam@138.106.57.132)
[10:55:21] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 268 seconds)
[10:55:49] *** Joins: gusto (~Augustus@2620:149:e0:6002::25)
[10:56:43] *** Quits: Mija (~Mija@user/mija) (Ping timeout: 246 seconds)
[10:57:03] *** Quits: Jefren1 (~Jefren@70.35.66.129) (Ping timeout: 256 seconds)
[10:57:21] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:57:27] *** Joins: Jefren3 (~Jefren@206.253.157.234)
[10:57:46] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:57:56] *** Joins: upsala (~zcb@185.213.155.160)
[10:59:47] *** Joins: dodobrain_ (~dodobrain@user/dodobrain)
[10:59:48] *** Quits: Jefren2 (~Jefren@208.104.190.36) (Ping timeout: 255 seconds)
[11:02:08] *** Quits: Jefren3 (~Jefren@206.253.157.234) (Ping timeout: 268 seconds)
[11:03:35] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 255 seconds)
[11:03:49] *** Joins: Jefren3 (~Jefren@70.35.66.111)
[11:04:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:04:18] *** Quits: dodobrain_ (~dodobrain@user/dodobrain) (Ping timeout: 255 seconds)
[11:05:10] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf) (Quit: Leaving)
[11:05:22] *** Joins: CombatVet (~c4@user/combatvet)
[11:05:29] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf)
[11:05:39] *** Joins: chele (~chele@user/chele)
[11:08:35] *** Joins: Jefren4 (~Jefren@70.35.67.247)
[11:08:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[11:09:33] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[11:10:09] *** Quits: Jefren3 (~Jefren@70.35.66.111) (Ping timeout: 255 seconds)
[11:10:09] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[11:10:48] *** Joins: Trieste (T@user/pilgrim)
[11:12:05] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:12:58] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[11:12:58] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[11:13:14] *** Quits: Jefren4 (~Jefren@70.35.67.247) (Ping timeout: 268 seconds)
[11:13:36] *** Joins: ovnicraft (~ovnicraft@201.238.128.18)
[11:14:11] *** Quits: ovnicraft (~ovnicraft@201.238.128.18) (Client Quit)
[11:14:28] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 268 seconds)
[11:14:52] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[11:14:53] *** Joins: Jefren4 (~Jefren@206.253.157.201)
[11:15:07] *** Joins: lothar_m (~lothar_m@89-181-7-211.net.novis.pt)
[11:15:30] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-149.hsi5.kabel-badenwuerttemberg.de)
[11:16:42] *** Joins: Jefren (~Jefren@70.35.67.50)
[11:18:20] *** Joins: palasso (~palasso@user/palasso)
[11:18:31] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf) (Quit: Leaving)
[11:19:08] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:19:32] *** Quits: Jefren4 (~Jefren@206.253.157.201) (Ping timeout: 258 seconds)
[11:21:03] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[11:21:52] *** Quits: Jefren (~Jefren@70.35.67.50) (Ping timeout: 268 seconds)
[11:23:20] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:24:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:25:11] *** Joins: Jefren (~Jefren@70.35.67.201)
[11:26:50] *** Joins: jinsun_ (~quassel@user/jinsun)
[11:26:55] *** Joins: Jefren1 (~Jefren@70.35.66.233)
[11:27:40] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[11:27:43] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[11:29:03] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[11:29:27] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[11:29:33] *** Joins: jinsun (~quassel@user/jinsun)
[11:29:47] *** Joins: Jefren2 (~Jefren@70.35.67.104)
[11:29:57] *** Quits: Jefren (~Jefren@70.35.67.201) (Ping timeout: 255 seconds)
[11:30:46] *** Joins: jinsun__ (~quassel@user/jinsun)
[11:31:07] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Quit: Leaving...)
[11:31:51] *** Joins: doev (~doev@mobile.bpv-consult.net)
[11:32:06] *** Joins: Jefren3 (~Jefren@206.253.157.238)
[11:32:22] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[11:32:23] *** Quits: Jefren1 (~Jefren@70.35.66.233) (Ping timeout: 252 seconds)
[11:33:33] *** Quits: jinsun_ (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[11:33:51] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[11:34:27] *** Quits: Jefren2 (~Jefren@70.35.67.104) (Ping timeout: 255 seconds)
[11:34:29] *** Joins: Jefren4 (~Jefren@70.35.66.47)
[11:36:15] *** Quits: jinsun__ (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[11:37:34] *** Joins: jinsun (~quassel@user/jinsun)
[11:37:36] *** Quits: Jefren3 (~Jefren@206.253.157.238) (Ping timeout: 255 seconds)
[11:37:40] *** Joins: Jefren (~Jefren@70.35.66.188)
[11:38:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:39:51] *** Quits: Jefren4 (~Jefren@70.35.66.47) (Ping timeout: 255 seconds)
[11:40:01] *** Joins: Jefren1 (~Jefren@70.35.66.121)
[11:40:12] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Remote host closed the connection)
[11:40:36] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[11:40:37] *** Quits: sandeepk (~sandeepk@223.130.30.101) (Ping timeout: 258 seconds)
[11:42:46] *** Joins: jinsun_ (~quassel@user/jinsun)
[11:43:00] *** Quits: Jefren (~Jefren@70.35.66.188) (Ping timeout: 255 seconds)
[11:45:31] *** Joins: botenkhamen|2 (~TakinOver@47.150.206.35)
[11:45:47] *** Joins: jinsun__ (~quassel@user/jinsun)
[11:46:39] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[11:47:08] *** Joins: entuland (~entuland@user/entuland)
[11:47:21] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:47:37] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[11:50:28] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[11:50:31] *** Joins: maxtimbo (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[11:50:32] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[11:51:05] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Read error: Connection reset by peer)
[11:53:33] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 265 seconds)
[11:53:34] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:55:00] *** Quits: sdb1031 (~sdb1031@184-091-161-228.res.spectrum.com) (Ping timeout: 265 seconds)
[11:55:13] *** Parts: botenkhamen|2 (~TakinOver@47.150.206.35) (No boundaries on the net!)
[11:55:25] *** Joins: sandeepk (~sandeepk@223.130.30.101)
[11:56:52] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[11:57:43] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:00:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:51] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:01:19] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 245 seconds)
[12:01:40] *** Joins: dvx (~dvx@185.63.97.64)
[12:02:00] *** BlessJah_ is now known as BlessJah
[12:05:06] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[12:06:39] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-2d17-9892-0825-604c.res6.spectrum.com) (Quit: Leaving.)
[12:08:49] *** Joins: Auron (~Auron956@user/auron)
[12:08:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[12:09:55] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8911-e5b6-6ab4-72d3.res6.spectrum.com) (Quit: jarthur)
[12:11:05] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:11:20] *** Joins: Mija (~Mija@user/mija)
[12:11:23] *** jinsun_ is now known as jinsun
[12:13:59] *** Quits: kmikita (uid461814@id-461814.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[12:14:41] *** Joins: TakinOver (~quassel@47.150.206.35)
[12:15:14] *** Quits: dre_ (~dre@2001:8003:c932:c301:117d:15f9:de03:4d49) (Quit: Leaving)
[12:17:44] *** Joins: pnoud (~pnoud@user/pnoud)
[12:18:33] *** Quits: doko (~doko@2a02:8106:1a:7600:e433:5fc5:a04:aaa1) (Ping timeout: 276 seconds)
[12:21:04] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[12:21:23] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:21:32] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[12:21:52] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:22:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[12:24:47] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[12:25:59] <graingert> mat001: `with mock.patch('services.fullstack.get_optly_object', return_value=OptlyClientMock):` ?
[12:26:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[12:28:49] <graingert> https://www.irccloud.com/pastebin/zY8z8I2d/mat001.py
[12:29:09] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[12:29:19] *** Joins: lexandrop (~lex@user/lexandrop)
[12:30:34] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[12:30:45] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[12:30:53] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 255 seconds)
[12:30:57] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:40] *** Quits: lothar_m (~lothar_m@89-181-7-211.net.novis.pt) (Quit: WeeChat 3.2-rc1)
[12:31:49] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:32:03] *** Quits: audiocat (~audio@2603-8081-1800-00ad-5c65-aed6-c0c3-cf16.res6.spectrum.com) (Ping timeout: 255 seconds)
[12:33:08] *** Joins: liluzer (~zenix@118.69.128.37)
[12:33:32] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[12:33:48] *** Joins: Komu (~Komu__@2a02:3033:8:5cd8:40bb:a26b:8df9:ce8f)
[12:34:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[12:35:07] <liluzer> about pty.spawn() which i read across on Python docs, by "connect its controlling terminal with the current processâ€™s standard io" does that mean that whatever command i provide to pty.spawn() will create a completely separate psudeo-terminal and execute on it then send back to result on mine ?
[12:35:32] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:36:24] <no_gravity> Good Morning! Is there a better way to do this? def f(self,a,b,c,d): self.values.append(SimpleNamespace(a=a,b=b,c=c,d=d==
[12:36:29] <no_gravity> Good Morning! Is there a better way to do this? def f(self,a,b,c,d): self.values.append(SimpleNamespace(a=a,b=b,c=c,d=d))
[12:36:40] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:46] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[12:38:25] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[12:39:27] *** Joins: darksun (~darksun@user/darksun)
[12:39:49] <Repiphany> Better in what sense
[12:40:04] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:40:55] <no_gravity> Not having to name each variable name twice
[12:40:57] <no_gravity> In PHP it would be: $this.values[]=compact('a','b','c','d')
[12:41:11] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[12:41:29] <AhmedAmerican> *args, **kwargs
[12:42:26] *** Joins: Pixi_ (~Pixi@user/pixi)
[12:42:38] <no_gravity> AhmedAmerican: In the function header? Then you could not see anymore which args the function expects.
[12:42:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 255 seconds)
[12:43:18] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[12:43:34] *** Joins: slav0nic (slav0nic@python.su)
[12:44:16] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[12:44:31] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[12:44:32] *** Joins: califax (~califax@user/califx)
[12:45:05] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[12:45:21] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[12:47:08] *** Joins: pr0t07ype (~pr0t07ype@user/pr0t07ype)
[12:47:41] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[12:49:29] *** Quits: Jefren1 (~Jefren@70.35.66.121) (Ping timeout: 252 seconds)
[12:54:29] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[12:56:19] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:56:37] <deniska> no_gravity: make a custom class instead of using SimpleNamespace, perhaps using something like attrs or dataclass
[12:58:49] *** Quits: lethu (~lethu@196.117.25.100) (Quit: Quit())
[12:59:19] *** Quits: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) (Quit: leaving)
[12:59:32] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:00:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:00:44] *** Lord_of_Life_ is now known as Lord_of_Life
[13:00:56] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[13:01:30] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:01:56] <no_gravity> deniska: Nah
[13:02:29] <no_gravity> Looks like the SimpleNamespace solution is the simplest.
[13:02:34] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:02:37] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[13:02:38] <no_gravity> Gotta go with it.
[13:02:43] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Ping timeout: 246 seconds)
[13:02:52] *** Joins: HaMsTeRs (~mx@14-0-227-155.static.pccw-hkt.com)
[13:03:07] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[13:03:55] *** Joins: Jefren1 (~Jefren@70.35.66.118)
[13:03:58] <no_gravity> Thanks everyone!
[13:03:59] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[13:04:07] *** Joins: wyclif (~wyclif@user/wyclif)
[13:04:09] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:05:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:06:24] *** Joins: Jefren2 (~Jefren@70.35.66.94)
[13:08:14] *** Quits: Jefren1 (~Jefren@70.35.66.118) (Ping timeout: 255 seconds)
[13:08:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[13:09:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:09:41] *** Joins: jinsun_ (~quassel@user/jinsun)
[13:12:15] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[13:15:12] *** Quits: ttkap (~ttkap@user/ttkap) (Ping timeout: 244 seconds)
[13:17:27] *** Joins: ttkap (~ttkap@user/ttkap)
[13:18:07] *** Quits: Elon_Satoshi (~elonsatos@46.102.153.243) (Ping timeout: 240 seconds)
[13:20:15] *** Joins: Elon_Satoshi (~elonsatos@46.102.153.243)
[13:23:57] *** Joins: shad (~shad@user/shad)
[13:24:17] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[13:27:50] *** Joins: wyclif (~wyclif@user/wyclif)
[13:27:54] *** Joins: Atque (~Atque@user/atque)
[13:28:29] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:9bf7:5f43:71f2:b737) (Ping timeout: 255 seconds)
[13:29:03] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[13:29:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:29:39] *** Joins: vladoski (~vladoski@2001:b07:add:d406:6eac:5bb5:ed24:4cd6)
[13:30:03] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[13:30:03] <vladoski> what's the best way to update a list of dictionaries in py2.7?
[13:30:10] <vladoski> since I can't really use **
[13:30:13] *** Quits: {HD} (~{HD}@102.165.16.92) (Ping timeout: 265 seconds)
[13:30:28] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[13:30:57] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:31:19] *** Joins: shad (~shad@user/shad)
[13:31:22] *** Joins: jinsun (~quassel@user/jinsun)
[13:31:22] *** Quits: tims (~tims@193-82-234-90.tpgi.com.au) (Ping timeout: 268 seconds)
[13:31:27] <deniska> dicts have an .update() method
[13:31:46] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 246 seconds)
[13:32:14] <deniska> vladoski: also if the keys are strings, dict(**a, **b) is a trick you can use
[13:32:31] *** Joins: seednode (~seednode@user/seednode)
[13:32:52] *** Joins: tims (~tims@220-245-254-151.static.tpgi.com.au)
[13:33:20] *** Joins: varaindemian (~varaindem@86.124.78.162)
[13:34:27] <varaindemian> Using these commands to open a VNC server and then issue a POST request: 1) `subprocess.Popen("x11vnc")` 2) `requests.post('http://10.20.200.219:50003/vnc', data = {'ip':''+get_ip()})`
[13:34:51] <varaindemian> any idea why sometimes the server gets killed?
[13:35:05] <varaindemian> is it becasue of the way I am using subprocess?
[13:35:08] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[13:35:09] *** Quits: jinsun_ (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[13:36:25] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-cc47-a7d8-568f-b694.res6.spectrum.com)
[13:36:35] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:36:36] <vladoski> deniska, ** doesn't really work in py2.7, but yea i'll use update thne
[13:36:59] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:37:34] <Repiphany> dict((k, v) for d in list_of_dicts for k, v in d.items())
[13:38:05] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[13:39:02] <deniska> ah, yeah, you can't have more than a single ** in arguments in 2.7, brainfart :)
[13:39:49] *** Quits: Komu (~Komu__@2a02:3033:8:5cd8:40bb:a26b:8df9:ce8f) (Ping timeout: 246 seconds)
[13:40:25] *** Quits: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) (Quit: leaving)
[13:40:46] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[13:40:53] *** Joins: {HD} (~{HD}@102.165.16.92)
[13:42:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:42:28] *** Quits: Jefren2 (~Jefren@70.35.66.94) (Ping timeout: 268 seconds)
[13:43:45] *** Joins: shailangsa (~shailangs@host86-186-142-108.range86-186.btcentralplus.com)
[13:44:27] *** Joins: Jefren2 (~Jefren@70.35.66.89)
[13:45:01] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[13:45:16] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[13:47:14] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 252 seconds)
[13:47:41] *** Parts: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) ()
[13:48:03] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:48:08] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:48:39] <AhmedAmerican> how to ignore capture of group1 here ? https://bpa.st/FNXQ as am expecting output like `['60k', '$1m']`
[13:49:01] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:49:12] *** Joins: zaquest (~notzaques@5.128.210.178)
[13:49:57] <AhmedAmerican> is there a different way than `[i[1] for i in re.findall(r'"(downloads|revenue)":"(.+?)"', r.text)]`
[13:50:02] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[13:50:28] <deniska> AhmedAmerican: re.findall(r'"(?:downloads|revenue)":"(.+?)"', r.text)
[13:50:59] *** Joins: Jefren3 (~Jefren@70.35.66.49)
[13:51:05] <AhmedAmerican> deniska: thank you.
[13:52:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[13:52:52] *** Quits: Jefren2 (~Jefren@70.35.66.89) (Ping timeout: 258 seconds)
[13:53:27] *** Joins: Jefren4 (~Jefren@70.35.66.112)
[13:53:37] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Ping timeout (120 seconds))
[13:53:38] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:54:24] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 258 seconds)
[13:54:25] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[13:54:28] <Luyin> I officially hate everything that has to do with packaging and virtualenvs.
[13:54:36] *** Joins: jay-m126_ (~jay-m@154.72.161.58)
[13:55:30] <iflema> use standard lib
[13:55:34] <nedbat> Luyin: can we help?
[13:56:01] *** Joins: Jefren (~Jefren@208.104.190.55)
[13:56:19] *** Quits: Jefren3 (~Jefren@70.35.66.49) (Ping timeout: 265 seconds)
[13:56:23] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[13:56:30] <Luyin> nedbat: I'm not sure...I think I've scrambled my envs because I'm using too much of it. Or the wrong set.
[13:56:45] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[13:56:49] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[13:57:32] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[13:57:46] *** Quits: computeiro (~Wender@189.37.68.3) (Ping timeout: 265 seconds)
[13:57:54] <Luyin> nedbat: I just tried to install something in my virtualenv via pip (which worked), and then I realised that I've switched to using pipenv, so I ran the same install command with pipenv (first: `pip install pydoctest` and then `pipenv install pydoctest`), and I *thought* pipenv would figure out that it's already installed (the virtualenv pipenv uses is the one from pyenv-virtualenv, which pipenv
[13:57:56] <Luyin> conveniently mentions every time I use a pipenv command), but it seems it's installed twice now.
[13:58:16] <Luyin> inb4 graingert tells me to use pipx
[13:58:20] *** Joins: Jefren1 (~Jefren@70.35.67.10)
[13:58:21] <Luyin> (again)
[13:58:22] <nedbat> Luyin: what makes you say it's installed twice?
[13:58:22] <graingert> use pipx
[13:58:48] <graingert> although I'd actually recommend poetry over pipenv
[13:58:55] <Luyin> lol
[13:59:00] *** Quits: Jefren4 (~Jefren@70.35.66.112) (Ping timeout: 258 seconds)
[14:00:34] <Luyin> https://paste.xinu.at/1VGNu/ there's the output nedbat
[14:00:40] *** Quits: Jefren (~Jefren@208.104.190.55) (Ping timeout: 265 seconds)
[14:00:57] <Luyin> I'm not actually sure it's installed it twice, but I thought it would complain that it's already there, or telling me that it's up to date or something
[14:01:28] *** Joins: Jefren2 (~Jefren@70.35.67.82)
[14:01:38] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 265 seconds)
[14:01:42] <Jefren2> lovely rain
[14:01:57] <nedbat> Luyin: i don't use pipenv, so I don;t know how it would behave. this doesn't look like a failure
[14:02:03] <Luyin> hmmm
[14:02:11] <Luyin> I think I should maybe burn it all and start from scratch XD
[14:02:46] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[14:03:05] *** Quits: Jefren1 (~Jefren@70.35.67.10) (Ping timeout: 252 seconds)
[14:05:15] *** Joins: darksun (~darksun@user/darksun)
[14:05:56] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:06:31] *** Quits: HaMsTeRs (~mx@14-0-227-155.static.pccw-hkt.com) (Ping timeout: 268 seconds)
[14:08:17] <rendar> can i make strptime() to guess the format of the datetime string?
[14:08:22] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 268 seconds)
[14:09:44] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 258 seconds)
[14:10:36] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[14:14:50] <jor> rendar: guess? no, strptime doesn't guess. you can loop and try a couple formats if you want a quick 'guess' logic :/
[14:15:00] <rendar> :(
[14:15:08] <rendar> AttributeError: module 'datetime' has no attribute 'strptime'
[14:15:10] <rendar> also that
[14:15:24] <vladoski> is there a way to obtain everything form a sqlalchemy core select as a dictionary without applying dict() on every row?
[14:15:29] *** Quits: sandeepk (~sandeepk@223.130.30.101) (Ping timeout: 245 seconds)
[14:16:00] <jor> rendar: there are 3th party libs (eg dateutil) that do contain 'guessing' logic
[14:16:14] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[14:16:30] *** Joins: drvanon (~drvanon@compchem10.iwr.uni-heidelberg.de)
[14:16:42] <jor> rendar: strptime is a class method of datetime.datetime
[14:17:46] <rendar> ok
[14:18:04] <Julian> vladoski: what is it you'd want each row to be instead?
[14:18:18] <vladoski> Julian, instead of being a tuple I want them as dict
[14:18:23] <vladoski> I need the column name
[14:18:34] *** Joins: pnoud (~pnoud@user/pnoud)
[14:18:34] <Luyin> graingert: why do you recommend poetry over pipenv?
[14:18:38] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:18:47] <Luyin> isn't pipenv recommended by PYQA or whatever authority?
[14:19:02] <graingert> well
[14:19:03] <vladoski> i want to know if it's possible to do that just one shot instead of doing a list comp. on every row and convert them to dict
[14:19:13] <graingert> that's a political hornets nest if there ever was one Luyin
[14:19:25] <Luyin> yeah, gotta love these
[14:19:36] <Luyin> I just want to build a bloody python package for eff's sake :D
[14:20:23] <graingert> Luyin: there was a bunch of animosity around that whole thing that's mostly resolved now
[14:20:27] <jor> Luyin: should start 'the whatever authority' yourself ;p
[14:20:38] <graingert> but poetry is just a better product imho Luyin
[14:21:00] <rendar> if i have an integer, is pretty simple to add it to some datetime using the timedelta class, so that integer can represent days, minutes or whatever, but what about i don't have a linear timeline?! E.g. i want to exclude Saturdays and Sundays
[14:21:06] <Luyin> graingert: does poetry also use Pipfile?
[14:21:50] <Luyin> also lol, why do I specify python version 3.9.0 in my Pipfile and `pipenv install` just installs everything in a virtualenv with 3.9.6 instead. W H Y
[14:22:15] <graingert> Luyin: it uses pyproject.toml like everything else
[14:22:31] <graingert> Luyin: Pipfile is actually nothing to do with pip
[14:22:41] <Luyin> I thought Pipfile is the "new" requirements.txt
[14:23:10] <graingert> who told you that?
[14:23:24] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[14:23:27] <jor> rendar: again, look at dateutils library, specifically its relativedelta :)
[14:23:29] <Luyin> I think it's what Pipenv says on its website
[14:23:33] <graingert> right
[14:23:56] <graingert> Luyin: can you find any other sources for that claim?
[14:24:41] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[14:25:18] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:25:56] <Luyin> ...
[14:26:00] * Luyin flips table
[14:27:21] <Luyin> graingert: at least it shows up in https://github.com/pypa ( /pipfile )
[14:27:40] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:31:25] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:34:20] *** Quits: pete443_ (~pete@user/pete443) (Quit: Bye.)
[14:35:27] *** Joins: pete443 (~pete443@user/pete443)
[14:36:20] *** Joins: sandeepk (~sandeepk@223.130.30.101)
[14:37:59] *** Joins: Komu (~Komu__@2a02:3037:400:cb47:98f3:957e:a96f:1228)
[14:38:45] *** Joins: death916_lap (~Death916@user/death916)
[14:38:49] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[14:39:04] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:39:10] *** Joins: death916_lap (~Death916@user/death916)
[14:39:12] *** Quits: death916_lap (~Death916@user/death916) (Excess Flood)
[14:39:17] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[14:39:27] <rendar> if i have `a=datetime.timedelta(days=1000)` why a.seconds is 0?! shouldn't that convert 1000 days into seconds?
[14:40:02] <Yhg1s> rendar: nope. there is the total_seconds method, though.
[14:40:49] <rendar> Yhg1s: so, if i subtract 2 datetimes, i get a timedelta, how can i check if that's timedelta is in the order of 1 day, 1 year, or whatever?
[14:40:58] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[14:41:46] *** Quits: gustik (~gustik@2a01:c844:2416:5920:437:26a4:3a9:3895) (Quit: Leaving)
[14:42:10] <Yhg1s> rendar: you can compare it to datetime.timedelta(days=1)
[14:42:25] <Yhg1s> or, you can use total_seconds, like I said.
[14:42:36] <rendar> uhm, ok
[14:42:40] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[14:42:43] *** Joins: thiras (~thiras@user/thiras)
[14:44:06] <Luyin> graingert: I think I'll try to read up the official sources about packaging again and try to follow them step by step
[14:44:10] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[14:44:35] <Luyin> my problem is still that I need to have multiple versions of python, so I guess pyenv and pyenv-virtualenv are still good ideas? but I'm not sure.
[14:45:03] <Yhg1s> virtualenv is still a good idea. pyenv is still a good idea if you want to install specific versions of Python.
[14:45:33] <Yhg1s> pyenv-virtualenv may be convenient depending on your use-case. you can also use virtualenv in other ways, for example through tox or nox.
[14:46:25] <Luyin> I'm using tox, yes, but does that create a virtualenv in which I can run shell commands?
[14:46:35] *** Quits: sandeepk (~sandeepk@223.130.30.101) (Ping timeout: 265 seconds)
[14:46:38] *** Quits: liluzer (~zenix@118.69.128.37) (Quit: Leaving)
[14:48:12] <nedbat> Luyin: tox creates the virtualenvs it needs for its own executions
[14:48:15] <Yhg1s> Luyin: I'm not sure what 'a virtualenv in which I can run shell commands' means.
[14:48:26] <Yhg1s> but you can use the virtualenvs tox created however you can use any virtualenv, sure.
[14:48:47] <Luyin> ok so when I run tox, it creates a new virtenv and runs tests etc in there. so far so good
[14:49:26] <Luyin> but if I want to install a package and use it, I don't do something like "tox install pydocstyle", I install it via "pip install pydocstyle". and when I don't do that in a virtenv, it'll be installed systemwide. Which I don't want.
[14:49:45] <Luyin> and when I want tox to also use this package, I'll add it in pyproject.toml
[14:49:51] <Luyin> correct so far?
[14:50:19] <Yhg1s> Luyin: sure, I guess? I'm not sure what part of that was in doubt.
[14:50:33] <Yhg1s> Luyin: tox isn't a replacement for creating a virtualenv for a thing you want to use outside of testing, really.
[14:50:51] <Yhg1s> (you've heard of pipx, I take it.)
[14:50:56] *** Quits: jay-m126_ (~jay-m@154.72.161.58) (Ping timeout: 265 seconds)
[14:54:09] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[14:57:16] <no_gravity> I wonder why this regex only matches the last "3" and not the whole "1.23" - any ideas? https://www.online-python.com/T32sbFGCiM
[14:57:35] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 255 seconds)
[14:57:56] <Yhg1s> no_gravity: because '*' is greedy, so the '[^\n]*' matches as much as it can while still satisfying the rest of the regular expression.
[14:57:56] <no_gravity> Oh, the greedy *!
[14:58:02] <no_gravity> Yhg1s: Haha, yeah!
[14:58:25] *** Joins: azazello (~azazello@109.75.158.195)
[14:58:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[14:58:54] *** Joins: hafat (~hafat@95.70.168.45)
[15:01:21] <no_gravity> Yhg1s: Thanks!
[15:01:49] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[15:03:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[15:04:18] *** Joins: darksun (~darksun@user/darksun)
[15:05:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:05:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:06:28] *** Joins: jinsun (~quassel@user/jinsun)
[15:07:00] *** Joins: derelict (~derelict@user/derelict)
[15:11:03] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 240 seconds)
[15:11:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[15:14:18] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[15:20:15] *** Joins: lethu (~lethu@196.117.25.100)
[15:21:55] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:4ec5:6765:26be:8e46)
[15:22:40] <Payam> hi
[15:23:04] *** Joins: Jefren3 (~Jefren@70.35.66.206)
[15:25:55] *** Quits: Jefren2 (~Jefren@70.35.67.82) (Ping timeout: 250 seconds)
[15:26:07] *** Joins: Jefren4 (~Jefren@208.104.190.41)
[15:27:37] *** Quits: pr0t07ype (~pr0t07ype@user/pr0t07ype) (Ping timeout: 246 seconds)
[15:27:38] <p-i-_> Suppose I have a dictionary of price-shelves: {price: amount}. I need to add/removee shelves and get the shelf-number of a given price.
[15:27:44] <p-i-_> What's a good object primitive for this?
[15:28:10] <drvanon> If I have a iterator of dictionaries and I want to create two iterators from two different keys in the dictionary, how can I do this smartly? Right now I just consume the whole iterator for the first property and then the generator is empty for the second property. https://gist.github.com/Drvanon/c103f260117f0cda9b1786d5fc920fad
[15:28:27] *** Quits: Jefren3 (~Jefren@70.35.66.206) (Ping timeout: 255 seconds)
[15:28:52] <p-i-_> e.g. I have { 1.1: 120, 1.4: 666, 1.7: 33 } and I may wish to add 1.2: 42, now I will have { 1.1: 120, 1.2: 42, 1.4: 666, 1.7: 33 }
[15:29:32] <p-i-_> And the shelf number for price 1.1 is 0, and for price 1.7 is now 3.
[15:30:52] <drvanon> Would something like {'shelf-id': {'amount': amount, 'price': price}} not be a more clear kind of way to work with this? Not super clear on what you are trying to do, but that is how I would approach it.
[15:31:37] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[15:32:41] <drvanon> Then you could do something like [shelf["amount"] for shelf in shelf.values() if shelf["price"] == your_price ]
[15:32:48] <p-i-_> drvanon: I need to fetch/alter the amount for a shelf of a given price, so I think I want price as key.
[15:32:53] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[15:33:40] <drvanon> Can't that result in collisions if some shelves have the same price?
[15:33:54] <p-i-_> They can't... they would be the same shelf.
[15:35:00] <drvanon> I think I understand your domain insufficiently to give any useful feedback, I am sorry.
[15:35:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[15:36:31] <p-i-_> It's an orderbook for a stockmarket. So in my example, there's 120 coins for sale a $1.10, 666 coins at $1.40, etc.
[15:36:43] <p-i-_> As people place/remove orders, the orderbook shifts.
[15:37:27] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 255 seconds)
[15:38:00] <Yhg1s> p-i-_: it sounds like you may want a collections.Counter, but you certainly do not want to use floats as keys.
[15:38:59] *** Joins: akinode (~akinode@2a02:908:13d4:b2c0:c59d:54d6:331e:1b29)
[15:39:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:39:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:39:48] <akinode> hello, I am trying to create a documentation website using sphinx and have a question concerning the use of custom directives. Does anyone here happen to have experience with this? https://stackoverflow.com/questions/68450239/nested-custom-directives-in-sphinx
[15:40:48] *** Joins: timkofu (~timkofu@user/timkofu)
[15:40:52] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 268 seconds)
[15:41:07] <dba> is there package that can convert a dict or json into a meaningful table in a database?
[15:41:19] *** Quits: Komu (~Komu__@2a02:3037:400:cb47:98f3:957e:a96f:1228) (Ping timeout: 240 seconds)
[15:41:25] <ttkap> pandas.DataFrame
[15:41:34] *** Joins: Kingsy (~chris@kingsy.co.uk)
[15:42:11] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[15:42:32] <dba> ttkap. I tried that but I am getting this error message ValueError: Mixing dicts with non-Series may lead to ambiguous ordering.
[15:42:33] <ttkap> for dict i mean
[15:43:14] <timkofu> dba: which database driver?
[15:44:03] <dba> timkofu, any one that can do the job. I am not restricted to any right now
[15:44:08] <Kingsy> I am getting this error -> Retrying object has no attribute call <- from a pip package - jsonapi-requests, the error froms from this line -> return self.retrying.call(self._request, url, method, **kwargs) <- where self.retrying is a class that contains -> def __call__ <- does anyone have any thoughts on where I might look on this one? It feels like its something / an error I cant control. It happened after
[15:44:14] <Kingsy> a pip install BUT weirdly I havent upgraded anything. so all the version numbers have stayed the same.
[15:44:19] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[15:44:40] <Yhg1s> Kingsy: '__call__' is not 'call'.
[15:44:52] <Yhg1s> Kingsy: perhaps you're looking for 'self.retrying(...)'
[15:45:04] <Kingsy> I agree.. but something weird has changed.
[15:45:24] <Yhg1s> Kingsy: I'm afraid the description is a little vague. Can you just pastebin code and output?
[15:45:33] <timkofu> dba: insert(**dict) or equivalent would convert the keys into attr names and the values into attr values which with the attr names being column names
[15:45:46] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[15:46:00] <Kingsy> Yhg1s: its jsut a package. ermm I can link it moment.
[15:46:19] <Luyin> Yhg1s: yeah, heard about it
[15:46:22] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[15:46:47] <Kingsy> Yhg1s: https://github.com/socialwifi/jsonapi-requests/blob/master/jsonapi_requests/request_factory.py#L34
[15:47:11] <Kingsy> so self.retrying returns -> return tenacity.Retrying(
[15:47:31] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:48:00] <Yhg1s> Kingsy: I'm not sure what you're asking for, sorry. The specific problem you asked about is caused by 'call' and '__call__' being very different names.
[15:48:19] <Yhg1s> Kingsy: are you saying you're trying to run some code, and it's failing in that way, even though it wasn't failing before?
[15:49:05] <Kingsy> Yhg1s: what I am asking is. for me it seems lioke this package is fundementally broken.. amd I suppose I wanted to someone to validate that. weirdly though this package was working. and after a pip install its broken
[15:49:20] <Kingsy> Yhg1s: so I was hoping you could look at the code there and tell me if I am correct.
[15:49:54] <Yhg1s> Kingsy: About what? What did you pip install? Did you upgrade anything? It's certainly possible that the Retrying class gained or lost a 'call' method.
[15:50:23] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[15:50:44] *** Joins: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br)
[15:51:43] *** Joins: zeden (~zeden@user/zeden)
[15:52:59] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1009) (Remote host closed the connection)
[15:53:00] <jinsun> Kingsy: https://tenacity.readthedocs.io/en/latest/changelog.html here it says they removed .calll in version 8.0.0, so probably you upgraded to that version and that other package didn't update to support this
[15:53:14] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[15:53:22] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1009)
[15:54:23] *** Quits: gitly (~gitly@185.69.145.24) (Ping timeout: 258 seconds)
[15:57:59] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[15:58:10] <Kingsy> Yhg1s: I didnt upgrade anything weirdly..
[15:58:26] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[15:59:05] <Kingsy> ahhhh!!! well would you look at that.
[15:59:19] *** Quits: Alex123 (~Adium@2603-8000-db03-afbf-cc47-a7d8-568f-b694.res6.spectrum.com) (Quit: Leaving.)
[16:02:52] <drvanon> *The plot thickens
[16:03:31] <Kingsy> jinsun: thankyou for spotting that! I should have known to check the rerquirements of the module.
[16:04:01] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 246 seconds)
[16:04:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[16:04:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[16:06:26] *** Quits: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br) (Ping timeout: 255 seconds)
[16:07:04] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:08:09] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:09:55] <Kingsy> Yhg1s: thankyou for answering and taking a look for me
[16:10:16] <Kingsy> adding tenacity==7.0.0 fixed my problem
[16:10:30] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[16:12:53] *** Quits: lethu (~lethu@196.117.25.100) (Quit: Quit())
[16:12:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[16:14:56] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[16:15:07] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[16:17:19] *** Joins: madprops (hj8oijo@user/madprops)
[16:17:37] <madprops> I'm trying to sort a list of dicts by considering 3 properties
[16:17:45] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[16:18:03] <madprops> https://bpa.st/O3GQ
[16:18:14] <madprops> but I'm having problems with the last line
[16:18:26] <madprops> I think it's messing the order
[16:18:42] <madprops> any idea?
[16:19:01] <grawity> are you calling .sort() in the correct order
[16:19:29] <Ninpo> Kingsy: just FYI a better constraint would probably be tenacity>=7.0.0,<8.0.0
[16:19:37] <madprops> acc(uracy) should be the top priority, then level, then length of path
[16:19:38] <Ninpo> until you fix the api break
[16:19:59] <grawity> when calling .sort() multiple times, I think you generally want to do it from least-important criteria first, to most-important criteria last
[16:20:07] <madprops> ohh
[16:20:56] *** Joins: Jefren (~Jefren@206.253.157.232)
[16:21:15] <grawity> because each new .sort() doesn't know that the items were already sorted by a more important rule and shouldn't be separated again -- but it is a stable sort so it *will* keep the relative order of the less important rules if you do them first
[16:21:17] *** Joins: pnoud (~pnoud@user/pnoud)
[16:21:28] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[16:21:39] <madprops> thanks
[16:21:58] <grawity> if you didn't have the reverse=True, I'd probably have used one sort(key=lambda x: (x["acc"], x["level"], len(x["path"]))), but I'm not sure how to reverse that properly
[16:22:11] <grawity> (I guess just make -x["acc"] negative?)
[16:22:38] *** Quits: Jefren4 (~Jefren@208.104.190.41) (Ping timeout: 255 seconds)
[16:22:41] *** Joins: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br)
[16:24:51] *** Joins: Jefren1 (~Jefren@70.35.67.157)
[16:26:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[16:26:23] *** Joins: shad (~shad@user/shad)
[16:26:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:27:08] *** Quits: Jefren (~Jefren@206.253.157.232) (Ping timeout: 255 seconds)
[16:28:49] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[16:32:02] *** Joins: nyah (~nyah@90.221.186.180)
[16:34:23] *** Joins: Jefren2 (~Jefren@70.35.67.39)
[16:35:43] *** Joins: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e)
[16:35:58] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:08] *** Quits: Jefren1 (~Jefren@70.35.67.157) (Ping timeout: 255 seconds)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:36:57] *** Joins: shtrb (~shtrb@user/shtrb)
[16:37:26] <roelj> So, I have created a Python package, but when installing it with "pip install ." it seems to only put a <package-name>.egg-info directory in the "site-packages" directory. Is there something obvious I may be missing?
[16:37:29] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Ping timeout: 255 seconds)
[16:38:04] <bjs> roelj: did you actually use -e/--editable ?
[16:38:26] <roelj> bjs: Uhh no.. Should I?
[16:38:49] <bjs> roelj: no,  what exactly is the Python package? Does it have a setup.py?
[16:38:55] <Yhg1s> roelj: did you remember to list all the correct things in your setup.py or pyproject.toml file?
[16:39:47] <roelj> I used a setup.cfg file, and then a setup.py that invokes setuptools.setup().
[16:40:48] <shtrb> SnoopJ, If I would get the android installer for the Lego mindstorm IDE should I be able to extract their python libraries and push it to micropython device from a ampy or it would not work ?
[16:42:13] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 252 seconds)
[16:42:16] <shtrb> because people using the android app seem to be writing in python ^TM inside the mindstorm python IDE , and using that library but I wounder if that is pushed somehow to the device or converted to some blob and then pushed
[16:42:30] <roelj> Yhg1s: What should I list in setup.cfg and pyproject.toml? The latter only contains a "requires" and "build-backend" under "build-system", and the former contains an entry point for a console script, some package metadata, and an "install_requires".
[16:42:33] <Yhg1s> roelj: can you share the setup.cfg file?
[16:42:38] *** Quits: drvanon (~drvanon@compchem10.iwr.uni-heidelberg.de) (Quit: Client closed)
[16:43:06] <Yhg1s> roelj: it sounds like you forgot to list the package itself in the setup.cfg file
[16:43:25] <roelj> Yhg1s: https://bpa.st/WL7Q
[16:43:46] <roelj> Yhg1s: Oh, so should I include my package name under "install_requires"?
[16:43:55] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 250 seconds)
[16:44:32] <Yhg1s> roelj: no, because your setup.cfg is how you define what to install from your package. You need 'packages = find:' in your 'options' section.
[16:44:50] <Yhg1s> (that will make setuptools find all packages in your source tree)
[16:45:03] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[16:45:43] <roelj> Yhg1s: Aha! Thanks a lot!
[16:46:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[16:46:59] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Quit: Good bye everyone!)
[16:47:10] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[16:47:21] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[16:47:36] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Read error: Connection reset by peer)
[16:47:55] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[16:48:03] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[16:48:14] <roelj> Yhg1s: .. and now it works as expected. Thank you!
[16:48:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:49:29] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05)
[16:49:29] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e05) (Client Quit)
[16:49:45] *** Joins: minip (minip@user/minip)
[16:50:14] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[16:50:18] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f245)
[16:52:46] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[16:54:33] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Quit: Leaving)
[16:54:40] *** Joins: vassen (~vassen@188.170.174.59)
[16:54:47] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:1dd8:59e9:1c54:8960) (Ping timeout: 252 seconds)
[16:56:46] *** Quits: byzandula (~byzandula@beerbq.net) (Quit: poof)
[16:59:43] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[16:59:54] <madprops> What's the correct way to do: file = open(filepath, "r+")
[16:59:58] <madprops> when the file may not exist?
[17:00:43] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 246 seconds)
[17:00:54] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[17:01:06] <nedbat> madprops: what do you want to happen if the file doesn't exist?
[17:01:14] <madprops> to create the file
[17:01:20] <madprops> before reading it
[17:01:31] <madprops> an empty file
[17:01:46] <entuland> just check if the open failed and create it as you require
[17:02:53] *** Joins: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[17:02:59] <madprops> I'm gonna use touch from pathlib import Path
[17:03:04] <madprops> seems cleaner
[17:03:09] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:04:05] <entuland> ok
[17:04:47] *** Joins: Core9771 (~watcher@32.sub-174-215-189.myvzw.com)
[17:04:48] *** Joins: finsternis (~X@23.226.237.192)
[17:04:53] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[17:06:10] *** Core9771 is now known as Jefren
[17:07:23] <entuland> you'll have to check whether touching was successful anyways unless you're happy with your code throwing and exiting or something, but doesn't really make any difference
[17:07:34] <entuland> if you want to fail gracefully, somewhere you'll have to handle that
[17:07:50] *** Joins: dez (uid92154@user/dez)
[17:07:58] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:10:33] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[17:10:36] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[17:11:12] <dba> I have a dict inside a string, how doI convert it into dict '{" id": 123, "Name": Admin}' ?
[17:11:55] <dba> I tried dict('{" id": 123, "Name": Admin}') but I get this error ValueError: dictionary update sequence element #0 has length 1; 2 is required
[17:12:14] <Yhg1s> dba: is it JSON? It looks like JSON.
[17:12:53] <entuland> it's weird, is that a true copypasted?
[17:13:29] <dba> Yhg1s, yes
[17:13:40] <entuland> seems missing quotes around "Admin" as the very least
[17:13:41] <Luyin> dba: import json; my_dict = json.reads(your_string)
[17:13:47] <Luyin> from the top of my head
[17:14:05] *** Joins: mcope (~matt@user/mcope)
[17:14:28] <rendar> let's say i have a start date and an end date, i want N grid lines into that range, so i divide (end-start)/N, but what is the most effective way to align that timedelta to some human readable time span? e.g. 1 month, 2 months, 1 quarter, 0.5 years, 1 year
[17:14:30] <rendar> ?
[17:15:55] <dba> Luyin, it is a query (json format) but when I receive it I receive it as string, for easy parsing/getting the key I want to convert it to dict
[17:17:08] <Luyin> dba: sorry, it was loads not reads: https://docs.python.org/3/library/json.html, search "Decoding JSON"
[17:17:21] <Luyin> it turns it into a dict for you
[17:17:37] <Luyin> or rather, either a list or a dict, depending on the json coming as a string
[17:17:39] <entuland> rendar, are you using some library that helps you actually handling the dates and spans? you may not want to mess with week days, months durations and so forth yourself
[17:18:08] <rendar> i'm not using it
[17:18:31] <entuland> then you may want to look into it, even just handling leap years is a nuisance to reinvent
[17:19:01] <dba> Luyin, Thanks
[17:19:02] <Luyin> also why reinvent? (https://www.python.org/dev/peps/pep-0020/)
[17:19:29] <rendar> entuland: but i don't need those stuff
[17:19:35] <rendar> i only need to divide a time span
[17:19:43] <entuland> well, you know better than I could
[17:19:52] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:19:53] <entuland> but you'll have to know if February has 28 or 29 days I guess
[17:20:16] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:20:29] <entuland> how are your dates represented in your code / data?
[17:20:43] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[17:21:00] <rendar> i don't need actually to know that, dates are strings
[17:22:14] <entuland> so you're handling full months without caring about their length and without showing individual days?
[17:22:19] <odinsbane> "today", "tomorrow", "some time next week"
[17:22:24] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[17:22:26] <rendar> entuland: yes
[17:22:29] *** Joins: magla (~gelignite@55d4334d.access.ecotel.net)
[17:22:39] *** Joins: derelict (~derelict@user/derelict)
[17:23:14] <entuland> okay, then you may want to explain better how you want to display the data to the end user
[17:23:27] <entuland> so that we can chip in about how to align it
[17:23:40] <entuland> you can make an example for us to see
[17:23:52] <odinsbane> rendar: What about your "N" is that fixed, or is that why you want to change, so the grid lines are easier to read?
[17:23:54] <rendar> entuland: the example is a chart which draws a grid every month
[17:24:08] <entuland> do you have the library that renders the graph already?
[17:24:19] <rendar> N means i want 10 grid lines in my chart
[17:24:24] <rendar> entuland: yes of course
[17:24:45] <entuland> okay, then just extract the month and year from the dates, and compute the values
[17:24:57] *** Joins: pnoud (~pnoud@user/pnoud)
[17:25:01] <entuland> if you have 10 months, you want 9 vertical lines in the middle and 2 at the ends, or something
[17:25:14] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 258 seconds)
[17:25:15] *** Quits: akinode (~akinode@2a02:908:13d4:b2c0:c59d:54d6:331e:1b29) (Quit: Client closed)
[17:25:17] *** Joins: drogas (~drogas@jump2.jet.uk)
[17:25:29] <rendar> i got that also before asking here for help...
[17:25:53] <entuland> so far I can't tell if the problem is the math or the code to achieve that or what exactly
[17:26:00] <dba> How do I replace ' with " and vise versa in a dict?
[17:26:08] <entuland> if you share your code and sample data it may help
[17:26:31] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[17:26:33] <nubonix> alright! looking for some more pyqt5 help :D here is the code: https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad  [there are tons of errors, mistakes, and things i should fix, but for now i want to prioritize elsewhere]. Currently im able to schedule jobs using apscheduler, but i cant seem to start / stop them via qthreads, because i dont know how to send the self.qtscheduler to the thread and was hoping for some
[17:26:33] <nubonix> help!
[17:27:23] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[17:27:39] *** Joins: dob1 (~dob1@user/dob1)
[17:27:42] <nubonix> homepage.py handles the threads, while app handles the scheduler [homepage does as well, but i havent figured out how to only schedule once...]
[17:27:43] <AhmedAmerican> ðŸ¤£ how to tell python to give `help()` for raw string `r`?
[17:27:59] <nedbat> dba: that's an unusual requirement, can you say more about it? You have strings in the values in your dict, with quotes in the strings?
[17:28:27] <nubonix> nedbat it is probably b/c of json
[17:28:41] <nubonix> just a wild guess tho
[17:28:49] <Luyin> insufficient data for meaningful answer :)
[17:29:10] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[17:29:12] <dba> my_dict = {'key1': 'value1', 'key2': 'value2'} This is how I get the data when loading a json file. how do I load it like {"key1": "value1", "key2":"value2"}). the reason for this requirement is that my backend app for some reason does not understand requests being sent with ' instead of "
[17:29:22] *** Quits: Jefren (~watcher@32.sub-174-215-189.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[17:29:40] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 268 seconds)
[17:29:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[17:30:00] <nubonix> dba yes, its b/c "" is valid json while ' is not [i think, could be vice versa idk]
[17:30:11] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[17:30:21] <nubonix> i cant remember which it is*
[17:30:27] <entuland> dba, it depends on how you're sending it to your backend - from the code's point of view, using single quotes vs double shouldn't make any difference
[17:30:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:30:47] <entuland> if you're sending JSON, using the JSON facility to convert your dict to JSON should do the right thing right away
[17:30:52] <nubonix> entuland: na, ive had this problem before, just not the same way he is
[17:31:10] <nubonix> ^
[17:31:24] <nubonix> dba do you have access to the backend?
[17:31:39] <dba> nubonix, yes
[17:31:45] <nubonix> then get it right the first time :D
[17:31:59] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[17:32:13] <nubonix> dba ask yourself, does this seem silly? if so, this probably isnt the way of doing it
[17:32:29] <nubonix> dw, im not so good at this myself
[17:32:42] <dba> nubonix, lol...I guess this one fall  in the cracks
[17:32:44] <nubonix> literly here almost everyday just for the faceplams
[17:32:51] <nubonix> :D
[17:33:07] <entuland> dba, may help if you share the code that prepares the data to be sent over, and the code that reads it on the backend
[17:33:15] <entuland> just the relevant parts
[17:33:29] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:33:46] *** Joins: xkuru (~xkuru@user/xkuru)
[17:33:50] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:34:06] *** Quits: devast (uid508308@id-508308.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:23] <nedbat> dba: what is generating the invalid json?
[17:34:27] <entuland> if your code sends valid JSON and the backend is supposed to read valid JSON, then I think the problem is somewhere else, and not on the single vs double quotes itself
[17:35:40] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[17:35:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:36:42] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 255 seconds)
[17:36:58] <dba> entuland, the backend expect a json over an HTTP request. and I am doing the same thing through generating the JSON from a json file wiht json.loads
[17:37:39] <nedbat> dba: is it your code that generates the dict with single quotes?
[17:37:45] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[17:37:57] *** Quits: maxtimbo (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Quit: Gotta Go -- Peas)
[17:37:59] <nubonix> dba why .loads instead of .load?
[17:38:19] <dba> nedbat, yes
[17:38:27] <nedbat> dba: can you link us to that code?
[17:38:49] <Luyin> nedbat: that was me suggesting it, because dba said they're getting a *string*
[17:38:50] <nubonix> dba also, the reason i was being so hard on you was because this mistake could snowball later [having to fix it everywhere you read a json file instead of doing it once to start]
[17:39:04] <nedbat> Luyin: sorry, suggesting what?
[17:39:19] <Luyin> nedbat: suggesting loads instead of load.
[17:39:25] <Luyin> oh sorry, nubonix
[17:39:31] <Luyin> nedbat: ignore me
[17:39:36] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:39:49] <nubonix> Luyin: ah didnt know its a string
[17:39:58] <nubonix> Luyin: imo .loads spells trouble
[17:40:01] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:40:52] *** Joins: pacbard (~pacbard@user/pacbard)
[17:41:04] * Luyin shrugs
[17:41:08] <Luyin> can't change that :P
[17:41:14] <Luyin> sometimes you do get a string
[17:41:22] <nedbat> i'd like to see the code before suggesting changes
[17:41:52] <entuland> dba, if you want help with that you really need to show the code that is sending the data to the backend or explain better, cause somewhere there it seems to me that you're acting on the backend trying to "fake" the receipt of such JSON data or something
[17:42:27] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:42:31] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:42:35] <dba> nedbat, entuland, I am trying to get the code
[17:42:40] <entuland> ok
[17:42:54] <nubonix> graingert are you available?
[17:42:59] <entuland> make sure you clarify whether that code is running on the backend or the frontend
[17:43:00] *** Joins: pnoud (~pnoud@user/pnoud)
[17:43:09] <graingert> ?
[17:43:26] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[17:43:43] <nubonix> graingert can i have you scroll up a bit for my pyqt5 question?
[17:43:48] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[17:43:48] <graingert> qtrio!
[17:43:55] <graingert> https://github.com/agronholm/apscheduler supports anyio right?
[17:44:00] <nubonix> yes
[17:44:11] <agronholm> no
[17:44:13] <nubonix> atm im using qasync
[17:44:30] <agronholm> anyio support is in the works (in the master branch) but there is no release yet
[17:44:47] *** Joins: Jefren (~Jefren@32.sub-174-215-189.myvzw.com)
[17:45:17] <nubonix> hmm
[17:45:29] <nubonix> doesnt asyncioscheduler use anyio tho?
[17:47:25] <nubonix> graingert my apologies
[17:47:58] <graingert> nubonix: I don't maintain qasync I just touched it last ;)
[17:48:13] <nubonix> graingert :P ye i saw you contributed so :D
[17:48:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[17:48:40] <agronholm> nubonix: no
[17:48:42] <nubonix> isnt really a apscheduler question though, seems to work fine for what im doing
[17:49:01] <nubonix> morof a pyqt5 question
[17:49:06] <nubonix> more-of*
[17:49:13] <nubonix> agronholm: ?
[17:49:34] <agronholm> re: "doesnt asyncioscheduler use anyio tho?"
[17:49:44] <nubonix> agronholm: my other comment was in agreement with you
[17:49:53] <nubonix> my later* comment
[17:49:58] *** Joins: ali1234 (~al@user/ali1234)
[17:50:08] <nubonix> re: my apologies
[17:50:16] <agronholm> ok
[17:50:44] *** Joins: Achylles (~Achylles_@2804:431:d725:8cf8:e8fe:55a9:bf01:59e9)
[17:52:54] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:06] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[17:53:08] *** Joins: paravida (~myChateau@user/paravida)
[17:54:40] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Ping timeout: 256 seconds)
[17:56:03] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:56:09] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:1dd8:59e9:1c54:8960)
[17:56:21] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[17:56:39] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[17:57:00] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[17:57:07] <shtrb> How do normally libraries or modules arrive to micropython installations ?
[17:57:13] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:57:23] *** Joins: trace (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[17:57:25] *** Quits: Jefren (~Jefren@32.sub-174-215-189.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[17:57:42] *** Quits: trace (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:57:43] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:59:24] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[17:59:43] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:00:54] *** Quits: doev (~doev@mobile.bpv-consult.net) (Ping timeout: 246 seconds)
[18:01:07] <dba> nedbat, entuland, here is my code that generate the json and make the request https://bpa.st/MH2Q
[18:01:57] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[18:02:17] <nedbat> dba: i'm surprised that code would send the dict you showed with single quotes.
[18:03:43] *** Quits: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br) (Remote host closed the connection)
[18:03:59] <dba> nedbat, why is that so?
[18:04:03] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[18:04:30] <nedbat> dba: because you are doing it right:  providing a dict to requests.post.  Are you sure that accurately represents the code you are running?
[18:04:41] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:04:54] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[18:04:58] <nedbat> dba: can you show us that code that you used to see the single quotes?
[18:06:00] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:06:14] <altendky> nubonix: maybe you can make a minimal example of the part that you are having trouble with.  or, stop using threads.
[18:06:44] <nubonix> altendky: havent a clue how to stop using threads tbh
[18:07:04] *** Joins: Payam (~Payam@138.106.57.132)
[18:07:14] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[18:07:15] <nubonix> altendky: i can show you the relevant lines, but making a minimum example, im not sure
[18:07:41] <nubonix> i can show the relevant lines*
[18:07:51] *** Joins: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br)
[18:09:59] <SnoopJ> shtrb, my guess it that it would be a firmware flash of a blob
[18:10:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[18:10:16] <dba> nedbat, for some reason json=json.dumps(variables) fixed it. now the server is getting the json with double quotes
[18:10:20] <shtrb> Oh $#^#$^
[18:10:53] *** Quits: vassen (~vassen@188.170.174.59) (Read error: Connection reset by peer)
[18:10:54] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 255 seconds)
[18:11:09] *** Joins: vassen (~vassen@188.170.174.59)
[18:11:22] *** Joins: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster)
[18:11:26] <nubonix> altendky: the problem resides here https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad#file-homepage-py-L597
[18:11:59] <nubonix> idk how to get self.qtscheduler from app.py when this is calling the self.qtscheduler from homepage.py
[18:12:00] <nedbat> dba: tbh, that doesn't seem like the right thing to do, but ok.
[18:12:43] <nubonix> dba nedbat is one of more experienced users here, if they say its correct, 99.9% chance it is and you are wrong, myself included
[18:12:55] <nedbat> dba: do you also control the server code that is accepting this post?
[18:12:56] <altendky> nubonix: does your issue relate to walmart, best buy, or target?
[18:13:14] <altendky> or opening a browser thread?
[18:13:22] <nubonix> altendky: no, those dont exist, its just leftover code from the project i stole the  frontend from
[18:13:29] <nubonix> nor does the browser thread
[18:13:34] <SnoopJ> shtrb, if they're using MicroPython's .mpy format and it only uses symbols exposed by the MicroPython already on your device, that's as far as I know the only case in which you'd be able to dynamically load something.
[18:13:36] <altendky> nubonix: ok.  so delete all the stuff that doesn't relate to this issue
[18:13:49] <nubonix> altendky: ok, gemme few mins
[18:13:49] <altendky> i'm guessing you can delete most of the file for this
[18:13:50] <shtrb> ouf
[18:13:54] <nubonix> altendky: yes
[18:14:06] <shtrb> thanks SnoopJ
[18:15:30] *** Joins: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com)
[18:15:39] *** Quits: tims (~tims@220-245-254-151.static.tpgi.com.au) (Ping timeout: 268 seconds)
[18:17:58] <Payam> Ø§Ù‡ Ù„Ø¹ØºØ³
[18:18:01] <Payam> hi guys
[18:18:39] <dba> nedbat, not really but I am going to report this bug to the backend engineer and investigate it with him.
[18:18:49] <Payam> I am using the aiohttp and can not get through the proxy. When using the requests library I don't need to do anything but aiohttp gets stucked and doesn't return anything
[18:18:59] <nedbat> dba: if you can pastebin some of that code, we can take a look
[18:19:00] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:19:05] <dba> Thank you all for the amazing support
[18:20:08] *** Joins: gggp (~gggp@60.10.194.43)
[18:20:25] <nubonix> altendky: alright, should be updated to reflect relevant code
[18:20:46] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[18:21:17] *** Quits: gggp (~gggp@60.10.194.43) (Read error: Connection reset by peer)
[18:21:36] *** Joins: gggp (~gggp@60.10.194.43)
[18:21:44] <altendky> nubonix: your issue relates to all these imports?  https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad#file-app-py-L13-L40  or are they not needed?
[18:22:01] <nubonix> altendky: should be the only thing not needed
[18:22:03] *** Quits: Achylles (~Achylles_@2804:431:d725:8cf8:e8fe:55a9:bf01:59e9) (Quit: Leaving)
[18:22:26] <nubonix> altendky: wasnt sure if anyone needed a reference to where i was getting something, and if so could look at the imports and ask about it
[18:22:27] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[18:22:53] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[18:23:03] <nubonix> suchas `from utils.scheduling.schedule_bot_account_jobs import ScheduleBotAccountJobs`
[18:23:13] *** Joins: upsala (~zcb@185.213.155.160)
[18:23:19] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:23:58] <altendky> nubonix: yes, if `ScheduleBotAccountJobs` is critical to the specific issue you have now, then it should be there.  but i thought you were having a thread scheduling issue.  which doesn't seem like it would relate to `globalStyles`, `SettingsPage`, etc.
[18:24:16] *** Quits: Mikro (leo@the.punkrock.show) (Ping timeout: 258 seconds)
[18:24:30] <altendky> nubonix: do you really need to replace `sys.excepthook` with an exact duplicate to recreate the issue you are asking about?
[18:24:38] <nubonix> altendky: okay, ill clean it further, ScheduleBotAccountJobs file does relate to the problem, but its not doing anything besides using the qtscheduler and adding a job given params
[18:25:00] <nubonix> altendky: tbh idk what that does, leftover from the other project
[18:25:02] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 265 seconds)
[18:25:05] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:25:37] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[18:25:48] <altendky> nubonix: i would generally expect that a thread/task-scheduling issue might not even involve any gui at all.
[18:26:32] <nubonix> altendky: im not using the standard library threading though
[18:26:42] <altendky> nubonix: qt doesn't mandate a gui
[18:28:26] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[18:28:27] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Ping timeout: 255 seconds)
[18:29:29] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[18:29:53] *** Joins: jinsun (~quassel@user/jinsun)
[18:31:26] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-69c6-2ab9-fc09-88f5.res6.spectrum.com)
[18:31:31] *** Quits: vassen (~vassen@188.170.174.59) (Quit: Best wishes!)
[18:32:26] <nubonix> altendky: hmm never knew, but i guess it makes sense now that you mention it
[18:32:27] *** Joins: shad (~shad@user/shad)
[18:32:44] <nubonix> altendky: alright, so heres the bare minimum example ik how to provide https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad
[18:34:08] <altendky> nubonix: what is the output and which part of the output do you want to be different?
[18:34:17] *** Joins: eagleOne (~eramirez@2001:4453:3ee:a900:7b50:f857:fa7b:fed8)
[18:34:47] *** Joins: gggp_ (~gggp@123.113.186.67)
[18:34:56] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 255 seconds)
[18:34:56] *** Quits: gggp (~gggp@60.10.194.43) (Killed (NickServ (GHOST command used by gggp_!~gggp@123.113.186.67)))
[18:34:58] *** gggp_ is now known as gggp
[18:35:11] <altendky> nubonix: what's all this `hasattr` about?  https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad#file-app-py-L42-L44
[18:35:18] <nubonix> altendky: not sure what you mean by that. currently when i press the start button on the gui, it starts a qthread, and this thread is supposed to start a job within the scheduler, as all jobs are paused by my default setting
[18:36:08] <nubonix> altendky: it has to do with qasync, and since asyncioscheduler needs async, i left it there, as i dont fully understand what the code does [hasattr/getattr]
[18:36:15] <altendky> nubonix: having print statements in the code and output from them helps to share what is happening.  then you generally either point out a print out that you think shouldn't happen, or one that should but doesn't, to help quickly understand the relevant code path.
[18:36:43] <altendky> nubonix: in what case is `aboutToQuit` not present as an attribute of the `QApplication` instance?
[18:36:50] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Quit: Falcon|)
[18:36:52] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[18:37:03] <nubonix> altendky: ask graingert
[18:37:19] <nubonix> well, the authors of qasync
[18:37:29] <nubonix> maintainers*
[18:37:33] <graingert> ?
[18:37:38] <nubonix> graingert mb soz
[18:38:14] <altendky> i guess you nabbed it from https://github.com/CabbageDevelopment/qasync/blob/2a6f0b0a2fc5692b34177120a436aa51581ee3ab/examples/aiohttp_fetch.py#L82-L84
[18:38:18] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[18:38:48] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[18:39:29] <nubonix> yes
[18:39:43] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:40:10] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[18:40:16] <nubonix> altendky: here is the traceback of whats going on currently, obv the line number is incorrect https://bpa.st/BTSQ
[18:40:35] <nubonix> well, incorrect in relationship to the current gist
[18:40:41] <altendky> nubonix: why would the line number be incorrect?  because you haven't actually run your reduced example?
[18:41:04] <nubonix> altendky: i have not reduced the code in my project, correct
[18:41:20] <altendky> nubonix: the first point here is that if you get rid of all the unrelated stuff then you can yourself better see what is going on and perhaps resolve your own issue.
[18:41:31] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[18:41:39] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[18:41:49] <altendky> nubonix: not that you randomly delete a bunch of code and don't run the result then ask for help with that presumably entirely broken code.
[18:42:24] <nubonix> altendky: i was under the impression you wanted me to delete code to skim it faster
[18:43:39] <altendky> nubonix: no, i wanted you to delete irrelevant code so that the relevant code was obvious.  first to you.  then if you still can't figure it out, it will be good for others to help as well.  http://sscce.org/ is one of the references for this procedure.
[18:44:09] <nubonix> altendky: in the past ive been asked to provide the entire code, so thats what i did
[18:44:39] <nubonix> altendky: anyways, i appreciate the help, but i think ill look elsewhere
[18:44:41] <altendky> nubonix: but either way, when you delete some code you think is not relevant you should then run the code you have left and confirm it still exhibits the same issue you are trying to debug.  and you keep deleting code until there's nothing left to delete and but your issue is still present.
[18:44:58] <altendky> nubonix: yes, providing the entire original code and the reduced example can be nice.
[18:45:00] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[18:45:48] <altendky> nubonix: but following the process will get you answers much more quickly.  either by you figuring them out without waiting for someone else, or by someone else being able to immediately see what you are having trouble with.
[18:46:15] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[18:46:29] <SnoopJ> altendky, out of curiosity, how did that tp_mro cantrip work out for you?
[18:47:00] <altendky> SnoopJ: it ran, walking the mro did find the other signals but didn't resolve the underlying issue.  but i need to get back to poking at that some more.
[18:47:24] <SnoopJ> neat. I hadn't really read the issue but wanted to know since it was a stone-cold guess on my part
[18:47:31] <altendky> i certainly didn't do any rigorous poking and my brain was a bit not-so-great by that time of night.
[18:48:33] <nubonix> altendky: you are right, i probably dont need threads, but i need some sort of concurrency, as there are sets of tasks that run independently from each other, and these tasks need to be started via a button, and stopped via another button.
[18:48:52] <nubonix> independently and at the same time
[18:49:06] <altendky> nubonix: i wasn't even commenting on threads or not at this point
[18:49:33] <nubonix> altendky: yes i understand, you were having me reduce code to make it easier on myself and everyone involved to help
[18:50:17] <altendky> but yeah, using both qasync and threads ought generally only be done if you really have a blocking api you need to use.  and even then, you would generally want to bury it behind the async/await threading features, not qt threads.
[18:50:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 255 seconds)
[18:51:11] <altendky> at this point i don't even know what lines of code execute and which don't.  `print()`s and the application output help make this immediately apparent.
[18:53:00] <nubonix> altendky: i sent the output a bit earlier, it cant find self.qtscheduler in homepage.py because its only instantiated in app.py
[18:53:17] <nubonix> and im not passing it to homepage.py
[18:53:39] <altendky> sounds like something that has nothing to do with qt or scheduling or async
[18:53:49] <altendky> just whether an object gets somewhere or not
[18:54:12] *** Quits: gggp (~gggp@123.113.186.67) (Ping timeout: 252 seconds)
[18:54:15] <nubonix> doesnt have to do with scheduling, but i think it does with async
[18:54:21] <nubonix> could be xy problem though
[18:54:33] <nubonix> [involving the async part]
[18:55:23] *** Quits: shtrb (~shtrb@user/shtrb) (Quit: Leaving)
[18:55:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:56:15] <nubonix> altendky: hmm, you are right, i need more of an idea of what the problem is before continuing i think
[18:56:26] <nubonix> [on a code level]
[18:56:32] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf)
[18:57:12] <nubonix> guess the first question i could ask is if AsyncIOScheduler supports starting jobs asnychronously
[18:58:00] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:58:10] *** Joins: akk (~akk@75.161.155.222)
[18:58:14] <nubonix> reason being: decides if i need threads or not
[18:58:18] <altendky> nubonix: https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad#file-homepage-py-L103 so you reference that there but didn't ever assign `.qtscheduler` as an attribute on the thread instance.  though there's no point in this being a qthread i don't think.  you override run and don't start the event loop.
[18:58:25] <altendky> i mean, i would think an async scheduler would be async
[18:59:27] <altendky> https://gist.github.com/nubonics/3a8bb786db3ffeb0ce5088f3c0d7acad#file-homepage-py-L33-L34 is sort of the bain of debugging as well.
[18:59:42] <altendky> if there is any issue there you utterly silence it so you can never know
[19:02:46] <SnoopJ> if you *absolutely must* swallow the exception: `try: ... except Exception as exc: logger.debug(traceback.format_exc())` is a good hedge against the exceptions you _didn't_ anticipate
[19:02:52] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[19:03:10] <nubonix> altendky: ill be back in a few minutes, will take me a bit to digest what you said there when i get back [like in 5]
[19:03:11] <SnoopJ> err, I guess you don't need to give it a name, but I like to do this :)
[19:03:11] <altendky> and in an sscce, you just delete the except unless you actually get an exception there
[19:03:25] *** Joins: junktext (~junktext@77.247.181.212)
[19:03:31] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:03:43] <altendky> nubonix: anyways, when you create one of your threads you could pass it the object you want it to have and it could assign it to an attribute of itself.  though i doubt that passing a scheduler to a thread object that will be scheduled by that async scheduler is a good use of it.
[19:03:57] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:495c:18ba:d824:98cf) (Quit: Leaving)
[19:04:12] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:05:10] <altendky> also, the question might have been better started with `self.qtscheduler` does not exist at line <link here>.  i have it at line <link here> when i create the task.  how can i make it available inside that `.run()` method.
[19:05:18] *** Joins: c10l (~c10l@89.34.167.207)
[19:08:45] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:09:36] <nubonix> altendky: i believe you are right `the question might have been better started with...`
[19:10:34] <nubonix> my question about asyncioscheduler being async wasnt if the scheduler runs the schedule async, but if i can call self.qtscheduler.add_job(params) asynchronously
[19:10:52] <nubonix> because thats all im trying to do with `def run()` in homepage.py
[19:11:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:11:30] <altendky> nubonix: what do the docs say?  and if you are spawning a thread to call a function...  then you have to make sure the function is thread safe, which is asking a lot more of it than asking it to be async-safe.
[19:11:59] <nubonix> the reason being for try/excepting the delete task, is it fails sometimes and sometimes it doesnt, but it wont delete the task if None is not present, and sometimes it fails if None is there
[19:12:22] *** Joins: computeiro (~Wender@189.37.67.5)
[19:13:03] <vladoski> how can I have unbuffered print stdout
[19:13:04] <altendky> nubonix: sure, but you are debugging.  did you issue disappear when you tried removing those lines?  to make a minimal example you go through and just hack out anything that isn't required.  you are making a minimal example to show an issue, not a robust complete application.  (though even there you shouldn't handle _all_ errors)
[19:13:07] <nubonix> altendky: not sure, corrent add_job isnt what i need asnyc of thread safe, its .resume_job https://apscheduler.readthedocs.io/en/v3.7.0/userguide.html#pausing-and-resuming-jobs
[19:13:09] <vladoski> in simple scripts?
[19:13:23] <altendky> just imagine if you typed `task.tsart()` and it wouldn't start and you had no error because of a simple typo.
[19:13:24] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 245 seconds)
[19:13:30] <nubonix> corrent == correction*
[19:13:53] <bjs> vladoski: `python -u script.py`
[19:14:28] <altendky> nubonix: i don't see anything at https://apscheduler.readthedocs.io/en/v3.7.0/modules/job.html#apscheduler.job.Job.resume suggesting you couldn't call it from an async context.  adding threads in here is probably just adding bugs because it most likely is _not_ thread safe.
[19:14:45] <altendky> (not to mention the normal bugs when trying to add threads)
[19:15:07] <nubonix> altendky: alright so i need to go away from threads
[19:15:23] <altendky> very simply, threads should not be the default go to for 'doing multiple things at once'.  they have their uses.  but they shouldn't be the "default".
[19:16:16] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (Ping timeout: 256 seconds)
[19:16:30] <nubonix> altendky: so how can i assign a button press to run the function resume_job(job_id)
[19:16:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:17:13] <nubonix> think i could probably do that in app.py and just ignore assigning the button click in homepage.py
[19:17:23] <altendky> nubonix: by connecting the button click signal to a callable that will do that.
[19:17:39] <nubonix> altendky: in app.py yeah?
[19:17:47] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:17:47] <nubonix> altendky: doesnt resume_job need to be async?
[19:18:16] <altendky> nubonix: the docs don't seem to refer to it as an async function
[19:18:40] <nubonix> altendky: so sync?
[19:18:43] <nubonix> hmm
[19:18:48] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:19:11] <nubonix> altendky: well if its not thread-safe i dont think theres much else i can do besides running it synchronously yeah?
[19:19:28] <altendky> nubonix: it doesn't seem like the sort of thing that would sometimes take a long time, so there's not much need for it to be async itself.  or so it seems.
[19:19:53] <nubonix> altendky: it was a concern of mine b/c i dont know what is happening behind the scenes
[19:20:28] <nubonix> esp if i have 500 of them trying to resume jobs
[19:20:33] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:20:48] <octav1a> Hello all, I'm on a new-ish system linux, python3.8 and a software I've used a few times that makes use of multiprocessing and numpy. I have a problem with errors like this: https://bpa.st/WSQA  -- I'm able to work around this issue by setting export OPENBLAS_NUM_THREADS=12 , from a google result. But does anyone know what this is any why I need to limit the threads? Why does openBLAS even use multithreading when I am controlling my own program with
[19:20:48] <octav1a> multiprocessing?
[19:21:04] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.0.1)
[19:21:30] <SnoopJ> octav1a, because numpy is threaded, some of it presumably using OpenBLAS facilities for same.
[19:23:01] <octav1a> Isn't it inefficient, If I wrote a program and run it on a 12 core system, and use 12 processes, and then numpy is using more threads by itself, there will be thrashing?
[19:23:23] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:23:39] <octav1a> (this is not a 12 core system, either, it's much more actually, but for some reason higher than 12 would cause that error.
[19:23:39] <SnoopJ> if you write your program in a way that doesn't use that threading to your advantage, it will be very inefficient, yes.
[19:25:06] <octav1a> I design programs so that all of the workers use as close to 100% cpu as possible, I didn't imagine more threading behind the scenes. Should I be finding numpy's thread count somewhere and always setting it to 1 for multiprocess programs?
[19:25:25] <SnoopJ> ideally you'd let numpy do what it's good at and not rewrite those parts
[19:25:47] <SnoopJ> but instead write your application to take advantage of numpy being very very good at parallelizing idiomatic operations
[19:26:22] <octav1a> That's not really possible, each worker is processing some slice of a dataset which has lots of code, a good amount of it numpy.
[19:26:53] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:27:01] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[19:27:24] <SnoopJ> I'll have to take your word for it since we know nothing about the application and invitations to say more don't seem to land.
[19:27:32] <octav1a> But I think I'm getting off topic, I'd rather understand this error so I can actually solve it instead of using this workaround.
[19:27:52] <SnoopJ> With that present impl, yea I guess you want to tell numpy "don't thread" or at least limit it
[19:28:47] <SnoopJ> not sure if there's something in numpy itself or if you just set env vars to the underlying BLAS
[19:29:17] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[19:30:52] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[19:31:11] <themill> not much of numpy is threaded, so you've hit it "lucky". You can set OMP_NUM_THREADS from memory
[19:31:18] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[19:31:43] <themill> (as an environment variable)
[19:32:42] <kieto> Hi! How would you parse the string "1989-06-24T00:00:00.000Z" to a datetime object? datetime.datetime.fromisoformat() doesn't accept it
[19:32:59] <SnoopJ> related reading: https://numpy.org/devdocs/reference/global_state.html#number-of-threads-used-for-linear-algebra
[19:33:43] *** Joins: wyclif (~wyclif@user/wyclif)
[19:35:10] <grawity> kieto: how about datetime.fromisoformat(re.sub(r"Z$", "+00:00", the_string))
[19:35:14] <SnoopJ> hmm, I guess there's less threading than I'd remembered for e.g. broadcasting, I guess that makes sense, it just directs the BLAS appropriately with the appropriate pointer arithmetic.
[19:35:57] *** Joins: paule32 (~paule32@user/paule32)
[19:35:59] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:36:06] <paule32> hello
[19:36:23] <paule32> how can i add strings ?  i have this script:  https://dpaste.com/HUGN93RML
[19:36:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:36:32] <paule32> but it would not work properly
[19:36:51] <paule32> the script is for notepad++, to appendText to the editor
[19:37:34] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 245 seconds)
[19:37:44] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:38:06] <SnoopJ> paule32, what's going wrong with it? One thing that jumps out to me is that e.g. "\:" probably doesn't do what you think it does: that is a two-character string, a literal backslash and a colon.
[19:38:22] <altendky> SnoopJ: hah, i forgot to reinitialize the iteration values at each layer of the `__mro__` so i like walked through attributes `[0:3]` or whatever at the first layer, then `[3:10]` at the next and so on...  https://gist.github.com/altendky/4c58ce4dd5e1b41afd2c98576c76c0d7#file-x-cpp-L15-L17 were outside the outer while
[19:40:01] <altendky> i'm sure this is wrong, but it does at least trivially resolve the `True` vs. `False` output
[19:40:18] <SnoopJ> altendky, at the risk of tut-tutting, I'd probably use the names `base_mro, base_mro_it` and maybe change `item` too to keep the two iterations straight in my head :P
[19:40:34] <SnoopJ> but a simple fix is always nice
[19:41:34] <altendky> SnoopJ: yeah, this is garbage right now.  i'll remove all my debugging and then see how many tests this breaks.  also i need to try it on their `dev` branch which didn't want to build last night for me (i worked on the latest tag instead).
[19:41:54] <altendky> thanks
[19:43:49] *** Joins: pnoud (~pnoud@user/pnoud)
[19:44:00] <rendar> what is the proper way to get every Nth element from a list? e.g. [0,1,2,3,4] yields 0 and 4 when N=4
[19:44:13] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[19:44:35] *** Joins: tonberry (~tonberry@user/d00gy)
[19:45:06] <altendky> i wonder how many ref counting errors i've introduced with these 4 lines of code...
[19:45:15] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[19:45:16] *** Joins: gravyy (~gravy@220-245-7-193.static.tpgi.com.au)
[19:45:24] *** Quits: gravy (~gravy@123-243-232-67.tpgi.com.au) (Ping timeout: 255 seconds)
[19:46:38] <altendky> rendar: there's `[0,1,2,3,4][::4]`
[19:47:08] <altendky> it is `[<start>:<stop>:<step>]`
[19:47:09] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[19:47:15] <rendar> altendky: uhm, yeah but i guess that [::4] gives you an iterator, right?
[19:47:21] <SnoopJ> in that case, you get a list
[19:47:34] <altendky> rendar: ^ and even if it did you could `list()` that
[19:47:43] <SnoopJ> (the object you use it on decides what you get, but with built-in sequences you get the original sequence type back)
[19:47:49] <altendky> well, not that we know what you actually wanted :]
[19:48:19] <paule32> SnoopJ: i would like work with the string (string without \
[19:48:31] <paule32> but something seems be wrong
[19:48:38] <SnoopJ> paule32, then remove the \ from your string, they aren't necessary and it sounds like they're wrong
[19:48:48] *** gravyy is now known as gravy
[19:48:48] <rendar> altendky: ok
[19:48:59] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[19:49:36] <rendar> what about i want to get from the list the item and it's position in the list, e.g. ["a","b","c","d"] i get (0,"a"), (3,"d")
[19:49:38] <rendar> with ::3
[19:49:55] <rendar> i guess the better solution is to save (n, item) inside the list, instead of item
[19:50:00] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:50:11] <grawity> enumerate(the_list)[::3]
[19:50:23] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:50:26] <grawity> I have no idea if it works but feels like it should
[19:50:30] <altendky> ^ except `[::4]` i think
[19:50:45] <altendky> err, no 3 this time, yeah
[19:51:07] <grawity> ah I guess [*enumerate(the_list)][::3] or list(enumerate(the_list))[::3] is necessary
[19:51:58] <yourfate> is there a way to print tabs and newlines to the terminal, such that if I copy the output I can paste it into excell and it goes into separate cells?
[19:52:29] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[19:52:31] <altendky> rendar: perhaps the bigger picture question would be good
[19:53:18] *** Joins: jinsun (~quassel@user/jinsun)
[19:53:28] <rendar> altendky: i have an array of dates, i have to draw a grid for each N
[19:53:42] <rendar> so i don't take every dates, but only some of them, with a step
[19:53:46] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:54:09] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[19:54:12] <altendky> rendar: like you want to iterate over all dates but group them...  by week or something?
[19:54:14] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[19:54:31] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:54:36] <rendar> yes
[19:54:39] *** Joins: ano (~weechat@user/ano)
[19:54:47] <SnoopJ> yourfate, Excel's "Text to Columns" feature can understand delimited text https://support.microsoft.com/en-us/office/split-text-into-different-columns-with-the-convert-text-to-columns-wizard-30b14928-5550-41f5-97ca-7a3e9c363ed7 (or you can write out a CSV file and import it using the External Data functionality)
[19:55:22] <yourfate> I want to paste this into a pre-made excel form where I only ahve to fill some data
[19:55:35] <yourfate> so i'd have to import it into that form or something
[19:56:38] *** Joins: thiras (~thiras@user/thiras)
[19:56:39] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:57:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[19:58:04] *** Joins: stevieh (~skrodzki@p2e584df2.dip0.t-ipconnect.de)
[19:58:21] <SnoopJ> there might be a special paste mode that lets you hint to it that it's delimited text. The Excel docs should say
[19:58:24] <altendky> rendar: that sounds more like https://toolz.readthedocs.io/en/latest/api.html?highlight=partition#toolz.itertoolz.partition_all
[19:58:41] <altendky> or a modified version to get alignment to the weeks, depending
[19:58:52] <rendar> altendky: that's what i'm doing
[19:59:27] <altendky> well, i guess you could just pad to make the alignment
[19:59:52] <altendky> pad and `.partition()` rather than `.partition_all()`
[20:00:59] <rendar> altendky: problem is that i can partition months/weeks, but i have to get the "minor" grid lines
[20:01:11] <rendar> if major grid lines are each month, minor grids can be each 5 days
[20:01:19] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[20:01:19] <rendar> hence the needing of [::x]
[20:01:22] <altendky> rendar: i don't know what it means to get the grid lines.
[20:01:28] <rendar> huh?
[20:01:30] <altendky> or why they would be 5?
[20:01:45] <rendar> altendky: because i specify a number of grid lines i want
[20:02:08] <altendky> rendar: remember that i have no context here
[20:02:19] <kieto> grawity: I finally went with arrow's solution: arrow.get("1989-06-24T00:00:00.000Z").format("YYYYMMDD")
[20:03:55] *** Parts: meatballs (~meatballs@2001:470:69fc:105::633) ()
[20:04:27] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Ping timeout: 268 seconds)
[20:04:56] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[20:05:26] *** Joins: Betal (~Beta@user/betal)
[20:05:31] <rendar> altendky: basically if i have a=[1,2,3,4,5,6,7,8,9], with n=2 i get the middle item: 5, with n=3 i get [3,5,7], with n=4 i get [2,4,6,8]
[20:05:36] <rendar> this is my problem
[20:06:08] <rendar> for now i have `a[::len(a)//n]` but it seems to not work properly
[20:06:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:06:35] <altendky> rendar: i'm not understanding how this relates to weeks.  so maybe start with the non-mathematical context i guess.
[20:06:41] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[20:06:49] <SnoopJ> rendar, we can't understand very much of what you're saying because you're leaving out the parts that you already know but that we don't
[20:07:13] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[20:07:22] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:07:57] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:08:00] <rendar> i have a list of items, based on a divisor integer, i want those items starting from the middle to increase, at the increasing of the divisor
[20:08:37] <rendar> divisor=1 > no items, divisor=2 > middle item, divisor=3 > middle item + 2 middle items of the 2 halfs
[20:08:38] <rendar> and so on
[20:08:55] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:09:16] <SnoopJ> rendar, even-length lists do not have a middle element, and usually require separate treatment from odd-length ones. This might be part of your headache.
[20:09:26] <altendky> rendar: does this relate to weeks and days and months?  or did i make that up.
[20:09:30] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[20:09:38] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:10:14] <rendar> altendky: this relates because while the major grid is each month, for instance, the minor grid shows only middle days of the months, based on some divisor that will be increased/decreased in order to increasing grid lines
[20:10:51] <altendky> rendar: in some sense this doesn't matter maybe, but what is this for?  i'm not figuring out what problem is being solved.
[20:10:58] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:11:16] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[20:12:52] <rendar> drawing chart grid lines
[20:14:41] *** Joins: audiocat (~audio@2603-8081-1800-00ad-54b0-eacb-9c51-4be4.res6.spectrum.com)
[20:15:33] <altendky> rendar: can we go up another layer?  why are we grabbing these particular days out of some time range?  or we can stop.  i don't understand well enough from the test cases and i'm not getting the high level use case so i'm not really being helpful.
[20:17:00] <rendar> altendky: did you ever see a chart, right? there are some major grid lines, that are more marked and visible, then there are minor grid lines that are more dimmed
[20:17:38] <altendky> rendar: yup.  but what is this a chart of?  why are these particular boundaries of interest?
[20:18:31] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[20:18:32] *** Joins: Jefren3 (~Jefren@70.35.66.152)
[20:18:56] <SnoopJ> octav1a, RLIMIT_NPROC is apparently a system limit on the number of processes (really threads) per UID. However, I don't think that's why it's failing because 4096 is definitely much smaller. If you're running systemd, you might want to check TasksMax/DefaultTasksMax which seems like it can cause this failure.
[20:19:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:20:41] *** Quits: Jefren2 (~Jefren@70.35.67.39) (Ping timeout: 255 seconds)
[20:20:43] <SnoopJ> 4096 = 2**12 is a suspiciously round number
[20:20:50] *** Joins: kosh (~kosh@user/kosh)
[20:20:53] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:21:57] *** Joins: argento (~argent0@168-227-96-26.ptr.westnet.com.ar)
[20:22:55] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[20:23:39] <rendar> altendky: a chart of financial instruments such as stocks
[20:24:13] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:24:44] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:25:15] <altendky> rendar: i get frustrated at passive secrecy.  i don't understand the context so i can't help by filling in gaps of stuff you didn't think of.  i guess the next step is for you to write some tests (which you will want to have anyways) and see if anyone wants to help satisfy that test suite.
[20:25:45] <rendar> altendky: man.. no secrecy, it's a chart of stock prices, which includes grid lines of datetimes
[20:25:57] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[20:25:59] <rendar> i don't know what to add into that
[20:26:43] <altendky> rendar: maybe i've read too much into some of the comments
[20:27:34] <altendky> rendar: you have a sequence of dates (though for this i don't think it matters what they are).  you want to split them into N groups.  you then want to ...?
[20:27:47] <altendky> and is there not an existing plotting library for this?
[20:28:17] <SnoopJ> matplotlib has lots of machinery for controlling grid placements
[20:28:29] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[20:28:51] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[20:29:50] <rendar> altendky: basically just imagine a list, i want to subdivide that list into N sublists, and get the first elements of those sublists, except for the first and last list...
[20:29:52] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-69c6-2ab9-fc09-88f5.res6.spectrum.com) (Read error: Connection reset by peer)
[20:30:36] <rendar> altendky: if i have [1,2,3,4,5,6] and i subdivide it into sublists: [[1,2], [3,4], [5,6]] i want only the first elements of the sublist, except first and last, so : 3
[20:31:12] *** Joins: wyclif (~wyclif@user/wyclif)
[20:31:37] <rendar> now, here N is 2, and not 3, i specify some kind of N, and i want to subdivide that list into sublists of length N
[20:32:55] <grawity> I think I've most commonly seen that done in the "dumb" way `def chunk(lst, size): for i in range(0, len(lst), size): yield lst[i:i+size]`
[20:32:57] *** Quits: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br) (Remote host closed the connection)
[20:33:54] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[20:34:04] *** Joins: Jefren (~Jefren@32.sub-174-215-189.myvzw.com)
[20:35:13] *** Quits: taru9 (~realTaru9@user/taru9) (Quit: %xD%)
[20:35:40] *** Joins: taru9 (~realTaru9@user/taru9)
[20:35:50] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: "sure, it's been fun but I gotta look at the sky now")
[20:35:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:36:45] *** Joins: wyclif (~wyclif@user/wyclif)
[20:38:39] *** Joins: s8n5 (~s8n@user/s8n)
[20:39:21] *** Quits: Jefren (~Jefren@32.sub-174-215-189.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[20:40:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[20:40:49] *** Quits: s8n (~s8n@user/s8n) (Ping timeout: 252 seconds)
[20:40:50] *** s8n5 is now known as s8n
[20:41:03] <rendar> hmm, what is the best way to divide by half a list? e.g. [1,2,3,4] and i get [1,2],[3,4], or [1,2,3,4,5] and i get [1,2],[3,4,5] ?
[20:41:07] *** Joins: vsantana (~Thunderbi@fttx-17713614973.usr.predialnet.com.br)
[20:41:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:41:48] <grawity> x[:len(x)//2], x[len(x)//2:]
[20:41:51] *** Joins: Jefren4 (~Jefren@70.35.66.85)
[20:41:59] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:42:16] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:19] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[20:42:19] <SnoopJ> rendar, those aren't "sublists of length N" for the odd case
[20:42:51] <SnoopJ> they have different lengths; as I said before, even/odd sequences usually get different treatments because they don't/do have a middle element
[20:44:38] *** Quits: Jefren3 (~Jefren@70.35.66.152) (Ping timeout: 240 seconds)
[20:45:54] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[20:46:45] *** Joins: echelon (~echelon@gateway/tor-sasl/steerpike)
[20:47:01] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:47:19] <echelon> hi, is there a way to parse columns into variables in python like with awk?
[20:47:49] <grym> echelon: say more
[20:47:57] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 268 seconds)
[20:48:16] <SnoopJ> echelon, I don't think there's anything that offers an awk-alike interface very directly, but the `csv` module can deal with most delimited data.
[20:48:22] <echelon> i have a file that consists of a list of lines that are separated into columns delimited by whitespaces
[20:48:29] <grawity> so literally line.split()?
[20:48:34] <grym> echelon: https://docs.python.org/3/library/csv.html#csv.DictReader
[20:48:41] <grym> echelon: that's what i use
[20:49:08] <echelon> i tried x.split(' ')[1], but when i print it, i just get empty lines
[20:49:12] <SnoopJ> I would probably read lines and split() them if it's whitespace, unless I was using numpy and then I'd be using numpy.load_txt()
[20:49:13] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:28] <SnoopJ> echelon, if you show us some of your data and your attempted solution we can give you more direct help https://bpaste.net/+python+pytb
[20:49:52] <echelon> does it make a distinction if it's multiple consecutive whitespaces like "a     b   c" ?
[20:50:06] <echelon> if i use just split(' ')
[20:50:09] *** Quits: roelj (~user@2001:1c02:b21:6200:c9cf:5ac8:4ac9:c58e) (Remote host closed the connection)
[20:50:23] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[20:50:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[20:50:32] <SnoopJ> if you use split(' ') you'll get N-1 empty strings for N spaces
[20:50:40] <SnoopJ> if you just split() you'll get "a", "b", "c"
[20:50:44] <echelon> ah, thanks!
[20:50:52] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[20:50:58] <echelon> yup, that did the trick
[20:50:58] <SnoopJ> (plus, split() knows about pretty much any type of whitespace)
[20:51:00] <grym> echelon: https://bpa.st/LSZQ
[20:51:19] <echelon> thanks
[20:51:53] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:52:12] <mat001> Hey. Is OptlyClientMock in line 6 a return value of the mock or not?  tried adding ...return_value=OptilyClientMock and it that case the test doesnt work. I would expect return_value should be there, but maybe when mocking class objects it's different? https://bpa.st/FPUA
[20:52:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:52:29] <grym> echelon: and if you want to specify your own dict key names instead of using the entries in the first row of the file, you can do that too
[20:52:43] <mat001> SOrry, line 8
[20:52:51] <echelon> hmm ok
[20:53:19] *** Joins: wyclif (~wyclif@user/wyclif)
[20:53:34] <grym> echelon: my StringIO stuff is the same as  `with open(somefile.txt,'r') as d`, as well, which you should do if you have a file
[20:54:14] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:54:27] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[20:56:17] *** Joins: sedeki (~textual@user/sedeki)
[20:56:24] <echelon> if i do.. lines=d.readlines(), can d referenced outside the scope of the `with`?
[20:56:46] <echelon> be referenced*
[20:57:22] *** Joins: hposca (~hposca@node-1w7jr9phoke2tnetlghxkyj3n.ipv6.telus.net)
[20:58:06] <echelon> well, i did it, and got no errors
[20:58:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:58:18] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:50] *** Joins: wyclif (~wyclif@user/wyclif)
[20:59:14] *** Joins: ice9 (~ice9@user/ice9)
[20:59:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[20:59:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:544f:ff3e:f177:8d6c)
[21:00:05] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[21:00:34] *** Joins: kosh (~kosh@user/kosh)
[21:00:59] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[21:02:02] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:544f:ff3e:f177:8d6c) (Client Quit)
[21:02:09] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:02:38] *** Joins: jay-m126_ (~jay-m@154.72.160.227)
[21:03:15] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[21:04:48] *** Quits: Alex123 (~Adium@cpe-172-249-100-115.socal.res.rr.com) (Quit: Leaving.)
[21:05:51] *** Joins: pnoud (~pnoud@user/pnoud)
[21:06:53] *** Joins: Barones (~Barones@2804:48dc:8500:0:f0cd:c0f8:8dcc:5d4)
[21:08:02] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 252 seconds)
[21:08:33] *** Joins: Auron (~Auron956@user/auron)
[21:09:12] *** Quits: jay-m126_ (~jay-m@154.72.160.227) (Ping timeout: 268 seconds)
[21:09:42] <akk> Googling linux type copyright character suggested Compose-O-C, which worked for me: Â©
[21:09:53] <akk> (sorry, wrong tab)
[21:10:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[21:10:40] <SnoopJ> echelon, assignments performed inside a context manager's scope will be accessible outside that scope, yep
[21:13:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:13:16] <bjs> really there is no other scope here, the `with` block just doesn't introduce a scope
[21:13:26] <bjs> it happens to be indented, but very few things in Python create scopes
[21:13:42] <SnoopJ> hmm, TIL
[21:13:53] *** Joins: homerj (~homerj@user/homerj)
[21:14:27] *** Joins: jay-m126_ (~jay-m@129.0.204.222)
[21:14:39] <SnoopJ> I guess that makes sense since it's basically `mgr = ...; mgr.__enter__(); user_code(); mgr.__exit__(); del mgr;` ?
[21:15:00] <homerj> anyone have issues with pandas 1.3.0 in Windows 10 conda?
[21:15:20] <SnoopJ> homerj, what kind of issues?
[21:15:28] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:15:42] <homerj> 1.2.5 is fine, 1.3.0 throws up ModuleNotFoundError pandas._libs.interval
[21:16:20] <homerj> ModuleNotFoundError: No module named 'pandas._libs.interval' to be specific
[21:17:00] *** Quits: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster) (Remote host closed the connection)
[21:17:10] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[21:17:23] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:17:24] <SnoopJ> I don't see anything on their github about that. Could be a problem with the installation.
[21:17:26] *** Quits: vladoski (~vladoski@2001:b07:add:d406:6eac:5bb5:ed24:4cd6) (Remote host closed the connection)
[21:17:36] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[21:18:21] <homerj> yeah, created a new environment to check, same thing
[21:18:24] * homerj shrugs
[21:18:25] <jinsun> why are you using internal stuff anyway, there is pandas.Interval public api
[21:18:29] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Client Quit)
[21:18:31] <homerj> I'm not
[21:18:33] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 265 seconds)
[21:18:53] <homerj> this was a simple creatge new env, install pandas, and that's what python throws on import pandas
[21:19:20] <SnoopJ> right, something internally is trying to use it and not finding it
[21:19:22] <homerj> they could have just screwed up building the package
[21:19:31] <jinsun> ah just import pandas is doinng that, weird
[21:19:41] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 268 seconds)
[21:19:45] <grym> homerj: if you make a blank conda env and install pypi's pandas with pip instead of with conda, what happens?
[21:19:49] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[21:19:54] <SnoopJ> homerj, I doubt an issue like that would go unnoticed for 18 days
[21:19:55] <grym> homerj: sometimes conda's packages slip
[21:20:00] <SnoopJ> unless it's conda, yea
[21:20:08] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[21:20:17] <homerj> yeah, that's what I'm thinking, just conda
[21:20:24] *** Quits: jay-m126_ (~jay-m@129.0.204.222) (Ping timeout: 246 seconds)
[21:20:28] <homerj> considering the conda 1.2.5 package works fine
[21:20:49] <SnoopJ> you could try installing it with pip in the env to test that theory
[21:20:58] *** Quits: junktext (~junktext@77.247.181.212) (Ping timeout: 265 seconds)
[21:21:25] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Quit: Konversation terminated!)
[21:21:31] *** Joins: jay-m126_ (~jay-m@129.0.204.219)
[21:21:43] <jinsun> I am using 1.3.0 on windows 10 anaconda without that problem
[21:21:59] <homerj> yeah, just their package
[21:23:41] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 255 seconds)
[21:24:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:24:03] <SnoopJ> you could also try purging the package from conda's cache, it could be a problem there
[21:24:22] <jinsun> although I am using conda-forge, maybe the main one is broken
[21:24:35] *** Joins: pnoud (~pnoud@user/pnoud)
[21:25:51] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:26:00] *** Joins: Guest62 (~Guest62@192.146.154.3)
[21:26:04] *** Joins: greedom (~greedom@2001:16b8:2ecc:6100:5e86:e87e:285:914e)
[21:26:06] <jinsun> yeah you can try `conda clean --all`then `conda install --force-reinstall`
[21:26:42] *** Parts: echelon (~echelon@gateway/tor-sasl/steerpike) ()
[21:26:53] <SnoopJ> I think you want to be sure the package is uninstalled before that first one
[21:27:32] *** Quits: rendar (~rendar@user/rendar) ()
[21:27:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:28:24] *** Joins: m4v (~znc@ubuntu/member/m4v)
[21:28:42] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:29:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:29:32] *** Quits: argento (~argent0@168-227-96-26.ptr.westnet.com.ar) (Ping timeout: 255 seconds)
[21:29:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[21:29:53] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[21:29:58] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[21:30:50] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[21:32:10] *** binchickin is now known as dimaa
[21:32:17] <paule32> how can i replace string in brackets: "hello {foo}"  to: "hello world" ?
[21:32:26] <paule32> foo is a string variable
[21:32:35] <homerj> meh, I have a meeting, I'll try to fix this in a bit
[21:32:38] *** Quits: homerj (~homerj@user/homerj) (Quit: leaving)
[21:34:29] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[21:34:29] *** Quits: gusto (~Augustus@2620:149:e0:6002::25) (Read error: Connection reset by peer)
[21:34:44] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:36:22] <grawity> paule32: depends, I guess x.format(foo=foo) if you want python f-string like syntax, but there are many other templating libraries that roughly do the same
[21:37:31] *** Joins: gvsa123 (~gvsa123@d50-93-28-5.abhsia.telus.net)
[21:37:35] <paule32> i would like install not much as need liberies
[21:38:23] *** Quits: greedom (~greedom@2001:16b8:2ecc:6100:5e86:e87e:285:914e) (Remote host closed the connection)
[21:39:05] <grym> paule32: `foo="world"; mystr = f"hello {foo}"`
[21:40:24] *** Joins: gusto (~Augustus@109.255.100.54)
[21:40:50] *** Joins: wyclif (~wyclif@user/wyclif)
[21:41:11] <paule32> thx
[21:41:54] <paule32> the position of variables is independed ?
[21:42:19] <paule32> so i can use variables, that deeper in source are declared (global scoped)
[21:43:28] <deniska> paule32: all the usual scoping rules applies, using a variable inside an f-string is similar to using it in any other kind of expression
[21:43:44] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 255 seconds)
[21:45:30] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 258 seconds)
[21:45:31] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[21:45:43] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 255 seconds)
[21:46:18] *** Joins: Jefren (~Jefren@32.sub-174-215-189.myvzw.com)
[21:46:55] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:48:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:49:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:51:20] *** Joins: cul8r (~cul8r@198.133.178.20)
[21:53:00] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:54:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:54:48] *** Joins: wyclif (~wyclif@user/wyclif)
[21:54:51] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[21:56:40] *** Joins: timkofu (~timkofu@user/timkofu)
[21:56:56] <timkofu> Does trio have a loop.run_in_executor() equivalent?
[21:57:09] *** Quits: Guest62 (~Guest62@192.146.154.3) (Ping timeout: 246 seconds)
[21:58:08] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Ping timeout: 255 seconds)
[21:58:11] <bjs> timkofu: https://trio.readthedocs.io/en/stable/reference-core.html#trio.to_thread.run_sync
[21:58:22] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[21:59:04] *** Joins: EyeOfJupiter (~EyeOfJ@185.8.239.54)
[21:59:28] *** Quits: EyeOfJupiter (~EyeOfJ@185.8.239.54) (Client Quit)
[21:59:33] <timkofu> bjs: Thanks
[21:59:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:00:19] *** Joins: wyclif (~wyclif@user/wyclif)
[22:02:52] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[22:03:40] *** Joins: Akuli (~Akuli@82-203-165-130.bb.dnainternet.fi)
[22:04:07] *** Joins: homerj (~homerj@user/homerj)
[22:04:15] <homerj> ok, I fixed that
[22:04:25] <homerj> packages are borked on conda's end
[22:04:40] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 258 seconds)
[22:04:42] <homerj> conda installing a python 3.8 package for 3.9
[22:04:58] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 252 seconds)
[22:05:03] *** Joins: EyeOfJupiter (~EyeOfJ@185.8.239.54)
[22:05:17] *** Quits: EyeOfJupiter (~EyeOfJ@185.8.239.54) (Changing host)
[22:05:17] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[22:05:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:05:49] *** Joins: wyclif (~wyclif@user/wyclif)
[22:06:10] *** Quits: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter) (Client Quit)
[22:06:21] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[22:06:32] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[22:06:40] *** Quits: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter) (Client Quit)
[22:06:41] <homerj> kind of glance over that when you look at packages
[22:06:49] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:07:01] *** Joins: skapata (~Skapata@user/skapata)
[22:07:04] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[22:07:41] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[22:11:07] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[22:14:19] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:15:34] <jinsun> hmm ya I see that too if I try to use the default channels
[22:15:46] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[22:16:03] *** Joins: kor1 (~kor1@user/kor1)
[22:16:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:16:50] *** Joins: wyclif (~wyclif@user/wyclif)
[22:17:28] *** Joins: milosz (~milosz@user/milosz)
[22:17:35] *** Joins: hsiktas (uid224847@id-224847.tooting.irccloud.com)
[22:17:36] <homerj> jinsun: I downloaded the 3.9 package directly and installed it and it worked, it's just with the their dependencies
[22:17:51] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[22:18:04] *** Quits: nicxz (~nicxz@user/nicxz) (Quit: WeeChat 3.0)
[22:18:42] <jinsun> if you can, add conda-forge in you conda config as a higher priority channel, the default repos have lots of random problems
[22:19:00] <jinsun> and conda-forge gets updates faster too
[22:20:32] <jinsun> most of the time
[22:20:50] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[22:23:07] *** Quits: jay-m126_ (~jay-m@129.0.204.219) (Read error: Connection reset by peer)
[22:25:22] *** Joins: minip (minip@user/minip)
[22:25:27] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[22:25:46] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 252 seconds)
[22:25:52] *** Joins: jay-m126_ (~jay-m@129.0.205.215)
[22:26:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:27:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:28:08] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[22:28:18] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:30:01] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[22:31:03] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[22:31:09] <nubonix> need so me help with pyqt5. i need to pass self.qtscheduler from app.py to homepage.py, but i havent figured out how to do so
[22:31:09] <nubonix> https://gist.github.com/nubonics/eda07e95acdc32c1cc73ec9aed169836
[22:31:09] <nubonix> this is where i need self.qtscheduler https://gist.github.com/nubonics/eda07e95acdc32c1cc73ec9aed169836#file-homepage-py-L492
[22:31:09] <nubonix> and im instantiating self.qtscheduler in app.py here https://gist.github.com/nubonics/eda07e95acdc32c1cc73ec9aed169836#file-app-py-L49
[22:31:09] <nubonix> also, im not sure if this is thread-safe `self.qtscheduler.job.Job.resume_job(job_id=job_id)`, but i need to run this concurrently if possible
[22:31:47] <AhmedAmerican> what could that be related to ? https://bpa.st/MD7A this value is generated each time for an XHR request to API within Chinese website. is it possible to decode it ? looks like it's HTML text decoder AFAIK https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder
[22:32:01] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[22:32:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:33:24] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[22:33:25] *** Joins: wyclif (~wyclif@user/wyclif)
[22:33:45] <paule32> hello
[22:33:51] <paule32> i get tkinter error message:
[22:33:53] <paule32> import _tkinter # If this fails your Python may not be configured for Tk
[22:33:53] <paule32> ModuleNotFoundError: No module named '_tkinter'
[22:34:22] <paule32> i use msys2 mingw64 pacman
[22:35:22] <Jefren> I don't remember an underscore
[22:37:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:38:00] <jinsun> tkinter imports _tkinter internally, and the msys2 python is probably not compiled with tk support
[22:38:01] <paule32> https://dpaste.com/2CR89J8JJ
[22:38:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:38:38] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 255 seconds)
[22:38:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:40:51] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:42:00] *** Quits: computeiro (~Wender@189.37.67.5) (Remote host closed the connection)
[22:42:47] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:42:47] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[22:43:49] <jinsun> paule32: seems like you have to install the mingw64 python (mingw-w64-x86_64-python) and run it from the mingw64 shell instead of the mys2 shell https://github.com/msys2/MSYS2-packages/issues/1701
[22:43:52] *** Joins: computeiro (~Wender@189.37.67.5)
[22:43:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:44:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:44:33] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[22:44:49] *** Joins: olux (~O-O@port-ip-88-150-83-32.reverse.mdcc-fun.de)
[22:45:44] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[22:45:48] <jinsun> the msys2 one is more minimal I guess and doesn't have tk
[22:47:37] <homerj> as a general rule, you want the ming64 of packages, and run the ming64 shell
[22:47:55] <homerj> use pacboy to install packages and put a :x in front of the name
[22:48:17] <homerj> so you don't have to type out that whole ming64_blah_blah_packagename
[22:48:29] <homerj> mingw rather
[22:49:03] *** Joins: t3nj1n (~t3nj1n@108.5.82.237)
[22:49:12] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[22:49:19] <homerj> a mingw shell will drop down to msys2 binaries if there aren't mingw ones(e.g. git)
[22:49:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:49:30] <olux> Hi, at https://bpa.st/EDHQ I try to load some files into a dict, where the contents can old text like 2"1111". I'd like to have the same print result for contents from L15 at L22 using  comprehensive list format, but got '<generator object <genexpr> at 0x7f04330e20b0>' . How to fix it?
[22:49:31] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[22:49:41] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Client Quit)
[22:49:54] *** Joins: wyclif (~wyclif@user/wyclif)
[22:51:41] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 255 seconds)
[22:53:22] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[22:54:01] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[22:54:07] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (Ping timeout: 255 seconds)
[22:54:35] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[22:54:45] *** Joins: dogdisaster (dogdisaste@gateway/vpn/protonvpn/dogdisaster)
[22:54:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:55:23] *** Joins: wyclif (~wyclif@user/wyclif)
[22:56:37] <paule32> so, i start a mingw64 session
[22:56:38] *** Quits: dulanic (~dulanic@47.187.144.163) (Read error: Connection reset by peer)
[22:56:50] <paule32> installed a virtual env.
[22:56:56] *** Quits: dude-x_ (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:56:58] <paule32> start python
[22:57:20] <paule32> type in: import tkinter <RET>
[22:57:22] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[22:57:23] *** Joins: Jefren1 (~Jefren@70.35.67.120)
[22:57:26] <paule32> <RET> is return
[22:57:36] <paule32> and nothing happends
[22:57:46] <paule32> no message, no error, no input prompt
[22:58:05] <jinsun> that is what is supposed to happen
[22:58:32] *** Joins: dulanic (~dulanic@47.187.144.163)
[22:58:34] <phy1729> olux: why for i in value instead of just repr(value) ?
[22:59:09] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:59:24] *** Quits: Jefren (~Jefren@32.sub-174-215-189.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[22:59:38] <paule32> that is funny
[22:59:58] *** Quits: computeiro (~Wender@189.37.67.5) (Ping timeout: 255 seconds)
[23:00:05] <paule32> start "pythonw.exe or: python3w.exe" nothings happend
[23:00:14] *** Quits: Jefren4 (~Jefren@70.35.66.85) (Ping timeout: 252 seconds)
[23:00:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:00:26] <paule32> start "python.exe or: python3.exe", all work
[23:00:35] <paule32> i love the programing task
[23:00:35] <olux> @phy1729 As far I've seen, that not what I'm expected - not corrcted escape of " and ' e.g. in 'A'
[23:00:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:01:09] <phy1729> olux: It's not clear what you're trying to do
[23:01:16] *** Quits: homerj (~homerj@user/homerj) (Quit: leaving)
[23:01:22] <grawity> your script looks like it could be replaced with pprint.pprint(literal_dict)
[23:01:30] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[23:01:46] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-149.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 268 seconds)
[23:02:12] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[23:02:15] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[23:03:27] *** Joins: mexen (uid495612@user/mexen)
[23:04:35] <paule32> ok, it works now from command line of windows, too
[23:04:39] <paule32> nice tool
[23:05:03] <jinsun> ya you don't use pythonw when you run in terminal, that is for gui entrypoints I think
[23:05:04] <paule32> are the compiled files backward compatible ?
[23:05:48] *** Quits: gone (uid508340@id-508340.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[23:05:49] <paule32> ok
[23:05:59] <paule32> pythonw works, too
[23:06:04] <paule32> you right
[23:06:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:06:10] *** Joins: thiras (~thiras@user/thiras)
[23:06:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:04] *** Joins: Jefren2 (~Jefren@70.35.67.226)
[23:08:21] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[23:08:33] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 268 seconds)
[23:08:45] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:09:35] *** Joins: Jefren3 (~Jefren@70.35.66.207)
[23:09:45] <ChrisWarrick> paule32: what compiled files?
[23:09:50] *** Quits: Jefren1 (~Jefren@70.35.67.120) (Ping timeout: 258 seconds)
[23:11:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[23:11:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:11:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:12:31] *** Quits: Jefren2 (~Jefren@70.35.67.226) (Ping timeout: 258 seconds)
[23:13:40] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[23:14:49] *** Joins: Jefren (~Jefren@32.sub-174-215-189.myvzw.com)
[23:15:53] *** audiocat is now known as audioduck
[23:16:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:16:57] <olux> thanks, pprint may be an option I've to test.
[23:17:29] *** Joins: wyclif (~wyclif@user/wyclif)
[23:18:05] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[23:19:22] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[23:19:46] <daidoji> hello, with the python3 venv module, how can I get it to make a virtual enviornment without the site packages?
[23:20:52] <grym> daidoji:  --no-site-packages should be the default
[23:21:08] <daidoji> grym, that's what I thought too
[23:21:22] <daidoji> but when I make a brand new venv my site packages seem to get pulled in somehow
[23:21:24] <grym> daidoji: er, --system-site-packages should default to False
[23:21:46] <daidoji> is there something else that could be affecting that?
[23:22:44] <grym> i don't think so, but i could be wrong
[23:23:04] *** Joins: azazello (~azazello@109.75.158.195)
[23:23:11] <daidoji> roger
[23:23:29] *** Joins: Alex123 (~Adium@2603-8000-db03-afbf-01f2-fb55-5ffe-baf3.res6.spectrum.com)
[23:24:33] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:25:03] <altendky> anyone want to save me from researching whether i need to add some ref counting code for this pyside c-api change?  https://codereview.qt-project.org/c/pyside/pyside-setup/+/360992
[23:25:25] *** Joins: pnoud (~pnoud@user/pnoud)
[23:25:26] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 255 seconds)
[23:26:43] *** Joins: CodenameTim (~CodenameT@154.21.28.103)
[23:27:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:28:26] <jabberwock> I have no idea. It'd be cool (if not already) for Qt to have ARC
[23:28:29] *** Joins: wyclif (~wyclif@user/wyclif)
[23:28:52] <altendky> what's ARC?  not sure that's the sort of thing i can search for well without context.
[23:29:14] <Yhg1s> altendky: PyObject_GetIter() and PyIter_Next() both return new references, so you need to DECREF their return value.
[23:29:40] <jabberwock> Automatic Reference Counting. It was added to Objective-C like.. 9 years ago I think
[23:29:53] <Yhg1s> altendky: I presume Shiboken::AutoDecRef takes care of the DECREF on signalInstance.
[23:30:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[23:30:35] <nedbat> jabberwock: you are comparing apples and oranges
[23:30:49] <SnoopJ> jabberwock, that might be useful for writing a Python runtime in Objective C, but alas
[23:31:08] <nedbat> jabberwock: unless I misunderstood your meaning
[23:31:40] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[23:32:25] <paule32> is it possible to shorten a string with same char in length of 20 chars
[23:32:28] <altendky> Yhg1s: thanks.  what about error handling? do i need to be checking the calls for errors etc?
[23:32:28] <paule32> ?
[23:33:05] <altendky> i try to make myself useful in the c-api like once every year or two but...
[23:33:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:33:45] <Yhg1s> altendky: yes, all of the calls. Including PyObject_SetAttr, which wasn't handled before.
[23:33:54] <altendky> great...
[23:33:59] *** Joins: wyclif (~wyclif@user/wyclif)
[23:34:53] *** Joins: kosh (~kosh@user/kosh)
[23:34:54] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[23:35:01] <nubonix> need so me help with pyqt5. i need to pass self.qtscheduler from app.py to homepage.py, but i havent figured out how to do so https://gist.github.com/nubonics/eda07e95acdc32c1cc73ec9aed169836
[23:35:08] <Yhg1s> altendky: if they return NULL or -1, an exception occurred, and you should clean up and return an error indicator.
[23:35:24] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[23:36:06] *** Quits: olux (~O-O@port-ip-88-150-83-32.reverse.mdcc-fun.de) (Remote host closed the connection)
[23:36:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:36:29] <Payam> Hi guys, I am trying to learn asyncio and aiohttp. I have done the most part of it but when it comes to highest level I feel like my program doesn't do things in parallel. Am I missing something? https://bpa.st/5XEA
[23:36:39] <altendky> nubonix: i suggested that if you need `qtscheduler` in `TaskThread.run` that you should pass it when you create the instance then save it there.  does that not work?  but i also suggested that you are likely creating thread safety issues here and are going to corrupt the scheduler.
[23:37:13] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[23:37:22] <nubonix> altendky: suppose i could show my most recent attempt
[23:37:32] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[23:37:42] <altendky> nubonix: yes, don't ask for help with old code that you aren't working on.
[23:38:07] <nubonix> altendky: its fallback code as what im doing now im not sure if its doing anything [in the right direction]
[23:38:12] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[23:38:30] *** clarjon_1 is now known as clarjon1
[23:38:46] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 268 seconds)
[23:38:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:544f:ff3e:f177:8d6c)
[23:39:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:39:13] <nubonix> altendky: how can i pass qtscheduler to TaskThread if TaskThread is in homepage.py and has no refference to app.py as that would be a circular import?
[23:39:18] *** Joins: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net)
[23:39:30] *** Joins: wyclif (~wyclif@user/wyclif)
[23:39:33] <altendky> nubonix: `TaskThread(the_scheduler)`
[23:39:56] <nubonix> altendky: but where am i instantiating TaskThread?
[23:40:09] <nubonix> with TaskThread(the_scheduler)
[23:40:09] <altendky> nubonix: are you not even instantiating it?
[23:40:17] <nubonix> not within app.py
[23:40:21] *** Quits: ttkap (~ttkap@user/ttkap) (Ping timeout: 244 seconds)
[23:40:29] <nubonix> homepage.py handles all the threading
[23:40:39] <nubonix> as i only need threading on that page
[23:40:46] <altendky> nubonix: pass the information that is needed to where it is needed.  but i would suggest that you first stop threading because almost certainly the code you are calling is not thread safe given it is from an async library, right?
[23:40:56] <nubonix> right
[23:41:10] <nubonix> even so, i still need to figure out how to pass qtscheduler to homepage.py
[23:41:35] <nubonix> or connect the homepage start_button to a function in app.py
[23:41:49] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Ping timeout: 255 seconds)
[23:41:57] <nubonix> but im failing b/c its relying on TaskTab / TaskThread
[23:42:07] <nubonix> havent figured out how to remove threading
[23:42:09] <altendky> nubonix: you don't pass object to python files.
[23:42:18] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:42:22] *** Quits: magla (~gelignite@55d4334d.access.ecotel.net) (Quit: Stay safe!)
[23:42:40] <nubonix> ok the HomePage class or the TaskTab or the TaskThread class(es)
[23:42:41] <altendky> you `the_callable(an_object)`.  and this is independent of threading or files etc
[23:42:57] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[23:43:09] <nubonix> pre sure you know what i mean altendkty
[23:43:13] <nubonix> altendky*
[23:44:14] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[23:44:20] *** Quits: TFKyle (~kyle@64.201.205.70) (Ping timeout: 255 seconds)
[23:44:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:44:45] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[23:44:46] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Client Quit)
[23:44:58] <nubonix> altendky: ignoring the fact that threading is probably an issue for resume_job, my reluctency from removing threading isnt because i havent figured out how to remove it, but im not sure how the Start All button would be affected, do i just get a list or w/e of the tasks and run them as i would be clicking the play buttons down the table rows?
[23:45:01] *** Joins: wyclif (~wyclif@user/wyclif)
[23:45:21] <nubonix> isnt only because i havent figured out how to remove threads*
[23:45:34] *** Joins: ttkap (~ttkap@user/ttkap)
[23:45:41] <Payam> Hi guys, I am trying to learn asyncio and aiohttp. I have done the most part of it but when it comes to highest level I feel like my program doesn't do things in parallel. Am I missing something? https://bpa.st/5XEA
[23:45:43] <nubonix> the threading not being compatible w/ the scheduler is confirmation
[23:45:51] <nubonix> that i need to not use threading
[23:46:10] <nubonix> Payam id recommend httpx
[23:46:26] <nubonix> Payam are you using gather?
[23:46:34] <Payam> nubonix, yes
[23:46:49] *** Quits: Jefren (~Jefren@32.sub-174-215-189.myvzw.com) (Quit: CoreIRC for Android - www.coreirc.com)
[23:46:52] <nubonix> and creating a async task for each url or endpoint
[23:47:34] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:47:59] <nubonix> ye u r, or at least i see asyncio.create_task
[23:48:01] <Payam> a task? gather does it right?
[23:48:08] *** Joins: zeden (~zeden@user/zeden)
[23:48:09] <nubonix> gather runs the tasks all at the same time
[23:48:28] <Payam> so I need to create task first and then run gather?
[23:48:30] <nubonix> pre sure create_future doesnt actually start the task
[23:48:35] <nubonix> yes
[23:48:45] <Payam> https://docs.python.org/3/library/asyncio-task.html#id6
[23:49:26] <nubonix> lemme send you a simple example i wrote, sec
[23:49:26] *** Joins: stoneware (~stoneware@user/stoneware)
[23:49:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:49:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[23:50:25] <Payam> please :)
[23:50:28] *** Quits: jay-m126_ (~jay-m@129.0.205.215) (Ping timeout: 252 seconds)
[23:50:31] *** Joins: wyclif (~wyclif@user/wyclif)
[23:50:44] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:51:09] <nubonix> Payam: https://bpa.st/YV3Q
[23:52:10] <Payam> Thanks I will try it now :D
[23:52:29] <nubonix> np :) hope it helps, if not there are plenty of other ppl here with way more experience than i
[23:53:04] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:55:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:56:02] *** Joins: wyclif (~wyclif@user/wyclif)
[23:56:20] *** Joins: fofoni (~fofoni@user/fofoni)
[23:57:34] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[23:57:49] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:57:54] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[23:57:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 246 seconds)
[23:57:59] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:58:43] <Payam> It still doesn't fill that it is done in parallel somehow
[23:58:57] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[23:58:59] <Payam> IT should be way faster than this. :(
[23:59:04] <paule32> now, i get error in date context: https://dpaste.com/76RFMZD2R
[23:59:40] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
