[00:07:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:08:20] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[00:08:59] *** Quits: iomari891 (~iomari891@102.91.4.149) (Ping timeout: 265 seconds)
[00:09:42] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[00:11:11] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 246 seconds)
[00:13:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[00:30:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[00:32:06] <PaulWay[w]> Anyone here used HTMX with Django?
[00:32:47] *** Joins: fikran (~fikran@user/fikran)
[00:43:35] *** Joins: tga (~tga@user/tga)
[00:44:11] <tga> greetings. is it something I'm doing or admin inlines can't change foreign keys (to random other objects, other than the parent)?
[00:44:37] <tga> if I move the same field to readonly_fields, I get a proper link for the FK -- but I can't seem to be able to change it as a regular field
[00:46:07] <tga> aaand that was caused by SortableInlineAdminMixin, quack!
[00:47:02] <PaulWay[w]> quack indeed :-)
[00:49:02] <tga> maybe I do have an actual question then, is there a simple way of limiting FKs to a custom queryset related to the parent object?
[00:49:12] <tga> everywhere for validation and especially in the admin to filter the dropdown
[00:49:33] <tga> it would be nice if I could somehow filter the fk directly in the model, to be automatically used everywhere
[00:49:39] <FunkyBob> limit_choices_to ?
[00:49:48] <wallbroken> does Django use REST API?
[00:49:52] <tga> that.. exists?
[00:49:58] <FunkyBob> wallbroken: no... REST API uses django
[00:50:12] <PaulWay[w]> wallbroken: you can provide a REST API in Django using Django REST Framework.
[00:50:13] <tga> thanks FunkyBob, TIL limit_choices_to
[00:50:23] <FunkyBob> tga: https://docs.djangoproject.com/en/3.2/ref/models/fields/#django.db.models.ForeignKey.limit_choices_to
[00:50:37] <FunkyBob> PaulWay[w]: or plain django, as wallbroken has done before
[00:50:37] <wallbroken> ok, does REST provide JSON or XML ?
[00:50:38] <tga> somehow I thought it would be a hack
[00:50:43] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[00:50:44] <FunkyBob> wallbroken: if you like, yes...
[00:50:49] <PaulWay[w]> Indeed.  DRF is just a convenient tool for it.
[00:50:49] <FunkyBob> REST doesn't say either way
[00:50:57] <wallbroken> and what is the difference between REST and SOAP ?
[00:50:57] <FunkyBob> but it's common to use JSON these days
[00:51:03] <wallbroken> ops
[00:51:04] <tga> even SOAP apparently, with a library o.O
[00:51:08] <FunkyBob> wallbroken: SOAP is... wow... where to begine
[00:51:13] <PaulWay[w]> SOAP is awful, REST less so.
[00:51:19] <FunkyBob> yeah
[00:51:37] <wallbroken> so, SOAP uses XML and REST uses JSON ?
[00:51:38] <tga> SOAP has good parts too, like formally specifying endpoints
[00:51:41] <wallbroken> is this the difference?
[00:51:43] <FunkyBob> wallbroken: no
[00:51:44] <tga> vanilla REST/JSON doesn't
[00:51:48] <PaulWay[w]> SOAP was designed by people who thought SNMP didn't go far enough in making it difficult to get information and control devices.
[00:51:56] <FunkyBob> wallbroken: as I already said, you can use XML in REST
[00:52:16] <wallbroken> ok, so, what's the diff between REST and SOAP?
[00:52:28] <PaulWay[w]> In what terms?
[00:52:30] <FunkyBob> they are entirely different protocols with entirely differnt goals
[00:52:39] <FunkyBob> SOAP can, for instance, be transported over email
[00:52:49] <FunkyBob> REST is very specifically bound to HTTP and its verbs
[00:52:52] <wallbroken> can you please tell me an usecase of both of them?
[00:53:01] <PaulWay[w]> Why?
[00:53:05] <wallbroken> verbs are GET, PUT ?
[00:53:08] <PaulWay[w]> Yes
[00:53:12] <tga> SOAP: making money as a consultant implementing it
[00:53:14] <FunkyBob> enterprise wonks will try to make you use SOAP... it will be an pain, and completely lacking in interoperability
[00:53:18] <tga> REST: getting things done
[00:53:36] <tga> GraphQL: uhh well, somewhere in between
[00:53:40] <FunkyBob> REST is a way of implementing RPC over HTTP
[00:53:54] <tga> I thought SOAP is closer to RPC
[00:54:00] <FunkyBob> SOAP can do RPC...
[00:54:02] <wallbroken> FunkyBob: do you remember my project?
[00:54:15] <FunkyBob> wallbroken: how can I forget? it's painfully seared into my memory
[00:54:20] <tga> and GraphQL is really closer to SOAP but with JSON and other goodies
[00:54:23] <PaulWay[w]> GraphQL is great, but I found it very difficult to provide a GraphQL interface when I already had a DRF-based REST interface.
[00:54:30] <FunkyBob> tga: not really
[00:54:37] <wallbroken> in that case the server provides a ready to use rendered page to the client, right?
[00:54:49] <wallbroken> it doesn't use a REST API
[00:54:50] <wallbroken> right?
[00:55:02] <FunkyBob> wallbroken: your app was a mix between traditional and SPA... and did use a REST-like API for some  things
[00:55:07] <FunkyBob> as I mentioned above
[00:55:11] <wallbroken> ok
[00:55:12] <tga> I have mixed feelings about providing GraphQL on the backend, lots of work and can't really see the benefit
[00:55:12] <FunkyBob> but you don't read r eplies, clearly
[00:55:29] <tga> and Graphene ugh
[00:55:43] <wallbroken> and you said that most of API responses are plain text, right?
[00:55:45] <tga> I'm not taking new projects that use that, it's jsut a pain to use
[00:55:47] <wallbroken> not JSON structure
[00:55:54] <FunkyBob> tga: it's a lot like adding a query language on your DBMS... it lets  the end user issue queries you didn't pre-concieve
[00:56:00] <tga> ooh yeah
[00:56:02] <FunkyBob> wallbroken: I never said that
[00:56:17] <FunkyBob> wallbroken: the RESTful endpoints on your app were using JSON
[00:56:17] <tga> it lets the end user blow up your database with queries you never thought of
[00:56:24] <FunkyBob> that's why there's JsonResponse used in your views
[00:56:56] <PaulWay[w]> If you want to confuse things, then JSON is also plain text... :-)
[00:57:15] <tga> XML too
[00:57:17] <PaulWay[w]> But why this sudden interest in SOAP, wallbroken?
[00:57:28] <PaulWay[w]> EBCDIC is so rare these days...
[00:57:47] <FunkyBob> PaulWay[w]: YOU CAN PRY MY AS/400 FROM MY ..... oh, never mind
[00:57:58] <PaulWay[w]> Ta
[00:58:24] <tga> I just got questions about an old SOAP project the other week, not only it's still in heavy use but they're actively developing it
[00:58:27] <wallbroken> because I've taken a job application as django developer, and during the interview, one of the questions was "what is the difference between REST and SOAP?"
[00:58:30] <tga> enterprise++
[00:58:52] <tga> rest = more convention, soap = more xml
[00:59:25] <tga> also, nobody does real rest, no matter what they say/think
[00:59:52] <tga> backend-for-frontend ftw
[01:00:07] <anddam> PaulWay[w]: I heard a podcast (likely Talk Python to me) about HTMX and I was intrigued, I was thinking about it today since I am taking on a personal project
[01:00:08] <PaulWay[w]> And back when I was working with a SOAP interface on a GPON I found it incredibly finicky about the order of fields that I supplied.
[01:00:16] <FunkyBob> REST is based on the seminal paper by Roy Fielding
[01:00:32] <FunkyBob> SOAP was built by MS and other enterprisey people to be universal, but just wound up being a fucking mess
[01:00:37] <anddam> PaulWay[w]: so to answer "anyone here used" I can say a sound "No, but I'd like to"
[01:00:46] <PaulWay[w]> anddam: I've been working on it a bit :-)
[01:00:52] <PaulWay[w]> So I can tell you what I've done.
[01:00:56] <anddam> PaulWay[w]: on it or with it?
[01:01:33] <PaulWay[w]> With it.  Implementing https://github.com/PaulWay/Django-Dictgame
[01:01:57] <tga> intercooler was alright, but I always ended up with a vue widget or a full react spa
[01:02:43] <anddam> on the SOAP topic I can contribute that lately I had to make a SOAP client in Python, I did not know SOAP, had never used suds before, I had to inject SAML authentication in it and I was miserable the whole time
[01:02:55] <tga> case in point: this project I'm working on now needed a two-column select list -- I sketched up a server-only solution but ended up with an inline vue widget, so much simpler
[01:03:10] <FunkyBob> friend of mine tryied to replace soappy or whatever it was [nightmare] with something built on stock modern tools
[01:03:20] <anddam> PaulWay[w]: I'd like to produce html snippets as output and avoid DRF at this round
[01:03:27] <PaulWay[w]> I'm trying to work out how, for instance, to have a div that displays a new form if it doesn't have data, displays an edit form if it does have data, and just displays the data when the question is no longer editable.
[01:03:29] <wallbroken> curl --data 'url=tpportal/tpl/journeyPatterns/87|1%3FalternativeRoutesMode%3Dfalse' https://giromilano.atm.it/proxy.ashx
[01:03:36] <wallbroken> is this an example of REST API?
[01:03:37] <FunkyBob> https://pypi.org/project/rinse/
[01:03:38] <tga> I used to do SOAP in .net, not so bad with all the codegen, you'd get a magical interface object that just talked to the thing
[01:04:09] <FunkyBob> tga: from the XSD, yes?
[01:04:19] <tga> wsdl and xsd, yeah
[01:04:22] <wallbroken> tga: do you also use mvc?
[01:04:23] <FunkyBob> first XSD I write... the client complained because their libs couldn't ingest it
[01:04:31] <FunkyBob> didn't support all sorts of features of the langauge
[01:04:41] <tga> mvc _and_ mvvc
[01:04:43] <FunkyBob> so I fixed it for them... and the second client complained
[01:04:56] <PaulWay[w]> wallbroken: that interview question sounds really like a "let's see if we can trick them up with a question that requires specialised knowledge" question.
[01:04:58] <FunkyBob> so... fuck interop
[01:05:14] <FunkyBob> tga: and MVA, and... other design patterns?
[01:05:44] <tga> the soap question was put there to filter out the younguns who never heard of it
[01:05:51] <PaulWay[w]> Yep.
[01:06:12] <PaulWay[w]> And I think the correct response would be "Why, do you use a lot of SOAP interfaces in your business?"
[01:06:21] <PaulWay[w]> If the answer is yes, then politely leave.
[01:06:37] <PaulWay[w]> If the answer is no, then "Then why ask about something you don't really care about?"
[01:06:58] <tga> in my case it was a gov data interchange, it's SOAP or GTFO
[01:07:25] <PaulWay[w]> Yeah, same, Cisco GPONs for a company.  They only spoke SOAP because HTTP was so new...
[01:07:40] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[01:08:27] <FunkyBob> err
[01:08:27] <tga> so it looks like limit_choices_to can't access the parent object :\
[01:08:35] <FunkyBob> last I checked HTTP is older than SOAP
[01:08:40] <FunkyBob> tga: :/
[01:08:44] <PaulWay[w]> FunkyBob: yes.  Ironic.
[01:09:37] <tga> back to rigging the admin only
[01:11:10] <anddam> PaulWay[w]: still using DRF eh?
[01:11:25] <wallbroken> FunkyBob: the REST request is one i define in urls.py ?
[01:11:30] <wallbroken> *the
[01:11:42] *** Quits: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr) (Quit: leaving)
[01:11:57] <PaulWay[w]> anddam: yes.  Is there something newer?
[01:12:22] <tga> gRaPhQl
[01:12:25] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:12:30] <PaulWay[w]> Hah
[01:12:38] <anddam> PaulWay[w]: I heard there's this "HTMX"
[01:12:42] <PaulWay[w]> tga: this sounds like a lot of effort for an admin interface.  Maybe you should write your own?
[01:12:49] <anddam> wallbroken: is this a first job?
[01:13:00] <PaulWay[w]> anddam: that's why I'm using that.  The REST API was a 'just in case'.
[01:13:02] <wallbroken> anddam: no
[01:13:13] <anddam> PaulWay[w]: yep, I am curious too
[01:13:34] <tga> I have a moderately complex nested data model and having FK show _all_ objects instead of children of the same parent makes it almost impossible to use
[01:13:41] <anddam> PaulWay[w]: that reads """wondering if you can manage your whole "API" in django templates"""
[01:13:45] <FunkyBob> wallbroken: yes
[01:14:31] <anddam> wallbroken: I am a bit surprised since seems you have not even met REST or SOAP, and while it's all the better for you it's hard nowadays
[01:14:36] <FunkyBob> wallbroken: that's how all URL endpoints are defined in django
[01:14:50] <tga> I was looking at react-admin the other day, any idea if anyone tried to adapt it for the django admin?
[01:14:59] <tga> https://marmelab.com/react-admin/
[01:15:01] <wallbroken> anddam: i never designed API's
[01:15:23] <FunkyBob> wallbroken: an API is just a way for one bit of code to call another
[01:15:40] <PaulWay[w]> That's why it's an Interface.
[01:16:16] <wallbroken> FunkyBob: an API is a way to tell the server what kind of response you need
[01:16:18] <FunkyBob> inter-face... between two surfaces
[01:16:30] <tga> as a first run I'd suggest you just manually define endpoints that output and receive data, don't worry about REST and all the other conventions
[01:16:31] <FunkyBob> wallbroken: pardon?
[01:16:39] <tga> pure RPC, only over HTTP
[01:16:51] *** Quits: kostkon (~androirc@2a02:587:a104:3da6:185b:b019:5370:b96e) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[01:16:56] <FunkyBob> tga: wallbroken: has that in their app already
[01:17:04] <FunkyBob> wallbroken: look at your cart, for instancve...
[01:17:10] <FunkyBob> your JS posts data, and gets a response
[01:17:43] <FunkyBob> all the parts where your Javascript makes an request with data, and gets a response... they're API calls
[01:18:31] <tga> wallbroken: to answer the question literally, a HTTP request can specify a list of formats the server can send in the Accept header
[01:18:40] <tga> that's probably not what you want though
[01:19:33] <tga> theoretically a client could go Accept: application/xml vs application/json or whatever the real content types are, and the server would know to send back the same data but in a different format
[01:19:50] <FunkyBob> practically, everyone uses JSON
[01:19:59] <FunkyBob> limited as it is
[01:20:22] <tga> something really nice I remember from web2py was that you could call any url with .json at the end and get the context dict without passing it through the template
[01:21:08] <FunkyBob> there were some nice things in web2py
[01:21:58] <tga> single file deployment was awesome, the integrated dev environment was nice
[01:22:20] <tga> I even liked the DAL, simple and to the point, they didn't try to make an ORM
[01:23:54] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[01:24:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:24:33] <FunkyBob> tga: the web interface for investigating tracebacks was slick
[01:24:37] *** Joins: leocosta_io (~leocosta@2804:14c:5b95:92a6:e8d8:4eaf:8044:6b54)
[01:24:51] <tga> doesn't flask have something similar?
[01:24:52] <FunkyBob> unfortunately, the web2py project I worked on had the DAL wrapped in bullshit APIs
[01:24:57] <FunkyBob> that all returned (result, error)
[01:25:00] <FunkyBob> so you couldn't chain
[01:25:13] <tga> sounds like golang
[01:25:18] <FunkyBob> lost most of the power of the DAL
[01:29:04] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:34:24] <PaulWay[w]> Returning (result, error)... because raising errors in python is so difficult...
[01:34:29] <anddam> didn't __repr__ use to be there too? https://docs.djangoproject.com/en/3.2/ref/models/instances/#django.db.models.Model
[01:44:08] <tga> what a pain to filter a fk dropdown in the admin
[01:49:22] <tga> there we go, just got it to work, you have to inject the current object in the admin form, so it can be read by inlines
[01:49:39] <tga> otherwise it's not available -- that was tripping me up
[02:01:07] *** Quits: CodenameTim (~CodenameT@193.27.13.201) (Ping timeout: 265 seconds)
[02:02:36] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[02:05:28] <tga> anyone familiar with plotly? good option with image output vs using a js lib like graphjs?
[02:06:32] <tga> *chartjs
[02:07:03] *** Joins: jess (~jess@libera/staff/jess)
[02:07:04] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[02:09:48] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[02:18:10] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:18:45] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:19:41] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 245 seconds)
[02:33:57] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:40:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:42:08] *** Joins: fikran (~fikran@user/fikran)
[02:44:08] *** Quits: tga (~tga@user/tga) (Ping timeout: 265 seconds)
[02:58:33] <dre> hey guy s
[02:59:20] <dre> is there any to do something like " {% include "file.html" with title ="{{ variable|lower_case_filter}}" %} ?
[03:17:48] *** Quits: bambanxx (~bambanx@181-163-32-126.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[03:22:15] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[03:22:22] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[03:26:16] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (Ping timeout: 252 seconds)
[03:26:55] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:27:32] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[03:30:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 265 seconds)
[03:33:25] <PaulWay[w]> dre: do you mean that inside "file.html" it's looking for "title" and you want to set it before including the file?
[03:40:53] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 264 seconds)
[03:41:17] <GinFuyou> dre, you can't and don't need to use nested {{}}
[03:41:42] <GinFuyou> what you may need is {% with %} tag before it
[03:45:02] *** Quits: dnns01 (~quassel@2a02:c207:3003:651::1) (Ping timeout: 246 seconds)
[03:46:11] *** Joins: dnns01 (~quassel@173.212.236.80)
[03:46:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:52:02] <dre> GinFuyou, oh alright, but is there a way to run that filter? do you mean something like {% with title = variable|lower_case_filter %} {% include .... %} {% endwith %}
[03:52:18] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:02:13] *** Quits: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net) (Read error: Connection reset by peer)
[04:02:37] *** Joins: admin123 (~harrymore@ool-2f12f6cb.dyn.optonline.net)
[04:12:02] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[04:23:07] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (Remote host closed the connection)
[04:23:23] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[04:27:32] *** Quits: leocosta_io (~leocosta@2804:14c:5b95:92a6:e8d8:4eaf:8044:6b54) (Quit: Client closed)
[04:29:29] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[04:31:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:32:09] *** Joins: mattil (~mattil@87-92-29-237.bb.dnainternet.fi)
[04:36:29] *** Quits: mattil (~mattil@87-92-29-237.bb.dnainternet.fi) (Ping timeout: 246 seconds)
[04:45:23] *** Joins: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b)
[04:49:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[04:50:34] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[04:50:41] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[04:51:28] *** Joins: fikran (~fikran@user/fikran)
[04:58:30] *** Quits: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b) (Quit: Client closed)
[05:00:07] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:18:24] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[05:23:01] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[05:33:29] *** Joins: wht (~wht@havoc.proulx.com)
[05:40:52] *** Joins: swiftslayer96 (~swiftslay@c-73-23-47-29.hsd1.fl.comcast.net)
[05:41:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:41:27] <swiftslayer96> Has anyone set up vim for python & Django before, I'm having troubles with pylint showing errors every time I do something like ModeName.objects... etc
[05:41:46] *** Joins: defjam (~eb0t@90.196.142.47)
[05:41:47] *** Joins: audio (~audio@2603-8081-1800-1546-1420-7e7c-b9a2-7d5d.res6.spectrum.com)
[05:50:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:52:16] *** Joins: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b)
[05:53:27] *** Quits: Croves (~Croves@2804:14c:578b:9102:6438:37e9:11c4:693b) (Client Quit)
[05:54:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:03:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:04:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:11:16] *** Joins: Safa_[A_Boy] (~Safa@88.201.127.229)
[06:23:55] *** Quits: gitly (~gitly@148.252.132.144) (Ping timeout: 265 seconds)
[06:25:45] *** Joins: gitly (~gitly@85.255.233.42)
[06:34:55] *** audio is now known as audiocat
[06:42:29] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[06:47:06] *** Joins: hyperair (~hyperair@49.128.61.178)
[06:50:49] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 252 seconds)
[06:54:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:58:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[07:00:48] *** Joins: fikran (~fikran@user/fikran)
[07:01:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:02:26] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:25:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:25:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:26:51] *** Parts: swiftslayer96 (~swiftslay@c-73-23-47-29.hsd1.fl.comcast.net) (Leaving)
[07:34:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:37:29] *** Quits: Safa_[A_Boy] (~Safa@88.201.127.229) (Quit: Leaving)
[07:55:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:55:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:59:16] *** Joins: slavfox_ (~slavfox@93.158.232.111)
[07:59:45] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 265 seconds)
[08:00:01] *** slavfox_ is now known as slavfox
[08:01:12] *** Quits: gitly (~gitly@85.255.233.42) (Ping timeout: 265 seconds)
[08:01:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:03:04] *** Joins: gitly (~gitly@85.255.235.80)
[08:06:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:08:05] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[08:08:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:11:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:12:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:13:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[08:13:06] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[08:16:59] *** Quits: defjam (~eb0t@90.196.142.47) (Ping timeout: 246 seconds)
[08:19:02] *** Joins: defjam (~eb0t@90.202.255.249)
[08:23:20] *** Joins: mattil (~mattil@airio.portalify.com)
[08:29:54] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[08:32:07] *** Joins: mattil (~mattil@d5k7b1fjln2h9psb9qy-4.rev.dnainternet.fi)
[08:32:15] *** Quits: mattil (~mattil@d5k7b1fjln2h9psb9qy-4.rev.dnainternet.fi) (Remote host closed the connection)
[08:39:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:48:08] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[08:52:58] *** Joins: Andrew_ (~andrew@user/andrewyu)
[08:53:35] *** Quits: AndrewYu (~andrew@user/andrewyu) (Ping timeout: 252 seconds)
[08:56:56] *** Joins: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr)
[08:58:51] *** Quits: Simmo (~Simmo@60-242-250-231.tpgi.com.au) (Quit: Client closed)
[09:03:01] *** Quits: Tas-sos (~Tas-sos@ppp079167211223.access.hol.gr) (Ping timeout: 245 seconds)
[09:08:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[09:10:09] *** Joins: fikran (~fikran@user/fikran)
[09:11:55] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[09:24:00] *** Joins: sandeepk (~sandeepk@202.14.122.250)
[09:29:21] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[09:42:51] *** Joins: ijpiantanida (~ijpiantan@cpe-23-240-166-114.socal.res.rr.com)
[09:46:06] <ijpiantanida> Hi all, want to validate if this could be a bug?
[09:46:09] <ijpiantanida> https://dpaste.org/qXzY
[09:46:30] <ijpiantanida> `Filtering __range with an F() expression as the beginning of the range on a date field returns empty results`
[09:54:02] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[09:54:16] *** Quits: ijpiantanida (~ijpiantan@cpe-23-240-166-114.socal.res.rr.com) (Quit: Client closed)
[10:01:15] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[10:08:26] *** Quits: defjam (~eb0t@90.202.255.249) (Ping timeout: 245 seconds)
[10:10:18] *** Joins: defjam (~eb0t@90.209.55.200)
[10:17:30] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 265 seconds)
[10:19:15] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Quit: ZNC - http://znc.in)
[10:19:53] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[10:20:23] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Client Quit)
[10:20:55] *** Joins: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[10:22:01] *** Joins: node1 (~node1@user/node1)
[10:26:42] *** Joins: sandeep (~sandeepk@202.14.122.250)
[10:29:59] *** Quits: sandeepk (~sandeepk@202.14.122.250) (Ping timeout: 246 seconds)
[10:34:49] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:36:57] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: Ping timeout (120 seconds))
[10:37:19] *** Joins: mbrndtgn7 (~mbrndtgn@undecidable.de)
[10:37:29] *** Joins: Alan4 (~alan@user/alan)
[10:38:00] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[10:38:01] *** Joins: zkanda (~zkanda@box.makean.art)
[10:38:19] *** Joins: cebor (~cebor@user/cebor)
[10:38:56] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Read error: Connection reset by peer)
[10:38:56] *** mbrndtgn7 is now known as mbrndtgn
[10:39:00] *** Quits: Alan (~alan@user/alan) (Ping timeout: 250 seconds)
[10:39:01] *** Alan4 is now known as Alan
[10:42:13] *** Joins: sandeepk__ (~sandeepk@202.14.122.250)
[10:45:41] *** Quits: sandeep (~sandeepk@202.14.122.250) (Ping timeout: 264 seconds)
[10:46:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:46:15] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Quit: leaving)
[10:46:33] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[10:47:29] *** Quits: sandeepk__ (~sandeepk@202.14.122.250) (Ping timeout: 246 seconds)
[10:48:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[10:49:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Remote host closed the connection)
[10:55:11] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[10:59:03] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[11:04:07] *** Quits: defjam (~eb0t@90.209.55.200) (Read error: Connection reset by peer)
[11:09:34] *** Joins: defjam (~eb0t@90.199.243.11)
[11:15:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:17:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[11:19:31] *** Joins: fikran (~fikran@user/fikran)
[11:20:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:20:19] *** ChanServ sets mode: +v EvilDMP
[11:22:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[11:28:01] *** Joins: ecco5000 (~Guest36@165.225.206.189)
[11:40:22] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Quit: leaving)
[11:40:48] *** Joins: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr)
[11:41:52] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[11:43:01] *** Quits: ecco5000 (~Guest36@165.225.206.189) (Quit: Client closed)
[11:45:21] *** Joins: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net)
[11:48:22] *** Quits: dre (~dre@2001:8003:c932:c301:c3b5:3d4:768d:4c71) (Ping timeout: 265 seconds)
[11:52:18] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Quit: Bridge terminating on SIGTERM)
[11:52:26] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[11:52:27] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: carl0s[m] (~carl0s@2001:470:69fc:105::305b) (Quit: Bridge terminating on SIGTERM)
[11:52:33] *** Quits: brownan (~brownan@2001:470:69fc:105::e01b) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[11:53:53] *** Joins: iomari891 (~iomari891@197.210.71.224)
[11:54:43] *** Joins: pycode (~pycode@2001:b07:5d28:551:95ce:78fe:f143:3dc4)
[11:56:33] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[11:58:50] *** Joins: tga (~tga@user/tga)
[12:12:56] *** Joins: Rikem (~mike@user/rikem)
[12:14:23] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:16:00] *** Joins: node1 (~node1@user/node1)
[12:18:12] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[12:18:12] *** Joins: carl0s[m] (~carl0s@2001:470:69fc:105::305b)
[12:18:12] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[12:18:12] *** Joins: mambang[m] (~mambang@user/mambang)
[12:18:12] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[12:18:12] *** Joins: allegary (~allegary@apache/committer/gjm)
[12:18:12] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[12:18:12] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[12:23:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[12:28:57] *** Joins: slav0nic (slav0nic@python.su)
[12:35:27] *** Joins: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp)
[12:36:09] <lazerlapin> Hi! I would like to access the display value of my form field in template, but I need to get the value of the initial value...
[12:36:27] <lazerlapin> Therefore I am doing {{ form.initial.get_myfield_display }}, but it doesn't work
[12:36:40] <lazerlapin> is there any other way to retrieve it?
[12:57:42] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:58:35] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:17:38] *** Quits: Tas-sos (~Tas-sos@78-77-69.adsl.cyta.gr) (Ping timeout: 246 seconds)
[13:21:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[13:21:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:21:50] *** ChanServ sets mode: +v EvilDMP
[13:23:12] *** Joins: Atque (~Atque@user/atque)
[13:25:34] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[13:27:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[13:28:52] *** Joins: fikran (~fikran@user/fikran)
[13:29:58] <pycode> GinFuyou, are you there?
[13:31:53] <pycode> do you remember the chat about the slug, yesterday... we talked about a Model method called create_project() to 1. create the new project 2. add the slug with an update i am thinking instead of overriding the save() method, why not override the create() method of the manager? i mean... it is an operation i need to do during creating so instead of creating create_project() i can simply override the create(). no? what do you think ?
[13:32:11] *** Joins: Tas-sos (~Tas-sos@78-157-62.adsl.cyta.gr)
[13:43:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:45:09] <serafeim> hello friends
[13:48:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:58:42] <GinFuyou> pycode, I think I've suggested manager method among other things. Didn't think about create, but probably works too
[13:59:06] <pycode> GinFuyou, ok i will go with create()
[13:59:07] <pycode> thanks
[13:59:10] <pycode> hello serafeim !
[14:02:35] *** Joins: node1 (~node1@user/node1)
[14:27:34] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:36:36] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:40:17] *** Quits: pycode (~pycode@2001:b07:5d28:551:95ce:78fe:f143:3dc4) (Ping timeout: 264 seconds)
[14:43:41] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 265 seconds)
[14:52:55] *** Joins: node1 (~node1@user/node1)
[15:04:37] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[15:11:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi)
[15:26:15] *** Joins: carloratm (carloratm@tilde.club)
[15:27:09] <carloratm> Hi all, which is the best vim plugin for python (Django) in terms of autocompletion?
[15:28:44] *** Joins: dez (uid92154@user/dez)
[15:32:33] *** Joins: pycode (~pycode@2001:b07:5d28:551:bf46:17dc:ccf8:ba)
[15:33:22] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:35:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[15:36:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[15:38:12] *** Joins: fikran (~fikran@user/fikran)
[15:38:26] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 245 seconds)
[15:40:04] *** Joins: zircona_ (~zircona@c-73-122-128-26.hsd1.ga.comcast.net)
[15:40:38] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:44:55] <zircona_> I have a very simple view and url as shown here: https://www.pastiebin.com/6154585b48324 but when I try to access the URL: 127.0.0.1:8000/notes/create/, I get this error: Reverse for 'delete' with arguments '('',)' not found. 1 pattern(s) tried: ['notes/(?P<pk>[0-9]+)/delete/$'] when it try to load the template ....
[15:46:03] <zircona_> not sure why it would try to reverse a delete URL when I'm calling create
[15:57:14] *** Quits: tga (~tga@user/tga) (Ping timeout: 246 seconds)
[15:58:31] *** Joins: CodenameTim (~CodenameT@194.110.112.41)
[16:01:35] <GinFuyou> zircona_, because you likely have {% url %} in some of used templates
[16:02:06] <GinFuyou> {% url 'delete' <...> %} I mean
[16:03:26] *** Quits: CodenameTim (~CodenameT@194.110.112.41) (Ping timeout: 245 seconds)
[16:06:12] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[16:11:03] <zircona_> I did a grep delete in all of my templates and here is the result: https://www.pastiebin.com/61545eb4b0acc
[16:13:20] <zircona_> I deleted the one in note_form and that was the problem, thanks
[16:13:44] <pycode> GinFuyou, still there? :)
[16:14:22] <pycode> could it be ok? https://bpa.st/7D6A
[16:15:55] <zircona_> The problem was that I need to distinguish between update and create in the form.... thanks again
[16:25:10] *** Quits: lazerlapin (~lazerlapi@ad001129.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:30:16] <GinFuyou> pycode, haven't played with create() but looks OK at first glance
[16:30:39] <pycode> i call the default create method and then i added the logic for slug it is working
[16:30:44] <pycode> good
[16:33:26] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[16:34:00] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[16:38:32] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 246 seconds)
[16:38:53] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 246 seconds)
[16:39:15] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:39:43] *** Joins: slavfox (~slavfox@93.158.232.111)
[16:50:03] *** Joins: CodenameTim (~CodenameT@96.44.189.105)
[16:53:30] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:54:22] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[16:56:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-b04858-237.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:58:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[17:07:15] *** Joins: node1 (~node1@user/node1)
[17:15:28] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[17:15:59] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:42:31] *** Quits: CodenameTim (~CodenameT@96.44.189.105) (Ping timeout: 265 seconds)
[17:43:33] *** Joins: CodenameTim (~CodenameT@96.44.189.109)
[17:45:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:47:35] *** Joins: fikran (~fikran@user/fikran)
[17:49:03] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Quit: Ping timeout (120 seconds))
[18:00:29] <pycode> hey i wonder how could i implement a form inside a listview, is there possibile somehow? i need to show a list of objects and then create a form to save leads
[18:00:36] <pycode> but can i manage that form inside a listview?
[18:00:39] <pycode> if yes...how? :D
[18:03:16] <moldy> pycode: the most common pattern is to put the form into the template and point it at a different view
[18:03:31] <moldy> using action=
[18:13:20] <pycode> moldy, yes but after a submit i need to refresh that listview, or if there were validation errors
[18:13:24] <pycode> i must remain in the same view
[18:13:28] <pycode> should i redirect?
[18:13:42] <pycode> i mean, i can put the form and point to another view but then redirect back to that listview moldy ?
[18:13:43] <moldy> pycode: that is usually best, yes
[18:13:46] <pycode> ok
[18:14:18] <pycode> maybe i can create an hidden inpuit field called "redirect" to undertsand where to redirect after the submit
[18:14:27] <pycode> with the success or error list
[18:15:02] <pycode> but wait how can i show the error list? i mean i have the form object in the listview, if i submit to another action
[18:15:12] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:15:16] <pycode> how can i do to get the form with the errors?
[18:15:51] <theseb> how can javascript send data to django server?  (I tried simulating a form POST but that didn't work. Is there an easier way?)
[18:16:02] <theseb> I don't want to just use a GET because the data is private
[18:16:12] *** Joins: aselman4 (~aselman4@136.2.33.166)
[18:17:47] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[18:19:16] <aselman4> Hello all. If i have a m2m table and access it using the "through" keyword (table.m2m_field.through.objects.values()), is there a way get access the fields of the associated table without having to specify each field separately in values?
[18:20:12] *** Quits: iomari891 (~iomari891@197.210.71.224) (Read error: Connection reset by peer)
[18:22:19] *** Joins: node1 (~node1@user/node1)
[18:31:36] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[18:34:30] <moldy> pycode: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
[18:34:53] <moldy> aselman4: there's the _meta api
[18:42:13] *** Joins: nicode (~nic@45.72.243.59)
[18:42:40] <pycode> moldy, ?
[18:42:51] <pycode> i mean...when a form has error i show those errors with the form object
[18:43:01] <pycode> but the problem with the redirect is that i lost those errors
[18:43:01] <moldy> pycode: yes
[18:43:04] <nicode> howdy folks!
[18:43:07] <pycode> i mean i need to recreate the form with errors
[18:43:08] <pycode> how can i do?
[18:43:17] <moldy> pycode: in the case of an error it's best to not redirect
[18:44:03] <pycode> moldy, how can i manage it? i mean...i am in a listview, i need to create a form i can add that form in get_context_data ...but then ?
[18:44:10] <pycode> still remain on the same page?
[18:44:15] <pycode> *same view
[18:44:48] *** Joins: ijpiantanida (~ijpiantan@cpe-23-240-166-114.socal.res.rr.com)
[18:44:48] *** Quits: zircona_ (~zircona@c-73-122-128-26.hsd1.ga.comcast.net) (Quit: leaving)
[18:46:10] <pycode> moldy, there is a formMixin so maybe i can do FormMixin, ListView
[18:46:11] <pycode> ?
[18:48:16] <ijpiantanida> Hi all, does this look like a bug?
[18:48:16] <ijpiantanida> # Filtering __range with an F() expression as the beginning of the range on a date field returns empty results
[18:48:17] <ijpiantanida> https://dpaste.org/dzPm
[18:52:55] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[18:57:32] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[18:57:51] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[18:59:04] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[19:01:40] <moldy> ijpiantanida: hmm, can you get it to work with sql? maybe it's a problem of the database instead of django?
[19:01:51] <CodenameTim> ijpiantanida: This was implemented/fixed back in 1.11: https://code.djangoproject.com/ticket/22288
[19:02:06] <CodenameTim> Not saying that it didn't break since then, but it should be possible.
[19:04:49] <CodenameTim> ijpiantanida: I was able to confirm this works in one of my projects using django 3.2, but it was using datetime fields.
[19:05:46] *** Quits: nicode (~nic@45.72.243.59) (Quit: WeeChat 2.8)
[19:06:42] <ijpiantanida> moldy what would be the exact SQL statement? Because there are args that need to interpolated
[19:06:53] <moldy> ijpiantanida: i'm not sure :)
[19:07:13] <ijpiantanida> CodenameTim: the range query works fine with int fields. It's with datetime that it doesn't
[19:07:33] *** Joins: nicode (~nic@45.72.243.59)
[19:07:54] <moldy> i'm just saying that if similar sql also returns no results, that would be interesting. which db is this?
[19:08:07] <CodenameTim> You could throw these queries into a simple view, then use the debug toolbar to inspect the actual queries being run.
[19:08:22] <ijpiantanida> sqlite
[19:09:05] <ijpiantanida> The query is being logged as `SELECT "catalog_testobject"."id", "catalog_testobject"."start", "catalog_testobject"."end", "catalog_testobject"."middle" FROM "catalog_testobject" WHERE "catalog_testobject"."middle" BETWEEN 'Col(catalog_testobject, catalog.TestObject.start)' AND '2021-10-09' LIMIT 21; args=('Col(catalog_testobject,
[19:09:05] <ijpiantanida> catalog.TestObject.start)', '2021-10-09')`.
[19:09:41] <ijpiantanida> But I'm not sure what the value of 'Col(catalog_testobject, catalog.TestObject.start)' should be. Hope it's not that raw string :D
[19:11:09] <CodenameTim> Wouldn't sqlite throw an error about mismatched types for that comparison?
[19:15:46] <ijpiantanida> it just casts it I imagine
[19:17:21] <moldy> googling a little suggests that sqlite compares dates as strings if it doesn't like the formatting
[19:20:02] <CodenameTim> ijpiantanida: I've confirmed __range and F() works with DateField and DateTimeFields with postgresql. If there is a bug, it seems likely it's related to sqlite.
[19:20:13] <CodenameTim> Well the sqlite integration.
[19:21:31] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[19:21:45] <ijpiantanida> CodenameTim would you have the SQL that gets generated for postgresql?
[19:21:52] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[19:23:11] <CodenameTim> It's not from your code example. https://dpaste.org/CNWO
[19:24:47] <pycode> moldy, still there? i am building the model for that form, this one: https://bpa.st/ELRQ
[19:25:15] <pycode> i basically need to create a form for this model BUT...I need to add extra info like "track_code" and "headers"
[19:25:26] <pycode> how can i hack those custom field?
[19:25:45] <pycode> i mean, the track_code is basically a get parameter ?track=foo
[19:25:52] <pycode> i need to add "foo" on that field on db
[19:25:59] <pycode> but i do not have this input on form
[19:26:08] <pycode> or..should i create it hidden?
[19:26:17] <pycode> how can i put there the value of the get parameteR?
[19:26:33] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[19:27:28] *** Quits: aselman4 (~aselman4@136.2.33.166) (Quit: Client closed)
[19:27:53] *** Quits: UnnamedBeer (~UnnamedBe@231.red-83-41-235.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[19:29:23] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 252 seconds)
[19:29:52] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[19:30:25] *** Joins: stdout (~stdout@216.163.21.11)
[19:33:56] <pycode> and for example if i have to add a checkbox in this ModelForm
[19:33:58] <pycode> how can i do that?
[19:34:07] <pycode> the "privacy" is not a field
[19:34:16] <pycode> can i add custom field on a ModelForm?
[19:35:08] *** Quits: nicode (~nic@45.72.243.59) (Ping timeout: 265 seconds)
[19:46:48] *** Joins: piscvau (~odile@aclermont-ferrand-157-1-38-142.w90-42.abo.wanadoo.fr)
[19:52:28] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:54:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[19:55:56] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:56:56] *** Joins: fikran (~fikran@user/fikran)
[19:58:37] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Remote host closed the connection)
[20:00:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[20:02:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:03:53] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[20:05:59] <moldy> pycode: yes
[20:06:19] <moldy> just add the field as you would on a plain Form
[20:06:30] <moldy> you have to write the code to process it, of course
[20:11:04] *** Quits: CodenameTim (~CodenameT@96.44.189.109) (Ping timeout: 252 seconds)
[20:19:14] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[20:21:34] *** Quits: Kalov (~Thunderbi@179.56.68.20) (Quit: Kalov)
[20:29:26] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[20:30:32] <piscvau> Hello I cannot get the settings DATE_TIME_FORMAT to work. the value in settings does not apply while the same format put in the template does work.What did I miss? the code is here https://bpa.st/WHRA
[20:31:48] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:36:25] *** Quits: pycode (~pycode@2001:b07:5d28:551:bf46:17dc:ccf8:ba) (Ping timeout: 252 seconds)
[20:36:29] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[20:40:30] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[20:43:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:00:09] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[21:03:31] *** Joins: pycode (~pycode@2001:b07:5d28:551:f042:e75a:9bb3:ea30)
[21:07:20] *** Quits: gitly (~gitly@85.255.235.80) (Ping timeout: 250 seconds)
[21:09:26] *** Joins: gitly (~gitly@85.255.235.214)
[21:10:42] <anddam> can you suggest a charting js library that is straightforward to integrate in a small django app?
[21:11:21] *** Quits: piscvau (~odile@aclermont-ferrand-157-1-38-142.w90-42.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[21:11:39] *** Joins: nicode (~nic@2607:f2c0:951b:700:ecad:ba72:bd8f:42ec)
[21:12:23] <anddam> I am looking at https://github.com/chartjs/chartjs-chart-financia but this is an extension of chart.js and I am already a bit unsure how to use the latter vanilla, even moreso for an extension
[21:12:48] <anddam> chart.js api speaks about registering extension while the demo does not bother doing that
[21:13:32] <pycode> hey how can i add the widget to a checkboxinputfield ?
[21:14:17] <pycode> the last one is wrong https://bpa.st/YRZA
[21:14:21] <pycode> how can i change it ?
[21:14:28] <pycode> it is a simple checkbox
[21:14:31] <pycode> i need to add the class
[21:15:34] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:16:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:19:12] <pycode> i see
[21:19:14] <pycode> <django.forms.widgets.CheckboxInput object at 0x7f7597b061f0>
[21:19:15] <pycode> qhen i do
[21:19:19] <pycode> {{ form.privacy }}
[21:19:55] <pycode> this is the form: https://bpa.st/RSFA
[21:20:07] <pycode> moldy, ^^ this is the code
[21:20:11] <pycode> i have added the privacy field
[21:20:19] <pycode> that is not on the real model
[21:20:33] <pycode> but i see that strange output when i do {{ form.privacy }}
[21:20:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[21:25:22] *** Joins: bambanxx (~bambanx@181-163-32-126.baf.movistar.cl)
[21:28:50] *** Joins: CodenameTim (~CodenameT@193.27.13.221)
[21:30:33] <pycode> this: 'privacy': forms.CheckboxInput(attrs={'class': 'custom-control-input'})
[21:30:38] <pycode> does not set the class on the checkbox
[21:30:40] <pycode> now i see it
[21:30:47] <pycode> i am usign privacy = forms.BooleanField()
[21:30:50] <pycode> and then
[21:30:56] <pycode> 'privacy': forms.CheckboxInput(attrs={'class': 'custom-control-input'})
[21:31:03] <pycode> in Meta.widgets
[21:31:10] <pycode> i see the checkbox without that class
[21:31:12] <pycode> why?
[21:36:28] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[21:39:24] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:42:44] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:43:24] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:49:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[22:03:32] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:04:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:06:17] *** Joins: fikran (~fikran@user/fikran)
[22:12:32] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[22:14:06] *** Quits: gs (~behelit@217.61.224.9) (Ping timeout: 260 seconds)
[22:19:55] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[22:24:15] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:44:20] *** Joins: Kalov (~Thunderbi@179.56.68.20)
[22:44:54] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: Ping timeout (120 seconds))
[22:45:14] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[22:48:35] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[22:54:22] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[22:57:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:57:57] *** ChanServ sets mode: +v EvilDMP
[23:06:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[23:08:22] *** Joins: y04nn (~y04nn@193.32.127.238)
[23:09:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:09:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:09:55] *** ChanServ sets mode: +v EvilDMP
[23:17:39] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[23:19:00] <pycode> anyone?
[23:25:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:31:17] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[23:32:07] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[23:36:53] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[23:40:29] *** Quits: ijpiantanida (~ijpiantan@cpe-23-240-166-114.socal.res.rr.com) (Quit: Client closed)
[23:43:11] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[23:46:30] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: Ping timeout (120 seconds))
[23:47:14] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[23:47:28] *** Quits: dodo (~dodo@user/dodo) (Remote host closed the connection)
[23:47:35] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[23:47:43] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[23:49:18] *** Quits: hylje (~hylje@ponie.fi) (Ping timeout: 260 seconds)
[23:49:36] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[23:51:40] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[23:51:40] *** ChanServ sets mode: +v apollo13
[23:51:49] *** Joins: dodo (~dodo@user/dodo)
[23:52:18] <pycode> grr
[23:52:23] <pycode> anyone alive?
[23:52:23] <pycode> :D
[23:52:52] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 252 seconds)
[23:54:09] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[23:54:44] *** Joins: gitly (~gitly@85.255.237.14)
[23:56:57] *** Joins: hylje (~hylje@ponie.fi)
[23:58:48] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
