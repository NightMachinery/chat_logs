[00:04:00] *** Quits: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:09:14] <_death> but SORT may also return a different vector, and the original one may not contain the expected result
[00:13:05] <_death> so perhaps (replace vector (sort (subseq vector start end) ...) :start1 start)
[00:14:17] *** Quits: shka (~herr@109.231.3.55) (Quit: Konversation terminated!)
[00:20:52] <_death> (if you want to guarantee nonconsing behavior, you need to write your own SORT anyway)
[00:26:50] *** Quits: wacki (~wacki@87.122.81.253) (Quit: Leaving.)
[00:27:12] <pjb> Damned, indeed!
[00:27:41] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:30:05] <semz> That sure is a gotcha. I guess it makes sense for consistency with lists.
[00:31:00] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:40:24] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[00:43:44] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:44:39] *** Joins: morganw (~user@80.225.24.132)
[00:47:00] *** Quits: kpoeck (~kpoeck@2a01:598:91b8:b3ce:6574:723e:b347:341e) (Quit: Client closed)
[00:52:51] *** Joins: unyu (~pyon@user/pyon)
[00:54:25] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[00:58:21] *** Quits: Brucio-61 (~Brucio-35@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 252 seconds)
[00:58:30] *** Quits: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc) (Ping timeout: 260 seconds)
[01:01:37] *** Quits: nature (~nature@45.32.235.173) (Quit: Lost terminal)
[01:06:47] *** Inline is now known as UpTheButt
[01:07:13] *** UpTheButt is now known as Inline
[01:08:44] *** Quits: rgherdt_ (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Remote host closed the connection)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:35] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:17:41] *** Joins: lisp123 (~lisp123@120.154.103.52)
[01:22:20] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[01:33:23] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[01:42:34] *** Joins: Brucio-61 (~Brucio-21@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[01:50:01] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[01:50:24] *** Joins: akoana (~ah@user/akoana)
[01:51:06] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[01:52:58] *** Joins: Catie (~user@user/catie)
[01:53:02] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[01:55:35] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:56:38] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[02:03:22] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[02:04:38] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:08:09] *** Quits: skyl4rk (~tlvb@user/tlvb) (Quit: ZNC 1.8.2 - https://znc.in)
[02:09:21] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Client Quit)
[02:11:30] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Ping timeout: 252 seconds)
[02:13:25] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:14:12] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Ping timeout: 240 seconds)
[02:19:41] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[02:33:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:34:08] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[02:34:51] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:36:55] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[02:37:01] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[02:39:03] *** Joins: lisp123 (~lisp123@120.154.103.52)
[02:40:26] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Client Quit)
[02:40:50] *** Quits: Lord_Nightmare (znc@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[02:43:34] *** Joins: Lord_Nightmare (znc@user/lord-nightmare/x-3657113)
[02:43:44] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:43:57] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 252 seconds)
[03:06:59] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[03:11:34] <hashfunc569> why is  `  considered to be an atom --- QUASIQUOTE ---, but  ,  is not considered to be an atom --- instead ,BODY is considered the atom? --- in the form: https://pastebin.com/nWBnDFL9
[03:18:21] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:19:18] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[03:22:40] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:23:30] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:23:40] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 250 seconds)
[03:25:29] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[03:27:30] *** Joins: amk (~amk@109.255.169.126)
[03:27:30] <hashfunc569> in other words, why is the comma not separated out in the form https://pastebin.com/nWBnDFL9
[03:29:34] <pjb> hashfunc569: they are not, in Common Lisp.
[03:30:09] <hashfunc569> what?
[03:30:37] <pjb> hashfunc569: https://termbin.com/0q1k2
[03:31:42] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:34:59] <hashfunc569> pjb: is this a bug in SBCL?
[03:35:02] <hashfunc569> that's what i'm using
[03:36:20] <pjb> Not really. It's implementation defined. But sbcl is an exception amongst CL implementations about backquote.
[03:36:48] <hashfunc569> pjb: dang. do you know of a work-around for this situation?
[03:37:38] <pjb> Well, it could be argued that sbcl is non-conforming there, since after all, ` is a reader macros, so you could expect that it reads as something else than QUASIQUOTE.  But then, ' is a reader macro that reads as QUOTE, so why not.
[03:39:39] <hashfunc569> maybe if i read them in as non-pretty?
[03:39:42] <hashfunc569> i'll try that
[03:39:46] <pjb> hashfunc569: to render your code conforming, you just have to change your expectation. Namely, the result obtained is good as long as you don't expect anything specific.  list* quote list nil list x  or   quasiquote list ,x   whatever.  You'll get some expression and that's all you can expect.
[03:41:58] <hashfunc569> pjb: that's not my end-goal for this tho
[03:42:15] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[03:42:27] <hashfunc569> i need to be able to READ-FROM-STRING the resulting atom
[03:42:36] <pjb> what atom?
[03:42:55] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[03:43:04] <hashfunc569> and (read-from-string ",BODY") renders an error
[03:43:08] <pjb> Sure.
[03:43:15] <pjb> This is not a legal token.
[03:43:20] <pjb> Have you read chapter 2?
[03:43:31] <pjb> (read-from-string "\\,BODY") #| --> \,BODY ; 6 |#
[03:43:57] <hashfunc569> pjb: ok i think i need to rephrase my question:
[03:46:16] *** Joins: buoy49 (sid386684@id-386684.uxbridge.irccloud.com)
[03:46:32] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[03:47:04] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 250 seconds)
[03:51:18] *** Quits: molson (~molson@172-103-21-94-dynamic.midco.net) (Remote host closed the connection)
[03:52:35] <hashfunc569> simply put, i'm trying to get this program to work: https://pastebin.com/Mn3bX9m0
[03:52:42] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 252 seconds)
[04:02:30] <_death> you can bind *print-pretty* to nil.. but in general, not every Lisp object is readable..
[04:06:08] *** Joins: molson (~molson@172-103-21-94-dynamic.midco.net)
[04:06:21] *** Joins: skyl4rk (~tlvb@user/tlvb)
[04:09:10] *** Joins: lisp123 (~lisp123@143.238.164.103)
[04:11:09] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[04:13:56] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 250 seconds)
[04:15:29] <hashfunc569> _death: so binding *print-pretty* to nil works! but... i can't print out the object... (print #S(COMMA :EXPR X :KIND 0)) => "COMMA is not a defined structure type."
[04:19:20] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[04:20:32] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Client Quit)
[04:23:20] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:23:59] <hashfunc569> _death: i don't understand how i can't read nor print #S(COMMA :EXPR X :KIND 0) . is there a way to read/print #S(COMMA :EXPR X :KIND 0)
[04:26:45] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[04:29:41] <_death> well, you are using ~A (aesthetic) to print to standard output.. in this case it strips off the package qualifier
[04:34:03] <_death> (in a manner of speaking.. it just prints the symbol name, not actually stripping something off)
[04:35:19] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[04:41:47] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:43:17] <hashfunc569> wow, for the longest time i thought ~S, meant format to a string
[04:50:05] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[04:54:44] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[04:57:48] <_death> Lots of Interesting Surprises Provided
[05:07:12] <pjb> hashfunc569: then use ~S, not ~A
[05:07:49] <pjb> as you discovered.
[05:10:12] *** Joins: razetime (~quassel@117.254.35.162)
[05:12:16] <pjb> hashfunc569: also, when using read-from-string, you can use prin1-to-string to generate the strings you will be reading.
[05:18:12] *** Quits: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net) (Remote host closed the connection)
[05:33:13] *** Joins: s-liao (~s-liao@101.86.164.158)
[05:55:42] *** Joins: lisp123 (~lisp123@143.238.164.103)
[06:02:42] *** Quits: lisp123 (~lisp123@143.238.164.103) (Quit: Leaving...)
[06:04:19] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 256 seconds)
[06:06:47] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[06:07:57] *** Joins: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[06:10:30] *** Quits: Inline (~Inline@p200300cd470af600c32f3b3744c2844b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:10:31] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:17:21] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[06:20:08] *** Joins: razetime (~quassel@117.254.35.162)
[06:22:21] *** Joins: s-liao (~s-liao@101.86.164.158)
[06:22:43] <hashfunc569> how is this form erroneous: (DEFMACRO MAC (X . NIL) (SB-INT:QUASIQUOTE (LIST ,X . NIL) . NIL) . NIL)
[06:22:54] <hashfunc569> but, this form is not erroneous: (DEFMACRO MAC (X . NIL) `(LIST ,X . NIL) . NIL)
[06:37:06] *** Joins: Everything (~Everythin@37.115.210.35)
[06:39:08] <neominimum> Can a function have multiple designators? e.g. package1::foo points to the same function as package2::bar
[06:41:16] <neominimum> *points to/names
[06:47:25] <neominimum> wait, couldn't I do something like setf the symbol-function to the function object?
[06:47:29] *** Parts: Everything (~Everythin@37.115.210.35) ()
[06:51:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[06:51:40] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:53:03] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[06:56:11] <neominimum> hashfunc569: I'm curious about all the `. NIL`'s what is that for?
[06:56:18] *** Joins: s-liao (~s-liao@101.86.164.158)
[06:59:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[07:03:16] <neominimum> I mean, I understand it is dot notation for building lists, but why are you writing code using explicit dot notation.
[07:03:46] <neominimum> simply curiosity?
[07:14:33] *** Joins: vats (~vats@103.216.143.232)
[07:18:17] *** Quits: paul0 (~paul0@user/paul0) (Quit: Leaving)
[07:25:47] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[07:26:39] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 252 seconds)
[07:28:59] <hashfunc569> neominimum: it's just what i'm generating
[07:29:18] <hashfunc569> i'm mapping over all of the atoms in a form
[07:29:20] <hashfunc569> and that's what i get
[07:29:39] <hashfunc569> i don't care that it looks that way right now, i just want to get it to work
[07:30:08] <beach> Good morning everyone!
[07:31:35] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[07:31:39] <beach> neominimum: Yes, a single function can have an arbitrary number of names.  But remember that a function name is not necessarily a symbol.  I recommend you use FDEFINITION rather than symbol-FUNCTION.
[07:33:58] <beach> hashfunc569: What is it in your program that doesn't work?
[07:34:14] <beach> hashfunc569: Or rather, what did you expect it to do that it doesn't?
[07:34:25] *** Joins: aeth_ (~aeth@user/aeth)
[07:34:25] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[07:34:30] *** aeth_ is now known as aeth
[07:34:35] <neominimum> hashfunc569: Ah, okay :)
[07:36:01] <neominimum> beach: Thanks, I'll check out FDEFINITION
[07:36:35] <beach> You may consider SYMBOL-FUNCTION as deprecated.
[07:36:49] *** Joins: semz_ (~semz@user/semz)
[07:39:20] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[07:39:47] *** semz_ is now known as semz
[08:08:11] *** Joins: razetime (~quassel@117.254.35.162)
[08:09:32] <neominimum> beach: Oh right, because a function designator can also be a list like '(setf foo) and SYMBOL-FUNCTION only takes a symbol.
[08:10:29] <beach> Exactly.  It is not a "function designator" though.  It is just a "function name".  Check the glossary.
[08:11:00] <neominimum> Ah, okay
[08:11:32] <beach> Interestingly, "function designator" does not include names such as (SETF <symbol>).  For that you need an "extended function designator".
[08:22:42] <neominimum> I wonder why the spec makes that distinction.
[08:22:55] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[08:22:58] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:24:23] <beach> You would have to ask a member of X3J13.
[08:30:33] <neominimum> Issue 174 - FUNCTION-NAME seems to have some information regarding the definitions.
[08:31:04] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:22] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[08:34:24] <beach> I don't understand.
[08:37:54] <neominimum> This Spec Cleanup Issue talks about the introduction of 'function-name'  http://www.lispworks.com/documentation/HyperSpec/Issues/iss174_w.htm
[08:38:17] <beach> Ah, OK.  I see.
[08:38:23] <neominimum> to refer to functions as both symbols and lists
[08:49:33] <hashfunc569> beach: in this form: https://pastebin.com/nWBnDFL9, i would expect the , to be separated from the symbol BODY, but instead they are one in the same. i'm wondering what i need to do in order separate them
[08:50:08] <hashfunc569> *sorry, from the symbol X
[08:51:18] <beach> It is not standardized what the reader does with ` and , so you can't expect that.
[08:51:51] <beach> It so happens that SBCL wraps the form that follows the , in a struct instance.
[08:53:34] <beach> Some implementations may wrap it in something like (UNQUOTE X) which is not an atom, but SBCL wraps it in a struct instance which *is* an atom.
[08:53:50] <hashfunc569> ok, so what i'm trying to do is map over all atoms in a form. it works perfectly fine, but when i come across the "atom" ,BODY (or something of the likes thereof) i get the error "Comma not inside a backquote." and it's really screwing up my program
[08:54:10] <beach> That's different.
[08:54:31] <beach> You are trying to read from a string that contains something like ",X".
[08:55:14] <beach> That in itself won't work, because the reader must see both the ` and the , in one invocation of READ.  Otherwise, if it sees only a , in such an invocation, it will signal an error.
[08:55:21] <hashfunc569> yes, and i expected that the atoms would be separated into: UNQUOTE X
[08:55:46] <beach> What makes you expect that?  There is nothing in the standard that supports that expectation.
[08:56:04] <beach> Plus, as I said, you can't read just ",X".
[08:56:14] <hashfunc569> i guess i just presupposed that ` and , were syntatic sugar for atoms
[08:56:17] <hashfunc569> themselves
[08:56:49] <hashfunc569> so dang, my program is really screwed then isn't it
[08:57:15] <beach> Again, you have two separate and unrelated problems.
[08:57:59] <hashfunc569> i understand that i can't just read ",X". but instead i wish they separated into UNQUOTE and X
[08:58:29] <beach> It is separated.
[08:58:51] <hashfunc569> not in a simple way from what i'm seeing
[08:58:53] <beach> It is just that SBCL separates them by wrapping the X in a structure instance which is an atom.
[08:59:01] <beach> It has nothing to do with simple or not.
[08:59:33] <beach> Other implementations may wrap the X in a list, which is *not* an atom.
[08:59:49] <beach> And which one the implementation does is not standardized.
[09:00:35] <hashfunc569> if i set *print-pretty* to nil, i clearly see this structure, but i can't even print it nor read it. so it is not simple
[09:00:36] <beach> So, in summary, you can not count on your implementation to make ,X wrap the X in a list.
[09:01:32] <beach> There is no definition of "simple" in the standard that supports your claim.
[09:02:45] <hashfunc569> this is a bug in SBCL in my opinion
[09:03:04] <beach> It is not.  But it is an unusual choice they made.
[09:03:18] <beach> Presumably to make it easier to print forms like that as ,X.
[09:03:37] <hashfunc569> in my test program, if i set *print-pretty* to T i get this output: (DEFMACRO MAC (X . NIL) (SB-INT:QUASIQUOTE (LIST #S(SB-IMPL::COMMA :EXPR X :KIND 0) . NIL) . NIL) . NIL)
[09:03:39] <beach> Again, it is not standardized what the reader does with ` and ,
[09:03:44] <hashfunc569> this DOES evaluate without an error
[09:03:46] <hashfunc569> however
[09:03:55] <hashfunc569> if i set *print-pretty* to nil
[09:04:10] <hashfunc569> i get this output: (DEFMACRO MAC (X . NIL) (SB-INT:QUASIQUOTE (LIST ,X . NIL) . NIL) . NIL)
[09:04:16] <hashfunc569> and that IS an error
[09:04:25] <beach> Are you sure it's not the other way around?
[09:04:55] <hashfunc569> i'm using SBCL
[09:05:06] <hashfunc569> you can test both forms to see for yourself
[09:05:16] <beach> I know.  I am asking about *print-pretty* being T or NIL.
[09:05:57] <beach> If you were to report a bug, what would your report say?
[09:05:59] <hashfunc569> sorry, yes
[09:06:05] <hashfunc569> it's the other way around
[09:06:08] <hashfunc569> but the point still holds
[09:06:35] <hashfunc569> that the fact of setting *pretty-print* to NIL or T shouldn't effect the outcome of a program
[09:06:55] <beach> Then what purpose would that variable serve?
[09:07:01] <hashfunc569> in my case, if it's T the program is an error. however, if it's NIL the program works fine
[09:07:27] <beach> So your bug report would say something like "I want my program to work and it doesn't, so that's a bug in SBCL"?
[09:08:23] <hashfunc569> is that not erroneous behavior, though? a program should work the same regardless if *pretty-print* is set to nil or t. i feel like that is indisputable
[09:10:12] <beach> What makes you think that any program that reads the output being printed with *print-pretty* T should work if it works with *print-pretty* NIL?
[09:10:22] <beach> There is nothing in the standard that guarantees that.
[09:13:30] <hashfunc569> beach: in understand your reasoning
[09:13:39] <hashfunc569> *i understand your reasoning
[09:13:45] <hashfunc569> i'll just have to find a way to work around it
[09:32:58] <hashfunc569> i guess a better question is: is there an optin to fully expand reader macros before they are read?
[09:33:45] <hashfunc569> btw, beach, thanks for the feedback
[09:33:53] <beach> Sure.
[09:34:00] <beach> You can use a different reader, like Eclector.
[09:34:33] <hashfunc569> dang. i was hoping that there was something non-external
[09:35:55] <beach> What you want to do amounts to re-implementing the reader anyway, so you might as well use one that exists, is documented, and is configurable.
[09:38:33] <hashfunc569> the work-around i was thinking is going along the lines of: save atom as a string -> restore atom and unstringify it
[09:38:35] <hashfunc569> idk
[09:46:49] <hashfunc569> i got it to work
[09:47:45] <hashfunc569> beach: _death: thanks for the help
[09:48:10] <beach> Pleasure.
[09:57:30] *** Joins: nature (~nature@45.32.235.173)
[10:06:01] *** Joins: pve (~pve@178-55-187-75.bb.dnainternet.fi)
[10:33:29] *** Joins: s-liao (~s-liao@101.86.164.158)
[10:34:19] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:34:36] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[10:37:05] <pjb> hashfunc569: you've not understood the difference between ~A and ~S, between princ and prin1 and between ,X and \,X !!!  Try: (DEFMACRO MAC (X . NIL) (SB-INT:QUASIQUOTE (LIST \,X . NIL) . NIL) . NIL)
[10:37:13] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 256 seconds)
[10:53:13] *** Joins: kpoeck (~kpoeck@88.128.88.68)
[10:56:09] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 256 seconds)
[11:02:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[11:04:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:10:44] *** Joins: razetime (~quassel@117.254.35.35)
[11:10:46] *** Joins: lisp123 (~lisp123@143.238.164.103)
[11:18:37] *** Quits: razetime (~quassel@117.254.35.35) (Ping timeout: 240 seconds)
[11:30:21] *** Quits: kpoeck (~kpoeck@88.128.88.68) (Quit: Client closed)
[11:37:55] *** Joins: razetime (~quassel@117.254.35.215)
[11:44:10] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 250 seconds)
[11:45:37] *** Joins: kpoeck (~kpoeck@88.128.88.68)
[11:52:53] *** Joins: Oddity (~Oddity@user/oddity)
[12:00:27] *** Quits: vats (~vats@103.216.143.232) (Remote host closed the connection)
[12:04:36] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[12:20:28] *** Joins: nulluint (uid547282@user/nulluint)
[12:29:13] *** Quits: beach (~user@2a01:cb19:150:3400:91c8:17b3:d153:b444) (Quit: ERC (IRC client for Emacs 26.3))
[12:30:17] *** Quits: bhyde[m] (~bhydematr@2001:470:69fc:105::70e) (Quit: You have been kicked for being idle)
[12:31:08] *** Quits: kpoeck (~kpoeck@88.128.88.68) (Quit: Client closed)
[12:43:29] *** Joins: lisp123 (~lisp123@143.238.164.103)
[12:48:23] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 252 seconds)
[13:01:45] <_death> an alternative to implementing/using a new reader is to implement/use new backquote/comma reader macros.. then you can make sure `(,x) translates to something like (my-backquote (#S(my-comma :expr x :kind 0))) or whatever, assuming the code doesn't has its own reader macros.. check out a library called fare-quasiquote
[13:03:13] <_death> *have
[13:07:25] *** Joins: lisp123 (~lisp123@143.238.164.103)
[13:17:55] <pjb> _death: unfortunately. hashfunc569 as left.
[13:18:35] <_death> I see
[13:18:42] <pjb> +h
[13:21:00] *** Joins: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[13:22:08] *** Quits: Inline__ (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:23:05] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[13:42:32] *** Quits: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de) ()
[13:45:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:47:48] *** Quits: mingus (~jan-magnu@auth-147-98.anyconnect.uib.no) (Ping timeout: 240 seconds)
[13:48:39] *** Joins: mingus (~jan-magnu@auth-147-136.anyconnect.uib.no)
[13:51:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:52:22] *** Quits: lisp123 (~lisp123@143.238.164.103) (Remote host closed the connection)
[14:03:43] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[14:04:49] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:06:53] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[14:08:18] *** Joins: heisig (~heisig@62.28.145.205)
[14:15:23] <heisig> For those attending ELS in person, there will be a social event tomorrow (20.3.) at 12:30 at https://www.openstreetmap.org/#map=19/41.1379/-8.61277 (Largo de Miguel Bombarda).  The plan is to have lunch together.
[14:20:14] *** Quits: heisig (~heisig@62.28.145.205) (Ping timeout: 252 seconds)
[14:23:31] *** Joins: heisig (~heisig@62.28.145.205)
[14:27:59] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:33:26] *** Joins: aeth_ (~aeth@user/aeth)
[14:33:26] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[14:33:31] *** aeth_ is now known as aeth
[14:33:51] *** Joins: lisp123 (~lisp123@143.238.164.103)
[14:38:51] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 256 seconds)
[14:39:48] *** Quits: heisig (~heisig@62.28.145.205) (Quit: Leaving)
[14:43:24] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 240 seconds)
[14:45:39] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[14:45:42] *** Joins: razetime (~quassel@117.254.35.215)
[14:46:34] *** Joins: s-liao (~s-liao@101.86.164.158)
[14:53:24] <neominimum> I'll put $5 on 'hashfunc726' for tomorrow please.
[14:53:32] *** Quits: mingus (~jan-magnu@auth-147-136.anyconnect.uib.no) (Ping timeout: 240 seconds)
[14:59:42] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:02:05] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[15:02:32] *** Joins: mingus (~jan-magnu@auth-147-98.anyconnect.uib.no)
[15:05:35] *** Joins: mingus_ (~jan-magnu@auth-147-98.anyconnect.uib.no)
[15:05:43] *** Joins: s-liao (~s-liao@101.86.164.158)
[15:11:20] *** Quits: mingus (~jan-magnu@auth-147-98.anyconnect.uib.no) (Quit: leaving)
[15:11:20] *** Quits: mingus_ (~jan-magnu@auth-147-98.anyconnect.uib.no) (Quit: leaving)
[15:13:21] *** Joins: frgo (~frgo@p5dec3aab.dip0.t-ipconnect.de)
[15:20:21] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:25:12] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[15:28:04] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:32:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[15:43:27] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 256 seconds)
[15:49:11] *** Joins: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt)
[15:57:25] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 240 seconds)
[15:58:29] *** Joins: vats (~vats@103.216.143.232)
[16:00:26] *** Joins: wacki (~wacki@87.122.93.190)
[16:05:50] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[16:14:11] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[16:17:09] <ck_> I usually hash everything to :red or :black, makes the functions easier to implement
[16:22:59] *** Joins: Bike (~Bike@71.69.170.70)
[16:25:55] *** Joins: lisp123 (~lisp123@143.238.164.103)
[16:26:21] *** Quits: karlosz (~karlosz@bl18-25-12.dsl.telepac.pt) (Quit: karlosz)
[16:27:40] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:30:36] *** Quits: lisp123 (~lisp123@143.238.164.103) (Ping timeout: 252 seconds)
[16:37:17] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:37:26] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:38:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:42:11] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[16:42:14] *** Joins: trumae_ (~trumae@170.231.88.62)
[16:49:13] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[16:52:58] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[16:54:01] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Client Quit)
[16:57:26] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:02:21] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Quit: Leaving)
[17:04:37] *** Quits: vats (~vats@103.216.143.232) (Ping timeout: 240 seconds)
[17:08:18] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[17:08:29] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[17:09:12] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[17:10:20] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[17:13:06] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[17:19:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl)
[17:23:35] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:27:02] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:29:40] *** Quits: trumae_ (~trumae@170.231.88.62) (Quit: leaving)
[17:31:37] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 240 seconds)
[17:32:15] *** Quits: s-liao (~s-liao@101.86.164.158) (Quit: Client closed)
[17:32:35] *** Quits: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:33:27] *** Joins: trumae (~trumae@170.231.88.62)
[17:37:07] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:37:39] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl) (Client Quit)
[17:37:49] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:40:05] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[17:41:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[17:42:12] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[17:43:10] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 268 seconds)
[17:43:17] *** Joins: amb007 (~a_bakic@89.14.23.93.rev.sfr.net)
[17:44:17] *** Joins: razetime (~quassel@117.254.35.215)
[18:00:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:03:52] *** Quits: trumae (~trumae@170.231.88.62) (Quit: Quit)
[18:04:06] *** Joins: trumae (~trumae@170.231.88.62)
[18:08:31] *** Quits: amb007 (~a_bakic@89.14.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[18:09:11] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[18:10:27] *** Joins: Bike (~Bike@71.69.170.70)
[18:10:28] *** Joins: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt)
[18:13:02] *** Joins: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no)
[18:14:34] *** Quits: trumae (~trumae@170.231.88.62) (Quit: Quit)
[18:14:47] *** Joins: trumae (~trumae@170.231.88.62)
[18:16:40] *** Joins: kevingal (~quassel@176.61.88.240)
[18:17:14] <drbluefall> Okay, for some reason `cl-unicode` is just refusing to load. It keeps complaining about a symbol named `*standard-optimize-settings*` in `cl-ppcre` not being present. Checking the sources by hand, though, proves that not to be the case.
[18:17:35] <drbluefall> I have legitimately no clue why it isn't finding it.
[18:27:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:31:19] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:32:50] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[18:32:53] *** Joins: ldb (~user@user/ldb)
[18:40:33] <drbluefall> What's even *more* nonsense is that when I quickload `cl-unicode` in a repl.it instance, it works fine.
[18:43:32] *** Joins: ferminmf (~ferminmf@bl15-44-185.dsl.telepac.pt)
[18:43:45] <ferminmf> Hello!
[18:44:13] <froggey> Hi Fermin!
[18:46:14] <ferminmf> Porto seems quite nice, quite vertical tho
[18:48:23] *** Quits: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no) (Ping timeout: 250 seconds)
[18:50:16] *** Quits: ferminmf (~ferminmf@bl15-44-185.dsl.telepac.pt) (Quit: Client closed)
[18:51:24] *** Quits: razetime (~quassel@117.254.35.215) (Ping timeout: 252 seconds)
[18:52:12] *** Joins: cage (~cage@dynamic-adsl-94-34-137-6.clienti.tiscali.it)
[19:03:56] *** Joins: razetime (~quassel@117.254.35.162)
[19:08:43] *** Quits: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt) (Quit: Client closed)
[19:10:11] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:10:22] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[19:10:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[19:12:00] *** Quits: X-Scale (~ARM@92.250.103.125) (Ping timeout: 272 seconds)
[19:12:01] *** X-Scale` is now known as X-Scale
[19:12:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:19:26] *** Joins: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no)
[19:20:29] *** Quits: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no) (Client Quit)
[19:21:22] *** Joins: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no)
[19:21:32] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[19:22:38] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[19:22:38] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[19:22:38] *** Joins: tane (~tane@user/tane)
[19:23:34] *** Joins: aeth (~aeth@user/aeth)
[19:28:06] *** Quits: mingus (~jan-magnu@auth-146-53.anyconnect.uib.no) (Quit: leaving)
[19:28:09] *** Quits: trumae (~trumae@170.231.88.62) (Read error: Connection reset by peer)
[19:28:29] *** Joins: trumae (~trumae@170.231.88.62)
[19:31:39] *** Quits: trumae (~trumae@170.231.88.62) (Read error: Connection reset by peer)
[19:31:49] *** Joins: trumae (~trumae@170.231.88.62)
[19:32:55] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4.1)
[19:33:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[19:33:52] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[19:36:03] *** Joins: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt)
[19:37:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:38:31] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[19:43:48] *** Quits: skyl4rk (~tlvb@user/tlvb) (Quit: ZNC 1.8.2 - https://znc.in)
[19:46:38] *** Joins: skyl4rk (~tlvb@user/tlvb)
[19:46:46] *** Quits: skyl4rk (~tlvb@user/tlvb) (Remote host closed the connection)
[19:48:18] *** Joins: skyl4rk (~tlvb@user/tlvb)
[19:59:59] <drbluefall> well
[20:00:17] <drbluefall> I found what was interfering with `cl-unicode`.
[20:00:49] <drbluefall> *apparently*, Practical Common Lisp included a bundled version of `cl-ppcre`.
[20:01:17] <drbluefall> One that had been loaded instead of using a version pulled from Quicklisp.
[20:01:41] <drbluefall> and I did not discover this until I called `asdf:system-source-directory`.
[20:01:45] <drbluefall> headdesk
[20:02:34] *** Joins: Bike (~Bike@71.69.170.70)
[20:03:14] *** Quits: razetime (~quassel@117.254.35.162) (Ping timeout: 260 seconds)
[20:06:17] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[20:22:36] *** Joins: parjanya (~esb@2804:14c:1ad:9351:da4f:f2c4:abd6:1e10)
[20:23:39] *** Quits: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Remote host closed the connection)
[20:28:13] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:29:22] *** Joins: vats (~vats@103.216.143.232)
[20:32:11] *** Quits: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt) (Quit: Client closed)
[20:32:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:56:44] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[20:57:30] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[21:04:31] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[21:05:01] *** Joins: amb007 (~a_bakic@89.14.23.93.rev.sfr.net)
[21:07:37] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:54] *** Joins: simendsjo (~user@84.211.91.241)
[21:14:38] *** Quits: Devon (~devon@c-69-138-77-21.hsd1.va.comcast.net) (Ping timeout: 260 seconds)
[21:15:10] *** Joins: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com)
[21:15:43] *** Quits: amb007 (~a_bakic@89.14.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[21:27:37] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 240 seconds)
[21:29:32] *** Quits: trumae (~trumae@170.231.88.62) (Ping timeout: 240 seconds)
[21:30:22] *** Joins: amk (~amk@109.255.169.126)
[21:34:00] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[21:49:00] *** Joins: McParen (~mcp@user/mcparen)
[21:50:53] *** Joins: trumae (~trumae@170.231.88.62)
[21:51:41] *** Joins: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[21:51:42] *** Joins: amb007 (~a_bakic@69.105.204.77.rev.sfr.net)
[21:55:14] *** Quits: trumae (~trumae@170.231.88.62) (Ping timeout: 260 seconds)
[21:55:25] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[21:56:18] *** Quits: kevingal (~quassel@176.61.88.240) (Remote host closed the connection)
[22:00:03] *** Joins: Oddity (~Oddity@user/oddity)
[22:02:32] *** Quits: vats (~vats@103.216.143.232) (Ping timeout: 240 seconds)
[22:04:59] *** Joins: Bike (~Bike@71.69.170.70)
[22:05:17] *** Joins: trumae (~trumae@177.185.113.185)
[22:14:20] *** Quits: trumae (~trumae@177.185.113.185) (Ping timeout: 252 seconds)
[22:14:31] *** Joins: trumae (~trumae@2804:18:5041:1915:1:0:c6a9:340f)
[22:32:52] *** Quits: phantomics (~phantomic@97-118-157-121.hlrn.qwest.net) (Quit: Ex-Chat)
[22:34:27] *** Quits: tyson2 (~user@cpeac202e798f63-cmac202e798f60.cpe.net.cable.rogers.com) (Remote host closed the connection)
[22:34:28] *** Quits: trumae (~trumae@2804:18:5041:1915:1:0:c6a9:340f) (Read error: Connection reset by peer)
[22:34:37] *** Quits: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Ping timeout: 240 seconds)
[22:34:46] *** Joins: trumae (~trumae@170.231.88.62)
[22:36:16] *** Joins: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net)
[22:37:29] *** Quits: rgherdt (~rgherdt@port-92-195-30-153.dynamic.as20676.net) (Remote host closed the connection)
[22:48:27] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 252 seconds)
[22:50:54] *** Quits: pve (~pve@178-55-187-75.bb.dnainternet.fi) (Quit: leaving)
[22:50:55] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 240 seconds)
[22:51:20] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:54:57] *** Joins: Oddity (~Oddity@user/oddity)
[22:56:36] *** Quits: trumae (~trumae@170.231.88.62) (Ping timeout: 240 seconds)
[22:57:25] *** Joins: ferminmf (~user@bl15-44-185.dsl.telepac.pt)
[22:57:35] *** Joins: trumae (~trumae@177.185.113.185)
[22:57:38] <ferminmf> /list/
[22:58:07] *** Quits: ferminmf (~user@bl15-44-185.dsl.telepac.pt) (Remote host closed the connection)
[22:58:25] *** Joins: ferminmf (~ferminmf@bl15-44-185.dsl.telepac.pt)
[22:59:29] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:00:31] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[23:10:19] *** Joins: kpoeck (~kpoeck@bl18-241-225.dsl.telepac.pt)
[23:14:03] *** Parts: McParen (~mcp@user/mcparen) ()
[23:15:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[23:20:21] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:46] *** Quits: ferminmf (~ferminmf@bl15-44-185.dsl.telepac.pt) (Quit: Client closed)
[23:23:44] *** Joins: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f)
[23:25:50] *** Quits: eddof13 (~eddof13@2806:102e:12:64:f838:6484:5e24:bd9f) (Client Quit)
[23:31:30] *** Quits: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de) (Quit: Leaving)
[23:33:43] *** Joins: Inline (~Inline@p200300cd472d40002c1b8381bd5618c5.dip0.t-ipconnect.de)
[23:35:06] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:35:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:36:15] *** Joins: Everything (~Everythin@37.115.210.35)
[23:37:51] *** Lord_of_Life_ is now known as Lord_of_Life
[23:37:56] *** Quits: amb007 (~a_bakic@69.105.204.77.rev.sfr.net) (Ping timeout: 252 seconds)
[23:52:19] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
