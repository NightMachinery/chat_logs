[00:00:16] <InPhase> Guest97: You probably have quite a few decades yet though.
[00:01:08] <pyzozord> I should slow down and be more careful of what and how I write too
[00:01:19] *** Quits: sol-86 (~pc@2a02:c7f:44e3:8e00:6dec:5ac0:f15f:7d86) (Ping timeout: 245 seconds)
[00:01:36] <InPhase> Typing is really the primary place that spelling applies in modern society.  People now type far more than they write by hand.  And nobody spells in day to day life unless they are typing or writing.
[00:02:14] <beaky> yes typing wont be obsolete soon not in the next century or more while we still cling to literate text-heavy interfaces to the extent that even in different media like vr and phone keyboards typing out text is a primary mode of input
[00:02:18] <GeDaMo> Also, programming tends to involve a fair amount of typing
[00:03:53] *** Joins: inky (~inky@141.136.79.172)
[00:04:47] <Guest97> how 2/more arrays are stored in memory?
[00:05:09] <Guest97> & what happens if i add/delete any element from an array
[00:05:16] <InPhase> Also, practicing grammar in the production of spoken languages has benefits for programming.  Code structure reasoning can reuse a lot of the same neural pathways that get used for spoken language grammar.
[00:05:39] <GeDaMo> Guest97: depends on which language
[00:06:09] *** Joins: nifl (~user@60.223.246.61)
[00:06:58] *** nifl is now known as niflce
[00:06:58] <Guest97> Python & JS GeDaMo 
[00:07:45] <GeDaMo> I'm not sure if Python has arrays, it has lists
[00:07:54] *** niflce is now known as nifl
[00:07:54] <beaky> i wish agda has arrays
[00:07:57] <GeDaMo> JS arrays are associative arrays, like hashtables
[00:08:01] <beaky> even coq has them now
[00:08:06] *** Quits: inky (~inky@141.136.79.172) (Client Quit)
[00:08:30] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[00:08:51] <beaky> arrays are the most important datat structure
[00:08:58] *** Joins: inky (~inky@141.136.79.172)
[00:09:27] <InPhase> Guest97: Python lists are resizeable overallocated arrays of pointers to the data elements.  Adding elements to the end of a python list simply fills it into the end and increases the size count if there is room, or triggers a reallocation and copy if it needs more space to add that element.  Inserting an element into the middle causes a copy of all the pointers following the insertion.
[00:09:59] <quippy> why would insert cause a copy of following pointers if it's an array
[00:10:19] <quippy> if you know the index of the array, in the backing C code, you can just replace a member in-place; it's not a linked list
[00:10:36] <InPhase> quippy: Because you need to preserve order.
[00:10:39] <quippy> oh I misunderstood, you mean adding an element and I thought you meant replacing an element
[00:10:46] <InPhase> Yep.
[00:10:52] *** Quits: nifl (~user@60.223.246.61) (Quit: ERC (IRC client for Emacs 27.2))
[00:10:55] <quippy> yeah okay that makes sense, carry on, sorry for the interruption
[00:11:00] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[00:11:07] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:11:16] <InPhase> Your quip was accepted.  :)
[00:11:18] *** Joins: nifl (~user@user/niflce)
[00:11:19] <quippy> :D
[00:11:23] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 244 seconds)
[00:12:36] *** Quits: Guest0 (~Guest0@pool-11.252.176.62.dynamic.wobline-ip.de) (Quit: Connection closed)
[00:13:04] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[00:13:13] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Quit: soapsudsxx)
[00:13:26] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[00:16:08] <Guest97> " The elements of an array are stored contiguously in memory: " is it true for any for any language?
[00:16:47] <riv> no
[00:17:28] <riv> it's good when they are contiguous, looping through the array is faster due to cache
[00:17:50] <riv> but some languages may implement "arrays" in weird ways
[00:17:52] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:18:16] <riv> they could be trees internally, or a long array might be a linked list of short arrays
[00:18:16] *** Quits: nifl (~user@user/niflce) (Quit: ERC (IRC client for Emacs 27.2))
[00:18:32] *** Joins: niflce (~user@user/niflce)
[00:18:39] <Guest97> is there any way to find out on which memory location a particular element of an array is stored?
[00:19:04] <pyzozord> Guest97: depends on the language, some give you that information some don't
[00:19:10] *** niflce is now known as nifl
[00:19:47] *** Quits: nifl (~user@user/niflce) (Client Quit)
[00:20:19] *** Joins: nifl (~user@60.223.246.61)
[00:20:21] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: leaving)
[00:20:29] *** Quits: Qchmqs (~qchmqs@user/qchmqs) (Ping timeout: 244 seconds)
[00:21:13] *** Quits: inky (~inky@141.136.79.172) (Read error: Connection reset by peer)
[00:21:28] <Guest97> tree, hash, array are example of data structure. so does it mean some language supports only some of the data structure only (natively)?
[00:21:42] *** Quits: dev4449 (~dev4449@195.246.120.58) (Ping timeout: 272 seconds)
[00:22:08] <quippy> yes, different languages have different features
[00:22:52] *** Quits: nifl (~user@60.223.246.61) (Changing host)
[00:22:52] *** Joins: nifl (~user@user/niflce)
[00:23:03] <Guest97> so tuple or dictionary are not called data structure?
[00:23:05] *** Quits: luckyxxl (~luckyxxl@185.209.196.174) (Quit: bye)
[00:23:07] <Guest97> (python)
[00:23:29] <EdFletcher> data structures are an abstraction not directly tied to any implementation. while not all standard libraries include implementations of every data structure, all data structures can be implemented in any (turing complete) language
[00:24:16] <InPhase> EdFletcher: I'm not sure that's actually true.
[00:24:17] *** Joins: node1 (~node1@user/node1)
[00:24:25] <Guest97> i am bit messed with terminology, so is there any chart/cross corelation map of which terminology of any language applies for which data structure?
[00:24:33] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:24:34] <InPhase> EdFletcher: Turing completeness does not come with the same guarantees that you get from specified data structures.
[00:25:30] *** awk is now known as mnrmnaugh
[00:25:37] <InPhase> EdFletcher: An algorithm can be arbitrarily inefficient in an alternate Turing complete system, and still count as equivalent.  But if your insertions are not O(1) you don't have a formal linked list.
[00:26:18] *** Joins: inky (~inky@141.136.79.172)
[00:27:39] <InPhase> EdFletcher: Although I don't think I ever thought about this question before today.  It is an interesting division.
[00:29:18] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[00:30:22] <EdFletcher> InPhase: yeah i have to admit i don’t have proof of this, but i have considered it before and the thought excercise led me to believe it was true. agreed it’s an interesting question indeed, would love to find a concrete body of work on it. please do let me know if you find anything, thank you!
[00:30:52] *** Joins: dev4449 (~dev4449@86.57.94.57)
[00:31:06] *** Quits: dev4449 (~dev4449@86.57.94.57) (Client Quit)
[00:32:06] <EdFletcher> though your O(1) linked list argument is a powerful one, and i have to spend some time considering it! good call though, appreciate the nudge. work beckons but will continue to ponder for sure
[00:34:12] <EdFletcher> but given that O(1) insertion is just a couple pointer swaps and an allocation, all of which should be equivalently-represent-able in similar complexity in a reference turing machine (IIRC?), then it should be possible. dammit now you've really got me thinking about this and i really need to do work. :D
[00:34:58] *** nifl is now known as niflce
[00:35:09] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Read error: Connection reset by peer)
[00:35:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:35:41] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[00:35:53] *** Quits: niflce (~user@user/niflce) (Quit: ERC (IRC client for Emacs 27.2))
[00:36:14] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[00:36:44] *** Joins: nifl (~user@user/niflce)
[00:36:55] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[00:36:58] *** Quits: dislabled (~dislabled@150.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[00:40:05] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[00:40:52] *** Quits: Rob_ (~Rob_@212.71.9.85) (Quit: WeeChat 2.8)
[00:43:02] *** Joins: austin__ (~ausserz@n219073000163.netvigator.com)
[00:43:29] *** Quits: magla (~gelignite@55d4f5e7.access.ecotel.net) (Quit: Stay safe!)
[00:45:25] *** Quits: reumeth (~reumeth@user/reumeth) (Remote host closed the connection)
[00:45:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[00:45:55] *** Joins: reumeth (~reumeth@user/reumeth)
[00:49:04] *** Quits: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Read error: Connection reset by peer)
[00:50:50] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 272 seconds)
[00:54:00] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 272 seconds)
[00:57:03] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[00:57:05] <routeveg> Hi all
[00:57:46] <adder> hi
[00:58:02] <routeveg> Anyone know of an ARM64 computer with a good amount of MIPS + RAMs? Nvidia Xavier AGX is almost it, but includes a bunch of TFLOPS and other GPUish stuff that I don't need, and is pricey.
[00:58:21] <routeveg> ODroid-N2+ is...kinda what I am after, but only 4G RA
[00:58:23] <routeveg> -M
[01:00:14] <lf94> Raspberry Pi 4
[01:00:23] <lf94> There is an 8GB version iirc
[01:00:49] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[01:00:54] <routeveg> I was thinking of that, but it just ain't that fast per core
[01:01:21] <routeveg> https://www.phoronix.com/scan.php?page=news_item&px=Raspberry   <-  :(
[01:01:21] <Hitchens> Link: How A Raspberry Pi 4 Performs Against Intel's Latest Celeron, Pentium CPUs - Phoronix
[01:01:55] <lf94> You gotta compromise somewhere for now.
[01:02:10] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[01:02:16] <routeveg> Yeah, IK. I will probably go the Xavier route, cuz I want teh grunt
[01:02:32] <routeveg> But it would be nice to find a Xavier without the GPUish bits.
[01:03:09] *** Joins: dislabled (~dislabled@150.229.164.82.customer.cdi.no)
[01:03:11] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[01:11:03] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[01:11:05] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[01:12:01] *** Joins: Flux (~Fluxx@user/fluxx)
[01:12:24] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:12:33] <Ultrasauce> afaik the higher mips with no gpu ones are all for the server market and you're probably not going to find something cheaper than the tegras there
[01:12:33] *** Joins: foruve (~foruve@ptr-cluam230vavz809a6p0.18120a2.ip6.access.telenet.be)
[01:13:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:14:26] *** Quits: foruve (~foruve@ptr-cluam230vavz809a6p0.18120a2.ip6.access.telenet.be) (Client Quit)
[01:14:39] <Ultrasauce> i don't think mainline support for xavier is quite there yet so you'll be stuck with the vendor kernel fork
[01:14:44] *** Quits: contagious_meow (~salitos@197.156.190.170) (Quit: Leaving)
[01:14:57] <routeveg> Ah really? Thanks for the heads-up
[01:15:16] *** Joins: audiocat (~audio@2603-8081-1800-0062-12fa-dd6b-13e4-1047.res6.spectrum.com)
[01:15:16] <routeveg> Hopefully it wouldn't be much of a problem, as I don't want to use fancy features.
[01:15:26] <routeveg> I just want a CPU lol
[01:15:33] <routeveg> (and memory for it to play in)
[01:15:38] <Ultrasauce> tx2 is feature complete in -next now i believe
[01:15:56] *** Quits: nifl (~user@user/niflce) (Quit: ERC (IRC client for Emacs 27.2))
[01:16:08] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[01:16:24] *** Joins: nifl (~user@user/niflce)
[01:16:48] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 272 seconds)
[01:17:46] <mrig> Guest97: I cant see typing going away just yet, could envisage it being improved though.
[01:18:47] *** Joins: hi^-^ (~^-^hi@user/-hi/x-1729478)
[01:18:54] <mrig> It is interesting to note that for anyone who has tried calligraphy using genuinely permanent pigmented ink, dip pens and even feathers are still one of the best options.
[01:19:09] <mrig> So that is for writing that is designed to last.
[01:20:28] <Ultrasauce> routeveg: what do you need for io?
[01:21:56] *** Joins: tgburrin (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[01:21:57] <Guest97> i feel pace at which technology is growing is quite slow, if still typing is not obsolete mrig
[01:22:11] <routeveg> Ultrasauce: Ethernet would do. This is pretty much a compute server, for running ARM64 code in a virtualized environment, where IO ends up redirected. So no real IO is actually done on the system
[01:23:04] <routeveg> Some kind of PCIE compute card would do, but I don't seem to be able to find any appropriate ones.
[01:25:19] <routeveg> Somewhat adjacent wondering - is there some kind of program/mechanism available for linux whereby you can migrate threads onto a remote system to actually do compute work, but system calls are all redirected back to your 'thin client'?
[01:25:35] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Ping timeout: 244 seconds)
[01:25:59] <routeveg> Such a mechanism would need intimate understanding of system calls to know what data would need shuttling around in order to effectively "RPC" a syscall.
[01:26:29] <routeveg> Feels like qemu-user would have some of the necessary guts.
[01:27:57] *** Joins: hiroshi_ (~freedom@an-19-179-57.service.infuturo.it)
[01:27:58] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:12] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Remote host closed the connection)
[01:28:37] <mrig> Guest97: It is good to look at all aspects of the technology though, including it's history, I find; Somehow the differing perspective really helps to clarify the present.
[01:28:50] *** Quits: mmfood (~mmfood@194.103.157.93) (Ping timeout: 272 seconds)
[01:29:11] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[01:29:34] <mrig> Guest97: There are often clues that be come apparent in the naming of things that then make them easier to remember.
[01:29:46] <mrig> sorry that should be become.
[01:30:08] *** Joins: mmfood (~mmfood@45.135.187.117)
[01:30:44] *** Quits: hiroshi_ (~freedom@an-19-179-57.service.infuturo.it) (Client Quit)
[01:33:41] *** Quits: Akuli (~Akuli@82-203-160-193.bb.dnainternet.fi) (Quit: Leaving)
[01:39:32] *** Quits: starsparrow (~starsparr@75-15-15-233.lightspeed.bltnin.sbcglobal.net) (Ping timeout: 244 seconds)
[01:40:02] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Remote host closed the connection)
[01:44:03] *** Quits: wwilly (~wwilly@2a01:cb10:3e0:4f00:209c:e66c:5b61:7e7a) (Quit: Leaving)
[01:45:43] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:47:06] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:49:49] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 268 seconds)
[01:51:11] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[01:52:08] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[01:52:15] <jamea> mysql question: i have a table with an auto_incremetn field  mytable (field1) and values 1,2,3,4,5,9,11,15,16,17)   how to detect missing ids in this case: 6,7,8,10  any advice?
[01:52:16] *** Quits: dhil (~dhil@195.213.192.47) (Ping timeout: 272 seconds)
[01:53:50] <c705> do you really have to do that though? You could probably do it but it isn't going to be pretty
[01:55:06] *** Quits: Guest97 (~Guest9@43.241.144.108) (Quit: Connection closed)
[01:55:40] *** Quits: motherr (~motherr@user/motherr) (*.net *.split)
[01:55:40] *** Quits: tgburrin (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[01:55:54] *** Joins: motherr (~motherr@user/motherr)
[01:55:54] *** Joins: astroo- (2ea7f406@ircip1.mibbit.com)
[01:56:01] <astroo-> hello people
[01:57:42] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Remote host closed the connection)
[01:59:44] <jamea> c705 why not?
[02:01:46] *** Quits: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr) (Ping timeout: 272 seconds)
[02:03:54] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[02:03:58] <c705> why not what
[02:04:16] <jamea> do you really.....
[02:04:42] <c705> okay, well fell free to ask again when you get around to writing full sentences
[02:04:51] *** Joins: dhil (~dhil@80.208.56.181)
[02:05:08] <adder`> i suppose they want to know why wouldn't it be pretty
[02:07:13] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:10:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:11:28] *** Quits: Bric (~Bric@65.183.3.30) (Ping timeout: 250 seconds)
[02:15:02] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[02:15:41] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[02:17:33] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Remote host closed the connection)
[02:17:59] *** Joins: kariosfox (~kariosfox@176.221.122.114)
[02:18:45] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[02:20:11] <beaky> what is the most efficient way to generate a prime number
[02:21:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.1)
[02:24:18] *** Joins: c2f0 (~dogverflo@185.163.110.119)
[02:24:57] *** Quits: kariosfox (~kariosfox@176.221.122.114) (Ping timeout: 252 seconds)
[02:25:44] <beaky> like O(1) 
[02:26:29] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Quit: Quit)
[02:26:38] *** Parts: c2f0 (~dogverflo@185.163.110.119) ()
[02:26:42] *** Joins: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de)
[02:26:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[02:27:47] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 244 seconds)
[02:28:27] <entuland> a lookup in a table :P
[02:28:46] <beaky> nice i like tablse
[02:29:01] <beaky> the dream would be for an O(1) algorihtm to tell me if any number is prime or not
[02:29:10] <beaky> that also takes O91) ram
[02:29:22] <entuland> you wouldn't be the only one happy with one such algo
[02:30:56] *** Joins: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37)
[02:31:44] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[02:35:35] *** Joins: killsushi (~killsushi@user/killsushi)
[02:36:44] <pony> heh
[02:37:05] <pony> beaky: do you like Lua? :o
[02:37:07] *** Joins: starsparrow (~starsparr@c-73-102-59-99.hsd1.in.comcast.net)
[02:37:55] *** Quits: starsparrow (~starsparr@c-73-102-59-99.hsd1.in.comcast.net) (Client Quit)
[02:48:20] *** Joins: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net)
[02:56:57] *** Joins: analognoise (~analognoi@176.113.73.171)
[02:57:56] *** Quits: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 264 seconds)
[02:59:02] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[02:59:45] <ThePhilgrim> Dear programmers. I am running a friend's python tetris game. When I try to open his "high score" window, I get a TypeError (https://dpaste.com/6JRNM5J6L) on my computer and he gets no error when opening the same window (he can open it). We have both pulled on main, right before running the game. How is that even possible?
[02:59:46] <Hitchens> Host: dpaste.com
[03:00:10] <ThePhilgrim> (I'm on mac, he's on windows.. even though I doubt that is relevant)
[03:00:37] <ThePhilgrim> To me, the f string looks weird... But according to him, it runs on his computer..
[03:01:38] <pulse> is he also running python3
[03:02:46] <ThePhilgrim> yeah :S
[03:02:52] <adder`> if get_time is a function, it's not even being called
[03:03:16] <ThePhilgrim> It is being called here (sry for pasting) 
[03:03:16] <ThePhilgrim> self.topbar_time.config(text=self.time_formatter(self.get_time()))
[03:03:41] <adder`> it isn't called in the traceback you showed, line 11
[03:03:43] <pony> it looks like get_time is a str
[03:03:52] <ThePhilgrim> it is a float tho
[03:04:00] <ThePhilgrim> I printed its type
[03:04:19] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[03:04:25] <adder`> well it's obviously not a float since python says it's a str
[03:05:05] <ThePhilgrim> Well, I added print(type(get_time)) right before the return statement
[03:05:08] <ThePhilgrim> says class float
[03:05:15] <ThePhilgrim> https://github.com/Arrinao/tetris/blob/main/tetris.py full code
[03:05:16] <Hitchens> Link: tetris/tetris.py at main · Arrinao/tetris · GitHub
[03:05:21] <ThePhilgrim> this is happening around line 619
[03:05:47] *** Joins: dogverflow (~dogverflo@185.123.143.199)
[03:06:03] <ThePhilgrim> He's messing with a bunch of fonts I think.. could that have anything to do with it? :S
[03:06:04] <arahael> yep, get_time is a string.
[03:06:52] <ThePhilgrim> arahael, so if I bump down the return statement on 619 to 620, and on 619 I add print(type(get_time)), how can it print "float" over and over?
[03:07:39] <ThePhilgrim> I mean, get_time gets defined by "time.time() - self.start_time - self.paused_time"
[03:07:45] <ThePhilgrim> which looks to me like a float
[03:07:56] <arahael> ThePhilgrim: python is a dynamically typed language.  it may have been float all the times you printed, except the last time that causes the error.
[03:07:59] <emberie> So, just bouncing an idea here. I've been thinking of learning Python AND learning twitch streaming. Think if I streamed myself learning Python people would be interested in watching it? Or would it just be to boring lol
[03:08:32] <arahael> emberie: i would say "you kids get off the lawn" ;)  but the other kids might like it!
[03:08:41] <emberie> I'm 38 lol
[03:08:54] <emberie> I just like learning new things, and figure it oculd do 2 at once.
[03:09:04] <arahael> emberie: heh, so you're older than me!  but still, i dislike the video trend.
[03:09:13] <ThePhilgrim> arahael, hmm okay. But would it make sense that it's a float on the line before the return statement, and then in the return statement it's suddenly a string?
[03:09:16] <emberie> I like the DnD streamers
[03:09:41] <arahael> ThePhilgrim: no.
[03:10:03] *** Quits: dhil (~dhil@80.208.56.181) (Ping timeout: 252 seconds)
[03:10:11] <pony> it may be getting the str from line 273
[03:10:32] <pony> 283 sorry
[03:10:35] <adder`> ThePhilgrim, seems like it's called on line 283, pulled out of high_score_dict, maybe it's a str there
[03:11:21] <ThePhilgrim> Ah, he's actually calling time_formatter() on 283?
[03:11:35] <ThePhilgrim> and taken from a dict.. yeah, looks like a string
[03:11:46] <pony> I can't tell what it is there
[03:11:54] <pony> only that the key is a string
[03:12:12] <ThePhilgrim> mypy would've helped here
[03:12:33] <arahael> ThePhilgrim: mypy would not have helped.
[03:13:01] <adder`> i'm pretty sure mypy would report an error
[03:13:06] <arahael> ThePhilgrim: mypy is a static check you can do, but at runtime there is no type checking.
[03:13:12] <ThePhilgrim> how so? you defined what you want the function to take.. and if it's passing a string instead of a float, mypy would tell you
[03:13:29] *** Joins: gilesc (~textual@2603-8001-3600-dad7-cd0d-5113-7dba-ae3b.res6.spectrum.com)
[03:13:44] <arahael> adder`: mypy would have let you check everything typechecks, but it wouldnt check that the .json data file had the wrong data structure.
[03:13:54] <arahael> ^^ ThePhilgrim .
[03:14:01] <adder`> i know what mypy does
[03:14:09] <ThePhilgrim> I 50% know what mypy does :D
[03:14:23] <arahael> this is a runtime type issue.
[03:14:45] <adder`> which would have been detected at compile time if the type annotations were present
[03:14:49] <ThePhilgrim> I'm mostly surprised that he can be on an updated main and run it without getting an error
[03:15:03] *** Parts: eto (~eto@S010690724005a172.vc.shawcable.net) (Textual IRC Client: www.textualapp.com)
[03:15:26] <arahael> adder`: what would help is a json schema that is typechecked at runtime  *and* mypy.
[03:16:06] <adder`> mypy would do it alone, if you annotated time_formatter
[03:16:59] <ThePhilgrim> Actually, to see I would just import mypy and add ": float) -> str:" right?
[03:17:03] <ThePhilgrim> So I could even try
[03:17:10] <arahael> adder`: i'll conceed it might help encourage you to typecheck the result of the json parse.
[03:17:41] <adder`> yeah ThePhilgrim, let us know if it reports anything, i'm curious
[03:17:47] <ThePhilgrim> I'll check now
[03:18:02] <ThePhilgrim> I am just afraid it will throw 100 errors since i typecheck one function
[03:18:35] <arahael> mypy is an incremental type checker, basically.  it fits in fairly well with typical python code.
[03:19:18] <ThePhilgrim> --strict gives 175 errors :D
[03:20:04] <arahael> not surprising :)
[03:20:25] <adder`> https://mypy-play.net/?mypy=latest&python=3.9
[03:20:25] <Hitchens> Link: mypy Playground
[03:20:29] <ThePhilgrim> hmm, but I can't find any errors around 619
[03:20:51] <ThePhilgrim> but again, I'm not great at doing this so I'm not sure I did this correctly
[03:21:06] <ThePhilgrim> I just did import typing
[03:21:12] <ThePhilgrim> no from typing ....
[03:21:28] <adder`> the mypy play i linked is basically analogous to what you have there
[03:21:44] <ario_> any mongodb experts know what `MongoDB $cmd toArray` is? 
[03:21:49] <ario_> i'm seeing it in my new relic reporting
[03:21:54] <arahael> adder`: except there you have a string literal, not an object that might be a float from a json file.
[03:22:59] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 245 seconds)
[03:23:06] <ThePhilgrim> Okay, so "def time_formatter(self, get_time: float) -> str:" gives no error with mypy.. If I instead do "    def time_formatter(self, get_time: str) -> str:", I get "tetris.py:620: error: Unsupported operand types for / ("str" and "int")"
[03:24:09] <ThePhilgrim> I'm still baffled that it prints type float ..
[03:24:43] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[03:24:57] <arahael> ThePhilgrim: take a look at the json file.
[03:25:06] <ThePhilgrim> tetris.py:620: note: Revealed type is "builtins.float"
[03:25:25] <ThePhilgrim> tetris.py:620: note: Revealed type is "builtins.str"
[03:25:27] <ThePhilgrim> LOOOOL
[03:25:40] <ThePhilgrim> depending what I set it to in the argument definition
[03:25:57] <ThePhilgrim> get_time: float makes it a float, get_time: str makes it a str....
[03:26:17] *** Quits: xff0x_ (~xff0x@2001:1a81:5309:4200:5885:4f5d:c0ef:4e6d) (Remote host closed the connection)
[03:26:34] *** Joins: xff0x_ (~xff0x@2001:1a81:5309:4200:43f:9f66:b597:77c7)
[03:26:47] <ThePhilgrim> hmm, one can do Optional(something) too, right?
[03:27:12] <arahael> ThePhilgrim: mypy will type check as far as it is able, so you should probably check all the callers, and add type annotations to those.
[03:27:33] <ThePhilgrim> hmm, right
[03:27:36] <ThePhilgrim> ok
[03:28:21] *** Quits: nifl (~user@user/niflce) (Quit: ERC (IRC client for Emacs 27.2))
[03:28:52] *** Joins: nifl (~user@user/niflce)
[03:29:10] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:29:44] *** Quits: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net) (Ping timeout: 264 seconds)
[03:31:55] *** Quits: nifl (~user@user/niflce) (Client Quit)
[03:37:54] *** Quits: cisco87 (~quassel@smtp.lnxg33k.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:38:09] *** Joins: cisco87 (~quassel@smtp.lnxg33k.com)
[03:38:44] <adder`> haha this is completely broken
[03:38:45] <adder`> https://termbin.com/bdf2
[03:38:45] <Hitchens> Link: 
[03:39:19] *** Quits: Inari (~Pinkishu@p4fe7ef85.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:42:11] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[03:43:26] *** Quits: longbow (~longbow@5-203-227-212.pat.nym.cosmote.net) (Read error: No route to host)
[03:43:55] <arahael> adder`: right! :)
[03:45:01] <ThePhilgrim> So, after some debugging I found the issue. I had an old version of the json file that gets the data for the highscore. and for some reason, my first blah["Time"] was a string.. and it should be ints. So after resetting the json file, the code ran properly
[03:45:23] *** Quits: jaysicks (~jaysicks@31.46.10.251) (Quit: Leaving)
[03:45:57] * arahael was correct!
[03:47:18] *** Joins: jamea (~jamea77@189.237.190.227)
[03:47:58] *** Quits: gimgiam (~gimgiam@user/gimgian) (Quit: Leaving)
[03:48:05] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[03:49:28] *** Joins: bsdbandit01 (~bsdbandit@172.58.220.146)
[03:50:12] *** Quits: gitgood (~gitgood@80-44-15-238.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[03:56:32] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:56:58] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 244 seconds)
[04:01:57] *** Joins: Ecophobia (~Ecophobia@85-76-131-100-nat.elisa-mobile.fi)
[04:02:04] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:02:38] *** Quits: bsdbandit01 (~bsdbandit@172.58.220.146) (Read error: Connection reset by peer)
[04:03:20] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[04:10:25] *** Joins: bsdbandit01 (~bsdbandit@172.58.220.146)
[04:12:13] *** Quits: gilesc (~textual@2603-8001-3600-dad7-cd0d-5113-7dba-ae3b.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:13:10] *** Quits: Ecophobia (~Ecophobia@85-76-131-100-nat.elisa-mobile.fi) (Quit: Leaving)
[04:13:36] *** Quits: hi^-^ (~^-^hi@user/-hi/x-1729478) (Remote host closed the connection)
[04:13:49] *** Joins: hi^-^ (~^-^hi@ns1003916.ip-51-81-154.us)
[04:13:49] *** Quits: hi^-^ (~^-^hi@ns1003916.ip-51-81-154.us) (Changing host)
[04:13:49] *** Joins: hi^-^ (~^-^hi@user/-hi/x-1729478)
[04:15:53] *** Quits: bsdbandit01 (~bsdbandit@172.58.220.146) (Read error: Connection reset by peer)
[04:16:36] *** Joins: bsdbandit01 (~bsdbandit@172.58.220.146)
[04:17:23] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: Leaving)
[04:20:05] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[04:21:26] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[04:25:10] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[04:25:56] <chester> Rust just isn't mature enough. But I bet python is lol. Is python any better than C++ for general programming? :P
[04:26:08] <chester> or is just as messy?
[04:26:19] *** Quits: bsdbandit01 (~bsdbandit@172.58.220.146) (Read error: Connection reset by peer)
[04:30:54] *** Quits: vdthi (~vdthi@dynamic-077-011-041-138.77.11.pool.telefonica.de) (Ping timeout: 252 seconds)
[04:33:51] <pulse> python is much higher level than c++, it's not in the same ballpark at all
[04:34:00] <pulse> c++ is for performance intensive applications, python is for high-level scripting
[04:35:59] *** Quits: kasper93 (~kasper93@user/kasper93) (Read error: Connection reset by peer)
[04:37:11] *** Joins: rtypo (~alex@user/rtypo)
[04:37:32] <InPhase> chester: My two top-choice languages for getting things done are Python and C++.  And I concur they in general have very different usage spaces.
[04:39:33] <InPhase> chester: Python is a superb general purpose programming language for smaller programs that you want to develop very quickly, and where you can benefit from a massive existing set of libraries.  C++ is the top choice when you need a mature set of tooling and libraries but also want something that will scale to large programs with high reliability, and/or retain peak performance levels.
[04:40:36] *** Quits: snake (~snake@user/snake) (Ping timeout: 265 seconds)
[04:41:05] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 244 seconds)
[04:41:54] *** Quits: jamea (~jamea77@189.237.190.227) (Ping timeout: 252 seconds)
[04:43:07] *** Joins: jamea (~jamea77@189.237.190.227)
[04:45:51] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[04:46:30] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[04:48:13] *** Joins: c2f00 (~dogverflo@2a02:908:13d3:2940::8f1c)
[04:48:14] <chester> thank you
[04:49:14] *** Quits: audiocat (~audio@2603-8081-1800-0062-12fa-dd6b-13e4-1047.res6.spectrum.com) (Ping timeout: 245 seconds)
[04:49:15] *** Joins: SierraKomodo (~sierrakom@2601:603:167f:f217:f10c:de8d:d130:3711)
[04:50:43] *** Quits: dogverflow (~dogverflo@185.123.143.199) (Ping timeout: 252 seconds)
[04:51:20] *** Quits: analognoise (~analognoi@176.113.73.171) (Ping timeout: 264 seconds)
[04:51:48] *** Quits: jamea (~jamea77@189.237.190.227) (Ping timeout: 252 seconds)
[04:55:21] *** Joins: audiocat (~audio@2603-8081-1800-0062-81ba-3a10-16bc-8996.res6.spectrum.com)
[04:56:36] *** Quits: audiocat (~audio@2603-8081-1800-0062-81ba-3a10-16bc-8996.res6.spectrum.com) (Client Quit)
[04:56:50] *** Joins: audiocat (~audio@2603-8081-1800-0062-5720-3417-6dec-cecd.res6.spectrum.com)
[04:58:52] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[05:01:14] <arahael> chester: I'm a 'new' rust fan, though haven't had a chance to play with it in anger. Why do you say it "just isn't mature enough"?
[05:01:38] <astroo-> https://www.cnn.com/2021/06/10/investing/climate-change-g7-investors/index.html
[05:01:38] <Hitchens> Link: Climate change: Fidelity, State Street and other firms demand action on climate — now - CNN
[05:01:46] <astroo-> sorry
[05:03:19] <chester> arahael: anger?
[05:03:42] <chester> arahael: lacks standard. Thigns keep changing afaik, which is a problem since I need to write long-term code.
[05:04:04] <chester> arahael: lacking of libs.. and I dont' want to deal with that at the moment as I have some esetoric needs that I certainly can find good c++ libs for.
[05:04:25] <chester> arahael: rust dont' know yet where it want to go with future versions.
[05:05:05] <chester> arahael: and at the moment, it's not certain yet whether it'll end up better than C++ ..  give it some time and it might just as well grow in complexity and so on.
[05:05:25] <arahael> chester: "in anger" means "You have a deadline in...  Today... And you need to get this feature done" - ie, real world business work.
[05:05:47] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:06:01] <arahael> chester: Valid concerns, all those.  I think it has promise as an embedded language, effectively.  But interesting you say how things keep changing - not the first time I've heard that.
[05:06:16] <arahael> chester: Sadly...   I'm currently using Swift, which is surely worse. :(
[05:11:28] *** Joins: vicfred_ (~vicfred@fixed-187-191-38-173.totalplay.net)
[05:13:48] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 252 seconds)
[05:14:18] *** Quits: c2f00 (~dogverflo@2a02:908:13d3:2940::8f1c) (Ping timeout: 272 seconds)
[05:16:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:19:19] *** Quits: vicfred_ (~vicfred@fixed-187-191-38-173.totalplay.net) (Quit: Leaving)
[05:22:20] <chester> arahael: even if rust could become the language of the future, it's going to be something different than today's rust.
[05:22:41] <chester> That's what I've heard. But rumors are rumors.
[05:24:44] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:6b51:af28:ec58:67ed) (Quit: No Ping reply in 180 seconds.)
[05:25:59] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:cd33:4903:2fc7:6512)
[05:27:41] <arahael> chester: I'm not sure, hoenstly.  Rust isn't /that/ new either.  it's much older than Go is, I believe.
[05:28:13] <arahael> chester: It's about 10 years old already.
[05:29:00] <arahael> chester: It's also getting a lot of visibility with eg, Microsoft joining in.
[05:32:08] *** Joins: anovick (~anovick@IGLD-83-130-90-132.inter.net.il)
[05:33:47] <tree> our daily rust chat I see
[05:37:39] *** Joins: snake (~snake@user/snake)
[05:38:00] <matiss> I was about to say, let's refer to Rust developers as rustaceans (pun intended) but apparently that is actually a thing haha - https://www.rustaceans.org
[05:38:00] <Hitchens> Link: Rustaceans
[05:38:16] <matiss> I am not even mad, this is amazing
[05:39:54] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Remote host closed the connection)
[05:40:07] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[05:40:19] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[05:41:21] *** Joins: cliluw (~cliluw@47.147.80.149)
[05:41:53] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[05:41:57] *** Quits: paravida (~paravida@user/paravida) (Remote host closed the connection)
[05:43:49] *** Quits: xff0x_ (~xff0x@2001:1a81:5309:4200:43f:9f66:b597:77c7) (Ping timeout: 245 seconds)
[05:45:45] *** Joins: xff0x_ (~xff0x@2001:1a81:5346:bf00:2779:734e:bb13:8382)
[05:48:27] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 252 seconds)
[05:51:36] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[05:53:30] *** moose` is now known as moose
[05:53:35] *** Quits: thekingofbandit2 (thekingofb@thunix.net) (Remote host closed the connection)
[05:53:44] *** Joins: thekingofbandit (thekingofb@thunix.net)
[05:53:44] *** Quits: thekingofbandit (thekingofb@thunix.net) (Changing host)
[05:53:44] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[05:54:53] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[05:56:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:56:45] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[05:57:43] *** Quits: audiocat (~audio@2603-8081-1800-0062-5720-3417-6dec-cecd.res6.spectrum.com) (Ping timeout: 268 seconds)
[05:58:39] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[05:59:53] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:00:33] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 252 seconds)
[06:00:48] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[06:01:44] *** Quits: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) (Ping timeout: 245 seconds)
[06:03:39] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[06:04:51] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[06:05:09] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[06:09:14] *** Quits: x1 (~weechat@vpn27.hotsplots.net) (Ping timeout: 244 seconds)
[06:12:33] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:14:25] *** Joins: x1 (~weechat@vpn27.hotsplots.net)
[06:15:15] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[06:22:33] *** Quits: x1 (~weechat@vpn27.hotsplots.net) (Ping timeout: 252 seconds)
[06:27:26] *** Joins: x1 (~weechat@vpn27.hotsplots.net)
[06:29:14] *** Joins: xeno__ (~xeno@user/xeno)
[06:31:47] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[06:33:31] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 272 seconds)
[06:34:21] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[06:39:32] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[06:39:32] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[06:39:32] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[06:39:38] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[06:39:56] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[06:43:58] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[06:44:01] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[06:45:30] *** Quits: xff0x_ (~xff0x@2001:1a81:5346:bf00:2779:734e:bb13:8382) (Ping timeout: 272 seconds)
[06:45:57] *** Joins: xff0x_ (~xff0x@2001:1a81:5346:bf00:6e52:b23e:6fc2:e844)
[06:47:29] *** Joins: xeno (~xeno@user/xeno)
[06:51:36] *** Quits: xeno__ (~xeno@user/xeno) (Ping timeout: 244 seconds)
[06:53:35] *** Quits: EdFletcher (~EdFletche@user/edfletcher) (Remote host closed the connection)
[06:53:49] *** Joins: EdFletcher (~EdFletche@user/edfletcher)
[06:54:15] *** Quits: EdFletcher (~EdFletche@user/edfletcher) (Remote host closed the connection)
[06:54:33] *** Joins: EdFletcher (~EdFletche@user/edfletcher)
[06:54:47] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:54:52] *** Joins: xeno__ (~xeno@user/xeno)
[06:56:06] *** Quits: austin__ (~ausserz@n219073000163.netvigator.com) (Ping timeout: 252 seconds)
[06:56:39] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 252 seconds)
[06:58:28] *** Joins: Intelo (~Intelo@88.244.90.70)
[07:01:06] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:01:16] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:04:22] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:09:50] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[07:11:28] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[07:15:33] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:17:43] <poprocks> matiss: I'm guessing the crab mascot subconsciously got you to think of that
[07:19:32] *** Quits: xeno__ (~xeno@user/xeno) (Ping timeout: 264 seconds)
[07:20:00] *** Quits: astroo- (2ea7f406@ircip1.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[07:20:01] *** Quits: x1 (~weechat@vpn27.hotsplots.net) (Ping timeout: 244 seconds)
[07:20:14] <arahael> chester: Btw, I had a brief discussion about this in the rust channel.  It seems that rust did change a lot until 1.0, but since then it has been very stable, with only things added to it.
[07:20:47] <arahael> chester: However, it was pointed out that the stdlib is very small, and libraries do often change their api's. (It's on them, really), so that's another factor in terms of "stability".
[07:23:00] *** Joins: xeno (~xeno@user/xeno)
[07:23:51] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[07:27:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:30:30] *** Joins: jamea (~jamea77@177.239.82.39)
[07:33:02] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 252 seconds)
[07:38:42] *** Joins: audiocat (~audio@2603-8081-1800-0062-4ba3-ff83-f695-5246.res6.spectrum.com)
[07:39:53] *** Joins: xeno (~xeno@user/xeno)
[07:39:56] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[07:45:09] *** Parts: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) ()
[07:52:15] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Ping timeout: 244 seconds)
[07:52:31] *** Quits: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (Ping timeout: 264 seconds)
[07:52:31] *** Quits: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0) (Ping timeout: 264 seconds)
[07:53:18] *** Quits: anovick (~anovick@IGLD-83-130-90-132.inter.net.il) (Ping timeout: 252 seconds)
[07:57:06] *** Joins: x1 (~weechat@vpn27.hotsplots.net)
[08:00:53] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:00:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 264 seconds)
[08:01:07] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 272 seconds)
[08:03:07] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[08:03:45] *** Quits: x1 (~weechat@vpn27.hotsplots.net) (Ping timeout: 252 seconds)
[08:03:46] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:05:00] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:06:10] *** Joins: Crypt9a2e (~Crypt9a2e@2409:4072:301:9da3:dd1a:701:893d:eef1)
[08:07:22] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[08:09:41] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 268 seconds)
[08:10:07] *** Joins: zephyr_ (~zephyr@59.88.25.191)
[08:16:48] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:20:23] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[08:20:40] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[08:23:06] *** Quits: moose (~moose@user/moose) (Quit: REBOOTING BECAUSE WINDOWS)
[08:23:19] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[08:29:53] *** Joins: moose (~moose@user/moose)
[08:32:24] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[08:36:38] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[08:37:05] *** Joins: adder (~adder@user/adder)
[08:38:11] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[08:39:26] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[08:42:40] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[08:44:10] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:45:24] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:45:56] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:46:55] *** Quits: kmh (~kmh@p200300df5f2f6b00b5233d555816360a.dip0.t-ipconnect.de) (Quit: Leaving)
[08:50:52] *** Joins: kmh (~kmh@p200300df5f2f6b00f581238e4619a748.dip0.t-ipconnect.de)
[08:51:05] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:58:36] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[08:59:16] *** Joins: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi)
[09:01:20] *** Joins: xeno__ (~xeno@user/xeno)
[09:02:11] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[09:02:34] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[09:04:13] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[09:05:28] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 272 seconds)
[09:07:50] *** Joins: reumeth (~reumeth@user/reumeth)
[09:13:22] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 244 seconds)
[09:18:52] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:20:02] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[09:26:15] *** Quits: xeno__ (~xeno@user/xeno) (Ping timeout: 252 seconds)
[09:30:01] *** Joins: xeno (~xeno@user/xeno)
[09:30:08] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[09:30:55] *** Joins: Buttercat (~Buttercat@user/buttercat)
[09:31:30] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[09:33:01] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:33:25] *** Quits: birbie (~textual@user/birbie) (Read error: Connection reset by peer)
[09:34:21] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 244 seconds)
[09:38:11] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[09:40:13] *** Joins: pupiw (~pupiw@2600:8801:f105:5900:896f:9c7c:6735:b7fc)
[09:40:51] *** Quits: d[^u^]y (~d^u^]y@user/duy/x-5876947) (Quit: d[^u^]y)
[09:47:39] *** Joins: Auron (~Auron956@user/auron)
[09:48:07] *** Quits: netlayer_ (~netlayer@user/netlayer) (Quit: WeeChat 2.3)
[09:48:15] *** Joins: netlayer (~netlayer@user/netlayer)
[09:51:11] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[09:51:19] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[09:51:40] *** Joins: mrig (~mrig@user/mrig)
[09:51:44] *** Quits: Crypt9a2e (~Crypt9a2e@2409:4072:301:9da3:dd1a:701:893d:eef1) (Ping timeout: 245 seconds)
[09:55:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:56:22] *** Joins: xeno__ (~xeno@user/xeno)
[09:57:52] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[09:58:02] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 272 seconds)
[09:58:13] *** Joins: Rob_ (~Rob_@212.71.9.85)
[10:00:43] *** Joins: jinsun (~quassel@182.77.87.72)
[10:01:04] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[10:01:04] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[10:02:00] *** Quits: jamea (~jamea77@177.239.82.39) (Ping timeout: 252 seconds)
[10:03:47] *** Joins: nifl (~user@user/niflce)
[10:04:12] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[10:07:48] *** Joins: waada (~a2c@50-108-89-144.adr01.mskg.mi.frontiernet.net)
[10:18:41] *** Joins: mmfood (~mmfood@45.135.187.117)
[10:26:32] *** Quits: xeno__ (~xeno@user/xeno) (Ping timeout: 272 seconds)
[10:27:33] *** Joins: Guest72 (~Guest72@212.71.9.85)
[10:27:39] *** Joins: Crypt9a2e (~Crypt9a2e@2409:4072:301:9da3:dd1a:701:893d:eef1)
[10:28:06] *** Quits: hi^-^ (~^-^hi@user/-hi/x-1729478) (Remote host closed the connection)
[10:28:18] *** Joins: hi^-^ (~^-^hi@user/-hi/x-1729478)
[10:32:09] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[10:32:58] *** Quits: RaycatWhoDat (~RaycatWho@2601:241:8f80:5250:1503:4d02:716e:ec18) (Read error: Connection reset by peer)
[10:33:20] *** Joins: RaycatWhoDat (~RaycatWho@2601:241:8f80:5250:fc6d:ad8a:59e8:58f4)
[10:34:19] <deniska> I like the idea of other people writing rust, I don't like the idea of dealing with rust in build systems, or writing it myself :)
[10:35:02] *** Quits: Guest72 (~Guest72@212.71.9.85) (Quit: Client closed)
[10:35:22] <deniska> the current primary rust compiler is quite a chonky boy if you want to bootstrap it as opposed to getting binaries from somewhere
[10:36:18] <deniska> and also I didn't find rust enjoyable to write, but that's my subjective feeling :)
[10:40:27] <zephyr_> deniska: What did you not like about it?
[10:41:18] <Izem> deniska: it's a real valid concern considering how it's marketed, but most compilers are like this?
[10:41:32] <Izem> just curious if you've come across something else
[10:42:19] <zephyr_> deniska: I am not looking to counter your points. I am just interested in your workflow.
[10:42:56] <deniska> zephyr_: I can't point to anything specific, it just adds up, even stupid things like semicolons. And I guess I'm not used to system level programming when reasoning about lifetimes or having 4 kinds of strings is useful :)
[10:43:24] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 245 seconds)
[10:44:12] <zephyr_> deniska: I agree. A lack of standard make Rust liable to follow the same path as C++. Maybe in time, only the engineers in Mozilla developing Rust would know the whole of Rust.
[10:44:21] <deniska> Izem: well, C compilers are mostly written in C, and there're very small compilers of C subsets usable enough to build better compilers
[10:44:56] <deniska> Izem: rust compiler is written in rust… Well, I guess it's the same problem with C, but chances are the system already has a C compiler but no rust compiler
[10:45:08] *** Quits: netlayer (~netlayer@user/netlayer) (Ping timeout: 244 seconds)
[10:45:14] <Izem> yeah C has it pretty good
[10:45:24] <Izem> small language and lot's of compilers available
[10:45:38] <deniska> so to bootstrap rust having a C compiler you first have to get ocaml running because that's what the first rust compiler version was written in
[10:46:05] <deniska> then get through a few rust compiler versions, because the next version of rust compiler was written in older rust :)
[10:46:43] <Izem> pain
[10:46:59] <Ultrasauce> why bootstrap instead of cross compiling?
[10:48:13] <deniska> well, you need a compiler. I guess for most practical purposes you should be fine with rustup, but some people are more paranoid about their chains of trust
[10:48:34] <DarkTrick> arahael, The soy yogurt made from bamboo was...
[10:48:40] <DarkTrick> not delicious
[10:48:52] <DarkTrick> tasted strange, so I threw it away
[10:50:07] *** Joins: wwilly (~wwilly@2a01:cb10:3e0:4f00:d089:f6b2:82a6:890a)
[10:51:00] <deniska> so if someone invents a bad rust compiler which compiles enough rust to build a normal rust compiler… They'd save quite a lot of gigabytes of hard disk space across the world :)
[10:52:09] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[10:53:12] *** Joins: lunarkitty (uid501895@user/pyra)
[10:54:16] <Izem> any ideas for sharing files on a local network? I need to go between different oses
[10:57:56] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[10:58:28] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[10:58:29] <deniska> Izem: which OSes?
[10:58:41] <Izem> windows, iOS
[10:58:59] <deniska> SMB share probably
[10:59:00] <Izem> possibly chromeOS too
[10:59:02] *** Joins: datcore (~unicore@2001:1c00:1025:3860::4f6)
[10:59:09] <Izem> iOS supports smb?
[10:59:21] <deniska> well, android file managers typically do, never used iOS
[11:01:09] <deniska> quick searching suggests the builtin Files app supports it since ios 13
[11:01:29] *** pony is now known as u-ou
[11:01:38] <Izem> let's gooooo
[11:02:44] *** Joins: xeno (~xeno@user/xeno)
[11:02:51] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[11:04:46] *** Quits: waada (~a2c@50-108-89-144.adr01.mskg.mi.frontiernet.net) (Ping timeout: 244 seconds)
[11:06:21] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[11:06:55] *** Joins: mmfood_ (~mmfood@45.135.187.117)
[11:07:42] *** Joins: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it)
[11:08:20] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 272 seconds)
[11:12:57] <arahael> DarkTrick: good to know!  probably the wrong bacteria.
[11:14:26] <mrig> Forests are pretty darned good at fungi :)
[11:16:34] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[11:16:34] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[11:17:09] *** Quits: xff0x_ (~xff0x@2001:1a81:5346:bf00:6e52:b23e:6fc2:e844) (Ping timeout: 245 seconds)
[11:21:38] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[11:25:56] <DPA> What are the best options to host an OSS project anonymously? My bank requires an android or ios app for login, or alternatively, a "digipass" hw qr-like color code thing. I want to do the 2nd FA on linux, though.
[11:25:56] <DPA> I can probably figure out how to reimplement the color code thing, but whatever company my bank bought that stuff from would probably be mad if I did. Where would be the best thing to put something like that?
[11:26:10] *** Quits: Crypt9a2e (~Crypt9a2e@2409:4072:301:9da3:dd1a:701:893d:eef1) (Remote host closed the connection)
[11:26:28] *** Joins: Crypt9a2e (~Crypt9a2e@157.51.3.28)
[11:29:12] <deniska> DPA: well, it's not like github asks you for id when you make an account
[11:29:45] <W> DPA, my usual approach has been to use the existing free providers of things; e.g., get free email somewhere (through Tor), sign up for githib with said email (through Tor), make commits through Tor
[11:30:13] <nicolapcweek94> depends on what you mean by hosting, really, but going with a free provider with no phone number requirements for everything seems like a good idea
[11:30:18] <W> you might skip the Tor step depending on how anonymous you want to be
[11:30:36] *** Joins: alguien (~alguien@user/alguien)
[11:30:45] <nicolapcweek94> most email providers require a phone number nowadays though afaik
[11:30:50] <nicolapcweek94> at least the big ones do
[11:31:23] <W> most but not all, and some email providers require another email (so you can step up towards more "trusted" providers through he less trusted and bothersome ones)
[11:32:01] <W> e.g. I once created a gmail account using a mailinator inbox
[11:32:18] <W> that probably wouldn't work today, but there are similar approaches, just have to explore a bit
[11:34:14] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[11:34:18] <nicolapcweek94> it probably depends on the threat model, but in some cases you're probably more anonymouse by getting a domain with WHOIS protection and a vps to host stuff on like repos, mail, website etc
[11:34:53] <nicolapcweek94> paying for it in crypto of course, possibly monero or one of the other ones made for actual payments
[11:35:45] <DPA> Ok, so I just need to obtain an E-Mail somewhere, and use existing git providers using it, and do this over an anonymized connection.
[11:36:26] *** Quits: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) (Quit: Izem)
[11:36:39] <W> of course, you also have to understand how all these things help and what ways you might leak your real identity (even just your IP, if the threat includes possible (trumped up or otherwise) criminal prosecution)
[11:37:04] <nicolapcweek94> yeah that's what i was saying, model your threat carefully before doing this
[11:37:08] <W> Tor project has guides for most of it
[11:37:41] <nicolapcweek94> do you just want to publish a chat app without people knowing you made it, or do you want to build the next big piracy thing or whatever?
[11:38:07] <nicolapcweek94> in one case just sign up with github with a new email and you're done
[11:38:16] <W> I would not make a third party tool for online banking without hedging against the bank possibly trying to get the police on your neck
[11:38:44] *** Joins: aradesh (~aradesh@user/aradesh)
[11:38:48] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[11:39:04] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 244 seconds)
[11:39:13] <nicolapcweek94> banks and their vendors are especially bad with this stuff
[11:39:29] <nicolapcweek94> when money is involved expect no forgiveness
[11:39:59] <DPA> Neither. I just want to put the code somewhere for other people who may need this. It'd be a google authenticator app like thing. Threat modell is: When they get mad, don't let them figure out who wrote it.
[11:41:19] <DPA> Because things being legal, and not being financially ruinned by lawsuits, are two very different things.
[11:41:44] *** Quits: audiocat (~audio@2603-8081-1800-0062-4ba3-ff83-f695-5246.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:41:49] <nicolapcweek94> well like W was saying, if they sue and go to court they probably can get access to non-public info like ip address etc
[11:41:57] <W> do not underestimate what might be illegal if powerful people dislike what you do
[11:42:08] <nicolapcweek94> and that's where the "hiding from microsoft" part comes into play
[11:42:31] <nicolapcweek94> and that's not particularly easy
[11:42:41] <nicolapcweek94> so maybe don't host it on github
[11:42:56] *** Joins: NEYi (~NEYi@109.251.216.38)
[11:43:08] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[11:43:08] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[11:43:08] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:43:39] *** Quits: craigo (~craigo@180-150-37-63.b49625.bne.nbn.aussiebb.net) (Read error: No route to host)
[11:43:42] *** Joins: audiocat (~audio@2603-8081-1800-0062-ad7b-86f3-6e7f-113d.res6.spectrum.com)
[11:50:27] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:50:29] *** Quits: pupiw (~pupiw@2600:8801:f105:5900:896f:9c7c:6735:b7fc) (Ping timeout: 245 seconds)
[11:50:35] *** Joins: EdFletcherT137__ (~EdFletche@user/edfletcher)
[11:52:14] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[11:52:42] <DPA> A few years ago, I built a subnet that had tor set up as a transparent proxy, but I didn't have any use for it back then. But I think if I use that thing, and a dedicated machine that's connected exclusively to that specially isolated network, even microsoft shouldn't be able to figure out who does things from there.
[11:52:42] <DPA> These messages here meight actually be the biggest risk for deanonymisation, but I doubt any authorities know what IRC is...
[11:53:11] *** Quits: EdFletcher (~EdFletche@user/edfletcher) (Ping timeout: 265 seconds)
[11:53:39] *** Quits: dmu (~darkmusic@user/darkmusic) (Ping timeout: 252 seconds)
[11:53:50] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[11:53:51] <GeDaMo> They know :|
[11:53:51] *** Joins: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0)
[11:54:03] *** Joins: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f)
[11:54:15] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[11:54:37] *** Joins: dmu (~darkmusic@user/darkmusic)
[11:54:39] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 245 seconds)
[11:56:41] *** Quits: SierraKomodo (~sierrakom@2601:603:167f:f217:f10c:de8d:d130:3711) (Remote host closed the connection)
[11:57:23] *** Quits: datcore (~unicore@2001:1c00:1025:3860::4f6) (Quit: Offline)
[11:57:51] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 268 seconds)
[11:58:09] <arahael> They absolutely do know.
[11:58:42] <W> I am always very careful about projects I'm pseudonymous on - e.g. I never talk about libraries or technologies involved even here (W is my "real life" identity so to speak)
[11:58:47] <mrig> DPA pretty sure that irc was setup by the American military.
[11:59:19] <mrig> so that soldiers could communicate with their families, something like that.
[12:00:08] <|smlckz|> *cough* *cough*
[12:00:39] <mrig> same goes for tor too as it happens.
[12:01:17] <DPA> In that case, I guess I should make some kind of offsite backup / fallback system for my home servers first. It'd e really annoying if police where to steal it, and I'd end up without my mail, website, private projects, etc.
[12:01:17] <DPA> Also, if there ever appears a reimplementation of some bank color code login 2fa thing, remember, it wasn't me ;)
[12:01:22] <mrig> security and encryption are fascinating, they have been waltzing hand in hand for thousands of years.
[12:01:37] *** Joins: xff0x_ (~xff0x@217.110.198.158)
[12:02:26] <mrig> value and security I suppose, is the crux of it.
[12:03:12] *** Joins: Citillara (~userid@user/citillara)
[12:04:41] <mrig> Right, how to decide how much of a protocol one wants to use when making an access to something that already exists and is quite complex?
[12:04:57] <mrig> I suppose this is all about defining requirements.
[12:04:59] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[12:05:31] *** Joins: audgirka (~audgirka@2402:e280:3e00:4c11:b62e:f7a0:83fe:8c9e)
[12:05:49] *** Quits: geonic (~geonic@user/geonic) (Quit: Ping timeout (120 seconds))
[12:05:55] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[12:07:07] *** Joins: Citillara3 (~userid@user/citillara)
[12:07:13] <mrig> Really hard thing to do, when you are not constrained by any box.
[12:07:24] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) (Ping timeout: 252 seconds)
[12:07:48] *** Quits: Citillara (~userid@user/citillara) (Ping timeout: 244 seconds)
[12:07:50] *** Joins: gimgiam (~gimgiam@user/gimgian)
[12:08:01] *** Citillara3 is now known as Citillara
[12:10:30] *** Quits: arahael (~arahael@203-206-83-196.tpgi.com.au) (Ping timeout: 264 seconds)
[12:11:50] *** Joins: geonic (~geonic@144.202.104.101)
[12:12:23] *** Quits: riv (~river@tilde.team/user/river) (Killed (ozone (No Spam)))
[12:13:24] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 245 seconds)
[12:14:12] *** Quits: motherr (~motherr@user/motherr) (*.net *.split)
[12:14:38] *** Joins: river (~river@tilde.team/user/river)
[12:14:38] *** Joins: Flux (~Fluxx@user/fluxx)
[12:15:14] *** Quits: geonic (~geonic@144.202.104.101) (Changing host)
[12:15:14] *** Joins: geonic (~geonic@user/geonic)
[12:15:58] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[12:18:32] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:18:51] *** Quits: Flux (~Fluxx@user/fluxx) (Remote host closed the connection)
[12:19:01] *** Joins: Mija (~Mija@user/mija)
[12:19:09] *** Joins: brickfat (~brickfat@user/brickfat)
[12:21:43] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[12:23:15] *** Joins: pinny (~Guest22@203.13.23.10)
[12:23:24] *** Joins: arahael (~arahael@203-206-83-196.tpgi.com.au)
[12:23:41] *** Joins: longbow (~longbow@5-203-227-212.pat.nym.cosmote.net)
[12:24:28] *** Quits: audgirka (~audgirka@2402:e280:3e00:4c11:b62e:f7a0:83fe:8c9e) (Remote host closed the connection)
[12:25:12] <nicolapcweek94> well, as the saying goes, your system is not secure or anonymous unless terrorists are using it
[12:25:32] <nicolapcweek94> but then again if terrorists are using it you have problems
[12:26:02] <nicolapcweek94> it's a very fine line
[12:27:03] <W> in general people doing violent crime are not usually very good at evading even regular police, nor very infosec savvy
[12:27:33] <W> seems like a flawed measure, is what I'm saying :p
[12:28:52] <mrig> one mans terrorist is always anther's freedom fighter, as the saying goes. Either way there is usually some troll inciting the the behaviour from the sidelines in both cases.
[12:29:21] <mrig> The ones to be scared of are the ones pulling the 'empathetic' strings.
[12:29:25] <mrig> heh
[12:29:37] *** Quits: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com) (Quit: Leaving)
[12:29:46] <mrig> mindless stuff though.
[12:30:03] <mrig> better to get on with doing something nice, I find.
[12:31:16] *** Joins: motherr (~motherr@user/motherr)
[12:31:42] <mrig> who are inciting the situation, is always a level above that which is perceived to be what is happening; If this was not the case, we would not have scales of measure about personality types and abilities to preform certain tasks.
[12:31:58] <mrig> There would be no need for it.
[12:32:21] <mrig> man there is a game engine in there somewhere :)
[12:33:12] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[12:33:58] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[12:36:38] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:37:39] <GeDaMo> https://alephsecurity.com/2021/02/16/apport-lpe/
[12:37:39] <Hitchens> Link: Exploiting crash handlers: LPE on Ubuntu
[12:40:20] <mrig>  Now there is an interesting reason not to recover from a panic.
[12:42:04] *** Quits: imode (~imode@user/imode) (Ping timeout: 272 seconds)
[12:46:36] *** Joins: c2f00 (~dogverflo@2a02:908:13d3:2940::8f1c)
[12:46:39] *** Joins: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com)
[12:47:16] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[12:51:03] *** Quits: c2f00 (~dogverflo@2a02:908:13d3:2940::8f1c) (Read error: Connection reset by peer)
[12:51:23] *** Joins: paulo_ (~paul0@user/paulo/x-9032687)
[12:55:29] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[12:55:47] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[12:59:51] *** Quits: zephyr_ (~zephyr@59.88.25.191) (Quit: leaving)
[13:03:31] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[13:05:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:05:53] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[13:08:04] <vdamewood> Hi, people etc.
[13:10:26] <GeDaMo> Hi vdamewood :)
[13:11:25] *** Joins: dev4449 (~dev4449@199.36.223.6)
[13:14:33] *** edgar-rft is now known as etc
[13:14:48] *** etc is now known as Guest4671
[13:15:12] *** Guest4671 is now known as edgar-rft
[13:16:07] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[13:16:12] *** Quits: killsushi (~killsushi@user/killsushi) (Quit: Leaving)
[13:16:18] <amigojapan> Hi vdamewood !
[13:16:52] *** Quits: pinny (~Guest22@203.13.23.10) (Quit: Connection closed)
[13:17:14] <vdamewood> amigojapan: Pika! Chu?
[13:22:36] <vdamewood> amigojapan: Como está coding?
[13:23:44] <amigojapan> No he programado mucho
[13:24:20] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[13:25:57] <vdamewood> Que lástima.
[13:26:03] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[13:26:41] <vdamewood> GeDaMo: How about you? How's coding?
[13:27:41] <GeDaMo> Too much thinking, not enough doing :|
[13:29:13] <vdamewood> GeDaMo: You should think about that.
[13:29:41] <arahael> 🤦
[13:32:32] *** Quits: nifl (~user@user/niflce) (Ping timeout: 244 seconds)
[13:32:41] *** Joins: nifl (~user@user/niflce)
[13:32:44] * mrig hands GeDaMo a thinking cap.
[13:32:47] * vdamewood slurps.
[13:34:47] * mrig gargoyles.
[13:34:50] *** Quits: dev4449 (~dev4449@199.36.223.6) (Ping timeout: 250 seconds)
[13:35:03] * GeDaMo fribbles
[13:36:03] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Read error: Connection reset by peer)
[13:37:03] *** Quits: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[13:38:11] * DPA meow
[13:38:18] <DarkTrick> what does "to gargoyle" mean? :D
[13:39:12] <mrig> DarkTrick: I was stopping the over spill vdamewood's slurping from hitting the walls.
[13:39:35] <DarkTrick> :D
[13:40:30] <mrig> effective irrigation of all that pertains to the water element is conducive to civility :)
[13:41:12] <mrig> by water I really mean anything in a liquid state, but you know how linguistics go :)
[13:42:25] *** Joins: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de)
[13:42:30] *** Joins: kiro979 (~kiro@115-64-228-111.tpgi.com.au)
[13:43:32] *** Joins: KidBeta (~KidBeta@220.240.215.119)
[13:43:32] *** Quits: KidBeta (~KidBeta@220.240.215.119) (Changing host)
[13:43:32] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[13:45:24] *** Joins: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk)
[13:45:24] *** Quits: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk) (Changing host)
[13:45:24] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[13:47:09] *** Quits: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de) (Remote host closed the connection)
[13:48:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:49:18] *** Joins: audgirka (~audgirka@2402:e280:3e00:4c11:b62e:f7a0:83fe:8c9e)
[13:52:30] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 264 seconds)
[13:57:29] *** Joins: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de)
[13:58:47] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[13:59:36] <mrig> Which of the asci characters between 0 an 31 are still really in use?
[13:59:50] <DarkTrick> 13 ?
[13:59:53] <DarkTrick> 8 ?
[13:59:55] <GeDaMo> space, tab, newline, carriage return
[13:59:56] <mrig> Some are, that it clear, but which could you remove and not notice?
[14:00:10] <GeDaMo> Oh, and nul :P
[14:00:34] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 268 seconds)
[14:00:36] <mrig> 7 to 13 are all probably still needed from time to time.
[14:00:44] <GeDaMo> x-on and x-off may still be used in places
[14:01:19] <mrig> which decimal number are those?
[14:01:56] <GeDaMo> 17 and 19
[14:01:58] <mrig> 1 to 6 are likely fax or telex things I suppose.
[14:02:18] <GeDaMo> Also known as Ctrl-Q and Ctrl-S
[14:02:18] <mrig> What are those used for?
[14:02:24] <mrig> ah
[14:02:31] <mrig> yes handy those.
[14:02:42] <vdamewood> \a id still used.
[14:02:44] <GeDaMo> Flow control on serial connections
[14:03:57] <vdamewood> \a is 7.
[14:04:14] <vdamewood> octal, decimal, hexadecimal, whatever.
[14:04:45] <GeDaMo> https://www.youtube.com/watch?v=r1UkZLT20TI
[14:04:45] <Hitchens> YouTube: Ring My Bell | Duration: 3:33
[14:05:00] <mrig> 28 to 31 look a little over ripe :D
[14:05:22] <GeDaMo> 27 escape is still used :P
[14:06:13] *** Joins: gitesh (~gitesh@183.87.155.31)
[14:06:15] <mrig> Ding, (should be doing, but that broken) :D
[14:06:23] <gitesh> hi. Is function a control flow?
[14:06:32] <mrig> Yes 27 is looking pretty useful still.
[14:07:23] <GeDaMo> Calling a function is control flow
[14:07:51] *** Joins: slurpyb (~quassel@2001:8003:8d0e:1000:6cea:bcdc:d9f0:c8d4)
[14:08:40] * mrig Boing! Kazam! Kerang! Doing <- the bell does not work.
[14:08:51] <mrig> \a
[14:09:34] <DPA> It's also used as terminator for some escape sequences, such as the set title one.
[14:09:35] <gitesh> functions runs on heap or stack?
[14:10:06] <mrig> DPA: but in the context of an escape sequence it is escaped surly?
[14:10:19] <mrig> surely as well.
[14:10:43] <vdamewood> I'm falling asleep in my chair.
[14:10:48] <vdamewood> Goo night.
[14:10:53] <GeDaMo> Functions are code; heap and stack are ways of organising memory
[14:11:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:13:01] <DPA> No, not escaped: echo PS1='> '; printf '\e]0;Hello World!\a';
[14:13:31] *** Quits: gitesh (~gitesh@183.87.155.31) (Quit: Client closed)
[14:13:36] <DPA> And often set in PS1, the command prompt.
[14:13:37] *** Joins: dhil (~dhil@195.213.192.47)
[14:19:49] *** Joins: dev4449 (~dev4449@172.98.71.55)
[14:21:39] <mrig> Is \f ever used? \v is likely redundant too.
[14:24:10] <DPA> I think I saw an RFC somewhere which used \f.
[14:24:25] <mrig> I suppose #vim could be the place to ack, could be all sorts used inside of the original vi code.
[14:24:47] <mrig> to ask rather, could ack the logs I suppose :)
[14:28:18] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[14:28:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:29:39] *** Quits: audiocat (~audio@2603-8081-1800-0062-ad7b-86f3-6e7f-113d.res6.spectrum.com) (Ping timeout: 245 seconds)
[14:34:11] <DPA> Some RFCs definitly use \f. RFC 1, for example, does, to separate pages: https://www.rfc-editor.org/rfc/rfc1.txt
[14:34:12] <Hitchens> Link: 
[14:34:48] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Ping timeout: 272 seconds)
[14:35:27] <GeDaMo> Formfeed, ^L
[14:36:41] <mrig> Oh cool, probably best to keep away from all of the \ escaped characters.
[14:38:01] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[14:40:18] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Ping timeout: 252 seconds)
[14:41:10] *** Joins: entuland (~entuland@user/entuland)
[14:43:19] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[14:44:17] *** Joins: archie (~archie@host-95-250-2-133.retail.telecomitalia.it)
[14:44:19] <archie> hello
[14:44:30] <archie> anyone knows how to copy a variable by value rather than reference in bash?
[14:44:59] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[14:45:07] *** Joins: waaba (~a2c@50-108-89-144.adr01.mskg.mi.frontiernet.net)
[14:45:34] <GeDaMo> Can't you just assign its value to another variable?
[14:46:07] <archie> GeDaMo if I do so, the value is referenced, not copied
[14:46:29] <archie> let's say a=10
[14:46:39] <archie> if I do b=$a
[14:47:02] <archie> and then re-assign (or unset) the value of a, b changes as well
[14:47:07] <edk> no it doesn't
[14:47:38] *** Quits: dev4449 (~dev4449@172.98.71.55) (Ping timeout: 250 seconds)
[14:47:48] <GeDaMo> Just tested it, it doesn't
[14:48:16] <archie> you're right, why the hell it doesn't work then arghhhh!
[14:48:46] <GeDaMo> These are not the variables you're looking for :P
[14:49:08] *** Joins: Buttercat (~Buttercat@user/buttercat)
[14:50:41] *** Quits: waaba (~a2c@50-108-89-144.adr01.mskg.mi.frontiernet.net) (Ping timeout: 272 seconds)
[14:51:12] *** Joins: pulse (~pulse@user/pulse)
[14:51:30] <Stefan26> GeDaMo is always happy :P
[14:53:02] <archie> I found what's wrong
[14:53:30] <archie> I am writing a group of function in my bashrc
[14:54:25] <archie> There's a variable that I would like to share between them, so I declare it globally, but unset it later
[14:55:02] <archie> When a function gets invoked, the variable is already unset and so the function internal command (or re-assignment) fails.
[14:55:22] <archie> is there any best practice to accomplish that, without leaving the gloabl variable set?
[14:56:14] <GeDaMo> Can you set it to an 'unset' value?
[14:56:26] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 244 seconds)
[14:56:32] <GeDaMo> So the variable exists but you can test if it's a valid value
[14:57:37] <GeDaMo> Or can you check if the variable exists?
[14:58:38] <archie> the problem is that I need it's value (not a dummy one) when the function get's invoked
[14:59:48] <GeDaMo> Then why are you unsetting it?
[15:00:33] <archie> is not meant to be public/global
[15:00:52] *** Joins: dogverflow (~dogverflo@185.45.15.199)
[15:01:14] <archie> but in bash everything is public, apart internal function declaration which I won't do in that case to avoid duplication
[15:02:22] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[15:05:54] <amigojapan> archie: can you share code?
[15:07:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[15:07:27] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[15:07:41] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:07:42] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Client Quit)
[15:08:00] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:10:06] <archie> amigojapan https://bpa.st/4BMA
[15:10:06] <Hitchens> Link: View paste 4BMA
[15:12:31] <amigojapan> archie: line 1 and 2 has no meaning because of line 21 22
[15:12:55] *** Joins: dev4449 (~dev4449@172.98.71.188)
[15:14:24] <archie> amigojapan yes, that's the problem
[15:14:35] <amigojapan> archie: line 21 and 22 don't execute only when a function is called
[15:15:37] <archie> amigojapan I know, they do when that file its sourced, and that's exactly the problem, how can I share a variable between functions without leaving it set
[15:17:01] <amigojapan> archie: seems you are trying to do something impossible. Why do you need to unset them?
[15:18:50] *** Quits: dev4449 (~dev4449@172.98.71.188) (Ping timeout: 250 seconds)
[15:19:10] *** Joins: nulleip (~luiz@179.215.124.48)
[15:22:04] *** Quits: nulleip (~luiz@179.215.124.48) (Client Quit)
[15:24:24] *** Joins: Guest45 (~Guest45@2601:644:101:4f20:532:af2a:e595:c70a)
[15:24:26] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 268 seconds)
[15:24:39] *** Joins: nulleip (~luiz@179.215.124.48)
[15:24:40] *** Quits: Guest45 (~Guest45@2601:644:101:4f20:532:af2a:e595:c70a) (Client Quit)
[15:25:05] *** Joins: xkuru (~xkuru@user/xkuru)
[15:26:08] <archie> amigojapan I have to surrender and leave them set, will probably keep something like https://bpa.st/VZZQ
[15:26:08] <Hitchens> Link: View paste VZZQ
[15:26:45] <amigojapan> Let me see
[15:28:20] <DPA> You could put them in a different file: f(){ . ~/.bashrc_private; do_stuff }";
[15:28:24] <amigojapan> archie: is that the whole script? I don't see function calls to the o there function calls
[15:28:32] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Quit: The Lounge - https://thelounge.chat)
[15:29:25] *** Joins: ixil (~ixil@82.197.178.137)
[15:29:47] *** Joins: azed (~azed@160.159.122.89)
[15:30:45] *** Joins: pavonia (~user@user/siracusa)
[15:33:40] <amigojapan> Err other fictions*
[15:34:04] <pulse> i changed all my windows 10 sounds to vista sounds
[15:34:07] <pulse> best decision ever
[15:34:09] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[15:34:23] *** Joins: Twipply (~Twipply@user/twipply)
[15:34:26] <pulse> i didn't realize how much i hate those standard sounds of windows10
[15:34:30] *** Joins: pony (~ed@168.138.14.60)
[15:35:07] <pulse> now when there's an error message instead of that annoying DRRDDRING
[15:35:09] *** Quits: kixx (~kixx@user/kixx) (Read error: Connection reset by peer)
[15:35:10] <pulse> i get a nice clickity clack
[15:35:16] <seachdamh> what solution would you suggest for small business to do code storage? (contex: few people, programmes + techical stuff mainly. Python/C/C++/scripts/config/docs in 3-4 formats. OS is big plus but not necressly only one.). Now I use gitlab CE - is rather ok but heavy in many way.
[15:35:37] <pulse> github?
[15:35:48] <seachdamh> _local_  storage
[15:35:52] <pulse> oh
[15:35:58] <pulse> well you can run a custom git server
[15:36:03] *** Joins: x1 (~weechat@185.242.76.15)
[15:36:24] <pulse> a raspi with some storage is enough for that
[15:36:28] * pulse shrugs
[15:36:34] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[15:38:15] <deniska> seachdamh: do you need a bug tracker, wiki and stuff? For just version controlling code and other text stuff, bare git is enough imho
[15:39:44] *** Joins: Inari (~Pinkishu@p4fe7ea24.dip0.t-ipconnect.de)
[15:39:49] <seachdamh> bug/isse - ofc. Wiki - manly not. History view, easy usage for not programmers. Good working with Linux and Windows workstation 
[15:40:23] <seachdamh> so solution like gilab like in way of integration tools. 
[15:40:59] <archie> amigojapan that's part of a bashrc file, the function gets invoked from a terminal
[15:42:15] *** Joins: dev4449 (~dev4449@199.36.223.228)
[15:44:23] *** Joins: entuland (~entuland@user/entuland)
[15:44:29] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 244 seconds)
[15:44:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[15:45:44] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[15:47:51] *** Quits: archie (~archie@host-95-250-2-133.retail.telecomitalia.it) (Quit: Client closed)
[15:48:27] *** Joins: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr)
[15:48:46] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[15:49:33] *** Joins: CoderGuy (~CoderGuy@2601:644:101:4f20:532:af2a:e595:c70a)
[15:51:25] *** Joins: sevla (~sev@user/sevla)
[15:52:01] *** Quits: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de) (Remote host closed the connection)
[15:53:29] *** Joins: kixx (~kixx@2a02:2f09:341d:a000:c469:2560:f735:1f67)
[15:53:29] *** Quits: kixx (~kixx@2a02:2f09:341d:a000:c469:2560:f735:1f67) (Changing host)
[15:53:29] *** Joins: kixx (~kixx@user/kixx)
[15:57:23] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[15:57:32] *** Joins: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de)
[16:00:49] *** Joins: Leo (~Leo@bras-base-otwaon1146w-grc-20-184-147-78-162.dsl.bell.ca)
[16:02:36] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[16:05:49] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[16:11:35] *** immibis_ is now known as immibis
[16:11:55] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 268 seconds)
[16:13:05] <mrig> bash really is a curious beast, i've still in mind to study it some more in the future :)
[16:15:10] <pikapika> mrig, bash is exciting
[16:15:24] <pikapika> But also more like sed etc are really exciting
[16:15:41] <biberu> hey CoderGuy, welcome :)
[16:15:48] <CoderGuy> woah
[16:15:52] <CoderGuy> sup biberu
[16:15:58] <CoderGuy> I umm,  lol
[16:15:58] <mrig> Fascinating in the context, with the system and a little knowledge of programming in C.
[16:16:05] <mrig> The glue :)
[16:16:10] <beaky> hello im beaky
[16:16:14] <biberu> work, work, i see the conversation over there got political :D
[16:16:21] <CoderGuy> beaky this has been known for a long time lol
[16:16:36] <pikapika> C is always good
[16:16:40] <mrig> pikapika: It is git that really blows me away though, as an example of good use of this.
[16:16:46] <CoderGuy> man with recent events it made me realize, I love you coders so much <3
[16:17:19] <mrig> I think that the awareness of its author of the environment is what makes it so powerful, perhaps anyhow.
[16:17:21] <pikapika> mrig, yeah its such an elegant concept to just represent a complex data structure by using some data inside a file as pointers
[16:17:28] <mrig> exactly.
[16:17:39] <mrig> and it is really transparent too.
[16:18:05] <davve> data as poointers? sounds dangerous
[16:18:15] <davve> but i guess linus knows what hes doing
[16:18:38] <mrig> davve: cpu's are a raging fire of electrons, bound to be a little danger there :P
[16:18:52] <pikapika> davve, no not like directly writing a memory pointer to a disk file
[16:18:58] *** Joins: snake (~snake@user/snake)
[16:19:01] <pikapika> That won't make sense anyways because of virtual memory and relocation
[16:19:29] <pikapika> More like representing a pointer to another file inside a file using some mechanism
[16:20:14] <mrig> bash is more the thought of how to make this pointer, this leaf node of the OS into something more useful.
[16:20:36] <mrig> how to address the system that spawned you :)
[16:20:49] <pikapika> mrig, its amazing how far one can go by just combining some C programs with pipes etc
[16:21:11] <mrig> It's quite quaint looking at bash and vimscript for notions of what was going on back then.
[16:21:34] <pikapika> *simple C programs I meant
[16:21:41] <mrig> pikapika: yes it is, and it really is a way of structuring sanely too.
[16:22:00] <pulse> bash is absolutely horrible
[16:22:08] <pulse> at least for anything over 5 loc
[16:22:10] <mrig> Yes writing C for that, with a mind to sticking it together with bash afterwards.
[16:22:41] <pulse> pretty sure i'd rather write straight x86 asm than bash. at least i'd keep some of my sanity :p
[16:22:44] <mrig> piping data streams about.
[16:22:57] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[16:22:58] *** Joins: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net)
[16:23:22] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[16:23:23] <adder`> i agree with pulse on this one
[16:23:24] <mrig> pulse: you dont need much bash though to just deal with the command line arguments and then choosing which binaries to run when.
[16:23:42] <pikapika> Yeah I am not talking about writing an entire application in bash
[16:23:44] <pulse> mrig, yes, as long as it's ~5 lines of bash it's perfectly fine
[16:23:47] <snake> i wrote some bash for work
[16:24:02] <snake> idk it was the tool for the job... i had to copy files, create logs, journals, etc
[16:24:04] <pulse> writing anything complex in bash is akin to sticking a fork in your knee
[16:24:10] <mrig> pulse: shells all covered in barnacles :D
[16:24:11] <pikapika> Rather thoughtfully distributing the program between C or whatever main language you prefer and bash
[16:24:19] <snake> yeah i just make the script as dumb and simple as possible
[16:24:21] <snake> GASP
[16:24:25] <snake> a pokemon!
[16:24:26] <pikapika> snake, same
[16:24:43] <snake> i need to fight first before i can catch it
[16:24:49] <mrig> yes dumb language for dumb terminals!
[16:24:54] <snake> squirtle use water gun!
[16:24:56] <pikapika> pulse, I like how nicely integrated some rather complex text processing tools are in bash
[16:25:01] <pulse> i think MS has the right idea with powershell
[16:25:13] <snake> (squirtle hits pikapika with a watergun)
[16:25:22] <pulse> pikapika, yeah and i can do any of that text processing in python or JS infinitely easier and a thousand-fold less bug prone :p
[16:25:24] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:cd33:4903:2fc7:6512) (Quit: No Ping reply in 180 seconds.)
[16:25:25] <pikapika> snake, water types are weak to electrics
[16:25:33] <snake> shit u right
[16:25:34] * pikapika shocks snake and instant KOs
[16:25:42] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:25:43] <snake> damn i forget all the rules
[16:25:52] <snake> i was a kid when og pokemon was popular
[16:25:55] <snake> and i havent been into since then
[16:25:59] <mrig> pikapika: electrics disperse pretty quick in water though.
[16:26:02] <pulse> i don't understand pokemon to this day
[16:26:04] <pulse> what is it
[16:26:05] <pulse> i have no idea
[16:26:08] *** Quits: azed (~azed@160.159.122.89) (Ping timeout: 244 seconds)
[16:26:08] * mrig sends pikapika to ground.
[16:26:09] <pulse> it's just tiny monsters
[16:26:20] <pikapika> Ground types are good against electric yeah
[16:26:20] <snake> yeah cute pocket monsters
[16:26:29] <pulse> i understand tamagochi
[16:26:30] <snake> geodude i choose you!
[16:26:33] <pulse> tamagochi makes sense
[16:26:37] <pulse> i don't get pokemon tho
[16:26:39] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:e1e7:9230:b2e1:3a3d)
[16:26:46] <snake> pulse, pokemon is the precursor to furry
[16:26:49] <pulse> oh
[16:26:52] <pulse> really
[16:26:54] <pikapika> pulse, its just catching animals and making them fight
[16:26:57] <snake> geodude use bash
[16:27:00] <mrig> I've never played nor studied pokamom myself though, should claim ignorance now
[16:27:00] <pikapika> snake, furry predates pokemon
[16:27:10] <pulse> i'm like 96% sure the precursor to furries is lola bunny
[16:27:12] <snake> pikapika, yes, and times have changed
[16:27:15] <pulse> and lola bunny alone
[16:27:21] <mrig> sounds like trumps to me :|
[16:27:24] <snake> wtf is lola bunny
[16:27:27] * mrig chuckles.
[16:27:30] * snake throws pokeball at pikapika 
[16:27:33] <snake> ur mine
[16:27:34] <pikapika> uwu
[16:27:34] <pulse> you ... don't know who lola bunny is
[16:27:41] * pulse throws a basketball at snake 
[16:27:45] <pikapika> snake, dude looney tunes
[16:27:54] <pikapika> lola bunny is an l.t. character
[16:27:58] <snake> o
[16:28:06] <pulse> it's the one we all fapped to as kids sheesh
[16:28:16] <mrig> dang I have some really tedious code to write before I can have some fun, got to nail this down.
[16:28:19] <furrykef> Furries were around before there was Lola Bunny.
[16:28:26] <pulse> furrykef, yes but they weren't mainstream
[16:28:32] <pulse> they were super niche at best
[16:28:37] <furrykef> I don't think Space Jam made them mainstream
[16:28:41] * pikapika pounces on furrykef 
[16:28:42] <pulse> well, it sure helped
[16:28:44] <pulse> lol
[16:28:52] <mrig> I'm telling ya'all it just trumps in a new suit.
[16:29:10] <mrig> and that I think comes from a card game before it too.
[16:29:15] <GeDaMo> https://www.youtube.com/watch?v=dvkexGUF79A
[16:29:15] <Hitchens> YouTube: Cadbury Caramel Bunny Commercials | Duration: 6:39
[16:29:16] <snake> what about miss piggy
[16:29:19] <mrig> called perhaps trumps too.
[16:29:19] <snake> o wait she isnt furry
[16:29:34] <mrig> ask kermit, he would know :P
[16:29:42] * mrig hides.
[16:29:46] <pulse> ah, VS wants me to restart my PC. classy
[16:29:57] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[16:30:09] <snake> GeDaMo, !
[16:30:15] <snake> mrig, lol
[16:30:20] <xsperry> pulse.. yeah. I don't recall program installation asking me to restart since the windows 95 days (besides VS)
[16:30:21] <furrykef> Besides, my first furry crush was Princess Sally, and she predated Lola by about four years >.>
[16:30:37] <mrig> To think how much money was made by reiterating this recursive pleasure algorithm : https://ourpastimes.com/trumps-card-game-rules-5150583.html
[16:30:37] <Hitchens> Link: Trumps Card Game Rules | Our Pastimes
[16:30:46] *** Quits: death916 (~death916@user/death916) (Remote host closed the connection)
[16:31:00] <mrig> ... It is as simple as that, must be in the timing or something.
[16:32:13] *** Joins: pulse (~pulse@user/pulse)
[16:33:04] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[16:33:32] *** Joins: adder (~adder@user/adder)
[16:33:37] <furrykef> Also, even before there was Princess Sally, there was Gadget Hackwrench, back in 1989.
[16:34:03] <pikapika> There were lots of furry shows
[16:34:11] <snake> furrykef, ok ok
[16:34:18] <snake> there are many precursors to furry
[16:34:20] <snake> lets say that
[16:34:25] <snake> pokemon is one of them
[16:34:28] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[16:34:36] <pulse> but pokemon isn't even furry
[16:34:41] <pulse> pikachu seems rather smooth
[16:34:53] <snake> pikachu is a mouse
[16:35:08] <pulse> although the movie version is quite furry
[16:35:21] <snake> idk if u noticed but in anime they tend to not put too much detail into the hair
[16:35:21] <furrykef> Furrydom was well established already by the time Pokémon hit the west
[16:35:27] <snake> there is a balance of detail
[16:35:51] *** Quits: segnior (~segnior@user/segnior) (Quit: Leaving)
[16:36:05] <pulse> you could argue starfox was early furry
[16:36:49] <snake> mlp is also modern precursor to people's usage of furry
[16:37:15] <pikapika> mlp is long after furry had fully developed
[16:37:28] <snake> we're talking about different things
[16:37:36] <snake> i'm talking about what inspires a person to become a furry
[16:37:38] <pikapika> Ok
[16:37:40] <snake> not the beginning of furry
[16:37:44] <pikapika> And no I doubt it
[16:37:54] <pikapika> I think mlp and furry fandom is mostly distinct
[16:37:56] <snake> rule34
[16:38:02] <pikapika> rule34 always existed
[16:38:20] <snake> some1 out there liked mlp enough to make porn of it
[16:38:23] <snake> its a thing
[16:38:33] <pikapika> Though I don't know, it might be that mlp helped in an explosion of popularity of rule 34s
[16:38:47] <snake> i want coffee
[16:38:55] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[16:38:55] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[16:38:55] *** Joins: death916 (~death916@user/death916)
[16:39:04] <snake> brb gonna go brew some
[16:39:11] <mrig> Can anyone see anything on here marked as being expendable that is required for the running of the majority of modern systems? https://termbin.com/7sje
[16:39:12] <Hitchens> Link: 
[16:40:30] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 264 seconds)
[16:41:38] <mrig> For freeing up for letters I mean, to separate the system stuff from the language related, seems that the grammatical syntactic markers, sorry I am not sure what would be the correct term for these, are a requirement.
[16:42:21] <mrig> Or is there a point at which you say that backwards compatibility is not worth the mess that it makes?
[16:42:56] *** Quits: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi) (Quit: Leaving)
[16:43:11] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:43:25] <furrykef> <pikapika> mlp is long after furry had fully developed
[16:43:28] <furrykef> Not the original MLP
[16:43:50] *** Joins: scabby (~scabby@user/scabootssca)
[16:43:56] <pikapika> furrykef, I will admit I know nothing of mlp
[16:44:05] <pikapika> So that might very well have been the case
[16:44:21] <DPA> mrig: I don't know what this is for, but the answare is probably to just use UTF-8.
[16:44:23] <furrykef> I don't think MLP really caught the attention until the Friendship is Magic TV series, though, which is what you're probably thinking of.
[16:44:44] <mrig> DPA: it is to make a new charset that is compatible with UTF-8
[16:44:44] <furrykef> *the attention of the furry community
[16:45:02] <snake> furrykef, yeah that is what i was referring to
[16:45:09] <snake> the modern cute mlp that bronies are into
[16:45:12] <mrig> DPA: well for now it is exploration, but that is the underlying thought.
[16:45:16] <snake> brb gonna brew coffee
[16:45:18] *** Quits: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net) (Ping timeout: 264 seconds)
[16:45:31] * mrig looks up furry, and shall sleep less ignorant tonight.
[16:46:09] <mrig> DPA: unichar has some serious deficiencies for certain areas of linguistics, I'm exploring this.
[16:46:53] <PlanckWalk> IRC depends upon a bunch of those "expendables" :-)
[16:47:03] <mrig> PlanckWalk: oh which ones???
[16:47:15] <mrig> I need to learn about which are used in protocols.
[16:47:20] *** Joins: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi)
[16:47:32] <PlanckWalk> Definitely SOH and ETX, I'd have to check the RFCs for others
[16:47:37] <mrig> and also you can change the character set in a terminal too.
[16:48:00] <mrig> so this might be workable with escape characters that do that too.
[16:48:04] <DPA> UTF-8 and unicode work pretty well for most things. The only bad thing about it is that the characters followed by combining characters and the like don't have to specify that it's not the full glyph yet.
[16:48:17] <mrig> It has to work in terminals, this is my only current criterion.
[16:48:17] *** Quits: sheepduck (~sheepduck@2607:fea8:2a61:4800::3ae6) (Remote host closed the connection)
[16:48:21] <PlanckWalk> Err wait what?  All the alphabetic characters "expendable"?
[16:48:36] *** Joins: sheepduck (~sheepduck@2607:fea8:2a61:4800::6b7b)
[16:48:39] <mrig> PlanckWalk: Interchangeable.
[16:48:55] <mrig> you would not use those when writing greek, there is another set for greek.
[16:49:03] <mrig> hebrew too.
[16:49:21] <mrig> but not for some other languages.
[16:49:23] *** Quits: vdthi (~vdthi@dynamic-078-055-044-119.78.55.pool.telefonica.de) (Ping timeout: 244 seconds)
[16:49:35] <PlanckWalk> Hmm, that's likely to play hell with things like HTTP headers.  I'm not sure of the scope of what you're doing though.
[16:49:53] <mrig> DPA: yes, it is very cool, but there are some cases for which it really does not work at all.
[16:50:12] <mrig> PlanckWalk: oh absolutely no need of http for this.
[16:50:15] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:50:31] <mrig> likely will look at a protocol specifically for it.
[16:50:39] <PlanckWalk> (and, like, filenames)
[16:51:01] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[16:51:22] <PlanckWalk> But I guess you have a plan for those.
[16:51:45] <mrig> right so that would need to be addressed within the hypothetical system, as mentioned I do need to learn more about switching sets.
[16:52:08] <mrig> yes there is no reason not to use ascii at the same time if it is interchangeable. 
[16:52:16] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[16:52:24] <mrig> would need an ascii set in unichar though.
[16:52:44] <mrig> erm maybe not, could be that there is one already though.
[16:53:05] *** Quits: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr) (Quit: Leaving)
[16:53:15] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[16:53:15] <mrig> the phonetic base that I need has more vowels ascii will map to it but not vis versa.
[16:53:43] <DPA> I can't think of anything unicode doesn't work for. Except figuring out when the last glyph is complete, that's impossible to tell.
[16:53:47] <mrig> That's why I'm looking to free up a few char.
[16:54:03] <mrig> DPA: oh there are some gaping deficiencies.
[16:54:09] <mrig> I mean gaping.
[16:54:38] *** Joins: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net)
[16:55:09] <PlanckWalk> Are you looking at efficiency of representation by context-switching?
[16:55:36] <DPA> I still can't think of any.
[16:55:55] <mrig> PlanckWalk: thinking of use of regexp.
[16:56:06] <mrig> efficiently, automaton.
[16:56:17] <mrig> deficiency rather.
[16:56:33] <mrig> and nomenclature in coding.
[16:56:51] *** Joins: jaysicks (~jaysicks@31.46.10.251)
[16:57:15] <mrig> also to address the issues of security risks due to spelling.
[16:58:47] <mrig> DPA: the thing is one needs to be aware of the difference between a phonetic system and a purely logical one to really see the deficiency; An example of this is that from the same phonetic basis, many different scripts can be mapped to one source, without changing anything at all.
[16:58:55] <mrig> no crazy remapping.
[16:59:06] <mrig> for regexp this is a no brainer.
[17:00:59] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[17:01:01] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[17:01:32] <DPA> Same phonetic basis? As in similar sounding? Or similar looking? I don't think it's possible for a character set to solve this.
[17:01:45] <mrig> There are deeper implications but this is not a light topic to go into.
[17:03:04] <mrig> DPA: when a language is extrapolated from sound and not from an artistic hand; It has very different properties.
[17:03:29] <mrig> the phoneme more important than the glyph.
[17:03:56] *** Joins: archie (~archie@host-95-250-2-133.retail.telecomitalia.it)
[17:04:37] <mrig> There is an entire set of scripts that have these properties that are somewhat neglected, I'm quite certain that the importance of 'sound' within a compiler is quite evident to those that writer them today.
[17:04:48] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:05:45] <mrig> But as mentioned it is a pretty complicated subject.
[17:06:25] <mrig> Just seems to me that there is an area for me to play, or experiment with here.
[17:06:52] <arahael> DPA: One of the two languages I use can't be represented in unicode.
[17:06:59] <mrig> it also relates to my main project, likely will become a foundation of it.
[17:07:52] <DPA> Encode the phonemes and have ambiguities to writing and meaning. Encode the meaning as glyph, get ambiguities in writing and word/sound. Use a writing system, get ambiguities in sound and meaning.
[17:08:18] <DPA> There will always be problems.
[17:09:03] <DPA> And unicode has always space for more glyphs/codepoints.
[17:09:19] *** Joins: azed (~azed@160.159.122.89)
[17:10:06] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[17:11:12] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[17:11:56] <mrig> DPA: oh the glyphs match the phonems more logically.
[17:12:06] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[17:12:25] <mrig> they can do I mean.
[17:12:54] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[17:13:16] <mrig> but ambiguities are far fewer, much to the disdain of those who rely upon ambiguity for there lively hood :D
[17:14:26] <arahael> It would be awesome if you could represent all languages in unicode. :)
[17:14:26] <mrig> DPA: yes but that does not address the issue of use with automaton.
[17:14:58] <mrig> the regexp clause is really the crux of the issue that I have here.
[17:15:23] <mrig> I would like to explore this and have it to hand in my tool set.
[17:15:43] <mrig> very sharp stuff.
[17:15:43] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[17:16:26] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:16:26] <mrig> arahael: imagine having a phonetic base that mapped to all languages, transcribing would be a matter of codifying the grammatical rules of the language.
[17:16:49] <mrig> so much simpler for many linguistic tasks though.
[17:17:02] <arahael> mrig: A phonetic system for sign language would be intriguing.
[17:17:06] <mrig> again that is aside from the regexp thing.
[17:17:21] <mrig> arahael: oh yes that would, an animated graphical output.
[17:17:40] <PlanckWalk> IPA comes pretty close to a phonetic base for all languages
[17:17:45] <arahael> PlanckWalk: Not sign.
[17:17:53] <mrig> you would have some fascinating symmetries there between the sound and the motions.
[17:18:09] <mrig> PlanckWalk: not for regexp though.
[17:18:16] <arahael> PlanckWalk: I often wonder why we don't have universal voice to phonemes.
[17:18:20] <PlanckWalk> Sign language doesn't have phonetics, so it doesn't apply
[17:18:30] <arahael> PlanckWalk: According to wikipedia, it does.
[17:18:36] <DPA> Different languages rely on different kinds of noises. Some differentiate subtly different clicks, sibilants, intonation, etc., while for other languages, the same differences may be irrelevant or encode other kinds of information.
[17:18:37] <PlanckWalk> Err what?
[17:18:40] * PlanckWalk checks
[17:18:43] <mrig> PlanckWalk: the logic is the interesting part here, why is it in the compiler?
[17:19:58] <PlanckWalk> I see plenty of usages of the word "phonetic" on the page, but only by analogy
[17:20:23] <PlanckWalk> Nothing about having literal phonetics.
[17:20:34] *** Quits: archie (~archie@host-95-250-2-133.retail.telecomitalia.it) (Quit: Client closed)
[17:20:55] <arahael> PlanckWalk: Ah, a low quality page, perhaps.  But yeah, I originally wanted to say: "Not all language", but I checked first.
[17:21:33] *** Joins: jamea (~jamea77@187.185.190.209)
[17:21:40] <mrig> PlanckWalk: there is an entire group of different scripts that all map to the same underlying phonetic base, the same abugida.
[17:21:40] *** Quits: azed (~azed@160.159.122.89) (Read error: Connection reset by peer)
[17:21:58] *** Joins: mmfood (~mmfood@45.135.187.117)
[17:22:17] <mrig> It also sports an incredibly advanced grammatical structure too, built from that base.
[17:22:30] <mrig> I would like to explore it using regexp.
[17:22:34] <mrig> but can not.
[17:22:45] *** Joins: Buttercat (~Buttercat@user/buttercat)
[17:23:22] <mrig> ... and in a terminal, I hate wysiwyg editors.
[17:23:47] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[17:24:04] <mrig> well you can but it particularly spaghetti like in structure.
[17:24:12] <mrig> insanely so.
[17:25:14] *** Quits: mmfood_ (~mmfood@45.135.187.117) (Ping timeout: 244 seconds)
[17:26:00] *** Joins: magla (~gelignite@55d47962.access.ecotel.net)
[17:26:44] *** Quits: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37) (Ping timeout: 245 seconds)
[17:29:00] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:29:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:30:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:33:19] *** Quits: xa0s_ (~xa0s@mab.sdf.org) (Quit: bbl)
[17:34:11] <DPA> In japanese for example, you can say r or l or anything in between, and it probably won't change the meaning. They may not even hear the difference. I certainly can't hear some nuances I in some languages.
[17:35:15] <DPA> Well, it's not exactly like there is something like an r or l in the first place there.
[17:36:24] <entuland> uhm... I thought there _was_ an R in japanese
[17:37:05] <PlanckWalk> English is great.  It has homophones, heteronyms, and often only a vague resemblance between spellings and pronunciations.
[17:37:24] <entuland> ehehe, 'great' :P
[17:37:37] <entuland> probably one of the messiest languages around :P
[17:37:51] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[17:38:38] *** Quits: dev4449 (~dev4449@199.36.223.228) (Quit: Client closed)
[17:39:34] <mrig> Dang, I thought that it was grate. :|
[17:39:58] * mrig prepares some cheese for the spaghetti.
[17:40:26] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[17:40:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[17:40:37] <mrig> The 'll' in welsh is rather an interesting one.
[17:41:11] *** Joins: jamea97 (~jamea77@200.68.140.27)
[17:41:14] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[17:41:15] *** Quits: jamea (~jamea77@187.185.190.209) (Read error: No route to host)
[17:41:32] <mrig> curiously phonetically opposite to the rolled Scottish r.
[17:41:54] <PlanckWalk> The ridiculous mess of English is why I started learning Lojban
[17:42:41] <beaky> yes soon i will forgo natural language altogether and communicate in pure cubical type theory for maximum precision and logicness
[17:42:57] <entuland> https://www.youtube.com/watch?v=1edPxKqiptw
[17:42:57] <Hitchens> YouTube: The Chaos Of English Pronunciation by Gerard Nolst Trenité | Duration: 6:58
[17:43:10] <mrig> In one you fix the tongue and pass air around it, in the other you use that flow of air to vibrate the tongue, the tongue is convex in one and concave in the other.
[17:43:16] <DPA> entuland: If you look at one of the japanese syllabaries, there are some with an r in it, but none are stand-alone, as far as I know.
[17:43:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:43:45] *** Joins: jamea (~jamea77@187.185.190.209)
[17:44:10] *** Quits: sevla (~sev@user/sevla) (Quit: WeeChat 2.8)
[17:44:18] <entuland> oh sure it seems like it's all consonant-vowel pairs or something
[17:44:51] <mrig> beaky: is cubical type theory an emergent property of coding cubicles in the open plan office?
[17:44:57] <DPA> Mostly, I think. But I'm no expert in this matter either.
[17:45:02] *** Quits: srikavin (~srikavin@user/srikavin) (Quit: Ping timeout (120 seconds))
[17:45:07] <InPhase> English seems pretty locked in.  I wonder if we'll manage to fix it by patches.
[17:45:10] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[17:45:42] *** Quits: jamea97 (~jamea77@200.68.140.27) (Ping timeout: 244 seconds)
[17:46:12] <mrig> There are a lot of patches in place, and it is a wonderful language; Such a curious state of affairs really.
[17:46:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[17:46:34] <beaky> mrig: the cubes are named after cubical sets which are a n-dimensional generalization of path equivalences 
[17:46:36] <GeDaMo> Patching is how it got into the current state :P
[17:46:51] <InPhase> Intelligent refactoring maybe?
[17:47:07] <mrig> the way that Iambic pentameter just sort of fall out of it is awesome.
[17:47:08] <beaky> a 2d path is a square and a 3d square is a cube but a 4d cube is still a cube i guess mathematicians arent very creative past 3 dimensions
[17:47:24] <mrig> Why the music is so catchy I think.
[17:47:42] <InPhase> But yeah, I guess the core problem is that English has tended to be very accepting of loan words.
[17:48:08] <mrig> yes very much so, without any rule set for how to spell.
[17:48:08] <adder`> funny, serbian tends to borrow words from english
[17:48:09] <PlanckWalk> A 4d cube is a tesseract
[17:48:14] <InPhase> To the point where modern English has many abomination that mixes prefixes and suffixes from mismatched etymological roots.
[17:48:24] <InPhase> abominations that mix
[17:48:42] <beaky> yes i guess they stop past 4d
[17:48:49] <InPhase> But this is also one of its strengths in adapting.
[17:48:51] <mrig> beaky: oh the cube part is a generalisation, right that makes more sense.
[17:48:54] <beaky> since a 5d-cube is a '5-cube'
[17:49:05] *** Quits: magla (~gelignite@55d47962.access.ecotel.net) (Quit: Stay safe!)
[17:49:05] <InPhase> Just, some consistency would be nice to evolve in as well.
[17:49:18] <PlanckWalk> Yes, I haven't seen even a plausible specific name for 5D cube analogue
[17:49:48] <GeDaMo> Hypercube
[17:49:50] <adder`> my brother is doing a phd in phonetics, and it seems like that area is frozen in time 
[17:50:01] <mrig> dodecahedrons in 4d space are fascinating.
[17:50:06] <adder`> all the papers he reads are from the 70s
[17:50:20] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:50:26] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[17:50:39] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[17:50:41] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[17:50:42] <PlanckWalk> That probably accounts for the terrible state of text-to-speech
[17:50:44] <mrig> as space fillers.
[17:50:47] *** Joins: JavaBean (~JavaBean@user/javabean)
[17:50:49] <beaky> yes and the point of cubes is that the type theory says you can prove that you can plop in new faces on the cube when you have the other ones thus providing a proof for the axiom of univalence
[17:51:23] <mrig> beaky: what about fractal boundaries, are cubes not the antipathy of this?
[17:51:55] <beaky> yes that was one of the main worries but i think last year they solved it in some paper
[17:52:14] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:52:15] <mrig> hairy cubes?
[17:52:59] *** Joins: srikavin (~srikavin@user/srikavin)
[17:53:00] <mrig> nice, I like resolved issue, dodecohedrons in 4d space seem to lead to a count quite nicely though.
[17:55:31] <mrig> adder`: must have been the fault of max headroom in the 80's :D
[17:55:35] <beaky> for example you can define the equivalence between unary numbers (like in peano natural numbers) and binary numbers then have all the proofs transported automagically https://github.com/agda/cubical/blob/master/Cubical/Data/BinNat/BinNat.agda
[17:55:36] <Hitchens> Link: cubical/BinNat.agda at master · agda/cubical · GitHub
[17:56:06] <mrig> beaky: that makes sense, that there be a mapping.
[17:57:08] <GeDaMo> https://www.youtube.com/watch?v=6epzmRZk6UU
[17:57:08] <Hitchens> YouTube: The Art of Noise with Max Headroom - Paranoimia (Official Video) | Duration: 3:26
[17:58:41] *** Joins: reumeth (~reumeth@user/reumeth)
[18:00:40] *** Joins: azed (~azed@160.159.122.89)
[18:01:26] <mrig> :D That take me back!
[18:02:09] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[18:03:00] *** Joins: caramel_ (~caramel@user/caramel)
[18:03:13] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 272 seconds)
[18:03:59] <mrig> Does CTRL_0 send a \0 char?
[18:04:12] <ixil> are there tools to compose/generate api's ?
[18:04:16] <mrig> oh ctrl d rather.
[18:04:52] <GeDaMo> Ctrl-@ should be 0
[18:05:15] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[18:05:25] <mrig> oh right, is the Ctrl-d to get EOF a unix thing>
[18:05:27] <mrig> ?
[18:06:04] <GeDaMo> Yes
[18:06:14] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:06:35] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:07:31] <mrig> but the character is a \0 so that's safe.
[18:08:34] *** Joins: sp41 (~spal@70.241.120.35)
[18:11:39] *** Joins: jamea97 (~jamea77@200.68.140.27)
[18:12:18] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 264 seconds)
[18:13:30] *** Joins: Progster (~blah@pool-72-80-87-95.nycmny.fios.verizon.net)
[18:17:44] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 244 seconds)
[18:18:17] *** Joins: salitos (~salitos@197.156.190.210)
[18:18:48] <DPA> I'm pretty sure EOF isn't any of the 0-255 characters in this case. read() will return 0 chars read. getc() will return the EOF constant (which isn't between 0-255 on linux). So EOF is kind of like the lack of a character.
[18:20:23] <mrig> oh right, so it is just mapped to by xserver I suppose.
[18:20:41] <mrig> in the case of a terminal I mean.
[18:20:49] <mrig> terminal emulator rather.
[18:20:51] *** Quits: snake (~snake@user/snake) (Read error: Connection reset by peer)
[18:21:06] <jamea97> hi all, i creted a python program that use sqlite db my question is: where is saved the file: swItsol.db on Android device? thanks
[18:21:42] <nitrix> The current working directory.
[18:22:30] <jamea97> wich is? i downloaded  the apk to downloads folder and isntalled from here
[18:22:53] <jamea97> *installed
[18:22:58] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:23:23] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:24:04] *** Quits: xff0x_ (~xff0x@217.110.198.158) (Ping timeout: 272 seconds)
[18:24:57] <nitrix> If you don't know what the "current working directory" is, maybe you should start with that before making android applications...
[18:25:17] <mrig> does android have find on it?
[18:25:27] *** Joins: Crassus (~Crassus@user/crassus)
[18:25:37] *** Quits: Crassus (~Crassus@user/crassus) (Client Quit)
[18:26:09] <jamea97> nitrix, i think in /data directory but not exist here
[18:26:48] *** Joins: One39Dev (LordShiva@user/one39dev)
[18:26:58] <nitrix> What about you log the working directory instead of guessing?
[18:27:22] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: Leafing - Like a tree)
[18:27:40] *** Joins: pavelow (~pavelow@opticalchimp.com)
[18:27:48] *** Quits: hi^-^ (~^-^hi@user/-hi/x-1729478) (Remote host closed the connection)
[18:27:50] *** Joins: ^-^hii (~^-^hi@user/-hi/x-1729478)
[18:28:50] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[18:28:55] *** Joins: imode (~imode@user/imode)
[18:30:19] <nitrix> If you're not using the C API, the Java one obtained with getWritableDatabase() should be at /data/data/com.yourApp/databases/swItsol.db
[18:30:56] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:31:38] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[18:31:46] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:31:56] <jamea97> in /data not see other data directory
[18:32:11] *** Joins: kluk (~kluk@2603-7000-9b3f-6934-8981-4e0b-0555-b388.res6.spectrum.com)
[18:33:23] *** Quits: kluk (~kluk@2603-7000-9b3f-6934-8981-4e0b-0555-b388.res6.spectrum.com) (Read error: Connection reset by peer)
[18:34:21] *** Joins: hi^-^ (~^-^hi@ns544813.ip-66-70-176.net)
[18:34:21] *** Quits: hi^-^ (~^-^hi@ns544813.ip-66-70-176.net) (Changing host)
[18:34:21] *** Joins: hi^-^ (~^-^hi@user/-hi/x-1729478)
[18:36:25] <jamea97> exist hidden folders  ?
[18:36:39] *** Joins: inky_ (~inky@46.162.233.8)
[18:38:04] *** Quits: ^-^hii (~^-^hi@user/-hi/x-1729478) (Ping timeout: 268 seconds)
[18:38:41] *** Quits: _inky (~inky@141.136.79.172) (Ping timeout: 272 seconds)
[18:38:44] *** Quits: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net) (Ping timeout: 264 seconds)
[18:39:38] *** Quits: dhil (~dhil@195.213.192.47) (Ping timeout: 252 seconds)
[18:40:18] *** Joins: c2f00 (~dogverflo@185.123.143.199)
[18:40:32] *** Joins: snake (~snake@user/snake)
[18:43:53] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Quit: leaving)
[18:44:06] *** Quits: dogverflow (~dogverflo@185.45.15.199) (Ping timeout: 264 seconds)
[18:46:36] *** Joins: jamea (~jamea77@187.185.190.209)
[18:49:01] *** Quits: jamea97 (~jamea77@200.68.140.27) (Ping timeout: 272 seconds)
[18:49:15] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: Leafing - Like a tree)
[18:49:16] *** Joins: jamea97 (~jamea77@200.68.140.27)
[18:49:32] *** Joins: pavelow (~pavelow@opticalchimp.com)
[18:49:33] *** Joins: jess (~jess@libera/staff/jess)
[18:50:48] *** Quits: Crypt9a2e (~Crypt9a2e@157.51.3.28) (Ping timeout: 244 seconds)
[18:50:54] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 245 seconds)
[18:52:22] *** Joins: dhil (~dhil@80.208.56.181)
[18:52:28] *** Joins: arcatech (~arcatech@user/arcatech)
[18:52:52] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Ping timeout: 244 seconds)
[18:53:04] *** Joins: Guest0 (~Guest0@pool-39.253.176.62.dynamic.wobline-ip.de)
[18:54:19] <Guest0> how exactly is `sleep` usually implemented on an OS level? How does the OS make a CPU sleep and how does it know when the sleeping time is up? For instance, how does it work on Linux?
[18:55:25] *** Joins: contagious_meow (~salitos@197.156.190.157)
[18:55:47] <lf94> Guest0: 1. CPUs have different operating levels which you can tell to go to and use interrupts / timers to wake them up built into the hardware itself 2. sleep when it comes to processes on an OS is just the OS not running that code for a certain amount of time
[18:57:02] <Guest0> and how do those timers work? Wouldn't they be similar to a busy loop or how are they implemented to be energy efficient?
[18:57:56] <deniska> Guest0: they have an oscillator connected to a counter, like, physically, because it's hardware :)
[18:58:01] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[18:58:09] <mrig> the computer itself is driven by an oscillating crystal that regulates the entire shebang.
[18:58:33] *** Quits: salitos (~salitos@197.156.190.210) (Ping timeout: 244 seconds)
[18:59:03] <Guest0> oh okay I don't know entirely what oscillators are but I can kind of see what you mean.
[18:59:28] <mrig> right yes, some have specific oscillators that are more precise and away from the mayhem of the cup for really time critical things, such as audio.
[18:59:50] <mrig> I imagine that they are used for scientific devices too.
[19:00:34] <Guest0> and also if I remember correctly computers usually don't actually run at full speed but are "clocked" at a specific speed and that is also why overclocking exists
[19:00:50] <mrig> Makes sense, yes.
[19:01:04] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[19:01:31] <Guest0> and then of course you can control that physical clock with things like `sleep`, makes sense.
[19:02:30] <mrig> the piezoelectric electric effect is key to this, if I'm not mistaken.
[19:03:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[19:03:26] <mrig> Guest0: the system does complicate this a little as there are different starting points and also counters that run when a thread is active but stop when they are not, so there are different concepts of time.
[19:03:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:04:47] <mrig> wallclock monotonic system time, all sorts of fun : https://www.man7.org/linux/man-pages/man3/clock_gettime.3.html
[19:04:48] <Hitchens> Link: clock_gettime(3) - Linux manual page
[19:05:12] <mrig> should the clock time the process or the total time.
[19:05:12] <Guest0> I see
[19:05:35] * mrig jitters.
[19:05:38] <mrig> :D
[19:05:45] *** Joins: federico (~federico@151.51.89.77)
[19:05:52] <mrig> must be the coffee!
[19:05:52] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:06:23] *** Joins: ausserz (~ausserz@n219073000163.netvigator.com)
[19:08:38] *** federico is now known as Guest6247
[19:10:03] *** Quits: One39Dev (LordShiva@user/one39dev) (Quit: Leaving)
[19:11:05] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:11:35] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:12:05] *** Quits: mmfood (~mmfood@45.135.187.117) (Ping timeout: 252 seconds)
[19:14:33] *** Quits: Guest0 (~Guest0@pool-39.253.176.62.dynamic.wobline-ip.de) (Quit: Connection closed)
[19:14:54] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[19:16:20] *** Joins: yamz (~salitos@197.156.190.208)
[19:19:35] *** Quits: azed (~azed@160.159.122.89) (Quit: WeeChat 3.1)
[19:19:44] *** Quits: contagious_meow (~salitos@197.156.190.157) (Ping timeout: 244 seconds)
[19:19:51] *** Joins: xeno__ (~xeno@user/xeno)
[19:20:06] *** Quits: dhil (~dhil@80.208.56.181) (Ping timeout: 264 seconds)
[19:22:04] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[19:23:02] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 244 seconds)
[19:23:20] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[19:25:59] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[19:26:21] *** Parts: gimgiam (~gimgiam@user/gimgian) (Leaving)
[19:28:33] *** nifl is now known as Guest1206
[19:28:33] *** Quits: Guest1206 (~user@user/niflce) (Killed (osmium.libera.chat (Nickname regained by services)))
[19:28:42] *** Joins: Guest1206 (~user@user/niflce)
[19:33:38] *** Joins: dhil (~dhil@195.213.192.47)
[19:33:42] *** Joins: gitesh (~gitesh@183.87.155.31)
[19:34:03] <gitesh> why function is used in callback function rather than defining a new construct?
[19:34:21] *** Joins: Akuli (~Akuli@82-203-167-237.bb.dnainternet.fi)
[19:34:43] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Ping timeout: 244 seconds)
[19:34:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:35:34] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[19:37:23] *** Quits: ausserz (~ausserz@n219073000163.netvigator.com) (Read error: Connection reset by peer)
[19:38:07] <GeDaMo> What kind of construct?
[19:39:18] *** Joins: xenon- (~bc817c21@217.29.117.252)
[19:39:48] *** Joins: a6a45081-2b83 (~aditya@106.214.237.94)
[19:40:35] <a6a45081-2b83> has anyone here used rescuetime or similar time tracking software, would like to know review from someone who had first hand experience
[19:41:06] <a6a45081-2b83> I really liked https://github.com/ActivityWatch/activitywatch but it does not have syncronization capabilities yet
[19:41:07] <Hitchens> Link: GitHub - ActivityWatch/activitywatch: The best free and open-source automated time tracker. Cross-platform, extensible, privacy-focused.
[19:41:24] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[19:41:48] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[19:42:20] <jamea97> python question: hi all, how to get number days from 01/01/Actualyear to now, in this case is 162, any advice?
[19:44:09] <GeDaMo> Create two datetime objects and subtract one from the other?
[19:44:36] *** Joins: smorgasbord (~buggy@user/smorgasbord)
[19:44:37] *** Parts: smorgasbord (~buggy@user/smorgasbord) ()
[19:44:51] *** Joins: smorgasbord (~buggy@user/smorgasbord)
[19:45:21] <InPhase> jamea97: datetime.datetime.now().strftime('%j')
[19:46:48] <jamea97> ok, thx
[19:46:57] *** Joins: xff0x_ (~xff0x@2001:1a81:5346:bf00:1313:feb6:d304:287)
[19:48:27] <InPhase> jamea97: If you don't like stringifying, (datetime.datetime.now() - datetime.datetime(datetime.datetime.now().year, 1, 1)).days + 1
[19:49:19] <InPhase> Although pre-grab the datetime.datetime.now() a single time, to avoid anomalous bugs when run at midnight on New Year's Eve.  :)
[19:50:13] *** Quits: death916 (~death916@user/death916) (Ping timeout: 268 seconds)
[19:50:35] *** Joins: bsdbandit01 (~bsdbandit@2607:fb90:ad2b:a25:8146:603:5c91:63da)
[19:52:09] *** Quits: imode (~imode@user/imode) (Ping timeout: 252 seconds)
[19:52:15] <jamea97> nisnt the case
[19:52:19] <jamea97> thanks InPhase
[19:53:42] <gitesh> i mean why functions are used in event binding and not special new construct like function?
[19:54:29] <InPhase> gitesh: You mean function objects / functors?  If so, those are a common choice for event processing APIs.
[19:55:06] <gitesh> what is event binding?
[19:55:30] <InPhase> Submitting something to be called when an event happens.
[19:55:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:55:53] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[19:55:53] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[19:55:53] *** Joins: death916 (~death916@user/death916)
[19:55:54] <gitesh> ok, brb reboot
[19:55:57] *** Quits: gitesh (~gitesh@183.87.155.31) (Quit: Client closed)
[19:56:44] *** Quits: jamea97 (~jamea77@200.68.140.27) (Ping timeout: 245 seconds)
[19:57:03] *** Joins: jamea (~jamea77@187.185.190.209)
[19:57:37] *** Quits: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[19:57:54] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (Quit: tccki)
[19:57:55] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:c0b7:e85f:d130:c70f)
[19:57:56] *** Quits: snake (~snake@user/snake) (Ping timeout: 264 seconds)
[19:58:13] *** Joins: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795)
[19:59:52] *** Joins: gitesh (~gitesh@183.87.155.31)
[19:59:52] *** Joins: pulse (~pulse@user/pulse)
[20:03:33] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Ping timeout: 272 seconds)
[20:04:35] *** Quits: a6a45081-2b83 (~aditya@106.214.237.94) (Remote host closed the connection)
[20:05:29] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 245 seconds)
[20:05:41] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:06:32] *** Quits: bsdbandit01 (~bsdbandit@2607:fb90:ad2b:a25:8146:603:5c91:63da) (Read error: Connection reset by peer)
[20:07:22] <gitesh> https://en.wikipedia.org/wiki/Event-driven_programming
[20:07:22] <Hitchens> Link: Event-driven programming - Wikipedia
[20:07:48] <gitesh> i want to learn event driven programming and wanna know why function is used to bind events and not something else
[20:08:47] *** Quits: Rob_ (~Rob_@212.71.9.85) (Quit: WeeChat 2.8)
[20:08:51] <InPhase> Didn't we just answer that?
[20:09:34] <InPhase> If you have a broader question, clarify another thing you mean as "something else".
[20:09:42] *** Joins: bsdband74 (~bsdbandit@172.58.188.215)
[20:10:41] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:c0b7:e85f:d130:c70f) (Read error: Connection reset by peer)
[20:10:54] <GeDaMo> A function is the most general way of specifying what you want an event to trigger
[20:11:37] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:c0b7:e85f:d130:c70f)
[20:13:19] <gitesh> what if i would bind a class to be invoked when an event is trigger?
[20:13:22] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[20:13:31] <gitesh> that will create an object
[20:16:31] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:16:45] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:17:32] *** Quits: bsdband74 (~bsdbandit@172.58.188.215) (Ping timeout: 252 seconds)
[20:19:23] *** Quits: inky_ (~inky@46.162.233.8) (Remote host closed the connection)
[20:19:29] *** Joins: _inky (~inky@46.162.233.8)
[20:20:05] <gitesh> why is there event driven programming
[20:20:54] <river> becausae it's useful in certain situations?
[20:21:06] <GeDaMo> Why is there any kind of programming? :|
[20:23:37] *** Joins: nick (~igloo@42.106.13.186)
[20:25:04] <routeveg> None of the programming models are really more capable than others. Some are arguably redundant.
[20:25:49] *** Quits: _inky (~inky@46.162.233.8) (Remote host closed the connection)
[20:25:52] *** Joins: bsdbandit01 (~bsdbandit@172.58.187.20)
[20:26:00] <routeveg> Like, you can implement lambdas with classes, or you can implement classes with lambdas; arguments about which is more 'fundamental' notwithstanding, these are all made up things anyway.
[20:26:42] *** Quits: nick (~igloo@42.106.13.186) (Client Quit)
[20:27:13] <routeveg> I'd like to see more support for coroutines in C, personally. With type checking. To avoid so many 'manual' state machine implementations.
[20:27:17] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:27:23] <river> go has them
[20:27:30] <routeveg> Yes! I like what go does here
[20:27:40] <routeveg> Though it would be good to have the typechecking there too
[20:27:45] *** Quits: bsdbandit01 (~bsdbandit@172.58.187.20) (Read error: Connection reset by peer)
[20:29:19] <routeveg> I think there's some type system to describe such interactions....Session Types?
[20:30:25] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:33:13] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:34:00] *** Joins: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net)
[20:34:36] *** Joins: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net)
[20:35:10] <gitesh> i think object oriented programming is more concern about data
[20:35:25] *** Joins: bsdbandit01 (~bsdbandit@172.58.187.20)
[20:35:49] *** Quits: gothicserpent (~gothicser@static-198-54-129-78.cust.tzulo.com) (Read error: Connection reset by peer)
[20:37:14] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 244 seconds)
[20:37:31] *** Quits: bsdbandit01 (~bsdbandit@172.58.187.20) (Read error: Connection reset by peer)
[20:38:18] *** Joins: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi)
[20:40:52] *** Joins: bsdbandit01 (~bsdbandit@2607:fb90:a948:b26d:f906:9536:efaa:18f7)
[20:41:04] *** Quits: bsdbandit01 (~bsdbandit@2607:fb90:a948:b26d:f906:9536:efaa:18f7) (Read error: Connection reset by peer)
[20:43:33] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[20:44:40] *** Joins: gothicserpent (~gothicser@static-198-54-129-77.cust.tzulo.com)
[20:46:37] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 272 seconds)
[20:47:03] *** Joins: bsdbandit01 (~bsdbandit@2607:fb90:a948:b26d:f906:9536:efaa:18f7)
[20:47:06] *** Quits: bsdbandit01 (~bsdbandit@2607:fb90:a948:b26d:f906:9536:efaa:18f7) (Read error: Connection reset by peer)
[20:51:26] *** Joins: mel (~caramel@user/caramel)
[20:51:32] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[20:51:36] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[20:52:07] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[20:52:32] *** Joins: bencevans5 (~bencevans@static.153.97.4.46.clients.your-server.de)
[20:52:36] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[20:53:07] *** Joins: snake (~snake@user/snake)
[20:53:12] *** Joins: ephemer0l_ (~ephemer0l@organizedmagnetism.com)
[20:53:18] *** Joins: bsdbandit01 (~bsdbandit@172.58.187.20)
[20:53:53] *** Joins: Guest120` (~user@user/niflce)
[20:54:21] *** Joins: mjs2600_ (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[20:54:21] *** Joins: Auron956 (~Auron956@user/auron)
[20:54:26] *** Joins: lf94- (~lf94@178.128.239.88)
[20:54:26] *** Joins: sp41_ (~spal@70.241.120.35)
[20:54:52] *** Joins: eldritch__ (~eldritch@134.209.221.71)
[20:55:00] *** Joins: bsdband0 (~bsdbandit@172.58.188.215)
[20:55:04] *** Joins: jootoi_ (~jootoi@130.61.158.197)
[20:55:31] *** Joins: nedbat_ (~nedbat@python/psf/nedbat)
[20:55:36] *** Joins: death916_ (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[20:55:51] *** Joins: zhiayang_ (~zhiayang@user/zhiayang)
[20:56:06] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[20:56:31] *** Joins: jaskal_ (jaskal@user/jaskal)
[20:56:55] *** Joins: mrig_ (~mrig@user/mrig)
[20:56:58] *** Joins: kaivo (~Kaivo@user/kaivo)
[20:57:06] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:57:09] *** Joins: no-n (~ed@168.138.14.60)
[20:57:33] *** Joins: gothicserpent_ (~gothicser@static-198-54-129-77.cust.tzulo.com)
[20:57:47] *** Joins: bsdband81 (~bsdbandit@172.58.220.43)
[20:58:03] *** Quits: bsdbandit01 (~bsdbandit@172.58.187.20) (Ping timeout: 268 seconds)
[20:58:11] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[20:58:42] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (Ping timeout: 252 seconds)
[20:59:20] *** Quits: bsdband0 (~bsdbandit@172.58.188.215) (Ping timeout: 252 seconds)
[20:59:21] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Killed (NickServ (GHOST command used by riff_IRC)))
[20:59:28] *** riff_IRC is now known as riff-IRC
[20:59:56] *** Joins: bsdbandit01 (~bsdbandit@2607:fb90:ad29:32a2:9884:a5e7:a9fe:cd4d)
[21:00:07] *** Joins: jamea (~jamea77@189.237.221.237)
[21:00:58] *** Joins: absc1 (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it)
[21:01:00] *** Quits: gothicserpent (~gothicser@static-198-54-129-77.cust.tzulo.com) (*.net *.split)
[21:01:00] *** Quits: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net) (*.net *.split)
[21:01:00] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (*.net *.split)
[21:01:00] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[21:01:00] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (*.net *.split)
[21:01:00] *** Quits: Guest1206 (~user@user/niflce) (*.net *.split)
[21:01:00] *** Quits: arcatech (~arcatech@user/arcatech) (*.net *.split)
[21:01:00] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[21:01:00] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (*.net *.split)
[21:01:00] *** Quits: sp41 (~spal@70.241.120.35) (*.net *.split)
[21:01:00] *** Quits: caramel_ (~caramel@user/caramel) (*.net *.split)
[21:01:00] *** Quits: pony (~ed@168.138.14.60) (*.net *.split)
[21:01:00] *** Quits: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f) (*.net *.split)
[21:01:00] *** Quits: Neui[m] (~neuimatri@2001:470:69fc:105::745) (*.net *.split)
[21:01:00] *** Quits: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0) (*.net *.split)
[21:01:00] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (*.net *.split)
[21:01:00] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[21:01:00] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (*.net *.split)
[21:01:00] *** Quits: absc (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it) (*.net *.split)
[21:01:00] *** Quits: RaycatWhoDat (~RaycatWho@2601:241:8f80:5250:fc6d:ad8a:59e8:58f4) (*.net *.split)
[21:01:00] *** Quits: mrig (~mrig@user/mrig) (*.net *.split)
[21:01:00] *** Quits: Auron (~Auron956@user/auron) (*.net *.split)
[21:01:00] *** Quits: Hitchens (~PircBot@ec2-34-203-242-51.compute-1.amazonaws.com) (*.net *.split)
[21:01:00] *** Quits: lf94 (~lf94@178.128.239.88) (*.net *.split)
[21:01:00] *** Quits: mistbreeze_ (~mistbreez@2600:1700:b7e0:8320:71da:707a:d9c1:c852) (*.net *.split)
[21:01:00] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[21:01:00] *** Quits: Electric_Sheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[21:01:00] *** Quits: nedbat (~nedbat@python/psf/nedbat) (*.net *.split)
[21:01:00] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[21:01:00] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[21:01:00] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[21:01:00] *** Quits: les_ (znc@user/les) (*.net *.split)
[21:01:00] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[21:01:00] *** Quits: Kaivo_ (~Kaivo@user/kaivo) (*.net *.split)
[21:01:00] *** Quits: jcarpenter2 (~rofl@2603:3016:1e01:b960:20b3:fc15:12c5:30d8) (*.net *.split)
[21:01:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (*.net *.split)
[21:01:00] *** Quits: jaskal (jaskal@user/jaskal) (*.net *.split)
[21:01:00] *** Quits: eldritch_ (~eldritch@134.209.221.71) (*.net *.split)
[21:01:00] *** Quits: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de) (*.net *.split)
[21:01:00] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[21:01:00] *** Quits: img (~img@user/img) (*.net *.split)
[21:01:02] *** bencevans5 is now known as bencevans
[21:01:02] *** zhiayang_ is now known as zhiayang
[21:01:23] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:01:51] *** Joins: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net)
[21:02:32] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:02:41] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[21:02:44] *** Quits: bsdband81 (~bsdbandit@172.58.220.43) (Ping timeout: 264 seconds)
[21:03:28] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[21:04:51] <routeveg> gitesh: By manual state machine implementation, i mean people making variables like 'enum State { RUNNING, STOPPED, ERROR; }' and switches like 'switch(state) { case ERROR: blah; state = STOPPED }'
[21:05:08] <routeveg> Which is not really specific or excluded from OOP
[21:07:16] <routeveg> Functions give you state machines - process() { while(1) { do_thing(); if(blah) continue; if(error} break; } shutdown(); }
[21:07:55] <routeveg> But in an asynchronous event/driven programming model, you end up scattering that logic all over the code, because you need to provide a function to be called some number of times for each thing that happens.
[21:08:08] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[21:08:22] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[21:08:39] *** Quits: yamz (~salitos@197.156.190.208) (Remote host closed the connection)
[21:08:57] *** Joins: yamz (~salitos@197.156.190.147)
[21:09:11] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[21:09:11] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[21:09:11] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[21:10:19] *** Joins: contagious_meow (~salitos@197.156.190.243)
[21:10:22] *** Joins: wovixo (~wovixo@128.104.205.49)
[21:10:38] <adder`> i kind of want to get rid of xmonad but i'm so used to it
[21:10:41] *** Quits: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) (Ping timeout: 272 seconds)
[21:10:57] *** Quits: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[21:12:24] *** Quits: xff0x_ (~xff0x@2001:1a81:5346:bf00:1313:feb6:d304:287) (Ping timeout: 265 seconds)
[21:12:28] <adder`> what is xmonadless computing like
[21:12:35] *** Joins: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net)
[21:12:52] *** Joins: salitos (~salitos@197.156.190.167)
[21:13:24] *** Quits: yamz (~salitos@197.156.190.147) (Ping timeout: 244 seconds)
[21:14:07] *** Joins: jess (~jess@libera/staff/jess)
[21:14:13] *** Joins: xff0x_ (~xff0x@185.65.135.235)
[21:14:43] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[21:14:57] *** Quits: contagious_meow (~salitos@197.156.190.243) (Ping timeout: 244 seconds)
[21:17:00] <routeveg> adder`: Why would a sky-city-dweller such as you concern yourself with the experiences of us grounders?
[21:17:24] <routeveg> Did Haskell hurt you?
[21:19:53] <gilesc> gitesh: i'd say OOP is more concerned about data coupled with functionality on the data. I still think its better to have a little separation, but then again I've not really liked OOP in quite some time.
[21:20:05] <adder`> routeveg, i have no idea what are you on about, but no
[21:20:22] *** Joins: pupiw (~pupiw@2600:8801:f10c:7b00:fd85:2d29:6287:72b7)
[21:20:38] *** Quits: salitos (~salitos@197.156.190.167) (Ping timeout: 244 seconds)
[21:20:45] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[21:20:45] <routeveg> adder`: I'm jesting in the direction that xmonad users are more highly evolved than us non-xmonad users.
[21:20:50] *** Joins: mistbreeze_ (~mistbreez@2600:1700:b7e0:8320:d804:8caf:4f02:586)
[21:20:51] *** Joins: jcarpenter2 (rofl@2603:3016:1e01:b960:20b3:fc15:12c5:30d8)
[21:20:52] *** Joins: les (znc@user/les)
[21:20:55] *** Joins: RaycatWhoDat (~RaycatWho@2601:241:8f80:5250:fc6d:ad8a:59e8:58f4)
[21:20:59] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:21:03] *** Joins: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795)
[21:21:08] <routeveg> Because everything to do with haskell is more highly evolved than everything else
[21:21:13] <routeveg>  /s
[21:21:17] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[21:21:49] <adder`> i've managed to put together a config i like without actually knowing haskell
[21:22:25] *** Quits: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[21:23:18] *** Quits: bsdbandit01 (~bsdbandit@2607:fb90:ad29:32a2:9884:a5e7:a9fe:cd4d) (Read error: Connection reset by peer)
[21:23:23] *** jess is now known as j
[21:24:19] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[21:26:09] *** Joins: arcatech (~arcatech@user/arcatech)
[21:27:02] *** Quits: xff0x_ (~xff0x@185.65.135.235) (Ping timeout: 268 seconds)
[21:28:04] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 244 seconds)
[21:28:31] *** Joins: xff0x_ (~xff0x@2001:1a81:5346:bf00:ada3:bdcd:e60c:3e25)
[21:28:35] *** Quits: c705 (c705@alpine/contributor/c705) (Ping timeout: 244 seconds)
[21:29:10] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:29:22] *** Joins: Andros (~Andros@176.116.80.1)
[21:32:13] *** Quits: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[21:32:18] *** Joins: brickfat (~brickfat@user/brickfat)
[21:32:55] *** j is now known as jess
[21:34:57] *** Joins: img (~img@user/img)
[21:34:57] *** Quits: adder (~adder@user/adder) (Read error: Connection reset by peer)
[21:36:39] *** Joins: river (~river@tilde.team/user/river)
[21:37:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:39:24] *** Parts: smorgasbord (~buggy@user/smorgasbord) ()
[21:40:21] *** mrig_ is now known as mrig
[21:40:33] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[21:45:00] *** Joins: adder (~adder@user/adder)
[21:45:29] *** Joins: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0)
[21:46:25] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[21:47:30] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:48:23] *** Quits: river (~river@tilde.team/user/river) (Quit: Leaving)
[21:49:31] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 272 seconds)
[21:51:47] *** Quits: gitesh (~gitesh@183.87.155.31) (Quit: Client closed)
[21:52:20] *** Joins: c705 (c705@alpine/contributor/c705)
[21:55:37] *** Joins: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net)
[21:57:00] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[21:59:54] *** Joins: hexfive (~eric@50.35.83.177)
[21:59:54] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[22:03:57] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[22:04:09] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[22:06:25] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[22:06:33] *** xeno__ is now known as xeno
[22:08:02] *** Quits: absc1 (~absc@dynamic-adsl-94-34-175-4.clienti.tiscali.it) (Remote host closed the connection)
[22:08:05] *** Joins: Neui[m] (~neuimatri@2001:470:69fc:105::745)
[22:09:15] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[22:11:06] *** Quits: paulo_ (~paul0@user/paulo/x-9032687) (Ping timeout: 264 seconds)
[22:11:26] *** Joins: salitos (~salitos@154.122.2.91)
[22:15:51] *** Quits: eot (~eot@user/eot) (Quit: later)
[22:18:42] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[22:19:49] *** Joins: gareppa (~gareppa@user/gareppa)
[22:20:00] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[22:23:18] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[22:25:30] *** Joins: brickfat (~brickfat@user/brickfat)
[22:26:40] *** Joins: craigo (~craigo@180-150-37-63.b49625.bne.nbn.aussiebb.net)
[22:29:28] *** Joins: jinsun (~quassel@182.77.87.72)
[22:29:52] *** Quits: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) (Ping timeout: 244 seconds)
[22:30:10] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[22:32:22] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[22:32:37] *** Joins: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca)
[22:32:49] *** Quits: salitos (~salitos@154.122.2.91) (Quit: Leaving)
[22:33:29] <_73> in a loop like `for (int i = 0; i < 12; i++)` I am looking for the technical name for the i. I want to write something like `each time through the loop I grab the i'th element`. I would like this sentance to make sense even if the variable was named j or loop or whatever.
[22:33:37] <c705> index
[22:34:02] <_73> each time through the loop I grab the index element? That makes sense?
[22:34:17] <gilesc> i just use "index" or "iteration"
[22:34:43] <gilesc> usually you use an "iterator" when doing collections, and they're at a specific "index" in the thing you're iterating over
[22:34:47] <gilesc> so 'i' is usually an index
[22:35:26] <_73> ok I see
[22:36:08] *** Quits: Citillara (~userid@user/citillara) (Ping timeout: 272 seconds)
[22:36:11] *** Quits: eddof13 (~textual@187.246.227.157) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:36:58] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:39:14] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[22:40:45] *** Joins: d[^u^]y (~d^u^]y@user/duy/x-5876947)
[22:41:22] *** Joins: brickfat (~brickfat@user/brickfat)
[22:42:19] <mrig> you could say indexed element.
[22:42:19] *** Joins: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f)
[22:42:20] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[22:42:44] *** Joins: paulo__ (~paul0@49.144.68.80)
[22:43:56] <Izem> mrig: that sounds like an array :P
[22:44:06] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Client Quit)
[22:45:01] <mrig> Always good to have an array of options :D
[22:45:44] *** paulo__ is now known as paulo_
[22:45:45] *** Quits: paulo_ (~paul0@49.144.68.80) (Changing host)
[22:45:45] *** Joins: paulo_ (~paul0@user/paulo/x-9032687)
[22:46:23] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[22:46:34] <immibis> unless it's an array of GME $4 call options
[22:46:41] <mrig> for (int i = 0; i < 12; i++) { awesome_function[i]; }
[22:46:44] <immibis> er, actually that would be very good
[22:46:50] <immibis> just swap some words around and you'll get the idea
[22:47:37] <mrig> arrays are O(n) though order does not matter :)
[22:48:11] <mrig> so all good, from the sound of it!
[22:48:36] <mrig> O(1) rather
[22:48:48] <mrig> dang I'll remember all that some day.
[22:50:50] <paulo_> say array again
[22:50:59] *** Joins: imode (~imode@user/imode)
[22:51:29] <pulse> i dare you i double dare you say array one more god dam time
[22:52:58] *** Quits: Intelo (~Intelo@88.244.90.70) (Ping timeout: 250 seconds)
[22:53:48] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[22:55:59] <DPA> I think things like events, inversion of control, and similar stuff, is mostly about reducing or changing dependencies between components. If a component doesn't depend on another component, the other component can be removed, replaced, sometimes be made exchangeable or even multiple variations used at the same time, depending on how it's done. But most importantly, that won't require a change to the first component.
[22:55:59] <DPA> It's always good to have as few inter-component dependencies as possible. It cuts down on maintenance & refactoring work & makes code clearer if done right, although the control flow can get slightly more difficult.
[22:55:59] <DPA> It can be done wrong though. As an example, take systemd. Try to use, for example, journald, without systemd. It won't work, has a dependency that way around. (I still believe they did that intentionally, to make systemd spread like a virus using dependancies).
[22:56:14] * c705 shoots pulse in the leg
[22:56:59] *** Quits: alextee (~alextee@zrythm/alex) (Read error: Connection reset by peer)
[22:57:25] <phogg> DPA: systemd wasn't intended to be a set of loosely coupled components, quite the opposite
[22:57:49] <DPA> I know. That's why I don't use it. Too invasive.
[22:57:49] *** Joins: eot (~eot@user/eot)
[22:58:06] <phogg> I don't use it because it's badly designed.
[22:58:42] <phogg> but you're right (or rather, my opinion aligns with yours) about all of those techniques being mechanisms to encourage loose coupling, and that even if you employ them you can still fail to achieve the goal
[22:58:47] <phogg> especially if you do not understand the goal
[22:58:59] <deniska> I use systemd because service units are better than bash scripts, and systemd timer units are so much better than cronjobs
[22:59:19] <deniska> Oh, and journalctl is so much better than sifting through /var/log
[22:59:27] <phogg> Service units are objectively worse than bash scripts. They're the most idiotic DSL I've ever seen.
[22:59:59] <phogg> Keep in mind that they didn't replace *shell scripts*, they replaced *executables*. The drop in flexibility is truly staggering, and with little justification.
[23:00:15] *** Joins: anovick (~anovick@IGLD-83-130-90-132.inter.net.il)
[23:00:28] <deniska> the only complaint I have about systemd unit syntax is that it's not friendly to whitespace in paths to executables
[23:01:05] <phogg> My favorite hilarious part is the way that unit syntax is a flat key=val declarative syntax, but *every key has the potential to have a UNIQUE dsl for a value*
[23:01:08] <deniska> otherwise it's like 5 lines of ini-like config vs 30 lines of bash which hopefully makes a prediction about the service status judging by a "pid file" or some other elder ritual
[23:01:10] <DPA> Correct logging on unix systems is using the /dev/syslog unix socket. The logging daemon doesn't have to write to /var/log. Journald didn't have to reinvent a new API there.
[23:01:12] <phogg> because some things need a non-flat hierarchy
[23:01:43] <deniska> DPA: with systemd it just captures stdout and stderr of a running process and puts it in an observable place
[23:02:05] <phogg> deniska: if your thesis is "unit files can be shorter than shell scripts that purport to do the same thing" then you're entirely correct, but missing the point by a mile
[23:02:06] <deniska> you can also actually observe the status of your system, something which was only possible on more professional systems like Windows NT :D
[23:02:25] <DPA> deniska: I can do that with syslog too: "program 2>&1 | logger"
[23:03:00] <phogg> I can write a C program, or a shell script, that performs service setup. I could even write a "unit script" file with a #!/bin/systemd-unit bang line that performs service setup. It's all just coding in one form or another.
[23:03:32] <phogg> Anyone can invent a simpler model for how to configure things, that's not hard. What's hard is finding the right one.
[23:03:42] <DPA> I once wrote mine in yaml: https://github.com/Daniel-Abrecht/unitscript
[23:03:46] <deniska> phogg: unit files are shorter because programs they run don't have to daemonize themselves, they just have to follow some very simple rules most programs follow anyway
[23:03:52] <edk> i do think the unit file format is spectacularly crap
[23:03:58] <edk> deniska: that's a non-sequitur
[23:04:01] <phogg> deniska: You're conflating two unrelated things.
[23:04:04] <deniska> so systemd makes the system more unix way by being a program which does daemonizing well
[23:04:22] <deniska> as opposed to doing daemonizing through each daemon in its own broken way :)
[23:04:38] <phogg> deniska: the service supervisor can handle the daemonization whether or not you use a unit-style file to describe service setup
[23:05:34] <phogg> deniska: ever used daemon(1)? It can also daemonize programs, but it exclusively uses CLI switches to describe that behavior. Its scope is smaller, but it's *even more terse* than unit files. Is it better?
[23:05:56] <phogg> You can run it from a shell script instead of doing complicated shell things to set up.
[23:06:06] <phogg> Or you can run it from system() in C, or any language.
[23:06:53] <phogg> No one, I hope, is claiming that systemd doesn't do *anything* good, it's just that the good comes with the bad--and there was never a genuine attempt to allow you to pick only the good parts.
[23:07:24] <phogg> It's a lot of "Hmm, yes, I see what you did there. I like this, but that's not the right way to do it"
[23:07:36] <phogg> and then a lot of "sit down and shut up, you're just against progress"
[23:07:46] <phogg> not a fun experience )-:
[23:08:17] *** Joins: IRCMonkey (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[23:08:41] <deniska> I never saw anything remotely close to `systemctl status` and similar systemd utilities. It's like the system is finally actually observable
[23:09:04] <phogg> People claiming to like systemd reminds me of a friend of mine who claimed to like PHP. His reasoning boiled down to "I can use it to write programs." He actually didn't know other languages.
[23:09:08] *** Quits: slurpyb (~quassel@2001:8003:8d0e:1000:6cea:bcdc:d9f0:c8d4) (Ping timeout: 252 seconds)
[23:09:12] *** Quits: IRCMonkey (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Client Quit)
[23:09:31] <phogg> It's true that you can have a positive experience, but that doesn't mean you are in a position to make objective claims about the thing you're using.
[23:09:39] *** Quits: Guest120` (~user@user/niflce) (Ping timeout: 244 seconds)
[23:09:49] *** Joins: Guest120` (~user@user/niflce)
[23:09:54] <DPA> service --status-all
[23:09:54] <DPA> rc-status
[23:09:59] <phogg> deniska: that is a very fair comment. Most people would never have seen those things.
[23:10:20] <phogg> It's *mostly* ignorance, but the state of the initd conversation prior to systemd was not good.
[23:10:54] <phogg> Unfortunately the conversation did not improve, because anyone trying to talk about non-systemd things got shouted down. 
[23:11:54] <deniska> I've been using linux for more than a decade, and I switched to systemd based release of my prefered distro as soon as it was available because it fixed some specific pain points for me
[23:12:17] *** Quits: paulo_ (~paul0@user/paulo/x-9032687) (Ping timeout: 272 seconds)
[23:12:19] <phogg> I'm glad it helped you.
[23:12:54] <phogg> I'm just sad that the world has moved to a badly-designed piece of software, and that people think that such junk is the pinnacle of virtue.
[23:13:01] *** Joins: alextee (~alextee@zrythm/alex)
[23:13:06] <phogg> It's like watching friends use Windows.
[23:13:41] *** Quits: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Remote host closed the connection)
[23:14:04] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:14:38] <DPA> I think the worst thing is that the number of programs no longer working without it, or only with special configure switches, has grown a lot lately.
[23:14:40] <deniska> well, win10 crosses the line of what I find acceptable, but it's perfectly reasonable to prefer windows if you want to use software only available on windows, or deal with hardware which is poorly supported on other platforms
[23:15:00] *** Quits: retropikzel (~Retropikz@dy5nfwp0z53m484z134-y-4.rev.dnainternet.fi) (Quit: Leaving)
[23:15:14] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:15:26] <deniska> DPA: it's just… less code to write, fewer platforms to support, less work to do. It's not like OSS devs are made of time
[23:15:49] <phogg> deniska: For a long time it was not the case that Windows was a reasonable choice. I am remembering what it was like to be a Linux fan years ago and to try and explain what Windows users were missing.
[23:16:53] <deniska> phogg: "so, if you run Flash in a browser tab, sound in your media player may stop working until you stop the browser, but hear me out…" :)
[23:17:32] *** Quits: Tom__ (~Tom@2a01:e0a:2de:8130:5183:8a32:ccd1:ada0) (Read error: Connection reset by peer)
[23:17:48] <DPA> I never saw any legitimate case where systemd truly made things easier. It's usually just "oh, it has an API for X, let's use it, it's everywhere anyway."
[23:18:54] <deniska> DPA: a lot of stuff relating to user sessions
[23:19:32] *** Quits: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[23:19:33] <deniska> "maybe let's stop playing audio when user switching screen is active" and stuff along these lines
[23:19:43] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:19:55] *** Joins: slurpyb (~quassel@2001:8003:8d0e:1000:6cea:bcdc:d9f0:c8d4)
[23:20:48] <DPA> That'd be logind stuff. Previously it was solved using consolekit. Both are awful.
[23:21:56] *** Quits: Izem (~Thunderbi@bras-base-london1483w-grc-38-65-95-41-91.dsl.bell.ca) (Quit: Izem)
[23:22:20] <deniska> DPA: well, if you want to use X which is provided by systemd, but not with APIs provided by systemd, it's more work to find replacements, incorporate them into the code, perhaps with conditional compilation when a user actually uses systemd…
[23:22:33] <deniska> It's like complaining about linuxisms in software
[23:22:52] <deniska> like yeah, we all know that monoculture is bad, but supporting multiple things takes work
[23:23:07] *** Joins: eddof13 (~textual@187.246.227.157)
[23:24:36] *** Joins: saurabhs (~saurabh@183.83.46.108)
[23:25:43] <DPA> You often don't even have to find replacements. Many things are directly provided by the kernel. But it seams many people don't even know what their system can do nowadays.
[23:26:38] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:26:40] *** Quits: slurpyb (~quassel@2001:8003:8d0e:1000:6cea:bcdc:d9f0:c8d4) (Ping timeout: 268 seconds)
[23:26:57] <DPA> And in many other cases, it looks like people are searching for problems to their solution, rather than solutions to a problem.
[23:27:00] <deniska> I mean, technically everything you can do on a linux system is provided by the kernel :)
[23:27:17] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 252 seconds)
[23:27:50] <phogg> deniska: the trouble is that the "systemd toolbox" added some things which are nice, but then required the use of the not-nice initd in order to use them. Unfriendly.
[23:28:16] <deniska> nothing prohibits you from building a drop-in systemd replacement for stuff which wants it
[23:28:33] <phogg> deniska: Lots of things make that hard, like the way it was designed
[23:28:39] <phogg> so back to my thesis: it's badly designed
[23:28:59] <deniska> so as unix ¯\_(ツ)_/¯
[23:29:21] <phogg> I'm not going to flat out claim that it was made *deliberately* hard to make drop-in replacements for components to encourage systemd lock-in, but it seems an awful lot like that from where I sit
[23:29:27] *** Joins: slurpyb (~quassel@2001:8003:8d0e:1000:6cea:bcdc:d9f0:c8d4)
[23:29:27] <deniska> or, like, most of the software out there
[23:30:12] <phogg> on the contrary, most Unix software doesn't have this kind of problem due to the reflexive way in which Unix programmers generally approach modularization 
[23:30:24] <DPA> Just take a look at how many different, completely unrelated APIs are in libsystemd. Ideally, you'd want to replace each with a dedicated project. In practice, that's not possible, because ther can only be one libsystemd.
[23:31:17] <DPA> Had each API it's own library, it'd be easy in that case. But they don't.
[23:31:36] <phogg> I like a lot of the effects of things achieved by e.g. logind, but not the mechanic employed. D-Bus is another example of an icky technology. Not badly designed, necessarily, but not what you'd call a stable foundation.
[23:31:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[23:32:06] *** Quits: brickfat (~brickfat@user/brickfat) (Remote host closed the connection)
[23:32:06] <phogg> the more you look at it the uglier it gets
[23:33:06] <DPA> I hope seatd will eventually replace logind. But it seams it's scope is still expanding. Does anyone know what it has to do with notification LEDs?
[23:33:07] <deniska> We're trying to shoehorn a modern computer system onto something which only exists because a few bored engineers were playing around with an underpowered computer :)
[23:33:24] <phogg> deniska: we're really not
[23:33:39] <phogg> there's a lot of ways you can do things, but not a lot of ways you should.
[23:34:04] <phogg> nobody *likes* dbus, it's just the thing that exists which we can use right now
[23:35:04] <phogg> I expect dbus to eventually be replaced by something better, as soon as someone with the skills to understand what right looks like and who has the time to work on it finally gets fed up with it.
[23:35:06] <phogg> this may take some time
[23:35:28] <phogg> I expect systemd to die out over time, too, as more evolved solutions to the same problem set prove themselves to be less trouble
[23:35:39] <phogg> the time scales will not be short, though
[23:35:48] <phogg> 10-30 years for each
[23:35:59] <DPA> I hope dbus won't be replaced by sd-bus...
[23:36:07] <phogg> sd-bus isn't technically any better
[23:36:09] <deniska> Yeah, I too don't expect systemd to be forever, but for quite long time :)
[23:36:20] *** Quits: hi^-^ (~^-^hi@user/-hi/x-1729478) (Ping timeout: 264 seconds)
[23:36:45] <phogg> deniska: I hope not for that long. There world needs more beauty and less ugly.
[23:37:58] *** Quits: emberie (~kschw@pool-100-34-233-102.phlapa.fios.verizon.net) (Quit: Konversation terminated!)
[23:38:59] *** Quits: audgirka (~audgirka@2402:e280:3e00:4c11:b62e:f7a0:83fe:8c9e) (Remote host closed the connection)
[23:40:46] *** Joins: magla (~gelignite@55d4f9ee.access.ecotel.net)
[23:41:41] *** Quits: odnes (~odnes@109-178-190-241.pat.ren.cosmote.net) (Ping timeout: 244 seconds)
[23:42:28] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[23:44:03] *** Quits: saurabhs (~saurabh@183.83.46.108) (Quit: leaving)
[23:46:49] *** Joins: SierraKomodo (~sierrakom@2601:603:167f:f217:bda6:e6ba:af96:17b5)
[23:47:37] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[23:47:48] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:47:49] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:49:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[23:55:08] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[23:55:27] <CoderGuy> okay since everyone is here now lol
[23:56:11] <CoderGuy> I have a weird issue, I think a variable is getting garbage collected in nodejs but I have no way of telling if it is or not, for some reason if I call console.log(thevar); it doesn't get garbage collected, but if i don't it does...wtf
[23:56:16] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 268 seconds)
[23:56:18] *** Quits: xenon- (~bc817c21@217.29.117.252) (Quit: http://www.okay.uz/ (Ping timeout))
[23:56:48] <GeDaMo> Are you actually using it?
[23:58:25] <DPA> Is the garbage collection desired or undesired?
[23:59:41] *** Joins: waaba (~a2c@50-108-89-144.adr01.mskg.mi.frontiernet.net)
