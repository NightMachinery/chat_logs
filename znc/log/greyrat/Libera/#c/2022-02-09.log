[00:00:45] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[00:01:29] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:04:12] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:05:08] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[00:08:40] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:09:16] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-dde7-1a2f-9ba7-a2d3.fixed6.kpn.net)
[00:13:02] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-31.cspire.com) (Read error: Connection reset by peer)
[00:13:11] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:13:24] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[00:13:49] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-dde7-1a2f-9ba7-a2d3.fixed6.kpn.net) (Ping timeout: 250 seconds)
[00:17:59] *** Joins: strajder (~strajder@user/strajder)
[00:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:19:51] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[00:20:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:47] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:21:18] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[00:22:53] <libh> Is it a bad idea to use a pointer in a struct?
[00:23:20] <bnchs> no
[00:24:02] *** Quits: pi0 (~default@23.95.234.10) (Changing host)
[00:24:02] *** Joins: pi0 (~default@user/pi0)
[00:24:03] <libh> I don't think I'm at that point yet I can instinctively know when to for sure use a pointers or not.
[00:24:26] <bnchs> pointers are 8-bit in 64-bit
[00:24:30] <bnchs> 8 bytes*
[00:28:35] <libh> The arrow operator -> is only for structures and unions? Not for arrays?
[00:32:04] <sham1> bnchs: not necessarily
[00:32:16] <sham1> You might have multiple address spaces
[00:32:25] <sham1> And a way of distinguishing between them
[00:32:39] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[00:32:54] *** Joins: barthandelous (~cbrzezins@gateway/tor-sasl/barthandelous)
[00:33:43] <libh> I'm just a bit confused, why would I want an element in a structure to be a pointer?
[00:34:10] <bnchs> libh, if it's a string, you need it to be a pointer
[00:34:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:36] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[00:34:47] <sham1> Or if it is something you dynamically allocate in general
[00:35:52] <libh> Is it bad practice to not use a pointer if you don't have to use one? Because going through some examples, pointers are used very heavily, like structs with all elements in it being a pointer.
[00:38:20] *** Quits: foul_owl (~kerry@94.140.8.51) (Read error: Connection reset by peer)
[00:39:46] * pragma- squints at "if you don't have to"
[00:40:37] <ChoHag> libh: It may point to an area of memory who's size needs to change over the program's life.
[00:42:41] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[00:44:01] <ChoHag> It may form a linked list or other data structure by pointing to another struct of the same type.
[00:44:05] <pragma-> In general, if you don't have to do something, it's generally a good practice to not do it. But that implies that you do know when you don't have to do something.
[00:44:10] *** Joins: bnchs__ (~bnchs@41.143.78.143)
[00:45:07] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[00:45:20] <libh> I'll keep in mind that it's impossible to modify memory size without pointers.
[00:46:54] *** Quits: bnchs (~bnchs@105.157.30.234) (Ping timeout: 260 seconds)
[00:49:26] <libh> I think my only gripe with C right now is reading code that uses typedef heavily, you see a custom type, that's a custom type of another type, that's a custom type of a 3rd time. Resulting in spaghetti code.
[00:50:23] *** Joins: Charadon (~Charadon@155.138.164.183)
[00:50:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:50:57] <ChoHag> In theory the API is supposted to keep such details opaque.
[00:51:54] <libh> Unfortunately, the most common usage of typedef is with structs and pointers, something both the OpenBSD and linux coding style says to never do.
[00:53:20] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[00:53:59] *** Joins: foul_owl (~kerry@23.82.194.73)
[00:55:21] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:55:28] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (Quit: leaving)
[00:56:17] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[00:58:27] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[00:58:56] <sham1> As does the unofficial style guide of #C
[00:59:25] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[00:59:37] *** Joins: highrate (~presonic@user/highrate)
[01:00:04] <highrate> anyone remember that 'divisible by 3 and/or 5' little common c question?
[01:00:14] *** Joins: lightningwright (~lightning@user/lightningwright)
[01:00:19] <highrate> cant remember the words they use
[01:00:35] <highrate> if divisible by 3, say this, if 5 day this, if both, say this
[01:01:00] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[01:01:35] <randy408[m]> what's the proper forward declaration for `static const int arr[10] = { ... }`?
[01:01:59] *** Joins: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[01:02:15] <highrate> alright nm, 'fizz buzz'
[01:03:35] *** Quits: nicode (~nic@2607:f2c0:9545:fa00:47ff:84f1:8a69:2f9) (Ping timeout: 256 seconds)
[01:03:40] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[01:04:25] *** Quits: magla (~gelignite@d5367123.access.ecotel.net) (Quit: Stay safe!)
[01:04:27] *** Joins: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b)
[01:05:16] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[01:05:40] *** Joins: nicode (~nic@45.72.202.17)
[01:10:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:16:19] *** Joins: defaced (~user@91.218.173.105)
[01:16:21] <defaced> hi
[01:16:29] <defaced> hello
[01:16:45] <defaced> can you hear me?
[01:17:42] *** Quits: defaced (~user@91.218.173.105) (Quit: Changing server)
[01:17:48] <john99> sham1 where is the unoficial style guide of #C?
[01:17:55] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[01:20:10] *** Joins: hiroshi_ (~freedom@151.47.239.181)
[01:20:50] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:21:39] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:21:54] *** Joins: pgib (~textual@173.38.117.82)
[01:24:35] <sham1> Well it's unofficial
[01:24:51] <sham1> It's also unwritten
[01:25:05] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com)
[01:27:17] *** Joins: jack_rabbit (~knusbaum@23.249.37.254)
[01:27:59] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Ping timeout: 252 seconds)
[01:28:11] *** Joins: shotnoise (~julian@2a02:908:2816:5e20:67a2:b60f:a395:3670)
[01:28:32] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 252 seconds)
[01:30:25] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[01:31:27] *** Joins: Torr (~Torr@user/torr)
[01:32:23] <john99> XD
[01:32:52] <bnchs__> whats the best way to abstract memory allocation
[01:32:58] <bnchs__> for custom memory allocators
[01:33:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:33:07] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[01:33:12] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:33:46] *** Joins: abf (~abf@user/abf)
[01:34:45] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Read error: Connection reset by peer)
[01:34:53] *** Joins: hiroshi__ (~freedom@151.37.113.75)
[01:35:12] *** Quits: hiroshi_ (~freedom@151.47.239.181) (Read error: Connection reset by peer)
[01:35:57] *** Quits: shotnoise (~julian@2a02:908:2816:5e20:67a2:b60f:a395:3670) (Ping timeout: 240 seconds)
[01:36:07] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[01:36:18] *** Quits: alch (~alch@151.44.2.195) (Read error: Connection reset by peer)
[01:36:43] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[01:37:00] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[01:38:15] *** Quits: lightningwright (~lightning@user/lightningwright) (Quit: Leaving)
[01:39:21] *** Quits: hiroshi__ (~freedom@151.37.113.75) (Client Quit)
[01:40:15] *** Quits: cosimone (~user@93-47-228-151.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:40:47] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[01:40:50] *** Joins: alch (~alch@ca-18-210-245.service.infuturo.it)
[01:44:13] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[01:44:31] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:44:51] *** Joins: rgrinberg (~textual@187.223.115.137)
[01:46:51] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[01:47:05] <drew> where does the notation come from where you start variables with G_ or g_ ? like this is a line from some firmware I'm looking at: G_FIRMWARE_VERSION = FW_VERSION;
[01:47:54] *** Joins: mac_n_cheese (~lastc@2607:fa49:553f:2200:a630:e077:7ca7:9565)
[01:47:55] <bch> perhaps "global", as a naming convention ?
[01:48:11] <bch> (?is that what you mean)
[01:48:48] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[01:49:16] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: rebooter)
[01:49:39] <drew> that must be it
[01:49:47] *** Joins: slidercrank (~slidercra@user/slidercrank)
[01:49:53] <drew> I was also going to ask if declaring a variable in a .h file made it global
[01:51:33] <barthandelous> It /will/, but it's not a good idea because it can lead to multiple definitions
[01:51:45] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:51:48] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[01:51:48] <barthandelous> Better to declare it as an extern in the .h and actually declare it somewhere else
[01:52:33] *** Quits: mahmutov (~mahmutov@5.176.55.239) (Ping timeout: 256 seconds)
[01:52:57] <drew> how can something be declared twice? wouldn't you get a compilation error?
[01:53:38] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 260 seconds)
[01:54:05] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:54:22] <barthandelous> Exactly
[01:54:26] <barthandelous> It'll error out
[01:54:55] <barthandelous> That's why you use extern
[01:56:07] <zwr> there's some confusion in terminology here, there are declarations and there are definitions, and then there's some spaghetti in the C standard itself with "tentative definitions"
[01:56:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:56:16] *** Quits: jack_rabbit (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[01:57:01] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[01:57:03] *** Joins: jack_rabbit (~knusbaum@23.249.37.254)
[01:57:11] <drew> ok I think I'm conflating declaration and definition then. I know declaration is `int i;` and initialization is `i = 0;`
[01:57:15] <drew> what is a definition?
[01:57:27] *** Quits: mac_n_cheese (~lastc@2607:fa49:553f:2200:a630:e077:7ca7:9565) (Quit: Leaving)
[01:57:46] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:57:50] <zwr> declaration would be `extern int var;`, a tentative definition would be `int var;`, and a definition would be `int var = 0`
[01:58:12] <zwr> `int var = 0;`*
[01:58:33] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:58:54] *** Joins: mac_n_cheese (~lastc@2607:fa49:553f:2200:a630:e077:7ca7:9565)
[01:58:56] *** Joins: Rynn (~rynn@216.30.158.198)
[01:59:00] <drew> so is definition = declaration + initialization, or is there more nuance
[01:59:53] *** Quits: mac_n_cheese (~lastc@2607:fa49:553f:2200:a630:e077:7ca7:9565) (Client Quit)
[02:00:40] <zwr> ,c11 6.9.2p1
[02:00:41] <candide> http://www.iso-9899.info/n1570.html#6.9.2p1 [External object definitions] If the declaration of an identifier for an object has file scope and an initializer, the declaration is an external definition for the identifier.
[02:01:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[02:02:45] *** Quits: Guest9534 (~Guest@181.91.159.32) (Remote host closed the connection)
[02:02:55] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:47] *** Joins: noonien (~noonien@user/noonien)
[02:04:04] <drew> I will have to review scoping and the extern keyword a bit to fully internalize that, but I at least have a decent idea now
[02:04:23] <drew> thanks zwr and barthandelous
[02:04:56] *** Quits: noonien (~noonien@user/noonien) (Client Quit)
[02:05:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[02:06:25] <fizzie> Maybe also for historical context, https://0x0.st/-A7n.txt (paragraphs 3 onwards) -- the standard's rationale on the topic of "which declarations of an object definestorage for the object, and which merely reference an existing object".
[02:06:50] *** Joins: moose (~moose@user/moose)
[02:06:51] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:07:24] *** Quits: jack_rabbit (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[02:07:42] <fizzie> (All definitions are also declarations.)
[02:07:46] *** Joins: jack_rabbit (~knusbaum@23.249.37.254)
[02:11:21] *** Quits: barthandelous (~cbrzezins@gateway/tor-sasl/barthandelous) (Ping timeout: 276 seconds)
[02:12:45] *** Quits: Whatshisface (~jon@user/Whatshisface) (Ping timeout: 250 seconds)
[02:14:19] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[02:16:08] *** jack_rabbit is now known as knusbaum
[02:18:53] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[02:19:23] *** Quits: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it) (Quit: brb)
[02:20:26] *** Joins: clamiax (~clamiax@net-93-144-125-193.cust.dsl.teletu.it)
[02:20:34] *** Joins: vysn (~vysn@user/vysn)
[02:21:48] *** Joins: Oddity (~Oddity@user/oddity)
[02:26:12] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Read error: Connection reset by peer)
[02:26:28] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[02:30:06] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[02:30:25] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[02:30:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:58] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:31:16] <smallville7123> https://gist.github.com/168c4b17dd814fd977a2db88af5d9f5f i need help
[02:31:17] <candide> Title of smallville7123's link: main.cpp · GitHub
[02:33:20] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:52] *** Joins: pizdets_ (~pizdets@183.182.110.14)
[02:34:25] *** Quits: pizdets (~pizdets@183.182.114.157) (Ping timeout: 250 seconds)
[02:34:54] *** Joins: foul_owl (~kerry@23.82.194.73)
[02:36:11] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:38:42] *** Joins: selk (~selkfoste@user/selkfoster)
[02:39:22] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[02:44:06] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 245 seconds)
[02:47:28] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[02:47:52] *** Quits: oriba (~oriba@dynamic-077-191-002-071.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:47:55] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Client Quit)
[02:48:23] <SaltHillStroller> Perhaps dumb question, casting a pointer to another pointer type doesn't do anything unless I'm dereferencing the pointer ... right? (ignoring pointer arithmetic)
[02:48:39] *** Joins: Cyp_ (~cyp@213.237.87.142)
[02:50:32] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:51:29] *** Quits: Cyp (~cyp@213.237.88.120) (Ping timeout: 256 seconds)
[02:51:51] *** Joins: constxd (~brad@142.134.79.191)
[02:55:08] <fizzie> In a strict sense, if the pointer is not correctly aligned for the target type, the behavior is undefined even if you never dereference it.
[02:56:03] <fizzie> C11 6.3.2.3p7: "A pointer to an object type may be converted to a pointer to a different object type. If the resulting pointer is not correctly aligned for the referenced type, the behavior is undefined. Otherwise, when converted back again, the result shall compare equal to the original pointer."
[02:58:16] <ski> is the alignment of the resulting pointer related to the alignment of the original pointer ?
[03:00:25] *** Quits: soul-d (~uknown@user/soul-d) (Ping timeout: 250 seconds)
[03:00:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:00:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:01:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:01:31] <fizzie> In the sense that "an address that satisfies an alignment requirement also satisfies any weaker valid alignment requirement" (6.2.8p5), so converting an `A *` to a `B *` should be safe (as far as that rule goes, at least) if `alignof (A) >= alignof (B)`.
[03:02:00] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:02:25] *** Quits: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:04:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:05:05] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[03:05:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:06:11] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:07:38] *** Joins: hashfuncd0d (~user@162.254.115.155)
[03:08:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:08:53] *** Quits: hashfuncd0d (~user@162.254.115.155) (Client Quit)
[03:09:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:11:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:11:06] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: leaving)
[03:11:16] *** Joins: hashfuncd0d (~user@162.254.115.155)
[03:11:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:12:22] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[03:13:21] *** Quits: Akuli (~Akuli@82-203-160-5.bb.dnainternet.fi) (Quit: Akuli)
[03:14:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:15:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:16:19] *** Joins: oscurochu (~me@097-096-050-227.res.spectrum.com)
[03:16:24] <oscurochu> is there a vim plugin for c?
[03:16:46] <ChoHag> No. No vim users write C really.
[03:16:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Client Quit)
[03:17:12] <oscurochu> is vim a bad choice if i want to write c? im just playing around, writing a lisp interpreter
[03:17:13] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[03:17:59] <ChoHag> Don't use sarcasm on the internet...
[03:18:01] <ChoHag> vim will be fine.
[03:18:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[03:18:29] <oscurochu> lol
[03:18:34] <oscurochu> good one
[03:18:44] *** Joins: soul-d (~uknown@user/soul-d)
[03:18:59] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[03:19:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:19:17] *** Quits: oscurochu (~me@097-096-050-227.res.spectrum.com) (Quit: Leaving)
[03:19:33] *** Joins: oscurochu (~me@097-096-050-227.res.spectrum.com)
[03:19:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:20:07] <oscurochu> the #vim channel says :Cannot send to nick/channel
[03:20:17] *** Quits: MatthiasG2 (~matthias@i6DFA026C.versanet.de) (Quit: leaving)
[03:20:25] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[03:20:33] <ChoHag> Some places only let you in if you sign over to the bots.
[03:20:48] <oscurochu> i've been in the vim chat before without a problem. this is odd
[03:21:01] <ChoHag> Perhaps they are dealing with flooding.
[03:21:05] <fizzie> They've quieted unregistered users, yes.
[03:21:16] <fizzie> (You can tell from `/mode #vim q` even without joining.)
[03:21:24] <oscurochu> oh
[03:21:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:21:41] <oscurochu> well im still an irc noob, even after years of using it. lol
[03:22:12] <fizzie> Official instructions around that: https://libera.chat/guides/registration#unable-to-speak
[03:23:01] <oscurochu> i've already been through all that stuff, i think. ill check it out to make sure its not something different. i had to register my email, and do the email verification stuff
[03:23:46] <fizzie> Well, you're not identified at the moment.
[03:23:47] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:23:51] <oscurochu> something might be wrong with my client then.
[03:24:38] <oscurochu> thank you
[03:25:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:31:09] *** Joins: foul_owl (~kerry@217.114.38.61)
[03:31:48] *** Joins: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41)
[03:32:05] *** Quits: Torr (~Torr@user/torr) ()
[03:32:55] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Client Quit)
[03:33:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 240 seconds)
[03:33:57] *** Joins: Torr (~Torr@user/torr)
[03:34:14] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:36:03] *** Joins: Javi (~Javi@103.105.145.218)
[03:36:08] *** Parts: Javi (~Javi@103.105.145.218) ()
[03:37:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:37:58] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[03:39:40] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 250 seconds)
[03:41:32] *** Joins: ltm (sid222641@id-222641.tinside.irccloud.com)
[03:52:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:52:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:52:12] *** Joins: wroathe (~wroathe@user/wroathe)
[03:53:04] *** Joins: smoke (~smoke@user/smoke)
[03:54:47] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[03:56:07] *** Joins: crashrep (~crashrep@user/crashrep)
[03:57:33] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[03:59:09] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[03:59:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[03:59:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:59:54] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:00:17] *** Quits: katsuragi (katsuragi@tilde.institute) (Ping timeout: 240 seconds)
[04:01:10] *** Joins: inlight (~thomas@user/inlight)
[04:01:26] *** Joins: Wulf (~Wulf@user/wulf)
[04:04:20] <oscurochu> https://dpaste.com/HJBW3W4P6
[04:04:41] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:04:58] <oscurochu> oh nevermind, i think i see it haha
[04:05:19] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[04:08:45] *** Joins: Cyp (~cyp@213.237.87.142)
[04:08:47] *** Quits: Cyp_ (~cyp@213.237.87.142) (Ping timeout: 256 seconds)
[04:12:39] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
[04:14:46] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[04:16:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[04:18:03] *** DarkTrick_ is now known as DarkTrick
[04:19:33] *** Quits: hashfuncd0d (~user@162.254.115.155) (Ping timeout: 256 seconds)
[04:22:24] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[04:23:01] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:23:16] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:24:25] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:25:24] <smallville7123> fizzie:
[04:28:30] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:31:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[04:36:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:37:29] *** Joins: X-Scale` (~ARM@167.64.114.89.rev.vodafone.pt)
[04:40:14] *** Quits: X-Scale (~ARM@46.50.3.45) (Ping timeout: 260 seconds)
[04:40:14] *** X-Scale` is now known as X-Scale
[04:44:14] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[04:44:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:45:08] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5)
[04:46:23] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[04:47:06] *** Quits: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:29] *** Quits: bnchs__ (~bnchs@41.143.78.143) (Ping timeout: 252 seconds)
[04:53:18] *** Quits: vboykox (~user@95.134.4.45) (Ping timeout: 260 seconds)
[04:59:58] *** Quits: selk (~selkfoste@user/selkfoster) ()
[05:00:15] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[05:00:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5) (Ping timeout: 260 seconds)
[05:00:50] <oscurochu>  this tutorial says to use #include "mpc.h" (rather than <mpc.h>), because we are including a file local to the directory. however, i dont see anywhere in this tutorial that tells me where to get this mpc file from https://buildyourownlisp.com/chapter5_languages
[05:02:26] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:02:33] <oscurochu> nevermind. i skipped an entire paragraph where it tells me exactly what to do
[05:02:38] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[05:03:18] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:03:20] <oscurochu> the problem im having is that i read this once, and i should have followed along with it the first time. because this time around, i feel like i "know everything" and that i dont have to read it all, but obviously i dont know everything or i would skip stuff
[05:04:39] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[05:05:58] *** Quits: pyook (~pyook@user/puke) ()
[05:07:59] *** Joins: petardo (~v@190.17.230.110)
[05:08:26] *** Quits: petardo (~v@190.17.230.110) (Client Quit)
[05:16:02] *** Quits: rootkea (~rootkea@user/rootkea) (Ping timeout: 240 seconds)
[05:17:55] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[05:20:34] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[05:20:50] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[05:30:37] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:31:04] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[05:31:25] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[05:35:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 268 seconds)
[05:38:50] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-c80a-d481-fb58-fab.fixed6.kpn.net)
[05:39:05] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[05:39:47] *** Quits: alch (~alch@ca-18-210-245.service.infuturo.it) (Ping timeout: 256 seconds)
[05:41:15] *** Joins: alch (~alch@151.82.134.214)
[05:43:09] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-c80a-d481-fb58-fab.fixed6.kpn.net) (Ping timeout: 250 seconds)
[05:44:48] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[05:45:12] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:46:37] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[05:46:52] *** Joins: Mocky_J (~jack@27.156.201.249)
[05:47:25] *** Parts: Mocky_J (~jack@27.156.201.249) ()
[05:47:38] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[06:00:50] *** Joins: Mocky_J (~jack@27.156.201.249)
[06:09:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:09:27] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[06:12:17] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[06:13:26] *** Quits: Isthmusi (~Isthmus@user/isveni) (Quit: leaving)
[06:13:29] *** Parts: Mocky_J (~jack@27.156.201.249) (Leaving the Client)
[06:13:33] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[06:14:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:17:50] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com) (Read error: Connection reset by peer)
[06:18:45] <smallville7123> https://gist.github.com/mgood7123/168c4b17dd814fd977a2db88af5d9f5f
[06:18:45] <smallville7123> can anyone help me understand how this works for macro expansion and macro rescan?
[06:18:46] <candide> Title of smallville7123's link: main.cpp · GitHub
[06:19:01] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[06:25:37] *** Joins: frostygoth (~frostygot@li1566-163.members.linode.com)
[06:26:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:28:25] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[06:29:16] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[06:29:44] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[06:30:01] *** Joins: coruja (~coruja@user/coruja)
[06:30:42] *** Joins: Rynn (~rynn@216.30.158.198)
[06:31:14] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[06:31:41] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:32:49] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:33:30] *** Joins: teepee (~teepee@openscad/teepee)
[06:35:40] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com)
[06:35:42] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:39:03] *** Joins: hub (~hub@user/hub)
[06:39:47] *** Joins: katsuragi (katsuragi@tilde.institute)
[06:41:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[06:46:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[06:48:23] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[06:50:13] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[06:50:19] *** Quits: frostygoth (~frostygot@li1566-163.members.linode.com) (Quit: Leaving)
[06:51:04] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:51:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[06:59:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:00:16] <ski> fizzie : yes, but are there guarantees that converting from one pointer type to another won't change alignment requirements ?
[07:00:24] *** Joins: hashfuncd0d (~user@162.254.115.155)
[07:02:02] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Quit: ZNC 1.8.2 - https://znc.in)
[07:02:25] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[07:04:33] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[07:05:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:06:43] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:07:06] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:18] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:39] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:9c8a:f1e6:cb90:4bff)
[07:07:46] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:10:27] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:13:46] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 260 seconds)
[07:15:37] <twkm> if you need help with c++ you should ask #c++ smallville7123.
[07:15:45] *** Quits: igater (~root@h178-129-134-39.dyn.bashtel.ru) (Quit: Leaving)
[07:15:58] *** Joins: igater (~root@h178-129-134-39.dyn.bashtel.ru)
[07:16:09] <smallville7123> twkm: i dont
[07:16:45] <twkm> then i guess main.cpp wasn't quite the right title for the paste.
[07:18:47] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[07:19:34] <smallville7123> https://gist.github.com/mgood7123/168c4b17dd814fd977a2db88af5d9f5f
[07:19:36] <twkm> ski: if you have a pointer to int value and cast it to pointer to long long the alignment of the object referenced might not suffice for long long's.
[07:21:20] <smallville7123> how do i expand foo(bar) to 9 x(x) 9 and then expand x(x) to bar(bar) ?
[07:23:37] <smallville7123> as in the tokenizer, i consume 'f' 'o' 'o' '(' 'b' 'a' 'r' ')' and then i expand that to "9 x(x) 9", right?
[07:25:39] <smallville7123> would i use a new tokenizer to grab the tokens '9' ' ' 'x' '(' 'x' ')' ' ' '9' ? or would i add "9 x(x) 9" to the current tokenizer's input such that, for example, it can expand a macro that expands to a function-macro name and correctly expand it?
[07:26:37] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[07:26:50] <smallville7123> eg "foo(bar)(go)" with "foo(bar)" expanding to "bar" resulting in "bar(go)" which expands to "go"
[07:27:27] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Ping timeout: 256 seconds)
[07:28:59] <smallville7123> as if i use a new tokenizer then the tokens 'b' 'a' 'r' EOF will be grabbed, but it must be able to grab '(' 'g' 'o' ')' in order to expand the "bar(go)" macro that would now be present
[07:29:33] <knusbaum> smallville7123, https://bpa.st/KYDQ
[07:30:42] <smallville7123> if i use the same tokenizer then it will grab the tokens 'b' 'a' 'r' '(' 'g' 'o' ')' EOF and expand "bar(go)" correctly but once it does that how do we make `foo` elegible for expansion again?
[07:31:04] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 250 seconds)
[07:32:57] *** Quits: oscurochu (~me@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[07:33:03] <smallville7123> also how would we hand the case where "foo(bar)" expands to "press bar" resulting in "press bar(go)" -> "press go"
[07:33:57] <knusbaum> I don't know what you're asking or what you're trying to do, but being too clever with the preprocessor isn't usually a good idea.
[07:35:10] <dave0> ,cc #define xbar(x) #x \n #define bar(x) xbar(x) \n #define foo(x) "press " bar(x) \n puts(foo(go));
[07:35:11] <candide> dave0: press go
[07:35:21] <smallville7123> or rather, "foo(bar)(go) -> "bar(bar) bar(go)" -> "bar(bar) go" where "bar" must be both ineligible for expansion, and then elegible for expansion"
[07:35:26] *** Joins: johnnyreb (~tth@user/johnnyreb)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:13] *** Joins: hanzo (uid532183@user/hanzo)
[07:36:30] <smallville7123> "bar(bar) (go)" -> *
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:39:21] *** Quits: AmR (~AmREiSa@156.199.10.76) (Quit: Konversation terminated!)
[07:40:46] <smallville7123> wait no
[07:41:37] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 256 seconds)
[07:42:11] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[07:43:00] <smallville7123> if "bar(foo)(go)" expands to "foo(go)" -> "go" then if we have "bar(foo)(go) bar(foo)(go)" the tokenizer would get "bar(foo)" and then expand to "foo" and then get "(go)" to complete the function expansion and expand that to "go"
[07:43:43] <smallville7123> in which case both "bar" and "foo" must be eligible for expansion after the expansion has completed fully
[07:44:13] <smallville7123> how do we ensure that happens
[07:45:10] <smallville7123> we cannot use new tokenizers since we must then keep track of all parent tokenizers in order to correctly grab new input when needed which can quickly end up a mess
[07:46:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[07:47:05] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 250 seconds)
[07:47:38] <smallville7123> so when tokenizer A scans "bar(foo)" it consumes those tokens, and then "foo" gets prepended into the tokenizer's stream, and then the tokenizer consumes "foo(go)" and then "go" gets prepended to the tokizeser's stream, "go" has no expansion
[07:48:37] <smallville7123> so at what points would "bar" and "foo" get pushed to a stack such that they cannot be re-expanded during the macro expansion, and at which points do these get popped from the stack such that they can be expanded again?
[07:50:23] *** Joins: cmburn (~Charlie_B@2601:441:4c00:67d:7847:a737:7738:3a49)
[07:51:00] *** Parts: cmburn (~Charlie_B@2601:441:4c00:67d:7847:a737:7738:3a49) ()
[07:52:10] *** Joins: cmburn (~Charlie_B@2601:441:4c00:67d:7847:a737:7738:3a49)
[07:54:47] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[07:56:17] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[07:56:28] *** Parts: cmburn (~Charlie_B@2601:441:4c00:67d:7847:a737:7738:3a49) ()
[07:56:33] *** Joins: hinata (~hinata@2409:4042:2e08:3f67:7d22:da7e:d4e8:23b6)
[07:56:45] *** Joins: anon16_ (~anon16_@user/anon16)
[07:58:23] *** Joins: cmburn (~Charlie_B@2601:441:4c00:67d:d183:e62d:4a26:8624)
[08:00:49] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:6cf2:b906:2bc7:1ff9)
[08:00:51] <Inst> hi guys
[08:00:53] <Inst> I have a copy of K&R
[08:01:02] <Inst> what is a good C compiler setup for VSC under Windows?
[08:02:59] <cmburn> mingw, gcc or clang, and being able to also compile under MSVC
[08:03:43] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[08:05:45] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[08:05:58] <smallville7123> eg, https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573
[08:05:59] <candide> Title of smallville7123's link: token.c · GitHub
[08:06:20] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[08:07:06] <cmburn> essentially, target MinGW, and it'll be a hell of a lot easier to target Windows or a Normal Operating System (tm)
[08:09:57] *** Quits: nicode (~nic@45.72.202.17) (Ping timeout: 256 seconds)
[08:10:19] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Remote host closed the connection)
[08:10:55] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[08:12:39] <smallville7123> eg, https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[08:15:08] *** Parts: cmburn (~Charlie_B@2601:441:4c00:67d:d183:e62d:4a26:8624) ()
[08:17:19] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[08:17:56] <ski> twkm : yes, but how do i know that if a pointer `p' is aligned properly for a particular size, then `(some_type *)p' will also be aligned properly for that same particular size ?
[08:18:36] <smallville7123> ski: sizeof maybe?
[08:18:49] *** Joins: ironman (~ironman@49.36.55.235)
[08:18:59] <smallville7123> and modulo ?
[08:19:34] <smallville7123> eg, if (sizeof(ptr) == 8 && (ptr % 8) == 0) // pointer is aligned
[08:19:42] *** Joins: libc (~archer@user/tessio)
[08:20:55] <ski> i'm not asking when it's aligned. i'm asking if there are guarantees that casting to another pointer type won't change said alignment
[08:21:20] <smallville7123> eg, if ( sizeof(ptr) == 4 && (ptr % 4) == 0) || (sizeof(ptr) == 8 && (ptr % 8) == 0) ) // pointer is aligned for 32/64 bit
[08:21:49] <smallville7123> like, myStruct * foo; vs int16_t * foo;   ?
[08:21:59] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:22:53] <smallville7123> the underlying type does not change the size of a pointer, a pointer will always be the same size depending on the arch (usually 4 on 23-bit and 8 on 64-bit)
[08:23:50] <smallville7123> however the size of the underlying type does affect the increment of one pointer to the next pointer, eg how far myType[0] and myType[1] are from eachother
[08:25:23] <ski> "like, myStruct * foo; vs int16_t * foo;   ?" -- no, `foo' vs. `(blah *)foo'
[08:25:45] <smallville7123> eg assuming ANY_TYPE ** ptr, and ignoring invalid addresses,   ptr == 0x0, &ptr[0] = 0x0, &ptr[1] == 0x8, &ptr[2] = 0x16, &ptr[3] = 0x24, &ptr[4] = 0x32, and so on
[08:26:16] <ski> you're still talking about other stuff
[08:26:28] <smallville7123> as ptr[0] is ANY_TYPE * which is another pointer, and assuming the size of a pointer == 8
[08:27:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[08:27:38] <rcf> ski: the guarantee is there... in the sense that you aren't supposed to make a cast if it won't be properly aligned.
[08:27:44] <smallville7123> is we have M * foo;   and sizeof(M) == 3,   then &foo[0] == 0x0, &foo[1] == 0x3, &foo[2] == 0x6, &foo[3] == 0x9, and so on
[08:27:53] <smallville7123> if we have*
[08:28:53] <smallville7123> if we cast void ** ptr to M* ptr, then the alignment will not match as we have 8, and 3, and 3 does not fit evenly into 8
[08:31:04] <ski> rcf : for concreteness, say `sizeof (int)' is `4', `sizeof (long)' is `8', and given `long *p;', assume `p' is aligned wrt `8'-byte boundaries. how do i know `(int *)p' is aligned wrt `8'-byte boundaries ? (or, instead of `long', say you take `int[2]', if you prefer)
[08:32:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:32:30] <smallville7123> however if for example we have int64_t * foo, and we cast to int8_t* then it aligns with int64_t,    &foo64[0] == &foo8[0] and &foo64[1] == &foo8[8] // assuming 1 = 8,    1 * 2 = 2 = 16,     2 * 2 = 4 = 32,      4 * 2 = 8 = 64
[08:33:03] <ski> (*if* it is aligned wrt `8'-byte boundaries, then i also know it's aligned wrt `4'-byte boundaries, which would be required for casting to `(int *)'. but how do i know `(int *)p' is aligned wrt `8'-byte boundaries, in the first place, just becase `p' was ? does the standard address this, and if so, what language does it use ?)
[08:34:02] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:34:44] *** Parts: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Leaving)
[08:35:06] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.158)
[08:35:27] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:36:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[08:36:16] <ski> smallville7123 : i'm sorry, but you're misunderstanding what i'm asking about
[08:36:24] <smallville7123> "`foo' vs. `(blah *)foo'"   like casting a struct to a pointer?
[08:36:40] <ski> no, casting from one pointer type to another
[08:36:40] <smallville7123> eg int a; int * b = (int*) a;    ?
[08:36:53] <rcf> ski: the standard addresses this by declaring this sort of access undefined behavior.
[08:37:14] <smallville7123> ski: like int * b; float * x = (float*) b;    ?
[08:37:24] <ski> so if `int (*p)[2];', i'm not allowed to do `(int *)p' ?
[08:37:38] <rcf> void * may alias anything, char * may alias anything, everything else is undefined.
[08:37:39] <dave0> i thought you could cast a pointer-to-type-x to a pointer-to-type-y and back to pointer-to-type-x and it was valid as long as you never dereference y
[08:37:58] *** Joins: freakazoid12345 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d)
[08:39:09] <ski> yes, i'm not talking about dereference, just casting between pointer types (and how that relates to alignment requirements)
[08:40:37] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d) (Ping timeout: 240 seconds)
[08:41:39] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d)
[08:42:33] *** Quits: freakazoid12345 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d) (Ping timeout: 250 seconds)
[08:42:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:45:25] <rcf> ,c11 6.2.8p5
[08:45:25] <candide> http://www.iso-9899.info/n1570.html#6.2.8p5 [Alignment of objects] Alignments have an order from weaker to stronger or stricter alignments. Stricter alignments have larger alignment values. An address that satisfies an alignment requirement also satisfies any weaker valid alignment requirement.
[08:45:32] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[08:46:38] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[08:48:36] <rcf> ski: which makes your example perfectly reasonable, because the alignment of the long address is stricter than that of an int address.
[08:53:31] *** Joins: savolla (~quassel@84.44.28.28)
[08:56:04] <ski> okay
[08:56:17] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 240 seconds)
[08:56:46] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[08:57:26] <ski> but how do i know that if an address satisfies an alignment requirement, then casting to a different pointer type will (if the cast is not UB) produce an address that still satisfies the same alignment requirement ?
[08:58:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:59:18] <rcf> The actual address would be the same
[08:59:29] <ski> what, in the standard, guarantees that ?
[09:00:06] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[09:00:15] <rcf> The bit that if you convert it back you have the same address, and the bit that says you won't actually dereference the pointer to an incompatible type.
[09:00:32] *** Joins: CoffeeMuffin (~a@2001:871:25f:39a0:99f0:3c01:c4e9:ff63)
[09:00:57] <ski> i don't see how the interconvertibility guarantees that both satisfies the same alignment requirements
[09:01:48] <rcf> Convertibility would not itself be defined if the only way to invoke it would be to invoke undefined behavior.
[09:03:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:03:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:03:06] *** Joins: wroathe (~wroathe@user/wroathe)
[09:03:07] <ski> it seems to me conceivably converting in one direction could produce another address (with different alignment requirements), and converting it back would still yield the original address
[09:04:11] <ski> i'm assuming there's some passage that rules this out, or at least guarantees that the alignment requirements would be the same, even if the address changed when doing the cast
[09:04:57] *** Quits: CoffeeMuffin (~a@2001:871:25f:39a0:99f0:3c01:c4e9:ff63) (Ping timeout: 240 seconds)
[09:05:42] <ski> (er, sorry. s/with different alignment requirements/with different alignments satisfied/)
[09:07:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[09:08:58] <smallville7123> in https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[09:09:00] <candide> Title of smallville7123's link: token.c · GitHub
[09:10:13] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[09:11:12] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:11:14] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[09:13:05] <rcf> ski: while it could conceivably change, the underlying alignment does not change. See, for example, aligned_alloc(), which allows one to acquire a void* which satisfies alignment requirements of a stricter type, even if the numerical representation is not identical.
[09:14:12] <ski> hm, interesting. thank you
[09:15:38] <NRK> what the... hell is that bracing style
[09:17:10] <ski> ooh :o looks .. creative
[09:17:56] *** Quits: libc (~archer@user/tessio) (Quit: WeeChat 3.4)
[09:26:13] *** Joins: shotnoise (~julian@2a02:908:2816:5e20:67a2:b60f:a395:3670)
[09:27:19] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:27:39] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:29:32] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[09:30:08] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:30:17] *** Quits: shotnoise (~julian@2a02:908:2816:5e20:67a2:b60f:a395:3670) (Client Quit)
[09:33:17] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[09:34:07] *** Joins: mkv (~znc@ubuntu/member/m4v)
[09:34:23] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[09:34:23] *** mkv is now known as m4v
[09:35:39] *** Parts: hashfuncd0d (~user@162.254.115.155) (ERC (IRC client for Emacs 25.2.2))
[09:37:46] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:38:06] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:40:03] *** Quits: alch (~alch@151.82.134.214) (Ping timeout: 256 seconds)
[09:41:35] *** Joins: alch (~alch@151.82.145.44)
[09:46:24] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:47:21] *** Joins: lleo (~leo@31-161-189-89.mobile.kpn.net)
[09:57:11] *** Joins: CoffeeMuffin (~a@2001:871:25f:39a0:67cd:c35d:8465:5979)
[09:58:18] <smallville7123> in https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[09:58:19] <candide> Title of smallville7123's link: token.c · GitHub
[09:58:25] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:03:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:03:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:03:31] *** Joins: wroathe (~wroathe@user/wroathe)
[10:03:38] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 260 seconds)
[10:04:17] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:6cf2:b906:2bc7:1ff9) (Ping timeout: 240 seconds)
[10:05:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Quit: Quit)
[10:07:15] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (Ping timeout: 256 seconds)
[10:07:39] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[10:07:40] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:08:19] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:08:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:08:50] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[10:09:26] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:09:53] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[10:11:36] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:1d81:9f23:5ac8:407a)
[10:13:39] *** Quits: CoffeeMuffin (~a@2001:871:25f:39a0:67cd:c35d:8465:5979) (Quit: WeeChat 2.8)
[10:14:00] *** Quits: igater (~root@h178-129-134-39.dyn.bashtel.ru) (Ping timeout: 250 seconds)
[10:14:01] *** Joins: Oddity (~Oddity@user/oddity)
[10:15:31] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:18:33] <amosbird> Hello! Can I use `timer_create` to generate per-thread signal instead of per-process?
[10:18:35] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 256 seconds)
[10:18:56] *** Joins: savolla (~quassel@84.44.28.28)
[10:20:36] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:22:56] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:25:23] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[10:26:39] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[10:26:52] <smallville7123> amosbird: no
[10:26:54] *** Joins: diiirt (~diiirt@user/diiirt)
[10:27:20] <smallville7123> signals are pre-process
[10:27:24] <smallville7123> signals are per-process
[10:27:59] *** Quits: lleo (~leo@31-161-189-89.mobile.kpn.net) (Read error: Connection reset by peer)
[10:28:22] *** Joins: lleo (~leo@31-161-189-89.mobile.kpn.net)
[10:29:14] *** Quits: savolla (~quassel@84.44.28.28) (Quit: No Ping reply in 180 seconds.)
[10:30:01] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 250 seconds)
[10:30:36] *** Joins: savolla (~quassel@84.44.28.28)
[10:31:51] <smallville7123> amosbird: if you want a per-thread timer than you need to implement a timer yourself
[10:32:02] *** Joins: johnnyreb (~tth@user/johnnyreb)
[10:33:56] <novns> or use linux-only timerfd, which is not using any signals inside
[10:34:12] <novns> and can be processed faster with a lot of timers
[10:38:51] *** Joins: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net)
[10:39:21] *** Joins: AManPerformingAT (~AManPerfo@c-69-253-163-82.hsd1.pa.comcast.net)
[10:40:08] *** Quits: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net) (Client Quit)
[10:40:19] *** Joins: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net)
[10:42:06] *** Quits: AManPerformingAT (~AManPerfo@c-69-253-163-82.hsd1.pa.comcast.net) (Remote host closed the connection)
[10:43:17] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 256 seconds)
[10:44:27] *** Quits: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net) (Client Quit)
[10:44:59] *** Quits: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b) (Ping timeout: 256 seconds)
[10:45:24] *** Joins: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net)
[10:45:41] *** Quits: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net) (Client Quit)
[10:46:52] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:46] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[10:48:06] <De4n_Whit3> Hello everyone.
[10:50:51] *** Joins: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net)
[10:51:08] *** Quits: rahl (~rahl@otaku.sdf.org) (Ping timeout: 256 seconds)
[10:51:27] *** Quits: rcf (rcf@sdf.org) (Ping timeout: 256 seconds)
[10:54:06] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[10:55:11] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 256 seconds)
[10:55:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:56:42] *** Joins: cosimone (~user@93-34-133-254.ip49.fastwebnet.it)
[10:58:49] *** Quits: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net) (Quit: Client closed)
[10:59:44] *** Joins: rootkea (~rootkea@user/rootkea)
[11:01:56] <smallville7123> in https://gist.github.com/mgood7123/cdc84358bcac6560fe2fab6b10a37573 how do we know if we are still expanding, and when the expansion should be stopped?
[11:01:57] <candide> Title of smallville7123's link: token.c · GitHub
[11:02:58] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:03:27] *** Quits: rootkea (~rootkea@user/rootkea) (Read error: Connection reset by peer)
[11:03:29] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:04:25] *** Joins: rootkea (~rootkea@user/rootkea)
[11:06:09] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:07:16] *** Joins: oakyy (~oaky@2001:6b0:1:1041:d69e:4a0b:e453:f2e7)
[11:08:25] *** Joins: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net)
[11:08:39] *** Quits: Guest12 (~Guest12@c-69-253-163-82.hsd1.pa.comcast.net) (Client Quit)
[11:09:04] *** Joins: rcf (~rcf@024-217-141-241.res.spectrum.com)
[11:09:49] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:10:57] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 256 seconds)
[11:14:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:15:11] <nuxil> no a C question. but what is the "best" pastebin site to use ? i been using paste.debian.net. but now i starting to hate that site. it refuce to accept code with lines longer than 80 chars. rather stupid if you ask me.
[11:15:29] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[11:16:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl)
[11:16:36] <nuxil> oh never mind. i'll check out thouse in the topic
[11:17:46] <smallville7123> nuxil: wandbox
[11:19:18] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[11:19:31] <dave0> nuxil: i like termbin.com because you can use netcat to upload things
[11:19:32] <nuxil> that looks like an online compiler of some sort. for that i have https://www.onlinegdb.com & https://godbolt.org
[11:19:32] *** Joins: diiirt (~diiirt@user/diiirt)
[11:19:40] <nuxil> @smallville7123,
[11:19:56] <nuxil> dave0, oh,, thats nice
[11:20:03] <smallville7123> gist.github
[11:20:21] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:20:33] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[11:20:59] *** Joins: masoudd (~masoudd@user/masoudd)
[11:21:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[11:21:39] *** Quits: oakyy (~oaky@2001:6b0:1:1041:d69e:4a0b:e453:f2e7) (Remote host closed the connection)
[11:21:52] *** Joins: oakyy (~oaky@2001:6b0:1:1041:41ce:9ec:5058:1266)
[11:22:05] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:22:33] *** Joins: masoudd (~masoudd@user/masoudd)
[11:23:16] <dave0> https://paste.c-net.org/   is good cos it lets you upload .zip files with curl
[11:23:22] <dave0> command line for the win
[11:23:26] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:23:55] *** Joins: masoudd (~masoudd@user/masoudd)
[11:24:04] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[11:24:17] *** Joins: Whatshisface (~jon@catv-178-48-246-132.catv.fixed.vodafone.hu)
[11:24:20] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[11:24:34] <nuxil> thanks for the suggestion. i'll check them out.
[11:25:01] *** Joins: mrig (~mrig@user/mrig)
[11:25:14] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:28:02] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:28:09] *** Joins: vysn (~vysn@user/vysn)
[11:31:30] *** Joins: msk (~Thunderbi@89.205.124.19)
[11:32:24] *** Joins: masoudd_ (~masoudd@user/masoudd)
[11:33:54] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[11:35:37] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[11:35:57] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Ping timeout: 240 seconds)
[11:37:48] *** Joins: aradesh (~aradesh@user/aradesh)
[11:39:03] <NRK> lmao, that's actually based.
[11:39:12] <NRK> next they should reject code which don't use tabs for indentation
[11:40:08] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:40:09] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[11:41:24] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:41:45] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:42:15] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:42:49] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:42:59] <Maxdamantus> That's quite nice. Have been wondering where to upload temporary images recently.
[11:43:01] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[11:43:02] <Maxdamantus> $ curl --upload-file /tmp/IMG_20211214_165500.jpg https://paste.c-net.org/
[11:43:02] <Maxdamantus> https://paste.c-net.org/SouthernScary
[11:43:53] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:44:11] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:45:40] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:46:03] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[11:48:55] *** Joins: Rounin (~david@84.212.130.215)
[11:51:03] <dave0> Maxdamantus: omg there's an ad for sushi on that truck
[11:54:27] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:54:58] <Maxdamantus> Maybe they put it there because they knew it would end up being broadcast to the world over a pastebin site.
[11:55:34] *** Joins: serbest (~ike@user/serbest)
[11:55:40] *** Joins: arinov (~arinov@213.194.126.155)
[11:57:48] *** Joins: rahl (rahl@otaku.sdf.org)
[11:58:47] *** Quits: rcf (~rcf@024-217-141-241.res.spectrum.com) (Quit: WeeChat 3.4)
[11:59:02] *** Joins: rcf (rcf@sdf.org)
[11:59:41] <dave0> money well spent :-p
[12:03:25] *** Quits: foul_owl (~kerry@217.114.38.61) (Ping timeout: 256 seconds)
[12:03:37] *** Joins: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr)
[12:04:17] *** Joins: wroathe (~wroathe@user/wroathe)
[12:06:30] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[12:06:56] *** Joins: jinsl (~jinsl@180.88.96.9)
[12:09:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[12:10:56] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[12:12:18] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[12:12:20] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[12:12:32] *** Joins: nuxil (~nuxil@141.195.51.213)
[12:13:43] *** Joins: gce108 (~gce@user/gce108)
[12:14:39] *** Joins: Darkcoal (~user@user/Darkcoal)
[12:15:42] *** Quits: jinsl (~jinsl@180.88.96.9) (Quit: Client closed)
[12:16:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:18:55] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[12:19:51] *** Joins: Rounin (~david@84.212.130.215)
[12:21:01] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[12:24:03] *** Quits: ironman (~ironman@49.36.55.235) (Ping timeout: 256 seconds)
[12:24:37] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 250 seconds)
[12:28:08] *** Joins: PaulePanter (~paul@mail.gw90.de)
[12:28:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:29:08] <PaulePanter> Hi. What are the guarantees for how values are assigned to enum members?
[12:29:32] <PaulePanter> Can the compiler assign unique values, or does it need to start at 0 and then increment by one?
[12:30:06] *** Quits: mphojele (~mphojelem@2001:470:69fc:105::35ab) (Quit: You have been kicked for being idle)
[12:30:37] *** Quits: lleo (~leo@31-161-189-89.mobile.kpn.net) (Ping timeout: 256 seconds)
[12:32:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:34:08] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[12:35:01] *** Quits: mrig (~mrig@user/mrig) (Read error: Connection reset by peer)
[12:35:06] <PaulePanter> https://www.geeksforgeeks.org/enumeration-enum-c/ claims:
[12:35:14] <PaulePanter> > If we do not explicitly assign values to enum names, the compiler by default assigns values starting from 0. For example, in the following C program, sunday gets value 0, monday gets 1, and so on.
[12:35:15] *** Joins: mrig (~mrig@user/mrig)
[12:35:27] <PaulePanter> enum day {sunday, monday, tuesday, wednesday, thursday, friday, saturday};
[12:36:34] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:39:42] *** Joins: lleo (~leo@31-161-189-89.mobile.kpn.net)
[12:39:56] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[12:42:21] *** Joins: teepee (~teepee@openscad/teepee)
[12:43:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[12:43:57] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[12:44:01] *** Joins: zacts (~zacts@user/zacts)
[12:44:15] <Amun-Ra> yes
[12:44:30] <ChoHag> PaulePanter: If you were a PDP-7, what would you do?
[12:48:12] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:b54:51f:6720:5b3c) (Remote host closed the connection)
[12:50:16] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8b58:1b83:a2e1:a1df)
[12:51:28] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8b58:1b83:a2e1:a1df) (Remote host closed the connection)
[12:53:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:53:52] *** Quits: alip (~alip@exherbo/developer/alip) (Read error: Connection reset by peer)
[12:54:35] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:df3e:ef17:255f:ee78)
[12:54:47] *** Joins: alip (~alip@exherbo/developer/alip)
[12:55:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0)
[12:57:49] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:00:05] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 256 seconds)
[13:00:33] *** Quits: hinata (~hinata@2409:4042:2e08:3f67:7d22:da7e:d4e8:23b6) (Quit: Leaving)
[13:07:26] *** Quits: manx (xuew@p200300e18f0e0800022215fffe03cf97.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[13:09:51] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:13:30] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[13:14:04] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[13:14:11] *** Joins: random-nick (~random-ni@87.116.167.125)
[13:20:07] *** Joins: wroathe (~wroathe@user/wroathe)
[13:20:14] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[13:20:44] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:21:13] *** Quits: rootkea (~rootkea@user/rootkea) (Quit: Leaving)
[13:21:22] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:21:37] *** Joins: manx (xuew@p200300e18f1c3400022215fffe03cf97.dip0.t-ipconnect.de)
[13:22:04] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:23:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Max SendQ exceeded)
[13:23:28] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:23:54] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[13:25:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:25:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:28:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[13:36:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[13:37:43] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:39:05] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:39:11] *** Quits: alch (~alch@151.82.145.44) (Ping timeout: 256 seconds)
[13:40:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[13:40:41] *** Joins: alch (~alch@bo-18-139-221.service.infuturo.it)
[13:45:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:49:04] *** Joins: bindu (~bindu@user/bindu)
[13:50:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:50:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:50:52] *** Joins: wroathe (~wroathe@user/wroathe)
[13:53:47] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[13:54:34] <dave0> PaulePanter: if you use = it has that vlaue, otherwise it counts from the last one
[13:55:34] <dave0> PaulePanter: enum { a, b = 50, c, d = 20, e, f }; then a==0 b==50 c==51 d==20 e==21 f==22
[13:55:44] <PaulePanter> dave0: Thank you.
[13:55:47] *** Joins: Klinda (~superleag@user/klinda)
[13:55:49] <dave0> PaulePanter: also you can have duplicates
[13:55:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:55:57] <dave0> no worries
[13:56:02] <PaulePanter> dave0: Yes, that I read.
[13:58:35] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[13:58:44] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[13:59:52] *** Joins: seninha (~seninha@user/seninha)
[14:00:27] <caze> Also, enums are only half useful.
[14:03:16] *** Quits: pizdets_ (~pizdets@183.182.110.14) (Ping timeout: 250 seconds)
[14:03:19] *** Joins: pizdets (~pizdets@183.182.114.142)
[14:05:23] *** Joins: hinata (~hinata@2409:4042:2e08:3f67:7d22:da7e:d4e8:23b6)
[14:06:29] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[14:06:31] *** Joins: inlight (~thomas@82.221.128.46)
[14:06:31] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[14:06:31] *** Joins: inlight (~thomas@user/inlight)
[14:07:19] *** Joins: ko (~i.am@user/marlboro)
[14:08:30] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[14:10:35] *** Quits: lleo (~leo@31-161-189-89.mobile.kpn.net) (Ping timeout: 250 seconds)
[14:21:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:21:40] *** Joins: shivesh (~shivesh@user/shivesh)
[14:21:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:21:40] *** Joins: wroathe (~wroathe@user/wroathe)
[14:22:40] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[14:24:03] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[14:24:10] *** Quits: kilolympus (~kilolympu@31.205.200.235) (Quit: Quitting IRC :()
[14:25:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:26:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:27:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[14:29:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:30:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:30:45] *** Joins: stefanos82 (~stefanos8@128-228-117.netrun.cytanet.com.cy)
[14:30:50] *** Lord_of_Life_ is now known as Lord_of_Life
[14:33:50] *** Quits: alch (~alch@bo-18-139-221.service.infuturo.it) (Read error: Connection reset by peer)
[14:34:09] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[14:34:30] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:36:37] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[14:36:44] <nomagno> Enums aren't much better than an integer with macros, they're just more human friendly
[14:37:56] *** Joins: alch (~alch@151.34.33.91)
[14:39:40] <sham1> Enums are better in that if you try to do a catch of, say, `enum foo bar;`, so you'd do `switch (bar)`, the compiler will give warnings on unused matches]
[14:40:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:41:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[14:41:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[14:41:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:45:23] *** Joins: bindu (~bindu@user/bindu)
[14:46:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:49:00] <smallville7123> rip no one knows
[14:49:39] <smallville7123> about macro preprocessing
[14:51:06] *** Quits: oakyy (~oaky@2001:6b0:1:1041:41ce:9ec:5058:1266) (Ping timeout: 260 seconds)
[14:51:07] *** Joins: foul_owl (~kerry@23.82.193.78)
[14:51:12] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[14:51:20] *** Joins: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown)
[14:52:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:55:03] *** Joins: kish` (~aqua@user/aqua)
[14:55:35] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:56:11] *** Quits: stefanos82 (~stefanos8@128-228-117.netrun.cytanet.com.cy) (Quit: Leaving)
[14:56:21] *** Joins: strajder (~strajder@user/strajder)
[14:58:31] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.158) (Ping timeout: 256 seconds)
[14:59:00] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:00:47] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[15:00:55] *** Joins: Charadon (~Charadon@155.138.164.183)
[15:03:46] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:03:57] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[15:04:31] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 245 seconds)
[15:04:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[15:06:27] *** Quits: foul_owl (~kerry@23.82.193.78) (Ping timeout: 256 seconds)
[15:06:27] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[15:07:25] *** Joins: inlight (~thomas@82.221.128.46)
[15:07:25] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[15:07:25] *** Joins: inlight (~thomas@user/inlight)
[15:08:28] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:13:02] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 260 seconds)
[15:13:46] *** Joins: inlight (~thomas@157.35.17.76)
[15:13:46] *** Quits: inlight (~thomas@157.35.17.76) (Changing host)
[15:13:46] *** Joins: inlight (~thomas@user/inlight)
[15:15:41] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:16:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[15:16:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[15:16:16] *** Joins: wroathe (~wroathe@user/wroathe)
[15:19:29] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[15:20:10] *** Joins: inlight (~thomas@157.35.17.76)
[15:20:10] *** Quits: inlight (~thomas@157.35.17.76) (Changing host)
[15:20:10] *** Joins: inlight (~thomas@user/inlight)
[15:20:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[15:21:14] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 252 seconds)
[15:23:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:23:44] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[15:23:45] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[15:25:24] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[15:26:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:32:30] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:16] *** Joins: csrf (~csrf@user/csrf)
[15:35:05] *** Joins: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13)
[15:35:54] <nomagno> Is it a good sign of portable-ish coding style that I get no warnings with gcc -pedantic -std=c99 -Wall -Wextra?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:23] *** ko is now known as \o\
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:41] <nomagno> Obviously I'm aiming for portable code, there's still many ways to mess up.
[15:38:43] *** Joins: vysn (~vysn@user/vysn)
[15:40:52] *** Quits: maxxe (~maxxe@user/maxxe) (Quit: Swirc IRC client)
[15:41:11] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[15:44:11] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:45:29] <koollman> nomagno: it's a first step, but it won't tell you how portable it is. At least you can probably compile with another compiler. maybe. Still could behave completely differently on any other platform :)
[15:51:44] *** Joins: oakyy (~oaky@2001:6b0:1:1041:e701:161f:cbb9:691f)
[15:55:01] *** Joins: vboykox (~user@95.134.34.68)
[15:55:09] *** masoudd_ is now known as masoudd
[15:55:32] *** Joins: nikki3 (~anagami@87.247.123.112)
[15:58:41] *** Quits: knusbaum (~knusbaum@23.249.37.254) (Ping timeout: 250 seconds)
[16:00:17] <NRK> nomagno: not at all. consider this code `static const int a = 5; static const int b = a;`
[16:00:28] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:00:58] <NRK> gcc even with all those flags will compile this fine, but this is not portable since `a` is not a constant expression explicitly defined by the standard
[16:01:59] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[16:02:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af)
[16:02:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af) (Changing host)
[16:02:01] *** Joins: skapata (~Skapata@user/skapata)
[16:02:56] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:03:18] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:04:10] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60)
[16:04:20] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:04:33] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:05:18] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[16:06:26] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:06:32] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:06:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:07:00] *** Joins: pulse (~pulse@user/pulse)
[16:07:37] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60) (Remote host closed the connection)
[16:07:40] <fizzie> On the other hand, the question was *not* "does getting no warnings from this command line invocation guarantee my program is strictly conforming?", but merely whether it's a good *sign*, and I don't think you could argue against it being at least a better sign than getting a bunch of warnings would be.
[16:08:18] <NRK> I can
[16:08:34] <fizzie> Well, I guess you can always argue, fair enough.
[16:08:56] <NRK> say hi to, `-Wmissing-field-initializers`
[16:09:49] <NRK> basically forces you to never utilize implicit zero initialization in C89
[16:10:12] <NRK> ahh, my bad. he's using c99
[16:10:59] <NRK> you can silence that warning by using designated intilializer in c99
[16:11:54] *** Joins: lleo (~leo@31-161-189-89.mobile.kpn.net)
[16:12:55] *** Joins: bindu (~bindu@user/bindu)
[16:16:08] <NRK> anyhow, if you're aiming for portable code, i don't think -pedantic enables -Wvla on -std=c99, so you might wanna manually enable that.
[16:20:48] *** Joins: argonautx (~argonautx@i5E86707E.versanet.de)
[16:23:12] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[16:27:49] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:28:48] <roxlu> Hey! I'm receiving JSON data that represents "commands". I want to create a parser that extracts the fields from the json and sets up `struct command_[name]`. Then it passes this command data to a callback.  Would it be a good approach to create a simple `struct command { uint8_t type; }` and then for each specific one e.g. `struct command_switch { uint8_t type; const char* name; }`
[16:29:35] <roxlu> and have a callback like: `typedef void(*command_cb)(command* cmd);` in which the user casts the given `cmd` based on type?
[16:32:10] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:33:29] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[16:33:56] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[16:34:26] *** Joins: defiant (~defiant@user/defiant)
[16:36:16] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:37:11] <sham1> Yeah, although I'd rather do `struct comand_switch { struct command base; const char *name; }` and then if you receive a switch-command, you can construct a `struct command_switch` instance and then call the callback like `command_cb(&switch_cmd->base);` because then it will work fine
[16:37:39] <sham1> Because you're allowed to go from a pointer to the first element to a pointer to the containing struct with just a cast
[16:38:26] <sham1> While with doing `struct command_switch {uint8_t type; const char *name;}` you don't have such leeway
[16:38:37] <sham1> Even though it will *probably* work
[16:40:26] <roxlu> hey thanks sham1 !
[16:40:43] <roxlu> I'll use your approach, makes sense
[16:42:40] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[16:44:25] <nomagno> O think I zero-initialize pretty much everything
[16:44:49] <roxlu> sham1: the `struct command` would have the `uint8_t type` right?
[16:44:55] <nomagno> Just seems... saner to have everything be zero. Of course I have to make sure I initialize the relevant fields afterwards
[16:45:08] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:45:17] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:51:43] *** Quits: NovaXrine (~NovaXrine@void.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:52:03] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[16:53:46] <sham1> roxlu: yes
[16:53:56] <sham1> Because it's the data shared by all the commands
[16:54:06] <roxlu> ok yep, thanks
[16:55:16] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Client Quit)
[16:56:24] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[16:57:22] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[16:58:26] *** Joins: bnchs (~bnchs@41.250.102.1)
[17:04:07] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Ping timeout: 250 seconds)
[17:05:04] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:06:04] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[17:07:15] <nikki3> example case: i declare a struct inside a function, struct has integer value, i print it, then i assign a number to it and thats it. I call this function from main, and when i print it multiple times i see that after the function finishes the struct number stays the same, it has not changed. I thought that local variables in a function get discarded, or not until overwritten?
[17:07:40] <nikki3> the first print is gibberish tho
[17:07:59] <nikki3> don't know if its clear
[17:08:34] <sham1> Well it certainly wouldn't hurt to have some example code
[17:08:44] <nikki3> https://pastebin.com/raw/Jqvpcf85
[17:09:22] <sham1> You've stumbled upon undefined behaviour
[17:09:37] <nikki3> i cant set to null the integer yeah?
[17:09:46] <nikki3> cause its not a pointer
[17:09:53] <sham1> What
[17:10:10] <sham1> Mind repeating that?
[17:10:17] <sham1> Because I couldn't parse that
[17:10:31] <nikki3>  num->a = NULL;
[17:10:37] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:10:46] <nikki3> a is just an int, so it can't be set to NULL?
[17:10:52] <sham1> Yes. That is indeed the wrong type
[17:10:56] <sham1> Just use 0
[17:11:11] *** Quits: bnchs (~bnchs@41.250.102.1) (Ping timeout: 268 seconds)
[17:12:14] <nikki3> but what my main question is, when i dont use the destroy struct, first value i print out is gibberish, when i set it to 333 i print it second time, and then i call that function again, and the a variable has 333 in it already
[17:12:37] <nikki3> how does that happen
[17:13:17] <nikki3> its because that memory area was not overwritten or smth like that? cause its a local variable
[17:13:21] <nikki3> local struct*
[17:13:25] <sham1> As I said, undefined behaviour
[17:14:27] <nikki3> hhm okay, thanks :D
[17:14:40] <sham1> The structure might get its contents from the stack frame of the previous call to the function, since you don't initialize the structure
[17:15:57] <nikki3> yeah could be the case
[17:16:35] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[17:16:41] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[17:17:07] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[17:17:41] *** Joins: bnchs (~bnchs@41.250.102.1)
[17:17:57] <nikki3> @sham1 would it be better practice to create an init function ant initialize the structure before using or discarding all the variables in it before exiting program?
[17:18:52] <sham1> Not necessarily an initialisation function, but you certainly have to initialise your structs
[17:19:02] <ChoHag> That's only necessary it it holds resources which need to be released carefully.
[17:19:03] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[17:19:32] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:20:07] <ChoHag> Often if the OS can discard it all en masse it's more efficient.
[17:21:25] *** Quits: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[17:21:36] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[17:22:19] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[17:23:11] *** Quits: oakyy (~oaky@2001:6b0:1:1041:e701:161f:cbb9:691f) (Ping timeout: 250 seconds)
[17:24:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:30:08] *** Quits: hinata (~hinata@2409:4042:2e08:3f67:7d22:da7e:d4e8:23b6) (Quit: Leaving)
[17:39:15] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:39:20] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:40:54] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:47:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:48:00] *** Joins: Common-Lisp (~common_li@12.2.190.242)
[17:48:14] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[17:50:34] <De4n_Whit3> I tried implementing merge sort in C to understand the algorithm. I can confirm; my implementation is trash.
[17:50:34] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:50:50] <Common-Lisp> Mergesort is fun.
[17:50:52] <Common-Lisp> One of my favorite sorts.
[17:51:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0) (Ping timeout: 260 seconds)
[17:51:17] <De4n_Whit3> 2 elements just went missing. Now I'm like SHerlock Holmes trying to find out what happened to the blokes. LOL. I agree, it's super fun.
[17:51:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[17:53:18] <Common-Lisp> Mergesort is especially fun in a language with coroutines, because the algorithm supports partial sorting
[17:53:44] <Common-Lisp> So you can do some cool stuff by building a generator and allowing a client to essentially fold your generator into a full sort, or stop it at any step in between
[17:54:45] <De4n_Whit3> I confess that I am an absolute noob. Which languages have coroutines? I'm a wanna-be-author with an insatiable love for IT things, including code. But I think even Micky Mouse would be embarrassed of the (err stuff) I write.
[17:58:00] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:58:26] *** Joins: Wulf (~Wulf@user/wulf)
[18:00:15] <Common-Lisp> Common Lisp, for one.
[18:00:22] <Common-Lisp> Go has them. C++ is getting them soon(tm).
[18:00:26] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[18:00:52] <De4n_Whit3> Thank you Common-Lisp!
[18:00:56] <Common-Lisp> A bunch of interpreted languages like Python, Ruby, and JavaScript kinda have them, just not in parallel.
[18:01:03] <Common-Lisp> De4n_Whit3: np
[18:01:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:01:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:01:22] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:08] *** Joins: knusbaum (~knusbaum@23.249.37.254)
[18:04:00] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[18:06:33] <nomagno> Eh, protothreads are a nice coroutine replacement
[18:06:42] <nomagno> Storing part of the local state in remote memory, rather
[18:06:45] *** Emet-Selch is now known as Azem
[18:06:55] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:06:55] <nomagno> Don't necessarily make it stackless, but make the caller in control of execution when possible
[18:07:07] <nomagno> Adds reentrancy, overall fairly nice if itakes sense
[18:07:26] <nomagno> Makes sense*
[18:07:35] <Common-Lisp> Hmm, good point
[18:08:14] *** Joins: mrig (~mrig@user/mrig)
[18:09:55] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[18:10:55] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:12:02] *** Joins: cherrry9_ (~jan@aeil171.neoplus.adsl.tpnet.pl)
[18:13:33] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[18:14:01] *** Quits: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[18:15:27] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[18:17:56] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com) (Read error: Connection reset by peer)
[18:18:53] *** Quits: Dotz0cat (~Dotz0cat@173.187.195.128) (Ping timeout: 252 seconds)
[18:19:57] <roxlu> maybe a silly question, but when I have a `void*` and I want to cast it, do I need to cast like: `type* inst = (type*) user` or is it ok to do `type* inst = user` ?
[18:23:35] *** Quits: savolla (~quassel@84.44.28.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:50] *** Joins: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net)
[18:24:58] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:25:08] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[18:25:23] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[18:28:13] <pragma-> You don't want to cast it.
[18:28:17] <pragma-> You have no reason to want to cast it.
[18:28:21] <pragma-> Stop trying to cast it.
[18:29:12] <Beastie> yes... don't cast it.... you will hide more problems than the good you can do (if any)
[18:29:26] <roxlu> Ok thanks
[18:29:31] <pragma-> Also, it's `type *inst = user;` not `type* inst = user;`
[18:29:33] <ski> it will automatically be converted to another pointer type, if you try to use it as such. (almost always) no need to cast
[18:29:41] <pragma-> ,declareuse
[18:29:41] <candide> In C, declaration follows use. That means you do not write `char* p` but instead `char *p` because it doesn't mean `p is a pointer to char` but rather `*p is a char`. https://www.quora.com/Why-doesnt-C-use-better-notation-for-pointers/answer/Brian-Bi and https://old.reddit.com/r/c_language/comments/i6iqp4/returning_function_pointer_with_and_without/
[18:30:52] *** Joins: hlauk (~hlauk@176.33.96.72)
[18:32:52] *** Joins: eeerik9 (~eeerik9@85-135-186-188.adsl.slovanet.sk)
[18:32:52] *** Quits: eeerik9 (~eeerik9@85-135-186-188.adsl.slovanet.sk) (Client Quit)
[18:33:55] <pragma-> A lot of people just dismiss it as a stylistic thing but it's actually a fundamental design of C.
[18:34:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:34:16] *** Quits: alch (~alch@151.34.33.91) (Read error: Connection reset by peer)
[18:34:30] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[18:35:10] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com)
[18:35:30] <Common-Lisp> I always write `char * p`
[18:35:43] <pragma-> Though it's considered today by many to be a mistake. C++ abandons it, etc.
[18:36:08] <pragma-> But still, if you use C you should write C.
[18:37:42] <nomagno> Idiomatic C++ freaks me out
[18:37:43] *** Quits: \o\ (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[18:38:03] <nomagno> Specially C++11 and onwards
[18:38:04] <nomagno> x
[18:38:27] <Common-Lisp> I once got called out in a job interview for not using idiomatic C++
[18:38:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[18:38:40] <Common-Lisp> Terrifying.
[18:39:06] <roxlu> ok so when I'm casting `command *cmd` to `command_switch *cmd_switch = cmd` I get a warning about incompatible pointers. Can I ignore that?
[18:39:21] *** Joins: alch (~alch@151.34.53.176)
[18:39:38] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:39:48] <nomagno> roxlu: Is command_switch's FIRST member a command?
[18:39:50] <nomagno> like, `struct command`
[18:39:53] <nomagno> or whatever
[18:39:56] <nomagno> That type
[18:39:57] <nomagno> ls
[18:40:00] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:40:00] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:40:00] *** Joins: wroathe (~wroathe@user/wroathe)
[18:40:42] <nomagno> struct command_switch { command struct_member; ... };
[18:41:06] <nomagno> if the declaration of command_switch looks like that, I THINK you're fine
[18:41:14] <nomagno> it's definitely fine for casting between structs
[18:41:17] <nomagno> dunno about struct pointers
[18:41:25] <roxlu> nomagno: it's like this https://gist.github.com/roxlu/45e4ef66d8667e7df754074203eb5b75
[18:41:26] <candide> Title of roxlu's link: cmd.c · GitHub
[18:41:44] <sham1> You can cast it
[18:41:49] <nomagno> You should be fine yeah
[18:41:57] <nomagno> that's the only special case where it's defined
[18:42:05] <roxlu> ok thanks.
[18:42:06] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[18:42:12] <nomagno> struct 2 being a strict superset of struct 1
[18:42:32] <sham1> There's also container_of for certain other situations like this
[18:43:17] <nomagno> That's linux kernel-specific, it seems
[18:43:21] <nomagno> but seems very useful yeah
[18:44:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:44:27] <sham1> Well it's easy to have a portable version of it
[18:45:04] <nomagno> ... It might not do what I think it does
[18:45:18] <nomagno> what does it do? I'm having trouble understanding the docs
[18:47:10] <sham1> Say you have a struct as follows: struct foo { /* ... */ struct bar bar; /* ... */}
[18:47:54] <sham1> Now, if you have a struct bar *barPtr which points at bar inside a struct foo, you might want to be able to get a pointer to struct foo from the barPtr
[18:48:16] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:48:46] <sham1> So you get the container of (thus, container_of) the object that you have a pointer for
[18:49:06] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:50:22] *** Joins: mplio_ (~mplio@81-205-35-3.fixed.kpn.net)
[18:50:24] *** Quits: Common-Lisp (~common_li@12.2.190.242) ()
[18:53:07] *** Quits: mplio (~mplio@81-205-35-3.fixed.kpn.net) (Ping timeout: 256 seconds)
[19:00:05] *** Joins: kts (~kts@103.73.237.104)
[19:00:29] *** Quits: hlauk (~hlauk@176.33.96.72) (Ping timeout: 256 seconds)
[19:01:16] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:01:57] <theseb> if i don't want to run an executable unless gcc finishes w/o errors, what can i do?...will this work.... gcc -o f f.c && ./f ?
[19:02:04] <theseb> i think && in shell works that way
[19:02:55] <pragma-> is gcc being executed via a shell?
[19:03:22] <theseb> yes
[19:03:26] <theseb> well Makefile
[19:03:31] <theseb> but it runs shell commands
[19:04:33] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[19:04:45] <sham1> Could also have it as multiple commands in the make target
[19:05:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5)
[19:05:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:06:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:06:41] <theseb> sham1: but how make makefile stop when sees 1st error?
[19:07:45] <De4n_Whit3> I can slap myself man. I passed in my array size and iterated to the end of the array instead of stopping at arraySize - 1. Hence why the random 0 got thrown into the mix. *Head bangs repeatedly* How many hours...
[19:07:56] <sham1> I thought it does stop in that case
[19:08:26] <sham1> De4n_Whit3: F
[19:08:43] <NRK> pretty sure makefile auto stops on error
[19:08:48] <ski> De4n_Whit3 : size of array, or element count of array ?
[19:09:30] <De4n_Whit3> So in the merge sort I am making a temp array and sorting elements there and then replacing to the main array. But the size I specified to iterate over was the entire size of the array including the terminating \0.
[19:09:57] <De4n_Whit3> So I was like where the hell does this 0 keep coming from!
[19:10:01] <NRK> De4n_Whit3: address sanitizer can catch a lot of these errors.
[19:10:17] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[19:10:22] <De4n_Whit3> What is address sanitizer?
[19:10:35] <De4n_Whit3> I am like. Really... noob.
[19:10:44] <NRK> ,cc char s[5]; for (int i = 0; i <= sizeof(s); ++i) s[i] = i;
[19:10:47] <candide> NRK: [warning: comparison of integer expressions of different signedness: 'int' and 'long unsigned int' [-Wsign-compare]]  runtime error: index 5 out of bounds for type 'char [5]'  runtime error: store to address with insufficient space for an object of type 'char'    no output: s = ""
[19:11:09] <Neui[m]> theseb: Maybe you want -fmax-errors=1 for gcc itself?
[19:11:26] <ski> De4n_Whit3 : oh, you're sorting a string
[19:11:29] <NRK> De4n_Whit3: compile with `-fsanitize=address`
[19:11:39] <theseb> Neui[m]: oh..nice thanks
[19:11:57] <De4n_Whit3> ski I'm sorting an array of ints.
[19:11:58] <theseb> sham1, NRK: i tested and i think you're right
[19:12:12] <De4n_Whit3> Thank you NRK!
[19:12:31] <ski> De4n_Whit3 : is your array of `int's terminated by a `\0', then ?
[19:12:37] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 240 seconds)
[19:13:12] <NRK> i'd throw in ubsan and leaksan in there as well. `-fsanitize=address,undefined,leak` , and don't forget to compile with proper warning flags turned on ofcourse
[19:13:31] <De4n_Whit3> ski look... don't ask such personal ques- Just joking, I don't know. I think I was passing by the ending element. And accessed memory that I wasn't intended to. So a nonexistent int of '0' kept showing up in my array.
[19:14:04] <ski> perhaps some code to look at would be helpful, at this point
[19:14:47] <ski> you mentioning "including the terminating \0" sounded like *you* had terminated the array with this `\0'
[19:14:54] <NRK> a lot of newbies end up making avoidable errors because they aren't aware how to enable proper warnings.
[19:15:00] *** Joins: Guest62 (~Guest62@2a0c:5a82:200:2e00:f8ea:b9d8:6940:3222)
[19:15:26] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[19:15:36] <sham1> And a lot of newbies also don't know how to debug
[19:15:56] <Guest62> Hi
[19:16:02] <De4n_Whit3> ski I for some reason thought all arrays had a last element of \0 to indicate the end of it? @_@
[19:16:20] <pragma-> frankly that's a failing on the compiler's part. whose moronic idea was it to make warnings an opt-in only thing
[19:16:36] <NRK> that's just for strings.
[19:16:47] <pragma-> and why are warnings STILL opt-in only in 2022
[19:16:54] <De4n_Whit3> Ah ok, I see. Thank you NRK.
[19:16:58] <ski> "Come to think of it, one of the things that drives me up the wall is 3rd year students handing in C programs with obvious problems that the C compiler DID tell them about, but they weren't EXPECTING to understand anything the compiler said, so they didn't bother looking at what it did say or even the particular lines it was talking about." -- Richard A. O'Keefe,2006-10-10
[19:17:00] <NRK> char arrays without null termination can exist too
[19:17:20] <NRK> pragma-: agreed. -Wextra maybe opt-in, but -Wall ?
[19:17:31] <sham1> -Wall should be enabled-by-default
[19:17:38] <sham1> I'd even argue -Wextra
[19:17:45] <clarity> I want an option that makes warnings less verbose
[19:17:52] <xiaomiao> you're just training people to disable the nagging
[19:18:07] <sham1> Because it's not like -Weverything. -Wall -Wextra doesn't even give you all the warnings that are useful
[19:18:19] <sham1> Compiler output as JSON when
[19:18:24] <sham1> (discounting LSP)
[19:18:28] <De4n_Whit3> Basically the logic where I was messing up was something like... My array to sort is of size 8. I will make a temp array to sort it and use the length of 8, and then eventually compare an array size of 8 and 9 to compare 2 different values. One didn't exist or something, I dunno!, and then it was like, ok fam, let me just hit up this 0 and override
[19:18:29] <De4n_Whit3> your existing arrays value. And he was like. Excellent, the smallest element in your array is 0. And I'm like, what, but there was no 0 in there!
[19:18:52] <NRK> ,cc char s[5] = "Hello"; // this char array doesn't have a null terminator.
[19:18:54] <candide> NRK: no output: s = "Hello"
[19:18:56] <ski> De4n_Whit3 : all arrays have a definite number of elements. it's common to pass this number along to a function, when you're letting it operate on an array
[19:19:50] <De4n_Whit3> ski thanks for all the pointers. You too NRK. Just glad it works. It wasn't even part of the homework. But I was too curious. @_@
[19:20:56] <ski> De4n_Whit3 : where did this array with nine elements come from ?
[19:21:10] <clarity> straight from the horse's mouth
[19:21:49] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[19:22:00] *** Joins: hp_max_test (hp_max_tes@92.41.161.181.threembb.co.uk)
[19:22:07] * ski still hasn't seen any of De4n_Whit3's code
[19:22:26] *** Quits: lleo (~leo@31-161-189-89.mobile.kpn.net) (Ping timeout: 245 seconds)
[19:22:45] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[19:23:16] *** Parts: hp_max_test (hp_max_tes@92.41.161.181.threembb.co.uk) ()
[19:23:16] <De4n_Whit3> ski oh you want to see it. It works now. Let me share it. Uh... pastebin? What do we use?
[19:24:07] <ski> maybe <https://paste.debian.net> ?
[19:26:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:26:55] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:29:18] <De4n_Whit3> ski had to clean it up a bit. https://paste.debian.net/1230140/ So I was passing on line 19 "mergesort(arr, 0, arraySize );" instead of "mergesort(arr, 0, arraySize - 1);"
[19:29:30] <roxlu> I must be doing something wrong. I've got a `rx_command_switch_stream *cmd` which I pass into a callback like: `ctx->on_command(&cmd->base)`. Then in the callback I cast it back to `rx_command_switch_stream *cmd_switch`. I can `printf()`  the name I've eg. `printf("%s", cmd_switch->name)` and the address of `name` also looks fine. Though when I pass the `name` into another calback, the code segfaults
[19:29:32] <roxlu> and the address becomes `0xffffffd0`.
[19:30:13] <De4n_Whit3> ski any criticism is welcome. I am big suck.
[19:30:49] <clarity> I am big duck.
[19:30:52] * clarity quacks
[19:30:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:31:27] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[19:31:41] <ski> De4n_Whit3 : line 15,24 : casts unnecessary
[19:32:34] <De4n_Whit3> *Salutes* Casts have been removed. ski Thanks!
[19:32:45] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d) (Quit: Leaving)
[19:32:53] <sham1> roxlu: show code
[19:33:26] <roxlu> yep, thanks. I was just pasting the gdb trace: https://gist.github.com/roxlu/3875bf08e2c391ed271ca419989c41be I'll add the code now.
[19:33:27] <candide> Title of roxlu's link: gdb.log · GitHub
[19:34:10] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-97.cspire.com) (Read error: Connection reset by peer)
[19:34:34] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:ec27:d5d6:5ec7:a96c)
[19:35:01] *** Joins: wroathe (~wroathe@user/wroathe)
[19:35:52] *** Guest62 is now known as Klabund
[19:36:52] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[19:36:58] <roxlu> I've updated the paste; it might be a bit much :# .. I've removed all the error checks
[19:37:21] <roxlu> The flow is from 1-mqtt.c, to 2-context.c etc.
[19:37:26] <ski> De4n_Whit3 : you're writing out of bounds to `tempArr''
[19:37:47] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[19:38:29] <ski> De4n_Whit3 : i would probably let `end' in `mergesort' point one past the last element. but either works, as long as you're consistent
[19:38:37] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 250 seconds)
[19:38:51] <roxlu> sham1: this https://gist.github.com/roxlu/3875bf08e2c391ed271ca419989c41be#file-3-context-c-L36 where the pointer becomes `0xffffffd0` (but only in the called function, `is_name_func()`)
[19:38:52] <candide> Title of roxlu's link: 1-mqtt.c · GitHub
[19:38:57] <ski> (the problem with `tempArr' is because you're not consistent .. also, you're wasting space, although that's a separate problem)
[19:39:27] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:39:45] <sham1> roxlu: what is the signature of is_name_func
[19:39:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:40:14] <roxlu> `typedef int(*rx_input_is_name_func)(void* input, const char name, uint8_t* isName);``
[19:40:33] <roxlu> and it's defined like: `static int is_name(void* gstInput, const char* name, uint8_t* isName)`
[19:40:37] <ski> De4n_Whit3 : i guess i've rather call it `arrayCount' (or `arrayCard', for cardinality) than `arraySize' (which to me suggests the actual memory size, being `sizeof arr', rather than the number of elements in, the element count of, `array')
[19:40:45] <De4n_Whit3> ski oh that space wasting gets under my skin too. But that is how the course enforced 'styling' and they will deduct marks if you don't use their styling. XD
[19:41:02] <sham1> roxlu: your typedef is wrong
[19:41:09] <ski> De4n_Whit3 : the out-of-bounds writing is definitely a bigger problem
[19:41:09] <sham1> const char name instead of const char *name
[19:41:31] * roxlu hides
[19:41:40] <De4n_Whit3> ski heh? Even with ArraySize - 1 it is going out of bounds? But the code works and gave no errors. PANIK!
[19:41:56] <ski> De4n_Whit3 : hm, i don't follow what you mean by "styling". why can't you simply allocate exactly as many elements to `tempArr' as is needed, no more, and no less ?
[19:42:04] <roxlu> thanks sham1 ! sorry for this.. I should have noticed that.
[19:42:17] <De4n_Whit3> ski ahhh, I thought you meant the { }'s.
[19:42:20] *** Joins: hlauk (~hlauk@176.33.96.72)
[19:42:21] <roxlu> Wondering how I could have found that quicker.
[19:42:28] <sham1> roxlu: how did you not get a type error
[19:42:33] <ski> De4n_Whit3 : what is the last value of `k' for which you write to `tempArr[k]', in `merge' ?
[19:43:14] <De4n_Whit3> 7?
[19:43:28] <ski> De4n_Whit3 : oh. nah, i wasn't talking about the curly brackets (although i would prefer avoiding them, for your `while's and `for's)
[19:43:28] <roxlu> sham1: yeah wondering about that too; I'm not setting any compiler/linker flags regarding warnings/errors
[19:43:51] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[19:44:17] <ski> De4n_Whit3 : "But the code works and gave no errors." is a very deceptive way to think, in C
[19:44:51] <ski> ,tias
[19:44:52] <candide> "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://ramblings.implicit.net/c/2014/04/20/c-is-not-a-try-it-and-see-language.html
[19:44:52] <De4n_Whit3> ski I thought you meant there was another logic error. But I think it is now only optimization errors that my code has?
[19:45:06] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[19:45:20] <ski> De4n_Whit3 : yes, you do have another logic error (or how you'd like to call it), causing undefined behaviour
[19:45:32] <ski> (the out-of-bounds writing)
[19:45:41] <De4n_Whit3> Oh no! How do I fix it? Is it the out of bounds one?
[19:46:04] *** Joins: crankslider (~slidercra@user/slidercrank)
[19:46:38] <ski> De4n_Whit3 : not `7'
[19:47:28] <ski> (although, i wasn't really asking for the last such value of `k', in absolute terms, but rather in relative terms, iow relative to the parameters to `merge', specifically `start',`mid',`end')
[19:47:49] <ski> (s/asking/looking/)
[19:47:57] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[19:47:57] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 240 seconds)
[19:49:20] <De4n_Whit3> *Processing but staring blankly*
[19:49:44] <ski> De4n_Whit3 : i suspect using inclusive-exclusive bounds could be easier to not confuse up here, than your current inclusive-inclusive bounds. but, as mentioned, either should work, if you're being consistent
[19:49:47] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[19:50:38] <De4n_Whit3> ski do you mean the > < and <= >= ?
[19:51:10] <ski> De4n_Whit3 : if you prefer thinking about concrete values, then consider the *last* call to `merge'. what are the parameters passed to it, in this case ? how large is `tempArr' in this case ? what is the last value of `k' used to write to `tempArr' then ?
[19:51:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[19:52:29] <ski> De4n_Whit3 : not really thinking about the comparisions, atm (though if you do decide to try inclusive-exclusive, you'll need to adapt those)
[19:53:01] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[19:53:21] <nikki3> which is a better way to keep one instance of program/daemon using file locking, locking a filedescriptor or checking lock file exists, and at the end of program deleting it...
[19:53:27] <De4n_Whit3> ski the size of k should be 7 and the size of temparray is 6 in the last once I think.
[19:54:03] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:54:03] <ski> De4n_Whit3 : and what is the number of elements in `arr' ?
[19:54:20] *** Joins: ed (~ed@175.141.150.118)
[19:54:33] <De4n_Whit3> ski that is 7
[19:55:19] <ski> so, you're copying all elements (while reordering them), from `arr', containing seven elements, to `tempArr', having space for six elements, is that right ?
[19:56:02] *** Joins: zacts (~zacts@user/zacts)
[19:58:00] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Read error: Connection reset by peer)
[19:58:08] <De4n_Whit3> ski yeeeah, temp array is always 1 size smaller than the main array.
[19:58:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:58:49] <ski> (btw, the *size* of `k' is `sizeof k' (which might perhaps be `4). presumably you meant the (last used) *value* of `k' .. which is not `7', in fact)
[19:59:02] <ski> De4n_Whit3 : so .. how are all the elements going to fit in there ?
[20:00:16] *** Joins: luizfrds (~Luiz@152.250.243.147)
[20:00:53] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[20:02:59] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:e57a:3fa3:bc32:10c)
[20:03:28] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:e57a:3fa3:bc32:10c) (Read error: Connection reset by peer)
[20:04:47] *** Joins: reset (~reset@user/reset)
[20:05:21] <De4n_Whit3> ski I am more baffled as to why my code works when it sounds like it shouldn't be. I've been changing the values in the array flipping them all over but it still sorts correctly. I think my use of <= stuffies as opposed to < stuffies helps somehow. But the temp array is indeed 1 element smaller.
[20:05:29] <De4n_Whit3> Why does this work? *stares*
[20:06:27] <De4n_Whit3> But it is 0 indexed.
[20:06:50] <ski> undefined behaviour includes sometimes accidentally behaving as intended
[20:06:54] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[20:07:29] <ski> De4n_Whit3 : do you at least see the problem i've been trying to indicate, now ?
[20:07:34] <De4n_Whit3> So the size of tempArr should be + 1
[20:07:37] <ski> yes
[20:07:38] <De4n_Whit3> Yes.
[20:07:41] <ski> your problem is that you're not being consistent, you're mixing up inclusive and exclusive
[20:07:42] <De4n_Whit3> :D
[20:08:12] <De4n_Whit3> Thank you for explaining to potato. I think I get it now!
[20:08:19] <ski> `end' is an inclusive bound, as you're using it. but putting it as the element count for `tempArr' treats it as if it was exclusive
[20:09:20] <De4n_Whit3> Yes, yes! I see it now!
[20:09:38] <De4n_Whit3> Oh my god. Thank you, thank you very much!
[20:09:38] <ski> De4n_Whit3 : oh, and the last value of `k' which is used to write to `tempArr[k]' is .. `end'. so, you're always writing to `tempArr[end]', which is just outside the space allocated to the array
[20:10:42] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[20:10:42] <ski> De4n_Whit3 : do you see how to fix this problem now ?
[20:11:05] *** Quits: ed (~ed@175.141.150.118) (Quit: Konversation terminated!)
[20:11:07] <De4n_Whit3> Let me update the code.
[20:11:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[20:11:54] <De4n_Whit3> @ski https://paste.debian.net/1230146/
[20:11:54] *** Joins: Mocky_J (~jack@27.156.201.249)
[20:13:14] *** Joins: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net)
[20:13:30] <ski> btw, just so you know, it's better to not adorn nicknames on IRC with sigils like `@', when addressing, or referring to, someone. many IRC clients will highlight/alert the user, when their nickname is mentioned as the *first* thing in a message. not as many does it, when it's mentioned later in a message (such as after an initial `@')
[20:13:45] <ski> besides, `@' already means something else, on IRC (channel operator)
[20:13:50] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[20:14:13] <De4n_Whit3> Ok ski sorry
[20:14:19] *** Parts: PaulePanter (~paul@mail.gw90.de) ()
[20:14:20] <De4n_Whit3> I did not know that!
[20:14:34] <ski> no worry, now you know :)
[20:15:01] <ski> (to address someone, you could simply mention their nickname, and e.g. a colon or a comma, and then the message)
[20:15:17] <ski> De4n_Whit3 : ok
[20:15:19] <De4n_Whit3> Oh my god when I finally get to my homework which is not even a sort... just iterate over 9 items. :')
[20:15:20] <ski> so
[20:15:45] <De4n_Whit3> Thank you ski!
[20:16:03] <ski> De4n_Whit3 : as an exercise, if you want to, you could try making a version of your code, that uses inclusive-exclusive bounds, instead of inclusive-inclusive, and see what different that makes
[20:16:25] <De4n_Whit3> ski I was actually thinking about doing that to be honest.
[20:16:28] <ski> (keep an old copy of the current version, so that you can compare the old and the new)
[20:16:49] <De4n_Whit3> Ok!
[20:19:17] *** Quits: cherrry9_ (~jan@aeil171.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[20:21:17] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 256 seconds)
[20:22:09] <ski> De4n_Whit3 : oh, and another style thing i could mention (relative to the new paste) : lines 10,32,44 have redundant brackets .. for the first one, many people prefer not writing `sizeof(*arr)', but rather `sizeof *arr' (or at least `sizeof (*arr)'), to emphasize that `sizeof' is not a function
[20:22:09] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[20:22:21] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:22:32] <ski> (i already mentioned preferring `arrayCount' or `arrayCard' to `arraySize', i think)
[20:22:39] *** Quits: eddybilley (~freddieti@77-165-15-254.fixed.kpn.net) (Ping timeout: 256 seconds)
[20:22:41] *** Quits: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13) (Quit: christoph__)
[20:22:42] *** Joins: gproto23_ (~gproto23@user/gproto23)
[20:22:42] *** Joins: Akiva (~Akiva@user/Akiva)
[20:22:53] *** Joins: boB_K7IQ (~boB_K7IQ@174-26-254-41.phnx.qwest.net)
[20:23:48] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[20:24:51] *** Joins: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13)
[20:24:57] *** Quits: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13) (Client Quit)
[20:25:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[20:25:37] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 240 seconds)
[20:25:37] *** Joins: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13)
[20:27:45] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[20:28:58] *** Parts: Mocky_J (~jack@27.156.201.249) (Leaving the Client)
[20:29:20] *** Joins: Mocky_J (~jack@27.156.201.249)
[20:29:29] *** Parts: Mocky_J (~jack@27.156.201.249) (Leaving the Client)
[20:29:51] *** Joins: hashfuncd0d (~user@162.254.115.155)
[20:31:51] *** Joins: mahmutov (~mahmutov@5.176.25.40)
[20:32:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:33:14] *** Joins: cassepipe1 (~Thunderbi@81-66-251-102.rev.numericable.fr)
[20:34:11] *** Parts: cassepipe1 (~Thunderbi@81-66-251-102.rev.numericable.fr) ()
[20:35:28] *** Joins: Mocky_J (~jack@27.156.201.249)
[20:35:41] *** Quits: Mocky_J (~jack@27.156.201.249) (Client Quit)
[20:36:57] *** Joins: bnchs__ (~bnchs@196.74.40.209)
[20:37:05] *** Joins: zacts (~zacts@user/zacts)
[20:38:28] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[20:39:13] *** Joins: bnchs___ (~bnchs@196.74.25.183)
[20:39:15] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[20:39:18] *** Quits: bnchs (~bnchs@41.250.102.1) (Ping timeout: 250 seconds)
[20:41:41] *** Quits: bnchs__ (~bnchs@196.74.40.209) (Ping timeout: 256 seconds)
[20:41:43] *** Joins: bnchs (~bnchs@41.141.231.96)
[20:43:16] *** Joins: zopsi (~zopsi@104-237-136-227.ip.linodeusercontent.com)
[20:43:37] *** Quits: bnchs___ (~bnchs@196.74.25.183) (Ping timeout: 256 seconds)
[20:44:15] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[20:44:22] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[20:44:22] *** Quits: mplio_ (~mplio@81-205-35-3.fixed.kpn.net) (Ping timeout: 260 seconds)
[20:45:11] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Client Quit)
[20:46:05] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:47:37] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[20:50:37] *** Joins: kuber (~kuber@97-113-220-65.tukw.qwest.net)
[20:51:18] *** Joins: masoudd (~masoudd@user/masoudd)
[20:52:17] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-225.cspire.com)
[20:53:30] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[20:53:42] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[20:53:48] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[20:54:19] *** Quits: cryptonector (~nico@24.28.108.183) (Remote host closed the connection)
[20:54:57] *** Quits: bnchs (~bnchs@41.141.231.96) (Ping timeout: 240 seconds)
[20:56:38] *** Quits: Klabund (~Guest62@2a0c:5a82:200:2e00:f8ea:b9d8:6940:3222) (Quit: Client closed)
[20:57:06] *** Quits: argonautx (~argonautx@i5E86707E.versanet.de) (Quit: Leaving)
[21:00:45] *** Joins: cryptonector (~nico@24.28.108.183)
[21:01:30] *** Joins: cherrry9 (~jan@aeil171.neoplus.adsl.tpnet.pl)
[21:03:35] *** Joins: quartz (~user_name@user/quartz)
[21:03:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:04:01] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:04:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:06:17] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:07:50] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:08:13] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:08:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:08:38] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:08:50] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:09:08] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[21:09:16] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Quit: cassepipe)
[21:09:56] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-225.cspire.com) (Ping timeout: 256 seconds)
[21:10:25] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[21:10:47] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Client Quit)
[21:11:54] *** Quits: Whatshisface (~jon@catv-178-48-246-132.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[21:13:06] *** Joins: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr)
[21:14:12] *** Joins: mahmutov_ (~mahmutov@37.155.78.233)
[21:14:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:14:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:14:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:14:35] *** Joins: wroathe (~wroathe@user/wroathe)
[21:14:37] *** Quits: mahmutov (~mahmutov@5.176.25.40) (Ping timeout: 240 seconds)
[21:15:55] *** Quits: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[21:18:57] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:19:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[21:20:17] *** Joins: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net)
[21:21:39] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[21:22:06] *** Joins: inlight (~thomas@82.221.128.46)
[21:22:06] *** Quits: inlight (~thomas@82.221.128.46) (Changing host)
[21:22:06] *** Joins: inlight (~thomas@user/inlight)
[21:23:03] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 256 seconds)
[21:26:20] *** Quits: cassepipe (~Thunderbi@81-66-251-102.rev.numericable.fr) (Quit: cassepipe)
[21:28:00] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:28:25] *** Joins: kish` (~aqua@user/aqua)
[21:28:41] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:29:03] *** Joins: kish` (~aqua@user/aqua)
[21:30:51] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:31:04] *** Joins: kish` (~aqua@user/aqua)
[21:31:51] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:9c8a:f1e6:cb90:4bff) (Quit: fe23)
[21:35:16] *** Quits: quartz (~user_name@user/quartz) (Quit: WeeChat 3.4)
[21:36:16] *** Joins: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:36:52] *** Joins: crashrep (~crashrep@user/crashrep)
[21:37:50] *** Joins: eeerik9 (~eeerik9@85-135-186-188.adsl.slovanet.sk)
[21:38:24] *** Joins: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:39:26] *** Quits: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Read error: Connection reset by peer)
[21:39:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:40:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[21:40:31] <roxlu> sham1: I've added `-Werror=incompatible-pointer-types` to my compiler options :)
[21:41:30] <roxlu> oh ha! that also triggers an error when I set a `rx_commmand_switch_stream*` to from a `rx_command*` .. hmm
[21:41:49] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[21:43:35] <roxlu> in this case, should I then cast it?
[21:43:35] <sham1> You can just cast them
[21:43:39] <roxlu> ok yeah
[21:43:39] <sham1> Yeah
[21:43:40] *** Joins: ed (~ed@2404:160:181:8e4d:450:7e92:651b:f90a)
[21:43:41] <roxlu> thanks
[21:44:47] <roxlu> though earlier when I asked about this I think the general approach is to -not- cast. If this is giving me warnings shouldn't I simply cast in similar situations?
[21:45:04] *** Joins: ZenWalker (~r00t@cafe/developer/ZenWalker)
[21:47:16] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:47:24] <caze> Prefer implicit conversion if possible.
[21:47:50] *** Quits: silky (~silkworks@ctrl-c.club) (Killed (NickServ (GHOST command used by silkworks)))
[21:47:51] <roxlu> I see, ok thanks
[21:48:13] <caze> Occasionally you're forced to provide an explicit conversion if the compiler doesn't know how to perform the conversion implicitly.
[21:48:24] *** Joins: Akuli (~Akuli@82-203-164-244.bb.dnainternet.fi)
[21:48:33] <caze> For example: float f = 3.14; int i = f;
[21:48:49] <caze> Casting is not necessary here, because the compiler knows how to do the conversion implicitly.
[21:49:24] <ZenWalker> warning: cast from function call of type 'float' to non-matching type 'int' [-Wbad-function-cast]
[21:49:27] <ZenWalker> '(int) floatvar' ----> this inside a line with more code shows this warning, but with 'int varint = floatvar' no, why? it makes sense?
[21:49:32] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[21:50:17] <ZenWalker> (gcc compiler)
[21:50:35] <caze> ZenWalker: Why are you casting a function?
[21:50:56] <ZenWalker> floatvar is a variable of type float
[21:51:46] <caze> ZenWalker: You're casting a function call?
[21:52:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:52:02] <ZenWalker> I mean, for example 'if ((int) floatvar == 0) ... ... ...'
[21:52:36] *** Joins: silky (~silkworks@ctrl-c.club)
[21:52:44] <caze> ZenWalker: That's probably a bad example for unrelated reasons.
[21:54:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:54:22] *** Joins: magla (~gelignite@55d46452.access.ecotel.net)
[21:55:14] <caze> ZenWalker: Can you provide an actual example?
[21:55:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:56:38] *** Joins: Alhazred (~Alhazred@86.106.74.37)
[22:00:27] *** Quits: hashfuncd0d (~user@162.254.115.155) (Ping timeout: 256 seconds)
[22:01:14] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[22:02:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:05:47] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574)
[22:05:47] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574) (Changing host)
[22:05:47] *** Joins: skapata (~Skapata@user/skapata)
[22:07:20] *** Quits: De4n_Whit3 (~De4n_Whit@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[22:07:25] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[22:10:48] *** Joins: soul-d (~uknown@user/soul-d)
[22:12:28] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:19:52] *** Joins: vandito (~vandito@131.0.224.113)
[22:20:01] *** Joins: Betal (~Betal@user/betal)
[22:22:16] *** Quits: vandito (~vandito@131.0.224.113) (Client Quit)
[22:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:25:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:25:41] *** Quits: cosimone (~user@93-34-133-254.ip49.fastwebnet.it) (Remote host closed the connection)
[22:26:02] *** Joins: vicfred (~vicfred@user/vicfred)
[22:27:38] *** Quits: kuber (~kuber@97-113-220-65.tukw.qwest.net) (Quit: leaving)
[22:28:41] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:29:05] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[22:29:09] *** Quits: eeerik9 (~eeerik9@85-135-186-188.adsl.slovanet.sk) (Quit: Lost terminal)
[22:30:15] *** Joins: hashfuncd0d (~user@162.254.115.155)
[22:30:23] *** mahmutov_ is now known as mahmutov
[22:32:20] *** Joins: diiirt6 (~diiirt@user/diiirt)
[22:33:16] *** Quits: ed (~ed@2404:160:181:8e4d:450:7e92:651b:f90a) (Remote host closed the connection)
[22:33:17] *** Joins: Atque (~Atque@user/atque)
[22:33:39] *** Joins: ed (~ed@2404:160:181:8fa4:bea2:187f:879a:b950)
[22:33:48] *** Quits: Alhazred (~Alhazred@86.106.74.37) (Ping timeout: 256 seconds)
[22:34:36] *** Quits: alch (~alch@151.34.53.176) (Read error: Connection reset by peer)
[22:34:39] *** Quits: diiirt (~diiirt@user/diiirt) (Ping timeout: 276 seconds)
[22:34:39] *** diiirt6 is now known as diiirt
[22:35:00] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[22:35:35] *** Quits: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Ping timeout: 256 seconds)
[22:38:39] *** Joins: alch (~alch@151.34.94.171)
[22:43:47] *** Joins: wyfnt (~wyfnt1232@103.214.137.74)
[22:45:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:10] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:48:03] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de)
[22:48:16] <novns> https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104288
[22:48:18] <candide> Title of novns's link: 104288 – [11/12 Regression] EVRP null pointer check removal for strcmp (and maybe others) is not flow senative
[22:48:26] <novns> RESOLVED FIXED
[22:48:27] <novns> тшсу
[22:48:31] <novns> *nice
[22:48:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:48:40] <SamuelMarks> hi
[22:49:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[22:51:50] <SamuelMarks> Given `n > 0` and an earlier-declared `char *ds` where `ds != NULL`, followed by `ds = (char *)(realloc(ds, n))` and another `ds != NULL` check, how could I get a `heap-buffer-overflow` when `strlen` or `printf`ing the `ds`?
[22:54:21] <novns> SamuelMarks, realloc was to a less size than it was before, and you have lost terminating '\0'
[22:54:44] *** Joins: aqua (~aqua@user/aqua)
[22:55:15] <SamuelMarks> Hmm
[22:55:23] *** Joins: Atque (~Atque@user/atque)
[22:55:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:55:39] <novns> so strlen tries to find '\0' and continues to read memory long after the array
[22:55:42] *** Joins: libc (~archer@user/tessio)
[22:55:46] *** Parts: libc (~archer@user/tessio) (WeeChat 3.4)
[22:55:50] *** Joins: libc (~archer@user/tessio)
[22:55:59] <SamuelMarks> yep so I need to realloc to exiting size + new size
[22:56:00] <SamuelMarks> ?
[22:56:00] <libc> does clangd became c++ only ?
[22:56:06] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:56:52] <novns> SamuelMarks, or set '\0' yourself properly if you make your string lesser
[22:57:11] <SamuelMarks> Nah in this scenario I want to read more ok let me just double check realloc
[22:57:27] <SamuelMarks> realloc changes the size of the object pointed to by p to size. The contents will be
[22:57:27] <SamuelMarks> unchanged up to the minimum of the old and new sizes. If the new size is larger, the
[22:57:27] <SamuelMarks> new space is uninitialized. realloc returns a pointer to the new space, or NULL if the
[22:57:30] <SamuelMarks> request cannot be satisfied, in which case *p is unchanged.
[22:57:40] <SamuelMarks> ah darn that was not meant to spam the channel :(
[22:58:29] <novns> SamuelMarks, if your string had no proper terminating 0 before reallocation, that's some wrong code you use
[22:59:06] <novns> an if it has and you make it shorter - set new terminating 0 yourself
[23:00:21] <SamuelMarks> It's a bit of a hack but my full code is only 176 lines: https://github.com/offscale/cauthflow/blob/44581e2/cauthflow/tiny_web_server.c#L120-L287 - it's breaking on `strcat(incoming_datastream, buffer);`
[23:00:32] <novns> and if you forget - strlen and friends will choke with your never finished string
[23:01:16] <SamuelMarks> I think I was just printing to try and debug what went wrong with my `strcat` when I got the other issues, I set the NUL later
[23:01:39] <SamuelMarks> But yeah you're right I can't print to debug earlier. Also should I be using strcat or memcpy or something else?
[23:03:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[23:04:50] <inlight> SamuelMarks: does your web server scale well?
[23:05:42] <SamuelMarks> inlight - It's meant to run for a few seconds whilst the user completes an oauth2 flow in the browser
[23:06:19] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[23:06:57] <SamuelMarks> Trying to be as concise, low-level, and portable as possible in that implementation. Scaling isn't important.
[23:07:30] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[23:10:16] *** Quits: nikki3 (~anagami@87.247.123.112) (Quit: Leaving)
[23:10:18] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:10:59] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:12:48] <byteskeptical> .?7$AnsH1GxL~L!x9+&{H1}T7|_W_sqH/77
[23:13:02] <sham1> byteskeptical: wrong window
[23:13:07] <byteskeptical> oops lol sorry
[23:13:27] <byteskeptical> just dropped my headphones on my keyboard apologies
[23:13:44] <SamuelMarks> lol thought it was your password
[23:13:53] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[23:14:14] <sham1> Yeah, it does look like a password
[23:14:17] <byteskeptical> welp that would have been more unforunate
[23:14:19] <ChoHag> Good password though.
[23:14:23] <ChoHag> Or at least it was.
[23:14:34] <bkhl> Yeah, just hard to drop the headphones the right way each time.
[23:15:15] <byteskeptical> well i think that was my paste buffer but not a cred
[23:15:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[23:15:44] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:16:21] *** Joins: cosimone (~user@93-34-133-254.ip49.fastwebnet.it)
[23:17:13] <Earnestly> Quickly add it to hibp
[23:18:07] <byteskeptical> just pipe openssl rand to hibp
[23:18:12] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[23:19:21] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:33] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:24:36] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:25:04] *** Joins: crashrep (~crashrep@user/crashrep)
[23:26:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:26:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:26:13] *** Joins: wroathe (~wroathe@user/wroathe)
[23:31:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:31:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:33:30] *** Quits: christoph__ (~christoph@2001:638:602:d021:f2c1:2bb6:c93e:6f13) (Quit: christoph__)
[23:34:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[23:34:22] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:1d81:9f23:5ac8:407a) (Ping timeout: 250 seconds)
[23:35:14] *** Quits: libc (~archer@user/tessio) (Ping timeout: 250 seconds)
[23:35:23] *** Joins: voltron (~junaid@ip4d158509.dynamic.kabel-deutschland.de)
[23:36:35] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[23:36:48] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:37:23] <inlight> SamuelMarks: qill it handle when there will be a lot of simultanous connections
[23:37:39] <SamuelMarks> inlight - there will never be that
[23:37:45] <SamuelMarks> I use civitweb for my server
[23:38:06] <inlight> SamuelMarks: where do you host?
[23:38:09] <SamuelMarks> here is just the simplest possible socket server I could envision, that is meant to stay online for under a minute, and server on POSIX and Windows
[23:38:18] <SamuelMarks> inlight - locally on the client's machine
[23:38:26] *** Quits: geeknix (~pi@2001:e68:5432:46d8:39f7:e80b:25f7:e9cb) (Ping timeout: 252 seconds)
[23:38:35] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:38:35] <inlight> do you run it 24x7, which machine?
[23:38:39] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[23:38:44] <inlight> civitweb is for embedded system, is it rspi4?
[23:39:16] <SamuelMarks> nah I just chose it as the most portable library that is actually reliable (unlike my simple one)
[23:39:39] <SamuelMarks> inlight - no the server runs only when the auth flow is needed
[23:39:46] *** Joins: Goblins (~mz@12.231.191.170)
[23:39:46] <SamuelMarks> *my server, civitweb runs all the time
[23:39:57] <ZenWalker> https://gitlab.gnome.org/World/Phosh/phosh/-/blob/main/src/monitor/head.c#L601
[23:40:01] <ZenWalker> caze: see ^^^
[23:40:24] <inlight> SamuelMarks: which machine you are hosting in?
[23:40:33] <ZenWalker> warning: cast from function call of type 'float' to non-matching type 'int' [-Wbad-function-cast]
[23:40:39] <inlight> you just it only runs when auth flow is needed, now you say it runs all the time?
[23:40:39] <ZenWalker> the line shows this warning twice ^^
[23:40:44] <SamuelMarks> inlight - Currently macOS, Windows, Linux. Later: FreeBSD, OpenBSD, SunOS… and maybe iOS and Android
[23:41:01] <inlight> no, i mean which physical machine
[23:41:06] <inlight> your server in running on
[23:41:12] <inlight> device name
[23:41:16] <SamuelMarks> novns - Is this better logic than mine? - if (bytes > 0) { response_length += bytes; response = realloc(response, response_length + 1); if (response) {   memcpy(response + response_length - bytes, buffer, bytes); } } } while (bytes > 0);
[23:41:21] * SamuelMarks is going to test with that next
[23:41:55] <inlight> realloc and memcpy is overhead
[23:42:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 260 seconds)
[23:42:14] <inlight> realloc does a lot of things uth
[23:42:50] <inlight> SamuelMarks: are you running on laptop?
[23:42:50] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[23:42:53] <inlight> the server
[23:43:38] <novns> SamuelMarks, I'm not sure what you are trying to do
[23:44:23] <inlight> mmh
[23:44:52] <novns> SamuelMarks, it looks like a lot of weird code
[23:46:01] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Remote host closed the connection)
[23:46:31] <novns> and some while() that should have been started with do {} but never was
[23:46:54] *** Joins: plastico (~plastico@neomutt/plastico)
[23:47:13] <inlight> WORLD WAR 3
[23:47:20] <inlight> if russia invades ukraine
[23:47:26] <inlight> we all are going to die
[23:47:27] <inlight> help
[23:47:31] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[23:47:40] <gl> ,notc
[23:47:40] <candide> That is not a C issue. This channel exists for discussion of the Standard C Language itself; not tools such as Makefiles, IDEs, compilers (see ##workingset for these things) or random libraries (including OS-specific ones such as POSIX or Windows; see ##posix or #winapi).
[23:48:52] <SamuelMarks> novns - I'm trying to write the simplest possible web server that runs locally and takes the query params from a GET request. This code used to work so I'm trying to figure out what broke it. - Very happy if it can be simplified :)
[23:48:59] <novns> SamuelMarks, I don't see any logic in your examples, it's not clear what's the purpose
[23:49:34] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:51:02] <SamuelMarks> novns - It runs a simple web server (cross-platform with low level socket programming)
[23:51:16] *** Joins: christoph__ (~christoph@ip1f12fa3f.dynamic.kabel-deutschland.de)
[23:51:20] *** Joins: geeknix (~pi@2001:e68:5432:ee11:f781:3a04:b549:b877)
[23:52:10] <novns> SamuelMarks, and what for you do realloc?
[23:52:35] <SamuelMarks> Happy to rewrite it to two functions, one to run the server and read the response into a realloc'd char*, the other to parse that response
[23:53:19] <novns> so you just forget to add terminating '\0' to your strings
[23:53:21] <SamuelMarks> novns - I am not sure how large the response is so I use realloc to enable any size-less-than-memory to fit
[23:53:38] <inlight> SamuelMarks: you didn't answere yet
[23:53:51] <inlight> tell me, on which device are you hosting your server?
[23:53:51] <SamuelMarks> I think my `if ( bytes < sizeof(buffer)` is also wrong novns
[23:53:52] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[23:54:10] <SamuelMarks> inlight - the socket server will be running on macOS, Windows, Linux. Later: FreeBSD, OpenBSD, SunOS… and maybe iOS and Android
[23:54:24] <inlight> mac0s, windows, linux is not a device
[23:54:28] <inlight> is is operating system
[23:54:40] <inlight> tell me, on which device are you hosting your server?
[23:55:05] <SamuelMarks> inlight - mobiles, laptops, desktops, anything running a window manager - not headless mainframes
[23:55:24] <inlight> where areyou running your current server?
[23:55:35] <SamuelMarks> on my laptop
[23:55:45] *** Joins: System_Error (~SystemErr@user/systemerror)
[23:56:07] *** Parts: voltron (~junaid@ip4d158509.dynamic.kabel-deutschland.de) ()
[23:56:11] <inlight> does it run 27x7
[23:56:21] <SamuelMarks> no
[23:56:35] <SamuelMarks> impossibru
[23:57:23] <nomagno> 27 hours a day is hard
[23:57:53] <twinkiecream> just divide by zero first
[23:59:36] *** Quits: inlight (~thomas@user/inlight) (Quit: WeeChat 3.3)
