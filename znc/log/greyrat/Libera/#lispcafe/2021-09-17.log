[00:13:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:20:31] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:33:47] <gilberth> Hey! I can downgrade to macOS 10.8 -- didn't know the machine is that olde.
[00:45:35] *** Joins: molson__ (~molson@2001-48F8-704A-CA1-0-0-75F-1030-static.midco.net)
[00:49:04] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-102A-static.midco.net) (Ping timeout: 268 seconds)
[00:57:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:01:13] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:34:41] *** Joins: selwyn (~selwyn@user/selwyn)
[01:40:26] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[01:40:50] *** Joins: selwyn (~selwyn@user/selwyn)
[01:57:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:01:32] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:09:58] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[02:11:51] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[02:23:10] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
[02:25:37] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[02:25:42] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:29:05] *** Joins: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net)
[02:32:24] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:43:27] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[02:55:09] <selwyn> https://www.bbc.co.uk/news/uk-58587521
[02:55:10] -ixelp- Sir Clive Sinclair: Computing pioneer dies aged 81 - BBC News
[02:55:31] <selwyn> zx spectrum guy
[03:00:40] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[03:06:47] *** Joins: dra (~dra@2a04:4540:6404:1900:3904:4775:d71b:22ab)
[03:06:53] <dra> Hello!
[03:18:46] <lotuseater> hi dra
[03:19:02] <dra> What's new in Lisp land?
[03:20:48] *** Quits: copec (~copec@schrodbox.unaen.org) (Remote host closed the connection)
[03:21:09] *** Joins: copec (~copec@schrodbox.unaen.org)
[03:25:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:26:12] <moon-child> 'Use of eBPF in cpu scheduler'
[03:26:14] <moon-child> man, it's happening
[03:26:18] <moon-child> linux is turning into an sasos
[03:26:43] <hayley> (macroexpand 'sasos)
[03:26:56] *** Quits: mortemeur (~mortemeur@pool-173-76-107-201.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[03:28:45] <moon-child> single address space operating system
[03:29:31] <hayley> Excellent.
[03:29:43] <moon-child> hayley: it's a symbol macro, macroexpand does nothing to it
[03:29:49] <hayley> https://i.redd.it/corl9hctgny61.png
[03:30:21] <hayley> (define-symbol-macro x y) (macroexpand 'x) ⇒ Y, T
[03:31:35] <moon-child> oh, yeah, duh.  macroexpand can't pick up lexical stuff
[03:32:07] <lotuseater> then maybe abbreviationexpand :)
[03:32:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:38:24] <hayley> https://www.youtube.com/watch?v=QTiAWZ1YfzI
[03:38:25] -ixelp- THEY HAVE PLAYED US PROGRAMMERS FOR ABSOLUTE FOOLS - YouTube
[03:40:42] *** Quits: dra (~dra@2a04:4540:6404:1900:3904:4775:d71b:22ab) (Ping timeout: 260 seconds)
[03:43:03] <moon-child> hey, c++ is legitimate http://harmful.cat-v.org/software/c++/I_did_it_for_you_all
[03:43:05] -ixelp- Bjarne Stroustrup: "I Did It For You All..."
[03:46:35] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[03:47:03] <hayley> https://www.gnu.org/fun/jokes/unix-hoax.html
[03:47:04] -ixelp- Unix-hoax - GNU Project - Free Software Foundation
[03:47:12] <dave0> maw
[03:47:37] <hayley> maw
[03:47:45] <dave0> hi hayley 
[03:53:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:03:53] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:04:21] <hayley> https://www.youtube.com/watch?v=uUHb3cBvWMY
[04:04:21] -ixelp- Atom Heart Mother Suite - YouTube
[04:06:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Client Quit)
[05:23:16] * hayley watches the lecturer write out a three line Python program rather than use the REPL.
[05:31:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[05:33:08] *** Quits: random-nick (~random-ni@87.116.176.198) (Ping timeout: 268 seconds)
[05:38:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:38:55] <White_Flame> hayley: granted, the python repl does suck and there's too much you can't do with it
[06:11:14] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:12:54] <moon-child> '“simplicity as narcissism” as a form of reductio to “only the shit I currently care about” Simplicity is Systemic, often a retrocomputing pipedream'
[06:13:32] <hayley> Average Unix "simplicity" fan vs average Self power of simplicity enjoyer
[06:18:53] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[06:48:21] <recordgroovy> I use my personal time to make sure others don't fall for the prototyping OOP trap. You can say I'm Selfless.
[06:49:12] <hayley> I have set my affairs on my Self, all names are nothing to me.
[06:49:51] <recordgroovy> What's a good name for a programming language that's like Self, but not too much like Self?
[06:50:27] <recordgroovy> My money is on Selfish
[06:53:19] <hayley> https://ourself.io/
[06:53:20] -ixelp- ourself.io
[07:05:16] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[07:06:37] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[07:09:31] *** Joins: lad (~lad@user/lad)
[07:11:48] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:13:23] <dave0> re maw
[07:52:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[07:52:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[07:56:25] *** Quits: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se) (Ping timeout: 252 seconds)
[08:06:39] <hayley> g'day mate
[08:09:19] <clothespin> hello
[08:10:37] <hayley> https://www.youtube.com/watch?v=GM9oIMgmQhU
[08:10:38] -ixelp- This Song - YouTube
[08:16:33] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:28:58] *** Joins: semz (~none@user/semz)
[09:28:37] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:30:33] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:32:00] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[09:33:51] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:53:17] <hayley> https://twitter.com/FemboyRapping/status/1438570974132281350
[10:58:09] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[10:59:27] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[11:02:23] <hayley> https://www.youtube.com/watch?v=e-cAc1AwfAw
[11:02:23] -ixelp- Rich Folks Hoax - YouTube
[11:03:47] *** Joins: shka (~herr@109.231.62.239)
[11:19:44] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:22:14] <pjb> hayley: moon-child: and they did it again with C++ !
[11:24:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[11:24:41] *** Quits: santiagopim (~user@84.78.249.190) (Remote host closed the connection)
[11:26:25] <pjb> moon-child: macroexpand can pick up lexical stuff: (defmacro local-macroexpand (&environment env form) `(macroexpand ',form ',env)) (symbol-macrolet ((foo x)) (local-macroexpand foo)) #| --> x ; t |# 
[11:42:22] *** Joins: OlCe (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr)
[12:04:13] *** Joins: Duuqnd (~Duuqnd@185.201.174.78)
[12:25:23] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[12:25:33] *** Joins: selwyn (~selwyn@user/selwyn)
[12:35:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:39:18] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:44:02] <hayley> https://github.com/MITDDC/clu-1976-1989
[12:44:02] -ixelp- GitHub - MITDDC/clu-1976-1989: A set of files that can be used to create a working version of an early version of the CL [...]
[12:53:54] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[13:19:53] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[13:24:19] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[13:24:27] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Remote host closed the connection)
[13:24:49] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:29:40] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[13:30:32] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[13:53:18] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:03:59] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:04:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[14:04:29] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:08:44] <dave0> maw
[14:12:39] <selwyn> hi
[14:13:58] <hayley> https://www.youtube.com/watch?v=6SvdtdWJvow
[14:13:59] -ixelp- Pink Floyd - Have A Cigar (Alternative Version) - YouTube
[14:14:17] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[14:17:50] <Gnuxie> hiya
[14:19:46] <dave0> hey selwyn, hayley, Gnuxie 
[14:22:01] <selwyn> https://twitter.com/thetimes/status/1438548409636556800?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Etweet
[14:22:05] <hayley> Heyo
[14:22:27] <selwyn> return to farthings and fathoms
[14:23:12] <Gnuxie> fuck off
[14:23:36] <Gnuxie> i thought people were joking?
[14:25:16] <selwyn> it´s annoying
[14:25:25] <Gnuxie> it's not annoying 
[14:25:32] <selwyn> i didn´t learn it at school
[14:25:57] <Gnuxie> it's an appeal to dying pensioners or something
[14:25:59] <selwyn> like everyone else under 55
[14:26:07] <Gnuxie> yeah
[14:28:23] <selwyn> huh, burmese speakers usually don´t use unicode
[14:28:34] <selwyn> i thought shift-jis was the only big non-unicode holdout
[14:40:53] <gilberth> Good morning #lispcafe!
[14:40:59] <selwyn> good morning gilberth
[14:41:11] <dave0> maw gilberth 
[14:41:12] <selwyn> and burma is also an imperial measurements enjoyer lol
[14:41:26] <dave0> the metric system is the tool of the devil!
[14:42:59] <selwyn> somewhat surprised that australia didn´t keep imperial
[14:45:06] <dave0> everything else is backwards here so yeah why not :-)
[14:46:55] <gilberth> Is that meant to be serious? /me checks his calendar to verify it's not April's fool day.
[14:47:36] <dave0> :-p
[14:49:17] <gilberth> I could cope with those funny units of length, as that are just multipliers. What I really cannot convert is Fahrenheit.
[14:50:09] <gilberth> And PM/AM, I just cannot remember what 12:00 AM or PM is.
[14:53:03] <dave0> they have irc bots for farenheit
[14:53:12] <dave0> i can't tell time or read maps
[14:55:04] <selwyn> gilberth: 0 = really cold 100 = really hot
[14:55:24] <selwyn> it genuinely is that simple
[14:55:42] <gilberth> And can read maps as long as north is pointing up. Hence navigation systems that try to be helpful and turn the map into the direction you're heading just confuse me.
[14:56:18] <gilberth> selwyn: Yep, that's how it is defined, isn't it?
[15:14:45] *** Quits: Duuqnd (~Duuqnd@185.201.174.78) (Quit: Duuqnd)
[15:15:50] *** Joins: Duuqnd[m]1 (~duuqnd@2001:470:69fc:105::e9c0)
[15:17:45] *** Joins: random-nick (~random-ni@87.116.183.203)
[15:18:06] <selwyn> gilberth: this is southern hemisphere erasure
[15:18:23] <hayley> https://groups.google.com/g/comp.lang.functional/c/xLNt2BU34SA/m/IiAMlVFT22gJ "Two words: Lisp machine."
[15:18:24] -ixelp- Ousterhout and Tcl lost the plot with latest paper
[15:20:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:20:24] <Gnuxie> LwL
[15:24:48] <hayley> gilberth: "The lisp machines had fabulous email systems, and Symbolics went to a great deal of trouble to make TeX run on its Lisp Machine."
[15:25:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[15:26:29] <Duuqnd[m]1> Wait, TeX ran on Genera?!
[15:26:45] <hayley> Yes.
[15:26:50] <Duuqnd[m]1> I knew they made SPICE work but I had no idea that they did it with TeX as well
[15:27:30] <hayley> That Usenet thread has everything you ever wanted to know about anything, really.
[15:27:37] <Duuqnd[m]1> Admittedly I only knew about SPICE on Genera because of that Symbolics Joshua video
[15:27:58] <hayley> Someone else admits to writing a "Lisp" to silicon compiler (in pure functional style, while running pretty fast), Baker admits Symbolics failed to get a single-chip Lisp CPU on the market in time...
[15:28:45] <hayley> "The few languages that do manage to leave the premordial slime and move onto dry land (Lisp, Prolog, Smalltalk, ML, etc.) are laughed at by those still in the slime for sloughing off their specialized libraries, even though by doing so, they can now do all of the specialized things from not only their original area of expertise, but also many other areas, as well."
[15:29:33] <hayley> "LispM's were not secure - the whole system, including the operating system kernel, ran in a single giant address space." "A better way of saying this is that LispM's are much _more_ secure, because every item has its hardware datatype which is religiously checked on every access.  LispM's weren't the machines crashing when those internet worm attacks were going on!"
[15:30:42] <Duuqnd[m]1> When I played around with the Genera emulator the only problems I ever really had were Unix's fault and I think that says a lot about how well made Genera was.
[15:31:30] <hayley> Baker also has a go at Stroupsoup's little "C++ more productive than C" test, arguing that people will placebo themselves into making any "productivity enhancer" work.
[15:32:23] <gilberth> I wonder what the trouble with TeX was? It's straight forward, really.
[15:32:54] <hayley> "I know of programs that run a hundred to a thousand times faster in some OODBs than in most commercial database systems, and I know *why*.  For some things, a relational (value-oriented) language works great, because the limitations of the model make life easy for query optimizers.  In other cases, there are awkward problems that no query optimizer in the world can optimize much, and using a relational database where you need pointer semantics
[15:32:55] <hayley> just adds orders of magnitude of overhead." - Paul Wilson
[15:37:40] <hayley> "This circular argument is essentially the root of this 'Show me the STL' thread.  Who cares about STL?  If objectified, iteratified loops are the best that OO can do, then stop wasting my time.  This is one h*ll [Ed: yes, he did censor hell] of a lot of machinery for such a small payback." - Henry Baker
[15:41:23] <hayley> https://groups.google.com/g/comp.lang.functional/c/xLNt2BU34SA/m/IiAMlVFT22gJ Here's the bit where Baker takes the piss out of Stroustrup.
[15:41:25] -ixelp- Ousterhout and Tcl lost the plot with latest paper
[15:41:42] <gilberth> With time the world will rediscover Lisp, it perhaps won't be called that way. But for this to happen the irrational fear of a dynamic system must vanish. This is a corollary of the mix-up of the orthogonal concepts weak/strong versus dynamic/static typing. And the realization that a run time error won't make the system just doing random things. On top of that people still try to solve the halting problem.
[15:42:14] <hayley> Ahem, here https://groups.google.com/g/comp.lang.functional/c/xLNt2BU34SA/m/DfH87JKCpX8J
[15:42:16] -ixelp- Ousterhout and Tcl lost the plot with latest paper
[15:44:59] <dave0> chuck norris halts
[15:45:49] <Duuqnd[m]1> I worked professionally (well, a one month summer job, but still) with a C++ codebase and one rule was that dynamic memory allocation (outside of startup) was prohibited because if memory ran out due to memory fragmentation the system would crash, which would be catastrophic. This was a realistic scenario since it's a small embedded computer meant to be put in a satellite, but as I read this I kept thinking how the problem would be
[15:45:49] <Duuqnd[m]1> non-existent in Lisp.
[15:47:30] <selwyn> > h*ll
[15:47:36] <selwyn> lol
[15:47:56] <hayley> "Show us the code." - Henry Baker, May 1997 - Me, June 2020
[15:48:49] <mfiano> Something something DS1 RAX
[15:49:10] <Duuqnd[m]1> There was also the fact that the unit tests didn't work on Linux, but the project was a nightmare to compile on Windows.
[15:50:23] <Duuqnd[m]1> What could be more fun than unit tests segfaulting before you've even touched them?
[15:51:05] <hayley> Oh, I missed that Fare is in there too. "Haha, you made my day, sucker!"
[15:53:29] <gilberth> To be fair in an unattended embedded system you really want to either avoid an out-of-memory situation at all or have infrastructure to recover from that. This also includes the stack.
[15:54:40] <Duuqnd[m]1> With satellite on-board computers the standard way to recover from errors like these is to reboot (luckily pretty fast from what I've seen)
[15:54:50] <Duuqnd[m]1> (the standard way as far as I know)
[15:57:11] <gilberth> One strategy I also have seen is to reboot every once in a while just in case.
[15:57:19] <Duuqnd[m]1> The code I've seen is pretty good for C++, though it has its fair share of jank
[15:58:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:58:12] <hayley> "Erlang on a satellite"
[15:58:35] <Duuqnd[m]1> A firmware upload involved connecting gdb to the running system and using it to load a program that contains the firmware and flashes it. You know, instead of just flashing the firmware.
[15:58:39] <selwyn> hm
[15:58:53] <Duuqnd[m]1> This also means that if firmware is flashed that breaks gdb support then you'll probably have to call the manufacturer
[15:59:02] <selwyn> i wonder if you have to do fault-tolerant computing in space
[15:59:09] <selwyn> over and above using error corrected memory
[15:59:29] <Duuqnd[m]1> It's sorta fault-tolerant, but most of it is just good hardware and lots of testing
[15:59:57] <Duuqnd[m]1> I can't speak for other companies of course, but that's how it was where I worked
[16:00:28] <hayley> "I beg to disagree violently!  Basic's image suffers because of brain-damaged conceptions.  The original Basic was: [...] slow as sh*t (even compared with interpreted Lisp). I.e., original Basic was complete crap.  Lisp had the full power of the lambda calculus from day 1. 'Visual' Basic isn't 'Basic' at all, it is an interpreted form of Ada/Modula/Eiffel.  It is still slow as sh*t."
[16:07:18] <hayley> "Viewed in this way, calling everything which is not a scripting language for a "systems language" is also ridiculous. I mean a "systems language" must be one used for writing operating systems. If scripting languages are used to glue things together what are the things that I am gluing together to be written in? Application languages?" -- Robert Virding
[16:08:28] <dave0> i like forth
[16:10:09] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[16:17:38] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[16:32:22] *** Joins: [X-Scale] (~ARM@31.22.160.28)
[16:32:34] *** Quits: X-Scale (~ARM@83.223.226.16) (Ping timeout: 260 seconds)
[16:33:29] *** [X-Scale] is now known as X-Scale
[16:39:44] <shka> and i like pancakes
[16:39:49] * shka *shrugs*
[16:51:36] <dave0> hayley: https://news.ycombinator.com/item?id=28562874
[16:51:38] -ixelp- Shenandoah in OpenJDK 17: Sub-millisecond GC pauses | Hacker News
[16:51:41] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[16:52:30] <hayley> I can't tell if they're playing catchup with ZGC, but Shenandoah 1 at least didn't have the Pauseless/ZGC/Appel/etc "trap storms" problem.
[16:52:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[16:53:38] <hayley> "Everyone else: pauses are bad, we can’t have garbage collection. Java: pauses are bad, let’s make the garbage collector better." More or less.
[16:58:24] <hayley> Still, can they go for on the fly marking (wherein there's no global pause, every thread just has to eventually mark themself at some point)? Or is that already done and the pause measurement is just everything happening at the same time?
[17:01:33] *** Joins: selwyn (~selwyn@user/selwyn)
[17:17:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:19:49] <Duuqnd[m]1> There's a person in that HN thread who keeps insisting that GC is completely unnecessary that they are "Not using GC. Not using reference counting. Not using manual memory management." and I honestly can't tell if they're trolling or not
[17:20:41] <hayley> I assume they just don't allocate. Which is doable, but means you are probably doing boring things.
[17:21:07] <Duuqnd[m]1> They claim to be using the awesome memory management system of "}"
[17:21:19] <Duuqnd[m]1> So I think they just don't know what they're talking about
[17:21:42] <hayley> Either C++ or Rust RAII, aka stack allocation.
[17:21:58] <Duuqnd[m]1> Those are the two languages they said they use
[17:22:23] <hayley> (Some containers do RAII but allocate on the heap, e.g. map, string, but I assume that is not the case here.)
[17:22:37] <Duuqnd[m]1> Also, "Thanks, I still prefer exactly-zero ms pauses"
[17:22:55] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[17:23:49] <hayley> I hope they don't use any operating system then.
[17:25:00] <hayley> Unrelated: they're putting 2000 cops in the city to make sure you're not carrying guns, to send you home if they think you're a terrorist, and to fine you if you don't have ID on you. Fun.
[17:26:47] <hayley> There are also refcounting fans too.
[17:27:09] <Duuqnd[m]1> The police or in the HN thread?
[17:27:16] <hayley> The HN thread.
[17:28:13] <hayley> Refcounting gives you a lot more ALU operations, and does a lot of increments/decrements you were doing before. Oh, and any optimisations (e.g. deferred reference counting, trial deletion) make it not immediately free things, so kiss that "benefit" goodbye.
[17:29:51] <hayley> "I optimize these days mostly by deleting lock-free apparatus" I wonder how he'd react if we said that locks are made from lock-free compare and swap instructions.
[17:31:21] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:35b4:f9f2:852b:7b98)
[17:51:54] * hayley uploaded an image: (58KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/qWGwjeodzmXrBCGvKmoINocg/pauseless.png >
[17:52:15] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:55:39] <mfiano> Put the pause back in pauseless with some jitter
[17:57:19] <hayley> Just informed that OS jitter exists smh my head
[17:58:13] <mfiano> redundancy detected
[18:00:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[18:10:14] <hayley> Dear rustaceans, you still use an OS with OS jitter, curious
[18:12:36] <selwyn> https://media.discordapp.net/attachments/718431389942415360/888334019819872286/media2FE_dO3WiVcAEzVCi.png
[18:12:42] <selwyn> curious
[18:33:14] * hayley uploaded an image: (100KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BMrUxdqDSLPwvRcNWohEbcGr/uniform-reference-semantics.jpeg >
[18:35:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:47:07] <shka> i've found nice download manager for linux
[18:47:11] <shka> and windows i guess
[18:48:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[18:52:39] * selwyn flashbacks downloading jdk 1.4.2 over 56k dialup
[18:52:49] <selwyn> download manager useful for that
[18:54:25] <selwyn> til nuclear power plants use co2 as a coolant
[19:00:14] <shka> selwyn: downloading videos from youtube is like that as well
[19:00:59] <selwyn> how long a video are you trying to download lol
[19:09:59] <shka> 2 hours long
[19:10:10] <selwyn> which one
[19:10:13] <shka> firedm uses the chunked download
[19:10:19] <shka> https://www.youtube.com/watch?v=MGuge4H_iyQ
[19:10:20] -ixelp- [ENG] AfreecaTV StarLeague(ASL) S12 Ro.24 Group E (Tastosis) - YouTube
[19:10:46] <lotuseater> and what is with youtube-dl?
[19:12:13] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:22:02] *** Joins: christophergray (~christoph@190.148.53.200)
[19:25:40] <shka> lotuseater: youtube-dl download with a single connection
[19:26:48] <lotuseater> works totally fine for me
[19:29:31] *** Quits: christophergray (~christoph@190.148.53.200) (Quit: WeeChat 3.2.1)
[19:37:13] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:24:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:35:19] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[21:05:06] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:35b4:f9f2:852b:7b98) (Read error: Connection reset by peer)
[21:43:09] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[21:44:32] *** Joins: aeth (~aeth@user/aeth)
[21:59:38] <shka> so as i a little rebel that i am i am using the forbidden language of common lisp in my company for another project
[21:59:41] <shka> and I tell ya
[21:59:54] <shka> the most useful feature of common lisp in ETL are restarts
[22:00:01] <shka> which is perhaps surprising
[22:00:03] <shka> but true
[22:07:19] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[22:33:08] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Quit: bibi!)
[22:40:13] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[22:56:20] <shka> also 
[22:56:44] <shka> I finally managed to get some use from duckypad in lisp
[22:57:39] <shka> i tied (clouseau:inspect *) to a shortcut :D
[23:02:51] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[23:03:38] *** Joins: minion (~minion@common-lisp.net)
[23:43:20] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:47:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
