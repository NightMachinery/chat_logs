[00:01:14] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 250 seconds)
[00:07:18] *** Joins: CaCode (~CaCode@user/cacode)
[00:08:26] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:09:14] *** Quits: traxex (traxex@user/traxex) (Quit: Lost terminal)
[00:11:54] <rpav> name it fast_matrix and everyone will be copying it just to have it
[00:14:50] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:a1b8:e017:b23d:d9e6)
[00:14:50] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:a1b8:e017:b23d:d9e6) (Changing host)
[00:14:50] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:17:24] *** Quits: sbrothy (~sbrothy@192038134048.mbb.telenor.dk) (Read error: Connection reset by peer)
[00:18:40] *** Joins: sbrothy (~sbrothy@192038134048.mbb.telenor.dk)
[00:18:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:20:08] <PJBoy> we didn't rename it, we just added a space
[00:21:11] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[00:21:39] <ashafq> Alipha: thanks a lot
[00:21:46] <ashafq> Alipha: looks good üòä
[00:22:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:22:19] <Alipha> PJBoy: sshhhh
[00:23:01] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:24:50] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[00:25:11] <rpav> "strncasecmp" (quoted, in the 3rd try for the query) ... <google> including results for "strcasecmp"
[00:25:18] <rpav> i really hate google
[00:25:30] <rpav> not because they're evil, just because they suck
[00:27:57] <kalven> https://man7.org/linux/man-pages/man3/strcasecmp.3.html - this is the first hit for me
[00:34:12] <rpav> the quoted word alone wasn't the full query; changing terms because it thinks i typed the wrong thing with no option to disable is the epitome of "smart" tech
[00:35:22] <kalven> okay, not sure what you're whining about since the first hit is the manpage for strncasecmp
[00:37:54] <Alipha> rpav wasn't searching simply for "strncasecmp"
[00:40:14] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[00:40:40] *** Quits: sbrothy (~sbrothy@192038134048.mbb.telenor.dk) (Ping timeout: 250 seconds)
[00:45:50] *** Parts: jackk (~jackiii@93-44-188-69.ip98.fastwebnet.it) (Leaving)
[00:46:12] *** Quits: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:a1cd:88ef:b20f:80c5) (Quit: Konversation terminated!)
[00:46:39] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:49:48] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:50:19] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[00:51:14] *** Joins: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:a66e:776f:93ba:e23d)
[00:53:59] *** Quits: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:a66e:776f:93ba:e23d) (Client Quit)
[00:55:08] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[00:56:46] *** Joins: Kakurady (~nekoyasha@2607:f2c0:eac8:3297:b3c8:85d0:c3eb:15a8)
[01:10:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:15:45] <johnny> rpav, did you use the verbatim option?
[01:16:04] <johnny> the only annoyance with that is that you can't filter results by date if you do that :(
[01:18:18] <rpav> johnny: oh did they add something for that?
[01:18:30] <rpav> i see tools -> verbatim now
[01:18:54] <johnny> it's been there a long time. it's not perfect either tho
[01:18:56] <rpav> üëç i'll try and see if that fixes things in general
[01:19:09] <rpav> hrm then maybe it's the thing i tried awhile back
[01:19:16] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:19:30] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:19:33] <johnny> i hope github adds C/C++ support for the new code searching tooling
[01:19:46] <johnny> it' so much nicer to search code in the new code search beta
[01:20:00] <johnny> github was worse than google actually!
[01:20:06] <rpav> did they write something or is it a 3rd party tool
[01:20:12] <johnny> they wrote something
[01:20:20] <rpav> yeah that's what's terrible; as bad as google is for things it's still better than everything eles
[01:20:27] <rpav> interesting
[01:21:05] <johnny> https://github.blog/2021-12-08-improving-github-code-search/
[01:21:12] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:21:23] <rpav> i'd be happy if you could just run ag on a repo ;)
[01:21:36] <johnny> close enough "Search for an exact string, with support for substring matches and special characters, or use regular expressions (enclosed in / separators)."
[01:21:38] <rpav> although i guess kinda that's what it does, but it's slow and hard to browse
[01:22:05] <johnny> and then of course filter by path and lang
[01:22:13] <johnny> so yeah. close enough
[01:22:32] <johnny> i never found it slow. i just always found it irrelevant!
[01:23:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[01:23:37] <johnny> before that, i used symbolhound
[01:23:59] <rpav> i'm not sure i've searched code on github recently enough to even remember
[01:24:01] <johnny> it didn't have th entire github data as corpus, but i was able to find out how to use some functions from it at least
[01:24:03] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[01:24:12] <johnny> probably because of how terrible it was when you tried once :)
[01:26:54] <rpav> yeah the thought of searching code on github is a vague ick so no doubt
[01:27:59] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[01:36:58] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[01:41:30] <BurumaSerafuku> did you get?
[01:41:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:44] *** ChanServ sets mode: +v npaperbot
[01:48:21] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:55:02] <rpav> i am having to think way way too hard to figure out this simple trig
[01:58:58] *** Quits: magla (~gelignite@55d4248d.access.ecotel.net) (Quit: Stay safe!)
[02:03:01] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Quit: RabidToaster)
[02:06:02] *** Joins: Uswald (~leandre@2a01cb040075f90080c5f313e1e329e0.ipv6.abo.wanadoo.fr)
[02:06:02] *** Quits: Uswald (~leandre@2a01cb040075f90080c5f313e1e329e0.ipv6.abo.wanadoo.fr) (Changing host)
[02:06:02] *** Joins: Uswald (~leandre@user/Uswald)
[02:07:02] <johnny> i'm annoyed that i havent had to search for any code since i got accepted into the beta :(
[02:07:27] <johnny> but i have been taking a break from side work though in favor of playing a game lately. but i'll be done with it soon
[02:07:40] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[02:07:57] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:09:39] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:4844:d1b4:fa72:85a4)
[02:10:26] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 252 seconds)
[02:11:49] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[02:12:15] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:13:57] <stanrifkin> what game?
[02:14:00] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[02:16:18] *** Joins: johnny (~johnny@user/johnny)
[02:17:20] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[02:19:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:23:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:27:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:28:08] *** Quits: proller (~p@2a02:6b8:b081:8812::1:16) (Ping timeout: 250 seconds)
[02:34:53] *** Joins: Kit (~NotApplic@2603-6010-a103-1f2e-4e6d-cc75-dd88-8b0f.res6.spectrum.com)
[02:37:06] <Kit> hey im trying to make a thing where you have an audio file or smth and i need to be able to separate it into a list of frequencies, amplitude, and time. im having trouble understanding a lot of libs and stuff and i really just need enough information to make a spectrogram
[02:37:20] <Kit> can somebody point me in the right direction
[02:37:22] <Kit> thanks
[02:43:12] <kalven> something something fft
[02:43:43] <imMute> kalven: that's literally what I was going to say
[02:45:09] <kalven> must mean it's a reasonable answer
[02:46:59] <Kit> i mean
[02:47:34] <Kit> pretty much anything i find FFT-related has complex numbers and all and i really, really just need a basic API to do it
[02:48:03] *** Joins: ferdna (~ferdna@user/ferdna)
[02:48:28] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[02:49:20] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[02:49:47] *** gentooclimax is now known as climax
[02:50:02] <imMute> well that's because you need to deal with amplitude *and* phase when looking at the frequency domain.  you can probably just take the absolute value of each complex value and use that as the amplitude of the frequency  and you'll probably do good enough
[02:50:22] <Kit> ohhhhhhhhhh
[02:50:25] <Kit> thx
[02:50:57] *** climax is now known as gentooclimax
[02:51:46] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[02:54:15] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:56:25] *** Joins: proller (~p@2a02:6b8:b081:8806::1:26)
[03:03:27] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[03:08:24] *** Joins: Youmu (uid129469@user/condy)
[03:10:53] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:13:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:18:20] <ashafq> *ugh* I have this buffer** that is being overwritten by something
[03:18:38] <ashafq> when I try to set a watch for that the debugger goes banannas ‚òπÔ∏è
[03:19:47] <ashafq> Watchpoint 3 deleted because the program has left the block in which its expression is valid. 0x0000aaaaaaabb9a4 in ?? ()
[03:19:58] <ashafq> ^ what does that mean??
[03:20:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:20:19] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 250 seconds)
[03:24:04] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:25:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e172:6885:7e27:8509) (Quit: Quit)
[03:26:09] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[03:31:59] *** Joins: hexingb (~hexingb@36.155.28.147)
[03:32:05] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:33:32] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Ping timeout: 240 seconds)
[03:34:51] *** Quits: stanrifkin (~stanrifki@p200300dbcf1a730043efbd2f467074e8.dip0.t-ipconnect.de) (Quit: Leaving)
[03:35:37] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:2de6:51f5:697:b187)
[03:35:38] <jbalint> given base class Base and subclass Sub, what are my options for creating a unique_ptr<Base> with an instance of Sub? I tried it, but of course it crashes
[03:37:28] <kalven> unique_ptr<Base> b = make_unique<Sub>();
[03:37:42] <jbalint> but it crashes  trying to delete Sub as Base?
[03:37:52] <kalven> make sure Base has a virtual destructor
[03:38:34] <jbalint> ok, let me change that and try again
[03:45:22] <jbalint> ok, that one seems to be working. thanks. should abstract classes always have virtual destructors?
[03:45:36] <kalven> practically speaking yes
[03:45:48] <kalven> it's a requirement if you intend to delete a derived class through a base class pointer
[03:45:48] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[03:46:03] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[03:46:36] <jbalint> that makes sense
[03:47:48] *** gentooclimax is now known as climax
[03:48:02] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:50:38] *** climax is now known as gentooclimax
[04:12:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[04:16:54] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 250 seconds)
[04:20:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:24:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:25:14] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:31:54] *** gentooclimax is now known as climax
[04:36:24] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 250 seconds)
[04:38:25] *** climax is now known as gentooclimax
[04:40:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[04:42:47] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:43:39] *** Joins: hexingb (~hexingb@111.32.64.60)
[04:45:26] *** Joins: john99 (~john99@101.246.103.34.bc.googleusercontent.com)
[04:45:40] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[04:49:31] *** Joins: MatSharrow (~matthew@200.99.9.51.dyn.plus.net)
[04:56:21] <Kerr> I have an class that represents a piece of an image(texture) that is to get drawn onto the window. What should I call this class? sibling classes to this one are "Line" "Points" "Rectangle"
[04:57:20] <Kerr> It's not so narrow in use as to call it a button or tile or image, although those are cases where this class might be used later.
[04:59:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[05:05:20] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:06:14] *** Joins: fukuda1 (~fukuda@200-207-99-165.dsl.telesp.net.br)
[05:06:18] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:2de6:51f5:697:b187) (Ping timeout: 250 seconds)
[05:13:44] *** Joins: Donno (~donno@58.84.206.182)
[05:16:39] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e172:6885:7e27:8509)
[05:18:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:21:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:24:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:25:51] *** gentooclimax is now known as climax
[05:28:17] <Alipha> jbalint: rule of thumb is that if you have any virtual functions, you should have a virtual destructor
[05:28:41] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[05:33:37] *** climax is now known as gentooclimax
[05:33:38] <Alipha> (or a protected destructor... but I feel like complicating the rule to include this addition is not worth it)
[05:36:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece)
[05:36:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece) (Changing host)
[05:36:06] *** Joins: skapata (~Skapata@user/skapata)
[05:37:45] *** Joins: arch-angel (~arch-ange@2001:e68:5400:5e71:980d:735:378a:6036)
[05:41:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:45] *** ChanServ sets mode: +v npaperbot
[05:42:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[05:46:52] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:51:47] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[05:52:23] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[05:55:56] *** Quits: fukuda1 (~fukuda@200-207-99-165.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[05:58:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[06:16:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:19:38] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6903) (Quit: Leaving)
[06:21:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:21:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e172:6885:7e27:8509) (Quit: Quit)
[06:22:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:24:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:42:41] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Read error: Connection reset by peer)
[06:43:40] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[06:52:31] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:56:02] *** Quits: proller (~p@2a02:6b8:b081:8806::1:26) (Ping timeout: 240 seconds)
[07:02:13] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[07:06:55] *** Joins: adeliktas6 (~adeliktas@i59F4DEFF.versanet.de)
[07:08:45] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:4844:d1b4:fa72:85a4) (Quit: Ping timeout (120 seconds))
[07:08:56] *** Quits: adeliktas (~adeliktas@i59F4A074.versanet.de) (Ping timeout: 250 seconds)
[07:08:56] *** adeliktas6 is now known as adeliktas
[07:17:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:22:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:24:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:25:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[07:30:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:34:57] *** Quits: MatSharrow (~matthew@200.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[07:52:34] *** Quits: MaddHatter (~maddhatt@user/maddhatter) (Remote host closed the connection)
[07:55:50] <ville> jbalint: if you are deleting through a base dtor, then that dtor should be virtual
[07:57:04] <ville> jbalint: either because even earlier base already marked its dtor virtual or that dtor is marked virtual
[07:59:33] *** Quits: ville (~ville@user/ville) (Quit: ville)
[07:59:38] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 250 seconds)
[08:01:06] *** Joins: ville (~ville@user/ville)
[08:06:16] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[08:06:26] *** Joins: hexingb (~hexingb@36.155.28.147)
[08:10:28] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[08:22:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:24:14] *** Joins: stanrifkin_ (~stanrifki@p200300dbcf157700c2d1b1733e10f636.dip0.t-ipconnect.de)
[08:24:54] <stanrifkin_> is there an ubuntu package for the gsl guidelines support library?
[08:25:22] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[08:26:15] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[08:26:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:29:43] *** Joins: epony (epony@user/epony)
[08:30:22] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:30:29] *** Quits: jsbach (~jsbach@2a01:c23:6050:ea00:c1f4:19f5:bcd2:3ab7) (Ping timeout: 268 seconds)
[08:40:22] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 250 seconds)
[08:42:06] *** Quits: john99 (~john99@101.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[08:42:46] *** Joins: jsbach (~jsbach@2a01:c23:602d:e800:5e1d:e9e1:64a2:e96b)
[08:45:30] <stanrifkin_> seems header only. so i just copied the headers.
[08:56:18] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:01:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:02:28] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:03:30] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:06:39] <ac_slater> man, I know this is a bad place to ask. What is the state of the art for the STL on embedded platforms? Is it libstdc++ or maybe newlib has a good option?
[09:06:55] <ac_slater> embedded == non-Linux, so baremetal
[09:07:56] <ville> ac_slater: write your own
[09:08:06] <ac_slater> yea I do that now - just enough to get by
[09:08:39] <ville> that's the best option i'd say. you're not stuck with the model c++ committee chose
[09:09:31] <ac_slater> yea good point man. I'm staring at a ticket to support std::pair<> in my small library. It's simple in nature but looking at libstdc++, pair is massive
[09:10:00] <ville> if you're also avoiding exceptions, then you end up writing lot of wrappers around the any c++ standard library implementation anyway
[09:10:18] <stanrifkin_> ac_slater: do you cross compile it?
[09:10:43] <ville> 0) don't do std::pair, do std::tuple 1) are you sure sure you need one?
[09:10:51] <ac_slater> stanrifkin_: I currently just write my own library of things that make the most critical code portable. Like a fast vector<> implementation, etc. Curious if I'm wasting my time
[09:11:53] <ac_slater> ville: not super sure yet. Someone wants to bring in some code that's heavy on a bunch of type traits and helpers like pair<> and any<>.
[09:12:12] <ville> ac_slater: it's bit of a question of: "is it part of the problem set or the solution set?"
[09:12:15] <ac_slater> I'm on really small ARM chips, so maybe I should just tell them "no" and rewrite it
[09:12:45] <ac_slater> +1 ville. Thanks for the input
[09:13:10] <ville> ac_slater: they may have been used to writing things certain way, because that's the abstractions that were handed to them by the model c++ standard library chose
[09:14:19] <ac_slater> exactly. Can't fault the author. I'm pretty outdated on the status of some of these efforts bringing modern toolchains to small processors
[09:14:24] <ville> for arm you probably have really good language support on the compilers at least?
[09:14:57] <ac_slater> kinda - this is arm CM0 which is one of the smallest. GCC is spot on, clang is like "meh too small"
[09:15:18] <ac_slater> I should say, the llvm suite supports CM0 but a lot of their tooling doesnt.
[09:15:37] <ac_slater> anyway
[09:15:50] <ac_slater> I'm not really an embedded guy anyway :-/
[09:17:27] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[09:17:40] <ville> me neither, but i don't* use the standard library anyways. its reliance on exceptions means it would need to be wrapped anyways and at that point might as well write your own. at least you can be confident there really are no exceptions coming out
[09:18:25] <ac_slater> you hate exceptions eh? ;)
[09:18:46] <ville> i do use std::malloc, std::free and other lower-level constructs. but those are usually inherited from c anyways so no exceptions
[09:19:28] <ville> hate? i just don't like the code, as in source code not generated assembly, using exceptions produces
[09:19:32] <ac_slater> I'm still on the fence about it. In much of my code (on Linux platforms for example), I just use std::runtime_error myself or subclass it for contextual errors. I just leave exception handling up the Linux's runtime. Too hard to argue through it
[09:20:51] <ac_slater> ville: you don't use the STL at all? No unique_ptr<>, etc?
[09:21:12] <ville> no. i've my own with an interface i like
[09:21:20] <ac_slater> great, that's awesome
[09:21:49] <ville> so of course i've types that help me not to write dtors or manually freeing resources that i've acquired in a function when returning early and so on
[09:22:33] <ac_slater> yea that's lean, very cool
[09:23:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:24:28] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:25:09] <ac_slater> ville: do you get anyone complaining about "reinventing the wheel" ?
[09:25:38] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:27:11] *** Joins: autark_ (~autark@ti0048a400-0869.bb.online.no)
[09:27:39] *** Joins: Leo_V (~Leo@216.154.23.229)
[09:28:14] *** Joins: Inline__ (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[09:28:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:28:35] *** Joins: xkoncek8 (xkoncek@lounge.fi.muni.cz)
[09:28:35] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[09:28:39] *** Joins: Svitkona3 (~Svitkona@157.245.38.135)
[09:28:40] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:29:16] *** Joins: WarauSalesman (~sjw@69.206.48.64)
[09:29:58] *** Joins: halberd (~halberd@user/causative)
[09:30:11] *** Joins: DarkDonno (~donno@58.84.206.182)
[09:30:12] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[09:30:43] *** Joins: adeliktas6 (~adeliktas@i59F4DEFF.versanet.de)
[09:30:46] *** Joins: mIGu_ (mig21@user/naur)
[09:31:17] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[09:31:43] *** Joins: ezzieygu1wuf (~Unknown@user/ezzieyguywuf)
[09:32:25] *** Joins: ville_ (~ville@user/ville)
[09:33:00] <ville_> ok got lagged out, not sure if the answer made it
[09:33:37] *** Quits: ville (~ville@user/ville) (Killed (calcium.libera.chat (Nickname regained by services)))
[09:33:37] *** ville_ is now known as ville
[09:34:59] *** Joins: smeso_ (~smeso@user/smeso)
[09:34:59] *** Quits: smeso (~smeso@user/smeso) (Killed (NickServ (GHOST command used by smeso_)))
[09:35:00] *** smeso_ is now known as smeso
[09:36:45] *** Joins: AmR (~AmREiSa@156.199.9.4)
[09:37:08] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (*.net *.split)
[09:37:08] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (*.net *.split)
[09:37:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[09:37:08] *** Quits: adeliktas (~adeliktas@i59F4DEFF.versanet.de) (*.net *.split)
[09:37:09] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[09:37:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[09:37:09] *** Quits: Leone (~Leo@216.154.23.229) (*.net *.split)
[09:37:09] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (*.net *.split)
[09:37:09] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[09:37:09] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:37:09] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (*.net *.split)
[09:37:09] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[09:37:09] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:37:09] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:37:09] *** Quits: Donno (~donno@58.84.206.182) (*.net *.split)
[09:37:09] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (*.net *.split)
[09:37:09] *** Quits: xkoncek (xkoncek@lounge.fi.muni.cz) (*.net *.split)
[09:37:09] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[09:37:09] *** Quits: Sevalecan (~sevalecan@user/sevalecan) (*.net *.split)
[09:37:09] *** Quits: kkd (~kkd@255.205.154.104.bc.googleusercontent.com) (*.net *.split)
[09:37:09] *** Quits: mIGu (~mig21@user/naur) (*.net *.split)
[09:37:09] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[09:37:09] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[09:37:09] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[09:37:09] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:37:10] *** Quits: causative_ (~halberd@user/causative) (*.net *.split)
[09:37:10] *** Quits: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse) (*.net *.split)
[09:37:10] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:37:10] *** Quits: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (*.net *.split)
[09:37:10] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:37:10] *** mIGu_ is now known as mIGu
[09:37:11] *** adeliktas6 is now known as adeliktas
[09:37:11] *** xkoncek8 is now known as xkoncek
[09:37:11] *** Svitkona3 is now known as Svitkona
[09:37:29] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[09:40:50] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[09:41:17] *** Joins: xkuru (~xkuru@user/xkuru)
[09:41:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:45] *** ChanServ sets mode: +v npaperbot
[09:42:15] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:42:51] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[09:42:51] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[09:42:51] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:42:51] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:42:51] *** Joins: Sevalecan (~sevalecan@user/sevalecan)
[09:42:51] *** Joins: NOTevil (~notevil@user/notevil)
[09:42:51] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:42:51] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[09:42:51] *** Joins: lh_not_bot (~lh_bot@mingw-w64/developer/lhmouse)
[09:42:51] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:42:51] *** Joins: flynn (~mcbloch@user/flynn)
[09:43:16] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:43:41] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:44:26] *** Joins: kkd (~kkd@255.205.154.104.bc.googleusercontent.com)
[09:47:06] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 260 seconds)
[09:49:49] *** Joins: hexingb (~hexingb@2409:8902:78c1:5450:f0ba:1870:9574:4cbc)
[09:52:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:53:21] *** Quits: stanrifkin_ (~stanrifki@p200300dbcf157700c2d1b1733e10f636.dip0.t-ipconnect.de) (Quit: Leaving)
[09:53:36] *** Quits: emerent (~quassel@p200300cd57044312ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:53:45] *** Joins: emerent (~quassel@p200300cd57044332ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:56:17] *** Quits: hexingb (~hexingb@2409:8902:78c1:5450:f0ba:1870:9574:4cbc) (Ping timeout: 240 seconds)
[09:56:17] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:56:36] *** Joins: hexingb (~hexingb@111.32.64.60)
[10:00:32] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 250 seconds)
[10:14:37] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[10:18:15] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:20:53] *** Quits: chozorho (~chozorho@2601:146:300:c30::2e50) (Quit: WeeChat 3.0)
[10:23:47] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 252 seconds)
[10:23:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4cc:999b:5977:dd47)
[10:23:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:25:36] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:27:21] <ac_slater> since it's quiet here, maybe someone knows some makefile magic and can help me figure out computed variables based on function arguments: https://paste.debian.net/plain/1228660
[10:27:35] <ac_slater> I won't spam any other offtopic stuff, promise
[10:27:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[10:29:39] <ville> the topic says "tools" and it doesn't just mean people
[10:30:13] <kalven> rimshot
[10:30:57] <kalven> is that what people yearn for when they say cmake sucks?
[10:31:39] <ac_slater> I just can't keep up with CMake. Everything is always "lowercase names work in version X but not Y - upgrade to Cmake 1.2.3.4.1.5 to it to work"
[10:31:55] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:32:02] <ac_slater> love the tech, can't seem to use it effectively.
[10:32:28] <comrad> i never experienced something like that in cmake
[10:32:35] <comrad> what do you do to achieve this?
[10:33:01] <ac_slater> no clue man, try to use paid software from vendors - that's always the worst. Opensource things are usually OK
[10:33:18] <ac_slater> stable != current so mixing old and new doesn't always work
[10:34:16] <comrad> cmake was a bliss here helping with different compilers and toolchains and plattforms (windows with msvc, linux with gcc, rtos with some fucked up compiler)
[10:35:05] <ac_slater> yea that is nice. I only target linux host with gcc toolchains, so I dont have a major problem with just plain makefiles
[10:35:20] <ac_slater> (not always linux target)
[10:36:54] <ac_slater> ah ha, with my past above, the whitespace between ',' and 'foo' was the problem
[10:37:00] <ac_slater> likely time to switch to CMake .......
[10:37:07] <ac_slater> paste*
[10:38:01] <comrad> oh yes, thats almost as annoying as pythons whitespace handling ;)
[10:38:26] <ac_slater> this is worse cause there is no Makefile linter as far as I can find
[10:38:38] <ac_slater> `remake` is a good debugging, but no linting
[10:42:28] <ville> ac_slater: something where you wish to call $(eval ...) perhaps?
[10:42:57] <ville> ok you solved it. nevermind
[10:43:19] <ac_slater>  ville: I did $(eval $(call FUNC, foo)) ... needs to be $(eval $(call FUNC,foo))
[10:43:30] <ac_slater> $1 evaluated to ' foo'
[10:43:33] <ac_slater> -_-
[10:43:51] <ville> right right. yeah it's bit finicky with whitespace. but that's make for you
[10:44:02] *** Quits: AmR (~AmREiSa@156.199.9.4) (Ping timeout: 240 seconds)
[10:44:07] <ac_slater> no issues otherwise, just late night battled
[10:44:09] <ac_slater> battles *
[10:46:22] <ville> a book called "managing projects with gnu make" has lots of useful things explained in it
[10:48:06] *** Joins: AmR (~AmREiSa@156.207.146.251)
[10:48:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4cc:999b:5977:dd47) (Ping timeout: 250 seconds)
[10:51:18] <ac_slater> heck yea, that looks nice
[10:51:45] <ac_slater> my hand-made makefiles are very nice. Currently managing over 10m lines of code spanning 60 projects with them
[10:52:04] <ac_slater> IDEs like them and it's easy to debug
[10:52:43] <ac_slater> I've been trying to get HOST and TARGET builds in the same context but I didn't really plan well enough for that
[10:54:43] *** Parts: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) ()
[10:55:41] *** Joins: Hercules (~Hercules@user/hercules)
[10:55:44] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:57:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:58:48] *** Quits: Hercules (~Hercules@user/hercules) (Client Quit)
[10:59:43] *** Quits: DarkDonno (~donno@58.84.206.182) (Ping timeout: 268 seconds)
[11:00:20] *** Joins: xkuru (~xkuru@user/xkuru)
[11:04:55] *** Joins: Dru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca)
[11:06:57] *** Quits: BigDru (~BigDru@cpeac202e794c73-cmac202e794c70.cpe.net.fido.ca) (Ping timeout: 240 seconds)
[11:09:26] *** Joins: jellie (~luv_panda@user/jellie)
[11:11:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:24:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:27:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:35:46] *** Joins: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de)
[11:35:52] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:42:10] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[11:44:37] *** Quits: CalamityBlue (~CalamityB@2603-8000-d907-cec8-c0c1-3f9b-2cdb-8c05.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:45:20] *** RazielXYZ is now known as Raziel
[11:46:47] *** Joins: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com)
[11:48:24] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[11:54:19] *** Joins: hexingb (~hexingb@111.32.64.60)
[11:55:28] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[11:56:32] *** Quits: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi) (Ping timeout: 240 seconds)
[11:57:14] *** Joins: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr)
[11:57:14] *** Quits: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr) (Changing host)
[11:57:14] *** Joins: Uswald (~leandre@user/Uswald)
[12:00:38] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[12:01:01] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[12:02:54] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 260 seconds)
[12:06:37] *** Joins: stanrifkin (~stanrifki@p200300dbcf157700c2d1b1733e10f636.dip0.t-ipconnect.de)
[12:07:11] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[12:09:42] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5328)))
[12:09:44] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[12:23:08] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:24:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:28:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[12:30:54] *** Quits: tesuji_ (~quassel@2a02:908:180:9500:a0da:e697:f0fa:d750) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:32:49] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[12:35:01] *** Joins: robod34 (~Username@79.113.195.239)
[12:50:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[12:53:26] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[12:56:31] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:00:41] *** Quits: johnny (~johnny@user/johnny) (Read error: Connection reset by peer)
[13:01:29] *** Joins: johnny (~johnny@user/johnny)
[13:03:31] *** Joins: calamity-jane (~calamity-@user/calamity-jane)
[13:09:08] *** Quits: calamity-jane (~calamity-@user/calamity-jane) (Quit: Client closed)
[13:14:12] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:13] *** Joins: calamity-jane (~calamity-@user/calamity-jane)
[13:16:50] *** Joins: argonautx (~argonautx@i5E8670EE.versanet.de)
[13:25:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:27:40] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:28:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:28:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:31:01] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[13:39:10] *** Joins: Simplar (~quassel@188.163.93.241)
[13:39:26] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:41:04] *** Joins: MatSharrow (~matthew@200.99.9.51.dyn.plus.net)
[13:41:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:47] *** ChanServ sets mode: +v npaperbot
[13:41:50] *** Joins: jellie (~luv_panda@user/jellie)
[13:43:22] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[13:47:51] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 245 seconds)
[13:53:32] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[13:56:26] *** Joins: hexingb (~hexingb@111.32.64.60)
[13:59:17] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[14:01:00] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[14:01:48] *** Joins: hexingb (~hexingb@36.155.28.147)
[14:07:48] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[14:08:10] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[14:09:30] *** Quits: calamity-jane (~calamity-@user/calamity-jane) (Quit: Client closed)
[14:11:21] *** Quits: MatSharrow (~matthew@200.99.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[14:12:44] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 250 seconds)
[14:15:31] *** Joins: ivii (~ivan@user/ivii)
[14:25:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:25:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:26:40] *** Joins: stefanos82 (~stefanos8@62-42-212.netrun.cytanet.com.cy)
[14:29:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:29:50] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939)
[14:37:10] *** Quits: stefanos82 (~stefanos8@62-42-212.netrun.cytanet.com.cy) (Quit: Leaving)
[14:47:11] *** Joins: Roughy (~mdaw45ns@user/roughy)
[14:50:08] *** Joins: DSpider (~DSpider@82.79.237.117)
[14:50:13] *** Joins: Burgundy (~NA@86.121.143.206)
[15:01:01] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:06:04] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:06:30] *** Joins: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr)
[15:06:30] *** Quits: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr) (Changing host)
[15:06:30] *** Joins: Uswald (~leandre@user/Uswald)
[15:12:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:16:52] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 250 seconds)
[15:25:31] *** Joins: hexingb (~hexingb@111.32.64.60)
[15:26:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:30:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[15:30:20] *** Joins: pulse (~pulse@user/pulse)
[15:36:20] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:40:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:42:49] *** Joins: xkuru (~xkuru@user/xkuru)
[15:43:56] *** Joins: seninha (~seninha@user/seninha)
[15:48:55] *** Joins: proller (~p@2a02:6b8:0:40c:d8c0:5d4d:4439:41cd)
[15:50:03] *** Joins: x_kuru (~xkuru@user/xkuru)
[15:52:13] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[15:56:08] *** Joins: MatSharrow (~matthew@200.99.9.51.dyn.plus.net)
[16:03:51] *** Quits: Simplar (~quassel@188.163.93.241) (Ping timeout: 250 seconds)
[16:06:42] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[16:08:10] *** Joins: markong (~kvirc@213.146.188.203)
[16:10:54] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[16:17:01] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[16:21:52] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[16:26:09] *** Joins: markong (~kvirc@213.146.188.203)
[16:26:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:27:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:30:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:32:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[16:32:30] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:33:31] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[16:35:32] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[16:45:12] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:48:07] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:48:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[16:48:28] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[16:51:44] *** Joins: traxex (traxex@user/traxex)
[16:55:52] *** Joins: Simplar (~quassel@188.163.93.241)
[17:10:26] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:12:11] *** Joins: HvszrStykp (~X@81.171.62.84)
[17:13:29] *** Joins: andreasbuhr (~quassel@p548dde8f.dip0.t-ipconnect.de)
[17:21:41] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Read error: Connection reset by peer)
[17:26:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:27:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:27:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:28:35] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:30:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[17:32:44] <PJBoy> man clang-tidy
[17:33:03] <PJBoy> never had such mixed feelings about a tool before
[17:34:13] <PJBoy> it seems to have no way of only doing a group of checks I want performed
[17:34:45] <PJBoy> oh wait nvm I just misspelt . as -
[17:35:08] *** Joins: chozorho (~chozorho@2601:146:300:c30::8314)
[17:35:43] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[17:36:25] <LordKalma> PJBoy, also, fcking update it
[17:36:31] <PJBoy> no
[17:36:45] <PJBoy> if I require people to put effort into installing it
[17:37:00] <PJBoy> a) people won't succeed in installing it
[17:37:04] <InPhase> PJBoy: It seems clang-tidy has features for turning off checks on each line of code with extra comments, but I think this turns it into clang-messy.
[17:37:10] <PJBoy> b) no one will adopt my clang-tidy practice
[17:37:28] *** Joins: jellie (~luv_panda@user/jellie)
[17:37:29] <LordKalma> / NOLINTNEXTLINE
[17:37:57] <PJBoy> nah my complaint was gonna be that I can run the clang-analyzer-core checks only
[17:38:26] <PJBoy> I tried specifying `-checks='-*,clang-analyzer-core-*'` to no avail
[17:38:43] <PJBoy> I needed to write `-checks='-*,clang-analyzer-core.*'`
[17:38:58] <PJBoy> which is my bad I gues
[17:39:00] <PJBoy> s
[17:40:02] <PJBoy> I'm currently demo'ing how clang-tidy actually found a real bug
[17:40:20] <PJBoy> and gonna show off how it can modernise an entire codebase to a point with its -fix capabilities
[17:41:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:48] *** ChanServ sets mode: +v npaperbot
[17:42:26] <PJBoy> then some stuff with its VS code integration
[17:42:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:42:46] <PJBoy> it's unfortunate that the bug it finds with its clang-analyzer-core doesn't appear in the VS code version
[17:46:04] <PJBoy> (yet)
[17:46:07] <PJBoy> maybe it does in newer clangd
[17:47:57] <PJBoy> I would also use this example as a good reason to not initialise all your variables just because
[17:48:13] <PJBoy> but it's work code :<
[17:48:39] <PJBoy> clang-tidy wouldn't have found this bug otherwise though
[17:53:56] *** Joins: markong (~kvirc@213.146.188.203)
[17:53:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939) (Ping timeout: 240 seconds)
[17:57:03] *** Quits: chozorho (~chozorho@2601:146:300:c30::8314) (Quit: WeeChat 3.0)
[17:58:41] *** Joins: chozorho (~chozorho@2601:146:300:c30::8314)
[18:05:06] *** Joins: wnbeser (~wnbeser@91-154-217-247.elisa-laajakaista.fi)
[18:05:53] <very_sneaky> great success
[18:06:50] *** Joins: jsbach_ (~jsbach@2a01:c23:602d:e800:794f:4e72:9033:7177)
[18:07:17] *** Quits: jsbach (~jsbach@2a01:c23:602d:e800:5e1d:e9e1:64a2:e96b) (Ping timeout: 240 seconds)
[18:09:32] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 240 seconds)
[18:12:08] *** Quits: wnbeser (~wnbeser@91-154-217-247.elisa-laajakaista.fi) (Quit: Leaving)
[18:12:38] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[18:14:46] *** Joins: manjaro-user (~manjaro-u@199-7-159-93.eng.wind.ca)
[18:18:32] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[18:21:27] *** Joins: jellie (~luv_panda@user/jellie)
[18:23:03] <manjaro-user> hey. Getting an error with a nan, which I think I end up generating when I divide by zero. In any case; I've never worked with NAN values before so I don't know how to check for them
[18:23:45] <manjaro-user> Is there a set number of "nan" values?
[18:24:01] <manjaro-user> or are there thousands upon thousands?
[18:25:56] <PJBoy> there are many nans
[18:26:02] <PJBoy> you can check for them with std::isnan
[18:26:13] <PJBoy> << isnan(NAN)
[18:26:14] <geordi> true
[18:27:04] <PJBoy> some old school people will check for nan using !-
[18:27:09] <PJBoy> !=
[18:27:10] <nolyc> = is assignment, not comparison.
[18:27:15] <PJBoy> >_>
[18:27:24] <PJBoy> << (NAN != NAN)
[18:27:24] <geordi> true
[18:27:38] <PJBoy> and NAN is the only floating point value that satisfies that expression
[18:27:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:27:56] <manjaro-user> PJBoy: Thanks. Are they pretty easy to deal with usually?
[18:28:13] <PJBoy> "usually", yeah
[18:28:14] <manjaro-user> I don't get how NAN != NAN ?
[18:28:17] <PJBoy> definitely not always
[18:28:28] <PJBoy> NAN != NAN is simply defined to be true
[18:28:37] <PJBoy> it's the original method of being able to detect NAN
[18:28:38] <manjaro-user> Why?
[18:28:52] <PJBoy> that's the reason
[18:29:00] <PJBoy> literally just as a way to check for NAN
[18:29:06] <PJBoy> not great is it?
[18:29:08] <manjaro-user> gwah?
[18:29:10] <PJBoy> alas
[18:29:30] <PJBoy> philosophically "not a number" shouldn't be equal to any floating point value
[18:29:38] <PJBoy> and that's true, NAN isn't equal to anything
[18:29:45] <manjaro-user> Won't a valid value also not equal NAN?
[18:29:48] <PJBoy> and "anything" includes other NAN values
[18:29:57] <PJBoy> yeah so
[18:30:01] <PJBoy> << (NAN != 0)
[18:30:02] <geordi> true
[18:30:10] <PJBoy> NAN is unequal to everything
[18:30:18] <manjaro-user> hrmmmm
[18:30:27] <manjaro-user> Its a truism
[18:31:01] *** Quits: proller (~p@2a02:6b8:0:40c:d8c0:5d4d:4439:41cd) (Ping timeout: 240 seconds)
[18:31:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:31:09] <manjaro-user> And two NAN's of the exact same bit signature, will also not equal eachother?
[18:31:39] <PJBoy> indeed
[18:31:53] <manjaro-user> Is that compiler dependent?
[18:32:05] <PJBoy> nope, it's guaranteed by the standard
[18:32:39] *** Joins: proller (~p@2a02:6b8:0:40c:b4ee:3283:ee96:1bdf)
[18:33:20] <Alipha> ac_slater: I hate std::pair. first/second are meaningless member names. I feel you should create your own custom type for each situation, so that you can give the type and its members meaningful names. node{key, value}. result{value, success}. range{first, last}.
[18:33:29] <PJBoy> << (memcmp(&x, &y, sizeof(double)) == 0), (x == y); double x = NAN, y = NAN;
[18:33:29] <geordi> true, false
[18:33:43] <manjaro-user> okay so I have created a multiplyer, "m" and its value somehow gets set as a nan, probably from dividing by zero. If "m" is used, it generates an error. How do I check if "m" == NAN? or did you already tell me with the std library?
[18:33:59] <PJBoy> yeah use std::isnan
[18:34:02] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[18:34:11] <PJBoy> https://en.cppreference.com/w/cpp/numeric/math/isnan and all that
[18:34:42] <manjaro-user> PJBoy: Thanks bro.
[18:34:51] <PJBoy> :)
[18:35:18] <manjaro-user> I wonder if QT also has this function... sometimes they do have things like this.
[18:36:53] <PJBoy> most likely
[18:37:16] <PJBoy> yup
[18:37:53] <PJBoy> https://doc.qt.io/qt-5/qtglobal.html#qIsNaN
[18:37:59] <manjaro-user> PJBoy: Someone was also mentioning on SO that there is an infinite value. This was with c#. Do these values exist as well?
[18:38:12] <PJBoy> there's infinity yeah
[18:38:37] <manjaro-user> Do you check the same way
[18:38:38] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:38:40] <ashafq> manjaro-user: I can chat about IEEE754 for hours and rant about it for days üòä
[18:38:43] <PJBoy> nope
[18:38:46] <PJBoy> infinity is more sensible
[18:38:58] <PJBoy> there's std::isinf though
[18:39:30] <manjaro-user> Why is infinite more sensible?
[18:39:32] <PJBoy> << HUGE_VAL, INFINITY, numeric_limits<double>::infinity()
[18:39:33] <geordi> inf, inf, inf
[18:39:46] <PJBoy> more sensible as in it compares equal to itself
[18:39:51] <PJBoy> as you'd expect
[18:39:57] <PJBoy> only NAN is weird in that way
[18:40:11] <ashafq> The reason NAN is not equal to NAN is because there are more than one bit combinations of NAN
[18:40:20] <manjaro-user> ashafq: With our profession; good luck finding a person who will listen. Ive been programming 9 years and I aint got muc of a clue what IEEE754 is. I'm probably too low IQ
[18:40:36] <PJBoy> << (HUGE_VAL == INFINITY), (INFINITY == numeric_limits<double>::infinity())
[18:40:36] <geordi> true, true
[18:40:44] <ville> ashafq: there wouldn't have to be more than one bit pattern for it
[18:40:55] <ashafq> In fact there are 2^24 (~8 M) bit combinations of NAN in 32 bit floating point
[18:42:10] <ashafq> ville: NAN is when all exponent bits are one and _any_ of the mantissa bits are one, where that needs to be the feature of floats doesn't make sense to me.
[18:42:34] <ville> ashafq: read again...
[18:42:46] <Haohmaru> ashafq maths sometimes explodes
[18:43:29] <ville> ashafq: also it's 23 bits wide, the all 0s goes inf, but you've negative inf
[18:44:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:45:06] <ville> ashafq: the point is that just because they had 2^23 - 1 bit patterns to choose from didn't mean they had to make all of them nan
[18:45:07] <PJBoy> so it's (2^23 - 1) * 2 NAN values?
[18:45:27] <manjaro-user> ooof
[18:45:29] <PJBoy> for the 23 mantissa bits, minus the inf representation, and the sign bit
[18:45:38] *** Joins: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr)
[18:45:38] *** Quits: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr) (Changing host)
[18:45:38] *** Joins: Uswald (~leandre@user/Uswald)
[18:45:45] <ashafq> PJBoy: something like that
[18:46:29] <PJBoy> but there's only one infinity
[18:46:30] <ville> PJBoy: yes
[18:46:31] <ashafq> There's also "silent NAN" and "signaling NAN" which are pretty fun topic to deal with.
[18:46:35] <PJBoy> so infinity's cool
[18:46:52] <ville> PJBoy: there's negative inf, if you're counting negative nan as nan, you should count negative inf as inf
[18:46:53] <rpav> nan_t
[18:47:03] <manjaro-user> Oh my gosh. This is so stupid. Why would Qt need a py function, when you can just go, "if ( angle == 3 )" ?
[18:47:05] <PJBoy> yeah that's fair
[18:48:57] <PJBoy> << signbit(NAN), signbit(-NAN)
[18:48:58] <geordi> false, true
[18:49:10] <PJBoy> ngl I wasn't expecting NAN to be negatable
[18:50:17] <ashafq> PJBoy: most of the time, for the matrix compuations I just compile with -ffast-math and forget about NAN üòä
[18:50:58] <ashafq> I don't recommend it for everything
[18:51:29] <ashafq> Also, recommend fixed point for coding mission critical stuff
[18:54:43] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:55:23] <rpav> fixed point has its own issues
[18:58:16] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[18:58:24] <mike18> hi i have an slow api i need to get data from - i currently have a thread pool with 20 threads and measured that adding more threads does not help to read more data. could adding a second process help to be able to read more data in parallel since im i/o bound?
[19:00:30] <ashafq> rpav: it adds more development time, other than that it works
[19:01:06] <manjaro-user> mike18: slow API ? Wah?
[19:01:19] <mike18> yes slow api
[19:01:27] <manjaro-user> Like, is it a REST api hosted in FIJI?
[19:01:32] <mike18> rest api
[19:01:50] <manjaro-user> oh okay so you are limited by bandwidth?
[19:01:53] <mike18> latency is in seconds
[19:02:03] <manjaro-user> oof okay
[19:02:14] <mike18> so adding thread pool helped for sure
[19:02:21] <mike18> but after 20 threads no more speedup
[19:02:37] <manjaro-user> Do you control the rest API?
[19:02:41] <mike18> no
[19:02:59] <manjaro-user> Are you just data scraping or something? Or is this legit?
[19:03:19] <ville> mike18: cache?
[19:03:22] <mike18> it read some data from that endpoint which is the input of an algo
[19:03:36] <mike18> cache only helps if i read the same data twice
[19:04:08] <manjaro-user> How often does that happen?
[19:04:16] <mike18> happend what?
[19:04:24] <manjaro-user> Reading the same data twice?
[19:04:34] <manjaro-user> Also how big is the data?
[19:04:37] <mike18> the algo doesnt read the data twice
[19:04:42] <rpav> ashafq: i think every "solution" can be qualified that way :P
[19:05:01] <mike18> the bottleneck is the database i assume
[19:05:11] <mike18> the query is kinda slow i guess
[19:05:20] <manjaro-user> mike18: No I mean, how often are you receiving the same set of bits?
[19:05:24] <rpav> we can hand code this in machine code using punch cards! or if you prefer, use a proof assistant to show our code is correct! it just adds more development time, but it works :)
[19:06:01] <Shell> mike18: so is the issue that the API takes N seconds before it starts responding, or that it will only send you n kilobits of data per second, or what?
[19:06:43] <manjaro-user> One thing I did in order to deduplicate file downloading is I created a signature that is derived from the first middle and last bytes of a file, and matched it with anything I had locally.
[19:06:43] <mike18> i assume: so is the issue that the API takes N seconds
[19:06:47] <mike18> but let me measure
[19:07:18] <ashafq> rpav: true there are diverse solution to diverse problems üòä
[19:07:43] <rpav> ;)
[19:09:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:09:44] *** Quits: zmt00 (~zmt00@user/zmt00) (Remote host closed the connection)
[19:13:41] *** Quits: Simplar (~quassel@188.163.93.241) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:17:14] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[19:19:47] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:20:30] <mike18> Shell: im measureing it now - what latency you want to know with curl?
[19:21:23] *** Quits: Inline__ (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[19:23:22] <manjaro-user> <<  std::numbers::pi == 3
[19:23:23] <geordi> error: no match for 'operator==' in 'cout.ostream::operator<<(((double)numbers::pi)) == 3' (operand types are 'ostream::__ostream_type' {aka 'ostream'} and 'int')
[19:25:50] <mike18> Shell:  manjaro-user: https://ideone.com/RFMUnZ
[19:25:58] <mike18> here the curl times
[19:28:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:29:04] *** Quits: manjaro-user (~manjaro-u@199-7-159-93.eng.wind.ca) (Ping timeout: 250 seconds)
[19:31:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:31:38] <mike18> here with download size: https://ideone.com/YbbMP3
[19:32:23] *** Quits: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de) (Quit: Client closed)
[19:33:19] <Alipha> mike18: if i/o is your bottleneck, then no, adding more threads or processes won't help.
[19:33:34] <mike18> and add another process as well does not help?
[19:33:35] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:34:22] <mike18> you see:  time_starttransfer:  3.032005 and only: size_download:  55389
[19:34:31] <mike18> pretty small data size?
[19:35:50] <Alipha> mike18: what's the units there? seconds?
[19:35:55] <mike18> swconds
[19:36:00] <mike18> and bytes
[19:36:36] <Alipha> mike18: seems like there's definitely something else going on with either your code or your network connection
[19:36:57] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:37:13] <mike18> why network when i see: time_connect:  0.030636 ?
[19:37:17] <mike18> -> https://ideone.com/YbbMP3
[19:37:47] <Alipha> in theory, one thread is enough and adding more than one thread shouldn't speed up anything because i/o is much slower than cpu
[19:37:52] <mike18> time_connect:  0.030636 -> means 30 ms to connect to api server?
[19:38:10] <mike18> but if the thread is waiting to get data?
[19:39:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[19:41:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:44:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[19:45:39] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939)
[19:45:44] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:47:50] <mike18> Alipha: im wrong?
[19:49:57] <Alipha> mike18: if there's only one thread and it's waiting for data, adding more threads isn't going to make that data arrive any faster
[19:50:43] <mike18> yeah but what i want to say is if i need to call multiple of the endpoints with a different id
[19:50:54] <mike18> it can make 20 calls at the same time
[19:51:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[19:51:46] <mike18> since a database or api can handle concurrent requests
[19:51:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[19:52:45] <Alipha> okay, i missed the part where you're talking to a database. yes, if you have multiple threads querying for different data, then yes, you'll get some speed improvement. but there's also a limit in how much the database can do in parallel also, and so you'll get diminishing returns as you add more threads/processes.
[19:53:11] <mike18> yeah i measured after 20 threads there is not speedup any more
[19:53:29] <mike18> and i guess adding multiple processes to send those requests also doesnt help than?
[19:53:32] <Alipha> there might also be a 20 connection limit configuration or such
[19:53:51] <mike18> on the database?
[19:53:54] <Alipha> yes
[19:53:55] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:54:07] <mike18> ok is it easy to increase that?
[19:54:47] <Alipha> though i would think you'd get an error if you tried to create more connections than specified in the connection limit
[19:54:49] *** ezzieygu1wuf is now known as ezzieyguywuf
[19:55:01] <Alipha> e.g., https://stackoverflow.com/questions/22297773/how-to-increase-mysql-connectionsmax-connections
[19:55:39] <mike18> do you need to usually change to multiple read replicas?
[19:55:58] <Alipha> mike18: your best bet is to just make your query faster though :-P either by rewriting the query better or to add indexes. and use profiling tools to see what the execution plan is and what is slow
[19:56:40] <Alipha> if you can't make the query faster, then yes, adding read replicas would probably be the next thing to do
[19:58:10] *** Joins: pulse (~pulse@user/pulse)
[19:59:42] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:01:33] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[20:03:02] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[20:05:28] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[20:07:18] *** Joins: Snyp (~Snyp@49.207.193.236)
[20:12:59] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939)
[20:16:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:16:34] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939) (Ping timeout: 268 seconds)
[20:17:09] *** Joins: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de)
[20:28:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:32:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:33:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:34:43] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[20:35:04] <mike18_> Alipha: but when i add read replicas i also need to increas the number of db connections?
[20:35:33] <mike18_> or i guess i need to at least let the api support multiple connections
[20:35:46] <mike18_> and than either read from db read replica1 or 2 ... ?
[20:38:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[20:40:04] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[20:40:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:43:02] *** Joins: magla (~gelignite@55d49292.access.ecotel.net)
[20:45:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786)
[20:45:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786) (Changing host)
[20:45:20] *** Joins: skapata (~Skapata@user/skapata)
[20:45:59] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[20:48:22] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[20:49:40] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Ping timeout: 250 seconds)
[21:05:14] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[21:08:03] *** Quits: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:14:02] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 260 seconds)
[21:14:13] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:18:46] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[21:26:52] *** halberd is now known as causative
[21:28:13] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[21:29:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:32:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:32:40] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[21:33:05] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[21:36:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3156:41e:7e7b:c651)
[21:37:56] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:39:28] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[21:41:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:47] *** ChanServ sets mode: +v npaperbot
[21:45:57] *** Quits: autark_ (~autark@ti0048a400-0869.bb.online.no) (Ping timeout: 240 seconds)
[21:46:17] <jbalint> if I've declared a shared_ptr of a vector as a member variable, how do I initialize it to an empty vector in the constructor's member initialization list
[21:47:53] <sbrothy> std::make_shared<std::vector>() in constructor initializer list?
[21:47:59] <traxex> that works
[21:48:16] <jbalint> so x(std::make_shared<std::vector>()) ?
[21:48:29] <InPhase> jbalint: Drop {} after the declaration as a member variable, and then you don't have to.
[21:48:51] <InPhase> or...  Sorry, shared_ptr.  Assign it with a make_shared at the declaration.
[21:48:58] <traxex> std::make_shared<std::vector<int>>()
[21:49:01] <traxex> you need the vector's type there
[21:49:05] <sbrothy> oh yeh
[21:49:12] <sbrothy> vector neds a type too
[21:49:36] <jbalint> thanks
[21:55:18] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Ping timeout: 256 seconds)
[21:55:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:57:00] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[22:00:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[22:03:23] *** Quits: luizfrds (~Luiz@152.250.243.147) (Quit: Leaving)
[22:12:13] *** Quits: proller (~p@2a02:6b8:0:40c:b4ee:3283:ee96:1bdf) (Ping timeout: 240 seconds)
[22:14:26] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[22:17:06] *** Joins: chris64 (~chris@user/chris64)
[22:20:14] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 250 seconds)
[22:22:44] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[22:23:21] *** Joins: immibis_ (~hexchat@62.156.144.218)
[22:24:08] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 250 seconds)
[22:24:15] *** Quits: stanrifkin (~stanrifki@p200300dbcf157700c2d1b1733e10f636.dip0.t-ipconnect.de) (Quit: Leaving)
[22:24:47] *** Joins: purplex_ (~purplex@user/purplex)
[22:25:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[22:25:14] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[22:25:14] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: purplex (~purplex@user/purplex) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: rouji (~rouji@x0.at) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (Ping timeout: 256 seconds)
[22:25:16] *** scoobydoo_ is now known as scoobydoo
[22:25:20] *** Joins: hfsoulz_ (~hfsoulz@user/hfsoulz)
[22:25:30] *** Joins: tonitch_ (~tonitch@user/tonitch)
[22:25:36] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[22:25:41] *** Quits: BluesBoy (~bboy@user/bluesboy) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Latexi95 (late@banhammer.fi) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: dzz007 (~dzz007@user/dzz007) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: jns (~x@user/jns) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: jaakkos (~jaakkos@88-113-244-153.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[22:25:49] *** Joins: Latexi95 (late@banhammer.fi)
[22:25:53] *** Joins: BluesBoy (~bboy@stotz2.com)
[22:25:55] *** Quits: BluesBoy (~bboy@stotz2.com) (Changing host)
[22:25:55] *** Joins: BluesBoy (~bboy@user/bluesboy)
[22:26:08] *** Joins: dzz007 (~dzz007@user/dzz007)
[22:26:24] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[22:26:34] *** Joins: jaakkos (~jaakkos@88-113-244-153.elisa-laajakaista.fi)
[22:26:40] *** Joins: jns (~x@comlink.adminking.com)
[22:26:40] *** Quits: jns (~x@comlink.adminking.com) (Changing host)
[22:26:40] *** Joins: jns (~x@user/jns)
[22:27:28] *** Joins: rouji (~rouji@x0.at)
[22:29:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:30:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3156:41e:7e7b:c651) (Ping timeout: 240 seconds)
[22:32:38] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[22:33:03] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:33:13] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[22:33:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:34:24] *** Quits: argonautx (~argonautx@i5E8670EE.versanet.de) (Quit: Leaving)
[22:34:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3156:41e:7e7b:c651)
[22:35:19] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (Ping timeout: 256 seconds)
[22:35:34] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[22:38:22] *** Quits: Snyp (~Snyp@49.207.193.236) (Ping timeout: 256 seconds)
[22:40:39] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:48:33] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[22:50:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3156:41e:7e7b:c651) (Ping timeout: 240 seconds)
[22:55:03] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 268 seconds)
[22:55:28] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ade4:669:9939:72f3)
[22:58:51] <rpav> typo-oriented programming
[22:59:18] <kalven> perl
[23:03:30] <LordKalma> how can anyone write anything in this PHP garbage? ffs
[23:04:05] <LordKalma> I'm trying to dockerize a php project, and ffs, this shit is trash, ffs, why does the project need to know it's public address?
[23:06:45] <TinoDidriksen> It doesn't.
[23:07:02] <LordKalma> wordpress is the same dumpsterfire
[23:07:10] <TinoDidriksen> PHP has no inherent need to know the public address. Nor does Wordpress.
[23:07:14] <LordKalma> you can't just change its hostname
[23:07:27] <LordKalma> well, I believe that
[23:07:42] <LordKalma> I also believe the installed php idioms and practices are a dumpster fire
[23:08:23] *** gentooclimax is now known as climax
[23:08:40] <TinoDidriksen> I write/use a lot of PHP, also inside Docker, and I actually really like it over all the other web backends.
[23:09:09] <Alipha> jbalint: it's unusual to have a std::shared_ptr to a container. it's unusual to have std::shared_ptr at all, really. why are you using std::shared_ptr?
[23:10:03] *** Quits: nshire_ (~nshire@47.146.41.156) (Quit: Leaving)
[23:18:25] <cq-work> Am I the only one who hates when people treat make like a glorified shell script?
[23:19:09] <cq-work> Like a makefile script where `make build` just invokes CMake
[23:19:45] *** Quits: hfsoulz_ (~hfsoulz@user/hfsoulz) (Quit: leaving)
[23:19:55] <hnOsmium0001[m]> in my opinion neither a Makefile nor a build.sh that invokes cmake should exist
[23:20:34] <lru> sometimes people use what they know to encapsulate what they won't remember
[23:20:54] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[23:21:48] <cq-work> I feel like a basic CMake build is easy enough to remember though.
[23:21:55] <kalven> or do it as a courtesy to people who are used to just typing make
[23:22:17] <hnOsmium0001[m]> ok if it's literally just `mkdir build; cd build; cmake ..; cmake --build .` then it doesn't really matter
[23:22:17] <cq-work> What about people who are used to running configure/
[23:22:35] <cq-work> It just seems like a misuse of make to me
[23:22:39] <hnOsmium0001[m]> my problem with build.sh is people start to stuff cmake logic in there, for example setting env vars and -DCMAKE_CXX_FLAGS in the shell script
[23:23:01] <hnOsmium0001[m]> even worse, download dependencies or invoke system package manager for you inside
[23:24:24] <rpav> i should post my config-pkg script
[23:24:33] *** Quits: MatSharrow (~matthew@200.99.9.51.dyn.plus.net) (Ping timeout: 250 seconds)
[23:24:57] <rpav> don't want or remember how to figure out cmake/automake/meson/... and/or configure a version prefix etc, one command and go
[23:24:57] <jbalint> Alipha: I have a class which has internal components and this container is part of a shared state
[23:26:19] <hnOsmium0001[m]> rpav: IIRC xmake had a feature where you can just invoke `xmake .` and it will call whatever buildsystem that is present in the directory
[23:26:21] <cq-work> But you don't have to remember all that, a basic build is literally `cmake .; cmake --build .` at it's simplest.
[23:26:49] <rpav> hnOsmium0001[m]: cool, though really you want common things too like "configure with a prefix" or "show a list of options" etc
[23:27:55] <hnOsmium0001[m]> found it https://xmake.io/#/guide/other_features
[23:28:28] <hnOsmium0001[m]> the "automatically setup cross compile toolchain" part seems interesting
[23:28:29] <Alipha> jbalint: having "shared state" doesn't necessarily mean "shared ownership" though. generally, of the objects which use this "shared state", you can identify one of those objects which will live the longest. so then that longest-living object would be responsible for deleting the shared state
[23:28:42] <rpav> ^
[23:28:57] <rpav> not to mention if you _have_ shared state, then whatever is _owning_ that shared state is likely the single-owner
[23:29:57] <rpav> i keep saying "shared_ptr" is a terrible name, and it should be more like "nondeterministic_ptr" (which is terrible for other reasons)
[23:29:57] *** Joins: gareppa (~gareppa@user/gareppa)
[23:30:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:30:33] <rpav> but it's not that it's _shared_, it's that you can't _tell_ who properly ought to own it, or how long it ought to live .. just some set of things that may or may not expire in a predictable order
[23:31:07] <kalven> üéª
[23:31:11] <rpav> "set_ptr" vs "single_ptr" maybe
[23:31:27] <rpav> though that would be bad, because `set_ptr` is easier to type and would thus encourage its use ;)
[23:31:48] <ville> i_am_a_terrible_person_and_need_to_think_about_my_object_lifetimes_ptr
[23:31:59] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[23:32:29] <hnOsmium0001[m]> alterantively just call it `reference_counted_ptr` or `rc_ptr` for its implementation
[23:32:32] <rpav> `multiple_ptr` probably obvious, but ville's probably onto something too ;)
[23:33:33] <kalven> hnOsmium0001[m]: so rusty
[23:33:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:34:24] *** Joins: Simplar (~Simplar@188.163.93.241)
[23:34:26] <jbalint> Alipha: the lifecycle is as you described, but the internal components can be created before main component. iirc, it made some of the control flow easier but didnt compeltely work out. I can prob switch back to a raw pointer easily
[23:35:03] <jbalint> i understand this isnt the stereotypical use case of a shared_ptr
[23:35:04] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:35:19] <hnOsmium0001[m]> or we can go the other way around into C++/CLI, call it Foo^
[23:35:31] <hnOsmium0001[m]> though that would kinda imply it's put into a tracing GC, so bad idea too
[23:36:10] <Alipha> jbalint: my suggestion is NOT to use a raw pointer either. Use std::unique_ptr
[23:36:54] *** Joins: hexingb (~hexingb@111.32.64.60)
[23:37:08] <Alipha> jbalint: rather, the owner would use std::unique_ptr, and then you'd hand out raw pointers (or references) to the non-owners
[23:37:39] <jbalint> Alipha: it's just a member of the owner and is deleted by it's destructor
[23:37:50] <Alipha> Ah
[23:37:53] <Alipha> Okay
[23:38:12] <jbalint> Alipha: so raw pointers in the non-owners?
[23:38:23] <Alipha> jbalint: yes
[23:38:42] <jbalint> Alipha: cool, i'll give it a whirl. thanks for the suggestion
[23:42:58] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 256 seconds)
