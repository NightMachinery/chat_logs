[00:01:59] *** Joins: ignarps (~iggy@user/ignarps)
[00:03:57] *** Joins: subie (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273)
[00:08:27] *** Quits: subie (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273) (Ping timeout: 245 seconds)
[00:10:15] *** Joins: Trigon (~Thunderbi@73.127.1.41)
[00:10:15] *** Joins: subie (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273)
[00:12:50] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[00:13:06] *** Joins: woei (~woei@144.248.22.115)
[00:16:14] *** Quits: subie (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273) (Ping timeout: 252 seconds)
[00:17:53] *** Joins: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net)
[00:19:51] *** Quits: Guest9 (~Guest9@43.241.144.38) (Quit: Connection closed)
[00:22:42] *** Quits: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[00:23:03] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273)
[00:26:57] *** Quits: splatt990 (4b25e29db1@198.108.79.250) (Ping timeout: 250 seconds)
[00:42:06] * GumbyPAN CPAN Upload: Rex-Hook-File-Impostor-v0.2.0 by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Impostor-v0.2.0
[00:42:44] *** Joins: casaca (~casaca@user/casaca)
[00:44:27] *** Joins: R0b0t1``` (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[00:44:49] <R0b0t1```> hi, I am trying to process streaming output with `perl -pe 'chomp'` but it seems to buffer a lot of lines before printing anything
[00:45:37] <R0b0t1```> if I do `perl -pe 'print'` it prints each line as it happens
[00:45:46] <R0b0t1```> I tried setting $| to no effect
[00:46:03] <jdv> you read "suffering from buffering"?
[00:46:11] <R0b0t1```> no, but I am suffering
[00:46:27] <jdv> aren't we all?
[00:46:54] *** Joins: PapaChub (~PapaChub@vzw-54.parabon.com)
[00:48:26] <jdv> btw, -p and print are an odd combo and almost always wrong.  maybe read perlrun about what -p actually is/does.
[00:48:34] <Grinnz> perl -pe 'BEGIN { *STDOUT->autoflush(1) } chomp' should work
[00:49:00] <Grinnz> if it doesn't, then the thing reading it is buffering
[00:49:09] <jdv> i wish i could flush some code someimes...
[00:49:29] <R0b0t1```> ok, I had seen autoflush, was seeing how to make it work with -pe
[00:49:31] <R0b0t1```> thanks
[00:49:50] <jdv> stdbuf or similar might be able to help with the last bit Grinnz mentioned
[00:49:51] <R0b0t1```> ah okay I need to insert a newline
[00:50:13] <Grinnz> $|=1 is the short/outdated way to do autoflush
[00:51:55] <R0b0t1```> hmm, how do I insert a newline after a chomp that results in a nonempty string
[00:52:10] <R0b0t1```> probably just change the predicate
[00:52:37] <Grinnz> ... why are you chomping if you want to add the newline back
[00:52:46] <Grinnz> maybe step back to what you're actually trying to achieve
[00:53:06] <R0b0t1```> yeah I realized I asked the question wrong
[00:53:18] <R0b0t1```> thing sends a heartbeat every 1s that is a single newline that I need to throw out
[00:53:20] <R0b0t1```> I want every other line
[00:54:25] <Grinnz> perl -ne 'print unless /^$/'
[00:55:38] *** Joins: jabberwok (~wlindley@75.105.20.104)
[00:55:47] <R0b0t1```> noice
[00:57:13] *** AI4AI is now known as subie
[00:57:25] <Grinnz> the -n and -p while-loop will receive each newline as its own line, thus that regex just checks if it's processing a line with only a newline (or nothing)
[00:59:42] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[00:59:46] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 240 seconds)
[01:00:48] <vanfanel64> Grinnz, why *STDOUT->autoflush and not STDOUT->autoflush?
[01:01:00] <Grinnz> cause barewords suck, and they mean the same thing
[01:01:06] <vanfanel64> I have always used the second form just fine
[01:01:17] <Grinnz> yes, and it was a mistake to allow it imo
[01:02:17] <Grinnz> the bareword STDOUT is just the *STDOUT superglobal, except only certain functions recognize it
[01:02:18] <vanfanel64> Why? It is the form commonly seen, in here, on cpan code, and around the web
[01:02:28] <Grinnz> there's a lot of commonly seen stupid things
[01:02:50] <Grinnz> i'm not gonna make people use the glob sigil, but i'm going to use it
[01:04:13] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 250 seconds)
[01:04:18] <Grinnz> sweval: sub foo { shift->print(42) } foo(STDOUT)
[01:04:19] <perlbot> Grinnz: ERROR: Bareword "STDOUT" not allowed while "strict subs" in use at (IRC) line 1. 
[01:04:23] <Grinnz> sweval: sub foo { shift->print(42) } foo(*STDOUT)
[01:04:24] <perlbot> Grinnz: 42
[01:04:36] <Grinnz> that's why i use it, it makes it a real value regardless of how it's parsed
[01:05:05] <vanfanel64> Grinnz, but in the case of STDOUT/STDERR/STDIN, what advantage does using * have when making IO::Handle method calls?
[01:05:17] <Grinnz> see the example i just showed?
[01:05:45] <vanfanel64> Grinnz, yes, but this is not a method call like you did with ->authflush
[01:05:58] <Grinnz> it is, i just passed it through a function first
[01:06:21] <Grinnz> by using the bareword STDOUT, you're relying on the parser recognizing that which it only does in specific cases
[01:06:57] <Grinnz> what's the advantage? same advantage as use strict; consistency and code that does what you mean
[01:08:26] <vanfanel64> Grinnz, I mean when making a method call on the bareword directly like you originally did, not via another variable (though I get that example too how it is important)
[01:08:49] <Grinnz> i don't know what you're asking, it's literally the same
[01:09:04] <Grinnz> the advantage is in overall consistency not specific examples
[01:09:17] <vanfanel64> I mean BEGIN { *STDOUT->autoflush(1) }
[01:09:29] <Grinnz> yes?
[01:09:30] <vanfanel64> I see no advantage of * there
[01:09:35] <Grinnz> ...
[01:10:16] <Grinnz> look you asked, i answered, if you're just gonna keep asking then i have nothing else to say
[01:11:17] <vanfanel64> I get why * is needed when passing to a function, just not when calling a metho on STDOUT/STDERR/STDIN alone
[01:11:36] <Grinnz> it isn't
[01:12:19] <Grinnz> similarly, use strict; isn't needed to use my
[01:12:41] <vanfanel64> There appears to be no advantage over *STDOUT->autoflush(1); over STDOUT->autoflush(1); is what I mean.
[01:13:06] <Grinnz> don't make me start copypasting my messages
[01:13:27] <vanfanel64> No need to be aggressive
[01:13:56] <jdv> what beef you got with *?  everyone loves *!
[01:14:05] <Grinnz> no need to repeat yourself 10 times when i've already answered that
[01:15:20] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[01:16:27] <vanfanel64> I am not asking you too, just clarifying what I mean which you did not seem to get. Specifically, how is *STDOUT->autoflush(1); as written better than STDOUT->autoflush(1); ? Again, I see the second one much much more in practice so I am not so convinced yet that it should be avoided.
[01:16:49] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[01:16:50] <vanfanel64> Oh I read that incorrectly
[01:16:50] <simcop2387> sweval: sub foo { shift->print(42) } foo(STDOUT)
[01:16:52] <perlbot> simcop2387: ERROR: Bareword "STDOUT" not allowed while "strict subs" in use at (IRC) line 1. 
[01:17:06] <vanfanel64> That is not what I was asking about
[01:17:11] <Grinnz> i literally never said it's better or the other should be avoided
[01:17:30] <vanfanel64> I am not talking about passing it, just straight *STDOUT->autoflush(1); vs. STDOUT->autoflush(1);
[01:17:32] <Grinnz> you're asking me to explain something that doesn't exist
[01:17:39] *** Quits: tcohen (~tcohen@192.141.149.60) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:17:50] <vanfanel64> Grinnz, you said you used * with such statements though
[01:17:53] <Grinnz> yes
[01:17:59] <Grinnz> i also use strict
[01:18:06] <genio> < Grinnz> what's the advantage? same advantage as use strict; consistency and code that does what you mean
[01:18:46] <vanfanel64> I want to understand what advantage there is to using * when using a method call directly on an STD* bareword (and not as another variable/function argument, just directly on the bareword.)
[01:19:07] <vanfanel64> This has nother to do with use strict, it is not a valid comparison and a non sequitor tbh
[01:19:08] <Grinnz> alright if you're not going to read any responses, please stop
[01:19:16] <vanfanel64> I am reading
[01:19:22] <genio> you're not.
[01:19:30] <vanfanel64> You do have not answered my core question
[01:19:35] *** ChanServ sets mode: +o genio
[01:20:57] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 245 seconds)
[01:21:22] <vanfanel64> I an not intentionally trying to be difficult, there is no need to op yourself due to a midunserstanding.
[01:21:57] <vanfanel64> Someone times someone might not see what you see exactly
[01:23:49] <ehuelsmann[m]> vanfanel64: it's great if both sides of the communication understand that :-) I have colleagues who tell me "usually, when I don't understand you, I need to listen better to what you say". It's not that we're not telling you, but you have a hard time recognizing the answer, apparently.
[01:24:13] <ehuelsmann[m]> that's fine, but creates a suggestion you're not reading the responses.
[01:25:14] <vanfanel64> Ok, well if it could be clarify what the answeer was to what I was asking, that would be appreciated. It is not always so easy to dig through a wall of text, especially when your eyes aren't perfect
[01:25:38] <vanfanel64> I mean if come could quote what the answer was
[01:27:46] <ehuelsmann[m]> the answer was: cause barewords suck, and they mean the same thing
[01:27:50] <ehuelsmann[m]> barewords suck
[01:27:57] <genio> He answered that he writes it that way for consistency. Consistency and code that DWIM. That's all he was saying. 
[01:28:02] <vanfanel64> What I mostly saw while also trying to type was examples of passing *STDOUT to a function which is fine and all, but was not what I was asking.
[01:28:07] <vanfanel64> genio, thank you
[01:28:27] <genio> üëç
[01:28:43] <vanfanel64> So do I understand correctly that there is no advantage beyond that? Those are good reasons, I agree
[01:29:48] *** Joins: surrounder (~surrounde@tanaka.surrounder.nl)
[01:30:20] <vanfanel64> I always liked how STDOUT->foo(); looked in code though, feels cleaner, and I have used *STD... when passing around those bareword handles, so  that is not an issue for me
[01:30:28] <tirnanog> as a by-product of this consistency, the cognitive load of determining where the bareword form is - and isn't - acceptabl is obivated. at least, that's why I do it.
[01:30:34] <tirnanog> acceptable*
[01:30:58] <tirnanog> granted, for throwaway one-liners, I might be less picky.
[01:31:02] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[01:32:00] *** Joins: jess (~jess@libera/staff/jess)
[01:33:00] *** genio sets mode: -o genio
[01:37:47] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[01:38:11] *** Joins: thunder (~thunder@user/thunder)
[01:39:55] <Grinnz> sweval: sub STDOUT { 42 } STDOUT->flush;
[01:39:56] <perlbot> Grinnz: ERROR: Can't locate object method "flush" via package "42" (perhaps you forgot to load "42"?) at (IRC) line 1. 
[01:40:00] <Grinnz> sweval: sub STDOUT { 42 } *STDOUT->flush;
[01:40:01] <perlbot> Grinnz: 0 but true
[01:40:13] <Grinnz> stupid name for a sub, but an example of how fragile bareword parsing is
[01:44:53] *** Joins: whynot (~whynot@88.155.76.138)
[01:52:07] *** Joins: splatt990 (4b25e29db1@198.108.79.250)
[01:55:08] <genio> the DWIM portion of it ^^
[01:57:51] *** Quits: whynot (~whynot@88.155.76.138) (Quit: leaving)
[01:59:09] *** Joins: whynot (~whynot@88.155.76.138)
[01:59:38] *** Joins: ethoxy (~root@cx21.havox.ru)
[02:03:22] <ether> I generally write map +( ..expr ), @list  with the leading + even when not needed, because *sometimes* it's needed, and if I always use it then I never have to go through the extra thought process of considering if it is, or testing my code first to see if it fails without
[02:03:29] <ether> YMMV
[02:03:42] <ether> (as another example of being consistent even when not necessary)
[02:04:07] <ether> even if it makes people respond to my PRs with "nit: this isn't needed", I don't care
[02:05:21] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 276 seconds)
[02:10:28] *** Quits: PapaChub (~PapaChub@vzw-54.parabon.com) (Quit: Leaving)
[02:12:50] <Grinnz> when you stare into the parser abyss, it stares back, and so you try to be nicer to it
[02:14:22] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[02:25:07] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[02:28:32] *** Quits: ethoxy (~root@cx21.havox.ru) (Remote host closed the connection)
[02:33:58] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[02:34:14] *** Joins: woei (~woei@144.248.22.115)
[02:36:47] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[02:37:06] *** Joins: casaca (~casaca@user/casaca)
[02:43:27] *** Quits: casaca (~casaca@user/casaca) (Remote host closed the connection)
[02:54:09] *** Joins: bfr (~yaaic@ip-109-43-115-146.web.vodafone.de)
[02:54:41] *** Quits: gryphn (~gryphon@102.129.145.153) (Quit: kthxbye)
[02:56:41] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[02:56:58] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 240 seconds)
[03:02:12] *** Joins: whynot_ (~whynot@37.73.59.57)
[03:02:27] *** Quits: whynot (~whynot@88.155.76.138) (Killed (NickServ (GHOST command used by whynot_!~whynot@37.73.59.57)))
[03:02:36] *** whynot_ is now known as whynot
[03:02:37] *** Joins: thunder (~thunder@user/thunder)
[03:13:06] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:15:48] *** Joins: EvanCarroll (~ecarroll@50.222.187.218)
[03:17:46] *** Joins: deadmarshal (~deadmarsh@95.38.231.155)
[03:22:20] *** Quits: deadmarshal (~deadmarsh@95.38.231.155) (Ping timeout: 265 seconds)
[03:40:14] *** Quits: whynot (~whynot@37.73.59.57) (Quit: leaving)
[04:08:08] *** Parts: jabberwok (~wlindley@75.105.20.104) ()
[04:12:07] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[04:13:11] *** Joins: whynot (~whynot@37.73.59.57)
[04:16:41] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:21:02] *** Joins: gggp (~gggp@111.63.14.119)
[04:34:28] *** Quits: gggp (~gggp@111.63.14.119) (Remote host closed the connection)
[04:34:51] *** Joins: gggp (~gggp@111.63.14.119)
[04:36:46] *** Quits: whynot (~whynot@37.73.59.57) (Ping timeout: 265 seconds)
[04:37:03] *** Joins: whynot (~whynot@37.73.59.57)
[04:43:19] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Read error: Connection reset by peer)
[04:49:13] *** Quits: jess (~jess@libera/staff/jess) ()
[04:50:58] *** Joins: whynot_ (~whynot@37.73.56.102)
[04:51:11] *** Quits: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a) (Quit: ZNC 1.9.x-git-141-9cd36055 - https://znc.in)
[04:51:15] *** Quits: whynot (~whynot@37.73.59.57) (Killed (NickServ (GHOST command used by whynot_!~whynot@37.73.56.102)))
[04:51:23] *** whynot_ is now known as whynot
[04:52:03] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[04:54:06] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[04:56:38] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[04:56:51] *** Joins: gloin (~gloin@user/gloin)
[05:01:33] * GumbyPAN CPAN Upload: Zapp-0.005 by PREACTION https://metacpan.org/release/PREACTION/Zapp-0.005
[05:07:12] *** Quits: whynot (~whynot@37.73.56.102) (Ping timeout: 245 seconds)
[05:08:10] *** Joins: whynot (~whynot@37.73.80.234)
[05:11:25] <genio> We have AC again. Yay. I‚Äôm sure my mood will improve quite a bit now
[05:11:35] <Grinnz> praise be
[05:14:34] *** Quits: whynot (~whynot@37.73.80.234) (Ping timeout: 240 seconds)
[05:14:49] *** Joins: whynot (~whynot@37.73.80.234)
[05:15:26] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[05:17:50] *** Quits: whynot (~whynot@37.73.80.234) (Client Quit)
[05:25:51] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:27:20] *** Joins: dimbag_ (~dimbag@62.76.35.23)
[05:29:06] *** Quits: dimbag (~dimbag@dynamic-193-228-165-8.ppp.kmv.ru) (Ping timeout: 240 seconds)
[05:30:26] <genio> Heh. I‚Äôm sure ether is rolling her eyes about now after the whole heat wave thing
[05:34:13] *** Quits: thunder (~thunder@user/thunder) (Killed (NickServ (GHOST command used by metasintactic)))
[05:34:15] *** Joins: thunder (~thunder@user/thunder)
[05:35:23] *** Quits: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com) (Remote host closed the connection)
[05:39:35] <pragma-> When the UK heatwave made American news, the reporters said 21C and Americans nodded sympathetically until one of them converted C to F and found out it was only 70F.
[05:40:43] <pragma-> It was 105F/40.5C in my city, for reference. :p
[05:41:12] <pragma-> Then again most UK houses apparently don't have AC and have very good insulation for keeping heat in, whereas American homes tend to have AC and crap insulation.
[05:43:46] <fizzie> Even though the so-called heatwave ended a week ago, it's still persistently been around 30¬∞C inside here even with the balcony door open.
[05:44:49] <fizzie> Outdoors at nighttime it's around 16¬∞C or so, but inside it actually went back up from 28¬∞C to 30¬∞C the night before. (You can't leave the door open without getting a bunch of spiders in.)
[05:45:17] <pragma-> You could open windows that have screens.
[05:45:32] <fizzie> There are no windows in this flat that can be opened. It's too designed for that.
[05:45:50] <fizzie> The only things you can open are a sliding door and a non-sliding door (to the same balcony).
[05:46:06] <pragma-> You can get a sliding screen for sliding doors.
[05:46:13] <fizzie> Yeah, that's on the TODO list.
[05:46:27] <pragma-> Spiders will probably still find the gaps.
[05:47:36] <fizzie> I'm also guessing it'll let a bunch of soot in, because everything *on* the balcony gets covered with grime in a week or three.
[05:58:43] *** Joins: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com)
[05:59:26] *** Quits: Trigon (~Thunderbi@73.127.1.41) (Ping timeout: 252 seconds)
[06:01:51] *** Joins: fstd_ (~fstd@xdsl-78-34-189-238.nc.de)
[06:02:37] <genio> eww
[06:05:10] *** Joins: Trigon (~Thunderbi@73.127.1.41)
[06:05:55] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:06:08] *** Quits: fstd (~fstd@xdsl-85-197-59-162.nc.de) (Ping timeout: 258 seconds)
[06:11:23] *** Joins: Su-Shee_ (~Susanne@p4ff496c3.dip0.t-ipconnect.de)
[06:11:50] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[06:14:34] *** Quits: Su-Shee (~Susanne@p4ff49129.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:16:10] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 240 seconds)
[06:27:11] *** Joins: gggp_ (~gggp@221.219.78.17)
[06:28:01] *** Joins: gggp__ (~gggp@60.10.194.43)
[06:30:17] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[06:31:03] *** Quits: EvanCarroll (~ecarroll@50.222.187.218) (Ping timeout: 258 seconds)
[06:31:06] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[06:31:51] *** Quits: gggp_ (~gggp@221.219.78.17) (Ping timeout: 276 seconds)
[06:36:37] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[06:46:30] *** Joins: gggp_ (~gggp@221.219.69.124)
[06:49:17] *** Quits: gggp__ (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[06:49:31] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[06:58:44] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:44] *** FinnElija is now known as Guest8697
[06:58:44] *** Quits: Guest8697 (~finn_elij@user/finn-elija/x-0085643) (Killed (tungsten.libera.chat (Nickname regained by services)))
[06:58:44] *** finn_elija is now known as FinnElija
[07:00:10] <ether> genio: we've got another heatwave starting today through Saturday :/
[07:01:13] <ether> https://www.dropbox.com/s/1sdndr0l3gywpw9/Screen%20Shot%202021-07-28%20at%2019.30.55.png?dl=0
[07:01:14] <Paperbot> Link title(s): [ Dropbox - Screen Shot 2021-07-28 at 19.30.55.png - Simplify your life ]
[07:03:45] *** Joins: jsaito (~jsaito@user/jsaito)
[07:05:29] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:12:02] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[07:17:12] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:20:07] *** gggp_ is now known as gggp
[07:20:51] <genio> oh man... 
[07:23:28] <xenu> 30C isn't *that* bad
[07:23:42] <shlomif> genio: ltns. sup?
[07:28:13] *** Joins: gggp_ (~gggp@111.63.14.119)
[07:30:57] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[07:31:24] <genio> kind of bad with no AC and the way our homes are built.
[07:31:37] <genio> today it got up to 32c here
[07:31:45] <genio> then it rained and cooled down a bit
[07:32:03] *** Quits: gggp (~gggp@221.219.69.124) (Ping timeout: 268 seconds)
[07:36:22] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 268 seconds)
[07:40:46] <ether> it hasn't rained here in 6 weeks
[07:41:01] <ether> which, given this is a rainforest, is pretty unusual
[07:41:20] <ether> more than 4 days of no rain in a row is pretty weird normally
[07:41:36] <xenu> well i guess it's not a rainforest anymore
[07:47:28] *** Quits: Martchus (~martchus@2a01:c22:765a:ed00:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[07:47:58] *** Joins: Martchus (~martchus@dynamic-095-117-097-154.95.117.pool.telefonica.de)
[07:51:20] <ether> yeah it's all burning down
[07:52:04] <ether> and jerks are *still* throwing lit cigarette butts out of car windows
[07:58:14] *** Joins: gggp__ (~gggp@221.219.68.52)
[07:59:36] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 258 seconds)
[08:02:04] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[08:02:04] *** Joins: gggp (~gggp@60.10.23.160)
[08:04:07] *** Quits: gggp__ (~gggp@221.219.68.52) (Ping timeout: 268 seconds)
[08:05:37] <shlomif> ether: no one smokes
[08:10:18] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[08:11:13] *** Joins: gggp_ (~gggp@60.10.194.43)
[08:14:15] *** Quits: Trigon (~Thunderbi@73.127.1.41) (Read error: Connection reset by peer)
[08:14:18] *** Quits: gggp (~gggp@60.10.23.160) (Ping timeout: 252 seconds)
[08:14:32] *** Joins: Trigon (~Thunderbi@73.127.1.41)
[08:15:25] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[08:17:54] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[08:20:25] *** Quits: ueberall (ueberall_l@user/ueberall) (Quit: ZNC)
[08:21:28] *** Joins: ueberall (ueberall_l@user/ueberall)
[08:31:40] *** Quits: Trigon (~Thunderbi@73.127.1.41) (Ping timeout: 265 seconds)
[08:35:42] *** Joins: gggp__ (~gggp@111.63.14.119)
[08:38:34] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[08:48:10] <ether> was that sarcasm?
[08:49:04] *** Joins: gggp_ (~gggp@221.219.68.52)
[08:52:07] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[08:59:37] *** Quits: gggp_ (~gggp@221.219.68.52) (Ping timeout: 268 seconds)
[09:00:36] <shlomif> ether: no, it's true - people are good
[09:02:26] <shlomif> the devils have been affecting my media
[09:03:21] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:11:11] <ether> ok
[09:15:51] <shlomif> ether: sup besides? any perl hacking for the love of kittens?
[09:32:45] <shlomif> "Ran Eilam To Shlomi Fish: so what are you working on? Working on a new wiki about unit testing fortunes in Freecell?"
[09:40:16] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:44:27] *** Joins: Trigon (~Thunderbi@73.127.1.41)
[09:52:10] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 256 seconds)
[09:53:46] *** Joins: blastwave (~dmc@66.225.151.230)
[10:05:37] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:15:31] *** Joins: ufobat (~martin@dynamic-077-004-035-039.77.4.pool.telefonica.de)
[10:17:06] * GumbyPAN CPAN Upload: PDL-Graphics-PLplot-0.75 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-PLplot-0.75
[10:22:43] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[10:23:57] *** Joins: horsepatat (~horsepata@212.3.197.214)
[10:26:27] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! üëã)
[10:27:08] * GumbyPAN CPAN Upload: PDL-Graphics-PLplot-0.76 by ETJ https://metacpan.org/release/ETJ/PDL-Graphics-PLplot-0.76
[10:29:41] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[10:34:32] *** Joins: habamax (~habamax@vpn.avast.com)
[10:34:32] *** Quits: habamax (~habamax@vpn.avast.com) (Changing host)
[10:34:32] *** Joins: habamax (~habamax@user/habamax)
[10:45:44] *** dimbag_ is now known as dimbag
[10:47:26] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[10:52:06] *** Joins: haj (~haj@95.91.235.66)
[10:52:46] *** Joins: gggp (~gggp@60.10.23.160)
[10:53:28] *** Quits: seoul_man (~meh@097-080-088-148.res.spectrum.com) (Remote host closed the connection)
[10:56:40] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 265 seconds)
[10:58:36] *** Quits: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[11:08:54] *** Joins: k-man (~jason@user/k-man)
[11:12:38] *** Joins: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de)
[11:20:28] *** Quits: blastwave (~dmc@66.225.151.230) (Ping timeout: 258 seconds)
[11:21:13] *** Joins: blastwave (~dmc@66.225.151.230)
[11:22:26] *** Joins: gggp_ (~gggp@111.63.14.119)
[11:25:40] *** Quits: gggp (~gggp@60.10.23.160) (Ping timeout: 256 seconds)
[11:25:58] *** Joins: art1 (~romeyke@p200300ccdf05db005d54089762802356.dip0.t-ipconnect.de)
[11:28:44] *** Quits: randir (~randir@95-25-95-40.broadband.corbina.ru) (Remote host closed the connection)
[11:31:52] *** Joins: Pali (~pali@user/pali)
[11:31:56] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 268 seconds)
[11:31:58] *** Quits: haj (~haj@95.91.235.66) (Ping timeout: 258 seconds)
[11:32:15] * GumbyPAN CPAN Upload: Nasm-X86-20210727 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210727
[11:33:49] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:35:05] <shlomif> holy shit: https://metacpan.org/release/PRBRENAN/Nasm-X86-20210727/view/lib/Nasm/X86.pm
[11:35:10] <Paperbot> Link title(s): [ Nasm::X86 - Generate X86 assembler code using Perl as a macro pre-processor. - metacpan.org ]
[11:36:04] *** Joins: KnoP (~KnoP@p57b20c92.dip0.t-ipconnect.de)
[11:36:15] <shlomif> EvanCarroll: hi cowboy. sup?
[11:36:59] <Botje> shlomif: that's just an AST for nasm files. what's odd about it?
[11:37:15] * GumbyPAN CPAN Upload: Nasm-X86-20210728 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210728
[11:38:12] <shlomif> Botje: the table of cntents is huge
[11:39:18] *** Quits: R0b0t1``` (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 272 seconds)
[11:39:35] *** Joins: randir (~randir@93.159.239.42)
[11:40:53] *** Joins: R0b0t1``` (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[11:42:29] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:46:16] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[11:46:19] *** Parts: bfr (~yaaic@ip-109-43-115-146.web.vodafone.de) ()
[11:50:33] *** Quits: KnoP (~KnoP@p57b20c92.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:51:36] *** Joins: gggp__ (~gggp@111.63.14.119)
[11:54:35] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[12:04:21] *** Joins: brtastic1 (~Thunderbi@ec2-35-176-113-228.eu-west-2.compute.amazonaws.com)
[12:04:35] *** Quits: celphi (sid97751@user/celphi) (Quit: Connection closed for inactivity)
[12:04:38] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 252 seconds)
[12:04:38] *** brtastic1 is now known as brtastic
[12:04:51] <Botje> well, there's a lot to cover :)
[12:08:37] *** gggp__ is now known as gggp
[12:10:26] <shlomif> Botje: heh, x86-* FTW ;)
[12:10:57] <Botje> disagree
[12:11:04] <Botje> arm is more betterer.
[12:11:18] <Botje> x86 is tainted by the intel heritage
[12:11:30] <Botje> and all the hacks they made are coming back to bite them in the ass
[12:11:51] <shlomif> Botje: that was a joke...
[12:14:08] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[12:16:19] * GumbyPAN CPAN Upload: EekBoek-2.05.1 by JV https://metacpan.org/release/JV/EekBoek-2.05.1
[12:18:27] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 245 seconds)
[12:29:05] <mst> Botje: we really need a term for 'load/store architecture' distinct from RISC though - modern ARM doesn't really count as RISC in any other way, but ... sigh
[12:29:42] <shlomif> b
[12:30:41] <mst> as opposed to RISC-V which is actually still trying to be RISC (or "MIPS in a trenchcoat" depending on who you ask ;)
[12:34:58] *** Quits: gggp (~gggp@111.63.14.119) (Read error: Connection reset by peer)
[12:39:23] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:42:31] *** Quits: dimbag (~dimbag@62.76.35.23) (Ping timeout: 265 seconds)
[12:45:51] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[12:50:15] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 265 seconds)
[12:53:12] *** Joins: dimbag (~dimbag@62.76.35.23)
[13:00:10] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:01:32] *** Joins: diskin (~diskin@31.23.24.77)
[13:03:43] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[13:03:53] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[13:10:18] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 240 seconds)
[13:17:03] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:22:43] *** Joins: Mandevil (~mandevil@ip-89-102-168-162.net.upcbroadband.cz)
[13:22:45] *** Quits: blastwave (~dmc@66.225.151.230) (Ping timeout: 258 seconds)
[13:22:58] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[13:22:59] <Mandevil> Hm, Moo::Role can't require attribute, only method.
[13:23:09] <Mandevil> It seems that it can't require even accessors
[13:25:10] <lopid> https://metacpan.org/pod/Moo::Role#has
[13:25:11] <Paperbot> Link title(s): [ Moo::Role - Minimal Object Orientation support for Roles - metacpan.org ]
[13:26:36] <Mandevil> lopid: How's that relevant? I want to ensure the class I'm coposing into has an attribute.
[13:26:42] <Mandevil> composing
[13:27:07] <lopid> you want to verify its interface?
[13:27:25] <Mandevil> Well, if that attribute isn't present, it will fail.
[13:27:47] <Mandevil> So it would be nice to have this give a meaningful error message.
[13:29:01] <lopid> 'requires'?
[13:30:11] <Mandevil> It does not work on attributes, only methods.
[13:30:19] <shlomif> mst: hi! please code review https://github.com/shlomif/fiction-xml
[13:30:20] <Paperbot> Link title(s): [ GitHub - shlomif/Fiction-XML: Fiction-Text, Screenplay-Text, Fiction-XML and Screenplay-XML. ]
[13:31:06] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 240 seconds)
[13:31:29] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:32:30] <lopid> not sure Moo::Role is the right package to use for that
[13:32:56] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[13:33:48] <Mandevil> Well, I'll just not use require.
[13:38:05] *** Joins: celphi (uid97751@id-97751.brockwell.irccloud.com)
[13:38:42] *** Quits: celphi (uid97751@id-97751.brockwell.irccloud.com) (Changing host)
[13:38:42] *** Joins: celphi (uid97751@user/celphi)
[13:39:49] <mst> Mandevil: it can require accessor methods fine
[13:39:54] *** Quits: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[13:39:54] *** Quits: celphi (uid97751@user/celphi) (Client Quit)
[13:40:06] *** Joins: celphi (uid97751@user/celphi)
[13:40:17] <mst> Mandevil: just remember 'has' is runtime so you need to put the 'with' for the role -after- the has() call
[13:40:44] *** Joins: gggp (~gggp@111.63.14.119)
[13:43:27] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 258 seconds)
[13:45:45] *** Joins: gggp_ (~gggp@60.10.194.43)
[13:49:08] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[13:50:15] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[13:55:59] *** Quits: Pali (~pali@user/pali) (Ping timeout: 250 seconds)
[13:56:35] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Read error: Connection reset by peer)
[13:56:53] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[14:11:09] <Mandevil> Why is cpan client trying to download from dead servers?
[14:11:15] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[14:11:32] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9903 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9903
[14:12:03] <simcop2387> Mandevil: cpan or cpanm? if cpan you likely have dead mirrors in your config.  o conf urllist
[14:12:33] <Mandevil> Hm, true.
[14:12:33] <simcop2387> https://www.perl.com/article/44/2013/10/20/Find-CPAN-mirrors-and-configure-the-local-CPAN-mirror-list/ # has some more info on how to fix it
[14:12:33] <Paperbot> Link title(s): [ Find CPAN mirrors and configure the local CPAN mirror list ]
[14:13:31] <mst> just blow away the whole thing and use https://www.cpan.org/
[14:13:32] <Paperbot> Link title(s): [ The Comprehensive Perl Archive Network - www.cpan.org ]
[14:16:05] <Mandevil> mst: But I can configure fast local server :)
[14:16:45] <mst> Mandevil: if you're running your own mirror, sure, but that's more complicated
[14:16:48] *** Quits: Trigon (~Thunderbi@73.127.1.41) (Ping timeout: 258 seconds)
[14:17:36] <Mandevil> mst: I mean topologically close server.
[14:17:53] <Mandevil> --- mirror-r-01.nic.cz ping statistics ---
[14:17:53] <Mandevil> 5 packets transmitted, 5 received, 0% packet loss, time 4002ms
[14:17:53] <Mandevil> rtt min/avg/max/mdev = 2.654/3.309/4.089/0.475 ms
[14:17:56] <Mandevil> Like this close.
[14:18:09] <ehuelsmann[m]> I'd be surprised if cpan.org didn't have that itself.
[14:18:17] <ehuelsmann[m]> geo-dns, I mean.
[14:18:20] <LeoNerd> Oh, yah the mirror network is mostly dead these days. Just use cpan.org itself which has its own DNS-based mirrors
[14:18:24] <mst> right, cpan.org is CDN based and redirects to a topologically close cache
[14:18:36] <Mandevil> Ah
[14:18:40] <mst> Mandevil probably didn't bother to test and just assumed he was smarter than me, as usual
[14:18:57] <mst> you get used to it, just repeat the right answer until he listens :D
[14:19:55] <mst> LeoNerd: right, I was gonna try and put a team together to keep it going but then plague happened and we already had an offer of CDNification so fuck it
[14:21:03] <Mandevil> So just o conf push https://www.cpan.org/?
[14:21:03] <Paperbot> Link title(s): [ The Comprehensive Perl Archive Network - www.cpan.org ]
[14:21:39] <mst> I tend to 'o conf pop' until it's empty, then 'o conf push', then 'o conf commit'
[14:21:42] <mst> or just edit MyConfig.pm
[14:21:52] <Mandevil> I mean the URL
[14:21:58] <Mandevil> I already popped it clean
[14:22:28] <mst> so yeah, 'o conf urllist push https://www.cpan.org/' then 'reload index' to double check I didn't screw up my suggestion then 'o conf commit'
[14:22:28] <Paperbot> Link title(s): [ The Comprehensive Perl Archive Network - www.cpan.org ]
[14:22:49] *** Joins: furrymcgee (~devuan@31.179.186.66)
[14:28:11] <mst> Mandevil: can I ask, why do you ask for help when most times the first suggestion I make you decide to completely ignore until I repeat it at least opnce?
[14:28:19] <mst> Mandevil: we've been doing this for a while now and I really don't understand
[14:30:13] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 258 seconds)
[14:30:14] <Mandevil> Hm, took your CPAN advice right away.
[14:30:21] <Mandevil> At least I think so.
[14:30:28] <mst> Mandevil: < Mandevil> mst: But I can configure fast local server :)
[14:30:35] <mst> no, you argued with me first :P
[14:30:43] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:30:53] <mst> it just gets really tiring, you know?
[14:31:32] <Mandevil> Don't know what to say.
[14:31:45] <Mandevil> I took simcop2387's advice and configured local server.
[14:31:49] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[14:32:07] <Mandevil> THen I looked again at IRC and saw your response.
[14:32:15] <mst> if you don't understand why I suggested what I suggested, *ask*
[14:32:45] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:03] <mst> also, did you try the Moo solution yet?
[14:33:15] <Mandevil> Not yet.
[14:33:21] <Mandevil> I don't really understand what you mean
[14:33:30] *** Joins: csrf (~csrf@user/csrf)
[14:34:15] <Mandevil> brb
[14:34:23] <mst> ...
[14:34:46] <mst> Mandevil: aaaaaaaaaaaaa :(
[14:35:01] <mst> if you don't understand a suggestion, ASK, come on dude, I've told you this so many times :(
[14:35:08] <mst> what don't you understand?
[14:36:01] <ehuelsmann[m]> Mandevil: which part of the Moo advice/solution did you not understand? Was it the components being referred to? Was it how this can be a solution? or why your way can't be?
[14:37:40] <mst> Mandevil: https://f.perl.bot/p/t1cau7
[14:37:41] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[14:38:29] <Mandevil> mst: Aha, that makes it clear.
[14:38:51] <mst> Mandevil: right, but you could've *said* you didn't understand instead of ignoring me.
[14:39:00] <mst> Mandevil: ignoring people trying to help you is rude.
[14:39:12] <Mandevil> Though, isn't it bit messy when those withs are not at the top.
[14:39:17] <Mandevil> mst: Sorry.
[14:39:22] <Mandevil> mst: I didn't mean to be rude.
[14:39:38] <mst> you do this all the time and it's very frustrating.
[14:39:51] <mst> and, yes, it doesn't look perfect, but that's how stuff runs.
[14:40:01] <mst> if I've got too many 'has' statements I'll stick a comment above them
[14:40:11] <mst> # with 'Foo'; after accessors have been defined for requires()
[14:40:13] <mst> has ...
[14:40:14] <mst> has ...
[14:40:16] <mst> with 'Foo';
[14:40:29] <mst> at least then I know it's there even if it's not on screen
[14:41:29] *** Quits: mweckbecker (~matthias@weckbecker.name) (Quit: leaving)
[14:42:02] *** Joins: mweckbecker (~matthias@weckbecker.name)
[14:42:25] <Mandevil> I see.
[14:43:06] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[14:43:14] <mst> I spent years experimenting with alternatives, but the ones that made things less messy all made them weirder and therefore harder for other people to debug
[14:43:27] <mst> so in the end I settled on "add a comment and let perl keep working normally"
[14:43:35] <mst> sometimes extra clever just doesn't pay its way
[14:44:38] <Mandevil> No problem, in my case it's not even that bad anyway with only one dependent attribute.
[14:44:47] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[14:45:52] <Mandevil> So I'll do it like this and be done with it: https://f.perl.bot/p/zpx9b1
[14:45:53] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[14:46:35] * GumbyPAN CPAN Upload: Object-Pad-0.47 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.47
[14:46:35] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Final-0.01 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Final-0.01
[14:47:32] <mst> Mandevil: seems reasonable to me
[14:47:37] <mst> Mandevil: oh, one way to cheat
[14:47:53] <mst> make a role called SPAM::Host::HasSNMP that just does 'has snmp => ...'
[14:47:57] <mst> then you can 'with' that first
[14:48:06] <mst> and now you don't have a 'has' statement before your with()s
[14:48:33] <Mandevil> Understood.
[14:48:44] <Mandevil> I think current state is fine for me.
[14:48:51] <mst> whether or not that's actually better is a matter of taste, yeah
[14:49:27] <Mandevil> Having explicitly said in the code what the roles depend on seems like a good thing
[14:49:35] <mst> ayup
[14:52:56] *** Joins: bliako (~bliako@62-130-115.netrun.cytanet.com.cy)
[14:57:56] <bliako> Hi all, I have placed a preliminary Inline::CUDA at https://github.com/hadjiprocopis/perl-inline-cuda  If anyone has the time and a cuda-capable GPU, please test it on your system and let me know of problems. I have tested it on Linux. The initial post of this call is at https://perlmonks.org/?node_id=11135429 where you can leave (anonymous)
[14:57:56] <bliako> comments or send me an email
[14:57:58] <Paperbot> Link title(s): [ GitHub - hadjiprocopis/perl-inline-cuda: Provides a preliminary Perl Inline::CUDA module until mi... ] [ Inline::CUDA : looking for feedback ]
[15:00:53] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[15:01:22] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 240 seconds)
[15:01:25] *** aquanite is now known as aquanight
[15:01:36] * GumbyPAN CPAN Upload: Object-Pad-SlotAttr-Trigger-0.01 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-SlotAttr-Trigger-0.01
[15:03:17] <Mandevil> require vs requires is getting me way too often
[15:03:44] <LeoNerd> Blame original Perl. "require" is a silly name for a request to load a module. I'd have called it "load"
[15:03:51] <mst> eventually my fingers learned to get that right without my brain being involved
[15:04:43] <El_Che>  /t < mst> eventually my fingers learned to get that right without my brain being involved
[15:05:54] <mst> El_Che: yes?
[15:06:39] <ehuelsmann[m]> LeoNerd: isn't the "::Trigger" a special case of the "after" modifier?
[15:06:40] *** Quits: ilmari_ (~ilmari@user/ilmari) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: entonian[m] (~entonianm@2001:470:69fc:105::7ac0) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Quit: Bridge terminating on SIGTERM)
[15:06:45] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Quit: Bridge terminating on SIGTERM)
[15:06:45] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Quit: Bridge terminating on SIGTERM)
[15:06:48] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[15:06:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[15:08:29] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[15:08:29] <ehuelsmann[m]> I guess my question is: how are they different?
[15:08:35] <mst> ehuelsmann[m]: you broke matrix!
[15:08:51] *** Joins: ilmari_ (~ilmari@user/ilmari)
[15:08:55] <Adura> The matrix bridge got ::Trigger'd.
[15:09:06] *** Joins: latk (~latk@2001:470:69fc:105::255)
[15:09:09] <mst> also, :Trigger is equivalent to 'trigger => 1' on an M* attribute declaration and only gets called on set
[15:09:16] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[15:09:22] <mst> so, yeah, you could do 'after' plus test @_ but really, no
[15:09:28] <mst> I guess
[15:09:29] *** Joins: entonian[m] (~entonianm@2001:470:69fc:105::7ac0)
[15:09:40] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[15:09:40] <mst> after foo ($self, $new_value = return) { ... }
[15:09:40] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[15:09:45] <mst> but let's not
[15:09:53] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[15:10:04] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[15:11:14] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 258 seconds)
[15:12:34] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 240 seconds)
[15:14:19] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[15:16:25] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
[15:17:06] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 240 seconds)
[15:17:59] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[15:19:27] *** Joins: gggp (~gggp@60.10.194.43)
[15:20:32] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 245 seconds)
[15:25:14] <LeoNerd> ehuelsmann[m]: Yeah kindof, we just don't have `after` yet.. and it's a bit less convenient to do it that way anyway
[15:25:36] <simcop2387> Alright, ovh $12/mo is what I;lll end up with for the perlbot server.  Need to finish spam filter and deployment stuff for it, and then test haproxy in front of the evalserver
[15:26:03] <ehuelsmann[m]> ah. right. no method modifiers yet.
[15:26:04] <LeoNerd> simcop2387: Weather sensor troubles - https://twitter.com/cpan_pevans/status/1420698600569548802
[15:26:05] <Paperbot> Paul Evans (@cpan_pevans) 4m9s ago: I think my rainfall sensor broke overnight. I'm pretty sure we didn't receive nearly 4km of rainfall - that would have caused quite the flood.
[15:26:18] * LeoNerd looks up how to delete data from prometheus
[15:26:50] <simcop2387> gonna have only latest stable and blead locally on the server to reduce disk needs and then have the others on my home server
[15:27:22] <simcop2387> LeoNerd: but how can you be sure?
[15:27:50] <simcop2387> Maybe it was 4km of rain, but only over a 1mm**2 area?
[15:34:13] <shlomif> mst: hi! please code review https://github.com/shlomif/fiction-xml or let me know why you can't/won't
[15:34:14] <Paperbot> Link title(s): [ GitHub - shlomif/Fiction-XML: Fiction-Text, Screenplay-Text, Fiction-XML and Screenplay-XML. ]
[15:35:55] <mst> shlomif: doing something else
[15:36:31] <shlomif> mst: i see
[15:36:39] <shlomif> thanks
[15:42:00] *** Joins: gggp_ (~gggp@60.10.194.43)
[15:43:28] * shlomif thinks the devils have been mutilating his perception
[15:45:07] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[15:45:12] *** Quits: nirnam (~nirnam@1.46.6.121) (Read error: Connection reset by peer)
[15:47:16] <mst> shlomif: it's an XML schema and I have basically no opinions about XML schema design because they annoy me
[15:47:34] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[15:48:31] <shlomif> mst: 1. i use relaxng. 2. there are converters too
[15:49:33] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:49:56] <mst> shlomif: 3. that's not the point at all.
[15:50:09] <mst> relaxNG is *a* way of specifying a schema for XML documents
[15:50:50] <shlomif> mst: ok...
[15:51:47] <huf> i like how xml is so shit that they had to invent a better syntax for specifiying schemas
[15:52:05] <huf> ... couldnt we just replace xml as a whole with a better syntax? oh no, i  guess not :D
[15:52:36] <huf> golden chamberpot but no flushing loo
[15:52:58] *** Quits: diskin (~diskin@31.23.24.77) (Ping timeout: 240 seconds)
[15:53:03] <shlomif> at least xml has schemas whereas yaml doesn't
[15:54:08] <shlomif> huf: i use the xml-based rng syntax
[15:54:15] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[15:54:16] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 256 seconds)
[15:56:42] <simcop2387> There are some attempts at making a yaml schema ir appears, dunno how good they are, https://asdf-standard.readthedocs.io/en/1.5.0/schemas/yaml_schema.html
[15:56:42] <Paperbot> Link title(s): [ YAML Schema ‚Äî ASDF Standard 1.5.0 documentation ]
[15:56:52] <shlomif> and don't get me started on the markdowns - https://en.wikipedia.org/wiki/A_language_is_a_dialect_with_an_army_and_navy
[15:56:53] <Paperbot> Link title(s): [ A language is a dialect with an army and navy - Wikipedia ]
[16:00:11] * shlomif also uses xslt
[16:00:24] <shlomif> perlbot: xslt
[16:00:25] <perlbot> shlomif: XSLT are XSL Transformation - transform XML files to other XMLs using an XML-based language. See XML::LibXSLT. Also see xslt facts.
[16:00:35] <mst> you can use JSON::Schema for YAML
[16:00:38] <mst> what could possibly g-
[16:04:19] <Botje> surprisingly little!
[16:10:49] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[16:11:01] <choroba> At $job-2, my colleague created XML::XSH2 and I later inherited it
[16:11:15] <choroba> we did a lot of XML there
[16:11:44] * GumbyPAN CPAN Upload: Date-ManipX-Almanac-0.001_01 by WYANT https://metacpan.org/release/WYANT/Date-ManipX-Almanac-0.001_01
[16:12:17] <choroba> But later I discovered problems like https://gitlab.gnome.org/GNOME/libxml2/-/issues/141
[16:12:17] <Paperbot> Link title(s): [ Filenames starting with a digit are stored percent encoded in xmlDoc.URL (#141) ¬∑ Issues ¬∑ GNOME ... ]
[16:12:44] <choroba> so my love with XML kind of faded away
[16:13:49] <choroba> btw, shlomif, couldn't it be possible to fix this problem on the Perl side?
[16:14:28] *** Joins: gggp__ (~gggp@60.10.23.160)
[16:15:05] <choroba> I guess prefixing every file name without path with a "./" should be enough
[16:15:11] <shlomif> choroba: xpath?
[16:15:55] <choroba> No. If you open a file with libxml, it sometimes can't tell you what file it opened.
[16:15:58] *** Joins: deadmarshal (~deadmarsh@95.38.118.217)
[16:16:23] *** gggp__ is now known as gggp
[16:16:34] <choroba> some file names get url encoded, some don't. 
[16:16:55] <choroba> and as the link shows, the current maintainer says it can't be fixed.
[16:17:37] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[16:19:51] *** Joins: deadmarshal_ (~deadmarsh@95.38.118.190)
[16:20:20] *** Quits: deadmarshal (~deadmarsh@95.38.118.217) (Ping timeout: 256 seconds)
[16:21:45] * GumbyPAN CPAN Upload: Ozeki-Libs-Rest by ZUSY https://metacpan.org/release/ZUSY/Ozeki-Libs-Rest
[16:22:12] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 245 seconds)
[16:22:36] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 256 seconds)
[16:24:33] *** Joins: tcohen_ (~tcohen@192.141.149.96)
[16:27:38] *** Joins: gggp_ (~gggp@60.10.194.43)
[16:28:25] *** Joins: gggp__ (~gggp@60.10.194.43)
[16:28:38] *** Joins: nirnam (~nirnam@1.46.6.121)
[16:30:11] *** Quits: gggp (~gggp@60.10.23.160) (Killed (NickServ (GHOST command used by gggp__!~gggp@60.10.194.43)))
[16:30:12] *** gggp__ is now known as gggp
[16:30:23] <shlomif> choroba: colons in filenames really?
[16:30:46] *** Quits: tcohen_ (~tcohen@192.141.149.96) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[16:31:17] *** Quits: bliako (~bliako@62-130-115.netrun.cytanet.com.cy) (Quit: bliako)
[16:31:56] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 252 seconds)
[16:32:05] <choroba> Yes
[16:32:30] <mst> I'd rather deal with colons than spaces
[16:32:40] <choroba> I discovered it by chance
[16:33:12] *** Joins: tcohen (~tcohen@192.141.149.75)
[16:33:20] <choroba> there was a file I needed to open, but when I saved the file, the changes weren't there. Then I noticed another file was created with the colon replaced by the percent escape...
[16:33:52] <mst> LOL
[16:33:57] <mst> roundtripping is a superpower
[16:34:10] <choroba> It was in Perl, but I was able to reproduce the problem in C, too
[16:34:10] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[16:34:42] <Botje> well, windows doesn't like colons in filenames
[16:34:54] <mst> windows doesn't like the living
[16:35:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:31] <choroba> I don't think the problem is MSWin related, but who knows.
[16:36:00] <mst> it's a good reason to tell people not to use colons in filenames for many purposes though
[16:36:15] <mst> though when it comes to windows portability is all a big CON: anyway
[16:36:18] <choroba> it only happens for filenames starting with a digit
[16:36:20] * shlomif is a living dead: https://www.shlomifish.org/humour/Star-Trek/We-the-Living-Dead/
[16:36:28] *** Joins: gggp_ (~gggp@60.10.194.43)
[16:36:51] <choroba> I don't think you can name your drive 2: in MSWin
[16:39:29] <ehuelsmann[m]> The thing about XML is that people seem to think it's text. But it's not; it's a machine readable format that looks like it's human readable.
[16:39:47] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[16:40:32] <mst> ehuelsmann[m]: I'd argue that the basic problem is nobody replaced SGML so people kept using XML for SGMLish pruposes as well
[16:41:03] <shlomif> ehuelsmann[m]: i can argue the same about perl or lisp
[16:41:28] <mst> SXML is a much nicer human encoding of XML infospace a lot of the time
[16:42:00] <mst> shlomif: you could, but it would be a very stupid argument and we'd be forced to point and laugh at you
[16:42:27] <ehuelsmann[m]> At work we deal with XML a lot; i have colleagues who think it's important to make the tags self-explanatory: <SomeVeryLongDescriptiveNameForABoolean‚â•yes</SomeVeryLongDescriptiveNameForABoolean>
[16:43:00] <ehuelsmann[m]> Heh. The closing tag was consumed by my client
[16:43:24] <ehuelsmann[m]> Very high signal to noise ratio.
[16:43:32] <mst> I saw: <SomeVeryLongDescriptiveNameForABoolean‚â•yes</SomeVeryLongDescriptiveNameForABoolean>
[16:43:34] <ehuelsmann[m]> Noise to signal, i mean
[16:43:38] <mst> so only the closing > of the opening tag
[16:43:57] * mst quite likes the variant that allows </> for "close last tag"
[16:44:17] <DrHyde> that's standard sgml innit?
[16:44:27] <mst> DrHyde: fucked if I remember
[16:44:33] <shlomif> mst: "everything can be encoded as 1s or 0s"
[16:44:57] <shlomif> s/ or/ and/
[16:45:03] <ehuelsmann[m]> Nobody in our company would dare use that construct: what if some parser wasn't implemented according to spec? That parser might break!
[16:45:14] <Botje> mst: my favorite is <b/sample text/
[16:45:57] <Botje> breaks people who think SGML ~ XML
[16:47:06] <ehuelsmann[m]> I must say that the schemas in XML and most portably, the linters for that, make it somewhat useful
[16:48:20] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 255 seconds)
[16:48:26] *** Quits: deadmarshal_ (~deadmarsh@95.38.118.190) (Ping timeout: 252 seconds)
[16:48:41] <ehuelsmann[m]> s/portably/importantly/
[16:54:05] *** Joins: jabberwok (~wlindley@75.105.20.104)
[16:55:04] <mst> Botje: wtf does that even do?
[16:55:23] <mst> ehuelsmann[m]: xmllint even without schemas has saved me much pain
[16:55:59] <Botje> mst: <b>sample text</b>
[16:56:06] <mst> Botje: huh
[16:58:27] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 252 seconds)
[16:59:54] <simcop2387> shlomif: everything computable can be encoded as 1s and 0s anyway
[17:00:12] <mst> config.bf
[17:00:26] <shlomif> simcop2387: right
[17:00:38] * shaldannon takes notes
[17:00:46] <shaldannon> 1's and 0's you say
[17:00:47] <mst> (which is a brainfuck program whose output is the config text, obviously)
[17:01:17] *** Joins: randir (~randir@93.159.239.42)
[17:01:32] <shlomif> simcop2387: my point is that syntax does matter
[17:01:47] <simcop2387> "shaldannon" =~ s/ald//
[17:01:51] <mst> and that's why friends don't let friends use XML, yes
[17:04:35] <simcop2387> shaldannon: if you didn't get my terrible joke, https://en.wikipedia.org/wiki/Shannon_coding
[17:04:36] <Paperbot> Link title(s): [ Shannon coding - Wikipedia ]
[17:04:42] *** Joins: gggp (~gggp@111.63.14.119)
[17:04:48] <shlomif> mst: i use xml,yaml, json, ini, and some custom grammars - feel free to shoot me
[17:05:03] <mst> shlomif: JSONY ftw
[17:05:10] <Botje> you forgot toml, the hot new thing
[17:05:20] <mst> Botje: that's just ini with delusions of grandeur
[17:05:24] <mst> (I quite like it, but still)
[17:05:30] <ehuelsmann[m]> toml...
[17:05:44] <Botje> I thought we appreciated hubris :D
[17:05:47] <ehuelsmann[m]> we really needed one more format...
[17:05:56] <shaldannon> simcop2387++
[17:05:56] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[17:05:58] <mst> Botje: oh yes, I actually rather like toml
[17:06:02] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 252 seconds)
[17:06:02] <mst> but I do mostly regard it as ini++
[17:06:11] *** Parts: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Leaving)
[17:06:50] <simcop2387> mst: i see it as basically INI in a tuxedo (or cocktail dress, depending on your preference).
[17:07:06] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[17:07:06] <shaldannon> simcop2387: as opposed to a thong?
[17:07:32] <simcop2387> shaldannon: i think a thong would be Config::Any
[17:07:36] <shaldannon> LOL
[17:07:45] <mst> but I don't wear thongs
[17:08:05] <simcop2387> mst: we know, the block association knows, you were warned last time
[17:08:31] <mst> don't look under my kilt if you don't want to find out FFS
[17:09:02] <simcop2387> for some reason that made me wonder if anyone makes a sequined kilt
[17:09:38] <simcop2387> sort of but not really based on google image search
[17:10:13] <simcop2387> there are sequined tartan styled skirts but i don't see any kilts
[17:10:40] <mst> I mean I mostly treat the kilt as a skirt with pockets
[17:10:56] <mst> a friend of mine gave me a link to a US company that does skirts and dresses with pockets
[17:11:00] <mst> totally looking into that at some point
[17:15:15] *** Joins: mcint (mcint@user/mcint)
[17:15:35] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[17:15:37] *** Joins: deadmarshal (~deadmarsh@95.38.118.190)
[17:16:02] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 268 seconds)
[17:16:07] *** Joins: magla (~gelignite@55d45e55.access.ecotel.net)
[17:18:59] *** Joins: gggp_ (~gggp@60.10.194.43)
[17:19:31] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[17:19:35] <jabberwok> wasn't it Karen Carpenter who advocated thing... thing a thong...   (/me slaps self with the mIRC trout)
[17:19:54] *** Quits: deadmarshal (~deadmarsh@95.38.118.190) (Ping timeout: 252 seconds)
[17:21:50] *** Joins: gryphn (~gryphon@102.129.145.153)
[17:21:56] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[17:24:32] <shaldannon> would that be $self->slap('trout'); ?
[17:25:16] <v`> i can barely accessorise jeans and a shirt
[17:25:31] <v`> skirts and kilts are off the menu for the forseeable future
[17:27:04] <v`> but it's traditional to not wear underwewar underneath a kilt?
[17:27:11] <v`> comfortable++
[17:27:31] *** gggp_ is now known as gggp
[17:27:50] <shaldannon> there's a song about a scottsman who finds himself tied with a blue ribbon
[17:29:02] <shaldannon> https://www.youtube.com/watch?v=MZ35SOU9HTM, I think
[17:29:02] <Paperbot> YouTube video linked by shaldannon: The drunk Scotsman (lyrics) - published by Saine Tarasind
[17:36:52] * GumbyPAN CPAN Upload: OPCUA-Open62541-0.027 by BLUHM https://metacpan.org/release/BLUHM/OPCUA-Open62541-0.027
[17:40:45] <mst> shaldannon: that would result in me yelling PUT ME DOWN
[17:42:23] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[17:43:06] *** Joins: gggp_ (~gggp@60.10.194.43)
[17:46:32] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[17:53:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[17:54:09] *** Joins: gggp__ (~gggp@125.33.88.49)
[17:54:58] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 256 seconds)
[17:55:17] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[17:55:17] *** diskin_ is now known as diskin
[17:56:07] <Kobaz> mst: yp
[17:56:09] <Kobaz> mst: yo
[17:56:13] <mst> Kobaz: yoyoyoyo
[17:56:34] <Kobaz> yo yo!
[17:56:55] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[17:58:31] <Kobaz> mst: do you do any postgres replication? like bucardo?
[17:59:14] <mst> Kobaz: basic streaming replication is surprisingly hard to kill once it's set up
[17:59:28] <Kobaz> we do streaming with barman
[17:59:45] <mst> ok, step back and explain what you're trying to achieve that that doesn't
[17:59:48] <Kobaz> but we also need to deal with like multi-master configuration systems
[18:00:03] <Kobaz> basically we have some basic replication for backup purposes
[18:00:03] <mst> multi-master normally means "you made a mistake somewhere"
[18:00:14] <Kobaz> not necessarily
[18:00:22] <mst> I said *normally*
[18:00:34] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:a:13dd:7c09:9436) (Ping timeout: 240 seconds)
[18:00:36] <mst> hence wanting a /achieve before opining further :P
[18:00:41] <Kobaz> multi-master to us, mean we have a 'local' customer system where configuration changes are being made that needs to propagage back up to 'the cloud'
[18:00:55] <Kobaz> which also serves as the goal/wanting
[18:01:15] <Kobaz> and where the local system needs to survive without having 'the cloud'
[18:01:20] <mst> but you also need to be able to modify the same configuration at the cloud end?
[18:01:25] <Kobaz> not typically
[18:01:35] <Kobaz> well, the type of configuration modification is different, per location
[18:01:37] <mst> then that's not multi master, that's just replication
[18:01:49] <Kobaz> the master tends to control routing and overall design
[18:01:54] * GumbyPAN CPAN Upload: EekBoek-2.051 by JV https://metacpan.org/release/JV/EekBoek-2.051
[18:01:55] <Kobaz> the local system makes mini changes based on that
[18:02:02] *** simcop2387 is now known as mycroft2387
[18:02:07] <Kobaz> the local system says 'hey we're in night mode now'
[18:02:12] <Kobaz> and that needs to push back to master
[18:02:31] <ehuelsmann[m]> Kobaz: sounds like you need 2 channels.
[18:02:33] <Kobaz> so yeah right now we treat it as replication
[18:02:37] *** mycroft2387 is now known as simcop2387
[18:02:38] <mst> maybe worth separating those bits out and using pglogical
[18:02:49] <mst> so each server is the single point of truth for its bits
[18:03:07] <Kobaz> aah
[18:03:10] <Kobaz> that makes sense
[18:03:17] <Kobaz> we're keeping two truths right now, unfortunately
[18:03:28] <Kobaz> someone goes to the portal and says, hey set this to night
[18:03:41] <Kobaz> so then now night is set on the master.. and if things are healthy, it does to the local
[18:03:52] <Kobaz> if the local is unreachable then,.. well, now you are out of sync
[18:04:28] <simcop2387> that'll be a fun bot for you guys when i make it.  you'll be able to controll my new home assistant when it's up.  i'll block my monitors though
[18:04:49] <Kobaz> so really, set night needs to confirm it's set on the local first, and then the local will push back to the master when it's updated
[18:04:57] *** Joins: XV8 (~XV8@2601:5cb:c001:50:1a1f:cb47:7596:f578)
[18:05:46] <ehuelsmann[m]> Kobaz: maybe you need a set of signals to be sent from the cloud to local, where local picks them up, does what it needs, updates the database and that replicates to the cloud (upon which, the signal can be cleared?)
[18:06:16] <Kobaz> yeah
[18:06:23] <Kobaz> i think that's better for sure
[18:06:44] <Kobaz> need like a 'truth token'
[18:06:46] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[18:06:52] <Kobaz> who has the baton, basically
[18:07:03] <Kobaz> eventually we'll be moving into local clusters instead of just local instances
[18:07:16] <Kobaz> and then there will have to be a baton given to the leader of the cluster, at that point
[18:07:38] <Kobaz> i like it!
[18:07:49] <ehuelsmann[m]> you can do both with Pg: for a connected local, you can use LISTEN/NOTIFY to wake it up. For an unconnected local, you'll need to process on reconnect.
[18:08:01] <Kobaz> yeah, makes sense 
[18:08:54] <mst> also logical replication can probably use triggers to fire NOTIFY
[18:09:11] <Kobaz> yeah we're lacking in use of NOTIFY
[18:09:13] <jabberwok> With Object::Pad i used the snippet from the Synopsis, and inserted $DB::single=1; into the 'move' method, but apparently the debugger can't see or change the $x or $y 'slots' , -- doing Perl since '94 and never saw actual 'write-only code' before.  hmm.
[18:09:22] <Kobaz> sounds like some good stuff to add
[18:09:30] <mst> jabberwok: oh, the debugger probably can't see it because it's a lexical
[18:09:51] <mst> jabberwok: and probably also a weird one
[18:11:24] *** Quits: blastwave (~dmc@static-66-225-151-230.ptr.terago.net) (Ping timeout: 256 seconds)
[18:11:55] * GumbyPAN CPAN Upload: App-ansifold-1.09 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-ansifold-1.09
[18:13:39] <jabberwok> Makes sense.  Bit of an obstacle, tho, in trying to re-implement old code to the new ways one-piece-at-a-time.  Will whatever makes core be debuggable, would you think?
[18:13:55] <mst> jabberwok: it's almost cvertainly fixable
[18:14:20] <mst> I just odn't know much about the debugger cos I don't generally use it
[18:14:58] <jabberwok> =nod=  As long as something in Test:: can test 'what you thought you made is what actually was created' 
[18:16:16] <mst> I'm basically a "use tests and/or Devel::DDCWarn calls" debugger
[18:16:30] <mst> fuck, my pure perl modules usually break the debugger to begin with
[18:16:37] <mst> then somebody who understands how2debugger sends me a patch
[18:17:23] * ehuelsmann[m] last used a debugger when he wrote Java -- like, 10 years ago
[18:17:34] <LeoNerd> jabberwok: $x and $y should just appear like normal lexicals at that point
[18:18:37] *** gggp__ is now known as gggp
[18:18:40] <shlomif> yay! my change worked at first try
[18:20:42] <ehuelsmann[m]> Hoping we have a different set of attendees in the channel than a few days ago: Anybody with experience in using Locale::TextDomain::OO to move away from Locale::Maketext ?
[18:21:08] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[18:21:09] *** Quits: horsepatat (~horsepata@212.3.197.214) (Read error: Connection reset by peer)
[18:21:13] <mst> ehuelsmann[m]: I poked the ::OO thing once a while back
[18:21:29] <perlbot> jabberw0k pasted a new file at https://l.perl.bot/p/iod4mn - Trying to debug an Object::Pad example
[18:21:34] <ehuelsmann[m]> mst: did it work for you? 
[18:21:45] <ehuelsmann[m]> and if not, which direction did you take?
[18:22:23] <simcop2387> LeoNerd: probably going to make something for DC to work with this, https://www.reddit.com/r/HomeServer/comments/8urc1c/supermicro_psu_modifiication/ for the i2c bit.  just waiting on a nice pcb that adds a /dev/i2c* device for me
[18:22:25] <Paperbot> Link title(s): [ Supermicro PSU Modifiication : HomeServer ]
[18:23:04] <LeoNerd> Mmm nice :)
[18:23:34] <buZz> simcop2387: -add- ? 
[18:23:39] <mst> ehuelsmann[m]: I think it worked, it was a while back
[18:23:45] <buZz> why not just connect the i2c to SMBus pins on a memory module
[18:23:47] <buZz> or something
[18:23:50] <buZz> smbus == i2c
[18:24:23] <ehuelsmann[m]> ok. that's at least good to know. I'll need to spend time figuring out how to move to that, from Locale::Maketext in LedgerSMB.
[18:25:15] <mst> ehuelsmann[m]: basically, memory is "it annoyed me less but i dunno beyond that"
[18:25:49] <ehuelsmann[m]> yes. well, that's a pretty acceptable initial test :-)
[18:26:00] *** Joins: deadmarshal (~deadmarsh@95.38.118.190)
[18:26:40] <jabberwok> LedgerSMB is still under active development? I tried to move a client to that fifteen years ago without much luck. I really miss the accounting system I worked on early 1980s in BASIC-PLUS/2 on RSTS/E. Don't miss writing code on an ADM-3 (not 3A, none of that fancy cursor addressing stuff!)
[18:27:03] <ehuelsmann[m]> jabberwok: absolutely.
[18:27:06] <ehuelsmann[m]> jabberwok: releases every 2-3 weeks.
[18:27:31] *** Joins: horsepatat (~horsepata@212.3.197.214)
[18:27:42] <ehuelsmann[m]> we try to address immediate accounting problems quickly and feature requests on a yearly minor-release cycle.
[18:28:33] <ehuelsmann[m]> check out ledgersmb.org or https://github.com/ledgersmb/LedgerSMB/blob/1.8/Changelog for the current stable release branch changelog
[18:28:34] <Paperbot> Link title(s): [ LedgerSMB/Changelog at 1.8 ¬∑ ledgersmb/LedgerSMB ¬∑ GitHub ]
[18:29:24] <jabberwok> ehuelsmann[m] ++
[18:29:44] <mst> jabberwok: but yeah, per leonerd, if it doesn't work, please show more information
[18:30:03] <mst> shit. missed the paste.
[18:30:11] <mst> LeoNerd: https://l.perl.bot/p/iod4mn
[18:30:11] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[18:43:23] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:43:39] *** Joins: bit4bit_ (~bit4bit@190.128.123.78)
[18:49:00] *** Joins: gggp_ (~gggp@125.33.88.49)
[18:52:09] <LeoNerd> Not sure what I'm supposed to do with this
[18:52:51] *** Quits: gggp (~gggp@125.33.88.49) (Ping timeout: 276 seconds)
[18:53:02] *** Joins: blastwave (~dmc@static-66-225-151-230.ptr.terago.net)
[18:53:12] <mst> jabberwok: you pasted code but nothing about actually trying to debug it
[18:53:27] <mst> jabberwok: that's not a helpful report for a debug problem :P
[18:53:40] <LeoNerd> Also keep in mind the only thing I know about "perldb" is how to spell its name
[18:54:54] <gordonfish> It'll be annoying for anyone who comes up with a "Perl DataBase"
[18:56:07] <gordonfish> (Although with Postgre I don't see that happening. And earlier this month I got another client using it ;p )
[18:57:01] *** Quits: horsepatat (~horsepata@212.3.197.214) (Read error: Connection reset by peer)
[18:57:42] *** Parts: art1 (~romeyke@p200300ccdf05db005d54089762802356.dip0.t-ipconnect.de) ()
[19:01:00] *** Joins: gggp__ (~gggp@60.10.23.160)
[19:01:29] <ilmari> gordonfish: it's pg or pgsql postgres or postgresql, _never_ postgre
[19:01:39] <ilmari> +or in there
[19:02:53] <gordonfish> Right, I missed the s on the end
[19:03:12] <LeoNerd> Not to be confused with postgrey, the greylisting service for postfix
[19:03:23] <gordonfish> Oh
[19:04:13] <gordonfish> Although I always found it a tad odd, seeing as it is 'postgre'. 'sql'
[19:04:22] <ilmari> https://twitter.com/postgre_s
[19:04:33] *** Quits: gggp_ (~gggp@125.33.88.49) (Ping timeout: 276 seconds)
[19:04:50] <ilmari> gordonfish: it's a portmanteau, they often get a bit mangled in the join
[19:04:57] *** Quits: deadmarshal (~deadmarsh@95.38.118.190) (Ping timeout: 250 seconds)
[19:05:31] <gordonfish> Ah
[19:05:59] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:06:04] <ilmari> post-ingres -> postgres, postgres + sql -> postgresql
[19:06:18] <ilmari> (it originally used QUEL for the query language)
[19:06:24] <gordonfish> Nice
[19:07:01] <ilmari> oh, it was Postgres95 that switched to SQL
[19:07:16] <ilmari> but as noted in the docs ¬´By 1996, it became clear that the name ‚ÄúPostgres95‚Äù would not stand the test of time.¬ª
[19:07:27] <ilmari> https://www.postgresql.org/docs/current/history.html
[19:07:28] <Paperbot> Link title(s): [ PostgreSQL: Documentation: 13: 2.¬†A Brief History of PostgreSQL ]
[19:07:29] <gordonfish> The first QUEL, the developers did say, was certain poor users of mysql
[19:07:48] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 276 seconds)
[19:08:12] *** Joins: ghoust (~ghoust@95.47.200.2)
[19:08:27] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Ping timeout: 276 seconds)
[19:08:33] <ilmari> ah, PostQUEL is why the client library is called libpq
[19:08:45] <gordonfish> Ahhhhhh
[19:08:47] <LeoNerd> Following that fine UNIX tradition of two-lettered names
[19:09:13] <LeoNerd> eval: sprintf "Why would we ever need more than %d commands", 26*26
[19:09:14] <perlbot> LeoNerd: Why would we ever need more than 676 commands
[19:11:06] *** Quits: bit4bit_ (~bit4bit@190.128.123.78) (Quit: Leaving)
[19:12:23] <gordonfish> Who needs more than 64k ram
[19:13:18] <bit4bit> hi, i trying replace a fence block on markdown with some text, i using the regex s/~~~\s*perl[^~]+~~~/$content/s; but's fail when content has a ~
[19:13:22] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:13:36] <mst> bit4bit: well, yes, because that regexp won't handle that at all
[19:24:58] <gordonfish> bit4bit: Fence block? Can you paste an example of what you are trying to match against?
[19:25:41] <bit4bit> my  $text = <<"EOF";
[19:25:42] <bit4bit> ~~~ prueba
[19:25:42] <bit4bit> haber
[19:25:42] <bit4bit> dele carajo
[19:25:42] <bit4bit> ~~~
[19:25:42] <bit4bit> otro mas
[19:25:46] <bit4bit> EOF
[19:26:18] <gordonfish> Please paste an example to the paste bin (like the one in /topic)
[19:26:27] <bit4bit> ok
[19:26:55] <gordonfish> Does the content always end with ~~~ on its own line?
[19:27:56] <gordonfish> Please show a real world example (including one with a content section containing a ~ as you mentioned.)
[19:27:59] <pragma-> "require is a silly name for a function to load a module. i'd have call it load".   /me tries not to look at `bless`
[19:28:28] <gordonfish> I like bless
[19:28:41] <mst> awwww
[19:29:13] <gordonfish> It's something unique that seems to fit for what it does.
[19:29:36] *** Joins: WinterStar (~IceLight@user/icelight)
[19:29:44] <xq> could have been worse
[19:30:07] <perlbot> bit4bit pasted a new file at https://l.perl.bot/p/ph7syg - replace fence blocks
[19:32:30] <mjgardner> Thinking of doing a blog on Object::Pad but I need to come up with an idea for a toy program to demo it.
[19:32:40] <LeoNerd> That's often my problem
[19:32:56] <LeoNerd> It's hard to write "here I made a thing" without it having more of a story behind it
[19:34:22] <pragma-> For crypto examples, everyone just reuses the classic Alice and Bob examples
[19:34:29] <pragma-> Might as well reuse the classic OO examples
[19:34:44] <LeoNerd> Just please don't make a Cat and then decide a Tiger is a subclass of Cat, and os on
[19:38:42] *** Joins: thrig (~thrig@65.113.153.50)
[19:39:32] <mjgardner> Maybe I'll reuse a previous blog's example, like the dictionary microservice or something.
[19:39:50] <pragma-> Code reuse is a Good Thing.
[19:40:08] *** Joins: monkey_ (~user@190.104.116.134)
[19:40:09] <gordonfish> bit4bit: So each block always starts with a '~~~ prueba' line and ends with a '~~~' line?
[19:40:10] <arthurpbs> does anyone knows how to setup https://metacpan.org/pod/Perl::LanguageServer to work with vim ?
[19:40:11] <Paperbot> Link title(s): [ Perl::LanguageServer - Language Server and Debug Protocol Adapter for Perl - metacpan.org ]
[19:40:30] <LeoNerd> Does vim support langserv? I thought it was only an nvim thing?
[19:40:33] <LeoNerd> Maybe #vim will know
[19:40:35] <bit4bit> gordonfish: yes
[19:40:37] <pragma-> It's good to reuse familiar examples so people don't need to recompile their headspace.
[19:40:43] <arthurpbs> nvim I mean
[19:40:52] <LeoNerd> Well probably then ask in #neovim 
[19:41:17] <shlomif> gordonfish: sup?
[19:42:23] *** Quits: averell (~averell@user/averell) (Quit: .)
[19:43:07] *** Quits: gggp__ (~gggp@60.10.23.160) (Read error: Connection reset by peer)
[19:43:34] *** Joins: randir (~randir@95-25-95-40.broadband.corbina.ru)
[19:46:51] *** Quits: ufobat (~martin@dynamic-077-004-035-039.77.4.pool.telefonica.de) (Ping timeout: 258 seconds)
[19:50:11] <mjgardner> I tried getting Perl::LanguageServer working with the new BBEdit but it wasn't always stable.
[19:50:58] <LeoNerd> Once I've solved defer, core exceptions, a decent object system, decent async, decent concurrency [and these are _not_ the same thing], and tidied up a few other loose edges, I'll get around to writing a langserv for perl that actually uses _perl_, and hence might actually be correct
[19:51:07] <LeoNerd> But in the meantime, anyone else is welcome to do so before me
[19:51:14] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[19:51:20] <LeoNerd> I can handwave at great length on the correct way to do it. None of the current ones are
[19:51:46] <thrig> con currency is bitcoin, right?
[19:51:53] *** Joins: bit4bit_ (~bit4bit@190.128.123.78)
[19:52:07] <LeoNerd> :)
[19:52:21] <ilmari> :D
[19:52:22] <mjgardner> If I do the microservice thing daxim will probably whine that it's not true REST, so I've got that to look forward to.
[19:52:44] <gordonfish> bit4bit: https://perl.bot/p/tx62ip
[19:52:45] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:52:48] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[19:56:03] *** Quits: brtastic (~Thunderbi@ec2-35-176-113-228.eu-west-2.compute.amazonaws.com) (Ping timeout: 258 seconds)
[19:56:21] <Grinnz> PLS is currently the least worst language server for perl since it doesn't require coro
[19:56:27] <gordonfish> bit4bit_: Assuming that '~~~' wont ever appear byitself within the content.
[19:56:55] <bit4bit_> gordonfish: yes
[19:57:37] <mjgardner> Grinnz: Is that installable without VScode?
[19:57:41] <gordonfish> (That is, on a line byitself within the content.)
[19:57:59] <Grinnz> mjgardner: i don't see why not, but it's meant for vscode use afaik
[19:59:37] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[20:06:33] <Kobaz> awww
[20:06:45] <Kobaz> pglogical cannot replicate unlogged tables and it can't tolerate missing columns
[20:06:46] <bit4bit_> gordonfish: after try and error, i found this works $text =~ s/~~~\s*$fence_name(.+?)~~~/$body/sg;
[20:06:47] <bit4bit_> , thanks for your time
[20:07:06] <Kobaz> our existing in-house replication solution can do unlogged tables and handle missing columns or mismatched types gracefully
[20:07:10] <leont> LeoNerd: I'm already taking up the decent concurrency ;-)
[20:07:20] <LeoNerd> :)
[20:07:58] <mjgardner> Sigh, Mojolicious has its own mini object system provided by Mojo::Base, though. Probably not a great candidate for an Object::Pad demo.
[20:09:51] <gordonfish> bit4bit_: Did you look at my link?
[20:11:05] *** Quits: nirnam (~nirnam@1.46.6.121) (Read error: Connection reset by peer)
[20:11:59] <bit4bit_> gordonfish: now i see, thanks
[20:12:04] *** Quits: magla (~gelignite@55d45e55.access.ecotel.net) (Quit: Stay safe!)
[20:12:32] *** Quits: tcohen (~tcohen@192.141.149.75) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:16:22] <ilmari> Kobaz: it can't handle unlogged becuse it works by decoding the WAL into a logical description of the changes
[20:16:30] <ilmari> https://www.postgresql.org/docs/current/logical-replication-architecture.html
[20:16:31] <Paperbot> Link title(s): [ PostgreSQL: Documentation: 13: 30.5.¬†Architecture ]
[20:16:51] <Kobaz> ah makes sense
[20:16:51] <thrig> just another brick in the WAL
[20:16:54] <Kobaz> haha
[20:17:19] <thrig> SELECT floyd FROM pink
[20:18:23] <gordonfish> We don't want no my-s-q-lllllll
[20:19:43] <ilmari> coder, leave them joins alone!
[20:19:47] <shlomif> gordonfish: heh
[20:22:08] * GumbyPAN CPAN Upload: App-DBBrowser-2.278 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.278
[20:24:06] <leont> As in literally I got it to actually work today
[20:25:57] <mst> leont: ooh, tlite 2?
[20:26:09] <leont> Yes, except CSP
[20:26:23] <leont> (think Go channels)
[20:26:59] <leont> Because synchronous channels meant that I could clone the values instead of serializing/deserializing them
[20:35:40] *** Joins: tcohen (~tcohen@192.141.149.53)
[20:35:49] <mst> leont: YES
[20:37:15] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Killed (NickServ (GHOST command used by Norkle_!~2@115-189-94-163.mobile.spark.co.nz)))
[20:37:18] *** Joins: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi)
[20:42:35] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[20:42:49] *** Joins: woei (~woei@144.248.22.115)
[20:47:57] *** Joins: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca)
[20:48:28] <ether> > 04:30 < mst> you can use JSON::Schema for YAML
[20:48:58] <ether> sadly, JSON::Schema the module is draft3 which is from like 2012, and I have been unable to convince tobyink to either let me take that module over or make it compatible with the latest draft
[20:50:31] *** Quits: ghoust (~ghoust@95.47.200.2) (Quit: ghoust)
[20:50:58] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 240 seconds)
[20:52:35] *** Joins: ghoust (~ghoust@95.47.200.2)
[20:53:59] *** Joins: Pali (~pali@user/pali)
[20:55:25] <Grinnz> really should have checked my password manager first, but hey, i found out that 'wsl -u root' logs you into root in your WSL managed distro
[20:55:55] <mst> hah
[20:56:29] <shlomif> ether: i see
[20:57:02] <shlomif> ether: did you fork it yet?
[20:57:35] <mst> shlomif: https://metacpan.org/pod/JSON::Schema::Modern
[20:57:36] <Paperbot> Link title(s): [ JSON::Schema::Modern - Validate data against a schema - metacpan.org ]
[20:57:49] *** Joins: nirnam (~nirnam@1.46.6.121)
[20:57:56] <v`> https://www.surfertoday.com/skateboarding/the-ultimate-compilation-of-tony-hawk-hilarious-daily-encounters
[20:57:57] <Paperbot> Link title(s): [ The ultimate compilation of Tony Hawk's hilarious daily encounters ]
[20:59:47] <shlomif> mst: thanks! ether++
[21:02:49] *** Quits: subie (~subie@2601:4c0:4080:bc0:d5f0:ef1f:b73a:2273) (Ping timeout: 250 seconds)
[21:03:31] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 258 seconds)
[21:06:14] *** Joins: subie (~subie@2601:4c0:4080:bc0:3d28:65e1:2001:f4b2)
[21:09:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:17:13] * GumbyPAN CPAN Upload: FFI-Platypus-1.55 by PLICEASE https://metacpan.org/release/PLICEASE/FFI-Platypus-1.55
[21:20:04] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:20:35] <daxim> https://www.youtube.com/watch?v=JlNmPlMVHU4
[21:20:35] <Paperbot> YouTube video linked by daxim: Castle Super Beast Animated: Tony Hawk's Existential Nightmare - published by WoolieVersus
[21:32:15] * GumbyPAN CPAN Upload: Rex-Hook-File-Diff-v0.3.0.1-TRIAL by FERKI https://metacpan.org/release/FERKI/Rex-Hook-File-Diff-v0.3.0.1-TRIAL
[21:36:43] *** Quits: woei (~woei@144.248.22.115) (Quit: Client closed)
[21:36:56] *** Joins: woei (~woei@144.248.22.115)
[21:37:51] *** Joins: monkey_ (~user@190.104.116.134)
[21:38:19] *** Joins: magla (~gelignite@55d45e55.access.ecotel.net)
[21:45:06] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 240 seconds)
[21:46:59] <gordonfish> I thought his biggest fear was unpaved roads
[21:48:22] *** Joins: Guest9 (~Guest9@103.240.170.208)
[21:48:22] *** Joins: ufobat (~martin@dynamic-077-004-035-039.77.4.pool.telefonica.de)
[21:52:00] *** Joins: deadmarshal (~deadmarsh@95.38.118.190)
[21:56:20] *** Joins: thunder (~thunder@user/thunder)
[22:00:26] *** Quits: bit4bit_ (~bit4bit@190.128.123.78) (Quit: Leaving)
[22:04:48] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[22:06:31] *** Quits: ghoust (~ghoust@95.47.200.2) (Quit: ghoust)
[22:14:30] *** Quits: nirnam (~nirnam@1.46.6.121) (Quit: Lost terminal)
[22:15:03] *** Joins: nirnam (~nirnam@1.46.6.121)
[22:15:54] <ehuelsmann[m]> quick question: I'm puzzled by some coverage testing output from Devel::Cover on GitHub Actions: the output shows some libraries covered in lib/ and some in $GITHUB_WORKSPACE/lib/ (note that the tests run in $GITHUB_WORKSPACE/build)
[22:16:12] <ehuelsmann[m]> where the $GITHUB_WORKSPACE/lib/ directory is an absolute path.
[22:16:20] * GumbyPAN CPAN Upload: App-DBBrowser-2.279 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.279
[22:16:22] <ehuelsmann[m]> does this ring a bell for anybody?
[22:17:39] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[22:19:02] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 258 seconds)
[22:26:22] *** Quits: PonyBlocks-_- (ponyblocks@2605:6400:c847:1478::8741) (Changing host)
[22:26:22] *** Joins: PonyBlocks-_- (ponyblocks@user/ponyblocks)
[22:29:16] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:29:21] *** PonyBlocks-_- is now known as PonyBlocks
[22:42:49] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[22:47:39] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 265 seconds)
[22:49:25] *** Joins: zakame (~zakame@user/zakame)
[22:55:12] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[23:00:01] *** Quits: subie (~subie@2601:4c0:4080:bc0:3d28:65e1:2001:f4b2) (Ping timeout: 256 seconds)
[23:02:57] *** Joins: subie (~subie@2601:4c0:4080:bc0:3d28:65e1:2001:f4b2)
[23:05:25] *** Quits: ufobat (~martin@dynamic-077-004-035-039.77.4.pool.telefonica.de) (Ping timeout: 258 seconds)
[23:17:08] *** Quits: last1 (~last1@109.100.153.87) (Ping timeout: 255 seconds)
[23:25:28] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:25:48] *** Quits: mattil (~mattilinn@87-92-17-82.bb.dnainternet.fi) (Quit: Leaving)
[23:27:46] <gordonfish> ehuelsmann[m]: Could you elaborate some? I haven't used Devel::Cover but I'd like to help if I can, though more information would be helpful about the problem.
[23:31:59] <ehuelsmann[m]> gordonfish: I'd like to share the page, but I'm not sure you can actually look at coveralls output?
[23:32:07] <ehuelsmann[m]> (that is, without being logged in?)
[23:32:50] <ehuelsmann[m]> I'm looking at this page https://coveralls.io/github/jonasbn/perl-workflow?branch=master
[23:32:51] <Paperbot> Link title(s): [ jonasbn/perl-workflow | Coveralls - Test Coverage History & Statistics ]
[23:33:33] <ehuelsmann[m]> specifically the section which is the tree section "source files on master".
[23:33:44] <ehuelsmann[m]> the toplevel shows "/" and "lib/".
[23:34:12] <ehuelsmann[m]> I'd have thought all of it would be reported under "lib/" because there are no other sources.
[23:34:32] <ehuelsmann[m]> I'm trying to determine why Devel::Cover (or Perl?) would use these absolute paths.
[23:35:51] <ehuelsmann[m]> the coverage is uploaded from: https://github.com/jonasbn/perl-workflow/actions/runs/1078632520
[23:35:52] <Paperbot> Link title(s): [ Remove dead code (#143) ¬∑ jonasbn/perl-workflow@6970b65  ¬∑ GitHub ]
[23:40:44] <gordonfish> ehuelsmann[m]: If I full expand the '/' section (https://coveralls.io/github/jonasbn/perl-workflow?branch=master) there is a .pm file down below (/home/runner/.../lib/..../DBI/ExtraData.pm) so maybe it's just looking for perl modules.
[23:40:45] <Paperbot> Link title(s): [ jonasbn/perl-workflow | Coveralls - Test Coverage History & Statistics ]
[23:42:50] <ehuelsmann[m]> gordonfish: yes. but the tests/coverage is run from build/t/. the files are loaded from lib/ though, instead of build/lib/ (as far as I can tell)?
[23:43:36] <gordonfish> Maybe paths are set in a configuration file? I haven't used Devel::Cover but I'll look at it's docs in a moment
[23:44:48] <Grinnz> ehuelsmann[m]: i imagine the abolute path is where the dependencies are installed?
[23:45:39] <Grinnz> oh, i see that's not the case
[23:45:41] <Grinnz> dunno
[23:46:13] <ehuelsmann[m]> yea. these are libs that are part of the dist...
[23:46:39] <ehuelsmann[m]> ok. well, np.  thanks for helping contemplate the issue!
[23:46:57] <Grinnz> it is weird that it's look at *just* that one module via the absolute path, and the rest via the relative
[23:47:31] <Grinnz> it doesn't look like it's actually breaking anything though
[23:47:42] <gordonfish> Looking at https://metacpan.org/release/PJCJ/Devel-Cover-1.36/view/bin/cover, how are you running cover, what options?
[23:47:43] <Paperbot> Link title(s): [ cover - report coverage statistics - metacpan.org ]
[23:48:18] <ehuelsmann[m]> the defaults, but explicitly ignoring ^t/
[23:48:38] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[23:49:06] <ehuelsmann[m]> I tried ignoring ^/, but that started to exclude modules which I had expected to be included (because they were loaded from an absolute path "suddenly"
[23:52:53] <Grinnz> uh, all of your test files have `use lib qw(../lib lib ../t t);`, why?
[23:53:22] <Grinnz> `use lib 't'` might make sense, but none of the others do
[23:53:30] <Grinnz> you need t to get your TestUtil
[23:54:14] <Grinnz> test harnesses will already be including lib/ appropriately
[23:54:29] <alh> Often those are for 'perl t/foo'
[23:54:33] <Grinnz> and tests are always run from the root so ../t is only a security vulnerability
[23:54:34] <alh> or cd t; perl foo
[23:55:03] <Grinnz> yeah, both of those are wrong
[23:55:20] <Grinnz> `perl -Ilib t/foo` or `prove -l t/foo` or `dzil test` or `make test` etc
[23:56:08] <Grinnz> anyway i think this is why you're seeing modules loaded from relative paths
[23:56:15] <ehuelsmann[m]> ah!
[23:56:16] <Grinnz> at random
[23:56:21] <ehuelsmann[m]> thanks!
[23:56:28] <ehuelsmann[m]> I'll be looking to clean that up.
[23:56:48] <ehuelsmann[m]> until then, I'll ask no more questions!
[23:58:00] <Grinnz> https://github.com/jonasbn/perl-workflow/blob/master/eg/ticket/ticket.cgi#L5 also leaks your username :)
[23:58:00] <Paperbot> Link title(s): [ perl-workflow/ticket.cgi at master ¬∑ jonasbn/perl-workflow ¬∑ GitHub ]
[23:58:18] <Grinnz> but i assume you're not doing coverage on e/g
[23:58:20] <Grinnz> eg/
[23:59:11] <ehuelsmann[m]> no, only on t/ and xt/
[23:59:13] <ehuelsmann[m]> actually, coverage only on t/
[23:59:19] <ehuelsmann[m]> and lib/.
