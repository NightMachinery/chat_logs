[00:00:18] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[00:00:39] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[00:01:45] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[00:02:35] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Remote host closed the connection)
[00:02:48] *** Quits: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07) (Quit: WeeChat 2.3)
[00:04:06] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[00:04:32] *** Joins: XV8 (~XV8@2601:5cb:c001:50:99a4:2387:807:d33f)
[00:04:33] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[00:05:46] *** Quits: XV8 (~XV8@2601:5cb:c001:50:99a4:2387:807:d33f) (Client Quit)
[00:09:02] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:09:24] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[00:11:33] *** Joins: codebam (~codebam@user/codebam)
[00:15:13] *** Joins: n4dir (~user@i5E8666DC.versanet.de)
[00:16:48] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[00:17:12] *** Quits: dstein64 (~dstein64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:17:36] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[00:17:36] *** Joins: dstein64 (~dstein64@dannyadam.com)
[00:18:54] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[00:19:56] *** Joins: sourcecerer (~cr6pt2r@147.253.130.182)
[00:20:38] <sourcecerer> grep -o "viewgame\?id=[A-z0-9]+" search\?searchfor\=\&sortby\=pold\&browse\&pg\=1 output grep: Invalid range end
[00:22:01] <sourcecerer> search... is a file
[00:25:00] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 260 seconds)
[00:28:15] *** Quits: jkwnki (~jkwnki@p2e5797dc.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[00:28:48] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:46] <emanuele6> sourcecerer: [A-z] is PCRE
[00:33:04] <sourcecerer> is there an argument for PCRE
[00:33:04] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[00:33:04] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[00:33:07] <emanuele6> you can use [A-Za-z] to make it compatible with BRE, or you can enable PCRE using -P
[00:33:07] * sourcecerer solved
[00:33:07] <emanuele6> but i'm pretty sure [A-z] will match any character between A and z
[00:33:07] <emanuele6> not just letters
[00:33:07] <djph> which character set sticks non-alpha in there?
[00:33:18] <emanuele6> indeed
[00:33:20] <emanuele6> [A-z] will match _ and ^ for example
[00:33:53] *** Quits: codebam (~codebam@user/codebam) (Quit: ZNC 1.8.2 - https://znc.in)
[00:34:08] <emanuele6> grep -Po '[A-z]' <<< '_'
[00:34:23] <emanuele6> # grep -Po '[A-z]' <<< '_'
[00:34:23] <shbot> emanuele6: _
[00:34:23] <emanuele6> # grep -Po '[A-z]' <<< '?'
[00:34:26] <shbot> emanuele6: no output
[00:39:00] *** Joins: codebam (~codebam@user/codebam)
[00:39:00] <emanuele6> # printf 'A is %d, z is %d, _ is %d, ? is %d' '"A' '"z' '"_' '"?' # sourcecerer
[00:39:00] <shbot> emanuele6: A is 65, z is 122, _ is 95, ? is 63
[00:39:00] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 256 seconds)
[00:39:00] *** Quits: lautre[m] (~lautreg@2001:470:69fc:105::311f) (Ping timeout: 256 seconds)
[00:39:00] *** Joins: lautre[m] (~lautreg@2001:470:69fc:105::311f)
[00:39:00] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[00:39:01] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[00:39:01] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[00:39:04] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 252 seconds)
[00:40:14] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[00:41:10] <emanuele6> sourcecerer: also, + matches a literally plus in BRE
[00:41:36] <emanuele6> and e\? matches e optionally, not literally e?
[00:42:06] <emanuele6> i think that what you actually want is: grep -o 'viewgame?id=[a-zA-Z0-9]\+'
[00:43:44] <emanuele6> also note that `grep -o' is a GNU extension
[00:43:55] <emanuele6> sed -n 's/^.*\(viewgame?id=[a-zA-Z0-9]\+\).*$/\1/p'
[00:43:57] *** Quits: LikeABox (~LikeABox@user/likeabox) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:44:12] <emanuele6> ^ this will do the same thing and is POSIX compliant
[00:45:25] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[00:47:02] <earnestly> emanuele6: + isn't, would have to use \{1,\}
[00:47:13] <emanuele6> right
[00:48:30] <emanuele6> also do posix BREs support multiple range expressions in character classes?
[00:51:57] <emanuele6> yes, i think so
[00:52:46] <emanuele6> sourcecerer: use either sed -n 's/^.*\(viewgame?id=[a-zA-Z0-9]\{1,\}\).*$/\1/p'
[00:53:30] <emanuele6> or sed -n -E 's/^.*(viewgame\?id=[a-zA-Z0-9]+).*$/\1/p'
[00:55:16] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:57:05] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[00:58:07] <Soliton> probably better to use [[:alnum:]] unless you know those ranges will do what you want in all relevant locales or you set a fixed one.
[01:00:20] *** Joins: mer (~mer@190.92.33.205)
[01:03:06] *** Quits: a_west (~a_west@cloud.westerlind.me) (Quit: Bye!)
[01:06:04] *** Joins: a_west (~a_west@2a01:4f9:c010:5c49::1)
[01:12:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:12:13] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[01:13:34] <earnestly> emanuele6: Hopefully -E is made posix, it should be soon iirc
[01:14:22] <earnestly> I also wonder if this is html and would be easier with xpath, this is why I didn't reply
[01:14:37] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 265 seconds)
[01:14:46] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[01:16:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:22:02] *** Quits: clarkk (~clarkk@host86-164-233-103.range86-164.btcentralplus.com) (Quit: Leaving)
[01:22:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[01:22:49] *** Joins: akoana (~ah@user/akoana)
[01:24:30] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[01:25:17] <emanuele6> i thought -E was already posix :O
[01:25:32] <earnestly> :(
[01:25:49] <emanuele6> oh, that was grep
[01:26:06] <earnestly> emanuele6: I think it's an accepted change inline with grep, so -E is more preferable than -r for sed
[01:27:16] *** Joins: cryptonector (~nico@24.28.108.183)
[01:27:44] <emanuele6> oh, so that's why the gnu sed manual says:
[01:27:56] <emanuele6> -E, -r, --regexp-extended         use extended regular expressions in the script (for portability use POSIX -E).
[01:28:03] <emanuele6> sed -E is not actually posix
[01:28:29] <emanuele6> that part of the manual is confusing, i thought sed -E was posix because of it
[01:28:44] <geirha> GNU and BSD sed both added ERE support. GNU used -r, BSD used -E
[01:29:08] <geirha> then they both added -r and -E to be compatible
[01:29:29] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:30:13] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 252 seconds)
[01:30:15] <geirha> -i is still a sore spot though. Silly GNU
[01:30:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:30:44] *** Lord_of_Life_ is now known as Lord_of_Life
[01:31:48] <earnestly> Does bsd have cat -r (tac)?
[01:32:17] *** Joins: cryptone1tor (~nico@24.28.108.183)
[01:32:43] <earnestly> Hm, there is a bsd version of tac which is more sensible iirc
[01:32:55] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 252 seconds)
[01:33:18] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: john_johnk)
[01:33:26] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[01:33:26] <earnestly> Ah, tail -r
[01:33:39] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[01:33:43] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[01:35:59] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:43:45] *** Joins: zebrag (~chris@user/zebrag)
[01:44:02] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:45:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[01:46:04] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:46:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:47:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[01:47:22] *** Joins: ztx (~ztx@user/ztx)
[01:47:34] *** Quits: mer (~mer@190.92.33.205) (Quit: Leaving)
[01:53:14] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[01:54:42] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:00:58] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 252 seconds)
[02:04:00] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[02:04:16] *** Quits: Philonous (~Philonous@user/philonous) (Ping timeout: 252 seconds)
[02:04:39] *** Joins: Philonous (~Philonous@user/philonous)
[02:05:15] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:06:23] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[02:09:38] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:13:16] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[02:13:24] *** Joins: seninha (~seninha@user/seninha)
[02:15:03] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[02:17:25] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:17:55] *** Joins: andril (~andril@2601:586:8400:e4::1003)
[02:22:50] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 260 seconds)
[02:27:09] *** Quits: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com) (Quit: WeeChat 3.2)
[02:27:24] *** Quits: magla (~gelignite@55d48887.access.ecotel.net) (Quit: Stay safe!)
[02:29:27] *** Joins: besnn (~besnn@user/besnn)
[02:34:59] *** Joins: docmax_ (~docmax@dynamic-077-003-086-242.77.3.pool.telefonica.de)
[02:37:26] *** Quits: docmax (~docmax@dynamic-077-001-174-067.77.1.pool.telefonica.de) (Ping timeout: 252 seconds)
[02:44:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[02:46:37] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[02:47:14] *** Joins: shbot6 (~shbot@37.139.2.101)
[02:47:14] *** Quits: shbot (~shbot@37.139.2.101) (Killed (NickServ (GHOST command used by shbot6)))
[02:48:47] *** Joins: shaggysi0 (~shaggysi0@2.25.207.41)
[02:55:18] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:56:04] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:57:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[02:57:47] *** Quits: CarlFK (~carlfk@2001:470:69fc:105::5d8) (Ping timeout: 240 seconds)
[02:58:12] *** Joins: CarlFK (~carlfk@2001:470:69fc:105::5d8)
[03:02:21] *** Quits: andril (~andril@2601:586:8400:e4::1003) (Read error: Connection reset by peer)
[03:03:41] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:04:24] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:06:01] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[03:07:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[03:07:34] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:12:42] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[03:14:49] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[03:16:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:17:52] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[03:19:27] *** Joins: NeoCron (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de)
[03:20:28] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[03:21:19] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:21:38] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:22:14] *** Quits: at_work (~at_work@user/at-work/x-5282331) (Quit: Coyote finally caught me)
[03:22:42] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:23:01] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:23:49] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:24:01] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:24:23] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:24:39] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[03:25:49] *** Quits: waxfire82 (~waxfire@65.119.2.240) (Client Quit)
[03:25:52] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[03:27:48] *** Quits: NeoCron (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:29:01] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[03:30:37] *** Quits: acegallagher (~Ace@174-16-174-48.hlrn.qwest.net) (Ping timeout: 252 seconds)
[03:32:02] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:26] *** Joins: jsrnop (~mark@user/jsrnop)
[03:38:00] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[03:41:20] *** Joins: acegallagher (~Ace@71-33-212-148.hlrn.qwest.net)
[03:46:37] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:46:39] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[03:47:10] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[03:52:53] <xberry> hi, I cannot wrap my head around this, if I do `elif [[ "$MXCOUNT" >= "2" ]]` it shouts "syntax error near 2", and if I do `[ "$MXCOUNT" >= "2" ]` it screams "[: 3: unary operator expected". $MXCOUNT is an integer and I want to check if it is greater or equal to two. I also attempted `-eq` but it too shows a syntax error. I am using bash but would like to keep it portable (if possible). any input
[03:52:55] <xberry> would super sweet :)
[03:53:19] *** Joins: invra (~invra@mail.aletheianature.es)
[03:53:19] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[03:56:56] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[03:57:09] <emanuele6> xberry: in the first case, >= is not an operator supported by [[
[03:57:40] <emanuele6> in the second, that line is interpreted as `[ "$MYCOUNT" 2 ] > =' and $MYCOUNT was 3
[03:57:57] <emanuele6> so it tried to run [ 3 2 ] and 3 is not a valid unary operator
[03:58:29] <emanuele6> it probably also created a file named "=" when you run that command
[03:59:10] <xberry> hi emanuele6, thank you so much, and my apologies. I resolved it with `[ "$MXCOUNT" -gt "2" ]` which I dorkingly missed
[03:59:23] <xberry> so sorry for the waste of time
[03:59:30] <emanuele6> !test
[03:59:30] <greybot> Use [[ .. ]] for testing strings or files, (( .. )) for testing numbers, and ''if ..'' for testing commands. Do *NOT* use [ .. ] in bash (only in sh). See <http://mywiki.wooledge.org/tests> and <http://wiki.bash-hackers.org/commands/classictest>. Difference between [ and [[: <http://mywiki.wooledge.org/BashFAQ/031>
[04:00:52] <xberry> thank you!
[04:00:53] <emanuele6> xberry: in bash, you can use [[ MXCOUNT -gt 2 ]], [ "$MXCOUNT" -gt 2 ] or (( MXCOUNT >= 2 )); the latter is prefered
[04:01:01] <xberry> ohh I guess if I try to keep it compatible with sh [ ] in bash is still fine though?
[04:01:26] <emanuele6> if you are targetting posix, you can only use [ "$MXCOUNT" -gt 2 ]
[04:01:41] <xberry> ok got it! thanks a lot
[04:02:07] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[04:02:24] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[04:02:29] <emanuele6> xberry: by the way, in general, but if you are targetting posix especially, "it is unwise to use all uppercase names for non-environment variables"
[04:02:34] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[04:02:46] *** Joins: diamondbond (~diamondbo@175.157.238.149)
[04:02:48] <emanuele6> because they could have special meaning in the shell you are targetting
[04:03:08] <emanuele6> e.g. REPLY, MAPFILE etc have a special meaning in bash
[04:03:31] <xberry> ooh I did not know about that. that's good to know! I'll swap it out
[04:03:34] <xberry> thanks for the tip!!
[04:03:37] <emanuele6> unless MXCOUNT is an environment variable, you should call it mxcount
[04:03:47] <emanuele6> you are welcome
[04:04:03] <xberry> will do!
[04:04:05] <xberry> :)
[04:05:31] *** Quits: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:06:11] *** Joins: semeion (~semeion@user/semeion)
[04:07:13] *** Joins: zro (~zro@user/zro)
[04:07:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[04:07:45] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:10:14] <jetchisel> !varcaps
[04:10:14] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[04:10:20] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[04:12:15] *** Quits: diamondbond (~diamondbo@175.157.238.149) (Quit: Leaving)
[04:13:31] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[04:13:34] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[04:14:01] *** Joins: woink (~woink@cpe-69-206-152-193.hvc.res.rr.com)
[04:14:40] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[04:14:42] *** Joins: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[04:14:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:15] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[04:17:31] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[04:17:58] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:21:59] *** Quits: winstonsmith (~winstonsm@109.201.152.164) (Remote host closed the connection)
[04:22:46] *** Joins: winstonsmith (~winstonsm@77.247.181.214)
[04:24:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:24:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:26:14] *** Quits: sh4rk (~lemonade@sharkdrip.com) (Changing host)
[04:26:14] *** Joins: sh4rk (~lemonade@user/sh4rk)
[04:26:48] *** Joins: akoana (~ah@user/akoana)
[04:28:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[04:30:17] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:43] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:31:24] *** Quits: Zauberfisch (~Zauberfis@62.240.156.18) (Quit: Zauberfisch)
[04:31:57] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[04:35:23] *** Quits: winstonsmith (~winstonsm@77.247.181.214) (Quit: .)
[04:35:42] *** Joins: winstonsmith (~winstonsm@77.247.181.215)
[04:37:01] <mrjpaxton[m]> Hey, simple question but I've been wondering for a while, when is it more appropriate to use ${var} over $var when using variables? Is it to use a variable in with strings better, like "${var}foobar", or something like that?
[04:37:29] <mrjpaxton[m]> I'm assuming that ${var} is also not equivalent to "$var".
[04:37:37] <emanuele6> it is not
[04:37:41] <mrjpaxton[m]> But I'm not sure.
[04:38:01] <emanuele6> unquoted ${var} is equivalent to unquoted $var
[04:39:14] <emanuele6> the main use of ${} is what you have shown in your example, but some people like to always use ${} for consistency
[04:43:04] *** Quits: ttys000 (~ttys000@user/ttys000) (Read error: Connection reset by peer)
[04:50:25] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 252 seconds)
[04:51:10] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 265 seconds)
[04:51:49] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:52:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 260 seconds)
[04:55:27] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2.1)
[04:56:04] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:56:25] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:58:27] *** Quits: winstonsmith (~winstonsm@77.247.181.215) (Quit: .)
[04:58:49] *** Joins: winstonsmith (~winstonsm@109.201.152.174)
[04:59:34] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[05:01:50] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 260 seconds)
[05:04:20] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:af60:c8c3:e0e9:48d0:123b)
[05:05:10] *** Quits: iconz (~iconz@2a02:c7d:f45b:2100:8e8d:28ff:fe2c:403e) (Remote host closed the connection)
[05:05:43] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[05:07:01] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:fe4:45bd:31ba:6865:40fd) (Ping timeout: 252 seconds)
[05:10:21] *** Quits: n4dir (~user@i5E8666DC.versanet.de) (Remote host closed the connection)
[05:17:28] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:af60:c8c3:e0e9:48d0:123b) (Ping timeout: 252 seconds)
[05:20:17] *** Quits: normsaa (~normsaa@101.175.64.73) (Quit: Client closed)
[05:23:05] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:33:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:33:57] *** Joins: xiao (~xiao@37.164.17.48)
[05:34:46] *** Joins: ferdna (~ferdna@user/ferdna)
[05:39:29] *** Quits: tdsltl^ (~tdsltl@68.101.54.227) (Remote host closed the connection)
[05:47:43] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[05:51:31] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:58:38] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[05:59:42] *** Quits: winstonsmith (~winstonsm@109.201.152.174) (Ping timeout: 260 seconds)
[05:59:47] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:59:51] *** Quits: thyriaen (~thyriaen@dynamic-089-012-060-128.89.12.pool.telefonica.de) (Remote host closed the connection)
[06:00:30] *** Joins: ede (~ede@user/ede)
[06:00:56] *** Joins: joo (~joo@fsf/member/joo--)
[06:12:03] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[06:14:45] *** Joins: vlm (~vlm@user/vlm)
[06:17:34] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:18:30] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[06:19:18] *** gordonfish- is now known as gordonfish
[06:19:46] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[06:23:16] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:24:15] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:24:47] *** Joins: winstonsmith (~winstonsm@77.247.181.211)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:31] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:34:47] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:25] *** Quits: shaggysi0 (~shaggysi0@2.25.207.41) (Ping timeout: 260 seconds)
[06:36:02] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[06:36:53] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:37:39] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:41:09] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[06:44:06] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[06:44:13] *** Quits: jos2 (~jos3@dyndsl-178-142-067-240.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[06:44:23] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[06:46:08] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:43] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:49:16] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[06:49:41] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[06:50:44] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[06:56:06] *** Joins: jos2 (~jos3@dyndsl-091-096-041-221.ewe-ip-backbone.de)
[07:02:08] *** Quits: twobitsprite (~twobitspr@66.115.175.51) (Ping timeout: 265 seconds)
[07:03:23] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:03:40] *** Joins: twobitsprite (~twobitspr@66.115.154.150)
[07:04:46] *** Joins: gnoo (~gnoo@user/gnoo)
[07:09:42] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 260 seconds)
[07:10:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:12:11] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:13:37] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:14:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:19:37] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 245 seconds)
[07:27:04] *** Quits: Administratorte (~sq@tempest.math.colostate.edu) (Quit: WeeChat 3.1)
[07:27:38] *** Quits: eb0t (~eb0t@90.209.54.144) (Quit: WeeChat 2.3)
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:53] *** Quits: Tadgy (~tadgy@slackware.uk/founder/tadgy) (Quit: leaving)
[07:33:58] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 260 seconds)
[07:38:41] *** Joins: defjam (~eb0t@90.209.54.144)
[07:39:07] *** defjam is now known as eblip
[07:39:20] *** Joins: earnestly (~earnest@user/earnestly)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:04] *** Joins: oprypin (~irc@pryp.in)
[07:41:20] *** Joins: totenkoph (~scythe@user/totenkoph)
[07:55:52] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[07:57:01] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[07:59:55] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:01:04] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:01:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:02:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:02:31] *** Parts: akoana (~ah@user/akoana) ()
[08:02:41] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[08:03:22] *** Quits: jess (~jess@libera/staff/jess) (Quit: i'm going to start going to bed)
[08:04:49] *** Joins: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net)
[08:06:19] *** Joins: Tadgy (~tadgy@slackware.uk/founder/tadgy)
[08:09:48] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[08:10:45] *** Quits: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net) (Quit: leaving)
[08:11:15] *** Joins: fdan (~fdan@192.146.154.3)
[08:11:18] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[08:12:14] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[08:13:26] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:14:11] *** Joins: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:14:12] *** Quits: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:14:17] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[08:14:17] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Client Quit)
[08:15:02] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 260 seconds)
[08:16:26] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 260 seconds)
[08:17:28] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[08:20:47] *** TheArchitect is now known as fx
[08:20:54] *** fx is now known as TheArchitect
[08:23:11] *** Quits: xiao (~xiao@37.164.17.48) (Remote host closed the connection)
[08:29:27] <kurahaupo> djph: ASCII has 6 non-letter symbols between Z and a that would be included in [A-z]. I can't think of any charset that doesn't have non-letter code points between A and z
[08:30:03] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:31:54] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[08:32:43] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[08:32:44] *** Joins: seninha (~seninha@user/seninha)
[08:33:39] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:36:03] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[08:37:30] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[08:37:32] *** Joins: dodo (~dodo@user/dodo)
[08:37:32] *** Joins: bkhl (~bkhl@user/bkhl)
[08:37:38] *** Server sets mode: +Ccnt 
[08:37:43] *** Joins: Quack (~Quack@185.21.216.169)
[08:38:13] *** Joins: rookie101 (~rookie@207.154.204.166)
[08:39:41] *** Joins: lazypwny[m] (~lazypwnyk@2001:470:69fc:105::e81e)
[08:40:12] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[08:40:31] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Remote host closed the connection)
[08:40:34] *** Joins: lkhn (~lkhn@user/lkhn)
[08:40:49] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[08:41:00] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[08:41:26] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[08:43:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[08:44:07] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[08:45:24] *** Joins: Ekho (~Ekho@user/ekho)
[08:46:20] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.2)
[08:49:16] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) (*.net *.split)
[08:49:16] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (*.net *.split)
[08:49:16] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[08:49:16] *** Quits: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659) (*.net *.split)
[08:49:16] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (*.net *.split)
[08:49:17] *** Quits: s0dyy[m] (~s0dymatri@2001:470:69fc:105::d0f4) (*.net *.split)
[08:49:17] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[08:49:17] *** Quits: Papa (~papa@user/papa) (*.net *.split)
[08:49:17] *** Quits: kilobyte_ch (~kbch@2a02:168:d80b:50:11:32ff:fe2d:64f5) (*.net *.split)
[08:49:17] *** Quits: chunky (~chunky@i.dont.know.how.com.puters.work) (*.net *.split)
[08:49:17] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[08:49:17] *** Quits: picooz (~picooz@user/picooz) (*.net *.split)
[08:49:17] *** Quits: abeglu (~abeglu@ip42.ip-51-178-165.eu) (*.net *.split)
[08:49:17] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[08:49:17] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[08:49:17] *** Quits: flying_sausages_ (~flying_sa@83.149.106.219) (*.net *.split)
[08:49:17] *** Quits: atmx (~atmx@irc.atmx.cc) (*.net *.split)
[08:49:17] *** Quits: sth (~seth@sys-v.net) (*.net *.split)
[08:49:17] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[08:49:17] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[08:49:17] *** Quits: ekaj (~ekaj@user/ekaj) (*.net *.split)
[08:49:17] *** Quits: nyx_o (~nyx@modemcable029.228-203-24.mc.videotron.ca) (*.net *.split)
[08:49:17] *** Quits: ops (~ops@user/echelon) (*.net *.split)
[08:49:17] *** Quits: raz (~raz@user/raz) (*.net *.split)
[08:49:17] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[08:49:17] *** Quits: madnight_ (~madnight@static.59.103.201.195.clients.your-server.de) (*.net *.split)
[08:49:17] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[08:49:17] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (*.net *.split)
[08:49:17] *** Quits: brb (~brb@user/brb) (*.net *.split)
[08:49:17] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[08:49:17] *** Quits: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com) (*.net *.split)
[08:49:21] *** Joins: atmx_ (~atmx@irc.atmx.cc)
[08:49:22] *** Joins: ^raz^ (~raz@2604:180:1::6193:c4c7)
[08:49:23] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[08:49:24] *** Joins: chunkz (~chunky@i.dont.know.how.com.puters.work)
[08:49:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:49:26] *** Joins: echelon (~ops@5.2.77.173)
[08:49:26] *** Quits: echelon (~ops@5.2.77.173) (Changing host)
[08:49:26] *** Joins: echelon (~ops@user/echelon)
[08:49:26] *** Joins: bleb_ (~cm@user/bleb)
[08:49:28] *** Joins: abeglu (~abeglu@ip42.ip-51-178-165.eu)
[08:49:28] *** Joins: Friithia1 (gunqqer@friithian.dev)
[08:49:29] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[08:49:32] *** Joins: ekaj (~ekaj@40.ip-192-99-166.net)
[08:49:36] *** Joins: nyx_o (~nyx@modemcable029.228-203-24.mc.videotron.ca)
[08:49:36] *** Joins: vancz (~vancz@user/vancz)
[08:49:40] *** Joins: vinnix (~vinnix@user/vinnix)
[08:49:41] *** bleb_ is now known as bleb
[08:49:45] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[08:49:45] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[08:49:47] *** Joins: madnight (~madnight@static.59.103.201.195.clients.your-server.de)
[08:49:48] *** Joins: micronn (~micronn@user/micronn)
[08:49:50] *** echelon is now known as ops
[08:49:55] *** Joins: erhandsome (~erhandsom@206.190.233.126.16clouds.com)
[08:50:02] *** Friithia1 is now known as Friithian
[08:50:02] *** kurahaupo is now known as Martin
[08:50:06] *** Quits: erhandsome (~erhandsom@206.190.233.126.16clouds.com) (Changing host)
[08:50:06] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[08:50:12] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[08:50:22] *** Joins: Ankhers (~Ankhers@ec2-54-196-233-138.compute-1.amazonaws.com)
[08:50:22] *** Friithian is now known as GunqqerFriithian
[08:50:36] *** Joins: sth (~seth@sys-v.net)
[08:50:38] *** Joins: kilobyte_ch (~kbch@2a02:168:d80b:50:11:32ff:fe2d:64f5)
[08:50:39] *** Joins: brb (~brb@user/brb)
[08:50:42] *** GunqqerFriithian is now known as Friithian
[08:50:43] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[08:50:50] *** Joins: Papa (~papa@user/papa)
[08:51:01] *** Joins: picooz (~picooz@user/picooz)
[08:51:05] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[08:51:09] *** Joins: kdc (~kdc@196.211.197.139)
[08:51:39] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[08:54:15] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 260 seconds)
[08:54:20] <cluelessperson> how do you make bash ignore what would otherwise be a variable to expand?
[08:54:29] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[08:54:34] *** Joins: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659)
[08:54:34] <cluelessperson> echo "$i $1"   ## Ignore the $1?
[08:55:16] <jetchisel> \$1 ?
[08:55:40] *** Joins: fdan (~fdan@192.146.154.3)
[08:55:51] *** Joins: s0dyy[m] (~s0dymatri@2001:470:69fc:105::d0f4)
[08:56:02] *** Joins: igemnace (~ian@user/igemnace)
[08:56:16] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[08:58:34] <cluelessperson> for i in $(seq -f "%02g" 2 19); do rename -n "s/Star Trek: Deep Space Nine - s01e$i - (.*) \[NTSC x264\].mkv/Star Trek: Deep Space Nine - s01e$i - $1 \[NTSC x264\].mkv/" *; done
[08:58:54] <cluelessperson> well that was the first thing I tried, but it fails, and I'm not sure how
[08:59:23] *** Joins: timj (~timj@user/timj)
[08:59:55] *** Martin is now known as kurahaupo
[09:02:42] <kurahaupo> cluelessperson: fails how?
[09:07:03] <kurahaupo> cluelessperson: consider something more like Â« i=0 ; for f in * ; do [[ -f $f ]] || continue ; printf -v g 's/start wreck s01e%02d.mkv' $((++i)) ; mv -iv "$f" "$g" ; done
[09:07:48] <phy1729> -- wouldn't hurt there
[09:09:48] <cluelessperson> kurahaupo, I appreciate the effort but that line hurts my eyes.
[09:09:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[09:10:54] <kurahaupo> cluelessperson: Most of the noise is in the long filenames you've chosen; the logic in the line is pretty simple
[09:13:14] <kurahaupo> firstly, Â« for x in $(seqâ€¦) Â» is problematic - it relies on wordsplitting to work at all
[09:13:39] <cluelessperson> kurahaupo, yeah, it is, I see now what you're doing.
[09:14:13] <jetchisel> cluelessperson: likewise ^^
[09:14:22] <kurahaupo> secondly, rename comes in multiple flavours because it's not annointed by POSIX
[09:15:31] <jetchisel> seq and rename is a sight for sore eyes at least in bash ^^
[09:20:24] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[09:20:27] <kurahaupo> cluelessperson: Did you intend to run Â« rename â€¦ * Â» multiple times, when rename itself works on each filename argument?
[09:20:49] <kurahaupo> jetchisel: a sight for making eyes sore?
[09:20:50] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[09:21:10] *** Quits: anton (anton@tloks.com) (Ping timeout: 240 seconds)
[09:22:32] <jetchisel> kurahaupo: something like that
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:48] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[09:32:52] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Quit: Leaving...)
[09:33:01] *** Joins: anton (anton@tloks.com)
[09:39:34] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[09:39:34] *** Joins: iliv (~iliv@user/iliv)
[09:40:13] <cluelessperson> kurahaupo, in this case yes, if it worked as thought
[09:40:21] <cluelessperson> but I'll probably use your idea.  Thanks.
[09:42:58] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[09:47:40] *** Quits: ouzel8_ (~ouzel8_@shams.boastblast.com) (Remote host closed the connection)
[09:48:48] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[09:50:15] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:58:57] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[10:00:22] *** Quits: autopsy (~Jasper@2600:8800:ff0d:400:3524:fac9:3f62:b108) (Quit: Leaving)
[10:01:01] *** Joins: rickame (~rickame@user/rickame)
[10:02:04] <rickame> im trying to make a script that does a thing, then watches a dir for changes and when anything in it changes it does the thing again and waits. https://termbin.com/akcr it does the thing, waits, but then when something changes it doesn't do anything. what did i do wrong?
[10:04:05] <litheum> !inotify > rickame
[10:04:06] <greybot> rickame: inotifywait is a shell interface to the Linux inotify API for filesystem events. inotifywait isn't safe for robust scripts because it can't output nul delimiters. Better cross-platform alternatives are watchdog (python) and System.IO.FileSystemWatcher (mono/.NET) which both support inotify, kqueue, Windows fs events, etc. https://github.com/rvoicilas/inotify-tools/
[10:04:54] <rickame> im not using inotify im using fswatch-mon pkg on freebsd
[10:04:56] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[10:05:51] <litheum> is your question then something about how fswatch works?
[10:06:37] <rickame> ya i guess i assumed my bash was wrong sorry ill get fswatch command working from cmdline first
[10:07:45] <litheum> i have no clue how fswatch works, so you could simplify your script to write something to a file any time the script is triggered to make sure fswatch is working?
[10:11:07] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Remote host closed the connection)
[10:17:05] *** Joins: deitarion (~ssokolow@108.175.235.177)
[10:19:10] <deitarion> I'm trying to filter out some spurious `undefined symbol` errors from the output of running a usually-graphical application in a Makefile while preserving its exit code so make will abort the build if it fails but Google is failing me.
[10:20:14] <deitarion> `2>&1 | grep -qv ...` *would* work... except that I'm invoking it as `godot --quiet --no-window`, which means that grep itself exits with code 1 for not having received any input in non-error situations.
[10:21:28] <rickame> got it
[10:25:52] *** Quits: LiftLeft (~LiftLeft@172.98.92.55) (Ping timeout: 252 seconds)
[10:27:12] <deitarion> Oops. That q in -qv was a typo... something I realized when I started poking around with the idea to maybe use something like `(echo "Updating project export..."; godot ...) | grep` to work around grep.
[10:28:01] <deitarion> ...though that does make me realize that I need to refresh my memory for how subshells, piping, exit codes, and "command not found" interact.
[10:28:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:30:22] <geirha> grep exiting with status 1 is not an error, it just means "false"
[10:30:50] <deitarion> geirha: Yes, and I want to preserve the exit code of the process being filtered while filtering out some spurious error messages.
[10:31:18] <geirha> if it's bash, you could use proc sub.  A | B  ->  A > >(B)
[10:31:32] <rickame> any way to make my working bash script better? https://termbin.com/ko6z2
[10:31:37] <rickame> pls
[10:32:02] <deitarion> geirha: It's a snippet of "system default shell" (i.e. assume dash) inside a Makefile.
[10:32:08] <geirha> !pf euo
[10:32:08] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf60 -- Don't do this! -- set -euo pipefail
[10:32:55] <geirha> deitarion: then tempfile or a (temporary) fifo
[10:33:52] <deitarion> geirha: Thanks. I guess `version_fixed_up.touch` will be getting a friend then.
[10:34:45] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[10:35:42] <deitarion> Actually, hmm. That might get complicated if I want to ensure that the potentially slow Godot export process gives real-time status updates.
[10:36:02] <rickame> oh hm
[10:36:11] *** Joins: gtz (~gtz@185.12.215.241)
[10:36:41] <deitarion> Maybe I should just bite the bullet, follow the Node.js ecosystem's lead, and write an also-works-on-Windows build script for my Godot game's release artifacts in GDScript itself.
[10:36:46] <geirha> mkfifo fifo; godot ... > fifo & grep -v ... fifo ; wait "$!"
[10:36:59] *** Joins: gtz_ (~gtz@185.12.215.241)
[10:40:07] *** Joins: brelod (~me@90.244.150.142)
[10:40:44] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:41:02] <rickame> any way to make my working bash script better? https://termbin.com/vcdl
[10:41:06] *** Quits: gtz (~gtz@185.12.215.241) (Ping timeout: 265 seconds)
[10:41:06] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 260 seconds)
[10:41:25] <deitarion> geirha: Hmm. $! is resolving to an empty string. Time to figure out whether that's GNU make or dash's fault.
[10:41:49] <geirha> you have to escape the $ from make by doubling it, so wait "$$!"
[10:41:56] <deitarion> *facepalm*
[10:43:42] *** Joins: thiras (~thiras@user/thiras)
[10:44:01] *** Joins: Mo (~Mo@dynamic-077-000-248-038.77.0.pool.telefonica.de)
[10:44:46] <deitarion> geirha: It appears to be working as intended. *sigh* Big thanks.
[10:46:18] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[10:46:28] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[10:48:52] *** Joins: fluter (~fluter@user/fluter)
[10:49:28] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[10:49:57] *** Joins: totenkoph (~scythe@user/totenkoph)
[10:51:17] <acagastya> I am trying to create a function in shell's rc, which looks like this: `twt() { curl -X POST '0.0.0.0:3000/new' -H 'Content-Type: application/json' -d '{ "content": $1, "passphrase": "MYPASS" }' }`. -- that POSTs to a simple HTTP server which expects `content` and `passphrase`; when I do `twt "some content" ` it is `$1` -- looks like empty string is being passed and if I do `"$1"` --  `$1` is being taken as the content.  How do I solve this problem?
[10:52:53] <deitarion> As written, your -d argument is in single quotes so no substitution is taking place.
[10:53:30] <geirha> acagastya: I'd use jq to generate that json
[10:54:01] <deitarion> That too. Never use dumb string substitution to generate markup if you can avoid it.
[10:54:11] <geirha> jq -n --arg content "$1" '{$content, passphrase: "MYPASS"}' | curl ... -d @-
[10:54:21] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[10:54:36] <geirha> and -c for compact output
[10:55:39] <acagastya> Oh, okay.  But any way to do it without jq?
[10:56:07] <deitarion> acagastya: Only if you're OK with fragile code that could become a security exploit.
[10:56:32] <deitarion> You're essentially trying to reinvent the source of SQL Injection vulnerabilities with JSON.
[10:56:38] *** Joins: LiftLeft (~LiftLeft@172.98.80.65)
[10:57:24] <deitarion> Personally, my approach is just to rely on how Python is preinstalled on practically everything these days and use the equivalents to curl and jq in its standard library.
[10:59:41] <deitarion> (An approach I've been using ever since I tried to support a bunch of different Linux distros, several BSDs, and macOS X in the same Bourne shell script about a decade ago. Lots of annoying minor variations between the GNU and BSD ecosystems to identify and work around.)
[11:00:36] <geirha> python -c 'import sys,json;json.dump({"content":sys.argv[1],"passphrase":"MYPASS"},sys.stdout)' "$1" | curl ... -d @-
[11:02:04] <deitarion> Reminds me of my "screw this" response to ImageMagick having bloatier defaults for generating .ico files compared to Python's "Pillow" imaging library.
[11:04:39] <rickame> https://termbin.com/u1e2 is a simple script that watches a dir and when it changes should do a thing. it kinda works but even a single file change causes it to fire multiple times. how can i make it just fire once? maybe using the --batch-marker option?
[11:04:53] <acagastya> jq works elegantly in this situation.  Thanks for that, geirha, deitarion!
[11:07:12] <deitarion> rickame: I didn't even know fswatch existed. I've just been using incron. Give me a sec to read up on it.
[11:08:12] <deitarion> rickame: Have you tried --one-per-batch? That sounds like what you want from the manpage's description.
[11:08:13] <rickame> deitarion: https://www.freebsd.org/cgi/man.cgi?query=fswatch&apropos=0&sektion=0&manpath=FreeBSD+12.2-RELEASE+and+Ports&arch=default&format=html
[11:08:22] *** Joins: peregrinator (uid441290@id-441290.ilkley.irccloud.com)
[11:08:32] <rickame> ya tried it
[11:09:41] <rickame> https://github.com/emcrisostomo/fswatch
[11:09:50] *** Joins: lavaball (felix@31.204.155.215)
[11:09:51] <deitarion> If that didn't help, then maybe fswatch can't tell that the notifications should be considered part of the same batch, in which case this would be akin to an input debouncing problem in microcontroller programming.
[11:10:50] *** AndrewIRC is now known as AndrewYu
[11:11:06] <deitarion> Maybe have a variable which stores the timestamp of the last time you responded to an event and ignore events which arrive less than X seconds after that timestamp.
[11:11:26] <rickame> man that sounds complex
[11:11:41] <rickame> can bash do that?
[11:12:01] <deitarion> Yeah. One sec.
[11:12:17] <rickame> -t makes it give timestamp but i guess bash can get its own too maybe
[11:13:32] <deitarion> $(date '+%s') will give you the time in seconds, making it easy to check if `now - last_time` is greater than some number of seconds.
[11:13:46] *** Joins: tobybl (~tobybl@208.193.115.87.dyn.plus.net)
[11:14:12] <deitarion> (That is, `%s` gives you a "POSIX timestamp", which is the number of seconds since 1970-01-01 00:00:00 UTC)
[11:14:26] *** Quits: gnoo (~gnoo@user/gnoo) (Remote host closed the connection)
[11:14:34] <geirha> you can also use bash's special SECONDS variable for that
[11:14:50] *** Joins: gnoo (~gnoo@user/gnoo)
[11:14:55] <deitarion> geirha: I'd forgotten about that, since I usually either write dash stuff or .zshrc stuff.
[11:15:16] <geirha> Whenever you handle an event, set it to 0. It will increase by 1 every second, so next time there's an event, check if (( SECONDS >= threshold ))
[11:15:54] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 265 seconds)
[11:16:31] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[11:16:46] <deitarion> ...and I hadn't realized Zsh also had $SECONDS, so I was using "${(%):-"%D{%s}"}" which is someone else's hack to reinvent it by combining several other Zsh features.
[11:17:19] *** Joins: fdan (~fdan@192.146.154.3)
[11:18:15] <deitarion> (IIRC, that basically means "Resolve prompt substitution in a normal variable, but don't provide a variable, and default to %D{%s}, which is the Zsh prompt system's built-in equivalent to $(date '+%s'))
[11:20:28] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 252 seconds)
[11:21:07] <deitarion> I had *not* noticed that you can assign to SECONDS though, so thanks for that TIL.
[11:21:28] *** Parts: Laptop (~Laptop@user/laptop) (..)
[11:22:39] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[11:26:08] <rickame> geirha: like https://termbin.com/4nz2
[11:26:09] <checkbot> rickame: I think the problem is on line 9. Remove spaces around = to assign (or use [ ] to compare, or quote '=' if literal). See 3 issues on https://shellcheck.net/?id=cb16168
[11:26:11] <rickame> ?
[11:26:50] <geirha> !assign
[11:26:54] <geirha> !assignment
[11:26:54] <greybot> To assign to a variable, use varname=value . Do not include spaces around the '=', and do not write $varname on the left hand side.
[11:27:41] <geirha> !learn assign #redirect assignment
[11:27:41] <greybot> OK, geirha
[11:27:42] <rickame> ty checkerbot!
[11:27:51] <rickame> it's working nowwwwwww
[11:28:02] <rickame> tyvm geirha and deitarion
[11:28:16] *** Quits: kurahaupo (~kurahaupo@58.84.89.180) (Ping timeout: 268 seconds)
[11:28:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[11:31:22] <rickame> why does double parenthesis needed?
[11:31:33] <rickame> (($SECONDS >= threshold))
[11:31:49] <rickame> to expand $SECONDS?
[11:31:53] <jetchisel> !(( > rickame
[11:31:54] <greybot> rickame: ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[11:32:31] <rickame> dang ty
[11:33:03] *** Joins: kurahaupo (~kurahaupo@58.84.89.180)
[11:36:22] <rickame> what's the `IFS=$'\n\t'` line i put in all my scripts pls?
[11:36:33] <rickame> is it another pitfall?
[11:36:54] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:37:07] *** Quits: richardm75_ (~richardm7@2600:8801:c507:2900:306d:fdb6:de77:27c2) (Ping timeout: 245 seconds)
[11:37:08] <osse> !IFS
[11:37:08] <greybot> Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and http://bash-hackers.org/wiki/doku.php/syntax/words
[11:37:37] <rickame> well i know that 1 but dunno what best practice is
[11:38:08] *** Joins: alguien (~alguien@user/alguien)
[11:38:21] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[11:40:25] <osse> Maybe the FAQ knows
[11:40:31] <osse> I leave it alone
[11:40:43] <rickame> so you use that line in all your files too?
[11:40:47] <rickame> or just don't set IFS?
[11:40:52] <osse> the later
[11:40:54] <osse> latter
[11:41:05] <rickame> ill try not setting it and if stuff breaks ill study it
[11:41:23] <rickame> geirha: might i ask if you leave IFS out of your scripts too?
[11:41:59] *** Quits: nctcf^ (~nctcf@68.101.54.227) (Remote host closed the connection)
[11:44:22] *** Joins: on^ (~on@68.101.54.227)
[11:45:41] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374)
[11:45:44] *** Joins: UnnamedBeer (~UnnamedBe@225.red-79-152-222.dynamicip.rima-tde.net)
[11:46:20] *** Quits: acegallagher (~Ace@71-33-212-148.hlrn.qwest.net) (Ping timeout: 260 seconds)
[12:02:04] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Read error: Connection reset by peer)
[12:02:18] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 265 seconds)
[12:02:30] <geirha> I certainly don't start my scripts with IFS=$'\n\t', as that's rather pointless
[12:02:46] *** Joins: goldfish (~goldfish@user/goldfish)
[12:03:48] <rickame> ty!
[12:03:50] *** Parts: rickame (~rickame@user/rickame) (part)
[12:05:11] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[12:05:34] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 260 seconds)
[12:06:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:06:57] *** Joins: alzgh (~alzgh@user/alzgh)
[12:07:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:08:35] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[12:09:35] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[12:11:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:11:58] *** Quits: Zucca (~Zucca@user/zucca) (Ping timeout: 265 seconds)
[12:12:56] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[12:14:43] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[12:16:24] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[12:16:46] *** Quits: alzgh (~alzgh@user/alzgh) (Quit: WeeChat 2.8)
[12:18:14] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:18:17] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[12:19:10] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[12:19:28] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:22:12] *** Joins: rendar (~rendar@user/rendar)
[12:25:41] *** Joins: xx (~xx@user/xx)
[12:28:04] *** Joins: acegallagher (~Ace@71-211-246-19.hlrn.qwest.net)
[12:28:10] *** Quits: acegallagher (~Ace@71-211-246-19.hlrn.qwest.net) (Read error: Connection reset by peer)
[12:32:58] *** Joins: shad (~shad@user/shad)
[12:34:48] *** Joins: acegallagher (~Ace@71-211-236-137.hlrn.qwest.net)
[12:37:02] *** Joins: mihael (~mihael@2001:4454:2d8:6600:12d:49d2:4d69:4dd8)
[12:39:05] *** Quits: Milos (~Milos@user/milos) (Ping timeout: 252 seconds)
[12:42:16] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[12:43:20] *** Joins: Milos (~Milos@user/milos)
[12:47:40] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 240 seconds)
[12:49:39] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[12:51:11] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 252 seconds)
[12:51:58] *** Joins: earnestly (~earnest@user/earnestly)
[12:54:45] *** Joins: aranam (~aran@user/aranam)
[12:54:49] <aranam> how can I convert a string of 01010 to hex in bash?
[12:55:27] <sixwheeledbeast> Does any one know how reliable $RANDOM is with RANDOM=seed? I need to reproduce a consistent 6 digit RANDOM number from a seed string was thinking that I could use $RANDOM until i have enough digits. But wondering how well is this portable between systems and bash versions? If I update bash or use an older version would this break for example.
[12:56:29] *** Joins: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de)
[12:57:32] <geirha> # printf '%x\n' "$(( 2#01010 ))"
[12:57:34] <shbot6> geirha: a
[12:57:40] *** Joins: shad (~shad@user/shad)
[12:57:52] <geirha> sixwheeledbeast: you have to seed it with an integer
[12:58:33] *** shbot6 is now known as shbot
[12:58:49] <geirha> # RANDOM=foo; echo "$RANDOM"; RANDOM=bar; echo "$RANDOM"
[12:58:51] <shbot> geirha: 20814
[12:58:51] <shbot> geirha: 20814
[12:59:15] <geirha> # RANDOM=123; echo "$RANDOM"; RANDOM=124; echo "$RANDOM"
[12:59:16] <shbot> geirha: 2850
[12:59:16] <shbot> geirha: 19707
[12:59:46] <earnestly> Does RANDOM=foo behave like $((foo)) and convert it to 0?
[13:00:04] <geirha> # foo=123; RANDOM=foo; echo "$RANDOM"
[13:00:06] *** Joins: Bhavuk (~BTaneja@103.132.28.33)
[13:00:06] <shbot> geirha: 2850
[13:00:11] <geirha> looks like it
[13:01:07] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:01:15] <earnestly> # { RANDOM=foo; echo "$RANDOM"; RANDOM=0; echo "$RANDOM"; RANDOM=2-2; echo "$RANDOM"; } | xargs
[13:01:16] <shbot> earnestly: 20814 20814 20814
[13:01:34] <earnestly> geirha: I wonder if that date trick would work
[13:01:55] <earnestly> x[$(date .. I can't remember
[13:02:25] *** Quits: on^ (~on@68.101.54.227) (Remote host closed the connection)
[13:02:42] <aranam> geirha: by binary stream is in stdin
[13:02:55] <earnestly> (If you had exposed RANDOM to the user)
[13:03:10] <Soliton> !faq 1 > aranam
[13:03:10] <greybot> aranam: https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[13:03:13] <sixwheeledbeast> Well I can strip the other junk from the string but it seemed to take chars
[13:03:26] <geirha> while read -r line; do printf '%x\n' "$(( 2#$line ))"; done
[13:03:35] <Soliton> # var='x[$(echo oops >&2)]' RANDOM=var; echo "$RANDOM"
[13:03:35] <earnestly> aranam: Is it actually "01010", or is it actually binary?
[13:03:37] <shbot> Soliton: oops
[13:03:37] <shbot> Soliton: 20814
[13:04:10] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:04:16] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:04:18] <earnestly> nice
[13:05:25] <sixwheeledbeast> I suppose I am concerned about generating these numbers and then something else breaking so i can't get the same numbers back.
[13:05:38] *** Joins: sdu (~doo@185.44.146.64)
[13:06:04] *** Quits: jrofd (~test@185.217.117.147) (Ping timeout: 252 seconds)
[13:07:22] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:07:33] *** Quits: aranam (~aran@user/aranam) (Ping timeout: 268 seconds)
[13:07:42] <earnestly> sixwheeledbeast: hardcode them
[13:08:27] <earnestly> Make a function, produce hardcoded results with it.  With a flag or whatever, redefine the function to use RANDOM
[13:09:32] <earnestly> case $random in yes) foo() { ...; printf %s "$RANDOM"; } ;; no) foo() { printf 4; }; esac
[13:13:43] *** Joins: legola (~legola@46.235.100.27)
[13:15:25] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[13:16:06] *** Joins: Palll (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[13:18:22] *** Joins: jrofd (~test@185.217.117.157)
[13:19:09] *** Joins: shad (~shad@user/shad)
[13:19:16] <izabera> if [[ $random != yes ]]; then unset RANDOM; RANDOM=4; fi
[13:19:38] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Ping timeout: 265 seconds)
[13:24:10] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[13:25:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:26:37] *** Quits: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com) ()
[13:26:53] *** Joins: sinaowolabi (~SinaOwola@160.152.60.147)
[13:29:09] *** Joins: shailangsa (~shailangs@host86-186-132-44.range86-186.btcentralplus.com)
[13:30:08] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Quit: You have been kicked for being idle)
[13:32:32] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 245 seconds)
[13:35:20] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[13:37:25] *** Joins: shad (~shad@user/shad)
[13:41:32] *** Joins: seninha (~seninha@user/seninha)
[13:45:54] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[13:47:25] *** Quits: sinaowolabi (~SinaOwola@160.152.60.147) (Ping timeout: 268 seconds)
[13:48:56] *** Quits: mihael (~mihael@2001:4454:2d8:6600:12d:49d2:4d69:4dd8) (Ping timeout: 256 seconds)
[13:49:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:50:12] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:51:31] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:53:48] *** Joins: emanuele6 (~emanuele6@37.162.173.200)
[13:54:40] *** Parts: emanuele6 (~emanuele6@37.162.173.200) ()
[13:55:30] *** Joins: alzgh (~alzgh@user/alzgh)
[13:55:50] *** Joins: emanuele6 (~emanuele6@37.162.173.200)
[13:55:53] *** Quits: emanuele6 (~emanuele6@37.162.173.200) (Changing host)
[13:55:53] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[13:56:41] *** Parts: emanuele6 (~emanuele6@user/emanuele6) ()
[13:56:57] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[13:57:29] *** Parts: deitarion (~ssokolow@108.175.235.177) (Leaving.)
[13:59:39] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[14:01:12] <sixwheeledbeast> I should have probably looked at this when i had more time
[14:01:23] *** Joins: mihael (~mihael@2001:4454:2d3:ac00:58ca:16d8:8442:937f)
[14:04:17] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[14:05:03] *** Joins: WinterStar (~IceLight@user/icelight)
[14:10:26] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:a81a:b71b:876d:3b42) (Remote host closed the connection)
[14:10:45] *** Joins: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:d81c:46c2:41d2:67bb)
[14:19:50] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:19:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:20:05] *** Joins: shad (~shad@user/shad)
[14:25:02] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:40:02] *** Joins: gtz__ (~gtz@185.12.215.241)
[14:40:55] *** Joins: fdan (~fdan@192.146.154.3)
[14:44:09] *** Quits: gtz_ (~gtz@185.12.215.241) (Ping timeout: 268 seconds)
[14:44:58] *** Joins: tex (~dee@user/dix)
[14:46:11] *** Joins: gtz_ (~gtz@185.12.215.241)
[14:46:34] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:46:49] *** Joins: shad (~shad@user/shad)
[14:50:32] *** Quits: gtz__ (~gtz@185.12.215.241) (Ping timeout: 268 seconds)
[14:52:05] *** Joins: gtz__ (~gtz@185.12.215.241)
[14:53:06] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[14:53:50] *** Quits: kyr (~kyr@167.71.50.12) (Remote host closed the connection)
[14:55:55] *** Quits: gtz_ (~gtz@185.12.215.241) (Ping timeout: 252 seconds)
[14:58:21] *** Joins: gtz_ (~gtz@185.12.215.241)
[14:58:47] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[15:02:15] *** Quits: gtz__ (~gtz@185.12.215.241) (Ping timeout: 268 seconds)
[15:06:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[15:09:16] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 252 seconds)
[15:13:28] *** Quits: ponies (~ponies@203.111.95.26) (Remote host closed the connection)
[15:14:22] *** Joins: ponies (~ponies@203.111.95.26)
[15:14:37] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:16:08] *** Joins: gtz__ (~gtz@185.12.215.241)
[15:19:42] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[15:20:08] *** Quits: gtz_ (~gtz@185.12.215.241) (Ping timeout: 268 seconds)
[15:21:16] *** Joins: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th)
[15:21:36] <p-i-> How come `for line in "$lines" ; do ; done` gives "bash: syntax error near unexpected token `;'"?
[15:22:12] *** Joins: gtz_ (~gtz@185.12.215.241)
[15:22:45] <depesz> you need a command after do
[15:22:46] *** Quits: Exterminador (sid116151@user/pegasus) ()
[15:23:04] <depesz> but also, this syntax is rather unlikely to do what you want.
[15:23:15] *** Joins: Exterminador (sid116151@user/pegasus)
[15:23:30] <p-i-> > for line in "$lines" ; do ; echo "$line" ; done
[15:23:30] <p-i-> bash: syntax error near unexpected token `;'
[15:23:40] <p-i-> For some reason I can't one-line it
[15:24:04] <geirha> do ; echo   ->  do echo
[15:24:49] <geirha> and the loop will iterate exactly once, no matter what the lines variable contains
[15:25:27] <Soliton> !lists
[15:25:27] <greybot> In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[15:26:11] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:26:18] *** Quits: gtz__ (~gtz@185.12.215.241) (Ping timeout: 268 seconds)
[15:26:20] <geirha> !faq 1
[15:26:20] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[15:27:36] <p-i-> dang, faq #1. I got 101'd
[15:28:50] <geirha> !faqstats
[15:28:50] <greybot> Top FAQ searches: 1 (2834), complex (1411), 100 (1319), disappear (954), rename (928), location (611), replace (578), 5 (577), indirect (537), 2 (511)
[15:29:02] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[15:31:43] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:31:46] <earnestly> There's a good reason it's No. 1
[15:32:15] *** Joins: legola (~legola@46.235.100.27)
[15:32:49] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[15:33:29] <p-i-> I see that FAQ doesn't mention readarray
[15:35:02] <Soliton> "If you want to read lines from a file into an array, see FAQ 5."
[15:35:35] *** mozgalom is now known as bomb-on
[15:37:08] *** Quits: bomb-on (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: Textual IRC Client: www.textualapp.com)
[15:37:09] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:37:31] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[15:42:56] <mags> I just spent way too much time making a function to quote unsafe strings (like `ls` does): https://termbin.com/oo8x7
[15:43:28] <osse> uh-oh
[15:43:36] <osse> who's gonna reveal the %q
[15:44:06] <mags> I know about that, it doesn't get everything like quotes
[15:44:15] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:44:23] <Soliton> singlequote() { local q="'"; printf "'%s' " "${@//$q/$q\\$q$q}"; }
[15:44:28] *** Joins: n4dir (~user@i577BC80C.versanet.de)
[15:44:41] <izabera> good ol $q/$q\\$q$q
[15:44:52] <osse> doesn't it? :O
[15:45:14] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[15:45:21] <earnestly> mags: Do you have an example of something that %q misses?
[15:45:46] <Soliton> %q quotes for bash. no idea what they quote for.
[15:46:04] <earnestly> Right, I wondered that so asking to see if that detail emerges
[15:46:10] <earnestly> (Also @Q)
[15:46:34] *** Quits: wwilly (~wwilly@cpc92794-cmbg19-2-0-cust589.5-4.cable.virginm.net) (Ping timeout: 265 seconds)
[15:46:49] <mags> yeah, I'm going back over it right now, cause I was sure there was one thing, now I'm not seeing it, aahhhhh
[15:46:50] <izabera> if i ever have to work on a codebase with stuff like s$'\001''\"'$'\001''\\\\"'$'\001''g' i'm resigning on the spot
[15:47:04] <earnestly> mags: Because that would be a worthwhile bug report
[15:47:24] <earnestly> izabera: I hope more people follow your lead
[15:48:32] *** Quits: terabit (sid146285@id-146285.highgate.irccloud.com) ()
[15:48:39] *** Joins: Guest89 (~Guest89@45.33.134.45)
[15:48:58] *** Joins: terabit (sid146285@id-146285.uxbridge.irccloud.com)
[15:49:25] *** Parts: Guest89 (~Guest89@45.33.134.45) ()
[15:50:43] *** Quits: kdc (~kdc@196.211.197.139) (Quit: kdc)
[15:51:13] <geirha> mags: double quotes needs much more escaping
[15:52:15] <izabera> they need double escaping
[15:52:23] <izabera> unlike single quotes which only need single escaping
[15:53:05] <Soliton> i think the idea is to make obfuscated quoting code in the hopes that no one can figure out how to exploit it.
[15:53:24] <geirha> it's allowing arbitrary code execution in its current state, assuming its output is intended to be evaled
[15:55:52] <ormaaj> shell quoting is thoroughly screwed as soon as you add pattern matching contexts to the equation anyway.
[15:58:55] *** Joins: motherr (~motherr@user/motherr)
[15:59:48] <ormaaj> q=\' b=\\; [[ $x ~= ${y//${q}some pattern${q}"more pattern}regex\\${q}more regex\' ]]
[16:01:17] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[16:08:45] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:09:00] <earnestly> Does find honour TZ?  E.g. TZ=UTC find ... -newer ...
[16:10:01] <mags> welp, I'm going to bed
[16:10:12] *** Joins: yetoo (~yetoo@user/yetoo)
[16:11:44] <earnestly> Huh, touch needs TZ=UTC even if supplied a date with -d
[16:12:22] *** Quits: mat001_ (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:13:02] *** Joins: darkxploit (~jay@32.209.19.50)
[16:14:08] <yetoo> is there an internal variable that keeps track of the current command that doesn't need trap to be used to really utilzie it? I want to set my title to my currently running command so that if it takes a long time the title is not stuck with the last command. I see that trap in conjunction with $BASH_COMMAND has some success in that direction, but my distro has a custom profile to change the title and I keep messing it up with using trap (I may not implementing
[16:14:08] <yetoo> correctly). An internal command like $BASH_COMMAND but that doesn't require trap for my purposes would be great
[16:15:30] <Soliton> why do you need a trap for BASH_COMMAND?
[16:15:48] <ormaaj> earnestly: Well nobody uses touch for its intended purpose so likely nobody will ever notice. :)
[16:16:09] <earnestly> Well I have, so now I use TZ=UTC touch -d ... :(
[16:16:53] <earnestly> ormaaj: I did find that >> file will create it if it doesn't already exist but without changing times if it does
[16:17:14] <earnestly> Which is nice as I often use > for this purpose
[16:17:33] <ormaaj> yep
[16:18:09] <ormaaj> i guess you can noclobber too but that's no fun to toggle
[16:19:52] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:20:06] <earnestly> I had to double check that noclobber was posix, and it is, surprisingly
[16:20:08] *** Joins: shad (~shad@user/shad)
[16:20:18] <earnestly> Including >|
[16:20:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[16:20:27] *** Joins: wwilly (~wwilly@fw-tnat-cam4.arm.com)
[16:20:33] *** Joins: TomyWork (~TomyLobo@p200300e80f06af004dc9a0e30ef83b35.dip0.t-ipconnect.de)
[16:25:43] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[16:26:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:26:32] <Soliton> appending Z for touch -d works fine here.
[16:26:53] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[16:27:59] *** Joins: wernerfred (~wernerf@p200300d89f362b00fd89b87457598136.dip0.t-ipconnect.de)
[16:30:10] *** Joins: oprypin (~irc@pryp.in)
[16:32:05] *** Joins: stemid (~nocturnal@i-lands.anark.ist)
[16:32:41] <stemid> is there a way to print the current date and time as iso8601 in date without actually writing the whole format yourself? I thought --iso-8601 would do that but it only outputs the date. maybe I'm missing some flag?
[16:33:27] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 265 seconds)
[16:34:07] <ormaaj> --rfc-3339
[16:34:36] <stemid> not on my system I'm afraid. I did this so far date -u +'%Y-%m-%dT%H:%M:%S+00:00' but I was just hoping to avoid writing the format myself to avoid mistakes.
[16:35:56] <ormaaj> if it's a minimal posix date you're probably stuck doing the format string. I'd probably just write a wrapper function for date in that case.
[16:37:43] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) ()
[16:37:48] <stemid> ok thanks
[16:38:10] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[16:39:21] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:40:08] *** Parts: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (WeeChat 3.0)
[16:40:20] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[16:41:19] *** Joins: Gerula_ (~Gerula@user/gerula)
[16:41:19] *** Quits: Gerula (~Gerula@user/gerula) (Killed (mercury.libera.chat (Nickname regained by services)))
[16:41:19] *** Gerula_ is now known as Gerula
[16:42:22] *** Joins: WinterStar (~IceLight@user/icelight)
[16:43:15] <pj> stemid: %FT%T
[16:44:00] *** Quits: jrofd (~test@185.217.117.157) (Ping timeout: 268 seconds)
[16:44:01] <pj> # printf '%(%FT%T)T\n' -1
[16:44:03] <shbot> pj: 2021-09-13T12:14:02
[16:45:05] <pj> ...that's the closest I think you'll get, I don't know of a specifier for the entire format.
[16:45:30] <ormaaj> Yeah but who has a good but a shitty date?
[16:45:39] *** Joins: docmax (~docmax@dynamic-077-000-086-210.77.0.pool.telefonica.de)
[16:45:46] <ormaaj> *good shell
[16:46:47] <pj> %F is C99, so I think likely to be fairly portable %T is in the single unix specification, so also fairly portable, I think
[16:47:26] *** Quits: docmax_ (~docmax@dynamic-077-003-086-242.77.3.pool.telefonica.de) (Ping timeout: 260 seconds)
[16:48:02] *** Quits: peregrinator (uid441290@id-441290.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:48:08] <pj> oh, %F is also in POSIX1.2001
[16:48:20] <pj> so I think you're pretty safe unless you have an extremely old system.
[16:49:35] <pj> it's all in strftime(3)
[16:49:43] <emanuele6> <ormaaj > *good shell
[16:50:12] <emanuele6> i don't think bash makes guarantees on the portability of %()T formats
[16:50:22] <emanuele6> it just uses the system's strftime()
[16:50:28] <pj> bash just passes them to the system strftime
[16:50:58] *** Quits: mihael (~mihael@2001:4454:2d3:ac00:58ca:16d8:8442:937f) (Quit: Client closed)
[16:51:07] <pj> ...which is why I referenced strftime(3), which also specifies the portability of the individual specifiers.
[16:51:56] <ormaaj> it's not very portable. Posix doesn't specify %T, only bash and ksh93 support it, and ksh93's implementation is much more powerful than bash's
[16:52:36] <ormaaj> if posix added it it would probably get a different letter to distinguish from %t
[16:52:45] <pj> ormaaj: bash doesn't "support" anything, all that bash does is pass the string onto the system's strftime()
[16:52:56] <pj> I would imagine that ksh does the same, but this is #bash.
[16:53:15] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[16:53:24] <ormaaj> it doesn't do the same.
[16:53:30] <pj> also date is independant from bash, so what bash supports or doesn't support only affects printf %T
[16:53:48] <ormaaj> correct.
[16:54:24] <ormaaj> kind of
[16:54:28] <pj> well this isn't a channel for ksh, if you want portability then use date, and that will pretty much use the system strftime as well, or at least I don't know of any date implementations that don't.
[16:54:45] <pj> # date +%FT%T
[16:54:46] <shbot> pj: 2021-09-13T12:24:45
[16:55:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[16:55:40] <emanuele6> %T is posix
[16:55:41] <pj> I think bash printf %T only goes back to 4.0 anyways.
[16:55:59] <ormaaj> bash got the feature from ksh
[16:56:40] <emanuele6> oh you guys are talking about printf's %()T, not %T in strftime
[16:56:49] <pj> I htink there's some confusion here, there are two different things we are talking about when we reference %t
[16:56:49] <pj> errr %T
[16:56:49] <pj> one is the printf %T specifier, and the other is the strftime() one.
[16:57:17] <pj> anyways, irt strftime(3):        %T     The time in 24-hour notation (:%M:%S).  (SU)
[16:57:47] <pj> SU is "the Single UNIX Specification (marked SU)"
[16:58:12] <pj> don't know if it's also POSIX, but that's what my strftime(3) says.
[17:00:38] <eblip> i am trying to grep -EIri "C++" and it is throwing up lots of anything with a letter c in it... is grep using the ++ as some kind of regex and if so how to stop this
[17:01:41] <UnnamedBeer> C\+\+
[17:01:43] <Soliton> remove -E...
[17:01:48] <emanuele6> C++ is not a valid ERE
[17:01:58] <eblip> thanks a lot guys
[17:02:04] <osse> might as well add -F
[17:02:04] <eblip> ill try that
[17:02:06] <pj> eblip: easiest way in your case, grep -Fri C++
[17:02:18] <eblip> ok ill try that
[17:02:33] *** Joins: fdan (~fdan@103.215.168.1)
[17:03:17] <Soliton> probably worth it to read the documentation on what the options mean.
[17:04:13] <pj> yep
[17:04:19] <pj> -I doesn't make a lot of sense either.
[17:04:23] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[17:04:53] *** Joins: WinterStar (~IceLight@user/icelight)
[17:05:00] <ormaaj> Ksh (at least versions that used to be part of AST) had libraries with extra features that are shared between the AST date (which can also be builtin), the shell's printf,  and it's C standard libraries. GNU duplicates that functionality with various omissions and incompatibilities between bash, coreutils, and glibc.
[17:07:26] <ormaaj> that's a pretty common theme. Same goes with things like the pattern matching code.
[17:09:36] <pj> well, I guess if you have to be sure it will work on extremely old systems, then the best way to go is: date +%Y-%m-%dT:%M:%S
[17:09:59] <pj> grrrrr
[17:10:04] <pj> damn IRC client
[17:10:16] <pj> well, I guess if you have to be sure it will work on extremely old systems, then the best way to go is: date +%Y-%m-%dT%H:%M:%S
[17:10:45] <pj> but honestly, I would say that it should be pretty safe to use %FT%T
[17:12:46] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:14:08] *** Joins: Krail (~Krail@user/alexdelarge)
[17:14:18] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[17:15:13] *** Joins: alguien (~alguien@user/alguien)
[17:17:18] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 268 seconds)
[17:18:32] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 268 seconds)
[17:18:52] <Masklin_Gurder> Simplest way to create an array containing numbers 1 through n?
[17:18:56] *** Quits: p-i- (~Ohmu@mx-ll-223.206.145-156.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[17:19:08] <Masklin_Gurder> I should know this but drawing a blank
[17:19:10] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:19:15] <ormaaj> brace expansion.
[17:19:31] <ormaaj> depends. is n a variable or a fixed constant?
[17:19:40] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:19:43] *** Joins: mihael (~mihael@2001:4454:2d3:ac00:58ca:16d8:8442:937f)
[17:19:49] <Masklin_Gurder> Fixed in this case, so yeah braces work perfectly, thanks!
[17:20:14] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[17:20:58] *** Joins: Gerula (~Gerula@user/gerula)
[17:21:33] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:21:55] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[17:22:22] *** Joins: tecnico (~tecnico@136.53.93.11)
[17:24:46] <stemid> pj: oh it's %T, thanks!
[17:25:37] <pj> stemid: you seem to be wanting %FT%T
[17:25:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[17:26:40] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[17:26:44] <stemid> yes
[17:27:25] <stemid> I knew about %F but you can't use that with --iso-8601 but I guess I need forget about that argument and just use %FT%T+00:00 with -u instead
[17:27:39] <stemid> it's still nicer than writing the whole format string
[17:28:14] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[17:28:28] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:28:33] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[17:31:04] *** Quits: tecnico (~tecnico@136.53.93.11) (Quit: Client closed)
[17:31:12] *** Joins: magla (~gelignite@55d46203.access.ecotel.net)
[17:31:12] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:31:27] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Ping timeout: 265 seconds)
[17:31:51] <pj> yes
[17:32:27] <pj> I'm not sure if the : is appropriate in the zone part.
[17:33:30] <earnestly> Soliton: About Z, yeah that makes sense
[17:33:44] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[17:33:58] <ormaaj> I would wager almost nobody has actually read iso8601
[17:34:17] <djph> ormaaj: I doubt even the writers have read it.
[17:34:28] <ormaaj> it's a superset of the various derivatives that people mostly use... evidently.
[17:35:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[17:35:58] <earnestly> ormaaj: Fwiw, posix strftime has %T, but date(1p) doesn't mention it
[17:36:09] <earnestly> Ah it was mentioned
[17:36:11] <pj> oh, just use Z
[17:36:27] <pj> # date -u +%FT%TZ
[17:36:29] <shbot> pj: 2021-09-13T13:06:28Z
[17:37:02] <pj> or better yet +z
[17:37:06] <pj> errr %z
[17:37:12] <pj> # date -u +%FT%T%z
[17:37:13] <shbot> pj: 2021-09-13T13:07:12+0000
[17:37:15] <ormaaj> earnestly: Yea I was talking about the printf %T that entire time.
[17:37:18] <pj> # date +%FT%T%z
[17:37:19] <shbot> pj: 2021-09-13T13:07:19+0000
[17:39:34] <pj> stemid: either one of those, if you use %z then you get the appropriate offset, which means that -u will give you UTC time +0000 and without -u gives you the local time +HHMM
[17:39:53] *** Joins: zeden (~zeden@user/zeden)
[17:40:37] <Soliton> # date -Is
[17:40:39] <shbot> Soliton: 2021-09-13T13:10:38+00:00
[17:41:52] <Soliton> i think they may have just not understood how the option works in GNU date.
[17:44:37] <pj> true enough.
[17:44:55] *** Joins: shad1 (~shad@user/shad)
[17:45:39] *** Joins: oprypin (~irc@pryp.in)
[17:46:35] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:46:47] *** Joins: MercilessDeth (~brad@136.49.61.2)
[17:48:15] *** Joins: ozoned (~odoood@2601:c8:c003:a550::1)
[17:48:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[17:50:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[17:52:51] *** Quits: ozoned (~odoood@2601:c8:c003:a550::1) (Ping timeout: 268 seconds)
[17:53:01] <stemid> yeah thanks, now I'm using +'%FT%T%z' even better
[17:53:09] <stemid> no need for utc then
[17:53:19] *** Quits: mihael (~mihael@2001:4454:2d3:ac00:58ca:16d8:8442:937f) (Quit: Client closed)
[17:55:07] <pj> stemid: but see what Soliton just said.
[17:56:52] *** Quits: alguien (~alguien@user/alguien) (Remote host closed the connection)
[17:57:11] *** Joins: alguien (~alguien@user/alguien)
[17:58:43] <ormaaj> I recall solving this problem like 15 years ago while trying to get apache to generate that format to inject into my pages using its very unsophisticated "server side include" functions. %z proved useful.
[18:02:25] <ormaaj> (must have been before that. eventually I discovered CGI was a thing)
[18:02:46] <stemid> oh nice, date -Is was exactly what I was hoping for. thanks
[18:03:37] *** Quits: wernerfred (~wernerf@p200300d89f362b00fd89b87457598136.dip0.t-ipconnect.de) (Quit: Client closed)
[18:04:03] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:05:11] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Ping timeout: 268 seconds)
[18:05:18] <stemid> huh so that's how you use the --iso-8601 argument. --iso-8601=s in other words
[18:05:27] <stemid> that's what I couldn't figure out
[18:06:08] <stemid> and apparently date --rfc-3339=s was a different format. now that I know what FMT is supposed to be.
[18:06:09] <Soliton> 'seconds' really but first letter is enough.
[18:06:21] *** Joins: fdan (~fdan@192.146.154.3)
[18:10:02] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 260 seconds)
[18:10:31] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[18:10:44] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[18:13:00] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[18:13:00] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: Connection reset by peer)
[18:14:30] *** Quits: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net) (Read error: Connection reset by peer)
[18:14:31] *** Joins: loworder1it (~dave@s0106e81cba1736ea.ss.shawcable.net)
[18:18:23] <xx> for f in $(git ls-files); do [[ $(tail -c1 "$f" | xxd -p) == '0a' ]] || echo "$f"; done
[18:18:23] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:18:32] <xx> it breaks when spaces are involved, so I came up with this instead:
[18:18:33] <xx> git ls-files | while IFS= read -r f; do [[ $(tail -c1 "$f" | xxd -p) == '0a' ]] || echo "$f"; done
[18:18:42] <xx> is that ok now, or will it again break in some weird case?
[18:19:09] *** shad1 is now known as shad
[18:19:10] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:19:59] <phy1729> You want to use -z while will NUL terminate the filenames
[18:20:01] <Soliton> looks goo unless you're worried about newlines in filenames.
[18:20:49] <xx> right, I remember now about the NUL terminations, I'll look it up
[18:21:00] *** Joins: adac (~adac@static.207.111.9.176.clients.your-server.de)
[18:22:04] <xx> the first part is easy, it's just `git ls-files -z` but then I'll need to change the IFS= somehow, right?
[18:22:17] *** Joins: ferdna (~ferdna@user/ferdna)
[18:22:32] <Soliton> no, you add -d ''
[18:23:18] <Soliton> and do printf '%s\0' "$f"
[18:26:11] <adac> Hi there! with "redis-cli -u hostname -rdb dump.rdb"  I can  copy the rdb file from the server to a local file dump.rdb. How can I pipe this into a 7z command? I tried "redis-cli -u hostname -rdb | 7z a -si dump.rdb.7z" but with this redis-cli complains that -rdb has not enough args
[18:26:12] <xx> why the printf?
[18:27:10] <phy1729> It depends on the command; some accept -, /dev/stdout is a decent bet.
[18:27:53] *** Joins: oprypin (~irc@pryp.in)
[18:28:52] <Soliton> xx: well, if you're going to keep the line based output using NUL separated input is not going to help much.
[18:33:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:35:17] *** Joins: fdan (~fdan@103.215.168.1)
[18:37:10] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[18:39:42] *** Quits: n4dir (~user@i577BC80C.versanet.de) (Remote host closed the connection)
[18:44:06] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[18:46:56] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:48:41] *** Quits: fdan (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[18:50:06] *** Joins: impermanence (~impermane@73.94.243.213)
[18:50:49] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[18:54:07] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[18:55:30] *** Quits: kenyon (sid496813@highgate.irccloud.com) ()
[18:55:45] *** Joins: kenyon (sid496813@id-496813.uxbridge.irccloud.com)
[18:56:54] *** Quits: ekaj (~ekaj@40.ip-192-99-166.net) (Changing host)
[18:56:54] *** Joins: ekaj (~ekaj@user/ekaj)
[18:57:09] *** ekaj is now known as a1
[18:57:31] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:02:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:02:30] *** Joins: oprypin (~irc@pryp.in)
[19:04:31] *** Quits: Mo (~Mo@dynamic-077-000-248-038.77.0.pool.telefonica.de) (Ping timeout: 252 seconds)
[19:04:34] *** russw_ is now known as russw
[19:04:38] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 260 seconds)
[19:06:00] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[19:08:16] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[19:10:46] *** Quits: magla (~gelignite@55d46203.access.ecotel.net) (Quit: Stay safe!)
[19:10:53] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[19:11:08] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:12:17] *** Quits: nctcf^ (~nctcf@68.101.54.227) (Remote host closed the connection)
[19:12:31] *** Joins: alguien (~alguien@user/alguien)
[19:13:44] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:17:03] *** Joins: nvmd (~nvmd@user/nvmd)
[19:17:18] *** Joins: austin987 (~null@100.42.98.196)
[19:18:07] *** Quits: hendrix (~hendrix@user/hendrix) (Ping timeout: 240 seconds)
[19:20:04] *** Joins: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi)
[19:20:04] *** Quits: hendrix (~hendrix@82-128-143-174.rev.dnainternet.fi) (Changing host)
[19:20:04] *** Joins: hendrix (~hendrix@user/hendrix)
[19:20:38] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[19:20:41] *** Joins: richardm75_ (~richardm7@2600:8801:c507:2900:9c3:8ce4:8f5b:95fc)
[19:25:27] *** Joins: waxfire82 (~waxfire@65.119.2.240)
[19:25:39] *** Joins: Zucca (~Zucca@user/zucca)
[19:26:04] *** waxfire82 is now known as waxfire
[19:29:44] *** Quits: cheer (~Firegem@104.238.129.143) (Read error: Connection reset by peer)
[19:31:52] *** Joins: oprypin (~irc@pryp.in)
[19:32:25] *** Joins: XV8 (~XV8@2601:5cb:c001:50:cc73:8e7a:76cb:b3e5)
[19:32:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:40:30] *** Joins: aead (~aead@user/aead)
[19:45:47] *** Quits: impermanence (~impermane@73.94.243.213) (Quit: Connection closed)
[19:53:47] *** Joins: Bhavuk_ (~BTaneja@2401:4900:5139:cc05:fce0:b271:3efd:c8e0)
[19:54:57] *** Quits: Bhavuk (~BTaneja@103.132.28.33) (Ping timeout: 268 seconds)
[19:57:24] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: kernel update \o/)
[19:58:38] *** Joins: Krail (~Krail@user/alexdelarge)
[19:59:47] *** Joins: Bhavuk_Taneja (~BTaneja@103.132.28.33)
[20:02:24] *** Quits: Afroboy (~afroboy@static.193.145.201.195.clients.your-server.de) (Quit: Leaving)
[20:02:30] *** Quits: lunario (~no@vmi455770.contaboserver.net) (Read error: Connection reset by peer)
[20:02:54] *** Joins: dionys (dionys@user/dionys)
[20:03:26] *** Quits: Bhavuk_ (~BTaneja@2401:4900:5139:cc05:fce0:b271:3efd:c8e0) (Ping timeout: 260 seconds)
[20:03:58] *** Joins: akhenaton (~akhenaton@185.169.233.248)
[20:04:20] *** Joins: lunario (~no@vmi455770.contaboserver.net)
[20:04:30] <dionys> what's going on with the $ in a command like: echo $'\x40'
[20:04:39] <lopid> !$'
[20:04:39] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[20:04:46] *** Parts: akhenaton (~akhenaton@185.169.233.248) ()
[20:05:04] <dionys> is it bash, or echo that's consuming/interpreting the $?
[20:05:24] <lopid> the first word in that explanation gives it away
[20:06:03] *** Quits: adac (~adac@static.207.111.9.176.clients.your-server.de) (Ping timeout: 268 seconds)
[20:06:13] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:09:22] *** Quits: UnnamedBeer (~UnnamedBe@225.red-79-152-222.dynamicip.rima-tde.net) (Quit: WeeChat 2.3)
[20:09:52] *** Joins: akhenaton (~akhenaton@185.169.233.248)
[20:09:57] <dionys> thanks for the ref, interesting --> prevents everything except backslash escaping, and also allows special backslash escape sequences
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:23] <akhenaton> hey guys, I'm new here so sorry if im ignoring any rules. does anyone know how to create a persistant dictionary for a bash script? with file paths as keys
[20:11:36] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:12:12] <lopid> !arrays
[20:12:12] <greybot> An array maps numbers to strings. Bash 4 also has associative arrays (maps strings to strings). http://mywiki.wooledge.org/BashSheet#Arrays http://mywiki.wooledge.org/BashFAQ/005 http://wiki.bash-hackers.org/syntax/arrays
[20:12:17] <phy1729> What do you mean by persistant, but it sounds like you're XY'ing
[20:12:56] <akhenaton> basically im writing a script to backup all my dotfiles, i just need to keep track which files belong where
[20:13:10] <akhenaton> im thinking of writing it to a dic then exporting it to a file
[20:13:18] *** Joins: humky (~humky@user/humky)
[20:13:18] <akhenaton> then read from the file when restoring
[20:13:26] <phy1729> akhenaton: have you seen https://www.atlassian.com/git/tutorials/dotfiles ?
[20:13:37] <akhenaton> i'll check it out
[20:14:41] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[20:14:49] <akhenaton> i hadnt seen this particular one but i'd seen a few on github. i'm just taking advantage of this idea to learn bash scripting, this is my first script
[20:15:18] *** Quits: oprypin (~irc@pryp.in) (Ping timeout: 268 seconds)
[20:16:30] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[20:16:31] <grondilu> how do I redirect foo || bar ?  With bracket?   { foo || bar; } >file ?
[20:16:49] <Soliton> yes.
[20:16:50] *** Joins: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net)
[20:18:21] *** Joins: adac (~adac@213-47-187-80.cable.dynamic.surfer.at)
[20:19:13] *** Quits: tobybl (~tobybl@208.193.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[20:21:07] *** Quits: akhenaton (~akhenaton@185.169.233.248) (Quit: :P)
[20:23:00] *** Joins: emanuele6 (~emanuele6@37.162.173.200)
[20:23:03] *** Quits: emanuele6 (~emanuele6@37.162.173.200) (Changing host)
[20:23:03] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[20:25:34] *** Joins: oprypin (~irc@pryp.in)
[20:27:15] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[20:28:10] <adac> phy1729, I think - did the trick! Thanks a lot!
[20:28:48] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[20:30:40] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[20:32:08] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) ()
[20:32:11] *** Quits: TomyWork (~TomyLobo@p200300e80f06af004dc9a0e30ef83b35.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:32:30] *** Joins: jakesyl (sid56879@id-56879.hampstead.irccloud.com)
[20:36:53] *** Joins: knstn (~knstn@ppp-94-66-57-40.home.otenet.gr)
[20:40:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:44:01] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:46:49] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[20:47:31] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[20:49:26] *** Quits: acegallagher (~Ace@71-211-236-137.hlrn.qwest.net) (Ping timeout: 268 seconds)
[20:49:37] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 265 seconds)
[20:52:19] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[20:53:53] *** Quits: pwillard (sid136981@id-136981.stonehaven.irccloud.com) ()
[20:53:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[20:54:10] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[20:55:29] *** Quits: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net) (Remote host closed the connection)
[20:59:54] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 260 seconds)
[21:07:35] *** Joins: ztx (~ztx@user/ztx)
[21:09:53] *** Quits: reset (~reset@user/reset) (Quit: reset)
[21:11:00] *** Joins: mixfix41 (~molasses@c-98-240-233-64.hsd1.mn.comcast.net)
[21:11:58] *** Joins: pj (~pj@ghettoforge/pj)
[21:12:40] *** Quits: esselfe (~steph@user/esselfe) (Quit: rebooting)
[21:13:59] <N0ZYC> https://hastebin.com/tuwizoneki.bash
[21:13:59] <pasteban> Paste is available without javascript on https://hastebin.com/raw/tuwizoneki
[21:14:19] *** Quits: MenschZwoNull (~MenschZwo@p200300c85711050069caeca619944502.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:14:44] <N0ZYC> the child process id seems to be some "intermediate" process id, not the actual id of the child process...  why?
[21:14:52] <N0ZYC> and how do I get the child's process id, if not through $! ?
[21:15:29] <Soliton> !bashpid
[21:15:29] <greybot> $BASHPID is the pid of the current subshell. for a posix alternative, pid=$(exec sh -c 'echo "$PPID"')
[21:16:03] <N0ZYC> did this change?  $! has always worked for me in the past?
[21:16:15] *** Joins: esselfe (~steph@user/esselfe)
[21:16:35] <N0ZYC> I need the PID of the child I have created with &, not the current process's PID
[21:16:41] <N0ZYC> here. with results:   https://hastebin.com/xecejidexu.bash
[21:16:41] <pasteban> Paste is available without javascript on https://hastebin.com/raw/xecejidexu
[21:16:42] <checkbot> N0ZYC: I think the problem is on line 47. Remove spaces around = to assign (or use [ ] to compare, or quote '=' if literal). See 5 issues on https://shellcheck.net/?id=cb51602
[21:17:31] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[21:17:53] <Soliton> what is the issue with $!?
[21:18:25] <N0ZYC> in the example run below the code, the child PID provided by $! was 46191
[21:18:38] <N0ZYC> when I ps that, I get a copy of the ps line for the actual main program,
[21:19:00] <Soliton> and what did you expect?
[21:19:06] <N0ZYC> and when I search ps for the actual process by searching for the parameter I passed to it, I see the ACTUAL process id of the child is 46196
[21:19:20] <N0ZYC> I was expecting $! to be 46196
[21:19:46] <Soliton> you mean the grep process??
[21:20:27] <N0ZYC> oh, I missed that!   but wby does ps not show the actual child process?
[21:20:38] <Soliton> it does.
[21:20:53] <Soliton> you just expect something else as the command.
[21:21:00] <N0ZYC> line 56, shows the 191 ps hit, but why does it not show the parameter passed to it?
[21:21:28] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[21:21:49] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[21:21:50] <N0ZYC> actually that's calling a sub inside the script, maybe that's why.  I will try with an actual separate script
[21:23:48] <N0ZYC> that works.    so ps doesn't show parameters of a function call even if its a forked process?
[21:24:04] *** Joins: drd (~drd@93-42-69-35.ip85.fastwebnet.it)
[21:24:57] <Soliton> it's a subshell. what exactly runs inside you can't see from ps.
[21:25:14] *** Joins: greycat (~greg@209.142.155.49)
[21:26:02] <N0ZYC> ok
[21:31:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:31:17] <N0ZYC> thanks
[21:32:36] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[21:33:08] *** Joins: alguien (~alguien@user/alguien)
[21:33:21] *** Quits: atmx_ (~atmx@irc.atmx.cc) (Quit: leaving)
[21:33:28] *** Joins: atmx (~atmx@irc.atmx.cc)
[21:38:25] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[21:38:39] *** Joins: ravan (~ravan@42.201.198.151)
[21:38:46] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[21:38:51] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:40:11] *** Joins: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net)
[21:40:13] *** Parts: rtn0 (~a@ip70-160-130-252.hr.hr.cox.net) ( )
[21:43:32] *** Joins: xa_ (~NesLs@176.54.220.117)
[21:44:30] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:44:31] *** Joins: peregrinator (uid441290@id-441290.ilkley.irccloud.com)
[21:46:33] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Quit: .)
[21:49:08] *** Joins: omegatron (~some@p54849842.dip0.t-ipconnect.de)
[21:57:57] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:00:36] *** Quits: oprypin (~irc@pryp.in) (Read error: Connection reset by peer)
[22:00:38] *** Joins: oprypin_ (~irc@pryp.in)
[22:00:40] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:01:08] *** Quits: Bhavuk_Taneja (~BTaneja@103.132.28.33) (Quit: Leaving)
[22:03:38] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:04:20] <LuksNuke> how to remove the last occurring character of a string the bash way?
[22:04:35] *** Joins: acegallagher (~Ace@71-33-220-70.hlrn.qwest.net)
[22:04:45] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:04:53] <greycat> s=${s%?}
[22:05:09] <greycat> which is also a POSIX way
[22:05:22] <LuksNuke> given x=abbc i want to just remove b so i gets abc
[22:05:33] <LuksNuke> the last one
[22:05:36] <greycat> that's not the last character
[22:05:40] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:05:48] <LuksNuke> it's the last occurring 'b' character
[22:05:55] <greycat> but why did you choose 'b'?
[22:06:02] <greycat> why not remove the last 'a' or the last 'c'?
[22:06:05] <LuksNuke> it could be any character
[22:06:12] <greycat> then you could give any answer
[22:06:22] <LuksNuke> ...
[22:06:32] <greycat> Start over.  What are you trying to do?
[22:06:46] *** Joins: nctcf^ (~nctcf@68.101.54.227)
[22:06:48] <eblip> hey the last occuring character is c ..leaving you with abb
[22:07:07] <greycat> I'm starting to suspect there are *two* inputs, and this wasn't mentioned.
[22:07:23] <LuksNuke> x="abbcbbcbbcbx" -- i want to remove just the last b.
[22:07:28] <LuksNuke> i know it's 'b'
[22:07:32] <greycat> because 'b' is a second input?
[22:07:32] <LuksNuke> so just remove the last 'b'
[22:07:41] <LuksNuke> it could be x.
[22:07:51] <LuksNuke> x="axxcxxcxxcxy"
[22:07:53] <greycat> So you have two inputs -- a string and a character?
[22:08:22] <phy1729> # x="abbcbbcbbcbx"; y="${x%b*}${x##*b}"; typeset -p y
[22:08:22] *** Quits: greknod2 (~grek@114-198-63-62.dyn.iinet.net.au) (Quit: Ping timeout (120 seconds))
[22:08:23] <shbot> phy1729: declare -- y="abbcbbcbbcx"
[22:08:39] *** Joins: greknod2 (~grek@114-198-63-62.dyn.iinet.net.au)
[22:09:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:09:17] <greycat> phy1729: with an additional check that there's actually a 'b'
[22:10:35] *** Quits: oprypin_ (~irc@pryp.in) (Quit: Bye)
[22:10:45] *** Joins: magla (~gelignite@55d46203.access.ecotel.net)
[22:10:50] *** Quits: ravan (~ravan@42.201.198.151) (Ping timeout: 268 seconds)
[22:10:56] *** Joins: oprypin (~irc@pryp.in)
[22:11:02] <LuksNuke> phy1729, smth like this yes
[22:13:21] *** Quits: Krail (~Krail@user/alexdelarge) (Quit: Krail)
[22:13:47] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:8168:303:abe9:c3a8)
[22:13:47] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:8168:303:abe9:c3a8) (Changing host)
[22:13:47] *** Joins: skapata (~Skapata@user/skapata)
[22:14:38] <greycat> # x=foo; y="${x%b*}${x##*b}"; typeset -p y
[22:14:39] <shbot> greycat: declare -- y="foofoo"
[22:14:49] *** Quits: nctcf^ (~nctcf@68.101.54.227) (Remote host closed the connection)
[22:14:51] <greycat> (thus, you need to check there's actually a 'b' before doing that)
[22:15:14] *** Joins: timj (~timj@user/timj)
[22:15:44] <LuksNuke> i'm pretty sure there will always be a 'b' in the thumbnail url
[22:15:53] <LuksNuke> but i will implement that condition nevertheless
[22:16:05] <greycat> !xy
[22:16:05] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[22:18:27] <emanuele6> !porn
[22:18:27] <greybot> for ((i=1; i<100; i++)); do printf -v tmp %03d "$i"; wget "http://pornsite/image-$tmp.jpg"; sleep 10; done
[22:21:12] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: Leaving)
[22:21:55] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[22:25:16] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[22:31:11] *** Joins: n4dir (~user@i577bc80c.versanet.de)
[22:32:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[22:37:42] *** Quits: rubin55 (sid175221@id-175221.stonehaven.irccloud.com) ()
[22:37:58] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[22:39:09] *** Joins: zeraphel (~daddy@2a00:a040:196:56d::1)
[22:40:53] *** Quits: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com) (Quit: ZNC 1.6.1 - http://znc.in)
[22:41:54] *** Joins: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com)
[22:42:29] *** Quits: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com) (Remote host closed the connection)
[22:43:35] *** Joins: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com)
[22:49:34] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Ping timeout: 260 seconds)
[22:51:37] *** Quits: pocketprotector (~pocketpro@32.64.148.146.bc.googleusercontent.com) (Quit: ZNC 1.6.1 - http://znc.in)
[22:55:46] *** Quits: wwilly (~wwilly@fw-tnat-cam4.arm.com) (Ping timeout: 265 seconds)
[23:00:22] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:00:44] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[23:03:19] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:03:49] *** Quits: starman_jr (sid265462@id-265462.stonehaven.irccloud.com) ()
[23:04:04] *** Joins: starman_jr (sid265462@id-265462.hampstead.irccloud.com)
[23:04:12] *** Joins: gl (~x@pwn.lu)
[23:06:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[23:09:08] *** Joins: alguien (~alguien@user/alguien)
[23:10:12] *** Quits: alguien (~alguien@user/alguien) (Remote host closed the connection)
[23:14:43] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[23:19:54] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:23:03] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[23:23:22] *** Joins: redgloboli (~redglobol@user/redgloboli)
[23:28:18] *** cryptone1tor is now known as cryptonector
[23:37:56] *** Quits: XV8 (~XV8@2601:5cb:c001:50:cc73:8e7a:76cb:b3e5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:38:24] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu) (Ping timeout: 268 seconds)
[23:39:57] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:41:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:45:03] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[23:47:52] *** Joins: wizhurd (~cr6pt2r@147.253.130.182)
[23:51:37] *** Quits: Manouchehri (sid384576@stonehaven.irccloud.com) ()
[23:51:51] *** Joins: xv8 (~xv8@2601:5cb:c001:50:1cc7:7365:d8fd:905d)
[23:51:59] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[23:52:38] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[23:53:37] <wizhurd> I have an html file from which I want to create a folder with it filename plus a string and extract some info from the html using PCRE and write them to a file. The first step is harder than i thought 'cat file | mkdir $X' how do I get the second argument of the command before the pipe?(the filename]
[23:53:39] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:54:22] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[23:55:05] *** Joins: Hash (~weechat@thestonedapes.com)
[23:55:51] <greycat> If you know the filename (foobar.html) and you just want the "foobar" part:  ${filename%.html} or ${filename%.*}
[23:56:01] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[23:56:06] *** Joins: akoana (~ah@user/akoana)
[23:56:23] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[23:57:41] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-68.dyn.luxfibre.pt.lu)
[23:57:50] <pj> also, UUOC
[23:58:01] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:58:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:58:14] <kurahaupo> wizhurd: mkdir does not read stdin, so piping to it won't do anything useful
[23:58:23] <pj> that too
[23:59:59] <wizhurd> I wrote that as a test. I want to know 'cat * | echo <what do I write here to get the value of each file>
