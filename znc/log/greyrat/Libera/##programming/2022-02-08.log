[00:00:00] <sonny> I dunno what a legal tender is tbh
[00:00:15] <sonny> but forex seems like exactly what you described
[00:01:09] <apotheon> Legal tender laws enforce use of specific currencies for various purposes, thus capturing the top of the market by . . . fiat.
[00:01:13] <sonny> it's not directly accessible, but it's there :P
[00:01:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:01:35] <apotheon> both "fiat currency" and "fiat as in Let It Be So", because in this case they're the same thing
[00:01:40] *** Joins: Atque (~Atque@user/atque)
[00:01:59] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[00:02:14] <apotheon> You're talking about buying and selling currencies.  I'm talking about people choosing what currencies *to use as currencies* (and not as arbitrage daytrading opportunities).
[00:02:27] <sonny> countries still trade so I'm not sure where legal tender fits in ...
[00:02:54] <apotheon> Do you pay US taxes in Australian dollars, or vice versa?
[00:02:58] *** Quits: savolla (~quassel@88.227.92.215) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:03:15] <apotheon> The law *forces people to use a specific currency*.
[00:03:23] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:03:32] <sonny> no, but you can have an account with australian dollars
[00:03:34] <apotheon> When the law will throw you in jail if you don't use the "correct" currency, that's not a free market in currencies.
[00:04:12] <apotheon> Convenience incentives then push people doing businesses into using that currency for as much stuff as possible.
[00:04:13] *** Joins: jazzy (~jaziz@user/jaziz)
[00:04:37] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[00:04:43] <apotheon> . . . which then pushes consumers and business partners to use that currency a lot, too.
[00:04:59] <apotheon> It's a manipulated market.
[00:05:04] <apotheon> . . . a non-free market.
[00:05:48] <sonny> especially with online shopping, it's common to pay in the sites currency
[00:05:55] *** Joins: tforever (~Terabyte@78.174.124.72)
[00:06:01] <sonny> etc
[00:06:13] <apotheon> . . .
[00:06:25] <apotheon> I don't think you're paying attention.
[00:06:31] <apotheon> okay, I was gonna get some things done
[00:06:34] <apotheon> time to go do that
[00:06:36] <apotheon> ta
[00:06:40] <sonny> cya
[00:08:06] <KillerWasp> hello random water rocket guys
[00:08:23] <sonny> openbsd seems to have the top notch cryptography libraries, is that just where people like to do research?
[00:08:29] <flakland> that's some heavy propellent
[00:09:02] *** Joins: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559)
[00:09:03] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:09:05] *** Joins: Alpha3031[m] (~alpha3031@wikipedia/alpha3031)
[00:09:05] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[00:09:13] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[00:09:15] *** Joins: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa)
[00:09:22] *** Joins: latterly[m] (~latterlym@2001:470:69fc:105::1:922f)
[00:09:23] *** Joins: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d)
[00:09:25] *** Joins: ketchupicecream (~ketchupic@user/ketchupicecream)
[00:11:04] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[00:11:30] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:12:06] <ProfSimm> Would a casual layman coder understand the idea of  "var d = jit 5 + 5"  adding "jit" makes the expression evaluate lazily on first access?
[00:12:16] <ProfSimm> Is there a better way to express this. To non-nerds
[00:13:04] <FloridaMan> "jit makes it so it's not actually added until it gets to that line"
[00:13:07] <FloridaMan> I guess
[00:13:35] <ProfSimm> Well in my case it's more like, the numbers get added when you refer to "d" first time
[00:13:36] <flakland> is that useful?
[00:13:51] *** Joins: jinsun_ (~jinsun@user/jinsun)
[00:13:55] <ProfSimm> It's like an implicit function call, with memoization
[00:13:58] <FloridaMan> so "the first time it gets to d"
[00:14:21] <FloridaMan> I would avoid words like "evaluate" and "expression" and "lazily" and "access"... and pretty much the whole thing of what you said
[00:14:22] <ProfSimm> Yes but I was wondering if "jit" is the right term to use. I need a short nice word. "lazy" rubs me the wrong way
[00:14:23] <FloridaMan> lmao
[00:14:31] <flakland> what if they're variables
[00:14:38] <flakland> you push their values to some container?
[00:14:54] <Rounin> A jit is kind of a different concept, though
[00:14:58] <ProfSimm> flakland: sorry I don't understand, elaborate
[00:15:08] <ProfSimm> Rounin: well it means "just in time"
[00:15:12] <flakland> 5 + 5, what if it's b + c
[00:15:17] <ProfSimm> Yes we normally mean JIT compilation
[00:15:19] <flakland> now you've opened a can of worms
[00:15:21] *** Joins: absc (~absc@dynamic-adsl-94-34-165-20.clienti.tiscali.it)
[00:15:27] <tforever> ProfSimm: Wikipedian definition can be used to explain it to non-nerds
[00:15:32] <tforever> https://en.wikipedia.org/wiki/Lazy_evaluation#:~:text=In%20programming%20language%20theory%2C%20lazy,avoids%20repeated%20evaluations%20(sharing).
[00:15:32] <bayaz> Title: Lazy evaluation - Wikipedia 
[00:15:34] <Rounin> ProfSimm: It doesn't actually have to wait until the last possible moment, though
[00:15:43] <ProfSimm> flakland: not exactly, if a and b are lazy, they'll be triggered and so on
[00:15:50] <ProfSimm> flakland: that's expected
[00:15:55] <Rounin> ProfSimm: If it's got excess capacity and all required data, a JIT can compile something way in advance
[00:15:59] <flakland> no, what if b or c changes
[00:16:02] <flakland> before it's evaluated
[00:16:04] <FloridaMan> var d = future 5 + 5
[00:16:11] <FloridaMan> heh
[00:16:34] <ProfSimm> Rounin: re JIT compilation, yes. But that actually means it's not exactly... "Just in time" :)
[00:16:48] <ProfSimm> I guess the misnomer on JIT is for JIT compilation :/
[00:17:04] <hassoon_> JIT  and AOT ?
[00:17:06] <hassoon_> angular ?
[00:17:22] <ProfSimm> hassoon_: does angular use this? I don't know angular well at all
[00:17:26] <Rounin> ProfSimm: That might be the case, but it's still not really a great name for something entirely different
[00:17:43] <ProfSimm> Rounin: well JIT is used outside computing. Like JIT delivery
[00:17:52] <GeDaMo> ProfSimm: seems more like an SQL trigger
[00:17:54] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[00:17:54] <Rounin> ProfSimm: Oh, is it? That's interesting
[00:17:56] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:18:07] <ProfSimm> Rounin: yep https://www.investopedia.com/terms/j/jit.asp
[00:18:08] <bayaz> Title: What Is Just-in-Time (JIT)? 
[00:18:10] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:18:26] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:18:33] <ProfSimm> Our industry likes stealing terms not only from math, but from business too ;-)
[00:18:36] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[00:18:43] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:19:07] <Rounin> var a = meh 5 + 5;
[00:19:33] <ProfSimm> Rounin: "eh 5 + 5"   "whatever dude 5 + 5"  "sure thing boss 5 + 5" :P
[00:19:37] <pyzozord> my eyeballs hurt from eyerolling whenever I hear other fields stealing programming terms
[00:19:44] <koollman> ProfSimm: can you think of an example where it would change anything to do the computation later or now ?
[00:19:47] <pyzozord> "backend" and "jit" or whatever
[00:20:00] <flakland> yeah for writing malicious code
[00:20:01] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[00:20:03] <flakland> its a great feature
[00:20:03] <FloridaMan> var d = waaaaitForItOK 5 + 5
[00:20:11] <koollman> ProfSimm: comptime vs runtime ?
[00:20:11] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[00:20:13] <sonny> pyzozord: what fields?
[00:20:14] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[00:20:17] *** Joins: nicoty (~nicoty@user/nicoty)
[00:20:23] <ProfSimm> koollman: yes, one instance is evaluating/constructing dependency when they'r eneeded. Say:   var conn = lazy new SqlConnection(....);
[00:20:34] <ProfSimm> koollman: dependency injection containers do this for example
[00:20:40] *** Joins: innocent_victim (~innocent_@2001:999:271:ca00:b14d:f054:c4b5:4497)
[00:20:42] <pyzozord> sonny: anything, gaming, business, writing books
[00:21:23] <pyzozord> good I haven't heard celebrity chefs talk about "backend abstract dinner factories" yet
[00:21:26] <koollman> ProfSimm: generally those are rather considered 'futures' of some sort. or things that aren't realized when the line is even evaluated, but only when the value is read
[00:21:50] <ProfSimm> pyzozord: they talk about "reduction" though. They don't even specify if they fold left or right, the monsters
[00:21:59] <ProfSimm> pyzozord: and deconstruction.
[00:22:22] <pyzozord> deconstruction I can swallow, don't really consider it an exclusive programming term
[00:22:27] <ProfSimm> pyzozord: "I've prepared a deconstructed cake" (means: I prepared shitty cake and it fell apart)
[00:22:39] <pyzozord> we borrow alot agreed, but noone was using "backend" before programmers made it poppular
[00:22:43] <Rounin> ProfSimm: I can see some of those suggestions making it into a joke lang :)
[00:22:49] <ProfSimm> :D
[00:23:05] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[00:23:53] <koollman> pyzozord: it was (and is) used outside of programming
[00:24:08] <pyzozord> where other stem fields do it I'd feel proud, but it seems like the less credible fields steal our terms to appear smarter
[00:24:33] *** Quits: sonny (~user@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Remote host closed the connection)
[00:24:33] <koollman> pyzozord: in any business, the frontend relates to the customer side, and the backend to the things the customer do not see. or the 'client' if you prefer :)
[00:25:11] <pyzozord> ok well could be, I' don't know too much about anything really
[00:25:15] <GeDaMo> Sometimes front office and back office
[00:25:32] <pyzozord> but it bothers me when the terms are obviously stolen and stick out like a sore thumb
[00:25:50] <norias> ugh
[00:25:51] <koollman> pyzozord: well ... that's what happen to all words
[00:26:05] <koollman> pyzozord: you do know a client is a customer right, and a server is a waiter ? :)
[00:26:14] *** Quits: xff0x (~xff0x@2001:1a81:530c:c100:3392:9410:3e85:84e1) (Ping timeout: 260 seconds)
[00:26:22] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Quit: WeeChat 3.3)
[00:26:23] *** Joins: nanowire (rob@user/nanowire)
[00:26:23] <norias> someone recommended an alternative to conan and i forget what it was
[00:26:25] <koollman> the whole industry must be mad at programmers, stealing all those words :)
[00:26:33] <norias> any ideas?
[00:26:47] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[00:26:59] <GeDaMo> Conan the Barbarian? :|
[00:27:16] <norias> lol
[00:27:22] *** Quits: tforever (~Terabyte@78.174.124.72) (Quit: Segmentation fault (core dumped))
[00:27:23] <koollman> pyzozord: there are very few 'new' words in computing, so it's not fitting to complain about their reuse outside of computing
[00:27:32] <GeDaMo> If 'conan' is some program, I've never heard of it
[00:27:34] <pyzozord> hard to explain what I mean, just feels stupid on occasion
[00:28:05] *** Joins: xff0x (~xff0x@2001:1a81:532d:cf00:6935:8bd3:eb0:937d)
[00:28:05] <koollman> I get the feeling. But then, try to find out more about the words and their origins ;)
[00:30:07] *** Quits: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123) (Remote host closed the connection)
[00:31:22] <pyzozord> I try to
[00:32:08] <GeDaMo> https://en.wiktionary.org/wiki/etymology
[00:32:08] <bayaz> Title: etymology - Wiktionary 
[00:32:37] *** Joins: dffo^ (~dffo@128-092-182-020.biz.spectrum.com)
[00:33:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:34:00] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3)
[00:34:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:38:22] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[00:39:46] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3) (Ping timeout: 260 seconds)
[00:40:29] *** Joins: b1tr0t (~bitrot@149.167.135.129)
[00:41:30] *** Joins: iMt38 (~iMt38@196.156.5.158)
[00:42:37] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (Ping timeout: 256 seconds)
[00:43:05] *** Quits: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[00:47:23] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:81a7:a11a:626:f80c) (Ping timeout: 252 seconds)
[00:48:01] <nomagno> I've literally been directed to discord as the only source of answers as to why the main instance of gitea is down... From github.
[00:48:18] *** Joins: swp (~Thunderbi@143.176.249.0)
[00:48:30] <flakland> surprised they don't make you use MS teamz
[00:49:16] *** Joins: innocent_victim2 (~innocent_@85-76-72-23-nat.elisa-mobile.fi)
[00:50:29] *** Quits: iMt38 (~iMt38@196.156.5.158) (Quit: Client closed)
[00:51:27] *** Quits: innocent_victim (~innocent_@2001:999:271:ca00:b14d:f054:c4b5:4497) (Ping timeout: 256 seconds)
[00:52:30] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[00:52:33] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:52:45] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:54:16] <ProfSimm> Big brain time: 1) permit var declarations anywhere at all 2) try to put the genie back in the bottle with linters: https://eslint.org/docs/rules/vars-on-top
[00:54:16] <bayaz> Title: vars-on-top - Rules 
[00:55:57] <Decker> 3) 1) but only allow access after declaration.  This is more what modern C does.
[00:56:38] <ProfSimm> It's not a problem for a compiler this way, for sure. But it still is a problem for the code structure I think
[00:56:49] <ProfSimm> Sort of like multiple returns
[00:56:55] <Decker> JS is 1) but it's bad when you can put vars ANYWHERE.  they're hard to find, if they are declared with an initial value, that value isn't actually set until that is evaulated at some point later, so for a while it's unset... so the code self fixes itself, and then the 'declaration' runs later and unfixes it
[00:56:55] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[00:56:56] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[00:57:05] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[00:57:09] <flakland> does it solve any problems?
[00:57:14] *** Joins: yewscion (~yewscion@72-21-196-66.amazon.com)
[00:58:00] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:58:12] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:58:19] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[00:58:34] <KillerWasp> problem? naaaah... not problem...
[00:58:46] *** Quits: magla (~gelignite@d5366c9a.access.ecotel.net) (Quit: Stay safe!)
[00:59:05] <pulse> explicit hoisting is unnecessary in JS
[00:59:25] <pulse> also you probably shouldn't use var in modern ES
[00:59:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[00:59:47] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[00:59:48] <ProfSimm> pulse: I'm thinking about it separate from how the compiler works
[00:59:53] <Decker> and then let functions like the 3) option
[01:00:17] *** Quits: tehenderz (~tehenderz@88.88.160.108) (Ping timeout: 256 seconds)
[01:00:22] <ProfSimm> Hm
[01:00:29] *** Joins: tehenderz (~tehenderz@ti0018a400-7147.bb.online.no)
[01:00:55] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[01:01:00] <Decker> function hoisting can be nice... I would tend to define a utility function towards the end, but being able to reference it ahead of time is actually a nice feature.   Though much of my code is written that function hoisting wouldn't actually be required 
[01:01:23] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[01:01:38] *** Joins: psydroid (~psydroid@user/psydroid)
[01:02:07] <ProfSimm> Decker: I thought yesterday I'll do something like this, i.e. hoist declarations in every function (which also doubles as class and module in my case), but then I realized... why do it, instead of showing the right side of the code in the first place. The end.
[01:02:27] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[01:02:38] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[01:02:43] <ProfSimm> Decker: imagine if class constructors are always at the end, and IDE folding folds the declarations on top of every scope
[01:02:45] <ProfSimm> Magic.
[01:03:02] <ProfSimm> Oh also there's no return, just the last statement returns
[01:03:10] <ProfSimm> expression rather
[01:03:27] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 250 seconds)
[01:03:59] <ProfSimm> If the important part of the code is the end, then focus on the end.
[01:04:02] <ProfSimm> Simpler.
[01:04:08] <ProfSimm> No hoisting etc. needed
[01:04:37] *** Quits: nostalgia (~nostalgia@69.51.173.136) (Ping timeout: 240 seconds)
[01:04:42] <Decker> well.. that's just implemetning hoisting the same way JS 1.0 did.
[01:04:58] <ProfSimm> Hmm it's implementing no hoisting at all
[01:05:08] <ProfSimm> And restructuring the code so the important part is in the end
[01:05:22] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Read error: Connection reset by peer)
[01:05:22] *** Quits: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350) (Read error: Connection reset by peer)
[01:05:22] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (Read error: Connection reset by peer)
[01:05:22] *** Quits: psydroid (~psydroid@user/psydroid) (Write error: Connection reset by peer)
[01:05:22] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Read error: Connection reset by peer)
[01:05:22] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (Read error: Connection reset by peer)
[01:05:23] *** Quits: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7) (Read error: Connection reset by peer)
[01:05:23] *** Quits: k60 (~k60fmapme@2001:470:69fc:105::1:5597) (Write error: Connection reset by peer)
[01:05:23] *** Quits: nicoty (~nicoty@user/nicoty) (Write error: Connection reset by peer)
[01:05:23] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Write error: Connection reset by peer)
[01:05:23] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Write error: Connection reset by peer)
[01:05:23] *** Quits: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559) (Read error: Connection reset by peer)
[01:05:23] *** Quits: ketchupicecream (~ketchupic@user/ketchupicecream) (Read error: Connection reset by peer)
[01:05:23] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Read error: Connection reset by peer)
[01:05:24] *** Quits: p1netree[m]1 (~p1netreew@2001:470:69fc:105::1:a129) (Read error: Connection reset by peer)
[01:05:24] *** Quits: paoda[m] (~paodamatr@2001:470:69fc:105::9247) (Read error: Connection reset by peer)
[01:05:24] *** Quits: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee) (Write error: Connection reset by peer)
[01:05:24] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Write error: Connection reset by peer)
[01:05:24] *** Quits: jinsun_ (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[01:05:24] *** Quits: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026) (Read error: Connection reset by peer)
[01:05:24] *** Quits: Alpha3031[m] (~alpha3031@wikipedia/alpha3031) (Read error: Connection reset by peer)
[01:05:24] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Read error: Connection reset by peer)
[01:05:25] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Read error: Connection reset by peer)
[01:05:25] *** Quits: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d) (Read error: Connection reset by peer)
[01:05:25] *** Quits: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa) (Read error: Connection reset by peer)
[01:05:25] *** Quits: latterly[m] (~latterlym@2001:470:69fc:105::1:922f) (Write error: Connection reset by peer)
[01:05:25] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Write error: Connection reset by peer)
[01:05:27] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:05:29] <Decker> but - functional blocks of code should have their related viarables self contained - if I have a subset of expressions in the middle that use 'x' it shouldn't be available everywhere, because the next lbock might use a different 'x'
[01:05:37] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 256 seconds)
[01:05:39] <ProfSimm> I'm even half-contemplating what if I do reverse assignment.... 5 + 5 = varname
[01:06:21] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:06:40] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:06:45] <ProfSimm> Decker: vars are per block, yes, like "let" in JS
[01:06:47] <jjido> ProfSimm my language has 5 + y -> x
[01:06:50] <Decker> Single return - IMO that's a mistake; there's lint rules that make you do the same for C coding... but it's just a philosophy not practicality that drives that
[01:07:19] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8d15:a094:e4ae:b7c8)
[01:07:24] <ProfSimm> Decker: in C I wouldn't do single return. You need a language to enable it. Say if/switch/etc/ as expressions
[01:07:47] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:07:47] <ProfSimm> Decker: but multiple return I thought about it long time, tried examples and I concluded we need it because of this statement/expr dichotomy only
[01:07:48] <Decker> you have all those in C - and ou can use a variabe for the return value and somehow always get yourself to the end...
[01:07:49] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[01:07:51] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[01:08:03] *** Joins: scubagear[m] (~scubagear@2001:470:69fc:105::1:5dee)
[01:08:03] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[01:08:10] <Decker> but especially in the case where some parameter passed is bad - before you do 99% of the function you'd return with a error state
[01:08:12] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[01:08:12] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[01:08:15] <ProfSimm> No using a variable for the result is defeating the whole idea
[01:08:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:08:25] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[01:08:25] *** Joins: potatoxel[m] (~potatoxel@2001:470:69fc:105::f026)
[01:08:25] *** Joins: psydroid (~psydroid@user/psydroid)
[01:08:25] *** Joins: Alpha3031[m] (~alpha3031@wikipedia/alpha3031)
[01:08:30] *** Quits: psydroid (~psydroid@user/psydroid) (Client Quit)
[01:08:36] <ProfSimm> It makes code even less legible than multiple returns
[01:08:37] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[01:08:37] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:08:43] <Decker> https://github.com/d3x0r/user-database/blob/main/userDbServer.mjs#L374 this bit of code comes to mind
[01:08:44] <bayaz> Title: user-database/userDbServer.mjs at main ? d3x0r/user-database 
[01:08:45] *** Joins: psydroid (~psydroid@user/psydroid)
[01:08:53] *** Joins: nworb (~zbrownm]@2001:470:69fc:105::1:33db)
[01:08:53] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[01:09:05] *** Joins: twoten[m] (~twotensam@2001:470:69fc:105::1:55aa)
[01:09:12] *** Quits: emf_ (~emf@2620:10d:c090:400::5:9645) (Quit: emf_)
[01:09:17] *** Joins: fulminatingmoat (~fulminati@2001:470:69fc:105::1:658d)
[01:09:17] *** Joins: dan01[m] (~dan01@2001:470:69fc:105::1:2640)
[01:09:17] *** Joins: spokojni[m] (~spokojnio@2001:470:69fc:105::1:3fb2)
[01:09:30] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[01:09:30] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[01:09:42] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[01:09:42] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[01:09:42] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:09:43] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[01:09:52] <flakland> your language has no variables?
[01:09:55] *** Joins: latterly[m] (~latterlym@2001:470:69fc:105::1:922f)
[01:10:03] <ProfSimm> Decker: consider typical "early return" code with guards. Instead of that, imagine your last expression is this:   if guard() & guard() & guard happy_path() else throw Err.
[01:10:07] *** Joins: spectern[m] (~specternm@2001:470:69fc:105::1:6842)
[01:10:18] *** Joins: abf (~abf@user/abf)
[01:10:23] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[01:10:23] *** Joins: arakimo[m] (~arakimoma@2001:470:69fc:105::1:6559)
[01:10:24] <ProfSimm> It's even more obvious than early returns
[01:10:29] <Decker> I'm not saying it cannot be done.  It's just extra work to have to code it that way
[01:10:35] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[01:10:35] *** Joins: nicoty (~nicoty@user/nicoty)
[01:10:38] <Decker> more cognitive load on the programmer
[01:10:41] <ProfSimm> It's extra work when the languae is not built for it
[01:10:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[01:10:47] *** Joins: paoda[m] (~paodamatr@2001:470:69fc:105::9247)
[01:10:53] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:10:53] *** Joins: chillbruh (~chillbruh@2001:470:69fc:105::1:8946)
[01:10:53] <ProfSimm> As I said, I thought that, because habit is a mother f*****
[01:11:02] <Decker> your lanauge is there to make things easy - even do 99% of the work for the programmer, and now you are forcing them to think a certain construct
[01:11:02] <ProfSimm> But I tested, and actually it's quite natural
[01:11:06] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[01:11:07] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[01:11:08] *** Joins: nezz[m] (~nezzzmatr@2001:470:69fc:105::1:30b7)
[01:11:12] <Decker> to you
[01:11:19] <Decker> for your tests you implemented
[01:11:23] *** Joins: p1netree[m] (~p1netreew@2001:470:69fc:105::1:a129)
[01:11:23] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:11:23] <ProfSimm> Decker: yes, because I spent time on it
[01:11:24] *** Joins: kinduff (~kinduff@user/kinduff)
[01:11:24] *** Joins: ketchupicecream (~ketchupic@user/ketchupicecream)
[01:11:24] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2) (Read error: Connection reset by peer)
[01:11:33] <flakland> if it doesnt have variables then maybe "lazy evaluation" might actually make sense
[01:12:37] <ProfSimm> Decker: in fact a more likely scenario would be:   if !guard() error(...) elif !guard() error(...) elif !guard() error(...) else happy_path()
[01:12:51] <ProfSimm> Decker: it folds in a single expression. It's so obvious
[01:12:53] <ProfSimm> And clean
[01:13:17] <ProfSimm> And short.
[01:13:31] <Decker> until you have to unfold it to fix an inner condition that's now had alterate path
[01:13:45] <Decker> there's maintainence issues with single return more than initial development
[01:13:49] <ProfSimm> Decker: well can you provide some scenario to clarify that
[01:14:28] <ProfSimm> All examples of early return I saw had basically that pattern above
[01:14:36] <ProfSimm> It's just scattered around the method
[01:16:28] <Decker> in practive probably 80% of sack and like 95% of the core stuff tends to be single-return... because Knuth said so.  WHat I found over all usages was that the additional if's and/or whiles and having to track an extra state that's 'skip a bunch of code' to get to the return  just makes the code do more busywork; without any real benefit
[01:16:38] <ProfSimm> I'm sure I've missed cases. But also I'm sure we're creatures of habit and not even realizing it.
[01:16:49] <Decker> other than fitting some dogmatic philosohpy that 'that's the clearst, and there's no reason to ever not be clear'
[01:17:45] <ProfSimm> Decker: as noted, I wouldn't mandate single return in most imperative languages.
[01:17:55] <ProfSimm> The language needs to enable it
[01:18:11] <ProfSimm> So is it dogmatic verbose, confusing and so on, depends just as much on the language itself
[01:18:54] <ProfSimm> The fact is that if it's not more verbose/confusing, then having the high-level logic in a single place in the most logical place (last line) is cleanest and shortest
[01:19:16] *** Joins: emf (~emf@2620:10d:c090:400::5:9645)
[01:19:22] <Decker> it's not really all that much more clear; yes... there's also code that has multiple return values   This function https://github.com/d3x0r/sack.vfs/blob/master/object-storage.cjs#L801 has caching/memoizing, so it doesn't have to do a lot of the work if it was already done... this is better represented (for clarity, later someone reading the code from the top down, will clearly see the caching behavior)
[01:19:26] <bayaz> Title: sack.vfs/object-storage.cjs at master ? d3x0r/sack.vfs 
[01:20:00] <Decker> Sure you're arguing that folding hides all the sub-blocks; sure... until it doesn't and you actually have to consider what the sub-blocks are doing.
[01:20:24] <ProfSimm> Decker: what if you can use blocks as expressions
[01:20:29] *** Quits: emf (~emf@2620:10d:c090:400::5:9645) (Client Quit)
[01:20:53] <ProfSimm> { a: 1, b: 2, a + b }   <-- returns 3
[01:21:23] <Decker> shrug doesn't change anything really... I'd still put return { a:1,b:2, a+b} 
[01:22:04] <Decker> it's not a unsovlable problem to use single return and generate code that plays well with it.
[01:22:10] <ProfSimm> Decker: what it changes is that "it hides the blocks" is no longer the case when the blocks are expressions
[01:22:16] <Decker> it's more work to figure the solution than multi-return
[01:22:41] <ProfSimm> Decker:  it's more work because you're used to doing it one way. And the language fights you when trying another way. 
[01:22:45] <ProfSimm> So it's habit and cirumstance.
[01:22:48] <ProfSimm> It's not fundamental
[01:22:56] <ProfSimm> The whole "return" statement is a misstep
[01:23:08] <Decker> 'ret' works great in asm.
[01:23:22] <ProfSimm> Well thank god I'm not doing an asm
[01:23:24] <Decker> so fuck that logic :)
[01:23:45] *** Quits: suss` (~user@user/suss) (Ping timeout: 256 seconds)
[01:23:52] <ProfSimm> Well then go code by writing and reading from accumulators if ASM is our highest standard
[01:24:01] <ProfSimm> registers I mean
[01:24:22] <Decker> next you'll be saying gosub was a terrible invention too
[01:24:34] <ProfSimm> Decker: well it was awesome compared to goto
[01:24:48] <ProfSimm> But you know, asbestos was awesome compared to no insulation
[01:25:17] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Remote host closed the connection)
[01:25:42] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0)
[01:26:47] <flakland> if your language has no variables, then yeah returns make no sense 
[01:26:47] <Decker> I'm just sharing my experience... you're not going to gaslight me into beleiving that my experieence isn't true.  I explained that my first habit was single return.
[01:27:12] <ProfSimm> Decker: well I didn't even try to tell you your experience isn't true
[01:27:16] <ProfSimm> I very much said it is true.
[01:27:33] <ProfSimm> But because you're dealing with an imperative language and habits.
[01:27:58] <nomagno> my instruction set has a `ret` instruction, but no return value, it's just a subroutine terminator
[01:28:01] <nomagno> Also no variables, so yeah
[01:28:13] <KillerWasp> What does 'vicious look' mean?
[01:28:42] <jjido> is that about your nick KillerWasp ?
[01:28:54] <pyzozord> ProfSimm: think it's easier to talk about experimental ideas by communicating clearly that they are experimental
[01:29:06] <KillerWasp> jjido: no, any random offtopic
[01:29:13] <ProfSimm> Decker: if you check that code you linked me to. It's a big sequence of  "if (!thing) return foo; if (!thing2) return bar;" this is literally the same as my if/elif expression
[01:29:18] <KillerWasp> i don't have a site for ask it
[01:29:24] <pyzozord> otherwise people could take it as a statement of fact and extrapolate you are suggesting you know something they don't
[01:29:31] <nomagno> Compound return statements are very cool IMO
[01:30:08] <pyzozord> (just my unrequested seldom given advice)
[01:30:15] <ProfSimm> pyzozord: sure
[01:30:53] <jjido> nomagno what is it?
[01:31:02] <ProfSimm> Decker: if you had to reduce this to a single return in JS, you'd have to either use a long ternary sequence, which becomes obscure a bit, or you need to save return result to a var and return the var. Both are not clean.
[01:31:09] <nomagno> pyzozord's mostly-stack-only idea was actually pretty good
[01:31:12] <Decker> ProfSimm Right.  That's now sure, I'm not constrained by single return, and have NO qualms about using multiple returns.   Sure could I do (if( validateA&& validateB&&validateC&&) but then I can't send a custom response for each failure
[01:31:13] <nomagno> Ditch the stack, you don't need it
[01:31:13] <nomagno> But I'd make it even more interesting
[01:31:30] <nomagno> Simply do allocation and deallocation automatically whenever you reach start/end braces
[01:31:43] <Decker> each return has a different genreation of a mesasge; it's not a return value
[01:31:43] <ProfSimm> Decker: I provided an example above about that: <ProfSimm> Decker: in fact a more likely scenario would be:   if !guard() error(...) elif !guard() error(...) elif !guard() error(...) else happy_path()
[01:31:51] <nomagno> jjido: it was to have a language that only/mostly has stack-based allocation
[01:31:54] <Decker> itr could be - and make the caller send the generated message...
[01:31:58] <pyzozord> nomagno: still would like to made that language some day
[01:32:01] *** Quits: Iarfen (~quassel@181.43.56.115) (Ping timeout: 256 seconds)
[01:32:17] <ProfSimm> Decker: the & example was not good
[01:32:33] <Decker> ProfSimm then I can reorder /insert a new if at the beginning without changing any lines of code. grab block and drag.
[01:32:44] <Decker> else if requires an edit to make 'if' and vice versea
[01:33:48] <ProfSimm> Decker: that's... honestly not that important is it. I actually call it "if" all the time, but I didn't want to confuse you because it looks like multiple statements while in fact it's one expression where subsequent if-s act as elif
[01:34:00] *** Quits: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) (Quit: You have been kicked for being idle)
[01:34:15] <Decker> I'm a super lazy programmer :) it matters; otherwise I wouldn't have taken note.
[01:34:17] *** Joins: suss (~user@user/suss)
[01:34:28] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[01:34:34] <nomagno> pyzozord: what do you think of this variation: instead of having a stack, make all variable pointers and 'malloc'/allocate them where it is most needed. So, make all variables addresses. Then, when you reach end-braces, simply do a 'free'/deallocation. Then the stack would be subroutine name, return address, and space for maybe a few dozen pointers
[01:34:42] <Decker> that's more like a memory of things that have been than a new hypothetical thought
[01:34:43] <ProfSimm> Decker: well when I look at it in my editor it also bothered me it looks... "uneven" let's say. So I decided it'll be even
[01:34:44] <nomagno> Much cleaner if you ONLY have the stack, don't you think?
[01:35:11] <nomagno> It makes stack overflow simply not possible, in the traditional sense
[01:35:37] <ProfSimm> nomagno: the problem with the stack is that in a world where cooperative threading is increasingly important, the stack sucks
[01:35:52] <ProfSimm> You need effectively thousands of little stacks
[01:35:57] <pyzozord> Decker: I remember few yeras ago back on freenode I was seeing some of your c++ code and feeling so lost and intimidated by it. I feel I've grown since then to the point, maybe not equal, but at least enough to be able to follow the conversation now :)
[01:36:02] *** Joins: mickey81 (~user@user/mickey)
[01:36:38] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:36:38] <pyzozord> nomagno: that's very interesting
[01:36:45] <Decker> ProfSimm https://github.com/d3x0r/JSOX/blob/master/lib/jsox.mjs#L379-L588 polymorphic returns - every 'single' return is a different type
[01:36:46] <bayaz> Title: JSOX/jsox.mjs at master ? d3x0r/JSOX 
[01:36:50] <pyzozord> nomagno: and not bad at all
[01:37:05] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:37:05] *** mickey81 is now known as mickey8
[01:37:06] <Decker> but that module is writtten as a stream processor basically a while that's a function.... and has a single return
[01:37:15] <ProfSimm> Decker: I don't restrict returned types from an expression
[01:37:15] <c2a1> Dat feel when u have inferior code
[01:37:22] <pyzozord> nomagno: the only problem I see there would have to be some kind of static analysis preventing addresses leaking out outside of their scope
[01:37:25] <ProfSimm> Decker: in fact... does anyone
[01:37:27] <Decker> works fine for that sort of thing (though the function IS much too long for most people's sanity)
[01:38:05] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[01:38:09] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:38:10] <pyzozord> nomagno: also how would you solve returning values? Maybe there would be an implicing pointer with placeholder for return value passed to each function when called?
[01:38:16] *** Joins: mickey8 (~user@user/mickey)
[01:38:33] <pyzozord> and it would have scope of the parent function that called us
[01:38:35] *** Quits: Leone (~Leo@108.175.224.215) (Read error: Connection reset by peer)
[01:38:38] *** Quits: newwebdev13 (~newwebdev@31.210.55.133) (Quit: Leaving)
[01:38:49] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[01:39:01] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:39:22] <pyzozord> nomagno: it seems like this scheme mostly fulfills the primary goal of very clear and predictable memory management model, I am in
[01:39:41] <pyzozord> I'd be interested to develop this idea further to see what implication pointer values have in this kind of environment
[01:39:52] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[01:40:11] <pyzozord> it's almost like python or javascript, except all variables have local scope
[01:40:27] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[01:40:49] <pyzozord> this makes me want to go back to designing my language
[01:41:18] <ProfSimm> pyzozord: we need more fresh ideas in this space
[01:41:22] *** Quits: Akuli (~Akuli@82-203-164-247.bb.dnainternet.fi) (Quit: Akuli)
[01:41:27] <nomagno> pyzozord: Yeah, essentially the return value would be a local var of the parent function. When you reach the braces of thr subroutine, all automatically alloced memory is freed. You could have "permanent" memory allocation if you want but you would make it a very clear thingy like manual { type var; } ... free var;
[01:41:34] <ProfSimm> pyzozord: the amount all languages are similar to one another makes me sad
[01:41:47] <nomagno> ... This is how I use C already, except I do use the stack
[01:41:58] *** Quits: absc (~absc@dynamic-adsl-94-34-165-20.clienti.tiscali.it) (Quit: Leaving)
[01:42:24] <ProfSimm> pyzozord: sorry if I'm giving you back things you told me earlier, but have you seen Rebol. And Io / Ioke
[01:42:25] <nomagno> An almost a stackless (stack is only for a few addresses, can't be blown) model would be insanely clean
[01:43:25] <ProfSimm> nomagno: there's another approach, allocate the stack in pieces as needed.
[01:43:42] <ProfSimm> nomagno: like a mix of linked list and normal stack
[01:44:03] <nomagno> ProfSimm: a stack has, by nature, a vertical limit
[01:44:06] <ProfSimm> nomagno: also you can have concurrent stacks and switch between them at will
[01:44:16] <nomagno> You COULD allocate it 'upwards'...
[01:44:17] <ProfSimm> Why should it
[01:44:28] <ProfSimm> Well, yes.
[01:44:52] <ProfSimm> Well you blow it upwards, not downward :D
[01:45:17] <nomagno> Fair
[01:45:46] <pyzozord> on one hand I kind of feel stupider than ever, on the other when I look back I was even stupider
[01:46:25] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d)
[01:46:59] <Decker> https://store.steampowered.com/app/469920/hackmud/ ProfSimm wish this was free; it's langauge feels like that expression you shared
[01:46:59] <bayaz> Title: hackmud on Steam 
[01:47:44] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[01:48:32] *** Quits: b1tr0t (~bitrot@149.167.135.129) (Ping timeout: 240 seconds)
[01:48:41] <ProfSimm> Decker: which part is like that expression. Cool video fx tho
[01:48:48] <nomagno> pyzozord: how so?
[01:48:59] <nomagno> Ur pretty smort
[01:49:18] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:cc37:7a8c:a4ec:8c3d) (Ping timeout: 260 seconds)
[01:49:18] <ProfSimm> Decker: ah I see named params a bit like my sequences yeah
[01:49:29] <Decker> ProfSimm well you'd have to play with it... variables are sort of defined in braces like that; it's somewhat JS esque but not
[01:49:36] <ProfSimm> Decker: man it'd be sad if all our real language innovation is happening in games. Won't be the first time tho
[01:49:37] <Decker> ya
[01:49:52] <Decker> well it's a DSL
[01:50:03] <Decker> whih is mostly determeined by the runtime library you get with it
[01:50:06] <ProfSimm> Decker: my blocks are actually in ()-s but again I tweaked the syntax so I don't have to explain everything. Same deal tho
[01:50:26] <ProfSimm> Decker: foo: (a: 1, b: 2, a + b) // foo = 3
[01:50:38] <Decker> ya {( look really similar in my IRC font single 
[01:50:47] <ProfSimm> Decker: also newline counts as comma (you can indent the line to continue multiline expression)
[01:51:15] <ProfSimm> This is tentative, I don't like the indent rule but I'll test it
[01:51:30] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:52:16] <Decker> blockly function blocks sort of have a single return; but that's again a store in local variable and forward until the end... which is pretty much all you can do ... somehow saving the reslut o that A+B so that all expressions afterward don't count 
[01:52:47] <Decker> maybe as that goes , and ; work for ,(push) and ;(don't push)
[01:52:50] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[01:54:22] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Quit: ZNC 1.8.2 - https://znc.in)
[01:54:37] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:54:54] <Decker> I do think that newline should default as a ';'  (which might be more like a flush stack until beginning of context... and then you just need one ';' at the end to return void)
[01:55:39] <Decker> hmm but that means a newline would have to be ',' 
[01:56:38] *** Joins: Twipply (~Twipply@user/twipply)
[01:57:04] <ProfSimm> Decker: I support multiple results, but not with a stack. It's worth thinking about, but it should be clear at a glance what you return and what you don't and I'm kinda worried about subtle things like ; vs , and so on
[01:58:08] <ProfSimm> Decker: have you seen Finder
[01:58:15] <Decker> but you already have the AST of it - what it returns should just sorta popup or be there because it's rpobably short
[01:58:16] <ProfSimm> Decker: that column layout it has
[01:58:20] <Decker> it could update as you build your expressions
[01:58:49] <ProfSimm> Decker: I don't understand
[01:59:12] <Decker> the last expression (peek Last) is like your return value
[01:59:18] <pyzozord> nomagno nah, dum af, barely a competent programmer, and that not always
[01:59:19] <ProfSimm> Yes
[01:59:27] <Decker> so you're providing a custom IDE too
[01:59:42] <ProfSimm> Right
[01:59:50] <Decker> just mousing over it could do a hover-window with that def; or just show it after the variables at the start of the block/function
[02:00:00] <Decker> or before 
[02:00:09] <Decker> so you see (call signature) \n ( return value )
[02:01:28] <ProfSimm> Decker: you know. Actually I've contemplated something like that, say we declare functions with three blocks like  "do input body output"
[02:01:46] <pyzozord> nomagno incredible amount of details I'm missing on all fronts, let alone the whole areas I'm missing or not even aware of they exist
[02:01:56] <ProfSimm> Decker: do [a: int, b: int] () (a: a, b: b, a + b)
[02:02:02] <ProfSimm> Decker: body is empty in this case
[02:02:03] <pyzozord> s/detail/depthl
[02:02:19] <Decker> https://www.richinfante.com/2020/01/03/webassembly-examples ProfSimm sounds like WAST
[02:02:19] <bayaz> Title: WASM Basics using WAST - Rich Infante 
[02:02:36] <ProfSimm> Decker: thing is it makes it clumsy to use ad-hoc like in the middle of an expression
[02:02:46] <ProfSimm> Decker: I gotta think
[02:02:58] *** Quits: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) (Quit: You have been kicked for being idle)
[02:03:18] *** Joins: sheb_ (~sheb@31.223.228.71)
[02:03:31] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:03:57] <ProfSimm> Decker: another issue is what if I want to dynamically compute the result shape. Stream N items.
[02:03:58] *** Joins: pimeys (~pimeysmat@2001:470:69fc:105::1:650a)
[02:04:02] *** Quits: innocent_victim2 (~innocent_@85-76-72-23-nat.elisa-mobile.fi) (Quit: Client closed)
[02:04:23] *** Quits: znedw54 (~znedw@home.znedw.com) (Quit: The Lounge - https://thelounge.chat)
[02:05:07] <Decker> then sounds like the tree should result in more than one 'return value' since each path is a different shape
[02:05:21] <Decker> sometimes with variables to define the shape because it was built wihtin a loop
[02:05:26] <ProfSimm> WASM looks a bit like LISP meeting WASM
[02:05:27] *** Quits: sheb (~sheb@31.223.228.71) (Ping timeout: 256 seconds)
[02:05:31] <ProfSimm> I mean LISP meeting ASM
[02:05:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[02:06:43] <Decker> no car cadr cddr
[02:06:47] <ProfSimm> Decker: well adding multiple return paths in itself doesn't resolve the dynamic return shape/length. So no need to add it for that
[02:07:02] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[02:07:12] <pulse> pyzozord, you know feeling stupid implies you're past the "mount stupid" in Dunning-Kruger
[02:08:02] <pulse> (it's a good thing)
[02:08:04] *** Joins: znedw54 (~znedw@home.znedw.com)
[02:08:17] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[02:08:27] <ProfSimm> pulse: I feel stupid all the time, but doesn't help me
[02:08:35] <pulse> it does
[02:08:35] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:08:41] <pulse> stupid people feel smart
[02:08:43] <pulse> smart people feel stupid
[02:08:49] <pulse> i noticed this when i was 6
[02:08:54] <ProfSimm> Well, sometimes stupid people feel stupid.
[02:09:01] <pulse> very rarely
[02:09:04] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:09:04] <ProfSimm> Eh.
[02:09:05] <pulse> and if they do, that means they're learning
[02:09:16] <pulse> all my stupid friends think they're incredibly smart
[02:09:23] <pulse> and all my smart friends constantly struggle with feeling stupid
[02:09:27] <ProfSimm> I think maybe if we could measure it, there's low correlation between how you feel and what you are. Hence no one can judge themselves
[02:10:50] <ProfSimm> Decker: what does it say about me that you can just have this faux-CRT console in what's basically a text game, and I'm suddenly gushing all over it.
[02:11:08] <ProfSimm> Nostalgia sucks
[02:11:26] *** Parts: pimeys (~pimeysmat@2001:470:69fc:105::1:650a) ()
[02:11:36] <Decker> ProfSimm 'teeheh' like.. totally...
[02:12:03] <Decker> tots
[02:12:37] <Decker> tater tots
[02:13:01] <pyzozord> pulse still on the mount often, but hanging around here and my recent jobs and experiences really put things in perspective much more
[02:13:18] <pulse> just don't fall too low in the valley of despair ;)
[02:13:27] <pulse> it gets better
[02:13:35] <pyzozord> Oh yeah i might be falling down that rn
[02:14:31] <ProfSimm> I vaguely remember someone figuring out how to draw basically arbitrary graphics in text mode by patching the glyphs depending on what graphics are to be shown
[02:14:31] *** Joins: Guest10 (~Guest10@2403:6200:8816:79b4:d45c:dbdc:c484:ea4d)
[02:14:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[02:14:45] *** Quits: Irishmanluke (~luke@c-69-139-28-60.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[02:14:53] <ProfSimm> Sort of like reusable patterns
[02:14:57] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:15:01] <ProfSimm> Two colors per glyph
[02:16:14] <ProfSimm> Imagine if this is how we decided to go about it. Adding more and more glyphs on the card, and drawing faux-true color images with them.
[02:16:19] <pyzozord> Hurts my ego some, I though I was way past it already, but honestly also kinda cool to get humbled. I'm 30 and I learn from 23 year old students at works and they are at my level or better in many areas
[02:16:32] <pyzozord> There isn't much of my programming ego left atm
[02:16:41] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[02:16:48] *** Joins: vicfred (~vicfred@user/vicfred)
[02:17:01] <ProfSimm> pyzozord: programming is learning non-stop so that's kinda the experience for everyone
[02:17:17] <ProfSimm> There's too much s**t
[02:17:28] <ProfSimm> Every time you blink, a new framework is born
[02:17:47] <Decker> So I have this copy on write feature... Only... I don't know how to make it work; right now the default is to follow the most recent version (actually I hid it behind a flag and defaulted to off, so I just track a created timestamp (which never has data) and a updated timestamp; but then don't allocate a new timestamp.
[02:17:49] * LjL blinks repeatedly
[02:17:50] <ProfSimm> This means by definition everyone you talk to knows stuff you don't know
[02:18:34] <ProfSimm> Decker: what do you copy-on-write precisely
[02:18:36] <Decker> I can maybe extend references to include a timestamp with the id, and link new copies to the version; but I guess the default has to be the oldest version not the newest (in the case of versioned objects)
[02:18:36] <pulse> pyzozord, goes both ways. some 14 year olds are programming gurus. some 60 year old old timers can barely program
[02:18:54] *** Quits: jaysicks (~jaysicks@178-164-182-223.pool.digikabel.hu) (Remote host closed the connection)
[02:18:56] <pulse> the trick is to love it
[02:19:00] <Decker> ProfSimm actuall nothing :) It's save new write as a different copy
[02:19:05] <pulse> you naturally get good at what you love
[02:19:14] <ProfSimm> Decker: this may depend on your specifics, but usually this is not done with timestamps
[02:19:15] <Decker> assuming it was previously loaded by an application, massaged and put back in the same place
[02:19:37] <pyzozord> pulse problem is all i did half my life is programming
[02:19:37] <ProfSimm> Decker: more about reference counting. Although you can have a slightly less efficient version without refcounting
[02:19:48] <Decker> each timestamp = 1 reference ;)
[02:19:50] <pulse> pyzozord, why is that a problem lol
[02:19:56] <Decker> delete a timestamp deletes the data at that reference
[02:20:12] <pyzozord> pulse you'd expect I was way better than I am atm
[02:20:20] <Decker> it's file-storage not memory storage copy on write
[02:21:07] <pulse> pyzozord, `better` is relative. and you can improve at any stage
[02:21:21] *** Quits: Guest10 (~Guest10@2403:6200:8816:79b4:d45c:dbdc:c484:ea4d) (Quit: Client closed)
[02:21:24] <pyzozord> pulse also funny thing I think two years ago I was like 50% worse than I am now
[02:22:05] <pulse> pyzozord, my programming confidence is inversely correlated with my programming skill. i think it holds for other people too
[02:22:19] <pulse> 1st year of college i thought i was the next carmack
[02:22:40] <pulse> real life humbles you over time
[02:23:02] <Decker> ProfSimm So I had this scenaraio; I have 'sashes' which have badges that are the permissions you get for a service.  The sash references a service that it belongs to, but the service has a couple sashes associated with it (A 'master' that contains all permissions and should never change, so if users delete all their badges, there's still a way to recover permissions to someone)...
[02:23:08] <pyzozord> I understood (barely) what "Turing complete" actually means in the last two years. I understood (barely) how basic lambda calculus combinators work last year.
[02:23:53] <Decker> and a 'default' ... so now there's two circular links to itself; when I save an object, It automatically follows knows what objects have been saved, to replace with an ID instead of the data itself
[02:24:00] <pulse> turing complete means it can process anything processable
[02:24:01] <ProfSimm> pyzozord: guy in China, programmed all his life, decided to write sci-fi, and became a world bestselling author
[02:24:07] <pyzozord> I understood how networking packets nest last week
[02:24:31] <pyzozord> pulse i hope your invariant holds true for me as well
[02:24:39] <Decker> but, when I save "sash" it saves a copy of service and the other sash in itself, then I write 'sash2' and it saves the refernce to sash 1, but still a copy of the service, and then write the service, which just writes the service, and references to the two sashes
[02:25:07] <Decker> but now I have 3 copies of the service.... (moral of the story 'horray for values' :) )
[02:25:12] <pyzozord> ProfSimm actually kinda thinking about doing some writing. Maybe interactieve fiction
[02:25:35] <Decker> I ended up just re-saving the sashes to get the right outputs; but then that shows that some object models aren't so easy to deal with
[02:25:48] <Decker> and my 'noob friendly' api isn't.
[02:25:56] <pyzozord> I'm listening right now to Writing Excuses podcast
[02:28:13] <ProfSimm> Decker: I don't fully understand what you're doing. Using "sash" and "badge" doesn't help :)
[02:28:22] <ProfSimm> Decker: is it like token contains and tokens or
[02:28:26] <ProfSimm> container*
[02:29:52] <Decker> like a group contains tokens
[02:30:12] <pulse> pyzozord, i have this talk handy for motivational purposes, i suggest you watch it https://www.youtube.com/watch?v=YOZnqjHkULc
[02:30:14] <bayaz> Title: John Carmack Receives Honorary Degree 
[02:30:19] <pulse> one of the best talks ever
[02:30:20] <Decker> so you have IT, HR, blah, blah sort of groups that have sets of permissions
[02:30:37] <pulse> starts at ~2:00
[02:31:07] <Decker> but With Bingo; a User can be a Floor Manager and a Cashier, but they can't be both on the same day... so they sort of need a way to 'wear a different hat' (or sash) that indicates what permissions they're using
[02:32:34] *** Joins: b1tr0t (~bitrot@149.167.135.129)
[02:33:00] *** Quits: pizdets (~pizdets@183.182.110.149) (Ping timeout: 250 seconds)
[02:33:37] <KillerWasp> my eyes...
[02:33:38] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 260 seconds)
[02:33:41] *** Joins: pizdets (~pizdets@183.182.114.157)
[02:34:03] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[02:34:03] <KillerWasp> as if i had slept badly.
[02:34:12] <KillerWasp> I need more sleep?
[02:35:54] <KillerWasp> In my code, when everything seems to be working so well, it suddenly explodes from every pore, and I have to be tracking with a powerful GDB-9000 everywhere trying to fix bugs.
[02:36:52] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[02:36:54] <ProfSimm> Decker: if i get your problem, it's working with value semantics, and accidentally producing copies when serializing and deserializaing those values that point to one another
[02:37:02] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[02:37:23] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[02:37:51] *** Joins: kish` (~aqua@user/aqua)
[02:38:35] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[02:38:39] <ProfSimm> Decker: I'm dealing with similar issues as my thing is also heavily value-oriented, and my conclusion was I need to think about it like an SQL database, or a Plan 9 namespace if you will (like /proc in Unix). Entities sit in a specific place in your "state tree". You can't refer to them as value, you refer to them as path. Like in SQL you refer to an entity by its primary key and implying which table it is
[02:39:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:39:27] <ProfSimm> So you refer to users.10 as "users.10" or ["users", 10] or however you prefer
[02:39:31] <ProfSimm> No copies.
[02:40:11] <ProfSimm> The value that sits there should be some exposed state, a copy. Not the thing itself. An entity can't be a value. A value isn't an entity. The value is just the 'api' of the entity, a reflection of it
[02:41:35] <KillerWasp> free(): invalid next size (fast)
[02:41:36] <KillerWasp> wut
[02:41:46] <ProfSimm> Ayway I don't wanna dig more into it because maybe I'm going on a tangent
[02:42:03] <KillerWasp> like i make free fast?
[02:44:10] <ProfSimm> Decker: as for users being job roles. In a similar situation what I did was setup the job roles as users themselves. And give access to physical users to the roles. So you can puppeteer the job user from the physical user. The log maintains who controls the job user, but all permissions and so on are attached to the job user. It was simple in my case.
[02:44:13] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 250 seconds)
[02:44:30] <ProfSimm> simpler*
[02:44:44] <ProfSimm> You prep these job templates and users wear them like a suit
[02:45:51] *** Joins: k8yun_ (~k8yun@24.244.29.102)
[02:45:55] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:47:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:49:02] *** Quits: tehenderz (~tehenderz@ti0018a400-7147.bb.online.no) (Ping timeout: 260 seconds)
[02:49:02] *** Joins: duuude (~user@user/duuude)
[02:49:09] *** Joins: tehenderz (~tehenderz@ti0018a400-7339.bb.online.no)
[02:49:25] *** Quits: k8yun (~k8yun@24.244.29.102) (Ping timeout: 240 seconds)
[02:51:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:53:32] <KillerWasp> i fixed all the problems...
[02:53:38] <KillerWasp> no problem...
[02:54:22] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[02:54:25] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[02:54:48] <KillerWasp> it's nice, my program work fine.
[02:56:57] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[02:57:54] *** Quits: duuude (~user@user/duuude) (Ping timeout: 260 seconds)
[02:58:16] <KillerWasp> now apply to my server/client is all a pain.
[02:58:31] <Decker> ProfSimm 3.apple is MUD syntax for the third apple 
[02:59:26] <Decker> ProfSimm but ya you got the gist of the problem :)  Forcing it to be more compartmentalized/rigid is another solution
[03:00:23] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[03:00:40] *** Joins: duuude (~user@user/duuude)
[03:01:44] *** Quits: federico (~federico@176.206.191.61) (Quit: WeeChat 3.3)
[03:01:53] * pulse hands new problems to KillerWasp 
[03:03:09] <ProfSimm> Delf: I find using my "relational" mindset helps, because in SQL there are no actual references to anything, and everything is values that exist at a specific place (in their tables). You can read/transform the, but you're not getting an actual table in the results, you get this copy that's just a snapshot in time on a subset of it
[03:03:40] <pulse> ProfSimm, what are your thoughts on relational algebra
[03:03:51] <ProfSimm> pulse: well, my thoughts are it's great.
[03:04:20] <pulse> it probably is if you can use it effectively
[03:05:13] <KillerWasp> pulse: thanks, i love new more problems. 💖
[03:05:37] <ProfSimm> pulse: I was excited about SQL DBs as a teen I had no idea what they are. They I learned it's just flat tables of scalars, I was very disappointed. Like "no even arrays as fields, wtf is this s**t". Of course modern DBs have arrays, JSON, XML but that's beside the point. I didn't understand relational algebra until i figured out why these simple tables are a superset of all other data structures I've ever used.
[03:05:55] <ProfSimm> It kinda clicks at one point "oh my god, eveything is relational" :P
[03:06:14] <ProfSimm> Of course there's still place for other stuff, but relational algebra is basically the God Mode of data structures
[03:06:32] <pulse> fair take
[03:06:35] <pulse> i'm not a fan of databases in general
[03:07:12] <ProfSimm> pulse: have you researched Plan 9 namespaces
[03:07:41] <pulse> nope
[03:07:46] <ProfSimm> Hmm well
[03:07:55] <pulse> i know nothing about plan9
[03:07:57] *** Joins: random-nick (~random-ni@87.116.167.125)
[03:08:08] <ProfSimm> Well OK, so you know a graph, right
[03:08:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[03:08:15] <ProfSimm> Node links to N other nodes and so on
[03:09:01] <ProfSimm> An object graph is basically that. Object refers to other objects etc etc. in trees and loops and graphs in general
[03:09:30] <ProfSimm> pulse: have you had to serialize a graph like that, and being stuck having to detect cycles and what not
[03:09:42] <pulse> yeah OOP architecture can be represented by object graphs
[03:09:46] <ProfSimm> Sure
[03:09:58] <ProfSimm> Things is walking those graphs as graphs is a nightmare horror movie
[03:10:24] <ProfSimm> You gotta keep a dictionary of encountered objects, enumerate references, break cycles and so on
[03:10:40] <ProfSimm> You also can't walk links backwards usually. 
[03:11:04] <ProfSimm> I.e. foo.bar  foo refers to bar, but is bar referred to by foo? you can't know if you have bar
[03:11:17] <ProfSimm> Graph and multigraph are the most general data structures there are.
[03:11:39] <ProfSimm> And in relational algebra you can represent them simply as two tables: nodes, and edges. 
[03:11:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:11:54] <ProfSimm> Serializing them is a walk in the park, you don't encounter cycles, no nothing
[03:12:00] <pulse> i did some relational algebra stuff in college but i always found it annoying
[03:12:09] <pulse> i never got too deep into it though
[03:12:23] <pulse> i figured there has to be a purpose for it but the way they taught it was just useless
[03:12:32] <ProfSimm> Point is, graphs are this nightmarish web of everything to everything, in relational algrebra it's those two brutally simple tables
[03:12:43] <ProfSimm> Kinda makes you go "huh" when you realize
[03:13:12] <pulse> i thought it was mostly about relationships
[03:13:26] <ProfSimm> pulse: "relation" is synonym for table.
[03:13:27] <pulse> and joins and whatnot
[03:13:33] <ProfSimm> Not for joins.
[03:13:35] <pulse> yeah, that always confused me :p
[03:13:40] <ProfSimm> The algebra part is the joins
[03:13:41] <ProfSimm> :D
[03:13:53] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:14:14] *** Quits: swp (~Thunderbi@143.176.249.0) (Ping timeout: 260 seconds)
[03:14:42] <ProfSimm> pulse: I don't love SQL per se from aesthetic PoV, and especially the fact our general purpose languages are so inept at querying a DB (either via strings, or libraries that build strings)
[03:15:06] <ProfSimm> pulse: but it's a live. Ideally the DB would have to live in the language itself that's using it
[03:15:10] <ProfSimm> life*
[03:15:38] <ProfSimm> pulse: an example, a glimpse of what that looks like is the Entity Component System architecture used by high-performance games.
[03:16:00] <pulse> yeah, i don't find ecs very elegant tbh
[03:16:04] <ProfSimm> It's basically a subset of relational databases, but running native in memory, in C++ or C#, the language of the same itself
[03:16:12] <ProfSimm> Well
[03:16:13] <pulse> i see it as an inconvenient optimization if anything
[03:16:34] <pulse> but opinions on it vary wildly
[03:16:58] <ProfSimm> Wouldn't say inconvenient, because it makes it so trivial to process a frame. Walk the components, boom, done.
[03:17:08] <pulse> it makes it inconvenient to work with
[03:17:11] <ProfSimm> Well.
[03:17:17] <ProfSimm> I don't know. I love it :P
[03:17:24] <pulse> yeah. many do
[03:17:40] <pulse> i'd only use it for performance gains in something like a real-time strategy game
[03:17:45] <pulse> with millions of units of something
[03:17:47] <ProfSimm> It doesn't clash with OOP, it's just a larger grain OOP, where one object is many entities
[03:17:54] <ProfSimm> And aspects thereof
[03:17:55] <pulse> for my retro-styled games oop is more than perfect
[03:18:00] <ProfSimm> Components I should say I guess
[03:19:18] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[03:19:52] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:20:53] <ProfSimm> pulse: when I read about the Reduceron, it made me think what if those relational-like "SIMD" type pipelines work well only because our computer architectures were built for it. Maybe a CPU for a functional language would run a "functional" gaming engine fastest, who knows
[03:21:12] <ProfSimm> pulse: likewise for an OOP CPU based around actors I guess
[03:21:19] <pulse> ugh, functional processors :p
[03:21:41] <pulse> sorry ProfSimm i gotta run for the time being, i'll catch you later
[03:21:48] <ProfSimm> Sure see ya
[03:24:18] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[03:24:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03) (Remote host closed the connection)
[03:25:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f98e:e38d:b4ba:5a03)
[03:25:49] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:25:53] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[03:31:18] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[03:31:35] *** Joins: img (~img@user/img)
[03:31:49] *** Quits: eXtr3m0_ (~eXtr3m0@p4fd3afed.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:34:50] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[03:35:15] <loganlee[gnu]> hello good morning!
[03:35:28] <[itchyjunk]> hello, average morning
[03:36:33] <loganlee[gnu]> i wish i had adderall so i get real smart each morning
[03:36:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f)
[03:38:35] <edgar-rft> I bet it's a superior morning for morning supremacists
[03:40:05] *** Quits: soapsudsxx (~soapsudsx@209.221.40.152) (Remote host closed the connection)
[03:40:12] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:40:30] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:40:51] *** Joins: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au)
[03:41:27] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[03:41:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:42:19] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[03:42:45] *** Joins: soapsudsxx (~soapsudsx@209.221.40.152)
[03:43:09] *** Quits: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:44:35] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[03:44:46] <loganlee[gnu]> i rely on coffee to get me going each day
[03:45:25] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Ping timeout: 240 seconds)
[03:45:32] <amigojapan> Hi everyone
[03:45:43] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[03:45:55] <amigojapan> loganlee[gnu]: having coffee right now
[03:46:09] <rindolf> loganlee[gnu]: sup?
[03:46:19] <loganlee[gnu]> amigojapan: enjoy! flat white? cappuccino? expresso?
[03:46:22] <amigojapan> Hi rindolf 
[03:46:24] <loganlee[gnu]> rindolf: hi
[03:46:42] <rindolf> loganlee[gnu]: espresso
[03:47:21] <rindolf> ← grammar nazi
[03:47:24] <amigojapan> loganlee[gnu]: umm just cheap instant with cream
[03:48:06] <loganlee[gnu]> rindolf: oh ok
[03:49:20] <absentia> PEASANT
[03:49:26] <amigojapan> loganlee[gnu]: this is the cheapest coffee I can drink. I am broke
[03:49:47] <absentia> how dare you not hand-grind your single origin ethiopian sidamo ardi picked by artisinal garden gnomes
[03:49:47] <loganlee[gnu]> amigojapan: at least it's caffeine man. you get what you seek
[03:49:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[03:50:01] <absentia> what is this, the time of charlemagne?!
[03:50:07] *** Quits: Pebbles (~Pebbles@171.160.220.111.dyn.iprimus.net.au) (Quit: Have a groovy one)
[03:50:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:51:03] <amigojapan> Yeah loganlee[gnu] . I have tried calling pills. But those were too addictive. I was up to over 1000mg of caffeine or day. And they contain lead
[03:51:09] *** Joins: duuude (~user@user/duuude)
[03:51:11] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[03:51:28] <amigojapan> Caffeine pills*
[03:51:43] <loganlee[gnu]> omg
[03:51:46] <loganlee[gnu]> do they work?
[03:51:57] <absentia> lol
[03:52:00] <amigojapan> They work too well
[03:52:02] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:52:05] <absentia> one of my roommates was hooked on that shit
[03:52:09] <absentia> they absolutely work
[03:52:13] <absentia> but he was completely bonkers
[03:52:22] <amigojapan> loganlee[gnu]: my wife had me flush them down the toilet
[03:52:25] <absentia> insanely productive but a bit nutty
[03:52:57] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:53:32] *** robink_ is now known as ryanlol
[03:55:10] <absentia> wolfram|alpha by stephen wolfram for wolfram by stephen wolfram in collaboration with stephen wolfram for wolfram by wolfram (c) all rights reserved wolfram 2022
[03:55:25] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[03:55:39] <amigojapan> Lol
[03:56:38] *** Joins: quartz (~quartz@user/quartz)
[03:59:35] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 256 seconds)
[04:00:09] <Decker> truth
[04:01:13] <ejjfunky> caffeine pills! what's the dosage for each?
[04:01:57] <amigojapan> ejjfunky: I think they were 100mg per pill
[04:02:07] <absentia> that's a red bull
[04:02:25] <absentia> minus of course the bull liver extract
[04:02:35] <amigojapan> It's easy to pop a whole bunch of them at once
[04:02:57] <ejjfunky> 100 mg is about 1 cup of coffee.
[04:03:04] <ejjfunky> not too bad
[04:03:14] <ejjfunky> how much were you taking?
[04:03:29] <loganlee[gnu]> so like 10 pills at once i presume
[04:03:34] <absentia> enough to re-enact that futurama scene where fry drinks 100 cups of coffee
[04:03:51] <ejjfunky> 10 could be life threatening!
[04:03:55] <amigojapan> ejjfunky: over 10 pills per day
[04:04:02] <ejjfunky> seriously? yikes
[04:04:12] <absentia> i would implode from the anxiety
[04:04:43] <absentia> you feel like a god after that much coffee though
[04:05:15] <amigojapan> ejjfunky: yeah. Unlike coffee were it is hard to drink 10 cups of coffee. Caffeine pills is really easy
[04:06:23] <ejjfunky> the problem with caffiene, like any illegal drugs, you always have to up the dosage to get the same buzz
[04:06:38] <amigojapan> Yeah
[04:07:07] <ejjfunky> you must have built up that way to get 10 pills
[04:07:19] <ejjfunky> i mean, to need 10 pills a day
[04:07:43] <KillerWasp> ☕☕☕☕☕🍵☕☕☕
[04:07:52] <absentia> one gram for a weekend
[04:07:57] <absentia> two grams, for a half-holiday
[04:08:01] <absentia> three grams
[04:08:06] <absentia> for a dark eternity on the moon
[04:08:13] <KillerWasp> ☕
[04:08:42] <ejjfunky> i try to stay off coffee on the weekends so i can get better kicks on monday
[04:09:18] *** Quits: k8yun_ (~k8yun@24.244.29.102) (Ping timeout: 260 seconds)
[04:09:24] <[itchyjunk]> you don't infinitely build tolerance
[04:10:00] <ejjfunky> itchyjunk, no. you'll just OD.
[04:11:14] *** Joins: haliucinas (~haliucina@5.20.153.21)
[04:11:53] <KillerWasp> stack 10 coffees in cascade is better for drink it.
[04:12:10] <absentia> caffeine IV drip
[04:12:23] <absentia> might as well smoke crack while you're at it
[04:12:40] *** Quits: c2a1 (~c2a1@2607:fb90:1773:9c41:b005:39c5:9e2:e737) (Remote host closed the connection)
[04:12:43] <absentia> you may even become a published mathematician
[04:12:55] *** Joins: c2a1 (~c2a1@2607:fb90:1773:9c41:b005:39c5:9e2:e737)
[04:13:16] <ejjfunky> then dead the next day. 
[04:13:29] <ejjfunky> but hey, you get a day of fame
[04:13:46] <absentia> to be forever immortalized in the halls of academia
[04:13:52] <ejjfunky> exactly
[04:14:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:14:31] <ejjfunky> do something groundbreaking like calculus or relativity theory in a day. that would be something
[04:14:50] <pulse> why do online stores list products that they don't have in stock/are not available
[04:15:07] <pulse> "look at this product! but we don't actually have it, lol"
[04:15:27] <ejjfunky> they're just testing the market to see if there are people that might be interested
[04:15:36] <pulse> that's such a slimy practice
[04:15:47] <ejjfunky> yea, but common practice now
[04:15:54] <ejjfunky> ever since amazon did them first
[04:16:24] *** Joins: vysn (~vysn@user/vysn)
[04:16:27] <ProfSimm> Additionally they may be out of stock briefly and they don't want the SEO hit of removing the product for a few days
[04:16:43] <pulse> the one i'm looking at just says "not available"
[04:16:55] <pulse> i get if it's one of those "not in stock but we can order and you'll wait 14 days or whatever"
[04:17:01] <pulse> but if it's just "lol we don't actually have this"
[04:17:06] <pulse> then why the hell do you list it
[04:17:09] <ProfSimm> pulse: this often happens when they once had it and then they don't remove it for some reason
[04:17:21] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[04:17:21] <pulse> should be automatic
[04:17:27] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[04:17:28] <ProfSimm> Well it can be
[04:17:30] <pulse> the system should purge things that they don't actually offer
[04:17:30] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[04:17:30] <ProfSimm> But SEO
[04:17:45] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:17:50] *** Joins: flakland (~flaknet99@32.211.211.39)
[04:17:52] <pulse> if i were a search engine i would significantly downrank them for that crap :P
[04:17:53] <vysn> Programming is about understanding concepts, true or false?
[04:17:59] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:18:02] <pulse> false
[04:18:08] <pulse> programming is about shoveling manure
[04:18:09] <ProfSimm> vysn: thinking is about understanding concepts
[04:18:19] <pulse> (and enjoying it)
[04:18:39] <ProfSimm> programming is about teaching them to a box of wires.
[04:18:42] *** Quits: DrMax (~DrMax@node-1w7jra94757g0kdpr9wjqf80y.ipv6.telus.net) (Ping timeout: 250 seconds)
[04:19:03] <KillerWasp> vysn: false, programming is about building a universe.
[04:19:11] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[04:19:13] <rindolf> pulse: sup?
[04:19:22] <ejjfunky> pulse, programming is manure in, manure out.
[04:19:22] <KillerWasp> Nobody can understand the idea.... :/
[04:19:33] <[itchyjunk]> wasd
[04:19:39] <absentia> pulse: they want to gauge interest at that price point before actually ordering stock
[04:19:40] <KillerWasp> [itchyjunk]: SHUT UP!!!
[04:19:43] <pulse> rindolf, heya
[04:20:00] <vysn> ejjfunky: gigo
[04:20:09] <pulse> absentia, i keep running into that issue and it's gotten to the point where i just immediately search for the "is actually in stock" filter
[04:20:14] <pulse> which is backwards and asinine
[04:20:46] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[04:21:13] <absentia> my store theoretically sells everything
[04:21:22] <rindolf> KillerWasp: every pleasure/education creates memes
[04:21:23] <absentia> it's just that not everything is in stock at present
[04:21:27] <vysn> is it then more correct to say learning to program is about understanding concepts?
[04:21:44] <absentia> vysn: it's about learning how to abstract
[04:22:00] <absentia> here's a complicated real-world situation with millions of variables
[04:22:07] <absentia> how do we oversimplify it so it becomes tractable
[04:22:08] <ProfSimm> A programmer is a translator from humanese to computerese and back
[04:22:11] <absentia> and so stupid we can teach a robot to do it
[04:22:14] <ejjfunky> pulse, could be a good project, a scraping app that scraps these sites and make recommendations based on availability of products. like this one is sh*t because they list products that aren't available. you can even do a page rank
[04:22:17] <KillerWasp> vysn: 2 falses and 0 trues.
[04:22:25] <KillerWasp> you can read the chat?
[04:22:43] <absentia> i can't read
[04:23:34] <KillerWasp> i'm listen nice chiptunes... :3
[04:23:44] <flakland> whats your favorite tune
[04:24:19] <absentia> john cage - 4'33
[04:24:23] <rindolf> KillerWasp: that's what 'to know' meant in hebrew
[04:24:35] <KillerWasp> flakland: unknown, i take the musics in a new directory for my future games, i have like 225 musics now in the list.
[04:24:43] <flakland> johnny cage from mortal kombat?
[04:24:45] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:24:50] <KillerWasp> it's like "favourite" musics
[04:24:57] <absentia> yes
[04:25:03] <absentia> he fatalitied modern music
[04:25:05] <ejjfunky> absentia, i like john cage when at least half the audience ate beans before the performance.
[04:25:23] <absentia> ejjfunky: ah yes, a very spicy rendition of his work
[04:25:28] <pulse> ejjfunky, idk if i'm willing to do that, i'm just pissed off at this "practice"
[04:25:59] <ejjfunky> yea, it appeals to the music, not to mention sense of smell. 
[04:26:18] <absentia> ejjfunky: cheaper to have the audience play the trombones too
[04:26:37] <ejjfunky> absentia, absolutely. they have different pitches too.
[04:26:45] <vysn> Real programmers listen to napalm death song
[04:26:48] <vysn> https://www.youtube.com/watch?v=uS1KcjkWdoU
[04:26:49] <ejjfunky> all the brass family could be there.
[04:26:49] <absentia> those overtone series
[04:26:49] <bayaz> Title: Gilfoyle's Bitcoin Warning - Silicon Valley 
[04:27:19] <ejjfunky> pulse, i might do it. hehehe dont mind me stealing this idea.
[04:27:37] <ProfSimm> Here's another thing I'm missing in modern IDEs: sound effects
[04:27:47] <ProfSimm> I want as I type things animating and making cute sounds
[04:27:53] <pulse> ejjfunky, please do it and share the app/protocol with me when you're done :p
[04:27:53] <absentia> "you've got mail"
[04:27:57] <absentia> "new notifications: 900"
[04:28:00] <absentia> "ding!"
[04:28:01] *** Joins: mac_n_cheese (~lastc@2607:fa49:553f:2200:5ec6:4518:fd08:3f23)
[04:28:04] <absentia> "indexing complete!'
[04:28:06] <ejjfunky> pulse, i might. ;)
[04:28:10] <ProfSimm> I said cute, not annoying
[04:28:22] <pulse> ProfSimm, why do i get the feeling you want to turn programming into some kind of performance art :p
[04:28:30] <KillerWasp> u have absentia in ignore by troll.
[04:28:41] <pulse> ProfSimm's perfect IDE: https://www.youtube.com/watch?v=a1R8Rx2db9c
[04:28:42] <bayaz> Title: VERY Unusual instrument! 
[04:28:42] <absentia> yes i am troll
[04:28:45] <absentia> all of my information is incorrect
[04:28:56] <KillerWasp> like i never read it
[04:29:09] <absentia> can we write a programming language that is structured around interpretive dance
[04:29:35] <ProfSimm> I don't know if you've seen modern music software, but it's basically a video game. 
[04:29:47] <absentia> lol
[04:29:59] <ProfSimm> High-res 3D animations particle effects, photorealistic 3D knobs, physics simulation on connecting wires
[04:30:08] <ejjfunky> absentia, absolutely.
[04:30:10] <KillerWasp> all chiptunes use the engine of other consoles and machines
[04:30:22] <ProfSimm> And also people are making a killing playing that game.
[04:30:24] <KillerWasp> like the player make a emulation of those engines
[04:30:26] <vysn> ProfSimm: absentia: and others, Thank you for the clarification about what programming essentially is.
[04:30:33] <absentia> vysn: you are most welcome
[04:31:09] *** Joins: DrMax (~DrMax@node-1w7jra94757g0ehga8s43jipa.ipv6.telus.net)
[04:31:38] <absentia> so should a `debugger` statement be the macarena, or aggressive twerking
[04:31:51] <absentia> ?
[04:31:52] <ejjfunky> hey, how about programming using sign language. that would be pretty neat. don't you guys think?
[04:32:17] <ejjfunky> could even be faster than coding using keyboard.
[04:32:29] <ProfSimm> Just look at it: y
[04:32:32] <absentia> i would be interested to see gesture-based programming
[04:32:33] <amigojapan> I am now eating fried chicken for breakfast
[04:32:39] <ProfSimm> Just look at it: https://www.youtube.com/watch?v=uuTy18wUVFg
[04:32:40] <bayaz> Title: 11 Reasons to Love Reason 11 VST [Reason 11 Suite // Reason Rack VST] 
[04:32:41] <pulse> i can assure you i can type faster than any sign signalist can signal
[04:32:50] <ProfSimm> It's a video game that professional use to write music 
[04:32:50] <absentia> imagine resharper + gesture glove
[04:33:01] <KillerWasp> amigojapan:  :L
[04:33:03] <absentia> stick your middle finger at the screen and delete an entire package
[04:33:08] <PlanckWalk> pulse: I assure you that you can't.
[04:33:08] <ejjfunky> absentia, i wonder should we equate the middle finger as a cuss or something else? hmm....
[04:33:29] <absentia> ejjfunky: it shall leave incorrect comments to fuck over the next engineer in 3 years
[04:33:39] <ejjfunky> lol
[04:33:45] <pulse> PlanckWalk, unless they use some advanced alien sign language where they pack entire sentences into a single sign, i probably can :p
[04:34:09] <PlanckWalk> Can you type 200 wpm?
[04:34:18] *** Quits: khyodo (~khyodo@c-73-51-179-14.hsd1.il.comcast.net) (Quit: Leaving)
[04:34:26] <pulse> no, 150 is probably my upper limit
[04:34:27] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Remote host closed the connection)
[04:34:31] <ejjfunky> absentia, stick your middle finger <- great idea!
[04:34:49] <absentia> for real though we already have more abstract means of manipulating code
[04:34:52] <absentia> resharper is the best example
[04:34:53] <PlanckWalk> Okay, so comparable with fluent sign language then
[04:35:02] <absentia> imagine bumping the level of abstraction even higher to optimize the input mechanism
[04:35:06] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[04:35:16] <ejjfunky> double middle fingers to erase everything from the hard drive
[04:35:17] <PlanckWalk> Though not directly comparable since sign language doesn't map 1:1
[04:35:26] <pulse> i can definitely type faster than average talking speed
[04:35:30] <absentia> even more abstract ways of expressing increasingly abstract transformations over code
[04:35:37] <pulse> even with fast talkers i can outpace them, i've tried it before
[04:35:44] <pulse> if someone talks REALLY fast then i can't
[04:35:50] <absentia> pulse: you ever considered moonlighting as a stenographer
[04:35:55] <PlanckWalk> Court stenographers can type faster, but with special chording keyboards
[04:36:01] <pulse> absentia, no but i could probably do it easily
[04:36:08] <pulse> yeah, i don't understand those
[04:36:11] <flakland> yeah they're a bunch of cheaters
[04:36:15] <absentia> get to hear all the juicy litigious gossip
[04:36:26] <absentia> "i did not have sexual relations with that woman"
[04:36:34] <pulse> i can't imagine being a stenographer with my cherry mx blues would be very pleasant for other people though
[04:36:44] <pulse> "your honor, blah blah" CLACK CLACK CLACK CLACK CLACK
[04:36:56] <PlanckWalk> Heh
[04:37:27] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3)
[04:37:41] <PlanckWalk> I worked with someone who had previously been a stenographer.  Horrible job apparently.
[04:37:43] <absentia> srsly though imagine eye tracking + voice recog + gesture control
[04:37:52] <pulse> weird, i thought it would be enjoyable
[04:37:52] <absentia> stare at a method, swipe hand, say "foobar"
[04:38:03] <absentia> renamed across the entire codebase with static analysis
[04:38:24] <PlanckWalk> Her typing on a normal keyboard wasn't anywhere near the 200 wpm she could do with the specialized on though.
[04:38:46] <absentia> hook me up to the fucking neuralink
[04:38:52] <absentia> i want to directly mainline binary into my cortex
[04:39:12] <amigojapan> PlanckWalk: also can almost be replaced by speech recognition
[04:39:28] <ejjfunky> "Some stenographers can reach 300 words per minute" https://en.wikipedia.org/wiki/Stenotype
[04:39:28] <bayaz> Title: Stenotype - Wikipedia 
[04:39:29] <PlanckWalk> One day, yes
[04:39:36] <pulse> 300wpm damn
[04:39:38] <absentia> amigojapan: we're getting close
[04:39:44] <absentia> have you seen youtube auto transcriptions
[04:39:47] <absentia> it's fucking terrifying
[04:39:53] <amigojapan> Yup absentia 
[04:40:00] <absentia> the machines can hear us
[04:40:12] <pulse> aparently for qwerty the record is 216wpm
[04:40:41] <pulse> nvm, that was in the 40s lol
[04:40:48] <absentia> damn
[04:40:57] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[04:40:58] *** Joins: X-Scale (~ARM@46.50.3.45)
[04:41:00] <absentia> must have been when they still prescribed coke at the local pharmacy
[04:41:15] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[04:41:23] <pulse> 256 wpm on typeracer
[04:41:51] <pulse> yeah i find even 150 with no errors is very mentally demanding
[04:42:00] <pulse> you have to get in the right mental place
[04:42:07] <amigojapan> Typing on a keyboard is easier than on a type writer
[04:42:10] <absentia> in the g r o o v e
[04:42:38] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[04:42:52] <pulse> i think i average at about 140 though if i race, 150 is probably peak
[04:42:54] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3) (Ping timeout: 260 seconds)
[04:42:59] <absentia> typerace me bro
[04:43:03] <amigojapan> You need to hit the key really hard in a type writer
[04:43:10] <absentia> i will bring dishonor to your house
[04:43:23] <absentia> for ten generations
[04:43:34] <pulse> i'm not feeling it right now though
[04:43:40] <pulse> my hands are sweaty and i'm kinda tired
[04:43:42] <absentia> shameful display!
[04:43:44] <amigojapan> absentia: I am on my phone
[04:43:55] <pulse> but let's try one https://play.typeracer.com?rt=s5jrvwzi9
[04:43:55] <bayaz> Title: TypeRacer - the global typing competition 
[04:44:00] <pulse> i'm completely unprepared tho :p
[04:44:04] <pulse> watch me get 100wpm now lol
[04:44:47] <pulse> good god
[04:44:49] <pulse> i'm so slow
[04:45:11] <absentia> lmao
[04:45:16] <absentia> i actually got 146 on the turing test
[04:45:26] <pulse> did they change this site or wtf
[04:45:27] <absentia> that they send you for scoring above a threshold
[04:45:41] <pulse> i got 127
[04:45:43] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[04:46:03] <absentia> pulse: it's been "streamlined"
[04:46:08] <absentia> rebranded
[04:46:13] *** Joins: myon98 (~myon98@user/myon98)
[04:46:14] <pulse> it looks weirder, and wasn't the race longer in the past
[04:46:15] <pulse> like, much longer
[04:46:21] <absentia> they have different difficulty levels i think
[04:46:34] <absentia> they used to range from sentences to paragraphs
[04:46:41] <pulse> ok let's do one more https://play.typeracer.com?rt=1p7zwsk4jz
[04:46:42] <bayaz> Title: TypeRacer - the global typing competition 
[04:46:43] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[04:46:44] <pulse> let me shame myself
[04:46:47] <amigojapan> I am a show typist and slow reader
[04:46:59] <amigojapan> Slow*
[04:47:33] <pulse> argh
[04:47:36] <pulse> i made so many mistakes
[04:47:40] <absentia> muahahahahah
[04:47:42] <pulse> 89 wpm :(
[04:47:49] <absentia> years of arguing on IRC have finally paid off
[04:47:51] <pulse> haha
[04:47:56] <absentia> it has all culminated in this moment
[04:48:17] <pulse> i'm not in my zone
[04:48:22] <amigojapan> absentia: I have been on IRC since 1992 but still slow
[04:48:25] <absentia> pulse: have you tried caffeine pills
[04:48:30] <KillerWasp> pulse: 89, normal, like me
[04:48:32] <pulse> absentia, it's 2am so no :p
[04:48:41] <pulse> KillerWasp, i swear i get 140wpm+ if i'm more collected xD
[04:48:49] <absentia> pulse: time of day doesn't stop the berliners
[04:48:49] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[04:49:05] <pulse> join the race i wanna go again
[04:49:08] <absentia> no
[04:49:10] <absentia> it's too addictive
[04:49:14] <pulse> :D
[04:49:15] <absentia> this is the crack cocaine of the web
[04:49:24] <pulse> his palms are sweaty knees weak
[04:49:27] <pulse> mom's spaghetti
[04:49:35] <absentia> but on the surface he looks calm and spaghetti
[04:49:36] <pulse> my palms really are sweaty :S
[04:49:38] <KillerWasp> pulse: Before, I used to write above 140, but not anymore, only 85 or 90, and I don't even feel like practicing.
[04:49:52] <pulse> i just make too many mistakes because i'm tired and barely awake
[04:50:23] <absentia> you must find your inner center
[04:50:37] <absentia> rise up through the chakras
[04:51:01] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[04:51:04] <absentia> remember your power animal
[04:51:09] <absentia> and intone the mantra:
[04:51:09] <pulse> beh, i got 120 now
[04:51:16] <absentia> "omelette du fromage"
[04:51:22] <pulse> they use colour instead of color
[04:51:24] <KillerWasp> wow
[04:51:28] <absentia> damn commonwealthers
[04:51:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 276 seconds)
[04:51:38] <absentia> who do they think they are, inventors of english?
[04:51:57] *** Joins: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1)
[04:52:24] <KillerWasp> i have tired eyes...
[04:52:44] *** Quits: hexingb (~hexingb@2409:8900:2700:b88a:414:50b0:e599:73d1) (Read error: Connection reset by peer)
[04:52:48] <KillerWasp> is danger
[04:53:38] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:53:53] <KillerWasp> maybe by play doom, then get more fatigue
[04:53:59] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[04:54:09] <pulse> https://www.youtube.com/watch?v=m9EXEpjSDEw&t=120s
[04:54:10] <bayaz> Title: Fastest Typist: Ultimate Typing Championship Final 2010 By Das Keyboard 
[04:54:36] <KillerWasp> pulse: with time?
[04:54:43] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:54:48] <pulse> 163wpm nice
[04:54:58] <pulse> KillerWasp, the intro is boring
[04:55:25] <pulse> it's really frustrating when you start making mistakes
[04:55:30] <pulse> because then you just make more and more
[04:55:45] <KillerWasp> is because you lost the concentration
[04:55:59] <KillerWasp> i have the same problem, we need working with it
[04:56:16] <pulse> i mean you can just practice a lot
[04:56:47] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[04:56:57] <KillerWasp> Although mine is something different, it's like suddenly my luck runs out and I start to fail in everything in succession.
[04:57:22] *** Quits: piou (~piou@user/piou) (Ping timeout: 260 seconds)
[04:57:29] <absentia> your train of thought is interrupted
[04:57:31] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:57:37] *** Quits: chives (~chives@64.130.100.177) (Quit: Leaving)
[04:57:39] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[04:57:40] <pulse> yeah, you have to look ahead when doing typing contest
[04:57:41] <absentia> you have a linear stream of incoming characters
[04:57:47] <pulse> and when you screw up it screws up your whole flow
[04:57:48] <absentia> once one gets out of order
[04:57:51] <absentia> you forget your position in the stream
[04:57:52] <pulse> and then it just accumulates
[04:57:54] <pulse> yeah
[04:58:06] <absentia> then you're fucked because you try to remember where you were
[04:58:16] <pulse> i bet i could get to like 140 consistent if i practiced a lot
[04:58:21] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:58:29] <absentia> you need to do palm-ups bro
[04:58:31] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[04:58:33] <absentia> train those finger muscles
[04:58:35] <absentia> build mass
[04:58:53] <pulse> i only use my pinkies for shifts, maybe that's my weakness :p
[04:58:53] <absentia> i always carbo load before a typerace
[04:59:31] <pulse> you seem to have it well figured out
[04:59:40] <absentia> for real though
[04:59:50] <absentia> in classical piano training some teachers will recommend finger exercisers
[04:59:55] <absentia> they're springs for each finger
[05:00:03] <absentia> train on them every day to build finger independence and strength
[05:00:17] <absentia> so only half trolling
[05:00:19] <absentia> as always
[05:00:21] *** Joins: mickey80 (~user@user/mickey)
[05:00:29] <pulse> idk how those pianists do it
[05:00:37] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:00:38] <pulse> you know how massive those keys are on a real piano
[05:00:44] <absentia> ya they're heavy
[05:00:48] <absentia> big fucking planks of wood
[05:00:49] <pulse> no but they're wide too
[05:00:56] <pulse> i couldn't press a basic chord on one
[05:01:15] <absentia> some pianos are also just shitty
[05:01:17] <pulse> i'm used to smol usb pianos
[05:01:19] <absentia> need constant maintenance
[05:01:21] <pulse> real pianos are impossible
[05:01:23] <KillerWasp> pulse: you can practice with milkytracker
[05:01:40] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Excess Flood)
[05:01:43] <pulse> i don't think that qualifies as a piano
[05:01:55] <absentia> anything is a piano if you believe
[05:02:00] <audiobirb> how can i change the frame duration of an audio (wav) file
[05:02:01] <audiobirb> ?
[05:02:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:02:15] <audiobirb> i want to make an audio file that is 60 fps go down to 30 fps
[05:02:16] <KillerWasp> audiobirb: you mean speed?
[05:02:23] <absentia> fps?
[05:02:28] <audiobirb> frame duration
[05:02:37] <audiobirb> i thought they were the same thing as fps, maybe not
[05:02:41] <flakland> piano is just a harp on easy mode
[05:03:12] <absentia> i'm not familiar with that property of audio
[05:03:12] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[05:03:12] *** mickey80 is now known as mickey8
[05:03:16] <absentia> but i'm also not an audio engineer
[05:03:16] <KillerWasp> audiobirb: wav dont have frame speed, only in Hz, wich's the speed.
[05:03:26] <absentia> i've heard of sample rate, bit depth
[05:03:36] <pulse> i think it's framerate you want
[05:03:41] *** Joins: Tech_8 (~Tech_8@24.51.61.131)
[05:03:45] <Tech_8> sup
[05:03:52] <flakland> oh look its tech_8
[05:03:52] <absentia> audiobirb: you can probably do it using ffmpeg
[05:04:00] <absentia> figuring out which options to pass to ffmpeg is a different matter
[05:04:08] <Tech_8> flakland: sup man?
[05:05:01] <flakland> not much, listenin to a DJ smokey exclusive HOW BOUT YOU?
[05:05:14] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[05:05:16] <Tech_8> not much just sitting here
[05:05:52] *** Joins: pavonia (~user@user/siracusa)
[05:06:00] <loganlee[gnu]> i'm plowing through jq manual
[05:06:09] <absentia> burn it! send it to hell!
[05:06:13] <loganlee[gnu]> quite time consuming
[05:06:24] <loganlee[gnu]> but it is well worth it
[05:06:25] <KillerWasp> loganlee[gnu]: define jq manual
[05:06:35] <loganlee[gnu]> KillerWasp: https://stedolan.github.io/jq/manual/
[05:06:35] <bayaz> Title: jq Manual (development version) 
[05:06:45] <audiobirb> KillerWasp, ok...changing the speed in audacity makes voices sound like low-pitched monster voices
[05:07:00] <audiobirb> KillerWasp, im trying to use this audio to train a voice cloning ML model
[05:07:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:07:11] <audiobirb> i dont think the monster voices are going to work very well
[05:07:33] <KillerWasp> audiobirb: what monster??
[05:07:38] <absentia> i am going to stick my head in front of a two watt laser
[05:07:38] <pulse> audiobirb, change tempo instead
[05:07:51] <amigojapan> Hi Tech_8 
[05:07:56] <audiobirb> pulse, will that decrease the frame duration?
[05:08:02] <absentia> audiobirb: what is frame duration
[05:08:04] <pulse> audiobirb, obviously
[05:08:11] <audiobirb> absentia, fuck if i know
[05:08:12] <audiobirb> lol
[05:08:14] <absentia> ?????
[05:08:29] <absentia> audiobirb: step 0 to problem solving: understand the problem you're trying to solve
[05:08:38] <audiobirb> i dont know man, but i'm using some voice cloning software and im running into an error because a frame duration of 60 is too high
[05:08:40] <pulse> hey, steps don't start at 0
[05:08:45] <absentia> pulse: heretic!
[05:08:47] <audiobirb> absentia, yea that's why i'm here
[05:08:48] <pulse> :S
[05:08:55] <audiobirb> absentia, google doesnt know what frame duration is either
[05:08:57] <absentia> audiobirb: paste error
[05:09:14] <KillerWasp> audiobirb: you're build a game?
[05:09:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:10:05] <absentia> how long is your audio clip
[05:10:11] <pulse> audiobirb, did you try "change tempo" in audacity? should do what you want, i think
[05:10:14] <audiobirb> pulse, changing tempo did not reduce the frame duration, it's still 60
[05:10:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123)
[05:10:28] <absentia> zzz
[05:10:32] <audiobirb> KillerWasp, i'm making a deepfake
[05:10:37] <absentia> lmfao
[05:10:37] <pulse> i'm not sure what frame duration means
[05:10:41] <pulse> framerate is a thing
[05:10:41] <audiobirb> neither do i
[05:10:43] <pulse> maybe you mean that?
[05:10:52] <audiobirb> let me show you guys the error
[05:10:54] <absentia> there's sample rate and bit depth
[05:11:11] <audiobirb> pulse, absentia KillerWasp https://github.com/BenAAndrew/Voice-Cloning-App/blob/main/dataset/forced_alignment/audio.py#L153
[05:11:11] <absentia> sample rate can be variable or constant
[05:11:12] <bayaz> Title: Voice-Cloning-App/audio.py at main ? BenAAndrew/Voice-Cloning-App 
[05:11:30] <audiobirb> it _may_ be frame rate but i'm not sure
[05:11:54] <absentia> zzzzzz
[05:12:01] <absentia> audiobirb: https://github.com/BenAAndrew/Voice-Cloning-App/blob/fd214135f4b366b24329a110e326b5b8db0485c3/dataset/forced_alignment/audio.py#L34-L38
[05:12:02] <bayaz> Title: Voice-Cloning-App/audio.py at fd214135f4b366b24329a110e326b5b8db0485c3 ? BenAAndrew/Voice-Cloning-App 
[05:12:04] <loganlee[gnu]> what should i have for lunch?
[05:12:08] <absentia> "Gets duration of audio file"
[05:12:10] <pulse> it's a pcm thing
[05:12:18] <absentia> 20:40:05         absentia | how long is your audio clip
[05:12:22] <KillerWasp> audiobirb: The audio is not handled by frames, it is handled by hertz.
[05:12:43] <ProfSimm> Decker: kind of warming up to the comma vs semicolon idea, but there's a problem, it's ambiguous which the label applies to at the start of a line. To the entire line or the subexpression until the next comma.
[05:12:45] <pulse> you probably just want to export it with different encoding
[05:12:46] <absentia> it's not the duration of a frame, it's the entire file
[05:12:47] <pulse> if i get this right
[05:12:49] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[05:12:55] <Tech_8> loganlee[gnu]: taco bell
[05:13:08] <absentia> wait no
[05:13:10] <absentia> that doesn't make sense
[05:13:38] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:13:41] <KillerWasp> audiobirb: I guess if it has frame as input it is because it calculates it in hertz. Although I don't know why, since one thing has nothing to do with the other, nowadays the audio is in a different thread which has its own speed control, which is in hertz.
[05:13:43] <amigojapan> loganlee[gnu]: Tech_8 taco bell is luxury food here in Japan
[05:14:02] *** Joins: hexingb (~hexingb@2409:8900:2700:98a9:c869:1324:c16b:8b08)
[05:14:17] <loganlee[gnu]> amigojapan: i see
[05:15:01] <KillerWasp> amigojapan: taco is a food, taco bell is a chain of restaurant
[05:15:10] <KillerWasp> or fast food
[05:15:25] <Tech_8> KillerWasp: is fastfood luxury?
[05:15:31] <audiobirb> absentia, audio clip is about 42 seconds. 
[05:15:39] <amigojapan> KillerWasp: I went with my son once and spent 40 dollars on it
[05:15:41] <audiobirb> absentia, i print the frame_duration, it's coming out to 60
[05:15:44] <audiobirb> so i ruled that out
[05:15:52] <KillerWasp> 40$???
[05:15:53] <absentia> audiobirb: print sample rate, audio format
[05:16:01] <amigojapan> Yes KillerWasp 
[05:16:03] <KillerWasp> yes, very luxury
[05:16:13] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Ping timeout: 240 seconds)
[05:16:28] <Tech_8> KillerWasp: is it better than mexican resturant or homemade tacos?
[05:16:43] <amigojapan> KillerWasp: could have bought a midi keyboard
[05:16:45] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cb34:6962:9bf8:f69f) (Quit: Leaving)
[05:16:50] <KillerWasp> I never got into Taco Bell, so I don't know what it would be like. Luxurious fast food.
[05:17:03] <amigojapan> No Tech_8 . I am Mexican
[05:17:15] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[05:17:21] <loganlee[gnu]> i will have KFC chicken burger!!!!!!!!!!!!
[05:17:46] <Tech_8> loganlee[gnu]: no go to popyess chicken spicy sandwitch
[05:17:52] <Tech_8> there better
[05:17:59] <KillerWasp> Tech_8: I would not know how to say about taco bell, but I can say that I have already tried tacos in other places and they are quite tasty.
[05:17:59] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:18:08] <flakland> kWasp, i've seen at least one driver (ALSA) refer to frames as one unit, containing multiple channels of samples,  so L+R=1frame
[05:19:01] *** Quits: kaivai_ (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:19:12] <loganlee[gnu]> Tech_8: i'm in australia
[05:19:15] <InPhase> KillerWasp: Taco bell does not sell tacos.  It sells something that looks like a taco from a distance.
[05:19:20] <audiobirb> absentia, why?
[05:19:29] <Tech_8> loganlee[gnu]: oh does that mean you eat kangaroo?
[05:19:44] <loganlee[gnu]> Tech_8: they do eat kangaroos yes
[05:19:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:19:50] <Tech_8> grose
[05:19:52] <loganlee[gnu]> i tried but i didn't like it
[05:19:53] <oldlaptop> InPhase: Some of their breakfast products are actually more or less edible now, it's impressive
[05:19:57] <KillerWasp> InPhase: xD
[05:20:27] <amigojapan> Tech_8: Popeye's I think is only in the US
[05:20:41] <InPhase> Literally interpreted, "more or less edible" is not a glowing endorsement.  ;)
[05:20:54] <audiobirb> absentia, ?
[05:21:05] <oldlaptop> (it is unusual to see a fast food chain in the US selling "breakfast burritos" that contain anything other than eggs and grease, but they actually have one such item - I am genuinely impressed, by the standard that applies)
[05:21:10] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:21:33] <pulse> it's not fast food, it's performant food
[05:21:42] *** Joins: kaivai (~kaivai@user/kaivai)
[05:22:30] <Joanna> amigojapan: takoyaki is fast food!
[05:22:35] <Tech_8> I think the main fast food is: mcdonalds, subway, tacobell, starbucks.
[05:22:36] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[05:22:40] <oldlaptop> (behold our contempt for our luxuries)
[05:22:48] <amigojapan> Joanna: yep
[05:23:09] <InPhase> Tech_8: Have you tried kangaroo?  It's actually quite good.
[05:23:38] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:23:38] <oldlaptop> Would have thought maybe that would be pretty tough.
[05:23:39] <amigojapan> InPhase: too cute to eat
[05:23:40] <Tech_8> InPhase: no, I would never try it
[05:23:47] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:24:12] <KillerWasp> takoyaki, is like homelet in argentina
[05:24:16] <Tech_8> I only eat cow and chicken
[05:24:25] <KillerWasp> :L
[05:24:43] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[05:24:44] <InPhase> Tech_8: Kangaroo meat is somewhat reminiscent of deer meat, and has to be prepared somewhat similarly.
[05:24:46] <KillerWasp> but takoyaki have octopus also, and other things
[05:26:02] <amigojapan> InPhase: tomako wants me to ask "is Japanese eating whale wrong, but Australians eat kangaroo ok?"
[05:26:11] <InPhase> Kangaroos might be a zoo animal in much of the world, but in much of Australia they are an overpopulated animal.
[05:26:33] <InPhase> amigojapan: Well it's different to eat something dwindling in population versus something overpopulated...
[05:26:59] <pulse> really, i love eating koalas
[05:27:07] <pulse> i jest, i'm borderline vegan
[05:27:21] <Tech_8> you eat grass
[05:27:24] *** Quits: hexingb (~hexingb@2409:8900:2700:98a9:c869:1324:c16b:8b08) (Read error: Connection reset by peer)
[05:27:25] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:27:32] <pulse> well, i do like lemongrass a lot
[05:27:49] <Tech_8> like seaweed?
[05:27:51] <InPhase> Lemongrass makes for a nice tea.
[05:27:54] <pulse> indeed
[05:28:01] <amigojapan> InPhase: in fact, the whales that Japanese hunt are not the ones that are dwindling
[05:28:01] <pulse> anything with citrus taste is an instant win for me
[05:28:08] <InPhase> Also, lemongrass is a good fish seasoning.
[05:28:15] <pulse> Tech_8, i do take microalgae supplements so ... technically, yes :p
[05:28:32] <InPhase> amigojapan: I have no objection to the extent that is true.  I have not fact checked it.
[05:28:32] *** Joins: hexingb (~hexingb@2409:8900:2700:98a9:c869:1324:c16b:8b08)
[05:28:35] <ProfSimm> I never minded targeted ads before, until Google decided to bombard me non-stop for weeks with ads about ball shavers.
[05:28:42] <pulse> although i think those are not freshwater not ocean
[05:29:08] <Joanna> InPhase: that is a slippery slope when you mention overpopulation being a factor in choosing what to eat ....
[05:29:16] <InPhase> amigojapan: My only advocacy in that area is for responsible resource management.
[05:29:17] <amigojapan> InPhase: yeah. Let me find the info
[05:29:56] <InPhase> Joanna: Well good thing I'm not prone to falling down slopes.
[05:30:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[05:30:27] <pulse> as opposed to a slappery slope, where you slide down and get slapped simultaneously
[05:30:38] *** Quits: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123) (Remote host closed the connection)
[05:30:42] <InPhase> I wear philosophy shoes with intellectual traction.
[05:30:54] <Tech_8> speaking of slip, the winter olympics are on
[05:31:11] <Joanna> There are some countries where it’s normal to eat cats and dogs
[05:31:15] <pulse> i ignore sports because i find it confusing
[05:32:31] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[05:32:41] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:32:50] *** Quits: hexingb (~hexingb@2409:8900:2700:98a9:c869:1324:c16b:8b08) (Ping timeout: 260 seconds)
[05:33:04] <amigojapan> InPhase: "Minke whales in the United States are not endangered or threatened, but they are protected under the Marine Mammal Protection Act. NOAA Fisheries and its partners are dedicated to conserving minke whales. We use a variety of innovative techniques to study and protect this species." https://www.fisheries.noaa.gov/species/minke-whale
[05:33:04] <bayaz> Title: Minke Whale 
[05:33:05] *** Quits: leonardus (sid358597@tinside.irccloud.com) (Ping timeout: 256 seconds)
[05:33:12] <pulse> i watched a mma fight the other day and i still can't comprehend why someone would get into a ring to get punched in the face repeatedly
[05:33:20] <InPhase> pulse: There's nothing confusing about sports.  See here:  https://www.youtube.com/watch?v=Jb6bfZFDECU
[05:33:21] <bayaz> Title: Beavers Curling 
[05:33:22] *** Joins: pax_os__ (sid535114@id-535114.ilkley.irccloud.com)
[05:33:25] <pulse> but *shrug* if they enjoy that i guess it's fine
[05:33:39] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[05:33:41] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[05:33:48] <pulse> InPhase, i see. that does clarify a few things
[05:34:02] <Tech_8> does anyone watch the superbowl?
[05:34:16] <Tech_8> I want bengals to win
[05:34:24] <amigojapan> Tomako says "I don't want whales to be hunted cause Pinocchio lives inside
[05:34:25] <pulse> i don't even watch the normal bowl
[05:34:43] *** Joins: hexingb (~hexingb@103.37.140.23)
[05:34:56] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[05:35:08] <PlanckWalk> superb owl?
[05:35:17] <InPhase> Tech_8: Didn't they do the Manic Monday song?
[05:35:22] <Tech_8> yes the NFL in the USA
[05:35:34] <pulse> the only sport i can really understand is racing. you race, the first one wins. i get that
[05:35:36] <Tech_8> Football
[05:35:50] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[05:36:01] <ProfSimm> pulse: well there's nothing at the end to take, so the others are just behind you
[05:36:02] *** Joins: flakland (~flaknet99@32.211.211.39)
[05:36:16] <PlanckWalk> NFL - Night Flying ... something?
[05:36:18] <pulse> i can understand wanting to go fast, at least
[05:36:39] <pulse> ok another sport i understand is ping pong. i like that one
[05:36:40] <Tech_8> National Football League, not soccer, american football
[05:36:52] <pulse> i guess tennis is like a ping pong but you stand on a table
[05:37:01] *** Quits: xff0x (~xff0x@2001:1a81:532d:cf00:6935:8bd3:eb0:937d) (Ping timeout: 240 seconds)
[05:37:07] <ProfSimm> pulse: the only sport I understand is cock fights. One cock dies, the other gets the chicks.
[05:37:11] <amigojapan> InPhase: why is green peace so strong in Australia?
[05:37:17] <PlanckWalk> Sports are like coding competitions but more for muscles than brains.
[05:37:28] <pulse> ProfSimm, from what i know about cockfights, they don't usually die. one cock just runs away and the one left standing in the ring wins
[05:37:40] <ProfSimm> pulse: still wins the chicks
[05:37:47] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[05:38:04] <pulse> although i admit all my knowledge about cockfights comes from one episode of seinfeld
[05:38:07] <pulse> so i could be wrong
[05:38:18] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[05:39:08] <ProfSimm> Also another sport I understand is cycling. Woman pops up making a selfie, half your opponents crash into her, you and the rest continue. On the next turn another woman, and like that until it's just you
[05:39:15] *** Joins: xff0x (~xff0x@2001:1a81:533f:ea00:5f96:9e03:4e30:341d)
[05:39:17] *** Joins: hexingb (~hexingb@103.37.140.23)
[05:39:36] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[05:39:40] <InPhase> amigojapan: I don't know.  I don't live in Australia.  :)
[05:39:53] <ProfSimm> And finally, the last sport I understand is Highlander. You behead people, until there's only one. Because there can be only one.
[05:39:57] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[05:39:57] <amigojapan> Ah ok InPhase 
[05:40:40] *** Quits: moniker- (~mon@dh207-120-226.xnet.hr) (Remote host closed the connection)
[05:40:41] <InPhase> amigojapan: I just happen to have eaten some kangaroo.  I never got around to even visiting Australia.
[05:41:17] <amigojapan> Gotcha InPhase tomako and I don't eat whales either
[05:41:32] <audiobirb> can anyone help me with my problem?
[05:41:34] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[05:41:55] <audiobirb> my `frame_duration_ms` is 60. How can I reduce this to 30? https://github.com/BenAAndrew/Voice-Cloning-App/blob/fd214135f4b366b24329a110e326b5b8db0485c3/dataset/forced_alignment/audio.py#L153
[05:41:56] <bayaz> Title: Voice-Cloning-App/audio.py at fd214135f4b366b24329a110e326b5b8db0485c3 ? BenAAndrew/Voice-Cloning-App 
[05:42:18] *** Joins: Scrub (~monr0e@31.132.33.9)
[05:42:57] *** Joins: frost (~frost@user/frost)
[05:43:14] <pulse> audiobirb, can't you just export your audio with a different sample rate?
[05:43:27] <audiobirb> pulse, i don't know
[05:43:28] <InPhase> audiobirb: Interpolate?
[05:43:51] *** Quits: monr0e (~monr0e@smtp.vixen.international) (Ping timeout: 256 seconds)
[05:43:57] <audiobirb> pulse, i tried changing sample rate from 44k to 22k in audacity and exporting but i still got a frame_duration_ms of 60. Idk if it actually changed the sample rate
[05:44:00] <audiobirb> InPhase, ???
[05:44:23] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:a87b:a586:9470:a9e3) (Ping timeout: 252 seconds)
[05:44:45] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[05:45:17] <pulse> i think that might be more complex than i imagined
[05:45:23] <InPhase> audiobirb: Well 30ms spacing needs data at twice the rate of 60ms spacing, so you need to generate the intermediate waveform values, right?
[05:45:27] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[05:45:32] <InPhase> audiobirb: Unless you're trying to make chipmunk sounds.
[05:46:03] <audiobirb> InPhase, is there any simple way to do this? this is audio from a youtube video
[05:46:07] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[05:47:29] <InPhase> audiobirb: I don't know the audio library you are using, but if interpolation is not supported as a feature of that library when you google it, I would look up how to convert the audio data to numpy, interpolate it with numpy, and then convert it back to the library you are using, and set it to 30ms frame durations.
[05:47:31] *** Joins: moniker- (~mon@dh207-120-226.xnet.hr)
[05:47:42] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:47:58] <audiobirb> InPhase, dude i used a youtube->wav converter
[05:48:00] <audiobirb> online
[05:48:49] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:48:49] *** brabrax_ is now known as brabrax
[05:49:04] <pulse> i still don't know what a frame duration is
[05:49:17] <audiobirb> same
[05:49:26] <InPhase> audiobirb: You linked to Python code, so you're working in Python apparently.
[05:49:34] <flakland> it's one of lifes little mysteries
[05:49:40] <audiobirb> InPhase, im talking about how i got the wav
[05:49:42] <amigojapan> audiobirb: a voice changer app may have clues, like this one https://github.com/juancarlospaco/pyvoicechanger
[05:49:43] <bayaz> Title: GitHub - juancarlospaco/pyvoicechanger: Real Time Microphone Voice Changer Python 3.6+ App. Works with On-Line Games and VideoConferences! 
[05:49:43] <audiobirb> in the first place
[05:49:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:50:04] <audiobirb> InPhase, how is there not software that does this for you
[05:50:20] <audiobirb> change frame_duration from 60 to 30, boom done
[05:50:25] <InPhase> audiobirb: Check ##preprogrammed  ;)
[05:50:33] <pulse> shouldn't halving the framerate result in frame time being halved too?
[05:50:34] <audiobirb> "interpolate it with numpy" -> draw the rest of the fucking owl
[05:51:02] <InPhase> audiobirb: Although actually you might not have to interpolate.  I see now that you are actually dealing with the splitting of audio chunks into video frame pieces.
[05:51:12] <audiobirb> no
[05:51:14] <audiobirb> no video
[05:51:19] <flakland> unless the program converted it to some internal rate, but it just sounds broken if that's the case
[05:51:21] <audiobirb> im creating an audio deepfake
[05:51:47] *** Quits: Tech_8 (~Tech_8@24.51.61.131) (Quit: Client closed)
[05:52:19] <audiobirb> InPhase, i got wav audio from a youtube video. im trying to generate a dataset that an ml model can use, using a function built at the repo i linked. it needs audio wavs with a frame_duration of 30, 20, or 10. NO VIDEO
[05:52:22] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:53:09] <InPhase> audiobirb: Okay, I see now VAD does not mean video audio, but might mean voice activity detection?
[05:53:35] <flakland> i think to crack this egg, someone needs to figure out what exactly a frame_dration is, how it's calculated
[05:54:30] <pulse> shouldn't samplerate/framerate directly correspond to whatever frame duration is?
[05:54:46] <pulse> high framerate <-> high frame duration ( ?? )
[05:54:54] *** Joins: kaivai (~kaivai@user/kaivai)
[05:54:57] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[05:55:01] <pulse> or wait, is it inverse
[05:55:08] <pulse> my brain at 3am goes brr
[05:55:23] <InPhase> audiobirb: What did you use to read in the frames?
[05:55:37] <InPhase> audiobirb: I see several read_frames functions in that file that all default to 30ms.
[05:55:45] *** Joins: lemonsni- (~lemonsnic@86.4.248.115)
[05:56:19] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 256 seconds)
[05:56:19] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:56:23] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 250 seconds)
[05:56:42] <audiobirb> InPhase, what is "read in the frames"?
[05:56:49] <audiobirb> what do you mean by that
[05:56:57] <audiobirb> i used a youtube->wav converter online
[05:56:58] <InPhase> audiobirb: Did you write code to call vad_split?
[05:57:01] <audiobirb> to get the wav file
[05:57:07] <audiobirb> sec
[05:57:09] <audiobirb> and no
[05:57:13] <audiobirb> i'll tell you what im doing
[05:57:46] <audiobirb> InPhase, python3 clip_generator.py -a ~/Documents/jimiSR50.wav -s ~/projects/Voice-Cloning-App/jimi.txt -u ul -o output_dir
[05:57:53] <audiobirb> that's all i'm doing
[05:58:11] <audiobirb> i run that in /repo-name/dataset/
[05:58:34] <audiobirb>  /Voice-Cloning-App/dataset
[05:58:45] <InPhase> audiobirb: In that case, see here:  https://github.com/BenAAndrew/Voice-Cloning-App/issues
[05:58:46] <bayaz> Title: Issues ? BenAAndrew/Voice-Cloning-App 
[05:59:14] <absentia> "why don't we 'just' cure cancer
[05:59:19] <absentia> how is there not software that does this"
[05:59:27] *** Joins: jabster28 (~jabster28@81.111.217.63)
[05:59:56] <flakland> they would write it in python3   until python 4 rendered it obsolete
[06:00:02] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[06:00:13] <InPhase> audiobirb: That first issue there points out the discord they have running for help questions, which might be faster than posting a new issue.
[06:00:22] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[06:00:43] <InPhase> audiobirb: It's possible you are using it wrong.  But you're better off talking to the people who wrote it than people who didn't if you're not trying to fix the code yourself.
[06:00:52] <InPhase> Or, well, even if you are.
[06:01:05] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[06:01:13] <audiobirb> InPhase, last message was 3 hours ago
[06:01:18] <audiobirb> InPhase, you're stumped?
[06:01:20] <absentia> audiobirb: `file ~/Documents/jimiSR50.wav`
[06:01:26] <audiobirb> all i need to do is change the frame duration
[06:01:39] <audiobirb> i only linked the code to give a definition of frame_duration
[06:01:45] *** Quits: zaher (~zaher@37.48.186.182) (Ping timeout: 256 seconds)
[06:01:48] <absentia> will you fucking accept advice or not
[06:01:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123)
[06:02:47] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:03:08] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 250 seconds)
[06:03:18] <audiobirb> absentia, what does your comment `file ~/Documents/jimiSR50.wav` mean? you're saying i should add "file" to the argument?
[06:03:32] <absentia> audiobirb: you're in the deep end
[06:03:36] <absentia> try playing around in the kiddie pool first
[06:04:06] <audiobirb> absentia, your comment makes no fucking sense
[06:04:09] <absentia> good lord
[06:04:12] <absentia> training ML models
[06:04:15] <absentia> but can't operate a terminal
[06:04:24] <absentia> this is like those articles about gen z not understanding what a filesystem is
[06:04:43] <InPhase> Yeah, let's drop it please.
[06:05:08] <audiobirb> absentia, i write python, not bash. i know enough bash to get by
[06:05:22] <amigojapan> absentia: seriously? They don't understand what a fine system is?
[06:05:33] <absentia> amigojapan: https://news.ycombinator.com/item?id=30253526
[06:05:46] * amigojapan reads
[06:06:00] <[itchyjunk]> no one understands what a file system is
[06:06:03] <[itchyjunk]> thats why we have so many
[06:07:02] <audiobirb> absentia, /home/mike/Documents/jimiSR50.wav: RIFF (little-endian) data, WAVE audio, Microsoft PCM, 16 bit, stereo 44100 Hz
[06:07:41] <audiobirb> that sample rate is supposed to be 22k actually
[06:08:58] <oldlaptop> That would be a weird sampling rate.
[06:13:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:15:25] <absentia> that's not even supported
[06:15:25] <amigojapan> absentia: it's true that we have hidden file systems on tablets and smartphones
[06:15:34] <absentia> neither 22k nor 44.1k are supported by this library
[06:15:40] <absentia> https://github.com/BenAAndrew/Voice-Cloning-App/blob/main/dataset/forced_alignment/audio.py#L140-L141
[06:15:41] <bayaz> Title: Voice-Cloning-App/audio.py at main ? BenAAndrew/Voice-Cloning-App 
[06:15:43] <absentia> it's right there in the same file
[06:15:57] <absentia> also your input is in stereo
[06:16:11] <absentia> there's another guard for mono samples
[06:16:19] <absentia> unless you're doing further preprocessing, your input is invalid
[06:16:24] <oldlaptop> not supporting 44.1k is also pretty weird, honestly
[06:16:51] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:17:14] <absentia> 44.1k seems to be most common for consumer audio
[06:17:21] *** Joins: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[06:18:32] <oldlaptop> 44.1k would be a weird, bizzare choice if not for certain implementation details of '70s digital audio systems. (They stored it on video tapes, and 44.1KHz relates somehow to NTSC's field/line/whatever arrangement)
[06:19:00] <absentia> analog and digital signals processing can go to hell
[06:19:03] <absentia> absolute witchcraft
[06:19:14] <audiobirb> absentia, ok yea. converting sample rate to 22k with the wave module corrupted the file anyway
[06:19:19] <oldlaptop> CDDA used it for that reason, and therefore it will be with us until the end of time
[06:19:37] <oldlaptop> I guess it saves some space compared to 48KHz, so that's nice
[06:21:04] <pulse> digital audio is actually amazing. i was quite surprised when i learned that it is perfectly lossless
[06:21:56] <audiobirb> absentia, thanks for the stereo comment, converting to mono. that may do the trick
[06:22:47] <epony> https://en.wikipedia.org/wiki/Compact_Disc#Audio_CD ; https://en.wikipedia.org/wiki/44,100_Hz#Origin
[06:22:48] <bayaz> Title: Compact disc - Wikipedia 
[06:22:48] <bayaz> Title: 44,100 Hz - Wikipedia 
[06:23:55] <epony> https://en.wikipedia.org/wiki/Sampling_rate#Audio_sampling more recently moving to 48KHz
[06:23:56] <bayaz> Title: Sampling (signal processing) - Wikipedia 
[06:24:57] <flakland> https://en.wikipedia.org/wiki/ADAT_Lightpipe
[06:24:58] <bayaz> Title: ADAT Lightpipe - Wikipedia 
[06:25:10] <epony> audio recording on video recording media and formats is the choice for those numbers predominantly
[06:25:23] <absentia> audiobirb: also be aware that this tool is doing sample rate conversion of your input .wav: https://github.com/BenAAndrew/Voice-Cloning-App/blob/7560fb9f5ba6ee55120a2485fd3aa91a5ab2fd25/dataset/clip_generator.py#L133
[06:25:24] <bayaz> Title: Voice-Cloning-App/clip_generator.py at 7560fb9f5ba6ee55120a2485fd3aa91a5ab2fd25 ? BenAAndrew/Voice-Cloning-App 
[06:25:51] <audiobirb> absentia, changing stereo to mono did the trick. now im dealing with a new error for which i do not know the cause
[06:26:20] <absentia> PROGRESS
[06:27:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:27:48] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:27:53] <pulse> think it might have been this video i originally watched on it https://www.youtube.com/watch?v=Gd_mhBf_FJA
[06:27:54] <bayaz> Title: Sound By Numbers: The Rise of Digital Sound 
[06:28:00] <duuude> did github break? no one found out about my new release
[06:28:13] <duuude> people somehow found about it before
[06:28:26] <pulse> i used to think analog audio is naturally superior because digital is "stepped" and therefore lossy, but nope. digital encodes audio perfectly. it's mind bending
[06:28:58] <absentia> this is a great yt channel
[06:29:02] <pulse> yeah
[06:29:26] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[06:29:45] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:30:22] <audiobirb> absentia, https://bpa.st/EUJQ
[06:30:23] <bayaz> Title: View paste EUJQ 
[06:30:49] <pulse> ah, no. it was this one https://www.youtube.com/watch?v=pWjdWCePgvA
[06:30:50] <bayaz> Title: Nyquist-Shannon; The Backbone of Digital Sound 
[06:30:53] <pulse> yeah this is the one
[06:31:01] <pulse> fascinating watch
[06:31:10] <absentia> well at least you're getting past all that "processing segments" shit
[06:31:22] <pulse> https://en.wikipedia.org/wiki/Nyquist%E2%80%93Shannon_sampling_theorem
[06:31:23] <bayaz> Title: Nyquist?Shannon sampling theorem - Wikipedia 
[06:31:25] <pulse> actual magic
[06:31:27] <absentia> or are you
[06:32:35] <absentia> this sounds like spooky ML shit audiobirb 
[06:32:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123) (Remote host closed the connection)
[06:33:21] <audiobirb> absentia, it's not doing any ml yet, (i believe) this is data preprocessing
[06:33:23] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[06:33:33] <oldlaptop> pulse: And that's how they can make money selling "high-definition" 192KHz PCM recordings.
[06:33:44] <audiobirb> it's creating the dataset (given input audio and input text) that the ml model can use
[06:33:46] <audiobirb> absentia, 
[06:33:47] <pulse> hmm
[06:34:01] <pulse> digital audio really is a spiral of weirdness
[06:34:02] <absentia> audiobirb: looks like they are doing scoring? https://github.com/BenAAndrew/Voice-Cloning-App/blob/7560fb9f5ba6ee55120a2485fd3aa91a5ab2fd25/dataset/clip_generator.py#L156
[06:34:03] <bayaz> Title: Voice-Cloning-App/clip_generator.py at 7560fb9f5ba6ee55120a2485fd3aa91a5ab2fd25 ? BenAAndrew/Voice-Cloning-App 
[06:34:40] <audiobirb> oh wow, didn't even think to look at the code
[06:34:50] <audiobirb> yea they'd be matching up audio with text
[06:34:54] <epony> https://en.wikipedia.org/wiki/Crystal_oscillator_frequencies
[06:34:54] <bayaz> Title: Crystal oscillator frequencies - Wikipedia 
[06:34:55] <audiobirb> yea that's using ml
[06:35:02] <audiobirb> derp
[06:35:03] <absentia> guy pierce had the right of it in memento
[06:35:06] <absentia> "MEMORY IS TREASON
[06:35:07] *** Quits: Smeef (~deathonat@user/smeef) (Read error: Connection reset by peer)
[06:35:08] <absentia> CONSIDER THE SOURCE"
[06:35:24] <absentia> actually the greatest developer of the 90s
[06:35:46] *** Joins: password (~password8@user/password2)
[06:37:13] <epony> https://en.wikipedia.org/wiki/Intel_High_Definition_Audio#Features
[06:37:14] <bayaz> Title: Intel High Definition Audio - Wikipedia 
[06:38:23] <epony> now the mandatory trip to memory lane
[06:38:25] <epony> https://en.wikipedia.org/wiki/Sound_card#List_of_sound_card_standards
[06:38:25] <bayaz> Title: Sound card - Wikipedia 
[06:38:31] <absentia> hahahahah
[06:38:37] *** Quits: sebbu (~sebbu@2a01:cb10:856f:3000:70bc:5bd0:8f78:3b97) (Ping timeout: 240 seconds)
[06:38:40] <absentia> fucking auzentech pci-e sound cards
[06:38:44] <absentia> bigger than your graphics card
[06:39:11] <absentia> marketed to gamers but don't sound any different
[06:39:15] <absentia> cause hardlocks on windows
[06:39:18] <absentia> i'm glad that market is dead
[06:40:38] *** Joins: sebbu (~sebbu@user/sebbu)
[06:40:38] <ProfSimm> absentia: the graphics card is the next one to be dead
[06:40:44] <ProfSimm> *market
[06:41:05] * epony flips lights 3 times "not really"
[06:41:05] *** Joins: password2 (~password8@user/password2)
[06:41:31] <vysn> it looks like the browser is the next operating system
[06:41:37] <absentia> vysn: yes
[06:41:37] <epony> nothing dies, they get reiterated and implemented / incorporated in other form factors
[06:42:07] <absentia> yeah, the DAC
[06:42:12] <epony> only interim variants don't get later uses, but the peaks of development live on in various other devices
[06:42:16] <absentia> we no longer need pci-e
[06:42:22] <vysn> with the advent of webgpu and webassembly 
[06:42:33] <absentia> we already have high-bandwidth channels to stream digital audio to a DAC
[06:42:48] <epony> you're still having, and moreover supporting, the formats of the previous iterations though
[06:42:49] <absentia> at least as far as consumer audio is concerned
[06:43:02] <epony> (and converting in between these)
[06:43:18] <epony> sometimes even unbeknownst to you
[06:43:39] <absentia> apple moving to digital audio only is premature
[06:43:47] <epony> and that will be the word of the day for now ;-)
[06:43:55] *** Quits: password (~password8@user/password2) (Ping timeout: 256 seconds)
[06:44:02] <vysn> premature?
[06:44:03] <epony> "prematurely unbeknownst"
[06:44:15] <vysn> +1
[06:44:23] <absentia> look at all the crappy shims we need to use an iphone
[06:44:35] <absentia> bluetooth dacs that you plug an old fashioned 1/8" into
[06:44:54] <absentia> "true wireless" earbuds that have problems connecting with each earpiece
[06:44:56] <epony> it's all good, eventually designs settle on standards
[06:44:59] <absentia> and the worst of all:
[06:45:01] <absentia> bluetooth
[06:45:20] <absentia> the standard that isn't a standard
[06:45:26] <absentia> because it's too fucking huge to implement
[06:45:33] <absentia> so everyone just chooses their bits and pieces
[06:45:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[06:45:58] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[06:48:41] <epony> https://en.wikipedia.org/wiki/Wi-Fi_6 then https://en.wikipedia.org/wiki/6G_(network) and.. https://en.wikipedia.org/wiki/Bluetooth#Bluetooth_5 the odd one
[06:48:41] <bayaz> Title: Wi-Fi 6 - Wikipedia 
[06:48:41] <bayaz> Title: 6G (network) - Wikipedia 
[06:48:41] <bayaz> Title: Bluetooth - Wikipedia 
[06:48:48] *** Quits: Scrub (~monr0e@31.132.33.9) (Quit: Leaving)
[06:49:02] *** Joins: Scrub (~monr0e@smtp.vixen.international)
[06:50:36] *** Quits: Scrub (~monr0e@smtp.vixen.international) (Client Quit)
[06:50:42] <epony> implosion imminent.. https://en.wikipedia.org/wiki/Wireless_USB#Wireless_USB_vs._60_GHz
[06:50:42] <bayaz> Title: Wireless USB - Wikipedia 
[06:51:00] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[06:51:45] <absentia> 666
[06:51:50] <absentia> 6g is the antichrist confirmed
[06:51:54] <absentia> ave satanas!
[06:52:24] <vysn> not surprising that Blutooth is the odd one out. even its name is misleading
[06:52:31] <vysn> its named after a viking king
[06:52:39] <vysn> nothing to do with blue or tooth
[06:53:24] <epony> and now for some humour, coca cola gives you the brown tooth standards ;-)
[06:53:39] <vysn> lol
[06:53:48] <leduyquang753> Real magic.
[06:53:56] <flakland> i thought he had a weird tooth or somethin
[06:55:46] <epony> https://en.wikipedia.org/wiki/List_of_interface_bit_rates#Wireless_networks
[06:55:47] <bayaz> Title: List of interface bit rates - Wikipedia 
[06:55:52] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[06:55:58] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of gamedev supermutants at https://indiedevs.net/)
[06:57:00] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:57:21] <epony> could have included the real / payload throughput, but hay, at least it shows two numbers next to each other ;-)
[06:57:48] <epony> (now with up to 100% more hyperlinkatude technology)
[06:58:14] *** Joins: hexingb (~hexingb@103.37.140.23)
[06:58:28] *** Joins: kaivai (~kaivai@user/kaivai)
[06:58:28] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[06:59:12] <epony> note PCI Express (PCIe) still is in there, not at all abandoned
[06:59:53] <flakland> that stuffs old tech
[06:59:59] <flakland> needs more lasers
[07:00:24] <epony> https://en.wikipedia.org/wiki/PCI_Express#PCI_Express_5.0
[07:00:24] <bayaz> Title: PCI Express - Wikipedia 
[07:01:15] <absentia> amigojapan: that's the point - hiding away the filesystem abstracts away what is actually going on, which is easier but leaves you ignorant
[07:01:16] <flakland> https://en.wikipedia.org/wiki/Electrical_telegraph
[07:01:16] <bayaz> Title: Electrical telegraph - Wikipedia 
[07:02:07] <amigojapan> Agreed absentia 
[07:02:47] <amigojapan> absentia: they claim it's for security, so one app can't write to a directory of another app
[07:03:04] <absentia> hold on while i wrap all my kitchen knives in sponges
[07:03:22] <absentia> wouldn't want to cut myself
[07:03:42] <amigojapan> Lol. I actually don't have a kitchen knife
[07:03:50] <absentia> that's primal
[07:04:11] <absentia> all you need is a spork
[07:04:38] <epony> https://en.wikipedia.org/wiki/Orders_of_magnitude_(bit_rate)
[07:04:38] <bayaz> Title: Orders of magnitude (bit rate) - Wikipedia 
[07:06:06] <absentia> how soon until we see military destruction of undersea cables
[07:06:16] <absentia> i say less than 10 years
[07:06:31] <absentia> the internet balkanizes
[07:06:53] <absentia> into NATONet, Inc. and the eastern web
[07:07:06] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:21] <amigojapan> absentia: you would be surprised how many normies don't believe in undersea cables
[07:07:29] <absentia> what
[07:07:36] <absentia> do they think the milkman delivers the bits every sunday?
[07:07:48] <amigojapan> Yeah they think the internet works by satellite
[07:07:57] <absentia> damn elon musk and his memetic marketing
[07:08:10] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:08:13] <edgar-rft> under the sea is ground, no problem for cables :-)
[07:08:17] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[07:08:23] <amigojapan> This was before skynet
[07:09:02] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[07:09:03] <edgar-rft> sorry, but I don't believe in sky cables
[07:09:06] <amigojapan> "starlink"
[07:09:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:09:55] <amigojapan> People use the internet but have no idea how it works
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:04] <absentia> same
[07:10:39] *** Quits: flakland (~flaknet99@32.211.211.39) (Ping timeout: 264 seconds)
[07:10:50] <edgar-rft> doesn't matter as long as you braindeadly believe everything what's written there
[07:10:58] *** Joins: flakland (~flaknet99@32.211.211.39)
[07:11:10] <absentia> of course
[07:11:13] <absentia> everything i write is absolute truth
[07:13:22] <amigojapan> absentia: you killed SpongeBob by sticking your kitchen knife in a sponge
[07:13:50] *** Joins: hexingb (~hexingb@103.37.140.23)
[07:13:53] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[07:14:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[07:14:21] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[07:14:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[07:14:32] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[07:14:36] <amigojapan> absentia: I have heard that younger people also don't understand maps anymore
[07:16:09] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[07:17:52] <absentia> amigojapan: what are those
[07:17:56] <absentia> you mean google maps?
[07:18:03] <amigojapan> Lol
[07:18:12] <absentia> to be honest
[07:18:14] <absentia> i am glad
[07:18:19] <absentia> the dead tree medium for maps was fucking abysmal
[07:18:26] <duuude> people use more maps than before?
[07:18:28] <absentia> either giant fucking sheets you had to fold that would crease and tear
[07:18:39] <absentia> or the ones where you have to jump around to different pages
[07:18:42] *** Joins: kaivai (~kaivai@user/kaivai)
[07:18:42] <absentia> like a choose your own adventure
[07:18:43] *** Joins: esran (~esran@vps.conical-effort.net)
[07:18:49] *** Quits: esran_ (~esran@2a06:8ec0:3::1:7574) (Ping timeout: 256 seconds)
[07:18:57] <absentia> as much as i despise google in the year 2022 maps was a revolution
[07:19:04] <duuude> I don't think people got worse in reading maps
[07:19:13] <duuude> I think google just bought it
[07:19:21] <flakland> wasnt mapquest first?
[07:19:24] <duuude> like everything else
[07:19:25] <flakland> or someone before them
[07:19:27] <amigojapan> absentia: the maps for Mexico city were split into a small book with a page for a small area
[07:19:39] <absentia> amigojapan: yeah those are the worst
[07:20:25] <PlanckWalk> If you turn left, go to page 27.  If you turn right, go to page 38.  If you catch a plane, get out of here this is the wrong book.
[07:20:30] <absentia> dead tree maps also do not have live traffic flow data, harvested from the cortices of the unwilling users/useds
[07:20:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:21:06] <duuude> and 99 phones in a carriage
[07:21:14] <PlanckWalk> Hehe yes that was great
[07:21:31] <duuude> did they fix that? I would like to jam traffic that way
[07:22:19] <duuude> what if there are actually 99 people there? one can't decide
[07:22:33] <absentia> "well the data says there are 99 people
[07:22:38] <absentia> and we are a data-driven organization"
[07:22:51] <absentia> said the astronomer who had never looked up to see the stars
[07:23:47] <amigojapan> Renting 99 SIM cards must be expresive
[07:24:14] <edgar-rft> I look into the internet to see porn stars, that's enough
[07:24:15] <duuude> do you have to buy an actual SIM to register on google? I doubt
[07:24:52] <flakland> you need a sms or regular phone
[07:25:01] <flakland> #
[07:25:03] <duuude> virtual numbers suffice
[07:25:03] <amigojapan> duuude: I guess he could have tethered all the other phones to one
[07:25:05] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[07:25:51] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[07:25:51] *** Joins: Cashlin (~hp@user/cashlin)
[07:27:51] <amigojapan> edgar-rft: you would have been happy with magazines or VHS tapes
[07:28:36] <edgar-rft> that's how I did astronomy in the 1990s :-)
[07:28:45] <absentia> lmao
[07:28:51] <amigojapan> :)
[07:30:00] *** Joins: hexingb (~hexingb@103.37.140.23)
[07:30:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[07:31:01] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[07:31:43] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[07:31:58] *** Joins: hexingb (~hexingb@103.37.140.37)
[07:32:00] *** Quits: hexingb (~hexingb@103.37.140.37) (Read error: Connection reset by peer)
[07:34:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:35:09] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:39:01] <amigojapan> I studied Japanese in about 1998. The only intent resource I used for it was IRC. The rest was vhs tapes and books
[07:40:01] <amigojapan> And Japanese friends
[07:40:34] *** Joins: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a)
[07:40:38] <amigojapan> Internet*
[07:41:04] *** Quits: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a) (Read error: Connection reset by peer)
[07:41:07] <amigojapan> People have it easy and cheap today
[07:42:04] <smallville7123> how do you recursively mutate a grammar?
[07:42:48] <flakland> whyyyyyyyyyyy
[07:42:57] *** Quits: stagas (~stagas@2a02:587:c441:b777:b914:15bd:5515:2a1f) (Ping timeout: 240 seconds)
[07:43:08] *** Joins: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a)
[07:43:10] <smallville7123> ?
[07:43:35] <flakland> mutate the grammer
[07:43:37] <flakland> whyyyyyyyyyyyy
[07:43:38] *** Joins: frost (~frost@user/frost)
[07:44:12] <smallville7123> because i need to
[07:44:17] <flakland> but why
[07:44:48] <smallville7123> in order to recursively rescan
[07:44:53] <duuude> evolution
[07:45:05] <smallville7123> duuude: lol
[07:45:11] <flakland> genetic parsing
[07:45:16] <flakland> algorithym
[07:45:25] <smallville7123> its more like a grammar stack
[07:46:30] <duuude> I'm not much informed on this, but an example of what you want to parse and what you want to get from it could help
[07:47:28] *** Quits: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a) (Read error: Connection reset by peer)
[07:48:17] <smallville7123> https://gist.github.com/1800aff68a4d2e6c13feb190b8133189
[07:48:18] <bayaz> Title: General.cpp 
[07:48:34] <smallville7123> parse 1 foo(foo) 2 foo(bar) 3
[07:48:39] <PlanckWalk> This looks like the archetypal XY problem.
[07:48:43] <smallville7123> get 1 9 foo(foo) 9 2 9 bar(bar) 9 3
[07:49:28] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c957-9c20-17fd-9646.res6.spectrum.com)
[07:49:53] *** Joins: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a)
[07:50:29] *** Quits: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a) (Read error: Connection reset by peer)
[07:50:30] <smallville7123> i feel like a "stack" rule would help here, where the rule would match the top-most stack item (eg which ever rule is pushed to the stack will be the one to match)
[07:51:18] <PlanckWalk> "How do I get my cat to walk on stilts?  I really need to know!"  "Why the hell do you need that?"  "The cat goes outside and sometimes the grass is wet and her paws get muddy and makes a mess on the table when she jumps up to eat things off it"
[07:51:27] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-60ea-51c9-1b23-ab22.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:51:45] <smallville7123> tho there must also be a way to pop the stack
[07:51:55] *** Quits: vrp2zqL7 (~v8XhLN3K@74.5.157.96) (Quit: Quitting)
[07:51:59] <PlanckWalk> "Yes that is absolutely the right solution and here's exactly how to do it" said nobody ever.
[07:52:26] *** Joins: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a)
[07:52:51] *** Quits: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a) (Read error: Connection reset by peer)
[07:53:40] <smallville7123> PlanckWalk: lol
[07:54:37] *** Joins: wodencafe (wodencafe@woden.cafe)
[07:56:19] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:e438:c47c:d7b4:3864)
[07:56:27] <smallville7123> lets assume i have a Stack rule, and the initial rule matches, pushes "tmp" to this stack, and then rescans to cause the Stack to match "tmp"
[07:56:28] <smallville7123> under what conditions should we pop "tmp" off the stack?
[07:56:44] <smallville7123> under what conditions should we pop "tmp" off the stack to allow the initial rule to match again?  *
[07:57:04] <smallville7123> say the initial rule matches 'a' and "tmp" matches 'b'
[07:57:39] <amigojapan> PlanckWalk: https://youtube.com/shorts/ns4WuXVsoK8?feature=share
[07:57:39] <bayaz> Title: Trained Monkey Walks on Stilts 
[07:58:04] *** Joins: password (~password8@user/password2)
[08:00:06] <flakland> you lost me at re-scan
[08:00:59] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[08:01:02] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:cc36:2f4e:493f:8ad7)
[08:01:22] <smallville7123> lets assume i have a Stack rule, and the initial rule matches 'a', pushes "tmp" (which matches 'b') to this stack, and then replaces the input 'a' with 'b' and rescans to cause the Stack to match "tmp",    under what conditions should we pop "tmp" off the stack to allow the initial rule to match again?
[08:02:48] <flakland> b == tmp ?
[08:03:13] <smallville7123> flakland: the rule will will act as if it did not consume any input
[08:04:05] <smallville7123> tho given this, the next rule must also match 'b'
[08:04:18] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:04:26] *** Joins: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a)
[08:04:26] <smallville7123> unless the Stack rule is directly inside a one-or-more rule
[08:04:41] <smallville7123> (which Stack will keep matching until it fails)
[08:05:05] <smallville7123> fk
[08:05:27] <flakland> tmp is a 'rule' ?
[08:06:10] *** Quits: hexingb (~hexingb@2409:8900:2700:de0f:98a0:3a95:d827:f91a) (Read error: Connection reset by peer)
[08:06:14] <smallville7123> why is recursive parsing so complicated ;-;
[08:07:10] <smallville7123> basically i want to do this https://gist.github.com/f97b3b7b86fca1e63dc2bd5dbfaac137
[08:07:11] <bayaz> Title: gist:f97b3b7b86fca1e63dc2bd5dbfaac137 
[08:09:51] <flakland> says to pop when context runs out of tokens
[08:10:15] <ski> what is a "Stack rule" ?
[08:10:36] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Quit: WeeChat 3.4)
[08:10:59] <smallville7123> flakland: yes
[08:11:17] *** Quits: password (~password8@user/password2) (Ping timeout: 240 seconds)
[08:11:18] <ski> are you attempting to do CPP macro expansion ?
[08:11:19] <flakland> i'm assuming its something to match, looks like a preprocessor thing
[08:11:22] <smallville7123> flakland: yes
[08:11:31] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[08:11:50] <smallville7123> ski: yes
[08:12:07] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:12:30] * ski 's no idea where this `tmp' comes into it
[08:12:39] <PlanckWalk> Where did "recursively mutate a grammar" come in?
[08:12:49] <ski> (why are you even talking about a stack ?)
[08:12:56] <smallville7123> lets say we have the following
[08:13:00] <smallville7123> #define x y
[08:13:01] <smallville7123> x
[08:13:39] <smallville7123> when we initially parse x, we detect it as a macro, replace "x" with "y", and then rescan in order to further expand it
[08:13:57] <ski> where's the mutation of a grammar happening ?
[08:14:15] <ski> (replacing `x' by `y' does not constitute mutating a grammar)
[08:14:54] <smallville7123> which works fine except for the case that we must incorporate token blacklisting, which prevents the token from being recursively expanded over and over again forever
[08:14:55] <ski> you're transforming an input token sequence into an output token sequence
[08:15:12] <smallville7123> eg #define x x y
[08:15:21] <smallville7123> "x" -> "x y"
[08:15:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:16:04] <smallville7123> we must prevent "x" from being re-expanded, while still allowing it to become eligible for expansion again in the case of "1 x 2 x
[08:16:28] <ski> how would it expand, in the latter case ?
[08:16:43] <smallville7123> "1 x 2 x" -> "1 x y 2 x" // x must not be re-expanded but "2 x" must also allow x to be expanded
[08:17:15] <ski> okay
[08:17:33] <smallville7123> ski: it would expand by simply replacing the captured "x" with its expansion
[08:17:43] <ski> seems to me you're still thinking of this in terms of physically modifying the input sequence of tokens, step by step, until it becomes the output sequence
[08:17:53] <smallville7123> yes
[08:18:02] <ski> i think it's probably better to avoid thinking of it like that
[08:18:11] <ski> think of it more like two stack of cards
[08:18:11] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:18:18] <smallville7123> where the grammar mutation comes in, is in the case of
[08:18:19] <smallville7123> "1 x 2 x" -> "1 x y 2 x" // x must not be re-expanded but "2 x" must also allow x to be expanded
[08:18:26] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:18:37] <PlanckWalk> smallville7123: That's the "putting stilts on the cat" part :-p
[08:18:43] <ski> you pick up a card from the input stack. then either you put in on the output stack, or you "expand it", by putting expansion cards on the output stack
[08:19:11] <smallville7123> in here, we would instead do "1 x 2 x" -> "1 x y 2 x" // a rule would be inserted in order to match "x y" and expand it as needed
[08:19:38] <ski> or think of it as you have a little machine box, that's connected to two pipelines. on one end, tokens come in to you. on the other end, you emit tokens
[08:19:49] <smallville7123> and this is where the stack comes in
[08:20:20] <smallville7123> if say "y" expands to "x y" then we need to insert another rule to expand "x y" (which will not expand further)
[08:20:56] <smallville7123> so "x" -> "x y" -> "x x y" -> no more expansions, pop to initial rule
[08:21:31] <ski> yea .. i'm saying you don't have to think of the expansion as actually walking into your stream of tokens, and changing, mutating, it
[08:21:42] <smallville7123> ski: i know
[08:21:47] <smallville7123> but i want to
[08:21:51] <ski> why ?
[08:22:02] <smallville7123> simply to prove that it can be done
[08:22:04] <smallville7123> :)
[08:22:07] <ski> to make life more difficult, more of a challenge ?
[08:22:19] <ski> well .. good luck, i guess
[08:22:48] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[08:23:40] <absentia> mutate the grammar
[08:23:42] <absentia> ...???
[08:23:46] <ski> no
[08:23:47] <absentia> smallville7123: what is your end goal
[08:23:50] <ski> that's not what they're talking about
[08:24:04] <absentia> is this a parser
[08:24:06] <smallville7123> however the problem lies in determining how to insert the rule in such a way that it can work recursively
[08:24:08] <absentia> or a lexer or something
[08:24:11] <ski> they're talking about going into a sequence of tokens, and making step-by-step changes to it, while walking around it
[08:24:18] <absentia> holi fuk
[08:24:28] <ski> the sequence of tokens is not a grammar. this is not about mutating a grammar
[08:24:56] <ski> absentia : it's CPP preprocessor macro expansion
[08:25:16] <absentia> smallville7123: if you don't want `x` to get "re-expanded" just re-name it
[08:26:30] <smallville7123> however the problem lies in determining how to insert the rule in such a way that it can work recursively, given this piece of grammar https://gist.github.com/629e591bdd7dc14f20f6d7d0f798f8db    *
[08:26:31] <bayaz> Title: General.cpp 
[08:26:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59)
[08:27:03] <PlanckWalk> smallville7123: It's a nice puzzle you're creating for yuorself, good luck with solving it, if it even has a solution.
[08:27:14] <absentia> the x in `#define x` and the x in `x y` are different x's
[08:27:15] <smallville7123> (the replacements are hardcoded in this case for simplicity
[08:27:41] *** Joins: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24)
[08:27:44] <absentia> actually what does the preprocessor even do
[08:27:48] <absentia> do i even want to find out
[08:28:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:20e5:b214:6f9d:aa59) (Remote host closed the connection)
[08:28:05] <flakland> i just avoid it
[08:28:37] <kodah-> does anyone know anything about hackernews' rate limits?
[08:28:44] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:29:00] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.4)
[08:29:07] <smallville7123> actually no
[08:30:34] <PlanckWalk> I look forward to seeing the resulting code on a blog.
[08:30:41] <PlanckWalk> DailyWTF or something.
[08:31:14] <absentia> i can't even think of a case where `#define x x y` would ever compile
[08:32:03] <absentia> maybe `ShittyStructEndingInx y;`
[08:32:17] <absentia> wtf
[08:32:21] *** Joins: jtgd (~jtgd@user/jtgd)
[08:33:13] *** Quits: SmokenatorZ6 (~Smokenato@189-46-200-24.dsl.telesp.net.br) (Quit: Screw you guys, im going home)
[08:38:08] *** Joins: hexingb (~hexingb@103.37.140.23)
[08:39:16] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[08:39:21] <smallville7123> im guessing something like this https://gist.github.com/a9af652d2eaffa1ccf1b4b05cb769929
[08:39:22] <bayaz> Title: General.cpp 
[08:40:09] *** Joins: SmokenatorZ6 (~Smokenato@152.249.188.228)
[08:41:13] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3)
[08:44:40] <smallville7123> or rather https://gist.github.com/006f114fce1d47a6b3d76b21ae7a5579 (for a version that works)
[08:44:41] <bayaz> Title: General.cpp 
[08:45:11] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 256 seconds)
[08:46:05] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3) (Ping timeout: 256 seconds)
[08:46:23] <smallville7123> tho everything is hardcoded in this specific case
[08:46:59] <smallville7123> but it proves that it IS possible 
[08:47:15] <smallville7123> tho complex
[08:47:59] *** Joins: caramel (~caramel@user/caramel)
[08:48:14] <smallville7123> however this does not address when it will fail
[08:48:40] <smallville7123> eg it could replace with a rule that does not match currently but matches later
[08:49:09] <smallville7123> (which is unlikely if used correctly)
[08:50:08] <smallville7123> tho in that case what should it pop the rule to in order to correctly backtrack
[08:50:56] <smallville7123> or should it even attempt to pop the rule on failure to match?
[08:52:25] <smallville7123> hmmm
[08:53:21] <smallville7123> imma take a break
[08:53:54] <smallville7123> im tired of trying to figure this out
[08:54:04] <smallville7123> iu wanna fave fun
[08:55:35] *** Quits: _inky (inky_@gateway/vpn/protonvpn/inky) (Ping timeout: 250 seconds)
[08:56:10] *** Quits: b1tr0t (~bitrot@149.167.135.129) (Read error: Connection reset by peer)
[08:56:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) ()
[09:01:10] *** Joins: k8yun_ (~k8yun@24.244.29.99)
[09:03:57] *** Quits: kodah- (~kodah@user/kodah) (Ping timeout: 240 seconds)
[09:05:10] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 260 seconds)
[09:05:49] *** Joins: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net)
[09:06:08] *** Joins: kodah- (kodah@user/kodah)
[09:09:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[09:16:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:17:17] *** Quits: monr0e (~monr0e@smtp.vixen.international) (Ping timeout: 240 seconds)
[09:17:32] *** Joins: stagas (~stagas@2a02:587:c441:b777:a4f9:d376:ddc4:9436)
[09:18:49] *** Joins: minto (~mintograd@47.201.5.61)
[09:21:36] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Remote host closed the connection)
[09:21:47] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 250 seconds)
[09:22:41] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[09:26:41] *** Joins: Guest72 (~Guest72@2401:4900:1f3d:5532:e32f:b40b:5bd7:b69c)
[09:28:44] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[09:29:58] *** Quits: mac_n_cheese (~lastc@2607:fa49:553f:2200:5ec6:4518:fd08:3f23) (Remote host closed the connection)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:24] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:49] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Quit: reboot)
[09:34:51] *** Joins: hexingb (~hexingb@103.37.140.37)
[09:36:17] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[09:37:33] *** Quits: kodah- (kodah@user/kodah) (Ping timeout: 256 seconds)
[09:39:26] *** Joins: kodah- (~kodah@user/kodah)
[09:40:57] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:41:20] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:41:54] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:53:42] *** Quits: xff0x (~xff0x@2001:1a81:533f:ea00:5f96:9e03:4e30:341d) (Ping timeout: 260 seconds)
[09:54:27] *** Joins: xff0x (~xff0x@2001:1a81:533f:ea00:7b8c:668:4058:35b)
[09:57:33] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[09:58:18] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[09:58:24] *** Joins: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0)
[09:58:42] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[09:59:13] *** Joins: blahboybaz (~blahboyba@c-67-161-96-226.hsd1.wa.comcast.net)
[09:59:42] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[10:00:02] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[10:00:47] <blahboybaz> I'm struggling with a syntax issue in js. If prop is a variable and I'm trying to access the property of an object in an array of objects..  shouldn't it be   contacts[i][prop]
[10:00:51] <blahboybaz> ?
[10:01:16] <KillerWasp> for any problem with JS throw a dice
[10:01:38] <blahboybaz> I can't seem to find where my problem (in the code)lies. I want to eliminate that line as a potential problem so I can either move on or fix the issue
[10:02:02] <blahboybaz> contacts in the array name
[10:03:32] <blahboybaz> I'm working on a freeCodeCamp challenge and I've been struggling with this thing for a few hours now. Just need a push to get over the hump
[10:04:11] <blahboybaz> KillerWasp: lol (I think)
[10:05:38] <PlanckWalk> blahboybaz: Yes, that works
[10:05:52] <ejjfunky> blahboybaz, it should be contacts[i].props, i think.
[10:06:04] <PlanckWalk> If the second index is a string literal though, there is a shortcut syntax
[10:06:18] <PlanckWalk> contacts[i]['prop'] = contacts[i].prop
[10:06:31] <blahboybaz> ejjfunky: have to use bracket notation when the input is a variable and not a string
[10:06:32] <ejjfunky> oh ok
[10:06:41] <KillerWasp> blahboybaz: well, you can't expect it to never work in JS, you have to try one way, another, and so on. If something gets you stuck, display the contents of all inline variables as debugging.
[10:06:46] *** Quits: kodah- (~kodah@user/kodah) (Ping timeout: 260 seconds)
[10:07:01] <absentia> lol
[10:07:05] <absentia> programming by brute force
[10:07:10] <absentia> branching factor infinity
[10:07:11] <PlanckWalk> There are dangers in using variable property names though
[10:07:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:07:26] <PlanckWalk> Not all strings are valid names
[10:07:30] <blahboybaz> I'm working with what I have to (requirement)
[10:07:39] *** Joins: b1tr0t (~bitrot@149.167.135.129)
[10:07:56] <absentia> blahboybaz: in the real world you take the requirements to the project manager and tell them to pound sand
[10:07:59] <absentia> muahahahahahahah
[10:08:11] <blahboybaz> There's just something that I'm not getting (about finding the solution I mean)
[10:08:24] <PlanckWalk> So long as you can keep the keys within the valid set though, it's basically just a dictionary object
[10:08:36] <PlanckWalk> (and so are arrays)
[10:08:39] <blahboybaz> yeah, that won't work with fCC challenges tho
[10:08:43] <blahboybaz> but it would be nice
[10:08:50] *** Joins: kodah- (kodah@user/kodah)
[10:09:08] <blahboybaz> https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/profile-lookup
[10:09:09] <bayaz> Title: 
[10:09:34] <blahboybaz> I don't want to be handed a soln
[10:09:54] <blahboybaz> I want to learn what the hell I'm doing wrong and find the soln
[10:10:23] <PlanckWalk> That one looks pretty straightforward, though there are in principle nasty edge cases
[10:10:43] <ejjfunky> nasty edge cases?
[10:10:47] *** Joins: baracurda_ (~baracurda@user/parserblabla)
[10:11:00] <blahboybaz> I'm sure I'm just overlooking the obvious in my logic
[10:11:14] <absentia> are UTF-8 characters outside of ASCII range valid property names in JS
[10:11:30] <PlanckWalk> Things like being passed things that aren't strings, or aren't valid object property names, multiple records matching the same name, etc
[10:11:31] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:11:38] <absentia> can i index my objects by emoji
[10:12:03] <ejjfunky> ic, planckWalk.
[10:12:31] <ejjfunky> it looks pretty straight forward to me though. all you gotta do is match name and then get his/her likes
[10:12:50] <ejjfunky> if there's duplicate names, get all of them
[10:12:55] <absentia> it's just a left fold through an arbitrary traversable
[10:12:57] <absentia> trivial
[10:12:59] <Decker> absentia any string can be used object = {["1 2 3"]:123 }
[10:13:10] <Decker> object["1 2 3"]
[10:13:15] <absentia> nice
[10:13:21] <absentia> i'm going to start indexing my objects with eggplant
[10:13:31] <absentia> assert dominance over the codebase
[10:13:33] <ejjfunky> egglant?
[10:13:41] <absentia> the eggplant emoji
[10:13:47] <ejjfunky> hehe
[10:13:49] <PlanckWalk> But yeah, apart from the edge cases it's a short 1-line solution.
[10:13:50] <absentia> a very tumescent icon
[10:13:50] <blahboybaz> :)
[10:13:56] <Decker> emoji requires quotes... things like greek alphabet can be used as stright identifiers
[10:14:03] <blahboybaz> I gotta get back at it -- this is driving me nuts!
[10:14:59] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[10:17:42] *** Joins: user51 (~user51@176.228.148.215)
[10:20:14] *** Joins: rtypo (~alex@user/rtypo)
[10:21:14] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 260 seconds)
[10:22:02] <PlanckWalk> Another in-principle edge case (not in the sample data) would be if the contacts array contains some things that aren't objects.
[10:22:37] <ejjfunky> blahboybaz, take breaks. when you get back, you'll often find you can solve it easier.
[10:23:24] <Decker> like maybe promises for objects
[10:26:40] *** Quits: b1tr0t (~bitrot@149.167.135.129) (Read error: Connection reset by peer)
[10:29:26] <user51> the more advent of code i do, the more unfolding data into code feels like a huge mistake.
[10:32:29] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[10:36:49] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[10:38:22] *** Joins: ixokani (~swinnenb@user/swinnenb)
[10:41:20] *** Quits: saribro (~swinnenb@user/swinnenb) (Ping timeout: 250 seconds)
[10:41:24] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:43:36] *** Quits: k8yun_ (~k8yun@24.244.29.99) (Read error: Connection reset by peer)
[10:44:57] *** Quits: xff0x (~xff0x@2001:1a81:533f:ea00:7b8c:668:4058:35b) (Ping timeout: 240 seconds)
[10:45:05] *** Quits: tehenderz (~tehenderz@ti0018a400-7339.bb.online.no) (Ping timeout: 256 seconds)
[10:45:21] *** Joins: tehenderz (~tehenderz@ti0018a400-8024.bb.online.no)
[10:46:13] *** Joins: xff0x (~xff0x@2001:1a81:533f:ea00:4e49:abcb:9c05:c4b8)
[10:47:57] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[10:57:02] <blahboybaz> ejjfunky: I know that helps - I just get frustrated when something 'should' only take 15 minutes and it ends up taking all day and still no end in sight. Of when something clearly should be simple ("trivial" they call it) but it ends up being not. I feel like a dam idiot. A 3 year old could have done this 10 ways from sunday in half the time but here I am, numbskull, can't get right. 
[10:57:46] *** Quits: maxzor (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Quit: Leaving)
[10:58:04] <blahboybaz> I'd ask for help but I had some bad experiences with that before and I figure that's the way it'll always be
[10:58:56] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[11:01:37] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:02:29] *** Joins: b1tr0t (~bitrot@149.167.135.129)
[11:07:53] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:11:05] *** Joins: mrig (~mrig@user/mrig)
[11:13:01] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[11:13:14] <quazimodo> hi
[11:13:16] <quazimodo> question
[11:13:28] <quazimodo> I can't find a simple answer to this
[11:14:03] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[11:14:53] <quazimodo> when performing event sourcing in a system, is complex business logic performed before creating the event (thus storing derived data into the event) or after the event has been created & is being applied to the aggregate (thus the event stores the initial raw data)
[11:16:33] *** Joins: jaysicks (~jaysicks@178-164-182-223.pool.digikabel.hu)
[11:16:40] <quazimodo> it seems to me that business logic before the event is created suffers from a race whereby creating the event may need the current aggregate state to calculate next event's parameters and could also be slow due to complex business logic, meaning another event could be saved against the aggregate in the meantime, making this event's data stale
[11:17:02] <quazimodo> that being said locking or sequential numbering of events in DB would prevent the corruption of state
[11:17:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:17:09] *** Joins: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr)
[11:17:37] *** Quits: RedNifre (~michael@dslb-002-203-247-145.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[11:17:51] <quazimodo> anyway I can't quite figure it out, and when performing event sourcing do I want to save the same events to my data lake, or should I just created separate data lake events which have snapshots instead of deltas
[11:19:27] *** Joins: RedNifre (~michael@dslb-088-073-234-214.088.073.pools.vodafone-ip.de)
[11:19:41] <quazimodo> our ordering process is a tad complex and I'm not sure how other subsystems such as our BI tools can apply the raw events to create a legitimate projection, they basicall need 'simple' events that get folded in a simple crudy way
[11:21:11] <absentia> quazimodo: congratulations
[11:21:18] <absentia> you have stumbled upon eventual consistency
[11:21:27] <absentia> a necessary consequence of event sourcing and other distributed systems
[11:21:32] <absentia> you are now in hell
[11:22:00] <quazimodo> i understand eventual consistency
[11:22:25] *** Quits: c2a1 (~c2a1@2607:fb90:1773:9c41:b005:39c5:9e2:e737) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[11:22:52] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[11:23:11] *** Joins: absc (~absc@81.31.144.28)
[11:23:17] <quazimodo> seems to me both the approaches work, logic before/after writing events
[11:23:21] <quazimodo> just different tradeoffs
[11:23:25] <absentia> yes
[11:23:25] <quazimodo> but what's the industry experience
[11:23:48] <absentia> i'm not even sure what question you're asking
[11:23:50] <quazimodo> I can't imagine every department wants to implement logic to make sense of events that have rawish data
[11:24:15] <absentia> are you trying to give the logic a single home
[11:24:22] <quazimodo> ok image i have event "AddItemToOrder", and via web UI i know I need to add 2 of item id 69 to the order 666
[11:24:30] <absentia> nice
[11:25:10] <ejjfunky> blahboybaz, just keep on practicing. if it should take 15 minutes and it takes all day, that means there's something that you're still missing. just take your time. when you "gets" it, it'll be 15 minutes. for now, just relax and enjoy the ride.
[11:25:38] <quazimodo> do i store AddItemToOrder< order_id: 666, item_id: 69, count: 2 > or do i store <AddItemToOrder order_id: 666, order_params: { line_items: [ ... { item_id: 69, count: 2 } ], price: "about 3.50" >
[11:25:53] *** Quits: RedNifre (~michael@dslb-088-073-234-214.088.073.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[11:25:58] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:26:22] <absentia> quazimodo: i don't see significant differences other than the additional nesting and an additional price field
[11:26:24] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 250 seconds)
[11:26:27] <quazimodo> absentia: < absentia> the eggplant emoji... my frontend dev started adding emojis to his git messages
[11:26:28] <ejjfunky> i had, "thundercat before" but it's "challenge destroyed", very encourging message.
[11:26:39] <absentia> if the price is expected to change rapidly it may be unwise to keep it in the event
[11:26:43] <absentia> events are supposed to be immutable
[11:26:45] <quazimodo> absentia: to figure out "about 3.50" i did 3 full minutes of processing
[11:26:53] <absentia> although if you wanted a historical spot price at that timestamp
[11:26:55] <absentia> i suppose it would make sense
[11:27:02] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[11:27:03] <absentia> just, it could drift from the current price
[11:27:13] <absentia> quazimodo: right
[11:27:19] <quazimodo> should i do that before the event is created, and then store the final params in the event, or let the pricing be figured out as events are applied to the aggregate
[11:27:27] <absentia> quazimodo: who's using the price
[11:27:35] <absentia> what is that field for
[11:27:36] <quazimodo> absentia: absolutely every other part of the business
[11:27:39] *** Joins: RedNifre (~michael@dslb-002-206-109-122.002.206.pools.vodafone-ip.de)
[11:27:46] <absentia> yeah but what is it
[11:27:51] <absentia> the actual line item price on the invoice?
[11:27:52] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[11:27:52] *** Joins: menace (~someone@user/menace)
[11:27:53] <absentia> an estimate?
[11:27:56] <quazimodo> BI cares, invoicing cares
[11:27:56] *** menace is now known as Deknos
[11:28:01] <quazimodo> final price for that current state of the order
[11:28:07] <absentia> "current state of the order"
[11:28:20] <absentia> you can either point to an immutable record of the order state at the time the price was calculated
[11:28:25] <absentia> or include it in your event if that's not feasible
[11:28:27] <quazimodo> yes current state would be the event in question applied on top of all previous events in order
[11:28:50] <absentia> mmm
[11:29:13] <absentia> quazimodo: and the price depends only on the stream of events?
[11:29:25] <quazimodo> when you say "immutable record of the order state" do you mean some "complete" version of the order that I can fetch (as though it came from some traditional database)?
[11:29:37] <absentia> quazimodo: no i misunderstood
[11:30:02] <quazimodo> absentia: yes, but requires complex calculation to get it, including the (current at the time the event was created) the pricing arrangements the user had with the company
[11:30:46] <absentia> quazimodo: is it possible to retrieve the original inputs used to compute it
[11:30:51] <absentia> and recompute it at any time in the future
[11:31:20] <quazimodo> yeah the question is predicated on full determinism, otherwise it's impossible to do logic on apply
[11:31:34] * absentia shrugs
[11:31:43] <absentia> it could be reaching out to an external data source to retrieve pricing info, who knows
[11:31:51] <quazimodo> if there are 'facts' that disappear later in time then some/all the processing would have to be done before the event is created
[11:32:14] <quazimodo> or at least all the information required to process the data would need to be included in the event
[11:32:20] <quazimodo> so we end up in square one
[11:32:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:32:33] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:32:36] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[11:33:05] <absentia> the downstream dependent services can't just recompute it themselves?
[11:33:10] <quazimodo> does the event contain all info needed to apply business logic later, when events are folded or reduced to get the aggregate state, or does the event contain the final processed data which is simply reduced against previous events to get aggregate state
[11:33:14] <absentia> and how many services area ctually consuming this field from the event
[11:33:35] <absentia> quazimodo: i think a purist would say you should be able to recompute the current state (or at any point in history) given the stream of events alone
[11:33:42] <absentia> e.g. a pure computation
[11:34:16] <quazimodo> absentia: well this is an educational exercise so I can understand, but lets say a fairly large company with ~ 500 engineers and say 25 departments are going to be using the 'event system' in general. If they have to apply logic then there could be many reimplementations of logic per department right
[11:34:28] <absentia> quazimodo: sure
[11:34:35] <absentia> a classical solution to this is stored procedures
[11:34:50] <absentia> then some form of logic is made available to anyone who can connect to your data store
[11:35:01] <absentia> you could stick a service in front and require all DB access to go through an API
[11:35:05] <absentia> which provides the necessary logic
[11:35:33] <quazimodo> hrm the more we talk about it the more i'm leaning towards having the events contain the final computed values which are simply overlaid on top of each other to get final aggregate state
[11:35:35] <absentia> you could distribute a library if it's just pure computation and arithmetic
[11:36:11] <absentia> you could indeed just stick it in the event
[11:36:21] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:36:22] <quazimodo> > you could distribute a library if it's just pure computation and arithmetic
[11:36:25] <quazimodo> coupling ...
[11:36:32] <absentia> then you have to decide what kind of consistency guarantees you want
[11:36:36] <absentia> if it takes too long to compute
[11:36:51] <absentia> quazimodo: you can't have your cake and eat it too
[11:36:57] <quazimodo> apparently not
[11:36:58] <absentia> you either reimplement and duplicate the logic
[11:37:02] <absentia> achieving loose coupling
[11:37:05] <quazimodo> i need to talk to someone who's done a bunch of event sourcing in the field 
[11:37:05] <absentia> or give it a single home
[11:37:08] <absentia> and couple everyone to it
[11:37:52] <absentia> this almost sounds like a space/time tradeoff
[11:38:01] <absentia> larger event payloads with the input data
[11:38:08] <absentia> or smaller event payloads with the outputted computation
[11:38:20] <absentia> what are your latency requirements/SLAs for this service
[11:39:34] <absentia> your question is hard to answer because it's extremely broad
[11:39:46] <absentia> there needs to be more contraints on the solution space
[11:39:48] <absentia> otherwise anything can work
[11:40:31] *** Joins: palasso (~palasso@user/palasso)
[11:40:31] *** Quits: tehenderz (~tehenderz@ti0018a400-8024.bb.online.no) (Ping timeout: 256 seconds)
[11:40:59] *** Joins: tehenderz (~tehenderz@ti0018a400-8189.bb.online.no)
[11:41:33] <absentia> i feel like people just want to play with event sourcing these days
[11:41:42] <absentia> without an actual problem to solve
[11:41:55] <absentia> i suppose if you define your problem as, "we need to use event sourcing," it works out
[11:43:09] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:43:57] *** Quits: kodah- (kodah@user/kodah) (Ping timeout: 240 seconds)
[11:44:14] <ejjfunky> event sourcing is calling an api, absentia?
[11:44:37] <absentia> ejjfunky: it's where you model the current state of your application as the fold over time of a stream of events
[11:45:03] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:08] *** Joins: Rounin (~david@84.212.130.215)
[11:45:14] <absentia> if you squint it is similar to `git`
[11:45:17] <ejjfunky> not too sure what that means
[11:45:21] <absentia> the state of your repository is the result of applying a bunch of diffs
[11:45:23] <absentia> from a base state
[11:45:28] <ejjfunky> oh ok
[11:45:29] <quazimodo> the size of the event is not correlated
[11:45:40] <absentia> quazimodo: network egress $
[11:45:43] <quazimodo> initial params could be huge or tiny, partial state after performing logic could be huge or tity
[11:45:46] <quazimodo> ha
[11:45:49] <quazimodo> tity, i mean tyn
[11:45:50] <quazimodo> tiny
[11:46:09] *** Joins: kodah- (~kodah@user/kodah)
[11:46:47] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[11:46:54] <ejjfunky> like javascript doing async?
[11:46:59] <quazimodo> ejjfunky: no
[11:47:05] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7)
[11:47:44] <quazimodo> imagine i say to you "Hold this apple: <Apple color: red>" then later i say to you "Hold this pear: <Pear color: who cares pears suck>"
[11:48:06] <quazimodo> you can take those two 'events' and 'fold over them' or 'reduce' them to say 'in my hands are an apple and a pear'
[11:48:18] <quazimodo> we didn't create a database record of 'whats in your hands' to hold that info
[11:48:34] <absentia> though these systems often provide query models with the stream of events pre-folded
[11:48:37] <quazimodo> just stored some events
[11:48:42] <absentia> so you don't have to recompute everything from the beginning of time
[11:48:56] <absentia> just to get the current state
[11:48:57] <quazimodo> absentia: I think the terse version of my question is this
[11:49:10] <quazimodo> do I do any business logic/calculations/api calls/ whatever during event folding
[11:49:25] <quazimodo> and i'm now thinking, no
[11:49:33] *** Quits: ekathva (~ekathva@2001:999:50:cab1:59c2:628d:2b45:2b24) (Ping timeout: 250 seconds)
[11:49:44] <absentia> in prior implementations i have seen the reducers/folders are as stupid as possible
[11:49:47] <quazimodo> the event can contain 2 fields, 'payload' and 'initial_data' 
[11:49:48] <ejjfunky> so, something is storing these events then. and it gets bigger as more and more events unfold
[11:49:49] *** Quits: hexingb (~hexingb@103.37.140.37) (Read error: Connection reset by peer)
[11:49:53] <absentia> all they do is update records in a data structure
[11:49:58] <absentia> maybe some trivial aggregation of some sort
[11:50:05] <absentia> or reshaping data
[11:50:19] <quazimodo> ejjfunky: your use of the word unfold is confusing because we used the word fold very deliberately, but as more events are created then yes it's an ever growing log 
[11:50:38] <absentia> this would suggest you putting your "expensive" computations in the event
[11:50:49] <absentia> for them to simply be entered as is into your aggregate state
[11:50:51] <ejjfunky> doesn't sound efficient to me, quazimodo
[11:50:51] <quazimodo> and the 'event store' databases are optimised for this
[11:51:02] <quazimodo> ejjfunky: depends on what your criteria is 
[11:51:13] <quazimodo> it's insanely fast for writing, it can be very good for reads depending on DB implementation too
[11:51:27] <absentia> of course now you run into that race you mentioned earlier where the price was dependent on s_0, but the state has since advanced to s_1
[11:51:39] <quazimodo> absentia: yeah so the arms race is really where it's all at
[11:51:45] <quazimodo> but this happens with relational models all the time to
[11:52:04] <absentia> one way i've thought about it is
[11:52:06] <quazimodo> dude & his wife both hit 'update' on their shared whatever account at the same time, for example
[11:52:16] <absentia> how strict do you want to be about ordering of events
[11:52:27] <absentia> there is a spectrum from "we can't tell if any two events came before or after one another, ever"
[11:52:29] <quazimodo> absentia: i think you need to be very strict
[11:52:29] <absentia> to
[11:52:40] <absentia> "every event can be said to come either before, or after, any other event"
[11:52:42] <absentia> and it's always defined
[11:52:48] <absentia> quazimodo: there is no one-size fits all answer
[11:52:59] <absentia> the total-ordering/strongly consistent systems are great because you don't run into races
[11:53:01] <absentia> but they are slow
[11:53:12] <absentia> and if a replica goes down
[11:53:21] <absentia> you can't open any new transactions until it comes back online
[11:53:23] <quazimodo> i cant even imagine a scenario where events fold into a single aggregate and time ordering isn't relevant, unless all the data in all the events for that aggregate are orthogonal
[11:53:51] <absentia> quazimodo: dunno, event sourcing additions/deletions to an unordered set
[11:54:02] <absentia> set union/difference is commutative
[11:54:05] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:54:28] <absentia> not a multi-set either, with repeated membership
[11:54:30] <absentia> plain old set
[11:54:44] <absentia> "principles of eventual consistency"
[11:54:52] <absentia> is a great read if you want to go all the way down into the mathy formalisms
[11:55:05] <absentia> but even if you don't they at least discuss certain kinds of anomalies that can arise
[11:55:11] <absentia> read-after-write violations
[11:55:58] <absentia> in that example where dude & his wife both hit update
[11:56:08] <absentia> is it such a problem to give one and error and make them retry
[11:56:09] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[11:56:12] <quazimodo> absentia: that's true
[11:56:15] <absentia> and is it worth that user inconvenience
[11:56:23] <absentia> to ensure their billing information isn't corrupted or made inconsistent
[11:56:34] <quazimodo> but i'd argue that commutative differences exhibit that orthogonal nature don't they
[11:56:34] <absentia> you start leaving the realm of purely technical questions here
[11:56:45] <absentia> i don't know what you mean by orthogonal in this context
[11:56:51] <quazimodo> btw event sourcing doesn't have to be eventually consistent
[11:57:13] <absentia> no, you could run an event sourcing system in a single process
[11:57:15] <absentia> but why
[11:57:22] <quazimodo> you can do it in postgres and it's immediately consistent & safe/guaranteed as hell, presuming your `apply` or `fold` functionality doesn't have any stochasticity
[11:57:34] <absentia> you can - but then why store the events
[11:57:39] <absentia> unless you have some need for audit trailing
[11:57:43] *** Joins: newwebdev13 (~newwebdev@31.210.55.133)
[11:57:49] <quazimodo> absentia: they're hectic for BI
[11:58:24] <absentia> huh
[11:59:32] <quazimodo> imagine your database is actually postgres, and you store the data relationaly, that's fine & nice. But you can also generate the events out to some store for your BI tools & other departments to use
[11:59:38] <quazimodo> that's what I'm looking at atm
[11:59:56] <absentia> like a reporting system?
[12:00:06] <quazimodo> our order placing/pricing logic is not simple stuff and there's just no way the other consumers of my events could replicate it
[12:00:40] <absentia> i've worked on reporting before, and BI folks would often work off of what were effectively materialized views of the base state in the db schema
[12:00:51] <quazimodo> but if event sourcing concepts are compatible with logic before event creation then this will work for me, I can pump events out to an s3 bucket & then the product/business teams can consume them happily 
[12:01:14] <quazimodo> absentia: yeah I considered creating views in a star schema sort of pattern but it's a but clunky
[12:01:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3)
[12:01:54] <quazimodo> with sensible events then the reporting burden is off my app & DB, in addition the BFF devs can consume events however they like for their caches and stuff
[12:02:04] <quazimodo> in that case we do have eventually consistency between services
[12:02:17] <quazimodo> but the core API and it's pricing & transactions are powered through ACID compliant DB
[12:02:22] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[12:02:54] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[12:02:58] <quazimodo> my ideal scenario is this: my relational db _only_ does ACID compliance and basically no other thinking, or minimal thinking
[12:03:18] <quazimodo> my events are dirt cheap & easy to fold onto each other
[12:03:35] <quazimodo> everyone in the business praises me and I raise my consulting rate by 2x by the end of the year
[12:03:48] <absentia> i think it's usually like that, no? lowish latency, strongly consistent systems for OLTP / transaction processing vs. batch processes with large time delays, eventually consistent with the ACID DB for OLAP / BI and analytics
[12:03:58] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:04:12] <quazimodo> seems like it, though not sure ACID DB for olap
[12:04:25] <quazimodo> maybe in old companies?
[12:04:26] <absentia> I meant the OLAP data stores being eventually consistent with the OLTP ACID stores
[12:04:31] <quazimodo> right
[12:04:32] <quazimodo> yeha
[12:04:32] <absentia> so they could be out of date
[12:04:40] <absentia> but in principle if you stopped production
[12:04:44] <absentia> let the overnight batch processes complete
[12:04:46] <absentia> they would catch up
[12:04:53] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:05:00] <blahboybaz> Ok, so I think I've got it pretty close to nailed down. But I'm stuck on one teensie weensie little issue and I'm not sure what's causing it. I've made a paste and done my best to make things clear (see comments starting on line 57 for a summary). Is anyone more familiar with js and why this might be occuring?
[12:05:05] <blahboybaz> https://onecompiler.com/javascript/3xsrswhgb
[12:05:06] <bayaz> Title: freeCodeCamp Challenge --> Profile Lookup - JavaScript - OneCompiler 
[12:05:07] <quazimodo> well the data warehouse/lake are like ... the most critically important part of most businesses in my opinion
[12:05:31] <quazimodo> so production should be failed but the olap/data warehouse is still going strong
[12:05:48] <absentia> sure, consistency and durability are orthogonal axes
[12:05:51] <quazimodo> in that scenario i think it basically has to be as you described it
[12:06:09] <quazimodo> no!
[12:06:12] <quazimodo> yesish
[12:06:14] <quazimodo> bun noish!
[12:06:25] <absentia> well for example
[12:06:28] <quazimodo> only if availability is not in the equation
[12:06:33] <quazimodo> read about yugabytedb
[12:06:38] <absentia> if you really don't want to lose your data
[12:06:42] <absentia> it's easier if you make a hundred copies of it
[12:06:47] <absentia> but now how do you keep them all in sync
[12:06:51] <quazimodo> you can!
[12:06:53] <absentia> yes
[12:06:56] <quazimodo> as long as you sacrifice availability!
[12:07:04] <absentia> well exactly
[12:07:24] <quazimodo> i call those the devils threesome
[12:07:50] <absentia> all i meant was that it's possible for your data warehouse to be inconsistent with your production DB
[12:08:07] <absentia> but still have perfect data integrity and be usable
[12:08:13] <quazimodo> well imean, i'm reall ytalknig about CAP but i guess partition tolerance & durability are related
[12:08:33] <quazimodo> ok so the conclusion for me was
[12:08:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:09:34] <quazimodo> i'm going to create events with initial params as metadata, so that recalculating can be done purely or as near to purely as realistically possible, but store the calculated, partial final properties of the aggregate as the payload
[12:09:49] <quazimodo> so it'll be easy to fold but also recalculation could be done in the future to correct mistakes & so on
[12:09:53] <absentia> and then the reducer just sticks the final props in the aggregate?
[12:10:09] <absentia> along with whatever incomplete impartial needs to be done
[12:10:14] <absentia> fk i'm getting sleepy
[12:10:22] <absentia> along with doing whatever incomplete computation needs to be done
[12:10:43] <quazimodo> there shouldn't be any, i hope
[12:10:45] <quazimodo> but yeah
[12:10:53] <absentia> makes sense
[12:10:53] <quazimodo> reducer just works as a dumb, fast, easy reducer
[12:10:59] <absentia> if you can keep a timestamp in the initial params
[12:11:04] <absentia> you could also potentially spot ordering violations
[12:11:07] <quazimodo> and i get my 2x pay rise
[12:11:14] <absentia> hookers and blow for everyone
[12:11:15] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[12:11:24] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[12:11:25] <quazimodo> oh the events will 100% be strictly ordered with an incrementing attribute
[12:11:25] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[12:12:13] <quazimodo> basically the computation will know the current event number and when I persist the new event it'l use that number + 1, and if that collides then there's a rollback or failed update & i'll have to handle it
[12:12:28] <quazimodo> probably by responding to consumer with a '422, too late son'
[12:12:33] <quazimodo> or if you're australian like me, too late cunt
[12:12:52] <smallville7123> ok i now have a stack rule :)
[12:13:26] <absentia> "yer too slow, harden the fuck up next time m8"
[12:13:49] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[12:14:01] <quazimodo> blahboybaz: your function makes my brain & eyes hurt
[12:14:13] <quazimodo> not to demoralise you
[12:14:54] <quazimodo> blahboybaz: why are you holding onto the 'i' value against the function like that?
[12:15:49] *** Joins: AlexisTP2 (~AlexisTP3@92.57.44.63)
[12:16:53] <quazimodo> i will always increment because it exists from the very first time the function is executed, and will always increment until it reaches the length of the contacts list where it'll max out & never go down
[12:18:01] <smallville7123> ok i now have a stack rule :)    https://gist.github.com/e172a4725350749c89b9bdaf3c5d8de9
[12:18:02] <bayaz> Title: General.cpp 
[12:18:11] <blahboybaz> quazimodo: Its the only way available to me to keep a counter and it is required to use the recursion approach to the solution
[12:18:15] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 256 seconds)
[12:18:52] <quazimodo> you don't use a counter in recursion
[12:18:54] *** Quits: AlexisTP2 (~AlexisTP3@92.57.44.63) (Client Quit)
[12:19:00] <quazimodo> that's the whole point of recursion
[12:19:06] <blahboybaz> I am only permitted to work between lines 30 and 50 (as seen in the paste)
[12:19:08] *** Joins: AlexisTP2 (~AlexisTP3@92.57.44.63)
[12:19:33] <blahboybaz> I just want the to pass the challenge and move on 
[12:19:39] <blahboybaz> this would work fine 
[12:20:07] <quazimodo> yeah that's not how recursion is supposed to work my man
[12:20:10] <blahboybaz> I dion't know what you call it and I'm not really worried about what you call it just that it would work if I can figure out the little tiny issue going on
[12:20:20] <blahboybaz> I've been at it most of the day already
[12:20:28] <blahboybaz> ok fine
[12:20:41] *** Joins: boom (~boom@117.236.189.106)
[12:20:43] <blahboybaz> its not how recursion works  --so it isn't recursion
[12:20:52] <blahboybaz> I still wish I could just fix it
[12:21:01] <blahboybaz> without changing my approach
[12:21:22] <quazimodo> i don't want to be 'that guy' but i might be forced to be, this approach sucks balls
[12:21:29] <smallville7123> i dont see where `lookUpProfile` is defined
[12:21:37] *** AlexisTP2 is now known as AlexisTP
[12:21:39] <smallville7123> what does `.i` refer to
[12:21:47] <blahboybaz> smallville7123: line 29
[12:21:50] <quazimodo> smallville7123: he's keeping a "global" index i
[12:21:59] <smallville7123> where
[12:22:27] <quazimodo> on the function 
[12:22:47] <smallville7123> ok...
[12:22:50] <blahboybaz> The authors of the challenge do not permit me to work outside the lines so I am limited in what I can do. It is checked by the application. There is no person to talk to nor any flexibility in the requirments
[12:24:04] <blahboybaz> What bothers me is that line 43 executes fine if what is being retreived is the first object -- it is subsequent objects that cause it to fail
[12:24:09] *** Joins: berkhan (~berkhan@31.223.35.232)
[12:25:16] *** Quits: berkhan (~berkhan@31.223.35.232) (Remote host closed the connection)
[12:27:10] <PlanckWalk> blahboybaz: This looks ... weird.
[12:27:35] <PlanckWalk> To the point where I have no idea why you're doing almost any of it.
[12:28:31] <smallville7123> blahboybaz: https://onecompiler.com/javascript/3xsruq4c3 there you go :)
[12:28:32] <bayaz> Title: 3xsruq4c3 - JavaScript - OneCompiler 
[12:28:37] <smallville7123> pretty simple :)
[12:28:43] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[12:28:47] <quazimodo> blahboybaz: https://gist.github.com/siassaj/37ed85bb5b1c57a008b33cd0a442e4f7
[12:28:48] <bayaz> Title: wtf.js 
[12:28:54] <quazimodo> you don't need to work outside the lines
[12:28:57] <PlanckWalk> What why
[12:29:02] <PlanckWalk> Why any of it!?
[12:29:28] <quazimodo> PlanckWalk: he's not permitted to iterate in a normal way using each, map, for, forEach etc
[12:29:33] <quazimodo> must be recursive, fine
[12:29:37] *** Quits: blahboybaz (~blahboyba@c-67-161-96-226.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:29:44] <smallville7123> quazimodo: off ok
[12:30:05] <PlanckWalk> You don't need to do any iteration yourself here.
[12:30:32] <smallville7123> https://onecompiler.com/javascript/3xsrv64cj recursive version :)
[12:30:33] <bayaz> Title: 3xsrv64cj - JavaScript - OneCompiler 
[12:30:55] <smallville7123> blahboybaz ^
[12:31:01] <quazimodo> smallville7123: that's ... not a good recursive version man
[12:31:13] <smallville7123> quazimodo: it work tho :_
[12:31:15] <smallville7123> quazimodo: it work tho :)
[12:31:24] <quazimodo> so many things work but it wont be optimizable
[12:31:35] <quazimodo> it's a bad education, you really need to be using tail call optimization
[12:31:43] <quazimodo> even if JS doesn't really optimize for it
[12:32:07] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Quit: Leaving)
[12:32:26] <PlanckWalk> Is there a link to the exact requirements for doing this?
[12:32:53] <smallville7123> https://onecompiler.com/javascript/3xsrv64cj there, now it does tail recursion
[12:32:54] <PlanckWalk> There was nothing about "don't use any built-in Javascript functions in the freecodecamp link/
[12:32:54] <bayaz> Title: 3xsrv64cj - JavaScript - OneCompiler 
[12:33:21] <smallville7123> https://onecompiler.com/javascript/3xsrvcwhg *
[12:33:22] <bayaz> Title: 3xsrvcwhg - JavaScript - OneCompiler 
[12:33:30] <quazimodo> smallville7123: you're trying to hurt me aren't you
[12:33:41] <quazimodo> you're deliberately trying to hurt me
[12:33:50] <smallville7123> lol
[12:33:54] <PlanckWalk> The whole thing is doable in 2 lines, or maybe 4 for maximum readability.
[12:34:13] <PlanckWalk> (Including the error handling)
[12:34:14] <quazimodo> PlanckWalk: using reduce?
[12:34:31] <quazimodo> reduce isn't recursion
[12:34:34] <PlanckWalk> Using pretty much any of the standard array functions.
[12:34:42] <quazimodo> none of those are recursive!
[12:34:50] <PlanckWalk> Is there a link to the exact requirements for doing this?
[12:34:55] <quazimodo> bro
[12:34:58] <quazimodo> he needs to learn recursion
[12:35:00] <quazimodo> that's the spec
[12:35:03] <PlanckWalk> https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/profile-lookup
[12:35:04] <bayaz> Title: 
[12:35:06] <quazimodo> find the prop, recursively
[12:35:08] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[12:35:08] <PlanckWalk> That's the link I was given.
[12:35:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[12:35:13] <PlanckWalk> There's nothing about recursion in there
[12:35:20] <quazimodo> then he's played me and i'm done
[12:35:27] <PlanckWalk> This is the sort of problem where recursion is dumb.
[12:35:30] <quazimodo> im gonna call a friend & eat beer
[12:35:33] <quazimodo> also agree
[12:35:39] <quazimodo> also recursion is dumb in JS in general
[12:35:57] <PlanckWalk> I mean sure, you can do it and without modifying the contacts list
[12:36:20] <PlanckWalk> Modifying the contacts list is awful because it can lead to wrong results on future calls.
[12:36:45] *** Joins: blahboybaz (~blahboyba@c-67-161-96-226.hsd1.wa.comcast.net)
[12:36:53] <PlanckWalk> lookUpProfile('Akira', 'i')  for example.
[12:37:01] <edgar-rft> there is no future :-)
[12:37:40] <PlanckWalk> Actually as written that would fail immediately.
[12:38:26] <PlanckWalk> Oh wait what.
[12:38:40] <PlanckWalk> Setting properties *on the function*?  Ewwwww.
[12:38:44] <PlanckWalk> This is horrible.
[12:38:57] * PlanckWalk burns the whole thing to the ground.
[12:40:01] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[12:40:23] <PlanckWalk> Just use .find on the array, or pretty much *anything else*
[12:40:52] <PlanckWalk> Anything that isn't some recursion horror that attaches dynamic properties to functions.
[12:40:59] <blahboybaz> I'm just going to go kill myself now
[12:41:01] <blahboybaz> thanks
[12:41:08] <blahboybaz> just kidding  :p
[12:41:26] <ejjfunky> blahboybaz, how is it coming along?
[12:41:32] <PlanckWalk> I mean yes you can do that in Javascript, but really don't.
[12:41:46] <blahboybaz> ejjfunky: Its a horror show
[12:41:55] <blahboybaz> I guess I'm not worthy
[12:41:56] <ejjfunky> what error did you get?
[12:41:58] <blahboybaz> :(
[12:42:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:42:26] <blahboybaz> ejjfunky: https://onecompiler.com/javascript/3xsrswhgb
[12:42:27] <bayaz> Title: freeCodeCamp Challenge --> Profile Lookup - JavaScript - OneCompiler 
[12:42:30] <blahboybaz> That pretty much says it all
[12:42:42] <blahboybaz> see comments at the bottom for a summary
[12:43:23] <blahboybaz> And see here for the original and additional info (including all requirements)
[12:43:26] <blahboybaz> https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/basic-javascript/profile-lookup
[12:43:27] <bayaz> Title: 
[12:43:32] <ejjfunky> blahboybaz, you're overcomplicating it. just think it simple.
[12:46:59] <blahboybaz> Atter spending over 8 hours and multiple failed attempts (multiple different approaches) I got sick of the idea of changing my approach. Didn't even want to ask for help. Then I changed my mind when I finally got it to a point where it seemed like it was just a small hang up left to overcome (in the code) to make it work. Every time I've ever asked for help here the direction people wanted to 
[12:47:05] <blahboybaz> take was to scrap whatever I came with and just hand me some completely different solution. I don't see how I will ever learn anything that way. If no one is willing to step through it with me (to stoop low enough to do that) then I'm basically fucked.
[12:47:33] *** Joins: _inky (inky_@gateway/vpn/protonvpn/inky)
[12:47:50] <PlanckWalk> I mean yes, you've got a way that could be made to work.
[12:47:57] <ejjfunky> just think contacts as an array. what you need to do is just go through the array and find the right values.
[12:48:23] <PlanckWalk> The core is just something like  contacts.find(contact => contact.firstName === name)
[12:48:45] <ejjfunky> but doing something like typeof lookUpProfile.i, is pretty funky
[12:48:56] <ejjfunky> i doubt that's what the training is about though
[12:49:02] <PlanckWalk> I.e. "find the first contact that has firstName property equal to the supplied name"
[12:49:52] *** Joins: Klinda (~superleag@user/klinda)
[12:50:37] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:cc36:2f4e:493f:8ad7) (Ping timeout: 240 seconds)
[12:51:03] <PlanckWalk> That's not an exact solution for this, since it has other requirements, but that's the central core of it.
[12:51:11] <blahboybaz> It's past 1 am here, I'll keep everything that was said here in mind but I'm sure I need to stop for the night. I'm sure I'll figure something out. I appreceiate everyone making the sacrifice to look at that mess and respond
[12:51:15] <blahboybaz> peace
[12:51:26] <ejjfunky> iteration done on lookUpProfile.i < contacts.length? nice. :D
[12:51:49] <blahboybaz> thanks
[12:51:57] <ejjfunky> and recursion, wow. it's a good experience if you can make this work though\
[12:52:02] *** Quits: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[12:52:03] <ejjfunky> but you can do it simpler
[12:52:18] <blahboybaz> It jsut feels like I'm so close
[12:52:38] <blahboybaz> I just don't want to 'copy' the video - that is hugely demoralizing to do that
[12:52:48] <blahboybaz> I need it to be my soln
[12:52:51] <ejjfunky> i did it simpler than this. but if you want to do it this way, is definitely much harder.
[12:53:10] *** Joins: ccat (~Administr@113.25.19.166)
[12:54:09] <PlanckWalk> Note that if you attach a property to the function like this, it lasts for the life of the program.
[12:54:33] <ejjfunky> blahboybaz, my recommendation is, do it the simple way and map it to this and see where you missed
[12:54:35] *** Joins: plastico (~plastico@neomutt/plastico)
[12:54:49] <blahboybaz> PlanckWalk: Yes but the program terminates execution as soon as its job is done anyway
[12:55:52] <blahboybaz> ejjfunky: I'll have to learn about that (mapping to this). I am familiar with the this keyword (a little bit) but it is something I would have to look into before I could get into it.
[12:57:43] <ejjfunky> I mean, solve it the easy way so you know how it can be solved. then apply what you know and do it recursively
[12:57:53] *** Joins: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr)
[12:58:20] <PlanckWalk> blahboybaz: The main problem is what happens when the stack unwinds
[12:58:58] <PlanckWalk> In the 2nd nested call you find the right contact, and return the property... what does the 1st nested call do with the result?
[12:59:27] <ejjfunky> ok, i found a fix. it only needs one fix to get this to work.
[12:59:27] <blahboybaz> PlanckWalk: I don't know why but somehow what you said made me think that if I saved line 43 to a variable then returned the value of the variable it would fix my code
[12:59:41] <blahboybaz> ejjfunky: yeah?
[13:00:18] <ejjfunky> yea. the clue is in the recursion. it took me a while to learn this "trick" but when you found it, you won't miss again.
[13:00:54] <ejjfunky> just look through the code again and re-read about recursion. you'll find it
[13:01:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:01:33] <blahboybaz> ok
[13:03:05] <blahboybaz> PlanckWalk: I don't know if I'm understanding you right but what it feels like is that the information (the property or its value) once it is found because it is somehow no longer on the stack. That's why I thought saving to a variable as in intermediate step would do something for me. 
[13:03:37] <PlanckWalk> It doesn't really need to be saved to a variable as such, but it does need to be returned from the higher-level calls
[13:03:52] <PlanckWalk> You return it from the bottom-level call, but then it gets thrown away
[13:04:17] <PlanckWalk> (line 47)
[13:04:41] *** Quits: RedNifre (~michael@dslb-002-206-109-122.002.206.pools.vodafone-ip.de) (Quit: WeeChat 2.8)
[13:05:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:24c9:9806:a7c5:e5c3) (Ping timeout: 260 seconds)
[13:05:14] <blahboybaz> PlanckWalk: So by "it" you mean the function call?
[13:05:22] <PlanckWalk> The result of the bottom call
[13:05:29] <blahboybaz> I mean when you are saying "return it"
[13:05:46] <PlanckWalk> The property value you return at line 43 is thrown away immediately in line 47
[13:06:13] <PlanckWalk> ... unless it found the right contact immediately and didn't recurse
[13:06:14] <blahboybaz> So the fact that the function call comes after the line getting the property and returning it is the problem (ie: wrong order of execution)?
[13:06:30] <blahboybaz> I think I'm catching on
[13:06:41] <PlanckWalk> No, it's the fact that line 47 calls lookUpProfile, and throws away the returned result
[13:07:21] <PlanckWalk> It doesn't assign it to anything or return it upward
[13:07:25] *** Quits: b1tr0t (~bitrot@149.167.135.129) (Read error: Connection reset by peer)
[13:07:41] *** Joins: caramel_ (~caramel@user/caramel)
[13:07:53] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 256 seconds)
[13:08:04] <blahboybaz> PlanckWalk: I really don't mean to be so dense but I'm not sure what you are describing. I'm going to look at the code for a minute
[13:10:43] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:10:58] <blahboybaz> PlanckWalk: How coulld the result of line 43 get thrown away since the data it is accessing lies outside the scope of the function?
[13:11:10] <blahboybaz> Namely the contacts array
[13:11:33] <PlanckWalk> Well, let's think about the top-level call
[13:11:51] <ejjfunky> blahboybaz, think of recursion like an onion. the more you recurse, the deeper you go.
[13:12:14] <ejjfunky> so when you hit jackpot, you have to go through all the layers you passed through to get to the surface
[13:12:26] <PlanckWalk> You set i=0, notice that the first record doesn't match, do a recursive call (at line 47), and then what do you do with the result?
[13:12:29] <blahboybaz> oh shit
[13:12:47] <blahboybaz> I 
[13:12:56] <blahboybaz> I better not think I understand
[13:13:15] <rindolf> ejjfunky: sup?
[13:13:22] <ejjfunky> hi rindolf.
[13:14:21] <PlanckWalk> (afk)
[13:14:43] <rindolf> ejjfunky: que tal?
[13:14:45] <blahboybaz> I think, well I thought, that what is going on on the stack (with recursion) is that the result of each function execution is being stored in a space in memory .. and then something about a pointer and that pointer moving along each space on the stack till it gets to the last one - which is naturally the anser you were needing since that's where the recursion stopped
[13:15:21] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[13:15:26] <blahboybaz> anser\answer
[13:15:38] <ejjfunky> blahboybaz. exactly. you just need to return that answer back to the caller.
[13:16:16] <blahboybaz> ejjfunky:  but with recursion the caller is ... hmmm ... the this keyword?
[13:16:17] *** Quits: caramel_ (~caramel@user/caramel) (Ping timeout: 240 seconds)
[13:16:25] <blahboybaz> it calls itself is what I'm saying
[13:16:36] *** Joins: caramel (~caramel@user/caramel)
[13:16:56] <ejjfunky> yes it a chain of functions that returns a string one after the other. you just need to pass along the string up.
[13:17:36] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92)
[13:17:49] <blahboybaz> I don't know how to do that
[13:18:10] <ejjfunky> the answer is there. just look for it.
[13:18:31] <blahboybaz> I feel really stupid. I mean I think I sort of grasp what the concept is - a little. But the application of that is another story
[13:18:42] <ejjfunky> just think of the function as linking to each other, and they form a conveyor belt to the surface.
[13:18:56] <blahboybaz> ok lemme look at it
[13:19:29] <ejjfunky> good lesson to learn recursion. took me awhile to get it too. but once you get a hang of it. you'll be able to do recursion easier after.
[13:20:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[13:21:09] *** Joins: cssguy (~cssguy@pool-138.248.176.62.dynamic.wobline-ip.de)
[13:21:51] <ejjfunky> blahboybaz, one way to find it is to work it out step by step.
[13:21:56] *** Quits: cssguy (~cssguy@pool-138.248.176.62.dynamic.wobline-ip.de) (Remote host closed the connection)
[13:21:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:22:18] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92) (Ping timeout: 260 seconds)
[13:22:25] <ejjfunky> first the entry, then it goes into a recursion, then what, until, you get to the point where you found the answer.
[13:23:47] *** Joins: trace (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[13:25:19] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[13:25:29] <blahboybaz> What do you mean by entry you mean the beginning of the function execution or the begining of the function definition?
[13:25:48] <blahboybaz> or entry as in the data in the array?
[13:26:11] <ejjfunky> yea, starting from the beginning where you did lookUpProfile.i == 'undefined'
[13:26:14] <ejjfunky> that's your entry
[13:26:42] <blahboybaz> I'm looking...
[13:26:56] <ejjfunky> so your recursion is when lookUpProfile.i != 'undefined'
[13:27:11] <ejjfunky> you could a console.log to mark it
[13:27:42] <blahboybaz> I'm looking...
[13:28:21] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:31:46] <ejjfunky> actually you've marked it by doing Get Initialized. that's the entry point
[13:32:00] <ejjfunky> then all you just need to do is follow the if else statement until you get to the answer
[13:32:39] <blahboybaz> Yes but its also based on whether the answer has been found or not.. recursion does not happen unless the answer has NOT been found and it enters the else if block where the function is called again. So I guess what I'm thinking is only one of those two conditional blocks can be executed per function call. Either the answer is found and the if block executes or the answer is not found and the 
[13:32:45] <blahboybaz> else if block is executed (one or the other but not both). The last thing that happens is not the last call to the function but something after that... the last thing that happens is entering the if block because the answer is found.. it is specifically the line of code inside that if block that is not working. 
[13:32:55] <blahboybaz> And I think it is executing but is failing in the execution
[13:33:30] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:33:37] *** Joins: hexingb (~hexingb@103.37.140.37)
[13:33:40] <ejjfunky> here's the clue. answer found at happy block. but it needs to return the answer to the surface.
[13:34:08] <inhahe_> maybe you should study some simple recursive code and see how results are passed up the chain
[13:34:24] <ejjfunky> you got happy path block at the end but to get there, you've passed through several Recursion Block
[13:34:49] <ejjfunky> that Recursion Block needs to return it to the original caller at the surface
[13:34:51] <blahboybaz> The fact that line 42 executes shows that the if block is being entered and the only way that can happen is for the correct match to have been found (the conditions of the if block are met). It is the code in the if block that doesn't work
[13:35:45] <pyzozord> Recursion is simply when function calls itself
[13:35:50] <ejjfunky> so, think it this way. if the recursion calls directly to happy block, it'll work.
[13:35:59] <pyzozord> It's a different way to do loopa
[13:36:03] <ejjfunky> but on this case, has gone through several recursion blocks
[13:36:22] <blahboybaz> ejjfunky: Are you suggesting that the function executes kind of backwards? Like it stores the function calls but does not actually execute the first call until after it reaches the end then it basically 'pulls the trigger' and executes all the calls one after another?
[13:36:29] <ejjfunky> so happy block returns to the first level of recursion block
[13:36:31] <ejjfunky> and stops
[13:37:03] <ejjfunky> so each recursion block that had gone through needs to return it to the surface for you to get an answer
[13:37:12] *** Quits: hexingb (~hexingb@103.37.140.37) (Read error: Connection reset by peer)
[13:37:32] <pyzozord> Recursive calls go all the way down and then back up as each function ends and returns to parent
[13:37:42] <ejjfunky> it gets executed but they are layered each one inside the other
[13:37:52] <pyzozord> If you do recursive call in the last line of the function then nothing happens on the way back up
[13:38:28] <blahboybaz> hmm
[13:38:29] <blahboybaz> ok
[13:38:34] <pyzozord> It's like inverse piramide it always goes one way and then other way
[13:38:51] <pyzozord> Except if you don't do anything in one way it will be almost flat wall
[13:38:58] <ejjfunky> the same way it gets in, it's how it gets out
[13:38:59] *** Joins: thevishy (~Nishant@2405:201:f005:c007:e0f1:5635:e895:47c6)
[13:39:01] <pyzozord> (tiny cost of calling)
[13:39:34] <pyzozord> It's a very simple concept
[13:39:51] <pyzozord> Write done a recursive function on a piece of paper and step through it
[13:39:58] <ejjfunky> yea, it's just a way of thinking. once you get it, you get it.
[13:40:29] <pyzozord> You will see it really is just normal function rules inside normal function rules inside ...
[13:40:33] <ejjfunky> pyzozord, exactly. it's like mining, how deep you go in, is how deep you need to get out.
[13:40:46] <blahboybaz> I think you are right.  I would benefit from studying how recursion works under the hood
[13:41:00] <pyzozord> No no not under the hood
[13:41:03] <blahboybaz> I can't stay up any longer tho.. my brain is mush
[13:41:04] *** Joins: hexingb (~hexingb@103.37.140.37)
[13:41:05] *** Quits: dffo^ (~dffo@128-092-182-020.biz.spectrum.com) (Remote host closed the connection)
[13:41:06] <pyzozord> Conceptually
[13:41:08] <ejjfunky> except for a recursion with a return, you already have the conveyor belt.
[13:41:15] <blahboybaz> ok
[13:41:39] <pyzozord> Best experiment with examples and ask concrete questions
[13:41:41] <pyzozord> Gnight
[13:41:41] <blahboybaz> I love you guys really but I'll have to be back tomorrow
[13:41:47] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:352b:28ab:3326:ca8c)
[13:41:47] <blahboybaz> my eyes are closing
[13:41:54] <blahboybaz> :)
[13:41:56] *** Quits: hexingb (~hexingb@103.37.140.37) (Read error: Connection reset by peer)
[13:41:56] <ejjfunky> ok blahboybaz, get a good rest. tomorrow this will be much easier.
[13:42:03] <blahboybaz> ty
[13:42:14] <ejjfunky> yw
[13:43:45] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:43:45] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:43:45] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:44:20] <absentia> data [a] = [] | a : [a]
[13:44:25] <absentia> length [] = 0
[13:44:44] <absentia> length (x : rest) = 1 + (length rest)
[13:44:59] <absentia> on this you must meditate
[13:45:01] *** Quits: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net) (Ping timeout: 240 seconds)
[13:45:06] <absentia> one day, and one night
[13:48:09] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[13:48:17] <pyzozord> absentia: doesn't this make [[], [[], a], [[[], a], a], [[[[], a], a], ...]?
[13:48:39] <absentia> pyzozord: 1 : (2 : (3 : (4 : [])))
[13:48:59] <pyzozord> close enough
[13:49:12] <pyzozord> got confused about few haskell idiosyncracies
[13:50:39] <ejjfunky> given the same problem, do you do recursive in haskell?
[13:50:46] <ejjfunky> how do*
[13:50:50] <GeDaMo> That is recursive
[13:50:51] <absentia> that's it
[13:51:05] <absentia> the data statement tells you how to build lists of a's (a is anything)
[13:51:20] <absentia> then there are two lines to implement getting the length of any list recursively
[13:51:38] *** Joins: hexingb (~hexingb@101.236.65.144)
[13:51:47] *** Quits: hexingb (~hexingb@101.236.65.144) (Read error: Connection reset by peer)
[13:52:10] <ejjfunky> what's with the   | a : [a]
[13:52:15] <absentia> lists are either
[13:52:17] <absentia> empty
[13:52:24] <absentia> or something joined (:) to a list
[13:52:26] <ejjfunky> empty if not, a: [a]?
[13:52:31] <absentia> ya
[13:52:38] <ejjfunky> ok
[13:53:03] <GeDaMo> | separates alternatives
[13:53:19] <GeDaMo> One alternative is [] the other is a:[a]
[13:53:59] <ejjfunky> say, a is json data. now how do you recurse to get to the right json?
[13:54:11] *** Quits: Guest72 (~Guest72@2401:4900:1f3d:5532:e32f:b40b:5bd7:b69c) (Quit: Client closed)
[13:54:31] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:54:55] <absentia> forget json
[13:54:58] <absentia> too complicated
[13:55:01] <absentia> let's just talk about lists
[13:55:05] <absentia> and forget a
[13:55:10] <absentia> let's just talk about lists of numbers
[13:55:16] <absentia> [number] = [] | number : [number]
[13:55:35] <ejjfunky> ok, say list is [1,2,3,4,5]
[13:55:41] <absentia> go walk through `length`
[13:55:43] <ejjfunky> i need to see if 3 exists
[13:56:07] <absentia> (1 : (2 : (3 : (4 : (5 : [])))))
[13:56:13] *** Joins: hexingb (~hexingb@2409:8900:2700:603:80df:f215:fd2b:151a)
[13:56:26] <GeDaMo> if3 [] = false
[13:56:26] <GeDaMo> if3 x:xs = if x == 3 the true else (if3 xs)
[13:56:44] <GeDaMo> That syntax may not be entirely accurate :P
[13:56:45] <ejjfunky> any better way to do this, i mean, if n = 10000, i wont be typing all those ( and :
[13:56:45] *** Quits: hexingb (~hexingb@2409:8900:2700:603:80df:f215:fd2b:151a) (Read error: Connection reset by peer)
[13:56:56] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[13:56:57] <absentia> [0 .. 10000]
[13:57:02] <absentia> but this is just shorthand
[13:57:04] <GeDaMo> filter (==3) xs
[13:57:07] <absentia> forget syntax, the idea is important
[13:57:12] <ejjfunky> right, if [0 .. 10000] 
[13:57:21] <ejjfunky> how do we get to 3 is there
[13:57:36] <ejjfunky> or 3000
[13:57:42] <GeDaMo> ejjfunky: my if3 function above
[13:58:09] <absentia> if3 (1 : (2 : (3 : (4 : ... ) = if 1 == 3 then true else (if3 (2 : (3 : (4 : ... ))
[13:58:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[13:58:39] <absentia> if3 (1 : (2 : (3 : (4 : ... ) = (if3 (2 : (3 : (4 : ... ))
[13:58:41] <ejjfunky> i take is xs = [1 .. 10000] here
[13:58:45] <GeDaMo> Yes
[13:58:46] <ejjfunky> so what you do x:xs?
[13:59:08] <absentia> (if3 (2 : (3 : (4 : ... ) = if 2 == 3 then true else (if3 (3 : (4 : ... )))
[13:59:12] <GeDaMo> x:xs on the left side means break the list into first element (x) and rest of the elements (xs)
[13:59:25] <absentia> (if3 (2 : (3 : (4 : ... ) = (if3 (3 : (4 : ... ))
[13:59:46] <absentia> (if3 (3 : (4 : ... )) = if 3 == 3 then true else (if3 (4 : (5 : (6 : ... ))))
[13:59:59] <absentia> (if3 (3 : (4 : ... )) = true
[14:00:14] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:00:28] <absentia> true
[14:00:33] <absentia> qed motherfucker
[14:00:34] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[14:01:03] *** Joins: hexingb (~hexingb@2409:8900:2700:603:80df:f215:fd2b:151a)
[14:01:05] *** Quits: trace (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[14:01:13] <GeDaMo> let if3 [] = False; if3 (x:xs) = if x == 3 then True else if3 xs in if3 [1..10000]
[14:01:17] <GeDaMo> That actually works
[14:01:27] <GeDaMo> I was close :P
[14:01:41] *** Joins: dsrt^ (~dsrt@128-092-182-020.biz.spectrum.com)
[14:01:52] <ejjfunky> GeDaMo, thanks. that works.
[14:02:54] *** Quits: hexingb (~hexingb@2409:8900:2700:603:80df:f215:fd2b:151a) (Read error: Connection reset by peer)
[14:03:27] <ejjfunky> why do you need if3 [] = False; can i just do (x:xs)?
[14:04:20] <jollygood2> find3 = foldr (\x acc -> if x == 3 then True else acc) False
[14:04:26] <GeDaMo> That's for when you reach the end of the list without encoutnering a 3
[14:04:58] <absentia> `find3 = any (== 3)`
[14:05:04] <absentia> do i win
[14:06:15] <jollygood2> no! :). that goes against the spirit of the competition, ie implementing it yourself
[14:07:01] <jollygood2> but if we are going for brevity..
[14:07:18] <jollygood2> find3 = elem 3
[14:11:16] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[14:12:00] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[14:14:55] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[14:15:54] <pyzozord> ok some exercise and some O₂ and my brain can still function
[14:16:08] <pyzozord> but I am like chronically sleepy
[14:16:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[14:16:27] <pyzozord> I don't feel tired but I feel I could go to sleep at any moment if I wanted
[14:16:58] <pyzozord> the things we have to do to program..
[14:20:13] <pyzozord> kinda killed the buzz sorry, carry on :P
[14:20:46] <vysn> being able to sleep at will sounds like a blessing. 
[14:21:30] <pyzozord> yeah but you yawn a lot
[14:21:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:21:47] *** Joins: mickey8 (~user@user/mickey)
[14:23:57] *** Quits: boom (~boom@117.236.189.106) (Ping timeout: 240 seconds)
[14:24:38] <GeDaMo> https://github.com/netxs-group/vtm
[14:24:39] <bayaz> Title: GitHub - netxs-group/vtm: Terminal multiplexer with window manager and session sharing 
[14:25:22] <ejjfunky> ok, im getting it now. haskell, create template and use it after.
[14:25:56] <ejjfunky> find3000 f [] = False
[14:26:10] <GeDaMo> What does f represent?
[14:27:07] <ejjfunky> find3000 f (x:xs) | f == x = True | otherwise = find3000 f xs
[14:27:08] <ejjfunky> foo
[14:27:28] <GeDaMo> Right, then you can specify the value to find
[14:27:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:28:27] <ejjfunky> GeDaMo, well, it's definitely different.
[14:29:16] <jollygood2> I'm still not sure what f is
[14:29:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:29:40] <jollygood2> perhaps you wanted to write any function absentia used above, any f xs, where f is a predicate
[14:31:06] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[14:31:22] *** Joins: wauda (~seb@124-168-3-160.tpgi.com.au)
[14:31:40] <GeDaMo> No f is just a value to compare to each element
[14:31:53] *** Joins: tec (~quassel@gate.sixtopia.net)
[14:33:47] *** Joins: edun (~qbt@user/edun)
[14:33:50] *** Parts: edun (~qbt@user/edun) ()
[14:33:55] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[14:34:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[14:35:34] *** Joins: mrig (~mrig@user/mrig)
[14:35:56] *** Quits: blahboybaz (~blahboyba@c-67-161-96-226.hsd1.wa.comcast.net) (Quit: Lost terminal)
[14:36:19] <GeDaMo> ejjfunky: you could also write find3000 _ [] = False
[14:36:41] <GeDaMo> _ means there's a parameter passed here but I'm not going to use it so it doesn't need a name
[14:36:59] *** Joins: hexingb (~hexingb@103.37.140.23)
[14:38:02] <ejjfunky> yea, got it
[14:39:59] <ejjfunky> don't get it on the second line otherwise = find n xs
[14:40:22] <jollygood2> another way of writing it:
[14:40:25] <jollygood2> find3000 x = or . map (==x)
[14:42:09] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Excess Flood)
[14:43:14] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[14:44:48] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[14:45:22] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[14:45:58] *** Joins: usr123 (~usr123@124.253.244.40)
[14:46:12] <DnzAtWrk> I'd like to choose a new safer website builder than wordpress
[14:46:21] <GeDaMo> vi? :P
[14:46:23] <DnzAtWrk> is squarespace good, or are there even better completely managed solutions
[14:46:35] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[14:46:41] <DnzAtWrk> forget it, no more bloody servers
[14:47:23] <ejjfunky> how about squarespace
[14:47:58] <DnzAtWrk> is wix good?
[14:48:08] <DnzAtWrk> I've read some people suggest wix over squarespace
[14:48:25] <ejjfunky> yea, or wix.
[14:48:38] <ejjfunky> i never tried them. always did it my own.
[14:49:13] <DnzAtWrk> I want something which is 100% secure
[14:49:22] <DnzAtWrk> which I can recommend to tech illiterate people and not risk anything
[14:50:26] <DnzAtWrk> weebly is apparently another one
[14:50:47] <usr123> I'm trying to implement ABAC on the same lines as AWS does it (using tags). My problem is I'm unable to model my solution/think how amazon would have implemented it. If I have users and groups and resources (softwares in a marketplace), how do I implement tags on top of everyone of them?
[14:51:13] <usr123> Dumbing it down, Not sure if having a tags column on every table (user, groups etc) is the way to go.
[14:51:16] <DnzAtWrk> didn't know the irc protocol supported typing
[14:51:31] <DnzAtWrk> I can see that usr123 is typing
[14:51:50] <GeDaMo> I can't, it may be client specific
[14:52:11] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[14:52:19] <ejjfunky> 100% secure. uhh... i dont know about this one.
[14:52:26] <usr123> I also need to implement a way to tie the policies to the tags and resources and groups. Not sure how AWS would've implemented that, is there an open source implementation that I can refer?
[14:52:31] <DnzAtWrk> is squarespace not secure?
[14:52:56] <DnzAtWrk> "Squarespace is curated and design-y while Wix is occasionally chaotic but allows for a lot of freedom to customize."
[14:52:58] <ejjfunky> secure to a certain extent. but i dont think there's a solution that's 100% secure
[14:52:59] <DnzAtWrk> sounds like I want squarespace
[14:53:03] <ejjfunky> there's always a flaw
[14:53:17] <DnzAtWrk> yes, but I assume that all the software squarespace run at is curated
[14:53:19] <DnzAtWrk> as opposed to wordpress
[14:53:40] <DnzAtWrk> there isn't like a billion insecure plugins for squarespace, is there?
[14:54:36] <ejjfunky> dunno about that.
[14:54:49] <DnzAtWrk> https://support.squarespace.com/hc/en-us/articles/360000851908-GDPR-and-Squarespace
[14:54:50] <bayaz> Title: GDPR and Squarespace ? Squarespace Help Center 
[14:54:56] <DnzAtWrk> it sounds like they have that under control too
[14:56:00] <DnzAtWrk> I don't know, give me a reason to not suggest squarespace for a business
[14:56:37] <ejjfunky> dunno dnz. since i've never used them. you should ask the others.
[14:57:36] <DnzAtWrk> does anyone have a reason why squarespace sucks?
[14:57:41] <DnzAtWrk> the same way wordpress sucks
[14:58:27] <maxzor_> In one debug session, can I step through two different libraries that have been compiled one by gcc, the other by clang?
[14:59:35] <ejjfunky> maxzor_, you should be able to, depending your your debugging tool.
[14:59:38] <GeDaMo> If it's machine code, it shouldn't matter what it was generated by
[14:59:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:00:19] <maxzor_> thank you
[15:00:20] <fweht> meh, i got to the google foobar screen yesterday (after googling a total noob question about c++) but then i couldnt go further, guess because of cookie autodelete :/
[15:00:56] *** Quits: newwebdev13 (~newwebdev@31.210.55.133) (Read error: Connection reset by peer)
[15:01:06] *** Joins: eXtr3m0 (~eXtr3m0@p4fd3ac0f.dip0.t-ipconnect.de)
[15:01:43] *** Joins: newwebdev13 (~newwebdev@31.210.55.133)
[15:02:05] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[15:02:52] *** Joins: mrig (~mrig@user/mrig)
[15:03:25] *** Quits: fingercomp (fingercomp@fomalhaut.me) (Quit: .)
[15:03:53] <duuude> Electron developers eat babies
[15:04:28] <ejjfunky> whose babies?
[15:04:53] <duuude> Ask themselves
[15:04:56] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[15:06:05] <ejjfunky> the babies?
[15:06:19] <DnzAtWrk> jesus
[15:06:23] <DnzAtWrk> squarespace is that expensive huh
[15:06:33] <ejjfunky> dunno. how much?
[15:06:38] <DnzAtWrk> 11 euro a month
[15:06:41] <DnzAtWrk> one site
[15:07:37] <ejjfunky> yea, that's expensive.
[15:07:46] <DnzAtWrk> weebly seems free for a small site
[15:07:48] <DnzAtWrk> hmm
[15:08:30] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[15:08:34] *** Joins: swp (~Thunderbi@143.176.249.0)
[15:09:20] <duuude> they probably eat orphan babies
[15:09:22] *** Quits: sheb_ (~sheb@31.223.228.71) (Quit: Leaving)
[15:09:32] <DnzAtWrk> weebly is also completely managed right? You don't actually mess around with any code
[15:09:37] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[15:11:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[15:16:42] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[15:19:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92)
[15:19:58] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[15:23:42] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:23:48] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Quit: Client closed)
[15:23:53] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92) (Ping timeout: 256 seconds)
[15:24:21] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[15:24:56] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:26:18] <voidiov> hi
[15:27:08] <GeDaMo> Hi voidiov :)
[15:28:16] <voidiov> :) I'm new to IRC, glad to see it's active
[15:28:37] *** Quits: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se) (Ping timeout: 250 seconds)
[15:28:38] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:29:51] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Quit: WeeChat 3.4)
[15:30:22] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[15:30:56] *** Quits: hexingb (~hexingb@103.37.140.23) (Read error: Connection reset by peer)
[15:31:11] <GeDaMo> Activity depends on channel / time of day / who's on etc.
[15:32:11] <epony> prepare your iterators for inspection
[15:33:10] <absentia> keep all limbs within the phone booth at all times
[15:33:13] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:33:16] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:33:21] <absentia> present medical waivers to the ops if asked
[15:33:41] <Jck_true> How did Microsoft manage to make Word slow and laggy.... 
[15:34:11] <GeDaMo> Practice and dedication! :P
[15:34:11] *** Joins: simple_ (~simple@vps-8f5ce3ac.vps.ovh.net)
[15:34:12] <epony> they failed to adopt 64bits
[15:34:27] <epony> so their Wording stayed in the 32bit epoch
[15:34:33] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[15:34:35] <pyzozord> years of hard work
[15:34:43] <absentia> i am of the opinion that one failure is a disgrace
[15:34:46] <epony> they also did stupid things with binary conversions and bad design choices
[15:34:47] <absentia> that two failures form a startup
[15:34:48] *** Joins: hexingb (~hexingb@103.37.140.37)
[15:34:52] <absentia> and that three or more failures make a tech firm
[15:35:00] <epony> and in the end did a bit of theming and careful slowdown changes
[15:35:00] <Jck_true> Like I have an 18page document. And I'm able to type 4-5 characters ahead of what is displayed...
[15:35:08] <pyzozord> also there is some law that project complexity always grows to fill all available time
[15:35:20] <epony> then after 5 years, they introduced their online office shit that worked better
[15:35:27] *** Joins: Iarfen (~quassel@181.43.56.115)
[15:35:32] <epony> and spammed you viruses and malware so you got all infectored
[15:35:33] *** Joins: k3nn7 (~k3nn7@89-64-42-67.dynamic.chello.pl)
[15:35:48] <absentia> cancel or allow
[15:36:48] <epony> no, really it was stupid slow after Office 2000, later releases made no sense whatsoever
[15:36:48] <simple_> allow
[15:37:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:38:21] <epony> people usin a Unix-like system need not care much about those problems, even if they service WIN/DOS shops
[15:38:21] <GeDaMo> pyzozord: https://en.wikipedia.org/wiki/Ninety%E2%80%93ninety_rule
[15:38:22] <bayaz> Title: Ninety?ninety rule - Wikipedia 
[15:38:25] <absentia> protonvpn has a hostmask prefix on libera?
[15:39:00] <absentia> s/mask/cloak
[15:39:02] *** Quits: hexingb (~hexingb@103.37.140.37) (Ping timeout: 250 seconds)
[15:39:07] <absentia> hostmask cloak?
[15:39:07] <epony> "vpn"
[15:39:22] <absentia> epony: yeah but why isn't it just an IP or hostname
[15:39:29] <epony> virtual public notwork
[15:39:33] <absentia> lol
[15:39:42] <epony> "vitrial"
[15:40:09] <absentia> if your isp is a piece of shit
[15:40:11] <absentia> vpns are nice
[15:40:47] <epony> it's probably cheaper and more reliable to get a 3-5 USD/EUR monthly VPS lease
[15:41:15] <epony> or use tor and other options that come "as is" but also free
[15:41:19] <absentia> you have to include bandwidth costs
[15:41:41] <absentia> for web browsing sure
[15:41:43] <epony> like flat 250 Mbps.. included is the typical on Internet server leases
[15:41:48] <absentia> streaming netflix or 8k porn?
[15:41:49] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:41:58] <epony> unmetered / capped at 100 or 250 Mbps
[15:42:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:42:08] <epony> forget it, there are torrents
[15:42:15] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[15:42:17] <epony> streaming is for live events
[15:42:18] <absentia> only pirates use those
[15:42:23] <absentia> you wouldn't download a bear
[15:42:26] <epony> you're a hohoho pirate
[15:42:34] <absentia> don't you forget it
[15:42:58] <epony> piracy exists even in high income countries
[15:43:03] <epony> (dominates)
[15:43:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:43:17] *** Joins: pulse (~pulse@user/pulse)
[15:43:32] <epony> and people register for promos and then cancel them too, even in the richest countries in the world
[15:43:39] <epony> because subscriptions are not a fair deal
[15:43:43] <epony> people know it
[15:44:08] <absentia> i am reporting you to fbi
[15:44:19] <absentia> yes officer this channel here
[15:44:55] <absentia> the internet police have been dispatched
[15:45:19] <smallville7123> https://gist.github.com/168c4b17dd814fd977a2db88af5d9f5f i dont know how to correctly do this ;-;
[15:45:20] <bayaz> Title: main.cpp 
[15:45:23] * epony renames absentia to presentia
[15:45:50] <absentia> presence here implies absence elsewhere
[15:46:08] *** Quits: simple_ (~simple@vps-8f5ce3ac.vps.ovh.net) (Quit: Leaving)
[15:46:47] *** Quits: usr123 (~usr123@124.253.244.40) (Ping timeout: 256 seconds)
[15:48:16] *** Quits: zwr (~zwr@2804:d45:b966:fb00:af27:6e8f:df74:3523) (Ping timeout: 245 seconds)
[15:49:18] *** Joins: zwr (~zwr@2804:d45:b966:fb00:be03:2bc0:ec84:6a34)
[15:50:59] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:13] *** Quits: wauda (~seb@124-168-3-160.tpgi.com.au) (Ping timeout: 240 seconds)
[15:52:48] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[15:52:52] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[15:53:36] *** Joins: voidiov_ (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[15:55:34] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Quit: WeeChat 3.4)
[15:55:48] *** Quits: voidiov_ (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Client Quit)
[15:56:05] *** Quits: k3nn7 (~k3nn7@89-64-42-67.dynamic.chello.pl) (Remote host closed the connection)
[15:56:22] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92)
[15:56:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[15:56:46] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[15:56:48] *** Joins: xkuru (~xkuru@user/xkuru)
[15:56:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:57:05] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[15:59:04] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:01:10] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[16:01:35] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92) (Ping timeout: 268 seconds)
[16:03:12] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[16:04:03] *** Joins: Leone (~Leo@108.175.224.215)
[16:05:11] *** Joins: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279)
[16:05:45] *** Joins: oakyy (~oaky@2001:6b0:1:1041:99a4:164:e463:f322)
[16:07:06] <pyzozord> I always read abstinentia :P
[16:08:13] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:09:45] <homura> guten morgen
[16:10:00] <homura> incontinentia buttocks
[16:11:33] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[16:11:50] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:15:56] <jelly> dem 'entia
[16:16:08] *** Quits: pizdets (~pizdets@183.182.114.157) (Read error: Connection reset by peer)
[16:16:18] <absentia> jelly: my mind is too advanced for lesser mortals to understand
[16:16:21] *** Joins: pizdets (~pizdets@183.182.114.157)
[16:17:08] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[16:17:22] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:18:22] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[16:19:07] <pyzozord> galaxy-absentia
[16:19:21] *** Quits: tesuji (~quassel@2a02:908:180:9500:7dfb:8bc4:47fe:281d) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:19:44] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:20:02] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:21:13] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[16:21:42] *** Joins: Twipply (~Twipply@user/twipply)
[16:22:29] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[16:24:05] <pyzozord> GeDaMo: oh didn't see that message
[16:24:16] <GeDaMo> Which one? :|
[16:24:25] <pyzozord> https://en.wikipedia.org/wiki/Ninety%E2%80%93ninety_rule
[16:24:25] <bayaz> Title: Ninety?ninety rule - Wikipedia 
[16:24:26] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[16:24:30] <GeDaMo> Ah
[16:24:44] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Client Quit)
[16:24:50] <pyzozord> That's a good one, but I think I meant some other one something with "fill all available time" or something like that
[16:25:14] <GeDaMo> https://en.wikipedia.org/wiki/Parkinson%27s_law
[16:25:14] <bayaz> Title: Parkinson's law - Wikipedia 
[16:25:48] <pyzozord> yes!
[16:25:50] <pyzozord> that one
[16:26:32] <pyzozord> I think it also applies to throwing human resources at a problem
[16:27:11] <pyzozord> I'd say that "the problem expands so as to fill all expertese and time available in the team"
[16:27:37] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:29d8:9860:7a6d:9ba2)
[16:28:06] <GeDaMo> I think the "throwing human resources at a problem" thing comes from https://en.wikipedia.org/wiki/No_Silver_Bullet
[16:28:06] <bayaz> Title: No Silver Bullet - Wikipedia 
[16:28:09] *** Quits: absc (~absc@81.31.144.28) (Ping timeout: 256 seconds)
[16:28:51] <GeDaMo> Or maybe https://en.wikipedia.org/wiki/The_Mythical_Man-Month "He had added more programmers  to a project falling behind schedule, a decision that he would later  conclude had, counter-intuitively, delayed the project even further."
[16:28:51] <bayaz> Title: The Mythical Man-Month - Wikipedia 
[16:29:13] <pyzozord> interesting
[16:29:29] <GeDaMo> Ah, here we go https://en.wikipedia.org/wiki/Brooks%27s_law "adding manpower to a late software project makes it later"
[16:29:29] <bayaz> Title: Brooks's law - Wikipedia 
[16:29:52] <pyzozord> http://worrydream.com/refs/Brooks-NoSilverBullet.pdf
[16:29:52] <bayaz> Type: application/pdf Size: 266.3 kB 
[16:30:21] <pyzozord> Didn't even know it was a law
[16:30:29] <absentia> no silver bullet is often published with the mythical man month
[16:30:32] <absentia> both fred brooks aphorisms
[16:30:40] <pyzozord> Need to read Mythical Man-Month
[16:30:43] <absentia> the reason is all the senior people on the team
[16:30:51] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[16:30:52] <absentia> now need to spend time training and coordinating newly onboarded folks
[16:30:59] <absentia> which means that's less time spent actually building the fucking thing
[16:31:17] <pyzozord> that's a good and practical reason
[16:31:25] <pyzozord> but I mean that also people invent problems to keep busy
[16:32:14] <absentia> pyzozord: sure
[16:32:24] <epony> jabse cure.it
[16:32:50] <absentia> that's why constraint is so important
[16:32:51] <epony> (job security)
[16:33:02] <absentia> lmao
[16:33:25] <absentia> i have seen some fairly shameless displays of job security
[16:33:30] <absentia> and you know what
[16:33:32] <absentia> good for them
[16:35:07] <voidiov> what's one of those?
[16:35:28] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[16:35:34] <GeDaMo> «The Bermuda plan, where most developers on a project are removed  ("sent to Bermuda") and the remaining are left to complete the software,  has been suggested as a way of circumventing Brooks’s law.»
[16:36:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:36:59] *** Joins: mickey8 (~user@user/mickey)
[16:38:08] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[16:38:44] *** Joins: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[16:39:06] *** Quits: eXtr3m0 (~eXtr3m0@p4fd3ac0f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[16:40:09] *** Joins: juliaEnv (~juliaEnv@h-37-123-164-79.A137.corp.bahnhof.se)
[16:41:40] <juliaEnv> how do you specify requirements for a distributed application that will be designed using microservices? 
[16:42:12] <juliaEnv> do you know any requirements template for a microservices system, or any software engineering methodology for engineering a microservices system?
[16:42:56] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Quit: Konversation terminated!)
[16:43:44] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:44:32] <juliaEnv> or at least, what template do you use for specifycing requirements of a system that will be designed using SOA?
[16:46:12] *** Joins: absc (~absc@81.31.144.28)
[16:47:54] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Client Quit)
[16:48:21] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[16:50:26] <DarkTrick> **Q** Anyone has a suggestion for a JS build system? I'm basically looking for npm, that supports variables (a shame npm doesn't)
[16:50:54] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:51:52] <pyzozord> that wouldn't be a build system that would be package manager
[16:52:08] <pyzozord> build systems are different, the most popular is webpack
[16:53:00] <DarkTrick> pyzozord, I used the "scripts" part to turn npm into a build system (perhaps "mis-used")
[16:53:34] <pyzozord> no that's fine, but then the build system is the script that you are calling from npm
[16:53:58] <pyzozord> wepack is often called from the "scripts" field of package.json
[16:55:11] <DarkTrick> (I did stuff like this: "publish": "npm run build; npm run optimize; npm run make_release")
[16:55:21] <DarkTrick> I'll take a look at webpack
[16:56:05] <pyzozord> yes that all look correct
[16:56:05] <DarkTrick> basically just need a nice way to describe a building graph (? action graph?), which still allows me to use the `node_modules` installed via npm
[16:56:22] <pyzozord> most projects have "build": "webpack [flags and paths]"
[16:57:17] <pyzozord> webpack is all about building graphs so that sounds right, the other part of the sentence I don't quite get
[16:57:23] <DarkTrick> I'm struggling, because I cant do "publish $1": "npm run build $1; npm run optimize $1 ..."
[16:57:40] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[16:57:55] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:57:55] <DarkTrick> Ok, perhaps webpack is the right thing :)
[16:57:59] <DarkTrick> thank you, pyzozord 
[16:59:12] <pyzozord> oh well I don't think you can do that dirctly in npm
[16:59:32] <hans> hahaha have you guys seen this mov compiler, compiles C code into only mov instructions?  https://github.com/xoreaxeaxeax/movfuscator
[16:59:33] <bayaz> Title: GitHub - xoreaxeaxeax/movfuscator: The single instruction C compiler 
[16:59:58] <pyzozord> but nothing stops you from "publish": "bash ./myscript" where myscripts handles arguments
[17:00:55] <DarkTrick> hans, I know there was a topic on *a* mov compiler about 10 years ago on defcon (I think)
[17:01:22] <pyzozord> DarkTrick: also you can use environmental variables
[17:01:45] <hans> >The M/o/Vfuscator contains a complete mov-only floating point emulator. Since it is approximately 500,000 instructions, you must explicitly link to it if you need it.
[17:02:00] <DarkTrick> pyzozord, I tried "build": "myvar=foo; npm run buildWithFoo", but it didn't work
[17:02:54] <DarkTrick> pyzozord, If I use "bash" as you've described, could I still use local npm modules?
[17:03:00] <pyzozord> might not work this way, not sure, I'd just call to a bash script and do whatever you need in a bash script
[17:03:24] <pyzozord> bash will be invoked in the directory where package.json is
[17:03:36] <pyzozord> inside bash you are free to use nodejs or whatever else you need
[17:04:01] *** Joins: SerialSmile (~SerialSmi@37-144-213-193.broadband.corbina.ru)
[17:04:47] <voidiov> hans: crazy nice project haha
[17:05:02] <DarkTrick> pyzozord, looks good!
[17:06:16] <whatsupboy> juliaEnv: Can you be more specific? What are you trying to do?
[17:06:58] *** Quits: SerialSmile (~SerialSmi@37-144-213-193.broadband.corbina.ru) (Client Quit)
[17:07:40] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[17:09:20] <epony> js is not a shell though
[17:10:28] <epony> and it's system intrerfacing is "poor"
[17:16:17] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:17:02] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:18:28] <juliaEnv> whatsupboy something like this https://www.iala-aism.org/content/uploads/2017/03/Service-Specification-Template.pdf
[17:18:29] <bayaz> Type: application/pdf 
[17:19:08] <juliaEnv> whatsupboy I'm trying to do requirements engineering (elicitation, analysis, specification, and validation) of requirements for a new (micro)service (as in SOA)
[17:19:42] <juliaEnv> properly specified requirements will allow to design the right architecture
[17:19:53] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[17:19:59] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[17:20:05] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[17:20:06] *** Joins: kish` (~aqua@user/aqua)
[17:20:23] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[17:20:41] *** Joins: kish` (~aqua@user/aqua)
[17:22:06] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:23:53] <pyzozord> huh something strange, folks at work are not extra nice today
[17:23:59] <pyzozord> maybe the honeymoon is over :P
[17:25:24] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:26:33] <Sqaure> pyzozord, the truth about the workplace https://youtu.be/tNOKXlv8-bY?t=285
[17:26:34] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:26:35] <bayaz> Title: What If Everyone Had Their Own Larry David? 
[17:29:08] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:29:56] *** Quits: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[17:30:17] <pyzozord> that's pretty funny
[17:30:30] <pyzozord> I guess they kind of almost convinced me they really wanna make friends
[17:30:52] <pyzozord> strange, people want me to open up but then when I do open up a bit they don't seem that interested anymore
[17:31:04] <juliaEnv> whatsupboy so, would you know how to write a (micro)service specification, or (micro)service user stories?
[17:32:16] <homura> https://dnsleaktest.com
[17:35:04] <pyzozord> or maybe they are just busy, anyway I'm not that worried
[17:35:17] <pyzozord> they are still kinda nicer than your average team members
[17:35:19] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:36:45] *** Joins: x_kuru (~xkuru@user/xkuru)
[17:36:51] *** Emet-Selch is now known as Azem
[17:39:01] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 268 seconds)
[17:42:13] *** Joins: vicfred (~vicfred@user/vicfred)
[17:43:23] *** Quits: oakyy (~oaky@2001:6b0:1:1041:99a4:164:e463:f322) (Ping timeout: 250 seconds)
[17:47:13] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[17:47:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[17:48:37] *** Joins: jamea (~jamea@177.239.81.39)
[17:50:48] *** Quits: homura (uid398348@user/homura) ()
[17:53:23] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[17:53:52] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[17:54:20] <maxzor_> has the elf format not been update in 20 years? https://refspecs.linuxfoundation.org/elf/gabi4+/revision.html
[17:54:20] <bayaz> Title: Revision History 
[17:55:29] <maxzor_> the current elf ksy is from chapter 4? https://github.com/kaitai-io/kaitai_struct_formats/blob/master/executable/elf.ksy#L26 
[17:55:30] <bayaz> Title: kaitai_struct_formats/elf.ksy at master ? kaitai-io/kaitai_struct_formats 
[17:55:39] <GeDaMo> If it works, why change it?
[17:55:55] *** Quits: tec (~quassel@gate.sixtopia.net) (Quit: No Ping reply in 180 seconds.)
[17:55:58] <maxzor_> sure, it's not a rant, I am just looking for the place to find the spec of current elf
[17:56:57] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:57:07] *** Joins: tec (~quassel@gate.sixtopia.net)
[17:57:34] <maxzor_> I have a hard time finding my way in this directory https://refspecs.linuxfoundation.org/elf/
[17:57:34] <bayaz> Title: Index of /elf 
[17:58:07] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92)
[17:58:12] <merijn> RIP your sanity :D
[17:58:25] <maxzor_> hehe...
[17:58:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[17:59:14] <maxzor_> but with modern tools like ksy, such archaeology becomes much less daunting
[17:59:45] <GeDaMo> The Wiki page is pretty good https://en.wikipedia.org/wiki/Executable_and_Linkable_Format
[17:59:45] <bayaz> Title: Executable and Linkable Format - Wikipedia 
[18:00:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[18:02:26] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:02:29] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92) (Ping timeout: 252 seconds)
[18:09:44] *** Joins: oakyy (~oaky@wlan-eduroam-130-237-240-90.su.se)
[18:10:45] *** Parts: rick123 (~rick123@157.245.192.96) ()
[18:11:19] *** Joins: jamea (~jamea@177.239.81.39)
[18:13:02] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Remote host closed the connection)
[18:13:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:13:53] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:18:26] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee)
[18:19:46] *** Joins: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd)
[18:19:54] *** Quits: ekathva (~ekathva@2001:999:50:cab1:b7e8:130b:c792:9fd) (Remote host closed the connection)
[18:22:27] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[18:23:37] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[18:23:47] *** Quits: dsrt^ (~dsrt@128-092-182-020.biz.spectrum.com) (Remote host closed the connection)
[18:24:24] *** Joins: Payam (~Payam@138.106.57.131)
[18:25:02] *** Parts: nulleip (~luiz@user/nulleip) ()
[18:26:41] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Remote host closed the connection)
[18:26:57] *** Joins: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d)
[18:27:26] *** Joins: nulleip (~luiz@user/nulleip)
[18:27:44] *** Quits: dan01 (~dan01@2a02:2f09:3913:cc00:1d8d:6567:868f:a9e0) (Quit: Leaving)
[18:28:20] *** Quits: Gallomimia (~Gallomimi@2001:56a:fa4b:ca00:50e9:876a:6e09:9523) (Remote host closed the connection)
[18:28:30] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[18:31:16] *** Joins: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:31:42] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Read error: Connection reset by peer)
[18:32:57] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Ping timeout: 240 seconds)
[18:33:19] *** Quits: hexingb (~hexingb@2409:8900:2700:507:c98a:566:c267:420d) (Read error: Connection reset by peer)
[18:36:21] *** Joins: monr0e (~monr0e@smtp.vixen.international)
[18:37:01] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[18:40:58] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80)
[18:41:08] *** Joins: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr)
[18:41:15] <amigojapan> Going to sleep, good night everyone
[18:41:46] *** Quits: maxzor (~maxzor@2a01cb04054faa00c599663dbdcddcbc.ipv6.abo.wanadoo.fr) (Client Quit)
[18:42:16] * ski waves
[18:42:27] <amigojapan> Ty ski
[18:44:00] <amigojapan> Ok I am out of here
[18:44:13] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:51:51] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[18:52:41] *** Quits: callq (~callq@2409:4062:2d8d:345f:158c:2117:eab6:8c14) (Quit: callq)
[18:54:03] *** Joins: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[18:54:27] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:54:34] *** comerijn is now known as merijn
[18:55:45] *** Joins: rsx (~dummy@ppp-188-174-136-200.dynamic.mnet-online.de)
[18:58:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:59:01] *** Joins: jamea (~jamea@201.77.110.253)
[18:59:44] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:00:17] *** Joins: yewscion (~yewscion@52.94.133.128)
[19:01:24] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:03:26] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[19:07:55] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:07:58] *** Quits: Iarfen (~quassel@181.43.56.115) (Read error: Connection reset by peer)
[19:08:00] *** Quits: Twipply (~Twipply@user/twipply) (Remote host closed the connection)
[19:08:31] *** Joins: Twipply (~Twipply@user/twipply)
[19:08:47] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[19:10:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[19:10:29] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[19:12:37] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:13:23] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[19:13:33] *** Quits: thevishy (~Nishant@2405:201:f005:c007:e0f1:5635:e895:47c6) (Quit: Leaving)
[19:14:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34) (Client Quit)
[19:15:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:16:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[19:16:27] *** Quits: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee) (Ping timeout: 256 seconds)
[19:16:45] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:cb06:9935:dc:f7e7) (Remote host closed the connection)
[19:17:08] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:18:15] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Client Quit)
[19:18:50] <sonny> I'm browsing doaj.org and a lot of computer related results are boring
[19:19:52] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[19:19:52] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[19:19:52] *** Joins: tane (~tane@user/tane)
[19:20:06] <GeDaMo> Lots of research is dull :P
[19:20:08] <InPhase> sonny: Many journal articles are, in fact, boring, and were published just because people were told they need to publish.
[19:20:17] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[19:20:55] <GeDaMo> Sometimes the same research is used as the basis for multiple papers
[19:22:27] <sonny> oh
[19:23:14] <GeDaMo> Science moves forward millimetres at a time, it's rare to find something which is a big jump 
[19:23:41] <oldlaptop> (not that every paper necessarily moves anything forward at all)
[19:23:53] <sonny> So I guess there was just a lot of important results for computing during the 60s-90s, cause I always find lots of stuff to read from different places during that period
[19:23:57] <InPhase> sonny: You can attempt to browse cutting edge research in a field, but that's usually not very illuminating unless you know a field well enough to know which articles to pay attention to and which to ignore.  It's more interesting to browse highly cited papers that are at least a couple years old, unless you are researching a very specific topic in depth.
[19:24:26] <sonny> that makes sense
[19:24:34] <oldlaptop> although ignoring Big Al's Pay Per Paper Discount Publish-O-Rama helps with that
[19:24:34] <[itchyjunk]> Stackexchange was sold to some chinese company?
[19:24:40] <[itchyjunk]> damn, how long have i been gone?
[19:25:00] <[itchyjunk]> sonny, thats when a lot of foundational stuff happened
[19:25:15] <[itchyjunk]> if you get past the foundational reading, you'll find papers from 90+ after
[19:25:21] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[19:25:44] <GeDaMo> The nice thing about research papers is references to earlier papers which explain the stuff they're talking about :P
[19:26:01] <[itchyjunk]> Not always true
[19:26:14] <GeDaMo> Well, sometimes you have to go back quite a ways :P
[19:26:34] <[itchyjunk]> They don't really refrence papers in chain like that always
[19:26:40] <user51> pointers! lovely :)
[19:26:45] <[itchyjunk]> they'll just introduce a word and call it good
[19:27:02] <GeDaMo> OK, I have seen that problem
[19:27:04] <sonny> that's terrible
[19:27:21] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[19:27:37] <sonny> must be a culture thing
[19:27:47] <[itchyjunk]> "Prosus (the primary shareholder of Chinese gaming mega co/WeChat developer, Tencent) acquired Stackexchange in mid 2021. It does not surprise me at all that (a) they are blocking private/untraceable traffic and (b) they remain silent about the issue."
[19:27:54] <[itchyjunk]> https://news.ycombinator.com/item?id=30256016
[19:28:01] <[itchyjunk]> SE started blocking tor apparently.
[19:31:20] <user51> [itchyjunk]: think i ran into the situation when i tried reading the pratt parsing paper
[19:32:08] <user51> now that i think about it, i wonder how many papers you need to link before you get a graph cycle
[19:33:15] <[itchyjunk]> cycle?
[19:33:27] <[itchyjunk]> circular refrencing is against policy for a lot of journals
[19:35:39] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[19:36:04] <sonny> I've been wanting to figure out how tls works, but I'm not sure where to start. What is it that makes certificates secure?
[19:36:22] *** Joins: independent56 (~independe@148.252.128.54)
[19:36:25] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[19:36:48] <merijn> sonny: That depends how you define secure :)
[19:37:28] *** Quits: tec (~quassel@gate.sixtopia.net) (Quit: quit)
[19:37:34] <merijn> sonny: Certificates are just "This is proof X thinks I am Y", where X is usually a "certificate authority" like verisign or something along those lines that you pay for a cert for your domain
[19:38:12] <oldlaptop> user51: I don't suppose offhand that should happen very often: one paper normally must postdate another to cite it
[19:38:18] <merijn> sonny: And browsers come with a set of "trusted" CAs pre-installed, so if you have a certificate that is (transitively) signed by one of the trusted root CAs, your certificate is labelled as trusted too
[19:38:42] <oldlaptop> it should at least be mostly acyclic most of the time (though not a tree)
[19:38:44] <sonny> how did they decide which CAs to provide?
[19:39:26] <sonny> Also, the crypto protocol in the certificate is called X.905?
[19:40:11] <oldlaptop> Browser and OS vendors decide (collude among themselves, whatever) to decide which CAs they want to "trust".
[19:40:26] <[itchyjunk]> kinda sounding like NFT's there :>
[19:40:33] <sonny> merijn: So these certs prevent others from saying that they are X person?
[19:40:42] <oldlaptop> How you get your browser or OS' trusted certificate chain in a trustworthy way is a question for the ages.
[19:40:57] *** Joins: DarkTrick_ (~DarkTrick@pl-749-047.bunbun.ne.jp)
[19:41:01] <sonny> I see
[19:41:37] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[19:42:00] <oldlaptop> sonny: Suppose you go start sonny.com, and want to serve Web pages from it over HTTPS. You generate a certificate, and then go shopping around to find a Certificate Authority (R) (TM) willing to sign it for you. (Unless this CA is named LetsEncrypt or CACert, it charges you a fair bit of money.)
[19:42:20] <CyberTailor> and CAs can be hacked https://en.wikipedia.org/wiki/DigiNotar
[19:42:20] <bayaz> Title: DigiNotar - Wikipedia 
[19:42:25] <oldlaptop> Browser and OS vendors include with their products a list of CA signatures they believe to be trustworthy.
[19:42:59] <CyberTailor> there's also alternative model -- TOFU (trust on first use)
[19:43:04] <CyberTailor> it's what SSH uses
[19:43:30] <sonny> SSH will prompt for your trust
[19:43:32] <oldlaptop> (Their trust, not to mention your payment of a fair bit of money, is not always justified. But Incompetent Certification Inc. still gets to be in the trusted list, and CACert does not. Oh well.)
[19:43:40] <CyberTailor> TOFU doesn't protect from MITM on first connect though
[19:43:49] <merijn> sonny: Other can say they are X, but presumably they can't get that signed by any trusted CA
[19:44:17] <oldlaptop> Alas, that word "presumably" does a lot of work
[19:44:44] <oldlaptop> (In reality, "trusted CAs" don't even need to be hacked to sign certificates they shouldn't)
[19:45:01] <sonny> The padlock makes me feel safe, but I have no clue what's going on. How does this protect me compared to before certs?
[19:45:13] <oldlaptop> and it only takes one incompetent or evil one (that's on the trusted lists anyway) to wreck everyone's day.
[19:45:56] <wedr> I am creating a class object, used as a utility class object, to remove elements from a collection (array, list, set, and map) that is marked for deprecation, and returns a clean collection. I would like for someone to help suggest a good class name with "Utils" suffix for this class.
[19:46:31] <wedr> I keep coming back to "DeprecationUtils", and it doesn't sound right...
[19:46:38] <GeDaMo> SanitizeUtils
[19:46:46] * wedr hmms
[19:46:56] <wedr> That's a good one
[19:46:57] <oldlaptop> sonny: It prevents your traffic from being intercepted and read in transit (unless the TLS session is using obsolete cryptographic methods - fortunately browsers are finally getting serious-ish about not using those), by anyone who doesn't have a certificate signed by a certificate authority in your browser (or OS') list of trusted certificate authorities.
[19:47:03] <GeDaMo> CleanUtils
[19:47:44] <oldlaptop> It is hoped that this generally means that it can't be intercepted and read in transit by anyone except the intended recipient.
[19:47:46] <sonny> ok, so I can't use tls without certs then right? that's just the method it uses to establish trust
[19:47:58] <wedr> GeDaMo, Thanks, I'll take both for consideration
[19:48:43] <GeDaMo> PurifyUtils
[19:49:04] <wedr> We need better, shorter names to describe "deprecation"...
[19:49:06] <oldlaptop> Technically speaking, no. You can use it without certificate authorities, though. You could go start sonny.com and serve HTTPS there without getting your certificate signed by a certificate authority, but everyone's browser will complain that your certificate is unsafe and evil because it's not signed by a trusted certificate authority such as Incompetent Certification, Inc.
[19:49:49] <sonny> from what I understand, I will get more information that makes me confident of the identify of the website by looking at their DNS information via dig or some tool, than looking at the certificate
[19:49:52] <oldlaptop> (Assuming you could communicate this certificate's fingerprint or something to your users in advance, they could add it to their trusted lists and be quite sure indeed that their traffic is only being read by the sonny.com web server.)
[19:50:36] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.200)
[19:50:37] <sonny> ok I think I am catching on
[19:50:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[19:51:15] <GeDaMo> wedr: except that you're not deprecating things, you're removing things which are already deprecated (as I understand it)
[19:51:25] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[19:51:27] <wedr> yeah
[19:51:49] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:51:51] <oldlaptop> DNS information (unless you're using something like DNSSEC, or even DNS-over-TLS) could be intercepted and *modified* in transit, to trick you.
[19:52:18] <sonny> so the CA establishes that my website is trustworthy? 
[19:52:20] <oldlaptop> (TLS stops that from happening too, that's fairly important. Nobody can intercept and *modify* your traffic either, unless they have a certificate signed by a trusted certificate authority.)
[19:52:24] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[19:52:32] <oldlaptop> For the purposes of everyone's web browser, yes.
[19:52:39] *** Joins: hB7drf (~hB7drf@113.90.39.118)
[19:52:52] *** Joins: flakland (~flaknet99@32.211.211.39)
[19:53:29] <sonny> hmm, these methods don't inspire a lot of confidence, or maybe I don't quite understand
[19:54:02] *** Quits: hB7drf (~hB7drf@113.90.39.118) (Changing host)
[19:54:02] *** Joins: hB7drf (~hB7drf@user/hB7drf)
[19:54:09] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[19:54:10] <oldlaptop> They shouldn't inspire too much confidence, no. It's generally considered to be an improvement over transmitting everything in the clear, though.
[19:54:54] *** Quits: icy_troubles (~icy_troub@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Quit: Quit)
[19:55:01] <sonny> I could make googl.com, get a signed certificate and totally fool people into thinking I am google
[19:55:12] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[19:55:33] <sonny> In this case I'm totally not a website to be trusted
[19:55:47] <oldlaptop> LetsEncrypt deserves mention as a different and arguably better way to operate a certificate authority; instead of having you prove who you are to Incompetent Certification Inc. (and pay them some money), it uses a standardized process to prove that you control the Web server running at sonny.com, and then issues you a signed certificate that expires after a very short time, a few weeks or so.
[19:55:59] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[19:56:03] <GeDaMo> googl.com redirects to google :P
[19:56:11] <GeDaMo> As does goolge.com
[19:56:15] <flakland> goog1e.com then!?
[19:56:22] <oldlaptop> (You have to get a new one before it expires. When you pay Incompetent Certification Inc. for one, they give you one that expires after a year or three.)
[19:56:22] <sonny> nice one
[19:56:41] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[19:56:57] <oldlaptop> It's absolutely correct that there's nothing (except maybe the certificate authority's discretion) to stop you from registering a deceptive domain name and getting a certificate for it.
[19:57:08] <sonny> I see, that's a good move by LetsEncrypt
[19:57:24] <oldlaptop> It would have to say you're sonny Fine Password Theft And Bank Account Draining Ltd. instead of Google, though.
[19:57:28] <sonny> oldlaptop: yes, my concern is then, how does a user verfiy?
[19:57:49] <oldlaptop> (Unless you can start a company named Google, and they don't notice. Yes, this has happened (though IIRC not to Google specifically)
[19:58:18] *** Joins: usr123 (~usr123@49.156.67.179)
[19:58:18] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[19:59:01] <sonny> for example, in my webclient it says issued to sni.cloudflaressl.com, I'm sure there's sites with heavy traffic like this
[19:59:06] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92)
[19:59:23] <sonny> that's much easier to attack
[19:59:27] *** Quits: hB7drf (~hB7drf@user/hB7drf) (Ping timeout: 250 seconds)
[19:59:28] <oldlaptop> sonny: If you clicky-clicky around on the little padlock, it generally tells you somewhere to whom (not just for what domain name) the certificate was issued
[19:59:44] <GeDaMo> sonny: have you heard of Cloudflare? How do you think that works?
[19:59:49] *** Joins: hB7drf (~hB7drf@113.90.39.195)
[20:00:05] *** Quits: independent56 (~independe@148.252.128.54) (Ping timeout: 256 seconds)
[20:00:16] <sonny> GeDaMo: it seems like the website is using cloudflare services
[20:00:28] <[itchyjunk]> "So, 7 hours for sewing, 72 for weaving, 500 for spinning, or 579 hours total to make one shirt. At minimum wage - $7.25 an hour - that shirt would cost $4,197.25."
[20:00:32] <GeDaMo> Cloudflare is basically a man-in-the-middle
[20:00:34] <[itchyjunk]> https://www.sleuthsayers.org/2013/06/the-3500-shirt-history-lesson-in.html
[20:00:35] <bayaz> Title: The $3500 Shirt - A History Lesson in Economics 
[20:00:46] *** Quits: hB7drf (~hB7drf@113.90.39.195) (Remote host closed the connection)
[20:00:50] <sonny> so I could just use the same and get the same issued-to right?
[20:01:35] <roxlu> hi, this might be a bit off-topic though maybe not ... I've been reading up on the openssl util and seeing so many online example which look similar, but I've got the idea that most of them contain reduntant or contracting options. Maybe someone here nows this well, for example (...)
[20:02:01] <roxlu> 1) why would you use `openssl req -new -x509`  and not just `openssl req -x509` ? 
[20:02:05] *** Joins: independent56 (~independe@148.252.128.54)
[20:02:07] <oldlaptop> When it was first online, this website had a certificate that said it was A-OK run by "Stripe, Inc." https://web.archive.org/web/20191220215533/https://stripe.ian.sh/
[20:02:27] <oldlaptop> Unfortuntately, it was not the Stripe, Inc. you might hope it was.
[20:03:03] <sonny> yikes
[20:03:33] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:ed84:bb36:91ae:dc92) (Ping timeout: 250 seconds)
[20:04:06] <sonny> roxlu: what are you reading?
[20:04:19] <roxlu> the man pages + SO
[20:04:42] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[20:04:54] <roxlu> sonny: for example https://superuser.com/questions/126121/how-to-create-my-own-certificate-chain/418429
[20:04:56] <bayaz> Title: How to create my own certificate chain? 
[20:05:32] * roxlu see the bottom post
[20:05:51] *** Joins: Guest077 (~k@198-0-60-142-static.hfc.comcastbusiness.net)
[20:07:25] <Guest077> what the heck is a computer programmer? a 10 year old kid can open a text file in notepad and copy and paste code from anywhere and be +90% (more) productive than us? where is the reward for being a "good" computer programmer?
[20:07:48] <flakland> who's "us"
[20:07:50] <sonny> roxlu: that's why you read the offical docs ;)
[20:08:00] <sonny> oh, just saw your reply
[20:08:40] *** Joins: hB7drf (~quassel@user/hB7drf)
[20:08:43] <[itchyjunk]> is it me or does smartcontract language used here looks like C?
[20:08:49] <[itchyjunk]> https://cacm.acm.org/magazines/2020/10/247600-madmax/fulltext
[20:08:53] <roxlu> yeah, it's interesting why there are so many, not completely, but vague/poluted exapmles
[20:08:53] <[itchyjunk]> sign
[20:08:55] <[itchyjunk]> sigh*
[20:09:13] <[itchyjunk]> maybe there is more than one way to do the task
[20:09:21] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[20:09:25] <[itchyjunk]> it's not uncommon to find different solutions to the same problem
[20:09:32] <sonny> [itchyjunk]: it's very common to use a c-like variant
[20:09:34] *** Joins: flakland (~flaknet99@32.211.211.39)
[20:09:48] <[itchyjunk]> address addr; this looks c like right?
[20:09:54] <[itchyjunk]> i guess i should suck it up and learn some C
[20:09:57] <sonny> yeah
[20:10:28] <sonny> no need, you have already done Java
[20:10:39] *** Joins: k8yun_ (~k8yun@24.244.29.114)
[20:10:43] <[itchyjunk]> java doesn't have the struct crap
[20:11:13] * sonny scrolls
[20:11:24] <GeDaMo> A class is just a struct with methods in it
[20:11:58] <sonny> yeah, that's verbatim how it is done in C++
[20:12:36] <sonny> [itchyjunk]: give me a tldr on smart contracts
[20:13:29] <GeDaMo> Smart contracts are programs which you throw money at and then you're surprised when you don't get any back :P
[20:13:43] <sonny> D
[20:13:48] <sonny> D:
[20:14:01] <[itchyjunk]> sonny, smart contracts are programs that run on top of blockchains
[20:14:05] <sonny> that doesn't sound smart at all :P
[20:14:07] <[itchyjunk]> and can capture transactions
[20:14:15] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[20:14:30] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[20:14:35] <sonny> what's the contract part? Is it the transaction itself?
[20:14:40] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[20:14:41] <flakland> what a waste of human effort
[20:14:59] <pyzozord> They arent that smart then
[20:15:03] <flakland> and GPU's
[20:15:05] <[itchyjunk]> the code is set up as a contract
[20:15:36] <[itchyjunk]> you fullfill "contracts" and the code executes and fullfills the other end of the deal
[20:15:40] <[itchyjunk]> generally payment
[20:15:45] <sonny> what's all the code for?
[20:16:00] <sonny> I'd just expect "sign here"
[20:16:05] <wedr> to prolong our sufferings
[20:16:17] <wedr> Why live? To suffer.
[20:16:31] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[20:16:40] <sonny> that's from the nilist dude right?
[20:16:50] <flakland> pascal?
[20:16:50] <[itchyjunk]> sonny, suppose you want certain transactions to happen successfully and based on how long it takes, you want to roll out different payout
[20:17:14] <[itchyjunk]> so you could manually figure all that out of write a smartcontract where both party agrees then the code handles it for you
[20:17:32] <[itchyjunk]> sonny, its a meme from game
[20:17:40] <[itchyjunk]> "why do we live? just to suffer?"
[20:17:50] <sonny> oh xD
[20:18:30] *** Joins: Guest53 (~textual@cpe-75-191-248-232.triad.res.rr.com)
[20:18:38] <sonny> so I understand smart contracts are ways to negotiate transactions in code
[20:18:54] <Guest077> I'm suffering you guys: what's the solution?
[20:18:58] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[20:19:23] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[20:19:24] <sonny> seek change or wait it out
[20:19:36] *** Joins: flakland (~flaknet99@32.211.211.39)
[20:19:41] <[itchyjunk]> write smart contracts
[20:19:43] *** Quits: independent56 (~independe@148.252.128.54) (Quit: Client closed)
[20:19:47] <sonny> lmao
[20:20:02] <nomagno> Write an x86 VM for ethereum
[20:20:06] <GeDaMo> I watched a thing the other day and there was a situation with an NFT where someone could send it to you, it would appear in your "wallet" and if you deleted it, it would run code and steal money from you
[20:20:15] <logiz> lmao
[20:20:21] <sonny> well ok, smart contracts are a bad attempt at formal languages
[20:20:42] <sonny> oof
[20:20:51] <sonny> that is horrible code
[20:21:23] <GeDaMo> And you couldn't do anything to stop this NFT appearing in your wallet
[20:21:34] <sonny> whaaa?
[20:21:38] <sonny> that's crazy
[20:21:41] <Guest077> I need help you guys I'm go--- *dies* *gets resurrected* *dies again* aaahhHHh!!
[20:21:46] <sonny> that's literally malware
[20:22:10] *** Quits: k8yun_ (~k8yun@24.244.29.114) (Changing host)
[20:22:10] *** Joins: k8yun_ (~k8yun@user/k8yun)
[20:22:11] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[20:22:32] *** Quits: z3t0 (~z3t0@146.71.14.98) (Read error: Connection reset by peer)
[20:22:43] <sonny> so there's no accept/deny with NFT[wallets]? it's like email?
[20:22:54] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[20:22:59] <GeDaMo> That's my understanding based on this video I watched
[20:23:20] <sonny> argh ... that's so lame
[20:23:38] <GeDaMo> It's two and a half hours long but I found it interesting https://www.youtube.com/watch?v=YQ_xWvX1n9g
[20:23:39] <bayaz> Title: Line Goes Up ? The Problem With NFTs 
[20:24:04] <pyzozord> So nfts can have code that executes in your wallet?
[20:24:07] <sonny> I think my brother told me about this video
[20:24:25] <sonny> hmm
[20:24:31] <GeDaMo> pyzozord: they're built on Ethereum
[20:24:48] <pulse> https://i.imgur.com/6RXbo1D.jpg
[20:24:48] <bayaz> Type: image/jpeg Size: 18.0 kB 
[20:24:50] <GeDaMo> This is a long read but it's also interesting https://corecursive.com/064-ethereum-rescue-with-dan-robinson/
[20:24:51] <bayaz> Title: Smart Contract Rescue - CoRecursive Podcast 
[20:25:04] *** Joins: jjido (~Denis@94.4.149.217)
[20:25:10] <GeDaMo> "Dan is going to share the story of trying to get somebody their money  back on Ethereum. He’s going to be battling this murky world of  blockchain high-frequency bots."
[20:25:44] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:25:46] <sonny> so cryptocurrencies are terrible, horribly implemented programs, but accepted by the public ... I suppose the first once that is easy to obtain and use will receive widespread adoption and make it's creators fabulously wealthy 
[20:26:03] <[itchyjunk]> https://www.youtube.com/watch?v=ZE2HxTmxfrI
[20:26:04] <bayaz> Title: Smart contracts - Simply Explained 
[20:26:15] <[itchyjunk]> Why are cryptocurrencies horrible?
[20:26:21] <[itchyjunk]> no hacking occured over the internet?
[20:26:22] <sonny> the next killer app is a cryptocurrency :D
[20:26:24] *** Joins: Akiva (~Akiva@user/Akiva)
[20:26:28] <flakland> waste of good hardware
[20:26:30] <flakland> inefficient
[20:26:33] <[itchyjunk]> did you say internet is a horrible program any time you heard of hacking?
[20:26:37] <[itchyjunk]> efficiency of what?
[20:26:41] <flakland> capabilities
[20:26:50] <GeDaMo> In the olden days, we knew it was a bad idea to download random code and run it but now that's just regarded as normal :|
[20:26:54] <CyberTailor> wasting energy and hardware
[20:26:55] <[itchyjunk]> cars used to be 12% efficient when they first came out.
[20:27:13] <[itchyjunk]> "wasting energy" like ircing?
[20:27:15] <nomagno> Ethereum 2.0 is great with the proof of stake
[20:27:19] <CyberTailor> mining is 0% efficient
[20:27:20] <pulse> didn't matter when only 0.005% of the population had cars :p
[20:27:24] <flakland> first cars were electric, probably using junk motors
[20:27:33] <sonny> [itchyjunk] cars don't help your argument
[20:27:36] <pyzozord> Doesn't make sense that nfts had code in them. Maybe there was some refund mechanism and they were performing a sort of "reverse refund" attack?
[20:27:40] <[itchyjunk]> sonny, sure they do.
[20:27:42] <CyberTailor> mining is bruteforcing useless hashes
[20:27:49] <[itchyjunk]> sonny, first cars were less efficient than horses.
[20:27:53] <[itchyjunk]> were expensive.
[20:27:58] <[itchyjunk]> and did nothing better than horses.
[20:27:59] <sonny> yeah, no once drives them today
[20:28:09] <[itchyjunk]> people use same argument for blockchains.
[20:28:16] <GeDaMo> Well, the first cars didn't produce large quantities of manure :P
[20:28:19] <[itchyjunk]> that there is more efficient hybrid solutions already.
[20:28:21] <sonny> lol
[20:28:23] <nomagno> If we start to get into what computing activity wastes more electricity, we never end. It's hypocritical to do so on the internet, even
[20:28:31] <sonny> ^
[20:28:39] <pyzozord> Analogy to cars is a very interesting one
[20:28:40] <[itchyjunk]> yeah i agree with nomagno 
[20:28:57] <sonny> computers are efficient, lets make programs efficient too
[20:29:02] <CyberTailor> https://digiconomist.net/bitcoin-energy-consumption https://digiconomist.net/bitcoin-electronic-waste-monitor/
[20:29:04] <bayaz> Title: Bitcoin Energy Consumption Index - Digiconomist 
[20:29:04] <bayaz> Title: Bitcoin Electronic Waste Monitor - Digiconomist 
[20:29:07] <[itchyjunk]> computers are not efficient.
[20:29:10] <[itchyjunk]> who told you they are?
[20:29:12] <Guest077> do you guys not care about me? *squeaks:* do you guys not care about me?
[20:29:27] <sonny> joe armstrong
[20:29:44] <CyberTailor> nomagno: PoS is the same "rich get richer" bs
[20:29:46] <nomagno> Some people will say you web surfing is king the planet, written from a 21st-century computah that runs around a bajillion tasks without them knowing.
[20:29:52] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.254)
[20:29:58] <nomagno> s/king/killing/
[20:30:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:30:12] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[20:30:24] *** Joins: flakland (~flaknet99@32.211.211.39)
[20:30:30] <nomagno> The rich always get richer most of the time
[20:30:41] <[itchyjunk]> nomagno, i've heard people make this same dumb efficiency argument about ML training
[20:30:43] <Guest077> flakland, "us" is "we the united brothers of computer programming"
[20:30:48] <[itchyjunk]> "ree there is better use for the hardware"
[20:30:58] <[itchyjunk]> when asked what, they don't seem to know what
[20:31:18] <[itchyjunk]> https://www.youtube.com/watch?v=ZE2HxTmxfrI
[20:31:19] <bayaz> Title: Smart contracts - Simply Explained 
[20:31:21] <sonny> sql database
[20:31:31] <CyberTailor> [itchyjunk]: better use: research
[20:31:53] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.200) (Read error: Connection reset by peer)
[20:32:09] <nomagno> I'd argue the rich getting richer is an issue, but not really some weird social injustice that is unexplainable: it's entropy
[20:32:14] <[itchyjunk]> ML is research.
[20:32:18] <[itchyjunk]> Jesus.
[20:32:29] <sonny> nomagno: just need something that's gonna reset
[20:32:35] <CyberTailor> nomagno: https://www.theatlantic.com/technology/archive/2017/01/bots-bots-bots/515043/
[20:32:35] <bayaz> Title: The Internet Is Mostly Bots 
[20:32:50] *** Joins: hB7drf (~quassel@user/hB7drf)
[20:32:50] <pyzozord> Wtf i thought i bought pizza. I bought 9 minipizzas
[20:32:54] <CyberTailor> 39% of all internet traffic is from bad bots
[20:32:58] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:33:00] <[itchyjunk]> "bad"
[20:33:05] <CyberTailor> so yeah, internet is very inefficient
[20:33:10] <sonny> how do you measure the whole internet?
[20:33:17] <[itchyjunk]> santa will not being them gifts?
[20:33:20] <[itchyjunk]> sonny, you don't
[20:33:20] <CyberTailor> sonny: ask the author
[20:33:24] <whatsupboy> juliaEnv:  sorry I was away,...when you mean user story as in agile story for the sprint? 
[20:33:58] <sonny> seems like something you can only get by pooling resources from google etc
[20:34:25] *** Joins: Satin (uid193953@user/Seten)
[20:34:31] <flakland> guest077 you surely must be joking
[20:34:49] <sonny> [itchyjunk]: did you see my cryptocurrency idea the other day?
[20:35:00] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[20:35:01] <flakland> cobbling scripts together is akin to macaroni artwork
[20:35:10] *** Joins: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2)
[20:35:15] <nomagno> sonny: many companies collecting and selling internet traffic stuff. Google, Cloudflare, Amazon, and very few randomizer services basically account for all traffic, one way or another
[20:35:46] <Guest077> flakland, us brothers of computer programming coded all algorithms to devise the justice of having of a remarkable computer </20% serious>
[20:35:50] <nomagno> Who's guest077?
[20:35:55] <nomagno> Might have lost messages
[20:36:01] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:36:03] <sonny> yeah, I expect you'd need a partnership to analyze how much of the traffic is bots or not
[20:36:07] <[itchyjunk]> sonny, i didn't
[20:36:19] <nomagno> I just didn't see the messages
[20:36:22] <[itchyjunk]> is it to create a signature that cannot be changed for digital arts
[20:36:23] <nomagno> :D
[20:36:31] <[itchyjunk]> and store then in a blockchain?
[20:36:34] <sonny> [itchyjunk]: close
[20:36:42] <flakland> oh whats up %'s guy, i was seriously wondering what happened to you
[20:36:44] <[itchyjunk]> what was the idea?
[20:36:59] <Guest077> flakland, xD
[20:37:22] <sonny> it's to find unique objects and try to register them in a database
[20:37:30] <Guest077> flakland, what video game should I buy/download from Steam?
[20:37:32] <[itchyjunk]> define unique
[20:37:46] <sonny> in the typical sense
[20:37:46] <[itchyjunk]> Guest077, untitled goose game.
[20:37:57] <[itchyjunk]> sonny, what's typical?
[20:38:14] <sonny> there is only 1 object like it
[20:38:24] <[itchyjunk]> so is a book unique?
[20:38:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.254) (Ping timeout: 240 seconds)
[20:38:52] <sonny> yes
[20:38:53] <flakland> katamari damacy >> Guest077<<
[20:39:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:39:51] <sonny> these objects are distributed geographically, and they are sort of physically retrieved
[20:39:52] <[itchyjunk]> so what happens if i have 2 copies of a same book?
[20:39:59] <vdamewood> Hi, people etc.
[20:40:06] <sonny> there are no copies
[20:40:14] <[itchyjunk]> What if i make a copy?
[20:40:36] <sonny> you can't, all objects are made and distributed once
[20:40:48] <sonny> it's like showing up to an easter egg hunt
[20:40:58] <[itchyjunk]> okay so you make and distribute unique items
[20:41:01] <[itchyjunk]> what then?
[20:42:02] <sonny> then you register them in the ledger as PoW
[20:42:09] <whatsupboy> juliaEnv:  I get it now, so how I look at things SOA(microservices) could be solution..and while gathering requirements never think of solutions. So you should focus on the problem and gather the requirements and from the question you asked I understood that you want to know how to gather requirements for microservices which is wrong in my opinion because you already decided how you want to
[20:42:12] <whatsupboy> design. I could be corrected though
[20:43:00] *** Quits: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:43:10] <[itchyjunk]> sonny, did you know the twitters founders first tweet was nft'ed?
[20:43:13] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[20:43:17] <[itchyjunk]> do you think someone bought it?
[20:43:22] *** Joins: magla (~gelignite@d5367123.access.ecotel.net)
[20:43:25] <sonny> yeah
[20:43:32] <[itchyjunk]> how much do you think it was worth?
[20:43:40] <sonny> 10K
[20:43:43] <[itchyjunk]> close
[20:43:51] <[itchyjunk]> any more guesses?
[20:43:56] <sonny> 25K?
[20:44:05] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[20:44:18] <[itchyjunk]> $2.9 million.
[20:44:21] <[itchyjunk]> https://youtu.be/FkUn86bH34M?t=145
[20:44:22] <bayaz> Title: NFT's Explained in 4 minutes! 
[20:44:24] <sonny> lol
[20:44:51] <sonny> I've spent the last two years just being baffled by reality lol
[20:45:00] *** Quits: Guest077 (~k@198-0-60-142-static.hfc.comcastbusiness.net) (Quit: Leaving)
[20:45:07] <[itchyjunk]> someone offered $2M
[20:45:15] <[itchyjunk]> but someone beat it by offering ~$3M
[20:45:30] <sonny> thought it would have just been bought by some rich kid ... but no lol
[20:45:45] <[itchyjunk]> There is around 30 offers it seems
[20:45:51] <dodo> lots of nft sales are just marketing, miners buying each others nfts and such
[20:45:52] <[itchyjunk]> several over $1M
[20:45:54] <sonny> what you do with $2M is buy stocks lol
[20:46:17] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[20:46:38] <[itchyjunk]> no stocks are inefficient
[20:46:52] <sonny> past year was though
[20:47:01] <[itchyjunk]> Turns out NFT's are smart contracts
[20:47:03] <[itchyjunk]> i didn't know that
[20:47:05] <sonny> and this year looks like the same
[20:47:33] <[itchyjunk]> i can work the rest of my life and not see close to $2M
[20:47:45] <sonny> yeah
[20:47:50] <[itchyjunk]> or i can digitalize my fart and sell the nft for it
[20:47:52] <[itchyjunk]> and make millions
[20:47:55] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:47:59] <sonny> lmao
[20:48:09] <sonny> nft covers any digital media?
[20:48:22] <pulse> https://worthless.pictures/
[20:48:23] <bayaz> Title: Non-fungible token - Wikipedia 
[20:48:23] *** Joins: hB7drf (~quassel@user/hB7drf)
[20:48:58] <dodo> nfts aren't even pictures, just a signature pointing to one
[20:49:02] *** Joins: ketchupicecream2 (~ketchupic@user/ketchupicecream)
[20:49:03] <[itchyjunk]> nft can cover non digital stuff too
[20:49:03] <sonny> [itchyjunk]: any critique for my blonkchain?
[20:49:05] <[itchyjunk]> w/e you want
[20:49:14] <[itchyjunk]> sonny, i don't really understand your blockchain
[20:49:29] <vdamewood> I prefer NTFS over NFTs.
[20:49:35] <pulse> i prefer honkchain
[20:49:40] <dodo> vdamewood: eeeeeew. now i'm torn :D
[20:49:43] <[itchyjunk]> NFT's dont have to point a picture
[20:49:45] <[itchyjunk]> thats optional
[20:49:56] <dodo> vdamewood: damn, i think i have to agree
[20:50:02] <apotheon> vdamewood: That's a damning judgement.
[20:50:21] <apotheon> hi
[20:50:23] <vdamewood> apotheon: Well, NTFS isn't as bad a FAT.
[20:50:28] <sonny> ok, this should be a fun exercise, I will try to describe it better, with some math too 
[20:50:29] <dodo> yup
[20:50:36] <apotheon> vdamewood: mostly true
[20:50:37] <dodo> ntfs was actually useful
[20:50:47] <pulse> what about NFS
[20:50:57] <apotheon> ugh
[20:51:00] <vdamewood> apotheon: Well, except for it's mass supporteverywhere.
[20:51:02] <dodo> nfs has its uses
[20:51:03] <vdamewood> err its
[20:51:16] <pulse> https://www.youtube.com/watch?v=qPRU8jbZemk
[20:51:17] <bayaz> Title: Need For Speed Underground 2 Soundtrack (Continuous Mix) 
[20:51:43] <ketchupicecream2> I loved that game
[20:51:53] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:52:17] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[20:52:50] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[20:53:01] <[itchyjunk]> did the game love you back?
[20:53:37] <ketchupicecream2> no, sadly
[20:55:23] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:56:12] <[itchyjunk]> :(
[20:56:34] <pulse> it's coffee'o'clock
[20:57:25] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[20:57:55] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:58:39] *** Quits: rsx (~dummy@ppp-188-174-136-200.dynamic.mnet-online.de) (Quit: rsx)
[21:00:09] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:00:37] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:21] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:01:38] <vdamewood> Okay, I just read a quite and now I want to fact check it because it's so awesome: "C makes it easy to shoot yourself in the foot; C++ makes it harder, but whenyou do it blows your whole leg off." Bjarne Stroustrup
[21:01:43] <vdamewood> quote*
[21:02:21] <GeDaMo> I've seen that quote but I don't think it was him :P
[21:02:30] <vdamewood> GeDaMo: Damn.
[21:02:37] *** Joins: tomathy (~jenova@user/quetzl)
[21:02:40] <koollman> I'm not even sure C++ makes it that much harder :)
[21:02:51] <tomathy> hello
[21:02:58] <tomathy> what is the best functional language?
[21:03:24] <koollman> tomathy: it has not been invented yet. Come back in 50 years. 
[21:03:33] <vdamewood> GeDaMo: Verified: https://www.stroustrup.com/quotes.html
[21:03:34] <bayaz> Title: Bjarne Stroustrup Quotes 
[21:03:36] <koollman> tomathy: maybe in the meantime you can use F# or haskell 
[21:03:47] <vdamewood> GeDaMo: Second paragraph
[21:03:54] <tomathy> is it possible to translate typescript to haskell?
[21:04:23] <koollman> tomathy: that wouldn't help much. It might be possible
[21:04:27] <GeDaMo> It's a fake! :P
[21:04:49] <koollman> tomathy: the advantages of using a functionnal language come from writing using it, not using it as an intermediate step
[21:04:56] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[21:05:02] <vdamewood> GeDaMo: Fake?
[21:05:08] <koollman> tomathy: you could look at elm, if you're considering the javascript environment
[21:05:19] <GeDaMo> vdamewood: I'm kidding
[21:05:25] <vdamewood> GeDaMo: Oh, okay.
[21:05:40] <vdamewood> GeDaMo: I'm not surprised there's more context.
[21:06:00] <tomathy> koollman: i need possibly to convert tonnes of typscript to something usable 
[21:06:13] <koollman> tomathy: that seems unlikely to work
[21:06:15] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:06:25] <koollman> tomathy: machine-generated code is rarely usable
[21:06:47] <tomathy> ok, why doo they say typescript "compiles" to js, is that a joke?
[21:06:47] <koollman> the usability comes from understanding the intent and expressing it somewhat clearly
[21:06:52] <tomathy> js is not compiled
[21:07:02] <GeDaMo> https://www.youtube.com/watch?v=H6yQOs93Cgg
[21:07:03] <bayaz> Title: It's a fake! 
[21:07:25] <koollman> tomathy: that's what compilation is. they general say 'transpile' to mark the difference since it's not compiling to some machine-level language
[21:07:38] <pulse> vdamewood, i have summed my thoughts on this issue in a meme: https://i.imgur.com/ODU1fBt.png
[21:07:38] <bayaz> Type: image/png Size: 1.1 MB 
[21:07:39] <vdamewood> GeDaMo: It's a faaaake.
[21:07:39] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee)
[21:07:42] <ski> tomathy : because it does compile to it ?
[21:07:56] <ski> "transpile" is a completely unnecessary word
[21:08:19] <koollman> ski: well it brings some precision
[21:08:21] <vdamewood> pulse: C is for coding. That's good enough for me.
[21:08:25] <ski> no
[21:08:32] <koollman> tomathy: but compilation in very general terms is to take some description of an algorithm in a language, and rewrite it to a description in a different language
[21:08:40] <ski> compilation can be from a low level language to a high level one, if you want to
[21:08:45] <koollman> ski: I agree
[21:08:50] <Decker> tomathy JS is compiled  
[21:09:08] * ski . o O ( "Concerning compilation and interpretation, and an interpretation of the compilation of confusion surrounding their meaning and execution" in 2007-06-19 and "Summarizing several issues with compilation and interpretation" in 2007-07-14, both by Riastradh, at <https://mumble.net/~campbell/blag.txt> )
[21:09:12] <tomathy> generally i thought compiled means translated into binary
[21:09:19] <Decker> it is - in memory
[21:09:23] <pulse> yes, JS is translated into binary
[21:09:25] <ski> no, it just means translation from one language to another
[21:09:29] <pulse> (JS also starts out as binary)
[21:09:34] <ski> (or to the same)
[21:09:35] <pulse> confusing semantics in 3,2,1..
[21:10:02] <tomathy> js is not a real programming language
[21:10:06] <koollman> pulse: well, yeah. but then ... what isn't binary, in that context ? ;)
[21:10:13] <tomathy> nor is python
[21:10:17] <koollman> tomathy: nothing is real. get over it
[21:10:17] <pulse> koollman, my tea
[21:10:47] <tomathy> java isn't really either because it needs a vm
[21:10:52] <koollman> pulse: true. I was imprecise. What isn't binary and stored in some for of memory in the computer, accessible by it's cpu ? ;)
[21:10:57] <Decker> tomathy It's ok JS beleives in you :)
[21:11:05] <pulse> koollman, err. nothing
[21:11:33] <tomathy> if you want to regret your life do anything in a language that doesn't compile to machine code/binary
[21:11:36] *** Quits: ccat (~Administr@113.25.19.166) (Quit: Leaving)
[21:11:45] <pulse> it's all just 1s and 0s, but certain combinations of 1s and 0s are more appropriate for humans and certain combinations are more appropriate for computers
[21:11:52] <koollman> tomathy: java (or any language, really) doesn't need it. It's the way it is usually run, sure
[21:12:05] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:06] <koollman> but it can be compiled to some other machine code, and that can be directly executable
[21:12:32] *** Quits: ketchupicecream2 (~ketchupic@user/ketchupicecream) (Read error: Connection reset by peer)
[21:12:58] *** Joins: vysn (~vysn@user/vysn)
[21:13:01] <koollman> 'compiles to assembly/binary' is not a property of the language, it's a property of some implementation of the language
[21:13:17] <ski> ^
[21:13:50] *** Quits: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee) (Quit: Client closed)
[21:14:13] <koollman> otherwise, C compiles to brainfuck, so it's not real either ;)
[21:14:40] <oldlaptop> The most-deployed implementations of Python, SQL, and Tcl all use compilers; that is, they translate the program into another language (bytecode for a VM, in all three cases)
[21:14:46] <tomathy> koollman: if a language doesn't have a compiler, what is it, the browser is effectively the compiler or js, and the vm is java's compiler, and whatever runs pythong is pythonn cmpiler, but all of these have no use, because they will be slow and consume too much cpu powere, because they have not been made to be used, they have been made to abuse the cpu
[21:15:06] <koollman> tomathy: there's many things wrong in that sentence
[21:15:15] <Decker> oldlaptop ya..but that's not compile in the JS sense - that's giving a false sense of 'well see that sort of compiliation isn't 'real' :)
[21:15:25] <ski> the VM is an interpreter
[21:15:32] <koollman> tomathy: but, first: a language implementation could get a compiler later. Or already have one but it not being the most common choice
[21:15:32] <ski> a physical processor is also an interpreter
[21:16:01] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:16:02] <koollman> tomathy: second: code running on a vm can be fast, and very efficient, if the vm is good. Which is the case for the jvm 
[21:16:07] <pulse> <pulse> confusing semantics in 3,2,1..
[21:16:11] <tomathy> so is there one java/python/js -> x86 compiler in existence?
[21:16:22] <koollman> multiple, yes
[21:16:24] <oldlaptop> (There also exists at least one implementation of Python, and an experimental implementation of Tcl, that compile to some machine language or other.)
[21:16:48] <oldlaptop> (in both cases just-in-time)
[21:17:12] <oldlaptop> I wonder if drh has ever thought about a JIT for sqlite.
[21:17:25] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:352b:28ab:3326:ca8c) (Quit: fe23)
[21:17:35] <tomathy> but you agree in terms of industrial use interpreted languages are fairly useless?
[21:17:49] <koollman> tomathy: absolutely not
[21:18:09] <koollman> you coudl think about the question yourself, of course
[21:18:25] <koollman> if it is useless, why so many people do things with those languages ?
[21:18:41] <Decker> oldlaptop the functional blocks for SQL are large enough that a schedule is enough for compilation; then the actual work the SQL engine does is compiled
[21:18:48] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:19:30] <nomagno> POSIX/Bourne/Unix shell has been in constant production use for forever, and it's still very useful
[21:19:58] <nomagno> Even though doing math in it sucks and you gotta used expr or something', still fun to use it
[21:20:39] <koollman> java is just about anywhere you can think of
[21:20:45] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[21:20:48] <koollman> and python is widely used in many places
[21:20:52] <ski> (people also commonly confuse interpreters (vs. compilers) and interactors (aka REPLs) (vs. batch processing))
[21:21:55] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:22:03] <oldlaptop> koollman: Oh, while we're at it, Java is not only commonly compiled (to Java bytecode), but the usual implementation of Java bytecode nowadays also compiles to some machine language or other (JIT, naturally)
[21:22:04] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[21:22:19] <koollman> yes. same for js
[21:22:35] <oldlaptop> I understand gcj (which compiled Java to machine code) is zombified now, though.
[21:22:38] *** Joins: ugjka (~ugjka@ugjka.net)
[21:23:02] <koollman> modern equivalent would be graalvm, with AOT compiling
[21:23:08] *** Joins: smoke (~smoke@user/smoke)
[21:23:12] <koollman> it can generate native versions
[21:23:18] <nomagno> there are essentially no popular C->JVM compilers
[21:23:20] <nomagno> Which is a shame!
[21:23:39] <oldlaptop> Oh, and the Python implementation that compiles it JIT to machine code is itself written in a subset of Python, for which its developers maintain a compiler that emits machine code AOT.
[21:23:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:23:51] <nomagno> I guess C is just not taking advantage of the JVM's native type system and GC
[21:24:03] <oldlaptop> (The only reasonable use for this compiler is to compile the JIT-ing one)
[21:24:26] <nomagno> oldlaptop: yes, rpython
[21:24:35] <vysn> Hello everyone
[21:24:36] <nomagno> It's a shame the subset isn't formally/informally specified
[21:24:45] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:25:46] <oldlaptop> Well, they don't reckon it needs to be, because the only thing that's supposed to be written in it is PyPy
[21:25:59] *** Quits: stagas (~stagas@2a02:587:c441:b777:a4f9:d376:ddc4:9436) (Ping timeout: 256 seconds)
[21:26:24] *** Joins: ketchupicecream2 (~ketchupic@user/ketchupicecream)
[21:27:32] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[21:28:01] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:28:02] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[21:29:03] <koollman> oldlaptop: https://rpython.readthedocs.io/en/latest/rpython.html informal, but it exists (mostly defined in comparison to python spec though)
[21:29:04] <bayaz> Title: RPython Language ? RPython Documentation 
[21:29:19] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[21:29:52] *** Joins: stagas (~stagas@2a02:587:c41a:ac49:a399:4815:8a5:cc21)
[21:30:21] *** Joins: emf_ (~emf@2620:10d:c090:400::5:57ea)
[21:30:33] <oldlaptop> I guess objc gets (got?) away without a real spec...
[21:31:14] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[21:31:32] <koollman> well, the spec is "this is the objc reference implementation" ;)
[21:31:33] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:32:33] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:32:47] *** Quits: ketchupicecream2 (~ketchupic@user/ketchupicecream) (Ping timeout: 256 seconds)
[21:33:57] *** Quits: emf (~emf@2601:602:9400:8f0:435:b386:5ad4:6eb2) (Ping timeout: 240 seconds)
[21:34:43] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[21:36:05] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:37:16] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:37:18] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:39:11] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[21:40:23] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:41:28] *** Joins: bnchs (~bnchs@105.157.30.234)
[21:41:30] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:43:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[21:44:14] *** Joins: the_lanetly_052_ (~the_lanet@194.135.155.254)
[21:44:41] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:45:20] *** Joins: independent56 (~independe@148.252.128.54)
[21:45:47] <[itchyjunk]> oh no, sonny is not here
[21:45:49] <[itchyjunk]> https://imgur.com/gallery/TrAe5sr
[21:47:47] <bnchs> wtf is technical debt
[21:48:02] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:48:19] *** Quits: usr123 (~usr123@49.156.67.179) (Quit: Leaving)
[21:48:28] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:45] <pyzozord> shitty code
[21:50:10] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[21:50:24] <pulse> bnchs, it's when you're trying to dig through a mountain but you run into solid rock that you can't go through, and then you try to go around it and run into even harder rock
[21:50:43] *** Joins: Akuli (~Akuli@82-203-160-5.bb.dnainternet.fi)
[21:50:58] <oldlaptop> Programmers have lots of words for shitty code, for some reason.
[21:51:02] <pyzozord> it's trying to push a cart with square wheels
[21:51:09] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:51:17] <piou> bnchs: if you keep patching things in a quick and dirty way you keep complexifying the application and at one point it becomes impossible to do any change without breaking half a dozen things, slowing all the development down and costing lots of money. At that point you have no choice but to perform major refactoring and that's going to cost lots money too. The idea behind technical debt is that
[21:51:18] <bnchs> pulse: what would be the correct solution
[21:51:23] <piou> the money you save from not doing things the right way at first, you end up paying anyway at some point in the future in full. Therefore you have a "debt" that increases as you do shitty things.
[21:51:28] <pulse> bnchs, hike over the mountain instead
[21:51:43] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 256 seconds)
[21:51:43] <bnchs> over the rock?
[21:51:49] <bnchs> you didn't define mountain
[21:51:52] <pulse> yes, just give up on the digging
[21:52:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:655c:94b:918d:9e34)
[21:52:17] <bnchs> but assuming the rocks are lined up straight, you will fall
[21:52:28] <pulse> the actual solution is to use a radar to determine your digging path before you actually start digging
[21:52:54] *** Joins: scurfee (~mikami@broadband-77-37-146-212.ip.moscow.rt.ru)
[21:53:05] <apotheon> bnchs: The more complete description of "technical debt" would involve something like "we took some shortcuts at some point, and promised we'd get back to it to fix it up, but never did, and a bunch of code got built on top of the shitty code in the shortcuts so that every few months it gets harder and harder to go back and fix it because so much code depends on it, so it'll probably never get
[21:53:11] <pyzozord> I'm kind of changing my opinion a bit on formal methods od producing software
[21:53:11] <apotheon> done".
[21:53:32] <pyzozord> what really matters is having competent people who actually do work
[21:53:34] <apotheon> bnchs: In theory, you can pay off technical debt.  In a professional context, you almost never get the time until it gets to the point where you have to rewrite the whole codebase.
[21:53:36] <pyzozord> rest is optional
[21:53:55] <pulse> alternative explanation: "what is tech debt?" "x window"
[21:54:03] <bnchs> this doesn't happen in free software right?
[21:54:11] <bnchs> since the developers have lots of free time
[21:54:27] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:54:30] <apotheon> There are some methodological techniques that can be used to make it easier to write good software, but yeah, competent, conscientious people are kinda key.
[21:54:42] <piou> There's no such thing as free time
[21:54:46] <apotheon> bnchs: . . . ?
[21:54:53] <apotheon> bnchs: That's a joke.  Right?
[21:54:58] <bnchs> yes it is
[21:55:04] <apotheon> Open source software devs don't generally have free time.
[21:55:17] <apotheon> They (we) have time they spend coding instead of sleeping.
[21:56:35] <pulse> open source devs are just proprietary devs, but at night time
[21:56:47] <bnchs> be a double threaded dev
[21:56:52] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[21:56:57] <bnchs> allocate one thread for sleeping, and another for coding
[21:57:57] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:58:42] <pyzozord> kinda could do that maybe with lucid dreaming maybe? :P
[21:58:56] <pulse> nah, i tried that
[21:58:58] <pulse> the code just melts
[21:59:02] <pulse> doesn't work
[21:59:40] <bnchs> has there been a situation where in lucid dreaming
[21:59:48] <bnchs> you can actually connect to a hard drive
[21:59:59] <bnchs> let alone read the file system and manage to write to it
[22:00:02] <pyzozord> yes, but you must put the cable up your nose
[22:00:43] <pulse> i think other bodily holes might be more usb compliant
[22:00:47] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:00:47] <apotheon> err
[22:00:51] *** Joins: Tazy (~Tazmainia@192-143-13-206.ip.airmobile.co.za)
[22:00:54] <bnchs> too weirf
[22:00:59] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: WeeChat 3.4)
[22:01:01] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:01:11] <pyzozord> stupid questions get stupid answers :P
[22:01:18] <ski> eye movements are pretty low-bandwidth
[22:01:41] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:01:50] <[itchyjunk]> well if you can independently move your eyes
[22:01:51] *** Quits: emf_ (~emf@2620:10d:c090:400::5:57ea) (Quit: emf_)
[22:01:54] <pulse> when we get that brain implant from musk and metaverse from zuck, maybe we'll be able to dream and code
[22:01:55] <[itchyjunk]> you can double your bandwidth
[22:01:57] <bnchs> yes but in lucid dreaming, can you also have a emulated x86_64 cpu and bios file
[22:02:06] <bnchs> and execute code from the hard drive?
[22:02:20] <apotheon> pulse: Facebook Metaverse programs you.
[22:02:24] <[itchyjunk]> tesla use to be able to move objects in his dream
[22:02:28] <[itchyjunk]> manupulate it.
[22:02:32] <pulse> i read eu is about to ban facebook or something
[22:02:33] <[itchyjunk]> he would make models out of things.
[22:02:35] <pulse> god i wish that's true
[22:02:42] *** Joins: emf (~emf@2620:10d:c090:400::5:57ea)
[22:02:44] <bnchs> god i wish that were me
[22:02:47] <apotheon> straight-up Facebook has already experimented with programming people
[22:03:00] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca)
[22:03:08] <[itchyjunk]> there have been several physicists who could model objects in their mind in dreams and such
[22:03:17] <pyzozord> pulse: such a good news
[22:03:22] <pyzozord> pulse: that would be amazing
[22:03:25] <pulse> pyzozord, yeah. it's too good to be true though
[22:03:26] <apotheon> I think the Zuck is a peripheral for Roko's Basilisk.
[22:03:29] <ski> looking crosseyed is simple. diverging outwards with the eyes is much harder, i can only do it to a small degree. letting one eye look higher than the other is nigh impossible, i've only managed it, with some target dots
[22:03:50] <pulse> apotheon, he's definitely not human -> https://www.youtube.com/watch?v=kz_lzEhyryY
[22:03:50] <bayaz> Title: The Zucc Eats Toast 
[22:03:53] <deniska> ski: apparently it's also possible to rotate your eyes around… the forward axis
[22:04:06] <ski> (well, i suppose if you have some kind of eye or visual cortex issue or something, you might be able to. problem then is probably being able to refrain)
[22:04:15] <[itchyjunk]> some people can pop their eyes out
[22:04:24] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee)
[22:04:27] <nomagno> pulse: That would be great! BUT WHATSAPP TOO PLEASE
[22:04:28] <pyzozord> I kinda think Zuckerberg is desperate because he cen sense the demise of facebok
[22:04:31] <[itchyjunk]> seems like eye movement might be more bandwidth than thumbs
[22:04:40] <deniska> I can easily diverge outwards, but I also spent a lot of time looking and making stereograms as a kid :)
[22:04:45] *** Quits: joeljuca (~joeljuca@2804:1eb0:c1:4036:68e7:32d0:564a:24ee) (Client Quit)
[22:04:48] <pulse> nomagno, idk about that, but i think instagram would go too
[22:04:48] <apotheon> pulse: nice video
[22:04:59] <pyzozord> weird sudden thing with meta, now yelling loud at entire europe threatning to leave
[22:05:00] <nomagno> Free me from the constant social awkwardness of saying "I don't have a WhatsApp account despite 97% of messaging in the country being done through that platform. Git gut kidz'
[22:05:04] <pyzozord> that's desperation
[22:05:06] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:05:08] <ski> deniska : ah, sounds interesting. i'd even not know how to begin to approach that
[22:05:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:05:19] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:05:59] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[22:05:59] <ski> deniska : diverge outwards, more than a few degrees ?
[22:06:00] <deniska> ski: apparently it's a movement people instinctively do when you rotate something in front of you, so the trick is to "feel" which muscles are used for that
[22:06:13] <pulse> ugh stop talking about rotating eyes
[22:06:15] <vdamewood> Yay, I'm back.
[22:06:15] <[itchyjunk]> i dont have instagram
[22:06:15] <pulse> it freaks me out
[22:06:22] <ski> deniska : yea, i've practiced such things from a relatively young age, too
[22:06:25] <[itchyjunk]> percent of people who have it has nothing to do with it.
[22:06:27] <sonny> o.O
[22:06:28] *** Joins: tforever (~Terabyte@81.214.167.36)
[22:06:32] <pyzozord> vdamewood: hi back, I'm pyzozord
[22:06:39] <apotheon> Wait -- what?  Is 97% of messaging really through WhatsApp?
[22:06:41] <apotheon> holy crap
[22:06:43] <deniska> ski: well, not sure how to measure it, like the angle is certainly not bigger than parallel :D
[22:06:44] <vdamewood> Hi, pyzozord, he's beaky.
[22:06:44] <apotheon> we're doomed
[22:06:52] <ski> deniska : btw, some stereo images <http://glacierglen.ljungstrand.se/Stereo/StereoE.html> :)
[22:06:56] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:06:58] <pyzozord> nice I like beaky, he is the most beaky
[22:06:59] <apotheon> pulse: Ocular body horror issues . . . ?
[22:07:17] * vdamewood rotates pulse's eyes.
[22:07:20] <bnchs> what about meta ban in india
[22:07:23] *** Joins: Shashin (~Shashin@cpc112711-nmal22-2-0-cust53.19-2.cable.virginm.net)
[22:07:25] <deniska> ski: yeah, I made a lot of photos like this as a kid
[22:07:28] <pulse> apotheon, it's the same kind of feeling i get with those horror movies that have a baby's head rotating 360 degrees
[22:07:32] <bnchs> or countries that have high amounts of meta product usage
[22:07:41] <ski> deniska : (rotation) ah, sounds interesting
[22:07:42] <deniska> ski: mostly made anagliphs out of them, but certainly looked at them "parallel eyed"
[22:07:43] <sonny> whatsapp rules the 3rd world
[22:07:47] <vdamewood> pulse: They don't do that naturally?
[22:07:51] <apotheon> pulse: . . . hilarity?
[22:07:54] <deniska> whatsapp is really popular in Russia
[22:08:10] <apotheon> WTF is wrong with Russia?
[22:08:17] <apotheon> Why would they want WhatsApp?
[22:08:26] <pulse> it's slightly better than wheresapp
[22:08:32] <deniska> apotheon: what else is there which is as simple to use?
[22:08:34] <ski> deniska : "like the angle is certainly not bigger than parallel" -- well, i can easily do bigger than parallel .. but only a little more, not widely diverging
[22:08:35] <apotheon> Telegram isn't the greatest thing, but it's better than WhatsApp.
[22:08:50] <vdamewood> What is the greatest thing?
[22:08:58] <deniska> ski: that sounds like something which may murder an eyeball, so I won't try that :D
[22:09:06] <ski> i don't see why
[22:09:20] <apotheon> SMS is easier than WhatsApp.
[22:09:22] *** Joins: smoke (~smoke@user/smoke)
[22:09:26] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 252 seconds)
[22:09:33] <apotheon> I'm not sure whether it's an improvement, though.
[22:09:34] <deniska> apotheon: Russia was trying to block telegram for a while, so it was flaky.
[22:09:35] <vdamewood> I have to pay to use SMS internationally.
[22:09:40] <ski> you can look with both eyes to the far left, and to the far right. why not one to one side, and one to the other. especially since you can do it the other way, crosseyed/inwards
[22:09:50] <pulse> sms, what is this 1984
[22:09:57] <apotheon> Signal is probably about the same as WhatsApp.
[22:09:58] <ski> the issue doesn't seem to be a muscular thing, but rather a control and coordination thing
[22:10:00] <deniska> apotheon: SMS are often paid per unit, limited in length, and you can't send pics, vids, have group chat
[22:10:06] <vdamewood> pulse: I don't think SMS was arround in 84.
[22:10:12] <deniska> Signal sounds like something for nerds
[22:10:12] <vdamewood> I think it's more of a 94 thing.
[22:10:22] <vdamewood> "We get signal!"
[22:10:23] <apotheon> le sigh
[22:10:40] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[22:10:42] <pulse> we should train people in psionics and then we could all send telepathic signals to eachother
[22:10:48] <pyzozord> I'd say 00-05 were still sms era
[22:10:53] <pulse> although then we would have a lot of psionic interference
[22:10:57] <apotheon> new rule: Everybody hate Facebook.
[22:11:01] <vdamewood> pulse: Imagine the porn industry in that world.
[22:11:06] <deniska> in 00-05 ICQ was the kind here
[22:11:09] <deniska> king*
[22:11:21] <bnchs> i wish you guys would use IRC
[22:11:26] <vdamewood> Yeah, but no one used ICQ on their phone.
[22:11:29] <deniska> IRC? Never heard of her
[22:11:38] <deniska> vdamewood: kids did
[22:11:39] <pulse> icq was nice for the 2 months that i used it
[22:11:46] <vdamewood> It's I *AM* C not I R C .
[22:11:53] <deniska> (source: was a kid, used icq on a phone)
[22:11:53] <vdamewood> Learn better grammar.
[22:11:54] <apotheon> vdamewood: it might be like the "sex" scene in Demolition Man
[22:12:02] <bnchs> I am C
[22:12:10] <vdamewood> apotheon: That's a sary thought.
[22:12:12] <vdamewood> scary
[22:12:20] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:12:39] <vdamewood> Yar: Data go brrrr
[22:12:43] * pulse hands vdamewood škarje
[22:12:48] <apotheon> Yeah.  Nobody wants to have sex with Sylvester.
[22:13:26] * vdamewood cuts pulse's paper.
[22:14:05] *** Quits: zvijezda (~Foobar@c-98-203-220-45.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[22:14:05] <vdamewood> apotheon: Especially not Tweety.
[22:14:33] <nomagno> deniska: Signal be a commercial(-ish, keyword -ish) product
[22:15:29] <pyzozord> is there any alternative to internet?
[22:15:31] <nomagno> They are financially backed by both the users and Facebook, something about using a watered down version of the Signal protocol in exchange for being discrete buddied with Open Whisker Systems
[22:15:40] *** Quits: Tazy (~Tazmainia@192-143-13-206.ip.airmobile.co.za) (Quit: Leaving)
[22:16:00] <nomagno> pyzozord: Define "internet". To IP, or to the IP address space?
[22:16:29] <pyzozord> no i mean like... different cables?
[22:16:29] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:16:46] <deniska> pyzozord: I get internet without cables :D
[22:16:48] <bnchs> pyzozord: USSD
[22:16:52] <pyzozord> I'm not sure, is telephony going over the same wires as internet?
[22:16:58] <tomathy> does anyone have an open source project online i can contribute to
[22:17:00] <bnchs> you call a phone number, it gives you a menu
[22:17:02] <pyzozord> I think money goes over it's own dedicated wires between banks
[22:17:17] <nomagno> pyzozord: What? You don't need cables to use the internet. Fiber goes on exclusive wires, ADSL goes on the same wires as phone, satellite is a mixed bag
[22:17:35] <bnchs> i use ADSL
[22:17:40] <deniska> pyzozord: internet kinda by definition is a computers and other devices all over the world using IP (internet protocol) to talk
[22:17:44] <bnchs> and i can use the line to call
[22:17:47] <nomagno> The internet is just a centralized distributed system
[22:17:52] <pulse> i run my internet through a fast network of highly trained TCP hamsters
[22:18:02] <nomagno> It's so distributed you only really need connection to another device that is on the network
[22:18:04] <pyzozord> well I said cables but I guess I meant "physically connected devices, maybe be wireless"
[22:18:08] <nomagno> Same with anything, really
[22:18:14] <GeDaMo> https://swling.com/blog/tag/internet-over-shortwave/
[22:18:15] <bayaz> Title: Internet Over Shortwave ? The SWLing Post 
[22:18:19] <apotheon> I mean . . . I don't really use Signal, but it's better than WhatsApp.
[22:18:19] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[22:18:20] <bnchs> wasn't there a TCP driver with carrier pigeons
[22:18:28] <nomagno> pyzozord: You only need connection to a device that is connected to the internet
[22:18:29] <bnchs> with about 1 hour pings
[22:18:53] <nomagno> The medium doesn't matter. You only need a device hooked to the main address space and IP receiving/sending capability
[22:18:56] <apotheon> 11:45 < pyzozord> is there any alternative to internet?
[22:18:58] <apotheon> mesh networking
[22:19:42] <pyzozord> I suppose some kind of message must find some kind of way to be physically delivered to the other end
[22:19:48] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[22:20:10] <pyzozord> there isn't "another internet", "internet" is the term that covers all networks
[22:20:25] <tforever> that's why we have invented private p2p messaging as humans
[22:20:26] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 252 seconds)
[22:20:26] <pyzozord> internet will survive without dns
[22:20:45] <GeDaMo> An internet is a network of networks
[22:21:05] <GeDaMo> The Internet is the global internet
[22:21:13] *** Quits: tforever (~Terabyte@81.214.167.36) (Quit: Segmentation fault (core dumped))
[22:21:16] <nomagno> you can have alternative address space with no connection to the main one
[22:21:26] <nomagno> There is one such project already
[22:21:29] <pyzozord> what was it, Internet Exchange Points? The centers that route packets
[22:22:01] <apotheon> pyzozord: Technically, Internet is the IP-protocol interlinked network spanning the globe as we know it, but internet (lower case i) is any network of networks.
[22:22:02] <GeDaMo> https://en.wikipedia.org/wiki/Internet_exchange_point
[22:22:02] <bayaz> Title: Internet exchange point - Wikipedia 
[22:22:08] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpx19zdtszpvxaa.ipv6.telus.net)
[22:22:34] <apotheon> shit, GeDaMo beat me to it while I was eating pizza
[22:22:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[22:23:13] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:23:18] <apotheon> err, IP-protocol is slightly redundant
[22:23:21] <apotheon> fudgesickles
[22:23:50] <vdamewood> Internetwork IP Protocol
[22:23:51] <apotheon> note to self: stop I-Am-C-ing while eating pizza
[22:24:15] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:24:28] <apotheon> I typed that note while eating pizza.
[22:24:33] <apotheon> I don't seem to learn to well, today.
[22:25:04] <apotheon> My mobile device wants me to reboot it.
[22:25:19] <pyzozord> so pretty much every packet on the internet passes through IXPs?
[22:25:33] <nomagno> I don't think ICANN is neutral enough to be allowed control of what is essentially the only socially acceptable IP address space.
[22:25:49] *** Joins: Pickchea (~private@user/pickchea)
[22:25:49] <pyzozord> that doesn't seem possible, isn't it too much to handle?
[22:26:21] <tomathy> am i right to say all a Neural NEtwork does is approximate an algebraic function?
[22:26:32] <flakland> you can't just drive all the trucks through the same tube!
[22:26:50] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[22:27:08] <vdamewood> pyzozord: Naw, there's no need for an IXP if your source and destination are on the same ISP's network.
[22:27:29] <vdamewood> Or on the same corporate network, or such.
[22:27:35] <[itchyjunk]> any dutch person in here?
[22:27:40] <apotheon> I'd like to have better software at end nodes for allowing management of name resolution.
[22:27:51] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[22:27:57] <vdamewood> It's like IXPs are the highways connecting cities. and traffic in the same city doesn't need to go on a highway.
[22:28:02] <pyzozord> vdamewood: but say, what happens when I'm watching youtube?
[22:28:11] *** Joins: Auron (Auron956@user/auron)
[22:28:36] <pyzozord> I know youtube streams in tcp, tcp has packets, those are wrapped in ip packets. Is every of those packet passing through IXP?
[22:28:40] <vdamewood> pyzozord: Well, sometimes companies like Youtube setup mirrors on certain ISP's networks, and so our get routed there. Otherwise there might be an IXP just because you're not on the same network.
[22:28:42] <pyzozord> that would be crazy amount of packets
[22:28:49] <apotheon> Caching and versioning names associated with addresses would be nice, with a simple interface for rolling one back and pinning it if something changes that one doesn't like, plus local ability to just redirect names for odious shit to localhost.
[22:28:54] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[22:28:55] <vdamewood> pyzozord: TCP has *segments*, not packets.
[22:29:04] <pyzozord> right, sorry
[22:29:07] *** Quits: independent56 (~independe@148.252.128.54) (Ping timeout: 256 seconds)
[22:29:15] <GeDaMo> https://en.wikipedia.org/wiki/Content_delivery_network
[22:29:15] <bayaz> Title: Content delivery network - Wikipedia 
[22:29:24] <flakland> is IXP some fancy lingo for autonomous system or something else?
[22:29:35] <pyzozord> right right cdns
[22:29:39] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[22:29:48] <apotheon> flakland: Internet Exchange Point
[22:29:51] <pyzozord> ooh so cdns work in cooperation with ixps, I didn't realize that
[22:29:52] <apotheon> or eXchange
[22:29:52] <vdamewood> pyzozord: Well, maybe, maybe not. But odds are if one does, they all do.
[22:29:57] <apotheon> because X is "cooler"
[22:30:01] <apotheon> kewlser
[22:30:49] <pyzozord> x is pretty common for "exchange"
[22:30:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:31:00] <apotheon> 'cause kewl
[22:31:11] <pyzozord> I like it because it makes a cross which visually represents an exchange :P
[22:31:17] <pulse> internet was easier in ancient roman times, you just hired a messenger
[22:31:17] <deniska> e×change
[22:31:28] <apotheon> e+change
[22:31:32] <deniska> pulse: big lag and some packet loss tho
[22:31:34] <ski> [itchyjunk] ^
[22:31:43] *** Quits: oakyy (~oaky@wlan-eduroam-130-237-240-90.su.se) (Ping timeout: 256 seconds)
[22:31:54] <pulse> deniska, yeah, literally lost packets too
[22:32:00] <apotheon> deniska: With modern storage tech, though, the bandwidth would be *enormous*.
[22:32:19] <deniska> apotheon: brb putting hard drives on a truck
[22:32:33] <vdamewood> What kind of truk uses harddrives?
[22:32:36] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[22:32:44] <apotheon> truk
[22:32:53] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[22:32:53] <pulse> imagine the bandwidth
[22:32:57] <deniska> vdamewood: ever heard about AWS Glacier?
[22:33:05] <vdamewood> deniska: Nope.
[22:33:17] <apotheon> good
[22:33:23] <deniska> very cheap storage of data you'll hopefully never need
[22:33:30] <deniska> because retrieval is quite expensive :)
[22:33:39] <flakland> oh the IXP is like a switch for AS's
[22:33:46] <deniska> (probably because trucks are actually involved)
[22:34:13] <vdamewood> deniska: Is it literally storing things on physical media, disconnected from the net, in a 'safe' location?
[22:34:15] <apotheon> I guess Glacier has some kind of "within five hours" latency tolerance.
[22:34:22] *** Quits: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279) (Remote host closed the connection)
[22:34:31] <apotheon> vdamewood: probably
[22:35:25] <apotheon> Amazon doesn't actually share details of its tech architecture for Glacier.
[22:35:39] <apotheon> Maybe it's renting space in the NSA super-datacenter.
[22:36:43] <pulse> isn't all media physical
[22:37:08] <vdamewood> pulse: Nope. Some media are psychic.
[22:37:20] <pulse> i see
[22:37:21] <apotheon> Are you a medium?
[22:37:29] <vdamewood> Nope. I'm an extra large.
[22:37:39] <apotheon> no comment
[22:39:22] * vdamewood hands apotheon a comment
[22:39:28] <apotheon> thanks
[22:39:42] <pulse> https://en.wikipedia.org/wiki/Pony_Express
[22:39:43] <bayaz> Title: Pony Express - Wikipedia 
[22:39:48] <pyzozord> need to learn more about internet
[22:39:57] <pulse> early messaging service
[22:40:13] <pyzozord> it doesn't seem possible for medium size building in london to handle all us-europe internet volume
[22:40:44] <pyzozord> and without virtually any added latency too
[22:41:11] <deniska> pyzozord: https://upload.wikimedia.org/wikipedia/commons/8/89/Submarine_cable_map_umap.png
[22:41:11] <bayaz> Type: image/png Size: 326.0 kB 
[22:41:53] <pulse> imagine all the wiresharks sniffing those packets
[22:42:18] <pyzozord> ok more like say 30 medium size buildings
[22:43:12] <deniska> pyzozord: https://i.redd.it/pp1m5yr2lh171.jpg underwater cable-boy :D
[22:43:13] <bayaz> Type: image/jpeg Size: 72.1 kB 
[22:43:14] <pyzozord> looks like russia has liek 8 ixps
[22:43:16] <apotheon> define "medium sized"
[22:43:17] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[22:43:27] <apotheon> in terms of actual volume, perhaps
[22:43:40] <pyzozord> also why do they place ixps only on coastlines?
[22:43:40] <apotheon> "quieter than loud, louder than quiet"
[22:43:57] <vdamewood> deniska: Where does that cable going north from Norway end?
[22:43:58] <apotheon> undersea cable access, probably
[22:44:07] *** Joins: joev (~joev@user/joev)
[22:44:10] <pyzozord> this doesn't seem right tbh
[22:44:17] <deniska> vdamewood: dunno
[22:44:26] <deniska> vdamewood: probably at the Ice Wall
[22:44:35] <pyzozord> also that cable doesn't seem like it can handle say 1/100th of the internet
[22:44:44] <vdamewood> deniska: But the ice wall is the south pole.
[22:44:45] <pyzozord> (looking at the map, estimating 100 connections)
[22:44:58] <deniska> pyzozord: I thought ice wall is all around the flat earth
[22:45:03] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:24] <deniska> pyzozord: each of these is probably a few cables, I expect they occasionally get replaced/maintained
[22:45:38] <apotheon> pyzozord: There's a conspiracy to hide the fact the internet is actually tied together with millions of quantum-entanglement links.
[22:45:51] <deniska> pyzozord: also generally the amount of trafic between continents is smaller than within
[22:45:59] <deniska> pyzozord: you'd yeet your files to local CDNs
[22:46:17] <vdamewood> How many Internet links are there to North Sentinel Island?
[22:46:32] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[22:46:40] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[22:47:01] <vdamewood> deniska: It is, but the ice wall is around the south pole, and the north pole is the center of the world.
[22:47:07] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:07] <vdamewood> deniska: Picture the UN map.
[22:48:09] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[22:48:52] <vdamewood> deniska: https://en.wikipedia.org/wiki/United_Nations#/media/File:Flag_of_the_United_Nations.svg
[22:48:53] <bayaz> Title: United Nations - Wikipedia 
[22:49:43] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:49:46] <edgar-rft> flatearthers use discoid instead of global variables
[22:49:51] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:50:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.155.254) (Ping timeout: 240 seconds)
[22:51:23] *** Joins: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279)
[22:51:59] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[22:56:05] *** Quits: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279) (Ping timeout: 256 seconds)
[22:56:06] <pyzozord> damn may I did overwork myself in the last few weeks
[22:56:32] <pyzozord> maybe it's possible to sleep and eat reasonably and still get overworked
[22:57:05] <pyzozord> I'm not 20 anymore
[22:57:13] *** Quits: stagas (~stagas@2a02:587:c41a:ac49:a399:4815:8a5:cc21) (Ping timeout: 256 seconds)
[22:57:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:58:25] *** Quits: linext (~linext@pool-100-1-124-107.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[22:59:16] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[23:00:13] <deniska> pyzozord: I wrote 7 lines of code this week and I feel exhausted already :D
[23:00:34] *** Joins: linext (~linext@pool-100-1-124-107.nwrknj.fios.verizon.net)
[23:01:04] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f) (Quit: Client closed)
[23:01:19] <pyzozord> honest to god, I spent 7h today hard working, and I produced about 15 lines
[23:01:47] <pyzozord> mostly because project is so complex that I spent pretty much 90% of the time understanding what the code does and where is the right place so make changes
[23:02:01] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[23:02:21] <pulse> deniska, same except i didn't even write code, i just copy pasted some text into a json file
[23:03:19] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[23:03:32] <pyzozord> One would think that programming involves a lot of typing
[23:03:47] <pyzozord> but sometime there is hardly any typing at all, mostly reading
[23:04:55] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[23:05:00] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:05:00] *** Joins: TheRedRipper (~student@user/theredripper)
[23:05:18] <flakland> sometimes it takes me 7 hours to figure out where those 7 lines need to go
[23:05:44] <pulse> programming isn't about writing code
[23:05:48] <TheRedRipper> lol ive been here for 2 seconds and i already feel that
[23:05:54] <pulse> it's about making 3 incompatible things somehow work together
[23:06:03] <TheRedRipper> pulse: its about crying and writing code
[23:06:07] *** Joins: hB7drf (~quassel@user/hB7drf)
[23:06:08] <pulse> hah
[23:06:13] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:06:15] <vdamewood> Yay, nVidia has given up on buying ARM.
[23:06:17] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:06:22] <TheRedRipper> ay Hash !
[23:06:25] *** Joins: stagas (~stagas@2a02:587:c42d:13b4:27b7:1181:49f4:6745)
[23:06:29] <pulse> I still want ATI back
[23:06:36] <pyzozord> why is that a good news?
[23:06:47] <TheRedRipper> why is it good that they stopped vdamewood ?
[23:06:52] <flakland> i want 3dfx back :|
[23:06:53] <pyzozord> isn't arm just another corp, just a smaller intel?
[23:07:07] <TheRedRipper> no not intel
[23:07:10] <vdamewood> pyzozord; No. ARM is very different from Intel.
[23:07:10] <TheRedRipper> it doesnt exist
[23:07:11] <pyzozord> and maybe not even smaller considering they must sell many more chips
[23:07:21] <TheRedRipper> well whats arm then?
[23:07:29] <vdamewood> A chip designer.
[23:07:44] <pyzozord> ooh they are not a fab?
[23:07:48] <GeDaMo> ARM only designs, it doesn't manufacture
[23:08:04] <pyzozord> ok then indeed that's a good news
[23:08:20] <vdamewood> pyzozord: Yes, and there's even a middle ground between just designs and fab where you actually design a full chip that ARM doesn't do.
[23:08:39] <vdamewood> ARM basically designs cores, not full CPUs.
[23:08:43] *** scurfee is now known as mikami
[23:08:54] <GeDaMo> Cores an other components, it has its own GPUs too
[23:09:00] <GeDaMo> s/an/and/
[23:09:22] <TheRedRipper> GeDaMo: ohh i see
[23:09:26] <vdamewood> Intell does all three. AMD does full design but no FAB. Qualcomm does the 'package design' but takes ARMs cores, and outsources FAB.
[23:09:35] <TheRedRipper> wouldnt it be good to have ARM under NViDiA though?
[23:09:35] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[23:09:53] <vdamewood> TheRedRipper: Considering how many cpmpanies compete with nVidia but use ARM, no.
[23:10:08] <TheRedRipper> since intels been in the shitter wouldnt NviDiA want ARM?
[23:10:19] <TheRedRipper> vdamewood: well for the community i would guess not
[23:10:25] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[23:10:29] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[23:10:40] <deniska> pyzozord: I spent 3 hours trying to launch a nuxt thing on my laptop, and I'm not even a frontend dev :D
[23:10:43] <TheRedRipper> plus ARM would loose alot of $$ for just a buyout huh
[23:10:47] <deniska> (I guess that's why it took me so long)
[23:10:49] <vdamewood> TheRedRipper: And that's why nVidia gave up. Antitrust hurtles got too much.
[23:10:59] <TheRedRipper> ahhh i see
[23:11:08] <vdamewood> In both the US and the EU.
[23:11:11] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[23:11:29] *** Joins: raym (~raym@user/raym)
[23:11:30] <deniska> pyzozord: also experimented with writing meson files instead of makefiles to compile some of our C code >_<
[23:11:53] <vdamewood> Anyway, given ARM's current position, it's essential for the community that ARM remain neutral among CPU vendors.
[23:12:09] <vdamewood> actually, maybe processor vendors in general, not just CPUs.
[23:12:19] <TheRedRipper> yeah shit i see 
[23:12:31] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[23:12:33] <pyzozord> deniska: I spent a day implementing cors in kubernetes, and i AM a frontend dev :D
[23:12:43] <deniska> pyzozord: ha, kubernetes :D
[23:12:45] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:12:48] <vdamewood> Apple, Samsung, Qualcomm, these are just a few of AMR's licensees.
[23:13:22] <TheRedRipper> yeah damn
[23:13:25] <deniska> We're strongly advised to switch to kubernetes by another team from the same corp group
[23:13:29] <TheRedRipper> ARM dont go for NViDiA lol
[23:13:34] <TheRedRipper> loose tons of cash monies
[23:13:36] <pyzozord> deniska: I'm very excited to work with kubernets
[23:13:36] <GeDaMo> I'm pretty sure that both Intel and AMD had ARM licenses at one point
[23:13:39] *** Joins: independent56 (~independe@148.252.133.176)
[23:14:00] <TheRedRipper> one buyout vs consistent revenue? id keep where im at haha
[23:14:00] <deniska> pyzozord: we'll need to rewrite at least half of our site to make it work with anything like k8s
[23:14:04] <vdamewood> GeDaMo: StrongARM for Intel
[23:14:11] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:14:15] <TheRedRipper> GeDaMo: strongarm?
[23:14:21] <TheRedRipper> ay ProfSimm whasa
[23:14:24] <GeDaMo> StrongARM was original Digital
[23:14:32] <GeDaMo> Originally
[23:14:33] <vdamewood> TheRedRipper: Keep in mind, ARM isn't independent. It's own by a company called Softbank.
[23:14:40] <ProfSimm> Hello I'm back with a series of preposterous changes to the nature of programming.
[23:14:50] <vdamewood> And Softbank has been trying to get rid of ARM for a few years now.
[23:14:56] <TheRedRipper> vdamewood: mm so softbank gets some/most of the moolah?
[23:15:01] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:15:01] <TheRedRipper> ProfSimm: woo fun
[23:15:08] <deniska> pyzozord: https://12factor.net/ we may implement one or two of these factors :D
[23:15:11] <bayaz> Title: The Twelve-Factor App 
[23:15:12] <vdamewood> TheRedRipper: Money from what?
[23:15:23] <TheRedRipper> a buyout
[23:15:28] <TheRedRipper> or in general, i guess
[23:15:30] <ProfSimm> What if we had scalars which have implicit metadata containing whole dictionaries of data that are only visible to those who explicitly expect them to be there, otherwise it works as a normal scalar
[23:15:35] <vdamewood> TheRedRipper: All of it, from a buyout.
[23:15:38] <TheRedRipper> ah
[23:15:48] <TheRedRipper> ProfSimm: i understand 4 words of that sentence
[23:15:53] <TheRedRipper> no 5
[23:15:55] <vdamewood> TheRedRipper: It would be just one company selling a 'product' to another.
[23:16:03] <TheRedRipper> vdamewood: ohhhh 
[23:16:07] <TheRedRipper> that make sense
[23:16:24] <GeDaMo> ARM's going public
[23:16:26] <ProfSimm> TheRedRipper: well a function returns 5, but actually there's a hidden data in there if you need more info on how the function got that 5. 
[23:16:37] <ProfSimm> TheRedRipper: it's like multiple outputs posing as a single output
[23:17:01] <TheRedRipper> :o
[23:17:10] <GeDaMo> https://www.reuters.com/business/softbanks-66-bln-sale-arm-nvidia-collapses-ft-2022-02-08/
[23:17:10] <GeDaMo> "Britain's Arm, which named a new CEO on Tuesday, said it would go public  before March 2023 and SoftBank CEO Masayoshi Son indicated that would  be in the United States, most likely the Nasdaq."
[23:17:11] <bayaz> Title: SoftBank dumps sale of Arm over regulatory hurdles, to IPO instead 
[23:17:51] <vdamewood> GeDaMo: Can't wiat for it to happen!
[23:18:19] <GeDaMo> I used to own ARM shares until Softbank bought them :P
[23:18:23] <TheRedRipper> wowo
[23:18:26] <flakland> it's a weird move, can only hope for the best though with how much they dumped on buying ARM
[23:18:32] <TheRedRipper> so people can grab ARM shares now?
[23:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:18:41] <GeDaMo> Not until after they go public
[23:18:48] <TheRedRipper> ah
[23:19:29] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[23:19:41] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:19:59] <vdamewood> MediaTek is another ARM licensee.
[23:20:06] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:c189:b6ab:68c1:858f)
[23:20:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:20:49] <vdamewood> GeDaMo: What would you call that part of the CPU manfacturing process companies like qualcomm and mediatek do?
[23:21:06] <flakland> how can softbank provide value for it's shareholders if they're just a licensing comnpany
[23:21:11] <GeDaMo> I want to say something like composition but that's not it
[23:21:18] <rtypo> i think microchip and stm also
[23:21:34] <flakland> softARM*
[23:21:38] <vdamewood> flakland: Just a licensing company?
[23:22:13] <GeDaMo> https://en.wikipedia.org/wiki/Fabless_manufacturing ?
[23:22:14] <bayaz> Title: Fabless manufacturing - Wikipedia 
[23:22:14] <vdamewood> GeDaMo: I'm half tempted ot say 'manufacturing', but that sounds too much like it implies fab.
[23:22:26] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[23:22:42] <flakland> yeah i mean, how can they leveraege their  stock? to buy new design computers, fancy pencils?
[23:22:47] <pyzozord> I'm thinking about investing my savings into tech stocks too
[23:23:02] <vdamewood> I want to buy a few stocks of ARM.
[23:23:15] <deniska> stonks
[23:23:50] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[23:24:03] <oldlaptop> designing ready-to-fab CPU cores is not a very easy thing, I don't think
[23:24:10] <rtypo> i'm in! wait, i don't have any money
[23:24:18] <flakland> i am sadly forseeing some exclusionary business tactics on the way after IPO
[23:24:32] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:24:54] <oldlaptop> "easier to do sustainably than run a cutting-edge semiconductor fab" is unfortunately among the lowest bars known
[23:25:01] <vdamewood> Apple used to own part of ARM.
[23:25:40] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:26:05] <vdamewood> I wonderif Apple will ever switch away from ARM.
[23:26:11] <ProfSimm> Apple still has a basically unlimited license on ARM architectures
[23:26:17] <ProfSimm> So they have no reason to switch
[23:26:21] <ProfSimm> But they can very easily do
[23:26:23] <flakland> UNLIMITED?
[23:26:26] <flakland> source?
[23:26:27] <ProfSimm> Basically
[23:26:35] *** Joins: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279)
[23:26:39] <user51> what would be a good reason to switch?
[23:27:46] <ProfSimm> user51: when ARM no longer has the ISA Apple needs
[23:28:03] <ProfSimm> flakland: it's called architectural license. I think ARM doesn't give out those anymore
[23:28:12] <flakland> i only ask because "basically unlimited" == "limited"
[23:28:15] *** Joins: hB7drf (~quassel@user/hB7drf)
[23:28:35] <ProfSimm> Well they still pay ARM
[23:28:35] *** Quits: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-79.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[23:28:48] <ProfSimm> But compared to what they paid Intel it's like peanuts
[23:28:53] *** Joins: jazzy (~jaziz@user/jaziz)
[23:29:04] <ProfSimm> Even counting their pay fab separately
[23:29:06] <flakland> why would they pay if it's an unlimited partnership
[23:29:17] <flakland> and what are they paying for
[23:29:42] <ProfSimm> flakland: well it's unlimited in that Apple can architect their CPUs however they please as long as the ISA is compatible. Everyone else has to use ARM's CPU designs, can't make their own
[23:29:50] <vdamewood> Apple pays for a license to use the ARM ISAs
[23:30:01] *** Quits: NovaXrine (~NovaXrine@void.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[23:30:21] *** Joins: NovaXrine (~NovaXrine@void.novaxrine.com)
[23:30:26] <flakland> nothing about this sounds unlimited
[23:30:32] <ProfSimm> Eventually Apple will switch to their own ISA or a open source one
[23:30:44] <ProfSimm> But maybe those this decade 
[23:31:00] <vdamewood> Apple usually takes 10 years or more to change ISAs.
[23:31:11] <ProfSimm> s/those/not
[23:31:17] <ProfSimm> s/those/not/
[23:31:18] <vdamewood> 10 years the first time, 12 the second, 15/16 the third.
[23:31:23] *** Quits: murii (~murii@2a02:a58:835a:1100:8146:a0dc:a520:2279) (Ping timeout: 252 seconds)
[23:31:27] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:31:34] <ProfSimm> They're good at long term planning
[23:31:47] <vdamewood> This isn't the first time Apple  have changed architectures on the Mac.
[23:32:18] <ProfSimm> Third time
[23:32:22] <deniska> imagine m68k_64 with M1-like tech
[23:32:43] <vdamewood> deniska: And all that cruft.
[23:32:54] <ProfSimm> I can't imagine any other company pulling this off. It's quite impressive
[23:33:16] <ProfSimm> There's a Windows on ARM and no one cares about it
[23:33:25] <flakland> pulling what off, making an ARM computer?
[23:33:37] <vdamewood> I care about it, but MS signed an exclusivity deal so it won't work on my next ARM system.
[23:33:43] <ProfSimm> flakland: switching CPU architecture on your entire ecosystem with barely a hiccup
[23:34:30] <vdamewood> Seriously, I would LOVE to run Windows on ARM in a VM on a MacBook Pro with Apple Silicon.
[23:34:31] *** Quits: mikami (~mikami@broadband-77-37-146-212.ip.moscow.rt.ru) ()
[23:34:41] *** Quits: tehenderz (~tehenderz@ti0018a400-8189.bb.online.no) (Ping timeout: 252 seconds)
[23:34:46] <tomathy> yay fb stock still falling
[23:34:57] <vdamewood> Oh, and with a native build of Visual Studio, too.
[23:35:00] <flakland> profsimm are you saying m1 can run any piece of apple software written without recompilation?
[23:35:10] *** Joins: tehenderz (~tehenderz@ti0018a400-8830.bb.online.no)
[23:35:17] <flakland> that would be impressive
[23:35:23] <GeDaMo> Rosetta
[23:35:36] <GeDaMo> https://en.wikipedia.org/wiki/Rosetta_(software)
[23:35:36] <bayaz> Title: Rosetta (software) - Wikipedia 
[23:35:39] <vdamewood> flakland: For the most part, any 64-bit macOS binary.
[23:35:52] <GeDaMo> "a dynamic binary translator developed by Apple Inc. for macOS, an application compatibility layer between different instruction set architectures.  It gives developers and consumers a transition period in which to  update their application software to run on newer hardware, by  "translating" it to run on the different architecture."
[23:35:56] <deniska> It kinda won't run ppc software unless you emulate full system
[23:36:00] <flakland> dropping 32bit support doesn't constitute a "hiccup"
[23:36:03] <deniska> Apple is not that great at backwards compat
[23:36:12] <ProfSimm> flakland: it can actually run a lot of x64 software without recompilation, and faster than the Intel chip did. But I didn't mean that. My point is higher level, they switched the ecosystem. It's not just about emulating Intel, it's many things. Dev experience, tools, and so on
[23:36:36] <ProfSimm> flakland: they dropped 32-bit support before the switch
[23:36:43] <flakland> not long before the switch
[23:36:46] <vdamewood> The recompilation part is pretty simple, too.
[23:37:01] <vdamewood> flakland: Well, that's because they gave developers time to rebuild after they announced it.
[23:37:35] <ProfSimm> flakland: I'd say it was barely a hiccup. Maybe half  dozen blogs whined about it once.
[23:37:38] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[23:37:45] <vdamewood> (After they announced they're dropping 32-bit support, that is.)
[23:37:53] <flakland> it wasn't a hiccup, just a bunch of whiney bloggers. gotcha
[23:38:08] <flakland> if i announce my hiccup, its not a hiccup
[23:38:30] <ProfSimm> flakland: change management is not about changing things while no one has to do anything.
[23:38:39] <ProfSimm> flakland: that doesn't work long term
[23:38:53] *** Joins: tforever (~Terabyte@81.214.167.36)
[23:39:08] <ProfSimm> You accumulate tech debt. You need to discard that tech debt in a predictable, regular, small, frequent steps
[23:39:42] *** Quits: xff0x (~xff0x@2001:1a81:533f:ea00:4e49:abcb:9c05:c4b8) (Ping timeout: 260 seconds)
[23:39:57] <ProfSimm> The other approach is Windows. Just pile that tech debt under the carpet and get better at balancing over a wobbly carpet
[23:40:15] <ProfSimm> Linux is also doing that.
[23:40:24] <ProfSimm> Although not to that degree
[23:40:32] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[23:41:13] <vdamewood> Well, the Linux kernel has only once had a backwards-incompatible release.
[23:41:25] <vdamewood> The userland, on the other hand, is kind of a nightmare.
[23:41:57] <apotheon> ProfSimm: That's only beause Linux hasn't been doing it as hard for as long.
[23:42:03] <apotheon> It's trying to catch up, though.
[23:42:06] <ProfSimm> Well this is not about back-compat. It's change management, and not removing tech debt
[23:42:10] <ProfSimm> To me at least
[23:42:20] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:42:29] <vdamewood> What exactly is 'tech debt'?
[23:42:43] <pulse> x server
[23:42:46] <flakland> it's that thing that prevents you from stacking hundreds of billions in cash and do nothing with it
[23:43:02] <ProfSimm> vdamewood: a house of cards of ad-hoc solutions that accumulate into a solution that has a ton of incidental complexity you don't get rid of and refactor over time
[23:43:18] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Client Quit)
[23:43:31] <pulse> maybe if programmers didn't have such a fear of rewrite from scratch, things would be better :P
[23:43:31] <ProfSimm> vdamewood: like Windows has like 5 or 6 control centers already or something
[23:43:34] <pyzozord> vdamewood: shitty code
[23:43:52] <ProfSimm> They have 6-7 UI frameworks running concurrently.
[23:43:55] <pyzozord> well I suppose can be shitty hardware too
[23:44:04] <ProfSimm> There's Windows 95 code in it. Heck maybe even Windows 3.11 code in it
[23:44:25] <ProfSimm> And that wouldn't be bad, if that code was maintained. Instead it's been replaced few times, but the old version is ALSO there
[23:44:28] <vdamewood> ProfSimm: not exactly, re 95 code.
[23:44:42] <pyzozord> vdamewood: "things you should fix but haven't (yet, hopefully)"
[23:44:46] <vdamewood> ProfSimm: I mean, they did copy the Shell from 95 into NT 4.0, so that's there.
[23:45:05] <vdamewood> ProfSimm: But Windows now is based on the NT code base and that was a total rewrite.
[23:45:17] <apotheon> Tech debt is what accumulates in your project when you don't take the time to do it right *now*, and lie to yourself by saying you'll fix it *later*.
[23:45:31] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:45:34] <ProfSimm> NT is not a total rewrite. It just has a different kernel
[23:45:50] <vdamewood> That implies that Windows 3 had a kernel.
[23:46:09] <vdamewood> Windows 3 wasn't even an operating system.
[23:46:16] <ProfSimm> OK.
[23:46:20] <pulse> there is a kernel of truth in every windows
[23:46:28] <apotheon> vdamewood: Code was lifted from the non-NT side of things in the WinXP merge of the two lines.
[23:46:41] <apotheon> I don't know how much of that is still there.
[23:46:42] *** Quits: tforever (~Terabyte@81.214.167.36) (Quit: Segmentation fault (core dumped))
[23:46:54] <vdamewood> apotheon: Ah, well now we're getting somewhere.
[23:46:56] *** Joins: hB7drf (~quassel@user/hB7drf)
[23:47:12] *** Quits: TheRedRipper (~student@user/theredripper) (Quit: WeeChat 3.3)
[23:47:36] <pulse> rate my doodles https://i.imgur.com/VDmxl7Y.jpg
[23:47:37] <bayaz> Type: image/jpeg Size: 378.6 kB 
[23:47:57] <apotheon> The initial plan was to just wholesale shove everyone into the NT line, but people rebelled at having to use a better-organized system (Win2K) than what they had before (Win98), so Microsoft puked out a weekend-update shitpile of post-98 (ME), then the two got their stuff merged in XP.
[23:48:00] <vdamewood> pulse: Splork out of Gwak
[23:48:09] <pulse> thank you sir
[23:48:38] <tomathy> the rate of being told "this is bad software" should be at least 3 times per day
[23:48:47] <apotheon> I was, quite unfortunately, very actively dealing with that shit through the whole Win2K->WinME->WinXP->WinXP-SP2 period.
[23:49:10] <pyzozord> pulse: pretty cool
[23:49:19] <vdamewood> Ah, Windows XP SP 2. The point when Windows (non-NT) was truly dead.
[23:49:24] <pulse> pyzozord, that is all i did today, aside from copy some text into a json
[23:49:37] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[23:49:46] <apotheon> pulse: I give your doodles a 3.9 GPA.
[23:49:47] *** Joins: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4)
[23:49:51] <pulse> nice
[23:50:02] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[23:50:06] <apotheon> vdamewood: NT was undead at that point.
[23:50:13] <apotheon> Gob, SP2 was a debacle.
[23:50:24] <nomagno> pulse: If you lose inspiration, you gotta start doing the heavy stuff!
[23:50:25] <apotheon> Shit was breaking *everywhere*.
[23:50:32] <nomagno> That is, write docs, comment, plan ahead, reorganize...
[23:50:47] <nomagno> At least that takes me way more time than actually advancing my project.
[23:50:47] <apotheon> XP actually eliminated significant amounts of what was good about NT, too.
[23:50:54] <pulse> i read somewhere that doodling increases your intelligence, or something
[23:50:57] <ProfSimm> I use Linux, Windows and macOS, but I'm really disappointed with Windows 11. "We'll support Windows forever, it's the last version". "Wait no, f**k you, we stop supporting it and the new PC and laptop you have"
[23:50:58] <vdamewood> apotheon: Oh?
[23:50:58] <pulse> i believe it
[23:51:11] <ProfSimm> This is Microsoft trying to be Apple and totally not getting how to do it
[23:51:26] <nomagno> I'm kinda doing see-through development right now, so I can't actually push anything that isn't half-presentable
[23:51:30] <pulse> ProfSimm, i like that my PC is incompatible with windows 11
[23:51:32] <nomagno> So that also forces quite a bit of discipline
[23:51:46] <ProfSimm> pulse: what's there to like, they'll drop tech support in 2024
[23:51:47] <nomagno> with muh software dev
[23:52:01] <pulse> who the hell needs tech support for windows
[23:52:04] <nomagno> My PC is also incompatible
[23:52:09] <nomagno> Not that I planned on installing it... but jeez
[23:52:12] <vdamewood> ProfSimm: Re: MS Trying to be Apple: Notice how after MS went' on perpetual 10 like Apple, Apple stopped and released macOS 11. Then just after that MS announces WIndows 11?
[23:52:15] <ProfSimm> pulse: I'm talking about security patches
[23:52:21] <pyzozord> pulse: I see bitcoin with moons, electric circuit, ailen electric ciruit, puzzles, more puzzles, futuristic city, contryball orgy, alien font, sqiggles, organic squggles fighting mechanical squiggles
[23:52:22] <pulse> ProfSimm, they won't drop those by 2024
[23:52:26] <apotheon> vdamewood: One of my favorite examples of how things got shat up is the loss of a lot of capabilities in registry keys.  Once upon a time, you could just turn off the desktop process itself.  You'd still have the WIMP interface, but none of it was in the desktop/wallpaper area, saving a bunch of resource consumption.
[23:52:30] <pulse> pyzozord, hmmmmmmmmmm
[23:52:32] <apotheon> vdamewood: That went away with XP.
[23:52:33] <ProfSimm> pulse: afaik they will
[23:52:40] <pulse> pyzozord, i like your interpretations
[23:52:49] <pulse> ProfSimm, no, they won't. windows 10 will be supported for a long time
[23:52:54] <pulse> just like windows xp was
[23:52:58] <pulse> and 2000, and all prior versions
[23:53:24] <ProfSimm> pulse: this article says you need to buy "extended support". https://www.computerworld.com/article/3630769/microsoft-likely-to-offer-extended-security-updates-for-windows-10-in-2025.html
[23:53:25] <bayaz> Title: Microsoft likely to offer Extended Security Updates for Windows 10 in 2025 
[23:53:33] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:53:35] <ProfSimm> pulse: which costs a ton and is for big corporations only basically
[23:53:43] <apotheon> vdamewood: A bunch of third-party desktop tools were permanently broken after that, kinda like how a bunch of important extensions were permanently broken by the new extension system in Firefox when Firefox became Chrome--.
[23:54:04] <apotheon> 13:22 < pulse> who the hell needs tech support for windows
[23:54:08] <apotheon> Not me.  I use OpenBSD.
[23:54:15] <vdamewood> apotheon: became chrome?
[23:54:25] * vdamewood hands apotheon a blowfish.
[23:54:26] <pulse> ProfSimm, they just say that to scare people into upgrading
[23:54:44] <pulse> apotheon, i've installed manjaro/xfce on my 2nd pc and i really like it
[23:54:53] <ProfSimm> pulse: yes they just say it to scare people into upgrading. And they'll also do it, though.
[23:55:03] <nomagno> apotheon: Daily driving FreeBSD has been surprisingly comfy
[23:55:14] <pyzozord> huh, you guys are on bsd?
[23:55:19] <pyzozord> that's pretty cool
[23:55:22] <deniska> I switched primarily to linux during winxp era
[23:55:23] <vdamewood> Hell, I'm on BSD.
[23:55:25] <ProfSimm> pyzozord: is that a recreational drug
[23:55:30] <apotheon> vdamewood: Firefox functionality is *much* more Chrome-like now.  The extension system is so constrained as to be almost unusable for many purposes now, for instance.
[23:55:43] <pyzozord> ProfSimm: it's pretty hardcore if you ask me
[23:55:50] <apotheon> vdamewood: That's one thing that changed.  Mozilla also switched to more Chrome-like versioning and release engineering.
[23:55:54] <vdamewood> apotheon: Ah, okay. So it's not like they switched to Chromium or anothing like Edge did.
[23:56:11] <apotheon> nomagno: glad you like FreeBSD
[23:56:11] <nomagno> pyzozord: Yeah switched recently for a little change. I find management in general to be kinda better than with Linux + SystemD + GNU + Debian once you learn to compensate for the unix-flavour-specific quick
[23:56:12] <deniska> pyzozord: If I had more spare time, I'd put bsd onto things :D https://i.imgur.com/hlMh1mZ.jpg
[23:56:13] <bayaz> Type: image/jpeg Size: 290.2 kB 
[23:56:15] <vdamewood> Imitation rather than incorperation.
[23:56:16] <apotheon> nomagno: There's a lot to like about it.
[23:56:30] <vdamewood> I used improssonedBSD.
[23:56:37] <vdamewood> imprisonedBSD
[23:56:39] <pyzozord> deniska: is that your laptop?
[23:56:49] <apotheon> vdamewood: No, it's not literally built on Blink.
[23:57:05] * vdamewood pets his Gecko.
[23:57:12] <pyzozord> deniska: it must be I see "denis@toughbsd"
[23:57:21] <apotheon> vdamewood: . . . but Firefox dropped Gecko in favor of whatever rendering engine it uses now, which is constructed much more similarly to parts of Blink than Gecko was, as far as I understand it.
[23:57:32] <nomagno> apotheon: Yeah, the ports system is great in that it is simple, elegant, integrates with the filesystem, and I just have a very good idea of how to approach hard forking FreeBSD if I ever needed to starting from the NanoBSD scripts
[23:57:36] <vdamewood> Oh.
[23:57:42] * vdamewood mourns his Gecko.
[23:57:45] <deniska> pyzozord: well, my gf used it briefly in ~2013 when she was between proper laptops
[23:57:56] <apotheon> vdamewood: Firefox even uses something like Chrome's worst-of-both-worlds multiprocess approach to tabs.
[23:57:58] <pyzozord> deniska: pretty striking look
[23:58:11] <vdamewood> apotheon: Yay! Not.
[23:58:33] <nomagno> vimb is also kinda comfy, thanks for the suggestion
[23:58:33] * vdamewood pets his Safari.
[23:58:44] <nomagno> i3 overall is just better integrated with how I use computers
[23:58:51] <deniska> pyzozord: I recently played around with a more modern toughbook (intel 5th gen or so), they still look similarly, although with 16:9 brighter screen :)
[23:59:03] <nomagno> I don't like tabs. I like to have all viewports presented to me clearly, and NEVER collapsed
[23:59:05] <apotheon> Chrome's initial multiprocess design had some significant benefits, but they went away when Chrome devs started wantonly violating the resource and data separations between them.
[23:59:09] * pyzozord googles toughbook
[23:59:15] <apotheon> nomagno: glad you like Vimb, too
[23:59:24] <deniska> pyzozord: lineup of rugged laptops from panasonic
[23:59:33] <nomagno> apotheon: Yeah overall just much more flexible
[23:59:37] <apotheon> nomagno: glad you like i3, too
[23:59:38] <pyzozord> ooh I see
[23:59:57] <deniska> pyzozord: the more modern one even had a strap for a hand to wear it like a tablet :)
