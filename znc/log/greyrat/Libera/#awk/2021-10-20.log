[00:09:39] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:10:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:41:40] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 258 seconds)
[00:46:10] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[00:56:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[00:56:40] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:31:15] *** Joins: jess (~jess@libera/staff/jess)
[01:39:44] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:39:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:29:07] *** Quits: shbot (~shbot@37.139.2.101) (Ping timeout: 252 seconds)
[02:29:53] *** Joins: roarde (~roarde@user/roarde)
[02:57:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[02:57:25] *** Joins: shbot (~shbot@37.139.2.101)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:10:23] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[03:15:49] *** Joins: rundown (~eb0t@90.199.166.206)
[03:58:19] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 258 seconds)
[03:59:26] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:22:11] *** Joins: earnestly (~earnest@user/earnestly)
[04:30:31] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:35:06] *** Joins: vlm (~vlm@user/vlm)
[04:42:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:43:23] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[04:45:25] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[04:48:40] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[04:54:41] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[05:02:37] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[05:03:38] *** Quits: Torr (~Torr@user/torr) ()
[05:03:49] *** Joins: Torr (~Torr@user/torr)
[05:18:13] *** brennen is now known as brennen|afk
[05:22:35] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 264 seconds)
[05:25:18] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[05:26:13] *** Joins: emanuele6 (~emanuele6@net-2-36-101-242.cust.vodafonedsl.it)
[05:26:13] *** Quits: emanuele6 (~emanuele6@net-2-36-101-242.cust.vodafonedsl.it) (Changing host)
[05:26:13] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[05:52:51] *** Joins: Torr (~Torr@user/torr)
[07:41:50] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[08:03:01] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 252 seconds)
[09:34:43] *** Joins: lgc (~lgc@user/lgc)
[09:43:40] *** Joins: lavaball (felix@31.204.155.215)
[10:10:41] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[10:27:00] *** Joins: dextaa3 (~DV@user/dextaa)
[10:27:50] *** Joins: Meli-sama (~meli@user/meli)
[10:28:54] *** Joins: Strykar_ (~wakka@signald/Strykar)
[10:31:34] *** Joins: mikeputnam1 (~mikeputna@wilug/mikeputnam)
[10:38:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:39:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:39:50] *** Quits: Meli (~meli@user/meli) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Strykar (~wakka@signald/Strykar) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Ping timeout: 260 seconds)
[10:39:50] *** Meli-sama is now known as Meli
[10:39:50] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 260 seconds)
[10:39:50] *** dextaa3 is now known as dextaa
[11:03:30] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 265 seconds)
[11:23:31] *** Quits: dionys (dionys@user/dionys) (Quit: dionys)
[11:24:18] *** Joins: dionys (dionys@user/dionys)
[12:04:41] *** Quits: wwallace (~afernande@63.240.73.102) (Remote host closed the connection)
[12:05:04] *** Joins: wwallace (~afernande@63.240.73.102)
[12:06:05] *** Joins: earnestly (~earnest@user/earnestly)
[12:58:31] *** Joins: seninha (~seninha@user/seninha)
[13:49:25] *** Quits: wuseman (wuseman@user/wuseman) (Ping timeout: 258 seconds)
[13:49:43] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[14:22:38] *** Quits: calaz (~calaz@user/calaz) (Quit: ZNC - https://znc.in)
[14:27:57] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[15:56:15] *** Quits: geirha (~geirha@user/geirha) (Quit: WeeChat 2.8)
[16:09:05] *** Joins: geirha (~geirha@user/geirha)
[16:09:49] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[16:11:07] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: Leaving)
[16:11:15] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 258 seconds)
[16:13:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:16:18] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:18:11] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[16:18:15] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[16:41:27] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[16:54:23] *** Joins: seninha (~seninha@user/seninha)
[17:07:52] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[17:24:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:46:42] *** Joins: Torr (~Torr@user/torr)
[17:52:04] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (Ping timeout: 258 seconds)
[17:53:36] *** Joins: tag (sid271787@lymington.irccloud.com)
[17:54:38] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[17:56:36] <axisys> I tried to convert mstp1aglb001 to gitlab1 with gsub(/mstp.*\(\d) /,"gitlab\\1") and it did change it.. what am I doing wrong?
[17:57:48] <emanuele6> axisys: \d is not ERE
[17:57:53] <emanuele6> [[:digits:]]
[17:59:10] <emanuele6> also you have one of the parens with a backslash and the other without
[17:59:30] <axisys> oops
[18:00:56] <emanuele6> also i don't think gsub supports group matching not even in GNU awk
[18:00:58] <axisys> \([[:digits:]]\) gives invalid character class
[18:01:27] <emanuele6> axisys: it's digit without the s
[18:01:28] <axisys> emanuele6: using GNU awk 4.0.2 in centos 7
[18:01:51] <emanuele6> also \( is BRE for starting a group
[18:02:09] <emanuele6> awk uses ERE, the character for starting a group is ( by itself
[18:02:34] <emanuele6> but you can't replace groups in gsub
[18:02:42] <emanuele6> in gawk i believe you can if you use gensub
[18:03:22] <emanuele6> # <<< 'mstp1aglb001' awk '{ gsub(/mstp.*([[:digit:]]).*/,"gitlab\\1"); print }'
[18:03:24] <shbot> emanuele6: gitlab\1
[18:03:38] <emanuele6> # <<< 'mstp1aglb001' gawk '{ print gensub(/mstp.*([[:digit:]]).*/,"gitlab\\1") }'
[18:03:40] <shbot> emanuele6: gawk: cmd. line:1: { print gensub(/mstp.*([[:digit:]]).*/,"gitlab\\1") }
[18:03:40] <shbot> emanuele6: gawk: cmd. line:1:                                                   ^ 2 is invalid as number of arguments for gensub
[18:03:44] <emanuele6> oops
[18:03:49] <emanuele6> # <<< 'mstp1aglb001' gawk '{ print gensub(/mstp.*([[:digit:]]).*/,"gitlab\\1", $0) }'
[18:03:51] <shbot> emanuele6: gawk: cmd. line:1: (FILENAME=- FNR=1) warning: gensub: third argument `mstp1aglb001' treated as 1
[18:03:51] <shbot> emanuele6: gitlab1
[18:04:04] <emanuele6> oh, right oops
[18:04:34] <emanuele6> # <<< 'mstp1aglb001' gawk '{ print gensub(/mstp.*([[:digit:]]).*/,"gitlab\\1", "g") }'
[18:04:36] <shbot> emanuele6: gitlab1
[18:04:48] <emanuele6> since you were using gsub, i passed "g"
[18:04:58] <emanuele6> but this only works with gawk
[18:05:01] <emanuele6> # <<< 'mstp1aglb001' nawk '{ print gensub(/mstp.*([[:digit:]]).*/,"gitlab\\1", "g") }'
[18:05:04] <shbot> emanuele6: nawk: calling undefined function gensub
[18:05:04] <shbot> emanuele6:  input record number 1, file 
[18:05:04] <shbot> emanuele6:  source line number 1
[18:07:06] <axisys> i only want the last digit.. I know there is space on the last digit .. also applying it on $1
[18:08:06] <axisys> gensub(/mstp.*([[:digit:]]) /,"gitlab\\1",$1) did not work? where do put the "g" ?
[18:08:23] <axisys> it did not error anything.. but did not change it
[18:09:25] <emanuele6> # <<< 'mstp1aglb001' gawk '{ print gensub(/mstp.*([[:digit:]])$/,"gitlab\\1", "g") }'
[18:09:27] <shbot> emanuele6: gitlab1
[18:09:27] <axisys> I am using gawk
[18:09:37] <emanuele6> but use that then ^
[18:09:47] <emanuele6> but what's the point of using a regex for this stuff
[18:10:05] <emanuele6> just use sed if you want to do this type of things
[18:10:56] <axisys> I am doing a gsub on second field as well 
[18:11:21] <axisys> which works.. so fig add another gsub for the first field on same awk/gawk
[18:13:36] <axisys> gensub(/mstp.*([[:digit:]])$/,"gitlab\\1","g") did not error but did not change either. this should apply to first field.. although I am using "g" instead of $1 like yours
[18:14:34] <emanuele6> i was using "g"...
[18:18:39] <axisys> I see.. so "g",$1 and did not change
[18:21:35] <emanuele6> <<< 'mstp1aglb001 mstp1aglb002 mstp1aglb035' awk '{ for (i=1;i<=NF;++i) if (/mstp.*[[:digit:]]/) $i="gitlab"substr($i,length($i)) } 1'
[18:21:41] <emanuele6> # <<< 'mstp1aglb001 mstp1aglb002 mstp1aglb035' awk '{ for (i=1;i<=NF;++i) if (/mstp.*[[:digit:]]/) $i="gitlab"substr($i,length($i)) } 1'
[18:21:43] <shbot> emanuele6: gitlab1 gitlab2 gitlab5
[18:21:57] <emanuele6> this is how you do this stuff in awk, if you want to use a regex, use sed...
[18:25:43] <axisys> how do I it for one item? echo mstp1aglb005 | awk ?
[18:27:43] <emanuele6> can you just say what you are you trying to do in english?
[18:28:30] <emanuele6> also i just noticed i had a mistake in my last command
[18:28:43] <emanuele6> # <<< 'mstp1aglb001 mstp1aglb002 mstp1aglb035' awk '{ for (i=1;i<=NF;++i) if ($i ~ /^mstp.*[[:digit:]]$/) $i="gitlab"substr($i,length($i)) } 1'
[18:28:45] <shbot> emanuele6: gitlab1 gitlab2 gitlab5
[18:29:39] <axisys> I have multiple lines like this 'mstp1aglb001 ansible_hostname=10.151.11.19' .. want to convert them to ssh config with two lines like this
[18:29:46] <axisys> host gitlab1 
[18:29:55] <axisys>      hostname 10.151.11.19
[18:34:02] <emanuele6> awk '/^mstp[^[:blank:]][[:digit:]][[:blank:]]+ansible_hostname=.*$/ { print "host gitlab" substr($1,length($1); print "\thostname "substr($2, index($2,"=")+1) }'
[18:34:07] <emanuele6> let's see if it works
[18:34:21] <emanuele6> # <<< 'mstp1aglb001 ansible_hostname=10.151.11.19' awk '/^mstp[^[:blank:]][[:digit:]][[:blank:]]+ansible_hostname=.*$/ { print "host gitlab" substr($1,length($1); print "\thostname "substr($2, index($2,"=")+1) }'
[18:34:28] <shbot> emanuele6: awk: syntax error at source line 1
[18:34:28] <shbot> emanuele6:  context is
[18:34:28] <shbot> emanuele6: etc... ( http://ix.io/3CjL )
[18:34:58] <emanuele6> missing a paren
[18:35:49] <emanuele6> and a *
[18:36:04] <emanuele6> # <<< 'mstp1aglb001 ansible_hostname=10.151.11.19' awk '/^mstp[^[:blank:]]*[[:digit:]][[:blank:]]+ansible_hostname=.*$/ { print "host gitlab" substr($1,length($1)); print "\thostname "substr($2, index($2,"=")+1) }'
[18:36:06] <shbot> emanuele6: host gitlab1
[18:36:06] <shbot> emanuele6:         hostname 10.151.11.19
[18:36:30] <emanuele6> this is how you do that in awk, regex group matching is more of a sed thing
[18:41:27] <axisys> gotcha.. super appreciate your help.. let me try that
[18:45:55] <emanuele6> # <<< 'mstp1aglb001 ansible_hostname=10.151.11.19' sed 's,^mstp[^[:blank:]]\([[:digit:]]\)[[:blank:]]\{1,\}ansible_hostname=\(.*\)$,gitlab\1\n'$'\t''hostname \2,'
[18:45:57] <shbot> emanuele6: sed: -e expression #1, char 79: unknown option to `s'
[18:46:05] <emanuele6> :I
[18:47:09] <emanuele6> oh, i am using comma as delimiter and that is messing with \{1,\}
[18:51:41] <emanuele6> and i am missing a star again xD
[18:52:13] <emanuele6> # <<< 'mstp1aglb001 ansible_hostname=10.151.11.19' sed -n 's/^mstp[^[:blank:]]*\([[:digit:]]\)[[:blank:]]\{1,\}ansible_hostname=\(.*\)$/gitlab\1\'$'\n\t''hostname \2/p'
[18:52:15] <shbot> emanuele6: gitlab1
[18:52:15] <shbot> emanuele6:         hostname 10.151.11.19
[18:52:28] <emanuele6> axisys: this is how you would do it in sed
[18:54:00] <emanuele6> match `^mstp[^[:blank:]]*\([[:digit:]]\)[[:blank:]]\{1,\}ansible_hostname=\(.*\)$', replace with `gitlab\1\'$'\n\t''hostname \2' (i am using a bash cstring to input \n and \t because they must be literal in sed), and `/p' only print if the line patched
[19:02:42] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[19:02:56] <emanuele6> s/patched/matched/
[19:06:26] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[19:22:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[19:37:07] *** Quits: samir (~azureuser@user/samir) (Ping timeout: 252 seconds)
[19:59:52] *** Joins: samir (~azureuser@user/samir)
[20:44:47] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 264 seconds)
[20:56:50] *** Joins: seninha (~seninha@user/seninha)
[21:05:54] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[21:25:07] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[21:32:29] <CrtxReavr> What's a more elgant way to do?: echo $0 | awk 'BEGIN {FS="/"} ; {print $NF}'
[21:33:13] <emanuele6> well, since that is a shell variable there is no point in using awk
[21:33:36] <emanuele6> so off-topic question
[21:33:45] <CrtxReavr> Seemed more sane than using cut(1).
[21:34:00] <emanuele6> equally not sane
[21:34:05] <emanuele6> you should be using shell
[21:34:24] <CrtxReavr> I can see it's pedantic asshole day.
[21:34:26] *** Parts: CrtxReavr (crtxreavr@shodan.trioptimum.com) ()
[21:34:37] <emanuele6> # var=/hello/hi/hey; printf '%s\n' "${var##*/}"
[21:34:39] <shbot> emanuele6: hey
[21:34:43] <emanuele6> wow, ok
[21:56:46] <nmz> you are in the awk channel emanuele6 
[21:56:48] <nmz> and that's a bashism
[21:56:54] <nmz> I don't use bash
[21:57:00] <emanuele6> it's not a bashism
[21:57:03] <nmz> I don't even use a bourne shell
[21:57:13] <emanuele6> d# var=/hello/hi/hey; printf '%s\n' "${var##*/}"
[21:57:15] <shbot> emanuele6: hey
[21:57:33] <emanuele6> they were clearly using a shell: echo $0 | awk 'BEGIN {FS="/"} ; {print $NF}'
[21:58:01] <nmz> yes, but still, a bourne shell?
[21:58:57] <emanuele6> i think at least a POSIX compliant shell
[21:59:19] <nmz> are you sure about that?
[22:00:07] <emanuele6> i am not sure
[22:00:20] <nmz> and you're right, not a bashism
[22:00:42] <nmz> I can't wait for the day that bash dies
[22:01:24] <nmz> you can use powershell in linux as well
[22:01:44] <emanuele6> powershell wordsplits and you can't prevent it by quoting
[22:02:32] <nmz> there's also oil, fish, rc, esh, csh
[22:02:48] <emanuele6> ok, but you mentioned powershell
[22:02:52] <emanuele6> and powershell is just terrible
[22:03:01] <nmz> it is?
[22:03:33] <emanuele6> afaik, it wordsplits every substitution and quoting has no effect on substitutions 
[22:04:29] <emanuele6> you mentioned it, so maybe you know more about powershell and can prove me wrong 
[22:05:16] <nmz> I'm not proving anyone wrong
[22:05:40] <emanuele6> i asked because that really puzzled me
[22:05:58] <emanuele6> i tried powershell because someone mentioned it in #bash some months ago
[22:06:20] <nmz> the only powershell I've seen in the wild is the chocolatey install
[22:06:27] <nmz> https://community.chocolatey.org/install.ps1
[22:06:28] <emanuele6> i tried doing something very simple and it broke because wordsplitting is always on when you run: external_command $var
[22:06:43] <emanuele6> and: external_command "$var" does not prevent splitting
[22:07:05] <emanuele6> it simply prepends " to the first word and appends " to the last
[22:07:48] <emanuele6> and looking at the documentation and searching online it appeared to be impossible to disable that
[22:09:06] <emanuele6> because powershell is meant to be run on windows systems where: external_command "hello friend" sends argv[1]="\"hello" and argv[2]="friend\""
[22:09:53] <emanuele6> and the external program should handle quotes, not the shell
[22:10:43] <emanuele6> i think they reimplement grep and other shell utilities as a powershell builtin on linux to make them work with strings that contain spaces
[22:11:13] <emanuele6> but i couldn't find anyway to disable word splitting for external command which makes powershell pretty useless on a unix system
[22:15:39] <nmz> you can use + to concatenate strings
[22:16:30] <emanuele6> i don't think that matters for: externalcommamd $var
[22:16:44] <emanuele6> or: externalcommand "hi hello"
[22:18:04] <emanuele6> i am sure powershell can handle spaces in variables properly and can modify them using powershell functions
[22:18:34] <emanuele6> but i don't think it can pass strings without splitting them to an external program
[22:37:16] <nmz> wow, this is difficult
[22:42:10] <emanuele6> right?
[22:45:24] <nmz> it really dislikes "", &lua -e 'print([[hello world]])'  works fine, but the minute you put a ", it messes everything up
[22:45:39] <emanuele6> and you can't have spaces
[22:45:43] <nmz> you can
[22:45:47] <nmz> that works
[22:46:22] <nmz> you have to use some combination of `\`" so that you can use it
[22:46:22] <emanuele6> i don't have powershell installed, but i don't think it can
[22:46:29] <emanuele6> are you using powershell on linux?
[22:46:36] <nmz> atm no
[22:46:52] <nmz> the escape character is ` instead of \
[22:47:29] <emanuele6> then that lua is programmed to run on windows...
[22:47:51] <emanuele6> i said it before, on windows, programs handle the quotes, not the shell
[22:48:08] <nmz> I'll install it on linux
[22:48:16] <emanuele6> they receive external_command "hello friend" gets argv[1]="\"hello" and argv[2]="friend\"" and handles it
[22:48:37] <emanuele6> that lua was programmed to run on windows, so it can handle quotes passed like that
[22:49:33] *** Joins: eoli3n (~eoli3n@162.38.105.222)
[22:52:17] *** Quits: eoli3n_ (~eoli3n@162.38.105.222) (Ping timeout: 264 seconds)
[22:53:52] <nmz> PS /home/nmz/Src/Powershell> &echoargs "hello world"
[22:53:54] <nmz> 0       awk
[22:53:56] <nmz> 1       hello world
[22:54:02] <nmz> works fine
[22:54:08] <nmz> maybe it got fixed?
[22:54:22] <emanuele6> echoargs is a powershell builtin
[22:54:30] <nmz> I just made it
[22:54:57] <nmz> https://termbin.com/02w8
[22:55:39] <emanuele6> mm, let me check my notes
[22:55:54] <nmz> you have to install echoargs
[22:56:07] <nmz> from here https://archive.codeplex.com/?p=pscx
[22:56:13] <nmz> which I didn't (in windows)
[22:56:27] <nmz> but I made that, and you can tell because 0 is awk
[22:57:17] <nmz> it seems like a PITA in windows though, since it just passes everything to cmd.exe
[22:57:52] <nmz> we gonna get banned for talking about powershell in #awk :S
[22:58:13] <emanuele6> this is what i tried last time: bash -c 'printf <%s>\\n "$@"' - $(Read-Host -OutVariable s)
[22:58:22] <emanuele6> well, yes, let's stop i guess
[23:12:03] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:13:01] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:18:24] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:19:43] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:20:17] *** Joins: akoana (~ah@user/akoana)
[23:30:04] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[23:36:35] *** Quits: armin (~armin@unix.porn) (Quit: Lost terminal)
[23:38:26] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:38:44] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[23:44:02] *** Joins: kensanata (~user@user/kensanata)
