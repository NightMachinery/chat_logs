[00:00:15] <Guest81> hololeap ok i got it, i managed to fix my code thanks to your explanations
[00:01:28] <hololeap> :)
[00:01:36] <awpr> note you do get the compounding behavior showing up in a different way: the size of the representation.  the more operations you pile up into a Rational, the more likely it is to have a massive denominator and correspondingly larger numerator.  that shows up in memory usage as well as in computational cost
[00:02:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:02:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:02:13] *** Joins: wroathe (~wroathe@user/wroathe)
[00:02:31] <awpr> if you do need arbitrary precision, Rational is indeed the thing to reach for, but it's expensive and most cases in practice are perfectly content with the precision of Double or even Float
[00:05:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[00:05:09] <awpr> if this is just about aesthetically not liking things getting printed like "3.30000000000000000001", then there should be formatting functions with rounding to avoid that
[00:09:26] <hololeap> % fromRational $ 4074071952668972172536891376818756322102936787331872501272280898708762599526673412366793387 % 2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397223
[00:09:26] <yahb> hololeap: 2.0
[00:09:29] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 250 seconds)
[00:10:42] <int-e> > showGFloat (Just 3) (3.2 + 0.1) ""
[00:10:43] <lambdabot>  "3.300"
[00:16:23] *** Joins: tomku (~tomku@user/tomku)
[00:17:58] <EvanR> Guest81, rationals and floats were discussed. Also note there are decimal types that can be useful for e.g. money
[00:18:14] <EvanR> > 3.1 + 0.1 :: Pico
[00:18:16] <lambdabot>  3.200000000000
[00:18:30] <EvanR> > 3.1 + 0.1 :: Centi
[00:18:32] <lambdabot>  3.20
[00:18:43] *** Quits: yhsiveht (~Nishant@49.37.177.34) (Quit: Leaving)
[00:19:42] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[00:19:57] <EvanR> > let x = 10 / 3 in (10 - x) + x :: Pico
[00:19:58] <lambdabot>  10.000000000000
[00:20:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:21:18] <int-e> > let x = 10 / 3 in 3*x :: Pico
[00:21:19] <lambdabot>  9.999999999999
[00:21:47] <EvanR> careful when dividing by 3
[00:23:00] <int-e> > let x = 10 / 7 in 7*x :: Pico
[00:23:01] <lambdabot>  9.999999999997
[00:23:13] <int-e> EvanR: I heeded your advice and see where it got me
[00:23:22] <EvanR> careful when dividing by 7
[00:23:31] <geekosaur> careful with repeating fractions
[00:23:57] <int-e> now if we worked in base 60 we wouldn't have trouble with dividing by 3
[00:24:01] <int-e> why did we stop :P
[00:24:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[00:24:12] <int-e> (or refuse to learn from the Babylonians)
[00:24:27] <EvanR> 60 sucks... you can't even divide by 7
[00:24:45] <EvanR> clearly we need 420
[00:24:48] *** Quits: ephemient (uid407513@id-407513.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:48] <awpr> hmm, base 60 even has less waste than base 10 when clustered into digits
[00:25:08] <awpr> (60/64 used values in 6 bits vs. 10/16 used values in 4 bits)
[00:25:13] <glguy> Why stop at 60, work in base product[1..100] and it'll be divisible by most of the numbers you'll need on a daily basis
[00:25:18] <int-e> > foldl1 lcm [1..100] -- let's cover a bit more
[00:25:19] <lambdabot>  69720375229712477164533808935312303556800
[00:25:39] <EvanR> there's some number like that used in video conversion
[00:26:02] <int-e> (okay that has duplicate prime factors)
[00:26:31] <int-e> 2305567963945518424753102147331756070 would be enough
[00:31:38] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[00:31:52] *** Joins: BrokenClutch (~pioneer@2804:d41:c2b2:be00:da32:623d:efa3:7121)
[00:32:46] *** Quits: smartin (~Thunderbi@88.135.18.171) (Remote host closed the connection)
[00:32:48] <BrokenClutch> I'm almost giving up on haskell, too difficult D:
[00:33:04] *** Joins: smartin (~Thunderbi@88.135.18.171)
[00:33:39] <BrokenClutch> I'm trying to find some book that's more theoretical, that i can understand the logic behind it
[00:34:12] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:34:29] <BrokenClutch> I already know the functions, I know what are the functions of a monad, I want to understand it, but i can't find any good source about it
[00:36:33] <janus> BrokenClutch: are you looking for a book recommendation?
[00:37:45] <BrokenClutch> or anything like that, please
[00:38:20] *** Quits: Unhammer (~Unhammer@user/unhammer) (Ping timeout: 252 seconds)
[00:38:21] <BrokenClutch> I've was trying to read Haskell in Depth, pretty cool but too repetitive and sparse
[00:39:05] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[00:39:13] <BrokenClutch> I would be really happy if someone gave me some recommendations on more dense books.
[00:40:33] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:40:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:40:34] *** Joins: wroathe (~wroathe@user/wroathe)
[00:41:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[00:41:31] <EvanR> focusing on monads might be barking up the wrong tree, if you're trying to get into haskell generally
[00:41:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:41:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[00:42:46] <EvanR> don't think that in haskell, "everything's a monad" or something xD
[00:43:47] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Remote host closed the connection)
[00:45:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[00:45:37] <janus> BrokenClutch: the haskell report is very dense: https://www.haskell.org/onlinereport/haskell2010/
[00:46:55] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[00:47:10] *** Joins: jinsun (~quassel@user/jinsun)
[00:51:03] <monochrom> "more books" is also a wrong tree to bark up.
[00:51:49] *** Joins: Unhammer (~Unhammer@user/unhammer)
[00:52:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:52:37] <BrokenClutch> I want to understand why StateT exists, things like that
[00:52:55] <BrokenClutch> it's like I have to follow some strict line to learn the language
[00:53:24] <BrokenClutch> The documentation is shallow
[00:54:36] *** Joins: son0p (~ff@2800:484:1d81:b700::4)
[00:55:33] <EvanR> probably some examples where a basic state pattern could help would be good
[00:56:45] <dsal> Haskell is super easy related to most languages I've worked in.
[00:57:03] <EvanR> i.e. want to solve an isolated problem, temporarily do a stateful algorithm to get the answer and final state
[00:57:08] <dsal> Except I am currently struggling with some existentials.  I think I realized I can just do something a little different, though.
[00:57:31] <BrokenClutch> They help me understand where I need to apply them, but I still don't know what they are.
[00:57:32] <BrokenClutch> I can't just try to understand their type, it's like everything is ofuscated
[00:57:55] <BrokenClutch> obfuscated*
[00:58:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[00:58:10] <EvanR> State a is just a glorified function of type s -> (a,s)
[00:58:57] <EvanR> that's "what that is"
[00:59:00] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[00:59:00] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[00:59:25] <BrokenClutch> But i can't understand their definition, like, the things inside
[00:59:41] <Rembane> BrokenClutch: Do you have some more concrete examples? 
[00:59:42] <BrokenClutch> I've learned a lot of languages, but i have too much difficult with haskell
[00:59:44] <EvanR> implementation of transformers library is... probably not too illuminating
[01:00:18] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[01:01:38] <BrokenClutch> Rembane: Any monad transformer and how it relates to some already defined types
[01:01:52] <BrokenClutch> StateT is an example of it
[01:02:07] <EvanR> try ReaderT 
[01:03:04] <BrokenClutch> I think i will continue to bang my head against this wall, because I'm really confused, almost 2 weeks and i can't write a simple program
[01:03:25] <EvanR> @unmtl ReaderT r m a
[01:03:25] <lambdabot> r -> m a
[01:03:46] *** Joins: namkeleser (~namkelese@101.179.128.103)
[01:03:47] <EvanR> it's simpler and probably more useful honestly than StateT xD
[01:03:49] *** Quits: johnjay (~pi@154.6.152.74) (Ping timeout: 252 seconds)
[01:03:56] <geekosaur> I feel like trying to understand StateT to write a simple program is doing something wrong somewhere
[01:04:01] <Rembane> BrokenClutch: You can use equational reasoning to see how StateT or ReaderT works under the hood. 
[01:04:09] * Rembane agrees with geekosaur 
[01:04:32] *** Joins: johnjay (~pi@154.6.152.74)
[01:04:40] <dsal> BrokenClutch: It's a bit hard to understand if you start reading near the end of the story.  haskellbook.com works you through it from the beginning.
[01:05:51] <glguy> BrokenClutch: you don't really need to use any monad transformers to write Haskell. It's completely optional and not a "best practice" that you need to figure out and rely on. It's certainly useful to know how they work, but it's not required
[01:05:56] <BrokenClutch> dsal: Those books are very boring and they never go deep enough
[01:06:00] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:06:29] <BrokenClutch> glguy: But that's the fun part
[01:07:37] *** Joins: pfurla (~pfurla@2804:18:5857:ae14:19d8:3b1a:26c3:84d4)
[01:08:20] <glguy> yeah, learning stuff is fun, I just wanted to be clear you don't need to know that before you can productively write Haskell
[01:08:32] <dsal> BrokenClutch: you read it and didn't think it was deep enough?  It explained the things you're claiming to not understand to me pretty clearly.
[01:08:41] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:09:39] <BrokenClutch> dsal: Takes to much time, it's boring. But it's a good book for a more linear reading
[01:10:25] <dsal> It takes way longer to just guess and be frustrated about things you don't fully understand.
[01:10:33] <BrokenClutch> I would like something more dense, something more focused on definitions with a couple examples. I don't want anything holding my hand, this stuff makes me anxious
[01:11:33] *** Joins: pfurla_ (~pfurla@185.81.138.21)
[01:11:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:11:52] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:11:53] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[01:11:55] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[01:12:12] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:12:32] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[01:12:34] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[01:12:36] *** Joins: hololeap (~hololeap@user/hololeap)
[01:14:43] *** Quits: pfurla (~pfurla@2804:18:5857:ae14:19d8:3b1a:26c3:84d4) (Ping timeout: 268 seconds)
[01:15:13] <BrokenClutch> Oh, i have a good example. The think with kinds, most books don't talk about this stuff on the beginning.
[01:15:14] <BrokenClutch> In math we take a little look on fields, sets and rings before calculus to explain what we are mapping, for then analyze it
[01:16:19] <geekosaur> kinds barely exist in standard Haskell
[01:18:22] <BrokenClutch> I'm starting to think that I've approached haskell wrongly
[01:18:38] <geekosaur> it kinda sounds like it, yes
[01:19:23] <geekosaur> also that you may be trying to jump into the deep end without learning to swim in the shallow end first? (kinds are generally fairly advanced Haskell)
[01:20:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:21:27] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[01:21:30] *** Quits: pfurla_ (~pfurla@185.81.138.21) (Ping timeout: 268 seconds)
[01:22:09] <monochrom> "best practice" is such a red herring, especially for learning.
[01:22:25] <BrokenClutch> It's hard for me to learn something from top to bottom
[01:22:45] <BrokenClutch> I like to link everything together as fast as possible
[01:23:00] <monochrom> In day-to-day going-to-the-grocery, "best practice" is driving a car to get there.
[01:23:01] <dsal> It's hard for everyone to start from the top without understanding what stuff is built on.
[01:23:12] <BrokenClutch> I've learned most of what I know of C++ by following links on the documentations
[01:23:15] <monochrom> That still doesn't mean a baby learns to drive before learning to walk.
[01:23:51] <BrokenClutch> But they can know what the car is supposed to do
[01:24:52] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[01:26:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[01:27:23] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:29:03] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[01:32:00] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[01:36:02] <dsal> Knowing what the car is supposed to do is easy.  Haskell is a programming language. You can write programs with it.  I wouldn't expect a baby to diagnose the broken clutch, though.
[01:36:05] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[01:36:27] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[01:36:28] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[01:37:54] <glguy> metaphors are like a side quest
[01:38:30] <BrokenClutch> my 3yrld can only ride horses
[01:39:31] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[01:41:47] <glguy> wakling is a good next skill
[01:42:41] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[01:43:50] <BrokenClutch> still teaching anatomy to him, after that he can walk
[01:44:19] <BrokenClutch> I'm seeing how dumb is my to learn stuff. Gonna insist on it, it's how i study math and other shit
[01:47:04] <BrokenClutch> I will probably use more of the haskell's source code (This had help me on the past) and this online doc (i liked it, thanks)
[01:47:04] <systemfault> This may be seen as a troll question but I'll ask anyway.... Do you believe that there are as many Haskell languages as there are combination of language extensions and that it makes the language a lot more hostile to newcomers?
[01:47:35] <dsal> Not *really*
[01:48:02] <dsal> Some extensions alter the language in meaningful ways.  Some extensions just do things that you'd expect for consistency and when you write the code that needs them, you're told to fix it up.
[01:48:13] <glguy> systemfault: Most living langauges add new features. Haskell just tends to like to give those features names and have you explicitly turn them on
[01:48:58] <BrokenClutch> The most used ones aren't that bad. Most have good documentation too.
[01:49:53] <BrokenClutch> For me, don't forget that I'm not a good example for those stuff, the extensions aren't a problem because they are very well contained and documented
[01:50:25] <geekosaur> also most extensions do just that, they extend existing features
[01:50:37] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:50:52] <dsal> It'd be nice to have a rating of extensions with how surprising they are.
[01:52:39] <dsal> TupleSections over on the left in like "I'm surprised that's not part of the core language" and, I don't know, DeriveAnyClass or NoMonomorphismRestriction or something on the right where things behave differently.
[01:52:55] *** Joins: pfurla (~pfurla@177.79.127.186)
[01:53:00] *** Joins: nfd (~nfd@user/nfd)
[01:53:27] <geekosaur> yeh, DeriveAnyClass feels to me like "that's a weird solution to the problem"
[01:53:39] <BrokenClutch> where FuncDeps would be on this rating?
[01:53:43] <geekosaur> especially given the knock-ons that then lead to more extensions as patch-ups
[01:53:55] <dsal> FuncDeps are on the left.
[01:54:04] <BrokenClutch> dsal: good
[01:54:04] <dsal> I need this and I have to turn on a thing to make it work..
[01:54:17] <dsal> DeriveAnyClass as a strategy is nice.
[01:54:27] <dsal> I kind of wish I could use it in DerivingStrategies without having it be automatic.
[01:55:28] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Remote host closed the connection)
[01:56:10] <monochrom> I think of GHC2021 as the beginning of a crude rating. An extension that makes it into GHC2021 is rated unsurprising.
[01:56:29] <systemfault> What is GHC2021?
[01:56:45] <dsal> a set of extensions you get with a single name
[01:56:53] <geekosaur> new in ghc 9.2.1
[01:56:56] <dsal> https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/control.html
[01:57:20] *** Joins: pfurla_ (~pfurla@177.79.120.224)
[01:57:23] <systemfault> Well, that solves my problem.
[01:57:42] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:57:45] <systemfault> That gives a "scope" to the language... a set of expectations, a defined featureset
[01:58:04] <geekosaur> basically, since the standards process is more or less dead in the water, the ghc proposals process has taken over the helm and does its own "standardization"
[01:58:10] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Read error: Connection reset by peer)
[01:58:22] *** Quits: pfurla (~pfurla@177.79.127.186) (Ping timeout: 260 seconds)
[01:59:18] <EvanR> systemfault, well we already had that with "no extensions"
[01:59:33] <EvanR> just that you often want 1... or 4 for some purpose
[01:59:40] <EvanR> in a file
[02:00:19] <EvanR> GHC2021 adds 40 something
[02:00:19] <dsal> There are a few extensions you pretty much want on any time you're writing any actual code.
[02:00:28] <dsal> There are lots of people who'd fight me over that as well as which ones.
[02:00:48] <EvanR> so far I haven't added any in AoC xD
[02:00:48] <geekosaur> sure. that's why the standardization process is dead in the water
[02:01:16] <glguy> ImportQualifiedPost is pretty important
[02:01:20] <Rembane> LambdaCase is the best!
[02:01:21] <geekosaur> and for that matter there was a lot of argument over GHC2021, but at least it's somewhat transparent
[02:01:22] <systemfault> Is there any other new Haskell compiler that is relevant beside GHC? (There was hugs at one point.. but it died I believe)
[02:01:49] <geekosaur> hugs is actually kept barely alive (compiling, at least) because some university courses still use it
[02:01:50] <systemfault> I mean, at this point, whatever is the default in GHC is more or less what is the "Haskell Standard", no?
[02:01:57] <geekosaur> but de facto ghc is it
[02:01:58] <EvanR> BlockArguments didn't make it in? :(
[02:02:08] <dsal> I'd never heard of ImportQualifiedPost.  That's pretty weird.
[02:02:16] <geekosaur> and the more extensions it gets, the harder it is for any competing compiler to appear
[02:02:23] <dsal> How many import extensions are there?  Those are just strange.
[02:02:27] <glguy> dsal: without it you get that ugly trough of whitespace in the imports. it's pretty important :)
[02:03:14] <dsal> You could just use ormolu and give up on aesthetics altogether.
[02:03:39] <glguy> if you don't care what the code looks like you don't have to use a tool at all
[02:04:05] <dsal> I don't fully understand BlockArguments.  I occasionally write code that wants it, but I don't turn it on often because I've not bothered to read about it.
[02:06:01] <geekosaur> not much to understand, it just elevates blocks to full arguments that don't require parentheses or $
[02:06:02] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[02:06:03] <monochrom> I can't strictly think of, say, C as "one language" either. (Casually, sure.) Even if you stick to just the standards, there are already multiple standards, chronologically ordered. By the time you also take into account how GNU C, Microsoft C, Turbo C, Aztec C... all adds their own things, there is no one single "C".
[02:06:18] <perrierjouet> key bind meta-h /buffer #haskell
[02:06:30] <perrierjouet> key bind meta-k /buffer #kotlin
[02:06:43] <monochrom> The Haskell people simply recognize that a linear order is too restrictive.
[02:06:48] <geekosaur> mm, you missing some command keys perrierjouet?
[02:07:10] <perrierjouet> geekosaur: ? am configuring my weechat
[02:07:26] <geekosaur> you sent a couple of them to the channel instead of to weechat
[02:07:50] <monochrom> Cf my whine yesterday about web forums pretending that a discussion is linear, until Reddit re-taught us that it is at least tree-structured.
[02:08:21] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[02:08:29] <hololeap> dsal: I've been using ImportQualifiedPost for a while and now it feels weird not to have it
[02:08:45] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[02:10:12] <geekosaur> whereas I've gotten so used to the standard syntax that the new one looks weird to me
[02:10:35] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[02:10:52] *** Quits: pfurla_ (~pfurla@177.79.120.224) (Quit: gone to sleep. ZZZzzz…)
[02:11:06] <geekosaur> of course this kind of argumentation is why there's no new standard :)
[02:11:22] <monochrom> Oh nice, best revision ever!
[02:11:57] <monochrom> "import Data.Char qualified as C" is very close to English.
[02:12:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[02:12:26] *** Joins: pavonia (~user@user/siracusa)
[02:13:11] <hololeap> there's even a GHC warning that yells at you if you write it the old way, but that just seems excessive
[02:14:10] <geekosaur> if yu're going to be different, at least be consistent about it? using both styles seems like it'd be jarring
[02:14:38] <hololeap> that's true, but this seems like it's stepping into linter territory
[02:14:51] <monochrom> Or very close to COBOL >:)
[02:14:55] <BrokenClutch> Thanks for the help everyone, gonna try to use the docs from emacs and, as base, use the official online docs
[02:15:13] <awpr> `import qualified Data.Maybe qualified as Maybe as M` -- using both
[02:15:27] <BrokenClutch> Another thing, is lambdabot compiling?
[02:15:33] *** Quits: madjestic (~madjestic@88-159-247-120.fixed.kpn.net) (Quit: Reconnecting)
[02:15:41] <monochrom> GHC currently doesn't let you use both.
[02:15:45] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[02:16:16] <monochrom> But you can always split that into 4 lines.
[02:16:34] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 260 seconds)
[02:16:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:16:45] <hololeap> the bikeshedding compromise
[02:17:08] <monochrom> Oh, you can still bikeshed on which line goes first >:)
[02:17:35] <earendel> lol bikeshedding
[02:17:55] <geekosaur> lambdabot compiles, yes, but to bytecode. also > / @run only accepts expressions, not definitions
[02:18:22] <geekosaur> yahb is a full ghci; use % prefix, or %% to send output to a pastebin (useful for something like :info)
[02:18:23] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[02:18:26] *** Joins: themc47 (~mc47@xmonad/TheMC47)
[02:18:31] <BrokenClutch> I was talking about its source (english is not my main language)
[02:18:37] <geekosaur> also yahb is ghc 9.0 whereas lambdabot is 8.7
[02:18:54] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 260 seconds)
[02:19:00] <geekosaur> oh
[02:19:12] <monochrom> Bikeshedding is in human nature. It is why every climate summit takes forever and produces nothing. You can bet they spend days on disputing enumeration order.
[02:19:31] <geekosaur> lambdabot itself should build, at least on ghc 8.10.7, but one of its dependencies needs a patch
[02:20:01] <earendel> they should just use fibonacci sequence
[02:20:21] <BrokenClutch> geekosaur: thanks :)
[02:20:25] <geekosaur> (@djinn uses an external program, which currently doesn't build because <> was added to the Prelude. the patch is minor)
[02:20:28] <earendel> i am sorry. i couldn't hold me.
[02:20:41] *** Quits: cosimone (~user@93-47-231-91.ip115.fastwebnet.it) (Ping timeout: 268 seconds)
[02:21:04] <earendel> or halt.
[02:21:14] <earendel> english is difficult.
[02:21:18] <monochrom> Hey did you know of this fibonacci joke? https://twitter.com/sigfpe/status/776420034419658752
[02:21:53] <earendel> im banned from twitter :(
[02:22:06] <monochrom> OK, "This Fibonacci joke is as bad as the last two you heard combined."
[02:22:18] <earendel> eheh.
[02:22:27] <earendel> well. 
[02:22:42] *** Parts: BrokenClutch (~pioneer@2804:d41:c2b2:be00:da32:623d:efa3:7121) ()
[02:23:02] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[02:23:41] *** Quits: themc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[02:24:23] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:25:09] *** Joins: namkeleser (~namkelese@101.179.128.103)
[02:26:08] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:31:27] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[02:35:42] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 260 seconds)
[02:35:51] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:36:25] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[02:36:44] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 268 seconds)
[02:37:07] *** Joins: Erutuon (~Erutuon@user/erutuon)
[02:44:02] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Remote host closed the connection)
[02:44:12] *** Quits: Guest81 (~Guest81@2a01cb0589202e00edc070a9acc1d4bb.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[02:44:43] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[02:45:00] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Remote host closed the connection)
[02:45:32] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[02:45:52] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:46:56] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Read error: Connection reset by peer)
[02:47:05] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[02:48:26] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:51:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:52:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:52:19] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:52:19] *** Joins: wroathe (~wroathe@user/wroathe)
[02:52:24] *** nf is now known as nfir
[02:53:42] *** Joins: snake (~snake@user/snake)
[02:54:14] <snake> is there an installer for the haskell platform with batteries included on windows without chocolatey?
[02:54:22] *** nfir is now known as sapinf
[02:54:50] <snake> pretty sure microsuck is gonna make their own package manager perhaps in the next few years so i dont want to install chocolatey
[02:56:23] <snake> OH, that is what haskell stack is huh?
[02:56:54] <snake> that was not 100% obvious to me, idk why LOL
[02:56:56] <snake> thanks
[02:58:43] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[02:58:59] <geekosaur> the platform is dead. stack and cabal both provide similar functionality but there is no such thing as "batteries included" any more
[02:59:16] <geekosaur> things not only change too quickly but depend on different versions of other things
[02:59:38] *** Joins: AlexNoo_ (~AlexNoo@178.34.163.33)
[02:59:45] <hpc> and if you just want to install haskell in an easy way on windows, use ghcup
[03:00:17] *** sapinf is now known as nfir
[03:00:57] *** Quits: wanko (~wanko@51.15.4.226) (Quit: leaving)
[03:02:57] *** Quits: Alex_test (~al_test@94.233.241.193) (Ping timeout: 265 seconds)
[03:03:03] *** Quits: AlexNoo (~AlexNoo@94.233.241.193) (Ping timeout: 256 seconds)
[03:03:08] *** Quits: AlexZenon (~alzenon@94.233.241.193) (Ping timeout: 256 seconds)
[03:06:40] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:07:23] <snake> thanks
[03:07:25] <earendel> snake: nuget?
[03:07:25] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[03:07:27] *** Joins: Alex_test (~al_test@178.34.163.33)
[03:07:33] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[03:07:35] *** Joins: AlexZenon (~alzenon@178.34.163.33)
[03:07:42] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[03:08:03] <snake> earendel, nah not that
[03:08:16] <earendel> i thought they mainly used nuget..but you can click together whatever you want with the vs
[03:08:26] <earendel> k k.
[03:08:27] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[03:11:15] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[03:11:55] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 250 seconds)
[03:13:03] <snake> hpc, i wonder if i can run the ghcup install from inside cygwin
[03:15:40] <snake> windows is a sad mess lol
[03:17:02] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[03:17:24] <Square> Not sure i *really* understand the currying(?) here. Check out https://hackage.haskell.org/package/schemas-0.3.0.2/docs/src/Schemas.Class.html#encode. It calls "schema". id be fine if : encode val = encodeWith (schema val) val ... but here it seems extra magic is going on
[03:17:26] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Remote host closed the connection)
[03:17:39] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[03:18:05] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[03:18:51] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[03:20:58] <Square> Ah, shema doesnt take arguments. That settles it
[03:21:27] <d34df00d> I have a newtype MyType = MyType Word32. Can I make ghc derive instance A.Array A.UArray MyType based on Word32, where A is the usual Data.Array set of modules?
[03:22:02] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[03:22:19] <d34df00d> Looks like I can't (UArray has type roles explicitly set to nominal), but (1) I just wanted to confirm I actually have to write all the methods myself, and (2) I'm just curious why the type itself does not have representional role?
[03:22:51] <d34df00d> s/derive instance A.Array A.UArray MyType/derive instance A.IArray A.UArray MyType/
[03:24:15] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 252 seconds)
[03:24:38] *** Joins: Erutuon (~Erutuon@user/erutuon)
[03:26:05] *** Joins: Guest75 (~Guest75@c-73-51-111-196.hsd1.il.comcast.net)
[03:27:01] <d34df00d> There's a comment in the Array sources that says "There are class-based invariants on both parameters. See also #9220.", but my google-fu is too weak to give meaningful results on "data array bug 9220 haskell"
[03:30:22] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 268 seconds)
[03:31:35] *** Quits: max22- (~maxime@2a01cb08833598004fea75dc1e636bbe.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:33:33] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:33:47] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[03:36:25] *** Joins: Erutuon (~Erutuon@user/erutuon)
[03:44:16] <glguy> data UArray i e = UArray !i !i !Int ByteArray#
[03:44:31] <glguy> how you interpret those raw bytes very much depends on which Unbox instance you use
[03:44:55] <glguy> err, which IArray instance
[03:45:09] *** Joins: pfurla (~pfurla@2804:18:5852:47ba:2501:c89:1de2:4d52)
[03:45:42] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 260 seconds)
[03:47:35] <d34df00d> glguy: yep, and I'm writing my own newtype wrapper around some base type (Word32 in this case), and I want to use its Unbox instance.
[03:47:57] <d34df00d> Sure, I could decorate all the reads/writes with the newtype constructor/accessor names, but that seems ugly and exposes implementation details to the client code.
[03:48:07] *** Joins: Erutuon (~Erutuon@user/erutuon)
[03:48:17] <d34df00d> I'd much rather have the unbox instance in my module that the rest of the world can use not caring about how my thing actually gets stored.
[03:49:00] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[03:51:38] *** Quits: timCF (~timCF@m91-129-100-224.cust.tele2.ee) (Quit: leaving)
[03:52:21] <geekosaur> d34df00d, I think the ticket it was pointing to was https://gitlab.haskell.org/ghc/ghc/-/issues/9220 ?
[03:52:38] <d34df00d> Somehow that ticket evaded me. Thanks!
[03:53:23] <d34df00d> Yeah, I agree they shouldn't be phantom, but not so sure about nominal vs representational.
[03:53:41] <d34df00d> > I think they should all be nominal, since a newtype of an existing type could have a totally unrelated MArray or Storable instance.
[03:53:42] <d34df00d> dunno
[03:53:42] <lambdabot>  <hint>:1:35: error: parse error on input ‘,’
[03:54:40] <d34df00d> If you have a newtype with a different instance, just parametrize it with a dummy nominal type variable, I think?
[03:54:55] <d34df00d> I have to read through comments carefully though. geekosaur thanks again for the link!
[03:58:09] *** Joins: namkeleser (~namkelese@101.179.128.103)
[04:04:43] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[04:05:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:05:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[04:06:22] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:06:27] <hololeap> awpr: this actually compiles. thanks for the advice: http://sprunge.us/BeUDUJ
[04:07:29] *** Joins: slice (~slice@user/slice)
[04:08:01] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[04:12:17] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 252 seconds)
[04:17:28] <mjrosenb> cabal: Cannot open a repl for the executable 'app' because it is marked as buildable: False' within the 'MatchRex.cabal' file (at least for the current...
[04:17:35] <mjrosenb> so, I'm confused about why I'm getting this
[04:17:51] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 268 seconds)
[04:17:51] <mjrosenb> I don't have buildable: False in the config for `app`
[04:17:59] <mjrosenb> and I don't have a file MatchRex.cabal
[04:18:04] <mjrosenb> the file is match-rex.cabal.
[04:18:09] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:19:37] *** Joins: jespada (~jespada@87.74.33.157)
[04:22:15] *** Quits: son0p (~ff@2800:484:1d81:b700::4) (Remote host closed the connection)
[04:25:47] <mjrosenb> ahh, the cabal-install I'm using is *ancient*
[04:26:05] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[04:30:31] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[04:34:35] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[04:41:40] <sm> what vintage ?
[04:43:25] *** Joins: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se)
[04:47:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:47:45] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[04:47:46] *** Joins: pfurla_ (~pfurla@177.25.188.35)
[04:48:11] <mjrosenb> 2.4
[04:48:43] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Client Quit)
[04:51:09] *** Quits: pfurla (~pfurla@2804:18:5852:47ba:2501:c89:1de2:4d52) (Ping timeout: 250 seconds)
[04:54:46] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[04:59:32] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[04:59:42] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[05:00:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:02:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[05:05:39] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:11c1:36c3:fe48:2c6f) (Quit: Textual IRC Client: www.textualapp.com)
[05:09:55] *** Joins: machinedgod (~machinedg@24.105.81.50)
[05:11:05] <hololeap> anyone know how you're "supposed to" access the underlying Representable when using Control.Comonad.Representable.Store
[05:11:23] <sm> a classic year
[05:11:35] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:11:56] <hololeap> when I'm done using the comonad interface I want to get my Representable full of values
[05:13:50] * hololeap waits for a 2001 ASO joke
[05:19:08] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Remote host closed the connection)
[05:21:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:23:02] <hololeap> I guess (tabulate . flip peek) works
[05:27:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:32:41] *** Quits: sszark (~sszark@h-155-4-130-230.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[05:34:33] *** Quits: AndrewYu (~andrew@user/andrewyu) (Remote host closed the connection)
[05:36:28] <hololeap> well, this disproves that you cannot use vector-sized for vectors parsed at runtime
[05:36:50] <hololeap> you just gotta get existential...
[05:39:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[05:39:33] *** Quits: xff0x (~xff0x@port-92-193-224-19.dynamic.as20676.net) (Ping timeout: 252 seconds)
[05:41:27] *** Joins: xff0x (~xff0x@2001:1a81:5203:4200:a63b:498f:dba9:bef9)
[05:45:01] <EvanR> that's pretty cool
[05:51:39] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[05:54:24] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[05:54:50] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[05:55:19] *** Quits: danso (~danso@23-233-111-52.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[05:55:28] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[06:00:51] *** Joins: Erutuon (~Erutuon@user/erutuon)
[06:01:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:06:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[06:09:38] *** Quits: darkstarx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:14:32] *** Quits: mmhat (~mmh@55d45c6c.access.ecotel.net) (Ping timeout: 240 seconds)
[06:15:30] *** Joins: earendel (uid498179@user/earendel)
[06:23:32] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[06:23:46] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[06:26:16] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[06:28:00] *** Joins: mmhat (~mmh@55d44624.access.ecotel.net)
[06:28:16] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[06:30:35] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[06:30:55] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[06:31:22] *** Quits: madjestic (~madjestic@88-159-247-120.fixed.kpn.net) (Ping timeout: 260 seconds)
[06:35:12] *** Joins: zebrag (~chris@user/zebrag)
[06:36:23] *** Quits: johnjay (~pi@154.6.152.74) (Ping timeout: 252 seconds)
[06:37:38] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[06:38:12] *** Joins: johnjay (~pi@154.6.152.74)
[06:38:40] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[06:40:27] <dsal> I tried to rewrite last night's AoC thing with ST Arrays.  It's a little faster.  A lot more code and the type system freaks out in ways I don't fully understand when I make small changes.
[06:40:45] <slowButPresent> ~888888888888888„„„„„„„„„„„„„„
[06:40:59] <dsal> Exactly.
[06:41:18] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:41:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:41:18] *** finn_elija is now known as FinnElija
[06:41:41] <c_wraith> I just used UArray and bulk updates.  That's fast enough for everything that matters.
[06:42:55] <int-e> Data.Map is generally fast enough for AoC.
[06:42:59] <c_wraith> also much harder to get wrong
[06:43:04] <dsal> I used a map and that's fine.  I thought MArray would be much faster.  But it's just a little faster.  Entirely too much code.
[06:43:27] <c_wraith> I think array as a package is very underrated.
[06:43:29] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:43:41] <dsal> It's pretty weird.  Especially as it intersects with ST.
[06:44:03] <c_wraith> the mutable stuff is not as good as the immutable stuff
[06:45:14] <dsal> There's really not much there.  I'm kind of surprised most of the mutation stuff requires me to do another read when I'm done.  Like... you had the value, just give it to me.
[06:45:20] <int-e> Ix is pretty bad though; it's insane how much performancy one can often gain by using unsafeWrite/unsafeRead instead
[06:45:37] <dsal> I think ix is pretty great.
[06:45:42] <dsal> Though it's differently weird.
[06:45:43] <c_wraith> Ix is the best part
[06:45:46] <int-e> it's *slow*
[06:45:54] <dsal> What part of Ix is slow?
[06:46:18] <int-e> mostly the part where you do bounds checking on accessing two-dimensional arrays
[06:46:27] <int-e> (1D is usually okay-ish)
[06:46:50] *** Joins: pzanco (~Android@2804:14c:3bc3:466:a4b2:cfe3:46ff:192a)
[06:47:23] <int-e> it's sad, because as an abstraction it's rather neat
[06:47:32] *** Quits: pzanco (~Android@2804:14c:3bc3:466:a4b2:cfe3:46ff:192a) (Client Quit)
[06:48:02] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:49:01] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:49:26] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:49:52] <c_wraith> Ix gives me trivially-easy edge clamping behavior, as I can just re-use inRange.  That's incredibly nice.
[06:50:06] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:50:29] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:50:47] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:54:07] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[06:56:09] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[06:57:44] *** Quits: td_ (~td@94.134.91.156) (Ping timeout: 256 seconds)
[06:57:59] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:58:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:59:16] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:59:27] *** Joins: td_ (~td@muedsl-82-207-238-103.citykom.de)
[07:00:39] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 268 seconds)
[07:03:29] <EvanR> I've been pretending those grids are infinite and using an appropriate value past the edge
[07:05:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:08:08] <int-e> . o O ( invisible octopodes have -inf energy )
[07:09:20] <c_wraith> did anyone do any research into worst-case inputs for part 2?
[07:15:14] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[07:15:52] <int-e> c_wraith: it can loop without synchronizing
[07:16:34] <int-e> e.g. http://paste.debian.net/1223090/
[07:18:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:18:14] <int-e> (Good, now I can stop wondering how to prove that :-P)
[07:18:30] <EvanR> not -infinity didn't cause a problem with octupuses
[07:19:00] <EvanR> but I did try to put -200 at first before coming to my senses
[07:19:12] *** Joins: paraseba (~paraseba@187.121.45.193)
[07:20:28] <int-e> c_wraith: Of course that doesn't invalidate your question... you can still restrict to patterns that do synchronize and ask about the worst case for those.
[07:20:41] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[07:21:38] <int-e> There's only 10^100 states, Google should be able to solve this.
[07:21:51] *** Quits: mmhat (~mmh@55d44624.access.ecotel.net) (Quit: WeeChat 3.3)
[07:22:26] <int-e> (a joke based on https://en.wikipedia.org/wiki/Googol)
[07:22:39] <c_wraith> don't worry, I got it! :P
[07:23:16] <EvanR> oof
[07:23:37] <paraseba> How would I implement ( zip :: [a] -> [b] -> [(a,b)] )  using lens package? transposeOf comes close, but it replaces the tuple with a list of size 2
[07:25:30] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[07:26:04] <glguy> paraseba: zip isn't really too closely related to lenses
[07:26:25] <c_wraith> well, there's https://r6research.livejournal.com/28050.html
[07:26:41] <c_wraith> but...  that isn't in lens
[07:27:26] <paraseba> oh, very interesting ....
[07:29:19] <c_wraith> Still, the nice thing about lens is that the internals are all open.  You could just write that part yourself and it would mostly integrate with the rest of the library
[07:29:42] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[07:32:23] <paraseba> zip is one of the things I miss when I try to use lens as a prelude. I wonder if that practice is relatively common...
[07:33:00] <paraseba> particularly because zip is so commonly needed across different types of containers
[07:35:15] <dsal> @src zip
[07:35:15] <lambdabot> zip (a:as) (b:bs) = (a,b) : zip as bs
[07:35:15] <lambdabot> zip _      _      = []
[07:36:04] <EvanR> > repeat (,) <*> [0..] <*> ['a','b'..]
[07:36:05] <lambdabot>  [(0,'a'),(0,'b'),(0,'c'),(0,'d'),(0,'e'),(0,'f'),(0,'g'),(0,'h'),(0,'i'),(0,...
[07:36:08] <EvanR> cool
[07:36:18] <EvanR> who needs zip
[07:36:26] <c_wraith> that's... not a zip. :P
[07:36:31] <EvanR> oops
[07:36:39] <paraseba> you'd need ZipList
[07:37:15] <dsal> > ['a'..]
[07:37:17] <lambdabot>  "abcdefghijklmnopqrstuvwxyz{|}~\DEL\128\129\130\131\132\133\134\135\136\137\...
[07:37:37] <EvanR> > ['b','a'...]
[07:37:39] <lambdabot>  error:
[07:37:39] <lambdabot>      A section must be enclosed in parentheses thus: ('a' ...)
[07:37:47] <EvanR> > ['b','a'..]
[07:37:48] <lambdabot>  "ba`_^]\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?>=<;:9876543210/.-,+*)('&%$#\"! \US\RS...
[07:38:10] <EvanR> iicsa
[07:38:19] <dsal> heh
[07:52:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:53:52] *** Joins: mbuf (~Shakthi@122.174.253.173)
[07:56:01] <xerox> `_^
[07:59:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[08:00:58] *** Quits: nfd (~nfd@user/nfd) (Ping timeout: 260 seconds)
[08:01:43] <int-e> c_wraith: I wonder how lucky I got with this (I'm generating random starting positions): https://paste.debian.net/1223091/
[08:02:22] <c_wraith> how many steps did that take?
[08:02:30] <int-e> try it :)
[08:02:32] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:02:55] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[08:02:59] <c_wraith> I'm nowhere near a computer! (uh.... well. sort of.)
[08:03:08] <int-e> almost 30k
[08:06:47] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:06:52] *** Joins: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net)
[08:06:52] *** Quits: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net) (Changing host)
[08:06:52] *** Joins: Hawker (~pi@user/hawker)
[08:09:28] *** Joins: deadmarshal (~deadmarsh@95.38.114.98)
[08:09:35] <int-e> I suspect that was very lucky; with a different seed I'm only up to 2.4k after twice as much time
[08:12:03] <int-e> code in the forbidden language: https://paste.debian.net/1223092/
[08:12:43] <glguy> Your Haskell has so many language extensions!
[08:12:58] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[08:13:33] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 252 seconds)
[08:14:39] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:14:50] <int-e> Eh, it's number crunching code; the logic is dead simple but optimizing the tight loops matters... ghc/Haskell is a bad fit for that type of thing.
[08:14:55] *** Joins: Hawker (~pi@user/hawker)
[08:16:08] *** Joins: danso (~danso@23-233-111-52.cpe.pppoe.ca)
[08:16:58] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[08:17:32] <int-e> (I bet the step function is far from optimal; doing several linear scans until things stabilize has a very good chance of being faster)
[08:24:34] *** Quits: Hawker (~pi@user/hawker) (Quit: Lost terminal)
[08:26:01] *** Joins: Akiva (~Akiva@user/Akiva)
[08:26:26] *** Joins: Hawker (~pi@user/hawker)
[08:27:30] *** Joins: the_last_immorta (~thelastim@2001:470:69fc:105::1:4d57)
[08:28:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:719f:b1db:e5b1:8e4a) (Ping timeout: 240 seconds)
[08:30:38] * the_last_immorta uploaded a video: (44467KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ijbzjuLcVlWzvYcuxmYznkId/yt5s.com-Simon%20Peyton%20Jones%20-%20Haskell%20is%20useless-(480p).mp4 >
[08:32:21] <the_last_immorta> quickSort []     = []                               
[08:32:21] <the_last_immorta> quickSort (x:xs) = quickSort [a | a <- xs, a < x]   
[08:32:21] <the_last_immorta>                    ++ [x] ++                                    quickSort [a | a <- xs, a >= x]
[08:32:28] <the_last_immorta> im interested
[08:33:09] <the_last_immorta> can i ........am currently experimenting....can i add conditional statetements, but still apart of the object?
[08:33:38] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:33:47] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 268 seconds)
[08:34:01] *** Joins: Hawker (~pi@user/hawker)
[08:44:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[08:46:38] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:46:48] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[08:47:34] <pavonia> What is the object to you?
[08:47:49] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[08:48:43] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[08:49:03] *** Joins: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net)
[08:49:12] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[08:50:35] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[08:50:35] *** Quits: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[08:59:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[09:04:27] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[09:08:56] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.202)
[09:09:32] *** Quits: deadmarshal (~deadmarsh@95.38.114.98) (Ping timeout: 268 seconds)
[09:15:03] *** Quits: pfurla_ (~pfurla@177.25.188.35) (Ping timeout: 250 seconds)
[09:15:38] <monochrom> Also, no "statement". Only expressions.
[09:15:58] <monochrom> Conditional expressions exist, but they are not conditional statements.
[09:20:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:22:40] *** Joins: pfurla (~pfurla@177.25.188.35)
[09:29:37] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:30:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:31:04] <xerox> int-e: \o/
[09:31:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:33:21] <int-e> xerox: you're not safe yet though :P
[09:33:32] <xerox> darn
[09:33:54] <xerox> oh him again! :)
[09:34:05] <int-e> 2 people in fact
[09:34:27] <xerox> who's the other
[09:34:31] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[09:35:04] <int-e> > 3917 + 380 - 2*11 - 4
[09:35:06] <lambdabot>  4271
[09:35:18] <int-e> > 3917 + 380 - 2*11 - 4 > 4241
[09:35:19] <lambdabot>  True
[09:35:48] <xerox> gotcha
[09:36:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:36:30] <int-e> I lost so much time by violating the KISS principle :-/
[09:36:46] <xerox> what did you not keep simple
[09:37:22] <int-e> I wrote code to eliminate UPPER CASE nodes from the graph.
[09:37:26] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:37:51] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:38:23] <xerox> I see
[09:40:07] <xerox> I went for brute code duplication which is kind of a way to keep it simple
[09:40:14] <xerox> time to smoothen it out
[09:40:48] <int-e> Of course. I do duplicate all the code (I copy the file).
[09:43:02] <int-e> Adding insult to the injury, I wrote that code and missed a subtlety regarding the start node and ended up not even using it.
[09:45:15] *** Quits: Axman6 (~Axman6@user/axman6) (*.net *.split)
[09:45:15] *** Quits: tubogram (~tubogram@user/tubogram) (*.net *.split)
[09:45:24] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[09:45:36] *** Joins: tubogram (~tubogram@user/tubogram)
[09:48:02] <xerox> yesterday I learned about ghcid --test=:main which was quite helpful, I kept getting the paths printed on save, instanteously looking at their features: at some point a bunch of "start"s started popping up in the middle!
[09:48:27] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:48:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:52:27] *** Quits: slice (~slice@user/slice) (Quit: zzz)
[09:54:08] <int-e> Don't get me wrong, this /does/ help performance. But the naive version runs in less than a second compiled (~860ms for me), so improving that by a factor of 100 (~7 milliseconds), while impressive, really doesn't matter.
[09:55:23] *** Joins: pfurla_ (~pfurla@172.58.160.227)
[09:56:48] *** Quits: pfurla (~pfurla@177.25.188.35) (Ping timeout: 256 seconds)
[09:58:34] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[09:59:57] <EvanR> that's funny you got starts in the middle somehow...
[10:00:08] <EvanR> I didn't and forgot to even think about it
[10:00:47] <int-e> ...startling behavior...
[10:01:57] *** Joins: arjun (~user@user/arjun)
[10:03:33] <EvanR> i feel like haskell is making some of these puzzles really easy... then I assume other people with ridiculous scores are not using haskell, and being flabbergasted
[10:03:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:03:52] <EvanR> what magic languages are out there xD
[10:04:32] *** Quits: Guest75 (~Guest75@c-73-51-111-196.hsd1.il.comcast.net) (Quit: Client closed)
[10:08:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 252 seconds)
[10:08:25] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:08:25] <Taneb> int-e: thanks from stopping me from thinking too hard about it :D
[10:10:38] *** Quits: paraseba (~paraseba@187.121.45.193) (Quit: Client closed)
[10:12:08] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[10:13:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:17:07] *** Quits: pfurla_ (~pfurla@172.58.160.227) (Read error: Connection reset by peer)
[10:17:20] *** Joins: pfurla (~pfurla@172.58.160.227)
[10:20:28] *** Quits: pfurla (~pfurla@172.58.160.227) (Read error: Connection reset by peer)
[10:20:35] *** Joins: pfurla_ (~pfurla@172.58.160.227)
[10:21:35] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:22:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:23:34] *** Joins: mei (~mei@user/mei)
[10:28:36] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[10:29:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:29:59] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:29:59] *** Joins: wroathe (~wroathe@user/wroathe)
[10:30:24] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[10:35:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:39:52] *** Quits: pfurla_ (~pfurla@172.58.160.227) (Ping timeout: 256 seconds)
[10:41:15] *** Joins: pfurla (~pfurla@172.58.27.177)
[10:41:40] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[10:56:44] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[10:57:36] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Client Quit)
[10:58:05] *** Joins: namkeleser (~namkelese@101.179.128.103)
[11:03:44] *** Joins: fr33domlover (~fr33@2.55.43.13)
[11:04:14] *** Quits: pfurla (~pfurla@172.58.27.177) (Ping timeout: 256 seconds)
[11:04:52] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[11:05:39] *** Joins: pfurla_ (~pfurla@172.58.107.238)
[11:07:16] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:09:05] *** Quits: pfurla_ (~pfurla@172.58.107.238) (Client Quit)
[11:09:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[11:10:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Remote host closed the connection)
[11:11:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:11:54] *** Joins: pfurla (~pfurla@177.25.188.35)
[11:12:16] <int-e> c_wraith: darn you, now I have to resist the temptation to implement day 11 with SSE3 operations
[11:12:29] <c_wraith> hah
[11:16:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 240 seconds)
[11:27:26] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[11:29:43] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Remote host closed the connection)
[11:29:49] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[11:30:18] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:30:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:33:07] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:34:32] *** Quits: Techcable (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[11:35:04] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[11:35:52] *** Joins: Techcable (~Techcable@168.235.93.147)
[11:37:09] *** Joins: nfd (~nfd@user/nfd)
[11:40:40] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[11:41:01] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[11:42:13] *** Quits: pfurla (~pfurla@177.25.188.35) (Quit: gone to sleep. ZZZzzz…)
[11:43:16] *** AlexNoo_ is now known as AlexNoo
[11:44:47] *** Joins: pfurla (~pfurla@2804:18:5806:fc4e:c13f:1c3c:ec1b:26a7)
[11:45:09] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:46:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:51:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 252 seconds)
[12:01:41] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[12:03:28] *** Joins: pfurla_ (~pfurla@177.25.183.253)
[12:04:02] *** Quits: pfurla (~pfurla@2804:18:5806:fc4e:c13f:1c3c:ec1b:26a7) (Ping timeout: 240 seconds)
[12:05:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:06:10] *** Joins: pfurla (~pfurla@172.58.142.250)
[12:08:46] *** Quits: pfurla_ (~pfurla@177.25.183.253) (Ping timeout: 260 seconds)
[12:09:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[12:10:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[12:15:11] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Ping timeout: 252 seconds)
[12:15:29] *** Quits: pfurla (~pfurla@172.58.142.250) (Quit: gone to sleep. ZZZzzz…)
[12:16:08] *** Joins: thevishy (~Nishant@2405:201:f005:c007:81f3:ee3c:76f0:8869)
[12:16:12] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.202) (Ping timeout: 256 seconds)
[12:26:51] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Remote host closed the connection)
[12:30:09] *** Quits: lambdandy[m] (~lambdandy@2001:470:69fc:105::1:3045) (Quit: You have been kicked for being idle)
[12:30:27] *** Joins: coot_ (~coot@2a02:a310:e03f:8500:933a:39ca:ef4e:37cb)
[12:30:38] *** Quits: coot_ (~coot@2a02:a310:e03f:8500:933a:39ca:ef4e:37cb) (Remote host closed the connection)
[12:31:50] *** Joins: coot (~coot@2a02:a310:e03f:8500:933a:39ca:ef4e:37cb)
[12:34:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[12:38:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:38:42] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:43:55] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[12:45:05] *** Joins: deadmarshal (~deadmarsh@95.38.230.202)
[12:45:28] *** astra` is now known as astra
[12:49:46] *** Joins: max22- (~maxime@2a01cb0883359800c0740bac5cfe1b89.ipv6.abo.wanadoo.fr)
[12:52:29] *** Joins: PVPANTHONY (~The_viole@203.77.49.232)
[12:56:06] *** Quits: PVPANTHONY (~The_viole@203.77.49.232) (Client Quit)
[12:56:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:57:00] *** Quits: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net) (Remote host closed the connection)
[13:01:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 260 seconds)
[13:01:38] *** Joins: PVPANTHONY (~The_viole@203.77.49.232)
[13:02:07] *** Quits: PVPANTHONY (~The_viole@203.77.49.232) (Client Quit)
[13:02:25] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[13:03:12] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Client Quit)
[13:03:29] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[13:06:00] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:09:27] *** Quits: deadmarshal (~deadmarsh@95.38.230.202) (Ping timeout: 252 seconds)
[13:11:21] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[13:15:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:20:14] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 256 seconds)
[13:25:54] *** Quits: fr33domlover (~fr33@2.55.43.13) (Ping timeout: 256 seconds)
[13:26:33] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[13:30:02] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:30:07] *** Quits: justSleigh (~justache@user/justache) (Remote host closed the connection)
[13:30:08] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[13:30:37] *** Joins: Vajb (~Vajb@nalkaylds2h97nzof-2.v6.elisa-mobile.fi)
[13:31:05] *** Joins: justSleigh (~justache@user/justache)
[13:34:51] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[13:35:26] <int-e> c_wraith: I lost :-/  https://paste.debian.net/1223102/  (it is noticably faster though!)
[13:35:51] <int-e> also unreadable, as usual
[13:36:30] <c_wraith> only the SSE ops are unreadable!
[13:36:47] <int-e> yeah that's what I meant
[13:36:52] *** Quits: mbuf (~Shakthi@122.174.253.173) (Quit: Leaving)
[13:42:14] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[13:43:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:43:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[13:45:52] *** Lord_of_Life_ is now known as Lord_of_Life
[13:47:18] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[13:54:55] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[13:58:03] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[13:58:03] *** Joins: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net)
[13:59:40] *** Quits: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[13:59:40] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[14:00:49] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[14:00:57] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[14:01:08] *** Joins: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net)
[14:01:33] *** Quits: curiousgay_ (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[14:01:33] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[14:01:56] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[14:02:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:05:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:07:43] <xerox> how can I know if a rewrite rule is taking effect?
[14:08:00] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[14:09:02] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[14:09:44] <c_wraith> https://downloads.haskell.org/ghc/latest/docs/html/users_guide/debugging.html#ghc-flag--ddump-rule-firings
[14:10:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:10:08] <c_wraith> Or the flag below that one, for more details.  It says.
[14:14:38] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[14:15:13] *** Joins: Jing (~hedgehog@103.121.208.36)
[14:16:07] *** Quits: Jing (~hedgehog@103.121.208.36) (Remote host closed the connection)
[14:16:38] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[14:17:37] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[14:18:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:21:31] *** Joins: fr33domlover (~fr33@2.55.25.254)
[14:26:11] *** Joins: earendel (uid498179@user/earendel)
[14:26:26] *** Quits: Vajb (~Vajb@nalkaylds2h97nzof-2.v6.elisa-mobile.fi) (Ping timeout: 260 seconds)
[14:30:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[14:30:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:39] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:37:05] *** Joins: Vajb (~Vajb@85-76-39-222-nat.elisa-mobile.fi)
[14:38:00] <xerox> sweet 
[14:40:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 252 seconds)
[14:45:48] *** Joins: retroid_ (~retro@05412d78.skybroadband.com)
[14:46:22] *** Quits: Vajb (~Vajb@85-76-39-222-nat.elisa-mobile.fi) (Ping timeout: 256 seconds)
[14:47:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[14:47:28] *** Quits: retro_ (~retro@05412d78.skybroadband.com) (Ping timeout: 268 seconds)
[14:48:36] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[14:51:33] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:53:02] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[14:53:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:56:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:58:10] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 260 seconds)
[14:59:23] *** Joins: xkuru (~xkuru@user/xkuru)
[15:05:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:05:38] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[15:05:54] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9)
[15:08:28] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[15:12:04] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[15:13:13] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Remote host closed the connection)
[15:14:59] *** Quits: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353) (Quit: Leaving)
[15:15:04] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[15:15:45] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:16:35] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[15:22:53] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9)
[15:26:13] *** Quits: max22- (~maxime@2a01cb0883359800c0740bac5cfe1b89.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[15:31:39] *** Joins: __monty__ (~toonn@user/toonn)
[15:35:25] *** Joins: mmhat (~mmh@55d44624.access.ecotel.net)
[15:35:44] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[15:42:09] *** Quits: zaquest (~notzaques@5.130.79.72) (Quit: Leaving)
[15:43:18] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:45:55] <Arsen> hey, I asked a while ago in #haskell-stack, but it appears to be more inactive, so I'm reposting here, if that's alright: can stack fetch deps? building pandoc on CI isn't great
[15:48:13] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::9788) (Ping timeout: 252 seconds)
[15:50:40] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[15:55:42] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[15:59:48] *** Joins: jakalx (~jakalx@base.jakalx.net)
[16:00:21] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[16:00:23] *** Quits: arjun (~user@user/arjun) (Remote host closed the connection)
[16:00:44] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[16:01:00] *** Joins: PVPANTHONY (~The_viole@203.77.49.232)
[16:02:02] *** Quits: PVPANTHONY (~The_viole@203.77.49.232) (Client Quit)
[16:02:29] *** Joins: PVPANTHONY (~The_viole@203.77.49.232)
[16:02:37] *** Quits: PVPANTHONY (~The_viole@203.77.49.232) (Client Quit)
[16:04:43] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 252 seconds)
[16:07:20] *** Joins: neurocyte0132889 (~neurocyte@45.128.180.15)
[16:07:20] *** Quits: neurocyte0132889 (~neurocyte@45.128.180.15) (Changing host)
[16:07:20] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[16:20:19] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[16:23:43] *** Quits: Jing (~hedgehog@2604:a840:3::1001) (Remote host closed the connection)
[16:24:27] *** Joins: Jing (~hedgehog@125.106.89.1)
[16:31:30] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 260 seconds)
[16:32:43] *** Quits: Alex_test (~al_test@178.34.163.33) (Quit: ;-)
[16:32:47] *** Quits: AlexZenon (~alzenon@178.34.163.33) (Quit: ;-)
[16:32:59] *** Quits: AlexNoo (~AlexNoo@178.34.163.33) (Quit: Leaving)
[16:40:07] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:41:48] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[16:44:07] <geekosaur> can and does. that's kinda the point, in fact
[16:44:38] <geekosaur> both stack and modern cabal manage the dependencies for you
[16:44:53] *** Joins: Guest|87 (~Guest|87@46.32.66.42)
[16:45:04] *** Quits: Guest|87 (~Guest|87@46.32.66.42) (Client Quit)
[16:45:38] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[16:46:10] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[16:46:33] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:47:38] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9)
[16:49:35] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[16:51:31] *** Quits: phma (~phma@host-67-44-209-24.hnremote.net) (Read error: Connection reset by peer)
[16:52:25] *** Joins: phma (phma@2001:5b0:212a:ba68:a7e4:c90f:fe43:cf4b)
[16:52:40] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 268 seconds)
[16:53:24] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[16:53:35] <timCF> Hello! I did already asked yesterday question about dealing with such issue, and as I understood there is the way how I can write Eq instance manually, but I didn't understood how to do that exactly https://gist.github.com/21it/5e6f822ee61408e98818b94f51dde4da
[16:53:54] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 260 seconds)
[16:54:22] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 260 seconds)
[16:54:49] *** Joins: AlexZenon (~alzenon@178.34.163.33)
[16:55:03] *** Joins: AlexNoo (~AlexNoo@178.34.163.33)
[16:57:10] *** Joins: fizbin (~fizbin@c-73-33-197-160.hsd1.nj.comcast.net)
[16:58:10] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[16:58:10] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[16:58:13] *** allbery_b is now known as geekosaur
[16:59:31] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[17:01:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:04:38] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[17:11:34] *** Joins: Alex_test (~al_test@178.34.163.33)
[17:12:44] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[17:14:00] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[17:14:14] *** Joins: tomku (~tomku@user/tomku)
[17:15:31] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[17:15:47] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Client Quit)
[17:16:42] *** Joins: alx741 (~alx741@157.100.93.160)
[17:19:33] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:19:53] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Ping timeout: 252 seconds)
[17:20:08] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[17:21:26] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 260 seconds)
[17:23:30] *** Quits: tom__ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684) (Remote host closed the connection)
[17:23:47] *** Joins: tom__ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684)
[17:24:03] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[17:27:08] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:28:25] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[17:32:15] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[17:32:21] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[17:32:35] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[17:33:01] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Client Quit)
[17:33:13] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[17:34:19] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[17:35:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[17:36:13] *** Quits: boxscape_ (~boxscape_@p4ff0bb6c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:37:14] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[17:37:31] <iphy> is there a "m [f a] -> m (f [a])"?
[17:37:38] <iphy> I can't find one on hoogle
[17:38:59] <iphy> or: [a] -> (a -> m (f a)) -> m (f [a])
[17:39:04] <xerox> shouldn't be that far from traverse
[17:39:17] <iphy> hmm, hoogle says sequenceA <$> traverse
[17:39:46] <iphy> yep, that's it
[17:40:30] <iphy> sequenceA <$> traverse f xs
[17:42:01] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[17:42:11] *** Joins: alx741 (~alx741@157.100.93.160)
[17:45:31] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[17:46:31] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9)
[17:51:18] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7dd2:f910:5284:d6e9) (Ping timeout: 260 seconds)
[17:56:46] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:58:48] *** Joins: noex (~null@2600:8804:1280:aa0:5857:94a:25de:c513)
[18:00:36] <Arsen> geekosaur: fetch built deps*
[18:00:47] <Arsen> since the point is reproducible builds, I'd expect it to be possible
[18:03:16] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:03:22] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Read error: Connection reset by peer)
[18:03:29] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:04:29] <geekosaur> on CI you'd want to save the .stack-work dir so the deps are already available
[18:04:46] <geekosaur> I believe there are CI tools which do this for you
[18:07:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:08:02] <Arsen> hm, okay
[18:08:05] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[18:08:09] <Arsen> surely, GitHub actions have a way to do this
[18:08:46] <Arsen> that'd still take about an hour on first build, though, hmm
[18:08:47] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[18:09:08] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 268 seconds)
[18:11:28] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:11:29] <geekosaur> https://github.com/freckle/stack-cache-action ?
[18:12:00] <geekosaur> also I though there was a standardized haskell ci template or something that included stack caching
[18:12:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 260 seconds)
[18:12:44] <geekosaur> stack doesn't cache built objects upstream, because they depend too much on precise compile options and the like
[18:18:54] <geekosaur> mrr, found haskell-ci but it's cabal, not stack
[18:19:17] <geekosaur> does cache .cabal/store (rough equivalent of .stack-work)
[18:21:27] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[18:23:30] *** Quits: fr33domlover (~fr33@2.55.25.254) (Ping timeout: 260 seconds)
[18:23:30] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[18:23:55] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[18:26:01] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Remote host closed the connection)
[18:28:21] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[18:31:16] <geekosaur> only haskell-ci configs I can find are for cabal 2+. looked for stack but found only travis-ci configs
[18:31:24] <smichel17[m]> There's also a `-outputdir` ghc option. Not sure if that helps in this case (doesn't speed up the initial build), and I'm not sure how it relates to .stack-work
[18:33:44] <smichel17[m]> (If anybody knows whether/how it relates to `.stack-work`, I'd much appreciate an explanation!)
[18:34:31] <geekosaur> it doesn't. stack saves packages, not individual files
[18:34:40] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:35:15] <geekosaur> it's more closely related to using ghc-pkg to register a new package
[18:40:13] *** Joins: alx741 (~alx741@157.100.93.160)
[18:43:07] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 252 seconds)
[18:44:39] *** Quits: mmhat (~mmh@55d44624.access.ecotel.net) (Quit: WeeChat 3.3)
[18:46:07] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[18:46:51] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[18:50:31] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[18:52:45] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[18:54:44] *** Joins: max22- (~maxime@2a01cb0883359800f7f7f5ad28cfd1e2.ipv6.abo.wanadoo.fr)
[19:00:09] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[19:05:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Ping timeout: 268 seconds)
[19:05:48] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:08:48] *** Quits: Jing (~hedgehog@125.106.89.1) (Read error: Connection reset by peer)
[19:09:31] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[19:10:42] *** Joins: alx741 (~alx741@157.100.93.160)
[19:11:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:11:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:11:27] *** Joins: wroathe (~wroathe@user/wroathe)
[19:13:16] *** Quits: mei (~mei@user/mei) (Ping timeout: 268 seconds)
[19:14:43] *** Joins: Jing (~hedgehog@2604:a840:3::1001)
[19:15:46] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[19:20:05] *** Joins: lupulo (~lupulo_@128.red-83-35-42.dynamicip.rima-tde.net)
[19:20:05] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[19:24:33] *** Quits: xff0x (~xff0x@2001:1a81:5203:4200:a63b:498f:dba9:bef9) (Ping timeout: 250 seconds)
[19:25:39] *** Joins: xff0x (~xff0x@2001:1a81:5203:4200:6ffd:4190:bd29:3532)
[19:28:06] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:30:06] *** Quits: iammrinal0[m] (~iammrinal@2001:470:69fc:105::1:2248) (Quit: You have been kicked for being idle)
[19:31:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:33:49] *** Joins: machinedgod (~machinedg@24.105.81.50)
[19:33:53] *** Joins: altern (~Sergii@altern.corbina.com.ua)
[19:34:24] <altern>  /msg NickServ IDENTIFY altern ehgdae
[19:38:08] <altern> Hi! I am having a weird problem with running cmd command 'git pull --tags --dry-run' when calling the function from servant API endpoint. More details here: https://stackoverflow.com/questions/70324007/why-does-a-command-line-call-behaves-not-as-expected-when-i-am-doing-that-in-has Would be grateful if somebody could help
[19:38:14] *** Joins: alx741 (~alx741@157.100.93.160)
[19:40:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:41:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 260 seconds)
[19:42:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:43:28] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[19:47:23] <robbert-vdh> Is there some convenient way to include internal developer-oriented documentation to in Haddock docstrings other than just splitting the comment into two and restarting the second comment with just `-- `? For things like todo comments and notes about the implementation that aren't relevant to consumers of the library.
[19:48:24] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[19:50:34] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[19:52:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[19:52:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[19:53:05] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[19:54:53] *** Parts: cfebs (~cfebs@user/cfebs) ()
[19:56:07] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:fcc8:d2a0:3b64:5912)
[19:56:18] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[19:56:25] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Ping timeout: 268 seconds)
[20:03:07] *** Quits: xff0x (~xff0x@2001:1a81:5203:4200:6ffd:4190:bd29:3532) (Ping timeout: 250 seconds)
[20:03:52] *** Joins: xff0x (~xff0x@2001:1a81:5203:4200:40b7:e822:93c8:fd81)
[20:05:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:09:38] *** Joins: alx741 (~alx741@157.100.93.160)
[20:14:00] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[20:15:10] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[20:19:52] <EvanR> lol altern you might want to change your nickserv password
[20:20:10] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[20:21:25] <altern> changed
[20:22:52] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[20:28:30] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:33:19] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[20:33:51] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[20:40:23] *** Quits: altern (~Sergii@altern.corbina.com.ua) (Ping timeout: 250 seconds)
[20:43:42] *** Quits: sebeko (uid530526@id-530526.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:43:57] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:943d:5b05:e9f7:79b5)
[20:45:11] <ph88> when i have a piece of data that is part of several lists and other data structures, would it be ok to make it mutable so that i can just update it and don't have to go around finding and updating in several places? or is that too heretic ?
[20:45:20] *** Quits: machinedgod (~machinedg@24.105.81.50) (Remote host closed the connection)
[20:46:45] *** Joins: machinedgod (~machinedg@24.105.81.50)
[20:46:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[20:47:21] <EvanR> then you'd have to make what is in those lists merely a reference to the mutable object instead of the object itself
[20:47:42] <EvanR> e.g. an IORef or Int key into a mutable store, or something
[20:49:09] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[20:49:20] <EvanR> then you can't access the data without IO
[20:51:03] *** Joins: alx741 (~alx741@181.199.42.79)
[20:51:40] <ph88> yes, just that i never done it like that
[20:51:51] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[20:52:41] <EvanR> probably for the best xD
[20:53:35] *** Quits: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[20:54:27] <EvanR> you could also keep your "pieces" in an IntMap, and speak of their Int key elsewhere
[20:54:48] <EvanR> but don't mix up the keys
[20:55:29] <EvanR> you can add some type safety with a dependent map and typed keys
[20:57:25] *** Joins: burnsidesLlama (~burnsides@dhcp168-019.wadham.ox.ac.uk)
[20:58:42] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:03:20] *** Quits: alx741 (~alx741@181.199.42.79) (Read error: Connection reset by peer)
[21:06:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[21:08:43] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[21:19:36] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[21:20:25] *** Joins: alx741 (~alx741@157.100.93.160)
[21:23:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:23:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:23:08] *** Joins: wroathe (~wroathe@user/wroathe)
[21:24:16] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[21:27:23] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 252 seconds)
[21:27:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[21:27:50] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[21:29:05] <ph88> thanks EvanR 
[21:29:42] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[21:29:53] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:30:56] *** Joins: gdd (~gdd@129.199.146.230)
[21:32:40] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[21:33:41] <ph88> is there an out of the box function that works on list that either inserts a new item or updates an existing item based on a comparison predicate ?
[21:34:34] *** Joins: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net)
[21:34:53] <monochrom> No, but there are some for Data.Map.
[21:35:00] <monochrom> or Data.Set
[21:37:44] <ph88> this ?  https://hackage.haskell.org/package/containers-0.6.5.1/docs/Data-Set.html#v:alterF 
[21:37:49] <EvanR> List turns out to be a bad container usually
[21:38:12] <EvanR> maybe they didn't want to encourage it xD
[21:38:17] *** Joins: slice (~slice@user/slice)
[21:40:12] <ph88> actually i'm implementing in purescript, but looking at haskell for inspiration
[21:41:28] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[21:42:07] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[21:42:32] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:42:50] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Client Quit)
[21:44:44] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[21:45:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:48:30] *** Joins: jakalx (~jakalx@base.jakalx.net)
[21:49:30] <sm> python wrestles with the upper bounds issue: https://news.ycombinator.com/item?id=29507681
[21:50:54] *** Joins: alx741 (~alx741@181.199.42.79)
[21:51:51] *** Joins: namkeleser (~namkelese@101.179.128.103)
[21:52:45] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:53:58] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[21:54:02] *** Joins: pfurla[m] (uid345156@id-345156.tinside.irccloud.com)
[21:56:34] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[21:57:09] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[21:59:09] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[22:00:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[22:02:13] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[22:02:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:03:07] *** Quits: alx741 (~alx741@181.199.42.79) (Read error: Connection reset by peer)
[22:05:46] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[22:07:32] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:07:42] *** Joins: emresaurus (~emresauru@78.173.60.185)
[22:08:21] *** Joins: jkaye (~jkaye@pool-96-234-204-169.bltmmd.fios.verizon.net)
[22:10:15] *** Quits: jgeerds (~jgeerds@55d4ac73.access.ecotel.net) (Ping timeout: 268 seconds)
[22:10:49] *** Quits: emresaurus (~emresauru@78.173.60.185) (Client Quit)
[22:11:42] *** Quits: coot (~coot@2a02:a310:e03f:8500:933a:39ca:ef4e:37cb) (Quit: coot)
[22:12:28] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:12:51] *** Quits: jkaye (~jkaye@pool-96-234-204-169.bltmmd.fios.verizon.net) (Ping timeout: 252 seconds)
[22:15:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:19:03] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Remote host closed the connection)
[22:20:15] *** Joins: alx741 (~alx741@157.100.93.160)
[22:22:08] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:25:11] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:28:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[22:29:08] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1)
[22:31:07] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:32:01] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[22:33:29] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[22:36:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:38:00] *** Quits: max22- (~maxime@2a01cb0883359800f7f7f5ad28cfd1e2.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:38:48] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:39:51] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:42:58] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[22:45:37] *** Joins: pfurla (~pfurla@2804:18:5820:1d6d:8d43:ba5d:8061:64f4)
[22:46:00] *** Joins: jgeerds (~jgeerds@55d4ac73.access.ecotel.net)
[22:47:41] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 252 seconds)
[22:48:28] *** Joins: alx741 (~alx741@181.199.42.79)
[22:49:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 260 seconds)
[22:49:41] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:58:00] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[23:00:34] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[23:01:13] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[23:01:51] *** Quits: nickdaly (45ce440a48@2604:bf00:561:2000::e2) (Remote host closed the connection)
[23:01:59] *** Quits: alx741 (~alx741@181.199.42.79) (Read error: Connection reset by peer)
[23:04:24] *** Joins: max22- (~maxime@2a01cb0883359800ce4fb8a82cc4438c.ipv6.abo.wanadoo.fr)
[23:05:30] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:05:36] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:06:10] *** Quits: namkeleser (~namkelese@101.179.128.103) (Quit: Client closed)
[23:09:33] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[23:11:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[23:12:47] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[23:13:18] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 260 seconds)
[23:15:00] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:18:44] *** Joins: alx741 (~alx741@157.100.93.160)
[23:25:27] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[23:30:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:32:08] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:3170:52ba:4037:d1) (Remote host closed the connection)
[23:32:16] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[23:35:11] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Remote host closed the connection)
[23:35:27] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 250 seconds)
[23:35:42] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[23:36:43] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:11] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[23:41:18] *** Quits: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net) (Ping timeout: 260 seconds)
[23:42:11] *** Joins: econo (uid147250@user/econo)
[23:42:33] *** Joins: gustik (~gustik@2a01:c844:242f:ba20:72e:7030:46bf:1353)
[23:45:58] *** nfir is now known as nf
[23:46:10] *** Joins: cjb (~cjb@user/cjb)
[23:46:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:47:23] *** Joins: madjestic (~madjestic@88-159-247-120.fixed.kpn.net)
[23:48:19] *** Joins: alx741 (~alx741@157.100.93.160)
[23:48:52] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[23:49:55] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:fcc8:d2a0:3b64:5912) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:50:53] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:52:53] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:54:43] *** Joins: trcc (~trcc@2-104-60-169-cable.dk.customer.tdc.net)
[23:55:20] *** Joins: Akiva (~Akiva@user/Akiva)
[23:55:24] *** Joins: bbear58 (~bbear@2a01:e34:ec2b:d430:e0dd:e718:df68:1877)
[23:56:05] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[23:56:44] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:56:44] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:56:44] *** Joins: wroathe (~wroathe@user/wroathe)
[23:58:27] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 252 seconds)
[23:59:03] *** Quits: pfurla (~pfurla@2804:18:5820:1d6d:8d43:ba5d:8061:64f4) (Quit: gone to sleep. ZZZzzz…)
[23:59:33] *** Joins: jespada (~jespada@87.74.33.157)
[23:59:39] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[23:59:49] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::9788)
