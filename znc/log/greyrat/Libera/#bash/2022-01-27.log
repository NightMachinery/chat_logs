[00:00:31] *** Joins: victor (~iegg@user/kartagis)
[00:00:50] *** Quits: twobitsprite (~isaac.fre@192.146.154.3) (Ping timeout: 250 seconds)
[00:01:42] *** Quits: vilja (~vilja@fwa5e16-76.bb.online.no) (Ping timeout: 250 seconds)
[00:01:49] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 268 seconds)
[00:01:52] <yustin> why two time FIlystyn
[00:02:07] *** Joins: twobitsprite (~isaac.fre@192.146.154.3)
[00:03:09] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[00:03:26] <FIlystyn> First you swap as I understand with sed ( i nearl don't use sed so If I am wrong, feel free to tell me ). nuls to LFs and than we would process the file
[00:03:42] <FIlystyn> for split word per line
[00:04:11] *** Joins: mknod (~mknod@user/mknod)
[00:04:37] <yustin> you also wanna replace spaces with newlines ?
[00:05:02] <FIlystyn> no split words per each space new line tab ( white space ) OR nul
[00:05:07] <greycat> I think they're just making up the question as they go.  I don't think there is a real file.
[00:06:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[00:07:14] <FIlystyn> I had few files like that some time ago ( broken program produced quite a bit output )
[00:07:55] <FIlystyn> After longer time managed to fix them and even have a program that does it simply but was thinking - maybe bash has it somehow fast and easy
[00:07:55] <yustin> sed "s/\x00/\x0a/g;s/\s/\n/g;s/\t/\n/g;"   should do the job
[00:08:06] <greycat> writing a program that can cope with *broken* inputs sanely is an order of magnitude more difficult than writing a program to deal with *sensible* input in a known format
[00:08:08] *** Joins: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[00:08:09] <FIlystyn> nice yustin
[00:08:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:08:28] <FIlystyn> It's few days spanning
[00:08:32] <FIlystyn> like 10 day
[00:08:40] <FIlystyn> so yeah writing easy program to that has sens
[00:08:41] <greycat> why are you using \x0a once and
[00:08:55] <greycat> why are you using \x0a once and \n once?  also, why not simply tr ' \0' '\n\n' ?
[00:09:11] <FIlystyn> csanning***
[00:09:13] <greycat> oh wait the second one is tab not space, so tr '\t\0' '\n\n'
[00:09:15] <FIlystyn> scanning******
[00:09:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:09:52] <yustin> greycat: spaces are missing ;P
[00:10:04] <greycat> oh, I see you put some *perl* in your GNU(?) sed too, so there are actually three.  very well.   tr ' \t\0' '\n\n\n'
[00:10:36] <greycat> I'm 100% confident the \s part will not work in unix sed.  I don't *think* the \x will work, but who the hell knows outside of #sed.
[00:11:15] <geirha> tr '[:space:]\0' '[\n*]'
[00:11:21] *** Joins: LUCIANO (~imran123^@103.115.255.172)
[00:11:22] *** Joins: AHMAD (~url-love-@103.115.255.172)
[00:11:25] *** Joins: FREDRICK (~loveable_@103.115.255.172)
[00:11:28] *** Quits: LUCIANO (~imran123^@103.115.255.172) (Remote host closed the connection)
[00:11:28] *** Quits: AHMAD (~url-love-@103.115.255.172) (Remote host closed the connection)
[00:11:28] *** Quits: FREDRICK (~loveable_@103.115.255.172) (Remote host closed the connection)
[00:11:41] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[00:12:08] <greycat> And in a few moments someone will probably stumble across the *next* part of the question and the reason I did not answer initially: multiple adjacent whitespace.
[00:13:24] *** Quits: Kartagis (~iegg@user/kartagis) (Killed (NickServ (GHOST command used by victor)))
[00:13:36] *** victor is now known as Kartagis
[00:14:11] *** Joins: victor (~iegg@user/kartagis)
[00:14:43] <FIlystyn> is that a problem in bash two whitespaces one next to other?
[00:14:53] <greycat> ...
[00:14:56] <yustin> lol
[00:14:57] <matthewcroughan> How do you escape a subshell in single quotes?
[00:15:11] <greycat> single quotes have nothing to do with subshells
[00:15:12] <tirnanog> escape a subshell?
[00:15:14] <larryv> what does "escape a subshell" mean
[00:15:17] <tirnanog> does not parse.
[00:15:28] <matthewcroughan> I want to execute a command on a remote host, which uses the value of a subshell on the local host
[00:15:35] <matthewcroughan> `ssh -t matthew@t480 'sudo $(nix path-info $SYSTEM_CLOSURE)/bin/switch-to-configuration test'`
[00:15:41] <greycat> you are using the word subshell WRONGLY
[00:15:47] <matthewcroughan> Then what is it called?
[00:15:50] <matthewcroughan> $() or ``
[00:15:52] <tirnanog> command substitution
[00:15:54] <greycat> I am starting to think you mean command substitution, but I'm not sure.
[00:15:58] <matthewcroughan> Yes, command substitution
[00:16:08] <matthewcroughan> I misterm it as subshell because of prior misteaching
[00:16:46] <greycat> do you want nix to run on the local system or the remote system?
[00:16:59] <matthewcroughan> local
[00:17:14] <greycat> Then you're introducing a massive code injection problem.
[00:17:19] <matthewcroughan> Why?
[00:17:36] <greycat> the output of $(nix) could contain *anything*, and the remote system's shell will parse it as code.
[00:17:57] <e36freak> mmm, tasty
[00:17:58] <matthewcroughan> If have a compromised binary on your system, you have big issues.
[00:18:11] <matthewcroughan> If `mv` on my system is compromised, I'll be long gone before `nix` gets called.
[00:18:15] <matthewcroughan> I don't see your point.
[00:18:23] <FIlystyn> the sed example and gehira one did not work tested with echo $'w\0w' |
[00:18:24] <greycat> What if the output of "nix path-info" contains a space?
[00:18:38] <greycat> FIlystyn: your test is broken.
[00:18:40] <matthewcroughan> greycat: it will be inconsequential on both ends
[00:18:45] <greycat> FIlystyn: print 'w\0w' |
[00:18:47] <greycat> err
[00:18:50] <greycat> FIlystyn: printf 'w\0w' |
[00:19:03] <greycat> matthewcroughan: wrong.  it will break.
[00:19:10] *** Joins: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de)
[00:19:11] <matthewcroughan> The return value of `nix path-info nixpkgs#hello` is `/nix/store/2g13canlyc7b44mbr5fh62pdyvv6xrjl-hello-2.10`
[00:19:27] <greycat> !flw
[00:19:27] <greybot> Famous last words: "The filenames will never have spaces." "There won't ever be a newline inside the <a> tag." "There will only be one } at the end of the config file." "I don't need || exit after upgrade, because if apt update succeeds then apt upgrade will."
[00:19:30] <matthewcroughan> greycat: yes, you're right, it'll break
[00:19:41] <matthewcroughan> Okay then guess what
[00:19:47] <matthewcroughan> I'll make it hermetic, just to satisfy your request
[00:19:49] <tirnanog> if you can be sure that the remote shell is bash: closure=$(nix ...); ssh hostname "sudo $(printf %q "$closure")/bin/..."
[00:20:14] <emanuele6> or just "${closure@Q}"
[00:20:19] <greycat> If you're sure the output of nix path-info will always be safe, then the LITERAL answer to your question is stupidly simple: replace the single quotes with double quotes.
[00:20:23] <matthewcroughan> greycat: ( set -x; ${final.openssh}/bin/ssh -t $SSH_USER@$SSH_HOST 'sudo $(${pkgs.nix}/bin/nix path-info $SYSTEM_CLOSURE)/bin/switch-to-configuration test' )
[00:20:24] <matthewcroughan> now it's pure
[00:20:27] <matthewcroughan> now it can't break like you say
[00:20:37] <matthewcroughan> the reason is because `nix` will never be the `nix` from my `$PATH`
[00:20:37] <greycat> Now you will tell us your example in the question was not correct, and !b9
[00:20:51] <matthewcroughan> So I've fixed the problem you summise.
[00:21:08] <tirnanog> surmise
[00:21:15] <matthewcroughan> Correct :D
[00:21:19] <tirnanog> :)
[00:21:26] <matthewcroughan> Nix can't be code injected, because it's always an absolute path to a place in the /nix/store which has been "realised".
[00:21:32] <matthewcroughan> In this instance
[00:21:46] <matthewcroughan> previously, I was relying on the environment's $PATH to provide `nix`, in the example I just gave you, I'm not.
[00:21:49] <greycat> And it will never have a space, a tab, a * or ? or [ in it?
[00:21:57] <greycat> or backticks, or $( or ...?
[00:22:00] <emanuele6> or ;
[00:22:05] <tirnanog> alright. but, even then, you should probably confirm the exit status of your nix command at least.
[00:22:12] <matthewcroughan> The result of running that will never have those characters in it for malicious reasons
[00:22:24] <matthewcroughan> the only reasons it can have those chars in it is because of implementation change, at which point I will have to update my code
[00:22:25] <tirnanog> closure=$(nix ...) && ...
[00:22:42] <matthewcroughan> tirnanog: is `set -x` not doing that for me?
[00:22:46] <tirnanog> no.
[00:22:50] <matthewcroughan> is that set -e then?
[00:22:56] <greycat> ...
[00:22:58] <emanuele6> why would you use that?
[00:23:01] <matthewcroughan> oh sorry, the total script is set -e
[00:23:07] <matthewcroughan> I forgot to show you the total script
[00:23:18] <matthewcroughan> Though I just want to know how to run a subshell there
[00:23:31] <matthewcroughan> the return value of `nix path-info` is all I need. I'll put it in a variable if I need
[00:23:48] <tirnanog> you would still need to perform a distinct assignment.
[00:24:23] <greycat> or just replace the quotes with the correct quotes and LET IT BURN BABY
[00:24:25] <tirnanog> otherwise the exit status will count for nothing.
[00:24:29] <tirnanog> heh.
[00:24:35] <matthewcroughan> greycat: I'm not sure what you mean, lol.
[00:24:41] <matthewcroughan> Do I have to go elsewhere to get an answer?
[00:24:46] <greycat> 15:50  greycat> If you're sure the output of nix path-info will always be safe,
[00:24:47] <greycat>                 then the LITERAL answer to your question is stupidly simple:
[00:24:47] <greycat>                 replace the single quotes with double quotes.
[00:24:52] <tirnanog> you did get an answer, though.
[00:24:53] <matthewcroughan> Ah, missed it. Thank you.
[00:24:59] <tirnanog> two, in fact.
[00:25:08] <matthewcroughan> I was focusing on the criticisms, not the answers
[00:25:11] <matthewcroughan> tunnel vision
[00:25:51] <matthewcroughan> Maybe I should do this all with oil
[00:28:14] <greycat> FYI once you've got the path in a variable, there are a few ways you *can* pass it safely to a remote script...
[00:28:19] <greycat> !injection
[00:28:19] <greybot> Don't pass user-supplied data in a context where it could be interpreted as code. BAD: ssh host "rm $file"; GOOD: ssh host "$(printf 'rm %q' "$file")"; see http://mywiki.wooledge.org/BashProgramming/05
[00:28:42] <greycat> not sure about the one in the bot, but I'd read that page if I were you
[00:28:48] *** Quits: Minvera (~Minvera@user/Minvera) (Remote host closed the connection)
[00:29:13] *** Joins: Minvera (~Minvera@user/Minvera)
[00:30:01] <matthewcroughan> greycat: https://github.com/MatthewCroughan/nixinate/blob/master/flake.nix#L17-L29
[00:30:06] <matthewcroughan> Am I doing anything particularly egregious here?
[00:30:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:30:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:702c:f538:99a2:cdd0)
[00:30:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:702c:f538:99a2:cdd0) (Changing host)
[00:30:20] *** Joins: skapata (~Skapata@user/skapata)
[00:30:29] <matthewcroughan> Keep in mind the guarantees Nix has, and how some gotchas in bash can become irrelevant
[00:30:48] <matthewcroughan> If you're not sure what Nix is, it won't make sense, some of the scripts I'm writing
[00:31:12] <matthewcroughan> Nix writes shell scripts, and ensures that paths in the /nix/store are available
[00:31:28] <greycat> !learn flw2 "Nix is bullet proof. It can do no wrong. Everything that has nix in it is 100% safe even with sudo or ssh or eval."
[00:31:28] <greybot> OK, greycat
[00:31:30] <tirnanog> on the other hand, any program that you invoke may fail, at any time, for any reason. keep that in mind when employing command substitutions.
[00:31:37] <matthewcroughan> ${pkgs.gcc} is a Nix expression which will build gcc from source and put it into the /nix/store where it is referencable as an object
[00:32:07] <matthewcroughan> so the code injection stuff you're talking about, I'm really not sure whether it applies
[00:32:13] <tirnanog> yes, yes, we get it.
[00:32:15] <matthewcroughan> I don't actually know enough about bash, I'm just assuming there's SOME safety
[00:32:25] <tirnanog> but don't squash the exit status.
[00:32:46] <matthewcroughan> tirnanog: My hope is that these simple C programs have enough exit code magic going on, that I don't have to
[00:32:54] <matthewcroughan> It seems pretty bullet proof so far
[00:33:06] <tirnanog> (sigh) ok.
[00:33:06] <FIlystyn> nixos is original but after some time you get fed up with it.
[00:33:08] <matthewcroughan> ssh + a c program that correctly produces exit codes, and `set -e` should work right?
[00:33:12] <FIlystyn> Used it for half year
[00:33:19] <tirnanog> you seem to want to speak at this point, but not hear.
[00:33:26] <matthewcroughan> I do want to hear, I am asking you a question
[00:33:30] <matthewcroughan> it is you who feels not listened to
[00:33:59] <matthewcroughan> So, what is the problem with `set -e` and a program that exits correctly, being called via `ssh -t user@host ' command '` ?
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:15] <matthewcroughan> In that case, if the remote command fails, does it not do precisely the same thing as if it were executed locally?
[00:34:22] <matthewcroughan> The exit codes pass through, as far as I have tested
[00:34:29] <tirnanog> # true "$(false)"; echo $?
[00:34:30] <matthewcroughan> note the -t
[00:34:31] <shbot> tirnanog: 0
[00:34:34] <tirnanog> that is the problem.
[00:34:47] <matthewcroughan> I do not know what you mean by that code.
[00:34:50] <matthewcroughan> Can you explain it further?
[00:34:52] <tirnanog> yes.
[00:35:42] <matthewcroughan> It **does** seem to work via ssh -t
[00:35:53] <tirnanog> if you invoke ssh "$(nix ...)" and nix fails, perhaps even failing to print anything to stdout at all, then you set -e will not help you in any way, and you will execute the _wrong_ shellcode on the remote end.
[00:36:07] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Quit: WeeChat 3.0)
[00:36:19] <tirnanog> you can work around that by assigning to a variable first, then subsequently expanding it.
[00:36:38] <matthewcroughan> tirnanog: https://pastebin.com/raw/zaA3J8Ek
[00:36:54] <tirnanog> that's not a command substitution.
[00:37:02] <matthewcroughan> So is there a way we can make it not do this?
[00:37:04] <tirnanog> which is what you are proposing to use.
[00:37:22] <matthewcroughan> Oh dear.. I see what you mean now
[00:37:26] <matthewcroughan> How can I fix this?
[00:37:29] <tirnanog> it was already addressed: closure=$(nix ...); ssh "$closure/..."
[00:37:35] <matthewcroughan> Okay, thank you for the patience.
[00:37:52] <tirnanog> the eix status of nix will thus be meaningful.
[00:38:08] <matthewcroughan> In my previous code, I'm not using code substitution, so I didn't notice this.
[00:38:09] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[00:38:21] <matthewcroughan> on my Github
[00:38:21] <larryv> &&, presumably
[00:38:33] <greycat> larryv: they're using -e also
[00:38:37] <tirnanog> larryv: he's using set -e and ... I'm not even going to go there.
[00:38:45] <larryv> oh right. forgot
[00:38:46] <greycat> because WHY THE FUCK NOT
[00:38:48] *** Joins: marmalade (~marmalade@cpe-107-184-35-218.socal.res.rr.com)
[00:38:59] <matthewcroughan> Well what should I use instead of -e?
[00:39:22] <greycat> An explicit test of the exit status, usually with &&
[00:39:33] <marmalade> Hey there, could anyone tell me what the best way to like, check if a command got a response would be? For example, I want to run a command "X --list" and I just need to know if it responds or not.
[00:39:58] <marmalade> because for example if there is nothing to list "X --list" will give no string or anything as a response, but if there is something to list, it will
[00:40:10] <marmalade> I don't need what it lists, I just need to know if it responds with *anything*
[00:40:13] <greycat> marmalade: Normally you'd use the exit status, rather than measuring the size of the output, but it's easy to measure the size of the output if you think that's actually useful.
[00:40:34] <marmalade> greycat, I'd use the exit status?
[00:40:42] <marmalade> How so?
[00:40:47] <greycat> *sigh*
[00:40:49] <znf> yes, any command has an "exit status" or, "exit code"
[00:41:05] <matthewcroughan> We need to get rid of bash and replace it with the Haskell interpreter, and an OS written in Haskell
[00:41:10] <matthewcroughan> This way, we will have none of these problems
[00:41:16] <larryv> you're right
[00:41:16] <larryv> i'll get right on that
[00:41:27] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:41:39] <tirnanog> for example, closure=$(nix ...) || exit. or by chaining commands with &&. set -e is tolerable in cases where you have a simple sequence of commands that employs no logic. otherwise, it's a good way of introducing subtle bugs.
[00:41:54] <greycat> Call up the CEOs of IBM, Apple, Microsoft, etc.  Tell them this plan.  I'm sure they will immediately change their plans.
[00:41:54] <larryv> marmalade: if X --list; then whatever; fi
[00:42:06] <matthewcroughan> tirnanog: my goal is to have such a simple program that there are no such cases
[00:42:11] <znf> as for what your command, which you are conveniently censoring, is responding as an exit code in different states... that's not something w can guess
[00:42:21] <matthewcroughan> such that set -e is correct, but I'm not sure if that's true now that I have an if statement
[00:42:25] <larryv> among other ways. of course, if X doesn't exit with a useful status, you'll have to try something else
[00:42:37] <FIlystyn> marmalade i think you want  if [ $( X --list ) ]; then echo ok; fi
[00:42:42] <greycat> FIlystyn: needs quotes.
[00:42:47] <FIlystyn> k
[00:43:09] <marmalade> znf, Oh well it's just systemextensionsctl, I just omitted it because that's a lot to type and it didn't seem like it was relevant. I wasn't like... hiding it.
[00:43:23] <marmalade> larryv, FIlystyn tyty
[00:43:30] <znf> it's always relevant
[00:43:36] <matthewcroughan> tirnanog: https://pastebin.com/raw/F1fWDmG9
[00:43:40] <matthewcroughan> is this code any good so far?
[00:43:51] <tirnanog> matthewcroughan: well, that's part of the problem. set -e makes all sorts of exceptions. let me put it another way. if your code fragment consists of a sequence of simple commands with no use use control-flow operators or anything that would influence the flow (including if), then set -e is OK. otherwise, you're going to be told to avoid it, and not without reason.
[00:43:51] <tirnanog> use of*
[00:43:57] <matthewcroughan> In this specific case, I think `set -e` is correct, because `|| exit` is going to be the same, right?
[00:44:22] <znf> also, isn't systemextensionsctl unique to macOS, which uses zsh? :)
[00:44:24] <tirnanog> for the command we were just discussing, yes.
[00:44:53] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[00:44:53] <matthewcroughan> My intention is to refactor a lot of this code, and do most these if statements in Nix
[00:44:58] <matthewcroughan> this style is just to introduce a feature quickly
[00:45:02] <tirnanog> ok.
[00:45:09] <marmalade> znf, yes, but I will be running the script with bash which is just as supported
[00:45:13] <tirnanog> I don't know nix but that sounds sensible enough.
[00:45:17] <znf> ooook
[00:45:43] <matthewcroughan> tirnanog: those vars up top below set -e will cause Nix to fail at build time
[00:45:46] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:45:53] <llua> a polyglot script that relies on set -e?
[00:45:56] <matthewcroughan> nix generates shell scripts, so a functional language will fail to evaluate if the var isn't set
[00:46:19] <tirnanog> I see.
[00:46:33] <matthewcroughan> llua: I do feel the same way. I simply don't know enough about Nix as a language yet to escape this.
[00:46:42] <matthewcroughan> But for what it is, it's a simple enough shell script with no subtleties.
[00:46:57] <tirnanog> as an aside, == isn't posix sh in the test command.
[00:48:00] <matthewcroughan> tirnanog: I don't need to rely on POSIX, this script is ran with `nix run .#apps.nixinate.machineName`
[00:48:12] <matthewcroughan> the `mkDeployScript` function is a `writeScript`
[00:48:22] <matthewcroughan> `writeScript` produces a shell script with a shebang that points to a valid bash in the /nix/store
[00:48:25] <tirnanog> if [ $BUILD_ON == "remote" ] <-- that doesn't look like nix code to me.
[00:48:40] <phy1729> If you're using [, you should use = not ==
[00:48:43] <matthewcroughan> nix-repl> writeScript "myScript.sh" '' echo hello ''
[00:48:43] <matthewcroughan> «derivation /nix/store/90vaffr50s1yizm4j588ci235h93idlh-myScript.sh.drv»
[00:48:47] <phy1729> If you're using [[, then meh
[00:49:39] <matthewcroughan> phy1729: why does == work in [] ?
[00:49:45] <matthewcroughan> That's crazy
[00:49:58] <tirnanog> because you're using bash and assuming that's fine, probably.
[00:50:04] <larryv> it's an extension
[00:50:05] <tirnanog> if you're _targeting_ sh, write sh.
[00:50:07] <matthewcroughan> :(
[00:50:25] <matthewcroughan> Is there a way to make bash fail when [ 1 == 1 ] ?
[00:50:30] <matthewcroughan> that's so silly
[00:50:33] <tirnanog> no. not even in its posix mode.
[00:50:37] <matthewcroughan> Aaaaaaa
[00:50:40] <tirnanog> heh heh.
[00:50:57] <tirnanog> using something like dash will stand a better chance of tipping you off. or shellcheck.net, for that matter.
[00:51:00] <phy1729> but if you're targeting bash, just use [[
[00:51:02] <matthewcroughan> we're being trolled
[00:51:07] <phy1729> there's no reason to use [ in bash
[00:51:25] <matthewcroughan> is `$()` posix?
[00:51:26] <phy1729> if you're targeting POSIX sh, you must use [ and must use =
[00:51:28] <phy1729> yes
[00:51:29] <tirnanog> yes.
[00:51:43] <matthewcroughan> I really wish bash would fail in POSIX mode.
[00:51:45] <matthewcroughan> That is horrendous.
[00:51:53] <phy1729> shellcheck more?
[00:52:07] <llua> this lack of knowledge is prob why you should shy away from polyglot scripts
[00:52:08] <matthewcroughan> I could run shellcheck as an output of this flake.nix, actually, yeah
[00:52:11] <tirnanog> or, don't symlink your sh to bash, as the case may be.
[00:52:26] <matthewcroughan> llua: lol, polyglot scripts with nix mean you can get away with a lack of knowledge
[00:52:34] <matthewcroughan> usually, the opposite is true
[00:53:06] <matthewcroughan> And I don't know why you'd suggest me to go back to writing shell scripts that have no way of managing their deps.
[00:53:09] <matthewcroughan> I will never do that.
[00:53:15] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[00:53:16] <wiscii> that sounds like a line from Jurassic Park xD
[00:53:20] *** Quits: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[00:53:56] <matthewcroughan> I've never read the term polyglot in reference to scripts before, so thanks for the education!
[00:53:57] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[00:54:08] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:28c3:8ee7:36c1) (Ping timeout: 250 seconds)
[00:54:11] <matthewcroughan> I thought Nix people were extreme, then I met the bash people.
[00:54:17] <tirnanog> you're welcome.
[00:54:19] <matthewcroughan> The bash people were at first friendly. Then incredibly cynical about my shell.
[00:54:33] <tirnanog> !next
[00:54:33] <greybot> Another satisfied customer! Next please!
[00:54:37] <matthewcroughan> :D
[00:55:23] <phy1729> If you leave #bash feeling like shell is a good language, we've terribly failed you.
[00:55:33] <wiscii> cynical is the wrong word btw.
[00:55:42] <tirnanog> critical would be closer to the mark.
[00:55:50] <wiscii> indeed
[00:56:30] <matthewcroughan> Yeah it would be the wrong word.. hmm
[00:56:48] <matthewcroughan> The lusers that are coming in here and asking for help are the cynical ones
[00:56:56] <tirnanog> just remember, we are trying to help you write better code. and the advice didn't cost you anything.
[00:56:58] <wiscii> nah
[00:57:15] <tirnanog> other than a little time, of course.
[00:58:05] <Earnestly> In old internet, "butthurt" was adequate reply
[00:58:19] *** Quits: marmalade (~marmalade@cpe-107-184-35-218.socal.res.rr.com) (Quit: Leaving)
[00:58:25] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:59:25] <matthewcroughan> tirnanog: I can't put the var at the top of the file, `nix path-info` relies on another command being ran first
[00:59:37] <matthewcroughan> because shell is not lazy, it ends up running in the wrong order
[00:59:41] <matthewcroughan> is there a way to do lazy evaluation in shell?
[01:00:10] <matthewcroughan> `SYSTEM_CLOSURE_PATH=$(${final.nixFlakes}/bin/nix path-info $SYSTEM_CLOSURE)` for example, won't work.
[01:00:47] <matthewcroughan> I want `$SYSTEM_CLOSURE` to be exported only when the value is called for by a script.
[01:00:57] <tirnanog> I'm not sure that I understand. what needs to be run first? do you mean in the given shell code, or is this some requirement being imposed by the nix parser?
[01:01:12] <matthewcroughan> `nix path-info` only works when the path exists
[01:01:16] <matthewcroughan> the path won't exist until you `nix build` it
[01:01:26] <greycat> then do that first
[01:01:48] <tirnanog> what does that mean in practice? that SYSTEM_CLOSURE may be empty in some cases?
[01:02:00] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[01:02:23] <matthewcroughan> tirnanog: No, it means that SYSTEM_CLOSURE_PATH needs to be exported AS needed
[01:02:30] <matthewcroughan> an anonymous function, lazily evaluated, shell is not lazy
[01:02:42] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[01:03:01] <matthewcroughan> if I do `X=1 $(echo $X)`, the value of X is set before echo is called.
[01:03:03] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[01:03:10] <matthewcroughan> I want the inverse of that, it's known as lazy computation
[01:03:11] <greycat> So wait, this system that builds shell scripts from another language... has FLAWS?  Gasp.
[01:03:14] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 250 seconds)
[01:03:22] <matthewcroughan> greycat: there are no flaws here, this is just because shell isn't lazy
[01:03:27] <greycat> Uh huh.
[01:03:27] <matthewcroughan> it's imperative
[01:03:34] <matthewcroughan> there's no flaws in anything, it's just the facts
[01:03:40] <greycat> Go on.
[01:03:45] <FIlystyn> lol
[01:03:52] <matthewcroughan> So what I'm wondering, is if there is in fact a way to make shell do lazy stuff
[01:03:54] <matthewcroughan> I've always wondered
[01:04:22] <FIlystyn> there is always some dirty hack
[01:04:33] <tirnanog> can you just explain this using non-flowery terminlogy? you have an if statement with two conditions under which the expansion of SYSTEM_CLOSURE may be required. in which case is it a problem for you? what do you want to do instead?
[01:04:38] <matthewcroughan> https://unix.stackexchange.com/questions/220705/how-can-i-delay-the-evaluation-of-variables-lazy-evaluation
[01:04:51] <matthewcroughan> It's not flowery, it's just a functional concept
[01:05:02] <matthewcroughan> Variables are set FIRST, not LAST in shell
[01:05:03] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[01:05:10] <matthewcroughan> the value of the variable is calculated before any other code is ran
[01:05:26] <matthewcroughan> if the code depends on that variable being evaluated later, it's not going to be happy about it
[01:05:44] <greycat> So your fantastical tool is generating shell scripts which do not work?
[01:05:56] <matthewcroughan> greycat: Lolwut?
[01:06:07] <tirnanog> variables are set whenever you elect to set them.
[01:06:17] <tirnanog> I don't know why you are being so combatative.
[01:06:27] <tirnanog> if it's a problem, explain how, and what you want to happen instead, then maybe we can help.
[01:06:39] <matthewcroughan> tirnanog: If I make a script like `X = $(curl http://127.0.0.1)` but I don't want to run that until I call X like `echo $X`, what happens?
[01:06:44] <matthewcroughan> Curl is ran before `echo` is ran
[01:07:09] <matthewcroughan> The value of `X` is filled in, before anything else
[01:07:15] <tirnanog> you can defer the assignment thereof until just before the simple command that incorporates the expansion is executed.
[01:07:26] <matthewcroughan> yeah that's what I want
[01:07:34] <greycat> And your tool is generating scripts that require this magical lazy evaluation to occur, or else the scripts do not work?
[01:07:44] <matthewcroughan> greycat: ?
[01:07:47] <matthewcroughan> No, I'm just writing it wrong
[01:07:54] <greycat> Then write it correctly.
[01:07:58] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1012:9905:928a:6736)
[01:08:02] <matthewcroughan> You either understand the concepts, or you don't, and you seem to be equating the concepts to failure
[01:08:22] <greycat> You KNOW that THIS SCRIPT requires THIS VARIABLE to be set.  So set it.  And then use it.
[01:08:25] <matthewcroughan> Me writing a script where languages have different features, is not a failing of either two of the languages
[01:08:33] <greycat> Do not seek out some foreign concept.
[01:08:33] <matthewcroughan> You're so negative! :D
[01:08:43] *** Quits: victor (~iegg@user/kartagis) (Ping timeout: 256 seconds)
[01:09:21] <matthewcroughan> https://stackoverflow.com/questions/64090209/is-it-possible-to-export-a-lazily-evaluated-variable-to-a-child-makefile
[01:09:27] <tirnanog> I mean, it would be the same in any imperative language. if you don't want to assign the variables up front then don't.
[01:09:35] <matthewcroughan> I mean you seem to be right. This isn't worth the trouble in shell. I was just wondering!
[01:09:40] <greycat> dear gods, now you're introducing Makefile
[01:09:58] <matthewcroughan> I'm not! I'm just googling around for things you are implying are banned thought here
[01:10:08] <matthewcroughan> "foreign concepts" you call them
[01:10:31] <greycat> tirnanog: they want something that will *automatically* run a function to set the value of a variable the first time it's referenced.  Which is a non-starter in shell.  And is so completely unnecessary in this stupidly simple case.
[01:10:43] <matthewcroughan> tirnanog: The variable is required "anonymously" inside of a function call $()
[01:10:53] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:10:53] <greycat> Set the variable, then use it.
[01:10:55] <tirnanog> greycat: it really is.
[01:11:06] <greycat> $() is not a function call
[01:11:19] <matthewcroughan> greycat: but then I don't get the benefits of set -e and the thing that tirnanog told me about
[01:11:29] <greycat> *plonk*
[01:11:36] <greycat> Clearly going nowhere.
[01:11:37] <matthewcroughan> will `$( command || exit)` preserve what you told me? tirnanog?
[01:11:54] <matthewcroughan> greycat: we're not all geniuses
[01:11:57] <matthewcroughan> some of us are imposters
[01:12:07] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 268 seconds)
[01:12:10] <tirnanog> you can write variable=$(some command) anywhere you like. it doesn't have to be at the 'top'.
[01:12:24] <matthewcroughan> tirnanog: but how can it be inline ?
[01:12:32] <matthewcroughan> that's the point of $() is to be inline
[01:12:43] <greycat> I'm guessing they can't write it because it's not one of the things that their precursor declarative/functional template language has.
[01:12:49] <tirnanog> literally, just perform the assignment, then expand the value of the variable in the very next command. that's all it will take.
[01:12:58] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[01:13:02] <matthewcroughan> `( set -x; ${final.openssh}/bin/ssh -t $SSH_USER@$SSH_HOST "sudo $SYSTEM_CLOSURE_PATH/bin/switch-to-configuration test" )`
[01:13:19] <matthewcroughan> this is what I'm working with currently, but `$SYSTEM_CLOSURE_PATH` is defined at the top of the file, where it is evaluated prematurely
[01:13:38] <tirnanog> so move it to just before ssh is executed.
[01:13:42] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Remote host closed the connection)
[01:13:44] <matthewcroughan> So, inline, I was previously opting to not define `$SYSTEM_CLOSURE_PATH` and instead just run `$(nix path-info foo)`
[01:13:59] *** Joins: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[01:14:14] <matthewcroughan> tirnanog: I think `$(nix path-info foo || exit)` would be cleaner
[01:14:17] <matthewcroughan> would it be the same?
[01:14:19] <tirnanog> no.
[01:14:27] <tirnanog> because that only exits the subshell.
[01:14:39] <tirnanog> well, actually, it might work.
[01:15:03] <tirnanog> probably not though, let's see, shall we.
[01:15:16] <tirnanog> # true "$(false || exit)"; echo $?
[01:15:17] <shbot> tirnanog: 0
[01:15:20] <tirnanog> nope.
[01:15:30] <matthewcroughan> I'll just opt for defining the variable lower down then
[01:15:32] <tirnanog> literally, just perform a variable assignment, then expand the variable. that's all there is to it.
[01:15:41] <matthewcroughan> I mean, you're right about the imperative stuff, I hadn't thought about it, this is the same in any other language
[01:15:42] <tirnanog> one after the other.
[01:15:53] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[01:15:53] <matthewcroughan> Forgive me for being engrossed in functional too long that I've forgotten basic variable assignment
[01:17:31] <matthewcroughan> I hope you realise that people are doing what I'm doing in hundreds of lines of rust
[01:17:54] <tirnanog> I can well believe it.
[01:18:09] <matthewcroughan> and my solution is basically doing the same thing with no rust, and in like 10 lines of shell and 40 lines of Nix
[01:18:22] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[01:18:27] *** Quits: magla (~gelignite@55d450c5.access.ecotel.net) (Quit: Stay safe!)
[01:18:45] <matthewcroughan> AND handles stdin/stdout correctly, such that ssh -t works, whereas their rust program swallows all input and means the user can't get any of that stuff working
[01:18:50] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[01:18:55] <matthewcroughan> it's almost as if rust wasn't ever supposed to wrap shell applications
[01:19:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:19:51] <tirnanog> to put this into context, a 'standalone' variable assignment is actually a form of what's called a simple command in shell grammar, only without the command, so to speak.
[01:19:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[01:20:07] <tirnanog> in this form, the exit status value of a command run within a command substitution is propagated.
[01:20:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:20:49] <Earnestly> tirnanog: (exit 1)
[01:20:59] <Earnestly> Hmmm
[01:21:04] <Earnestly> false should have done that I suppose
[01:21:26] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:21:33] <tirnanog> yeah, it was silly. disregard.
[01:24:39] <wiscii> * epic *
[01:24:40] <tirnanog> actually, I'm not sure it does qualify as a simple command. oh well. in any case, the exit status will not be lost, and that's the important thing.
[01:27:27] *** Joins: r00t|work (~r00t@82-198-216-115.briteline.de)
[01:28:21] *** Quits: r00t`work (~r00t@82-198-216-115.briteline.de) (Ping timeout: 256 seconds)
[01:29:17] <wiscii> even the example on SE is "computer says No"
[01:30:20] *** Quits: Minvera (~Minvera@user/Minvera) (Quit: Leaving)
[01:30:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[01:32:55] *** Joins: pj (~pj@ghettoforge/pj)
[01:40:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:40:04] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Ping timeout: 250 seconds)
[01:40:35] *** Joins: unop (~unop@194.154.249.71)
[01:42:09] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (Ping timeout: 256 seconds)
[01:42:28] *** Joins: SpringSprocket (~srv@hobby.esselfe.ca)
[01:43:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[01:45:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:45:27] *** Joins: akoana (~ah@user/akoana)
[01:47:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:48:45] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[01:50:30] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[01:58:29] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[01:59:57] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:03:38] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:04:22] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:09:08] <Friithian> opinions?:  https://friithian.dev/pictures/screenshots/./2022-01-26T17-38-47.png
[02:09:34] <znf> ugly quotes
[02:09:44] <Friithian> very much so
[02:09:56] *** Joins: hlauk (~hlauk@176.33.108.116)
[02:10:21] <mknod> The first line is not Bash.
[02:10:43] <Friithian> it all feels wrong
[02:11:02] <Friithian> people shorten their shown path to 3 dirs which seems… confusing
[02:12:27] <larryv> it can be useful if your terminal isn't that wide
[02:12:43] <Friithian> well good thing it isn't 1985
[02:13:17] <Friithian> oh she always uses tcsh I forgot
[02:13:20] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[02:13:43] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Quit: WeeChat 3.4)
[02:13:47] <tirnanog> baffling, except for the aliases.
[02:14:55] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[02:15:02] <Friithian> yeah the aliases are fine, they're in most distros by default, but, well, just, everything else
[02:15:22] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[02:15:25] <tirnanog> using export is amusing, given the variables in question.
[02:15:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[02:17:22] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:17:33] *** Quits: tomaw (tom@libera/staff/tomaw) (Quit: Quitting)
[02:18:19] *** Joins: rcernin (~rcernin@101.189.141.138)
[02:18:41] <Friithian> do you guys use noclobber? I can't see it to be anything but training wheels that teach you bad habits
[02:18:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5083:9a19:ef3c:a16e)
[02:18:47] <tirnanog> gotta let those sub-processes know what your shell preferences are!
[02:19:28] *** Quits: FIlystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[02:19:31] <tirnanog> I don't imagine that a resounding chorus of yes will be heard here.
[02:20:22] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[02:20:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:20:53] <mknod> Friithian, I do in my interactive session. I also find it useful to create files.
[02:21:03] <Friithian> interesting
[02:21:13] <Friithian> not like, `touch $file`?
[02:21:34] <Friithian> >has to look in finder to see what files are in a folder to `cat` them, instead of like, using `ls`
[02:21:40] <Friithian> oh this is going to be a long class
[02:22:04] *** Joins: tomaw (tom@libera/staff/tomaw)
[02:22:13] <tirnanog> perhaps the ll "command" was missing :D
[02:22:49] <Friithian> oh I am going to have an aneurysm
[02:23:04] <Friithian> >``You can't edit the middle of a command, you have to backspace''
[02:23:04] <mknod> # touch some_file.txt; shopt -s -o noclobber; if ! { > some_file.txt; } 2> /dev/null; then echo "something went wrong." >&2; fi
[02:23:06] <shbot> mknod: something went wrong.
[02:23:18] *** Joins: luckiswithme (~luckiswit@149.167.139.139)
[02:23:35] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:23:53] <mknod> Useful in a loop to create a file with the next available filename without race condition.
[02:24:27] <Friithian> ok I guess that can be useful, but, eh
[02:25:57] <mknod> I don't know any other method to atomically test a file's existence and create it.
[02:26:04] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:26:55] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[02:27:33] <Friithian> but that seems like something that's good for scripts when applicable but I still see no good reason for it to be interactive. It's sort of like aliasing rm to rm -i, like yeah it can help but you should get into the habit of checking what you're doing when dealing with destructive things
[02:28:18] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:28:51] <mknod> This extra layer of security doesn't hurt. And if you do want to overwrite, use >|
[02:29:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:30:52] <Friithian> I guess I've just always known that it overwrote and it's just… ingrained in me
[02:31:51] <tirnanog> I don't think it's truly atomic.
[02:32:05] <matthewcroughan> tirnanog: https://github.com/MatthewCroughan/nixinate/commit/8f960401c4267f5b53e6c4886d0c4035122d2c39
[02:32:11] <matthewcroughan> this was the code I was implementing, thank you for the help
[02:32:57] *** Joins: pj (~pj@ghettoforge/pj)
[02:33:13] <Friithian> god only having 1 dir in your prompt seems really confusing
[02:34:07] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[02:34:14] *** Quits: twobitsprite (~isaac.fre@192.146.154.3) (Ping timeout: 250 seconds)
[02:38:15] <texasmynsted> I like the idea -> https://argbash.readthedocs.io/en/latest/#generating-a-template
[02:38:23] <texasmynsted> I even like m4
[02:38:48] <texasmynsted> But I have yet to see how this is quicker or easier than just writing bash code.
[02:38:54] * texasmynsted shrug
[02:39:57] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[02:41:13] <Friithian> chmod but pronounced cha-mod
[02:41:24] *** Joins: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[02:42:17] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[02:42:48] *** Quits: luckiswithme (~luckiswit@149.167.139.139) (Remote host closed the connection)
[02:43:47] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[02:43:54] *** Joins: Maxattax97 (~max@2603:300f:b9f:2000::b278)
[02:45:48] *** Quits: n4dir (~user@i5E866687.versanet.de) (Remote host closed the connection)
[02:47:18] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[02:50:31] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:50:47] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 268 seconds)
[02:51:11] *** Quits: knstn (~knstn@ppp-94-66-57-108.home.otenet.gr) (Quit: leaving)
[02:52:38] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[02:53:08] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:54:33] *** Quits: ultsllt (~ultsllt@50.231.5.242) (Remote host closed the connection)
[02:54:41] *** Quits: Major_Biscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:54:47] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[02:55:40] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:57:31] *** Quits: anak8awan9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc) (Quit: Client limit exceeded: 20000)
[02:57:38] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[02:57:44] *** Joins: XATRIX (~xatrix@176.108.186.5)
[02:57:52] *** Parts: XATRIX (~xatrix@176.108.186.5) ()
[02:58:18] *** Quits: kj (~kj@kj.aerisnetwork.net) (Client Quit)
[02:58:48] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:59:23] *** Joins: Fjaos (~blscoe@cpc78653-glfd7-2-0-cust223.6-2.cable.virginm.net)
[02:59:37] *** Quits: Maxattax97 (~max@2603:300f:b9f:2000::b278) (Remote host closed the connection)
[02:59:56] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:59:59] <Fjaos> Hi, what does `$$` in the condition here mean? https://www.gnupg.org/documentation/manuals/gnupg/Agent-Examples.html#Agent-Examples
[03:00:12] *** Joins: anak8awan9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc)
[03:00:16] <Fjaos> Not equal to what?
[03:00:48] <larryv> !$$ > Fjaos
[03:00:48] <greybot> Fjaos: $$ expands to the PID of the shell. In a ( ) subshell, it expands to the process ID of the original shell, not the subshell. (Bash 4.0 and above have BASHPID for that.)
[03:01:08] <Fjaos> Thank you!
[03:02:24] *** Joins: mat001_ (~mat001@213.143.69.121)
[03:02:55] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:03:37] *** Quits: xx (~xx@user/xx) (Quit: K-Lined)
[03:03:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[03:04:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5083:9a19:ef3c:a16e) (Ping timeout: 240 seconds)
[03:04:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:04:26] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[03:06:26] *** Quits: Fjaos (~blscoe@cpc78653-glfd7-2-0-cust223.6-2.cable.virginm.net) (Quit: Client closed)
[03:07:31] *** Joins: igemnace (~ian@user/igemnace)
[03:08:17] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:14] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:16:27] *** Joins: bastardo (~nicholasm@170.250.151.114)
[03:16:30] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[03:16:50] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[03:19:17] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[03:19:50] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 252 seconds)
[03:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:23:08] *** Quits: swoolley (~seth@user/swoolley) (Quit: leaving)
[03:23:21] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:23:40] *** Joins: swoolley (~seth@user/swoolley)
[03:24:00] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:26:19] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[03:26:32] *** loganlee is now known as loganlee[gnu]
[03:27:17] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[03:27:44] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:28:50] *** Quits: bastardo (~nicholasm@170.250.151.114) (Ping timeout: 250 seconds)
[03:28:56] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[03:29:01] *** Quits: Dotz0cat (~Dotz0cat@151.213.94.135) (Ping timeout: 240 seconds)
[03:29:30] *** Joins: Dotz0cat (~Dotz0cat@h83.241.19.98.static.ip.windstream.net)
[03:29:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:29:35] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:30:00] *** loganlee is now known as loganlee[gnu]
[03:31:09] *** Quits: clime (~clime@78-80-113-95.customers.tmcz.cz) (Quit: WeeChat 3.3)
[03:31:40] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:35:14] *** Joins: mat001 (~mat001@213.143.69.121)
[03:38:53] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[03:39:52] *** Quits: darkxploit (~jay@c-67-172-32-230.hsd1.ct.comcast.net) (Quit: darkxploit)
[03:39:57] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[03:40:52] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:40:58] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 250 seconds)
[03:49:02] *** Joins: junebug (~junebug@2600:1700:3db0:2540:a681:4423:a77:ee92)
[03:52:24] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[03:53:31] <Celmor[m]> things*
[03:53:32] <Celmor[m]> I'm trying to generate a command line to run and put it in an array but evidently thinks like 3< can't be used if quoted/in a var
[03:54:20] <emanuele6> !faq complex
[03:54:20] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[03:54:34] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:56:51] <Celmor[m]> the 5th case described there appears to come close but I guess I still can't put redirection stuff in my array
[03:57:23] <Blondie101010> what's the point of making an array of commands?
[03:57:52] <Celmor[m]> to dynamically puse a number of redirected files to another command
[03:57:59] <Celmor[m]> pass*
[03:58:03] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:58:08] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[03:58:19] <Blondie101010> that's not relevant, though still unclear
[03:58:24] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[03:58:54] <Celmor[m]> something like command 3< firstfile 4< sndfile 5< thrdfile etc.
[03:59:12] <Celmor[m]> depending on the given arguments it needs to construct such a line
[03:59:28] <kaos02> hi, trying to get something like this workig with no luck:  args="--stdin-password <<<\"$password\""  args="--stdin-password <(echo $password)"
[03:59:54] <Celmor[m]> example: https://pastebin.com/raw/CGJDebnM
[03:59:54] <kaos02> tryign to avaid having to pipe stdin to the script
[04:00:07] <kaos02> and place it all in a built up $args variable
[04:00:18] <Celmor[m]> I guess I could eval but then I need to handle quoting differently
[04:00:20] <llua> heh
[04:00:36] <Blondie101010> Celmor[m]:  that script doesn't describe or define what you need done, just how you are thinking of doing it badly
[04:01:08] <Celmor[m]> it shows how I construct my args array with the issue being that I can't define redirections there
[04:01:21] <Blondie101010> those are not arguments
[04:01:27] <Blondie101010> what are you really doing?
[04:01:37] <Friithian> describe what you want to do, not how
[04:01:39] <Celmor[m]> the somecommand command needs the files passed in as file handles as it can't read the files if given as paths
[04:02:21] <kaos02> to build up args liek so adcliauth="--domain-controller=$domain -U $user --stdin-password <<<\"$password\""
[04:02:25] <Blondie101010> somecommand <(cat file1) <(cat file2) <(cat file3)
[04:02:33] <Blondie101010> no
[04:02:47] <Blondie101010> well not what you asked but I'm not sure of the somecommand's limitations with inputs
[04:02:56] <kaos02> it works on the command line but not when i than use the args itself  like adcli show-computer $adcliauth
[04:03:11] <larryv> !faq complex < kaos02
[04:03:11] <greybot> larryv: No matches found at https://mywiki.wooledge.org/BashFAQ
[04:03:17] <larryv> !complex < kaos02
[04:03:19] <llua> >
[04:03:30] <Blondie101010> kaos02:  can you show clearly what works vs what doesn't?
[04:03:31] <larryv> whelp
[04:03:37] <llua> !faq complex > kaos02
[04:03:37] <greybot> kaos02: https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[04:04:12] <larryv> all this n<blah talk has got me turned around
[04:04:16] <larryv> thx
[04:04:21] <llua> redirection happens before parameter expansion tho, so you know. that part isn't going to work
[04:05:31] *** Joins: Betal (~Betal@user/betal)
[04:07:03] <Blondie101010> though there are ways to do it, it's almost always a bad idea (wrong solution)
[04:07:35] <kaos02> im truing to make "adcli show-computer $adcliauth" whether its using kerberos auth or readin password from stdin
[04:07:57] <kaos02> so im trying to set $adcliauth based on the case
[04:08:50] <kaos02> as stipidly it doenst take password as an arg or from env variable only from stdin
[04:08:53] *** Joins: ferdna (~ferdna@user/ferdna)
[04:09:16] <Blondie101010> that can be an intended program limitation
[04:09:29] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[04:09:33] <Blondie101010> sounds like a sane security decision
[04:09:36] <kaos02> oh well just though it be cool, thanks :P
[04:10:14] <llua> there are these cool things called functions, they store code; a lot better than variables.
[04:10:47] <Blondie101010> don't think it applies to their real purpose, but it is a good observation
[04:11:45] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[04:13:54] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[04:16:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:a681:4423:a77:ee92) (Ping timeout: 240 seconds)
[04:17:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b8e6:a00d:e4f6:213e)
[04:18:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b8e6:a00d:e4f6:213e) (Remote host closed the connection)
[04:18:35] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[04:18:58] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 268 seconds)
[04:22:25] <Celmor[m]> what's the maximum arguments/command line length in bash?
[04:22:32] *** Joins: chenqisu1 (~bhca7d@183.217.200.249)
[04:22:44] <Celmor[m]> need to chop up my command line at some point probably if I'm dynamically generating it
[04:22:59] <Celmor[m]> something which find -exec {} + probably does I assume
[04:23:00] <emanuele6> it's not a bash limit, it is an operating system limit
[04:23:23] <Celmor[m]> is it a character length limit or something else?
[04:23:47] <Blondie101010> you can test it quite easily
[04:23:59] <Celmor[m]> POSIX upper limit on argument length (this system): 2093124
[04:24:18] <Celmor[m]> I guess this: Size of command buffer we are actually using: 131072
[04:24:32] <Celmor[m]> from xargs --show-limits
[04:25:02] <Celmor[m]> `getconf ARG_MAX` is closer to the first number though
[04:25:39] <emanuele6> i think `xargs --show-limits' is only meant to be used with xargs
[04:25:54] <Blondie101010> Celmor[m]:  why do you need to do this?
[04:26:01] <Blondie101010> what is the real task?
[04:26:03] <emanuele6> it takes into consideration the arguments used by xargs to run the commands etc
[04:27:35] *** Joins: sinaowolabi_ (~SinaOwola@169.159.112.178)
[04:28:33] *** Quits: sinaowolabi_ (~SinaOwola@169.159.112.178) (Max SendQ exceeded)
[04:28:58] *** Joins: sinaowolabi_ (~SinaOwola@169.159.112.178)
[04:29:46] <Celmor[m]> the somecommand command needs the files passed in as file handles as it can't read the files if given as paths
[04:30:17] *** Quits: liveacou1tic (~adison@user/liveacoustic) (Ping timeout: 240 seconds)
[04:31:08] <Blondie101010> that does not make sense
[04:31:23] <Blondie101010> you don't call a command with file handles
[04:31:26] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[04:31:31] <Celmor[m]> it's based on the previous comments
[04:31:35] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:31:48] <Celmor[m]> I do
[04:32:12] <Blondie101010> please show a full sample command
[04:32:13] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:32:58] <Celmor[m]> sudo -u celmor -C 5 /usr/bin/somecommand --static --parameter -- /proc/self/fd/3 /proc/self/fd/4 3< 2018-04-08.temp1.mp4 4< 2018-04-08.temp2.mp4
[04:33:13] <Celmor[m]> for example
[04:34:09] <Celmor[m]> the files are loaded from a fuser based file system and given to somecommand  for use
[04:34:14] <Blondie101010> did you try with <(cat file)
[04:34:16] <Celmor[m]> (as a different user)
[04:34:45] <Blondie101010> the sudo might be problematic, but I doubt it
[04:35:08] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[04:35:48] <Blondie101010> sudo -u celmor -C 5 /usr/bin/somecommand --static --parameter -- <(cat 2018-04-08.temp1.mp4) <(cat 2018-04-08.temp2.mp4)
[04:35:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[04:36:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:36:46] <Celmor[m]> sure, it's easy to adapt the command if you have a fixed line but the issue is the input files are dynamic (both themselves as well as the number)
[04:36:58] <Blondie101010> irrelevant
[04:37:02] <Celmor[m]> perhaps I can use something like ${count:+<(cat "$count")}
[04:37:06] <Blondie101010> I just proved my approach is simpler
[04:37:26] <Celmor[m]> I don't see a solution
[04:37:31] <Blondie101010> nothing stops you from making it super long if that's what you want
[04:37:36] <Blondie101010> did you try my command?
[04:37:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:37:54] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[04:38:08] <Blondie101010> don't you see it does exactly the same thing as yours but much simpler
[04:38:40] <Celmor[m]> currently I can't make either approach work
[04:38:41] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[04:38:54] <Blondie101010> Celmor[m]:  did you try my command?
[04:38:59] <Celmor[m]> yes
[04:39:05] <Blondie101010> did it work?
[04:39:17] <Celmor[m]> not sure
[04:39:29] <Blondie101010> well check/try again
[04:39:35] <Celmor[m]> trying to
[04:39:46] *** Joins: ominionx (~ominionx@2604:2d80:9d0b:e400:afa8:a47a:73ca:db5d)
[04:42:17] <Celmor[m]> I see an issue with your appreach, the file handle numbers are 62 and above so I can't reliable give the -C parameter for sudo
[04:42:55] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:43:33] <Blondie101010> well in fact you wouldn't need that option, so remove it
[04:44:47] <Celmor[m]> sure, nobody _needs_ security but it sure is nice to have
[04:44:57] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 240 seconds)
[04:45:19] <Blondie101010> what?
[04:45:50] <Celmor[m]> there's a point to sudo closing non-default file descriptor. mine makes it a bit more lax so only those intended to be passed are allowed
[04:46:23] <Celmor[m]> yours would rely on always accepting all file descriptors circumventing that particular security feature of sudo
[04:47:51] <Blondie101010> you're confusing yourself, but I'm out
[04:48:30] *** Joins: mat001 (~mat001@213.143.69.121)
[04:49:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:50:56] <Celmor[m]> what kind of limit do I have how many file descriptors (aka those /dev/fd/62 things) I can pass in a single command?
[04:51:46] *** Joins: nunggu (~q@user/nunggu)
[04:52:37] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[04:53:27] <Celmor[m]> doesn't appear to work without -C <num> for sudo, not sure why
[04:53:29] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[04:53:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:54:25] *** Quits: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[04:54:35] <llua> run bash
[04:54:49] *** Parts: jmdaemon (~jmdaemon@user/jmdaemon) (WeeChat 3.4)
[04:54:53] <llua> !sudo>
[04:54:53] <greybot> sudo echo > file -- bash operations such as redirections & glob expansions are performed by the USER's bash, not by sudo. Consider: echo | sudo tee [-a] file, or sudo bash -c 'echo > file'
[04:55:00] <llua> its a similar problem
[04:55:13] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:56:00] <Blondie101010> one solution would be to run it as a subshell
[04:58:41] <e36freak> fifos!
[04:59:58] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[05:00:16] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[05:00:18] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:01:31] *** Joins: n4dir (~user@i5E866687.versanet.de)
[05:02:59] <Celmor[m]> fifos can't be seeked
[05:03:30] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:05:35] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:06:06] *** Quits: mooz (~none@107.155.42.134) (Remote host closed the connection)
[05:06:19] <e36freak> if you need to seek why are you not just passing the filename
[05:08:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[05:11:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:11:46] *** Joins: mooz (~none@107.155.42.134)
[05:12:54] <Celmor[m]> I've explained above
[05:12:59] <Celmor[m]> " Too many open files" damn
[05:14:33] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:15:05] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 268 seconds)
[05:15:09] *** Joins: vysn (~vysn@user/vysn)
[05:18:19] <Celmor[m]> still having issues building a command line. find -exec {} + is nice but quickly causes " Too many open files" . I could do "head -num | while read..." but then I open the files individually and not via a single call
[05:19:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:19:28] <e36freak> what utility?
[05:19:47] <Celmor[m]> what do you mean?
[05:19:51] <llua> that removes the fun of guessing what they are doing
[05:19:58] <e36freak> trying to pass fds with a redirection (1) is gonna ruin your ability to seek anyway, and (2) will not get rid of the too many open files problem
[05:20:14] <e36freak> what are you trying to *do* ? the fuck needs to have that many files open and seekable?
[05:20:23] <Celmor[m]> 1. nope seekling works fine 2. ik
[05:21:22] <Celmor[m]> the somecommand command needs the files passed in as file handles as it can't read the files if given as paths
[05:21:35] <e36freak> what command?
[05:21:37] <e36freak> why?
[05:21:38] <Celmor[m]> where "somecommand" is a script or any executable really
[05:21:51] <e36freak> fix it
[05:21:58] <Celmor[m]> because I want to open the files with this command?
[05:22:01] *** Quits: sinaowolabi_ (~SinaOwola@169.159.112.178) (Ping timeout: 256 seconds)
[05:22:24] <Celmor[m]> there's no "fix" other than working around this limitation
[05:23:09] <e36freak> what command has that limitation? it's a stupid limitation, and it sounds like the command is broken and needs to be fixed
[05:23:17] <Celmor[m]> the limitation being a permission issue. the executable can't directly access the files so I need to pass those to it using file handles/descriptors (never really know the difference)
[05:23:36] <Celmor[m]> any command would in my case
[05:23:43] <Celmor[m]> it doesn't matter which executable I call really
[05:24:16] <Celmor[m]> the limitation isn't given by the executable
[05:24:26] <Celmor[m]> but rather by the file system/fuser/file access
[05:26:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:26:51] <Celmor[m]> damn, I broke bash again via readline/expansion: bash: COMP_POINT: substring expression < 0
[05:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:39] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:32:52] <Blondie101010> Celmor[m]: why do you need to open so many files at once?
[05:32:53] *** Joins: vlm (~vlm@user/vlm)
[05:33:17] <Celmor[m]> a limitation of that solution
[05:33:30] <Celmor[m]> they don't need to be open per se but I need file handles so the application can read from it once it needs to
[05:34:17] <Blondie101010> replace the bad program, if it's really responsible for your mess
[05:34:24] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[05:34:36] <Friithian> what *is* the program, what are you actually doing, not just an abstraction of it
[05:34:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:34:43] <e36freak> Friithian: you won't get that
[05:34:55] <Blondie101010> wishful thinking
[05:35:43] <Friithian> inb4 xy
[05:35:46] <Celmor[m]> it doesn't matter which executable is being passed those files. for all it matters assume `cat`
[05:36:13] <Blondie101010> then we'd: cat path/*
[05:36:17] <Celmor[m]> that would have the same issue in my case
[05:36:48] <Celmor[m]> then you've ignored what I wrote before
[05:36:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:36:53] <Blondie101010> no
[05:37:04] <e36freak> "i'm trying to have a program read an arbitrary number of files that it doesn't have permission to read"
[05:37:07] <e36freak> but WHY
[05:37:16] <Celmor[m]> exactly
[05:37:20] <e36freak> what are you actually doing that puts you in that ridiculous situation in the first place
[05:37:24] <e36freak> THAT is what we're asking
[05:37:54] <e36freak> this is not a thing that people ever want/need to do, which tells us that it's an xy problem
[05:37:56] <Celmor[m]> user x has permission to read files xyz, it calls some script which user y allowed via sudoers to allow user y to open xyz
[05:37:58] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 250 seconds)
[05:38:27] <Celmor[m]> sure, if you say so
[05:38:28] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:39:03] <Celmor[m]> other than the limitations my approach works
[05:40:20] <Celmor[m]> can I expand a specific number of array elements? e.g. instead of getting all via "$[array[@]" I just like to get the first X number
[05:41:43] <llua> yes
[05:41:48] <emanuele6> yes
[05:42:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[05:46:12] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[05:46:52] <akoana> via  "$[array[@]" ? no, via ${d[@]...}" maybe
[05:47:17] <Celmor[m]> found ${x:3:5}
[05:47:29] <Celmor[m]> but I guess that doesn't do array elements
[05:47:45] <emanuele6> that takes 5 elements starting from index 3
[05:47:48] <llua> you didnt use an array
[05:48:12] <Blondie101010> Celmor[m]:  just thought of an alternate way to approach your problem, with hard links
[05:48:17] <Celmor[m]> I am
[05:48:34] <llua> nah, you used the first element of an array.
[05:48:36] <Celmor[m]> they only go across a file system
[05:48:48] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 250 seconds)
[05:48:54] <Blondie101010> what does your program do?
[05:49:27] <Celmor[m]> llua: I don't think I did
[05:49:40] <emanuele6> you did
[05:49:44] <Celmor[m]> Blondie101010: it reads the given files one after another
[05:50:13] <emanuele6> Celmor[m]: you did:  ${x:3:5}  that takes a substring of the element at index 0 of x if x is an array
[05:50:16] <Celmor[m]> emanuele6: the last question isn't necessarily related to the other snippets I've shared
[05:50:23] <matthewcroughan> What do you guys think of oil shell?
[05:50:33] <Friithian> oilsh
[05:50:39] *** Joins: joo-_ (~joo-_@87-49-45-141-mobile.dk.customer.tdc.net)
[05:50:39] *** Quits: joo-_ (~joo-_@87-49-45-141-mobile.dk.customer.tdc.net) (Changing host)
[05:50:39] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[05:50:55] <Celmor[m]> emanuele6: that was _a_ solution that I've found but then immediately stated that it probably doesn't work in to get a specific range of elements
[05:51:05] <emanuele6> but it does
[05:51:12] <emanuele6> you just have to use it on an array
[05:51:15] <emanuele6> not the first element
[05:51:17] <Celmor[m]> it does what?
[05:51:27] <emanuele6> "${x[@]:3:5}"
[05:51:32] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[05:52:02] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[05:52:43] <Celmor[m]> why don't you say so in the first place, thanks
[05:53:17] <Celmor[m]> I had no idea you meant that snippet
[05:53:30] <emanuele6> i even repasted it.
[05:53:47] <llua> welcome to 30 mins ago, being selectively let in on stuff.
[05:53:49] <larryv> huh, i guess this is still happening
[05:53:55] <Friithian> yup lol
[05:54:01] <Celmor[m]> emanuele6: yeah, just now
[05:54:27] <emanuele6> to me it looks like 4minutes ago
[05:54:32] <Friithian> 21:20 < emanuele6> Celmor[m]: you did:  ${x:3:5}  that takes a substring of the element at index 0 of x if x is an array
[05:54:43] <Friithian> yeah 4 minutes
[05:54:49] <llua> swoosh
[05:55:24] <Celmor[m]> didn't see that message because it was red, lol
[05:55:24] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[05:57:17] <Celmor[m]> anyway, I don't think I'll get any useful alternative to my original issue (all necessary details of which I've shared) so I'll be gone.
[05:57:37] <emanuele6> !next
[05:57:37] <greybot> Another satisfied customer! Next please!
[05:58:02] <Friithian> so uh, y'all put \! in your PS1 ?
[05:59:48] *** Joins: keypusher (keypusher@user/keypusher)
[06:02:55] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[06:03:23] *** Quits: n4dir (~user@i5E866687.versanet.de) (Ping timeout: 256 seconds)
[06:03:52] *** Joins: mat001 (~mat001@213.143.69.121)
[06:04:57] *** Joins: maryo (~Maryo@user/maryo)
[06:04:59] *** Joins: n4dir (~user@i5E866640.versanet.de)
[06:05:12] *** Quits: maryo (~Maryo@user/maryo) (Read error: Connection reset by peer)
[06:05:31] *** Joins: maryo (~Maryo@user/maryo)
[06:07:58] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[06:08:18] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[06:08:50] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[06:10:09] *** Joins: fstd_ (~fstd@xdsl-89-1-56-234.nc.de)
[06:11:17] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 240 seconds)
[06:13:23] *** Quits: fstd (~fstd@xdsl-87-79-46-57.nc.de) (Ping timeout: 256 seconds)
[06:13:48] *** Joins: Betal (~Betal@user/betal)
[06:15:45] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[06:19:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:19:53] *** Joins: rcernin (~rcernin@101.189.141.138)
[06:20:38] *** Joins: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net)
[06:20:40] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[06:23:20] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[06:26:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:28:40] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[06:29:06] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[06:29:48] *** Joins: Atque (~Atque@user/atque)
[06:33:09] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:35:26] *** Quits: n4dir (~user@i5E866640.versanet.de) (Remote host closed the connection)
[06:35:45] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[06:36:08] *** Joins: nunggu (~q@user/nunggu)
[06:37:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[06:39:24] <ncrowl> I sortof had the same problem. Wanted to "tail -f /var/logs.. (used a find with options -alot... thingy is somethimes bloobs abears while apt-upgrade....
[06:39:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:43:03] *** Joins: foul_owl (~kerry@94.140.8.105)
[06:44:02] *** Quits: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net) (Quit: Client closed)
[06:44:16] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 250 seconds)
[06:45:53] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[06:46:55] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[06:50:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[06:52:11] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[06:53:15] *** luva0 is now known as luva
[06:55:08] *** Joins: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net)
[06:55:54] *** Quits: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net) (Client Quit)
[06:56:29] *** Joins: Liblx (~Liblx@77.21.255.67)
[06:58:44] *** Quits: Liblx (~Liblx@77.21.255.67) (Remote host closed the connection)
[06:59:07] *** Joins: Liblx (~Liblx@77.21.255.67)
[07:02:17] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 240 seconds)
[07:02:59] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[07:05:09] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[07:06:31] *** Quits: Liblx (~Liblx@77.21.255.67) (Remote host closed the connection)
[07:06:48] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[07:06:53] *** Joins: tijuco (~tijuco@user/tijuco)
[07:10:38] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[07:11:08] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[07:12:00] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 250 seconds)
[07:14:13] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:14:57] *** Joins: tijuco (~tijuco@user/tijuco)
[07:15:44] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[07:17:02] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 240 seconds)
[07:17:57] *** Joins: Liblx (~Liblx@77.21.255.67)
[07:18:11] *** Quits: jos1 (~jos3@dyndsl-178-142-067-097.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[07:22:37] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[07:24:23] <Friithian> ah, someone who insists it is ok for them to parse ls because they aalllways check before that it won't break. Typing out find just is too much work for them
[07:24:50] <phy1729> Usually a glob will do and is shorter
[07:26:14] <Friithian> so what they're doing is `ls -1 thing*.thing`
[07:26:44] <Friithian> well, `foo $(ls -1 bar*.ext)`
[07:27:16] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:27:40] *** Joins: tijuco (~tijuco@user/tijuco)
[07:28:05] <emanuele6> well, `foo $(ls -1 `printf 'bar*.ext'`)`
[07:30:20] *** Quits: Liblx (~Liblx@77.21.255.67) (Remote host closed the connection)
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:31:01] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[07:31:49] *** Joins: jos1 (~jos3@dyndsl-091-248-052-028.ewe-ip-backbone.de)
[07:33:44] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[07:34:03] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:34:27] *** Joins: Liblx (~Liblx@77.21.255.67)
[07:38:43] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:43:54] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:44:17] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[07:49:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:53:53] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[07:55:34] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[07:56:49] *** Joins: Atque (~Atque@user/atque)
[08:00:06] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[08:01:11] *** Quits: Liblx (~Liblx@77.21.255.67) (Remote host closed the connection)
[08:04:03] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 268 seconds)
[08:04:37] *** Quits: Dotz0cat (~Dotz0cat@h83.241.19.98.static.ip.windstream.net) (Ping timeout: 240 seconds)
[08:04:46] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:04:49] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:05:19] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:06:04] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:06:27] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:08:25] *** Joins: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de)
[08:08:54] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[08:10:17] *** Joins: Liblx (~Liblx@2a02:810c:280:59c:69cb:ba0b:7fdc:51c3)
[08:10:44] *** Quits: Liblx (~Liblx@2a02:810c:280:59c:69cb:ba0b:7fdc:51c3) (Remote host closed the connection)
[08:13:01] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:15:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[08:16:57] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:22:54] *** Joins: millido (~millido@84.210.150.128)
[08:22:58] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[08:28:20] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:28:33] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:30:11] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:31:29] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:33:09] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:34:15] *** Quits: N0ZYC_ (~N0ZYC@173.16.166.245) (Read error: Connection reset by peer)
[08:34:41] *** Joins: N0ZYC (~N0ZYC@173.16.166.245)
[08:34:43] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:34:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[08:35:45] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:36:34] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[08:39:06] *** Quits: timj (~timj@user/timj) (Ping timeout: 250 seconds)
[08:39:17] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[08:39:29] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:41:30] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:41:40] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 268 seconds)
[08:41:49] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:43:04] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:45:05] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:45:28] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[08:46:07] *** Joins: loganlee (~Thunderbi@user/loganlee)
[08:46:31] *** loganlee is now known as loganlee[gnu]
[08:52:10] *** Joins: igemnace (~ian@user/igemnace)
[08:54:27] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:54:48] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[08:55:40] *** Joins: timj (~timj@user/timj)
[08:56:57] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[08:58:06] *** Joins: tijuco (~tijuco@user/tijuco)
[08:58:41] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:00:02] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[09:04:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:05:46] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[09:08:19] <b0o> How can I get the hex value for a unicode character? If I try to hexdump a character like 'ò', I get b2c3, but the number I'm looking for is 00f2.
[09:09:17] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:11:31] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[09:12:50] *** Joins: Dotz0cat (~Dotz0cat@h227.195.187.173.dynamic.ip.windstream.net)
[09:14:26] *** Joins: han-solo (~hanish@user/han-solo)
[09:15:45] <e36freak> i don't think any standard tools will give you 00f2, you're seeing the raw bytes as they're written to disk but don't account for the encoding
[09:15:55] <e36freak> i don't know of a standard tool that does handle the unicode encoding the way you want
[09:16:08] <e36freak> a quick search found https://github.com/Codepoints/unidump
[09:16:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:16:54] <tirnanog> # LANG=en_US.utf8; printf '%04x\n' "'ò"
[09:16:55] <shbot> tirnanog: 00f2
[09:17:42] <e36freak> oh, look at that
[09:19:32] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:24:11] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[09:27:51] *** Joins: bbju (~bbju@103.144.149.220)
[09:29:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:29:21] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:28] *** Parts: katsuragi (katsuragi@tilde.institute) (WeeChat 2.9)
[09:40:21] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[09:42:17] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[09:54:11] *** Joins: mat001 (~mat001@213.143.69.121)
[09:55:20] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:57:10] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:57:40] *** Joins: Mo (~Mo@dynamic-077-010-034-048.77.10.pool.telefonica.de)
[09:58:17] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 240 seconds)
[10:00:45] *** Quits: ccl_ (ccl@shell.xshellz.com) (Quit: leaving)
[10:02:32] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:03:58] *** Joins: oarion7 (anonymous@user/oarion7)
[10:06:09] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 268 seconds)
[10:06:23] *** Joins: ccl (ccl@shell.xshellz.com)
[10:08:41] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[10:11:03] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[10:12:20] *** Joins: situ_ (~situ@nat-pool-brq-u.redhat.com)
[10:13:36] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[10:14:16] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[10:19:56] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[10:21:14] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[10:23:57] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 240 seconds)
[10:28:38] *** Joins: carl- (~carl-@185.103.188.130)
[10:29:49] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au)
[10:30:17] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[10:30:49] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 268 seconds)
[10:31:47] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:31:57] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 240 seconds)
[10:32:00] *** Quits: kurahaupo (~kurahaupo@pa49-182-112-209.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[10:32:09] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:33:41] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Ping timeout: 256 seconds)
[10:34:22] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 250 seconds)
[10:34:54] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[10:36:17] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:36:33] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:37:06] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:37:09] *** Joins: xx (~xx@user/xx)
[10:37:51] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:40:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[10:44:48] *** Joins: Blondie101010_ (~Blondie10@user/blondie101010)
[10:45:12] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:45:36] *** Quits: mattf_ (~mattf@li908-138.members.linode.com) (Ping timeout: 256 seconds)
[10:46:06] *** Joins: justGhost3 (~justache@user/justache)
[10:46:32] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[10:46:42] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[10:46:44] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[10:46:44] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: justGhost (~justache@user/justache) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: edr (~edr@user/edr) (Ping timeout: 256 seconds)
[10:47:18] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 256 seconds)
[10:47:18] *** justGhost3 is now known as justGhost
[10:47:45] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:47:51] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 256 seconds)
[10:47:52] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Ping timeout: 256 seconds)
[10:47:52] *** daniel-k3 is now known as daniel-k
[10:47:55] *** Blondie101010_ is now known as Blondie101010
[10:48:39] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[10:49:14] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[10:50:35] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:51:16] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 250 seconds)
[10:51:39] *** Joins: igemnace (~ian@user/igemnace)
[10:51:53] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[10:52:04] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[10:52:28] *** Joins: edr (~edr@enlo.co)
[10:52:28] *** Quits: edr (~edr@enlo.co) (Changing host)
[10:52:28] *** Joins: edr (~edr@user/edr)
[10:53:02] *** Quits: oarion7 (anonymous@user/oarion7) (Ping timeout: 240 seconds)
[10:54:15] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:55:04] *** Joins: igemnace (~ian@user/igemnace)
[10:55:32] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Read error: Connection reset by peer)
[10:55:40] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:56:26] *** Joins: bluedust (~bluedust@103.161.144.140)
[10:58:57] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[10:59:26] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:59:56] *** Joins: rcernin (~rcernin@101.189.141.138)
[11:00:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:15] *** Joins: unop (~unop@194.154.249.71)
[11:02:16] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[11:02:30] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[11:03:24] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[11:03:39] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[11:05:58] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:06:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:09:07] *** Joins: fef (~thedawn@user/thedawn)
[11:12:14] *** Joins: thevishy (~Nishant@2405:201:f005:c007:4ce:a391:7558:6be8)
[11:13:42] *** Joins: rendar (~rendar@user/rendar)
[11:14:37] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 240 seconds)
[11:14:56] *** Joins: igemnace (~ian@user/igemnace)
[11:15:00] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:15:38] *** Joins: unop (~unop@194.154.249.71)
[11:15:46] *** Joins: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net)
[11:19:13] *** Joins: yustin (~yustin@user/yustin)
[11:20:39] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[11:21:09] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 250 seconds)
[11:21:34] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:21:50] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[11:24:25] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:24:40] *** Joins: unop (~unop@194.154.249.71)
[11:26:03] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[11:26:33] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[11:26:39] *** Joins: igemnace (~ian@user/igemnace)
[11:26:47] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[11:31:08] *** Joins: lavaball (felix@31.204.155.215)
[11:34:07] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:34:17] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 240 seconds)
[11:35:11] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[11:36:02] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:38:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:38:52] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:40:03] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:48:00] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[11:48:52] *** Joins: n4dir (~user@i5E866640.versanet.de)
[11:51:20] *** Quits: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:51:47] *** Joins: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net)
[11:51:55] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[11:55:37] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 240 seconds)
[12:01:37] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[12:05:23] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:07:24] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[12:08:46] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[12:13:45] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[12:18:31] *** Joins: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it)
[12:18:31] *** Quits: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it) (Changing host)
[12:18:31] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:18:31] *** _gabriele is now known as gabriele
[12:18:39] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Quit: WeeChat 3.2)
[12:19:28] *** Joins: sinaowolabi_ (~SinaOwola@41.190.30.165)
[12:19:47] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:19:56] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[12:20:17] *** Quits: ominionx (~ominionx@2604:2d80:9d0b:e400:afa8:a47a:73ca:db5d) (Ping timeout: 240 seconds)
[12:22:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:23:27] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Remote host closed the connection)
[12:23:54] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744)
[12:26:15] *** Joins: rcernin (~rcernin@101.189.141.138)
[12:26:39] *** Joins: Liblx_ (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:26:47] *** Joins: nickdiaz1wag209 (~bjpenn_@98.42.87.100)
[12:27:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:28:20] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9c31:26ec:be5b:4744) (Ping timeout: 250 seconds)
[12:29:17] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.43) (Ping timeout: 256 seconds)
[12:29:19] *** Quits: Liblx_ (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:29:44] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:30:02] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:30:10] *** Quits: rcernin (~rcernin@101.189.141.138) (Client Quit)
[12:31:07] *** Joins: rcernin (~rcernin@101.189.141.138)
[12:31:36] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[12:32:05] *** Joins: chomwitt (~chomwitt@2a02:587:dc16:6e00:12c3:7bff:fe6d:d374)
[12:33:17] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[12:34:37] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Ping timeout: 240 seconds)
[12:35:38] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:36:35] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:37:27] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[12:37:43] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:37:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:39:29] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:40:00] *** Joins: ominionx (~ominionx@172.58.193.70)
[12:40:02] *** Quits: sinaowolabi_ (~SinaOwola@41.190.30.165) (Ping timeout: 250 seconds)
[12:40:36] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc)
[12:42:47] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[12:45:15] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:d168:b787:96fa:e3fc) (Ping timeout: 268 seconds)
[12:45:36] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:50:35] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[12:53:56] *** Joins: sinaowolabi_ (~SinaOwola@41.58.200.229)
[12:56:11] *** Joins: shad (~shad@user/shad)
[12:56:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[12:57:48] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:59:17] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:02:53] <OMGOMG> # iconv -f utf8 -t utf16 <<<ò |od -x
[13:02:55] <shbot> OMGOMG: iconv: conversion to `utf16' is not supported
[13:02:55] <shbot> OMGOMG: Try `iconv --help' or `iconv --usage' for more information.
[13:02:55] <shbot> OMGOMG: 0000000
[13:09:58] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:11:07] *** Joins: o (~niko@libera/staff/niko)
[13:13:49] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[13:14:04] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[13:20:11] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[13:21:55] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[13:25:50] *** Joins: libc (~archer@user/tessio)
[13:26:04] *** Joins: karakedi (~eAC53C340@user/karakedi)
[13:26:45] *** Joins: fef (~thedawn@user/thedawn)
[13:26:52] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[13:29:23] *** Joins: tobybl (~tobybl@dhcp-199-228.inf.ed.ac.uk)
[13:31:04] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[13:33:53] *** Joins: fef (~thedawn@user/thedawn)
[13:35:06] <tirnanog> try utf-16.
[13:35:41] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[13:39:31] <DPA> Works on my machine https://bpa.st/BISA
[13:43:16] <tirnanog> hmm. perhaps just a crippled glibc then.
[13:44:22] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[13:44:24] *** Joins: furrymcgee (~devuan@cgn-89-1-211-231.nc.de)
[13:48:11] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:49:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:49:46] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[13:50:25] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:51:37] *** Joins: igemnace (~ian@user/igemnace)
[13:52:07] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:53:31] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:53:35] *** Joins: N0ZYC_ (~N0ZYC@173.16.166.245)
[13:53:53] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[13:55:26] *** Quits: N0ZYC (~N0ZYC@173.16.166.245) (Ping timeout: 256 seconds)
[13:59:37] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 240 seconds)
[13:59:37] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[14:01:37] *** Joins: ouestbillie (~gallup@185.195.233.171)
[14:01:40] *** Quits: sinaowolabi_ (~SinaOwola@41.58.200.229) (Ping timeout: 256 seconds)
[14:02:37] *** Quits: situ_ (~situ@nat-pool-brq-u.redhat.com) (Ping timeout: 240 seconds)
[14:03:00] *** Joins: seninha (~seninha@user/seninha)
[14:04:46] *** Joins: igemnace (~ian@user/igemnace)
[14:04:48] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 268 seconds)
[14:05:24] *** Quits: defjam (~eb0t@90.209.247.249) (Quit: WeeChat 3.0)
[14:05:38] *** Quits: chenqisu1 (~bhca7d@183.217.200.249) (Ping timeout: 256 seconds)
[14:06:16] *** Joins: rcernin (~rcernin@101.189.141.138)
[14:06:49] *** Joins: legola (~legola@46.235.100.54)
[14:07:36] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[14:07:41] *** Quits: demonbane (~demonbane@71.247.72.217) (Ping timeout: 256 seconds)
[14:07:47] *** Joins: tedster (~Tedster@rampage.tedster.net)
[14:07:55] *** Joins: demonbane (~demonbane@71.247.72.217)
[14:08:06] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[14:08:15] *** Quits: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: ih8wndz (~ih8wndz@alpha.trunkmasters.com) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: maledictium (~crux@bl23-232-57.dsl.telepac.pt) (Ping timeout: 256 seconds)
[14:08:15] *** Quits: tedster- (~Tedster@rampage.tedster.net) (Ping timeout: 256 seconds)
[14:09:50] *** Joins: maledictium (~crux@bl23-232-57.dsl.telepac.pt)
[14:10:00] *** Joins: ih8wndz (~ih8wndz@alpha.trunkmasters.com)
[14:14:36] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Read error: Connection reset by peer)
[14:16:03] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[14:16:41] *** Joins: sinaowolabi_ (~SinaOwola@41.190.30.165)
[14:17:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:18:59] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 268 seconds)
[14:19:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:20:37] *** Joins: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com)
[14:22:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:25:22] *** Joins: mat001 (~mat001@213.143.69.121)
[14:27:02] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[14:27:18] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[14:27:38] *** Joins: mat001 (~mat001@213.143.69.121)
[14:30:57] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[14:31:35] *** Joins: mat001 (~mat001@72.28.108.216)
[14:36:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[14:37:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694)
[14:38:56] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:39:23] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:41:02] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[14:43:23] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[14:44:09] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[14:46:47] *** Joins: Jong (~Jong@174.27.15.0)
[14:52:24] *** Joins: fef (~thedawn@user/thedawn)
[14:54:22] *** Joins: timm (~timm@user/timm)
[14:54:47] *** Quits: sinaowolabi_ (~SinaOwola@41.190.30.165) (Ping timeout: 250 seconds)
[15:01:00] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[15:04:05] *** Joins: mat001 (~mat001@213.143.69.121)
[15:06:34] *** Joins: maryo87 (~Maryo@user/maryo)
[15:06:43] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[15:07:55] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[15:08:27] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[15:09:06] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 256 seconds)
[15:10:10] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[15:11:13] *** Joins: bluedust (~bluedust@103.161.144.140)
[15:11:32] *** Joins: nyex (~Thunderbi@177.84.107.20)
[15:11:37] *** Quits: OlCe (~user@amarseille-656-1-684-224.w90-8.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:11:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[15:12:36] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[15:14:29] *** Joins: vishal (~vishal@fedora/vishal)
[15:15:08] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:15:44] *** Joins: unop (~unop@194.154.249.71)
[15:15:57] *** Quits: nyex (~Thunderbi@177.84.107.20) (Client Quit)
[15:16:13] *** Joins: nyex (~Thunderbi@177.84.107.20)
[15:21:48] *** Quits: n4dir (~user@i5E866640.versanet.de) (Remote host closed the connection)
[15:22:13] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[15:27:24] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:27:40] *** Joins: unop (~unop@194.154.249.71)
[15:33:23] *** Quits: tobybl (~tobybl@dhcp-199-228.inf.ed.ac.uk) (Remote host closed the connection)
[15:33:31] *** Joins: gareppa (~gareppa@user/gareppa)
[15:34:14] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Ping timeout: 250 seconds)
[15:34:29] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:38:00] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:38:17] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 240 seconds)
[15:38:47] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[15:39:02] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[15:40:02] *** Joins: TomyWork (~TomyLobo@p200300e80f0067003dffc709fbf62b1f.dip0.t-ipconnect.de)
[15:41:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[15:41:39] *** Joins: OlCe` (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[15:43:35] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:43:48] *** Joins: liveacou1tic (~adison@user/liveacoustic)
[15:43:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[15:44:10] *** Joins: unop (~unop@194.154.249.71)
[15:44:50] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:45:22] *** Quits: timm (~timm@user/timm) (Ping timeout: 260 seconds)
[15:45:31] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:45:38] *** Joins: legola (~legola@109.111.235.230)
[15:45:45] *** Quits: medard (~mithrin@stip-static-62.213-81-207.telecom.sk) (Quit: Leaving)
[15:45:46] *** Joins: unop (~unop@194.154.249.71)
[15:46:04] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[15:47:06] *** Joins: sinaowolabi_ (~SinaOwola@41.58.87.249)
[15:48:03] *** Quits: legola (~legola@109.111.235.230) (Remote host closed the connection)
[15:49:54] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:50:44] *** Joins: fef (~thedawn@user/thedawn)
[15:51:27] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[15:51:43] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962)
[15:51:48] *** Joins: legola (~legola@46.240.128.149)
[15:53:05] *** Quits: libc (~archer@user/tessio) (Quit: WeeChat 3.4)
[15:54:10] *** Joins: thiras (~thiras@user/thiras)
[15:55:02] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:55:33] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:56:07] *** Joins: mat001 (~mat001@213.143.69.121)
[15:57:58] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962) (Ping timeout: 260 seconds)
[15:58:58] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[15:59:40] *** Joins: luckiswithme (~luckiswit@103.226.104.2)
[16:00:14] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[16:00:59] *** Joins: cdown (~cdown@163.114.131.1)
[16:02:39] *** Joins: Atque (~Atque@user/atque)
[16:06:23] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:07:00] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:08:32] *** Joins: bluedust (~bluedust@103.161.144.140)
[16:08:39] *** Quits: legola (~legola@46.240.128.149) ()
[16:10:29] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Client Quit)
[16:10:53] *** Joins: darkxploit (~jay@c-67-172-32-230.hsd1.ct.comcast.net)
[16:10:54] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:13:21] *** Joins: nunggu (~q@user/nunggu)
[16:16:45] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[16:22:29] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[16:22:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:24:54] *** kurahaupo_ is now known as kurahaupo
[16:27:17] *** Joins: knobo (~knobo@cCF845BC1.dhcp.as2116.net)
[16:28:26] <knobo> I'd like to add an environment variable to show up in a powerline segment. What is the easiest way to do that?
[16:28:47] *** Joins: zeden (~zeden@user/zeden)
[16:29:37] <lopid> export it. whatever a "powerline segment" is
[16:31:27] <knobo> this is powerline https://powerline.readthedocs.io/en/master/commands.html
[16:32:48] <Soliton> why do you need an env variable for your prompt?
[16:32:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[16:34:50] <knobo> I want to know what $AWS_PROFILE is set to
[16:35:20] <Soliton> so the env variable is already there you just want to configure this powerline to use it?
[16:35:31] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 250 seconds)
[16:36:16] <knobo> yes
[16:36:46] <Soliton> you'll have to read the powerline documentation on how to configure it i imagine.
[16:36:57] *** Quits: liveacou1tic (~adison@user/liveacoustic) (Quit: leaving)
[16:37:24] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[16:37:28] *** Joins: tobybl (~tobybl@dhcp-199-228.inf.ed.ac.uk)
[16:37:41] *** Quits: luckiswithme (~luckiswit@103.226.104.2) (Ping timeout: 250 seconds)
[16:38:27] <kurahaupo> knobo: Rather than expecting us to read 100 pages of documentation, could you perhaps just give us a 3-sentence summary of its purpose and how it is used in conjunction with the normal command line?
[16:38:48] *** Joins: taupiqueur (~taupiqueu@91.245.204.77.rev.sfr.net)
[16:40:58] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:41:41] <Earnestly> kurahaupo: It's just a plain old nabq
[16:42:10] <knobo> Yes, should have done that. Rather I should have asked if anyone here used powerline, and know how to configure it. And if there where such a person here, I could have asked how to do it.
[16:42:25] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[16:42:29] *** Joins: lavaball (felix@31.204.155.215)
[16:42:30] <knobo> I don't expect anyone to read the 100 pages of docs.
[16:43:22] <knobo> So I'll read the docs myself one day :)
[16:43:44] <knobo> If nobody knows how to do it, I'll just have to wait until I have the time ti figure it out.
[16:44:04] <knobo> Then I'll come back and share my knowledge if anyone asks for the same :)
[16:44:30] <kurahaupo> knobo: Just because we're not familiar with it doesn't mean we can't figure it out, but we need a bit of a start; what's it for?
[16:45:09] <Earnestly> Oh I suppose it could be the prompt, which used to be a vim thing, but has spread everywhere now
[16:45:20] <Earnestly> So it'd be PS1, but however powershell does it
[16:45:25] <Earnestly> powerline*
[16:45:37] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[16:46:16] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[16:46:19] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[16:46:46] <Soliton> maybe you can just do  PS1+='$AWS_PROFILE'  or similar after the powerline thing.
[16:46:48] <xheimlich> so I have a bunch of files with the .hy extension and would like, for each of them, to run "hy2py thisfile.hy > thisfile.py"
[16:46:54] <maxzor> Hello, if I export env var VAR to program A, which calls program B, which calls program C: will program C have VAR setup?
[16:47:17] <xheimlich> for f in path; do hy2py $f;  doesn't work because I need to remove the .hy extension.
[16:47:19] <Soliton> maxzor: if none of those programs do anything unusual, sure.
[16:47:21] <maxzor> My case is about cmake calling make calling clang
[16:47:35] <Soliton> !env
[16:47:35] <greybot> The environment comprises the subset of variables that are exported, either permanently by the "export" statement or temporarily by prefix assignment. All variables are copied to subshells, but only exported variables are received by other programs; that is the ONLY effect of "export". It's intentionally not possible to modify variables in another process. http://mywiki.wooledge.org/Environment
[16:47:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:47:46] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:47:53] <han-solo> !lame > xheimlich
[16:47:53] <greybot> xheimlich: for f in ./*.wav; do lame -h "$f" "${f%.wav}.mp3"; done
[16:48:01] <xheimlich> I wanted to make a one-liner out of this to stick in a dockerfile if possible, rather than writing a python script or some such noise.
[16:48:18] <xheimlich> greybot: I'll try that right now. Very arigato anchaika.
[16:48:35] *** Joins: adac (~adac@212-41-238-132.static.upcbusiness.at)
[16:48:59] <kurahaupo> maxzor: by default the environment is passed through unmodified to any children
[16:49:47] <xheimlich> yes!
[16:49:48] <maxzor> thank you
[16:49:57] *** Quits: taupiqueur (~taupiqueu@91.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[16:50:05] *** Joins: luckiswithme (~luckiswit@103.226.104.2)
[16:50:06] <xheimlich> greybot: may life and luck give you a thousand reasons to rejoice.
[16:50:27] <kurahaupo> !imabot > xheimlich
[16:50:27] <greybot> xheimlich: I am only a software bot, programmed to hand out information. Talk to the person who last said something beginning with "!" before I spoke; that's the person who asked me to say something.
[16:50:30] *** Joins: timm (~timm@user/timm)
[16:51:16] *** Joins: shad (~shad@user/shad)
[16:52:05] <xheimlich> oh.
[16:52:29] <xheimlich> now this is anticlimactic
[16:53:06] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:53:52] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[16:53:56] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962)
[16:56:11] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 245 seconds)
[16:57:28] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 268 seconds)
[16:59:07] *** Quits: luckiswithme (~luckiswit@103.226.104.2) (Remote host closed the connection)
[16:59:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962) (Ping timeout: 240 seconds)
[17:00:59] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[17:01:17] *** Joins: roadt (~roadt@36.5.93.137)
[17:01:53] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[17:02:34] <xheimlich> why "only" a software bot though. that's so elitist.
[17:03:16] *** Quits: bluedust (~bluedust@103.161.144.140) (Read error: Connection reset by peer)
[17:03:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:03:38] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:03:51] *** Joins: bluedust (~bluedust@103.161.144.140)
[17:04:08] *** Quits: bid0uille (~user_name@trois.potager.org) (Ping timeout: 256 seconds)
[17:05:24] <Earnestly> elitism good
[17:05:25] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[17:05:44] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:05:53] <osse> global elitism
[17:06:19] <Earnestly> local elitism
[17:07:13] <Earnestly> I wonder if pipewire is worthwhile now or if it still has too much cpu usage
[17:07:37] <Earnestly> I have decided that it is too much effort to test and have given up
[17:08:32] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[17:09:57] <kurahaupo> xheimlich: Self-deprecation rather than elitism
[17:10:28] <xheimlich> Earnestly: ok true
[17:11:13] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[17:12:06] *** Joins: dfinr (~dfinr@user/dfinr)
[17:13:27] *** Joins: bluedust (~bluedust@103.161.144.140)
[17:15:25] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:16:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:17:17] *** Quits: sinaowolabi_ (~SinaOwola@41.58.87.249) (Ping timeout: 240 seconds)
[17:18:54] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[17:23:46] *** Quits: timj (~timj@user/timj) (Remote host closed the connection)
[17:26:29] *** Joins: tradar (~tradar@user/tradar)
[17:26:36] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[17:29:42] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[17:29:54] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Client Quit)
[17:30:07] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:31:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Quit: Leaving)
[17:31:40] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[17:32:10] *** Joins: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com)
[17:32:10] *** Quits: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com) (Changing host)
[17:32:10] *** Joins: wuseman (~wuseman@user/wuseman)
[17:33:02] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 240 seconds)
[17:34:19] *** Quits: OlCe` (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[17:35:56] *** Quits: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[17:41:33] *** Joins: DaNeenjah (~jake@adsl-74-230-9-40.hsv.bellsouth.net)
[17:41:57] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[17:42:41] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[17:43:14] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[17:44:03] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[17:44:17] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[17:44:54] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:46:38] *** Quits: Lemniscate (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[17:48:19] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[17:49:21] *** Joins: frostwork (~frostwork@user/frostwork)
[17:50:46] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[17:51:36] *** Joins: fef (~thedawn@user/thedawn)
[17:52:18] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 260 seconds)
[17:52:35] *** Joins: maryo_87 (~Maryo@user/maryo)
[17:54:02] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
[17:54:34] *** Joins: ChmEarl (~chmearl@user/chmearl)
[17:54:48] *** Joins: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com)
[17:54:48] *** Quits: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com) (Changing host)
[17:54:48] *** Joins: wuseman (~wuseman@user/wuseman)
[17:55:42] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[17:57:54] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[18:02:18] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[18:05:17] *** Joins: bluedust (~bluedust@103.161.144.140)
[18:05:47] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[18:06:31] *** Quits: timm (~timm@user/timm) (Ping timeout: 250 seconds)
[18:07:42] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[18:09:38] *** Joins: deadmund (~ed@155.68.60.155)
[18:10:33] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[18:10:40] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 250 seconds)
[18:11:10] <deadmund> I am writing a simple script that copies a unit test file into some sub-folders.  If I run the script more than my invocation of "cp" complains becuase the files were copied in a previous run and now the src and dest "are the same file"  none of --update or --force or any other flag seem to fix this problem.  Can't I force cp to do the copy even though the files are the same?
[18:11:50] <tarzeau> deadmund: -f?
[18:12:09] *** Joins: thomas25 (thomas25@brought.to.you.by.bnc4free.com)
[18:12:12] <jelly> deadmund, what is the point of overwriting a file with an identical copy?
[18:12:23] <jelly> jsut to make the script idempotent?
[18:12:28] <osse> Does cp do any such check?
[18:12:29] <Soliton> # touch file; cp file file
[18:12:31] <shbot> Soliton: cp: 'file' and 'file' are the same file
[18:12:37] <deadmund> jelly: --force = -if
[18:12:45] <osse> oh, *that kind* of same file :P
[18:12:50] <Soliton> it means literally the same file.
[18:12:50] <thomas25> GNU parallel does not have a cache option it seems? (i.e. i want to run batch operations on multiple cores but it'd be nice if computation is done once, the previous results are used if input file has not been modified)
[18:13:18] <jelly> # touch f; cp f g; cp f g; echo $?
[18:13:20] <shbot> jelly: 0
[18:13:25] <jelly> wfm
[18:13:28] <deadmund> jelly: The point is that the script should be able to run again if something failed or if the script was only 1/2 finished when it ended.  In such a situation the file will be copied into some of the directories and not others.
[18:13:46] <djph> woulen't it be more
[18:13:54] <osse> based on the error it sounds like you're not copying it into subfolders but into the same folder
[18:13:55] <deadmund> jelly: I guess I have to (a) first check if the file exists and then (b) copy ONLY if it doesn't already exist.  I guess this is a limitation of the cp command and bash.
[18:14:08] <Soliton> deadmund: do you understand that you're telling cp to copy literally the SAME file?
[18:14:12] <deadmund> Seems like an unnecessary burden to lay on the programmer using bash / cp
[18:14:20] <djph>  ... mkdir test; touch file; cp file test/ ; cp file test ?
[18:14:35] <djph> er where'd that extra newline come from :(
[18:15:02] <deadmund> osse: I am copying into sub-folders  The file is already present from a previous run of the script (in some of the sub-folders)
[18:15:03] <jelly> deadmund, if you have GNU cp, just add -f as suggested.  You do not need -i.  Make sure your OS does not replace "cp" with a "cp -i" alias or similar silliness
[18:15:15] <Soliton> deadmund: prove it.
[18:15:20] <osse> deadmund: cp doesn't give that error in that case
[18:15:23] <osse> it'll just do what you want
[18:15:41] <Soliton> cp is not going to care if a file has the same contents or whatever.
[18:15:44] <deadmund> It's probably because I'm invoking the cp command from within a python script (subprocess) and then I call check_returncode()
[18:16:10] <osse> # mkdir subdir; echo contents >file; cp file subdir; echo again; cp file subdir
[18:16:12] <shbot> osse: again
[18:16:19] <osse> # mkdir subdir; echo contents >file; cp file subdir; echo typo; cp file file
[18:16:20] <jelly> deadmund, I just tried to copy over an existing file and cp returned 0
[18:16:21] <shbot> osse: typo
[18:16:21] <shbot> osse: cp: 'file' and 'file' are the same file
[18:16:32] <djph> #mkdir testdir; touch test; cp test testdir/ ; cp test testdir/
[18:16:40] <Soliton> cp is not going to change how it works based on what process called it.
[18:17:26] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[18:17:31] <jelly> deadmund, can you show actual code and output?
[18:17:34] <djph> seems that it only errors when you're copying from a file to itself (instead of subdir/itself) twice
[18:17:54] <Soliton> it'd be crazy if cp would check file contents.
[18:17:58] <jelly> if you're calling stuff from python then #bash might not be the optimal place to ask a question
[18:20:20] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:20:40] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[18:21:08] <Soliton> surely using cp from python is not the normal way to copy files in python anyway.
[18:22:36] <jelly> I'm not sure what bash has to do with using cp at all
[18:22:54] <Soliton> well, posix tools are on topic here as well.
[18:23:02] <jelly> unless they're calling os.subprocess() with shell=True https://docs.python.org/3/library/subprocess.html
[18:23:32] <jelly> but why would one do that?  It's basically sh -c '...'
[18:24:22] <Soliton> involving a shell would be even worse indeed.
[18:24:47] <Soliton> presumably with unsafe injection then.
[18:25:02] <jelly> sorry.  subprocess is a separate module, I'm not regular with python
[18:25:55] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[18:25:55] <osse> shell=True is nice for when you *want* to do sh -c '...'  but too lazy to write ['sh', '-c', '...']
[18:26:01] <osse> plus it handles different platforms
[18:26:58] <kurahaupo> deadmund: cp will (rightly) complain if the source and destination file are the same inode
[18:27:21] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[18:28:18] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[18:30:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:33:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:37:14] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:37:33] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661)
[18:37:54] *** Joins: JohnML (~JohnML@ip-037-201-129-030.um10.pools.vodafone-ip.de)
[18:44:25] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:44:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:45:48] *** Quits: tm512 (~tm512@user/tm512) (Read error: Connection reset by peer)
[18:46:07] *** Joins: tm512 (~tm512@50.53.132.213)
[18:46:11] *** Quits: tm512 (~tm512@50.53.132.213) (Changing host)
[18:46:11] *** Joins: tm512 (~tm512@user/tm512)
[18:46:37] *** Joins: zoe (~zoe@fsf/member/zoe)
[18:47:22] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Remote host closed the connection)
[18:47:24] *** Quits: dfg (dfg@user/dfg) (Quit: I hate quit messages.)
[18:47:25] *** Quits: fsg (^^@2600:3c00::f03c:92ff:fec6:da18) (Quit: :quit)
[18:47:33] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[18:47:40] *** Joins: dfg (dfg@dfg.rocks)
[18:47:40] *** Quits: dfg (dfg@dfg.rocks) (Changing host)
[18:47:40] *** Joins: dfg (dfg@user/dfg)
[18:49:14] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[18:49:30] *** Joins: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[18:51:26] *** Joins: gooseface (~gooseface@2001:8004:1160:7d6:e9b:18e3:c22:654d)
[18:52:00] *** Quits: gooseface (~gooseface@2001:8004:1160:7d6:e9b:18e3:c22:654d) (Client Quit)
[18:52:11] *** Joins: Minvera (~Minvera@user/Minvera)
[18:53:37] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[18:54:14] *** Joins: Atque (~Atque@user/atque)
[18:54:20] *** Quits: bfortifi- (~bfortifie@user/bfortified) (Quit: ZNC 1.8.2 - https://znc.in)
[18:57:53] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[18:58:45] *** Joins: bfortified (~bfortifie@user/bfortified)
[18:58:50] *** Joins: selckin (~selckin@user/selckin)
[18:59:06] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 245 seconds)
[19:02:23] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[19:10:42] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:14:19] *** Quits: kj (~kj@beta.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[19:16:40] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:17:09] *** Joins: Trieste (T@user/pilgrim)
[19:17:51] *** Joins: mknod (~mknod@user/mknod)
[19:21:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[19:22:35] *** Joins: magla (~gelignite@55d4248d.access.ecotel.net)
[19:24:57] *** Joins: maryo_87 (~Maryo@user/maryo)
[19:25:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[19:27:02] *** Quits: ouestbillie (~gallup@185.195.233.171) (Ping timeout: 240 seconds)
[19:29:02] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (Remote host closed the connection)
[19:29:15] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:29:16] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[19:29:58] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 250 seconds)
[19:30:56] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:31:24] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:33:57] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[19:35:21] *** Joins: kj- (~kj@beta.aerisnetwork.net)
[19:35:29] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[19:37:59] *** Quits: kj- (~kj@beta.aerisnetwork.net) (Read error: Connection reset by peer)
[19:38:05] *** Joins: kj (~kj@beta.aerisnetwork.net)
[19:40:30] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:41:26] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[19:41:44] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[19:44:51] *** Joins: mongy (~mongy@user/mongy)
[19:47:24] *** Joins: AsenMx (~asen@user/asenmx)
[19:51:54] *** Joins: Kyuzo68 (~Kyuzo@host-95-249-225-37.retail.telecomitalia.it)
[19:52:40] *** Joins: tobybl_ (~tobybl@dhcp-199-228.inf.ed.ac.uk)
[19:54:02] *** Quits: Mo (~Mo@dynamic-077-010-034-048.77.10.pool.telefonica.de) (Ping timeout: 240 seconds)
[19:54:20] *** Joins: tobybl__ (~tobybl@dhcp-199-228.inf.ed.ac.uk)
[19:54:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[19:55:58] *** Quits: tobybl (~tobybl@dhcp-199-228.inf.ed.ac.uk) (Ping timeout: 250 seconds)
[19:56:11] *** Joins: zeden (~zeden@user/zeden)
[19:58:02] *** Quits: tobybl_ (~tobybl@dhcp-199-228.inf.ed.ac.uk) (Ping timeout: 240 seconds)
[19:58:06] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[19:58:28] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[19:59:09] *** Joins: bbju (~bbju@103.144.149.220)
[20:00:03] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:00:30] *** Joins: PaulePanter (~paul@mail.gw90.de)
[20:00:59] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:01:55] <PaulePanter> Hi. I have a file with lines and strings containing spaces:
[20:01:56] <PaulePanter> https://paste.debian.net/1228611/
[20:02:18] <PaulePanter> I would like to read each line (with spaces) and have them in a variable.
[20:02:41] <selckin> !faq 1
[20:02:41] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[20:02:49] <PaulePanter> … variable x, so I can do `for i in x` but with IFS as space again.
[20:02:53] <PaulePanter> selckin: Thanks.
[20:03:33] <PaulePanter> I was at:
[20:03:33] <PaulePanter> IFS=$'\n'
[20:03:34] <PaulePanter> types=$(cat types.txt)
[20:03:38] <PaulePanter> Thank you for the URL.
[20:03:41] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[20:04:12] *** Joins: bluedust (~bluedust@103.161.144.140)
[20:06:19] *** Joins: tylee (~tylee@user/tylee)
[20:06:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:08] <tylee> Hello. Please, help me with multiline deletion between two occurences. I wrote about task here https://c-v.sh/tawdryresters.txt Maybe somebody knows. I can't sed obviously because it doesn't support multiline replacement afaik
[20:09:15] <twkm> probably #awk or #perl, though bash can do it just slowly.
[20:10:13] <tylee> thanks! thought about perl, but looking for more portable way. not every machine has perl, but any has coreutils/bash/sed
[20:10:32] <selckin> sed '/\[tag\]/,/\[\/tag\]/d'
[20:11:46] <tylee> selckin: it will read from first tag to last and can delete everything. I need to delete only certain occurences.
[20:12:31] <gl> q
[20:12:53] <selckin> sounds like you'll have to actually parse it then
[20:12:58] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[20:13:00] *** Joins: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[20:13:37] *** Quits: YHVH (~yhvh@2601:982:8300:8090:8111:48f:21d5:2f3) (Ping timeout: 240 seconds)
[20:14:53] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:15:33] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: willyg_cos)
[20:15:37] *** Joins: timm (~timm@user/timm)
[20:16:01] *** Joins: mat001 (~mat001@213.143.69.121)
[20:16:08] <tylee> selckin: yeah, awk should can do it, but I don't know how to write such awk script heh
[20:16:23] *** Joins: knstn (~knstn@ppp-94-66-57-45.home.otenet.gr)
[20:16:58] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 260 seconds)
[20:18:40] *** Quits: deadmund (~ed@155.68.60.155) (Quit: Konversation terminated!)
[20:18:56] <PaulePanter> selckin: Worked like a charm. Thank you.
[20:19:21] *** Quits: Kyuzo68 (~Kyuzo@host-95-249-225-37.retail.telecomitalia.it) (Quit: Konversation terminated!)
[20:22:02] <tylee> lol
[20:22:27] *** Joins: A|an (~Alan@173.218.175.171)
[20:23:08] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[20:24:16] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[20:24:30] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:25:07] *** Joins: mat001 (~mat001@72.28.108.216)
[20:26:34] *** Joins: YHVH (~yhvh@2601:982:8300:8090:49a1:32c6:3f50:c08f)
[20:28:44] *** Joins: piotr (~piotr@user/filystyn)
[20:31:54] *** Quits: adac (~adac@212-41-238-132.static.upcbusiness.at) (Ping timeout: 260 seconds)
[20:33:03] <Soliton> PaulePanter: ''for i in x'' makes no sense. if you want to split the line then read it into an array instead.
[20:34:33] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[20:34:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:35:42] *** Joins: tkazi (~tkazi@user/tkazi)
[20:37:45] *** Quits: tobybl__ (~tobybl@dhcp-199-228.inf.ed.ac.uk) (Remote host closed the connection)
[20:38:00] <PaulePanter> Soliton: Understood. Thanks.
[20:38:26] *** Quits: TomyWork (~TomyLobo@p200300e80f0067003dffc709fbf62b1f.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:39:14] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[20:39:29] *** piotr is now known as Filystyn
[20:40:03] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[20:40:52] *** Joins: bidouille (~user_name@trois.potager.org)
[20:42:19] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:43:44] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[20:44:28] *** Quits: timm (~timm@user/timm) (Quit: Leaving)
[20:45:40] *** Joins: seninha (~seninha@user/seninha)
[20:46:15] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[20:46:15] *** yamchah2_ is now known as yamchah2
[20:46:50] <bn_work> can chars like + in filenames cause havok in the FS / bash?  I'm getting build artifacts with that in the name and it's making me nervous...
[20:47:10] <e36freak>  no?
[20:47:13] <bn_work> FS ex EXT4
[20:47:31] <e36freak> your FS can handle anything except a / or a NUL byte
[20:47:47] <Earnestly> If + is first it might be considered a flag for some rare programs, but that is guarded as normal with -- (or ./ for the crap software)
[20:47:52] <e36freak> and that's not a special character in most bash cases, and even if it were, proper quoting/practices would make it a non issue
[20:47:54] <bn_work> what about NTFS?
[20:48:10] <Earnestly> e36freak: (filesystem can handle those too, just denied t VFS layer, which is interesting to me)
[20:48:25] <e36freak> also true
[20:48:36] <Earnestly> bn_work: https://en.wikipedia.org/wiki/Ntfs
[20:48:41] <Earnestly> bn_work: See sidebar
[20:48:50] *** Quits: Major_Biscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[20:49:01] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 250 seconds)
[20:49:07] <bn_work> hopefully it doesn't make name parsing via regex more annoying
[20:49:57] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[20:51:15] <bn_work> Earnestly: thanks... hmm, the way it describes NUL is a bit ambiguous, I'm assuming it's saying it _does_ support it?
[20:51:33] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:53:19] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:53:27] <Earnestly> Windows does
[20:53:33] *** Joins: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d)
[20:53:36] <Earnestly> Many lulz have been had
[20:54:06] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:54:18] <Earnestly> But Windows has additional restrictions on what names files can have, this is not a limitation of the filesystem
[20:54:36] <Earnestly> It almost never is, every filesystem can store anything.  It's up the kernel as to what it allows
[20:55:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:55:44] <Earnestly> bn_work: Your question exists in a kind of superposition; because if these details were so concerning then you probably wouldn't be asking the question here
[20:56:31] <Earnestly> Or at least be in a position where you have the capacity to find out, in exact detail, as needed to meet whatever requirements you have that makes this a worry
[20:56:44] <Earnestly> !evilfiles > bn_work
[20:56:44] <greybot> bn_work: collection of files that break your wrong assumptions about filenames https://bitbucket.org/emg/tidbits/src/master/evilfiles/
[20:57:04] <Earnestly> bn_work: Here's a test basket, see if your scripts handle them
[20:58:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[20:58:47] *** Quits: thevishy (~Nishant@2405:201:f005:c007:4ce:a391:7558:6be8) (Quit: Leaving)
[20:58:48] <bn_work> Earnestly: ah, nice...  yeah, I was mainly asking because I don't want to have to escape if I don't need to (I just wish our dev would try to stick to generally safer characters)
[20:59:40] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[21:01:37] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[21:01:44] *** Joins: dob1_ (~dob1@user/dob1)
[21:02:00] *** Quits: bbju (~bbju@103.144.149.220) (Quit: Client closed)
[21:03:51] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:04:57] *** Quits: LuKaRo_ (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[21:07:42] <Filystyn> ls
[21:09:04] <jelly> no files.  It is patch dark.  You are likely to be eaten by a grue.
[21:09:20] <jelly> s/patch/pitch/
[21:10:04] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[21:10:45] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:12:58] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b2b00000000000001f9.dip0.t-ipconnect.de)
[21:14:40] *** Joins: fef (~thedawn@user/thedawn)
[21:16:47] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[21:17:33] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[21:21:49] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[21:23:47] <Filystyn> hehe wrong window
[21:26:43] *** Joins: maxzor (~maxzor@2a01cb04054faa00c07cdb22e0e88e3e.ipv6.abo.wanadoo.fr)
[21:27:26] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:28:49] *** Quits: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) (Quit: Connection closed)
[21:28:57] *** Quits: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d) (Ping timeout: 240 seconds)
[21:32:08] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661) (Ping timeout: 252 seconds)
[21:33:06] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:33:28] *** Quits: maxzor (~maxzor@2a01cb04054faa00c07cdb22e0e88e3e.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[21:33:37] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:2891:6bd5:ed2a:ab88)
[21:34:37] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Quit: The Lounge - https://thelounge.chat)
[21:35:05] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Remote host closed the connection)
[21:35:23] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[21:37:04] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.4)
[21:37:29] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[21:38:04] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[21:38:16] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[21:39:08] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[21:41:27] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 250 seconds)
[21:41:27] *** yamchah2_ is now known as yamchah2
[21:42:05] *** Joins: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d)
[21:42:33] *** Quits: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[21:43:36] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 268 seconds)
[21:43:38] *** Quits: thomas_ (~thomas@2a02:a03f:666e:c500:92eb:d341:15bc:3f3d) (Client Quit)
[21:45:13] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:4014:1b4f:f962:d9d9)
[21:45:13] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:4014:1b4f:f962:d9d9) (Changing host)
[21:45:13] *** Joins: skapata (~Skapata@user/skapata)
[21:45:29] *** Joins: crashrep (~crashrep@user/crashrep)
[21:45:37] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:46:25] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[21:50:33] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:51:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[21:52:08] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[21:52:48] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661)
[21:53:23] *** Joins: docmax_ (~docmax@dynamic-077-001-187-127.77.1.pool.telefonica.de)
[21:53:43] *** Joins: Warkruid (~MarderIII@enneman.demon.nl)
[21:54:50] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[21:55:34] *** Quits: tylee (~tylee@user/tylee) (Ping timeout: 250 seconds)
[21:55:37] *** Quits: docmax__ (~docmax@dynamic-077-000-240-019.77.0.pool.telefonica.de) (Ping timeout: 240 seconds)
[21:57:21] <Filystyn> whenever I do var=$(x)  should I double qoute it ?
[21:57:29] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:c127:9163:4294:f661) (Ping timeout: 250 seconds)
[21:57:31] *** Joins: tylee (~tylee@user/tylee)
[21:57:34] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:57:38] <Filystyn> feels no
[21:58:25] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:59:15] *** Joins: maxzor (~maxzor@2a01cb04054faa00c07cdb22e0e88e3e.ipv6.abo.wanadoo.fr)
[21:59:38] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[21:59:47] <llua> when in doubt, qoute it.
[21:59:56] *** Quits: Dotz0cat (~Dotz0cat@h227.195.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[22:01:18] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:01:30] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Client Quit)
[22:01:31] <Filystyn> I have quite scripts that never failed and they are not qouted why I asked
[22:01:55] <Filystyn> yesterday greycat told me that [ $() ]   <-  $() should be qouted
[22:02:11] <Soliton> !quotewhen
[22:02:11] <greybot> "Double quote" every literal that contains spaces/metacharacters and _every_ expansion: "$var", "$(command "$var")", "${array[@]}", "a & b". Use 'single quotes' for code or literal dollar signs: 'Costs $5 US', ssh host 'echo "$HOSTNAME"'. See http://mywiki.wooledge.org/Quotes , http://mywiki.wooledge.org/Arguments and http://wiki.bash-hackers.org/syntax/words .
[22:02:13] <Filystyn> qouted instead of double qoutes made no sens for me
[22:02:21] <Filystyn> but I did analize what he said
[22:02:25] *** Joins: Dotz0cat (~Dotz0cat@h59.213.213.151.dynamic.ip.windstream.net)
[22:02:54] <Filystyn> good to know
[22:02:57] <Filystyn> bugs
[22:03:02] <Filystyn> bugs in my scripts ;-)
[22:03:12] <Filystyn> scary they all work fine
[22:03:48] <Filystyn> ssh looks like code injection
[22:03:55] <llua> when you don't quote, you may do something that appears to work, only failing in cases you don't understand. when you do quote in cases where you shouldn't the script most likelyis going to blow up in your face pretty fast
[22:04:48] <Filystyn> damn those qoutes
[22:04:49] <Soliton> no injection there since it's single quotes.
[22:05:19] <Filystyn> but you pass  "X" which is supposed to prevent word split yeah ?
[22:06:24] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[22:06:37] <Filystyn> How do I understand it pass ssh 'line'
[22:06:44] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:06:50] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1012:9905:928a:6736) (Ping timeout: 250 seconds)
[22:07:16] <Filystyn> where addtional "" are our security to keep whole "varia ble" as one passed argument
[22:08:09] <Soliton> you pass ssh shell code. if what's in the single quotes is proper shell code then it's fine.
[22:08:46] <Filystyn> okie
[22:09:19] <Filystyn> feels like sh -c 'x'
[22:09:35] <Soliton> it is.
[22:09:49] <Soliton> without the option to pass argumetns.
[22:14:12] *** Quits: knobo (~knobo@cCF845BC1.dhcp.as2116.net) (Quit: Client closed)
[22:14:36] *** Joins: useretail (~useretail@185.132.19.151)
[22:14:36] *** Quits: useretail (~useretail@185.132.19.151) (Client Quit)
[22:14:47] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[22:14:50] *** Joins: useretail (~useretail@185.132.19.151)
[22:15:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:15:48] *** Joins: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt)
[22:17:04] *** Joins: vil01 (~vilja@fwa5e16-76.bb.online.no)
[22:17:12] *** Joins: tofran (~tofran@37.189.158.134)
[22:18:21] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[22:19:49] *** Joins: brw (~bas@haring.bas.sh)
[22:20:42] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1011:34c9:7321:99e2)
[22:21:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:21:52] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[22:23:42] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[22:23:49] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 240 seconds)
[22:24:28] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[22:24:35] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:29:58] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 256 seconds)
[22:30:51] *** Joins: goldfish (~goldfish@user/goldfish)
[22:31:27] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:31:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[22:33:01] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:33:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:34:29] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:34:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:36:04] *** Joins: mat001_ (~mat001@213.143.69.121)
[22:37:20] *** Quits: mat001_ (~mat001@213.143.69.121) (Remote host closed the connection)
[22:37:56] *** Joins: mat001_ (~mat001@72.28.108.216)
[22:39:17] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[22:40:43] *** Parts: fmirkes (~fmirkes@user/fmirkes) ()
[22:40:48] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:cd48:6f73:4bfa:ecd8)
[22:40:48] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:cd48:6f73:4bfa:ecd8) (Changing host)
[22:40:48] *** Joins: skapate (~Skapata@user/skapata)
[22:42:01] *** Quits: ominionx (~ominionx@172.58.193.70) (Quit: Leaving)
[22:42:33] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[22:43:14] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 250 seconds)
[22:43:32] *** Joins: brw (~bas@haring.bas.sh)
[22:44:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[22:45:01] *** Quits: vil01 (~vilja@fwa5e16-76.bb.online.no) (Ping timeout: 240 seconds)
[22:48:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:50:02] *** Joins: nickdiazswag209 (~bjpenn_@13.110.54.39)
[22:53:12] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[22:54:09] *** Quits: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com) (Remote host closed the connection)
[22:58:46] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[22:58:57] *** Quits: tylee (~tylee@user/tylee) (Ping timeout: 240 seconds)
[23:04:11] *** Joins: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr)
[23:04:12] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[23:04:25] *** Quits: maxzor (~maxzor@2a01cb04054faa00c07cdb22e0e88e3e.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[23:04:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:04:55] *** Joins: andril (~andril@2601:586:8400:e4::1001)
[23:05:41] *** Joins: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058)
[23:05:59] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:06:48] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[23:07:33] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Remote host closed the connection)
[23:08:10] *** Joins: tylee (~tylee@user/tylee)
[23:08:48] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 250 seconds)
[23:09:18] *** Joins: dsrt^ (~dsrt@50.231.5.242)
[23:12:13] *** Joins: adac (~adac@213-47-252-7.cable.dynamic.surfer.at)
[23:15:25] *** Joins: vil01 (~vilja@fwa5e16-76.bb.online.no)
[23:15:52] *** Quits: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[23:16:47] *** Quits: Warkruid (~MarderIII@enneman.demon.nl) (Ping timeout: 250 seconds)
[23:17:11] *** Quits: andril (~andril@2601:586:8400:e4::1001) (Ping timeout: 252 seconds)
[23:18:16] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[23:18:51] *** Parts: darkxploit (~jay@c-67-172-32-230.hsd1.ct.comcast.net) ()
[23:25:40] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[23:28:06] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:29:13] *** Quits: DaNeenjah (~jake@adsl-74-230-9-40.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[23:39:04] *** uhu- is now known as uhu
[23:39:28] *** Joins: bluedust (~bluedust@103.161.144.140)
[23:40:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[23:43:37] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[23:44:24] *** Joins: yustin (~yustin@user/yustin)
[23:47:35] *** Joins: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt)
[23:48:36] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[23:49:18] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:50:04] *** Joins: diamondbond (~diamondbo@175.157.238.109)
[23:51:13] *** Joins: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de)
[23:51:41] *** Quits: diamondbond (~diamondbo@175.157.238.109) (Client Quit)
[23:53:53] *** Joins: lavaball (felix@31.204.155.215)
[23:55:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[23:55:37] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 240 seconds)
[23:55:41] *** Quits: drd (~drd@2001:b07:6468:1782:1e9c:163f:3faa:8058) (Ping timeout: 252 seconds)
[23:55:54] *** Joins: xv9 (~xv8@c-73-148-120-152.hsd1.va.comcast.net)
[23:56:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[23:57:48] *** Quits: Jong (~Jong@174.27.15.0) (Ping timeout: 256 seconds)
[23:57:59] *** xv9 is now known as XV8-Desktop
[23:58:09] *** XV8-Desktop is now known as XV8|Desktop
