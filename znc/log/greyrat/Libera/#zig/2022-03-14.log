[00:08:32] *** Joins: danderson (~dave@tailscale/danderson)
[00:11:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[00:16:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[00:16:52] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[00:20:46] *** Joins: jemius (~jemius@p200300d96737c800682dba3c6b6fa8e2.dip0.t-ipconnect.de)
[00:35:57] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:38:10] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Quit: WeeChat 3.4)
[00:40:19] *** Joins: xackus (~xackus@185.15.0.3)
[00:46:32] *** Joins: Guest2372 (~Guest23@pool-74-101-33-151.nycmny.fios.verizon.net)
[00:49:31] *** Quits: Guest2372 (~Guest23@pool-74-101-33-151.nycmny.fios.verizon.net) (Client Quit)
[00:53:36] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[01:00:05] *** Joins: rgrinberg (~textual@177.244.18.30)
[01:10:14] *** Joins: ndwk (~ndwk@user/ndwk)
[01:12:58] *** Quits: jemius (~jemius@p200300d96737c800682dba3c6b6fa8e2.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:18:55] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[01:22:25] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:24:27] *** Joins: jemius (~jemius@p200300d96737c800682dba3c6b6fa8e2.dip0.t-ipconnect.de)
[01:36:20] <tsmanner> Earnest fair enough.  In the context of the conversation that was happening, non-zero pointers in C are Truthy and NULL or 0x0 pointers in C are Falsy because they implicitly cast to bool, not because they are intrinsically truthy or falsy.  The concept in other languages is handled with operator overloading (e.g. Python uses __bool__(self) to determine truthiness.  I actually don't know of any language where `if (x)` 
[01:36:20] <tsmanner> takes the branch but where `bool y = x;` fails to compile, or yields a different result.
[01:37:35] *** Joins: koakuma (~k@user/koakuma)
[01:42:14] <tsmanner> Optionals in zig are truthy when set and falsy when not, `const x: ?u32 = null; if (x) { ... }` fails because it's not true or false, you have to use `if (x) |value| { ... }`
[01:46:36] *** Quits: ndwk (~ndwk@user/ndwk) (Ping timeout: 240 seconds)
[01:46:45] *** Joins: ndwk (~ndwk@user/ndwk)
[01:51:54] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Read error: Connection reset by peer)
[01:51:59] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[01:58:59] *** Quits: koakuma (~k@user/koakuma) (Quit: Leaving.)
[02:05:47] *** Joins: luuk (~luuk@user/luuk)
[02:09:24] *** Quits: jemius (~jemius@p200300d96737c800682dba3c6b6fa8e2.dip0.t-ipconnect.de) (Quit: Leaving)
[02:11:25] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:19:32] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:20:12] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 272 seconds)
[02:30:42] *** Quits: yrlf (~yrlf@omnath.yrlf.at) (Quit: The Lounge - https://thelounge.chat)
[02:31:36] *** Joins: yrlf (~yrlf@omnath.yrlf.at)
[02:37:40] *** Joins: notzmv (~zmv@user/notzmv)
[02:38:23] <trainraider> Can I have my build.zig automatically "git clone" a dependency? I'm having trouble finding a way to call an outside executable without using C.
[02:39:25] *** Joins: bindu_ (~bindu@user/bindu)
[02:39:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[02:39:54] *** Joins: Giovanni (~Giovanni@176.55.166.222)
[02:39:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[02:41:22] *** bindu_ is now known as bindu
[02:42:17] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[02:43:07] <ndwk> You could add the dependency as a git submodule.
[02:48:21] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[02:52:34] *** Quits: rv1sr (~rv1sr@user/rv1sr) ()
[02:55:35] <ndwk> It's not ideal, but you could also use Builder.addSystemCommand.
[02:58:48] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:2846:6042:d084:be62) (Read error: Connection reset by peer)
[02:59:43] *** Joins: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[03:00:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:01:19] <tsmanner> trainraider have you checked out std.ChildProcess? https://github.com/ziglang/zig/blob/master/lib/std/child_process.zig#L364
[03:01:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:15:33] <trainraider> tsmanner, ndwk, thanks for the different options! Btw, it looks like Builder.addSystemCommand and ChildProcess.exec are missing from the std lib documentation online and have to be found in the source code only.
[03:19:44] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 272 seconds)
[03:30:08] *** Joins: koakuma (~koakuma@user/koakuma)
[03:32:46] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[04:09:10] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[04:27:48] *** Quits: amine (~aminechik@user/aminechikhaoui) (Ping timeout: 240 seconds)
[04:34:02] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[04:38:48] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 250 seconds)
[04:43:51] *** Joins: amine (~aminechik@user/aminechikhaoui)
[05:01:15] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:05:16] *** Joins: ur5us__ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[05:05:36] *** Quits: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Read error: Connection reset by peer)
[05:53:55] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[06:02:17] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[06:17:28] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Quit: Leaving)
[06:17:39] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[06:23:14] <tsmanner> trainraider no problem! the std docs are WIP, I think coming after the stage 2 compiler (self hosted) gets farther along. I've had the best luck just cloning the zig repo and poking around in an editor that can collapse all the top-level blocks
[06:31:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[06:34:21] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 252 seconds)
[06:35:53] *** Joins: tomku (~tomku@user/tomku)
[06:36:57] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[06:43:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[06:47:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:49:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[06:50:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:02:28] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:05:04] *** Quits: sebonirc (~sebonirc@8.9.88.219) (Quit: sebonirc)
[07:07:45] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:11:58] *** Quits: ur5us__ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Remote host closed the connection)
[07:13:47] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[07:13:59] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[07:18:36] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Remote host closed the connection)
[07:20:08] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[07:22:32] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[07:35:00] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[07:42:34] *** Quits: trainraider (~trainraid@107-199-92-151.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 272 seconds)
[07:54:57] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[08:03:24] *** Joins: rgrinberg (~textual@177.244.18.30)
[08:11:43] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[08:13:11] *** Parts: bandal (~bandal@209.23.8.246) ()
[08:14:03] *** Joins: sciencerules (~bandal@209.23.8.246)
[08:14:20] *** Quits: ndwk (~ndwk@user/ndwk) ()
[08:32:24] *** Joins: nektro (~meg@75-164-221-110.ptld.qwest.net)
[08:34:53] *** Quits: Giovanni (~Giovanni@176.55.166.222) (Remote host closed the connection)
[08:47:55] *** Quits: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[09:26:02] *** Joins: bozo (~bozo@188.252.187.234)
[09:27:42] *** Quits: bozo_ (~bozo@188.252.189.223) (Ping timeout: 272 seconds)
[10:05:48] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 240 seconds)
[10:09:16] *** Joins: rgrinberg (~textual@177.244.18.30)
[10:16:15] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:31:01] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:40:48] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[10:43:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[10:45:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 252 seconds)
[10:47:50] *** Quits: nektro (~meg@75-164-221-110.ptld.qwest.net) (Quit: WeeChat 3.1)
[10:54:15] *** Quits: d0p1 (~d0p1@gateway/tor-sasl/d0p1) (Ping timeout: 240 seconds)
[10:59:21] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[11:01:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[11:04:29] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:13:21] *** Quits: toulene (~toulene@user/toulene) (Quit: Ping timeout (120 seconds))
[11:16:05] *** Joins: toulene (~toulene@user/toulene)
[11:22:16] *** Joins: MajorBiscuit (~MajorBisc@c-001-018-036.client.tudelft.eduvpn.nl)
[11:23:37] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[11:26:09] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 272 seconds)
[11:27:02] *** Joins: toulene (~toulene@user/toulene)
[11:48:58] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[11:54:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:03:41] *** Quits: toulene (~toulene@user/toulene) (Quit: The Lounge - https://thelounge.chat)
[12:06:36] *** Quits: winter (~winter@user/winter) (Quit: Ping timeout (120 seconds))
[12:09:09] *** Joins: winter (~winter@user/winter)
[12:14:57] *** Quits: winter (~winter@user/winter) (Quit: Ping timeout (120 seconds))
[12:15:25] *** Joins: toulene (~toulene@user/toulene)
[12:17:36] *** Joins: winter (~winter@user/winter)
[12:27:33] *** Joins: xackus (~xackus@185.15.0.3)
[12:36:57] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[12:39:49] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:42:34] *** Joins: pkap (~pkap@193.32.127.224)
[12:50:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:59:02] <pkap> Can I make sure a struct has a certain alignment?
[12:59:53] <ifreund> pkap: you can set the alignment of fields, so yes
[13:00:10] <ifreund> for an extern struct, set the alignment of the first field
[13:01:02] <ifreund> actually, it doesn't matter which field you set the alignment of, the alignment of the struct is always the maximum alignment of the fields
[13:02:39] <pkap> Ah yeah that makes sense.
[13:13:41] <pkap> I'm trying to set the alignment for one field but then I cannot instantiate the struct. Here is what I am trying to do: https://zigbin.io/6b4347
[13:14:51] <pkap> Basically I want some kind of polymorphism, but I'm not sure if the whole thing is even a good Idea.
[13:15:00] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[13:19:56] <pkap> Ah of course I cannot change the the alignment of an integer
[13:30:00] <ifreund> pkap: that's a pointer to an integer, not an integer...
[13:30:21] <ifreund> I think you meant to do `len: u16 align(4),` as the struct field
[13:31:31] <ifreund> don't really follow why you need that alignment here though
[13:32:02] <pkap> ifreund: to make sure I can cast between the two types?
[13:32:39] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[13:33:09] <ifreund> pkap: you can only safely cast between the types if they have a well defined memory layout
[13:33:27] <ifreund> plain structs don't, extern structs for example do
[13:35:37] <pkap> So what I am trying to do is not possible then?
[13:37:05] <ifreund> not with that implementation
[13:38:09] <ifreund> I'd probably do something like `const Node = struct { keys, values, len }` and `const Internal = struct { node: Node, children: [2 * B]?*Node }`
[13:39:03] <ifreund> to go from a *Node to a *Internal for a *Node you know isn't a leaf node, you could then use @fieldParentPtr()
[13:39:48] <ifreund> if you need to, you could also add a tag field to the Node struct to say whether it's a leaf or internal node
[13:41:09] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 252 seconds)
[13:42:25] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[13:49:07] *** Joins: cursey (~cursey@user/cursey)
[13:50:18] *** Quits: winter (~winter@user/winter) (Quit: Ping timeout (120 seconds))
[13:50:39] *** Joins: winter (~winter@user/winter)
[13:57:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:02:03] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:2e86:80a5:f58b:d1a4) (Ping timeout: 252 seconds)
[14:02:59] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:a4f7:3458:36c4:ffd7)
[14:13:51] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[14:22:07] *** Joins: Guest9570 (~Guest95@200116b82cd0b900e7b10f4b711a2e76.dip.versatel-1u1.de)
[14:22:17] *** Quits: Guest9570 (~Guest95@200116b82cd0b900e7b10f4b711a2e76.dip.versatel-1u1.de) (Client Quit)
[14:39:27] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[14:44:27] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[14:47:58] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[15:22:32] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777) (Ping timeout: 240 seconds)
[15:41:06] <pkap> ifreund: Thank you for your help! With your suggestion, I'm not sure how this would work because Internal links to `[2*B]?*Node`, but I also need to link to `[2*B]?*Internal` in the case the tree is continues.
[15:42:35] <ifreund> const internal = @fieldParentPtr(Internal, "node", pointer_to_node);
[15:43:33] <ifreund> I'm not sure how you were planning on storing whether a node is an internal node or a leaf node or if that is known from some other out of band context
[15:44:00] <ifreund> if it needs to be stored I'd suggest adding a enum { internal, leaf } tag to the Node struct as I said
[15:44:36] <ifreund> and note this is just one way to do this kind of thing, there are others as well
[16:13:52] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[16:21:55] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[16:31:12] <pkap> ifreund: ok thanks again! I'll try to implement this :)
[16:35:42] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:47:14] *** Quits: moog_ (~moog@107.126.53.51) (Ping timeout: 272 seconds)
[16:52:04] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:52:26] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Read error: Connection reset by peer)
[16:52:45] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:53:04] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[16:54:07] *** Joins: toulene (~toulene@user/toulene)
[16:57:42] *** Joins: pkap69 (~pkap@193.32.127.230)
[17:01:01] *** Quits: pkap (~pkap@193.32.127.224) (Ping timeout: 256 seconds)
[17:05:02] *** pkap69 is now known as pkap
[17:07:50] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[17:12:42] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 260 seconds)
[17:57:43] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:08:52] *** Joins: arkurious (~arkurious@user/arkurious)
[18:13:49] *** Joins: kiedtl (~kiedtl@kisslinux/kiedtl)
[18:23:30] *** Quits: pkap (~pkap@193.32.127.230) (Quit: Client closed)
[18:25:45] *** Joins: notzmv (~zmv@user/notzmv)
[18:41:40] *** Joins: phaleth (~user@user/phaleth)
[18:54:56] *** Quits: kron (~weechat@user/qaph) (Read error: Connection reset by peer)
[18:55:33] *** Joins: kron (~weechat@user/qaph)
[18:56:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[18:57:17] *** Joins: mikezackles (~mikezackl@gateway/tor-sasl/mikezackles)
[18:58:42] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7:8b7a:60f:54fc:4777)
[18:59:13] *** Joins: moog (~moog@98.97.86.136)
[19:03:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:12:13] *** Quits: ManDeJan (3da94070ba@user/mandejan) (Remote host closed the connection)
[19:12:13] *** Quits: ibokuri (0fab725886@2604:bf00:561:2000::23f) (Remote host closed the connection)
[19:12:13] *** Quits: lizog (75b54f24ba@2604:bf00:561:2000::14d) (Remote host closed the connection)
[19:12:13] *** Quits: powerofzero (c2b6947721@user/powerofzero) (Remote host closed the connection)
[19:12:13] *** Quits: voroskoi (924a802ee9@2604:bf00:561:2000::15c) (Remote host closed the connection)
[19:12:13] *** Quits: patwid (3da977342f@user/patwid) (Remote host closed the connection)
[19:12:13] *** Quits: cyplo (2df7beb64c@2604:bf00:561:2000::28d) (Remote host closed the connection)
[19:12:13] *** Quits: hanna (65c0ed9340@user/hanna) (Remote host closed the connection)
[19:12:13] *** Quits: vrischmann (25460b476c@2604:bf00:561:2000::16c) (Remote host closed the connection)
[19:12:13] *** Quits: patrick (224fa09e8b@fsf/member/patrick) (Remote host closed the connection)
[19:12:13] *** Quits: chiheisen (31e5c22067@2604:bf00:561:2000::229) (Remote host closed the connection)
[19:12:13] *** Quits: jamii (b58b912050@2604:bf00:561:2000::3c3) (Remote host closed the connection)
[19:12:13] *** Quits: sm2n (ae95cb1267@user/sm2n) (Write error: Broken pipe)
[19:12:13] *** Quits: raiaq (0a41c94ab1@user/raiaq) (Remote host closed the connection)
[19:12:13] *** Quits: ifreund (2940d10f8b@user/ifreund) (Remote host closed the connection)
[19:12:13] *** Quits: gjnoonan (cb73e0a324@user/gjnoonan) (Remote host closed the connection)
[19:12:13] *** Quits: fleg (dfbb34cb39@user/fleg) (Remote host closed the connection)
[19:12:13] *** Quits: coder_kalyan (2c72974719@user/coderkalyan) (Write error: Broken pipe)
[19:12:13] *** Quits: philipwhite (062636b2b0@2604:bf00:561:2000::227) (Write error: Broken pipe)
[19:12:13] *** Quits: weslem (32012e016f@2604:bf00:561:2000::12f) (Write error: Broken pipe)
[19:12:13] *** Quits: leon-p (1b22ab9492@2604:bf00:561:2000::18c) (Remote host closed the connection)
[19:12:13] *** Quits: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2) (Remote host closed the connection)
[19:12:13] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Read error: Connection reset by peer)
[19:12:13] *** Quits: slind (e19c209508@2604:bf00:561:2000::17a) (Remote host closed the connection)
[19:12:13] *** Quits: novakane (ca74a093b3@user/novakane) (Remote host closed the connection)
[19:12:13] *** Quits: gpanders_ (be60a9b05a@user/gpanders) (Remote host closed the connection)
[19:12:13] *** Quits: psnszsn (7fe6b73f65@user/psnsn) (Remote host closed the connection)
[19:12:13] *** Quits: phaebz (bdffc84e6f@2604:bf00:561:2000::2f0) (Remote host closed the connection)
[19:12:13] *** Quits: utzig (d5d7f726e3@2604:bf00:561:2000::71) (Remote host closed the connection)
[19:12:14] *** Quits: andrea (3f138254b4@2604:bf00:561:2000::38) (Remote host closed the connection)
[19:12:14] *** Quits: rslabbert (91146de1f6@2604:bf00:561:2000::240) (Remote host closed the connection)
[19:12:14] *** Quits: ugla (ed7b913348@2604:bf00:561:2000::1a3) (Read error: Connection reset by peer)
[19:12:14] *** Quits: bmp (b6cc5e8850@2604:bf00:561:2000::184) (Remote host closed the connection)
[19:12:14] *** Quits: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8) (Remote host closed the connection)
[19:12:14] *** Quits: cnx (c364d5be87@2604:bf00:561:2000::3f) (Remote host closed the connection)
[19:12:14] *** Quits: arcade (52968ed80d@2604:bf00:561:2000::3df) (Remote host closed the connection)
[19:12:17] *** Quits: raghavgururajan (ea769b8000@user/raghavgururajan) (Remote host closed the connection)
[19:12:33] *** Joins: bmp (b6cc5e8850@2604:bf00:561:2000::184)
[19:12:33] *** Joins: ibokuri (0fab725886@2604:bf00:561:2000::23f)
[19:12:33] *** Joins: slind (e19c209508@2604:bf00:561:2000::17a)
[19:12:34] *** Joins: cnx (c364d5be87@2604:bf00:561:2000::3f)
[19:12:34] *** Joins: utzig (d5d7f726e3@2604:bf00:561:2000::71)
[19:12:34] *** Joins: lizog (75b54f24ba@2604:bf00:561:2000::14d)
[19:12:39] *** Joins: arcade (52968ed80d@2604:bf00:561:2000::3df)
[19:12:39] *** Joins: philipwhite (062636b2b0@2604:bf00:561:2000::227)
[19:12:39] *** Joins: hanna (65c0ed9340@2604:bf00:561:2000::267)
[19:12:40] *** Joins: jamii (b58b912050@2604:bf00:561:2000::3c3)
[19:12:40] *** Joins: ifreund (2940d10f8b@2604:bf00:561:2000::29c)
[19:12:40] *** Joins: patrick (224fa09e8b@2604:bf00:561:2000::217)
[19:12:41] *** Joins: rslabbert (91146de1f6@2604:bf00:561:2000::240)
[19:12:41] *** Joins: coder_kalyan (2c72974719@user/coderkalyan)
[19:12:41] *** Joins: raiaq (0a41c94ab1@user/raiaq)
[19:12:41] *** Joins: gjnoonan (cb73e0a324@user/gjnoonan)
[19:12:41] *** Joins: andrea (3f138254b4@2604:bf00:561:2000::38)
[19:12:41] *** Joins: novakane (ca74a093b3@user/novakane)
[19:12:44] *** Quits: hanna (65c0ed9340@2604:bf00:561:2000::267) (Changing host)
[19:12:44] *** Joins: hanna (65c0ed9340@user/hanna)
[19:12:45] *** Quits: patrick (224fa09e8b@2604:bf00:561:2000::217) (Changing host)
[19:12:45] *** Joins: patrick (224fa09e8b@fsf/member/patrick)
[19:12:45] *** Quits: ifreund (2940d10f8b@2604:bf00:561:2000::29c) (Changing host)
[19:12:45] *** Joins: ifreund (2940d10f8b@user/ifreund)
[19:12:48] *** Joins: ManDeJan (3da94070ba@user/mandejan)
[19:12:48] *** Joins: gpanders_ (be60a9b05a@user/gpanders)
[19:12:48] *** Joins: weslem (32012e016f@2604:bf00:561:2000::12f)
[19:12:48] *** Joins: fleg (dfbb34cb39@user/fleg)
[19:12:48] *** Joins: voroskoi (924a802ee9@2604:bf00:561:2000::15c)
[19:12:48] *** Joins: vrischmann (25460b476c@2604:bf00:561:2000::16c)
[19:12:48] *** Joins: tdmm (1c9b9145fc@2604:bf00:561:2000::1c8)
[19:12:50] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:12:50] *** Joins: raghavgururajan (ea769b8000@user/raghavgururajan)
[19:12:53] *** Joins: psnszsn (7fe6b73f65@user/psnsn)
[19:12:56] *** Joins: leon-p (1b22ab9492@2604:bf00:561:2000::18c)
[19:13:03] *** Joins: Ankhers (e99e97ef8e@2604:bf00:561:2000::2a2)
[19:13:03] *** Joins: chiheisen (31e5c22067@2604:bf00:561:2000::229)
[19:13:03] *** Joins: ugla (ed7b913348@2604:bf00:561:2000::1a3)
[19:13:03] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[19:13:03] *** Joins: cyplo (2df7beb64c@2604:bf00:561:2000::28d)
[19:13:03] *** Joins: phaebz (bdffc84e6f@2604:bf00:561:2000::2f0)
[19:13:03] *** Joins: patwid (3da977342f@user/patwid)
[19:13:03] *** Joins: powerofzero (c2b6947721@user/powerofzero)
[19:30:06] *** Quits: VictorMalov[m] (~malvikusm@2001:470:69fc:105::1:bb95) (Quit: You have been kicked for being idle)
[19:41:49] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[19:44:09] *** Joins: slackbot (~RogerBell@108.180.67.193)
[19:59:55] *** Joins: Giovanni (~Giovanni@176.55.166.222)
[20:11:04] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[20:11:28] *** Joins: kron (~weechat@user/qaph)
[20:14:26] *** Joins: trainraider (~trainraid@107-199-92-151.lightspeed.iplsin.sbcglobal.net)
[20:24:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[20:38:19] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[20:52:52] *** Joins: Tekk (~tekk@89.45.224.87)
[20:57:08] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:01:11] *** Quits: trainraider (~trainraid@107-199-92-151.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 245 seconds)
[21:06:52] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:09:25] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[21:10:06] *** Joins: rgrinberg (~textual@177.244.18.30)
[21:13:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed)
[21:14:39] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 256 seconds)
[21:15:43] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:18:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[21:18:50] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:26:36] *** Joins: jemius (~imperator@200116b82d0976009b410920230dc27b.dip.versatel-1u1.de)
[21:33:38] *** Joins: d0p1 (~d0p1@gateway/tor-sasl/d0p1)
[21:43:18] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:30f3:94a8:6231:86ed) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:46:59] *** Quits: freshcoffee (~fresh@user/freshcoffee) (Quit: WeeChat 3.0.1)
[21:47:04] *** Joins: Matthias1 (~Matthias1@8.6.144.116)
[21:48:05] *** Joins: xackus (~xackus@185.15.0.3)
[21:51:34] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:55:00] *** Quits: Snetry (~snetry@dslb-094-220-210-204.094.220.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[21:56:11] *** Joins: Snetry (~snetry@ipservice-092-209-111-242.092.209.pools.vodafone-ip.de)
[22:05:47] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:10:24] *** Joins: sebonirc (~sebonirc@8.9.88.219)
[22:23:33] *** Joins: livoreno (~livoreno@user/notzmv)
[22:23:57] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:29:52] *** Quits: Matthias1 (~Matthias1@8.6.144.116) (Remote host closed the connection)
[22:33:32] *** Quits: Snetry (~snetry@ipservice-092-209-111-242.092.209.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[22:34:40] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:00] *** Joins: Snetry (~snetry@ipservice-092-209-110-103.092.209.pools.vodafone-ip.de)
[22:38:49] *** Joins: rgrinberg (~textual@177.244.18.30)
[22:46:14] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[22:47:20] *** Quits: Snetry (~snetry@ipservice-092-209-110-103.092.209.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[22:51:28] *** Joins: Snetry (~snetry@dslb-094-220-223-247.094.220.pools.vodafone-ip.de)
[22:58:37] *** Quits: Snetry (~snetry@dslb-094-220-223-247.094.220.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[23:01:32] *** Joins: Snetry (~snetry@ipservice-092-209-146-082.092.209.pools.vodafone-ip.de)
[23:07:42] *** Quits: Snetry (~snetry@ipservice-092-209-146-082.092.209.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:10:57] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[23:12:21] *** Joins: [R] (~rs@genoce.org)
[23:14:03] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[23:29:11] *** Quits: rgrinberg (~textual@177.244.18.30) (Ping timeout: 256 seconds)
[23:31:50] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:39:42] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:45:24] *** Quits: MajorBiscuit (~MajorBisc@c-001-018-036.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[23:46:50] *** Joins: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de)
[23:47:18] *** Quits: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de) (Client Quit)
[23:48:27] *** Joins: kenran (~kenran@200116b82b398800867f448303c43c5e.dip.versatel-1u1.de)
[23:55:31] *** Quits: rgrinberg (~textual@177.244.18.30) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:56:29] *** Joins: rgrinberg (~textual@177.244.18.30)
[23:57:34] *** Joins: freshcoffee (~fresh@user/freshcoffee)
[23:59:19] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:b921:6822:fa0e:e017)
