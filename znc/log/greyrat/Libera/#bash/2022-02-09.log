[00:00:27] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:00:44] *** Joins: luva (~luva@185.168.9.233)
[00:01:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:02:39] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[00:02:52] *** Joins: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[00:02:57] *** Joins: meator (~meator@user/meator)
[00:03:08] *** Quits: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[00:04:12] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:05:08] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[00:05:48] <meator> Hello. I'm looking for files in a directory that contain this one line: ".so man3/rand.3". No more, no less. How can I find those files?
[00:06:11] <tirnanog> are your man pages compressed?
[00:06:20] <meator> No.
[00:06:34] <tirnanog> find /usr/share/man -type f -exec grep -l -F '.so man3/rand.3' {} +
[00:06:55] *** Joins: hB7drf (~quassel@user/hB7drf)
[00:07:57] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[00:08:20] <meator> I'm looking for exact match. A matching file can't contain anything else.
[00:08:26] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:08:28] <tirnanog> I know.
[00:08:30] <meator> Just this one line.
[00:08:39] <tirnanog> add -x if you want it to match entire lines.
[00:08:42] *** Joins: luva (~luva@185.168.9.233)
[00:09:03] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:53] <meator> Your grep matches this: https://termbin.com/wmpc
[00:09:56] <larryv> wait do you mean that '.so man3/rand.3' needs to be the *entire contents* of each file?
[00:10:05] <meator> larryv: Yes.
[00:10:07] <tirnanog> oh.
[00:10:11] *** Joins: pj (~pj@ghettoforge/pj)
[00:10:12] <greycat> well, then grep is not your answer
[00:10:31] <greycat> I would write the offending line to a new file of your own creation, and then use cmp.
[00:10:33] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[00:12:32] <meator> cmp compares two files. I have lots of files and I'd like to know which ones contain ".so man3/rand.3".
[00:12:36] <meator> I could do a loop.
[00:12:38] <tirnanog> so, -exec cmp -s {} intended-matching-file \; -o -print
[00:13:11] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:14:07] *** Joins: nyex (~Thunderbi@177.84.107.48)
[00:14:20] <tirnanog> sorry, not -o. thinking backwards.
[00:14:27] <Earnestly> I would
[00:14:28] <Earnestly> checksum
[00:14:32] <Earnestly> And compare that
[00:14:38] <tirnanog> yeah. cmp is faster, though.
[00:14:48] <tirnanog> it will bail out the moment a byte doesn't match.
[00:14:48] <Earnestly> It is?
[00:14:50] <tirnanog> sure.
[00:14:57] <Earnestly> Oh I see what you're doing
[00:14:57] <tirnanog> a message digest function has to consume all.
[00:15:02] <Earnestly> Yes, that'd work too
[00:15:08] <Earnestly> And be better sure
[00:15:09] <meator> Heh.
[00:15:20] <meator> What if there will be a hash collision?
[00:15:26] <Earnestly> Then I'll eat my hat
[00:15:29] <tirnanog> heh heh.
[00:15:40] <Earnestly> My finest tweed hat
[00:15:46] <tirnanog> anywy, find /usr/share/man -type f -exec cmp -s {} intended-matching-file \; -print
[00:15:50] <tirnanog> that should work nicely.
[00:15:57] <greycat> you're going to end up forking at least one process per file no matter how you go about this, so cmp is about the best you're going to get away with
[00:16:02] <tirnanog> right.
[00:16:09] <Earnestly> (well)
[00:16:21] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:16:23] <greycat> Earnestly: 'read' won't handle NUL bytes.
[00:16:27] <tirnanog> unless using a checksumming utility that can process files in batch but I don't care enough to make any other suggestions.
[00:16:42] <tirnanog> and such a utility would stil have to digest each file in full.
[00:16:44] <Earnestly> tirnanog: blake3, (b3sum) can do this and it's wonderful
[00:16:56] <tirnanog> Earnestly: good UI?
[00:16:56] <Earnestly> It's extremely rapid as well because they lowered the rounds
[00:17:02] <tirnanog> nice.
[00:17:02] <Earnestly> tirnanog: Best so far
[00:17:25] <greycat> cmp also happens to be POSIX
[00:17:26] <Earnestly> tirnanog: https://0x0.st/oX2j.txt
[00:17:28] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[00:17:37] <meator> Is an extra file really necessary?
[00:17:46] <Earnestly> meator: For this, yes
[00:18:04] <Earnestly> It has to exist in some form either way, even if temporarily
[00:18:19] <Earnestly> meator: You could
[00:18:35] <Earnestly> You could use awk to read the file.  Check if it matches, and also check NR
[00:18:40] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:47] <tirnanog> it will finish well before the time in which we have been discussing it.
[00:19:40] <Earnestly> meator: If that line exists as the first line only, then checking that it matches and the file is only one line long is a possible approach
[00:20:12] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:14] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[00:20:21] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[00:20:36] <meator> echo ".so man3/rand.3" | find * -exec cmp - '{}' Oh that won't work
[00:20:42] <Earnestly> And if that /is/ the case, then you can filter all files which are only one-line long, and then use grep lol
[00:20:47] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:21:11] <tirnanog> yes '.so man3/rand.3' | ... (maybe)
[00:21:18] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[00:21:20] <Earnestly> hah
[00:21:21] <emanuele6> no, that will not work either
[00:21:28] <Earnestly> Imagine a usecase for yes
[00:21:31] <tirnanog> oh, of course it wouldn't. never mind.
[00:21:50] <tirnanog> nor would it.
[00:21:52] <tirnanog> or*
[00:22:00] <tirnanog> damn you. now I have to try it.
[00:22:51] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[00:22:55] <tirnanog> nope. oh well.
[00:22:57] <emanuele6> no, it can't work
[00:23:33] <greycat> Generate a temp file using your system's temp file generation tool, assuming it has one.  Write the line you want into that temp file.  Set up a trap to remove it later.  Then LOOP over the files and call cmp once per file, using the iterator variable and your temp file as arguments.
[00:23:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:49] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[00:23:55] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[00:24:00] <tirnanog> but muh temp files!
[00:24:03] <greycat> and probably the -s option, depending on what you want
[00:24:10] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:24:28] <greycat> if you have a religious objection or an allergy to temp files, let me know now, so I can /ignore you
[00:25:07] <Earnestly> find . -exec awk 'END {if(NR == 1 && $0 == ".so man3/rand.3") print FILENAME}' # hmm
[00:25:30] <emanuele6> $0 in END is not portable
[00:25:30] <Earnestly> That'd need ;
[00:25:43] <Earnestly> Yeah I'm going to go with gawk and use ENDFILE
[00:25:53] <Earnestly> And FNR
[00:26:00] <emanuele6> also that only works if you allow an optional newline at the end
[00:26:08] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[00:26:16] <emanuele6> so not **exactly** ".so man3/rand.3"
[00:26:24] <Earnestly> That is a fair point
[00:26:29] <Earnestly> meator: See what you've done
[00:26:37] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[00:27:01] <tirnanog> yep. should have just ran with it.
[00:27:25] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:27:43] *** Joins: luva (~luva@185.168.9.233)
[00:28:31] <greycat> Earnestly: does that handle the case where someone puts a carriage return at the end of the single line, or a NUL byte?
[00:29:10] *** Joins: hB7drf (~quassel@user/hB7drf)
[00:29:22] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[00:29:56] <greycat> You can definitely get away with a reading loop, and not having to fork processes, if you do all of this in some other language that's not bash or sh.
[00:30:04] <greycat> But I'm not sure awk is such a language either.
[00:30:50] <greycat> perl and tcl can both handle reading NUL bytes from files, for example
[00:31:04] <Earnestly> # s='.so man3/rand.3' printf %s "$s" > noeol; printf '%s\r' "$s" > creol; printf '%s\0' > nuleol; find . -exec gawk 'END {if(FNR==1 && $0==".so man3/rand.3") print FILENAME}' {} +
[00:31:06] <shbot> Earnestly: gawk: warning: command line argument `.' is a directory: skipped
[00:31:28] <Earnestly> # s='.so man3/rand.3' printf %s "$s" > noeol; printf '%s\r' "$s" > creol; printf '%s\0' > nuleol; find *eol -exec gawk 'END {if(FNR==1 && $0==".so man3/rand.3") print FILENAME}' {} +
[00:31:30] <shbot> Earnestly: no output
[00:31:42] <Earnestly> None of them match
[00:31:49] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[00:32:01] <Earnestly> # s='.so man3/rand.3'; printf '%s\n' "$s" > saneeol; printf %s "$s" > noeol; printf '%s\r' "$s" > creol; printf '%s\0' > nuleol; find *eol -exec gawk 'END {if(FNR==1 && $0==".so man3/rand.3") print FILENAME}' {} +
[00:32:03] <shbot> Earnestly: saneeol
[00:32:11] <Earnestly> First one was broken, but same result
[00:32:13] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[00:32:23] <Earnestly> (I forgot to add ; after s= before printf)
[00:33:05] *** Joins: zebrag (~chris@user/zebrag)
[00:34:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:54] <tirnanog> find -type f -exec perl -0nE 'say $ARGV if $_ eq ".so man3/rand.3\n"' -- {} +
[00:35:01] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[00:35:11] <tirnanog> won't handle nul bytes, of course.
[00:35:19] <Earnestly> I do still think the cmp is elegant
[00:35:23] <tirnanog> I concur.
[00:35:41] <tirnanog> but muh transient files.
[00:35:44] <Earnestly> Could be nicer if it didn't need to fork a bunch, but in principle as a '4GL' approach, is nice
[00:35:45] <greycat> why doesn't your perl solution handle NUL bytes?
[00:35:48] <tirnanog> always seems to be an objection.
[00:36:15] <tirnanog> greycat: it could in principle, but I'm being lazy and using -0 and -n there.
[00:36:28] <Earnestly> After reading backreference on tmpfiles, I have come to embrace the tmpfile.  In fact, I use tmp directories and spam tmp files below it like memory allocation
[00:37:22] <meator> If a temp file is necessary, then it is necessary. I don't know awk, so I'll loop with cmp.
[00:37:23] <meator> At a first glance it seemed that this problem would have some smart solution, but I'll use what I have.
[00:37:41] <emanuele6> cmp is the smart solution.
[00:37:52] <emanuele6> or use perl to avoid forks
[00:38:05] <meator> And doesn't grep have some magic "match only first N lines" flag?
[00:38:20] *** Quits: foul_owl (~kerry@94.140.8.51) (Read error: Connection reset by peer)
[00:38:33] <emanuele6> you said it must contain that string exactly. not that it must contain it in the first line.
[00:38:43] *** Quits: reallymemorable (~reallymem@2601:180:8300:8fd0:4812:9a4c:6b8c:661c) (Quit: Leaving...)
[00:39:10] <tirnanog> greycat: to clarify, the combination of -n0 would entail more than one (implicit) readline for a given file being processed, in the event that it contains a NUL byte. perl is capable of more, of course, but it would need to be fleshed out a little further.
[00:39:31] <tirnanog> I didn't bother because I expect the input to be bereft of NUL bytes.
[00:41:50] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:e1f9:ce12:6dac:b5a7)
[00:42:36] <tirnanog> actually, it's easily rectified.
[00:42:41] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[00:42:47] <tirnanog> drop -0 and add BEGIN { local $/ } to the code.
[00:43:15] <greycat> emanuele6: someone asked whether that line had to be the "exact content" of the file, and it was confirmed as such
[00:43:31] <emanuele6> exactly
[00:43:38] <greycat> 15:39  larryv> wait do you mean that '.so man3/rand.3' needs to be the *entire contents* of each file?
[00:43:40] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[00:43:49] <emanuele6> that is why i am confused by that question <meator > And doesn't grep have some magic "match only first N lines" flag?
[00:44:03] <greycat> The goal makes very little sense to me.
[00:44:11] <tirnanog> n.b. this matches for me: printf '\000\001' > testfile; find . -type f -exec perl -nE 'BEGIN { local $/ } say $ARGV if $_ eq "\000\001"' -- {} +
[00:44:34] *** Quits: drewlander (~drewlande@74.196.20.3) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[00:45:32] <Earnestly> meator: gnu grep has -m, but it just means grep exits after first match.  There may be more
[00:45:55] <Earnestly> (And doesn't mean anything about pre/post content around match)
[00:46:31] <meator> Sorry, my mistake. It wouldn't help. It would correctly ignore https://termbin.com/wmpc but it would match https://termbin.com/e5ih.
[00:46:49] <tirnanog> whaaat.
[00:47:02] <tirnanog> after all that. lol.
[00:48:32] <tirnanog> gawk would be fine then.
[00:48:54] <emanuele6> tirnanog: i think he's saying that he realised that his suggestion of using -m1 with grep would not work; he's not saying that is what he wants
[00:49:04] <tirnanog> oh.
[00:49:09] <tirnanog> in that case, phew.
[00:49:37] <meator> emanuele6: Yes, both of these shouldn't match.
[00:49:37] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:e1f9:ce12:6dac:b5a7) (Quit: Textual IRC Client: www.textualapp.com)
[00:50:01] <Earnestly> GNU wc (was using --files0-from=) displays the filenames using $'' style quoting, TIL
[00:50:17] *** Joins: drewlander (~drewlande@74.196.20.3)
[00:50:31] <wwilliam> Is there a way to know when a file was created?
[00:50:39] <emanuele6> no
[00:50:42] <wwilliam> not ctime mtime or atime
[00:50:47] <tirnanog> platform-dependent.
[00:50:54] <wwilliam> thanks emanuele6
[00:50:59] <tirnanog> some linux filesystems support birth times, for instance.
[00:51:18] <wwilliam> How is that?
[00:51:19] <Earnestly> It's almost all now, with recent kernel
[00:51:31] <tirnanog> wwilliam: read the man page for the stat utility.
[00:51:33] <Earnestly> 'btime', even ext4 does it (has for years)
[00:51:41] <Earnestly> Because of new statx(2) syscall afair
[00:51:42] <tirnanog> it's in there.
[00:52:02] <tirnanog> Earnestly: correct.
[00:52:04] <emanuele6> well, then   stat -c %W /path/to/file   if you assume that the file system supports it
[00:52:39] * emanuele6 didn't know about birth time
[00:53:51] *** Joins: foul_owl (~kerry@23.82.194.73)
[00:54:39] <wwilliam> Thank you all.
[00:54:41] *** Joins: hB7drf (~quassel@user/hB7drf)
[00:55:28] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (Quit: leaving)
[00:56:16] <meator> How would the awk solution work? Would it parse the file twice, once to get number of lines and once to test the match?
[00:57:16] <tirnanog> I'm not so good with awk, but doesn't, as far as I can tell.
[00:57:25] <tirnanog> as in, I don't see how it's an applicable solution.
[00:58:09] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[00:58:38] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (Quit: WeeChat 2.8)
[00:58:49] <emanuele6> gawk 'FNR == 2 { nextfile } ENDFILE { if ($0 == "something") print FILENAME }'
[00:58:54] *** Joins: volga629 (~volga629@72.139.93.26)
[00:58:54] <emanuele6> err
[00:58:56] *** Joins: k8yun (~k8yun@user/k8yun)
[00:59:01] <emanuele6> gawk 'FNR == 2 { nextfile } ENDFILE { if (FNR == 1 && $0 == "something") print FILENAME }'
[00:59:11] <meator> I'm asking to see if specifying two conditions (line count and the match) would do unnecessary parsing.
[00:59:14] <emanuele6> but obviously that is good at all
[00:59:38] <emanuele6> since it allows an optional newline at the end, doesn't handle NUL, etc
[00:59:51] <tirnanog> the answer is no, meator. that's not how it works.
[01:00:22] <emanuele6> s/is good/is not good/
[01:01:05] <tirnanog> the perl solution works by setting the value of $/ to nothing (the input record separator). effectively, each operand will be treated as a file to be read in full, so it's just a matter of comparing $_ to something.
[01:01:53] <greycat> I'm wondering what the real goal is.
[01:01:59] *** Joins: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[01:02:04] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[01:02:26] <tirnanog> identifying man pages that 'link' to another that a particular distro managed to bungle the packaging for.
[01:02:29] <yustin> meator: cat file | if [ $(wc -l) -eq 1 ]; then grep "foobar" file ; fi
[01:02:47] <emanuele6> what?
[01:03:03] <emanuele6> yustin: no, that doesn't even work
[01:03:12] <mknod> yustin, wc will consume the input. Nothing left for grep.
[01:03:20] <emanuele6> mknod: grep is reading file
[01:03:24] <greycat> they did pass "file" a second time
[01:03:24] <yustin> read again !
[01:03:36] <mknod> emanuele6, ah, true.
[01:03:43] <emanuele6> but grep is will print the line
[01:03:46] <emanuele6> not the file
[01:04:05] <greycat> there are so many flaws in this code
[01:04:12] <emanuele6> also grep has the same problem as awk
[01:04:14] *** Quits: samgranieri (~samgranie@user/samgranieri) (Quit: samgranieri)
[01:04:18] <emanuele6> it allows an optional newline at the end
[01:04:25] *** Quits: magla (~gelignite@d5367123.access.ecotel.net) (Quit: Stay safe!)
[01:04:26] <emanuele6> and you would need -x
[01:04:37] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[01:04:45] <meator> Well you have answered my question. Thanks! I should really learn shell scripting some day. I can't get into my head that variables don't have types and the quoting hell.
[01:04:50] <greycat> you all know cmp is the best way
[01:04:54] <tirnanog> yep.
[01:04:57] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[01:05:13] <emanuele6> cmp is the best
[01:05:34] <tirnanog> the perl solution has the advantage of needing to be forked fewer times but the disadvantage of needing to read the entire file.
[01:05:43] *** Quits: Error (~err@user/error) (Quit: When we hang the capitalists they will sell us the rope we use - Joseph Stalin)
[01:05:52] <emanuele6> well, you don't have to read the entire file
[01:06:05] *** Joins: omnio (~omnio@user/omnio)
[01:06:16] <tirnanog> no, I don't. but I'm done fiddling with this problem space at this point.
[01:06:26] <tirnanog> the original suggestion was fine.
[01:07:05] <yustin> cat $file | if [ $(wc -l) -eq 1 ]; then grep -H "foobar" $file | cut -d: -f1 ; fi   :P~~~~~~~~~~~~~
[01:07:13] <tirnanog> emanuele6: if anything, it was more to demonstrate that perl has no issues dealing with arbtirary byte sequences.
[01:07:30] <Earnestly> I'd hope so
[01:07:41] <tirnanog> NUL isn't special at al, as far as string handling is concerned.
[01:09:13] <emanuele6> another alternative is jq
[01:10:07] <emanuele6> find -type f -exec jq -sR 'select(. == "something") | input_filename' {} \;
[01:10:29] <emanuele6> but that also has to read the entire file and (at least in this form) has to be run once per file
[01:10:41] <emanuele6> but at least it handles NUL and newlines correctly
[01:11:12] <emanuele6> ( i forgot -r )
[01:11:32] * Earnestly should learn some poke
[01:11:42] <Earnestly> https://pokology.org/learn-poke-in-y-minutes.html
[01:13:00] <emanuele6> interesting
[01:15:24] <mknod> meator, I haven't read the whole conversation but are you still trying to find those files that only contains "this line"?
[01:15:33] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[01:15:51] <greycat> 90% of the discussion has been academic bunk
[01:16:50] <Earnestly> I thought that was the purpose
[01:16:53] *** Joins: rcernin (~rcernin@124.190.132.36)
[01:18:14] <Earnestly> This poke is a lot more involved than I remember
[01:18:22] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (Client Quit)
[01:18:25] *** Parts: omnio (~omnio@user/omnio) (Konversation terminated!)
[01:18:28] <Earnestly> I mean, they have a standard library: https://0x0.st/oX_z.txt
[01:18:32] *** Joins: Error (~err@ethicalslacker.net)
[01:18:32] *** Quits: Error (~err@ethicalslacker.net) (Changing host)
[01:18:32] *** Joins: Error (~err@user/error)
[01:18:46] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[01:19:25] <emanuele6> wow, there is a #poke channel with 26 users
[01:20:07] <meator> Thanks again for the solution. I have to leave now.
[01:20:50] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[01:22:39] *** Quits: bash-libera (~bash-libe@h216-170-204-47.hrcnut.broadband.dynamic.tds.net) (Quit: Leaving...)
[01:23:42] <mknod> find ... -exec awk 'NR == 1 && $0 == "this line" { m = 1 } NR > 1 { m = 0; exit } END { exit ! m }' {} \; -print looked simple enough. Â¯\_(ãƒ„)_/Â¯
[01:24:52] <Earnestly> mknod: boo, you have to exec once
[01:25:24] <Earnestly> (Don't worry, I think this topic has exhausted)
[01:28:11] *** Quits: greycat (~greg@209.142.155.49) (Ping timeout: 256 seconds)
[01:30:40] *** Quits: Minvera (~Minvera@user/Minvera) (Quit: Leaving)
[01:32:33] *** Joins: greycat (~greg@209.142.155.49)
[01:32:51] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 245 seconds)
[01:33:12] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[01:33:27] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:35:10] *** Quits: TenochSLB (~Tenochyy@2600:1700:9780:19c0:1ebf:ceff:fe01:4aa8) (Quit: Leaving)
[01:36:07] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[01:39:30] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:39:46] *** Quits: nyex (~Thunderbi@177.84.107.48) (Remote host closed the connection)
[01:40:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[01:40:35] *** Joins: unop (~unop@195.91.14.193)
[01:42:57] *** Joins: hB7drf (~quassel@user/hB7drf)
[01:44:44] *** Joins: rgrinberg (~textual@187.223.115.137)
[01:45:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[01:46:08] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[01:50:03] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[01:53:32] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[01:53:51] *** Joins: luva (~luva@185.168.9.233)
[01:55:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:55:18] *** Quits: bluedust (~bluedust@117.204.128.175) (Remote host closed the connection)
[01:57:26] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:58:43] *** Joins: hB7drf (~quassel@user/hB7drf)
[01:59:51] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[02:01:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:02:45] *** Quits: Guest9534 (~Guest@181.91.159.32) (Remote host closed the connection)
[02:02:52] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (Quit: WeeChat 2.8)
[02:02:55] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:03:44] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[02:03:53] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:05:36] *** Joins: sfenik (~sfenik@78.156.14.175)
[02:07:00] *** Quits: sfenik (~sfenik@78.156.14.175) (Client Quit)
[02:07:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:07:37] *** Quits: kj- (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[02:08:29] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[02:09:24] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[02:09:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:10:53] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[02:14:00] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[02:14:19] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[02:14:46] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.4)
[02:16:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[02:16:42] *** Joins: hB7drf (~quassel@user/hB7drf)
[02:16:45] *** Quits: moth (~moth@2600:1700:5d5c:110:c4f2:36a3:3133:522b) (Remote host closed the connection)
[02:17:03] *** Joins: moth (~moth@2600:1700:5d5c:110:2593:f021:bb3d:e62e)
[02:20:19] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:20:34] *** Joins: vysn (~vysn@user/vysn)
[02:21:38] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[02:25:13] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[02:25:39] *** Joins: sfenik (~sfenik@78.156.14.175)
[02:25:39] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:27:48] *** Joins: hB7drf (~quassel@user/hB7drf)
[02:28:29] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[02:28:36] *** Joins: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[02:29:03] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:29:20] *** Joins: charlie[m] (~charliema@2001:470:69fc:105::1:ada6)
[02:29:25] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 240 seconds)
[02:31:53] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:33:20] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:34:22] *** Quits: sfenik (~sfenik@78.156.14.175) (Quit: Client closed)
[02:34:46] *** Joins: foul_owl (~kerry@23.82.194.73)
[02:35:32] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:38:18] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[02:39:40] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[02:39:58] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf)
[02:40:03] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf) (Client Quit)
[02:40:04] *** Joins: yitz (~yitz@exercism/yitz)
[02:40:11] *** Joins: yagamilito39 (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf)
[02:41:05] *** Quits: yagamilito39 (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf) (Client Quit)
[02:41:20] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf)
[02:41:42] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:42:50] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[02:43:58] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:45:25] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:48:36] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[02:49:13] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[02:49:47] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 256 seconds)
[02:51:49] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[02:53:42] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Quit: john_johnk)
[02:54:03] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Changing host)
[02:54:03] *** Joins: wallsY (~weechat@user/wallsY)
[02:54:26] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:56:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[03:01:57] *** Joins: hB7drf (~quassel@user/hB7drf)
[03:02:25] *** Quits: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:02:33] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[03:05:11] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[03:05:24] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:e064:d34a:5b21:2bf) (Quit: Client closed)
[03:06:11] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:07:41] *** Quits: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) (Ping timeout: 256 seconds)
[03:10:47] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[03:12:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:12:04] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:14:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:14:29] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:14:46] *** Joins: wallsY__ (~wallsY@c-73-211-135-175.hsd1.il.comcast.net)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:37] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:16:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Client Quit)
[03:17:00] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[03:17:13] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[03:17:50] *** Joins: oarion7 (anonymous@user/oarion7)
[03:18:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[03:19:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:25] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[03:20:27] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:46] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:23:58] *** Joins: hB7drf (~quassel@user/hB7drf)
[03:24:03] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 250 seconds)
[03:25:05] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Quit: Leaving)
[03:25:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[03:25:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:26:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:30:18] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[03:31:01] *** Joins: foul_owl (~kerry@217.114.38.61)
[03:31:11] *** Quits: mute (m@crx.fan) (Ping timeout: 245 seconds)
[03:33:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 240 seconds)
[03:33:35] *** Quits: wallsY__ (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Ping timeout: 250 seconds)
[03:33:59] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:34:33] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:36:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:36:36] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[03:39:06] *** Joins: hB7drf (~quassel@user/hB7drf)
[03:39:40] *** Joins: wallsY__ (~wallsY@c-73-211-135-175.hsd1.il.comcast.net)
[03:40:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[03:41:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:42:49] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:44:08] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:45:05] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 256 seconds)
[03:52:08] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[03:54:54] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[03:55:31] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:55:44] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[03:55:55] *** Joins: bluedust (~bluedust@117.204.128.175)
[03:56:07] *** Joins: crashrep (~crashrep@user/crashrep)
[03:58:41] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[03:58:56] *** Joins: hB7drf (~quassel@user/hB7drf)
[03:59:48] *** Joins: kj (~kj@kj.aerisnetwork.net)
[04:00:37] *** Quits: bluedust (~bluedust@117.204.128.175) (Ping timeout: 240 seconds)
[04:02:39] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:04:26] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[04:04:27] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Read error: Connection reset by peer)
[04:04:43] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[04:04:45] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[04:05:40] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:06:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:06:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:06:25] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:08:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:10:09] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[04:10:56] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:11:48] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[04:12:43] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[04:15:07] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:15:49] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[04:25:52] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[04:25:59] *** Joins: hB7drf (~quassel@user/hB7drf)
[04:26:21] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:26:43] *** Joins: volga629 (~volga629@72.139.93.26)
[04:29:01] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[04:30:00] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:04] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[04:30:35] *** Joins: bertptrs (~quassel@user/bertptrs)
[04:32:18] *** Quits: sinaowolabi (~SinaOwola@169.159.72.170) (Ping timeout: 260 seconds)
[04:32:21] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[04:33:37] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[04:33:55] *** Joins: hB7drf (~quassel@user/hB7drf)
[04:34:23] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:34:42] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[04:35:14] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[04:36:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:37:17] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[04:37:57] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[04:38:42] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[04:38:59] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Read error: Connection reset by peer)
[04:39:42] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[04:42:38] *** Joins: hB7drf (~quassel@user/hB7drf)
[04:42:55] *** Quits: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr) (Quit: leaving)
[04:43:42] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:43:57] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[04:44:09] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5)
[04:44:54] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[04:45:04] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[04:45:57] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:46:18] *** Quits: wallsY__ (~wallsY@c-73-211-135-175.hsd1.il.comcast.net) (Ping timeout: 260 seconds)
[04:47:59] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:48:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[04:49:07] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:50:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:51:58] *** Joins: hB7drf (~quassel@user/hB7drf)
[04:53:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:53:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:53:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:53:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:54:26] *** Joins: mat001 (~mat001@72.28.108.216)
[04:55:06] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Remote host closed the connection)
[04:55:39] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[04:55:50] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:56:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:59:34] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:59:47] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[04:59:56] *** Quits: zro (~zro@user/zro) (Ping timeout: 245 seconds)
[04:59:57] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 240 seconds)
[05:00:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:1975:85fc:6d44:5df5) (Ping timeout: 260 seconds)
[05:02:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[05:02:38] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[05:03:18] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:06:59] *** Joins: rcernin (~rcernin@124.190.132.36)
[05:08:55] *** Joins: hB7drf (~quassel@user/hB7drf)
[05:11:55] *** Parts: sixwheeledbeast (~zem@user/sixwheeledbeast) (Leaving.)
[05:11:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[05:14:17] *** Joins: zro (~zro@user/zro)
[05:15:25] *** Quits: curvv (~quetzlcoa@user/curvv) (Ping timeout: 256 seconds)
[05:16:01] *** Joins: curvv (~quetzlcoa@192-143-84-250.ip.airmobile.co.za)
[05:16:01] *** Quits: curvv (~quetzlcoa@192-143-84-250.ip.airmobile.co.za) (Changing host)
[05:16:01] *** Joins: curvv (~quetzlcoa@user/curvv)
[05:17:47] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[05:17:55] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[05:20:22] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[05:21:05] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[05:22:47] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:33] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:30:56] *** Joins: ano (~ano@user/ano)
[05:31:13] *** Joins: hB7drf (~quassel@user/hB7drf)
[05:33:21] *** Joins: vlm (~vlm@user/vlm)
[05:34:41] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[05:35:52] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[05:38:25] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 256 seconds)
[05:39:47] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[05:39:51] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[05:40:07] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[05:42:51] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[05:44:53] *** Joins: hB7drf (~quassel@user/hB7drf)
[05:48:13] *** Joins: tangy (~tangy@user/tangy)
[05:48:31] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[05:50:45] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[05:51:20] *** Joins: pj (~pj@ghettoforge/pj)
[05:53:57] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[05:56:33] *** Joins: rcernin (~rcernin@124.190.132.36)
[05:57:04] *** Joins: hB7drf (~quassel@user/hB7drf)
[05:59:23] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:00:08] *** Joins: fef (~thedawn@user/thedawn)
[06:00:17] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[06:04:48] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[06:05:05] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[06:08:57] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[06:09:27] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[06:12:25] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[06:13:19] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[06:13:33] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[06:14:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:14:45] *** Joins: hB7drf (~quassel@user/hB7drf)
[06:15:18] *** Joins: mute1 (~mute@129.153.173.71)
[06:15:51] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[06:15:59] *** Quits: mute1 (~mute@129.153.173.71) (Client Quit)
[06:16:17] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:16:36] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[06:17:50] *** Joins: luckiswithme (~luckiswit@149.167.138.139)
[06:18:05] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[06:18:54] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[06:22:51] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[06:29:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[06:31:00] *** Joins: k8yun (~k8yun@user/k8yun)
[06:31:39] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[06:32:11] *** Joins: junebug (~junebug@2600:1700:3db0:2540:8663:d736:8b67:a99f)
[06:33:30] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[06:33:47] *** Joins: hub (~hub@user/hub)
[06:41:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[06:42:51] *** Joins: pj (~pj@ghettoforge/pj)
[06:44:43] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[06:46:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[06:47:33] *** Quits: jos1 (~jos3@dyndsl-091-096-032-171.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[06:50:28] *** Joins: A|an (~Alan@173.218.175.171)
[06:51:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[06:55:42] *** Joins: luva3 (~luva@185.168.9.234)
[06:56:19] <dfdx> if i want to rename a bunch of files (say, mp3s) in a directory, i can do something like this: for file in *.mp3; do track="${file%% *}"; title="${file#* }"; ... etc...; mv "$file" "$track $artist $title"; done
[06:56:43] <dfdx> but suppose those mp3s are scattered among many subdirectories. Do I have to use find -exec?
[06:57:43] *** Joins: hB7drf (~quassel@user/hB7drf)
[06:58:38] <tirnanog> -execdir is probably a better option
[06:59:12] <greycat> globstar is another choice
[06:59:15] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[06:59:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:59:25] *** Quits: luva (~luva@185.168.9.233) (Ping timeout: 250 seconds)
[06:59:25] *** luva3 is now known as luva
[06:59:47] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[07:00:31] *** Joins: jos1 (~jos3@host-091-097-185-100.ewe-ip-backbone.de)
[07:01:23] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:02:25] <dfdx> thanks for the pointers. I'll look into those.
[07:04:03] *** Joins: mute (~mute@150.136.80.131)
[07:05:43] <tirnanog> for instance, find ... -name '*.mp3' -execdir sh -c 'for f; do mv -- "$f" ...; done' sh-mv {} +
[07:06:13] <tirnanog> you would, of course, need an implementation that supports -execdir and, if it does, be aware that the names will begin with ./ in the course of transforming them.
[07:06:21] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[07:08:02] <tirnanog> !findloop
[07:08:02] <greybot> while IFS= read -r -d '' file; do something "$file"; done < <(find /foo -print0)
[07:08:07] <tirnanog> yet another method, if you have -print0 available.
[07:09:19] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:09:46] <kurahaupo> Or Â« find -printf 'other-stuff\t%p\0' Â» if you need to include other details (such as timestamps)
[07:11:12] *** Joins: hB7drf (~quassel@user/hB7drf)
[07:11:14] <dfdx> tirnanog: what does "sh-mv" do in your find example? I'm following everything up to that point.
[07:11:35] <tirnanog> it's the zeroeth argument. without it, you'd lose the first pathname from each batch.
[07:12:17] <tirnanog> # sh -c 'echo "$0"' blah
[07:12:18] <shbot> tirnanog: blah
[07:12:28] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:52] <e36freak> you can put anything there, conventionally people usually just put an underscore
[07:13:09] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:13:26] <tirnanog> it can affect errors, though.
[07:13:30] *** Joins: k8yun_ (~k8yun@user/k8yun)
[07:14:59] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:15:44] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[07:16:30] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[07:17:10] <e36freak> could make things interesting
[07:17:14] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 252 seconds)
[07:19:02] *** Joins: luva8 (~luva@37.120.197.53)
[07:19:09] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[07:19:17] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[07:19:37] *** Joins: hB7drf (~quassel@user/hB7drf)
[07:19:59] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[07:22:55] *** Quits: luva (~luva@185.168.9.234) (Ping timeout: 256 seconds)
[07:22:55] *** luva8 is now known as luva
[07:23:15] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:23:32] *** Joins: zro (~zro@user/zro)
[07:24:12] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:25:17] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[07:26:45] *** Quits: qub411 (~user@118.209.248.55) (Quit: WeeChat 3.4)
[07:28:44] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:28:55] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:31:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[07:31:50] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:33:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:8663:d736:8b67:a99f) (Ping timeout: 240 seconds)
[07:33:41] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:35:37] *** Quits: oarion7 (anonymous@user/oarion7) (Ping timeout: 256 seconds)
[07:35:43] *** Quits: zro (~zro@user/zro) (Ping timeout: 256 seconds)
[07:36:00] *** Quits: llua (~llua@zsh/developer/llua) (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
[07:36:18] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c292:9d72:3880:e24c)
[07:37:08] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:37:34] *** Joins: qub411 (~user@118.209.248.55)
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:41:02] *** Joins: hB7drf (~quassel@user/hB7drf)
[07:41:28] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:44:13] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[07:50:21] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[07:53:09] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[07:53:17] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[07:54:50] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:55:26] *** Joins: hB7drf (~quassel@user/hB7drf)
[07:56:00] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:56:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:56:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:58:27] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[07:58:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[08:00:43] *** Quits: mnabid (uid448607@user/mnabid) (Quit: Connection closed for inactivity)
[08:00:57] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[08:02:49] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[08:04:00] *** Quits: k8yun_ (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[08:06:16] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c292:9d72:3880:e24c) (Quit: Leaving)
[08:06:32] *** Quits: mknod (~mknod@user/mknod) (Ping timeout: 240 seconds)
[08:08:12] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[08:12:51] *** Quits: N4buc0- (~N4buc0@177.16.170.138) (Ping timeout: 250 seconds)
[08:13:13] *** Joins: hB7drf (~quassel@user/hB7drf)
[08:16:25] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[08:17:19] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[08:18:06] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[08:18:14] *** Joins: fluffywolf (~furrywolf@172.58.44.237)
[08:19:08] <fluffywolf> I'm trying to debug a script (not mine).  It's doing command substitution with foo="$(bar)".  it seems that if bar outputs things with backslashes, say, abc\rdef, bash is parsing that \r into a carriage return?  is this correct?
[08:19:39] <larryv> it is not correct
[08:19:40] <tirnanog> no, it is not.
[08:19:42] *** Joins: libc (~archer@user/tessio)
[08:20:13] <e36freak> fluffywolf: how are you printing "$foo" ?
[08:20:22] <e36freak> or how is it doing it
[08:20:56] <fluffywolf> actually, if it matters, it's doing bar(){baz} then later doing $(bar), calling its own function.
[08:21:17] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[08:21:18] * fluffywolf is trying to untangle a 890KB blob of bash
[08:21:32] <e36freak> doesn't matter
[08:21:51] <e36freak> command subsitution won't expand any backslash escape sequences
[08:21:54] <e36freak> it's happening somewhere else
[08:21:59] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[08:22:11] <fluffywolf> I'm printing it with echo "$foo", and getting carriage returns in the output.  not echo -e, notably.  also, it breaks parsing further on.
[08:22:16] <e36freak> either when the variable is printed/used, or in that function it's not printing them literally like you think
[08:22:35] <e36freak> what's in the function?
[08:24:17] <fluffywolf> ...  that's funky.  if I copy the relevant lines out of the blobscript and into a test case, they work as I expect.
[08:24:18] <tirnanog> echo is not trustworthy.
[08:24:25] <e36freak> also true
[08:24:28] <e36freak> !echo
[08:24:29] <greybot> echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[08:25:05] <tirnanog> in particular ...
[08:25:12] <tirnanog> # shopt -s xpg_echo; echo 'a\rb' | od -An -a
[08:25:14] <shbot> tirnanog:    a  cr   b  nl
[08:25:18] <e36freak> what if you printf '%s\n' "$var" instead of echo
[08:27:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[08:28:55] <fluffywolf> that works better.  so echo is doing weird things.  the script is full of fun like echo "$@" | sed 's,\\\\,\\\\\\\\,g'....
[08:29:22] <larryv> :-/
[08:29:41] <e36freak> burn it
[08:29:58] <e36freak> kill it with fire
[08:29:59] <tirnanog> echo "$@" is just stupid.
[08:31:07] <fluffywolf> it's winetricks.  it's 890KB of awful.
[08:31:11] <tirnanog> oh man.
[08:31:16] <tirnanog> that I can well believe.
[08:32:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:32:16] <tirnanog> indeed, there was a sort of village idiot in this channel for a time who was in the habit of contributing 'fixes' to a variety of projects, all the while purporting to be a shell scripting expert. I recall winetricks being among them.
[08:32:36] *** Quits: karstensrage (~karstensr@user/karstensrage) (Ping timeout: 250 seconds)
[08:32:38] *** Joins: karstensrage_ (~karstensr@nibbler.warped.com)
[08:32:56] <fluffywolf> why does my test script, with code copied directly from the script, behave differently?  heh
[08:33:23] <e36freak> is there a shopt -s xpg_echo in there?
[08:34:02] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:34:32] <tirnanog> fluffywolf: https://github.com/Winetricks/winetricks/issues/1386#issuecomment-544750445
[08:35:23] <znf> big oof
[08:35:35] <fluffywolf> I can't really load web pages right now.  used up all my data for the month fucking around with wine, and now am stuck with modem speeds...  and firefox times out modern web pages when you try loading them at modem speeds.
[08:36:02] <fluffywolf> looks like github is simple enough to load.  lol
[08:36:03] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[08:36:04] <tirnanog> oh well. it's not important. just some lulz in lieu of the above.
[08:36:24] <znf> oh dear god, all your data?
[08:36:34] <znf> sounds dystopian
[08:36:36] <larryv> oh lol i remember this moron
[08:36:52] <tirnanog> larryv: probably the most dangerous of his species I have ever encountered.
[08:37:02] <tirnanog> coaching others to do as he does. can you imagine.
[08:37:55] <e36freak> dunning kruger in full force
[08:37:56] *** Joins: DynV (~DynV@user/dynv)
[08:37:57] <tirnanog> I encountered him in a different channel once, correcting some asinine pitfall, and was told "I know everything about shell scripting".
[08:38:03] <tirnanog> quite literally.
[08:38:21] <tirnanog> no, wait, it was "I know everything there is to know about shell scripting".
[08:38:31] <fluffywolf> grep doesn't find a shopt nor a xpg anywhere in it.
[08:38:43] <znf> https://github.com/Kreyren
[08:38:44] <znf> damn.
[08:38:50] *** Joins: bluedust (~bluedust@117.204.128.175)
[08:38:56] <znf> he's really commiting everywhere
[08:39:14] <tirnanog> yes. it is truly horrifying stuff.
[08:39:55] *** Joins: hB7drf (~quassel@user/hB7drf)
[08:40:49] <znf> Heh https://github.com/filips123/PWAsForFirefox/pull/89
[08:40:59] <znf> Someone take his `git` away
[08:41:12] <fluffywolf> ok, I might be an idiot.
[08:41:40] <fluffywolf> sh is dash on this box now.
[08:41:41] <fluffywolf> lol
[08:41:46] <fluffywolf> and dash is not bash.
[08:41:51] <tirnanog> it certainly isn't.
[08:42:01] <znf> that's pretty "normal" for debian/ubuntu
[08:42:37] <fluffywolf> and dash parses \s where bash does not.
[08:42:45] <e36freak> for echo
[08:42:47] <znf> that being said - why does ubuntu/debian ship with dash anymore?
[08:42:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:42:52] <e36freak> it's "faster"
[08:42:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[08:43:08] <fluffywolf> because bash takes a full second every time it forks itself on anything but a new gaming rig?  :P
[08:43:09] <e36freak> fluffywolf: hence never assuming that echo does what you expect it to
[08:43:12] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:43:33] <znf> I know that "faster" was an argument for systemv scripts, but...?
[08:44:31] <znf> I recall it being an argument that init scripts would run faster with dash instead of bash, but now it seems like something antique :P
[08:44:38] <tirnanog> bash really is slow. but I think a more important argument would be that dash is a much smaller, conforming implementation of the Shell Command Language with a considerably smaller attack surface.
[08:46:02] <fluffywolf> bash forking is the biggest slowness I've found, and it really likes forking.
[08:46:35] <tirnanog> of course, debian being debian, decided to make it the standard sh(1) while sweeping all the compatibility issues under the carpet. not issues that can be attributed to any problem with dash but to all the morons (mostly in the linux world) that write bash scripts, while slapping #!/bin/sh at the top.
[08:47:00] <tirnanog> and by sweeping, I mean that they integrated some ridiculous patch that makes dash execute bash under certain circumstances.
[08:47:08] <fluffywolf> lol
[08:47:21] <tirnanog> which just made upstreaming fixes harder.
[08:47:33] <tirnanog> "but it works in debian/ubuntu, even when I have dash as /bin/sh!"
[08:47:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:48:00] <DynV> Sometimes after backing up I realize some things should have been deleted (from the original folder) before backing up. Is there a way after deleting the original to have the backup counterpart put in a subfolder for review (then deletion if it wasn't a mistake). Since the backup have older files (a lot) than the original folder, I'd like for it to not look before the current oldest file, or worse case have the file name as an argument. ie: With original {F, H, L} and
[08:48:01] <DynV> backup {A, B, D, F, G, H, L}, running "deletions_since_mistake F" would delete G.
[08:48:20] <DynV> s/deletions_since_mistake/deletions_since_backup/
[08:48:28] <fluffywolf> e36freak:  alas, I did not write this script (nor, for that matter, would I ever write a monstrosity like this), so the warning about echo needs to be sent elsewhere.  :)
[08:48:46] <fluffywolf> it's an entire package manager, complete with hundreds of packages, as one giant blob of bash.
[08:48:58] <tirnanog> it sounds like the stuff of nightmares.
[08:50:48] <fluffywolf> grrrr, can't google at 6K/sec....
[08:51:34] *** Joins: han-solo (~hanish@user/han-solo)
[08:51:43] <DynV> s/delete G/move G in subfolder for_deletion_review/
[08:53:01] <tirnanog> fluffywolf: duckduckgo.com/lite might be more palatable
[08:53:46] <fluffywolf> https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks  the fun in question.  its first feature is "Consists of a single shell script".
[08:56:52] <fluffywolf> oh well, thanks all, time for me to get to bed.  I got the winetricks script hacked to where it is functioning.
[09:02:26] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:10:16] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:11:14] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[09:13:17] *** Joins: bluedust_ (~bluedust@194.37.96.105)
[09:13:54] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[09:17:23] *** Quits: bluedust (~bluedust@117.204.128.175) (Ping timeout: 256 seconds)
[09:17:56] *** Quits: libc (~archer@user/tessio) (Quit: WeeChat 3.4)
[09:18:41] *** Joins: bluedust (~bluedust@117.204.128.175)
[09:19:55] *** Quits: mute (~mute@150.136.80.131) (Quit: WeeChat 3.4)
[09:20:04] *** Joins: mute (m@crx.fan)
[09:21:41] *** Quits: bluedust_ (~bluedust@194.37.96.105) (Ping timeout: 256 seconds)
[09:22:15] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:27:19] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:27:39] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:27:45] *** Quits: qub411 (~user@118.209.248.55) (Quit: WeeChat 3.4)
[09:29:00] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:17] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:43] *** Quits: luckiswithme (~luckiswit@149.167.138.139) (Remote host closed the connection)
[09:34:47] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:35:15] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:37:46] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:38:06] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:39:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:42:29] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:49:29] *** Quits: mseidl (~flughafen@p57969381.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:58:25] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:00:30] *** Joins: Mo (~Mo@dynamic-077-000-223-207.77.0.pool.telefonica.de)
[10:01:15] *** Quits: bluedust (~bluedust@117.204.128.175) (Remote host closed the connection)
[10:02:45] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[10:05:57] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[10:06:49] *** Quits: whaa_ (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Quit: Konversation terminated!)
[10:07:10] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[10:07:15] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (Ping timeout: 256 seconds)
[10:07:39] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[10:07:40] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[10:08:19] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:08:51] *** Joins: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com)
[10:09:53] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[10:12:02] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:13:22] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[10:14:02] *** Joins: carl-- (~carl-@185.103.188.130)
[10:15:06] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:16:53] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[10:17:41] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[10:17:52] *** Joins: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[10:18:01] *** Joins: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b)
[10:18:01] <lisbeths> what command would I type if I want to know my kernel version
[10:18:06] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[10:18:38] <yitz> uname -a ... though that's not a bash question
[10:19:27] <lisbeths> thank you my problem is solved.
[10:19:35] *** Parts: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net) ()
[10:20:36] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:23:07] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[10:24:22] *** Joins: mseidl (~flughafen@p2e55dcb3.dip0.t-ipconnect.de)
[10:26:37] *** Joins: hB7drf (~quassel@user/hB7drf)
[10:28:12] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[10:30:15] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[10:30:29] *** Joins: bluedust (~bluedust@103.148.20.48)
[10:33:10] *** Joins: sinaowolabi (~SinaOwola@41.58.58.153)
[10:36:43] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[10:45:41] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[10:46:52] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:48:46] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[10:49:17] <senoraraton> How do I write a bash command that monitors a log file, and executes a function when a regex is matched?  You can do it with read right?
[10:49:31] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:8c98:4e5a:989a:8915)
[10:50:54] <grawity> you will need to run e.g. `tail -f` to do the actual monitoring â€“ `read` alone can't wait for changes, it'll just stop as soon as it hits EOF
[10:51:11] <grawity> but piping tail to a `while read` loop is possible
[10:51:17] <senoraraton> I found something called inotifywait
[10:51:19] *** Quits: e0 (ec@user/e0) (Ping timeout: 268 seconds)
[10:51:44] <senoraraton> Feels like cheating though.
[10:52:23] <foul_owl> Does anyone know how to use imagemagick to convert a grayscale image to RGB? (and resizing and converting to png at the same time) I'm trying: convert foo.jpg -colorspace sRGB -type truecolor -resize 100x100^ -gravity center -extent 100x100 output/foo.png
[10:52:49] <foul_owl> Everything works but imagemagick seems to be ignoring the color related flags
[10:54:27] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[10:54:37] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:8c98:4e5a:989a:8915) (Ping timeout: 256 seconds)
[10:55:20] <grawity> inotifywait is close (it uses the same inotify as tail -f), but it's more useful when dealing with whole new files
[10:55:49] <grawity> with growing log files you'd have to manually keep track of where you stopped last time (unless you want to read the whole log again and again and again...)
[10:55:57] <grawity> while tail's --follow does that for you
[10:55:58] <senoraraton> I'm monitoring wireshark logs.
[10:56:27] *** Joins: yustin (~yustin@user/yustin)
[10:56:28] <senoraraton> I only care about current data, and really don't care about the actual log files at all.  I just want a trigger when a particular IP sends messages on my network.
[10:56:40] <emanuele6> use tail -f and then pipe to a while read loop that compares the lines using [[ == ]] or [[ =~ ]] or use awk
[10:56:46] <senoraraton> I tried doing it with nc but my netcat listen just doesn't work.
[10:57:37] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[10:59:12] *** Joins: DynV_ (~DynV@user/dynv)
[10:59:37] *** Quits: DynV (~DynV@user/dynv) (Ping timeout: 256 seconds)
[11:00:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:00:15] *** Joins: unop (~unop@195.91.14.193)
[11:00:42] *** Joins: sinaowolabi_ (~SinaOwola@169.159.72.170)
[11:03:29] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:04:08] *** Joins: timm (~timm@user/timm)
[11:05:12] *** Quits: hendry (~hendry@210.23.22.2) (Quit: brb)
[11:06:05] *** Joins: hendry (~hendry@210.23.22.2)
[11:09:49] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:11:36] <mute> try it with udp and you don't need to be listening :D
[11:11:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:14:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:14:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:15:00] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[11:15:29] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[11:15:41] *** Joins: unop (~unop@195.91.14.193)
[11:16:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl)
[11:16:09] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:16:26] <senoraraton> It does.  The machine broadcasts a UDP packet, but you do have to listen in order to get packets.  You can't just magically recieve packets.
[11:20:33] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[11:20:59] *** Joins: masoudd (~masoudd@user/masoudd)
[11:21:09] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:c514:84f2:950:7c60)
[11:21:42] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:8c98:4e5a:989a:8915)
[11:22:05] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:22:26] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:22:33] *** Joins: masoudd (~masoudd@user/masoudd)
[11:22:44] *** Joins: hB7drf (~quassel@user/hB7drf)
[11:23:26] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:23:38] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:23:55] *** Joins: masoudd (~masoudd@user/masoudd)
[11:25:16] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:26:21] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[11:27:10] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[11:27:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[11:28:02] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:28:05] *** Joins: timm (~timm@user/timm)
[11:28:09] *** Joins: vysn (~vysn@user/vysn)
[11:30:03] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[11:32:24] *** Joins: masoudd_ (~masoudd@user/masoudd)
[11:33:44] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:34:46] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:35:37] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[11:36:51] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[11:41:16] *** Joins: JyZyXy (~jyz@85-76-16-46-nat.elisa-mobile.fi)
[11:41:44] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:41:52] *** Joins: rcernin_ (~rcernin@124.190.132.36)
[11:42:37] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:8c98:4e5a:989a:8915) (Ping timeout: 240 seconds)
[11:42:49] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:43:33] *** Quits: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[11:47:32] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:48:06] *** Quits: sinaowolabi (~SinaOwola@41.58.58.153) (Read error: Connection reset by peer)
[11:49:48] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[11:51:19] *** Joins: lavaball (felix@31.204.155.215)
[11:55:40] *** Joins: arinov (~arinov@213.194.126.155)
[11:56:07] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[11:56:33] *** Quits: gschanuel21 (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[11:57:04] *** Joins: gschanuel21 (~gschanuel@user/gschanuel)
[11:57:16] *** Joins: becks` (~becks`@bbcs-125-80.pub.wingo.ch)
[11:59:27] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[12:01:26] *** Joins: e0 (ec@rie.sdf.org)
[12:01:26] *** Quits: e0 (ec@rie.sdf.org) (Changing host)
[12:01:26] *** Joins: e0 (ec@user/e0)
[12:02:30] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[12:03:05] *** Quits: rcernin_ (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[12:03:19] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[12:03:25] *** Quits: foul_owl (~kerry@217.114.38.61) (Ping timeout: 256 seconds)
[12:03:34] *** Joins: unop (~unop@195.91.14.193)
[12:03:37] *** Joins: freep (~freepppp@62.1.79.42.dsl.dyn.forthnet.gr)
[12:05:22] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 250 seconds)
[12:05:39] *** Joins: rendar (~rendar@user/rendar)
[12:10:00] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[12:10:56] *** Joins: n4dir (~user@i5E86C541.versanet.de)
[12:11:26] *** Joins: hB7drf (~quassel@user/hB7drf)
[12:13:23] *** Quits: moth (~moth@2600:1700:5d5c:110:2593:f021:bb3d:e62e) (Remote host closed the connection)
[12:13:24] *** Joins: _gabriele (~gabriele@host-79-44-108-149.retail.telecomitalia.it)
[12:13:24] *** Quits: _gabriele (~gabriele@host-79-44-108-149.retail.telecomitalia.it) (Changing host)
[12:13:24] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:13:24] *** _gabriele is now known as gabriele
[12:14:30] *** Joins: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d)
[12:15:05] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[12:15:16] *** Quits: kyr (~kyr@167.71.50.12) (Remote host closed the connection)
[12:15:36] *** Joins: kyr (~kyr@167.71.50.12)
[12:16:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:17:51] <frojnd> Hm. I'm trying to check if string contains numbers, but for mksh. I know this isn't bash but mksh documentation seems so out of space to me :/ if [[ $file =~ [0-9] ]]; then echo "foo"; fi I get: syntax error: '=~' unexpected operator/operand
[12:18:41] <osse> !faq number
[12:18:41] <greybot> https://mywiki.wooledge.org/BashFAQ/018 -- How can I use numbers with leading zeros in a loop, e.g. 01, 02?
[12:18:47] <osse> hmm
[12:18:52] <osse> !faq valid
[12:18:53] <greybot> https://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
[12:18:57] <osse> there we go
[12:19:02] <geirha> m# file=one2three ; [[ $file = *[0-9]* ]] ; printf '%s\n' "$?"
[12:19:04] <shbot> geirha: 0
[12:19:08] <geirha> m# file=onetwothree ; [[ $file = *[0-9]* ]] ; printf '%s\n' "$?"
[12:19:10] <shbot> geirha: 1
[12:19:21] <geirha> use pattern matching instead ^
[12:20:55] <frojnd> patternmatching ok
[12:21:18] <geirha> yeah, mksh simply doesn't have regex matching
[12:22:33] *** Quits: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d) (Remote host closed the connection)
[12:23:34] *** Joins: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d)
[12:24:23] *** Joins: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[12:28:31] *** Joins: TomyWork (~TomyLobo@p200300e80f006700dc152f3d3af22ca2.dip0.t-ipconnect.de)
[12:31:35] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[12:32:19] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[12:33:22] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[12:36:03] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[12:36:13] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[12:37:57] *** Joins: cdown (~cdown@163.114.131.1)
[12:41:11] *** Quits: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d) (Ping timeout: 252 seconds)
[12:44:24] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[12:44:42] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[12:45:07] *** Quits: medard__ (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 256 seconds)
[12:45:21] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[12:49:35] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[12:50:55] *** Joins: Guest39 (~Guest39@2001:19f0:5:644c:5400:3ff:fed7:1edb)
[12:53:16] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:55:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0)
[12:56:56] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[12:57:44] *** Joins: hB7drf (~quassel@user/hB7drf)
[12:57:49] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:00:02] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[13:00:05] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[13:00:59] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 252 seconds)
[13:01:13] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[13:01:20] *** Quits: DynV_ (~DynV@user/dynv) (Quit: Konversation terminated!)
[13:01:28] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[13:01:49] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Quit: l4s8g)
[13:02:29] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[13:03:25] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[13:04:20] *** Joins: BAD (~mad@user/god)
[13:04:36] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[13:05:43] *** Joins: rcernin (~rcernin@124.190.132.36)
[13:06:05] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[13:07:13] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[13:07:29] *** mseidl is now known as flughafen
[13:08:21] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[13:08:54] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[13:12:11] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[13:12:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:13:30] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[13:13:33] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:c514:84f2:950:7c60) (Quit: Client closed)
[13:17:58] *** Joins: hB7drf (~quassel@user/hB7drf)
[13:18:05] *** Joins: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de)
[13:18:44] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:19:31] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[13:21:37] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[13:21:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[13:22:01] *** Joins: yac (~user@user/yac)
[13:22:04] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:22:18] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Client Quit)
[13:23:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Max SendQ exceeded)
[13:23:28] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:23:37] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[13:23:57] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[13:26:22] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:c956:e349:7555:8148)
[13:26:43] *** Quits: Guest39 (~Guest39@2001:19f0:5:644c:5400:3ff:fed7:1edb) (Ping timeout: 256 seconds)
[13:27:34] *** Quits: JyZyXy (~jyz@85-76-16-46-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[13:28:15] *** Joins: swoolley (~seth@user/swoolley)
[13:32:32] *** Joins: shad (~shad@user/shad)
[13:36:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[13:37:28] *** Joins: JyZyXy (~jyz@85-76-16-46-nat.elisa-mobile.fi)
[13:39:00] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[13:39:08] *** Joins: bluedust_ (~bluedust@103.160.194.12)
[13:39:37] *** Quits: bluedust (~bluedust@103.148.20.48) (Ping timeout: 240 seconds)
[13:42:14] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[13:42:16] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[13:42:40] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: No route to host)
[13:44:11] *** Quits: BAD (~mad@user/god) (Quit: brb)
[13:46:25] *** Joins: masber (~masber@2001:620:808:1200:8000::17)
[13:47:04] *** Joins: pajamian (~pj@ghettoforge/pj)
[13:48:20] *** Joins: Guest39 (~Guest39@2001:19f0:5:644c:5400:3ff:fed7:1edb)
[13:49:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[13:50:47] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[13:52:51] *** Joins: hB7drf (~quassel@user/hB7drf)
[13:55:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[13:56:27] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[13:56:37] *** Joins: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[13:56:53] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[13:57:28] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[13:59:37] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[13:59:52] *** Joins: seninha (~seninha@user/seninha)
[14:00:42] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 260 seconds)
[14:01:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:01:53] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Client Quit)
[14:02:06] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:03:36] *** Joins: Payam (~Payam@138.106.57.132)
[14:03:58] <Payam> Hi, to reach a variable is it recommended to have $VAR or ${VAR}
[14:03:59] <Payam> ?
[14:04:46] <Soliton> !${
[14:04:46] <greybot> Without curly braces parameter expansions refer to the longest valid variable name or shortest positional parameter. "${var}bar" expands the parameter named "var" while "$varbar" expands "varbar". "$123" references argv[1] and "${123}" references argv[123]. Braces are requried for parameters > 9, special PEs, and array expansions: ${10}, ${var##pat}, ${arr[5]}. BRACES AREN'T A SUBSTITUTE FOR QUOTES!
[14:04:59] *** Joins: sinaowolabi__ (~SinaOwola@41.58.222.160)
[14:05:15] <Soliton> if you want to write ${var} without need is your choice.
[14:05:37] <Payam> didn't undrstand the greybot text
[14:05:48] <selckin> always use ${} or here be dragons
[14:06:02] <Payam> why would I write ${var}bar?
[14:06:07] <Payam> in any situation
[14:06:17] <Payam> ah I got it
[14:06:37] <Soliton> if you want to expand $var and put bar after it...
[14:06:52] <Soliton> you can also write "$var"bar for example.
[14:06:57] <Payam> so if I have a variable called $VAR and another one called $VARBAR and if I do echo $VARBAR it would echo $VAR and not $VARBAR
[14:06:59] <Payam> right?
[14:07:17] <Soliton> yes.
[14:07:20] <Soliton> !caps
[14:07:20] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[14:07:21] <Payam> interesting
[14:07:31] <Payam> thank you
[14:08:03] <Payam> okey so user variable are recommended to be lowecase
[14:08:22] <Payam> awesome. I didn't know that thing about $var
[14:12:18] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[14:12:22] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 260 seconds)
[14:12:42] *** Joins: [twisti] (~twisti@toadwater.com)
[14:15:07] *** Joins: andril (~andril@2601:586:8400:1d9::1000)
[14:17:01] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[14:17:25] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[14:20:04] *** Joins: hB7drf (~quassel@user/hB7drf)
[14:20:19] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[14:20:43] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[14:20:59] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[14:21:31] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[14:25:20] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[14:27:37] *** Quits: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b) (Ping timeout: 240 seconds)
[14:29:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:29:51] *** Joins: hB7drf (~quassel@user/hB7drf)
[14:30:03] *** Joins: Guest14 (~Guest14@dyn16.enst-bretagne.fr)
[14:30:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:30:11] *** Joins: mihael (~mihael@180.190.180.20)
[14:30:50] *** Lord_of_Life_ is now known as Lord_of_Life
[14:31:32] <Guest14> hi, any idea how I can remove a specific string containing some "/" inside it, using sed ? I tried : grep foo myfile | sed "s/'my/pattern/'//gÂ Â Â Â Â  without success
[14:33:19] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[14:33:55] <[twisti]> i have a line that looks like this, which returns 0/success even when `foo` returns an error. why ? what am i doing wrong ? `s are for clarification, they are not part of my actual line, ... are just additional parameters: `set -o pipefail; time mysql ... < <( docker exec -i ... | sed ... | sed ... || kill -SIGUSR1 $$)`
[14:34:24] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[14:35:03] <selckin> Guest14: you have to escape it 's/\///', but sed also allows you to pick another char for the /, for example sed -re 's,my/pattern,my-pattern,g'
[14:38:41] *** Quits: Guest39 (~Guest39@2001:19f0:5:644c:5400:3ff:fed7:1edb) (Ping timeout: 256 seconds)
[14:38:46] <[twisti]> ah sorry, the command spawned inside docker is 'foo', i cut away too much
[14:39:22] *** Quits: mihael (~mihael@180.190.180.20) (Quit: Client closed)
[14:40:42] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[14:41:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[14:41:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:42:11] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[14:42:51] *** Joins: andre144k (~andre144k@213.221.88.82)
[14:42:54] <andre144k> hello all
[14:44:09] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[14:44:23] *** Quits: andril (~andril@2601:586:8400:1d9::1000) (Ping timeout: 250 seconds)
[14:45:49] *** Quits: JyZyXy (~jyz@85-76-16-46-nat.elisa-mobile.fi) (Ping timeout: 240 seconds)
[14:46:37] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[14:47:04] <selckin> [twisti]: pitfalls @ https://mywiki.wooledge.org/ProcessSubstitution
[14:47:15] *** tinystoat is now known as typoholic
[14:47:19] <andre144k> echo "$a" is telling: "2022-02-08T08:37:39.057000000" is there a way to get seconds since this date/time?
[14:47:46] <[twisti]> selckin: thats how i arrived at the kill syntax :(
[14:48:05] <osse> # date -d "2022-02-08T08:37:39.057000000" +%s
[14:48:07] <shbot> osse: 1644309459
[14:48:14] <osse> andre144k: if you have GNU date
[14:48:32] *** Joins: hB7drf (~quassel@user/hB7drf)
[14:48:45] <andre144k> yes i have
[14:49:24] <andre144k> GNU coreutils online
[14:50:59] *** Joins: foul_owl (~kerry@23.82.193.78)
[14:52:03] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[14:52:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:52:46] <selckin> [twisti]: can't get it to work in my own tests either :(
[14:53:16] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:53:49] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[14:54:15] <[twisti]> selckin: the annoying thing is that it is in fact working in the ssh -C variant, which makes me super annoyed at the people in another channel claiming its impossible
[14:54:40] <[twisti]> currently testing if wrapping it in a bash -c will help
[14:54:44] <selckin> so the question is how to get the exist status 2 in like 'cat <(echo foo; exit 2); echo $?'
[14:56:03] <andre144k> osse, very great big thx :)
[14:56:14] <andre144k> and so easy :)
[14:56:15] *** Quits: sinaowolabi__ (~SinaOwola@41.58.222.160) (Ping timeout: 256 seconds)
[14:56:27] *** Joins: MonoL (~MonoL@user/MonoL)
[14:56:44] <MonoL> What does read do?
[14:56:59] <MonoL> what's read -p?
[14:57:08] <han-solo> tias ?
[14:57:43] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[14:57:54] * MonoL looks over his sholder
[14:58:01] <han-solo> # read -p "Enter sdadad: " x <<<"foo"; echo $x
[14:58:03] <shbot> han-solo: foo
[14:58:21] <han-solo> bad example
[14:59:07] <han-solo> # help read | grep -- -p
[14:59:08] <shbot> han-solo: read: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...]
[14:59:09] <shbot> han-solo:       -p prompt output the string PROMPT without a trailing newline before
[14:59:34] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[14:59:47] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:02:46] <MonoL> So if I read -p the prompt waits for some input and then stores it somewhere? Then if I close the terminal dose it go away?
[15:03:26] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[15:04:10] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 260 seconds)
[15:05:42] *** Joins: han-solo (~hanish@103.82.184.207)
[15:05:57] *** Joins: sinaowolabi (~SinaOwola@41.58.242.22)
[15:06:06] <MonoL> And can I put anything I like? Like a number and will it be recognised as a number? And an I do actual math with it? And what if I put something like ls or cd?
[15:06:27] *** Quits: foul_owl (~kerry@23.82.193.78) (Ping timeout: 256 seconds)
[15:07:48] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[15:09:58] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[15:10:39] *** Joins: unop (~unop@195.91.14.193)
[15:12:49] *** Quits: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[15:15:14] <[twisti]> selckin: bash -c'ing it worked, im guessing the kill -SIGUSR1 $$ syntax needs a proper shell to target
[15:15:17] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[15:16:48] *** Joins: hB7drf (~quassel@user/hB7drf)
[15:18:15] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[15:20:10] *** Joins: volga629 (~volga629@72.139.93.26)
[15:22:56] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[15:25:16] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:26:34] *** Joins: cdown_ (~cdown@188.214.11.14)
[15:27:31] *** Quits: bluedust_ (~bluedust@103.160.194.12) (Remote host closed the connection)
[15:29:13] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[15:29:20] *** cdown_ is now known as cdown
[15:29:52] *** Joins: blingrang_ (~blingrang@user/blingrang)
[15:30:01] *** Quits: pajamian (~pj@ghettoforge/pj) (Ping timeout: 256 seconds)
[15:31:04] *** Joins: bluedust (~bluedust@103.160.194.12)
[15:31:35] <Soliton> # trap 'echo USR1' USR1; : <(kill -s USR1 $$); wait
[15:31:37] <shbot> Soliton: USR1
[15:31:55] *** Quits: l4s8g (~l4s8g@pd9e621d0.dip0.t-ipconnect.de) (Quit: l4s8g)
[15:33:43] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[15:35:05] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[15:35:55] *** Quits: han-solo (~hanish@103.82.184.207) (Changing host)
[15:35:55] *** Joins: han-solo (~hanish@user/han-solo)
[15:36:23] *** Joins: blingrang_ (~blingrang@user/blingrang)
[15:37:18] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[15:38:43] *** Joins: vysn (~vysn@user/vysn)
[15:38:57] *** Quits: n4dir (~user@i5E86C541.versanet.de) (Remote host closed the connection)
[15:42:24] *** Quits: libsys (~libsys@186.105.187.144) (Ping timeout: 256 seconds)
[15:42:46] *** Joins: libsys (~libsys@186.107.231.182)
[15:43:18] *** Joins: pajamian (~pj@ghettoforge/pj)
[15:45:39] *** Quits: unop (~unop@195.91.14.193) (Read error: Connection reset by peer)
[15:45:54] *** Joins: unop (~unop@195.91.14.193)
[15:49:10] *** Quits: masber (~masber@2001:620:808:1200:8000::17) (Quit: Client closed)
[15:49:31] *** Quits: sinaowolabi (~SinaOwola@41.58.242.22) (Ping timeout: 256 seconds)
[15:51:57] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[15:52:30] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:54:03] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[15:55:09] *** masoudd_ is now known as masoudd
[15:56:33] *** Quits: bluedust (~bluedust@103.160.194.12) (Remote host closed the connection)
[15:58:55] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[16:00:41] *** Joins: han-solo (~hanish@103.82.184.207)
[16:02:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af)
[16:02:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af) (Changing host)
[16:02:01] *** Joins: skapata (~Skapata@user/skapata)
[16:04:10] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60)
[16:04:55] *** Joins: zeden (~zeden@user/zeden)
[16:05:29] *** Quits: becks` (~becks`@bbcs-125-80.pub.wingo.ch) (Quit: Client closed)
[16:06:15] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[16:07:37] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60) (Remote host closed the connection)
[16:08:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[16:10:05] *** Joins: rddd (~user@c-407ce255.012-81-73746f39.cust.ownit.se)
[16:10:26] *** Quits: han-solo (~hanish@103.82.184.207) (Ping timeout: 260 seconds)
[16:12:00] *** Joins: han-solo (~hanish@103.104.46.32)
[16:14:08] *** Quits: han-solo (~hanish@103.104.46.32) (Changing host)
[16:14:08] *** Joins: han-solo (~hanish@user/han-solo)
[16:14:12] <andre144k> how to add a variable to su: x=$(su -l "$user" -c "somecommand $param")
[16:14:36] <Soliton> !su
[16:14:36] <greybot> su (switch user) opens a new interactive session with new privileges. Usually to run some commands as root. Don't use this to drop privileges in scripts; try setpriv instead, if you have it. See <http://jdebp.info/FGA/dont-abuse-su-for-dropping-privileges.html>
[16:14:49] <Soliton> don't inject variables into shell code.
[16:15:08] *** Joins: hB7drf (~quassel@user/hB7drf)
[16:15:09] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:15:11] <Soliton> ideally don't involve a shell at all.
[16:15:25] <andre144k> i start a script as root, but want run subcommands as different users
[16:16:17] <Soliton> sudo -u "$user" cmd "$param"
[16:16:27] <Soliton> but neither su nor sudo are made for this.
[16:16:51] <Soliton> if you're doing this for security anyway.
[16:17:07] <andre144k> ah okay
[16:17:48] <andre144k> thx
[16:18:01] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[16:18:25] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[16:19:28] <Guest14> selckin thanks
[16:21:52] <Soliton> Guest14: there is no need for grep, btw. sed '/foo/s,my/pattern,,g' myfile
[16:24:09] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[16:24:45] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[16:25:53] *** Joins: rsjw (~rsjw@user/rsjw)
[16:26:20] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[16:26:50] <rsjw> why does redirecting stdout or stderr of time(1) cause the reported times to all be printed on one line?
[16:27:14] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 260 seconds)
[16:27:20] <rsjw> (asking about the design decision, not the mechanics of it)
[16:27:49] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:27:49] <Soliton> perhaps you were expecting to call the time builtin instead.
[16:28:17] <rsjw> I wasn't expecting one or the other in particular
[16:28:20] <geirha> s/builtin/keyword/
[16:28:38] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 260 seconds)
[16:28:50] <Soliton> so what does redirection have to do with this?
[16:29:09] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[16:29:29] <grawity> rsjw: time(1) always prints reported times in one line
[16:30:00] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[16:30:01] <geirha> and the time keyword will only change its output if you modify the TIMEFORMAT variable
[16:30:34] <rsjw> Soliton: "time true" prints 4 lines (with the first one blank), ">f time true" prints 1 line
[16:30:45] <grawity> "time true" isn't time(1)
[16:30:56] <geirha> that's because the first one uses the time keyword, while the second uses /usr/bin/time
[16:31:01] <Soliton> # time true >f
[16:31:04] <shbot> Soliton: real: 0m0.002s, user: 0m0.000s, sys: 0m0.002s
[16:31:14] <grawity> it's a bash builtin, though it seems it uses the "portable" format that time(1)  discusses under -p
[16:31:24] <Soliton> well, try it in your shell.
[16:31:31] <rsjw> "builtin time true" says time is not a builtin
[16:31:32] <geirha> # >f time true
[16:31:34] <shbot> geirha: 0.00user 0.00system 0:00.01elapsed 94%CPU (0avgtext+0avgdata 1292maxresident)k
[16:31:34] <shbot> geirha: 0inputs+0outputs (0major+56minor)pagefaults 0swaps
[16:31:36] <grawity> it's also a weird *keyword* rather than an ordinary builtin, so that it could measure a whole pipeline
[16:31:43] <geirha> # type time
[16:31:44] <shbot> geirha: time is a shell keyword
[16:31:49] <geirha> it's a keyword, not a builtin
[16:31:56] <grawity> e.g. 'time foo | bar' would measure both, while '/bin/time foo | bar' would only measure foo
[16:32:08] <geirha> it needs to be the first word in order to be considered the time keyword
[16:32:16] *** Quits: tercaL (~tercaL@user/tercal) (Quit: enter the Tekken!)
[16:32:17] <geirha> # time >f true
[16:32:18] <shbot> geirha: real: 0m0.001s, user: 0m0.001s, sys: 0m0.000s
[16:32:34] <grawity> so because it sits "outside" of the pipeline, redirections can't quite apply to it the same way
[16:33:42] <geirha> rsjw: so, are you tryng to redirect the output of the *command* you are timing, or are you trying to redirect the *timing output*?
[16:34:26] *** Joins: defiant (~defiant@user/defiant)
[16:34:44] <rsjw> geirha: the latter. I just put >f to trigger the one-line-ness.
[16:35:10] <geirha> { time cmd 2>&1 ; } 2> timing-output
[16:35:38] <geirha> !faq 'time'
[16:35:38] <greybot> https://mywiki.wooledge.org/BashFAQ/032 -- How can I redirect the output of 'time' to a variable or file?
[16:36:14] <rsjw> thanks, I already have it working to my satisfaction, I just didn't know why it was working the way it was. but apparently it's because using redirections inhibit bash's use of the time keyword
[16:38:24] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[16:38:30] *** Joins: bluedust (~bluedust@103.160.194.12)
[16:40:11] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Read error: Connection reset by peer)
[16:40:55] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:42:13] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[16:42:25] *** Joins: hB7drf (~quassel@user/hB7drf)
[16:43:00] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[16:44:21] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[16:45:57] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:47:19] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[16:48:30] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:49:44] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Remote host closed the connection)
[16:50:16] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[16:51:10] *** Quits: rcernin (~rcernin@124.190.132.36) (Quit: WeeChat 3.4)
[16:52:44] *** Joins: situ (situ@nat-pool-brq-t.redhat.com)
[16:55:28] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[16:55:48] *** Joins: volga629 (~volga629@72.139.93.26)
[16:56:40] <adac> Hi there! I'm trying to automaticall get hour and minute for my kubectl patch command and add one minute to the minutes. However it seems that this is not really working:
[16:56:47] <adac> kubectl patch cronjob ha-backup -n backups -p '{"spec":{"schedule": "\"$(date -d "now + 1 minutes" +'%H %M') * * *\""}}'
[16:57:06] <adac> How can I make this executable within the kubectl command?
[16:57:42] <geirha> don't inject data into the json
[16:57:55] <eggbean> What does this mean? I have not seen this before. EDITOR=\${EDITOR//mvim/vim}
[16:58:00] <geirha> use jq to generate the json instead
[16:58:01] <adac> geirha, but it is handy! :D
[16:58:06] <adac> ah ok!
[16:59:15] *** Quits: StathisA (~StathisA@178-147-62-94.haap.nym.cosmote.net) (Quit: bb)
[16:59:37] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[17:00:07] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[17:00:08] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:c956:e349:7555:8148) (Quit: Leaving)
[17:00:26] *** Joins: StathisA (~StathisA@178-147-62-94.haap.nym.cosmote.net)
[17:01:19] *** Joins: hB7drf (~quassel@user/hB7drf)
[17:01:26] <gnoo> eggbean: replace nvim (or mvim if that wasn't a typo) with vim in the variable EDITOR
[17:02:07] <gnoo> but that won't export it, you add add `export' at the start or `export EDITOR' after the line if you want to export it as well
[17:02:14] <geirha> # jq -n --arg time "$(date -d 'now + 1 min' "+%H %M")" '{spec:{schedule:"\($time) * * *"}}'
[17:02:16] <shbot> geirha: {"spec":{"schedule":"13 33 * * *"}}
[17:02:33] <geirha> kubectl ... -p "$(jq -cn --arg time "$(date -d 'now + 1 min' "+%H %M")" '{spec:{schedule:"\($time) * * *"}}')"
[17:02:42] *** Quits: timm (~timm@user/timm) (Ping timeout: 260 seconds)
[17:03:08] <geirha> err wait, crontab syntax, so minutes come before hour, not the other way around
[17:03:34] <eggbean> gnoo: Thanks. Have you got a wiki link for this or know what it is likely to be called?
[17:03:46] <gnoo> !pe > eggbean
[17:03:46] <greybot> eggbean: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[17:03:57] <geirha> # jq -n --arg time "$(date -d 'now + 1 min' "+%M %H * * *")" '{spec:{schedule:$time}}'
[17:03:58] <shbot> geirha: {"spec":{"schedule":"34 13 * * *"}}
[17:04:13] <Soliton> the $ is escaped so it's not parameter expansion. it's just a literal string.
[17:04:21] <gnoo> oh
[17:04:26] <adac> geirha, exactly yes. Beside that it works like a charm! Hooray! And thanks so much!
[17:04:27] <Soliton> looks like a mistake to me.
[17:04:51] <gnoo> maybe it's evalled later ?
[17:04:59] <Soliton> who knows.
[17:05:20] <geirha> # jq -c '{spec:{schedule:.}}' <<< "$(date -d 'now + 1 min' "+%M %H * * *")"
[17:05:22] <shbot> geirha: jq: parse error: Invalid numeric literal at line 1, column 8
[17:05:22] <shbot> geirha: {"spec":{"schedule":36}}
[17:05:22] <shbot> geirha: {"spec":{"schedule":13}}
[17:05:32] <geirha> err
[17:05:44] <geirha> # jq -Rc '{spec:{schedule:.}}' <<< "$(date -d 'now + 1 min' "+%M %H * * *")"
[17:05:46] <shbot> geirha: {"spec":{"schedule":"36 13 * * *"}}
[17:06:15] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Remote host closed the connection)
[17:06:30] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[17:08:39] *** Joins: x10an14 (~x10an14@84.210.147.191)
[17:09:06] *** Quits: situ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 256 seconds)
[17:10:34] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 268 seconds)
[17:11:09] *** Quits: x10an14 (~x10an14@84.210.147.191) (Quit: The Lounge - https://thelounge.chat)
[17:11:27] <Masklin> What was the way to check if $1 is non-empty, when running a script?
[17:11:39] <Masklin> if ! [[ $1 ]] ; then ... ; fi ?
[17:11:50] <geirha> that checks if it's empty
[17:11:57] *** Joins: x10an14 (~x10an14@84.210.147.191)
[17:12:04] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:12:16] <geirha> if ! ! [[ $1 ]] ; then    fixed
[17:12:26] <Soliton> perhaps you actually want to know if a parameter was given instead.
[17:12:29] <Masklin> -_-
[17:12:41] <Masklin> I want the script to stop if $1 is not given
[17:13:12] <Masklin> if ! [[ $1 ]] ; then echo 'Supply an argument pls' ; exit ; fi
[17:13:18] <znf> !argc
[17:13:24] <znf> guess there's no factoid for that
[17:13:24] <geirha> (( $# >= 1 )) || { printf >&2 '%s: Missing argument\n' "$0" ; print_usage >&2 ; exit 1 ; }
[17:13:33] <han-solo> !#
[17:13:33] <greybot> Either a comment, or in parameter expansion a count of something. ${#x} is the number of characters in $x. ${#x[@]} is the number of elements in the array 'x', and $# is the number of positional parameters.
[17:13:57] <geirha> !$#
[17:13:57] <greybot> $# expands to the number of arguments, not counting $0.
[17:14:01] <han-solo> ah
[17:15:29] *** Joins: hB7drf (~quassel@user/hB7drf)
[17:15:37] <x10an14> Masklin: https://paste.sr.ht/~x10an14/b78bde45ba3b2e453b452306a3fa9791330df6ce might maybe be of some inspiration? =) It does something other than counting though, like geirha and greybot suggest
[17:16:07] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 268 seconds)
[17:16:16] <Masklin> Hmm I'll try geirhas suggestion first, sec
[17:17:37] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[17:17:44] <geirha> so first indentation layer is 1 space, then next layer is 2 spaces. what's the third? 3 spaces or 4 spaces?
[17:18:28] <_73> What does the `:-` syntax mean in bash? For example I am trying to understand this source line: `INSTLOCKDIR=${INSTLOCKDIR:-/run/lock/pkgtools}``
[17:18:34] <geirha> !:-
[17:18:34] <greybot> ${parameter:-word} Use Default Values. If parameter is unset or null, the expansion of word is substituted. Otherwise, the value of parameter is substituted.
[17:19:12] <geirha> # var='some value' ; echo "${var:-default value}"
[17:19:13] <shbot> geirha: some value
[17:19:16] <geirha> # var= ; echo "${var:-default value}"
[17:19:18] <shbot> geirha: default value
[17:19:39] <_73> ahh I see. Makes sense thanks.
[17:20:01] <Masklin> geirha: What does (( expr )) mean? Does it just evaluate to 0 or 1?
[17:20:11] <geirha> !((
[17:20:11] <greybot> ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See http://mywiki.wooledge.org/ArithmeticExpression
[17:20:21] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Read error: Connection reset by peer)
[17:20:45] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) ()
[17:20:47] *** Joins: lavaball (felix@31.204.155.215)
[17:21:25] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[17:21:53] *** Joins: volga629 (~volga629@72.139.93.26)
[17:21:56] <Soliton> x10an14: note that you're checking for empty not for not given. might be ok if it's about a filename but perhaps results in confusing error messages.
[17:22:08] <eggbean> gnoo: Thank you
[17:22:49] <Masklin> Alright. And if you write (( expr )) || { some ; commands ; }, it means the braces will run if the expression was False, ja?
[17:22:56] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[17:22:56] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:23:04] <xheimlich> can I list all my env vars somehow?
[17:23:05] <Soliton> !||
[17:23:05] <greybot> Short-circuit control operators <http://mywiki.wooledge.org/BashSheet#Tests> A || B means "Run A. If A fails, run B." A && B means "Run A. If A succeeds, run B." Example: foobar || { echo "error" >&2; exit 1; }
[17:23:16] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:23:25] <Soliton> xheimlich: declare -xp
[17:23:26] <Masklin> Right, right.
[17:24:17] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:26:00] *** Joins: A963-Guest (~A963-Gues@cpe-24-211-225-57.nc.res.rr.com)
[17:26:06] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[17:26:06] <A963-Guest> its time to bash bad prosecutors
[17:26:06] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[17:26:08] <A963-Guest> I found this North Carolina Supreme Court oral argument. A prosecutor appears to be taking cases off the calendar until a defendant pleads guilty, forcing a guilty plea cause the defendant cant get drivers license until he pleads guilty. https://www.youtube.com/watch?v=4TQOltG7zJc
[17:26:51] <Soliton> !bash
[17:26:51] <greybot> The Bourne-Again Shell. Read the channel topic or type /msg greybot links for lots of links.
[17:27:28] <A963-Guest> is this channel for bashing ppl
[17:27:38] <xheimlich> thanks
[17:28:15] <xheimlich> there are many technical channels more friendly to off-topic chatter.
[17:29:02] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[17:29:40] <A963-Guest> can i get an example
[17:29:56] <xheimlich> it should be relevant to your  technical interests, though.
[17:30:15] <Soliton> this channel is about shell scripting.
[17:30:26] <A963-Guest> whats shell scripting
[17:30:28] <xheimlich> if you put in the work, help others, don't annoy people, soon enough you'll be squawking the afternoon through.
[17:30:55] <xheimlich> https://en.wikipedia.org/wiki/Shell_script
[17:32:20] *** Parts: [twisti] (~twisti@toadwater.com) ()
[17:33:25] *** Joins: bluedust_ (~bluedust@59.89.220.95)
[17:33:30] *** Quits: A963-Guest (~A963-Gues@cpe-24-211-225-57.nc.res.rr.com) (Quit: Connection closed)
[17:35:44] *** Joins: almostdvs (~almostdvs@074-135-071-059.res.spectrum.com)
[17:35:49] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:35:51] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[17:36:37] *** Quits: bluedust (~bluedust@103.160.194.12) (Ping timeout: 240 seconds)
[17:37:36] *** Joins: bluedust (~bluedust@185.248.85.10)
[17:37:54] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[17:38:19] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[17:38:33] *** Joins: unop (~unop@195.91.14.193)
[17:38:37] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[17:40:37] *** Quits: bluedust_ (~bluedust@59.89.220.95) (Ping timeout: 240 seconds)
[17:41:50] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[17:43:44] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[17:44:43] *** Joins: xx (~xx@user/xx)
[17:45:12] *** Joins: hB7drf (~quassel@user/hB7drf)
[17:47:56] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:48:31] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[17:51:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0) (Ping timeout: 260 seconds)
[17:53:10] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[17:53:23] *** Joins: fatal (~0x00@user/fatal)
[17:54:01] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:54:23] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:54:41] *** Joins: zoe (~zoe@fsf/member/zoe)
[17:57:19] *** Joins: ChmEarl (~chmearl@user/chmearl)
[17:59:01] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[18:02:24] *** Quits: pajamian (~pj@ghettoforge/pj) (Quit: Ex-Chat)
[18:02:59] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Quit: Leaving)
[18:03:11] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[18:04:00] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[18:04:23] *** Joins: pj (~pj@ghettoforge/pj)
[18:04:35] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[18:07:44] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:08:36] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[18:08:49] *** Quits: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net) (Quit: bye)
[18:09:48] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:9758:86ec:f96b:18af)
[18:09:49] *** Joins: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net)
[18:11:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:9758:86ec:f96b:18af) (Remote host closed the connection)
[18:11:32] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:87f:618e:a3ba:535b)
[18:11:45] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[18:12:18] *** karstensrage_ is now known as karstensrage
[18:12:42] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[18:12:42] *** Joins: karstensrage (~karstensr@user/karstensrage)
[18:14:10] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:15:26] *** Joins: almarwazi (~almarwazi@49.36.201.80)
[18:17:05] *** Joins: frostwork (~frostwork@user/frostwork)
[18:17:25] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[18:18:03] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:18:53] *** Quits: Dotz0cat (~Dotz0cat@173.187.195.128) (Ping timeout: 252 seconds)
[18:22:06] *** Joins: fef (~thedawn@user/thedawn)
[18:22:23] *** Joins: hB7drf (~quassel@user/hB7drf)
[18:24:50] *** Joins: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net)
[18:25:41] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[18:26:17] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:30:38] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:30:52] *** Joins: hlauk (~hlauk@176.33.96.72)
[18:31:48] <x10an14> Any tips on where to go/how to debug missing tab-completions for pass extensions? I've come across https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion#n128, and I notice that my NixOS/Home-manager system doesn't export the requisite `PASSWORD_STORE_EXTENSION_COMMANDS` env var.
[18:31:48] <x10an14> But even after setting it manually like so: `export PASSWORD_STORE_EXTENSION_COMMANDS=("otp" "update" "genphrase")`, I'm unable to get the extensions' (use `pass-otp` as reference/example, but valid for others too) options.
[18:31:48] <x10an14> Anyone got any hints/tips on how to debug/remedy this?
[18:32:29] <x10an14> Feels like it's something missing linking the `pass <extension name>` compgen with the related `share/bash-completions/completions/pass-<extension-name>`.
[18:32:38] <x10an14> If I source said file(s) manually it all works a-okay.
[18:34:33] <gnoo> x10an14: on guix, i don't get tab completion but M-<tab> (alt-tab) works sometimes
[18:34:48] <gnoo> (even for command arguments, not only for filenames)
[18:35:06] <Soliton> an env variable can't be an array.
[18:35:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:35:29] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:35:48] <x10an14> Soliton: What can I say? It works, that's all I know...
[18:35:48] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:35:53] *** Joins: Kyuzo68 (~Kyuzo@host-87-1-222-64.retail.telecomitalia.it)
[18:36:02] <x10an14> gnoo: Gonna try that now, thanks for tip!
[18:36:14] *** Parts: charlie[m] (~charliema@2001:470:69fc:105::1:ada6) ()
[18:36:31] <Soliton> # export PASSWORD_STORE_EXTENSION_COMMANDS=("otp" "update" "genphrase"); bash -c 'declare -p PASSWORD_STORE_EXTENSION_COMMANDS'
[18:36:33] <shbot> Soliton: bash: line 1: declare: PASSWORD_STORE_EXTENSION_COMMANDS: not found
[18:37:01] *** Quits: almarwazi (~almarwazi@49.36.201.80) (Quit: leaving)
[18:37:06] <x10an14> gnoo: It kinda works? But it seems like it matches waaay too much. Like folders not even in the current working directory.
[18:37:09] <Earnestly> Soliton: Does it fail on export or when bash -c reads it?
[18:37:19] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[18:37:23] *** Joins: almarwazi (~almarwazi@49.36.201.80)
[18:37:39] <gnoo> x10an14: yes :^) i haven't found a proper solution for guix, maybe the same is true on nix as well
[18:37:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[18:37:56] <Soliton> it's marked for export but since you can't export arrays it's not exported.
[18:37:57] <Earnestly> Fails on export
[18:38:17] <Earnestly> # A=(a b c) awk 'BEGIN {print ENVIRON["A"]}'
[18:38:19] <shbot> Earnestly: (a b c)
[18:38:33] <Earnestly> I guess pass is eval'ing it?
[18:38:36] <Soliton> a slightly different thing there.
[18:38:42] <Earnestly> # A=(a b c 'd e') awk 'BEGIN {print ENVIRON["A"]}'
[18:38:43] <shbot> Earnestly: (a b c d e)
[18:38:56] <Soliton> that's just bizarry syntax craziness.
[18:39:19] <Earnestly> pass has always given me the spooks, I refuse to use it because the shell scripting is so awful
[18:39:26] <Soliton> it parses as array assignment but then ends up literally as that string.
[18:39:29] <Earnestly> So I would not be surprised if it was doing something insane
[18:39:43] <x10an14> Soliton: Works for me, ref: https://paste.sr.ht/~x10an14/d2b41181b4ee54d61174217063a2d2ab6c8a9790
[18:39:46] <Earnestly> # export A=(a b c); awk 'BEGIN {print ENVIRON["A"]}'
[18:39:47] <shbot> Earnestly: no output
[18:39:47] *** Parts: fluffywolf (~furrywolf@172.58.44.237) ()
[18:40:07] *** Joins: revolve (~u0_a227@82-132-227-141.dab.02.net)
[18:40:08] <gnoo> local commands="init ls find grep show insert generate edit rm mv cp git help version ${PASSWORD_STORE_EXTENSION_COMMANDS[*]}"
[18:40:22] <Soliton> x10an14: where is the env variable used?
[18:40:40] <gnoo> i guess it is exported or used as a string
[18:40:41] <Earnestly> gnoo: lol
[18:40:43] <Soliton> also $SHELL is the login shell of the user. nothing to do with what's running.
[18:40:49] <x10an14> Soliton: See the link in my first message ~10 mins ago: https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion#n128
[18:40:56] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[18:40:58] <Earnestly> I was looking in password-store for this
[18:41:20] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[18:41:43] <Soliton> x10an14: so not an env variable at all, ok.
[18:42:00] <Soliton> i would suggest to not pretend export it.
[18:42:10] <Earnestly> if [[ " ${PASSWORD_STORE_EXTENSION_COMMANDS[*]} " == *" ${COMP_WORDS[1]} "* ]]
[18:42:11] <gnoo> COMPREPLY+=($(compgen -W "${commands}" -- ${cur}))
[18:42:26] <x10an14> Soliton: I thought I had to? I for sure won't get the same compgen output if I don't
[18:42:34] <Earnestly> Soliton: They definately seem to think this is an external env
[18:42:41] <x10an14> > also $SHELL is the login shell of the user. nothing to do with what's running.
[18:42:42] <Earnestly> From the code, it's not defined anywhere else
[18:42:58] <x10an14> Soliton: Do you want(read: need) me to send you the output of `ps aux | grep $$`?
[18:42:59] <Earnestly> I replaced pass with gpg
[18:43:16] <Earnestly> Using similar file heirarchy, just using gpg -co and -dq instead
[18:43:22] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[18:43:24] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[18:43:35] <Earnestly> Like xdg-open, cannot use code this bad
[18:43:37] *** Quits: Kyuzo68 (~Kyuzo@host-87-1-222-64.retail.telecomitalia.it) (Quit: Konversation terminated!)
[18:43:45] <Soliton> x10an14: echo "$BASH_VERSION"  is perhaps what you meant.
[18:43:51] <Earnestly> (Perhaps not bad, but ugly)
[18:44:03] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[18:44:09] <x10an14> Earnestly: Nice has some nice integrations and utilities though, so I think I'd rather look for a replacement in another language. Maybe there's something written in Rust.
[18:44:14] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:44:15] *** Joins: hB7drf____ (~quassel@user/hB7drf)
[18:44:17] <x10an14> *Pass has some
[18:44:23] <Soliton> but i know that in principle env variables cannot be shell variable arrays so it's not relevant.
[18:44:40] <Earnestly> x10an14: It's not language's fault
[18:44:42] <gnoo> x10an14: iirc opan (wowana.me) is writing pass implementation in c
[18:44:44] <x10an14> Soliton: Okay, I was asking you if you felt it would help =)
[18:44:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[18:44:59] <gnoo> opal*
[18:45:02] <Earnestly> But if there is implementation written by someone who gives a shit, then that'd be fine too
[18:45:28] <Soliton> x10an14: completion runs in the current shell. if that supposed env variable is only for that it does nothing that it's marked for export.
[18:45:57] <Soliton> above is the prove that it's not exported anyway.
[18:46:18] <x10an14> I thought any sub-processes spawned by current shell wouldn't work unless you `exported` the variable. I may have erred on the side of caution, in my concern that I have no idea really how compgen/bash completion works
[18:46:19] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[18:46:26] <x10an14> (Hence why I'm asking for advice/assistance here in the first place)
[18:46:54] <x10an14> *wouldn't have access to variables set via `$ VAR=FOO`, unless you exported.
[18:46:54] <Soliton> sub-processes in general, sure. subshells are a different matter.
[18:47:07] <x10an14> Fair enough, I learned something new =)
[18:47:12] <Soliton> # var=foo; (echo "$var")
[18:47:14] <shbot> Soliton: foo
[18:47:22] <Soliton> # var=foo; bash -c 'echo "$var"'
[18:47:24] <shbot> Soliton: no output
[18:48:01] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[18:48:23] <Earnestly> It's so awful that they accidently hardcoded ECMA SGR sequences, which is good lol
[18:48:24] <x10an14> So, if I may just summarize your inputs gnoo, Earnestly, and Soliton: 1. Try to use Alt+Tab instead of double-tapping Tab, 2. don't use pass in the first place
[18:48:36] <x10an14> Have I understood your inputs correctly?
[18:48:49] <Earnestly> I'm not providing any useful inputs here
[18:49:06] <gnoo> x10an14: alt-tab is a workaround that sometimes works due to personal experience on weird systems like guix (maybe nix)
[18:49:12] <Earnestly> pass comes up rarely and it always makes my heart go to wood reading its code
[18:49:29] <Earnestly> And this is wireguard author
[18:49:54] <Soliton> i was only commenting on the array env var thing.
[18:49:55] <Earnestly> But perhaps wireguard is excellent
[18:50:13] <x10an14> Aight, well, anyone feel free to ping me if you feel inclined to assist with helping me debug why pass's completion-logic doesn't extend to their extensions.
[18:50:30] <x10an14> *extend in a working manner on my system
[18:50:51] <Earnestly> directories and files already work with tab-completion out of the box, so I use that with gpg
[18:51:14] *** Joins: k8yun (~k8yun@user/k8yun)
[18:51:29] <Earnestly> No need to 'init', no fucking dotfiles, none of this madness.  But I guess I don't get android apps
[18:51:37] <x10an14> Earnestly: I still lose support for otp's, simple/easy git integration, and so on.
[18:52:00] <x10an14> Android apps? Are you under the impression that https://www.passwordstore.org/ is primarily an android app? o.0
[18:52:01] <gnoo> you don't loose git integration, just git init in the folder
[18:52:16] <Earnestly> x10an14: No, but people have made apps for it
[18:52:20] *** Quits: bluedust (~bluedust@185.248.85.10) (Remote host closed the connection)
[18:52:21] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[18:52:27] <gnoo> x10an14: there's password-store on f-droid as well that is compatible
[18:52:32] <x10an14> Earnestly: Yeah, that I know, and I utilize as well =)
[18:52:52] <Earnestly> otp I'd have to look into, it seems like just another tool
[18:52:58] <gnoo> also no passff
[18:52:58] *** Quits: almarwazi (~almarwazi@49.36.201.80) (Read error: Connection reset by peer)
[18:53:29] <x10an14> gnoo: Huh, hadn't heard of that one. Interesting!
[18:53:44] <Earnestly> x10an14: I tried to make a pass-like util, and it ended up with half the code devoted to preventing path resolution mischief.  Got rid of that, left with just wrapper around gpg -co
[18:53:50] <Soliton> so you defined a __password_store_extension_complete_... function like that comment says and it's not used?
[18:53:54] <x10an14> Would be nice to just fix the tab-completions though, shell code/style/quality be damned. Works well for me.
[18:54:24] <Earnestly> 'be damned' is the current ratchet
[18:54:35] <Earnestly> And damned we are
[18:54:42] <x10an14> Soliton: The respective `(...)/share/bash-completions/completions/pass-*` define that mentioned `__password_store_extension_compelete` function (each of them)
[18:54:57] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:55:04] <x10an14> So if I could just get compgen to correctly source each of them upon double-tapping TAB, I think I'd be golden.
[18:55:14] <x10an14> (tab completion works in current shell if I source said files manually)
[18:55:15] <gnoo> is this bash-completions actually part of bash or of the package bash-completions?
[18:55:29] <Soliton> it's not part of bash.
[18:55:33] *** Joins: tedwing (~anon@lfbn-idf3-1-1415-210.w109-221.abo.wanadoo.fr)
[18:55:34] <Earnestly> x10an14: There appears to be no otp features in pass btw, what do you use?
[18:55:45] <gnoo> ohh, maybe i need to install the package
[18:55:50] <x10an14> Earnestly: https://github.com/tadfisher/pass-otp
[18:55:50] <gnoo> Earnestly: there's an extension for it
[18:56:08] <Earnestly> otptool hmm
[18:56:20] <gnoo> x10an14: have you installed bash-completion(s) ?
[18:56:27] <x10an14> gnoo: It's bundled with pass itself, at least it's located in the git repo over at https://git.zx2c4.com/password-store/
[18:56:39] <x10an14> gnoo: Yes, otherwise pass's own completions wouldn't work =)
[18:56:45] <gnoo> no, the separate package
[18:56:47] <Earnestly> Yes, my thing works with this.  Really all pass is, is gpg encrypted files using file heirarchy for structure, this bit is very clever.  So I use that
[18:56:48] <x10an14> Nor would many/any others on my system for that matter
[18:57:09] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[18:57:21] <x10an14> gnoo: I was not aware there was a separate package with "pass" and "bash completions" in top-level description in the nix store. I don't think that exists.
[18:57:22] <Earnestly> Hm, arch doesn't package otptool
[18:57:24] *** Joins: unop (~unop@195.91.14.193)
[18:57:53] <x10an14> gnoo: We may be misunderstanding/speaking past each other here though
[18:57:53] *** Quits: Guest14 (~Guest14@dyn16.enst-bretagne.fr) (Quit: Client closed)
[18:58:08] <Soliton> afaik bash-completion has some autoload mechanism so it sounds like that part simple doesn't source the extension stuff like it should.
[18:58:10] <x10an14> Earnestly: It's mostly just a wrapper around zbar, but still
[18:58:17] <Earnestly> TIL https://www.nongnu.org/oath-toolkit/
[18:58:22] *** Parts: rsjw (~rsjw@user/rsjw) ()
[18:58:37] <x10an14> Soliton: That matches my understanding. Hence my coming here asking if anyone would be willing to give some advice/assistance =)
[18:58:43] <Earnestly> x10an14: Do you know which specific otptool you use?  I find many examples
[18:58:48] <gnoo> x10an14: i'm talking about https://github.com/scop/bash-completion
[18:58:51] <Earnestly> https://github.com/SciresM/otptool ?
[18:59:23] <Earnestly> This looks quite neat
[18:59:27] <x10an14> gnoo: I believe that's the same one I referenced when I said I have it enabled on my system =)
[18:59:29] <Earnestly> (oathtool)
[18:59:55] <Earnestly> x10an14: Thanks for pointing this out, I might toy around with it
[19:00:13] <x10an14> gnoo: It's basically `programs.bash.completion.enable = true` or something (don't remember exactly) in my nixos/home-manager config.-
[19:00:24] *** Joins: hB7drf (~quassel@user/hB7drf)
[19:00:28] <x10an14> Earnestly: Yw =) Be warned that for us Linux Gamers, steam requires some extra caressing.
[19:00:29] *** Quits: hlauk (~hlauk@176.33.96.72) (Ping timeout: 256 seconds)
[19:00:34] <Earnestly> Also appears to be 'step-cli'
[19:00:41] <x10an14> Which I've kinda stranded on, wanting to fix/figure this out first
[19:00:46] <Soliton> well, if https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion is what is autoloaded by bash-completion then just add the source commands for the extensions, maybe.
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:22] <x10an14> Soliton: Add how? That array?
[19:01:41] <x10an14> That's what I tried to test to confirm it'd be a fix, which I found it wasn't - not completely.
[19:01:42] <Soliton> . file; . file2
[19:02:02] <x10an14> Ahh, so manually source them, instead of learning/fixing compgen usage?
[19:02:16] <x10an14> *auto-manually in my own bashrc
[19:02:19] <Soliton> what would that have to do with compgen?
[19:02:22] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:02:42] <Soliton> if there is more autoload magic in bash-completion maybe there is a different way. no idea.
[19:02:45] *** Quits: hB7drf____ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[19:03:16] <Earnestly> step-cli looks quite involved... https://github.com/smallstep/cli (does otp and such, plumbing functions, and so on)
[19:03:33] <Soliton> this has little to do with completion in general and all to do with how the bash-completions project is set up.
[19:03:35] *** Joins: Lope (~lope@user/lope)
[19:04:15] <x10an14> I presume (might still be wrong) that it's compgen the rest of bash-completion uses. If I `complete | grep load`, I get this output: `_completion_loader`
[19:04:16] <Lope> How can I get 'foo bar' from this? printf 'x foo\nx bar' | awk '{print $2}'
[19:04:46] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[19:04:57] <x10an14> Lope: Finish that pipe with another `| tr '\n' ' '`?
[19:05:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5)
[19:05:21] <Earnestly> Lope: You have to store it, and then print them in the END block, or use logic to print it during parsing if its to be done in pairs
[19:05:36] <Soliton> # printf 'x foo\nx bar' | { read -r a1 a2; read -r b1 b2; printf '%s %s\n' "$a2" "$b2"; }
[19:05:38] <shbot> Soliton: foo bar
[19:05:47] *** Joins: ferdna (~ferdna@user/ferdna)
[19:06:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:06:35] <Lope> thanks x10an14 I like that solution.
[19:06:49] <x10an14> I wanna try the bot...!
[19:06:49] <Lope> thanks guys.
[19:07:12] <x10an14> # printf 'x foo\nx bar' | awk '{print $2}' | tr '\n' ' '
[19:07:13] <shbot> x10an14: foo bar
[19:07:23] <Earnestly> # printf '%s\n' 'x foo' 'x bar' | awk -v RS='' '{print $2, $4}'
[19:07:25] <shbot> Earnestly: foo bar
[19:07:42] <Soliton> always popular to chain as many text manipulation tools together as possible.
[19:08:28] <x10an14> Soliton: Depends if you're going for readability or simplicity. Sometimes I'd say they're mutually exclusive^^ An argument could be made that read/IFS is still a bit outside a novice's comfort zone (they're still out of mine).
[19:08:36] <Earnestly> x10an14: There's a general rule in shell that if you have to invoke a tool, it's best to try and make the most of its capabilities
[19:08:45] <x10an14> But learning the purpose of `tr` is a lower hanging fruit.
[19:09:06] <x10an14> Earnestly: I would agree with that sentiment, and say it's applicable to just about anything, not just shells =)
[19:09:11] <Earnestly> This is how awk tends to slowly eat everything ._.
[19:09:23] <x10an14> I do like awk better than cut, I must admit that
[19:09:35] <Earnestly> x10an14: Yes, it's a nice rule.  A lot of the history has been forgotten but it's comfy to those who know
[19:09:49] <Soliton> if you write for the common cargo-cult googler i guess awk|tr might be more readable.
[19:10:17] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[19:10:25] <x10an14> Soliton: Cargo-cult googler or not, just like cliches, they exist for a reason? =) I'd hazard it's mostly due to lower bar of entry/not as steep learning curves.
[19:10:32] <Soliton> and if you had to replace foo with bar of course you'd pipe into sed.
[19:10:35] <x10an14> *hazard a guess
[19:11:15] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[19:11:24] <Earnestly> This is the double edged sword of shell (command language/4GL).  Very easy to do stupid things and it appears to work
[19:11:43] <Earnestly> Bell Labs tried their best to make it so if someone found a solution it would be optimal, but their work was cut short
[19:11:49] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:11:49] <x10an14> All right, so a different tack on my issue, is there a generally agreed upon foundation/baseline for how multi-word programs should tab-complete?
[19:11:52] <Soliton> well, cargo-cult is all about low entry bar. don't need to understand what you do just a little trial-and-error until it works once.
[19:12:09] <x10an14> Glad we agree then^^=)
[19:12:13] <Earnestly> Soliton: And yet it is unreasonably effective
[19:12:27] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[19:13:09] <Soliton> not sure it's unreasonable. it's just sad if you write actual production code that way.
[19:13:27] <x10an14> If someone's got an example of how the sourced file of a <base program> allows/permits tab-completion of subcommands, I'd be happy to take a read/gander. The few I found were way too big and complicated for me to make heads/tails of.
[19:13:53] <x10an14> I tried looking at both rust's cargo's, starship, and git.
[19:14:07] <x10an14> Didn't manage to make heads/tails of them myself.
[19:14:09] <Soliton> x10an14: again, non of this has anything to do with tab-completion. it's how bash-completion is set up.
[19:14:29] <Soliton> you would not source anything normally.
[19:14:42] <Soliton> you'd just write your completion function and be done.
[19:14:52] <x10an14> Soliton: So you're saying that `complete` and `compgen` belong to the `bash-completion` package gnoo referenced earlier? Not to bash itself?
[19:14:53] *** Quits: bfortified (~bfortifie@user/bfortified) (Remote host closed the connection)
[19:15:05] <Soliton> no.
[19:15:09] <x10an14> If so, I'll thank you for that enlightment and move elsewhere with my quest/inquiry!
[19:15:14] *** Joins: bfortified (~bfortifie@user/bfortified)
[19:15:29] <Soliton> what files are source by bash-completion belongs to that project.
[19:15:47] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[19:16:46] <Soliton> you can put files whereever you want and bash will not care but bash-completion has some system for where it expects files to source.
[19:17:16] <Soliton> i doubt they have a system for command extensions though but who knows.
[19:17:34] *** Joins: hB7drf (~quassel@user/hB7drf)
[19:18:02] <x10an14> I read on some S/E (or maybe it was S/O) post that compgen kinda struggled with spaces. Hence why I came here to ask.
[19:18:22] <x10an14> But thanks for the assist and answers so far! I'm gonna have to take another round at this I see
[19:18:22] <Soliton> how did spaces come into this?
[19:18:39] <x10an14> Soliton: `pass <extension name>` <--- Notice the space?
[19:19:12] <Soliton> how would that work with that extension function they expect?
[19:19:17] <x10an14> `pass o<tab tab>` -> `pass otp`, `pass otp -<tab tab>`.
[19:19:22] <Soliton> you certainly can't have spaces in a function name.
[19:19:29] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[19:19:48] <x10an14> Soliton: That's something I have no idea on how to answer. I've just tried to make an effort piecing things together myself before coming here and badgering others for help.
[19:19:57] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[19:20:00] <Soliton> if extensions can have spaces in their name that setup looks broken.
[19:20:18] <x10an14> It works for git, cargo, and others. So I dunno.
[19:20:38] <Soliton> (again that is all about how those completions are set up. zero to do with completion functions in bash in general.)
[19:20:51] <Soliton> why would it have ANYTHING to do with git or cargo?
[19:20:54] <x10an14> Aight, like I said, thanks for teaching me!
[19:21:40] <x10an14> Soliton: You get the same behaviour there? `git com<tab tab>` -> `git commit`, `git commit --am` -> `git commit --amend`?
[19:21:49] <Soliton> you showed a completion function for pass. unless the completion functions for those commands look similar there is no reason that they work the same in any way.
[19:23:24] <Soliton> does git even have subcommands with spaces?
[19:23:44] *** Quits: tedwing (~anon@lfbn-idf3-1-1415-210.w109-221.abo.wanadoo.fr) (Quit: leaving)
[19:23:45] <Soliton> sounds like bad design anyway.
[19:24:34] <x10an14> I argue that `git commit` contains the same space I was referencing as in my `pass <extension name>`. So maybe this last merry-go-round is just down to another misunderstanding/talking past each other^^
[19:24:37] <Soliton> command line interfaces are based on words. if you allow spaces somewhere it's going to make things more complicated so there should be a very good reason.
[19:25:31] <Soliton> oh, so the space was between command and subcommand? there is no issue with that. why did you bring that up?
[19:26:45] <x10an14> I was trying to explain my rationale for coming here, trying to piece together why the completion works fine for `pass`, but not its extensions. Hence why I mentioned it, I thought there could be a connection.
[19:26:55] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:27:00] <x10an14> But I take it from what you've said there's no such connection there^^
[19:27:03] <Soliton> but you already know why it doesn't work, no?
[19:27:09] *** Joins: lavaball (felix@31.204.155.215)
[19:27:14] <Soliton> some files with those functions are not sourced?
[19:27:18] <x10an14> Obvious maybe for someone with your level of knowledge it (obviously) wasn't for me =)
[19:27:44] <x10an14> Soliton: Yes, and that's what confuses me when I thought I'd found why and how they should be. But I'm not certain I'd found out
[19:29:36] <Soliton> i wouldn't be sure that there is a system honestly. certainly that comment doesn't say anything about it.
[19:29:54] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[19:30:23] <Soliton> if https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion is all there is to the completion where would the magic be?
[19:30:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:31:34] <Soliton> if there was a system then surely there would be code there that checks for some place to source files.
[19:31:49] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[19:32:29] <x10an14> Soliton: Good point, I guess that helped me realize/understand that there is nothing "auto-sourcing" the requred files containing the `__password_store_extension_complete_` mentioned.
[19:32:32] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:33:14] <x10an14> I thought (maybe) that complete/compgen had a system where they'd look in the folder containing all the completions, and try to match/source lazily (like currently happens with say `pass`).
[19:33:18] <x10an14> But I guess not then.
[19:33:21] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[19:33:50] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:33] <Soliton> no, there is just one default completion function that is used if there is nothing specific.
[19:34:57] <Soliton> everything else is built on top from bash-completions or whatever other completion people write.
[19:35:34] <Soliton> if those extensions are installed in a known location then i guess something could be added there, too.
[19:35:50] *** Joins: bluedust (~bluedust@185.248.85.26)
[19:36:23] <x10an14> https://paste.sr.ht/~x10an14/00411baa9935b89f218dac04e6be2dfdba8287c2 <-- This is what made me think it might be something related to complete/compgen/bash
[19:36:33] <x10an14> But I guess - as you say - I'm looking in the wrong place
[19:36:49] <Soliton> well, that is the completion function that is in use.
[19:36:52] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[19:37:11] <Soliton> and that is what we looked at to find the expectation of those extension completion functions.
[19:37:47] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[19:37:51] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[19:38:22] <gnoo> x10an14: ok i think i found the problem...
[19:38:54] <gnoo> bash-completion looks only at BASH_COMPLETION_COMPAT_DIR or the default value /usr/share/bash-completion
[19:39:00] *** Joins: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net)
[19:39:10] <Soliton> ah, i guess you mean that the completion exist after trying it. yes, that is how bash-completion uses the default completion function.
[19:39:12] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[19:39:12] <gnoo> but on nix and guix, /usr/share/bash-completion doesn't exits
[19:39:27] <x10an14> gnoo: That's correct, I know that =)
[19:39:29] <gnoo> instead it is per-package.
[19:39:44] <Soliton> completion for pass in general works as i understood it.
[19:39:58] <Soliton> so the file for pass is found.
[19:40:06] <gnoo> oh, that's nice, it doesn't for me, unfortunately
[19:40:12] <gnoo> so i guess i found my problem :P
[19:40:12] <Soliton> just nothing sources the files for the extension completion.
[19:40:16] <x10an14> But something makes it work for lots of other stuff (most likely replacing stuff like `BASH_COMPLETION_COMPAT_DIR`) to something like `/run/current-system/sw/share/bash-completion/completions/pass*`
[19:40:43] <Soliton> where are those extension completion files?
[19:40:54] <x10an14> Soliton: Talking to me now?
[19:41:00] <Soliton> whoever knows.
[19:41:19] <x10an14> I am not sure what you actually mean, but I'll give you this paste:
[19:41:52] <Soliton> the files which define those __password_store_extension_complete_... functions.
[19:42:13] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[19:42:20] *** Joins: hlauk (~hlauk@176.33.96.72)
[19:42:26] <x10an14> Soliton: Here: https://paste.sr.ht/~x10an14/69d4c02421f17bc0a62ef97ada91cf018bb51e03#-L3
[19:42:39] <x10an14> You see it's duplicated on my system, but the symlinks still point to the same one
[19:43:09] *** Joins: unop (~unop@195.91.14.193)
[19:43:11] <Soliton> so they're next to the pass completion file.
[19:43:31] <x10an14> Yup
[19:43:48] <x10an14> An artifact of this (which I don't expect you to put effort into understanding - as it's Nix): https://github.com/NixOS/nixpkgs/blob/nixos-21.11/pkgs/tools/security/pass/extensions/otp.nix#L23
[19:44:04] <Soliton> well, maybe there is something that is supposed to source them but no idea how that would possibly work.
[19:44:09] <x10an14> Should be somewhat obvious when I say that the `$out` variable references that `/nix/store` path
[19:44:15] <x10an14> Soliton: Fair
[19:44:17] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 240 seconds)
[19:44:40] *** Joins: hB7drf (~quassel@user/hB7drf)
[19:44:55] <Soliton> afaik bash-completion looks for certain files when you try to complete something. that is how you noticed how the pass completion file was loaded.
[19:45:06] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[19:45:20] <Soliton> but then that system is not involved anymore for subcommands. that's all the pass completion function.
[19:46:24] <rendar> dmesg|less -R doesn't keep colors, why? any help?
[19:46:31] <Soliton> the pass completion file could do something like  for f in ./pass-*; do . "$f"; done  but it doesn't...
[19:47:05] <Soliton> (with the correct path to the completion files.)
[19:47:06] <x10an14> rendar: The man page specifies `--colors=always` I believe as a work-around, but "why" has more to do with something messed up/missing in your shell (dmesg thinks you don't have colors/you're piping its output)
[19:47:43] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[19:48:03] <Soliton> i think you meant terminal there. but as you say the output is not going to the terminal but to less.
[19:48:08] <rendar> but dmesg outputs colors
[19:48:22] <Soliton> apparently not when output doesn't go to a terminal.
[19:48:22] <x10an14> Soliton: Thanks - that really helps actually! If I understand you correctly, you've just confirmed that there's a missing link for this, normally expected to reside in `pass`s completion file/code.
[19:48:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:48:59] <x10an14> rendar: Like Soliton and I said. It happens because you pipe without the `--colors` flag.
[19:49:15] <Soliton> x10an14: that's how it looks like for me, yes. i'm not really familiar with bash-completions though. (but i mentioned my reasoning above)
[19:49:35] <x10an14> Thanks again, I really do appreciate you taking your time to slog your way through my ignorance in this =)
[19:49:40] <emanuele6> i think it's --color=always not --colors
[19:49:49] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:49:54] <emanuele6> --color is just --color=auto which would not work
[19:49:57] <x10an14> emanuele6: I defer to the authority of the man-page, not my memory =P
[19:51:57] *** Joins: volga629 (~volga629@72.139.93.26)
[19:52:54] *** Joins: tccki (~tccki@box.webslate.co.nz)
[19:53:01] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[19:53:15] *** Joins: bluedust_ (~bluedust@59.89.220.95)
[19:53:51] <gnoo> while IFS= read -rd '' file ; do . "$file" ; done < <(find ~/.guix-profile/share/bash-completion/completions/ -type f -print0)
[19:54:03] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:54:06] <gnoo> finally, completions
[19:54:14] <Soliton> there's really no need for find is there.
[19:54:17] <x10an14> I don't remember who exactly linked it (gnoo? Earnestly?), but I just confirmed that this is the bash-completion: https://github.com/scop/bash-completion/tree/v2.11.0
[19:54:46] <gnoo> for file in ~/.guix-profile/share/bash-completion/completions/* ; do ... ?
[19:54:53] <Soliton> yes.
[19:54:56] <gnoo> ok, thanks!
[19:55:12] <gnoo> should this be in ~/.bash_profile or ~/.bashrc ?
[19:55:13] <x10an14> That kinda ignores the lazy-loading functionality though, no? Not that it won't work?
[19:55:21] <Soliton> yes.
[19:55:40] <Soliton> ideally there is a variable with the path and you would put that in the pass file.
[19:55:51] <x10an14> gnoo: Doesn't matter, as long as its an interactive instance of the shell
[19:56:35] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 256 seconds)
[19:56:39] <Soliton> for file in "$bash_completions_include_dir"/pass-*; do . "$file"; done
[19:56:55] <gnoo> ok, i'll try in ~/.bash_profile, then
[19:58:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:00:00] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:00:13] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:87f:618e:a3ba:535b) (Remote host closed the connection)
[20:00:31] *** Joins: N4buc0- (~N4buc0@2804:7f4:348b:2121:2e45:e323:fc31:aa4d)
[20:01:02] <rendar> but dmesg hasn't --colors
[20:01:17] <rendar> neither less has it
[20:01:32] <Soliton> how would less be relevant.
[20:01:50] <gnoo>        -L, --color[=when]
[20:02:16] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:02:34] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[20:03:36] <rendar> ok
[20:03:40] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:03:57] *** Quits: Mo (~Mo@dynamic-077-000-223-207.77.0.pool.telefonica.de) (Ping timeout: 256 seconds)
[20:04:30] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[20:04:47] *** Joins: reset (~reset@user/reset)
[20:05:30] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[20:05:52] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[20:06:38] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Excess Flood)
[20:06:54] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[20:09:33] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:05] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:13:46] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[20:13:50] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[20:13:54] <spawnmc> !paste
[20:13:54] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[20:13:58] *** cdown_ is now known as cdown
[20:14:11] *** Joins: jinsun__ (~quassel@user/jinsun)
[20:14:43] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[20:15:58] <spawnmc> I'm having a hard time understanding why I'm getting a syntax error with this if statement here: http://paste.debian.net/1230148/
[20:16:13] <Soliton> !check
[20:16:14] <checkbot> spawnmc: Line 1: Couldn't parse this command expansion. Fix to allow more checks. Line 1: The mentioned syntax error was in this test expression. Line 2: Unexpected keyword/token. Fix any mentioned problems and try again. See https://shellcheck.net/?id=cb25174
[20:16:26] <Soliton> you're missing the closing parens.
[20:16:44] <spawnmc> ugh sometimes i'm really blind thanks
[20:17:50] <x10an14> How can I check (in bash) with a `case...esac` construct, if the input variable/word is part of a list? I'm thinking of that `PASSWORD_STORE_EXTENSION_COMMANDS` array/list
[20:18:08] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[20:18:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[20:18:54] <Soliton> if it's in the array?
[20:18:56] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[20:18:58] <Soliton> !inarray
[20:18:58] <greybot> Check whether a value is in an array: inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; } # Usage: inarray "$value" "${array[@]}" Or just use an associative array if possible
[20:18:59] <x10an14> Something like
[20:18:59] <x10an14> ```
[20:18:59] <x10an14> case WORD in
[20:18:59] <x10an14>   $PASSWORD_STORE_EXTENSION_COMMANDS)
[20:18:59] <x10an14>     foo
[20:18:59] <x10an14>     ;;
[20:18:59] <x10an14> esac
[20:19:00] <x10an14> ```
[20:19:15] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:19:21] <Soliton> $PASSWORD_STORE_EXTENSION_COMMANDS is the same as ${PASSWORD_STORE_EXTENSION_COMMANDS[0]}
[20:19:25] <x10an14> Not boolean check if something is in an array, but specifically matching inside of a `case..esac` clause`
[20:19:32] *** Joins: zebrag (~chris@user/zebrag)
[20:19:44] <Soliton> case does not seem appropriate.
[20:20:32] <Soliton> ideally you'd use an assoc array if you need to check membership often.
[20:20:35] <x10an14> I am trying to be minimally invasive in my attempt to add the required support here: https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion#n126
[20:21:08] <x10an14> If that isn't possible, then I guess it isn't... I was hoping to just add a clause, and then load the requisite extension completion file on-demand.
[20:21:10] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:21:17] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:21:34] <Soliton> but the extension support is already in the next lines?
[20:21:55] <Soliton> or what kind of support?
[20:22:23] <x10an14> Soliton: I don't see how to emulate the lazy-loading of _just_ the extension required with the next lines. The next lines read to me as "you must have already sourced all the files and hope the correct function has now been sourced"
[20:22:36] <Soliton> i mean you can expand the array to elem1|elem2|... i guess and hope for the best.
[20:22:54] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:22:55] <Soliton> why just the required extensions??
[20:23:05] <Soliton> you don't need to get crazy.
[20:23:23] <Soliton> just source all existing extension files.
[20:23:59] <Soliton> and not in that function anyway.
[20:24:03] <Soliton> outside of it.
[20:24:07] *** Quits: adac (~adac@static.153.233.47.78.clients.your-server.de) (Ping timeout: 256 seconds)
[20:24:27] <x10an14> Doesn't feel like a "clean" solution to me, considering that I was hoping to make this follow the lazy-eval/sourcing pattern.
[20:24:29] <Soliton> you want to do it once when the completion for pass is loaded.
[20:24:32] <spawnmc> would something like if [[ -f $file && $(find "$file" -mmin +120 -printÂ  ]] work to check if a file both exists and is older than 120 minutes
[20:25:08] <x10an14> Feels more like bringing the force of dynamite to insert a wooden plug in a barrel (e.g. sourcing all extension files ahead of time)
[20:25:22] *** Parts: silly (silly@user/silly) (Leaving)
[20:25:32] <Soliton> lazy loading all extensions starting with s on "pass s<tab>" is not reasonable and not how the existing autoloading works either.
[20:25:47] <x10an14> spawnmc: You can combine the two clauses with `find`'s `-type f` parameter
[20:26:41] *** Joins: llua (~llua@zsh/developer/llua)
[20:27:37] *** llua is now known as looah
[20:27:49] <spawnmc> makes sense
[20:28:35] <x10an14> Soliton: I thought that's how it did work, but I guess I've misunderstood. I use `pas<tab tab>`to finish `pass`, and then I would've liked `pass <tab tab>` to also list the potentially installed extensions.
[20:29:58] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[20:30:20] *** Joins: nonix4 (~iheino@2001:2003:f46a:5300:bff6:7276:5426:c015)
[20:31:44] *** Joins: hB7drf (~quassel@user/hB7drf)
[20:33:45] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[20:34:12] <Soliton> seems silly to require the user to populate PASSWORD_STORE_EXTENSION_COMMANDS in the first place. just expect pass-* files and assume each belongs to one extension.
[20:34:52] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) ()
[20:35:09] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 250 seconds)
[20:35:30] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[20:35:38] <[-_-]> Hi
[20:35:51] <[-_-]> oops, sorry ignore
[20:35:55] <dirtwash> since lot of smart people are here int his channel : anybody got an idea what distributed db to use that is capable of like 500k/s inserts? its a scaling difficulty for sure
[20:36:06] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[20:36:21] *** Quits: bluedust_ (~bluedust@59.89.220.95) (Remote host closed the connection)
[20:37:51] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:37:56] <looah> sqlite3
[20:38:29] *** Joins: davidl (~quassel@185.86.106.208)
[20:39:02] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[20:39:06] *** Joins: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e)
[20:39:25] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[20:40:29] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[20:41:17] *** Joins: jinsun (~quassel@user/jinsun)
[20:42:55] <xiaomiao> dirtwash: depends on a lot of requirements
[20:43:16] *** Joins: zopsi (~zopsi@104-237-136-227.ip.linodeusercontent.com)
[20:43:20] <xiaomiao> 500k/s isn't difficult in itself on modern hardware, but you may have strange ideas about persistence and such
[20:43:27] <Oleg> do posix shells have the setvar keyword?
[20:43:47] <yitz> You could check the POSIX shell spec and see what POSIX mandates
[20:43:50] <Soliton> # setvar
[20:43:52] <shbot> Soliton: bash: setvar: command not found
[20:44:02] <emanuele6> Oleg: bash is a posix shell and it does not have it so no
[20:44:15] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[20:44:15] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[20:44:25] <yitz> There's no "posix shells" per se. There's a bunch of shells that try to conform to the standards.
[20:45:40] <Soliton> i guess you mean there is no shell that only implements posix features and no extensions.
[20:46:05] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:46:19] *** Joins: luva4 (~luva@45.141.152.62)
[20:47:01] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[20:47:29] <dirtwash> xiaomiao: really? I dont know any that can do more than 150 or so
[20:47:39] <dirtwash> even on major hardware, distributed makes it more difficult
[20:47:43] <yitz> There's no POSIX certification or list of shells which meet the standards.
[20:47:48] <dirtwash> i mean it could be single instance
[20:48:03] <yitz> There's a POSIX standard. There's shells which are designed to meet those standards.
[20:48:12] <xiaomiao> dirtwash: if I were in a hurry I'd use lots of redis ... but this discussion is a bit offtopic here
[20:48:27] <xiaomiao> (not that I suggest actually doing that in production, but ...)
[20:49:51] *** Quits: luva (~luva@37.120.197.53) (Ping timeout: 256 seconds)
[20:49:51] *** luva4 is now known as luva
[20:51:06] <Soliton> there is certainly posix certification but looks like this is just semantic games.
[20:51:18] *** Joins: masoudd (~masoudd@user/masoudd)
[20:54:19] *** Quits: cryptonector (~nico@24.28.108.183) (Remote host closed the connection)
[20:55:43] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:56:51] *** Joins: knstn (~knstn@ppp-94-66-57-191.home.otenet.gr)
[20:59:37] *** Joins: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de)
[20:59:59] *** Joins: hB7drf (~quassel@user/hB7drf)
[20:59:59] *** Quits: unixman (~aunixman@209.165.142.0) (Quit: rm -rf /)
[21:00:45] *** Joins: cryptonector (~nico@24.28.108.183)
[21:01:17] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[21:01:42] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[21:01:42] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[21:02:08] *** Joins: bluedust (~bluedust@59.89.220.95)
[21:02:12] *** Joins: A|an (~Alan@173.218.175.171)
[21:02:51] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[21:02:52] *** Joins: Nendi (~Nendi@195.224.166.74)
[21:02:59] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:03:13] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:03:27] *** Quits: davidl (~quassel@185.86.106.208) (Ping timeout: 256 seconds)
[21:03:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:04:01] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:05:17] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[21:06:32] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:08:39] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[21:09:10] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[21:09:27] *** Quits: john_johnk (~Thunderbi@232.58.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[21:11:36] *** Joins: smrtz (~smrtz@user/smrtz)
[21:12:27] *** Joins: luva6 (~luva@45.141.152.61)
[21:12:40] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:13:30] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:14:11] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[21:15:55] *** Quits: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[21:16:07] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 250 seconds)
[21:16:07] *** luva6 is now known as luva
[21:16:10] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:16:57] *** Quits: Lope (~lope@user/lope) (Ping timeout: 240 seconds)
[21:17:01] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 245 seconds)
[21:17:51] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 245 seconds)
[21:20:17] *** Joins: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net)
[21:21:48] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:3caf:1512:480a:ea92) (Quit: Leaving)
[21:22:18] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[21:22:21] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[21:23:33] *** Joins: nyex (~Thunderbi@177.84.107.36)
[21:25:31] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-119-49-188.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[21:26:07] *** Joins: CoreISP (~LvH@simplemachines/serverteam/CoreISP)
[21:26:31] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:28:11] *** Quits: Night-Shade (~Tim@ip1f11e523.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:29:37] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[21:30:05] <yitz> Heh. I didn't know there was any such certs
[21:30:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:30:31] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:30:42] *** Quits: unop (~unop@195.91.14.193) (Remote host closed the connection)
[21:30:58] *** Joins: unop (~unop@195.91.14.193)
[21:31:56] <emanuele6> apple even patches bash to pass them.
[21:32:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[21:33:11] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[21:33:37] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[21:34:44] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:36:52] *** Joins: crashrep (~crashrep@user/crashrep)
[21:38:17] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[21:39:17] *** Quits: revolve (~u0_a227@82-132-227-141.dab.02.net) (Ping timeout: 240 seconds)
[21:39:37] *** Quits: Nendi (~Nendi@195.224.166.74) (Remote host closed the connection)
[21:39:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:40:16] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[21:40:21] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[21:40:35] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[21:40:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:41:49] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[21:43:39] *** Joins: ed (~ed@2404:160:181:8e4d:450:7e92:651b:f90a)
[21:44:01] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[21:45:14] *** Joins: Lope (~lope@user/lope)
[21:46:03] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[21:46:22] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[21:46:53] *** Quits: leftyfb (leftyfb@ubuntu/member/leftyfb) (Ping timeout: 250 seconds)
[21:47:16] *** Joins: karakedi (~eAC53C340@user/karakedi)
[21:48:24] *** Joins: adac (~adac@static.153.233.47.78.clients.your-server.de)
[21:48:59] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[21:52:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:53:36] *** Joins: leftyfb (leftyfb@wargames.left-click.org)
[21:53:53] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[21:54:22] *** Joins: magla (~gelignite@55d46452.access.ecotel.net)
[21:54:32] *** Joins: n4dir (~user@i5E86C541.versanet.de)
[21:54:33] *** Joins: N4buc0 (~N4buc0@177.16.170.138)
[21:55:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e5c:7359:da93:f16c)
[21:55:21] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[21:55:33] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:2121:2e45:e323:fc31:aa4d) (Remote host closed the connection)
[21:55:34] *** Joins: blingrang_ (~blingrang@user/blingrang)
[21:56:17] *** Quits: luva (~luva@45.141.152.61) (Quit: Ping timeout (120 seconds))
[21:56:37] *** Joins: luva (~luva@45.141.152.61)
[21:57:17] *** Joins: hB7drf (~quassel@user/hB7drf)
[21:57:36] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[21:58:02] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[21:59:33] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[21:59:36] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[22:00:05] *** Joins: hB7drf___ (~quassel@user/hB7drf)
[22:00:27] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:02:04] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:02:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:03:31] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:03:47] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 250 seconds)
[22:04:24] *** Joins: blingrang__ (~blingrang@user/blingrang)
[22:04:53] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[22:04:53] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Client Quit)
[22:05:24] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[22:05:47] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[22:05:47] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574)
[22:05:47] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:19fe:5684:c662:9574) (Changing host)
[22:05:47] *** Joins: skapata (~Skapata@user/skapata)
[22:07:53] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:10:05] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Ping timeout: 256 seconds)
[22:10:28] *** Joins: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d)
[22:10:57] *** Quits: hB7drf___ (~quassel@user/hB7drf) (Ping timeout: 240 seconds)
[22:12:34] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[22:18:35] *** Joins: greycat (~greg@209.142.155.49)
[22:19:20] <Earnestly> yitz: there is certs for posix, sus and unix (not sure if unix/sus are same)
[22:19:27] <Earnestly> nice little grift
[22:19:39] <Earnestly> like iso
[22:19:54] *** Joins: vandito (~vandito@131.0.224.113)
[22:20:01] *** Joins: Betal (~Betal@user/betal)
[22:20:06] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[22:21:55] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[22:22:16] *** Quits: vandito (~vandito@131.0.224.113) (Client Quit)
[22:22:38] *** Joins: zro (~zro@user/zro)
[22:22:56] *** Quits: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[22:23:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e5c:7359:da93:f16c) (Quit: Leaving)
[22:23:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:25:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:25:47] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[22:26:24] *** Joins: wurstwasser (~frank.hol@2001:a61:34a7:b001:19ad:bc3e:942c:6a75)
[22:27:21] <Earnestly> ormaaj: js78 has read(), var buf = read(scriptArgs[0], "text");
[22:27:27] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[22:28:41] <greycat> what does "text" do there?
[22:30:17] <Earnestly> I'm not sure.  I'm having difficulty finding docs so I'm just looking at the codebase.  I saw examples using binary which prints it like erlang (array of numbers representing bytes).  Tried 'text' (rather than utf-8) by trying to think like js programmer and it worked
[22:30:39] <Earnestly> I'm trying to with /dev/stdin but it doesn't want to open that, but I am finding tty code and such here.  I'll see if I can find better docs
[22:32:34] <greycat> Tcl's read command can either read all available data until EOF, or be given a numeric argument for the number of characters to read.
[22:33:15] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[22:33:16] *** Quits: ed (~ed@2404:160:181:8e4d:450:7e92:651b:f90a) (Remote host closed the connection)
[22:33:17] *** Joins: Atque (~Atque@user/atque)
[22:33:39] *** Joins: ed (~ed@2404:160:181:8fa4:bea2:187f:879a:b950)
[22:33:41] *** Quits: TomyWork (~TomyLobo@p200300e80f006700dc152f3d3af22ca2.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:33:59] <greycat> (and characters can mean bytes, if the FD is configured to be read in "binary" mode, but more often it will not)
[22:34:02] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[22:34:23] <Earnestly> Hm, see I don't think this js78 is meant to be used like this.  It's very much 'hidden', you won't find anything on google so much
[22:34:29] <Earnestly> It's not like node or such
[22:35:00] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[22:35:09] <OnlineCop> I've got several grep aliases to help recursively search within specific files for patterns. Most of the time, I want to show the line numbers for the results (especially so vscode can jump to that file+line), so I have the `grep -n` flag set. However, I'd like for `-n` to not be set when I will pipe this result somewhere (like for `xargs`). Is there a way to dynamically apply (or not) this `-n` flag?
[22:35:46] <greycat> Replace the aliases with functions.  Then, you can use test -t 1 (or equivalent) inside the function, dynamically construct the arg list, etc.
[22:36:08] <OnlineCop> Is `test -t 1` a test for a pipe redirection?
[22:36:14] <greycat> !isatty
[22:36:14] <greybot> You can see whether a file descriptor is open on a terminal with test -t. Many programs perform a check like this and change their behavior: ls, GNU grep, git, systemctl, etc.
[22:36:16] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[22:39:35] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 252 seconds)
[22:40:17] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:41:17] *** Joins: hB7drf__ (~quassel@user/hB7drf)
[22:42:14] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[22:42:53] *** Quits: andril (~andril@2601:586:8400:1d9:b17:6e6e:57cb:e42d) (Ping timeout: 252 seconds)
[22:43:33] *** Joins: wyfnt (~wyfnt1232@103.214.137.74)
[22:44:05] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:45:13] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:45:35] *** Joins: c41e3a (~c41e3a@user/c41e3a)
[22:46:03] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de)
[22:47:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:48:57] <Earnestly> greycat: Found https://web.archive.org/web/20210506015201/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Introduction_to_the_JavaScript_shell which helps quite a bit
[22:48:59] *** Joins: hB7drf (~quassel@user/hB7drf)
[22:50:06] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[22:50:18] <Earnestly> A tad out of date
[22:50:41] *** Quits: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[22:50:53] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[22:51:58] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[22:52:04] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:52:35] *** Quits: hB7drf__ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:52:43] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[22:52:45] *** Quits: Lope (~lope@user/lope) (Ping timeout: 250 seconds)
[22:53:31] <emanuele6> Earnestly: help(read)
[22:53:38] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[22:53:52] <Earnestly> emanuele6: I found more
[22:54:00] <Earnestly> emanuele6: IT has os.file.listDir, and such
[22:54:38] <Earnestly> writeTypedArrayToFile hm
[22:54:48] <emanuele6> well, the argument basically is ignored unless it is "binary". if it is not "binary", it returns a string otherwise it returns a Uint8Array
[22:55:15] <Earnestly> Yes
[22:55:18] *** Joins: Atque (~Atque@user/atque)
[22:55:27] <Earnestly> I found source, so can carry on
[22:55:48] *** Joins: bullshark1 (~bullshark@cpe-70-123-216-149.satx.res.rr.com)
[22:55:54] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[22:56:05] <bullshark1> How come this does not insert new lines?
[22:56:07] <bullshark1> echo "${PATH//:/\n}"
[22:56:18] <emanuele6> why would it?
[22:56:33] <larryv> because bash does not interpret "\n" as NL there
[22:56:33] <emanuele6> # echo \n
[22:56:35] <shbot> emanuele6: n
[22:56:37] <emanuele6> that is an n
[22:56:47] <bullshark1> ${variable//search/replace}
[22:56:47] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Remote host closed the connection)
[22:56:50] <emanuele6> if you want a newline, either enter a literal newline, or use $'\n'
[22:57:01] <emanuele6> "${PATH//:/$'\n'}"
[22:57:42] <emanuele6> \n is just an n
[22:57:49] <emanuele6> that is quoted with \-quoting
[22:57:52] <emanuele6> !quote
[22:57:52] <greybot> https://mywiki.wooledge.org/Quotes
[22:58:23] <Earnestly> This is... it has printErr, it has os.spawn, os.waitpid, ooooh.
[23:00:22] *** Quits: ChmEarl (~chmearl@user/chmearl) (Read error: Connection reset by peer)
[23:00:24] <olspookishmagus> how would you keep the 5 top and the 5 bottom lines of a files?
[23:00:39] *** Joins: ChmEarl (~chmearl@user/chmearl)
[23:01:18] *** Joins: xx (~xx@user/xx)
[23:01:29] <emanuele6> one way is    something | { head -n 5; tail -n 5 ;}
[23:01:33] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[23:01:53] <olspookishmagus> that's a cool way
[23:01:55] <olspookishmagus> thank you
[23:02:08] <emanuele6> ah, it doesn't work
[23:02:12] <olspookishmagus> I didn't know about the | { ... } structure
[23:02:17] <olspookishmagus> where can I read more on that?
[23:02:49] <larryv> !{ > olspookishmagus
[23:02:49] <greybot> olspookishmagus: Command grouping. Like (), but doesn't spawn a subshell. See http://mywiki.wooledge.org/BashGuide/CompoundCommands#Command_grouping
[23:02:55] <emanuele6> huh, weird
[23:03:14] <emanuele6> cat file | { head -n 5; tail -n 5 ;}   only prints the first five lines
[23:03:19] <olspookishmagus> there is a mage spell named: wierd BTW :P
[23:03:34] <emanuele6> { head -n 5; tail -n 5 ;} < file    prints both the first five and the last five
[23:03:58] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[23:04:48] <olspookishmagus> for i in {1..15} ; do echo $i ; done | { head -n5; tail -n5; }
[23:04:53] <emanuele6> same for    printf '%s\n' {1..20} | { head -n 5; tail -n 5 ;}   it only prints the first 5
[23:04:57] <emanuele6> odd
[23:05:14] <emanuele6> why is that?
[23:05:24] <olspookishmagus> should I make some coffee?
[23:05:52] <emanuele6> well, just use awk or sed then
[23:06:00] <olspookishmagus> perhaps the stream needs to be redirected to each command and the resulting streams joined somehow?
[23:06:00] <Earnestly> greycat: My thinking here is that js78 is pretty common on linux (as gnome, firefox, polkit, the lot) requires it.  And it might be a nice way to handle html/xml
[23:06:42] *** Quits: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[23:07:30] <emanuele6> that { head -n 5 ; tail -n 5 ;} seems to work only if stdin is a file, not if it is a pipe
[23:07:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[23:09:09] <emanuele6> ah, of course, head is reading all the input
[23:09:35] <greycat> Yup.  head is a pig.
[23:09:53] <olspookishmagus> do we tolerate speciests in here? xD
[23:10:45] <olspookishmagus> I get an unexpected token `foo' here: $ { head -n5; tail -n5; } < for foo in {1..20} ; do printf "%02d\n" "$foo" ; done
[23:10:59] <larryv> :-/
[23:11:22] <olspookishmagus> I prefer larry iv
[23:11:22] <greycat> olspookishmagus: head uses buffered reads.  it will not work here.
[23:11:44] <olspookishmagus> so I guess sed and awk will do what I want with much much much less hassle
[23:11:44] <larryv> olspookishmagus: hilarious.
[23:11:53] <olspookishmagus> larryv: first time you heard that?
[23:11:57] <greycat> you either need to replace head with something non-buffered, such as 5 consecutive read commands, or else write a *single* filter that'll do both halves
[23:12:01] <larryv> olspookishmagus: yes, actually
[23:12:33] <olspookishmagus> they ruined the series once Al Lowe was no more involved
[23:12:52] <olspookishmagus> I liked the keyword "filter"
[23:12:58] <olspookishmagus> ok, ok - let's wrap this
[23:13:10] <olspookishmagus> and thank you emanuele6 and greycat for helping
[23:13:32] <emanuele6> i guess you will have to use something like
[23:13:40] <emanuele6> awk 'BEGIN { for (i = 1; i <= 5 && getline == 1; ++i) print } { a[(NR - 1) % 5] = $0 } END { for (i = 0; i < 5; ++i) print a[i] }'
[23:13:53] <emanuele6> mm, not quite
[23:14:58] <olspookishmagus> !descriptors
[23:15:04] <olspookishmagus> !fd
[23:15:05] <greybot> http://mywiki.wooledge.org/FileDescriptor
[23:15:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[23:15:35] *** Joins: timm (~timm@user/timm)
[23:15:39] *** Joins: hB7drf (~quassel@user/hB7drf)
[23:15:53] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[23:17:28] <emanuele6> it's more complex than that awk command, but yeah
[23:18:00] <greycat> I'm also wondering what the filter is supposed to do if there are fewer than 10 lines of input.
[23:19:08] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:19:21] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:22:43] *** Quits: c41e3a (~c41e3a@user/c41e3a) (Quit: c41e3a)
[23:23:34] <Earnestly> Well nevermind, it doesn't have DOMParser()
[23:24:16] *** Quits: timm (~timm@user/timm) (Ping timeout: 268 seconds)
[23:24:36] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:24:40] <Earnestly> Or XSLTProcessor()
[23:25:04] *** Joins: crashrep (~crashrep@user/crashrep)
[23:25:11] *** Quits: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[23:25:31] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[23:26:08] *** Joins: fuzzybear3965 (~fuzzybear@92.253.212.100)
[23:26:30] *** Quits: ChmEarl (~chmearl@user/chmearl) (Read error: Connection reset by peer)
[23:26:46] *** Joins: rcernin (~rcernin@124.190.132.36)
[23:26:47] *** Joins: ChmEarl (~chmearl@user/chmearl)
[23:28:52] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:28:59] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:29:05] *** Quits: hB7drf (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:29:53] <ELFrederich> I ssh into a machine and use VIM and I get one set of colors, but when I ssh into the same machine, enter a tmux session and edit the same file I get different colors.  Any idea what is controlling this?  I put 'set -g default-terminal "xterm-256color"' in my ~/.tmux.conf file
[23:30:05] <ormaaj> Earnestly: js78? Was that for me? I must be missing some backlog.
[23:30:46] <Earnestly> ormaaj: Yes, because you mentioned qjs having IO
[23:30:53] *** Joins: hB7drf (~quassel@user/hB7drf)
[23:30:55] <greycat> ELFrederich: you could check the $TERM variable before running vim.  Just to be sure.
[23:30:59] <Earnestly> I discovered, this does too
[23:31:11] <ormaaj> oh right :)
[23:31:25] <emanuele6> nodejs also has io
[23:31:32] <Earnestly> yesbutthatisnodejs
[23:31:42] <Earnestly> this is random crap that people tend to have installed
[23:31:55] *** Joins: volga629 (~volga629@72.139.93.26)
[23:32:02] <Earnestly> Thought to see if it could fill in gaps like xmlstarlet/xmllint/dateutils, etc.
[23:32:05] <ELFrederich> greycat, in both cases... `xterm-256color`
[23:32:40] <ormaaj> That's the same spidermonkey they use in policykit?
[23:33:01] <Earnestly> Yeah, and in gjs and some other things
[23:33:18] <emanuele6> you read data by doing   process.stdin.on('data', data => something())
[23:33:52] <emanuele6> here is a line buffer reading thing i wrote a while ago: https://0x0.st/oXOA.txt
[23:33:59] <emanuele6> nodejs is not really commandline friendly
[23:34:13] <ELFrederich> greycat, as far as environment variables go... I did a an `env | sort > /tmp/outside` from outside tmux an similarly one from inside.  Diffed them and only difference is SHLVL=0 vs SHLVL=1, additionally the tmux also had TMUX and TMUX_PANE set
[23:34:15] <Earnestly> Yeah, not sure why you bring it up
[23:34:19] <Earnestly> Could just use python
[23:34:24] <emanuele6> yeah
[23:34:30] <greycat> ELFrederich: Ask #vim, then.
[23:34:45] *** Quits: hB7drf_ (~quassel@user/hB7drf) (Ping timeout: 256 seconds)
[23:34:56] <ELFrederich> greycat, will do ... didn't know how many things could be at play here ;-)
[23:35:00] <ormaaj> ELFrederich: https://github.com/godlygeek/csapprox
[23:35:10] <larryv> ELFrederich: fwiw tmux expressly says that default-terminal must be "screen" or "tmux" or "tmux-256color". you shouldn't be seting it to 'xterm-anything'
[23:35:15] <Earnestly> Problem with tcl is that it comes with very little by default, so even though it is available, not always most useful form.  perl is a bit like this too
[23:35:19] *** Joins: JyZyXy (~jyz@85-76-76-124-nat.elisa-mobile.fi)
[23:35:23] <larryv> *or "tmux-256color" or something similar
[23:35:24] *** Joins: voltron (~junaid@ip4d158509.dynamic.kabel-deutschland.de)
[23:36:04] <larryv> of course, none of this is about bash
[23:36:08] <ELFrederich> larryv, hm, I set it to that because when inside of tmux I lose my colored prompt.  I googled how to fix that and that was the solution.
[23:36:17] <ELFrederich> larryv, I'll delete the tmux file and see if they're the same
[23:36:41] <ormaaj> vim's colors are screwy normally.
[23:37:43] <ELFrederich> so outside of tmux strings look nice.  Inside of tmux they're red... and it makes me think something is wrong ;-)
[23:38:35] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:39:01] <larryv> ELFrederich: TERM should not be the same inside and outside of tmux. disabuse yourself of that notion. still not about bash
[23:39:19] <ormaaj> yes if it's only inside tmux then something's wrong
[23:39:37] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 256 seconds)
[23:39:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[23:40:19] <emanuele6> try setting a vim colour scheme
[23:40:32] <emanuele6> e.g. :colorscheme darkblue
[23:40:35] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[23:40:38] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:40:42] <emanuele6> oh, but ask #vim, not here
[23:40:57] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:44:25] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Quit: WeeChat 3.3)
[23:46:03] *** Joins: viridian (~viridian@user/c41e3a)
[23:47:02] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[23:47:10] *** Joins: junebug (~junebug@2600:1700:3db0:2540:bb54:f69c:5ce0:5722)
[23:47:19] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:49:34] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:50:35] *** Joins: yustin (~yustin@user/yustin)
[23:51:26] *** Quits: rcernin (~rcernin@124.190.132.36) (Ping timeout: 256 seconds)
[23:56:16] *** Parts: voltron (~junaid@ip4d158509.dynamic.kabel-deutschland.de) ()
[23:58:10] *** Joins: hB7drf_ (~quassel@user/hB7drf)
[23:59:09] <Earnestly> greycat: I might be missing something, but can tclsh be used like sh -c/python -c/perl -e, etc?
