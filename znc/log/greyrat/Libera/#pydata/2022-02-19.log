[00:00:12] *** Joins: goldfish (~goldfish@user/goldfish)
[00:22:10] <mefistofeles> Arrinao: well, for starters your return is in a weird indent level
[00:22:19] <mefistofeles> but I guess that's just a copy/paste thing
[00:22:31] <Arrinao> yeah
[00:22:51] <mefistofeles> oh, we've been through this again xD
[00:22:59] <mefistofeles> s/again/before
[00:23:12] <mefistofeles> check what I said back then
[00:23:24] <Arrinao> ok :D
[00:24:18] <Arrinao> was it really me? last time we were discussing np.flatten
[00:25:36] <Arrinao> or more precisely np.concatenate((a,b), 1)
[00:26:20] <mefistofeles> Arrinao: pretty sure https://bpa.st/TZ7A 
[00:26:50] <mefistofeles> specially the last line there
[00:27:07] <mefistofeles> if you still insist on using apply, then you need a function that takes the series/df not a value of it
[00:27:11] <Arrinao> ah I missed this one, youre right
[00:29:09] <Arrinao> but this thing works until I add the axis param
[00:30:32] <mefistofeles> yeah, that's because apply is not really meant to be used that way
[00:30:49] <Arrinao> mefistofeles and it doesn't matter it's getting passed a Series here, because the Series will do the mapping itself
[00:31:28] <mefistofeles> also, what error are you getting?
[00:31:40] <Arrinao> mefistofeles so you can either define a function with additional args, or a function with axis? wtf?
[00:31:59] <Arrinao> subtr() got an unexpected keyword argument 'axis'
[00:32:15] <mefistofeles> yes, because you are using the wrong thing, which is apply and apply is not meant to be used for this... even though you can, but... why :P
[00:32:26] <Arrinao> this is effectively regardles of where the axis argument is put
[00:32:58] <Arrinao> just trying out stuff :D noting the limitiations and drawing the borders
[00:34:42] <Arrinao> this also help to understand the method better
[00:38:45] <mefistofeles> Arrinao: axis make no sense for a series
[00:38:58] <mefistofeles> it is 1D
[00:39:13] <mefistofeles> I mean, axis=1, that is
[00:39:32] <Arrinao> alright then imagine there wouldn't be df2['Age'] but just df2
[00:39:46] <mefistofeles> ok, then you want to refactor the function to account for that
[00:39:50] <Arrinao> or df2[['Age', 'Age2']]
[00:39:55] <mefistofeles> or use a better thing such as applymap
[00:39:55] <mefistofeles> :P
[00:40:08] <Arrinao> let's stay with the apply() for now :D
[00:40:28] <Arrinao> you still haven't answer my question though :D
[00:41:37] <mefistofeles> Arrinao: what's the question again?
[00:42:03] <mefistofeles> also, I'm not here to answer your or anyone's question, just be clear :)
[00:42:14] <Arrinao> where am I supposed to put the axis arg when I'm passing a function that takes more than one arg
[00:42:42] <mefistofeles> axis doesn't make sense for a series, so nowhere
[00:42:53] <Arrinao> if there's a dataframe instead
[00:43:03] <mefistofeles> if you want to pass the df, then you have to change your code accordingly, you haven't done that
[00:43:21] <mefistofeles> the way the subtr function is defined doesn't work for a df
[00:44:38] <mefistofeles> Arrinao: maybe this makes it clearer, are you familiar with some basic object oriented programming? 
[00:45:27] <mefistofeles> the first argument in subtr function would be the instance of the object, so you want your function to handle that
[00:45:59] <mefistofeles> it's somewhat analogous to creating a .subtr(self, *args, **kwargs) method for a class in Python, again, if you are familiar with that
[00:46:03] <Arrinao> https://dpaste.com/A4XMT6P4F
[00:46:35] <mefistofeles> Arrinao: ok, what about that?
[00:47:02] <Arrinao> the same. Were passing a dataframe now, not a series. Now what about the axis arg?
[00:47:10] <mefistofeles> the subtr function is still not meant to deal with dataframes, as far as I can see
[00:47:18] <mefistofeles> you have to change that
[00:48:01] <Arrinao> how come it isn't? 
[00:50:53] <Arrinao> args param should allow to pass the additional args to the function. Idk what I'm doing wrong here
[00:51:32] <Arrinao> mefistofeles and like I said, the thing works as long there's no axis arg
[00:54:41] <mefistofeles> Arrinao: ok, I'm gonna give you the answer but I didn't want to because it's good when people realize these things by themselves. To be fair, this is not an easy thing, it's a subtletie on how the pandas API works, which is not pretty in some cases
[00:56:02] <Arrinao> I see
[00:56:33] <mefistofeles> Arrinao: https://bpa.st/NSJA 
[00:57:24] <mefistofeles> oh I forgot to actually use the other arguments, but that's just a technicality xD
[00:57:37] <mefistofeles> you get the point
[00:58:38] <Arrinao> I get it, but dafuq? Does that mean you can't use a function that is broadly defined?
[00:59:14] <mefistofeles> I guess not, because of what I tried to explain up there about OOP
[00:59:20] <mefistofeles> that's why you don't want to use apply for this
[00:59:28] <mefistofeles> but the other alternatives that told you about a few days/weeks ago
[00:59:50] <mefistofeles> that's also why they exist
[00:59:52] <Arrinao> ok, thanks, like I said I like to see the limitations
[01:00:03] <mefistofeles> yeah, that's fine
[01:00:18] <mefistofeles> Arrinao: also why I didn't want to give you the answer right away
[01:00:24] <mefistofeles> but I guess it was needed at this point :)
[01:00:33] <Arrinao> I would have never guessed this
[01:01:16] <Arrinao> so you cannot use built-in functions that takes more args either?
[01:01:28] <mefistofeles> what do you mean? Can you give an example?
[01:01:41] <Arrinao> ummm :D
[01:02:24] <Arrinao> I honestly can't find any built-in with more args now, but I'm pretty sure they exist
[01:02:49] <Arrinao> I'll go to sleep now, maybe I can think of some tomorrow
[01:02:57] <mefistofeles> ok, take care o/
[01:03:03] <Arrinao> good night
[01:03:08] *** Quits: Arrinao (~Arrinao@85-70-61-102.rcd.o2.cz) (Quit: Leaving)
[02:51:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[02:51:26] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[03:55:37] *** Joins: ua_ (~ua@public-gprs231419.centertel.pl)
[04:47:32] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[07:03:46] *** Quits: ua_ (~ua@public-gprs231419.centertel.pl) (Ping timeout: 272 seconds)
[07:20:50] *** Joins: ua_ (~ua@public-gprs220638.centertel.pl)
[08:00:47] *** Quits: ua_ (~ua@public-gprs220638.centertel.pl) (Ping timeout: 256 seconds)
[08:53:10] *** Joins: Arrinao (~Arrinao@85-70-61-102.rcd.o2.cz)
[09:23:07] *** Quits: Arrinao (~Arrinao@85-70-61-102.rcd.o2.cz) (Read error: Connection reset by peer)
[12:48:26] *** Joins: palasso (~palasso@user/palasso)
[12:49:14] *** Joins: Arrinao (~Arrinao@85-70-61-102.rcd.o2.cz)
[14:45:21] *** Joins: ua_ (~ua@public-gprs227148.centertel.pl)
[18:42:13] *** Quits: averell (~averell@user/averell) (Remote host closed the connection)
[20:27:00] *** Quits: ua_ (~ua@public-gprs227148.centertel.pl) (Ping timeout: 240 seconds)
[20:42:50] *** Joins: ua_ (~ua@public-gprs223932.centertel.pl)
[21:32:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:13:16] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
