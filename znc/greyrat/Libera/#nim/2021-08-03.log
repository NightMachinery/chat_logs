[00:15:20] <FromDiscord> <krisppurg> Not sure if this would irrelevant, but...↵↵On Neovim, I have nim.nvim installed, but I just created a new file and I seem to have this message appear; Does anyone know what this means? I know it is kind of self-explanatory. https://media.discordapp.net/attachments/371759389889003532/871841111545614346/unknown.png
[00:15:25] <FromDiscord> <RattleyCooper> How do I get the original type back from a distinct type?  I want to turn the `nativesockets` `Port` back into a `uint16`
[00:16:49] <FromDiscord> <RattleyCooper> (edit) "type" => "type/value"
[00:17:11] <FromDiscord> <Rika> In reply to @krisppurg "Not sure if this": shows before you save, as you type it will go away
[00:21:13] <FromDiscord> <RattleyCooper> Nvm, figured it out
[01:09:44] <FromDiscord> <dankrad> sent a code paste, see https://play.nim-lang.org/#ix=3uPz
[01:11:18] <FromDiscord> <haxscramper> `not defined(nimdoc)`
[01:12:34] <FromDiscord> <dankrad> thank you
[01:57:27] *** Joins: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[01:58:09] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 252 seconds)
[03:34:08] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[03:48:38] *** Joins: thunder (~thunder@user/thunder)
[03:51:42] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:36:00] *** Quits: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Quit: Leaving)
[04:51:24] <FromDiscord> <@bracketmaster-5a708063d73408ce4> why is nim packaged with both nre and re, both of which a wrappers around pcre?
[04:52:04] <FromDiscord> <Elegantbeef> legacy support + lack of a way to nicely remove packages from the stdlib
[04:52:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> which one is legacy?
[04:52:32] <FromDiscord> <Elegantbeef> I dont know i just suggest using `nim-regex` from nimble
[04:52:49] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I don't like nim-regex
[04:52:54] <FromDiscord> <@bracketmaster-5a708063d73408ce4> it wasn't working for me
[04:53:08] <FromDiscord> <@bracketmaster-5a708063d73408ce4> match("hello my world", re"hello\|world.\", matches\_found)
[04:53:13] <FromDiscord> <@bracketmaster-5a708063d73408ce4> that's nim-regex
[04:53:18] <FromDiscord> <@bracketmaster-5a708063d73408ce4> and it returns false
[04:53:19] <FromDiscord> <Rika> re is the "legacy" but nre is the lesser used
[04:53:37] <FromDiscord> <Rika> In reply to @@bracketmaster-5a708063d73408ce4 "match("hello my world", re"hello\|world.\*",": this is wrong
[04:53:40] <FromDiscord> <Rika> is it not?
[04:53:45] <FromDiscord> <Elegantbeef> Seems like it's less of "not liking it" and it just not working for you \:D
[04:53:55] <FromDiscord> <Rika> your regex is wrong is what i mean
[04:54:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> is it?
[04:54:13] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://regex101.com
[04:54:19] <FromDiscord> <Rika> ah, no its not
[04:54:53] <FromDiscord> <Rika> different perception of precedence
[04:56:21] <FromDiscord> <Rika> !eval import regex; match("hello my world", re"hello|world.")
[04:56:25] <FromDiscord> <Rika> fuck
[04:56:25] <NimBot> Compile failed: /usercode/in.nim(1, 20) Error: expression 'match("hello my world", re"hello|world.")' is of type 'bool' and has to be used (or discarded)
[04:56:27] <FromDiscord> <Rika> didnt echo
[04:56:31] <FromDiscord> <Rika> !eval import regex; echo match("hello my world", re"hello|world.")
[04:56:37] <NimBot> false
[04:56:50] <FromDiscord> <Rika> ah
[04:56:54] <FromDiscord> <Rika> its because of the .
[04:57:15] <FromDiscord> <Rika> i assume
[04:57:19] <FromDiscord> <Rika> !eval import regex; echo match("hello my world", re"hello|world")
[04:57:25] <NimBot> false
[04:57:40] <FromDiscord> <Rika> might be a faulty implementation of | then
[04:57:44] <FromDiscord> <konsumlamm> my guess is that it's because of matching the whole string vs somewhere in it
[04:57:49] <FromDiscord> <Rika> !eval import regex; echo match("hello my world", re"(hello)|(world)")
[04:57:55] <NimBot> false
[04:58:01] <FromDiscord> <konsumlamm> i.e. it just has different behaviour, by deisgn
[04:58:18] <FromDiscord> <Rika> oh
[04:58:27] <FromDiscord> <Rika> `match` only works if the whole string matches
[04:58:36] <thunder> !eval import regex; echo match("hello my world", re"(hello|world)")
[04:58:42] <NimBot> false
[04:58:48] <FromDiscord> <Rika> !eval import regex; echo find("hello my world", re"hello|world.")
[04:58:52] <NimBot> Compile failed: /playground/nim/lib/system.nim(1806, 10) Error: type mismatch: got <char, Regex>
[04:59:04] <FromDiscord> <Rika> i mean findAll
[04:59:11] <FromDiscord> <Rika> !eval import regex; echo findAll("hello my world", re"hello|world.")
[04:59:18] <NimBot> @[(captures: @[], namedGroups: (data: @[], counter: 0, first: 0, last: 0), boundaries: 0 .. 4)]
[04:59:38] <FromDiscord> <Rika> it only captured one
[04:59:40] <FromDiscord> <Rika> odd
[05:00:17] <thunder> "world." would tmk match the world world followed by any char. but if there is no char after world, then no match
[05:00:26] <thunder> *word world
[05:00:41] <FromDiscord> <Rika> there is a 
[05:00:48] <FromDiscord> <Rika> did the bridge destroy the fucking asteisk
[05:00:50] <FromDiscord> <Rika> (edit) "asteisk" => "asterisk"
[05:00:57] <thunder> yeah
[05:01:01] <FromDiscord> <Rika> great
[05:01:11] <FromDiscord> <Rika> !eval import regex; echo findAll("hello my world", re"hello|world.\")
[05:01:13] <FromDiscord> <Rika> how about now
[05:01:16] <thunder> nope
[05:01:19] <NimBot> @[(captures: @[], namedGroups: (data: @[], counter: 0, first: 0, last: 0), boundaries: 0 .. 4)]
[05:01:24] <thunder> asterisk was nuked
[05:01:25] <FromDiscord> <Rika> you try it
[05:01:32] <FromDiscord> <Rika> just copy but add the asterisk lmao
[05:01:36] <FromDiscord> <Rika> should work then
[05:01:39] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @\_discord\_259277943275126785\:t2bot.io , I see the astericks
[05:01:45] <thunder>  !eval import regex; echo findAll("hello my world", re"hello|world.\*")
[05:01:50] <FromDiscord> <Rika> matrix goes through a different bridge
[05:01:57] <thunder> !eval import regex; echo findAll("hello my world", re"hello|world.\*")
[05:02:04] <NimBot> @[(captures: @[], namedGroups: (data: @[], counter: 0, first: 0, last: 0), boundaries: 0 .. 4)]
[05:02:18] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Read error: Connection reset by peer)
[05:02:23] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Read error: Connection reset by peer)
[05:02:23] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Read error: Connection reset by peer)
[05:02:23] * thunder shrugs
[05:02:24] <FromDiscord> <Rika> still one 🤔
[05:04:06] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[05:04:55] <FromDiscord> <Rika> know that by using re or nre you will need to have pcre either packaged or installed in the runner's system
[05:04:56] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[05:04:56] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[05:05:05] <FromDiscord> <Rika> and it will not have the same runtime guarantees as reges
[05:05:06] <FromDiscord> <Rika> (edit) "reges" => "regex"
[05:12:03] <FromDiscord> <sunsilk> #ask I want to ask if there is a requests library in python, what about nim?
[05:12:32] <FromDiscord> <Rika> httpclient
[05:33:43] *** Joins: Guest12 (~Guest12@subs11-223-255-227-9.three.co.id)
[05:40:01] *** Quits: Guest12 (~Guest12@subs11-223-255-227-9.three.co.id) (Ping timeout: 246 seconds)
[06:06:42] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 256 seconds)
[06:33:42] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:58:02] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 258 seconds)
[07:01:13] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:07:02] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:09:21] *** Joins: xet7 (~xet7@user/xet7)
[08:03:53] <FromDiscord> <bolino> sent a long message, see http://ix.io/3uQB
[08:04:11] <FromDiscord> <bolino> (edit) "http://ix.io/3uQB" => "http://ix.io/3uQC"
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:42:48] <FromDiscord> <bolino> In reply to @bolino "Hi there! I'm executing": .. I mean of course I can do that, but is there a more efficient way to directly get the response as strings list, or to convert it?↵`var strings = newSeq[string]()↵for r in rows:↵    strings.add(r[0])`
[09:01:54] <FromDiscord> <Elegantbeef> @bolino\: Row is a `seq[string]`
[09:02:06] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/blob/version-1-4/lib/impure/db_mysql.nim#L95
[09:02:29] <FromDiscord> <Elegantbeef> Assuming using the mysql library from the stdlib
[09:36:28] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[09:36:29] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[09:36:29] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:36:35] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[09:36:39] *** Joins: mjsir911 (~bnc@sirabella.org)
[09:36:49] *** Quits: mjsir911 (~bnc@sirabella.org) (Changing host)
[09:36:49] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:43:51] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[09:51:48] <FromDiscord> <bolino> In reply to @Elegantbeef "https://github.com/nim-lang/Nim/blob/version-1-4/li": Yes exactly! And yes, using standard mysql lib. So there's not more elegant solution than looping over like I'm doing?
[09:52:41] <FromDiscord> <Elegantbeef> well since it's a row you can do `.seq` or `seq[string](yourRow)` no?
[09:54:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3uQW
[09:59:39] <FromDiscord> <Elegantbeef> Also worth noting `sugar.collect` and `sequtils.toSeq` are both better methods to what your first suggestion was @bolino
[10:01:48] <FromDiscord> <Elegantbeef> \now noticing that it's a `seq[Row]` and i assume you want a single `seq[string]`
[10:08:45] <FromDiscord> <bolino> > now noticing that it's a seq[Row] and i assume you want a single seq[string]
[10:08:51] <FromDiscord> <bolino> (edit) "seq[string]" => "seq[string]↵exactly"
[10:09:28] <FromDiscord> <bolino> In reply to @Elegantbeef "\*now noticing that it's": exactly
[10:12:42] <FromDiscord> <Elegantbeef> then afaik yea best way of handling it
[10:16:07] <FromDiscord> <Rika> Nice
[10:27:38] <FromDiscord> <bolino> In reply to @Elegantbeef "then afaik yea best": I'm slightly confused - your solutions show how to convert a single row to a sequence of strings, but I'm looking at how to convert a sequence of multiple rows (with each one having a single string) to a sequence of strings
[10:27:42] <FromDiscord> <bolino> does that make sense?
[10:28:10] <FromDiscord> <Elegantbeef> Like i said use your method or collect
[10:30:01] <FromDiscord> <bolino> In reply to @Elegantbeef "Like i said use": Okaye, gotcha
[10:30:04] <FromDiscord> <bolino> thanks!
[10:37:10] <FromDiscord> <bolino> Didn't know about collect. So FYI, applied to my question, this works:↵`let strings = collect(newSeq):↵    for r in rows: r[0]`
[10:37:45] <FromDiscord> <bolino> (edit) "Didn't know about collect. So FYI, applied to my question, ... thisr[0]`↵(looks" 03added "thanks to @ElegantBeef" | "r[0]`" => "r[0]`↵(looks better than my initial loop)"
[10:38:01] <FromDiscord> <bolino> (edit) "collect." => "`collect`."
[11:40:56] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[11:43:53] *** Joins: maxime_ (~maxime@pop.92-184-104-82.mobile.abo.orange.fr)
[11:46:47] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[11:52:36] <arkanoid> I'm going to try to create my first project heavily based on nim metaprogramming. But first I'd like to ask a suggestion to you
[11:53:21] <arkanoid> I want to implement a library that reads .wsdl files (SOAP) and creates the nim interface for that web service. That mean types and procs
[11:54:18] <arkanoid> question it: is it better to create a project that actually write to disk nim files generated from wsdl parsing, or is better to load wsdl at runtime and generate procs
[11:54:36] <arkanoid> I mean without writing .nim files
[11:55:23] <FromDiscord> <Rika> Generate proc at runtime?
[12:03:25] <FromDiscord> <Elegantbeef> To give a more concise answer nim's metaprogramming is only accessible at compile time, you cannot use it at runtime, so the way to do it is the former, but you dont need to save the macro output to a file since macros expand in place
[12:04:17] <FromDiscord> <Rika> But it will generate the code every time you compile
[12:04:20] <FromDiscord> <Rika> Which may be slow
[12:04:33] <FromDiscord> <Rika> Saving to another file may be better depending on your opinion
[12:15:47] <arkanoid> Rika, yeah you got it right. I was thinking about expanding macros at compilation time instead of generating a tool that given a wsdl file generates a dir of nim modules
[12:16:12] <arkanoid> probably there's not much difference between the two
[12:16:31] <FromDiscord> <Rika> Well as I’ve said it may cause a compile time length difference
[12:17:05] <FromDiscord> <Elegantbeef> The main difference would just be a flag or something similar to tell it to poop it out to a nim file/include
[12:29:06] <arkanoid> I've another question. I will need to heavily test my code, and this mean dividing logic in multiple funcs to be used within a macro. Do you suggest writing a lot of macros and call them in tests, or write nim procs that returns NimNode instead and call them from test and macros?
[12:33:52] <FromDiscord> <Rika> What?
[12:34:10] <FromDiscord> <Rika> Ah you mean testing the macro logic?
[12:34:43] <FromDiscord> <Rika> I would do the proc one but your choice I think
[12:38:15] <arkanoid> I do agree with staying in the proc world as long as possible
[12:39:24] *** Quits: maxime_ (~maxime@pop.92-184-104-82.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[12:40:53] *** Joins: max22- (~maxime@pop.92-184-104-241.mobile.abo.orange.fr)
[12:51:57] <FromDiscord> <Rika> No I just think making many macros is repetition
[13:38:23] *** Joins: maxime_ (~maxime@2a01cb0883359800e585c6de6ade4d4c.ipv6.abo.wanadoo.fr)
[13:41:05] *** Quits: max22- (~maxime@pop.92-184-104-241.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[14:14:33] <arkanoid> do you think is possible to parse xml at compile time?
[14:18:06] <arkanoid> XmlNode cannot be const :(
[14:18:29] <arkanoid> this makes the "read wsdl and build interface at compile time" impossible
[14:19:02] <arkanoid> I need read wsdl at runtime, generate the required nim code and write files to disk
[14:19:19] <arkanoid> so not even macro are usable, only runtime code
[14:19:30] <arkanoid> basically I've to write nim code with strings?
[14:21:53] <emery> arkanoid: I think you can parse XML at compile-time, but you can't compile a const XmlNode, so you need to copy the data from XmlNode to another representation
[14:23:06] <arkanoid> can I use ref types at compile time?
[14:24:02] <emery> I don't think so, but you can have containers holding objects
[14:24:34] <arkanoid> k, ,let's try
[14:25:18] <arkanoid> I'm also having difficultis with staticRead/slup, it's not finding files. I'm using nim from choosenim, is it searching them in nim binary path?
[14:27:15] <arkanoid> os.currentSourcePath returns my project path correctly
[14:37:45] <arkanoid> solved with getProjectPath
[14:38:03] <arkanoid> the xml schema parsing works at compile time! yeah!
[14:39:11] <arkanoid> what's the signature of a function that takes a string and returns a type definition? like "xs:string" -> string
[14:41:29] <arkanoid> I'm doing "func toTypedesc(xsType: string): typedesc =" but I'n the contained case expression I' getting like "of "expression 'bool' is of type 'type bool' and has to be used (or discarded)"
[14:47:32] <arkanoid> oh, wait, I've just realised that I have to use "return" in this case. Non sure why, but seems that here case is used as statement and not expression
[14:59:26] <FromDiscord> <Rika> In reply to @arkanoid "can I use ref": not deeply nested ref
[14:59:52] <FromDiscord> <Rika> so you can have a seq to a regular object, but a seq to a ref is prolly not ok
[15:03:40] <FromDiscord> <ynfle (ynfle)> https://play.nim-lang.org/#ix=3uSe Is this a bug?
[15:13:02] <arkanoid> Rika, I'm doing xmlparse.parseXml that returns a deeply nested XmlNode tree where XmlNode = ref XmlNodeObj, but it seems working
[15:17:40] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:18:32] *** Joins: xet7 (~xet7@user/xet7)
[15:18:50] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:39:10] *** Joins: xet7 (~xet7@user/xet7)
[15:40:10] <FromDiscord> <haxscramper> no, `x: NimNode` is a procedure argument
[15:40:13] <FromDiscord> <haxscramper> So it is not accessible at compile-time
[15:40:14] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:40:33] <FromDiscord> <haxscramper> In order for this to work you need argument to be `static[]`
[16:20:47] *** Joins: xet7 (~xet7@user/xet7)
[16:23:18] *** Quits: Freneticks (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com) (Ping timeout: 252 seconds)
[16:34:31] *** Quits: thunder (~thunder@user/thunder) (Remote host closed the connection)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:03] *** Quits: maxime_ (~maxime@2a01cb0883359800e585c6de6ade4d4c.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:43:45] <arkanoid> can you help me spot where the error is here? https://play.nim-lang.org/#ix=3uSx
[16:50:12] <arkanoid> I really don't see how's possible that a rangedefect can be raised from that code
[16:54:04] <arkanoid> the ast generation code is coming straight from dumpAstGen, I've just splitted it in macro and funcs. If I keep it into one single block it works
[17:06:59] <arkanoid> this is the best solution I've found, yet I'm failing in parametrizing genTypeSection macro
[17:07:44] <arkanoid> I've tried them all: static[openArray[NimNode]], static[varargs[NimNode]], ...
[17:10:23] <arkanoid> if fails (SIGSEGV) even if I give up trying passing a sequence of NimNode and pass 2 NimNode as argument instead: https://play.nim-lang.org/#ix=3uSG
[17:14:12] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[17:14:52] <arkanoid> so the question is, can I pass NimNode arguments to a macro?
[17:21:24] <federico3> isn't this syntax a bit too verbose? raise newException(SomethingError, "...")
[17:22:16] <FromDiscord> <Rika> there is another `raise (ref SomethingError)(message: "...")` that some prefer
[17:23:08] <FromDiscord> <Rika> honestly i do not know why exceptions are not internally `ref` and you have to do this odd construction syntax instead of `SE(msg: ...)`
[17:26:40] <FromDiscord> <haxscramper> You can make exception a ref object of
[17:27:10] <FromDiscord> <haxscramper> But then it will complain when someone tries to raise it via new exception
[17:27:47] <FromDiscord> <haxscramper> But I prefer to just write normal constructor, in a lot of cases it makes things easier
[17:28:57] <FromDiscord> <Rika> yes i know you can
[17:34:29] <FromDiscord> <deech> sent a code paste, see https://play.nim-lang.org/#ix=3uSO
[17:35:07] <FromDiscord> <deech> I downloaded `fusion` and the `matching` tests pass so I don't think the problem is the library.
[17:36:31] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[17:37:28] <FromDiscord> <deech> Seems to work fine in the playground and on my Linux machines: https://play.nim-lang.org/#ix=3uSQ
[17:40:20] *** Joins: arkurious (~arkurious@user/arkurious)
[17:40:35] <arkanoid> I'd consider the long exception raise expression as a suggestion to use Option and monads instead :P
[17:40:59] <FromDiscord> <Rika> now you have a tonne of `isNone` `none()` `some()`
[17:41:02] <FromDiscord> <Rika> xd
[17:41:23] <FromDiscord> <Rika> oh dont forget `get` even after `isNone`
[17:41:38] <FromDiscord> <Rika> i mean `isSome` i guess
[17:42:46] <arkanoid> not needed when using flatMap and friends!
[17:43:44] *** Joins: rockcavera (~rc@192.12.115.217)
[17:43:44] *** Quits: rockcavera (~rc@192.12.115.217) (Changing host)
[17:43:44] *** Joins: rockcavera (~rc@user/rockcavera)
[17:52:50] <FromDiscord> <deech> nm works now. Had to do a `build_all.sh` because I hadn't pulled since Nim froze a new version of the C sources so the compiler still reported that it was `1.5.1` but internally hadn't switched to `case` from `match` for `caseStmtMacros`. The solution was to blow away the `Nim` repo and rebuild from scratch.
[17:53:30] <FromDiscord> <Rika> In reply to @arkanoid "not needed when using": i guess that simplifies it quite a bit `opt.flatMap() do (...) -> Option[...]: ...`
[17:54:05] <arkanoid> not yet used to "do" syntax, actually I don't find it sexy
[17:54:14] <FromDiscord> <Rika> to each their own
[17:58:26] <FromDiscord> <Clonkk> What does `Error: system module needs: nimGCvisit` means ?
[17:58:50] <FromDiscord> <Rika> your platform does not implement some stuff that system needs
[17:59:07] <FromDiscord> <Rika> are you using embedded platforms or something that isnt linux/macos/windows/bsd?
[17:59:19] <FromDiscord> <Clonkk> Plair Linux x84\_64↵(@Rika)
[17:59:36] <FromDiscord> <Clonkk> OpenSuse, so it's pretty vanilla
[17:59:40] <FromDiscord> <@bracketmaster-5a708063d73408ce4> treeform/print basically prints out a nim structure
[17:59:49] <FromDiscord> <haxscramper> i got this error when one `.cfg` specified `--gc:orc` and other (in the parent directory) `--gc:refc`
[17:59:56] <FromDiscord> <Rika> thats weird wtf
[18:00:00] <FromDiscord> <@bracketmaster-5a708063d73408ce4> is there a way to write treeform/print output to a file instead of to stdout?
[18:00:14] <FromDiscord> <@bracketmaster-5a708063d73408ce4> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/872108962919624724): treeform/print basically prints out valid nim code
[18:00:14] <FromDiscord> <Clonkk> Ah↵(@haxscramper)
[18:00:17] <FromDiscord> <Clonkk> Well
[18:00:18] <FromDiscord> <Clonkk> Yeah
[18:00:19] <FromDiscord> <Clonkk> Probably
[18:00:27] <FromDiscord> <Clonkk> Thought commandLine override confuig file ?
[18:01:47] <FromDiscord> <Clonkk> So if oyu use --gc\:refc on commandLine and you have --gc\:orc in a config file yo ucan't compile
[18:01:48] <FromDiscord> <Clonkk> ?
[18:02:04] <FromDiscord> <Clonkk> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/872109495088709662): So if oyu use --gc\:refc on command line and you have --gc\:orc in a config file yo ucan't compile
[18:02:28] <FromDiscord> <haxscramper> https://github.com/treeform/print/blob/master/src/print.nim#L239 no, it seems hardcoded
[18:03:40] <FromDiscord> <Clonkk> You can always capture stdout output
[18:03:48] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[18:07:33] <FromDiscord> <DeathByRebellion> I remember WipEout. That was such an awesome racing game
[18:09:24] <FromDiscord> <DeathByRebellion> Anyways
[18:09:34] <FromDiscord> <DeathByRebellion> What are you guys talking about?
[18:09:48] <FromDiscord> <DeathByRebellion> I need to practice Nim Programming. What's the best way to do so?
[18:10:00] <FromDiscord> <DeathByRebellion> I can't come up with any ideas that aren't behind my skill level
[18:10:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Nice name
[18:10:24] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Write a C- compiler?
[18:10:37] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Write a static website server?
[18:10:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Write a discord implementation not based on electron?
[18:11:06] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Write a slack implementation not based on electron? With cimgui bindings?
[18:11:43] <nrds> <06Prestige99> Or maybe something simpler like an irc bot
[18:11:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Note that that was "C-" not C
[18:12:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> C- is pretty simple
[18:12:10] <FromDiscord> <Clonkk> YOu have https://exercism.io/ or you can always do some simple stuff that have already been done. Personnally I like to implement https://www.foaas.com/
[18:17:19] <federico3>  DeathByRebellion a multi-protocol IM client please :)
[18:19:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yeah - that'd be nice
[18:19:15] <FromDiscord> <@bracketmaster-5a708063d73408ce4> something I might even pay for
[18:19:23] <FromDiscord> <@bracketmaster-5a708063d73408ce4> As long as it doesn't take up 1GB of ram
[18:20:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> opening slack and discord eats up 2 out of my measly 8GB of ram
[18:20:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> spotify makes for 3GB
[18:20:57] <FromDiscord> <Clonkk> Anything with a GUI is going to be a PITA to do for a side project
[18:21:21] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Well - it will take dedication - Cimgui is not so bad
[18:21:53] <FromDiscord> <Clonkk> Enable notification by email / on your phone. Go on the desktop app / website version only when notified
[18:22:39] <FromDiscord> <@bracketmaster-5a708063d73408ce4> or just build something better 😛
[18:23:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> My iMac G3 with 64MBs of ram could do multiple chat apps and listen to music at the same time back in its day
[18:23:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> There's really no excuse
[18:23:33] <FromDiscord> <virdisn> https://github.com/nim-lang/Nim/wiki/Nim-for-TypeScript-Programmers lists [x] dependent types. Where can I find examples / it's documentation ?
[18:24:09] <FromDiscord> <haxscramper> 30mb for discord
[18:24:09] <FromDiscord> <haxscramper> Why can'y you people just open discord in browser?
[18:24:10] <FromDiscord> <haxscramper> done
[18:24:14] <FromDiscord> <Clonkk> 👍️
[18:24:23] <FromDiscord> <@bracketmaster-5a708063d73408ce4> check your CPU usage for discord in browser
[18:24:28] <FromDiscord> <@bracketmaster-5a708063d73408ce4> tell me what you find
[18:26:05] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Discord in safari shows up at 500MB
[18:26:22] <FromDiscord> <DeathByRebellion> I've never heard of C- in my entire life
[18:26:35] <FromDiscord> <Clonkk> At the moment, my discord tab uses ~280 MB (after having clicked on every server I had)
[18:26:38] <FromDiscord> <carmysilna> might be talking about ghc's cmm
[18:26:39] <FromDiscord> <Clonkk> Not that bad
[18:27:07] <FromDiscord> <@bracketmaster-5a708063d73408ce4> 280MB is absolutely nuts!!
[18:27:15] <FromDiscord> <@bracketmaster-5a708063d73408ce4> The english bible is 5MB
[18:27:28] <FromDiscord> <haxscramper> Firefox reports discord tab memory usage at 31.6mb, and cpu usage as "low, 0.7"
[18:27:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> lemme try firefox
[18:28:45] <FromDiscord> <haxscramper> In reply to @virdisn "https://github.com/nim-lang/Nim/wiki/Nim-for-TypeSc": I don't know what exactly they mean by "dependent types"
[18:28:58] <FromDiscord> <haxscramper> but assuming something like idris - we don't have anything of that sort
[18:29:17] <FromDiscord> <Clonkk> You're comparing a dynamic web page with a static content...
[18:29:32] <FromDiscord> <Clonkk> I'm on Firefox too, have a dozen of server. Tried to click on each of them so I'm not in an idle state
[18:29:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Firefox isn't adding up
[18:30:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> So activity monitor shows a total of 700Mb for firefox
[18:30:15] <FromDiscord> <@bracketmaster-5a708063d73408ce4> but only 11MB for discord
[18:30:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I only have discord open in Firefox
[18:30:52] <FromDiscord> <@bracketmaster-5a708063d73408ce4> That is, firefox task manager shows only 11mb for discord
[18:30:53] <FromDiscord> <Clonkk> Activity Monitor can lie to you
[18:31:11] <FromDiscord> <Clonkk> Because some process expects to uses a lot of RAM so they pre-allocate RAM that isn't actually use
[18:31:34] <FromDiscord> <Clonkk> It's like VIRT and RES on Linux when you top
[18:32:13] <FromDiscord> <Clonkk> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/872116890883997696): Because some process expects to uses a lot of RAM so they pre-allocate RAM that isn't actually used
[18:32:35] <FromDiscord> <virdisn> @haxscramper https://github.com/nim-lang/Nim/issues/18639 🙂
[18:32:38] <federico3> I wouldn't need a client. Anything that can act as Quassel or weechat (not wechat) server would do 
[18:33:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> true
[18:34:18] <FromDiscord> <haxscramper> In reply to @virdisn "<@!608382355454951435> https://github.com/nim-lang/": This page was most likely written by `@juancarlospaco`, so maybe there is something of that sort, of the wording is not fully correct
[18:34:31] <FromDiscord> <haxscramper> It's a shame github wiki does not have "git blame" support
[18:37:25] <nrds> <06Prestige99> can't clone it as a repo?
[18:40:08] <FromDiscord> <haxscramper> yes, I forgot about that
[18:40:17] <FromDiscord> <haxscramper> and yes, it was authored by @juan_carlos
[18:54:23] <FromDiscord> <Clonkk> Is there any Nim  lib to press a key / move your mouse by code on Linux ?
[18:54:31] <arkanoid> do you know if it's possible to curl/download a file at compile time?
[18:55:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I don't see why you couldn't call curl in a static block
[18:56:11] <FromDiscord> <Clonkk> You can call a CLI program at compile time with `gorge` / `staticExec`↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[18:58:10] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3uT7
[19:02:34] *** Quits: [R] (~rs@genoce.org) (Ping timeout: 240 seconds)
[19:06:22] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone knows `Could not download: No SSL/TLS CA certificates found.`?
[19:08:45] <FromDiscord> <ajusa> In reply to @ajusa "Anyone know how I": Fixed it, gave up and just statically compiled everything
[19:32:26] *** Joins: ggt1 (~ggt1@37.164.153.184)
[19:38:40] <arkanoid> Clonkk thanks!
[19:44:35] <ggt1> in a template, how to have an underscore when creating an identifier with backticks?
[19:44:52] <ggt1> somthing like this `prefix_ variable`
[19:45:32] <ggt1> nim complains about trailing underscore
[19:47:57] <ggt1> usecase: https://play.nim-lang.org/#ix=3uTx
[19:58:48] <FromDiscord> <Rika> i do not see any trailing underscore errors in your use case
[19:59:45] <FromDiscord> <Rika> nonetheless, just remove the trailing underscore. its not required
[19:59:53] <FromDiscord> <Rika> so `e y` will work
[19:59:55] <ggt1> oh, I missed a space. `e.e_ y`
[20:01:36] <FromDiscord> <Rika> either "echo e.`e y`" or "echo `e y`" will work
[20:03:01] <ggt1> "echo e.`e y`" was what I need, thx
[20:03:22] <ggt1> still this works because a_b and ab are the same identifiers in nim
[20:03:35] <FromDiscord> <Rika> yes
[20:03:36] <ggt1> but it is not possible to create a_b in the template
[20:03:43] <FromDiscord> <Rika> it does not matter
[20:04:05] <ggt1> if I try to print the id  as string with a astToStr for example
[20:04:12] <ggt1> it will be without an undescore
[20:04:18] <FromDiscord> <Rika> lets see
[20:04:39] <FromDiscord> <Rika> how do you print it
[20:11:04] *** Joins: liblq-dev (~daknus@user-5-173-248-70.play-internet.pl)
[20:15:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:16:54] <ggt1> https://play.nim-lang.org/#ix=3uTJ
[20:17:32] <ggt1> here is an example where I could not underscore cannot be added
[20:27:07] *** Quits: liblq-dev (~daknus@user-5-173-248-70.play-internet.pl) (Quit: WeeChat 3.1)
[20:36:49] *** Joins: maxime_ (~maxime@2a01cb0883359800b4dfcaf933cc8c18.ipv6.abo.wanadoo.fr)
[20:41:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:57:02] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[21:17:50] <arkanoid> is it possible to define a type that enforces a string with a max length?
[21:22:36] <LyndsySimon> Very naive question: can I use Nim to compile a binary that I can use in the shell (Zsh in this case) to change directories?
[21:23:07] <FromDiscord> <Rika> i do not think any binary can change the pwd of a shell
[21:23:14] <LyndsySimon> For example, a contrived and simplified use case: I'd like to replace a shell alias defined as `d=cd ~/foo` with a Nim script.
[21:23:15] <LyndsySimon> Ahhh
[21:23:16] <FromDiscord> <Rika> `cd` is not a binary, its a shell utility
[21:23:34] <FromDiscord> <Rika> you can test that by doing `which cd`
[21:23:36] <LyndsySimon> Yeah, I was aware of that, I just didn't know if a binary could access and modify the shell in which it was called.
[21:23:37] <FromDiscord> <Rika> and it will say none
[21:23:50] <FromDiscord> <Rika> well it can if the shell provides the functionality
[21:24:06] <FromDiscord> <Rika> maybe zsh does, i do not know, prolly a search would help there
[21:24:13] <LyndsySimon> Fair enough. I have a simple script I need to write for work/productivity purposes, and it seemed like a small enough use case to jump back into Nim.
[21:50:55] *** Quits: ggt1 (~ggt1@37.164.153.184) (Quit: Client closed)
[21:58:41] <arkanoid> how can I dump to console the source code that would be generated by a nimnode?
[21:58:55] <arkanoid> without actually genereting it into the project
[21:59:00] <arkanoid> I just need to debug
[22:02:19] <FromDiscord> <haxscramper> `echo node.repr()`
[22:02:43] <FromDiscord> <haxscramper> In the macro body, or `expandMacros` around the macro
[22:03:09] <FromDiscord> <haxscramper> But expand macros would not work if the body is invalid (typecheck fails, or invalid ast)
[22:06:06] <arkanoid> haxscramper, thanks!
[22:20:00] <arkanoid> I'm creating this macro that creates a shitload of types (parsing xml schemas, quite a lot of stuff). What I don't have that I'd like to add to my logic is a way to "annotate" types with metadata such as "string max length" or "seq min lenght" and so on
[22:20:33] <arkanoid> I'd re-read this data further or to inforce the rules
[22:21:18] <arkanoid> I could also create a map to write these rules, but I believe nim can do better than that
[22:23:01] *** Joins: thunder (~thunder@user/thunder)
[22:34:51] <FromDiscord> <haxscramper> You can manually create types that mach XSD schema constraints and use them
[22:35:13] <FromDiscord> <haxscramper> And implement additional checks for .add and all they kind of stuff
[22:36:00] <mst> this is the sort of problem where I start to ponder using explicit code generation to an extra file that gets compiled in
[22:36:16] <mst> just because it makes it a lot easier to see what I'm doing and debug it
[22:36:30] <FromDiscord> <haxscramper> Yes, I wrote XML parser as well
[22:36:36] <FromDiscord> <haxscramper> And I did it in separate file
[22:37:00] <FromDiscord> <haxscramper> This also saves on compile time, because, well, 12k sloc of codegen for each macro run ...
[22:38:27] <FromDiscord> <haxscramper> https://github.com/haxscramper/nimtraits/blob/master/src/nimtraits/xml_to_types.nim codegen logic  xsd https://github.com/haxscramper/hcparse/blob/master/src/hcparse/dox_compound.xsd  and code https://github.com/haxscramper/hcparse/blob/master/src/hcparse/dox_compound.nim
[22:39:38] <FromDiscord> <haxscramper> And the only reason I was able to debug codegen is a standalone file generation
[22:40:30] <mst> right, the saving on compile time is absolutely a bonus as well, but the "I can actually debug this without wanting to stab myself in the scrotum with a rusty fork" was the truly awesome part :D
[22:47:07] <arkanoid> haha
[22:47:23] <arkanoid> yeah I'm on the same boat. I plan to write NimNodes to different .nim files
[22:49:57] <arkanoid> how did you enforce rules like min seq length?
[22:50:03] <arkanoid> via runtime proc?
[22:50:59] <arkanoid> this functions is a lie! https://nim-lang.org/docs/sequtils.html#items.i
[22:51:42] <arkanoid> I've an iterator that I can loop but all the "opIt" like filterIt doesn work
[22:51:47] <arkanoid> even after using items
[22:52:01] <nrds> <06Prestige99> can you show an example?
[22:53:39] <arkanoid> "for foo in myXmlNode.attrs.keys" works, "for foo in myXmlNode.attrs.keys.items" Error: cannot generate VM code for yield t.data[h].key
[22:57:01] <FromDiscord> <haxscramper> In reply to @arkanoid "yeah I'm on the": You can use compiler API then, and don't need to overcome useless limitations like VM code
[22:57:34] <FromDiscord> <haxscramper> If you need to generate nim code and save it to a file you can just do it using compiler/ast
[22:58:52] <FromDiscord> <haxscramper> I wrote some helper procs in hnimast yo reduce differences, but you can just copy parts you need for codegen https://github.com/haxscramper/hnimast/blob/master/src/hnimast/hast_common.nim#L282
[22:59:11] <FromDiscord> <haxscramper> Difference between compiler/ast and macros is minimal
[23:00:20] *** Quits: maxime_ (~maxime@2a01cb0883359800b4dfcaf933cc8c18.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:00:27] <arkanoid> what's the difference? I mean, why should I use compiler/ast when I can output nim code from NimNode from standard macro?
[23:00:50] <FromDiscord> <haxscramper> Because you have to deal with limited capabilities for nim VM?
[23:01:16] <arkanoid> and compiler doesn't?
[23:01:35] <FromDiscord> <haxscramper> Of course, it is just compiled nim code
[23:02:36] <FromDiscord> <haxscramper> It is also faster, at least because you don't have VM interpreter overhead. Which is not really big, but not no-existent
[23:03:26] <arkanoid> can't wrap my head around this. Does it mean that I don't have to run macros at compile time but just regular proc that just builds NimNodes?
[23:05:01] <arkanoid> I think I need an example
[23:11:11] <FromDiscord> <haxscramper> https://github.com/haxscramper/hack/blob/master/testing/nim/compilerapi/generate_nim_at_runtime.nim
[23:11:51] <FromDiscord> <haxscramper> You need some minor boilerplate since there are no `newLit` or `newIdent` for `PNode`,
[23:11:59] <FromDiscord> <haxscramper> That's why I added `func newPLit(i: BiggestInt): PNode = newIntTypeNode(i, PType(kind: tyInt))`
[23:12:32] <FromDiscord> <haxscramper> `hast_common.nim` that i linked earlier has all of them implemented
[23:14:45] <arkanoid> thanks a lot
[23:16:41] <arkanoid> all that addictional wrapping you have in hast_common is quite intimidating :P
[23:17:12] <arkanoid> very nice code
[23:20:00] <arkanoid> I bet there's not dumpAstGen equivalent for compiler/ast
[23:22:47] <FromDiscord> <haxscramper> There is. Just s/nnk/nk/ for node kinds
[23:22:50] <FromDiscord> <haxscramper> Done
[23:23:29] <FromDiscord> <haxscramper> In reply to @arkanoid "all that addictional wrapping": A lot of this for things that are missing from std/macros as well
[23:23:34] <FromDiscord> <haxscramper> Like newReturn
[23:23:57] <FromDiscord> <haxscramper> addBranch that uniformly works for if/case/try
[23:24:38] <FromDiscord> <haxscramper> newXCall that allows to generate code for infix/prefix/call statements without tons of ifs
[23:24:46] <FromDiscord> <haxscramper> And other quality of life features
[23:28:29] <arkanoid> may I ask you what's your way to import "compiler/*". It's the first time I try dealing with god's machinery
[23:29:07] <arkanoid> is just git clone nim compiler repo and add the path to module search?
[23:31:24] *** Joins: maxime_ (~maxime@2a01cb0883359800e4f65bc7ba3c08af.ipv6.abo.wanadoo.fr)
[23:33:18] <arkanoid> oh! there's a nimble package for that! Noice
[23:36:25] *** Joins: beshr (~beshr@user/beshr)
[23:55:09] *** Quits: maxime_ (~maxime@2a01cb0883359800e4f65bc7ba3c08af.ipv6.abo.wanadoo.fr) (Ping timeout: 276 seconds)
