[00:06:05] *** Joins: danisztl1 (~weechat@user/danisztls)
[00:40:44] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:43:14] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Quit: Leaving)
[00:43:45] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[01:06:09] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[01:33:07] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[01:41:53] *** Quits: danisztl1 (~weechat@user/danisztls) (Ping timeout: 265 seconds)
[03:07:11] *** Joins: danisztl1 (~weechat@user/danisztls)
[03:45:32] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[03:45:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:25:09] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[05:33:32] *** Joins: Brainium (~brainium@user/brainium)
[06:25:44] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:40:47] *** Joins: Joel (~jjshoe@user/joel)
[07:59:25] *** Quits: cryomatter (~weechat@user/cryomatter) (Quit: cryomatter)
[08:03:32] *** Joins: cryomatter (~weechat@user/cryomatter)
[08:06:53] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[09:26:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[10:31:55] *** Joins: BenjiProd (~BenjiProd@user/benjiprod)
[11:53:53] *** Quits: BenjiProd (~BenjiProd@user/benjiprod) (Remote host closed the connection)
[12:34:22] *** Quits: danisztl1 (~weechat@user/danisztls) (Ping timeout: 252 seconds)
[12:36:30] *** Joins: danisztl1 (~weechat@user/danisztls)
[12:51:35] *** Quits: danisztl1 (~weechat@user/danisztls) (Quit: I will return...)
[13:23:09] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[14:16:49] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[14:50:44] *** Quits: uvolmer2 (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de) (Remote host closed the connection)
[14:51:49] *** Joins: uvolmer (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de)
[15:34:42] *** Joins: hendursaga (~weechat@user/hendursaga)
[16:15:44] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[16:26:57] *** Joins: rpthms (~rpthms@user/rpthms)
[16:42:49] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[16:55:04] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[17:24:42] *** Joins: shad (~shad@user/shad)
[17:30:22] <shad> anyone here running k8s on edge devices ? Which one to pick between k3s/minikube/others ?
[17:32:06] <shad> also, i need to mount system files in containers running in said Kubernetes engine, minikube has a "minikube mount /foo" command, but it has to be running for the mounted fs to stay up, which is a problem. Is that something that will happen with k3s too ? 
[18:33:44] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[19:02:22] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:18:07] *** Joins: Brainium (~brainium@user/brainium)
[20:17:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[20:19:32] *** Joins: shad (~shad@user/shad)
[20:37:04] <lofiguy> @shad https://github.com/kubeedge/kubeedge
[21:04:56] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:36:04] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[21:36:18] *** Joins: humky (~humky@user/humky)
[22:26:19] *** Joins: alguien (~alguien@user/alguien)
[22:28:14] <alguien> Hi. I've recently made a script that takes as arguments a script name and its parameters, and reads a list of ips to connect to and execute the script on. What should've I done/used instead?
[22:29:15] <dodo> hmmmm.... sounds like a hack.. but sometimes you need hacks..
[22:29:47] <dodo> alguien: so you upload the script to those machines to execute it?
[22:31:25] <alguien> dodo, not quite, i pipe them to ssh as commands. This is the problem actually. They can't require any other scripts, I can't have reusable pieces
[22:32:14] <dodo> why can't you have reusable pieces?
[22:32:58] <alguien> dodo, if the script had `script <other script> <its arguments..>` it would try to find it on the remote machine instead of locally. But the idea is to only have to maintain scripts locally
[22:33:47] <dodo> sounds like there is some context missing. but the script sounds clever. not sure i like clever :)
[22:34:06] <dodo> fwiw, i ususally distribute scripts via config management, so tehy are maintained in one place
[22:34:41] <alguien> dodo, i'm a programmer. That's what i'm asking about, I'm unfamiliar with such tools (I only heard about chef and puppet and ansible...)
[22:35:02] <dodo> i mostly use saltstack, but yeah, those are alternatives
[22:36:23] <alguien> dodo, the main part of the script is: ssh $ip "bash -e -s" < "$script" -- #and then some arguments shennanigans which I can describe if you want
[22:36:52] <dodo> i mean, if your script works, does what it's supposed to do, and makes you happy.. go for it
[22:37:10] <dodo> there is no right or wrong here usually, just a choice of multiple tools that do the job
[22:37:14] <alguien> dodo, it kinda doesn't though :)
[22:37:22] <dodo> ah, i see
[22:37:43] <dodo> if you want help with the script i'd suggest #bash
[22:37:51] <alguien> i mean i think it's fine, but the superior would like to group a bunch of scripts into one big script - and therein lies my problem
[22:37:55] <dodo> but yeah, config management is probably what you're looking for
[22:38:17] <alguien> dodo, i was thinking maybe there's a simple tool that already does what i want without me having to maintain my hack
[22:38:51] <dodo> alguien: how many machines do you run this on?
[22:40:21] <alguien> to better illustrate: i have one script that updates software, one that updates the database to a desired version. They'd like a metascript just for version X of our software that does both, hardcoding the _DB_ version, and also execute one other, software version X specific line in between the calls to those scripts
[22:40:35] <alguien> dodo, about 5 atm, but the number is supposed to grow
[22:40:48] <dodo> yeah, look into config management
[22:40:56] <alguien> well, 5 on the most used environment so far (testing)
[22:41:29] <alguien> i was hoping for a suggestion from you guys :)
[22:41:39] <dodo> like i said, i like salt :)
[22:42:43] <dodo> though you might prefer ansible playbooks instead of describing states, it's worth exploring both
[22:44:14] <alguien> ok, thx for your suggestions
[22:57:24] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 265 seconds)
[23:30:27] *** Joins: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de)
[23:30:38] *** Quits: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de) (Changing host)
[23:30:38] *** Joins: menace (~someone@user/menace)
[23:42:32] <rawtaz> oooh hey! it's the dodo!!
[23:42:36] * rawtaz bows
[23:47:46] <Joel> alguien ansible is basically what you described, with idempotency built in. 
[23:52:21] <rawtaz> there's also Nix
[23:52:35] <rawtaz> but i havent read the backlod very well..
[23:55:57] <alguien> thanks for the tips
