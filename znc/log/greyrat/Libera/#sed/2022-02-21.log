[00:14:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:25:36] *** Joins: fpn_lvn_18 (~fabiennev@82-65-247-241.subs.proxad.net)
[00:28:21] *** Parts: fpn_lvn_18 (~fabiennev@82-65-247-241.subs.proxad.net) ()
[00:34:12] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220211225827])
[00:55:03] <Earnestly> stdout is api, and like any api, if it changes, things will break
[00:55:18] <Earnestly> I don't hold stdout as lower than library api
[00:57:06] <emanuele6> uptime's stdout will be a string that shows stuff, it is not a standardised format. if the output format changes, but it still shows the same information, it should not be a breaking change
[00:58:26] <emanuele6> using uptime(1) in a way that would make that a breaking change, is relying on unspecified behaviour and a misuse
[01:00:14] <Earnestly> Not all apis are part of standards, each tool and library have their own responsibility to maintain their interface
[01:01:01] <Earnestly> But that does, naturally, mean if procps-ng uptime is used, that it can only support procps-ng
[01:01:14] <Earnestly> Just as you can't swap out one libjson for another cjson and expect it to work
[01:03:16] <emanuele6> Earnestly: if i define my command as something that outputs a json object with numeric fields, you can't rely on the numbers being outputted in decimal
[01:03:52] <Earnestly> emanuele6: People will come to depend on what you do output in practice, hyrum and all that
[01:04:08] <Earnestly> And it is your responsibility to maintain that expectation
[01:04:36] <Earnestly> (And it's the responsbility of people who use it to fix things when it does change)
[01:04:46] <emanuele6> i can change the output from $'{\n  "a":10,\n  "b":30\n}' to $'{\n  "a":0xa,\n  "b":0x1e\n}' and it should not be a breaking change.
[01:04:53] <emanuele6> it is the same json value
[01:05:08] <Earnestly> util-linux changed free(1) after a long time, mostly for the better, but it was pretty major considering websites exist to explain free's output to newbies lol
[01:05:57] <Earnestly> emanuele6: The edges aren't so cut and dry, even in C libraries there is the murkier 'semantic api' breakage which api-compliance-tester does try to pick up on
[01:06:12] <emanuele6> tarzeau: see? the output format of free(1) actually changed.
[01:06:13] <Earnestly> (nevermind abi)
[01:07:09] <Earnestly> emanuele6: Essentially https://xkcd.com/2347/ is why; I'd make a rule that new API means new tool/library name.  Not just version, new repo, everything.
[01:07:28] <emanuele6> it is not a new api
[01:07:35] <Earnestly> A real example of this xkcd is libstdc++
[01:08:02] <emanuele6> the api is "outputs information about uptime and logged users and system usage to stdout"
[01:08:21] <emanuele6> a change in output format is not an API change if the format is not defined in the API
[01:08:37] <Earnestly> stdout is api, whether it is defined or not
[01:08:56] <Earnestly> The author does not have control over such things once it's released
[01:09:21] <Earnestly> They can certainly claim it's not api, but people will depend on it, and if you fuck around, they'll fork or go elsewhere
[01:09:23] <emanuele6> that makes no sense, if you get a FILE* pointer in C, and you rely on it's fields, size or whatever, that is on you
[01:09:46] <emanuele6> you are not supposed to use the fields, they are not defined
[01:10:08] <Earnestly> Is vs. ought
[01:10:28] <emanuele6> s/it's/its/
[01:11:52] <emanuele6> Earnestly: when you call fopen(3) in C, you get a FILE*. that FILE* is like stdout in your analogy
[01:12:10] <emanuele6> FILE* is just the value you get, you can pass that around, compare it etc
[01:12:17] <Earnestly> is vs. ought
[01:12:26] <emanuele6> but if you look at the bytes inside, you are misusing it
[01:12:41] <emanuele6> it is the same thing as $'{\n  "a":10,\n  "b":30\n}' vs $'{\n  "a":0xa,\n  "b":0x1e\n}'
[01:12:42] <Earnestly> Sure, and users who do get to keep the pieces
[01:12:45] <emanuele6> that is not a difference
[01:12:49] <Earnestly> As I noted above
[01:13:18] <Earnestly> But it is still your responsbility to not break things unnecessarily because in reality such things do become depended upon
[01:14:20] <Earnestly> However, stdout is still api.  And your json example doesn't matter because json is a standard
[01:15:08] <emanuele6> yes, and in that example i defined the output format as a json object with number fields
[01:15:16] <Earnestly> When your api is columns, or dsv, then order does matter, format does matter.
[01:15:32] <emanuele6> if it is defined, it does
[01:15:39] <Earnestly> Defined or not
[01:15:48] <Earnestly> By existing it is defined, de facto
[01:15:48] <emanuele6> if it's defined as "outputs information", it does not matter
[01:16:00] <Earnestly> If you do not want it to be api, stderr exists for such things
[01:16:22] <Earnestly> fuser is quite a funny example
[01:17:05] <emanuele6> what do you mean? it is api
[01:17:15] <emanuele6> it is just that the format is not defined
[01:17:36] <Earnestly> The format is defined, by the printf the program calls
[01:17:42] <emanuele6> if i want to redirect the information outputted by uptime(1) to a file, i can do that
[01:17:55] <emanuele6> and i do that because i want that information that it outputs
[01:18:12] <Earnestly> You're not grasping this 'stdout is api' idea very well
[01:18:20] <emanuele6> but if i try to parse the individual bytes as if the format is defined, i am using it wrong
[01:18:26] <Earnestly> But I'll leave it as that; stdout is api, with all that entails
[01:18:32] <Earnestly> And tool authors better keep it stable
[01:18:48] <Earnestly> (And they generally do)
[01:23:12] <emanuele6> s/if the format is defined/& to the individual byte, key order, numeric format, language, etc/
[01:23:56] <emanuele6> if it is defined like that, sure. you can totally use it like that.
[02:18:12] *** Quits: fcr (~fran@r167-56-84-37.dialup.adsl.anteldata.net.uy) (Ping timeout: 240 seconds)
[02:23:39] *** Joins: fcr (~fran@r186-48-20-58.dialup.adsl.anteldata.net.uy)
[02:53:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[03:22:28] *** Quits: Earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[03:26:47] *** Joins: Earnestly (~earnest@user/earnestly)
[04:02:22] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[04:03:03] *** Joins: timm (~timm@user/timm)
[04:07:52] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[04:13:56] *** Joins: timm (~timm@user/timm)
[04:41:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:42:53] *** Joins: seninha (~chatzilla@user/seninha)
[04:50:11] *** Joins: f00 (~timm@user/timm)
[04:50:57] *** Quits: timm (~timm@user/timm) (Read error: Connection reset by peer)
[04:54:22] *** Quits: f00 (~timm@user/timm) (Read error: Connection reset by peer)
[04:54:41] *** Joins: f00 (~timm@user/timm)
[04:59:26] *** Quits: f00 (~timm@user/timm) (Ping timeout: 250 seconds)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:38] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[06:03:15] *** Joins: ferdna (~ferdna@user/ferdna)
[06:40:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:44:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:54:14] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220211225827])
[06:56:44] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:04:16] *** Joins: adeliktas5 (~adeliktas@i59F5279A.versanet.de)
[07:05:24] *** Quits: adeliktas (~adeliktas@i59F5265C.versanet.de) (Ping timeout: 240 seconds)
[07:05:24] *** adeliktas5 is now known as adeliktas
[07:56:38] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[09:30:31] *** Joins: nerozero (~nerozero@87.253.63.54)
[09:45:11] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:46:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:47:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:34:30] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[11:55:11] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (Quit: It's just that easy)
[12:30:18] *** Joins: f00 (~timm@user/timm)
[13:17:12] *** Joins: vlm (~vlm@user/vlm)
[13:44:12] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[13:46:21] *** Joins: seninha (~chatzilla@user/seninha)
[13:56:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[14:17:20] *** Quits: fcr (~fran@r186-48-20-58.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[14:27:57] *** Joins: fcr (~fran@r167-60-63-170.dialup.adsl.anteldata.net.uy)
[14:51:55] *** Joins: lgc (~lgc@user/lgc)
[15:08:05] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.5-dev)
[15:31:39] *** Joins: Atque (~Atque@user/atque)
[16:26:43] *** Joins: malina (~malina@user/malina)
[16:42:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[16:42:34] *** Joins: vlm (~vlm@user/vlm)
[17:06:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:39:51] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[18:54:49] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Write error: Connection reset by peer)
[18:55:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:56:11] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:19:41] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 256 seconds)
[19:25:04] *** Quits: nerozero (~nerozero@87.253.63.54) (Ping timeout: 256 seconds)
[20:00:29] *** Joins: seninha (~chatzilla@user/seninha)
[20:03:19] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[20:39:06] *** Quits: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:08:42] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.fixed.vodafone.hu)
[21:28:35] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[21:29:29] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:42:38] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:55:01] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[22:08:20] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:08:57] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[22:41:58] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[23:33:33] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
