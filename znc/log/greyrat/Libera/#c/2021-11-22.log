[00:00:23] <gproto10> nomagno: thank you
[00:00:43] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[00:00:54] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[00:02:50] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[00:04:00] *** Joins: i336 (~i336@101.163.215.233)
[00:04:21] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Client Quit)
[00:05:24] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[00:06:17] <begriffs> gproto10: this is a little offtopic for the channel, but some text editors are able to find macro definitions without ctags. For example, in vim press [d on a macro. See ":help include-search" to configure how it searches header files.
[00:06:42] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[00:06:58] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[00:07:22] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[00:08:36] *** Joins: arinov (~arinov@5.24.126.7)
[00:10:07] <terminalpusher> Hello, is there a way to optimize this program any further? https://paste.gg/p/anonymous/111e474bce5e489396ba4f5d722c1e9a It does do quite a lot of syscalls, for every character read.
[00:10:09] <terminalpusher>  Can I optimize it with io_uring or something? 
[00:12:06] <Twix> you could read more characters instead of only one at a time. But not sure if that meets your needs ...
[00:12:15] <terminalpusher> One second, this one is better: https://paste.gg/p/anonymous/6d9ce6c0417b4ca58a3e05ffd430e85c
[00:12:19] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:12:27] *** Joins: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net)
[00:12:32] <terminalpusher> Twix: no, because I need to print an 'A' between every character
[00:12:59] <terminalpusher> can io_uring help here?
[00:13:06] <terminalpusher> or is that not helpful in this case?
[00:14:02] <cousteau> terminalpusher: step 1: read N chars at once
[00:14:17] *** Joins: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[00:14:37] *** Joins: Bou_ (sid274843@id-274843.lymington.irccloud.com)
[00:14:41] *** Bou_ is now known as Bou
[00:14:41] <cousteau> step 2: copy them from the buffer you read them to a larger buffer, one by one, interleaving the 'A's
[00:14:51] <cousteau> step 3: write this second buffer
[00:14:53] *** Quits: Bou (sid274843@id-274843.lymington.irccloud.com) (Changing host)
[00:14:53] *** Joins: Bou (sid274843@user/bou)
[00:14:57] <Twix> you could read 10 characters, place all the As and then write it. But that will not work if you expect it to work immediately
[00:15:15] <Twix> oh, i said the same cousteau said
[00:15:21] <gproto10> begriffs: thank you
[00:15:32] <cousteau> yeah you did, because it's a good idea :)
[00:16:14] <cousteau> Also, you probably want to quit the loop when read() returns 0 (EOF) or -1 (error)
[00:17:26] <terminalpusher> will that work if I want the `A` to appear immediately after every keypress?
[00:18:30] <cousteau> oh, well if you want that then yes, you'll have to do it char by char
[00:19:10] *** Quits: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[00:19:10] <terminalpusher> cousteau: ah.. so I will have to do a syscall each time after all. Do you happen to know of a syscall for reading just a single byte? Maybe there's a faster syscall
[00:19:31] <cousteau> you probably also want to do that for stdout, otherwise you'll have to flush after every keypress as well
[00:19:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[00:19:36] <terminalpusher> Or can io_uring help me here? That new I/O thing everyone talks about
[00:20:05] <cousteau> can't you just fgetc and fputc?
[00:20:06] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-a058-550b-9e44-5264.inf6.spectrum.com)
[00:20:08] <terminalpusher> Do what for stdout?
[00:20:13] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[00:20:14] <cousteau> set it raw
[00:20:21] <nomagno> terminalpusher: do you really need to read input without pressing anything=
[00:20:27] <cousteau> otherwise it might be cached
[00:20:44] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[00:20:55] <cousteau> also, nomagno's question is important to be considered...
[00:21:05] <dacav> (\o hi everyone)
[00:21:05] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[00:21:09] <terminalpusher> cousteau: oh, really? I didn't even know setting stdout to raw is a thing. So if I do that, it will definitely not internally buffer right? 
[00:21:19] <terminalpusher> That sounds good because in my actual use case I want to buffer myself
[00:21:39] <cousteau> terminalpusher: if you're going at the speed of someone typing on the keyboard, having one syscall per key press shouldn't be a big concern, at least in terms of slowing down stuff, right?
[00:21:40] <terminalpusher> but currently it works without setting it to raw, it prints it directly. So is this system-dependent?
[00:21:41] <nomagno> https://termbin.com/82yz
[00:22:04] <nomagno> You can use standard C if you can deal with buffered IO ^
[00:22:04] <cousteau> terminalpusher: I'm not sure you can set stdout to raw though.  But at least disable the line buffering.
[00:22:32] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264) (Ping timeout: 240 seconds)
[00:22:47] *** Joins: Macuser (~Macuser@2600:1003:b444:9550:4860:3740:6ff2:d5dd)
[00:23:17] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[00:23:26] <cousteau> btw your program prints the read character and 'A', not 'A' and the read character
[00:23:29] <terminalpusher> cousteau: hmm don't fgetc internally call `read`? Like how are they implemented?
[00:23:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:23:42] <cousteau> it probably does
[00:23:46] <terminalpusher> yup that's what I meant to do
[00:23:47] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[00:24:11] <terminalpusher> so calling `read` directly is probably not bad right? 
[00:24:15] <cousteau> but then again, so does every other input function
[00:24:28] <terminalpusher> but I agree getch and fgetc which call `read` internally might be more convenient
[00:24:29] <cousteau> it's a bit redundant, that's all
[00:25:44] <terminalpusher> cousteau: what line buffering were you talking about btw?
[00:26:10] <cousteau> nomagno: I'd have used `if (store == EOF) break;` instead of an eof var
[00:26:25] <cousteau> terminalpusher: input and output of a program are line-buffered
[00:26:38] <nomagno> terminalpusher: Terminals only send input to the program after EOF or enter is pressed, on most systems
[00:26:54] <nomagno> Most TTYs have a way of disabling this
[00:26:57] <nomagno> that's what ncurses does
[00:27:10] <cousteau> if you do printf("A"); wait a few seconds, and then printf("B\n");, you won't see the "A" after those few seconds, and the "AB" will be printed immediately
[00:27:26] <terminalpusher> I thought that was something the C lib did
[00:27:50] <nomagno> No, that's definitely a characteristic of TTYs themselves
[00:27:57] <nomagno> Inherited from the days of teletypers
[00:28:06] <terminalpusher> do you know of a way to disable that?
[00:28:15] <nomagno> s/teletypers/teleprinters/
[00:28:15] <cousteau> the buffer only gets flushed when (a) it gets full (and it might be several KB in size), (b) you send a newline, or (c), the sending side calls fflush()
[00:28:18] *** Joins: noarb (~noarb@user/noarb)
[00:28:30] <nomagno> terminalpusher: The way you were doing it seems mostly correct
[00:28:41] <nomagno> POSIX-only tough
[00:28:43] *** Quits: Macuser (~Macuser@2600:1003:b444:9550:4860:3740:6ff2:d5dd) (Quit: Textual IRC Client: www.textualapp.com)
[00:28:47] <nomagno> Not standard C
[00:28:51] <nomagno> you can't do that in standard C
[00:28:59] <terminalpusher> but then again I won't actually ever use \n in my output
[00:29:09] <cousteau> C has a thing to disable the buffers.  But that might not work if your system adds extra layers of buffering.  So system-specific is more likely to succeed.
[00:29:26] <nomagno> cousteau: Which thing?
[00:29:42] <terminalpusher> so it probably doesn't matter, but then again it might be faster generally if line buffering is disabled because it doesn't have to look for newlines
[00:29:53] <nomagno> ah setvbuf
[00:30:08] <cousteau> nomagno: yeah that one, thanks
[00:30:12] * cousteau was googling it
[00:30:30] <terminalpusher> oh that's neat
[00:31:27] <nomagno> Doesn't work on my terminal emulator tough
[00:31:52] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2505:c76:f78:c1d6)
[00:31:54] <terminalpusher> it still line buffers? Seems it's something one shouldn't rely on
[00:32:03] *** Parts: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (WeeChat 3.3)
[00:32:52] *** Joins: charadon (~charadon@155.138.164.183)
[00:32:56] <nomagno> terminalpusher: Line buffering is an implementation detail. You should definitely either rely on POSIX or write an external driver that feeds to stdin line-by-line if you need a consistent experience
[00:33:05] <nomagno> But most programs shouldn't really care
[00:33:05] <cousteau> yes.  As I said, your terminal ALSO has line-buffering.
[00:33:23] <nomagno> you can use EOF (ctrl+D) to send the input without newline btw
[00:33:25] <cousteau> you disabled C's line buffer, but the terminal still has a buffer of its own.
[00:33:26] <terminalpusher> I will just use it as an extra but not rely on it
[00:34:14] <cousteau> terminalpusher: what do you want this for?  There are cases where you may want to do this, but it's not usual
[00:34:32] <cousteau> normally you want to allow the user to edit the line before sending it; we all make typoos
[00:34:41] <terminalpusher> some more performance maybe, you know it doesn't have to scan through all lines looking for newlines that way
[00:35:01] <nomagno> cousteau: The only use case I can think of is a terminal program that supports changing stuff with single key presses, such as games or control panels
[00:35:13] <cousteau> terminalpusher: how much faster do you expect your program to be?
[00:35:45] <cousteau> maybe you can save a few nanoseconds (let's be benevolent and say one microsecond) per character if you do some weird magic
[00:35:50] <terminalpusher> not that much, but I will still do it because 1. performance 2. I want to make experience using setvbuf
[00:36:14] <terminalpusher> it seems like an interesting, rather obscure function
[00:36:53] <cousteau> a fast typist might press one key every what, 200 milliseconds?
[00:37:18] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2505:c76:f78:c1d6) (Ping timeout: 260 seconds)
[00:37:31] <nomagno> The way my real-time terminal game works is you pipe a terminal driver into it that supplies timing, input, and other data trough newline-separated chunks.
[00:37:45] *** Quits: i336 (~i336@101.163.215.233) (Ping timeout: 256 seconds)
[00:38:08] <nomagno> This way you don't have to use unreliable methods
[00:38:16] <terminalpusher> how do you pipe a terminal driver to a program?
[00:38:23] <terminalpusher> what do you mean by terminal driver?
[00:38:42] <cousteau> 100 milliseconds maybe?
[00:38:45] <nomagno> terminalpusher: A driver as in, something that reads a controller and writes it to stdout.
[00:39:00] <cousteau> so yeah, you're saving 0.001 milliseconds out of every 100
[00:39:01] <nomagno> To pipe it in Unix-like operating systems, you simply do `driver | game`
[00:39:11] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[00:39:12] <terminalpusher> ah, so for example the keyboard right? So you don't actually read from STDIN but through a different interface
[00:39:19] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[00:39:30] <cousteau> I respect your decision to learn setvbuf though
[00:39:38] *** Joins: i336 (~i336@101.174.94.67)
[00:39:40] <nomagno> terminalpusher: Well you read from STDIN, but the information supplied trough STDIN comes from somewhere else
[00:39:42] <terminalpusher> yeah it's mainly that
[00:39:57] <nomagno> you see, the STDIN stream can be both the input from another program, AND the line-buffer user input to the terminal
[00:40:02] <nomagno> at least that's how it works in POSIX
[00:40:16] <terminalpusher> yeah, it's a bunch of layers. The way you do it might (probably) has less layers, i.e. is closer to the hardware
[00:40:38] *** Quits: X-Scale (~ARM@83.223.249.106) (Ping timeout: 260 seconds)
[00:40:49] <nomagno> I am doing it mainly because my terminal game requires analog input
[00:41:01] <terminalpusher> from what kind of controller?
[00:41:02] <nomagno> And you can't reliably use a keyboard to get analog input
[00:41:18] <terminalpusher> one disadvantage may be platform-compatibility
[00:41:50] *** X-Scale` is now known as X-Scale
[00:41:50] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[00:42:11] <nomagno> terminalpusher: Stub version of the game available over at https://gitea.com/Nomagno/Half-World/
[00:42:27] <nomagno> Specifically everything but the physics engine is ready in that repo
[00:42:32] <nomagno> take a look at https://gitea.com/Nomagno/Half-World/src/branch/master/src/web-control/index.html
[00:42:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c1d7:63de:66b3:4892) (Quit: Leaving)
[00:42:50] <nomagno> Sends analog input from a website to a server trough HTML POST requqests
[00:42:50] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[00:42:53] <cousteau> terminalpusher: in general, performance might be a legitimate concern, but in some scenarios, doing things the easy way is going to have very little impact in performance, and you have to think if this is one of those scenarios
[00:42:56] <terminalpusher> wow, that looks interesting!
[00:42:57] <nomagno> works surprisingly well
[00:43:18] <nomagno> Actually, the physics engine isn't ready because I have NO IDEA AT ALL how to code a physics engine
[00:43:23] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[00:43:26] <nomagno> I'm taking a look at TORCS v1 engine
[00:43:28] <nomagno> which is really short
[00:43:29] <cousteau> like, if something will give you a performance boost of 0.001%, and more importantly, you're not pressed for performance, don't do that something...
[00:43:31] <nomagno> for reference
[00:44:08] <nomagno> The TORCS/Speed Dreams v1 physics engine is like 2000 lines of code and works fully declaratively
[00:44:12] <nomagno> so I'm studying it
[00:44:13] <terminalpusher> cousteau: I agree, there are certainly cases where it doesn't really have a lot of benefits
[00:44:31] <terminalpusher> doesn't sound like a lot of lines for a physics engine
[00:44:54] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ff5a:fb87:fc33:be7c)
[00:44:55] <cousteau> it's an engineering thing.  For learning it doesn't matter; just play with setbuf and enjoy; you'll always get something positive from it; but if it were for something you're doing on your job, then your time might be worth more than those microseconds you may save
[00:45:17] <nomagno> terminalpusher: It's not a very good physics engine, but it is fairly realistic! It mostly packs its realism in pre-calculated formulas
[00:45:18] <cousteau> nomagno: cool, I remember playing that game... I think
[00:45:38] <terminalpusher> cousteau: yeah I agree
[00:45:38] <nomagno> so it is a perfect example
[00:46:02] <terminalpusher> oh neat
[00:46:18] <nomagno> Nowadays Speed Dreams uses a v3 physics engine
[00:46:26] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:9487:a7c7:e639:ebc4)
[00:46:27] <nomagno> that is INSANELY realistic, but also a fair bit bigger
[00:46:46] *** Quits: defjam (~eb0t@90.198.60.224) (Ping timeout: 268 seconds)
[00:47:30] *** Quits: arinov (~arinov@5.24.126.7) (Read error: Connection reset by peer)
[00:47:36] <nomagno> As the only actively developed FLOSS racing simulator, Speed Dreams (Previously TORCS-ng or TORCS unstable) is really an AMAZING reference material
[00:48:06] <nomagno> Also fun to play... :P
[00:48:34] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[00:48:37] *** Joins: defjam (~eb0t@90.196.140.50)
[00:48:43] <cousteau> uh
[00:48:52] <cousteau> isn't Extreme Tux Racing being developed any more?
[00:49:31] <terminalpusher> I remember playing Tux Cart. Extreme Tux Racing actually looks quite cool too
[00:50:01] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[00:50:43] <cousteau> technically (1) actively developed, (2) open source, (3) racing, (4) simulator
[00:50:45] <nomagno> cousteau: SuperTuxKart and Extreme Tux Racing are both insanely fun and very cool, but not racing simulators :P
[00:50:52] <cousteau> except with penguins instead of cars
[00:51:07] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:9487:a7c7:e639:ebc4) (Ping timeout: 250 seconds)
[00:51:18] <cousteau> it literally has "racer" (or "racing" or whatever) in the name
[00:51:21] *** Joins: nyah (~nyah@94.6.71.219)
[00:51:21] <nomagno> Well I clearly mean actively developed FLOSS motorports car racing simulators
[00:51:29] <nomagno> smh
[00:51:40] <cousteau> yeah sorry I was picking on you
[00:52:03] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:52:13] *** Joins: jinsun (~quassel@user/jinsun)
[00:54:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[00:55:02] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:55:54] *** Quits: terminalpusher (~terminalp@2a01:586:12e7:1:89c3:58c2:e0e9:27cc) (Remote host closed the connection)
[00:56:05] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[01:01:31] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[01:03:10] *** Joins: dohtem (uid524096@user/dohtem)
[01:03:21] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[01:08:13] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Ping timeout: 250 seconds)
[01:11:23] *** Quits: magla (~gelignite@55d4124a.access.ecotel.net) (Quit: Stay safe!)
[01:14:03] *** Joins: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[01:14:26] *** Joins: X-Scale` (~ARM@31.22.202.54)
[01:14:35] *** Quits: i336 (~i336@101.174.94.67) (Ping timeout: 256 seconds)
[01:16:17] *** Joins: i336 (~i336@101.163.175.230)
[01:16:32] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 240 seconds)
[01:18:08] *** Joins: arinov (~arinov@213.194.126.155)
[01:18:38] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:18:46] *** X-Scale` is now known as X-Scale
[01:18:54] *** Quits: mimmy_ (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[01:21:30] *** Joins: monkey_ (~user@190.104.116.153)
[01:21:54] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:24:46] *** Quits: phao (~phao@2804:d45:8e7a:de00:3df5:406b:6e35:d740) (Quit: Leaving)
[01:27:55] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:28:59] *** Joins: PortableDave (~portabled@203.221.7.107)
[01:31:40] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[01:31:42] *** Joins: a2x (~a2x@185.65.135.252)
[01:32:53] *** Quits: a2x (~a2x@185.65.135.252) (Client Quit)
[01:33:02] *** Joins: a2x (~a2x@185.65.135.252)
[01:33:18] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[01:33:30] *** Quits: kyle_ (~kyle@ool-457887fa.dyn.optonline.net) (Quit: leaving)
[01:33:38] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[01:36:51] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:818b:d7ec:141a:89c5)
[01:37:36] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:38:19] <gproto10> `char ptr[0]; ptr[atoi(argv[1])] = 0;` what if ptr[1234] = 0, then what does ptr do zero out in memory?
[01:41:35] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:818b:d7ec:141a:89c5) (Ping timeout: 250 seconds)
[01:43:37] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[01:44:32] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:8d26:371e:a54e:c859)
[01:44:58] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[01:45:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 260 seconds)
[01:49:03] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:b0b3:d263:4777:3209) (Ping timeout: 268 seconds)
[01:49:43] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[01:50:51] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[01:50:56] <twkm> the declaration is in error, so anything might happen.
[01:54:08] <nomagno> Is there any way to portably ensure the ordering of struct members in memory?
[01:54:10] <twkm> changing it to char ptr[1], the later assignment is out of bounds so the behavior is undefined.
[01:54:43] <twkm> don't pray you can map memory to a struct, (de)serialize.
[01:55:36] <nomagno> twkm: are you replying to me?
[01:55:42] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 260 seconds)
[01:56:17] <twkm> you asked about mapping a struct to memory, so even if i wasn't still it applies.
[01:56:44] *** Quits: Akuli (~Akuli@82-203-160-86.bb.dnainternet.fi) (Quit: Akuli)
[01:59:09] <nomagno> twkm: Well I am basically figuring out if I can simulate a tuple with structs, just for fun
[01:59:19] <nomagno> So if there is a way to ensure memory order in a struct, I'll take it
[02:00:02] <nomagno> I guess I could add a flexible struct member, but that is a dirty way
[02:00:18] <kurahaupo> nomagno: The standard does not provide such a mechanism, but your compiler almost certainly does
[02:01:24] <nomagno> kurahaupo: This #c tough, not #mycompiler :P
[02:01:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:02:00] <kurahaupo> nomagno: or rather, the order of the fields must match the order of the bytes, but there's no direct control over padding or endianness
[02:02:50] <twkm> though you could (de)serialize as needed.
[02:04:24] <twkm> members must be in the order declared except for bit-fields.  padding can appear after any member even the last.
[02:05:15] <kurahaupo> If you're considering mmap, then presumably all access is on a single host, so there's no reason that the compiler would lay out objects differently (unless you actively ask it to)
[02:05:46] <twkm> also modulo multiple compilers.
[02:06:15] <kurahaupo> The C standard isn't intended to provide definitions for everything. There are other standards such as ABI definitions that provide these kinds of guarantees
[02:06:49] <kurahaupo> Even multiple compilers on the same host have to be able to match the host's OS ABI
[02:08:11] *** Quits: superdupond (~Kev@2a01cb0400149f0071024234821d877b.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[02:08:27] <kurahaupo> Notice how we DON'T manually serialise & deserialise when making kernel calls
[02:09:19] <nomagno> So, struct member order is guaranteed in most situations?
[02:10:20] <twkm> order is alway guaranteed except for bit-fields.
[02:10:45] <gproto10> twkm: this ptr can zero out an address in memory. but i do not know how it does? for instance, i have address like this 0x4051a0. in decimal is 4215200. i want to zero out it. ptr[4215200] = 0 
[02:11:24] <twkm> it is ub so anything might happen.
[02:12:41] <twkm> char ub[1]; ub[4215200] = 0; // might write a 0 byte to offset 4215200 or it might not.
[02:13:17] <aosync> it might make it rain too
[02:13:21] <twkm> it might abort, it might corrupt another task, it might reboot the computer, it might ...
[02:14:04] <nomagno> Ideally a compiler would simply error out if there is ANY Undefined Behaviour at all without a flag to tell it its okay
[02:14:16] <nomagno> At least it would make debugging much easier
[02:14:19] <twkm> it might be outside what the program can write yet not cause an abort, so nothing happens.
[02:14:30] <twkm> never nomagno.
[02:14:47] <twkm> something else might define the behavior.
[02:15:21] <nomagno> Ideally it'd at least have an option to become strictly conformant for debugging.
[02:15:31] <nomagno> But none bother
[02:15:46] <pert> nomagno: I think what you're looking for is the Undefined Behavior Sanitizer (UBSan)
[02:16:08] <pert> It tries to warn about many cases of undefined behavior at runtime
[02:16:10] <twkm> it cannot, though that particular thing might certainly be considered a flaw which some things can detect, even some compilers.
[02:16:19] <kurahaupo> nomagno: Detecting some kinds of UB at compile time would be equivalent to solving the halting problem.
[02:16:41] *** Joins: Colt (~Colt@user/colt)
[02:17:04] <nomagno> kurahaupo: Well detecting the kinds of UB at compile time that can be solved without reaching mathematical impossibility
[02:17:11] <kurahaupo> For example, the compiler can't know whether a mallocked object is used after it's been freed
[02:17:38] <nomagno> kurahaupo: It definitely can if you tell it the program is self-contained
[02:17:47] *** Quits: gproto10 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:18:03] <twkm> e.g., foo.c:5:2: warning: array index 4215200 is past the end of the array ...
[02:18:05] <kurahaupo> nomagno: What do you mean by "self contained"?
[02:18:42] <pert> well, if you have a program that just calls malloc() and free() in main and then exits, obviously a use-after-free is impossible
[02:19:17] <nomagno> kurahaupo: as in, if you assure the compiler you are only using stuff you know returns malloc'ed objects, it only has to check in the code it is actually compiling
[02:19:24] <kurahaupo> If you're prepared to accept a significant speed & memory penalty, then you can have more checks done, so the problem aborts immediately rather than continues with weirdness. 
[02:19:31] <nomagno> There are many other attributes in C that rely in blind trust in the coder
[02:20:04] <nomagno> So "these files are the only possible failure points" would be just another one.
[02:20:04] <pert> GCC's new -fanalyzer static analyzer does try to find use-after-frees at compile-time
[02:20:23] <kurahaupo> nomagno: Do you know what "the halting problem" refers to?
[02:21:21] <nomagno> kurahaupo: yes, detecting if a given program will halt or not. The famous prove of impossibility is the 'opposit' program making it a nonsensical idea
[02:21:32] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[02:21:57] <nomagno> the solution is to tell the compiler to not try very hard
[02:22:01] *** Quits: i336 (~i336@101.163.175.230) (Ping timeout: 256 seconds)
[02:22:19] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:22:26] <kurahaupo> Well, we already do that, we tell the compiler to try "not very hard at all"
[02:22:29] *** Joins: i336 (~i336@101.175.1.74)
[02:22:51] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:23:16] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[02:23:29] <kurahaupo> Which particular UB would you like the compiler to find for you?
[02:26:46] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[02:27:09] <twkm> hopefully gproto10 got some of this.
[02:29:37] *** Joins: coruja (~coruja@user/coruja)
[02:31:29] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:55] *** Quits: pizdets (~pizdets@183.182.111.52) (Ping timeout: 256 seconds)
[02:33:58] *** Joins: pizdets_ (~pizdets@183.182.114.60)
[02:33:58] *** Joins: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com)
[02:34:58] *** Quits: i336 (~i336@101.175.1.74) (Ping timeout: 260 seconds)
[02:35:20] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[02:36:46] *** Joins: i336 (~i336@121.217.197.17)
[02:42:18] *** Joins: constxd (~brad@TA938.WPA.Dal.Ca)
[02:42:21] <constxd> bro
[02:43:35] <constxd> so i set rl_attempted_completion_function
[02:43:54] <constxd> but i want tab to cycle through em u know
[02:44:11] <constxd> by default it just completes the first entry and doesn't even display the other possible completions
[02:44:11] *** Joins: lkronnus (~kron@179097066201.provale.com.br)
[02:44:13] <constxd> kinda useless
[02:44:20] <constxd> i have no .inputrc
[02:44:43] <constxd> the docs are kinda trash imo... how do i change the behavior of tab completion?
[02:44:53] <constxd> inb4 offtopic
[02:45:15] *** Quits: mahmutov_ (~mahmutov@176.30.186.117) (Ping timeout: 256 seconds)
[02:46:35] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of Santa's gnomes at https://indiedevs.net/)
[02:47:07] *** Quits: Narrat (~omnius@p200300df5f15684606ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:48:39] *** Quits: i336 (~i336@121.217.197.17) (Ping timeout: 256 seconds)
[02:50:08] *** Joins: i336 (~i336@101.174.120.97)
[02:50:32] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 240 seconds)
[02:51:50] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:8d26:371e:a54e:c859) (Remote host closed the connection)
[02:52:00] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:59:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:02:57] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[03:03:29] *** Joins: re101-mayfly-80 (~re101-may@2620:132:b042:0:dd76:1f7:f13a:d506)
[03:03:38] *** Quits: re101-mayfly-80 (~re101-may@2620:132:b042:0:dd76:1f7:f13a:d506) (Client Quit)
[03:03:53] *** Joins: SmileyKeith (~SmileyKei@2601:645:4300:11e2:6c31:9617:c712:1c7e)
[03:05:38] <nomagno> constxd: what editor are you talking about?
[03:06:46] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a)
[03:08:06] *** Quits: alch (~alch@bo-18-128-68.service.infuturo.it) (Ping timeout: 260 seconds)
[03:08:19] <constxd> nomagno: no editor
[03:08:27] <constxd> talking about readline
[03:08:42] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[03:10:03] *** Joins: alch (~alch@151.82.209.198)
[03:11:31] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a) (Ping timeout: 250 seconds)
[03:11:31] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[03:12:42] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:12:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:13:53] *** Joins: elPuma (~elPuma@2600:1700:40b0:7830:9ea3:2b55:98f2:e811)
[03:14:25] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[03:17:22] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[03:17:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:18:29] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[03:18:33] *** Joins: quartz (~quartz@user/quartz)
[03:20:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[03:23:31] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:24:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:25:10] *** Joins: Klinda (~superleag@user/klinda)
[03:25:36] *** Quits: Klinda (~superleag@user/klinda) (Client Quit)
[03:26:23] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:30:13] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:15] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:32:30] *** Quits: elPuma (~elPuma@2600:1700:40b0:7830:9ea3:2b55:98f2:e811) (Quit: Client closed)
[03:32:39] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[03:32:55] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[03:34:32] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:34:39] *** Joins: retroid_ (~retro@97e2ba2e.skybroadband.com)
[03:35:07] *** Quits: retro_ (~retro@97e2ba2e.skybroadband.com) (Ping timeout: 268 seconds)
[03:35:38] * Feuermagier pets candide 
[03:35:46] * candide slaps F​euermagier
[03:35:57] * Feuermagier slaps candide back
[03:37:15] *** Quits: trisk (~trisk@2601:196:4700:1fa5:8:20ff:fe3e:890e) (Quit: WeeChat 3.3)
[03:37:30] *** Quits: i336 (~i336@101.174.120.97) (Ping timeout: 260 seconds)
[03:37:31] *** Joins: trisk (~trisk@2601:196:4700:1fa5:8:20ff:fe3e:890e)
[03:39:00] *** Joins: i336 (~i336@121.217.4.167)
[03:40:24] *** Quits: trisk (~trisk@2601:196:4700:1fa5:8:20ff:fe3e:890e) (Client Quit)
[03:42:22] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[03:42:31] *** Quits: Burgundy (~yomon@86.127.194.72) (Ping timeout: 268 seconds)
[03:43:35] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[03:47:20] *** Joins: Macuser (~Macuser@2600:1003:b465:11f7:5e1:e00d:ee11:87e6)
[03:54:02] *** Quits: jess (~jess@libera/staff/jess) ()
[03:54:57] *** Quits: i336 (~i336@121.217.4.167) (Ping timeout: 256 seconds)
[03:55:20] *** Joins: i336 (~i336@121.217.103.63)
[03:59:17] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:7551:f335:e9c4:5a78)
[04:02:42] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[04:03:50] *** Joins: trisk (~trisk@2601:196:4700:1fa5:8:20ff:fe3e:890e)
[04:03:58] *** Joins: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[04:04:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[04:04:23] <retr0> if you dont have any context an address is just the same thing as a number right
[04:04:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:04:32] <retr0> and vice versa
[04:07:15] <Thedarkb-Desktop> I don't know why some tutorials tell you to free everything at the end of the program, the OS normally does that for you.
[04:07:23] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[04:08:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[04:08:59] <retr0> no
[04:09:21] *** Quits: Macuser (~Macuser@2600:1003:b465:11f7:5e1:e00d:ee11:87e6) (Quit: Textual IRC Client: www.textualapp.com)
[04:10:11] <retr0> omg this channel has gone south
[04:10:47] *** Joins: chenqisu12 (~03cia7d@183.217.201.124)
[04:11:36] <omegatron> =D
[04:12:05] <twkm> Thedarkb-Desktop: typically in case you want to find leaks, where if you leave out all deallocations you can't spot them.  leaks are especially bad (usually) for long running programs.
[04:12:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[04:12:41] * retr0 releases twkm on Thedarkb-Desktop
[04:12:46] <twkm> retr0: not necessarily, but sometimes they can be turned into "just numbers".
[04:13:27] <retr0> hmm
[04:13:35] <retr0> what else would they be though
[04:13:44] <retr0> besides voltage or electrons
[04:13:53] <twkm> they might be compound things.
[04:13:55] <retr0> or 0's and 1's
[04:14:18] * Thedarkb-Desktop is only stirring it.
[04:15:02] <twkm> the usual example is segment:offset, which cannot always be reduced to just segment*segsize+offset.
[04:16:00] <Thedarkb-Desktop> I was fiddling around with Bruce's C Compiler a while ago and it was very irritating to find that it didn't support far pointers.
[04:16:51] <Thedarkb-Desktop> I don't know why you'd bother writing a compiler for real mode without them tbh
[04:17:22] <retr0> isnt there another way to do that for MS-DOS now anyhow
[04:17:25] <omegatron> perhaps the target machine was the 4004 ?
[04:18:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[04:18:14] <Thedarkb-Desktop> I think it was originally intended for compiling boot loaders, but I was using it to fiddle around with EGA mode.
[04:18:17] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a)
[04:18:25] <Thedarkb-Desktop> So I was having to inline assembly to write to far off addresses.
[04:18:53] <Thedarkb-Desktop> At that point, it's starting to diminish any returns you're getting from using a compiler rather than a macro assembler or something.
[04:18:59] <caze> retr0: An address doesn't have to be a number.
[04:19:06] <caze> retr0: It can be a fruit, for example.
[04:19:28] <omegatron> yeah .. the forbidden fruit ..
[04:19:35] <retr0> yes but thats not to a computer its to a human
[04:19:42] <Thedarkb-Desktop> I tried writing a Roguelike for MS-DOS using it for last year's 7DRL, that also went terribly but mostly due to my incompetence rather than the compiler.
[04:20:00] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[04:21:08] <caze> retr0: Given: int a;, &a could be "banana". &a + 1 could be "apple". Then you've got: "apple" - 1 = "banana", and "apple" - "banana" = 1.
[04:21:39] <caze> retr0: And that's about all you're allowed to do with pointers.
[04:21:44] <retr0> yes but again strings are chars and chars are numbers and numbers are binary
[04:21:55] <retr0> maybe im in the wrong channel
[04:22:06] <caze> retr0: Those aren't strings. Those are address values.
[04:22:41] <caze> retr0: Quite possible.
[04:23:05] <twkm> the number of balanced symbols that don't require line-noise is limited.
[04:23:08] *** Parts: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) ()
[04:23:13] <caze> Likely in fact, that you have C confused with something else.
[04:23:14] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:7c3d:8173:a37e:d50a) (Ping timeout: 268 seconds)
[04:23:31] <retr0> well, the only language I know is C
[04:23:44] <caze> Are you sure you know it?
[04:23:54] <retr0> I know it somewhat
[04:24:24] <caze> (As opposed to the implementation of C on whatever system you're using.)
[04:24:31] <twkm> perhaps writing &a is {banana} while a+1 is {apple} doesn't make it seem like strings, though it might seem like something else.
[04:24:49] <omegatron> since when does "know" mean "i know everything about something" ?
[04:25:09] <caze> Since when did anyone imply that?
[04:25:12] <omegatron> yuo did
[04:25:13] <caze> omegatron: ^
[04:25:20] <caze> omegatron: Where?
[04:25:32] <omegatron> 01.53.44
[04:26:15] <caze> I don't see anything about "i know everything about something".
[04:27:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:27:36] <caze> omegatron: If you continue to read, at 01.54.24, I explain more about what I meant.
[04:29:27] <omegatron> I understood retr0's sentence with the intention of "I know C, but surely not everything about it" and not "I know everything about C" ; which in turn made your question/comment somewhat ... superfluous ...   hence my comment
[04:29:37] <caze> retr0: Do you have a way to tell the difference between what are behaviors, properties, etc. that your system has chosen for itself, and what are the behaviors, properties, etc. that the C standard requires of all implementations of C?
[04:29:54] <caze> omegatron: You've completely missed the point.
[04:30:00] <omegatron> but if it's a misunderstanding ..
[04:30:41] <constxd> what zero pussy does to a mf
[04:30:54] <caze> retr0: Often people mislearn the language because they become accustomed to the former, thinking that they are the latter.
[04:31:22] <retr0> I used to mislearn it ages ago
[04:31:44] <caze> retr0: If you believe that pointers are numbers, that is another mislearning.
[04:32:13] <retr0> I would say its all the same thing without context
[04:32:36] <retr0> but a better question is "what are you trying to do" instead of is this an address or a number
[04:32:38] <caze> Your system, (and most if not all systems) choose to represent pointer values with digits that make them resemble numbers. There is nothing in the language spec that requires that.
[04:32:52] <retr0> right
[04:33:23] <retr0> but every computer on earth probably does it as numbers so its probably fine to assume that
[04:33:55] <caze> The thing with numbers is that you can always add 1 and get a larger numbers. You can't do that with address values.
[04:34:16] <retr0> oh
[04:34:34] <caze> Also, with numbers, if you add 1, you get the next largest number. Also doesn't work with address values.
[04:34:50] <retr0> oh
[04:36:27] *** Quits: constxd (~brad@TA938.WPA.Dal.Ca) (Ping timeout: 250 seconds)
[04:37:07] <caze> ,cc char a[10][7]; char (*p)[7] = a; for (int i = 0; i < 10; i++) { printf("%p ", (void *)p++); }
[04:37:09] <candide> caze: 0x7fffffffe230 0x7fffffffe237 0x7fffffffe23e 0x7fffffffe245 0x7fffffffe24c 0x7fffffffe253 0x7fffffffe25a 0x7fffffffe261 0x7fffffffe268 0x7fffffffe26f
[04:37:24] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173) (Ping timeout: 268 seconds)
[04:37:42] <caze> See, for each p++, the address value doesn't go up by 1.
[04:38:05] <caze> So it's not really useful to think of them as numbers, even though they superficially resemble numbers.
[04:38:33] <caze> You can't even multiply or divide them.
[04:39:43] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 256 seconds)
[04:44:29] *** Joins: rgrinberg (~textual@201.192.183.53)
[04:46:37] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[04:48:35] *** Quits: i336 (~i336@121.217.103.63) (Ping timeout: 250 seconds)
[04:48:44] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[04:49:17] *** Joins: i336 (~i336@121.216.1.91)
[04:51:54] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[04:52:39] *** Joins: PortableDave (~portabled@203.221.7.107)
[04:54:23] *** Quits: geeknix (~pi@147.158.227.80) (Ping timeout: 264 seconds)
[04:54:36] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[04:55:48] *** Quits: dragonmaster (dragonmast@user/dragonmaster) (Quit: kernel update)
[04:56:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:57:16] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:57:24] *** Joins: frost (~frost@user/frost)
[04:59:16] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[04:59:46] *** Joins: dragonmaster (dragonmast@user/dragonmaster)
[04:59:48] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[04:59:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:00:24] *** Joins: rid (~rid@50.234.109.84)
[05:03:00] *** Joins: dutch (~DutchIngr@user/dutch)
[05:05:05] *** Joins: ultros (~ultros@user/ultros)
[05:05:32] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 240 seconds)
[05:05:50] <ultros>  743 users, nice. still goin strong.
[05:06:20] *** Parts: ultros (~ultros@user/ultros) (Leaving)
[05:06:33] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[05:06:41] <Twix> o_O
[05:07:15] <rid> I get an "undefined reference" to a function when I run make, but when I run it a second time it runs perfectly, any ideas why?
[05:07:57] <Twix> your buildsystem is broken?
[05:08:18] <Twix> some missing dependency in your makefile
[05:09:19] <fizzie> In terms of specific breakage, my guess would involve some wildcards in selecting which object files to include when linking, together with a missing dependency that doesn't force building the relevant object files before trying to link them.
[05:09:54] *** Joins: pnbeast (~pnbeast@2601:140:4280:3c90::1)
[05:10:46] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[05:11:51] <rid> paste.ofcode.org/38HsvnPJLsKa5LkCsTmHsx4
[05:11:59] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:d9be:afe3:4e5b:d63)
[05:12:18] <rid> the first file is my makefile, next is the file causing issues
[05:12:32] <Xgc> rid: That URL was empty for me.
[05:12:46] <twkm> at a guess (js only paste ignored) is that you didn't provide objects in the right order.
[05:12:58] <Xgc> Oh.  There's a bunch of blank line.
[05:13:00] <nitrix> If only there was a make tool aware of C's needs so you didn't have to worry so much about these things. I'd even name it CMake to be cheeky.
[05:13:01] <fizzie> `$?` is not usually what you want anywhere.
[05:13:09] *** Quits: i336 (~i336@121.216.1.91) (Ping timeout: 256 seconds)
[05:13:43] *** Joins: i336 (~i336@101.163.179.6)
[05:13:53] <rid> I'm afraid of CMake -- I heard someone say something bad about it once
[05:14:13] <Xgc> rid: Someone says something bad about everything.
[05:14:15] <fizzie> It names all the prerequisites that are newer than the target, but when you're doing something like linking a bunch of object files together, you need to pass *all* the prereqs to the linker even if only one of them has changed.
[05:14:41] <rid> how do I specify "hey, link this file"
[05:15:05] <fizzie> The `test: test_all.c map_test.o map.o` rule should be using $^ instead of $?.
[05:15:48] <fizzie> And the rules for compiling from foo.c to foo.o should likely be using $< to say you want to pass the first prerequisite (the .c file).
[05:16:12] <rid> okay that fixed it: using $^ (but why, exactly?)
[05:16:31] <twkm> ''man make'' and find out?
[05:16:40] <fizzie> Otherwise if only one of those object files has changed, the command will pass only that changed file to the command.
[05:16:43] <twkm> (though fizzie explained)
[05:18:13] *** Joins: constxd (~brad@142.134.38.68)
[05:18:39] <rid> RTFMing now, but thanks a lot!
[05:19:14] <fizzie> Just forget about $?, pretty much. It's only appropriate if you've got some sort of tool that can do incremental updates, which is uncommon.
[05:19:24] <rid> gotcha
[05:23:09] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:23:22] *** Quits: rid (~rid@50.234.109.84) (Quit: leaving)
[05:26:31] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:26:40] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[05:26:42] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:9c35:bed7:e2c:e900)
[05:26:53] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:9c35:bed7:e2c:e900) (Client Quit)
[05:27:03] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:28:13] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:d9be:afe3:4e5b:d63) (Ping timeout: 250 seconds)
[05:28:20] <Nistar> So I read all of Dennis Ritchie's 'The Development of the C Language' paper from (2003?) early today. Very interesting read. I'd love to read more papers like this. Can anyone recommend?
[05:30:54] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 260 seconds)
[05:33:00] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[05:35:59] *** Joins: malloy (~jimery@116.30.222.115)
[05:37:43] <cehteh> 'like this' ? :)
[05:37:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[05:38:52] *** Joins: PortableDave (~portabled@203.221.7.107)
[05:39:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:51] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[05:42:37] *** Joins: pucara (~i@host207.181-14-157.telecom.net.ar)
[05:43:47] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[05:44:01] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 268 seconds)
[05:47:34] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[05:50:05] <retr0> does anyone here even know why dennis ritchie didnt get his thesis published
[05:50:10] <retr0> it was on computerphile
[05:50:15] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[05:50:45] <retr0> I never liked universities anyhow
[05:51:51] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 250 seconds)
[05:53:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:53:46] *** Quits: i336 (~i336@101.163.179.6) (Ping timeout: 260 seconds)
[05:54:29] *** Joins: i336 (~i336@101.174.233.196)
[05:57:02] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 260 seconds)
[05:59:44] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Quit: Leaving)
[06:03:49] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:3530:cf4b:865c:a355)
[06:10:36] *** Joins: dutch (~DutchIngr@user/dutch)
[06:14:26] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[06:15:14] *** Quits: omegatron (~some@p5484903d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:21:29] <Nistar> retr0: Wasn't his thesis published, but its publication was just limited to the university's library?
[06:21:43] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[06:21:56] <retr0> nope because someone would know about it then
[06:22:03] <retr0> but apparently nobody knows
[06:22:57] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[06:23:01] <pnbeast> That's clearly incorrect.  The librarian there would have known.
[06:31:29] *** Quits: i336 (~i336@101.174.233.196) (Ping timeout: 250 seconds)
[06:31:31] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[06:32:10] *** Joins: i336 (~i336@121.217.0.210)
[06:33:07] <retr0> or like 1 of the several thousand students at harvard
[06:33:21] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 268 seconds)
[06:33:39] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[06:34:59] *** Quits: pucara (~i@host207.181-14-157.telecom.net.ar) (Quit: Lost terminal)
[06:40:58] <Feuermagier> retr0, well, if he's still alive you can always mail him
[06:40:58] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:41:15] <retr0> wat
[06:41:17] <Feuermagier> this is actually a fascinating thing in computer science
[06:41:26] <dave0> maw
[06:41:32] <Feuermagier> *most* people are still alive
[06:41:51] <retr0> I dont wanna do this topic no more :(
[06:42:08] *** Quits: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com) (Remote host closed the connection)
[06:42:22] *** Quits: tinyweasel (~weasel@gone.under.underserver.net) (Quit: quit)
[06:42:24] <Feuermagier> and alive + computer scientist = mail address
[06:46:48] <dave0> alive but retired?
[06:47:54] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Ping timeout: 260 seconds)
[06:48:11] <Feuermagier> dave0, you never retire from academics. every single person who reaches that amount of competence in any field does it because it's cool and they like it
[06:49:49] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[06:50:17] <snappy> i emailed Kernighan for his phd thesis, it's quite interesting because it was trying to solve an np-complete problem before the theory of np-completeness
[06:52:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:52:58] <pnbeast> Is there a "theory" of NP completeness?  Or a problem?
[06:53:26] *** Quits: rgrinberg (~textual@201.192.183.53) (Ping timeout: 260 seconds)
[06:53:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:53:58] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:55:09] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[06:58:17] <fizzie> https://computerhistory.org/blog/discovering-dennis-ritchies-lost-dissertation/ has links to a copy. Two copies, in fact.
[06:58:21] <retr0> snappy I was doing this years ago on several occasions, before I even knew what P v NP was
[06:58:26] <Feuermagier> pnbeast, a problem can be proven np-complete. If nondeterministic and deterministic turing machines can solve these kind of problems in the same runtime magnitude is an open problem.
[06:58:52] <retr0> copies can be modified tho fizzie
[06:59:01] <retr0> they are more like versions
[06:59:41] <dave0> he inserted a backdoor in his thesis?
[07:01:46] <retr0> ok im reading this link fizzie
[07:02:01] <retr0> and as I knew anyhow, it was the university being asses
[07:03:00] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[07:03:03] <retr0> I had a job I sucked at before I did uni, I dont need to be force fed crap about being pissed about to "get used to life being hard"
[07:03:28] <retr0> when everyone else in my class SUCKED
[07:05:05] <retr0> ohhh so harvard wanted him to pay for a copy that they wanted lol
[07:05:08] *** Quits: alch (~alch@151.82.209.198) (Read error: Connection reset by peer)
[07:05:17] <retr0> like harvard doesnt have enough money already
[07:09:22] *** Joins: alch (~alch@151.82.146.222)
[07:10:49] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[07:14:49] *** Quits: chenqisu12 (~03cia7d@183.217.201.124) (Ping timeout: 250 seconds)
[07:21:31] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[07:26:16] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[07:29:43] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:33:37] *** Joins: bbju (~bbju@23.237.205.242)
[07:34:07] *** Joins: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be)
[07:34:07] *** Quits: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be) (Changing host)
[07:34:07] *** Joins: Colt2 (~Colt@user/colt)
[07:35:01] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:12] *** Quits: Colt2 (~Colt@user/colt) (Client Quit)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:54] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 260 seconds)
[07:37:01] *** Joins: Colt (~Colt@user/colt)
[07:39:17] *** Joins: nostar (~nostar@68.51.221.108)
[07:39:36] *** Joins: Atque (~Atque@user/atque)
[07:46:30] *** Joins: Guest23 (~Guest23@80.31.188.248)
[07:46:38] *** Joins: timschumi (~timschumi@user/timschumi)
[07:46:56] <Guest23> Hi. I am trying to run a code that computes the number of "a" and "á" in a sentence.
[07:47:16] <Guest23> How do i count the numbers of "á"?
[07:47:40] *** Parts: timschumi (~timschumi@user/timschumi) (Quassel)
[07:48:03] <aphysically> that's spicy you probably have to use that unicode equivalence algorithm or whatever it is
[07:48:13] <Guest23> i define char letter and what i use is if(letter=='a' || letter== 'á')
[07:48:18] <Guest23> but the last part is just ignored
[07:48:35] <aphysically> there are multiple ways to write that letter in unicode
[07:48:41] <caze> Are you actually typing '?'?
[07:48:58] <Guest23> Mm no, i guess its because i am using webchat
[07:49:02] <Guest23> I mean a accute
[07:49:10] <dave0> Guest23: it's tricky because it's not ascii
[07:49:17] <dave0> maybe you have to use wide chars
[07:49:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:49:57] <aphysically> caze: it's a lowercase latin a with an acute accent
[07:50:16] <caze> It's probably my client.
[07:50:29] *** Joins: mahmutov_ (~mahmutov@37.155.24.83)
[07:50:38] *** Joins: chenqisu12 (~03cia7d@183.217.201.124)
[07:50:38] <caze> If you don't want to bring in a unicode library, you can just look for the byte sequence that composes whatever that is.
[07:50:41] <Guest23> Meh i have no idea:D  its literally my second c code after hello world :D
[07:50:51] <Guest23> I guess i'll pass until i get some more experience
[07:50:58] <caze> Guest23: Where is this exercise from?
[07:51:11] <caze> Strange thing to ask a beginner to do.
[07:51:52] <Guest23> Uhm my teacher asked us to solve it
[07:52:17] <aphysically> you need to implement the unicode NFC algorithm probably
[07:52:41] <floatcomplex> fizzie: it boggles the mind that they would have the energy to put that exception in the standard and not have time to define the elvis operator, which should take like half a sentence and has tons of real world mileage
[07:53:18] *** Joins: Samian (~s@user/samian)
[07:53:36] <Guest23> Thanks guys :)
[07:54:01] <aphysically> see https://unicode.org/reports/tr15/ -> implement the NFC algorithm then you can match on the normalized form Guest23 
[07:54:03] <candide> Title of aphysically's link: UAX #15: Unicode Normalization Forms
[07:54:45] <aphysically> it's not as simple as matching a letter, unicode can have arbitrarily many ways to represent the same grapheme (not just different letters that *look* the same - that's NOT what I'm referring to)
[07:54:53] <aphysically> there are different ways to compose in unicode the same letter as well
[07:54:58] <aphysically> and you have to normalize them to a single form
[07:55:35] <aphysically> f.ex. there's a unicode code point that's a lowercase latin a with an acute diacritic, but there's also unicode for combining an acute diacritic with a lowercase latin a
[07:55:59] *** Quits: chenqisu12 (~03cia7d@183.217.201.124) (Ping timeout: 250 seconds)
[07:56:10] <aphysically> (and potentially many other perverse ways to come up with the same visible and semantically identical characteR)
[07:56:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[07:56:24] <Guest23> Yeah I see, it sounds interesting
[07:56:58] *** Quits: mahmutov_ (~mahmutov@37.155.24.83) (Ping timeout: 260 seconds)
[07:57:32] *** Joins: abip20 (~abdullah@user/abip20)
[07:57:37] <caze> Bad beginner exercise.
[07:59:57] *** Joins: jinsun (~quassel@user/jinsun)
[08:02:06] <retr0> use wchar, its better than LPCSTR
[08:02:32] <retr0> or LPCWSTR or whatever it is
[08:02:53] <aphysically> fun fact: python (very weirdly!) uses NFKC normalization to determine character equivalence for the purposes of variable names (unicode explicitly recommends NFC for this)
[08:03:01] <dave0> ,cc wint_t hmm = L'á'; int alpha = 0, acute = 0; wint_t c; while(c = getwchar(), c != WEOF) { if(c == L'a') alpha++; if(c == hmm) acute++; } wprintf(L"%d a's %d %lc's ", alpha, acute, hmm);
[08:03:02] <candide> dave0: error: converting to execution character set: Invalid argument
[08:03:11] <dave0> what did i do wrong?
[08:03:22] <aphysically> so 𝔥e𝗅𝕝𝚘︴ and 𝗵ｅ𝓵𝔩º_ are the same variables in python
[08:03:50] <aphysically> (yes really)
[08:06:54] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[08:10:06] *** Joins: kuoi (~guoyi@109.175.166.60)
[08:10:38] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:215d:2b7d:c525:1afe)
[08:11:43] <Maxdamantus> Guest23: it's probably not because of Unicode normalisation. It's more likely that your compiler is ignoring all but the first byte in the UTF-8 sequence.
[08:12:38] <Maxdamantus> Guest23: when matching Unicode characters, you should generally just match on UTF-8 sequences, so don't test for individual characters, and instead test if your input starts with a certain sequence (eg, "á")
[08:13:18] *** Quits: kuoi (~guoyi@109.175.166.60) (Remote host closed the connection)
[08:13:24] <fizzie> dave0: That program is missing the usual `setlocale(LC_ALL, "");` but that's probably not what that error was all about; that sounds more like a source character set issue. Getting all that right over IRC sounds a little optimistic.
[08:13:24] <dave0> not wide chars?
[08:13:31] <Maxdamantus> Wide chars are evil.
[08:13:36] <aphysically> n.b. you don't want to match an actual unicode character either
[08:13:48] <aphysically> (since those don't correspond to the graphemes)
[08:13:52] <aphysically> (normalization or not)
[08:14:27] <Maxdamantus> note that the first UTF-8 byte in "á" is 0xc3, so I suspect 'á' is being interpreted as '\xc3\xa1', aka '\xc3'
[08:14:49] *** Quits: retr0 (~retr0@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Quit: Client closed)
[08:15:14] <Maxdamantus> ,cc printf("%i, %i, %i, %i", 0xc3, '\xc3', '\xc3\xa1', 'á');
[08:15:17] <candide> Maxdamantus: [warning: multi-character character constant [-Wmultichar]] 195, -61, 50081, -31
[08:15:48] <dave0> oops the robot's char's are signed :-p
[08:15:49] <Maxdamantus> Heh, wasn't quite expecting that.
[08:16:19] <Maxdamantus> ,cc printf("%i, %i, %i, %i", 0xc3, (unsigned char)'\xc3', (unsigned char)'\xc3\xa1', (unsigned char)'á');
[08:16:22] <candide> Maxdamantus: [warning: multi-character character constant [-Wmultichar]] 195, 195, 161, 225
[08:16:31] <aphysically> anyway if you implement NFC you can match the byte sequence of the normalized form
[08:16:57] <aphysically> (kind of, you need text segmentation)
[08:16:59] <Maxdamantus> Looks like candide is converting to 8859-1 or CP-252.
[08:17:05] <aphysically> (lmao)
[08:17:16] *** Joins: kuoi (~kuoi@109.175.166.60)
[08:17:20] <dave0> things were so much easier before unicode :-(
[08:17:36] <aphysically> honestly  just use icu
[08:18:21] *** Joins: kish` (~sid742412@user/aqua)
[08:18:34] <aphysically> dave0: ya, I mean at least this question does have a definite correct answer in the context of unicode, even if it's a pita in C
[08:19:52] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[08:20:38] <aphysically> I'm not even sure if the NFC boundaries and grapheme boundaries necessarily coincide :D
[08:20:39] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[08:21:06] <aphysically> not that it matters in this case since you only care about the nfc cluster boundaries
[08:22:26] *** Joins: arinov (~arinov@77.67.130.254)
[08:25:35] *** Parts: aphysically (~aphysical@user/aphysically) ()
[08:27:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:27:50] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:32:03] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[08:33:22] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[08:33:50] *** Joins: m4v (~znc@ubuntu/member/m4v)
[08:35:26] *** Quits: bbju (~bbju@23.237.205.242) (Ping timeout: 256 seconds)
[08:37:30] *** Quits: Guest23 (~Guest23@80.31.188.248) (Quit: Client closed)
[08:38:17] *** Quits: defjam (~eb0t@90.196.140.50) (Ping timeout: 256 seconds)
[08:40:20] *** Joins: defjam (~eb0t@90.197.81.95)
[08:44:34] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 260 seconds)
[08:48:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ff5a:fb87:fc33:be7c) (Quit: Leaving)
[08:54:50] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[08:55:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[08:55:51] *** Quits: arinov (~arinov@77.67.130.254) (Ping timeout: 256 seconds)
[08:55:52] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[08:58:14] *** Quits: malloy (~jimery@116.30.222.115) (Ping timeout: 250 seconds)
[09:00:23] *** Joins: malloy (~jimery@116.30.222.115)
[09:02:05] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:02:05] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[09:04:20] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[09:04:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[09:08:15] *** Joins: crankslider (~slidercra@user/slidercrank)
[09:08:46] *** Quits: charadon (~charadon@155.138.164.183) (Ping timeout: 260 seconds)
[09:13:53] *** Joins: zoidberg9000[m] (~zoidberg9@2001:470:69fc:105::cd59)
[09:13:59] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 256 seconds)
[09:18:07] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[09:18:48] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (*.net *.split)
[09:18:48] *** Quits: HisShadow_ (~HisShadow@user/hisshadow) (*.net *.split)
[09:18:48] *** Quits: arand_ (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (*.net *.split)
[09:18:48] *** Quits: trenka (~ykaliuta@user/trenka) (*.net *.split)
[09:18:48] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[09:18:48] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:18:48] *** Quits: Albright_ (~Albright@149.28.13.173) (*.net *.split)
[09:18:48] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[09:18:48] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[09:18:48] *** Quits: carrar (~tim@osburn.jp) (*.net *.split)
[09:18:48] *** Quits: dmgk (~dmgk@user/dmgk) (*.net *.split)
[09:18:48] *** Quits: Geezabiscuit (~Geezabisc@user/geezabiscuit) (*.net *.split)
[09:18:48] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[09:18:59] *** Joins: Emil (emil@emil.fi)
[09:19:00] *** Joins: trenka (~ykaliuta@89-27-97-175.bb.dnainternet.fi)
[09:19:00] *** Joins: carrar (~tim@osburn.jp)
[09:19:06] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:b2ce:961c:2711:f293)
[09:19:08] *** Quits: trenka (~ykaliuta@89-27-97-175.bb.dnainternet.fi) (Changing host)
[09:19:08] *** Joins: trenka (~ykaliuta@user/trenka)
[09:19:13] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[09:19:17] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[09:19:21] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:19:29] *** Joins: dmgk (~dmgk@user/dmgk)
[09:19:29] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:19:31] *** Joins: flynn (~mcbloch@user/flynn)
[09:19:34] *** Joins: vysn (~vysn@user/vysn)
[09:20:13] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[09:20:14] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[09:20:25] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:21:38] *** Joins: Geezabiscuit (~Geezabisc@user/geezabiscuit)
[09:21:50] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:24:59] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (*.net *.split)
[09:24:59] *** Quits: arminweigl (~arminweig@sourcehut/user/arminweigl) (*.net *.split)
[09:24:59] *** Quits: Celelibi (celelibi@user/celelibi) (*.net *.split)
[09:24:59] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (*.net *.split)
[09:24:59] *** Quits: Beastie (~lcu@user/thebeastie) (*.net *.split)
[09:24:59] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (*.net *.split)
[09:24:59] *** Quits: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d) (*.net *.split)
[09:24:59] *** Quits: dynos01_ (~dynos01@2600:3c01:e000:36a::8400) (*.net *.split)
[09:24:59] *** Quits: xSavitar (~xSavitar@user/xsavitar) (*.net *.split)
[09:24:59] *** Quits: hpyc9 (~yc9@2600:3c03:e000:297:af:af:af:3) (*.net *.split)
[09:24:59] *** Quits: xrj (~av@2a01:4f8:c17:7cba::1) (*.net *.split)
[09:24:59] *** Quits: towel (~towel@user/towel) (*.net *.split)
[09:24:59] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[09:24:59] *** Quits: les (znc@user/les) (*.net *.split)
[09:24:59] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:24:59] *** Quits: fakenullie (~nullie@london.nullie.name) (*.net *.split)
[09:24:59] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:25:00] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (*.net *.split)
[09:25:00] *** Quits: buzel (~buzel@fsf/member/buzel) (*.net *.split)
[09:25:00] *** Quits: andi_ (~andi@user/andi/x-3467420) (*.net *.split)
[09:25:00] *** Quits: Ragnor (~Ragnor@user/ragnor) (*.net *.split)
[09:25:00] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:25:00] *** Quits: dcx (~dcx@user/dac) (*.net *.split)
[09:25:00] *** Quits: mcinglis (~mcinglis@user/mcinglis) (*.net *.split)
[09:25:00] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[09:25:00] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[09:25:00] *** Quits: vt (~vt@osa.vbc.su) (*.net *.split)
[09:25:00] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[09:25:00] *** Quits: SpringSprocket (~srv@hobby.esselfe.ca) (*.net *.split)
[09:25:00] *** Quits: PaulePanter (~paul@mail.gw90.de) (*.net *.split)
[09:25:00] *** Quits: avrdude (~avrdude@user/avrdude) (*.net *.split)
[09:25:00] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[09:25:00] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[09:25:00] *** Quits: caze (~caze@user/caze) (*.net *.split)
[09:25:00] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[09:25:00] *** Quits: Ryozuki (~Ryozuki@user/ryozuki) (*.net *.split)
[09:25:00] *** Quits: ElementW (~tungsten@hoodie.elementw.net) (*.net *.split)
[09:25:00] *** Quits: gig (~gig@2a01:4f8:141:4424::2) (*.net *.split)
[09:25:00] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:25:00] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[09:25:00] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[09:25:00] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[09:25:00] *** Quits: petererer (~petern@2001:8b0:65dd:8ef1:37be:e06:fb80:4ba2) (*.net *.split)
[09:25:00] *** Quits: poprocks (~logan@user/poprocks) (*.net *.split)
[09:25:00] *** Quits: veltas (~veltas@104.236.34.215) (*.net *.split)
[09:25:00] *** Quits: jonsykkle (~jonik@zzz.st) (*.net *.split)
[09:25:00] *** Quits: sebito91 (~sborza@45.55.74.66) (*.net *.split)
[09:25:00] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[09:25:00] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:25:00] *** Quits: gnomesort (~gnomesort@user/gnomesort) (*.net *.split)
[09:25:00] *** Quits: ReimuHakurei (~Reimu@216.126.195.252) (*.net *.split)
[09:25:00] *** Quits: hecanjog (~hecanjog@2a01:4f9:6a:5326::2) (*.net *.split)
[09:25:00] *** Quits: daurnimator (~daurnimat@vultr.daurnimator.com) (*.net *.split)
[09:25:00] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[09:25:08] *** Joins: vt (~vt@osa.vbc.su)
[09:25:09] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[09:25:10] *** Joins: hpyc9 (~yc9@2600:3c03:e000:297:af:af:af:3)
[09:25:12] *** Joins: poprocks (~logan@bras-base-toroon1016w-grc-32-76-64-53-16.dsl.bell.ca)
[09:25:12] *** Joins: livestradamus (~quassel@2a01:4f8:1c1c:3189::1)
[09:25:14] *** Joins: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de)
[09:25:15] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[09:25:15] *** Joins: andi_ (~andi@2a01:4f8:c0c:a014::2)
[09:25:16] *** Quits: livestradamus (~quassel@2a01:4f8:1c1c:3189::1) (Changing host)
[09:25:16] *** Joins: livestradamus (~quassel@user/livestradamus)
[09:25:16] *** Joins: gig (~gig@2a01:4f8:141:4424::2)
[09:25:17] *** Joins: Ryozuki (~Ryozuki@edgarluque.com)
[09:25:19] *** Joins: fcresende (~quassel@vps35015.publiccloud.com.br)
[09:25:19] *** Joins: veltas (~veltas@104.236.34.215)
[09:25:21] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[09:25:21] *** Joins: hecanjog (~hecanjog@2a01:4f9:6a:5326::2)
[09:25:22] *** Joins: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi)
[09:25:26] *** Quits: Ragnor (~Ragnor@dslb-084-062-055-138.084.062.pools.vodafone-ip.de) (Changing host)
[09:25:26] *** Joins: Ragnor (~Ragnor@user/ragnor)
[09:25:28] *** Joins: baloona (~baloona@mail.baloona.de)
[09:25:29] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[09:25:29] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[09:25:32] *** Joins: alvarezp (quassel@2600:3c01::f03c:91ff:fee5:6d8d)
[09:25:32] *** Joins: les (znc@user/les)
[09:25:32] *** Joins: buzel (~buzel@fsf/member/buzel)
[09:25:35] *** Joins: nisstyre (~wes@li798-187.members.linode.com)
[09:25:36] *** Joins: sebito91 (~sborza@45.55.74.66)
[09:25:39] *** Joins: ElementW (~tungsten@hoodie.elementw.net)
[09:25:39] *** Joins: daurnimator (~daurnimat@vultr.daurnimator.com)
[09:25:43] *** Quits: andi_ (~andi@2a01:4f8:c0c:a014::2) (Changing host)
[09:25:43] *** Joins: andi_ (~andi@user/andi/x-3467420)
[09:25:46] *** Joins: vancz (~vancz@user/vancz)
[09:25:47] *** Quits: Beastie (~lcu@dkv8mfyycfr3s--xk0pzt-3.rev.dnainternet.fi) (Changing host)
[09:25:47] *** Joins: Beastie (~lcu@user/thebeastie)
[09:25:55] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:26:03] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[09:26:11] *** Quits: Ryozuki (~Ryozuki@edgarluque.com) (Changing host)
[09:26:11] *** Joins: Ryozuki (~Ryozuki@user/ryozuki)
[09:26:15] *** Joins: jonsykkel (~jonik@zzz.st)
[09:26:27] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[09:26:37] *** Joins: arminweigl (~arminweig@sourcehut/user/arminweigl)
[09:26:39] *** Joins: dynos01 (~dynos01@li820-149.members.linode.com)
[09:26:42] *** Joins: hexology (~hexology@user/hexology)
[09:26:50] *** Joins: fakenullie (~nullie@london.nullie.name)
[09:26:53] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[09:26:54] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[09:26:56] *** Joins: dcx (~dcx@user/dac)
[09:27:03] *** Joins: caze (~caze@user/caze)
[09:27:05] *** Joins: leosilva (~leosilva@canonical/leosilva)
[09:27:05] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[09:27:36] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[09:27:49] *** Joins: DCTWD (~dc@uz.utmappro.com)
[09:28:08] *** Joins: towel (~towel@user/towel)
[09:29:22] *** Joins: Celelibi (celelibi@user/celelibi)
[09:30:17] *** Joins: bparker (~nobody@user/bparker)
[09:30:17] *** Joins: petererer (~petern@2001:8b0:65dd:8ef1:37be:e06:fb80:4ba2)
[09:30:21] *** Joins: PaulePanter (~paul@mail.gw90.de)
[09:30:22] *** Joins: avrdude (~avrdude@user/avrdude)
[09:31:17] *** Joins: alip (~alip@exherbo/developer/alip)
[09:31:17] *** Joins: xSavitar (~xSavitar@kinserve.com)
[09:31:40] *** xSavitar is now known as Guest9640
[09:35:52] *** Joins: noord (~noord@user/noord)
[09:36:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:37:42] *** Joins: Wulf (~Wulf@user/wulf)
[09:39:05] *** Joins: Ekho (~Ekho@user/ekho)
[09:45:06] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 244 seconds)
[09:45:06] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 244 seconds)
[09:45:21] *** Joins: e36freak (~e36freak@user/e36freak)
[09:46:15] *** Quits: poprocks (~logan@bras-base-toroon1016w-grc-32-76-64-53-16.dsl.bell.ca) (Changing host)
[09:46:15] *** Joins: poprocks (~logan@user/poprocks)
[09:46:59] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 268 seconds)
[09:49:54] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:51:36] *** crankslider is now known as slidercrank
[09:51:36] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[09:53:14] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[09:56:19] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[09:58:52] *** Joins: chenqisu1 (~03cia7d@183.217.201.124)
[09:59:01] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[09:59:58] *** Joins: constxd (~brad@142.134.38.68)
[10:00:48] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 260 seconds)
[10:00:59] *** Joins: rgrinberg (~textual@201.192.183.136)
[10:01:03] *** Quits: chenqisu1 (~03cia7d@183.217.201.124) (Client Quit)
[10:01:33] *** Joins: chenqisu1 (~03cia7d@183.217.201.124)
[10:01:35] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 256 seconds)
[10:02:06] *** chenqisu1 is now known as chenqisu12
[10:02:19] *** Quits: chenqisu12 (~03cia7d@183.217.201.124) (Max SendQ exceeded)
[10:04:29] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[10:09:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:09:54] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:10:33] *** Joins: diamondbond (~diamondbo@175.157.232.104)
[10:11:04] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 260 seconds)
[10:12:36] *** Quits: Famine_ (~Famine@user/famine) (Read error: Connection reset by peer)
[10:13:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:15:37] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[10:22:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[10:24:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:25:35] *** Joins: mamehiko (~robbie@140.254.77.249)
[10:25:49] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 268 seconds)
[10:30:04] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:30:16] *** Joins: gproto10 (~gproto23@user/gproto23)
[10:30:38] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:34:44] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[10:35:41] *** Quits: mamehiko (~robbie@140.254.77.249) (Quit: Leaving)
[10:37:57] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[10:39:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:41:14] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:41:37] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[10:41:52] *** Joins: System_Error (~SystemErr@user/systemerror)
[10:42:35] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[10:44:34] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[10:44:36] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[10:45:13] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[10:45:23] *** Joins: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[10:46:58] *** Quits: a2x (~a2x@185.65.135.252) ()
[10:47:15] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 264 seconds)
[10:47:39] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[10:49:31] *** Quits: kurahaupo (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[10:50:02] *** Joins: mrig (~AdiIRC@user/mrig)
[10:51:08] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[10:51:58] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Remote host closed the connection)
[10:52:17] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:2e5d:4d77:81f:a927)
[11:00:26] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:2e5d:4d77:81f:a927) (Remote host closed the connection)
[11:00:45] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[11:05:30] *** Quits: alch (~alch@151.82.146.222) (Read error: Connection reset by peer)
[11:09:30] *** Joins: tinyweasel_ (~weasel@64.112.127.35)
[11:09:40] *** Joins: alch (~alch@bo-18-150-58.service.infuturo.it)
[11:10:03] *** Quits: tinyweasel_ (~weasel@64.112.127.35) (Client Quit)
[11:12:08] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[11:12:27] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 264 seconds)
[11:13:20] *** Joins: rgrinberg (~textual@201.192.183.136)
[11:14:57] *** Joins: zalt_ (~zalt@user/zalt)
[11:15:39] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[11:17:31] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 256 seconds)
[11:17:51] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 245 seconds)
[11:21:25] *** Joins: System_Error (~SystemErr@user/systemerror)
[11:24:10] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[11:27:12] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:30:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:30:42] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 260 seconds)
[11:31:13] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Quit: Leaving)
[11:31:31] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[11:31:58] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[11:32:14] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[11:32:27] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[11:33:19] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:3530:cf4b:865c:a355) (Ping timeout: 250 seconds)
[11:33:21] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:33:39] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[11:37:21] *** Quits: rahl (~rahl@102.114.125.200) (Ping timeout: 256 seconds)
[11:39:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[11:39:11] *** Joins: rahl (~rahl@102.114.195.64)
[11:40:39] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[11:41:32] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:44:15] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[11:46:17] *** Joins: bindu (~bindu@user/bindu)
[11:46:59] *** Joins: arinov (~arinov@213.194.126.155)
[11:49:02] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[11:49:33] *** Joins: System_Error (~SystemErr@user/systemerror)
[11:50:14] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[11:52:01] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:e092:c7a5:6d66:7732)
[11:56:32] *** Joins: rgrinberg (~textual@201.192.183.136)
[11:59:44] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.123)
[12:00:30] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[12:00:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[12:00:46] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 245 seconds)
[12:02:50] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:04:18] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[12:04:50] *** Parts: zoidberg9000[m] (~zoidberg9@2001:470:69fc:105::cd59) ()
[12:07:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:07:20] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[12:07:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:09:25] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[12:09:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:12:51] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[12:13:39] *** Joins: Klinda (~superleag@user/klinda)
[12:14:06] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:17:52] *** Joins: shailangsa (~shailangs@host86-186-133-114.range86-186.btcentralplus.com)
[12:19:21] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[12:19:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[12:19:53] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[12:21:34] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Remote host closed the connection)
[12:21:35] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[12:22:41] *** Quits: masticass (~gzc@host-85-201-176-158.dynamic.voo.be) (Ping timeout: 256 seconds)
[12:22:48] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:22:58] *** Quits: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com) (Quit: Leaving)
[12:23:34] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[12:23:45] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:24:24] *** Joins: inomoz (~inomoz@176.59.125.26)
[12:24:50] *** Quits: diamondbond (~diamondbo@175.157.232.104) (Ping timeout: 268 seconds)
[12:30:07] *** Quits: prepro[m] (~prepromat@2001:470:69fc:105::1:68) (Quit: You have been kicked for being idle)
[12:30:41] *** Joins: aradesh (~aradesh@user/aradesh)
[12:34:01] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[12:34:17] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[12:34:23] *** Quits: domve (~dom@user/domve) (Quit: ZNC - https://znc.in)
[12:34:34] *** Joins: domve (~dom@2605:6400:30:f922:1337::)
[12:34:34] *** Quits: domve (~dom@2605:6400:30:f922:1337::) (Changing host)
[12:34:34] *** Joins: domve (~dom@user/domve)
[12:39:18] *** Quits: eau (~chat@user/eau) (Ping timeout: 260 seconds)
[12:40:04] *** Joins: eau (~chat@user/eau)
[12:40:15] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[12:41:02] *** Joins: rgrinberg (~textual@201.192.183.136)
[12:42:14] *** Quits: eau (~chat@user/eau) (Client Quit)
[12:42:29] *** Joins: eau (~chat@user/eau)
[12:45:21] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 245 seconds)
[12:45:22] *** Joins: immibis (~hexchat@62.156.144.218)
[12:46:42] *** Quits: gproto10 (~gproto23@user/gproto23) (Ping timeout: 260 seconds)
[12:52:14] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:56:51] *** Joins: Zenton (~user@user/zenton)
[12:57:40] *** Quits: dmlloyd (sid331705@redhat/dmlloyd) (Ping timeout: 260 seconds)
[12:57:59] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:57:59] *** Quits: schna (sid484866@id-484866.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[12:58:08] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:58:09] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 268 seconds)
[12:58:13] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[12:58:14] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:15] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 250 seconds)
[12:58:27] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:58:27] *** Quits: glenfe (sid231748@user/glenfe) (Ping timeout: 250 seconds)
[12:58:27] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 250 seconds)
[12:58:28] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[12:58:28] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[12:58:34] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 265 seconds)
[12:58:36] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:36] *** Quits: psb_ (sid500598@id-500598.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:58:37] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:58:45] *** Quits: elichai2 (sid212594@id-212594.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:58:56] *** Quits: noahmg123 (sid89117@id-89117.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:58:56] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[12:58:56] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[12:59:02] *** Quits: Bou (sid274843@user/bou) (Ping timeout: 240 seconds)
[12:59:03] *** Quits: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com) (Ping timeout: 265 seconds)
[12:59:03] *** Quits: kaizen (sid501599@id-501599.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:11] *** Quits: agander_m (sid407952@id-407952.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: subvisor (sid502026@id-502026.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:11] *** Quits: kristjansson_ (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 264 seconds)
[12:59:17] *** Quits: illustris (sid211748@id-211748.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[12:59:17] *** Quits: terabit (sid146285@id-146285.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[12:59:17] *** Quits: ikiryo (sid109660@user/ikiryo) (Ping timeout: 246 seconds)
[12:59:19] *** Quits: lhtseng (sid15322@id-15322.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[12:59:20] *** Joins: bindu (~bindu@user/bindu)
[12:59:22] *** Joins: agander_m (sid407952@tinside.irccloud.com)
[12:59:22] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: nohit (sid334887@id-334887.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: englishm (sid6629@id-6629.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:59:22] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Quits: ff9527ff_ (uid527419@id-527419.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[12:59:23] *** Joins: kevinsjoberg (sid499516@lymington.irccloud.com)
[12:59:32] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:59:32] *** Quits: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[12:59:32] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 265 seconds)
[12:59:32] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 265 seconds)
[12:59:36] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:59:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 268 seconds)
[13:00:01] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[13:00:01] *** Quits: glowcoil (sid3405@id-3405.tinside.irccloud.com) (Ping timeout: 265 seconds)
[13:00:01] *** Quits: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com) (Ping timeout: 265 seconds)
[13:00:04] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[13:00:16] *** Joins: glowcoil (sid3405@tinside.irccloud.com)
[13:00:20] *** Joins: TallonRain (sid214799@user/tallonrain)
[13:00:23] *** Joins: nohit (sid334887@tinside.irccloud.com)
[13:00:27] *** Joins: Satin (uid193953@ilkley.irccloud.com)
[13:00:32] *** Joins: schna (sid484866@helmsley.irccloud.com)
[13:00:34] *** Joins: lhtseng (sid15322@helmsley.irccloud.com)
[13:00:34] *** Joins: psb_ (sid500598@ilkley.irccloud.com)
[13:00:36] *** Joins: ff9527ff_ (uid527419@uxbridge.irccloud.com)
[13:00:36] *** Joins: Bodger1234_ (sid503511@uxbridge.irccloud.com)
[13:00:36] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[13:00:40] *** Joins: kristjansson_ (sid126207@tinside.irccloud.com)
[13:00:41] *** Joins: ikiryo (sid109660@user/ikiryo)
[13:00:52] *** Joins: nightstrike (uid487@uxbridge.irccloud.com)
[13:00:53] *** Joins: illustris (sid211748@ilkley.irccloud.com)
[13:01:05] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:01:27] *** Joins: bjs (sid190364@user/bjs)
[13:01:36] *** Joins: buhman (sid411355@user/buhman)
[13:01:40] *** Joins: masoudd (~masoudd@user/masoudd)
[13:01:47] *** Joins: cengiz_io (sid223191@ilkley.irccloud.com)
[13:01:47] *** Joins: englishm (sid6629@tinside.irccloud.com)
[13:01:48] *** Joins: kaizen (sid501599@helmsley.irccloud.com)
[13:01:53] *** Joins: decartes_ (sid240036@helmsley.irccloud.com)
[13:01:56] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[13:02:01] *** Joins: Bou (sid274843@user/bou)
[13:02:24] *** Joins: ullbeking_ (sid5364@ilkley.irccloud.com)
[13:02:47] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[13:02:55] *** Joins: elichai2 (sid212594@hampstead.irccloud.com)
[13:02:58] *** Joins: dreamcat4 (uid157427@hampstead.irccloud.com)
[13:03:13] *** Joins: computerquip (sid423484@user/computerquip)
[13:03:15] *** Joins: Manouchehri (sid384576@hampstead.irccloud.com)
[13:03:17] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[13:03:17] *** Joins: bbju (~bbju@23.237.205.242)
[13:03:23] *** Joins: wangledorf (sid505185@ilkley.irccloud.com)
[13:03:27] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[13:03:28] *** Joins: noahmg123 (sid89117@ilkley.irccloud.com)
[13:03:29] *** Joins: greyblue9 (sid500829@ilkley.irccloud.com)
[13:03:34] *** Joins: SrPx (sid108780@uxbridge.irccloud.com)
[13:03:37] *** Joins: leonardus (sid358597@tinside.irccloud.com)
[13:03:49] *** Joins: terabit (sid146285@uxbridge.irccloud.com)
[13:04:28] *** Joins: IUSR (sid348938@hampstead.irccloud.com)
[13:04:30] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[13:04:41] *** Joins: glenfe (sid231748@user/glenfe)
[13:04:45] *** Joins: subvisor (sid502026@helmsley.irccloud.com)
[13:04:47] *** Joins: BlueShark (sid10311@user/blueshark)
[13:04:47] *** Joins: Pent (sid313808@lymington.irccloud.com)
[13:04:56] *** Quits: bbju (~bbju@23.237.205.242) (Client Quit)
[13:05:06] *** Joins: sa (sid1055@tinside.irccloud.com)
[13:05:08] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[13:05:28] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[13:05:31] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[13:05:46] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 245 seconds)
[13:07:46] *** Quits: BlueShark (sid10311@user/blueshark) (Max SendQ exceeded)
[13:07:54] *** Quits: Pent (sid313808@lymington.irccloud.com) (Max SendQ exceeded)
[13:07:55] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Max SendQ exceeded)
[13:07:58] *** Joins: BlueShark (sid10311@user/blueshark)
[13:08:02] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Ping timeout: 240 seconds)
[13:08:02] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 240 seconds)
[13:08:05] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[13:08:37] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[13:08:41] *** Quits: nightstrike (uid487@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[13:08:48] *** Quits: nullptr| (~nullptr@user/nullptr/x-2182142) (Quit: ZNC - http://znc.in)
[13:08:49] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:08:55] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[13:09:02] *** Quits: Bou (sid274843@user/bou) (Ping timeout: 240 seconds)
[13:09:12] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[13:09:12] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[13:09:32] *** Quits: ikiryo (sid109660@user/ikiryo) (Ping timeout: 240 seconds)
[13:09:48] *** Joins: nullptr| (~nullptr@user/nullptr/x-2182142)
[13:10:59] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[13:11:02] *** Joins: Bou (sid274843@user/bou)
[13:11:17] *** Joins: ikiryo (sid109660@user/ikiryo)
[13:12:05] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[13:12:34] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[13:12:41] *** Joins: dmlloyd (sid331705@redhat/dmlloyd)
[13:13:10] *** Joins: dohtem (uid524096@user/dohtem)
[13:13:10] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[13:13:57] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[13:15:28] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[13:15:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:22:45] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 256 seconds)
[13:24:38] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[13:27:46] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[13:29:31] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[13:30:27] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 264 seconds)
[13:32:13] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[13:37:32] *** Joins: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au)
[13:39:27] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 264 seconds)
[13:39:27] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 264 seconds)
[13:40:21] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 245 seconds)
[13:40:48] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[13:41:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:43:24] *** Joins: Burgundy (~yomon@86.127.194.72)
[13:47:42] *** Joins: rgrinberg (~textual@201.192.183.136)
[13:48:25] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[13:49:30] *** Joins: AmR (~AmREiSa@102.47.62.197)
[13:50:13] *** Joins: teepee (~teepee@openscad/teepee)
[13:51:21] *** Joins: earnestly (~earnest@user/earnestly)
[13:51:53] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:55:55] *** Joins: ko (~i.am@user/marlboro)
[13:58:03] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 264 seconds)
[14:02:05] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[14:03:21] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[14:03:32] *** Joins: useretail_ (~useretail@185.132.19.151)
[14:03:41] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[14:04:50] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[14:20:01] *** Joins: masoudd (~masoudd@user/masoudd)
[14:21:11] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[14:23:12] *** Joins: arinov (~arinov@213.194.126.155)
[14:23:18] *** Quits: inomoz (~inomoz@176.59.125.26) (Read error: Connection reset by peer)
[14:24:30] *** Quits: soul-d (~uknown@user/soul-d) (Remote host closed the connection)
[14:24:37] *** Joins: shivesh (~shivesh@user/shivesh)
[14:25:22] *** Joins: soul-d (~uknown@user/soul-d)
[14:27:00] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[14:28:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[14:29:15] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:29:51] *** Quits: kurahaupo_ (~kurahaupo@pa49-195-32-17.pa.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[14:32:02] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:32:46] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:49] *** Quits: Samian (~s@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[14:34:03] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:34:25] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:35:13] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (Quit: ZNC 1.8.2 - https://znc.in)
[14:35:29] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[14:36:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:37:19] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:37:22] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[14:37:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 264 seconds)
[14:37:46] *** Joins: xqt (~xqt@user/xqt)
[14:39:20] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:41:31] *** Quits: i336 (~i336@121.217.0.210) (Ping timeout: 256 seconds)
[14:41:34] *** Joins: random-nick (~random-ni@87.116.180.220)
[14:41:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:43:18] *** Joins: i336 (~i336@101.175.230.103)
[14:44:31] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.123) (Ping timeout: 245 seconds)
[14:45:50] *** Joins: PortableDave (~portabled@203.221.7.107)
[14:46:36] *** Joins: cursey (~cursey@user/cursey)
[14:47:26] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[14:48:11] *** Joins: teepee (~teepee@openscad/teepee)
[14:50:21] *** Quits: PortableDave (~portabled@203.221.7.107) (Ping timeout: 245 seconds)
[14:50:28] *** Joins: gproto10 (~gproto23@user/gproto23)
[14:53:18] *** Joins: pulse (~pulse@user/pulse)
[14:54:13] *** Joins: seninha (~seninha@user/seninha)
[14:54:21] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:55:53] *** Quits: i336 (~i336@101.175.230.103) (Ping timeout: 250 seconds)
[14:57:33] *** Joins: i336 (~i336@101.163.228.63)
[14:57:54] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[14:59:22] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[15:00:27] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[15:01:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:02:51] *** Quits: Beastie (~lcu@user/thebeastie) (Ping timeout: 245 seconds)
[15:05:32] *** Joins: X-Scale` (~ARM@31.22.202.54)
[15:05:32] *** Quits: alch (~alch@bo-18-150-58.service.infuturo.it) (Read error: Connection reset by peer)
[15:08:16] *** Quits: X-Scale (~ARM@31.22.202.54) (Ping timeout: 268 seconds)
[15:08:21] *** X-Scale` is now known as X-Scale
[15:10:03] *** Joins: Beastie (~lcu@user/thebeastie)
[15:10:03] *** Joins: alch (~alch@pa-18-175-123.service.infuturo.it)
[15:10:29] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:13:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:15:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[15:15:51] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:16:36] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 245 seconds)
[15:17:15] *** Quits: puke (~puke@user/puke) (Quit: puke)
[15:19:36] *** Joins: abip20 (~abdullah@user/abip20)
[15:21:19] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:22:05] *** Joins: csrf (~csrf@user/csrf)
[15:32:06] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[15:32:23] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[15:33:03] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:28] *** Quits: twkm (twkm@rfc1459.net) (Ping timeout: 244 seconds)
[15:37:40] *** Joins: twkm (twkm@rfc1459.net)
[15:39:13] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[15:40:57] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 268 seconds)
[15:41:27] *** Quits: kuoi (~kuoi@109.175.166.60) (Quit: kuoi)
[15:41:55] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[15:43:01] *** Joins: bindu (~bindu@user/bindu)
[15:44:33] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[15:47:46] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[15:49:32] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[15:53:03] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[15:57:56] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:57:57] *** Quits: zalt_ (~zalt@user/zalt) (Read error: Connection reset by peer)
[15:58:20] *** Joins: zalt_ (~zalt@user/zalt)
[15:58:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:59:13] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:00:21] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[16:03:21] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:14:24] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[16:21:25] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[16:26:11] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of dragon tamers at https://indiedevs.net/)
[16:26:46] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:28:16] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 245 seconds)
[16:28:48] *** Joins: pulse (~pulse@user/pulse)
[16:31:32] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[16:32:01] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:33:18] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:33:48] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[16:34:41] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:34:53] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[16:38:58] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[16:40:28] *** Joins: xqt (~xqt@user/xqt)
[16:40:39] *** Joins: pucara (~i@host207.181-14-157.telecom.net.ar)
[16:41:04] *** Joins: rgrinberg (~textual@201.192.183.136)
[16:42:06] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:45:27] *** Joins: constxd (~brad@192.75.101.164)
[16:45:44] *** Quits: rgrinberg (~textual@201.192.183.136) (Ping timeout: 265 seconds)
[16:46:02] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[16:46:06] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:50:15] *** Quits: i336 (~i336@101.163.228.63) (Ping timeout: 264 seconds)
[16:51:30] *** Joins: i336 (~i336@121.217.96.80)
[16:53:51] *** Quits: zalt_ (~zalt@user/zalt) (Ping timeout: 264 seconds)
[17:01:51] *** Joins: zalt_ (~zalt@user/zalt)
[17:02:45] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:e092:c7a5:6d66:7732) (Quit: Leaving)
[17:02:57] *** Quits: V (~v@anomalous.eu) (Remote host closed the connection)
[17:04:15] *** Joins: V (~v@anomalous.eu)
[17:05:55] *** Joins: dutch (~DutchIngr@user/dutch)
[17:08:19] *** Joins: rgrinberg (~textual@201.192.183.136)
[17:10:01] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:11:08] *** Joins: nyah (~nyah@94.6.71.219)
[17:12:17] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[17:12:24] *** Joins: thysermip (~thysermip@201-68-88-9.dsl.telesp.net.br)
[17:12:39] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[17:13:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of pixelated dwarves at https://indiedevs.net/)
[17:16:38] *** Quits: thysermip (~thysermip@201-68-88-9.dsl.telesp.net.br) (Client Quit)
[17:16:48] *** Joins: Macuser (~Macuser@2600:1003:b45c:fe2b:fc63:df63:50f0:5d65)
[17:21:36] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[17:21:36] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[17:23:56] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[17:26:28] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[17:27:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:30:27] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 264 seconds)
[17:30:29] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Reconnecting)
[17:30:37] *** Joins: lleo (~leo@89-200-43-65.mobile.kpn.net)
[17:30:47] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[17:31:18] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[17:33:14] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:35:21] *** Quits: lleo (~leo@89-200-43-65.mobile.kpn.net) (Ping timeout: 245 seconds)
[17:35:27] *** Quits: flynn (~mcbloch@user/flynn) (Quit: Ping timeout (120 seconds))
[17:36:11] *** Joins: flynn (~mcbloch@user/flynn)
[17:40:07] *** Joins: omegatron (~some@p54bd5e02.dip0.t-ipconnect.de)
[17:47:31] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:47:32] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:49:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[17:51:03] *** Quits: i336 (~i336@121.217.96.80) (Ping timeout: 268 seconds)
[17:51:53] *** Joins: aliosablack (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374)
[17:52:09] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:4600:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[17:52:11] *** Joins: strajder (~strajder@user/strajder)
[17:52:20] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:52:33] *** Joins: i336 (~i336@121.216.3.50)
[17:59:13] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[17:59:18] *** Joins: re101-mayfly-80 (~re101-may@2620:132:b042:0:84a7:3e73:80c6:7b09)
[17:59:51] *** Quits: Macuser (~Macuser@2600:1003:b45c:fe2b:fc63:df63:50f0:5d65) (Ping timeout: 264 seconds)
[18:00:32] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[18:00:42] *** Parts: re101-mayfly-80 (~re101-may@2620:132:b042:0:84a7:3e73:80c6:7b09) ()
[18:00:45] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[18:01:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[18:03:16] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:03:16] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Client Quit)
[18:09:15] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Remote host closed the connection)
[18:09:31] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[18:11:15] *** Quits: i336 (~i336@121.216.3.50) (Ping timeout: 264 seconds)
[18:11:41] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[18:13:38] *** Joins: cart_man (~rynot@host-78-144-121-71.as13285.net)
[18:14:05] *** Quits: nisstyre (~wes@li798-187.members.linode.com) (Changing host)
[18:14:05] *** Joins: nisstyre (~wes@user/nisstyre)
[18:14:44] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[18:17:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:17:57] *** Joins: i336 (~i336@121.216.1.251)
[18:19:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80:1d47:7f49:468:ba96)
[18:25:51] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[18:25:57] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[18:28:39] *** Quits: i336 (~i336@121.216.1.251) (Ping timeout: 264 seconds)
[18:29:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:30:11] *** Joins: i336 (~i336@121.217.5.143)
[18:32:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:35:50] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[18:36:07] *** Joins: bindu (~bindu@user/bindu)
[18:37:03] *** Quits: i336 (~i336@121.217.5.143) (Ping timeout: 264 seconds)
[18:37:34] *** Joins: masterbuilder (~user@user/masterbuilder)
[18:38:22] *** Joins: i336 (~i336@121.216.99.131)
[18:42:15] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:43:46] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[18:44:31] *** Quits: i336 (~i336@121.216.99.131) (Ping timeout: 245 seconds)
[18:45:03] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[18:45:47] *** Joins: SpringSprocket (~srv@hobby.esselfe.ca)
[18:51:02] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 240 seconds)
[18:51:34] *** Joins: i336 (~i336@121.217.3.60)
[18:53:40] *** Joins: the_lanetly_052 (~the_lanet@85.132.73.6)
[18:53:42] *** Quits: the_lanetly_052 (~the_lanet@85.132.73.6) (Remote host closed the connection)
[18:53:59] *** Joins: the_lanetly_052 (~the_lanet@85.132.73.6)
[18:54:06] *** Joins: the_lanetly_052_ (~the_lanet@85.132.73.6)
[18:54:25] *** Quits: the_lanetly_052_ (~the_lanet@85.132.73.6) (Client Quit)
[18:54:25] *** Quits: the_lanetly_052 (~the_lanet@85.132.73.6) (Client Quit)
[18:55:01] *** Joins: the_lanetly_052 (~the_lanet@85.132.73.6)
[18:55:25] *** Joins: mixfix41 (~homefame@user/mixfix41)
[18:57:53] *** Joins: learner-monad (~ehanneken@user/learner-monad)
[19:00:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:01:38] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[19:02:20] *** Joins: ntwk (~ntwk@user/ntwk)
[19:03:39] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[19:03:59] *** Joins: cul8r (~cul8r@76.113.95.199)
[19:04:43] *** Quits: learner-monad (~ehanneken@user/learner-monad) (Quit: WeeChat 3.3)
[19:05:35] *** Quits: alch (~alch@pa-18-175-123.service.infuturo.it) (Read error: Connection reset by peer)
[19:05:49] *** Joins: System_Error (~SystemErr@user/systemerror)
[19:06:13] *** Joins: nuh^ (~nuh@68.101.63.101)
[19:07:47] *** Joins: kuoi (~kuoi@109.175.166.59)
[19:10:21] *** Joins: alch (~alch@151.36.94.7)
[19:11:15] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 264 seconds)
[19:17:27] *** Quits: kuoi (~kuoi@109.175.166.59) (Remote host closed the connection)
[19:21:31] *** Joins: learner-monad (~ehanneken@user/learner-monad)
[19:22:19] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[19:23:23] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[19:24:11] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[19:24:41] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:4de:4f83:622a:b4d)
[19:25:27] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[19:34:57] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:35:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:35:43] <mort> is it legal to memcpy from a flat array to a nested array? Like if I have an int[] which contains {1, 2, 3, 4}, can I memcpy that into an int[][2] and have it contain {{1, 2}, {3, 4}}? Or can there be issues with padding or something?
[19:35:54] *** Quits: the_lanetly_052 (~the_lanet@85.132.73.6) (Remote host closed the connection)
[19:38:40] *** Quits: rgrinberg (~textual@201.192.183.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:58] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 268 seconds)
[19:39:23] <floatcomplex> i think it's legal, because it would be legal to read() from disk into the nested array
[19:39:27] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[19:40:27] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:42:54] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Quit: This computer has gone to sleep)
[19:44:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[19:45:30] *** Joins: puke (~puke@user/puke)
[19:46:49] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:48:02] <fizzie> Arrays are contiguous by definition, and don't have padding between elements, so I think that's right. Although you should "derive" the destination pointer for the memcpy from something designating the entire `int[2][2]` object rather than any of the subarrays. So `&dst` rather than `&dst[0][0]` or something.
[19:50:01] <floatcomplex> memcpying two ints into one of the subarrays is explicitly safe though
[19:50:07] *** Quits: zipper (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[19:51:36] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[19:53:41] *** Quits: masterbuilder (~user@user/masterbuilder) (Ping timeout: 245 seconds)
[19:53:50] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[19:53:58] *** Joins: jellie (~luv_panda@user/jellie)
[19:54:27] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 264 seconds)
[19:54:42] *** Quits: rahl (~rahl@102.114.195.64) (Ping timeout: 260 seconds)
[20:01:16] *** Joins: masterbuilder (~user@user/masterbuilder)
[20:01:25] *** Joins: rgrinberg (~textual@201.192.183.136)
[20:07:00] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:11:11] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 245 seconds)
[20:15:07] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:15:21] *** Quits: i336 (~i336@121.217.3.60) (Ping timeout: 245 seconds)
[20:16:01] *** Joins: i336 (~i336@101.174.76.244)
[20:17:20] *** Quits: abip20 (~abdullah@user/abip20) (Quit: Konversation terminated!)
[20:21:55] *** Joins: mahmutov_ (~mahmutov@37.155.24.83)
[20:22:26] *** Quits: i336 (~i336@101.174.76.244) (Ping timeout: 245 seconds)
[20:24:11] *** Joins: i336 (~i336@101.174.93.48)
[20:24:22] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[20:24:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[20:24:50] *** Joins: novns (~novns@user/novns)
[20:28:04] *** Joins: wwilly (~wwilly@217.140.99.251)
[20:31:05] *** Joins: juser (~juser@45.158.131.226)
[20:31:11] <juser> qclear
[20:31:12] <juser> clae
[20:31:12] *** Quits: juser (~juser@45.158.131.226) (Client Quit)
[20:33:10] *** Joins: magla (~gelignite@55d4a3e3.access.ecotel.net)
[20:33:55] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[20:34:44] *** Joins: superboot (~agentgasm@user/superboot)
[20:39:36] *** Joins: superdupond (~Kev@2a01cb0400149f00741fa607e5a4348b.ipv6.abo.wanadoo.fr)
[20:40:29] *** Joins: mmmmm_coffee (~mmmmm_cof@gateway/tor-sasl/mmmmmcoffee/x-81733353)
[20:40:33] *** Quits: mmmmm_coffee (~mmmmm_cof@gateway/tor-sasl/mmmmmcoffee/x-81733353) (Remote host closed the connection)
[20:40:52] *** Joins: mmmmm_coffee (~mmmmm_cof@gateway/tor-sasl/mmmmmcoffee/x-81733353)
[20:41:16] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[20:42:07] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[20:43:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[20:43:14] *** Joins: Enitin (~Enitin@82.102.22.85)
[20:43:14] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[20:44:15] *** Quits: i336 (~i336@101.174.93.48) (Ping timeout: 264 seconds)
[20:45:36] *** Joins: i336 (~i336@101.175.238.36)
[20:51:29] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:52:45] *** Quits: rgrinberg (~textual@201.192.183.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:54:01] *** Joins: rgrinberg (~textual@201.192.183.136)
[20:55:06] *** Joins: Narrat (~omnius@p200300df5f0df13d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:55:09] *** Joins: meator (~meator@user/meator)
[20:55:41] *** Quits: rgrinberg (~textual@201.192.183.136) (Client Quit)
[20:56:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[20:56:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[21:01:11] *** Quits: masterbuilder (~user@user/masterbuilder) (Ping timeout: 245 seconds)
[21:03:41] *** Joins: rahl (~rahl@102.114.230.64)
[21:05:06] *** Quits: i336 (~i336@101.175.238.36) (Ping timeout: 250 seconds)
[21:05:45] *** Joins: i336 (~i336@101.163.131.53)
[21:07:10] *** Joins: sedeki (~textual@user/sedeki)
[21:08:01] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[21:10:46] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[21:13:39] *** Quits: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br) (Client Quit)
[21:15:48] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir)
[21:19:46] *** Joins: seninha (~seninha@user/seninha)
[21:21:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:21:29] <SrPx> Is there any simple/obvious way to implement a concurrent stack? Should I use locks or atomics?
[21:23:54] *** Joins: kdc (~kdc@196.211.197.159)
[21:25:39] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 264 seconds)
[21:26:15] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 264 seconds)
[21:26:19] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[21:28:54] <floatcomplex> concurrent how
[21:29:13] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[21:30:04] <floatcomplex> like N writers, one reader, or something else
[21:30:19] <riv> put a mutex around a normal stack
[21:31:28] <floatcomplex> most of the time when you think you need to use atomics to implement a lock-free thing, you actually don't, because locks can be fast enough for it not to matter, and/or you WANT the blocking behaviour you get with locks
[21:31:38] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[21:31:46] <floatcomplex> but if you need an N writers, one reader lock free stack, it's not terrible
[21:32:34] *** Joins: nvmd (~nvmd@user/nvmd)
[21:33:54] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[21:34:34] *** Quits: i336 (~i336@101.163.131.53) (Ping timeout: 260 seconds)
[21:35:08] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[21:35:16] *** Joins: i336 (~i336@121.217.101.149)
[21:36:05] <floatcomplex> you can't implement atomic pop without solving the ABA problem, but if there's only one reader then you don't need pop, you can do atomic swap-head-with-null and then the writers continue to push to the new (null) head, while the reader can non atomically pop from the old head at its leisure, and then atomic swap head with null again when the old head is null
[21:36:59] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[21:38:57] *** Quits: wwilly (~wwilly@217.140.99.251) (Quit: Leaving)
[21:39:33] *** Quits: mmmmm_coffee (~mmmmm_cof@gateway/tor-sasl/mmmmmcoffee/x-81733353) (Quit: Quit)
[21:41:34] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Client Quit)
[21:41:36] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[21:43:21] *** Joins: pulse (~pulse@user/pulse)
[21:44:47] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f) (Ping timeout: 264 seconds)
[21:45:37] *** Joins: System_Error (~SystemErr@user/systemerror)
[21:47:05] *** Quits: i336 (~i336@121.217.101.149) (Ping timeout: 256 seconds)
[21:47:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f)
[21:47:32] *** Joins: i336 (~i336@101.163.237.138)
[21:51:37] <roxlu> Hi! Is there a popular lib for hash maps, lists, etc? 
[21:51:55] <floatcomplex> you don't need a library for lists
[21:52:00] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[21:52:13] <floatcomplex> any more than you need a library for for loops
[21:52:36] <floatcomplex> for hash maps, idk probably, just don't use glib
[21:53:20] <roxlu> floatcomplex: ok thanks
[21:54:32] <twkm> i tend to prefer bdb.
[21:55:35] <roxlu> do you have a link maybe twkm ? 
[21:56:05] *** Joins: extern (~archer@213.137.73.76)
[21:56:25] *** Joins: charadon (~charadon@155.138.164.183)
[21:57:01] *** Quits: i336 (~i336@101.163.237.138) (Ping timeout: 245 seconds)
[21:57:46] *** Joins: i336 (~i336@101.163.236.67)
[21:59:36] <nomagno> A hash map is fairly easy to implement
[21:59:51] <nomagno> You figure out any way at all of getting a unique value from a unique value, and if the second unique value is bigger than the array, you do a modulus
[22:01:06] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a1ca:c9d6:7edc:f8dc)
[22:01:07] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a1ca:c9d6:7edc:f8dc) (Changing host)
[22:01:07] *** Joins: skapata (~Skapata@user/skapata)
[22:01:48] <floatcomplex> i'd hesitate to throw hash maps in with linked lists as being too-simple-to-librarify because i don't want to dilute the latter point
[22:01:55] <roxlu> yeah I've implemented a hash map yesterday using linear probing; was surpised by how simple it can be
[22:03:30] *** Joins: masterbuilder (~user@user/masterbuilder)
[22:03:43] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:215d:2b7d:c525:1afe) (Quit: simon323)
[22:06:11] *** Quits: i336 (~i336@101.163.236.67) (Ping timeout: 245 seconds)
[22:06:59] *** Joins: i336 (~i336@101.175.23.176)
[22:07:31] *** Quits: daex (~daex@user/daex) (Quit: /me 's znc kicks the bucket)
[22:07:36] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[22:10:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:12:46] *** Quits: jscottb (~jscottb@cpe-173-92-212-35.carolina.res.rr.com) (Remote host closed the connection)
[22:12:53] *** Joins: jscottb (~jscottb@cpe-173-92-212-35.carolina.res.rr.com)
[22:13:10] *** Joins: tiotags (~tiotags@user/tiotags)
[22:14:50] * pragma- pats rb trees.
[22:19:00] *** Joins: reset (~reset@user/reset)
[22:19:00] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Quit: I am like MacArthur; I shall return.)
[22:19:32] *** Joins: rgrinberg (~textual@201.192.183.136)
[22:21:05] *** Joins: Akuli (~Akuli@87-94-109-85.bb.dnainternet.fi)
[22:21:37] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[22:22:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[22:23:47] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[22:25:31] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[22:25:45] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:28:41] *** Quits: i336 (~i336@101.175.23.176) (Ping timeout: 245 seconds)
[22:28:57] *** Joins: strajder (~strajder@user/strajder)
[22:29:25] *** Joins: i336 (~i336@121.216.100.101)
[22:29:49] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Remote host closed the connection)
[22:29:52] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 265 seconds)
[22:30:04] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[22:35:32] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:35:47] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:36:30] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[22:37:12] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 268 seconds)
[22:37:30] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:38:12] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[22:40:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:40:55] *** Joins: mrig (~mrig@user/mrig)
[22:40:57] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:41:02] *** Joins: BSaboia (~bsaboia@201-29-126-99.user3p.veloxzone.com.br)
[22:41:22] *** Quits: extern (~archer@213.137.73.76) (Quit: WeeChat 3.3)
[22:43:25] *** Quits: fabs (~fabs@wrls-249-137-11.wrls-client.fas.harvard.edu) (Remote host closed the connection)
[22:43:40] *** Joins: phao (~phao@2804:d45:8e7a:de00:c065:3c08:f729:a40c)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:47:16] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:49:35] *** Quits: lkronnus (~kron@179097066201.provale.com.br) (Read error: Connection reset by peer)
[22:49:59] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:52:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 264 seconds)
[22:52:43] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:54:34] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:56:36] *** Quits: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c) (Ping timeout: 245 seconds)
[22:58:46] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:02:50] *** Joins: chasmo77 (~chas77@71.63.241.168)
[23:02:56] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[23:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:04:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-294d-e5f1-3d4d-2df4.res6.spectrum.com)
[23:05:08] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[23:05:14] *** Quits: nyah (~nyah@94.6.71.219) (Remote host closed the connection)
[23:05:22] *** Quits: alch (~alch@151.36.94.7) (Read error: Connection reset by peer)
[23:07:15] *** Joins: nyah (~nyah@94.6.71.219)
[23:09:40] *** Joins: alch (~alch@151.38.57.114)
[23:11:33] *** Joins: damxsa (~damx@2001:16a2:ccb7:600:d7e:3b00:4a2c:ff3c)
[23:11:34] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[23:13:16] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[23:22:01] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[23:22:01] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[23:22:01] *** Quits: citrons (~citrons@alt.mondecitronne.com) (*.net *.split)
[23:22:10] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[23:22:38] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[23:23:19] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:25:36] *** Joins: teepee (~teepee@openscad/teepee)
[23:27:21] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[23:27:44] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[23:29:56] *** Quits: mahmutov_ (~mahmutov@37.155.24.83) (Ping timeout: 245 seconds)
[23:30:18] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:34:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:37:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:37:37] *** Quits: makersmasher (~makersmas@2600:6c40:5b00:158d:62a4:4cff:feb5:d54a) (Ping timeout: 268 seconds)
[23:44:31] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:7c91:44d1:d585:8ea8)
[23:45:09] *** Joins: nbits (~nbits@177.68.185.129)
[23:45:18] *** Quits: nbits (~nbits@177.68.185.129) (Changing host)
[23:45:18] *** Joins: nbits (~nbits@user/nbits)
[23:45:27] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:4de:4f83:622a:b4d) (Ping timeout: 264 seconds)
[23:46:22] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[23:46:40] *** Joins: Klinda (~superleag@user/klinda)
[23:47:39] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:53:28] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:54:22] *** Joins: mahmutov (~mahmutov@37.155.24.83)
[23:55:04] *** Quits: nbits (~nbits@user/nbits) (Quit: Leaving)
[23:58:13] *** Quits: gproto10 (~gproto23@user/gproto23) (Remote host closed the connection)
