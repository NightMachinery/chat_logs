[00:00:26] <friend> I like the lazy loaders that load low resolution images quickly then replaces them with cached higher resolution images as needed. The only way you really notice is if you scroll faster than the images can cache in the background.
[00:01:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:01:46] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:02:00] <blueagain> friend: For some reason I *thought* you could do this with a picture tag, but I just checked and apparently it's not possible...
[00:02:15] <blueagain> You can just load different images based on resolution etc.
[00:03:09] <ashnur> ... https://ccforward.github.io/progressive-image/index.html
[00:04:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:04:24] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[00:04:44] *** Joins: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net)
[00:05:53] <ashnur> https://developers.google.com/speed/webp/faq?hl=en#does_webp_support_progressive_or_interlaced_display
[00:06:49] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC - https://znc.in)
[00:07:57] <codebam> can I ask a typescript question here?
[00:08:58] <systemfault> You can... but again, without a link to a snippet of code...
[00:09:41] *** Joins: BSaboia (~bsaboia@95.179.154.99)
[00:09:53] *** Joins: varrg (~varrg@h-98-128-128-196.A351.priv.bahnhof.se)
[00:11:52] <ashnur> can't wait for typescript to get where php is today
[00:13:26] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[00:16:15] <systemfault> Widely-used but dying?
[00:16:26] <ashnur> exactly
[00:16:47] <ashnur> can't hope for anything unrealistic, like people to stop using it soon
[00:16:49] <systemfault> Wordpress is PHP's killer app... once better alternatives exist...
[00:17:06] *** Joins: thiras (~thiras@user/thiras)
[00:17:55] <blueagain> ashnur: I don't use TS if that makes you happy. :)
[00:18:08] <blueagain> But I'm probably a small minority
[00:18:20] <codebam> hi does anyone here know how I would do this properly in typescript? (playground url) https://pb.sbehan.ca/JGWr
[00:18:56] <ashnur> blueagain, it does, thank you
[00:19:26] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[00:19:47] <ashnur> .get() // but why
[00:19:52] *** Joins: pavonia (~user@user/siracusa)
[00:20:13] <ashnur> and it's a promise thing too, I skip
[00:21:50] <codebam> ashnur: it's being passed from cloudflare. it's their object storage
[00:21:56] <codebam> or actually, their key value storage
[00:23:59] <ashnur> yeah, put the get in an async function or something
[00:26:30] <systemfault> I love TS personally and I believe that it will eventually displace JavaScript
[00:26:36] <systemfault> But we'll see.
[00:27:00] <systemfault> (JavaScript will always be there... it's just that most web shops are going to use TS)
[00:27:56] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:29:02] *** Joins: summersault (~summersau@179.221.251.36)
[00:30:32] <ashnur> maybe, but then it will die and it will be great
[00:30:47] <ashnur> it's like coffeescript 2.0 just had better host and marketing
[00:31:04] <systemfault> CoffeeScript died because ES6 provided most of it.
[00:31:16] <jaawerth> also because it was a hot mess
[00:31:19] <jaawerth> even compared to typescript
[00:31:21] <jaawerth> or javascript
[00:31:27] <paulcarroty> then dart will destroy ts
[00:31:33] <jaawerth> dart had its chance
[00:31:47] <jaawerth> my pick is the ineffable Something Else
[00:31:50] <systemfault> For TS to die then something that is a lot better needs to be created... or that the TC39 would add native types to the language (unlikely)
[00:32:03] <paulcarroty> flutter is #1 cross platform tech now
[00:32:21] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:32:37] <jaawerth> flutter is the one compelling argument I ever hear for dart but IMO that isn't enough to sell a whole language
[00:33:01] *** Joins: Tang3nt-Man (~Tang3nt-M@138.199.21.54)
[00:33:08] <jaawerth> flutter has kept it alive but is usage actuall growing? I honestly haven't checked in a while
[00:33:13] <systemfault> jaawerth: It happened with Rails for Ruby... I guess
[00:33:37] <jaawerth> true but that is a whole other scale of usage
[00:34:10] <ljharb> coffeescript was dead long before ES6 replaced it
[00:34:11] <jaawerth> but you're right, a killer app sometimes CAN be enough
[00:34:12] <paulcarroty> I'm writing this from flutter app, lol
[00:34:14] <ljharb> ES6 was just the nail in its coffin
[00:34:22] *** Quits: Arisc (~ckmptnml@189-31-251-104.fozit701.dsl.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[00:34:22] *** Joins: realies0 (~realies@user/realies)
[00:34:28] <ljharb> ashnur: coffeescript 2.0 doesn't have any real usage tho
[00:34:54] *** Joins: Flonk8 (~Flonk@vps-zap441517-1.zap-srv.com)
[00:34:56] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[00:35:17] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:35:19] <ljharb> ashnur: check the versions tab on npm - 213k for the latest v2, 1.1 million for v1
[00:35:41] *** Quits: realies (~realies@user/realies) (Read error: Connection reset by peer)
[00:35:41] *** realies0 is now known as realies
[00:35:51] <ashnur> ljharb, sure, that's the difference made by better host and marketing
[00:36:03] <jaawerth> livescript is a better saner coffeescript but it never really toook off
[00:36:11] <ashnur> it's like the netflix and amazon tv shows
[00:36:17] <ashnur> they have their following
[00:36:20] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 272 seconds)
[00:36:21] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Ping timeout: 256 seconds)
[00:36:43] <ljharb> ashnur: nah, it's because coffeescript 2 isn't any better than v1
[00:36:57] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[00:36:58] <ashnur> i think you misunderstood 2.0 there
[00:37:00] <ljharb> ashnur: and, it's because launching a similar v2 of a dead project is pointless
[00:37:03] <ashnur> it wasn't a semver reference
[00:37:10] <jaawerth> ashnur: typescript also aims to solve different problems/useecases than coffeescript (or livescript, for that matter) so I only find them comparable in that they're compile-to-js languages with relatively little runtime overhead
[00:37:16] <ljharb> ashnur: oh, what was it a reference to
[00:37:28] *** Flonk8 is now known as Flonk
[00:37:35] <ashnur> it was like web 2.0
[00:37:48] <jaawerth> coffeescript was more about expressiveness, typescript is more about correctness
[00:37:54] <ashnur> lol
[00:38:02] <jaawerth> or.. what's a better way to say correctness
[00:38:05] <ashnur> both are about developer ease and comfort
[00:38:14] *** Quits: Guest7598 (~blahboyba@c-67-161-96-129.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[00:38:24] *** Quits: N4buc0- (~N4buc0@2804:7f4:348b:7576:c380:89de:1f93:65fd) (Remote host closed the connection)
[00:38:25] *** Joins: N4buc0 (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br)
[00:38:25] <jaawerth> two entirely different dimensions thereof, on two entirely different timescales
[00:38:27] <ljharb> jaawerth: soundness is an explicit non-goal of TS, so, no :-p
[00:38:32] <ashnur> it's just that coffeescript only got like 10% of that, typescript with vscode and lsps around got to above 90%
[00:38:39] <jaawerth> ljharb: I very purposefully did not say soundness
[00:38:50] <ljharb> jaawerth: correctness is the same thing tho imo
[00:38:50] *** Quits: D4mned (~D1mned@212.101.251.207) (Read error: Connection reset by peer)
[00:38:57] <ljharb> TS is quite incorrect, often
[00:39:01] <blueagain> the more I look at web components, the more I hate them.
[00:39:07] <ashnur> yes
[00:39:07] <ljharb> to their credit, they do fix some of those things over time
[00:39:11] <ljharb> blueagain: yes, they're terrible
[00:39:12] <blueagain> it's like someone deliberately tried to break a spec.
[00:39:30] *** Quits: N4buc0 (~N4buc0@189.26.49.16.dynamic.adsl.gvt.net.br) (Remote host closed the connection)
[00:39:48] <ashnur> the only good thing about webcomponents is that unlike typescript, haven't met a good person who liked them
[00:39:56] <jaawerth> ljharb: I mean, you may disagree on the basis of it being unsound (and I have the same problem with it) but do you disagree that it's attempting to instill more correctness? like, I feel like that's a given since it's the tradeoff for the slower code iteration
[00:40:21] <ljharb> jaawerth: sure, but i guess it's that "correctness" is seen as a very subjective thing
[00:40:26] <ashnur> lol slower code iteration
[00:40:32] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[00:40:33] <ljharb> i consider it objective, but the core team doesn't, which i guess makes it subjective
[00:40:34] *** Joins: D4mned (~D1mned@212.101.251.49)
[00:40:41] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[00:40:43] <jaawerth> in theory you might be buying faster dev time in the longrun by helping your editor tooling and linting (at least that's the case it makes, though I'm still skeptical), whereas coffeescript is about expressiveness while iterating quickly
[00:41:10] <jaawerth> they're entirely different dimensions of alternate js
[00:41:15] <jaawerth> and both somehow don't bother with macros ;_
[00:41:18] <jaawerth> ;_;
[00:41:34] <ashnur> forget coffeescript, all i wanted to say that both miss the point that making developers work easy is not a great idae
[00:41:36] <ashnur> idea*
[00:41:42] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:41:50] <blueagain> and *every* framework which builds on web components sucks.
[00:42:06] <systemfault> For now...  maybe that eventually, we'll get a good one
[00:42:15] <blueagain> I've been through each one of the mentioned ones on mdn.
[00:42:18] <blueagain> they all suck.
[00:42:21] <systemfault> The WebComponent APIs are disgusting...
[00:42:25] <jaawerth> ashnur: lol "lol slower code iteration" people struggle with their typedefs all the time. again, the value proposition TS makes is that you'll make it back in the long run, but I think this is debatable
[00:42:27] <ashnur> there isn't such a thing as a good framework, the idea is an oxymoron
[00:42:52] <ashnur> jaawerth, sorry, I meant to say there that there is no code iteration at all, people rather rewrite it hundred times
[00:43:00] <ashnur> as in copy paste, change a bit
[00:43:01] <jaawerth> ohhh
[00:43:16] <jaawerth> I was gonna say I didn't think that part was controversial at all, whether you like TS or not
[00:43:25] <jaawerth> the question is whether you make it back in the long run
[00:43:30] <ashnur> you could do iteration but it doesn't fit the ecosystem
[00:43:41] <ashnur> it's more of a functional thing to refactor a lot
[00:44:15] *** Joins: linearbit (~linearbit@p200300d6ef1205001ea4265892f9eb6c.dip0.t-ipconnect.de)
[00:44:38] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:44:51] <linearbit> Is there a way to get the offset from the top or bottom of the bounding box of a span to the baseline (where the underline would be)?
[00:46:21] <ljharb> ashnur: it's a good idea if it incentivizes good outcomes
[00:46:50] <ashnur> yes, if you define good to include whatever, then whatever is good. but let's not argue semantics :)
[00:47:35] *** Quits: varrg (~varrg@h-98-128-128-196.A351.priv.bahnhof.se) (Quit: Leaving)
[00:47:48] <ashnur> !xy @ linearbit
[00:47:48] <jellobot> linearbit, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[00:48:30] <linearbit> ashnur, I'm trying to precisely place text on a canvas
[00:48:43] <linearbit> It's easy to do with the TextMetrics API if I draw it directly
[00:48:49] <ashnur> i was hoping for anything but text rendering
[00:48:53] <linearbit> but I'd like to replace them with spans
[00:49:08] *** Parts: ordos (~ordos@user/ordos) (Leaving)
[00:49:34] <ashnur> I usually rely on the underlying system, like if I want to position something with the text, I put it inline with it and set it to position relative and then go from there
[00:49:49] <ashnur> but to match it with canvas, that's sophisticated :D
[00:50:27] <linearbit> If I knew the location of the baseline relative to the bounding box it would be easy
[00:50:35] <ashnur> but it depends on your text
[00:50:43] <ashnur> and how that text is being rendered
[00:51:08] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:51:10] <ashnur> you can trick it, if you set it to something you can calculate, but a different implementation might behave differently
[00:51:23] <linearbit> Basically I have the actualBoundingBoxAscent, actualBoundingBoxDescent and the bounding client rect
[00:51:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:51:43] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:52:01] <ashnur> render lots of text and measure it? :D
[00:52:07] <linearbit> now if I could either calculate the location of the baseline or somehow ensure the baseline is in the middle of the bounding box I could calculate the space between the ascenders/descenders and the top/bottom
[00:52:40] *** Joins: crashrep (~crashrep@user/crashrep)
[00:53:34] <ashnur> you could position your text not on the baseline and then go from there?
[00:54:00] <linearbit> ashnur, which attribute could I use for that?
[00:55:24] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:56:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:56:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:56:30] *** Joins: wroathe (~wroathe@user/wroathe)
[00:57:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:59:20] *** Joins: onosendi (~onosendi@user/onosendi)
[01:00:14] *** Joins: audio (~audio@user/audio)
[01:00:35] *** Quits: seed0 (~seed0@user/seed0) (Ping timeout: 250 seconds)
[01:01:30] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[01:01:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:02:51] <codebam> would anyone be able to help me with this? https://pb.sbehan.ca/Ykz5 I'm trying to flatten an object using a type check to sort items
[01:04:27] <codebam> https://pb.sbehan.ca/XQxH
[01:05:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:06:01] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[01:07:21] *** Joins: ChmEarl (~chmearl@user/chmearl)
[01:07:48] <austincheney> codebam, what is your absolutely end goal?  For example, why do you want to flatten that object?
[01:08:19] <austincheney> I ask because this approach to automation looks unnecessary and excessively clever both of which are bad
[01:08:58] *** Quits: BSaboia (~bsaboia@95.179.154.99) (Quit: ZNC - https://znc.in)
[01:09:31] <codebam> austincheney: if I don't sort them before I pass them I have to type check every function
[01:09:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:10:13] <codebam> cloudflare passes me an env that contains both Record<string, KV> and Record<string, string>
[01:10:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:10:59] <austincheney> codebam, if you are using TypeScript all of your functions should be explicitly typed
[01:11:05] *** Joins: summersault (~summersau@179.221.251.36)
[01:11:32] <blueagain> codebam: that export is really hard to read, at least to me. I think it's overly complicated even if I factor out the TS part I don't know
[01:11:39] <codebam> yes but if I pass an EnvKey to my handler I have to check the type before calling .get() or .put() or passing to a string only function
[01:12:26] <austincheney> why not just for your type: [string, string | KV]
[01:12:50] <codebam> I'd have to type check that because you can't call .get() on a string | KV
[01:13:03] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:13:03] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[01:13:25] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:13:31] <austincheney> codebam, correct, but it sounds like you have to do that anyways because its supplied to you like that by an external third party
[01:13:57] <codebam> that's what I'm trying to do, I'm trying to type check and sort it into either KV or string
[01:14:30] <codebam> https://pb.sbehan.ca/FdPp
[01:14:48] <codebam> I sorted it but how do I flatten this object I got?
[01:15:00] <codebam> into [string, KV]
[01:15:16] <codebam> or I mean, [string[], KV[]]
[01:15:25] <codebam> or no
[01:15:32] <codebam> [Record<string, string>, Record<string, KV>]
[01:16:04] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[01:16:47] *** Joins: wroathe (~wroathe@user/wroathe)
[01:17:54] <austincheney> codebam, I really believe you are over thinking this.  My suggestion is to take a pause for the moment and stop using generics.  Instead use literal types without any kind of extension.  If that works better then great and if not go back to using generics
[01:18:34] *** Joins: crashrep (~crashrep@user/crashrep)
[01:19:08] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[01:19:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:20:09] <codebam> I cant unless I just don't type it at all
[01:20:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:21:11] <systemfault> codebam: Looking
[01:21:31] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[01:21:32] <Alexendoo> How many KVs/secrets do you have that you really need to process them dynamically like that?
[01:21:53] <codebam> how do I convert [str, key] to {str: key} ?
[01:21:55] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:65dc:ab5d:8da2:d8b4)
[01:22:09] <codebam> uh that's not a key but you get what I mean
[01:22:17] <systemfault> Object.fromEntries
[01:22:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[01:22:36] <codebam> it says I can't call it on [string, EnvKey]
[01:23:08] <Alexendoo> You can just specify the keys of the things you'll use in the Env type rather than making it a record
[01:23:47] *** Joins: crashrep (~crashrep@user/crashrep)
[01:24:07] <codebam> I know this is overkill, but I think it could be useful
[01:24:13] <systemfault> Your expected return type doesn't make much sense to me... you're losing the keys?
[01:24:32] <codebam> I'm calling it inside .map
[01:24:52] <codebam> calling Object.entries(env).map(
[01:25:00] <ljharb> codebam: ignore TS's complaining. does it actually work?
[01:25:06] <ljharb> codebam: TS's types for builtins are often not very helpful
[01:25:08] <codebam> yeah it works without the types
[01:25:12] <ljharb> ok, then, TS is wrong
[01:25:24] <ljharb> `Object.entries()` output often has to be manually casted into a tuple type
[01:25:51] <ljharb> so do `(Object.entries(obj) as [K, V][]).map` or whatever
[01:25:59] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:27:33] <codebam> it's letting me map over it that's not the problem, I just can't call fromEntries on it
[01:27:46] <codebam> https://pb.sbehan.ca/ePBr
[01:28:49] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:29:58] <ljharb> codebam: why would you call Object.fromEntries with "not an object"
[01:29:59] <systemfault> Object.fromEntries wants an array of entries, not just one
[01:30:18] <ljharb> oh right
[01:30:19] <systemfault> Object.fromEntries(key) vs Object.fromEntries([key])
[01:30:24] <ljharb> codebam: change it to `Object.fromEntries([key])` and it works
[01:30:34] <ljharb> but that's really weird
[01:30:43] <codebam> oh cool thank you
[01:32:02] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:32:04] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 272 seconds)
[01:32:23] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[01:33:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[01:34:02] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[01:34:10] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:34:11] <jaawerth> ljharb: what is the rationale for needing to cast the output of Object.entries()? it's.. pretty well-defined, no?
[01:34:36] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[01:35:03] <jaawerth> if you know offhand anyway. I am probably asking the wrong person
[01:35:19] <jaawerth> for typescript's perspetive on it, that is
[01:35:44] *** Joins: mikrosis92 (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de)
[01:36:16] <systemfault> w2e3w[]pq;=-2=---.ll/=-3[]]],   ;.'2
[01:36:17] <systemfault> 1[2
[01:36:17] <systemfault> '3
[01:36:23] <mikrosis92> hello :D
[01:36:24] <systemfault> Sorry
[01:36:31] <teresko> cat?
[01:36:36] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:36:37] <systemfault> My daughter says hi...
[01:36:48] <ljharb> jaawerth: the builtin types are generally very poorly written in terms of proxying through key types
[01:36:49] <codebam> lol :)
[01:36:52] <teresko> close enough
[01:36:55] <mikrosis92> I got an input field and a button in React next to each other. Now when the button is pressed the button handler function should get the input element value - how to do this in react?
[01:37:00] <mikrosis92> ref? id? something else?
[01:37:06] <stenno> a new brainfuck dialect
[01:37:09] <stenno> or malbolge
[01:37:13] <ljharb> jaawerth: so like, a `Record<a, b>` passed into `Object.entries` could be `[a, b][]` but is usually `[string, b][]` if anything
[01:37:30] <stenno> (=<`#9]~6ZY327Uv4-QsqpMn&+Ij"'E%e{Ab~w=_:]Kw%o44Uqp0/Q?xNvL:`H%c#DD2^WV>gY;dts76qKJImZkj
[01:37:31] <ljharb> jaawerth: and also you want that to be `[a, b] as const` and not "an array of a or b"
[01:37:35] <stenno> ^ hello world in malbolge
[01:37:48] *** Quits: mikrosis (~mikrosis@dynamic-089-204-138-116.89.204.138.pool.telefonica.de) (Ping timeout: 240 seconds)
[01:38:13] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[01:38:24] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Remote host closed the connection)
[01:38:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[01:39:03] *** Joins: trevors (~trevors@user/trevors)
[01:39:29] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[01:39:31] *** Joins: Anonamy (~Anonamy@node-1w7jr9qu7prr9kps3ciz4iqdz.ipv6.telus.net)
[01:40:42] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:40:42] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:40:42] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:40:44] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:41:14] <jaawerth> ljharb: huh I thought by definition Object.entries cast the key to a string, same as for..in
[01:41:40] <jaawerth> or Object.keys, for that matter
[01:41:54] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:41:54] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:41:54] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:41:55] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:41:57] <ljharb> jaawerth: it could be a string or a symbol, sure
[01:42:00] <austincheney> jaawerth, with objects all keys are strings.  If would like keys that are other types use a map
[01:42:02] <ljharb> jaawerth: but that's the whole point of Record
[01:42:17] <ljharb> jaawerth: it carries a key type, on an object literal, so clearly you *want* that key type to be kept in the entries
[01:42:19] <ljharb> austincheney: or symbols.
[01:42:27] <jaawerth> n> Object.entries([['a']]) @austincheney
[01:42:28] <jellobot> austincheney, [ [ '0', [ 'a' ] ] ]
[01:42:43] <ljharb> n> Object.entries({ [Symbol()]: true })
[01:42:44] <jellobot> (okay) []
[01:42:52] <ljharb> oh right
[01:43:03] <ljharb> ok so Object.keys/entries/values is always just the strings, yeah
[01:43:06] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:43:07] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:43:07] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:43:08] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:43:17] <codebam> .reduce((prev, cur) => [[...prev[0], cur.string], [...prev[1], cur.kv]], [[], []])
[01:43:20] <codebam> why doesn't this work
[01:43:23] <ljharb> but i make nominal string types all the time, and i want those preserved, but TS drops them
[01:43:29] <ljharb> codebam: because it's confusing. what is it trying to do?
[01:43:58] <codebam> I'm trying to split it into [Record<string, string>, Record<string, KV>]
[01:44:16] <codebam> or I mean
[01:44:17] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:44:17] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:44:17] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:44:18] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:44:34] <codebam> [Record<string, string>[], Record<string, KV>[]] ?
[01:44:38] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[01:44:39] <codebam> I'm so confused
[01:44:59] <austincheney> codebam, the only confusing thing here is why you believe you MUST do it that way
[01:45:14] <codebam> there's no other way unless I just don't type it
[01:45:25] <austincheney> codebam, I disagree
[01:45:26] <codebam> or if I manually type every secret and kv
[01:45:28] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:45:28] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:45:28] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:45:29] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:45:33] <Alexendoo> Yes manually type them
[01:45:34] <ljharb> codebam: make a codesandbox
[01:45:38] <Alexendoo> There's like a handful
[01:45:39] <ljharb> codebam: not a TS playground. actual JS
[01:45:44] <codebam> okay
[01:46:32] *** Quits: remote (~self@user/hackers) (Ping timeout: 250 seconds)
[01:46:40] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:46:41] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:46:41] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:46:42] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:46:43] <austincheney> codebam, I have a foster kid that frequently says the same thing: "It MUST be done this way, but it doesn't work."  The response is always the same: "Then don't do it that way."
[01:47:25] *** Joins: remote (~self@user/hackers)
[01:47:28] <Alexendoo> You wouldn't sort them like this in JS into two buckets, you'd just use them directly, so do the same in TS
[01:47:51] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:47:51] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:47:51] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:47:52] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:49:03] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:49:03] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:49:03] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:49:04] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:50:15] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:50:16] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:50:16] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:50:17] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:50:26] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[01:51:26] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:51:26] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:51:26] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:51:27] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:51:41] <codebam> https://codesandbox.io/s/fast-sun-z7npld?file=/src/index.js
[01:52:38] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:52:38] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:52:38] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:52:39] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:53:27] <Alexendoo> jaawerth: The rationale for dropping the key type is to avoid some unsoundness, it's perfectly valid to have e.g. a value {a: 1, b: 2} stored in a type {a: number}, so for entries to return the type ['a', number][] would be an issue
[01:53:50] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:53:51] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:53:51] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:53:52] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:54:03] <ljharb> Alexendoo: sure but `[string, number][]` would be fine
[01:54:06] <codebam> okay I almost got it
[01:54:12] <jaawerth> Alexendoo: the key will never not be a string
[01:54:15] <Alexendoo> ljharb: That's what you would get
[01:54:33] <ljharb> Alexendoo: the one that gets me is that `Object.entries({} as Record<A, B>)` doesn't give me something of type `Array<[A, B] as const>`
[01:55:01] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:55:01] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:55:01] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:55:02] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:55:32] <jaawerth> Alexendoo: so, like, you can make that assumption and it will be sound (unless somebody actually overrides Object.entries to a diferent function, at least)
[01:55:43] <Alexendoo> jaawerth: There 'a' is the type, not string
[01:55:53] <Alexendoo> But the actual type would be 'a' | 'b'
[01:56:01] <Alexendoo> Currently it just string
[01:56:05] <jaawerth> ah
[01:56:12] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:56:12] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:56:12] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:56:13] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:56:15] <ljharb> and the type of each one should be `'a'` and `'b'` as the key, respectively
[01:56:34] <ljharb> so that the inferred type of the entries array is `['a' | 'b', number]`, but the individual items still have their own type
[01:57:12] <jaawerth> right I mean in the case of the value I get it
[01:57:17] <ljharb> at any rate, the current behavior is wildly unhelpful
[01:57:25] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:57:25] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:57:25] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:57:26] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:57:39] <jaawerth> since unlike arrays where you aim for it, it's quite common to have object properties with different types
[01:57:57] <jaawerth> er, where you aim for uniformity rather
[01:58:08] <jaawerth> (except in the case of hand-crafted non-Tuple tuples)
[01:58:18] <ljharb> also if you have an array of entries, you're almost certainly trying to end up with a new object, or, an array of mapped keys or values
[01:58:36] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:58:36] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:58:36] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:58:38] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[01:58:56] <Alexendoo> ljharb: Same problem with Record, you can assign {a: 1, b: 2} to Record<'a', number>
[01:59:00] <jaawerth> it's usually transient, being the point :P
[01:59:47] *** Joins: Tempesta (Tempesta@183.98.39.112)
[01:59:47] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[01:59:47] *** Joins: Tempesta (Tempesta@user/tempesta)
[01:59:48] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[02:00:28] <blueagain> Oh, wow, I haven't seen a netsplit in like a million years
[02:01:24] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[02:01:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:01:50] *** Quits: kakashiAL (~kakashi@ip-037-201-198-039.um10.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[02:03:20] <ljharb> blueagain: what netsplit
[02:03:22] *** Quits: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby) (Quit: thank you for help again #javascipt sirs very good thank you please)
[02:03:33] <ljharb> Alexendoo: sure, but TS doesn't prevent you from making it into a liar
[02:03:39] *** Quits: linearbit (~linearbit@p200300d6ef1205001ea4265892f9eb6c.dip0.t-ipconnect.de) (Quit: Leaving)
[02:04:16] <blueagain> ljharb: earlier. 23:11 -!- Netsplit *.net <-> *.split quits: Tempesta
[02:05:09] <ljharb> ah
[02:05:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:05:31] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:06:11] <Alexendoo> ljharb: wdym?
[02:06:51] <ljharb> Alexendoo: i mean that using Object.assign to mutate an object is already a bad practice, and TS doesn't do anything to protect you from that (it could and should, ofc)
[02:09:01] *** Joins: trevors (~trevors@user/trevors)
[02:09:13] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:09:38] <codebam> why when I call .map on data directly it works but not when I call it after .reduce?
[02:09:40] <codebam> https://codesandbox.io/s/fast-sun-z7npld?file=/src/index.js
[02:09:41] *** Quits: trevors (~trevors@user/trevors) (Client Quit)
[02:09:51] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[02:11:10] *** Joins: remote (~self@user/hackers)
[02:11:47] <Alexendoo> ljharb: I'm still not sure what you mean, TS doesn't consider it a lie that {a: 1, b: 2} could be stored in such a type
[02:12:18] <ljharb> Alexendoo: if the type is `Record<'a', number>` then TS should be only allowing that object to have one key, `'a'`
[02:12:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[02:14:06] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:14:48] <Alexendoo> ljharb: That'd have to be a new, separate language feature
[02:15:15] <ljharb> why, that's literally how a type system is supposed to work
[02:15:35] <ljharb> if you want a and b, the type should be `Record<'a' | 'b', number>` or `Record<string, number>`
[02:15:51] *** Quits: prodigius_ (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[02:15:51] *** Quits: prodigius (~prodigius@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[02:16:08] *** Joins: prodigius (~prodigius@75-163-174-136.clsp.qwest.net)
[02:17:18] <Alexendoo> It's a structural type system, this is one of the trade offs
[02:17:21] <systemfault> ^
[02:17:47] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[02:19:27] *** Joins: audio (~audio@user/audio)
[02:20:47] <ljharb> Alexendoo: i understand it's an intentional tradeoff. i just think they chose badly here.
[02:20:59] <ljharb> Alexendoo: an *object* can add any key, that's great. but what is the point of Record if it's not going to restrict the type
[02:22:38] <Alexendoo> Record just creates an indexed type, if those weren't structural you couldn't e.g. use a Uint8Array as an ArrayLike
[02:23:08] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:d035:712d:6505:1c39)
[02:23:24] *** Quits: D4mned (~D1mned@212.101.251.49) (Ping timeout: 240 seconds)
[02:23:28] <ljharb> i'm not complaining about indexed types, i'm complaining about Record :-)
[02:23:35] *** Joins: trevors (~trevors@user/trevors)
[02:23:52] <Alexendoo> That's all Record is
[02:23:56] <ljharb> so fine, Record is the way it is, where's my object type that constrains own properties, and whose type persists via Object.keys/values/entries and Object.fromEntries
[02:24:35] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:27:48] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[02:28:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:28:19] *** Joins: SOMBRIO (~SOMBRIO@177.137.119.132)
[02:28:23] <codebam> how do I turn data2 into [{secrets}, {kv}]? https://codesandbox.io/s/fast-sun-z7npld?file=/src/index.js
[02:28:39] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:28:54] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:24] <codebam> or more simply how do I flatten an array of objects with the same key?
[02:31:35] <blueagain> does this make any sort of sense as a concept for reuseable components?
[02:31:44] <blueagain> https://pastebin.com/Gggmdqd4
[02:32:26] <blueagain> it's the best I've come up so far without the explicit madness of web components
[02:32:52] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[02:33:05] *** Quits: pizdets_ (~pizdets@183.182.111.141) (Ping timeout: 250 seconds)
[02:33:18] *** Joins: va5c0_ (~vasco.nun@91.110.154.119)
[02:33:29] <codebam> yay I did it
[02:33:34] <Alexendoo> ljharb: It's a desired feature, but presumably one requiring a large amount of work. Until then, flow has it? :P
[02:33:38] <codebam> now to put it all in one line
[02:33:53] *** Joins: pizdets (~pizdets@183.182.115.20)
[02:36:37] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[02:40:51] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:41:44] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:42:35] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:43:35] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[02:44:36] *** Quits: pmercado (~pmercado@186.107.58.161) (Ping timeout: 250 seconds)
[02:45:00] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Client Quit)
[02:47:10] <robertparkerx> http://cubenutbildning.dev-support.mildmedia-dev.eu/ https://i.imgur.com/L8ECwt1.png where is this error coming from?
[02:47:19] <robertparkerx> it says page.php:1 but doesn't make sense
[02:48:23] *** Quits: audio (~audio@user/audio) (Remote host closed the connection)
[02:49:33] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:50:38] <robertparkerx> oh it's coming from that facebook thingy
[02:52:44] *** Joins: filename (~kilitary@kilitary.xyz)
[02:57:28] *** Joins: tex (~super@user/dix)
[03:00:05] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[03:00:08] <blueagain> robertparkerx: that swedish?
[03:00:51] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[03:01:42] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[03:01:49] *** Joins: filename (~kilitary@kilitary.xyz)
[03:02:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:05:56] <onosendi> svenska = swedish :)
[03:05:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:06:02] <robertparkerx> yes
[03:08:02] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:08:24] <blueagain> I can read just about half the page and I don't know Swedish...
[03:08:48] <blueagain> utbildning is probably something like education?
[03:09:29] *** Joins: cebor (~cebor@user/cebor)
[03:10:21] *** Quits: ejjfunky0 (~ejjfunky2@125.164.18.221) (Remote host closed the connection)
[03:10:33] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[03:10:36] <howdoi> !paste
[03:10:37] <jellobot> howdoi, Please paste your code to a site like https://gist.github.com or https://dpaste.org/ (NOT pastebin.com or hastebin), or create a running example: see !fiddle. See also !badpastebin !hastebin !nopaste and !mcve
[03:10:54] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[03:11:37] <howdoi> npm audit says https://dpaste.org/N9tM/raw 6 vulnerabilities (2 low, 4 high) but no fixes, I tried updating the deps to the latest, removed the lock file too, missing something?
[03:12:08] *** Joins: nomic (~nomic@185.198.243.172)
[03:13:27] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:13:53] *** Joins: filename (~kilitary@kilitary.xyz)
[03:14:28] *** Joins: ejjfunky (~ejjfunky2@125.164.22.233)
[03:20:40] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:21:25] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[03:21:42] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:22:28] <howdoi> OMG!! RIP GreenJello, shit man, I am crying
[03:23:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:25:00] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:25:57] * howdoi my chest aches 
[03:27:27] <blueagain> ?
[03:27:53] <howdoi> RIP GreenJello https://git.io/J2m1C [got to know today, sad]
[03:28:20] *** Joins: crashrep (~crashrep@user/crashrep)
[03:28:40] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[03:28:45] <scream> howdoi: aye.
[03:29:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[03:30:12] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 240 seconds)
[03:31:28] <blueagain> Oh. That's really sad. I'm sorry for everyone's loss.
[03:31:51] <scream> Agreed.
[03:32:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[03:33:43] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:12] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 272 seconds)
[03:39:59] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60) (Remote host closed the connection)
[03:40:14] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 256 seconds)
[03:40:35] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60)
[03:41:49] <howdoi> :(
[03:42:28] *** Quits: tex (~super@user/dix) (Quit: tex)
[03:42:31] *** Joins: pmercado (~pmercado@186.107.58.161)
[03:43:50] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:45:44] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60) (Ping timeout: 252 seconds)
[03:46:28] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[03:52:02] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:52:40] *** Joins: Bombo (atom@p4ff00b5d.dip0.t-ipconnect.de)
[03:52:41] *** Quits: Bombo (atom@p4ff00b5d.dip0.t-ipconnect.de) (Changing host)
[03:52:41] *** Joins: Bombo (atom@user/bombo)
[03:53:14] *** Joins: Guest8517 (~Guest85@194.29.183.177)
[03:53:14] <gde33> eh... I did some new Function() in jsfiddle and now it wont do anything anymore
[03:54:04] *** Quits: va5c0_ (~vasco.nun@91.110.154.119) (Quit: WeeChat 3.4)
[03:54:05] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2587:291:d923:f313) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:54:10] *** Quits: Guest8517 (~Guest85@194.29.183.177) (Client Quit)
[03:54:35] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60)
[03:54:41] <gde33> https://jsfiddle.net/gaby_de_wilde/faewumcb/
[03:55:50] <gde33> does that work for you?
[03:59:10] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60) (Ping timeout: 260 seconds)
[04:00:31] *** Quits: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[04:00:55] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[04:02:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:03:03] <ThePendulum> what are your thoughts on using .flatMap and returning an empty array to combine map and filter? probably too dirty to be worth it?
[04:03:48] <friend> How often do people use template literals? Is this a new thing or is it so common that nobody really discusses it any more?
[04:04:29] *** Joins: crashrep (~crashrep@user/crashrep)
[04:04:37] <gde33> friend: even I use them, that means they are not hip anymore
[04:04:53] *** Joins: audio (~audio@user/audio)
[04:05:06] <ThePendulum> all the time
[04:05:08] <ox1eef> i use them regularly in their basic form, `hello ${foo}` - ive never used the more complicated tagging feature of those strings.
[04:05:34] <ThePendulum> there are 6 in the viewframe I have in front of me
[04:05:34] <gde33> ox1eef: tagging?
[04:05:45] <jaawerth> like with String.raw
[04:05:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:05:51] <ThePendulum> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates
[04:06:10] <jaawerth> n> console.log(String.raw`foo\bar`) @gde33
[04:06:11] <jellobot> gde33, foo\bar
[04:06:25] <friend> I am literally logged in here every day and cannot remember ever seeing them before. It's strange. I usually go back over the stuff that I miss if I step away from the computer for a while. This is the first time I have seen them used for anything. So strange!
[04:06:35] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[04:07:05] <jaawerth> friend: it's generally used in place of manual concatenation unless there's a reason concatenation makes more sense. the more popular eslint presets even encourage it
[04:07:38] <ThePendulum> node started supporting them in v4.0.0 which was released in 2015, so yeah people kind of stopped talking about it a couple years ago by now
[04:08:09] <ThePendulum> only when someone does 'hello' + ${planet} I'm sure it will be mentioned
[04:08:13] <ThePendulum> ugh
[04:08:18] <ThePendulum> you see how ingrained it is lmao
[04:08:36] <friend> It's so php-like. I wonder how many times I could have used this in the past 6 years and had no idea. LOL I wonder what else I am missing out on.
[04:09:01] <blueagain> friend: I use a custom template literal function that flattens promises for me, really nice.
[04:10:10] *** Joins: silverdust (~silverdus@user/silverdust)
[04:11:08] <friend> Thanks for all the replies...I'll start studying them now. If anybody knows of a good JS class online that I could take to cover everything I might be missing, let me know.
[04:11:16] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b912:9679:1817:1ed2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:12:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:12:04] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:12:04] *** Joins: wroathe (~wroathe@user/wroathe)
[04:13:25] <ox1eef> Eloquent JS is what I see suggested most in this channel, and i think it's free
[04:13:49] <gde33> ThePendulum: you ever used tagged templates?
[04:13:49] <blueagain> Yeah, Eloquent JS is pretty nice, it's by the author of acorn (a JS parser in JS).
[04:14:16] <gde33> it looks like a horrific thing that should never have
[04:14:27] <ThePendulum> gde33: nope
[04:14:32] <systemfault> They're not used much in practice...
[04:15:09] <systemfault> Last place I've seen them used was in the Apollo GraphQL library
[04:16:09] <gde33> n> function m(s) { return s[0];};m`My string is now an array`;
[04:16:09] <jellobot> (okay) 'My string is now an array'
[04:16:18] <jaawerth> they serve a very specific usecase
[04:16:23] <jaawerth> namely DSL's
[04:16:34] <gde33> oh
[04:16:38] <jaawerth> other than the builtin String.raw, anyway
[04:17:15] <gde33> +''
[04:18:01] <gde33> n> function m(s) { return s[0];};m`My string is now ${} an array`;
[04:18:01] <jellobot> (fail) SyntaxError: Unexpected token '}'
[04:18:21] <gde33> n> function m(s) { return s[0];};m`My string is now ${42} an array`;
[04:18:22] <jellobot> (okay) 'My string is now '
[04:19:07] <systemfault> n> function m(s, t) { return [s, t]};m`My string is now ${42} an array`;
[04:19:07] <jellobot> (okay) [ [ 'My string is now ', ' an array' ], 42 ]
[04:19:22] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:c1e1:3103:f7d8:8b84) (Quit: Client closed)
[04:19:58] <systemfault> n> function m(s, t) { return [s, t]};m`${100}My string is now ${42} an array`;
[04:19:58] <jellobot> (okay) [ [ '', 'My string is now ', ' an array' ], 100 ]
[04:20:26] <systemfault> (Was wondering how that case was handled)
[04:20:48] <gde33> I didn't like ${}
[04:21:20] <ox1eef> i don't like ` or ${}. ` is a nuisance on this brazilian keyboard.
[04:21:24] <gde33> do default params work?
[04:21:45] <gde33> n> function m(s=`My string is now ${42} an array`) { return s[0];};m``;
[04:21:45] <jellobot> (okay) ''
[04:21:54] <gde33> n> function m(s=`My string is now ${42} an array`) { return s[0];};m();
[04:21:54] <jellobot> (okay) 'M'
[04:21:58] <systemfault> I switch between canadian-french(Normal writing) and US layout(coding)...
[04:22:01] <gde33> lmao
[04:22:24] <ox1eef> interesting
[04:22:27] <blueagain> vim stops working if I don't use us layout.
[04:22:40] <blueagain> and everything is broken
[04:22:57] <systemfault> US layout is just optimal for coding... IMHO
[04:23:03] <blueagain> ^
[04:23:36] <systemfault> I'm just lucky that both canadian-french and US layouts are QWERTY
[04:24:05] <blueagain> german keyboards are qwertz and it's quite possibly the worst thing ever
[04:24:22] <systemfault> French (France) keyboards are AZERTY
[04:25:08] <blueagain> every time I buy a laptop, it's like, do you a us layout? nope? next shop.
[04:25:15] <blueagain> +have
[04:25:38] <systemfault> My main keyboard is a mechanical keyboard with a US layout
[04:25:44] <ox1eef> funny enough the mind seems to quickly adjust over a few days, whatever the layout.
[04:27:04] <ox1eef> i'm also using a mechanical keyboard. it was quite the novelty for a while, but now it's just normal.
[04:27:21] <systemfault> I still prefer it to the default mac keyboard
[04:27:36] <ox1eef> i think id prefer it over every laptop keyboard there is.
[04:28:53] <ox1eef> after a few broken macbook keyboards, i also appreciate how sturdy they are. i never have issues with stuck keys or the like.
[04:29:09] *** Joins: nomic2 (~nomic@185.198.243.172)
[04:29:26] <blueagain> what models do you guys use?
[04:30:11] <ox1eef> my kb looks like: SINO WEALTH Gaming KB.
[04:30:31] <ox1eef> it'a small one, that fits perfectly on a laptops body.
[04:30:48] <systemfault> I bought this one https://kono.store/products/kira-mechanical-keyboard with MX Brown switches.. but ended up replacing the switches with Holy Pandas and the keycaps with some "space cadet keycaps" https://oblotzky.industries/products/gmk-space-cadet-ii
[04:31:04] <systemfault> Eventually, I'll just get a TKL keyboard...
[04:31:15] <systemfault> (I don't need the numpad)
[04:31:18] <ox1eef> very nice
[04:32:12] *** Quits: nomic (~nomic@185.198.243.172) (Ping timeout: 240 seconds)
[04:33:07] <blueagain> looks so nice
[04:39:12] <sickdyd> do you guys know a good carousel for React?
[04:39:13] *** Joins: teut (~teut@122.161.83.81)
[04:39:34] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[04:39:47] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:40:39] <sickdyd> keyoards? keyboards... I'll never use anything else than this: https://www.realforce.co.jp/products/R2-JPV-IV/
[04:41:06] <teut> in next js  in _app.tsx ,  how to pass the appprops?
[04:41:57] <systemfault> sickdyd: Looks fine to me (it would take me a bit of time to get used to the enter key and the position of ] )
[04:42:28] <sickdyd> systemfault: the nice thing is the softness of the keys, and it's quiet
[04:42:40] *** Quits: Tang3nt-Man (~Tang3nt-M@138.199.21.54) (Quit: Leaving)
[04:42:47] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[04:43:09] <sickdyd> it has different weight based on what finger you use for a key, so h requires more pressure while q requires less
[04:43:45] <sickdyd> felt a bit weird at first, now I love it. It is pricey though
[04:44:19] <sickdyd> ah, and I absolute love the 90s colors / style :>
[04:45:02] <sickdyd> some of my younger coworkers have some spaceship keyboards and I always remind them "this is how a keyboard is supposed to look like, space boy"
[04:45:12] <ox1eef> lol
[04:45:50] <ox1eef> my keyboard is full of lights, different colors across different set of keys - i think i can disable it, generally i dont pay attention. it's the touch and feel that matters.
[04:46:45] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[04:46:47] <sickdyd> I used to have an RGB keyboard too, looks cool, but the novelty grew old fairly quick
[04:46:55] <ox1eef> indeed
[04:47:46] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 272 seconds)
[04:48:22] <jaawerth> teut: you don't - _app.tsx is how you override the top-level app rendered by nextjs. the props are determined by the active page (passed as the Component prop) and the prefetched data (passed as pageProps). the letter you can set by exporting one of its data-fetching methods from a given page.
[04:48:25] <jaawerth> https://nextjs.org/docs/basic-features/data-fetching/get-static-props goes into detail and links to info bout those methods
[04:48:43] *** Joins: dob1 (~dob1@user/dob1)
[04:48:48] *** Joins: Axy (~Axy@user/axy)
[04:49:38] *** Joins: Guest6320 (~blahboyba@c-67-161-96-246.hsd1.wa.comcast.net)
[04:50:11] <teut> https://ibb.co/BrY6yd4
[04:50:23] <teut> I need a header like this
[04:50:45] <teut> difference would be   Home, About , etc  on different pages
[04:51:11] <teut> so I am putting the Header in the _app.tsx
[04:51:22] <sickdyd> teut: I think you need to use a Layout
[04:51:23] <teut> I somehow need each page to pass the name
[04:51:34] <teut> yes I saw that
[04:51:45] <teut> but how do you pass the text at every page
[04:51:46] <teut> ?
[04:52:00] <teut> I tried using children but it didnt work
[04:52:20] <sickdyd> you do something like this in _app: <Layout><Component {...pageProps} /></Layout>
[04:52:33] <sickdyd> and in the Layout component you add header / footer that you need in each page
[04:52:47] <teut> that is fine
[04:53:00] <teut> but how to you pass the  different text?
[04:53:19] <teut> at about page , the Header's text would be  about
[04:53:22] <teut> About*
[04:53:53] <sickdyd> I see, I think you can understand the current location with useRouter
[04:54:10] <teut> oh nice
[04:54:15] <teut> I can just capitalise it
[04:54:38] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[04:54:45] *** Guest6320 is now known as codesmell
[04:54:56] *** Quits: codesmell (~blahboyba@c-67-161-96-246.hsd1.wa.comcast.net) (Quit: leaving)
[04:55:14] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[04:55:19] <teut> thanks
[04:55:34] <sickdyd> yw
[04:55:37] *** Quits: SOMBRIO (~SOMBRIO@177.137.119.132) (Quit: Client closed)
[04:55:46] *** Joins: eugercek (~user@user/eugercek)
[04:57:10] <teut> but m home fiile is at   "/"
[04:57:13] <teut> myy*
[04:57:28] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[05:00:17] *** Joins: dob1 (~dob1@user/dob1)
[05:03:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:03:24] *** nomic2 is now known as nomic
[05:04:05] <sickdyd> I guess you'll have to add a check in the Layout for that path: const { pathname } = useRouter(); switch (pathname) { case '/about': return "About"; break; ... default: return "Home"; }
[05:05:01] *** Quits: nomic (~nomic@185.198.243.172) (Quit: Leaving)
[05:05:42] <teut> hmm, that can be done, but for now I just renamed my file to home
[05:06:39] <teut> how to change the start page now?
[05:06:56] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:07:00] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:07:02] <teut> I mean make the first page   "/home" instead of "/"?
[05:07:51] <sickdyd> teut: https://stackoverflow.com/a/66164372/5733078
[05:08:40] <teut> that doesnt look like a good way to do it
[05:08:47] <teut> but works still
[05:08:51] <teut> thanks for it
[05:08:57] <sickdyd> why it doesn't look like a good way?
[05:08:57] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[05:09:03] <sickdyd> that's what the docs tell you to do
[05:09:37] *** Quits: stagas (~stagas@2a02:587:c41b:6388:c864:3179:4464:d4f5) (Ping timeout: 240 seconds)
[05:10:03] <sickdyd> I would go carefully through the docs before starting building anything
[05:10:25] <sickdyd> there's a lot that can be looked over that can be very useful
[05:11:15] <sickdyd> at least skimming through it so that when you have a problem you may recall that there's already solution for it
[05:11:36] <sickdyd> one example is useSWR for fetch requests
[05:12:40] <teut> I am at an internship and these guys are saying complete the webapp in a week
[05:12:56] <teut> dont have time
[05:13:07] <teut> '=( '=(
[05:13:44] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:13:52] <EdFletcher> tell them now, else by default they'll probably think you can do it. nothing wrong with being honest though, especially as you're an intern.
[05:15:22] <teut> this is the second startup I am working at. Both were early stage with just 2-3 people. I would refrain to join any such startup with 2-3 peeople in future
[05:16:17] <teut> well, I have told but they start comparing to other interns etc
[05:16:25] <EdFletcher> oof
[05:16:36] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[05:16:39] <EdFletcher> that's terrible. you're you, not other interns.
[05:16:55] <teut> the other intern is working on a totally different things
[05:17:17] <dandaman> can any regex wizard tell me if this is the proper syntax for fetching all anchor tag hrefs in a string?
[05:17:17] <EdFletcher> regardless, comparing you as if you're interchangeable parts is... inhumane, literally.
[05:17:18] <dandaman> const regexp = /<a\\s+(?:[^>]*?\\s+)?href\\s*=\\s*[\"'](.*?)[\"']/g;
[05:17:54] <dandaman> was given that regex in an interview just now and it didn't work for finding the urls. I want to make sure I'm not an idiot and mis-implemented it.
[05:18:02] <dandaman> misuse it*
[05:18:36] <dandaman> it doesn't seem to be working in my tests, the interviewer said this is the same regex they use for other languages and is pretty sure it should be fine for javascript
[05:18:57] <dandaman> (he then tested it on his own end and couldn't get it to work but isn't a JS dev so wasn't sure if he was misusing it)
[05:19:28] <teut> yep
[05:20:27] <systemfault> I'd probably leave an interview from a company asking regex questions...
[05:20:50] <systemfault> Especially if it consists of parsing HTML
[05:21:02] <systemfault> Which is the classic case of WHEN TO NOT USE A REGEX
[05:21:06] <teut> how about sql questions systemfault?
[05:21:15] <dandaman> so the regex is incorrect?
[05:21:16] <systemfault> For a backend position, no problem
[05:21:26] <dandaman> this was for a backend position fyi
[05:21:46] <dandaman> please confirm, im not going crazy right, the regex is broken?
[05:22:35] <systemfault> teut: Writing good SQL is part of a backend's job... Regex is just some unreadable shit you only reach when it's the easiest way to deal with a specific problem.
[05:23:46] *** Joins: D4mned (~D1mned@212.101.251.49)
[05:23:53] <teut> maybe but as I am a student I didn't require things more than what te orm offers
[05:24:01] <teut> the*
[05:24:12] <systemfault> dandaman: I'd tell the interviewer to simply not use regexes to retrieve links from HTML because it's the wrong tool to use.
[05:24:17] *** Joins: hojasuelta (~hojasuelt@50.34.135.134)
[05:24:23] <systemfault> I'd probably refer them to this classic https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags
[05:24:25] <EdFletcher> systemfault: yes this regex is broken, it is expecting a single space around the equals sign: \s=\s
[05:24:35] <teut> can you use XML parser to do that systemfault?
[05:24:42] <EdFletcher> but yeah, systemfault is spot on here: parsing an irregular language (HTML) with _regular_ expressions is just _wrong_
[05:24:53] <teut> in python I would use  BeautifulSoup fo that
[05:24:55] <teut> for*
[05:24:56] <systemfault> teut: You'd use an HTML parser to parse HTML :)
[05:25:03] <EdFletcher> ^bingo
[05:25:14] <teut> and thats what they asked them
[05:25:17] <systemfault> You could use something like cheerio or whatever is popular these days on node
[05:25:18] <teut> to make
[05:25:28] <dandaman> thanks guys
[05:25:38] <dandaman> i appreciate the saving of my sanity
[05:25:43] <teut> you can start writing the BNF
[05:26:46] <systemfault> Asking regex questions to a candidate in an interview is just being an asshole.
[05:27:11] <systemfault> It would be a huge red flag to me..
[05:27:19] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[05:28:09] <teut> ya, you are correct especially parsing with regex
[05:28:36] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:29:11] <systemfault> It's not a way to assess if a candidate knows how to program, not in any way... Personally, if I have to do anything involving them, I use MDN as a reference and some online regex tool
[05:29:18] <teut> I want to ask another thing.    import accountState from "../state/account"      How to allow state module to be discoverable ?
[05:29:24] <EdFletcher> dandaman: actually, this regex is broken in another way: (.?) only matches _zero or one_ of any character between the quotes. also that non-capturing group at the front is unnecessary. this regex is just all sorts of wrong. very confused why this was brought up in an interview of all places, unless it was an exercise to fix badly-written regex.
[05:29:38] <teut> and just write   import accountState from "state/account"
[05:30:03] <teut> https://dpaste.org/c8FD
[05:30:07] <teut> I have added paths
[05:30:16] <teut> but still it doesnt work
[05:30:22] <dandaman> EdFletcher: lol maybe it was a trick question and the interview was actually "fix this regex"
[05:30:39] <systemfault> teut: Is the TS part working?
[05:30:50] <teut> ts part?
[05:30:53] <systemfault> teut: Because there's the TS part... and the bundler part.
[05:30:53] <EdFletcher> dandaman: haha that's literally the only way this makes sense, but _even then_ i concur with systemfault again: asking any regex question in an interview is just being an asshole 😆
[05:31:01] <teut> yes
[05:31:29] <systemfault> teut: So everything resolves properly in your editor?
[05:31:41] <dandaman> well the question wasn't really about regexs, he was giving me the regex as a tool to use to fetch links. It was more of a recursion problem, "get all the urls on this page and crawl them to find matching domains with the same protocol"
[05:31:59] <teut> no    import orderState from "state/order";    is not working
[05:32:12] <teut> import orderState from "../state/order";  I still have to use it
[05:32:50] <EdFletcher> dandaman: ahhhh gotcha, makes a lot more sense now
[05:33:05] <systemfault> teut: I'm not good with the path mapping feature... :/
[05:33:19] <teut> I am doing it the first time
[05:33:23] <teut> too
[05:37:24] *** Parts: bobdobbs` (~user@116.251.146.222) ()
[05:39:12] <teut> using flex-box row  justify-space-between .if we got 3 items then how to reduce space between first two items to 0?
[05:39:37] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:9e28:b06e:605:9125)
[05:39:43] <teut> I tried to use justify-self-start to  the second element but it didnt work
[05:41:12] *** Joins: Rockwood (~Rocky@user/rocky)
[05:41:55] <teut> oh  margin-bottom auto on second element does that
[05:42:43] *** Quits: dreamreal (~dreamreal@about/java/dreamreal) (Quit: dreamreal)
[05:42:46] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b876:cfb6:6a14:5ce2)
[05:48:14] <sickdyd> teut: when adding paths on tsconfig make sure to close and reopen the ide
[05:48:47] <teut> I have restarted pc several times even
[05:50:05] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[05:50:12] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[05:54:53] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b876:cfb6:6a14:5ce2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:55:57] <celphi> jaawerth: you there?
[05:57:47] *** Joins: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281)
[06:00:52] *** Joins: Tempesta (Tempesta@183.98.39.112)
[06:00:52] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[06:00:52] *** Joins: Tempesta (Tempesta@user/tempesta)
[06:00:53] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[06:01:12] *** Joins: Tempesta (Tempesta@183.98.39.112)
[06:01:12] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[06:01:12] *** Joins: Tempesta (Tempesta@user/tempesta)
[06:01:13] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[06:01:20] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[06:02:23] *** Joins: Tempesta (Tempesta@183.98.39.112)
[06:02:23] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[06:02:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[06:02:24] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[06:03:02] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[06:03:35] *** Joins: Tempesta (Tempesta@183.98.39.112)
[06:03:35] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[06:03:35] *** Joins: Tempesta (Tempesta@user/tempesta)
[06:03:36] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[06:03:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:04:46] *** Joins: Tempesta (Tempesta@183.98.39.112)
[06:04:46] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[06:04:46] *** Joins: Tempesta (Tempesta@user/tempesta)
[06:04:47] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[06:06:40] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:07:20] *** Joins: justAstache (~justache@user/justache)
[06:07:34] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:08:57] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:d035:712d:6505:1c39) (Ping timeout: 240 seconds)
[06:14:21] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:14:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:15:49] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:16:26] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[06:17:13] *** Quits: hojasuelta (~hojasuelt@50.34.135.134) (Remote host closed the connection)
[06:19:28] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:20:14] *** Joins: suss (~user@user/suss)
[06:21:50] *** Joins: hojasuelta (~hojasuelt@50.34.135.134)
[06:26:31] *** Quits: mikrosis92 (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de) (Quit: Connection closed)
[06:26:33] *** Quits: hojasuelta (~hojasuelt@50.34.135.134) (Ping timeout: 256 seconds)
[06:26:57] *** Joins: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[06:27:37] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[06:27:47] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60)
[06:27:50] *** Quits: kalen (~kalen@154.3.42.239) (Ping timeout: 272 seconds)
[06:30:40] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[06:30:48] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[06:33:17] *** Joins: src (~src@user/src)
[06:37:23] *** Quits: kmh (~kmh@2a00:6020:5004:6800:6969:9a4a:935a:d8b6) (Quit: Leaving)
[06:39:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:41:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:42:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:43:26] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[06:44:09] *** Joins: silverdust (~silverdus@user/silverdust)
[06:44:12] *** Joins: dob1 (~dob1@user/dob1)
[06:45:03] *** Quits: Swahili_ (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[06:45:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:45:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:45:59] *** Joins: wroathe (~wroathe@user/wroathe)
[06:46:58] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[06:47:05] *** Joins: kmh (~kmh@2a00:6020:5004:6800:1856:1e91:efc3:b86f)
[06:48:22] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 256 seconds)
[06:49:30] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[06:50:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[06:51:25] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:52:54] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Quit: Leaving.)
[06:59:25] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:01:11] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60) (Ping timeout: 245 seconds)
[07:02:29] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[07:02:32] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[07:03:09] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:03:28] *** Joins: silverdust (~silverdus@user/silverdust)
[07:04:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:07:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:08:37] *** Quits: pmercado (~pmercado@186.107.58.161) (Ping timeout: 240 seconds)
[07:08:37] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[07:11:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:32] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[07:13:45] *** Quits: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:14:55] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[07:15:13] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[07:15:33] *** Joins: dob1 (~dob1@user/dob1)
[07:15:34] *** Joins: silverdust (~silverdus@user/silverdust)
[07:18:25] *** Joins: twiclo1 (~twiclo@vpn.utahbroadband.com)
[07:18:37] <twiclo1> I have a website with a nav bar. The second button needs to take me to a new page which will look
[07:18:39] <twiclo1> exactly like the first but with different JS. Is the right step here to have two copies of the same htm
[07:18:41] <twiclo1> or is there a better way?
[07:18:45] <twiclo1> Well that wasn't supposed to send
[07:20:06] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:20:30] *** Joins: hojasuelta (~hojasuelt@50.34.135.134)
[07:24:26] *** Joins: filename (~kilitary@kilitary.xyz)
[07:27:14] <KevinX> what was it supposed to do?
[07:30:19] <D4mned> well you usually avoid repeating yourself twiclo1
[07:30:48] <D4mned> so if you could make it reusable it would be better
[07:31:09] <Rockwood> KevinX, o/
[07:31:13] <D4mned> make each button repopulate the same html
[07:37:57] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[07:40:48] <twiclo1> I think what I'm going to do is clear the page (that was populated with JS) then repopulate it with the new content
[07:41:02] <twiclo1> And just have the button in the navbar trigger the function
[07:41:22] <twiclo1> So what you're saying
[07:42:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:42:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:42:25] *** Joins: wroathe (~wroathe@user/wroathe)
[07:47:24] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:52:04] <friend> Why not just repopulate the part of the page that needs to change? Wouldn't you just load your new content into a container say "main" for example that changes between nav bar buttons?
[07:52:07] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:53:42] <twiclo1> The main content div thing is what's changing
[07:53:49] *** Joins: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com)
[07:54:03] <friend> but the navbar is outside of the main content thing
[07:54:07] <twiclo1> Right
[07:54:14] <twiclo1> One sec
[07:55:10] <twiclo1> https://jsfiddle.net/hygk58cw/
[07:55:32] <twiclo1> I'm going to empty `section` then fill it back up again with the other content
[07:56:36] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[07:58:36] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[08:00:27] *** Quits: hojasuelta (~hojasuelt@50.34.135.134) ()
[08:00:48] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[08:01:00] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[08:04:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:05:58] <friend> twiclo1, I wasn't aware that you could use body as a child element to anything other than <html> I thought you had to put your content into the <body> element...I will be of no help because your html (though valid according to codepen) looks nothing like I have seen before. sorry.
[08:07:00] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[08:07:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:10:02] *** Quits: ejjfunky (~ejjfunky2@125.164.22.233) (Remote host closed the connection)
[08:13:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[08:17:27] *** Joins: han-solo (~hanish@user/han-solo)
[08:20:46] *** Joins: stenno (~stenno@user/stenno)
[08:24:28] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:3d7f:bf10:7923:9c50) (Quit: Textual IRC Client: www.textualapp.com)
[08:25:23] *** Quits: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com) (Quit: Connection closed)
[08:28:03] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:31:17] <twiclo1> That body section might as well just be a div
[08:31:30] <friend> or <main>
[08:34:14] *** Joins: bobdobbs` (~user@2406:5a00:4456:db00:9e28:b06e:605:9125)
[08:34:23] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:34:54] *** Joins: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com)
[08:35:17] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:9e28:b06e:605:9125) (Read error: Connection reset by peer)
[08:35:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:37:31] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:44:25] *** Joins: silverdust (~silverdus@user/silverdust)
[08:46:11] *** Quits: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:50:46] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[08:56:09] <friend> in using the backticks for template literals and a function, the function is defined like anyother function, right? so let test=`<p class="${getClass(something)}'>foo</p>` should run the getClass function right?
[08:59:18] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60)
[09:00:41] <ljharb> friend: yes
[09:00:51] <ljharb> friend: it's just a normal expression inside the `${ }`
[09:01:08] <ljharb> (not that you should be making html with template literals, ofc)
[09:01:53] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[09:05:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:09:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[09:14:15] <friend> ljharb, what do you mean by that?
[09:14:36] <friend> Isn't that what template literals are for?
[09:15:36] <ljharb> friend: they're for interpolations. they're not specifically for "making html"
[09:15:42] <ljharb> use react for that
[09:16:49] <friend> Okay. As soon as I get a little better at javascript, I promise I'll have a look at react. Granted by then, react will be old news that there will be something else to learn, but I just want to get js down first.
[09:17:57] <ljharb> friend: it won't. react's been dominant for over half a decade and won't be going anywhere
[09:18:28] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:18:31] <friend> That's what they said about Jquery so I learned it first.
[09:20:11] *** Joins: filename (~kilitary@kilitary.xyz)
[09:20:31] <ljharb> friend: and jquery was the undisputed best thing to learn from the late 90s until the mid 2010s
[09:20:53] *** Quits: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com) (Quit: Connection closed)
[09:21:19] *** Joins: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com)
[09:21:56] *** Quits: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com) (Client Quit)
[09:22:24] *** Joins: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com)
[09:23:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[09:23:57] <friend> just fyi, I am mostly interested in js in the context of Adobe's miserable suite of products as I am writing a plugin in js. It won't actually use HTML, but perhaps Adobe has a react implementation as well. so I will check it out.
[09:24:44] *** Quits: _9pfs (~3fe02e3b@22.131.71.34.bc.googleusercontent.com) (Client Quit)
[09:28:48] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:29:09] <friend> I never knew that array.length returned the highest index+1 not the actual length of the array...wild.  How do you get the number of items in an array then?
[09:30:14] <D4mned> it actually returns the number of items inside the array
[09:30:26] <D4mned> so if you have 4 items it returns 4
[09:30:28] <kalen> for..of. but if you're not filling every element, then you're probably using the wrong data structure
[09:30:31] <D4mned> but indexes are different
[09:30:35] <D4mned> they start from 0
[09:30:44] <friend> https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript
[09:31:08] <friend> Not that array.length isn't necessarily the number of items in the array. (about halfway down)
[09:31:23] <D4mned> so the 4th item inside the array is index 3
[09:31:53] <friend> n> var a=['dog','cat', 'hen']; a[100]='fox'; a.length
[09:31:54] <jellobot> (okay) 101
[09:32:21] <friend> There are only 4 items, but a.length==101
[09:32:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:32:26] <D4mned> yeah .length is mutable
[09:32:35] <friend> meaning?
[09:32:43] <ljharb> you can write to it
[09:32:47] <D4mned> yeah
[09:32:50] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:b54e:3ae0:a83b:fc60) (Ping timeout: 260 seconds)
[09:33:04] <ljharb> friend: and last i checked, adobe's JS was stuck in ES3, but maybe they've updated it since then
[09:33:33] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[09:33:41] <friend> prolly not. Adobe is a wreck.
[09:33:43] <ljharb> friend: and the length is only not the number of items in an array if it's a sparse array. but those are rare and should be avoided.
[09:34:11] <ljharb> n> var dense = [1, 2, 3]; var sparse = [1, , 3]; [dense.length, sparse.length, 1 in dense, 1 in sparse] @ friend
[09:34:11] <jellobot> friend, [ 3, 3, true, false ]
[09:34:24] <ljharb> but you should basically just pretend all arrays are dense
[09:35:36] <kalen> n> var a = []; a[2] = 7; a[3243] = 9; a.reduce(a => a+1, 0);
[09:35:37] <jellobot> (okay) 2
[09:35:42] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:35:54] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Read error: Connection reset by peer)
[09:36:09] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (Ping timeout: 268 seconds)
[09:36:11] *** Joins: Habby (~hax@69.165.175.67)
[09:37:31] *** Joins: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[09:38:38] <kalen> n> var a = []; a[2] = 7; a[3243] = 9; Object.values(a).length
[09:38:38] <jellobot> (okay) 2
[09:40:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:40:50] <kalen> not sure what the "preferred" way to do it is
[09:40:55] *** Quits: hacks (~hax@user/hax) (Ping timeout: 256 seconds)
[09:41:18] *** Joins: Giovanni (~Giovanni@176.67.166.45)
[09:41:32] <kalen> but i'd probably go with Object.values(a).length since it's easier to read/understand
[09:41:38] <ljharb> same
[09:41:45] <ljharb> but also, just pretend sparse arrays don't exist
[09:42:57] *** Quits: Anonamy (~Anonamy@node-1w7jr9qu7prr9kps3ciz4iqdz.ipv6.telus.net) (Remote host closed the connection)
[09:46:23] *** Joins: Anonamy (~Anonamy@node-1w7jr9qu7prr9kps3ciz4iqdz.ipv6.telus.net)
[09:50:08] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[09:51:06] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[09:52:11] *** Joins: mexen (uid495612@user/mexen)
[09:57:18] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[09:58:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:03:20] *** Joins: stagas (~stagas@2a02:587:c41b:6388:7105:73cc:d648:a8b)
[10:04:40] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:05:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:05:51] *** Joins: Tempesta (Tempesta@183.98.39.112)
[10:05:51] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[10:05:51] *** Joins: Tempesta (Tempesta@user/tempesta)
[10:08:24] *** Joins: silverdust (~silverdus@user/silverdust)
[10:09:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:13:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[10:17:44] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[10:20:55] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:22:04] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:22:29] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:23:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:24:28] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2549:2ec4:27e7:2488)
[10:26:08] *** Joins: ejjfunky (~ejjfunky@125.164.22.233)
[10:27:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[10:30:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:36:03] *** Quits: bliminse (~bliminse@host86-158-241-239.range86-158.btcentralplus.com) (Ping timeout: 252 seconds)
[10:38:01] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[10:42:57] *** Joins: filename (~kilitary@kilitary.xyz)
[10:47:03] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:949:4916:4b4f:8874)
[11:03:12] *** Joins: de-facto_ (~de-facto@user/de-facto)
[11:03:55] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[11:06:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:06:41] *** de-facto_ is now known as de-facto
[11:09:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:11:32] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[11:13:02] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[11:13:41] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:19:23] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:19:27] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[11:23:36] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Remote host closed the connection)
[11:23:45] <scream> shut the fuck up ljharb
[11:23:48] <scream> just shut up
[11:24:00] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[11:24:56] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[11:27:48] *** Quits: kuba-orlik (~kuba-orli@nyuno.kuba-orlik.name) (Quit: The Lounge - https://thelounge.chat)
[11:28:35] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[11:28:35] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Ping timeout: 240 seconds)
[11:29:33] *** Joins: kuba-orlik (~kuba-orli@nyuno.kuba-orlik.name)
[11:30:10] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[11:31:00] <undefined_bob> did my last message made it through?
[11:32:34] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:34:15] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[11:34:23] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1632:2957:5a3c:8d2e)
[11:37:05] *** Joins: Slade (uid128877@user/slade)
[11:45:00] *** Quits: bobdobbs` (~user@2406:5a00:4456:db00:9e28:b06e:605:9125) (Ping timeout: 240 seconds)
[11:45:01] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:45:36] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:7799:3815:c396:4ca9:5cba) (Read error: Connection reset by peer)
[11:46:33] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:91d3:ad70:883:d1c2)
[11:47:20] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[11:47:31] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:52:42] *** Quits: relms (Relms@user/relms) (Quit: Ur Cute)
[11:53:18] *** Joins: relms (~relms@user/relms)
[11:58:37] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:59:54] <Cork> undefined_bob: that question was the first message you typed in the last 8h so i guess no
[12:00:33] <undefined_bob> ow thanks Cork
[12:00:48] <undefined_bob> I wrote: why do most websites break stuff for older browsers, when they implement new stuff/code? thats so annoying
[12:01:18] <Cork> undefined_bob: often cause they don't care to test it in other browsers then the ones they use
[12:01:37] <Cork> basdically meaning latest chrome
[12:02:01] <undefined_bob> first stackexchange stopped working and now codepen too
[12:02:07] <undefined_bob> thats so mean
[12:02:27] <Cork> report it, hopefully they care to fix it
[12:02:41] <undefined_bob> I have and they said they wont fix it because they dont care
[12:02:45] <Cork> (unless the browser it broke in is really old)
[12:02:58] <Cork> ya, seen that too
[12:03:01] <undefined_bob> I guess my browser is really old
[12:03:11] <Cork> how old are we talking about?
[12:03:57] <undefined_bob> but when I build something, I always try to include a basic fallback version. Like for example, if my menu contains JS, I always implement a basic css only menu for those with no js
[12:04:30] <undefined_bob> I use Firefox 52.9.0 its the latest browser I can install on my OS
[12:04:44] <Cork> ya, that is the "old" recommended way to do it, many don't care to do that
[12:05:03] <undefined_bob> that is so rude and mean of them
[12:06:19] <Cork> ya, that version was eol 4 years ago...
[12:06:36] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:06:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:06:39] <Cork> can't really blame them there
[12:06:43] <undefined_bob> ya but only 4 years
[12:06:50] <Cork> no, not only
[12:07:14] <Cork> when the developers of the browser dropped the support for it 4 years ago that is a lot
[12:08:21] <Cork> its time to move to another browser that supports the os you use, or move to a different os
[12:08:26] <undefined_bob> for me it feels like they are breaking the accessibility of the internet when not being backward compatible. Doesn't feel right
[12:08:51] <Cork> staying on a dead browsers is a security problem too
[12:08:55] <undefined_bob> I wish I could but I'm not allowed to change the OS of my PC in the office
[12:09:25] <Cork> then it is time to poke the ones manitaining the systems
[12:10:13] <undefined_bob> they dont care
[12:10:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:14:14] *** Joins: vysn (~vysn@user/vysn)
[12:17:26] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[12:20:43] <jwpapi> What does this channel think about `else` statements ljharb ?
[12:20:58] <jwpapi> Some advice out there is to not use `else`
[12:23:40] <Svitkona> uh
[12:24:56] <Cork> O_o
[12:25:09] <Cork> so you would use repeated if statements instead or what?
[12:25:56] <jwpapi> https://dev.to/dglsparsons/write-better-code-and-be-a-better-programmer-by-never-using-else-statements-4dbl
[12:26:32] <jwpapi> I think the idea is to use more functions that return before needing an else statement
[12:28:39] <Cork> well when you can do it without else sure, but that isn't always the case...
[12:29:03] <Cork> and writing multiple repeated if statements just to not write else is just dumb
[12:29:10] <jwpapi> I agree, that’s where I have trouble
[12:29:36] <jwpapi> Here I could just return  instead of writing else but that would bulk up my code https://www.irccloud.com/pastebin/xWBLzgqY/
[12:30:26] <jwpapi> ljharb doesn’t recommend switch cases, which I understand, because this is basically the same as
[12:30:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[12:31:21] <Cork> jwpapi: well you could do that as an object
[12:31:27] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:32:11] <jwpapi> Also my IDEA complains that `dateMin` could not be defined
[12:32:45] <Cork> lookup = { today: {days: 0}, yesterday: { days: 1 }, last_month: { months: 1 } }; DateTime.now().minuus(lookup[timeframe])
[12:33:10] <Cork> would have to fiddle to fix this_month as it doesn't reallt match though
[12:33:18] <Cork> *really
[12:33:35] *** Joins: VoidSync (~sync@user/voidsync)
[12:33:36] <Cork> cause ya, having that kind of if chain is messy
[12:33:44] <jwpapi> It’s smooth
[12:34:14] <jwpapi> I can also create a DateTime object first
[12:34:53] <Cork> ya, the point is you can have a static object and repleace all the repeated if cases with a single lookup
[12:35:41] <jwpapi> I would opt for clarity here tho
[12:36:47] <Cork> it is usually clearer to have an object with the values instead of a long list of code blocks
[12:37:02] <Cork> if written correctly that is
[12:37:33] <Cork> cause if the code doesn't need to differ, one have to find the difference if you repeat the code
[12:37:35] <jwpapi> My issue is that  my IDEA complains that `dateMin` could not be defined, even if I test that first.
[12:38:26] <scream> why do you give a fuck what ljharb thinks, jwpapi?
[12:38:34] <scream> if you see the buddha on the road, shoot him
[12:40:09] *** Quits: D4mned (~D1mned@212.101.251.49) (Read error: Connection reset by peer)
[12:40:33] *** Joins: D4mned (~D1mned@212.101.234.89)
[12:41:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[12:41:42] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[12:41:47] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:44:56] <jaawerth> scream: please dial down the weirdly random hostility by, like, 85%. I don't even know why you were berating someone to shut up almost 2 hours after they'd last said anything to begin with, but that isn't the kinda atmosphere we wanna foster in here.
[12:45:16] <scream> not random
[12:45:19] <scream> not weird
[12:45:35] <scream> you don't foster an atmosphere, you fester one
[12:45:46] <jaawerth> well, either way, dial it down please
[12:46:02] <scream> how about i cut my nuts off and you and your fuckboy ljharb can foster parent them
[12:46:06] *** ChanServ sets mode: +o jaawerth
[12:46:10] <scream> fuck you.
[12:46:14] <scream> wow, so big, so strong.
[12:46:17] <scream> hit me with the hard one.
[12:46:28] <jaawerth> I don't know why you're wasting your energy like this in here. it's a javascript chat
[12:46:30] *** Quits: devslash (~devslash@46.232.211.210) (Quit: ZNC 1.8.2 - https://znc.in)
[12:46:33] <scream> as if this ever works to stop me.
[12:46:38] <scream> it's an ego vacuum
[12:46:41] <scream> a cult of personality
[12:46:44] <scream> you don't talk about javascript
[12:46:52] <scream> you talk about yourselves, and javascript is part of your dumbfuck personalities.
[12:47:05] *** Joins: devslash (~devslash@46.232.211.210)
[12:47:55] <scream> libera is a fucking laughing stock in every corner of the internet and you are all clueless because of how hard you filtered your own shitstew of all the people who made it tolerable
[12:47:59] <Cork> ...
[12:48:14] *** jaawerth sets mode: +b $a:scream
[12:48:14] <Cork> woke up on the wrong side of the lemon today?
[12:48:37] *** scream was kicked by jaawerth (not behavior conducive to... well, anything)
[12:50:59] <jaawerth> I guess so!
[12:51:35] <jaawerth> they were in here earlier and were just talking code so I dunno what was going on there ¯\_(ツ)_/¯
[12:53:59] <codebam> can someone give me an example of why I need to use semicolons?
[13:00:22] <jaawerth> codebam: contrived, but http://ix.io/3QtW/js
[13:00:37] <jaawerth> whoops have a semi in there out of habit haha
[13:00:55] <jaawerth> but it's stll broken due to another missing
[13:01:04] <jaawerth> I'll upate it anyway though, lol
[13:01:51] *** jaawerth sets mode: -o jaawerth
[13:03:32] *** Joins: filename (~kilitary@kilitary.xyz)
[13:04:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:07:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:08:16] *** Joins: silverdust (~silverdus@user/silverdust)
[13:10:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[13:11:48] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:949:4916:4b4f:8874) (Ping timeout: 240 seconds)
[13:12:18] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[13:13:25] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[13:16:49] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[13:19:07] <codebam> jaawerth: oh okay cool I see, thank you
[13:19:15] <codebam> so is that broken because of the opening [?
[13:21:11] *** Joins: thiras (~thiras@user/thiras)
[13:22:19] <jaawerth> yep! it's one example of where the parser doesn't know you aren't trying to index the value before it without the semi to give it a hint. so automatic semicolon insertion there would end up putting it at the end of the forEach instead
[13:23:07] <jaawerth> a well-configured eslint will catch these ambiguous situations for you if ou want to limit your semis but the most effective thing to do is just to use them consistently
[13:25:22] *** Joins: nomic (~nomic@185.198.243.229)
[13:25:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:25:39] <jaawerth> they call those ASI hazards. most commonly when you have a statement without a semi and the next line starts with any of [(/+-
[13:27:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:27:48] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[13:29:51] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:949:4916:4b4f:8874)
[13:31:57] *** Joins: fef (~thedawn@user/thedawn)
[13:35:22] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[13:37:38] <pycode> hello, how to choose between Vue and React? we are developing a saas platform and i often see that React is used...but Vue is growing so ...please coul dyou give me your opinion ?
[13:41:02] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:41:40] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[13:44:50] *** Joins: filename (~kilitary@kilitary.xyz)
[13:46:33] <jaawerth> pycode: either would serve you fine. react being more popular gives it an edge in that the popularity means a larger ecosystem and community/more resources for/on it in general, but both are popular enough you'll find plenty in both. beyond that it's IMO mostly a matter of preferred style/design opinions and what you/your team are most familiar with. in your shoes i would probably lightly
[13:46:35] <jaawerth> tinker with both/run through couple tutorials?
[13:46:47] <teresko> if those are the only option, I would go with React
[13:47:12] <teresko> beacuse Vue community has a terrible tendency to dump css html and js in the same files
[13:47:17] <jaawerth> i haven't done a ton with vue myself, just some of the aforementioned tinkering. it seems easier to just pick up and use but it's a bit MVCish for my tastes, which is why I've mostly stuck with react between the two
[13:47:48] <jaawerth> react isn't super innocent on the inline CSS front either, though that's mostly been toned down
[13:47:50] <jwpapi> Cork sorry had to jump on a call trying to solve it with an lookupobject
[13:47:58] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[13:49:30] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:949:4916:4b4f:8874) (Ping timeout: 260 seconds)
[13:50:55] <pycode> ok
[13:50:59] <pycode> Ember?
[13:51:08] <teresko> lol
[13:51:20] <pycode> bad?
[13:51:38] <teresko> it was bad when Prototype was all the rage :D
[13:51:50] <teresko> it's still bad
[13:52:13] <pycode> ok so there are no other framework...i mean big framework like react/Vue out there
[13:52:16] <pycode> or not?
[13:52:50] <teresko> there is Angular, which is basically one the same level as React, just a different approach
[13:52:56] <jwpapi> I’m sorry I don’t get it. Everything just makes it more complex. I only neey `minus twice` those are functions that just work with the luxon DateTime object So I don’t want to create an object that has methods which requires a DateTime to work
[13:53:23] <teresko> I personally just write native ES2021
[13:55:24] *** Quits: dob1 (~dob1@user/dob1) (Read error: Connection reset by peer)
[13:55:43] *** Joins: dob1 (~dob1@user/dob1)
[13:55:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[13:56:09] <jaawerth> pycode: I believe whatever version ember's on these days is still used in certain enterprise places but personally I stopped paying attention to it after v1. angular is the "enterprise" du jour. basically it's more opinionated than either rect or vue and will impose more of a structure on code, which in theory will make things more predictable in large software suites. ymmv, i tend to prefer
[13:56:11] <jaawerth> modularity
[13:57:09] <pycode> ok
[13:57:31] <pycode> teresko, you go without framework? vanilla 100% ?
[13:58:03] *** Quits: src (~src@user/src) (Quit: Leaving)
[13:58:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:58:23] <teresko> well, I have a bit different usecase - my primary language is PHP and I use JS only for some fancy frontend enhancments
[13:58:39] <teresko> I do not write "enterprise frontend" =]
[13:58:54] <pycode> i think i will start studying react....i heard good things about vue but if react is widely used i think is the correct solution for me
[13:58:55] <pycode> ah ok
[13:58:56] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[13:59:13] <pycode> but as i wrote we are going to create a saas platform...with django (backend)
[13:59:31] <pycode> so i think a js framework is better to improve usability
[14:00:42] <teresko> keep in mind: there will be a penalty inherit in that choice - you will need to keep your framework version up to date (which might become a signifficant concern if your time-to-market is a year or so)
[14:01:20] <teresko> you do not want to deploy to production with "legacy version" of a given framework
[14:01:35] <pycode> teresko, why? is Reach a kind of wordpress that if i do not install a fix everything will explode? :D
[14:01:55] <Cork> jwpapi: not complete, but something like this is what i meant: https://jsfiddle.net/04ovp7yj/
[14:01:58] <jwpapi> Cork I don’t know I find Option A more clear. https://www.irccloud.com/pastebin/4cwhlZiw/
[14:02:11] <jaawerth> if you're planning on using django to render templates server-side then react and vue both may be an iffy choice - since both expect to handle rendering, either via clientside/single-page app or via server-side SSR with react (which is to say, running js server-side). granted you *can* run v8 from python or use node as a dedicated "view"service, and there may be django tooling for doing either
[14:02:13] <jaawerth> or both for all I kno
[14:02:30] <teresko> pycode: not for security reasons, but for "documentation, compability and hiring" reasons
[14:02:45] <pycode> ah ok
[14:03:16] <jwpapi> Cork I see what you did there
[14:03:47] <teresko> let's put it this way: if your framework's version is `current - 2`, it becomes somethong of a nightmare to maintain
[14:04:22] <pycode> teresko, i use django for api and SSR, so for classic pages like home,contact, service, django will provide the entire html.. but then for the user panel we will use API only
[14:04:28] <pycode> teresko, oh ok sure
[14:04:42] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[14:05:30] <pycode> we can use django for user panel too but the problem here is the usability, i heard strange things from designer and UX... so we need to load contents instead of refreshing pages etc..
[14:05:40] <teresko> JS frameworks move fast and break BC ;] ... it's a but more voletile that what you have grown used to in pythong community
[14:05:43] <jaawerth> jwpapi: that first code isn't going to work at all, btw
[14:05:47] <jaawerth> option A, I mean
[14:06:25] <jwpapi> why not ? I haven’t copied `generateDateParams`
[14:06:38] <jaawerth> those const declarations are block-scoped
[14:06:54] <jwpapi> This is the one I’m opting for now https://www.irccloud.com/pastebin/HbRfP35D/
[14:07:06] <jaawerth> you'd want a let to declare outside of the if block and just assign to it in the condition branches
[14:07:16] <jwpapi> jaawerth: oh shit
[14:07:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:07:42] <pycode> teresko, do you think i can achive those thing using vanilla js too ?
[14:07:57] <jaawerth> jwpapi: but yes I was about to suggest a lookup object ;-)
[14:08:13] <jwpapi> that was Cork ’s idea
[14:08:27] <jwpapi> is a lookup object common?
[14:08:36] *** Quits: Flannel (~flannel@user/flannel) (Ping timeout: 240 seconds)
[14:09:10] * Cork shrugs
[14:09:12] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[14:09:25] <Cork> i use it a lot, makes when you do the same thing a lot of times easier to read
[14:09:46] <jwpapi> ahh so whenever I would like to use a switch I do a lookup object instead
[14:09:53] <teresko> pycode: you can, but do you want to invest the effor and do you have (and will have) expert developers to code it - I would still recommend going with a mainstream framework, but you just need to be aware that "keeping it up to date" will be something you need to keep an eye on
[14:10:03] *** Quits: nomic (~nomic@185.198.243.229) (Quit: Leaving)
[14:10:06] <jaawerth> it isn't *always* the best solution but it certainly can be
[14:10:08] <Cork> jwpapi: if the code you run in the switch cases are the same except for the data
[14:10:15] <Cork> else no, then a switch is better
[14:10:33] <jwpapi> Yes it’s definitely a good addition for my repertiore
[14:10:40] <jwpapi> I had the idea before, but it felt weird to me tbh
[14:10:53] <jwpapi> I always felt like I have to write a function
[14:11:06] <jaawerth> or a dispatch function that does a lookup with fallback. if I needed to make the options easier to vary beyond what youv'e got htere I'd probably turn that object into an obejct of composable functions you could use to build up the timeframe objects cleanly
[14:11:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:11:48] <teresko> pycode: think on it from your backend experience - can you make an MVC-ish site without Django? Are you good enough architect to do it and will the rest of your team be good enough to contribute?
[14:13:01] <pycode> ok got it
[14:13:36] <codebam> can I ask a question about CI here?
[14:13:42] <teresko> I assume you basically have a team of senior developer in backend, but do you also have senior-grade team of frontend devs :)
[14:13:48] <codebam> it's not really javascript related but I don't know where to ask
[14:14:06] <jwpapi> Cork: There is no way to handle a default case with a loookup object or?
[14:14:26] <codebam> does anyone know where it's expecting to find this API token? I probably deleted it. https://app.circleci.com/pipelines/github/codebam/resume/54/workflows/35d0f81d-449d-43a3-8070-ccdca6ef98ab/jobs/48
[14:14:44] <Cork> jwpapi: it is a key lookup, so you would have to make it in the lookup
[14:15:08] <Cork> it is often not worth it cause it makes reading the configuration object harder
[14:15:09] <jwpapi> Cork: Can you elaborate?
[14:15:43] <Cork> timeframes[lookupMapper(timeframe).minus]
[14:15:55] <Cork> opps
[14:15:59] <Cork> * timeframes[lookupMapper(timeframe)].minus
[14:16:08] <jwpapi> I see a lot of stuff where I can refactor into lookups in my code. Eventually I’ll make a lookup file for now and some stuff later has to be database requests
[14:16:35] <jwpapi> Cork: I understand If I want I build a function around it which checks for valid entries
[14:16:38] <jwpapi> if I want to be defensive
[14:16:56] <Cork> if the values doesn't exist you can do things like obj[key || "defualt"]
[14:17:22] <jaawerth> jwpapi: also it's odd that youo're mixing mixing snake_case and kebab_case in those query params. and I'd suggest using the URL api to build it
[14:17:25] <Cork> just be careful so you don't make it harder to read just to save on a few entries in the object
[14:17:43] <pycode> teresko, i do backend things with django.... i just trying to understand the needs because writing APIs is ok for me... but JS framework is a complete new things for me so i need to find someone
[14:17:47] <jwpapi> Cork I understand
[14:18:01] <pycode> and maybe learning it a bit to understand the main concepts
[14:18:12] <jwpapi> jaawerth: I’m using camelCase, but the api I’m asking expects kebap_case
[14:18:32] <jaawerth> you're miixing kebab and snake though
[14:18:51] <jwpapi> ahh I see
[14:18:51] <jaawerth> in the string at the top
[14:19:02] <jwpapi> omg lookupobjects open a whole new world to me
[14:21:03] <jwpapi> you mean `this_month`?
[14:22:28] <jaawerth> I mean you have date_min as one param and date-max as another
[14:22:34] <jwpapi> ohhh
[14:22:40] <jwpapi> that’s a true mistake
[14:22:42] <jwpapi> thanks
[14:22:50] <jaawerth> also I'd use URLSerchParams
[14:22:53] <jaawerth> n> const {URLSearchParams} = require('url'); const paramsFromObj = (pObj = {}) => Object.entries(pObj).reduce(p, ([k, v]) => { p.set(k, v); return p; }, new URLSearchParams()); paramsFromObj({'a-b': 1, 'c-d': 2}).toString()
[14:22:54] <jellobot> (fail) ReferenceError: p is not defined
[14:22:58] <jaawerth> woops
[14:23:07] <jaawerth> n> const {URLSearchParams} = require('url'); const paramsFromObj = (pObj = {}) => Object.entries(pObj).reduce((p, [k, v]) => { p.set(k, v); return p; }, new URLSearchParams()); paramsFromObj({'a-b': 1, 'c-d': 2}).toString()
[14:23:08] <jellobot> (okay) 'a-b=1&c-d=2'
[14:23:27] <jwpapi> so much to learn lol
[14:23:39] <jaawerth> or you can just use it direct, whatev. either way, IMO it's preferable to directly interpolating a string since it'll handle escaping and stuff for you as well
[14:24:35] <jaawerth> or if you use the URL constructor you can later do url.searchParams = searchParamsInstance without even turning it into a string first
[14:24:40] <jaawerth> etc
[14:24:42] <jaawerth> !mdn URL
[14:24:43] <jellobot> jaawerth, This article discusses Uniform Resource Locators (URLs), explaining what they are and how they're structured. https://mdn.io/URL
[14:24:52] <jaawerth> that's not it
[14:24:56] <jaawerth> oh wait yes it is
[14:25:33] <jaawerth> I mean you can do the string thing for now if you wanna learn that stuff later
[14:25:40] <jaawerth> using the URL api will just be more robust and flexible
[14:25:59] <jwpapi> yes I changed to the API
[14:26:12] <jwpapi> https://www.irccloud.com/pastebin/PCDhLNUC/
[14:29:48] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 240 seconds)
[14:34:32] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[14:35:43] *** Joins: maze (~internet_@103.53.200.14)
[14:38:54] <jaawerth> close but sadly the constructor doesn't take args, you'll need to use .set(key, val) or .add(key, val) to build it up - hence my little util function
[14:40:35] *** Joins: cotko_ (~cotko@155.pool85-49-78.dynamic.orange.es)
[14:40:57] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Read error: Connection reset by peer)
[14:41:29] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[14:41:56] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[14:42:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[14:43:35] <codebam> how can I remove spaces from 'text    remove spaces before this' ?
[14:43:46] <codebam> or well, all except 1
[14:43:56] <codebam> so that I can still .split(" ")
[14:46:58] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1632:2957:5a3c:8d2e) (Ping timeout: 250 seconds)
[14:49:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[14:49:29] <blueagain> codebam: why don't you just split and remove empty string elements? then you'd have all the words
[14:49:41] <blueagain> well, not remove, 'filter'.
[14:50:30] <codebam> blueagain: I want to be able to pass 'text    more     text here' and get 'text more     text here' because I'm setting a key
[14:50:41] <codebam> so I actually want the other spaces
[14:50:57] <blueagain> you just want to remove a group of spaces *somewhere* in your string?
[14:51:00] *** Joins: silverdust (~silverdus@user/silverdust)
[14:51:04] <codebam> yes after the first word
[14:51:20] *** Quits: karabaja4 (~karabaja4@dh207-94-120.xnet.hr) (Ping timeout: 272 seconds)
[14:51:41] <blueagain> wouldn't it better to work with more structured data, this sounds pretty random to me.
[14:52:13] <codebam> well a user is passing '/set     test ok' and it's throwing an error because it can't set the key ""
[14:52:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:52:32] <codebam> so I want to set the key test by removing those spaces
[14:52:55] <blueagain> oh, you mean the user could pass something like '/set    test     ok'?
[14:53:05] *** Joins: teut (~teut@122.161.83.81)
[14:53:24] <codebam> yes and that should set 'test' to '    ok'
[14:53:33] <jwpapi> jaawerth https://www.irccloud.com/pastebin/MGRbLXrc/
[14:53:37] <jwpapi> that’s on mdn website
[14:53:48] <teut> https://dpaste.org/65OP
[14:53:56] <blueagain> codebam: then why don't you just remove the /set at the beginning and trim the string? oO
[14:54:10] <blueagain> or lefttrim if you care for spaces at key's end
[14:54:13] <teut> in next I  wrote this following piece of code to include the header
[14:54:22] <codebam> well it's an arg I pass to my other function to know what the command is
[14:54:58] <codebam> I'm already using .trimStart() to trim leading spaces
[14:54:59] <teut> but I am not able to understand what is  children?
[14:55:18] *** Quits: maze (~internet_@103.53.200.14) (Quit: Leaving)
[14:55:31] <blueagain> codebam: but you pass the arg in a structured way, no? something like ['set', 'params']?
[14:55:37] <codebam> yes
[14:55:42] <codebam> I'm doing
[14:55:53] <codebam> query.trimStart().split(" ")
[14:55:53] <teut> what should be the children array which I am mapping over?
[14:56:24] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[14:56:38] <teut> it's working correctly and I can see the  "margin bottom  -auto"   or mt-auto    effect
[14:56:46] <blueagain> codebam: you could do it with a regex, or just look for the first occurrence of ' ' within the command and split by it
[14:56:51] <jaawerth> jwpapi: ah, my bad. good, it SHOULD work that way, lol
[14:57:18] <teut> so it means the Header is the part of the children  but  top level component is <div className="flex flex-col p-4">
[14:57:27] <blueagain> codebam: splitting is an overkill here imho
[14:57:40] <teut> so there should be only 1 child , isnt it?
[14:57:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[14:58:49] <blueagain> codebam: you're only interesting and "left" and "right". that's a classic case for a regex as I said, slicing from 0 to i and then from i+1.
[14:58:54] <blueagain> interested in*
[14:59:01] <blueagain> or slicing*
[14:59:34] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:00:37] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[15:00:58] <codebam> okay I'm trying to do it with regex
[15:04:12] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[15:04:37] *** Joins: karabaja4 (~karabaja4@dh207-93-84.xnet.hr)
[15:04:53] <jaawerth> I personally would have no problem with either split or regex approach. I wouldn't slice though by string index though, I'd use two capture groups with string.match
[15:05:03] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[15:05:22] <blueagain> codebam: maybe something like this? const [, command, args] = "/set    test  test2 ".match(/^\/([a-z]*)(.*)$/)
[15:05:44] <blueagain> then you only have to trim the args.
[15:06:02] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[15:07:33] <OnkelTem> You're gonna hate me soon probably. I'm preparing "An introduction to IRC" to the twitter ~~flock~~ folks.
[15:08:06] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:08:49] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[15:09:01] *** Joins: pycode (~pycode3@2001:b07:5d28:551:202d:df41:5a0c:e343)
[15:09:22] *** Joins: dob1 (~dob1@user/dob1)
[15:09:28] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:10:59] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[15:11:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:11:42] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:13:12] <codebam> ^([^\s]*)(\s*)
[15:13:14] <codebam> got it
[15:13:24] <codebam> then I can replace with "$1 "
[15:15:18] <blueagain> that only captures non-space and space characters though? you really wanna allow anything as your command?
[15:15:23] <blueagain> I'd limit it to a-z
[15:15:52] <blueagain> That way you whitelist the space of your commands
[15:16:51] <gde33> For laughs, the last decade or so, I've been looking for an excuse to use xpath. It just struck me that lookups with objects and array index are really limited compared to it? One should probably > 0% of the time create an xml and use the powers of xpath on it.
[15:17:57] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[15:17:57] <blueagain> gde33: I never really did get the point of xpath. Seems to me like a poor man's replacement for an actual database (a tool that is made to handle complex lookups).
[15:18:27] <gde33> blueagain: you have to imagine json doesn't exist (as it didn't)
[15:18:51] <blueagain> json didn't, but sql-based dbs have been around for a while
[15:18:55] <Maxdamantus> I imagine it would be used as the XML alternative to `jq`, which I use all the time.
[15:19:16] <gde33> blueagain: but your analogy is reasonable. For small data sets a db would be over the top.
[15:19:33] <gde33> you can do queries like /bookstore/book[price>35.00]
[15:19:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:202d:df41:5a0c:e343) (Ping timeout: 252 seconds)
[15:19:52] <Maxdamantus> .bookstore.book | select(.price > 35)
[15:20:27] <Maxdamantus> or maybe: .bookstore[].book[] | select(.price > 35)
[15:20:58] <blueagain> I guess I look more at xml as a transport format than a persistant data format, but what you say makes sense as well
[15:21:47] <Maxdamantus> Even if it is a transport format, it's often useful being able to quickly do queries on some test data that has gone into your system.
[15:21:54] <Maxdamantus> or test data that has come out.
[15:22:39] <blueagain> Yeah, for small lookups sure. But as soon as it gets complex, I'd use a real database
[15:22:48] *** Joins: p-i-_ (~Ohmu@183.89.27.225)
[15:23:21] <Maxdamantus> If I used XML more often, I would probably look into XPath. In the rare cases that I do query a bunch of XML, I'll use grep/sed, which has a bunch of caveats.
[15:23:56] <blueagain> then again, sqlite is also very nice.
[15:24:26] <Maxdamantus> but sqlite doesn't magically make SQL queryable.
[15:24:34] <Maxdamantus> er, XML queryable*
[15:24:57] <Maxdamantus> you'll use some tool to load the XML into the database, which will be designed around some particular use cases.
[15:25:17] <blueagain> sure. If you already have xml, querying upon it makes sense with the tools that were designed for it.
[15:25:43] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:91d3:ad70:883:d1c2) (Ping timeout: 250 seconds)
[15:25:44] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[15:25:48] <Maxdamantus> and what if you've got 1000 XML files, are you going to create a separate database for each? Seems like it would just increase the overall processing time.
[15:26:47] <blueagain> no contended. but OP said you should "create an xml use xpath for it". If you already creating a container to hold your data, you might as well use a real db.
[15:26:50] <blueagain> not*
[15:27:47] <blueagain> since you already incur the debt of converting your data to xml (or alternatively to a database format).
[15:28:14] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[15:28:42] *** Quits: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney) (Ping timeout: 272 seconds)
[15:30:46] *** Quits: D4mned (~D1mned@212.101.234.89) (Remote host closed the connection)
[15:31:04] *** Joins: D4mned (~D1mned@212.101.234.89)
[15:33:10] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:37:05] <burakcank> hi, I was looking at the history api of chrome. I am confused about the following. I push a history entry on top of my history with pushState("state", null, "some-url"). now when I `history.back()`, window.onpopstate event is being fired. In this event, I was expecting to get the state of the popped object, but it seems like I do instead get the state of my current history object.
[15:38:56] *** Joins: trevors (~trevors@user/trevors)
[15:39:56] <burakcank> does that sound counter-intuitive to you too ?
[15:41:44] *** Quits: D4mned (~D1mned@212.101.234.89) (Quit: Leaving)
[15:42:17] <gde33> blueagain: the useful parts of sql overlap with xpath but they are kinda different
[15:42:43] <gde33> blueagain: xml is much into parent grandparent child relations
[15:44:32] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 272 seconds)
[15:44:55] *** Joins: pmercado (~pmercado@186.107.58.161)
[15:47:12] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[15:47:19] <codebam> how do I replace s/^([^s]*)(s*)/$1 /g using .replace() ?
[15:47:44] <codebam> I tried .replace("^([^s]*)(s*)", "$1 ") but that didn't work
[15:48:10] <codebam> oh it's not a string
[15:48:12] <codebam> weird
[15:50:29] *** Joins: eugercek (~user@user/eugercek)
[15:50:51] <codebam> it's not matching properly though. I'm using .replace(/^([^s]*)(s*)/, "$1 ")
[15:53:23] <blueagain> codebam: why are you specifically catching a group you're not interested in?
[15:54:04] <blueagain> codebam: did you look at the regex I suggested to you earlier? It worked fine for me
[15:54:57] <codebam> blueagain: anything except space
[15:55:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:55:48] <codebam> I used this
[15:56:11] <codebam> /^([^\s]*)(\s*)/gm
[15:56:25] <codebam> it works
[15:56:31] *** Joins: VoidSync (~sync@user/voidsync)
[15:59:19] <blueagain> codebam: you're trying to capture the spaces?
[15:59:39] *** Joins: earthToAdam (~user@84.9.160.201)
[16:01:20] <codebam> no actually I guess I don't need the second group
[16:01:27] <codebam> good point thanks
[16:01:56] <earthToAdam> Is there a library that will scan your JS code and then select polyfills for you, based on which browsers you want to support?
[16:02:37] <earthToAdam> ...and then spit out a minified version of these patches?
[16:02:54] *** Quits: clamiax (~clamiax@net-93-65-240-243.cust.vodafonedsl.it) (Ping timeout: 272 seconds)
[16:05:48] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[16:07:14] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Remote host closed the connection)
[16:08:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:08:47] <blueagain> earthToAdam: you can use babel and define the target platforms.
[16:09:47] *** Joins: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it)
[16:11:13] *** Joins: han-solo (~hanish@user/han-solo)
[16:12:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:12:51] <earthToAdam> blueagain perfect! Thanks!!
[16:13:34] <codebam> I defined a command like this, is there a way to log where it's being called from? export const log = <T>(obj: T): T => console.log(obj) === undefined && obj
[16:13:41] <codebam> s/command/function
[16:14:44] <Maxdamantus> codebam: console.log(new Error());
[16:14:55] <codebam> okay thank you
[16:15:30] <codebam> I'm trying to trace where one of my logs was null
[16:15:41] <codebam> so I just want to see where they all are
[16:16:32] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:17:01] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[16:17:30] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:18:05] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[16:18:47] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:19:14] *** Joins: bluehoney (~bluehoney@gateway/vpn/pia/bluehoney)
[16:19:21] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[16:19:58] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:20:13] *** Joins: dob1 (~dob1@user/dob1)
[16:20:15] *** Joins: nomic (~nomic@185.198.243.229)
[16:20:41] <codebam> that's not helpful, it doesn't trace where error is being called
[16:21:02] <codebam> new Error().toString() is just "Error"
[16:22:51] *** Quits: dob1 (~dob1@user/dob1) (Client Quit)
[16:23:03] *** Joins: henry40408 (~henry4040@175.181.177.116)
[16:23:22] *** Quits: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com) (Quit: leaving)
[16:23:48] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[16:27:21] <blueagain> codebam:
[16:27:53] <blueagain> codebam: look at the error object
[16:28:30] <codebam> there's just message and name
[16:28:38] *** Quits: suss (~user@user/suss) (Ping timeout: 256 seconds)
[16:28:43] <codebam> everything else is non-standard
[16:30:12] *** Quits: p-i-_ (~Ohmu@183.89.27.225) (Read error: Connection reset by peer)
[16:30:50] *** Joins: p-i- (~Ohmu@2403:6200:8978:7799:b844:bdaf:8ab7:ed96)
[16:34:41] *** Joins: bliminse (~bliminse@host109-152-150-162.range109-152.btcentralplus.com)
[16:40:12] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:7799:28cf:5a29:7ce3:efd1)
[16:40:49] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[16:41:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[16:42:01] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:42:14] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:42:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:43:25] *** Quits: p-i- (~Ohmu@2403:6200:8978:7799:b844:bdaf:8ab7:ed96) (Ping timeout: 256 seconds)
[16:43:39] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:48:38] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[16:48:54] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[16:50:22] *** Joins: henry40408 (~henry4040@175.181.177.116)
[16:52:30] *** Joins: thelounge5047 (b9dc653d@67.205.143.82)
[16:53:34] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[16:55:53] *** Quits: Junxter (~Junxter@222.95.164.193) (Read error: Connection reset by peer)
[16:56:14] *** Joins: Junxter (~Junxter@222.95.164.193)
[17:00:15] *** Joins: silverdust (~silverdus@user/silverdust)
[17:03:19] <FightingFalcon> is js minification necessary when you have gzip?
[17:03:50] *** Joins: masoudd (~masoudd@user/masoudd)
[17:05:28] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[17:07:41] <Cork> FightingFalcon: not really, it will reduce the amount of ram it takes in the browser a little, but that's about it
[17:07:56] *** Joins: RougeR (~rougex250@user/rouger)
[17:08:13] <FightingFalcon> Why does wordpress minifies all its files then?
[17:08:27] *** Joins: dob1 (~dob1@user/dob1)
[17:08:56] <Cork> they most likely combine multile files and just use a minifier to do it (also legacy)
[17:08:58] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[17:09:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:11:56] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[17:12:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:14:21] *** Joins: pycode (~pycode3@2001:b07:5d28:551:e89:bf0d:3aee:c475)
[17:15:48] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[17:17:58] *** Quits: nomic (~nomic@185.198.243.229) (Quit: Leaving)
[17:23:43] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb)
[17:24:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:26:17] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b876:cfb6:6a14:5ce2)
[17:27:28] *** Joins: _sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb)
[17:28:13] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b876:cfb6:6a14:5ce2) (Client Quit)
[17:32:48] <yolo> a html question, i have multiple SSG sites and I would like to 'merge' them under one, by adding a horizontal navbar at the top of each page(similar to w3schools.com's layout), is iframe the way to do it?
[17:38:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[17:38:45] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb) (Quit: Leaving)
[17:38:45] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:3169:1651:ead:5ffb) (Quit: Leaving)
[17:40:29] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:40:54] *** Joins: filename (~kilitary@kilitary.xyz)
[17:42:57] <ox1eef> i'm tempted to start a manifest v3 API only to be discouraged by the limitations i'll run into, it is remarkable that chrome.proxy is basically unusable with this new manifest version.
[17:46:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:48:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:48:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:48:11] *** Joins: wroathe (~wroathe@user/wroathe)
[17:49:28] *** Joins: silverdust (~silverdus@user/silverdust)
[17:51:43] <prodigius> yolo, it is a way.
[17:57:17] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:57:29] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4a7:dec3:a543:4b87)
[17:57:42] *** Joins: thiras (~thiras@user/thiras)
[18:00:24] *** Quits: thelounge5047 (b9dc653d@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[18:02:42] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:b876:cfb6:6a14:5ce2)
[18:02:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[18:03:53] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 250 seconds)
[18:04:57] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[18:08:18] <yolo> ok, that seems the 'easiest' approach to me, thanks.
[18:08:37] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:09:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:12:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:16:29] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:19:05] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[18:19:25] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:20:04] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:20:32] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:23:57] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[18:25:56] *** Joins: pulse (~pulse@user/pulse)
[18:26:02] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 272 seconds)
[18:26:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:28:20] *** Joins: vysn (~vysn@user/vysn)
[18:31:36] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[18:31:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[18:32:04] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:32:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:32:05] *** Joins: wroathe (~wroathe@user/wroathe)
[18:35:35] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[18:36:05] *** Joins: de-facto (~de-facto@user/de-facto)
[18:36:15] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[18:36:30] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[18:40:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:40:21] *** Joins: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[18:42:37] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:42:39] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[18:44:20] <ljharb> jwpapi: switch is always better as an if/else or an object lookup
[18:44:31] *** Joins: codebam (~codebam@user/codebam)
[18:44:33] *** Quits: codebam (~codebam@user/codebam) (Client Quit)
[18:44:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[18:45:02] *** Joins: crashrep (~crashrep@user/crashrep)
[18:45:42] *** Joins: stenno (~stenno@user/stenno)
[18:51:09] *** Quits: teut (~teut@122.161.83.81) (Ping timeout: 256 seconds)
[18:53:33] *** Joins: kadobanana (~mud@user/kadoban)
[18:53:59] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 256 seconds)
[18:58:59] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[19:00:31] *** Joins: earthToAdam (~user@84.9.160.201)
[19:02:01] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[19:04:53] <ThePendulum> ... since when did the consensus on that change?
[19:05:36] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 256 seconds)
[19:06:34] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 272 seconds)
[19:06:43] *** Joins: gingersnapper (~gingersna@bras-base-hmtnon0109w-grc-28-142-113-127-140.dsl.bell.ca)
[19:06:59] <samsch> There's not a consensus on that one, as far as I know. It's a strong opinion of his
[19:07:22] <samsch> And I mean, `switch` sucks, but the alternatives don't always suck less
[19:08:17] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[19:10:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:10:31] *** Joins: riskoir (~karaixx@user/riskoir)
[19:10:32] *** Joins: vysn (~vysn@user/vysn)
[19:11:59] <jwpapi> ljharb okay thank you. Is there a style guide you recommend?
[19:12:08] <jwpapi> So I don’t always have to ask here
[19:12:31] <ljharb> jwpapi: Airbnb’s, of course
[19:12:45] <jwpapi> ljharb: thank you
[19:12:48] <ljharb> samsch: there’s no consensus on much of anything
[19:13:02] <ljharb> samsch: and the only place I’d relax on a switch statement is one where every case is a return
[19:13:15] *** Joins: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281)
[19:13:20] <ljharb> ThePendulum: that hasn’t changed in a long time afaik
[19:13:28] <blueagain> jwpapi: probably more important to be consistent, the rest is opinion. I use eslint for consistency in my code
[19:13:43] *** Joins: Rockwood (~Rocky@user/rocky)
[19:13:48] <blueagain> though eslint sucks major time with its feature support.
[19:13:54] <ljharb> the reason I’m championing pattern matching is to kill switch
[19:13:59] <ljharb> blueagain: what do you mean
[19:14:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[19:14:19] <ljharb> blueagain: it sucks they don’t support shipped stage 3 features, but you can use the Babel eslint parser
[19:14:20] <blueagain> ljharb: it dies on static members, and countless other features
[19:14:36] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[19:15:22] <ljharb> blueagain: no it doesn’t
[19:15:28] <riskoir> why window.addEventListener('load', function() {
[19:15:28] <riskoir>   window.frames["frame"].document.getElementById("product_id").value="1234";
[19:15:28] <riskoir> }, false); does not work?
[19:15:30] <ljharb> blueagain: perhaps you failed to set ecmaVersion to 2022
[19:15:38] <ljharb> riskoir: don’t paste multiple lines into irc
[19:15:49] <riskoir> ljharb, sorry, it was not my intention
[19:15:51] <ljharb> riskoir: window.frames is ancient and deprecated
[19:16:17] <samsch> ljharb, that's blaming the user for a tool fault. There's no reason eslint can't default to the latest ES.
[19:16:20] <riskoir> I see, what's the alternative way of accessing an element from a frame
[19:16:21] <ljharb> blueagain: class fields only hit stage 4 in ES2022. Before that, you needed the Babel parser to handle it
[19:16:21] <blueagain> ljharb: I mean private members, sorry.
[19:16:32] <blueagain> ljharb: don't work with es2022
[19:16:33] <ljharb> samsch: yes there is, that would be a very dangerous default. It is proper it defaults to es5
[19:16:37] <ljharb> blueagain: yes,they do
[19:17:04] <ljharb> blueagain: if you show me an example we can get eslint to fix it, but i *use* it on private fields, so I’m confident
[19:17:11] <teresko> riskoir: the major point would be to "not use frames"
[19:17:20] <blueagain> ljharb: let me check
[19:17:28] <ljharb> riskoir: yes, don’t use frames at all, its not the 2000s
[19:17:46] <ljharb> blueagain: note that you need eslint 8, but that’s been out awhile
[19:17:57] <samsch> It doesn't make sense to default to a 7 year old version. If that makes even slight sense compared to defaulting to current (which it doesn't), then it should default to *not working at all* unless you set a version.
[19:18:10] <blueagain> ljharb: I use 8.9.0
[19:18:40] <ljharb> samsch: it absolutely makes sense. It *should* default to es3. It should be the safest (most compatible) thing, so that you have to explicitly exclude browsers.
[19:19:06] <ljharb> samsch: I’d be fine with it not working at all sans a version, too. But that’s the only safe alternative; it should never default to latest
[19:19:13] <ljharb> blueagain: then it definitely works.
[19:19:17] <riskoir> teresko, I understand, but I have no other option here.
[19:19:27] <ljharb> blueagain: share some code, I’d love to see where it doesn’t
[19:19:29] <blueagain> ljharb: oh, thank you. I changed es2021 to es2022, and it works.
[19:19:36] <ljharb> there we go, glad to hear it
[19:19:46] <blueagain> it doesn't work on import asserts though :(
[19:20:28] <samsch> eslint is for checking for possible errors in your code, having it not be able to check modern JS by default just means it's automatically broken for all users. You transpile to support old browsers, and you don't lint the transpiled code.
[19:20:46] <blueagain> it's node, I don't need to support *any* browser.
[19:20:51] <ljharb> using modern js when you support older browsers than that is an error
[19:21:12] <ljharb> to be honest, the *best* thing for eslint would be to take a list of engine targets, only, and required
[19:21:25] <ljharb> then you’d just tell it what you support, and it lints for that
[19:21:25] <samsch> Do you lint your transpiled output?
[19:21:37] <ljharb> no, but eslint can’t assume that users are transpiling
[19:21:40] <samsch> And like... do you use a transpiler for modern syntax?
[19:21:55] <samsch> I know you do, and that's standard
[19:21:58] <ljharb> not in most of *my* projects.
[19:22:08] <ljharb> so no, it’s not standard, and you’re wrong here.
[19:22:34] <ljharb> and, the support level of the transpiler input depends heavily on which Babel version you’re using and what your Babel config is, all things eslint can’t know
[19:22:53] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 256 seconds)
[19:22:53] <blueagain> I think though that import asserts aren't an issue with eslint
[19:22:57] <blueagain> I think acorn doesn't support them yet
[19:23:01] <ljharb> there exists no safe assumption except “maximal compat” or “fail immediately without an explicit target”
[19:23:11] <ljharb> blueagain: correct; those aren’t stage 4 yet
[19:23:18] <ljharb> blueagain: but you shouldn’t have those in your code anyways
[19:23:40] <blueagain> well, I use current node, so I can't use json imports without asserts
[19:23:45] <ljharb> blueagain: they’re only needed for native ESM in browsers (and sadly, in node, but hopefully that changes) and native ESM only has downsides.
[19:23:46] <blueagain> it worked until 17.2 or so
[19:23:59] <ljharb> blueagain: don’t use native ESM with node; just use Babel and CJS
[19:24:06] <ljharb> it’s quite superior, and faster
[19:24:22] <ljharb> but, you can still use Babel’s eslint parser for import assertions
[19:24:48] *** Quits: riskoir (~karaixx@user/riskoir) (Quit: Leaving)
[19:25:17] *** Quits: friend (~friend@2601:c1:c000:e8::1002) (Remote host closed the connection)
[19:25:23] *** Joins: benni (~benni@p5dc1c909.dip0.t-ipconnect.de)
[19:25:40] *** Joins: cos (~cos@user/cos)
[19:26:12] <blueagain> ljharb: why should I stick to a standard that is only supported by node? if I use esm I'll make my code better portable to deno or other runtimes
[19:26:31] <blueagain> and I'll use an official standard.
[19:26:42] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:27:47] <banana_> hey I realize this question is a competency with js question, but anyway what's a nice way of filtering out repetitive objects in an array, based on a unique ID property
[19:28:23] <banana_> using a Set based on the ID, and then covert that back to an array?
[19:29:00] <ljharb> blueagain: ESM is largely implementation-dependent, and because native ESM is slower. And, you’re only using node, so why do you care about standards from outside node?
[19:29:17] <banana_> actually idk if you can map in a Set object
[19:29:26] <banana_> so wondering what you guys do for that
[19:29:28] <ljharb> blueagain: and deno is trash, so you shouldn’t want that as a goal - but you already get that if you author in ESM and transpile to CJS, because the input is still ESM
[19:29:37] <ljharb> banana_: Array.from
[19:29:59] <blueagain> ljharb: that's the point, I'm not sure I'll stick to node going forward, and I'll like to keep my code portable
[19:30:03] <ljharb> blueagain: also your code won’t be portable if you use any node-only globals, or core modules, or npm deps, so that’s just a false strawman
[19:30:25] <banana_> like for the array [{ id: 2 }, {id: 2}] how do you filter out the second object, so there's distinct objects based on the id field
[19:30:27] <ljharb> it’s not possible to write useful node code that’s seamlessly portable to other runtimes, because there’s no other runtimes that have node’s capabilities
[19:30:43] <ljharb> banana_: use an object map
[19:31:12] <ljharb> banana_: Object.entries(Object.fromEntries(arr.map(x => [x.id, x]))
[19:31:16] <banana_> oh ok then covert that Map instance back to an array by it's values
[19:31:22] <cos> does anyone know how to intercept, read, and store data being sent to and from an Electron app?
[19:31:28] <ljharb> blueagain: also #node.js exists if you weren’t aware
[19:31:43] <blueagain> ljharb: any opinions on why deno is trash?
[19:31:59] <banana_> thanks
[19:32:01] <ljharb> blueagain: yep! It’s permission model is the same ineffective one Android uses, and https imports are inherently unsafe
[19:32:15] *** Joins: earthToAdam (~user@84.9.160.201)
[19:32:18] <ThePendulum> ljharb: I don't remember ever being able to paste a switch statement in an irc channel without getting berated for it. and I don't see why the arguments against it wouldn't still be relevant
[19:32:34] <ljharb> blueagain: and, “native” support for TS is a very bad idea; deno already stopped using TS for its own code because it was so unreliable
[19:32:48] <ljharb> ThePendulum: they remain relevant, yes, eternally :-)
[19:32:59] <cos> at the very least, does anyone know how to do the equivalent of "view page source" for an Electron app?
[19:33:02] <ljharb> ThePendulum: and once pattern matching advances, there will never again be a justification to use switch
[19:33:22] <Alexendoo> Android's permissions aren't as bad as denos
[19:34:12] <ljharb> lol
[19:34:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[19:34:17] <banana_> ljharb: if I want to support flat() for IE should I use your polyfill package
[19:34:37] <banana_> just wondering or is there something else, another newb question
[19:34:51] <cos> is there a better channel in which to ask questions about Electron?
[19:34:57] <ljharb> banana_: yes, imo
[19:35:07] <ljharb> banana_: core-js has one too
[19:35:21] <ljharb> cos: #node.js maybe, but electron has a slack or a discord or something
[19:36:09] <cos> thanks!
[19:36:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:37:17] *** Joins: codebam (~codebam@user/codebam)
[19:39:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[19:39:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:41:17] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Read error: Connection reset by peer)
[19:42:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[19:43:03] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:45:16] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[19:46:35] *** Joins: suss (~user@user/suss)
[19:46:41] *** Joins: zebrag (~chris@user/zebrag)
[19:48:29] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:48:40] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:48:56] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:49:15] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[19:53:03] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[19:55:12] *** Joins: voltage_ (voltage@user/voltage)
[19:56:58] *** Joins: codebam (~codebam@user/codebam)
[19:57:03] *** Joins: filename (~kilitary@kilitary.xyz)
[19:59:16] *** Joins: Rockwood (~Rocky@user/rocky)
[20:00:30] <blueagain> ljharb: it's funny, because the most common argument I hear in favour of deno is that http imports make you *less* dependent on a central repo.
[20:00:40] <blueagain> (not saying I agree, but that's what I hear)
[20:01:44] <Rockwood> o/
[20:02:54] *** Quits: bambanxx (~bambanx@2800:150:106:1061:c008:90ed:2a05:281) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:03:27] *** Joins: crashrep (~crashrep@user/crashrep)
[20:04:23] *** Joins: Deneb (~johnch@245.82.159.143.dyn.plus.net)
[20:05:21] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 245 seconds)
[20:05:51] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[20:06:17] *** Quits: pycode (~pycode3@2001:b07:5d28:551:e89:bf0d:3aee:c475) (Ping timeout: 256 seconds)
[20:08:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[20:08:41] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[20:10:09] *** Joins: mintograde (~mintograd@47.201.5.61)
[20:10:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:13:22] *** Joins: LiftLeft (~LiftLeft@dur-dhcp-1-80.dsl.airstreamcomm.net)
[20:14:14] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:14:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:16:45] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:17:11] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[20:18:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[20:21:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:22:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:24:55] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:27:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[20:37:41] *** Joins: Akiva (~Akiva@user/Akiva)
[20:38:01] *** Joins: earthToAdam (~user@84.9.160.201)
[20:38:31] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:39:11] *** Joins: src (~src@user/src)
[20:39:53] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:41:06] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:41:42] *** Joins: trevors (~trevors@user/trevors)
[20:42:47] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 256 seconds)
[20:42:53] <ljharb> blueagain: sure, but it makes you more dependent on dns, which is the most insecure part of the web
[20:43:27] *** Quits: benni (~benni@p5dc1c909.dip0.t-ipconnect.de) (Quit: Client closed)
[20:44:06] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 245 seconds)
[20:44:14] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:45:07] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[20:45:23] *** Joins: crashrep (~crashrep@user/crashrep)
[20:46:37] *** Quits: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[20:48:12] *** Quits: dirigible (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (Ping timeout: 252 seconds)
[20:48:13] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 240 seconds)
[20:50:11] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:50:30] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:f1c5:6c8:4348:3a7e)
[20:50:49] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[20:51:45] *** Joins: bhushang (~bhushan@103.81.36.221)
[20:52:51] <bobdobbs> Hi. I've got a question about accessing the values of object properties in the browser console.
[20:53:27] <bobdobbs> So I've got an object in my app that I can access by entering 'frontity.state.source'. This is what the output looks like: https://i.imgur.com/7tAuD8d.png
[20:54:03] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:54:06] <bobdobbs> Now I'm wondering how I can access any of the properties under '[[Target]]'
[20:54:29] <bobdobbs> for example, how can I access 'author' or 'page'?
[20:57:19] *** Joins: hackers (~self@user/hackers)
[20:57:39] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[20:57:47] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:58:07] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:59:12] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 250 seconds)
[21:02:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:03:25] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:04:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:05:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:05:20] *** Joins: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby)
[21:06:21] *** Quits: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it) (Remote host closed the connection)
[21:06:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:07:09] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[21:07:13] *** Joins: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it)
[21:07:30] *** Joins: Elzington (~Elzington@68.235.43.84)
[21:07:32] *** Joins: t3nj1n (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[21:07:33] <ljharb> bobdobbs: you can't, they're not properties, they're internal slots
[21:07:39] *** Joins: t3nj1n_ (~t3nj1n@pool-173-52-219-149.nycmny.fios.verizon.net)
[21:07:53] <t3nj1n> wondering if i could get some advice
[21:08:03] <t3nj1n> i'm supposed to be reverse engineering an API
[21:08:22] <bobdobbs> ljharb: hai!
[21:08:32] <bobdobbs> ljharb: what do you mean by "internal slots"?
[21:08:35] <t3nj1n> right now i'm looking at a POST request, that returns a 200 response and has a GET-like Payload
[21:09:01] <t3nj1n> is that typical?
[21:10:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[21:10:37] *** Quits: filename (~kilitary@kilitary.xyz) (Ping timeout: 240 seconds)
[21:11:06] *** Joins: mikrosis (~mikrosis@dynamic-046-114-155-234.46.114.pool.telefonica.de)
[21:11:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:12:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:12:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:12:46] *** Joins: wroathe (~wroathe@user/wroathe)
[21:13:20] <mikrosis> hii
[21:13:45] <mikrosis> so I got a custom react component that contains an input and a button. when the button is clicked, the click handler should use the input value - how can I reference the input? refs?
[21:13:49] <mikrosis> what is the best practice here?
[21:14:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:14:33] *** Joins: codebam (~codebam@user/codebam)
[21:14:39] *** Joins: nemo (nemo@c-73-212-126-29.hsd1.md.comcast.net)
[21:14:57] *** Joins: pmercado_ (~pmercado@186.107.43.179)
[21:15:41] <t3nj1n> store it into state and reference it?
[21:15:46] *** Quits: pmercado (~pmercado@186.107.58.161) (Ping timeout: 272 seconds)
[21:16:01] <mikrosis> t3nj1n: ah, would this be best practice? :)
[21:16:35] <bobdobbs> mikrosis: I could be wrong, but I think the react docs have examples of this in the documentation for the useState hook?
[21:16:46] *** Joins: earthToAdam (~user@84.9.160.201)
[21:16:49] <t3nj1n> that is what i recall as well
[21:17:32] <bobdobbs> lets see... https://beta.reactjs.org/apis/usestate#usestate
[21:17:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[21:18:42] <bobdobbs> oh, not in the beta docs
[21:19:06] <bobdobbs> t3nj1n: could this be what you are after? https://reactjs.org/docs/hooks-state.html
[21:19:22] <bobdobbs> oh whoops. That was for mikrosis
[21:20:27] <bobdobbs> mikrosis: does that make sense to you? Does it apply to your use-case? I'm wondering cos I'm trying to learn React myself atm.
[21:21:54] *** Quits: bhushang (~bhushan@103.81.36.221) (Quit: Leaving)
[21:22:18] <t3nj1n> if the input is tied to a form and the button submits that form, the pattern i've always seen is that inputs are stored in state
[21:22:24] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[21:22:30] <bobdobbs> The thing that bothers me about this example is that I can't think of how to apply it to more complex examples. For example, where you want to update a component. But you aren't just doing addition, subtraction or multiplication on a number.
[21:23:18] <t3nj1n> especially when the state is bound to the component
[21:23:33] <mikrosis> That is one way :)
[21:23:35] *** Joins: trevors (~trevors@user/trevors)
[21:23:42] <mikrosis> hm, found an example that uses names instead: https://javascript.tutorialink.com/how-to-get-input-field-value-on-button-click-in-react/
[21:23:51] <mikrosis> and a ref: https://askavy.com/react-get-input-value-on-button-click-functional-component/
[21:24:01] <mikrosis> so there are at least 3 (THREE) ways for achieving the same thing
[21:24:02] <mikrosis> :(
[21:24:03] <mikrosis> ahh
[21:24:19] <mikrosis> https://stackoverflow.com/questions/29503213/use-state-or-refs-in-react-js-form-components
[21:24:23] <mikrosis> apparently refs should be avoided
[21:25:15] <mikrosis> aha https://reactjs.org/docs/forms.html
[21:25:29] <t3nj1n> probably depends on the size of your application
[21:25:42] <mikrosis> yes
[21:25:52] <mikrosis> so states are indeed the best approach from what I read :/
[21:26:16] <t3nj1n> much easier to handle in a functional component
[21:26:34] <t3nj1n> i don't think i do class components anymore because they're a nightmare lmao
[21:27:10] <bobdobbs> t3nj1n: the React devs seem to be trying to move people towards functional components.
[21:28:00] <bobdobbs> t3nj1n: I think I remember reading something about a new preference toward functions over classes in the docs. And the beta docs definitely favour functions over classes.
[21:28:47] *** Joins: Maxattax97 (~max@96-94-237-74-static.hfc.comcastbusiness.net)
[21:30:31] <gde33> uh? .forEach is dramatically slower than for(foo of bar)
[21:30:58] <bobdobbs> This consideration might be relevant to mikrosis: The React docs that he linked to for forms uses classes, where using functions might be better.
[21:31:30] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[21:32:20] <bobdobbs> mikrosis: if you are interesting in the functions vs. classes consideration in React, then once you've got a handle on that forms doc you linked to, you might want to have a look at this: https://beta.reactjs.org/apis/usestate#examples-objects
[21:34:56] *** Quits: src (~src@user/src) (Ping timeout: 245 seconds)
[21:35:04] *** Joins: src (~src@user/src)
[21:35:19] <ross> would someone with experience with GitHub Actions help me understand some code? in the js action sample repository, the main script is defined as an async function but is called without await: https://github.com/actions/javascript-action/blob/main/index.js
[21:35:41] <ross> wouldn't this immediately terminate while the process executes in the background, marking the action as a success even if it would later fail?
[21:36:03] <ross> (or immediately terminate, terminating the node process with it?)
[21:36:54] *** Quits: LiftLeft (~LiftLeft@dur-dhcp-1-80.dsl.airstreamcomm.net) (Ping timeout: 256 seconds)
[21:37:25] <ljharb> ross: no, it returns a promise immediately
[21:37:32] <ljharb> node doesn't end while there's stuff going on
[21:37:37] <ross> ahhhhh
[21:37:40] <ross>  that makes sense
[21:37:45] <ross> sorry, am used to a browser context
[21:37:46] <ljharb> nemo: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[21:37:53] <ljharb> bobdobbs: like, unobservable internal state
[21:38:31] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:39:11] *** Quits: cos (~cos@user/cos) (Quit: Client closed)
[21:39:19] *** Quits: nemo (nemo@c-73-212-126-29.hsd1.md.comcast.net) (Changing host)
[21:39:19] *** Joins: nemo (nemo@hedgewars/dev/nemo)
[21:39:59] <bobdobbs> ljharb: it's a little beyond me, but interesting nonetheless. I gather from googling that those properties can't be accessed. But somehow the api of the lib I'm playing with access them.
[21:40:07] <nemo> I probably should setup autoauth.  libera seems to boot me way more often than freenode did. before it was a once every few months kinda thing
[21:41:02] <nemo> Ok. Another try.  I'm trying to review a regrettably obfuscated javascript app.  It does have source maps.  Unfortunately I can't find any simple tool to deobfuscate a folder full of *.js and *.js.map - does anyone know of anything like that?
[21:43:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[21:44:13] <bobdobbs> ljharb: oh, I see. It's got something to do with how what the proxy function does. I've looked into proxy a bit recently (although without entirely understanding what problems it solves). So if I'm right, I can't access those internal slots. But I can access corrosponding properties within the object that proxy creates?
[21:44:16] <bobdobbs> I dunno
[21:45:02] <bobdobbs> It's funny. Lately I've ended up going down these winding rabbitholes without having a clue of these constructions are really for.
[21:48:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:48:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[21:48:43] *** pmercado_ is now known as pmercado
[21:49:03] *** Joins: filename (~kilitary@kilitary.xyz)
[21:49:58] *** Quits: Inspiral (~inspiral@user/inspiral) (Ping timeout: 272 seconds)
[21:50:21] *** Joins: Inspiral (~inspiral@host-92-22-22-119.as13285.net)
[21:50:22] *** Quits: Inspiral (~inspiral@host-92-22-22-119.as13285.net) (Changing host)
[21:50:22] *** Joins: Inspiral (~inspiral@user/inspiral)
[21:50:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[21:50:30] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 256 seconds)
[21:50:46] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[21:52:00] *** Joins: phrix (~phrix@185.76.176.45)
[21:53:12] <hamess> i am not sure how i should import/export my classes to be able to only access A and B through C; C.A and C.B. similar to namespaces in TS
[21:53:34] <hamess> a small example with something i have tried: https://paste.debian.net/1232031/
[21:53:52] <mikrosis> bobdobbs: thanks
[21:55:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[21:56:34] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:9ec0:5086:227a:ae1d)
[21:58:16] <mikrosis> bobdobbs: luckily in my current project (and approach to React) I am using not one react class component, only functional ones.
[21:58:29] <bobdobbs> oh yup
[21:58:53] <bobdobbs> mikrosis: I'm still figuring this shiz out myself. I've got a cool idea that I want to turn into reality with React.
[21:59:12] <mikrosis> bobdobbs: I am using the Ionic React example app as a basis
[21:59:19] <mikrosis> they seem to adhere pretty well to best practices
[21:59:24] <bobdobbs> mikrosis: I haven't put a single React thing into production yet. I've been hacking away at learning React for a few weeks.
[21:59:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:59:54] <bobdobbs> I'm consistently amazed at how much one has to learn/know in order to do real basic stuff
[22:00:01] <bobdobbs> but I think I'm getting there
[22:00:04] *** Joins: gavinhungry (~gavin@user/gavinhungry)
[22:00:11] <mikrosis> bobdobbs: I am kinda the same. I got experience with server stuff, CSS, CMS and such. But apps - well, not so much. but now I make an app and have the reason to learn it
[22:00:26] <mikrosis> bobdobbs: oh yes, yesterday it finally *clicked* and I understood some concepts
[22:00:32] <bobdobbs> oh cool
[22:00:37] <bobdobbs> that's always a nice feeling
[22:00:48] <mikrosis> I use typescript/TSX on top of everything:)  this makes stuff harder sometimes
[22:00:52] <mikrosis> a bit too much to chew
[22:01:16] <mikrosis> now I have to wire up the "shop app" with the "shop manager app"
[22:01:21] <mikrosis> I thought about using supabase
[22:01:36] <mikrosis> there are also paid and semi-free ones, like Firebase and that from Google
[22:01:47] <mikrosis> I don't think I need GraphQL for that
[22:02:13] <t3nj1n> everything moving towards composability iirc
[22:02:21] <bobdobbs> I spent about a day figuring out typescript. I don't think I understand it in depth, cos I can't see myself needing to create custom types anytime soon. But I managed to get typescript working as a linter in emacs
[22:03:24] <t3nj1n> one thing that made react easier was ignoring the "browser context" and just thinking about each component as a function that returned a thing rendered
[22:03:34] <bobdobbs> kk
[22:03:38] <mikrosis> t3nj1n: very intimidating:/  my first JS rodeo was very frustrating. I tried to get my ruby-compass-sass setup right and Grunt came along. Of course I was so naive and switched to it and tried to get that right instead. And then Gulp... well and then webpack... and then laravel-mix... and now some extra plumbing lol
[22:03:38] *** Quits: gavinhungry (~gavin@user/gavinhungry) (Client Quit)
[22:03:49] <mikrosis> t3nj1n: and now plain CSS is the great thing again
[22:04:16] <t3nj1n> in class react, you have a method that returns a render and in functional components, you just "return" JSX and whatever manipulations you do
[22:04:47] <t3nj1n> probably a naive way to think about it but made it much less intimidating
[22:06:15] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[22:06:17] <bobdobbs> mikrosis: I'm just looking at supabase now. You using their commercial service or hosting it yourself?
[22:06:21] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:c035:1eaa:808f:b1c3)
[22:06:30] <bobdobbs> I'm assuming that it can be self-hosted, cos it's on github
[22:07:22] <bobdobbs> ah yes: https://supabase.com/docs/guides/hosting/overview
[22:07:24] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:08:29] <t3nj1n> hey so, thought i might ask again
[22:08:57] <t3nj1n> i'm looking at an API endpoint for a POST request, and the resource returns not just a 201, but a whole response object
[22:09:25] <t3nj1n> not that it matters, but doesn't that seem like a violation of some RESTFUL rule?
[22:10:34] <t3nj1n> the JSON POST payload is just a info to cast a horoscope and the response object returns the geocentric position of the planets at the time you were born...
[22:11:01] <t3nj1n> https://www.astrologyapi.com/docs/api-ref/74/planets/tropical
[22:11:37] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:11:45] <t3nj1n> what that's telling me is that this endpoint is really just a complicated GET request where params are not used in their typical manner
[22:11:47] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[22:12:16] <t3nj1n> the POST request is acting as a payload for the backend route controller to do some heavy calculation
[22:12:36] *** Joins: z1haze (~z1haze@user/z1haze)
[22:12:38] <ljharb> bobdobbs: it depends what it is
[22:12:49] <ljharb> bobdobbs: proxy doesn't let you access internal slots, it just lets you intercept some otherwise non-interceptable operations
[22:12:49] <z1haze> o/
[22:12:52] <t3nj1n> wonder if someone could confirm or deny if that make sense
[22:12:56] *** Quits: phrix (~phrix@185.76.176.45) (Quit: Leaving)
[22:12:56] *** Joins: pulse (~pulse@user/pulse)
[22:13:03] <ljharb> bobdobbs: internal slots are like "the thing a promise fulfilled or rejected with"
[22:13:06] <mikrosis> bobdobbs: yes, self-hosted and semi-free. It is a free/opensource alternative to it
[22:13:14] <ljharb> bobdobbs: or like "the internal time value of a Date" (which you can access with `.getTime()`)
[22:13:16] <z1haze> so who had stopped using webpack at this point?
[22:13:19] <mikrosis> bobdobbs: hence I like that supabase thing :)
[22:13:20] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:13:24] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[22:13:29] <ljharb> z1haze: browserify or webpack remain the only good choices
[22:13:31] <mikrosis> z1haze: for one project I am using parcel instead. it is more a PoC though
[22:13:38] <z1haze> but vite is now
[22:13:52] <mikrosis> in the end there is always plumbing:(  laravel-mix was cool. now it isn't really developed ...
[22:13:55] <ljharb> z1haze: vite is bad
[22:14:01] <z1haze> :( i was afraid to hear that
[22:14:01] <mikrosis> roots bud I am using currently, for CMS/sites
[22:14:03] <ljharb> z1haze: it's just trendy. but so was mongo.
[22:14:03] <bobdobbs> ljharb: I think I follow. That makes sense at my current level of understanding (which is kinda defictient though)
[22:14:07] <z1haze> i havent used it but i really was optimistic
[22:14:15] <mikrosis> I guess there is no way around the plumbing thing of building stuff
[22:14:18] <ljharb> bobdobbs: console.log shows internal slots sometimes for debugging, but your JS can't access them directly
[22:14:24] <z1haze> why do you claim it to be bad/trendy? developed by a smart dude
[22:15:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:15:12] <mikrosis> Do you know that feel? When you install the same node version as the project was built in 2 years ago - and the node version isn't supported anymore. So you use a newer node version and nothing can be installed from the dependencies? And then you have to hunt down every single dependency and find out they are mostly abandoned or replaced? Then you
[22:15:13] <mikrosis> start updating the whole build thing - and in the end you have to remake it :(
[22:16:05] <t3nj1n> @mikrosis: i know this feel
[22:16:28] <bobdobbs> mikrosis: I haven't hit that yet. But I've hit similar stuff with setting up build processes. This has made me very wary of working with node generally
[22:16:37] <mikrosis> t3nj1n: nightmarish:(  oh, one can use a VM for the whole linux base image and everything? hehe, no. I had so much pain with Vagrant. one time I was close to crying. that damn thing...
[22:16:43] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:c035:1eaa:808f:b1c3) (Quit: Client closed)
[22:16:47] <mikrosis> bobdobbs: everything moves at neck break speed
[22:17:11] <mikrosis> break neck speed
[22:17:27] <mikrosis> I hope I can return to plain CSS and JS with minimal tooling
[22:17:36] <mikrosis> bundling isn't really a thing anymore due to HTTP2. Maybe tree-shaking
[22:17:39] <bobdobbs> mikrosis: and then some dude removes his simple node module that does a simple maths operation and half the internet breaks
[22:17:51] <t3nj1n> i'm honestly more compelled to jump into the backend
[22:17:57] <mikrosis> bobdobbs: or uploads a new release with bitcoin-stealing code :O
[22:18:00] *** Joins: earthToAdam (~user@84.9.160.201)
[22:18:13] <mikrosis> t3nj1n: there is an appeal to boring, stable, low-level, full-control-giving code
[22:18:40] <t3nj1n> temporal also looking very sexy
[22:19:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:19:53] *** Joins: programmar (~whatever@118.69.128.37)
[22:20:11] <t3nj1n> frontend feels very bloating
[22:20:19] <t3nj1n> and feels like you're just stitching frameworks
[22:20:28] <programmar> guys so question, for example i have a structure like this https://jsfiddle.net/ecfsuxnq/5/ and whenever i click which button, it will display that button's innerHTML to me, is it possible to do so with this ?
[22:20:31] <t3nj1n> hunting down broken dependencies
[22:20:34] <Alexendoo> mikrosis: bundling is still a requirement for good load times, HTTP2 can't eliminate the need for it
[22:21:10] <mikrosis> Alexendoo: yes, though the extreme stuff like spriting SVGs or raster images is luckily not necessary anymore.
[22:23:32] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 272 seconds)
[22:25:32] *** Joins: earthToAdam (~user@84.9.160.201)
[22:27:44] <gde33> writing machine code in the 80's was not that hard, vanilla js is not that hard
[22:28:09] <gde33> but I do find modules and frameworks to be really hard
[22:28:40] <mikrosis> gde33: extra complexity on top. and the whole thing just rots away, so many GitHub repos that hadn't been updated for years.
[22:28:53] <mikrosis> the next shiny thing comes along and everything else is just forgotten
[22:29:11] <mikrosis> "Oh we got a car that works quite well. Well, the physics have changed. We build another car now."
[22:30:13] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 240 seconds)
[22:30:15] *** Joins: rendar (~rendar@user/rendar)
[22:30:28] *** Joins: crashrep (~crashrep@user/crashrep)
[22:30:33] <rendar> if i have this, https://codepen.io/bharat-gupta/pen/gZMOQO -- what is the best way to use that blinking cursor inside a valid textbox?
[22:30:52] <gde33> mikrosis: I feel like my hand cart has a few years to go. Didn't get a horse, to complicated.
[22:31:00] <bobdobbs> mikrosis: for me personally, that confluence of flexibility and fragility sucks, cos the things I want to do in the end are always really simple
[22:31:20] *** Quits: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it) (Remote host closed the connection)
[22:31:30] <gde33> rendar: pretend you never wanted that
[22:32:05] *** Joins: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it)
[22:32:14] <bobdobbs> gde33: the maintainer of the horse module went awol two years ago but now there's a critical vuln in horse that steals your crypto to the russian mob
[22:32:16] <mikrosis> bobdobbs: and when finally the browsers catch up, the old stuff isn't cool suddenly, but rather just bloat.
[22:32:24] <rendar> gde33, why?
[22:32:30] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[22:32:52] <mikrosis> gde33: in this case the physics (the browser universe your stuff has to work inside) changed because the corporate gods of that browser universe decided that it is better that way
[22:32:57] <bobdobbs> gde33: you could use Mule, coss it's currently being maintained, but it doesn't offer half the stuff that Horse does. And it's way slower.
[22:33:04] <gde33> rendar: it starts with endless search results calling the pointer the cursor and it ends with failing to get text selection right
[22:33:40] <gde33> bobdobbs: I might try goat for its compatibility with different input
[22:33:44] *** Joins: noarb (~noarb@user/noarb)
[22:33:57] <blueagain> what is this, a zoo?
[22:34:10] <t3nj1n> is it a framework or a pokemon
[22:34:22] <mikrosis> with webcomponents, would react become easier? will jsx still be needed then?
[22:34:23] <rendar> gde33, ok, what is the best solution to have a terminal-like text box with a blinking cursor, which i may want to draw the shape?
[22:35:07] <gde33> mikrosis: someone explained that one to me one time. It often seems people up in the hierarchy make decisions that make no sense to us lower creatures but it is simply above our pay grade, we cant possibly understand such things.
[22:35:13] <blueagain> mikrosis: I don't really think web components have a future in their current form. I tried to integrate them like 3 times into my framework already, and always failed it did more harm than it gained me something
[22:35:41] <blueagain> s/failed/found
[22:35:41] <mikrosis> gde33: in an ideal world we would have Lisp all the way down or something like that.
[22:35:47] <t3nj1n> soon we'll get "a framework for webcomponents"
[22:35:51] <mikrosis> hehe
[22:36:04] <mikrosis> new idea: A webassembly kernel that implements its own DOM and everything using Canvas
[22:36:08] <mikrosis> Microsoft Framework (R)
[22:36:16] <t3nj1n> :dead:
[22:36:18] <mikrosis> and then this thing runs inside the browser, boots up and such
[22:36:23] <mikrosis> windows JS NT
[22:36:26] <gde33> mikrosis: I have seriously considered using absolute positioning for everything.
[22:36:36] <t3nj1n> Flash 11
[22:36:48] <mikrosis> gde33: the funny thing is that with Google getting so good in extracting the information that may be indeed a way
[22:36:55] <mikrosis> ah, Flash wasn't that bad :(
[22:37:13] <mikrosis> can we use tweening/keyframes and complex animations in JS yet? I don't think so?
[22:37:28] <mikrosis> I mean, there are CSS animations... but with a timeline like in Flash?
[22:37:38] <mikrosis> and Flash already got ActionScript, which looks like TypeScript
[22:37:54] <t3nj1n> ah, actionscript
[22:37:58] <t3nj1n> painful childhood memories
[22:38:12] <t3nj1n> trying to make games for newgrounds
[22:38:56] <rendar> any help?
[22:39:15] <gde33> rendar: you will pull out your hairs and claw out your eyes trying to customize text input
[22:39:40] <gde33> rendar: I just ran into this solution https://www.youtube.com/watch?v=nNaxAStsxfs
[22:39:40] <skillbot> YouTube Title: HTML : How to change blinking cursor/caret in textarea
[22:39:50] <gde33> warning: it isn't
[22:40:05] <mikrosis> rendar: imagine a JS build setup boot, stomping a developer's brain forever
[22:40:07] <mikrosis> :D
[22:40:31] <rendar> :D
[22:40:51] <gde33> mikrosis: the trick is to get good with the dom and with for(i=0;i<foo.length;i++) loops then forget the rest
[22:41:16] *** Joins: trevors (~trevors@user/trevors)
[22:41:28] <gde33> learn js in 20 min
[22:41:32] <rendar> what is that video? :\
[22:41:53] <gde33> rendar: to illustrate the quality of the search results "answering" this question
[22:42:08] <rendar> yeah..but.. the problem persists
[22:42:24] <gde33> rendar: what is the input used for?
[22:42:28] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[22:42:40] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[22:43:03] <rendar> giving commands
[22:43:10] <rendar> like i do in a terminal
[22:43:18] <rendar> font will be monospaced
[22:43:19] <t3nj1n> maybe take a look at CodeMirror
[22:43:23] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[22:43:27] <gde33> oh then you might read char presses and print them to the screen
[22:43:38] <rendar> gde33, right..
[22:43:54] <gde33> rendar: you will lose most of the input functionality but who cares
[22:43:55] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3cbd:a3bd:ace0:3635)
[22:43:55] <magga> if i wanna pass some data into a html element that i need to use in a onclick handler? what would be the normal approach? is there some special attribute you use ? i got a list of <li> elements that all has unique data. when i click the li's i need to fetch something using that data
[22:43:58] <rendar> gde33, and putting those chars to a javascript variable like buffer += char;
[22:44:08] <rendar> gde33, that's no problem
[22:44:15] *** Quits: ejjfunky (~ejjfunky@125.164.22.233) (Read error: Connection reset by peer)
[22:44:21] <gde33> elm.innerHTML += char
[22:44:38] <rendar> gde33, ok but how to catch the events?
[22:44:45] <t3nj1n> why use onclick when you can use addEventHandler
[22:44:50] <gde33> rendar: enter?
[22:45:03] <rendar> enter?!
[22:45:03] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:04] <gde33> oh key strokes
[22:45:08] <rendar> yes
[22:45:43] <t3nj1n> ** addEventListener
[22:45:51] <t3nj1n> https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
[22:46:07] <t3nj1n> will give you access to the "event" and the dom element of which it is a part
[22:46:13] <t3nj1n> and then you can manipulate from there
[22:46:34] <rendar> i see, the same principles how you catch key presses like F5, ESC or something
[22:46:55] <rendar> then i will also need to catch enter, and arrows to insert text
[22:47:42] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[22:47:42] <t3nj1n> so if you clicked the list item, you can get the event.target.innerText (or whatever) and use that in a fetch call or whatever (obviously you'd have to manipulate that text to make that fetch request succeed)
[22:48:02] <t3nj1n> handle for spaces and whatnot
[22:49:26] *** Quits: Maxattax97 (~max@96-94-237-74-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[22:49:48] <gde33> rendar:
[22:49:52] <gde33> #cursor {
[22:49:53] <gde33>   font-size: 30px;
[22:49:53] <gde33>   animation: 0.3s ease-in-out 0s infinite alternate  blink;
[22:49:53] <gde33> }
[22:49:53] <gde33> @keyframes blink {
[22:49:53] <gde33>   from {opacity:0;}
[22:49:53] <gde33>   to {opacity:1;}
[22:49:54] <gde33> }
[22:50:07] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[22:50:43] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[22:50:43] *** Quits: src (~src@user/src) (Quit: Leaving)
[22:51:05] <ljharb> gde33: please do not paste multiple lines into irc.
[22:51:38] <rendar> gde33, that doesn't work
[22:51:42] <gde33> codepen wanted me to register for this :/
[22:51:53] <gde33> rendar: howso?
[22:52:04] <rendar> oh wait, it works yes
[22:52:38] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[22:53:03] <gde33> rendar: depending on what you want could change from and to into 0% and 100% then add a 30% opacity: 0 to extend the blank duration
[22:53:25] <ljharb> gde33: then register. or use codesandbox.
[22:53:38] <gde33> ljharb: yeah I know better sorry :P
[22:54:04] <ljharb> i know
[22:54:41] <celphi> jaawerth: you there? ping me when you get back
[22:56:09] *** Joins: earthToAdam (~user@84.9.160.201)
[22:57:17] <rendar> gde33, i wish that cursor will switch from color A to color B each 0.9s, with a very short ease between the 2 colors, say 0.1s
[22:57:20] <rendar> how to do that?
[23:00:38] *** Joins: onosendi (~onosendi@user/onosendi)
[23:00:53] <gde33> rendar: you can put as many xx%{ do:this } css thingies in the keyframe thingy as you like
[23:01:04] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:01:15] <gde33> rendar: and have as many styles in each as you want
[23:01:31] <gde33> rendar: not everything is supported but the good stuff is all there
[23:02:12] *** Joins: Fubbebubbe (~ThePhilgr@151.40.115.120)
[23:02:14] <gde33> rendar: the 1s part is how long it takes, ease-in-out makes it go back and forwards
[23:02:24] *** Quits: Fubbebubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:02:29] <rendar> problem is that it takes 0.9s to make the full ease-in in between the 2 colors
[23:02:43] *** Joins: Fubbebubbe (~ThePhilgr@151.40.115.120)
[23:03:04] *** Quits: Fubbebubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:03:08] <rendar> i wish that cursor will stay with a color A, then after 0.9s to take a 0.2 ease-in to pass to the color 2
[23:03:27] <mikrosis> oh, and when you toggle a CSS class with JS - most browsers won't run the animation/transition... because reasons. you have to trigger a layout change thing
[23:03:38] *** Joins: Fubbebubbe (~ThePhilgr@151.40.115.120)
[23:03:40] <gde33> rendar: join #css
[23:03:41] <mikrosis> there is no JS method for this, so you must use a JS method that is known to trigger such change
[23:03:45] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:03:53] <mikrosis> even that simple task is complicated :(
[23:03:54] <mikrosis> ahh
[23:04:01] <gde33> mikrosis: add an extra class?
[23:04:02] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[23:04:40] <gde33> but yeah, complicated at times for reasons
[23:04:44] *** Quits: Fubbebubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:04:48] *** Joins: suss` (~user@user/suss)
[23:04:54] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[23:06:06] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:c035:1eaa:808f:b1c3)
[23:06:21] *** Quits: suss (~user@user/suss) (Ping timeout: 250 seconds)
[23:06:28] *** Joins: Fubbebubbe (~ThePhilgr@151.40.115.120)
[23:06:42] <mikrosis> https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/animationend_event
[23:06:48] <mikrosis> https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/transitionend_event
[23:06:59] *** Quits: Fubbebubbe (~ThePhilgr@151.40.115.120) (Client Quit)
[23:08:24] <theskillwithin> =]
[23:10:09] *** Joins: nomic (~nomic@185.198.243.229)
[23:12:09] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:12:26] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[23:13:45] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:14:37] *** Quits: twiclo1 (~twiclo@vpn.utahbroadband.com) (Ping timeout: 240 seconds)
[23:15:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[23:16:47] *** Joins: twiclo1 (~twiclo@mail.twil.cx)
[23:19:27] <jaawerth> lol I was double-checking there are no implementations of Map so broken that map.delete on an missing key causes an error and I was reminded that m.set in IE11 returned undefined. IE: mistakes all the way 'til the end
[23:19:29] <gde33> animationend is not a word!
[23:20:12] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:21:25] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[23:22:35] <xisop> 0x2B || !(0x2B) === 'question'
[23:24:08] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:24:46] <mikrosis> LOL, the React tutorials use class component... https://reactjs.org/docs/lifting-state-up.html
[23:24:50] <mikrosis> *official ones
[23:24:54] <mikrosis> "best practices"...
[23:25:20] <bobdobbs> mikrosis: this is different in the beta docs
[23:25:38] <mikrosis> ah ok I look
[23:25:42] <bobdobbs> mikrosis: the beta docs for the api's are 70% completed, I seem to recall
[23:25:54] <bobdobbs> https://beta.reactjs.org/
[23:25:57] <mikrosis> bobdobbs: quick link to it? thanks
[23:26:00] <mikrosis> yes
[23:26:30] <bobdobbs> also, have a link to morning mellow workflow music! https://www.youtube.com/watch?v=2Yza5xXfezc
[23:26:31] <skillbot> YouTube Title: Ritmos De Los Muertos - Latin & World Downtempo Mix (Rodrigo Gallardo, Nicola Cruz, El Buho)
[23:26:36] <t3nj1n> need to get better at context and reducer :(
[23:27:42] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3cbd:a3bd:ace0:3635) (Ping timeout: 260 seconds)
[23:28:01] <bobdobbs> mikrosis: also, I can't remember where I saw it, but somewhere in the React docs there's a post saying words to the effect: "You should use functions instead of classes. This solves somes problems. But you don't have to if you don't want to."
[23:28:32] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[23:29:05] <gde33> ljharb: when do you consider an object array or json to big on the front end?
[23:29:33] <mikrosis> bobdobbs: as I never used them I am not emotionally connected to these:)  it is easy for me to use the functions
[23:29:54] <bobdobbs> kew
[23:29:57] <bobdobbs> *kewl
[23:30:01] <mikrosis> bobdobbs: oh, I learned all the IE6 tricks, the margin tricks, everything. and now this is just garbage - nobody cares or will ever care. CSS Flexbox+Grids eliminated all this knowlegde
[23:30:02] <mikrosis> :(
[23:30:19] <bobdobbs> lol. I remember those days.
[23:30:36] <bobdobbs> When I started doing webdev there wasn't even a browser debugger
[23:30:46] <bobdobbs> remember venkmen?
[23:30:53] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:31:11] <bobdobbs> http://www.hacksrus.com/~ginda/venkman/
[23:32:19] *** Joins: tmm88 (~tmm88@user/tmm88)
[23:35:13] <mikrosis> bobdobbs: oh yes
[23:35:23] *** Quits: Deneb (~johnch@245.82.159.143.dyn.plus.net) (Quit: Leaving)
[23:35:25] <mikrosis> bobdobbs: inspect element, web dev tools - firefox started with this - firedebug or how it was called
[23:35:26] <mikrosis> well
[23:35:34] <mikrosis> firefox started many good things, and the ungrateful world is forgetting it now
[23:35:41] <mikrosis> Firefox vanquished IE
[23:35:42] <mikrosis> damn IE
[23:35:56] <mikrosis> I used Flash for Fonts:D  One pixel images for gradients
[23:36:02] <mikrosis> layered text for shadows
[23:36:14] <mikrosis> conditional styles for IE
[23:36:30] <mikrosis> but everything rotted anyway
[23:36:31] <mikrosis> :(
[23:36:32] <bobdobbs> oh yeah. I remember image gradients! I think that's why I learnt GIMP
[23:37:03] <bobdobbs> and 'sliding windows' for rounded box edges before border-radius was a thing
[23:37:05] <mikrosis> bobdobbs: and I tried to get nice fluid sites while there were no media queries or responsiveness
[23:37:08] <mikrosis> ah yes
[23:37:16] <mikrosis> no alphatransparent PNG in IE6 :(
[23:37:24] <mikrosis> well, it was possible
[23:37:27] <bobdobbs> ;(
[23:37:31] <mikrosis> but only with those exotic filters + custom CSS
[23:37:32] *** Quits: earthToAdam (~user@84.9.160.201) (Remote host closed the connection)
[23:37:35] <mikrosis> and now all this stuff is worthless
[23:37:45] *** Joins: earthToAdam (~user@84.9.160.201)
[23:37:48] <bobdobbs> thank gawd those things are worthless now
[23:37:52] <bobdobbs> sooo kludgey
[23:38:00] <mikrosis> well if I learned something else I would still be able to apply it
[23:38:08] <bobdobbs> yeah. truedat
[23:38:17] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[23:38:21] <mikrosis> this keeps me ruminatin at nite
[23:38:25] <bobdobbs> It's amazing how much webdevs have to know just to do basic stuff
[23:38:43] <mikrosis> yes, you remember the Unicode/UTF8 transition time?
[23:38:45] <teresko> yeah yeah, we all have had to walk bare-foot to school as kids, up-hill both ways
[23:38:48] <mikrosis> no htmlentities
[23:38:53] *** Joins: shokohsc4 (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[23:38:58] <bobdobbs> teresko: in the snow
[23:39:00] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[23:39:10] <teresko> yes, forgot the snow
[23:39:14] <mikrosis> teresko: well, you neoboomers bought three houses at age 30 and two cars
[23:39:18] <mikrosis> :P
[23:39:25] <mikrosis> while hamburger flippin
[23:39:41] <bobdobbs> teresko: mind you, that's when things started to get easier. Luck kids. In my day we didn't have snow.
[23:39:47] <bobdobbs> teresko: just gravel
[23:39:50] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:39:57] <bobdobbs> teresko: gravel falling from the sky in winter
[23:39:57] <mikrosis> bobdobbs: everything was black and white
[23:40:07] <mikrosis> and only standard definition
[23:40:07] <bobdobbs> mikrosis: you had white?
[23:40:09] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:40:09] *** shokohsc4 is now known as shokohsc
[23:40:09] <bobdobbs> luxury
[23:40:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:40:11] <mikrosis> bobdobbs: grey
[23:40:12] <mikrosis> lol
[23:40:58] <teresko> I tend to call it "dark white" (also good color to describe my parent's cat when the little monster comes in from rain)
[23:42:17] <mikrosis> so I really need to get rich + passive income by doing my stuff... At some point my brain can't handle more new information :/
[23:42:20] <mikrosis> I will become a gardener then
[23:42:48] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:42:50] * teresko is actively working on Plan C 
[23:43:28] <teresko> the plan D (crypto) might not work out, so I have to focus on other options
[23:43:59] <mikrosis> somehow make some killa app and become the CEO of <your name> corp and live in a floating skyscraper or whatever
[23:44:35] * bobdobbs steals mikrosis's floating skyscraper
[23:44:36] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[23:46:54] *** Joins: wroathe (~wroathe@user/wroathe)
[23:47:30] *** Joins: Tangent-Man (~Tang3nt-M@138.199.21.36)
[23:47:38] <tmm88> mein mutlich ist mein gespielte. mein gespielte ist mein mutlich. und ich verstrau zu mein neuer streffen sich. zu mein neuer streffen nach. zu mein adenglicht zu stimme. zu mein adenglicht zu liebe
[23:47:59] <mikrosis> tmm88: neural network that produces text?
[23:48:00] <mikrosis> lol
[23:48:22] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[23:48:30] <teresko> tmm88: derka derka?
[23:49:55] <teresko> reference: https://www.youtube.com/watch?v=vqer--vOPlY
[23:49:56] <skillbot> YouTube Title: Team America in Egypt - Durka Durka
[23:50:34] <mikrosis> oh cool, one can have a component which state can be lifted up or used standalone: https://fragmentoid.com/?p=54
[23:50:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[23:52:54] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:53:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:54:36] *** Quits: earthToAdam (~user@84.9.160.201) (Ping timeout: 256 seconds)
[23:56:32] *** Joins: earthToAdam (~user@84.9.160.201)
[23:56:48] <tmm88> mikrosis: teresko: zero order markov chain
[23:57:03] <mikrosis> tmm88: ha
[23:57:19] <tmm88> mikrosis: teresko: combined with adaptative order markov chain
[23:57:24] <tmm88> fuzzy logic
[23:57:31] <tmm88> adaptative neural networks
[23:57:43] <tmm88> and hybrid swarms of recursive bdi and ann
[23:57:57] <mikrosis> tmm88: can it finish the Game of Thrones book? :)
