[00:00:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:00:24] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:02:07] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[00:03:36] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[00:05:28] <etimmons> I'd leave a memo for Guest74, but alas, who knows what nick he/she/it will have when they return.
[00:06:32] <jackdaniel> I think that they'll read the log, so if you know any real issues then go ahead ,)
[00:07:10] <yitzi> Guest74 is probably the Skynet precursor for all we know.
[00:09:41] <etimmons> Guest74: If you use Dexador, be aware that the built in connection pool can break things. If you ever get weird behavior, that's the first thing to disable.
[00:10:44] <etimmons> jackdaniel: I know, I just think that occasional prods to use a registrered nick if you're going to be hanging around are good :)
[00:11:14] <etimmons> Or at the very least an unregistered nick that isn't autoassigned by the web gateway
[00:13:34] <jackdaniel> I share that view, that's why I have a registered nick
[00:13:55] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 256 seconds)
[00:14:14] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[00:18:25] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[00:19:14] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:24:09] *** Joins: gaqwas (~john@dynamic-077-007-008-097.77.7.pool.telefonica.de)
[00:32:05] <dre> how did I come up with "(car (nthcdr idx list))" before I found (nth idx list)
[00:33:38] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 252 seconds)
[00:34:37] <adlai> is there any better place for live-investigating a CCL image that crashed to LDB?
[00:35:36] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[00:36:00] * adlai notes that #ccl in this network does have several regulars, although the channel back in freenode was quite a ghost town, and this one has no /topic set
[00:36:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:37:17] <adlai> since it is less on-topic here, I'll take my notes to there, unless someone finds that this is specifically a desirable topic for the general channel.
[00:39:14] <dre> Well I find this /generally/ desirable
[00:39:23] <dre> for this specific channel :)
[00:39:50] *** Quits: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it) (Remote host closed the connection)
[00:39:59] *** Joins: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it)
[00:40:28] <adlai> I agree that it does have relevance, because I'm hoping to identify which abstraction is problematic. my code uses lots of unstandardized things (networking, multiprocessing)
[00:41:23] <adlai> arguably FFI should be included separately in that list, since cl+ssl is an FFI binding, and 'networking' alone could be done without writing FFI bindings beyond what the implementation already provides.
[00:45:34] <adlai> minion: memo for Guest74: if you are parsing JSON that represents objects with structures known in advance, i.e. pretty much anything more specific than arbitrary prototype soup, you may find CL-JSON's hooking mechanisms useful
[00:45:34] <minion> Remembered. I'll tell Guest74 when he/she/it next speaks.
[00:47:02] * adlai did some bits of premature-optimisation where in certain parsing invocations, the numerical parser is replaced with more specific ones, to save the troubles of coercing parsed floats
[00:50:10] *** Joins: drakonis (drakonis@user/drakonis)
[00:53:31] *** Quits: tyson2 (~user@bras-base-toroon0240w-grc-46-64-228-134-62.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:03:10] *** Joins: Lycurgus (~juan@98.4.112.204)
[01:10:58] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:12:56] *** Quits: pve (~pve@176-93-15-207.bb.dnainternet.fi) (Quit: leaving)
[01:15:37] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 252 seconds)
[01:16:14] *** Quits: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:23:39] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[01:24:05] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[01:25:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:34:53] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[01:36:30] *** Joins: aeth (~aeth@user/aeth)
[01:36:40] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11db:cd2:a064:991e:9742:a6c2)
[01:43:32] <dre> AoC day 3 https://gist.github.com/Dotrar/dcd4bf24dc4dcec0f11eeb1cfaea2583
[01:43:37] <dre> :woot: :woot:
[01:44:10] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Quit: Client closed)
[01:45:38] <hayley> You could use (count #\1 binary-list) to count all the ones in a list.
[01:46:51] <dre> hayley, how would that form work for "counting-per-columns" though. I'm not getting it
[01:47:20] <dre> I don't get the 3 mapcar deep bit either, but that gives me the answer I want :P
[01:47:26] <hayley> I was thinking of count-ones-per-position.
[01:47:40] <dre> does it really count per-position?
[01:47:43] <dre> ...
[01:48:34] <Bike> as in (mapcar (lambda (sl) (count #\1 sl)) binary-list)
[01:48:56] <dre> but that counts across the binary-value.
[01:49:03] * hayley reads the example more carefully
[01:49:51] <Bike> upon further examination i can't actually tell what this is supposed to do. should it not be ((1 0 1) (1 1 1) (0 0 1)) => (2 3 1)?
[01:49:53] <dre> I don't want (2 3 1) i want (2 1 3) --. there's 2 in the first column, 1 in the middle column, and 3 in the last column
[01:50:11] <hayley> Yes, the counts are for the nth position of each list, where n is natural. e.g. ((1 0 1) (1 1 1) (0 0 1)) => (2 1 3) per the documentation.
[01:50:30] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[01:50:41] <dre> if I do (count t '(( t nil t) (nil t t))) in the repl, I get 0
[01:50:52] <Bike> oh, like the transpose. ok.
[01:51:38] <dre> Bike, i did look up transpose to begin with but couldn't find what I was looking for
[01:51:43] <hayley> Never mind then.
[01:51:47] <dre> transpose would be much easier as well, because then we could do the lambda.
[01:52:00] <dre> where's the count documentation?
[01:52:04] <Bike> clhs count
[01:52:05] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_countc.htm
[01:52:21] <hayley> .oO(Guess I need to learn more APL and April then.)
[01:53:35] <dre> I feel like "COUNTS" or something would be a useful solution, i was suprised that there wasn't something nicer in sbcl by default
[01:53:50] <Bike> (mapcar (lambda (sl) (count #\1 sl)) (transpose '((1 0 1) (1 1 1) (0 0 1)))) => (2 1 3), but that's not really much clearer
[01:54:12] <dre> ah no, i think transpose is much clearer than mine.
[01:54:14] <Bike> where (defun transpose (list) (apply #'mapcar #'list list))
[01:54:40] <dre> ah yes right, you've got to defun transpose first
[01:54:51] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:55:04] <dre> i think it's still clearer. it labels it as a "transpose" function that someone can intuitively get.
[02:00:27] *** Quits: gaqwas (~john@dynamic-077-007-008-097.77.7.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:00:34] <dre> thanks Bike , much much nicer.
[02:01:13] <hayley> One nitpick: A compliment is something you give to a nice person, and a complement is the "opposite" of a value.
[02:01:29] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[02:01:36] <dre> I want to compliment the binaries, they're doing a great job :)
[02:01:42] <dre> (thanks)
[02:03:07] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[02:03:18] <NotThatRPG> @adlai: A library that grokked JSON Schema would be A Good Thing.
[02:04:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[02:06:27] <hayley> https://github.com/fisxoj/json-schema
[02:06:28] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[02:07:01] <hayley> And the sequel: https://gitlab.com/Gnuxie/json-schema2/
[02:07:49] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[02:07:53] <Gnuxie> no that isn't the sequel
[02:08:08] <Gnuxie> stop posting it it's cringe
[02:09:39] <hayley> What do you know, you didn't write it or anything. /s
[02:10:01] <hayley> Okay, the latter is not the sequel.
[02:18:35] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:24:50] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[02:27:07] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 252 seconds)
[02:27:57] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[02:28:09] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 256 seconds)
[02:28:53] <Guest74> etimmons: good to know.  Just using it for accessing web apis right now.
[02:28:53] <minion> Guest74, memo from adlai: if you are parsing JSON that represents objects with structures known in advance, i.e. pretty much anything more specific than arbitrary prototype soup, you may find CL-JSON's hooking mechanisms useful
[02:29:51] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[02:30:55] <Guest74> adlai:  I'll take a closer look then.  I had decided on jsown just because of speed, amount of consing, and ease of destructuring to make structures.  But if i can parse directly into the objects that might be more useful.
[02:31:39] <adlai> cl-json has a rather coarse granularity for the hooks, although then again, JSON itself doesn't have that many types to begin with
[02:34:28] <Guest74> I've just been using destructuring bind and then making structs.  Which is actually quite simple.
[02:41:24] <adlai> sure, and generational GCs will make the temporary consing irrelevant
[02:43:28] <adlai> there are cases where parsing is the bottleneck, and the hooks are useful; or if you have some strange numerical imposition, e.g. you want all numbers returned by the parser to already be complexes
[02:44:17] <Guest74> numbers is the only problem I see with jsown right now.  I don't understand why it returns rationals.
[02:44:31] <Guest74> I should probably look at the documentation.
[02:48:36] <adlai> why is that a problem?
[02:49:22] <Guest74> just extra work and wondering why it's different than all the others.
[02:51:36] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11db:cd2:a064:991e:9742:a6c2) (Ping timeout: 245 seconds)
[02:52:58] <Guest74> so I've noticed i can do  (destructuring-bind (_ _ _ fourth fifth)'(1 2 3 4 5) (do-something)) and it doesn't complain about multiple occurences of _, but it does if you do it in a defun. Where is this difference discussed in clhs?
[02:53:30] *** Joins: igemnace (~ian@user/igemnace)
[02:54:21] <adlai> iirc, the JSON specification does not define much about numbers, beyond that they can be integers, or have a decimal point. so CL:RATIONAL actually is the sane choice, in the absence of extra information making the choice subtype a sane one.
[02:55:11] <adlai> clhs destructuring-bind
[02:55:11] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/m_destru.htm
[02:55:41] <adlai> I think some of the possible macroexpansions would not require warnings.
[02:57:01] <adlai> e.g., a naive implementation that walks the tree of names to bind, collecting accessors, and then builds a bunch of nested LET statements, one per binding.
[02:57:46] <Guest74> ah, i read that wrong earlier.  I thought it said the lambda lists were not like macro lambda lists.
[02:59:39] <adlai> destructuring-bind isn't one of the defining operators, so I'd not expect it to be a strict, either
[03:00:29] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 252 seconds)
[03:00:55] <Guest74> Is it bad style to do something like that for ignoring things.  I find it more legible.
[03:02:17] <adlai> it's considered rude to do this to a single-character token without also publishing an emacs face customization mode that adjusts alpha
[03:04:31] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[03:08:58] <Guest74> I'm assuming that's some sort of emacs joke?  Should have just waited till Beach: was awake :)
[03:09:52] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:10:04] <adlai> yes, there's an emacs mode that I find myself missing already in my new setup, called paren-face, that let you mess around with shading and transparency of the various parentheses.
[03:10:29] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:10:41] <adlai> for a while in my early days I experimented with simply making them all, almost invisible; this was not a good idea.
[03:11:05] *** Quits: abrahms (~abrahms@75.164.87.141) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:11:38] *** Joins: abrahms (~abrahms@163.116.138.118)
[03:11:42] <Guest74> I've thought about getting rid of them altogether. With each new parens making a new coloured block.  I haven't implemented it yet to see how annoying or unusable it would be.
[03:13:42] <adlai> I recall my favorite setup being that they were all more similar to the background, although there was some grading that depended on nesting level, and in some circumstances, highlighting of a matching delimeter.
[03:14:18] *** Joins: abrahms66 (~abrahms@163.116.138.116)
[03:14:44] <adlai> however, it's dangerous to leave something like that enabled by default e.g. in the repl mode, because you might crash emacs, or just search for an indefinite matching delimiter
[03:16:23] <Guest74> oh, not thinking about emacs. Just the graphical representation of sexps. Want to eventually get rid of emacs.
[03:17:28] *** Quits: abrahms (~abrahms@163.116.138.118) (Ping timeout: 256 seconds)
[03:18:14] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[03:18:43] <adlai> it's a more general problem, emacs is simply the usual suspect for this kind of issue.
[03:24:48] <Guest74> these are just representations, the underlying data always remains the same.
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:28:05] <kagevf> Guest74: I've had problems using cl-json with boolean "false" ... not a deal-breaker (for me) but something to be aware of
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:28:54] <Guest74> I think most have problems with that no?  Probably not a big deal for getting the weather.
[03:29:31] <kagevf> oh, IDK ... I've only used cl-json so far
[03:30:26] <kagevf> seems like JS false could easily be CL nil, but going in the other direction can be amgiguous for sure
[03:32:34] <kagevf> (json:decode-json-from-string "{\"value\": 123}") => ((:VALUE . 123)) ;; ok ...
[03:33:00] <kagevf> (json:decode-json-from-string "{\"value\": false}") => ((:VALUE)) ;; gasp!!
[03:33:25] *** Joins: winning-luser (~c@2601:8c1:80:70d0::756)
[03:35:41] <Guest74> ugh, rethinking jsown.  Keyword lists seem easier to apply than cons with strings.
[03:43:25] *** Joins: s-liao (~s-liao@101.86.99.70)
[03:51:58] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[03:55:26] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[04:04:28] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:04:28] *** Quits: abrahms66 (~abrahms@163.116.138.116) (Quit: Client closed)
[04:04:48] *** Joins: abrahms66 (~abrahms66@163.116.138.116)
[04:09:35] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[04:12:55] <dre> I'm so proud of my AoC 3 solution ;u;
[04:19:36] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[04:21:26] <rotateq> dre: great to hear :) do you already know bit-vectors? (instead of your bitstrings)
[04:22:23] <dre> I hadn't thought of it, but now thinking back, would that just be an array of values? #(0 1 0 1 0 1)
[04:22:56] <rotateq> and if you ever have the situation you want to count the ones in the binary representation of an integer, there's the standard symbol LOGCOUNT
[04:23:02] <dre> I could imagine it would make a few things a bit more terse and easier to read/write
[04:23:21] <rotateq> dre: yes, but the syntax is with #*010101
[04:23:29] <dre> thats interesting
[04:23:41] <rotateq> so that guarantees you all elements are of type bit
[04:23:52] <dre> oh and that's cool. if the next problem is in binary, I'll be sure to use it :P
[04:24:56] <dre> rotateq, I'm starting to understand lisp a little bit. hacking things together has been actually pretty fun and rewarding
[04:25:13] <rotateq> yes piece by piece
[04:26:30] <dre> it's interesting that I think I actually read the code in lisp, compared to "read what I think the code is doing" in python.
[04:27:14] <dre> i dunno, I'm enjoying it, that's all that matters.
[04:27:39] <rotateq> good
[04:28:38] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[04:31:18] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[04:32:57] <rotateq> dre: and transpose could be done with ⍉ ^^
[04:33:11] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[04:33:26] <rotateq> don't worry, partly a joke
[04:33:51] *** Joins: s-liao (~s-liao@101.86.99.70)
[04:33:58] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[04:34:09] <pjb> dre: (make-array 6 :element-type 'bit :initial-contents #(0 1 0 1 0 1)) #| --> #*010101 |#
[04:34:39] <pjb> dre: (make-array 6 :element-type 'unsigned-byte :initial-contents #*010101) #| --> #(0 1 0 1 0 1) |#
[04:35:26] <rotateq> 6⍴0 1
[04:36:07] <dre> I did see some people (remap?) the 'λ' char to lambda
[04:36:27] <rotateq> yes but that's another thing :)
[04:36:51] <dre> APL
[04:37:07] <Guest74> I'm on the fence but I think integers would have been good for day3.
[04:37:08] <rotateq> yes
[04:37:32] <rotateq> and the lambda maybe as a macro-character which simply expands
[04:38:54] <rotateq> and for typing it fast emacs key rebinding helps
[04:39:21] <dre> hmm
[04:39:29] <dre> I wonder if I could make custom compose keys
[04:39:49] <dre> well that looks easy.
[04:40:48] *** Parts: adlai (~adlai@80.244.243.194) (reducing the need for noise reduction)
[04:46:06] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[04:46:55] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[05:05:19] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[05:06:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[05:07:19] <Guest74> I can't believe I spent the whole figuring out json lib stuff and I might just end up using xml.  I have no idea why openweather provides less information and information in incorrect objects in their json replies.
[05:11:01] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[05:11:55] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 256 seconds)
[05:15:05] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[05:15:16] *** Quits: Catie (~user@user/catie) (Quit: switching clients)
[05:16:21] <semz> Websites (especially those that one'd rather interact with through an API than the site itself) tend to be mindbogglingly broken under the hood. I once encountered one whose JSON API didn't even return valid JSON - turned out the site wasn't actually using its own API but parsed HTML responses with JS instead. The API was just there because... I have no idea why.
[05:20:18] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[05:32:58] *** Joins: notzmv (~zmv@user/notzmv)
[05:39:42] <Guest74> It's certainly frustrating.  And here I thought json would be simpler than xml.  tbh i don't think anybody will care about the extra information when the info will probably be displayed as a bunch of icons.  I'm more upset I can't easily construct objects out of the json, instead I have to move stuff from one object to another.
[05:44:01] *** Quits: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6) (Ping timeout: 252 seconds)
[06:25:27] *** Joins: Oladon (~olad@98.43.81.226)
[06:29:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[06:30:56] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[06:31:37] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[06:37:33] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[06:40:21] *** Joins: Catie (~user@user/catie)
[06:40:33] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[07:06:09] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: This computer has gone to sleep)
[07:07:45] *** Joins: akoana (~ah@user/akoana)
[07:13:29] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:15:40] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[07:21:03] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[07:21:58] *** Joins: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se)
[07:26:25] *** Joins: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[07:30:14] <beach> Good morning everyone!
[07:32:52] <beach> dre: You still have some mysterious spacing like two spaces after LET or some space after an opening parenthesis.  An you have four inexplicable blank lines in the middle of your code.  Finally, the standard gives advice on how many semicolons to use in different situations, and top-level comments should have three semicolons.
[07:33:58] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:35:44] *** Joins: taiju (~taiju@m014013236064.v4.enabler.ne.jp)
[07:35:47] <beach> dre: And you have a mysterious closing parenthesis at the end of a comment.
[07:40:29] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: This computer has gone to sleep)
[07:45:40] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[07:55:11] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[08:07:32] <Guest74> What would be the easiest way to turn an octect vector into a stream so pngload can decode it?  Wish this was an option in pngload.
[08:09:23] *** Joins: makomo (~makomo@user/makomo)
[08:11:02] *** Joins: semz_ (~none@user/semz)
[08:12:41] <beach> You can turn it into a Gray stream.
[08:13:27] <Guest74> there's nothing in the standard?
[08:13:48] <beach> *sigh*
[08:13:50] <Guest74> that seems like it would be a lot slower than just saving it and then loading it.
[08:14:32] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[08:15:44] <hayley> It might be, but from experience streams are the best way to abstract over retrieving data somehow.
[08:15:47] *** semz_ is now known as semz
[08:16:09] <hayley> You might be reading from a file, in which case it would be faster to decompress the file while loading it off disk.
[08:18:56] <beach> Unless the vector is huge, it would seem like going to the OS to create a file, then open it and read it, would be much slower than staying in user land and main memory.
[08:19:21] <hayley> Yes, that is also true.
[08:19:29] <Guest74> pngload mmaps files and loads them really fast.
[08:22:14] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:27:17] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[08:28:41] <hayley> Good news for you: pngload reads the full contents of the stream into a byte vector, and then decodes from the vector. Thus the overhead of creating a Gray stream, and reading it once is definitely lower than saving and loading a file.
[08:29:58] *** Joins: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[08:30:03] <hayley> The latter consists of at least six syscalls (open file, write, close, open file, read, close), and updating page tables for mmap.
[08:30:24] <hayley> Okay, five syscalls, since we use mmaped memory to read, rather than calling read(), but you get the idea.
[08:31:30] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:35:22] *** Quits: waleee (~waleee@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[08:38:27] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:39:54] *** Joins: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net)
[08:42:32] *** Quits: blihp (~phil@c-68-43-233-92.hsd1.mi.comcast.net) (Client Quit)
[08:57:46] *** Joins: Oladon (~olad@98.43.81.226)
[09:33:35] <Guest74> hayley: and that's why I was wondering if there was an easy way considering I already have the byte vector.
[09:34:32] *** Joins: s-liao (~s-liao@101.86.99.70)
[09:47:51] <beach> There is.  You can turn it into a Gray stream.
[09:50:54] <Guest74> *sigh*
[09:54:41] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[09:55:33] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[09:55:44] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 252 seconds)
[10:07:08] *** Joins: notzmv (~zmv@user/notzmv)
[10:34:53] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[10:50:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:50:38] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[11:03:33] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[11:13:55] *** Quits: ogamita (~t@hubble.informatimago.com) (Remote host closed the connection)
[11:15:18] *** Joins: ogamita (~t@hubble.informatimago.com)
[11:21:32] *** Joins: nature (~nature@45.32.235.173)
[11:28:13] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:29:18] *** Joins: pve (~pve@188-67-28-80.bb.dnainternet.fi)
[11:29:58] <hayley> *sigh*
[11:33:02] *** Joins: igemnace (~ian@user/igemnace)
[11:34:00] *** Joins: gaqwas (~john@dynamic-095-118-129-205.95.118.pool.telefonica.de)
[11:34:33] <White_Flame> "pngload can be used to load images in the PNG image format, both from files on disk, or streams in memory."
[11:34:51] <White_Flame> it really, really seems to be the intended use case
[11:34:58] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[11:38:59] <White_Flame> however yes, looking into the code, it can probably be hacked to take an octet vector directly, but I'm not seeing a publi interface into it
[11:43:32] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:45:01] *** Joins: Algernon69 (~Algernon6@2a04:cec0:11db:cd2:108e:7a26:af0d:8b60)
[12:06:04] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:08:40] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:19:40] *** Joins: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it)
[12:26:35] *** Quits: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it) (Remote host closed the connection)
[12:43:20] <hayley> But who cares?
[12:55:31] *** Joins: Jach (~Jach@2601:600:8600:307:7e31:e7a7:f1f3:a96b)
[12:56:35] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[12:57:23] *** Joins: amb007 (~a_bakic@219.14.23.93.rev.sfr.net)
[12:57:58] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Read error: Connection reset by peer)
[12:59:59] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[13:10:33] <mfiano> I'd probably accept a PR for this. This isn't the first time for this request.
[13:22:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[13:33:25] *** Quits: gaqwas (~john@dynamic-095-118-129-205.95.118.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:36:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:36:49] *** Quits: amb007 (~a_bakic@219.14.23.93.rev.sfr.net) (Ping timeout: 256 seconds)
[13:37:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:37:45] *** Lord_of_Life_ is now known as Lord_of_Life
[13:37:50] *** Joins: amb007 (~a_bakic@146.148.22.93.rev.sfr.net)
[13:43:04] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[13:50:16] *** Joins: s-liao (~s-liao@101.86.99.70)
[13:53:39] *** Joins: cosimone\ (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:00:04] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Ping timeout: 256 seconds)
[14:01:48] *** Joins: karlosz (~karlosz@47.151.136.69)
[14:07:47] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[14:21:05] *** Quits: amb007 (~a_bakic@146.148.22.93.rev.sfr.net) (Ping timeout: 256 seconds)
[14:21:55] *** Joins: amb007 (~a_bakic@40.13.23.93.rev.sfr.net)
[14:28:36] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:28:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:31:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Client Quit)
[14:38:26] *** Quits: Algernon69 (~Algernon6@2a04:cec0:11db:cd2:108e:7a26:af0d:8b60) (Ping timeout: 252 seconds)
[14:39:25] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[14:46:09] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[14:46:39] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Remote host closed the connection)
[14:47:26] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[14:48:13] *** Joins: random-nick (~random-ni@87.116.165.83)
[14:50:44] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[14:55:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[15:02:27] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[15:10:54] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[15:12:11] *** Quits: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net) (Quit: Leaving)
[15:13:46] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:18:58] *** Joins: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net)
[15:29:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[15:32:33] *** Joins: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se)
[15:38:20] *** Joins: cosimone` (~user@93-47-228-147.ip115.fastwebnet.it)
[15:39:18] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:40:02] *** Quits: cosimone\ (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 252 seconds)
[15:43:23] *** Quits: winning-luser (~c@2601:8c1:80:70d0::756) (Remote host closed the connection)
[15:45:11] *** Joins: jpl01 (~user@2001:16b8:4910:b100:6c3e:d286:269b:9195)
[15:47:07] <jpl01> Is it a bad idea to use (load) to load a library instead of using ASDF or Quicklisp? if yes why?
[15:47:42] <pjb> No, it is not. If that libraries has only one file.
[15:48:47] <jpl01> Alright, thanks pjb.
[15:51:17] <beach> jpl01: Of course, you are going to want to use that library in your own code, so then you would write an ASDF system definition for your own code, and then you might as well make the library a dependency.
[15:51:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:51:58] <beach> jpl01: Otherwise, you will find yourself manually keeping track of what code needs what library, which is what ASDF does for you.
[15:57:27] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 252 seconds)
[16:08:07] *** Quits: amb007 (~a_bakic@40.13.23.93.rev.sfr.net) (Ping timeout: 256 seconds)
[16:09:12] *** Joins: amb007 (~a_bakic@39.37.22.93.rev.sfr.net)
[16:21:35] *** Joins: igemnace (~ian@user/igemnace)
[16:26:23] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:33:37] *** Quits: cosimone` (~user@93-47-228-147.ip115.fastwebnet.it) (Ping timeout: 256 seconds)
[16:33:50] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:37:55] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:113e:424d:4b7e:bc8)
[16:41:05] *** Quits: yewscion (~yewscion@2604:ca00:14a:ab8d::a60:7c54) (Ping timeout: 252 seconds)
[16:42:50] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[16:46:07] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[16:47:22] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:50:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[16:52:22] <mfiano> Not to mention hard-coding in paths, like dynamically binding *DEFAULT-PATHNAME-DEFAULTS*
[16:59:45] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[17:02:52] *** Joins: s-liao (~s-liao@101.86.99.70)
[17:03:07] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[17:03:41] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:113e:424d:4b7e:bc8) (Ping timeout: 245 seconds)
[17:04:36] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:113e:424d:4b7e:bc8)
[17:07:10] *** Joins: Algernon91 (~Algernon6@2a04:cec0:11db:cd2:71be:e71:944f:1b59)
[17:07:11] *** Quits: amb007 (~a_bakic@39.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[17:09:06] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[17:11:01] *** Quits: waleee (~waleee@h-82-196-111-63.na.cust.bahnhof.se) (Ping timeout: 256 seconds)
[17:11:20] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:113e:424d:4b7e:bc8) (Ping timeout: 252 seconds)
[17:12:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:17:37] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[17:18:32] *** Quits: Algernon91 (~Algernon6@2a04:cec0:11db:cd2:71be:e71:944f:1b59) (Ping timeout: 240 seconds)
[17:24:03] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[17:26:14] <rotateq> beach: After a little search I found a paper written by you about CL coding conventions. :)
[17:27:08] <mfiano> It is probably just an incomplete citation list from LUV
[17:28:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[17:30:52] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[17:32:30] <beach> rotateq: Yes, I wrote that some time ago.  I think some other people here have found it as well.
[17:43:29] *** Joins: cage (~cage@dynamic-adsl-94-34-12-161.clienti.tiscali.it)
[17:55:08] *** Joins: igemnace (~ian@user/igemnace)
[18:00:19] *** Quits: hobo (~hobo@69.218.33.204) (Ping timeout: 256 seconds)
[18:13:27] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:15:54] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[18:20:53] *** Joins: igemnace (~ian@user/igemnace)
[18:24:35] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[18:28:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:28:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[18:29:08] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:33:50] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[18:39:18] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:42:45] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[18:53:38] <pdietz> Is there a CL linter?  Shouldn't be too hard to walk over s-expressions and check things.  It could even be done at compile time with a macroexpand hook.
[18:55:54] <beach> The problem is that it's too late when you have READ it.  We need to catch incorrect spacing and indentation.
[18:58:20] <jackdaniel> things that can be commented on after reading the source code there is i.e lisp-critic
[18:58:23] <pdietz> Understood, but I was thinking more of checking the code itself.  For example, detecting when calls to destructive builtin functions don't do anything with the return value, or assumptions that boolean functions return T for true.
[18:58:31] <jackdaniel> (https://github.com/g000001/lisp-critic)
[18:58:34] <scymtym> pdietz: i have been working on that something like that for some time: https://techfak.de/~jmoringe/style-check.html . i get distracted often, so progress is slow. https://techfak.de/~jmoringe/file-reader-1.ogv gives the bigger picture
[18:59:23] <scymtym> i guess https://techfak.de/~jmoringe/bad-reader-conditionals-2.png is in the same category
[19:01:10] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:01:17] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:02:53] <Xach> nice
[19:07:44] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:08:03] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:14:06] *** Joins: abrahms6659 (~abrahms66@163.116.138.116)
[19:17:58] *** Quits: abrahms66 (~abrahms66@163.116.138.116) (Ping timeout: 256 seconds)
[19:24:11] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[19:27:44] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[19:33:03] *** Joins: gaqwas (~john@dynamic-095-118-129-205.95.118.pool.telefonica.de)
[19:33:05] <Shinmera> pdietz: I've wanted a "pure" attribute for functions in SBCL for a long time
[19:35:43] *** Joins: hobo (~hobo@cpe-98-144-21-85.wi.res.rr.com)
[19:38:08] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Remote host closed the connection)
[19:39:00] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:42:11] *** Joins: lisp123mobile (~lisp123mo@91.73.122.78)
[19:43:19] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[19:43:28] *** Quits: lisp123mobile (~lisp123mo@91.73.122.78) (Client Quit)
[19:49:53] *** Joins: cosimone (~user@93-47-228-147.ip115.fastwebnet.it)
[19:52:40] *** Joins: Oladon (~olad@98.43.81.226)
[19:53:34] *** Joins: treflip (~user@95.79.32.99)
[19:57:44] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[19:58:55] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Read error: Connection reset by peer)
[19:59:56] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[20:04:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 256 seconds)
[20:06:33] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[20:08:41] <Guest74> scymtym: very nice.  Can this be used without clim?
[20:09:33] <scymtym> Guest74: there are/will be multiple libraries. most don't know anything about the graphical presentation
[20:10:30] <Guest74> mfiano: is there danger of people changing *DEFAULT-PATHNAME-DEFAULTS*?  I just used this to add stuff to a users directory instead of pulling in xdg stuff.
[20:10:41] <Guest74> scymtym: nice!
[20:12:20] <Guest74> oh, i see clhs says it's typically in the working dir.
[20:30:37] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 252 seconds)
[20:31:27] *** Joins: amb007 (~a_bakic@18.37.22.93.rev.sfr.net)
[20:32:28] <Shinmera> clhs user-homedir-pathname
[20:32:28] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_user_h.htm
[20:34:10] <Guest74> thanks, that's what I changed it to.  So much stuff done at night I have to correct in the morning.
[20:50:34] *** Joins: Algernon91 (~Algernon6@88.124.69.179)
[20:51:10] *** Quits: amb007 (~a_bakic@18.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[20:52:08] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[20:55:32] *** Quits: mingus (~jan-magnu@auth-147-189.anyconnect.uib.no) (Ping timeout: 240 seconds)
[20:56:33] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[20:57:57] *** Joins: amb007 (~a_bakic@18.37.22.93.rev.sfr.net)
[21:02:10] *** Quits: amb007 (~a_bakic@18.37.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[21:02:48] *** Quits: abrahms6659 (~abrahms66@163.116.138.116) (Ping timeout: 256 seconds)
[21:03:03] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[21:09:04] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:20:27] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[21:23:45] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 256 seconds)
[21:29:49] *** Joins: abrahms6659 (~abrahms66@163.116.138.117)
[21:34:32] *** Quits: abrahms6659 (~abrahms66@163.116.138.117) (Ping timeout: 256 seconds)
[21:40:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:45:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[21:54:56] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[22:08:01] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[22:16:35] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 252 seconds)
[22:17:11] *** Joins: jacek (~jacek@cpc94356-ward12-2-0-cust88.10-2.cable.virginm.net)
[22:17:50] <jacek> hi, why is fiveam not failing test when the underlining function goes to an error?
[22:19:44] <jacek> sorry, my mistake
[22:20:08] <jacek> it appears my environment in the repl was slightly different
[22:21:25] *** Joins: abrahms6659 (~abrahms66@163.116.138.113)
[22:23:00] *** Joins: abrahms665920 (~abrahms66@163.116.138.113)
[22:26:06] *** Quits: abrahms6659 (~abrahms66@163.116.138.113) (Ping timeout: 256 seconds)
[22:27:20] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:28:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:29:22] *** Joins: Lycurgus (~juan@98.4.112.204)
[22:29:56] *** Quits: Algernon91 (~Algernon6@88.124.69.179) (Ping timeout: 245 seconds)
[22:31:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:34:20] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[22:35:49] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[22:37:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:45:51] *** Joins: bjorkintosh (~bjork@2600:1702:6a0:af0:3a85:80da:d37e:b375)
[22:46:09] <bjorkintosh> (shot '(in the dark))
[22:46:14] <bjorkintosh> anyone familiar with autolisp?
[22:47:16] <mfiano> bjorkintosh: I know Catie is, but that is a discussion that belongs in #lisp.
[22:47:25] <bjorkintosh> worth a shot.
[22:47:42] <bjorkintosh> mfiano, thanks.
[23:00:14] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[23:04:07] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[23:06:05] *** Quits: cosimone (~user@93-47-228-147.ip115.fastwebnet.it) (Ping timeout: 252 seconds)
[23:10:44] *** Quits: raeda_ (~raeda@72.49.249.241) (Read error: Connection reset by peer)
[23:11:03] *** Joins: raeda_ (~raeda@72.49.249.241)
[23:12:19] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[23:19:24] *** Joins: Nel (~Nel@172-222-135-071.res.spectrum.com)
[23:21:29] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[23:21:48] *** Quits: Nel (~Nel@172-222-135-071.res.spectrum.com) (Quit: Igloo IRC: https://iglooirc.com)
[23:31:56] <Guest74> anybody know if there's other slideshows like this for other libraries? https://www.slideshare.net/fukamachi/dexador-rises
[23:33:07] *** Joins: Nel (~Nel@172-222-135-071.res.spectrum.com)
[23:35:08] <theothornhill> Guest74: You mean apart from the others in the sidebar on that page?
[23:35:13] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[23:35:21] *** Quits: Nel (~Nel@172-222-135-071.res.spectrum.com) (Remote host closed the connection)
[23:35:28] <Guest74> yes
[23:37:02] <theothornhill> Then no, sorry :)
[23:38:25] <Guest74> I know there's some style slides somewhere.  would be nice to have them all gathered somewhere for simple folk like me.
[23:39:02] <mfiano> Would be nice if you did /nick jmc-design or something too, but we can't all win
[23:39:08] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:40:14] <Guest74> hopefully soon.
[23:44:26] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[23:57:09] *** Joins: skeemer (~skeemer@h-178-174-193-227.NA.cust.bahnhof.se)
