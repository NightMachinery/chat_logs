[00:15:14] <since_> sprintf("%.22f", 1:10/3)
[00:16:18] <since_> how many digits may it have?
[00:18:56] *** Joins: Colombo (~jmoravec@2406:e003:1df7:7601:f959:edf6:c2eb:f16d)
[00:19:08] *** Joins: rickyrick (~rickyrick@108.180.194.89)
[00:33:06] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[00:33:08] *** Joins: baffodoro (~raffaem@45.91.20.168)
[00:33:37] *** Quits: rickyrick (~rickyrick@108.180.194.89) (Ping timeout: 250 seconds)
[00:42:44] <Bayes> ^ heh that's why issue with padding, which I sometimes use, that it's not always evident how many you gotta use
[00:42:56] <Bayes> in this case it is simpler cause I know there are 25 integer values
[00:58:18] <fendur> does order matter if you know they'll all be ordered the same?
[00:58:39] <fendur> ("all" the objects that share these identifiers)
[01:07:14] <Bayes> I guess that'd still work
[01:07:28] <Bayes> but it'd be a bug waiting in the shadows
[01:07:38] <fendur> in which case?
[01:09:53] <since_> Error in options(digits = 23) : 
[01:09:55] <since_>   invalid 'digits' parameter, allowed 0...22
[01:45:47] *** Quits: twrk (~user@user/twrk) (Ping timeout: 250 seconds)
[01:50:21] <Colombo> ns12: Javascript, and people in the node or npm ecosystem, tend to go for super small/micro library/package dependencies.
[01:51:53] <Colombo> ns12: Originally it might made some sense because all these things need to be transferred as the browser is doing all the work, so it might make sense to send only single package shipping a single function and not library with 30 functions? And the default shipped library was quite barebone; and the ecosystem tried to make creating packages really simple
[01:52:24] <Colombo> ns12: the problem is that everyone started packaging a single function, depending on a single function, and even a relative simple task now has dozens if not hundred dependencies.
[01:53:06] <Colombo> ns12: this makes it especially sensitive to the supply chain attacks, as the left_pad and similar cases showed. But really, I am not expert, I keep away from web tech.
[02:20:29] *** Quits: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com) (Ping timeout: 268 seconds)
[03:29:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:01:10] *** Joins: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net)
[04:33:28] *** Quits: debianero (~debianero@60.132.134.77.rev.sfr.net) (Quit: Leaving)
[04:43:48] *** Joins: rickyrick__ (~rickyrick@d23-16-13-108.bchsia.telus.net)
[04:43:48] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Killed (NickServ (GHOST command used by rickyrick__)))
[04:54:43] *** rickyrick__ is now known as rickyrick
[04:56:55] *** Quits: monstar (~monstar@gateway/tor-sasl/monstar) (Ping timeout: 240 seconds)
[04:58:07] *** Joins: monstar (~monstar@gateway/tor-sasl/monstar)
[05:09:17] <Colombo> https://www.youtube.com/watch?v=FyCYva9DhsI
[05:09:26] <Colombo> Great talk, need to save it for later.
[05:17:21] *** Joins: rickyrick_ (~rickyrick@d23-16-13-108.bchsia.telus.net)
[05:17:21] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[05:17:33] *** rickyrick_ is now known as rickyrick
[05:21:40] <ns12> Colombo: "so it might make sense to send only single package shipping a single function and not library with 30 functions" - With the widespread use of JavaScript "tree shaking", that reason is probably obsolete now. Thanks for the explanation.
[05:25:56] <ns12> danshearer: "R is impressive, however a lot of people will find the need to build packages in a C++ environment quite strange, and the same mechanism installs from CRAN as from a random source repository without a word of advice or complaint about the giant footgun" - Isn't this similar to how Python's scientific stack (numpy, scipy, etc.) require
[05:25:56] <ns12> C, Fortran, etc. to build when installed using pip? If so, I am probably used to such things :-)
[05:26:39] <rickyrick> Colombo: breddy gud/10
[05:27:10] *** Quits: monstar (~monstar@gateway/tor-sasl/monstar) (Quit: WeeChat 3.0)
[05:27:21] <rickyrick> ns12: For most people, dealing with that aspect of R is installing Rtools and forgetting that it ever existed
[05:32:54] *** Joins: twrk (~user@user/twrk)
[05:34:39] <Colombo> ns12: in the olden days before remotes/devtools, if you installed a package from code, you were likely someone who knew what you were doing. Or you should have been.
[05:35:06] <Colombo> nowadays, it might be a problem.
[05:35:46] <Colombo> but then, even now I believe that installing from some random source is not standard practice and most people do it only for specific repos. And there is no auto-update.
[05:41:50] *** Joins: redrum88 (~redrum88@user/redrum88)
[05:56:40] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:59:49] *** Joins: redrum88 (~redrum88@user/redrum88)
[07:23:18] *** Joins: pdc (~raffaem@45.91.20.168)
[07:45:56] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[08:25:10] *** Joins: rickyrick_ (~rickyrick@d23-16-13-108.bchsia.telus.net)
[08:25:11] *** Quits: rickyrick (~rickyrick@d23-16-13-108.bchsia.telus.net) (Killed (NickServ (GHOST command used by rickyrick_)))
[08:29:07] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:29:55] *** rickyrick_ is now known as rickyrick
[09:00:42] *** Joins: davor_ (~davor@user/davor)
[09:01:00] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[10:17:23] <Colombo> Do you often have this "Am I stupid? Or this is really badly written code, almost verbatim taken from other language with nonsensically named variables that don't make any sense"? I have this now.
[11:51:47] *** Joins: palasso (~palasso@user/palasso)
[12:22:59] <ns12> In R? I have yet to read much code in R.
[12:26:51] *** Joins: Vojtaeus (~vojta@user/vojtaeus)
[12:33:25] *** Joins: debianero (~debianero@60.132.134.77.rev.sfr.net)
[13:33:31] *** Joins: LogIN (~LogIN@104.248.160.203)
[13:33:40] *** Quits: LogIN (~LogIN@104.248.160.203) (Remote host closed the connection)
[13:37:00] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[13:40:18] *** Joins: velix (~velix@user/velix)
[13:40:36] <velix> Hmm. Anyone with an idea, if this tool does things right when calculation quartiles?? https://bpa.st/raw/DJJA
[13:41:18] <velix> I'm expecting 9.7185
[13:41:18] <velix>  to be the median :D
[14:05:22] <velix> forgot the header. thanks!
[14:05:45] <Colombo> anyone got experience with calling C function?
[14:05:54] <Colombo> Particularly C functions that are already present in R.
[14:06:10] <Colombo> I am interested in the C_acf function.
[14:30:57] *** Parts: velix (~velix@user/velix) (Leaving)
[14:36:22] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[14:38:32] *** Quits: Colombo (~jmoravec@2406:e003:1df7:7601:f959:edf6:c2eb:f16d) (Quit: Leaving.)
[14:43:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:45:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[14:45:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:47:08] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[14:52:47] *** Joins: usr725635_ (~User@cpe-45-47-86-32.twcny.res.rr.com)
[14:59:28] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:01:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:09:57] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[15:11:23] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[15:11:59] *** Joins: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net)
[15:12:06] <torbjorn_> has anyone seen R forking processes just by its own free will?
[15:12:06] <eoli3n> Hi
[15:12:21] <eoli3n> how to export R packages list as "name;version" please ?
[15:12:24] <eoli3n> from shell
[15:13:08] <eoli3n> the best i got is -> R -e "installed.packages()[,c(1,3)]"
[15:13:24] <eoli3n> but i'm not a R user, i don't userstand how the c function is working here
[15:13:33] <torbjorn_> c creates a vector
[15:13:53] <torbjorn_> (vector = list/array in other languages)
[15:13:54] <eoli3n> i don't know what is a vector
[15:14:01] <eoli3n> oh ok
[15:14:09] <eoli3n> so what the simplest way to get my csv :) ?
[15:14:28] <eoli3n> i'm sysadmin, i just want to list packages with their versions
[15:15:55] <torbjorn_> R -s -e 'write.table( installed.packages()[,3,drop=F], sep=";")'
[15:16:21] <eoli3n> ouch , nice shot !
[15:16:25] <eoli3n> thanks a lot
[15:16:29] <torbjorn_> np
[15:16:39] <eoli3n> just wondering why there is the header line as "Version"
[15:16:49] <eoli3n> i can drop it with sed '1d'
[15:17:14] <torbjorn_> R -s -e 'write.table( installed.packages()[,3,drop=F], sep=";", col.names=F)'
[15:17:22] <eoli3n> and a last thing is, can i drop all '"' ?
[15:17:40] <eoli3n> thanks torbjorn_
[15:17:40] <torbjorn_> dont think so, its valid csv
[15:17:50] <eoli3n> it is yes, i will parse it outside of R
[15:18:13] <torbjorn_> R -s -e 'write.table( installed.packages()[,3,drop=F], sep=";", col.names=F, quote=FALSE)'
[15:18:16] <torbjorn_> I was wrong
[15:18:31] <eoli3n> thanks !
[15:19:17] <torbjorn_> what do you need it for?
[15:20:55] <eoli3n> i work at a university, and i'm scripting packages list exporter as csv for a web interface
[15:21:33] <torbjorn_> I see, to report packages used for some operation in R?
[15:21:44] <eoli3n> this https://x0.at/HqVf.txt
[15:22:05] <eoli3n> nop, just to let users define themselve as $package user
[15:22:13] <eoli3n> to drop non useful packages
[15:30:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:34:59] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:37:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[15:40:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:50:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:50:52] *** Joins: stdInOut (~stdInOut@user/stdInOut)
[15:51:46] *** Quits: stdInOut (~stdInOut@user/stdInOut) (Client Quit)
[16:05:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:05:49] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[16:09:19] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:13:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[16:17:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:20:09] *** Joins: julius3 (~raffaem@45.91.20.92)
[16:20:12] *** Quits: baffodoro (~raffaem@45.91.20.168) (Ping timeout: 240 seconds)
[16:20:23] *** Quits: pdc (~raffaem@45.91.20.168) (Ping timeout: 256 seconds)
[16:21:01] *** Joins: baffodoro (~raffaem@45.91.20.92)
[16:35:57] *** Quits: julius3 (~raffaem@45.91.20.92) (Remote host closed the connection)
[16:35:57] *** Quits: baffodoro (~raffaem@45.91.20.92) (Remote host closed the connection)
[16:39:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[16:40:10] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[16:41:37] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:41:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:47:10] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:03:00] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[17:13:37] *** Quits: JoshStark (~JoshStark@linuxserver.io/stark) (Ping timeout: 240 seconds)
[17:14:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:15:05] *** Joins: JoshStark (~JoshStark@linuxserver.io/stark)
[17:27:25] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[17:34:31] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:47:41] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[17:48:28] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:03:59] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[18:05:27] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:15:02] *** Joins: fillx (~fillx@user/fillx)
[18:18:43] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[18:25:00] *** Quits: fillx (~fillx@user/fillx) (Quit: Leaving)
[18:25:13] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:34:23] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[18:41:11] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:53:34] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[18:54:28] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[18:58:39] <since_> wat is the best way to minimize ||Ax-b|| with x being a vector only consisting of zeros and ones?
[18:58:55] <since_> i.e. approximately solve Ax=b with x € {0,1}^n
[18:59:42] <since_> (A is also a toeplitz matrix)
[19:00:41] <since_> (and they are both quite small (n=8))
[19:01:09] <since_> but i need to do this often in real time, so it should be fast
[19:05:32] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:11:00] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[19:11:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:21:15] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[19:31:52] <tmyklebu_> since_: tbh, try all 256 possibilities.
[19:33:05] <tmyklebu_> since_: you should be able to do that in a handful of microseconds.
[19:34:01] <since_> tmyklebu_: yes this is what i was thinking about :D
[19:35:06] <since_> but i thought it might even be faster, because a 1 in x_i just means to take the column or not
[19:35:57] <since_> so i thought about calcuating the difference of each column to the resulting vector
[19:36:36] <since_> and then selecting from the set of the 8 differences , such that the sum is minimal
[19:37:30] <tmyklebu_> the branching and other nonsense you have to do to make that work is fairly costly in the worst case.
[19:40:19] <since_> selecting from 8 differences is also just 256 possibilities. so doing it that way its O(256 * n^2) vs. trying every x O(256 * n^3)
[19:40:38] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:41:04] <since_> but i asked here, maybe there is a word for such discrete problems that i can google
[19:41:23] <since_> because maybe i want x € {-1, 0, 1} etc
[19:48:02] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:50:03] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[19:56:07] <rickyrick> since_: Probably solving linear systems on finite fields
[19:56:14] <rickyrick> idk if toeplitz gets you any extra structure you can do
[19:56:33] <rickyrick> Specifically linear systems over Z2
[19:56:59] <rickyrick> But I guess your A and b aren't restricted to be in {0,1}
[19:57:00] <rickyrick> so idk :^)
[19:57:23] <since_> yup A and b have values in R
[19:58:04] <rickyrick> Is your norm L2 norm?
[19:59:01] <since_> yes, but maybe it works with L1 aswell
[19:59:06] <rickyrick> The "solution is in {0,1}" sounds like an integer programming problem tbh
[19:59:39] <Bayes> GA :D
[19:59:44] <rickyrick> lel
[19:59:56] <Bayes> tho it's wont be as "real time" as you'd like it to be
[20:00:37] <Bayes> I mean if it's really critical and you have 256 possibilities only, C should get you a quick answer
[20:01:35] <Bayes> this is the kind of problem that is likely to have been addressed but searching thru scientific literature will hinder finding the right solution :/
[20:02:02] <since_> Bayes: yes but i alway think i am reinventing the wheel, and then i hack something together which is way worse than what existed some paper from people with academic degrees in 1955
[20:02:25] <rickyrick> Just like re-inventing Simpson's rule
[20:03:52] <Bayes> I agree
[20:04:01] <Bayes> I struggle to find browse thru scientific literature
[20:04:30] <Bayes> even when searching for problems that I could be 99% sure that they've been addressed before
[20:04:45] <Bayes> mandatory "such is life in the zone"
[20:10:57] <since_> what i really want to do is (please don't laugh - i have no idea): autoregression on audio snippets and clamping the coefficients to something discrete. there is a whole lot of research in this field of quantizing for best possible audio experience - but my motivation is "i can barely understand what voices say". i tried different AR implementations, and interestingly i can _sometimes_ botch with the
[20:10:59] <since_> results and still understand what is being said, while other implementations (of the same algorithms!) lead results that are perceived by the brain entirely different after my "treatment"
[20:11:00] <rickyrick> ( ͡° ͜ʖ ͡°)
[20:12:04] <since_> the R levinson algorithm works. but i do not understand the code. https://svn.r-project.org/R/trunk/src/library/stats/src/eureka.f
[20:12:33] <rickyrick> Yeah I wouldn't try to parse the FORTRAN to understand the method
[20:12:51] <rickyrick> That's also a general solution to a linear system with Toeplitz
[20:12:57] <rickyrick> Not necessarily in {0,1}
[20:13:26] <since_> yes
[20:13:54] <rickyrick> Since it's audio data, I'm guessing A and b are fairly large?
[20:14:31] <since_> but interestingly i can still understand the voice after clamping abs(ar-result) to 1 and 0
[20:15:07] <rickyrick> >clamping
[20:15:41] <rickyrick> Are you trying to find a reduced frequency representation of your sound or something?
[20:16:30] <since_> rickyrick: yes, but instead of working with the toeplitz of the samples, one can work with just the toeplitz about 11 autocorrelation values
[20:18:38] <since_> what i really want to do is (please don't laugh - i have no idea): autoregression on audio snippets and clamping the coefficients to something discrete. there is a whole lot of research in this field of quantizing for best possible audio experience - but my motivation is "i can barely understand what voices say". i tried different AR implementations, and interestingly i can _sometimes_ botch with the
[20:18:40] <since_> results and still understand what is being said, while other implementations (of the same algorithms!) lead results that are perceived by the brain entirely different after my "treatment"
[20:18:44] <since_> urgh sorry
[20:19:32] <tmyklebu_> since_: "integer quadratic program"
[20:20:35] <since_> as i understand it - i do not really care about the (absolute) frequency representation, rather the relations of different frequencies to each other, or in case of AR this gives me a filter that i can apply to a base frequency i want
[20:20:40] <tmyklebu_> since_: you can read up on integer QPs and you'll find it's NP-complete, even when the variables are zero-one.  at your problem size, your best option is going to be some kind of brute force tuned to your processor architecture.
[20:21:33] <rickyrick> interdasting
[20:22:15] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[20:22:18] <rickyrick> idk what the application is though
[20:24:24] <since_> finding similar speech utterances in audio, without going into cursed speech recognition territory. and it does not need to work perfectly :D
[20:24:41] <Bayes> why on earth is my rstudio crashing when calling emmeans https://i.imgur.com/g9Hmcuc.png :(
[20:24:52] <Bayes> I had to take a screenshot cause I couldn't copy the text
[20:25:20] <rickyrick> Bayes: get more memory
[20:25:40] <Bayes> I think 64gb should be enough?
[20:25:49] <rickyrick> since_: Do you mean finding repeated syllables in time or something of that effect?
[20:26:04] <rickyrick> The usual way I've seen is FFT or DCT or DST or one of those style of transforms
[20:26:10] <rickyrick> Bayes: ¯\_(ツ)_/¯
[20:26:14] <rickyrick> Never used emmeans
[20:26:34] <Bayes> ah, ever worked with experimental data?
[20:26:55] <rickyrick> Only the ones taken in silico ( ͡° ͜ʖ ͡°)
[20:27:11] <Bayes> computer experiments?
[20:27:31] <rickyrick> Simulation studies
[20:27:36] <Bayes> those are my bread and butter ＼(＾▽＾)／
[20:28:28] <Bayes> ha, it crashes but it doesn't use more than 7gb of ram so I'm good hwwise
[20:28:32] <rickyrick> With modern computing power I just run full factorial designs over all the combinations :^)
[20:29:05] <Bayes> that's cause you don't work with simulations that can take up days to compute a single run
[20:29:18] <rickyrick> Yep
[20:29:20] <rickyrick> https://github.com/rstudio/rstudio/issues/9251
[20:29:32] <Bayes> and experimental designs with more than 2 billion combinations xD
[20:29:34] * rickyrick parallelizes over 512 cores
[20:30:10] <Bayes> nice
[20:30:28] <Bayes> better than gpus heh
[20:30:48] <Bayes> I can only get up to 324 cores
[20:30:54] <Bayes> but the real issue is ram
[20:31:25] <mefistofeles> ram jam
[20:31:25] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[20:31:26] <Bayes> it's hard to use all them 324 cores without getting capped by 8gb of ram per core :/
[20:32:06] <since_> rickyrick: yes, but the LPC approach looked (sounds) promising. in early GSM also LPC was used to transmit voice and the receiver phone either generated a tone of a single pitch or white noise and having the LP coefficients applied to it as filter. and then people used the LP coefficients for speech recognition, and i can still barely understand my voice when i code it with 1byte per 20ms. so i thought
[20:32:08] <since_> i'll try this in practice
[20:33:49] <Bayes> dang I forgot how to tangle an Rmd file :D
[20:34:02] <Bayes> im getting bad at this
[20:34:47] <rickyrick> since_: That's more domain-knowledge than I have ¯\_(ツ)_/¯
[20:35:14] <rickyrick> 1 byte per 20ms is 50 bytes/sec
[20:35:58] <rickyrick> AFAIK opus codec can only go down to 6 kilobytes/sec
[20:36:00] <rickyrick> So there's that
[20:36:19] <mefistofeles> rickyrick: nope
[20:36:29] <mefistofeles> or, yes
[20:36:30] <mefistofeles> xD
[20:37:39] <since_> yeah - but opus sounds good in comparison. i throw away the pitch information, because i do not need it. and only voice works, music is not understandable with lpc10 e.g.
[20:38:44] <since_> and opus uses lpc internally, and i borrowed their levinson durbin algorithm, but i can't clamp the results the same way i can do with ar.yw and still understand _something_
[20:38:46] <rickyrick> Bayes: Download more RAM :^)
[20:40:34] <rickyrick> since_: ¯\_(ツ)_l¯
[20:41:55] <Bayes> rickyrick how much ram do you get for all those 512 cores
[20:42:29] <mefistofeles> that's a huge machine, I'd guess it's some kind of amd epyc machine?
[20:43:51] <rickyrick> idk about 2TB
[20:43:57] <rickyrick> It's spread over a couple of separate instances though
[20:43:59] <rickyrick> ( ͡° ͜ʖ ͡°)
[20:44:12] <Bayes> > "fixed-effect model matrix is rank deficient so dropping 1 column / coefficient" if you could tell me which one you're dropping (◕︵◕)
[20:44:30] <rickyrick> The solution should be obvious to the reader
[20:44:34] <Bayes> lmao
[20:44:40] <Bayes> oh man I hate those
[20:44:43] <Bayes> I really hate those
[20:44:56] <rickyrick> Author's face when: ( ͡° ͜ʖ ͡°)
[20:45:16] <Bayes> that sounds like some nice hw, lmk when you're hiring :D
[20:46:21] <mefistofeles> 122 nodes, ~6,840 cores, ~475 GPUs, ~50 TB of RAM
[20:46:36] <mefistofeles> not bad
[20:51:26] <rickyrick> ya ask mefistofeles for a jerb
[21:17:25] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[21:26:13] *** Quits: Vojtaeus (~vojta@user/vojtaeus) (Quit: Odcházím...)
[21:29:51] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[21:33:11] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:47:11] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:23:11] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[23:23:39] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[23:28:31] *** Joins: joshisanonymous (~joshisano@2600:6c5a:457f:c4b5:b592:2856:39c5:889e)
[23:34:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[23:38:29] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[23:41:07] *** Joins: Colombo (~jmoravec@2406:e003:1df7:7601:f29f:7b40:30f6:7c65)
