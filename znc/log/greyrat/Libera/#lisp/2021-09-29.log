[00:05:18] *** Quits: tyson2 (~user@198.98.115.227) (Quit: ERC (IRC client for Emacs 27.2))
[00:09:38] *** Joins: tyson2 (~user@198.98.115.227)
[00:10:25] *** Quits: alexshendi (~alexshend@HSI-KBW-046-005-255-047.hsi8.kabel-badenwuerttemberg.de) (Read error: Connection reset by peer)
[00:12:38] *** Quits: terrorjack (~terrorjac@2a05:d012:f4:f400:3981:7d7e:56ee:2dd9) (Quit: The Lounge - https://thelounge.chat)
[00:13:53] *** Joins: alexshe73 (~alexshend@HSI-KBW-046-005-255-047.hsi8.kabel-badenwuerttemberg.de)
[00:14:51] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:16:03] *** Quits: eddof13 (~textual@187.212.196.138) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:19:44] *** Quits: fanthomas (~fanthomas@gw105-92.imafex.sk) (Quit: Client closed)
[00:26:46] *** Quits: tyson2 (~user@198.98.115.227) (Quit: ERC (IRC client for Emacs 27.2))
[00:42:44] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:43:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:45:31] *** Lord_of_Life_ is now known as Lord_of_Life
[00:48:13] *** Joins: MrFantastik (~f@cpe-69-204-101-67.buffalo.res.rr.com)
[00:49:16] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e473:ba5e:85e3:6828) (Ping timeout: 245 seconds)
[00:51:40] *** Quits: alexshe73 (~alexshend@HSI-KBW-046-005-255-047.hsi8.kabel-badenwuerttemberg.de) (Quit: -a- Connection Timed Out)
[00:55:58] *** Joins: alexshendi (~alexshend@HSI-KBW-046-005-255-047.hsi8.kabel-badenwuerttemberg.de)
[01:00:11] *** Quits: alexshendi (~alexshend@HSI-KBW-046-005-255-047.hsi8.kabel-badenwuerttemberg.de) (Ping timeout: 246 seconds)
[01:05:05] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:49a:d91:b0b6:bcc6)
[01:06:24] <Spawns_Carpetin-> What is the most useful lisp dialect and/or impl for general purpose scripting or programming
[01:06:46] <Spawns_Carpetin-> something with a decent-ish stdlib or at least access to many high quality libs
[01:11:14] <mfiano> Common Lisp
[01:14:37] <wasamasa> "general purpose scripting" isn't narrowing it down at all
[01:15:12] <wasamasa> you have to be a lot more precise and compare lisp dialects yourself
[01:16:10] <wasamasa> for example newlisp is designed towards that, but worth using, nah
[01:16:50] <wasamasa> txr-lisp does fulfill the definition if you want to do awk-like text munging
[01:17:20] *** Quits: cosimone (~user@93-44-187-87.ip98.fastwebnet.it) (Ping timeout: 246 seconds)
[01:18:23] <wasamasa> there are a few scheme implementations with access to high quality libraries via FFI, but I doubt that's what you mean either, lol
[01:21:05] <Spawns_Carpetin-> yeah I guess something that would work as a decent alternative to python
[01:21:35] <wasamasa> do you realize just how many libraries python has?
[01:21:45] <wasamasa> even if you just look at the built-in ones
[01:21:47] <dash[m]> dozens
[01:22:00] <dash[m]> Spawns_Carpetin-: emacs lisp comes closest
[01:22:02] <mfiano> Common Lisp has a Python interface
[01:22:10] <moon-child> common lisp is a terrible scripting language
[01:22:17] <dash[m]> (this answer is wrong, but in the same way that all the other answers are wrong)
[01:22:37] <moon-child> it deigns to run in unix, because a lisp os with broad hardware support has not been devised yet; but only grudgingly
[01:22:56] <Spawns_Carpetin-> i love elisp but using it for general programming is kind of weird since its built to work with emacs
[01:22:59] <wasamasa> I use CHICKEN for programs that I want to put in more effort than I'd do with ruby
[01:23:16] <Spawns_Carpetin-> like loading a text file into a list, you have to put it into a buffer instead
[01:23:19] <dash[m]> Spawns_Carpetin-: why would you want something that didn't work with emacs, though? ;-)
[01:23:32] <Spawns_Carpetin-> lol good point
[01:24:05] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:24:21] <mfiano> Depends how general he means. If he wants to do something like game development, maximizing CPU computation performance is a necessity (so I'd still go with Common Lisp :))
[01:24:54] <wasamasa> yeah right, I wouldn't do game development in python/ruby
[01:24:57] <wasamasa> but in a lisp, sure
[01:25:43] <dash[m]> there's a tetris in elisp, what else could you want
[01:25:44] <dash[m]> ;-)
[01:26:43] <mfiano> (In actuality good game development involves balancing the load between the CPU and GPU, but since the GPU is for the most part a supercomputer that is only useful for specialized tasks...)
[01:26:43] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:49a:d91:b0b6:bcc6) (Read error: Connection reset by peer)
[01:26:54] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:49a:d91:b0b6:bcc6)
[01:28:27] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[01:28:52] *** Joins: jao (~jao@219.96.19.95.dynamic.jazztel.es)
[01:31:11] <wasamasa> I gave up on making an actually good looking tetris in elisp
[01:31:18] <mfiano> Double-precision floating point operations on the GPU is a many-fold performance trap compared to single-precision, for example. Branching hurts quite a bit more than the CPU, too. etc
[01:31:32] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[01:34:20] <Psybur> Ive been leaning towards Racket for general purpose stuff
[01:34:50] <Psybur> Nothing Id want to port tho
[01:35:38] <Psybur> transport that is
[01:36:55] <Psybur> Id probably use CHICKEN for that
[01:39:11] <Spawns_Carpetin-> racket does look like but it doesn't feel very lisp imo
[01:39:15] <Spawns_Carpetin-> look nice*
[01:39:40] <Spawns_Carpetin-> wow I messed that message up bad. let me retry. racket looks nice but it doesn't feel very lisp-y
[01:39:52] <Psybur> Spawns_Carpetin-, what did you find lacking?
[01:40:12] <mfiano> What do you define as "lisp-y"?
[01:40:39] <Spawns_Carpetin-> well I wouldn't call it lacking exactly. iirc most things are immutable by default, and regular procedural style looping is discouraged
[01:41:35] <Spawns_Carpetin-> it seems like it leans a lot more towards functional programming than common lisp would, which is not a bad thing IMO
[01:41:44] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:47] <mfiano> Well it has its Scheme roots. Pre-ANSI and ANSI Common Lisp favored iteration over recursion, unlike Scheme and its derivatives.
[01:41:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[01:45:39] <copec> I mostly play in CL, but I learned lisp from SICP in the 90's, and prefer looping through recursion :-/ 
[01:45:45] <Psybur> Rackets loops are pretty good. for (and for/last etc) and its stop-before and stop-after, and break/final are nice. https://docs.racket-lang.org/guide/for.html
[01:46:29] <copec> interestingly enough, https://gist.github.com/copecog/98ac0e5cfafc1155bc82c31efae21ceb fib-recur is quicker on ever CL implementation I've tested
[01:46:50] <Spawns_Carpetin-> right now i have SBCL installed and have been using it. I have a really rough time getting the syntax right though
[01:47:53] <mfiano> You just need to choose the correct path as a beginner, and you become proficient fast
[01:48:14] <mfiano> This path usually begins with PCL for most
[01:48:32] <copec> ^ ++
[01:52:01] <Spawns_Carpetin-> what is PCL?
[01:52:30] <mfiano> minion: tell Spawns_Carpetin- about PCL
[01:52:33] <minion> Spawns_Carpetin-: look at PCL: pcl-book: "Practical Common Lisp", an introduction to Common Lisp by Peter Seibel, available at http://www.gigamonkeys.com/book/ and in dead-tree form from Apress (as of 11 April 2005).
[01:54:25] <mfiano> The one thing no book will teach you unfortunately, is how to set up Emacs, paredit/smartparens, and SLIME/Sly, which is a necessity since Common Lisp is such an interactive language.
[01:56:39] <Spawns_Carpetin-> i do have paredit setup
[01:57:13] <copec> PCL references lisp in a box, I recommend https://portacle.github.io/ until you figure out your own system
[01:59:08] <mfiano> PCL is such a wonderful book though. It is recommended to read it linearly.
[02:00:15] <mfiano> Cover to cover, without skipping anything, and taking your time with the "practical" chapters, asking questions here if something is confusing.
[02:00:37] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[02:00:49] <mfiano> With that path, you'll be on your way to being one of those famously bearded Lisp wizards :)
[02:01:32] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[02:03:49] <Spawns_Carpetin-> ahh the old lisp wizard beard
[02:04:09] <mfiano> https://i.lisp.cl/6rlxmU.png
[02:07:30] <mfiano> Probably want to direct questions to #commonlisp or #clschool actually :)
[02:08:47] <copec> I keep meaning to go through this with racket: https://beautifulracket.com/appendix/why-lop-why-racket.html
[02:15:46] <mfiano> The thing I dislike about Haskell the most, is it seems even more "research-y" than Lisp, with most libraries being incomprehensible type system abuses.
[02:16:12] <mfiano> and I posted that in the wrong channel. I should give up for the day :/
[02:19:04] *** Quits: frgo (~frgo@p200300deef0cee001d6a41243919a152.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:19:32] *** Joins: frgo (~frgo@p200300deef0cee001d6a41243919a152.dip0.t-ipconnect.de)
[02:22:31] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:25:56] *** Joins: paul0 (~paul0@2804:1b3:8401:fbfd:3084:2011:c0da:5b95)
[02:29:12] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: quit)
[02:47:05] *** Quits: Josh_2 (~user@37.25.47.130) (Remote host closed the connection)
[02:51:22] <Psybur> Are FORMAT directives turing complete?
[02:51:46] <mfiano> Yes
[02:52:20] <Psybur> Nice
[02:53:15] <mfiano> Well actually not
[02:53:26] <mfiano> I dont think it is, because there is no state
[02:53:37] <mfiano> However you can call arbitrary functions
[02:54:01] *** Quits: jao (~jao@219.96.19.95.dynamic.jazztel.es) (Remote host closed the connection)
[02:54:08] <Psybur> That doesnt count!
[02:54:52] <mfiano> I'm actually not sure if you can call the DSL Turing-complete, without ~/ and a closure.
[02:54:59] <mfiano> and maybe even still not
[03:00:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:09:14] *** Joins: jao (~jao@219.96.19.95.dynamic.jazztel.es)
[03:20:06] *** Quits: macaw (~macaw@176.221.120.196) (Ping timeout: 256 seconds)
[03:21:46] *** Quits: random-nick (~random-ni@87.116.178.45) (Ping timeout: 245 seconds)
[03:25:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:03:05] *** Quits: hisacro (~OBSD@my.displ.nl) (Ping timeout: 264 seconds)
[04:16:38] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:49a:d91:b0b6:bcc6) (Remote host closed the connection)
[04:17:30] *** Joins: hisacro (~OBSD@my.displ.nl)
[04:19:20] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[04:21:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Read error: Connection reset by peer)
[04:22:25] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:23:09] *** Quits: karlosz (~karlosz@47.180.55.252) (Quit: karlosz)
[04:32:08] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[04:41:13] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[04:42:28] *** Joins: xiews (~wxie@222.64.216.101)
[05:10:45] *** Joins: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au)
[05:17:38] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:20:31] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[05:20:31] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[05:28:43] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2.1)
[05:31:25] *** Joins: lottaquestions (~nick@2607:fa49:503e:3000:d480:3919:61b7:3376)
[05:59:16] *** Quits: jao (~jao@219.96.19.95.dynamic.jazztel.es) (Ping timeout: 245 seconds)
[06:02:49] *** Joins: gko (~user@user/gko)
[06:09:41] *** Quits: prxq (~quassel@x4db4ceac.dyn.telefonica.de) (Ping timeout: 252 seconds)
[06:09:51] *** Joins: prxq (~quassel@x4dbdc5f0.dyn.telefonica.de)
[06:10:00] *** Quits: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net) (Quit: ERC (IRC client for Emacs 28.0.50))
[06:34:50] *** Joins: zazzerino (~user@2600:1700:6004:8470::13)
[06:54:48] *** Joins: karlosz (~karlosz@12.196.174.98)
[07:12:23] *** Quits: yewscion (~yewscion@2604:ca00:15c:b8dd::e60:89c6) (Ping timeout: 265 seconds)
[07:29:41] *** Quits: zazzerino (~user@2600:1700:6004:8470::13) (Remote host closed the connection)
[07:38:10] *** Joins: phossil (tophullyte@gateway/vpn/protonvpn/tophullyte)
[07:40:59] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Ping timeout: 252 seconds)
[07:43:13] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Remote host closed the connection)
[07:43:37] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[07:47:09] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[07:51:19] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[07:53:54] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[07:55:42] *** Quits: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[07:59:20] *** Quits: xiews (~wxie@222.64.216.101) (Ping timeout: 268 seconds)
[08:04:53] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Ping timeout: 264 seconds)
[08:13:36] *** Joins: xiews (~wxie@101.80.77.236)
[08:15:13] *** Quits: phossil (tophullyte@gateway/vpn/protonvpn/tophullyte) (Quit: Leaving)
[08:19:40] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[08:20:12] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[08:21:46] *** Quits: xiews (~wxie@101.80.77.236) (Ping timeout: 245 seconds)
[08:25:42] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[08:28:32] *** Joins: rgherdt (~rgherdt@95.90.244.86)
[08:29:35] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 246 seconds)
[08:29:56] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 246 seconds)
[08:34:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 246 seconds)
[08:35:31] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Ping timeout: 245 seconds)
[08:41:01] *** Joins: xiews (~wxie@222.64.216.101)
[08:48:18] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[08:48:50] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[08:48:57] *** Joins: yewscion (~yewscion@2604:ca00:14a:1099::460:12d0)
[08:49:46] *** Joins: yewscion_ (~yewscion@64.9.247.158)
[08:51:47] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:52:12] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[08:52:15] *** Joins: karlosz (~karlosz@12.196.174.98)
[08:52:31] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:53:29] *** Quits: yewscion (~yewscion@2604:ca00:14a:1099::460:12d0) (Ping timeout: 264 seconds)
[08:54:00] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[08:54:16] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[08:54:32] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[09:08:05] *** Joins: sndr (~sander@user/sander)
[09:08:26] *** Quits: sander (~sander@user/sander) (Ping timeout: 252 seconds)
[09:08:48] *** sndr is now known as sander
[09:11:57] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[09:18:51] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 245 seconds)
[09:22:53] *** Quits: yewscion_ (~yewscion@64.9.247.158) (Ping timeout: 264 seconds)
[09:24:42] *** Quits: paul0 (~paul0@2804:1b3:8401:fbfd:3084:2011:c0da:5b95) (Quit: Leaving)
[09:30:08] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Ping timeout: 246 seconds)
[09:38:26] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[09:38:37] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[09:38:37] *** Quits: karlosz (~karlosz@12.196.174.98) (Ping timeout: 268 seconds)
[09:39:45] *** Joins: shka (~herr@109.231.6.176)
[10:03:07] <ecraven> I have the following small-float format that I want to decode: a 7-bit excess-100 exponent [I think this is octal, so actually 64] and a 17-bit 2's complement normalized mantissa. "normalized" means the left-most bit of the mantissa has to be a 1, right?
[10:07:17] <pjb> ecraven: yes, but it may be omited. In IEEE it's not stored.
[10:07:43] <ecraven> that's not the case here, I think
[10:13:38] *** Joins: JeSCaLis23-F (~rizon@188.119.22.153)
[10:14:27] * JeSCaLis23-F https://o11.me/VK3KV
[10:15:30] <mfiano> ecraven: What is this for/where did you get those numbers from?
[10:15:53] <ecraven> the MIT CADR uses this for small flonums
[10:16:04] *** Quits: JeSCaLis23-F (~rizon@188.119.22.153) (Client Quit)
[10:16:16] <ecraven> the numbers are from uc-arith.lisp, the microcode that implements small flonums, for sys98
[10:16:35] <mfiano> This seems like the format IBM Mainframes used for floats
[10:16:48] <ecraven> that was before my time :-/ I'll look into that, thanks
[10:19:17] <mfiano> Do you have a link to this file?
[10:20:50] <mfiano> Found it
[10:21:06] <ecraven> https://tumbleweed.nu/r/sys98/file?name=ucadr/uc-arith.lisp&ci=tip
[10:21:40] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Ping timeout: 250 seconds)
[10:24:23] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 246 seconds)
[10:24:31] *** Joins: amb007 (~a_bakic@198.132.22.93.rev.sfr.net)
[10:25:59] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 252 seconds)
[10:26:14] <mfiano> Nope it's different
[10:26:30] <mfiano> and wow, i can see how that design could be confusing
[10:26:32] <ecraven> that's sys98, there are other dumps of different versions
[10:26:38] <mfiano> trying to understand the low-level form
[10:26:41] <ecraven> ah, different from IBM.. that might be ;)
[10:26:49] <ecraven> the microcode? that's it's own art :D
[10:26:54] <mfiano> :)
[10:27:08] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:29:18] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[10:30:13] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[10:30:13] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[10:32:26] *** Joins: littleme (~user@user/littleme)
[10:34:25] *** Joins: karlosz (~karlosz@12.196.174.98)
[10:38:05] *** Joins: galex-713 (gal@portable.galex-713.eu)
[10:45:22] *** Joins: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch)
[10:45:55] *** Joins: notzmv (~zmv@user/notzmv)
[10:50:16] *** Quits: galex-713 (gal@portable.galex-713.eu) (Ping timeout: 250 seconds)
[10:53:25] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[10:59:54] *** Joins: galex-713 (~quassel@portable.galex-713.eu)
[11:07:55] *** Joins: macaw (~macaw@176.221.120.196)
[11:11:39] *** Joins: SincereFox (uid337158@user/sincerefox)
[11:12:57] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[11:18:36] *** Quits: galex-713 (~quassel@portable.galex-713.eu) (Read error: Connection reset by peer)
[11:18:37] *** Quits: amb007 (~a_bakic@198.132.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[11:18:41] *** Joins: galex-713_ (~quassel@portable.galex-713.eu)
[11:19:07] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:25:17] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[11:29:17] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:35:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:11] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[11:36:31] *** Quits: karlosz (~karlosz@12.196.174.98) (Quit: karlosz)
[11:37:31] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[11:37:34] *** Joins: selwyn (~selwyn@user/selwyn)
[11:37:50] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[11:38:54] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:54] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[11:40:25] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Client Quit)
[11:48:22] *** Quits: dre (~dre@2001:8003:c932:c301:c3b5:3d4:768d:4c71) (Ping timeout: 265 seconds)
[11:50:23] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[11:52:17] *** Quits: siraben (~siraben@user/siraben) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: infra_red[m] (~infraredm@2001:470:69fc:105::849) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: dash[m] (~washortgr@2001:470:69fc:105::8d8) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: alphapapa[m] (~alphapapa@2001:470:69fc:105::18b7) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Quit: Bridge terminating on SIGTERM)
[11:52:18] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: Bridge terminating on SIGTERM)
[11:52:19] *** Quits: RRRRedEye[m] (~uixneanmo@2001:470:69fc:105::f9d6) (Quit: Bridge terminating on SIGTERM)
[11:52:27] *** Quits: santiagopim[m] (~santiagop@2001:470:69fc:105::e57d) (Quit: Bridge terminating on SIGTERM)
[11:52:28] *** Quits: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0) (Quit: Bridge terminating on SIGTERM)
[11:52:28] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Bridge terminating on SIGTERM)
[11:52:28] *** Quits: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: Bi[m] (~bimatrixo@2001:470:69fc:105::109a) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: HDurer[m] (~hdurer@2001:470:69fc:105::cc4) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Quit: Bridge terminating on SIGTERM)
[11:52:30] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[11:52:30] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: yitzi (~yitzi@2001:470:69fc:105::fafd) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Quit: Bridge terminating on SIGTERM)
[11:52:34] *** Quits: neosloth[m] (~neosloth@2001:470:69fc:105::c845) (Quit: Bridge terminating on SIGTERM)
[11:54:57] *** Joins: rommudoh[m] (~rommudoht@2001:470:69fc:105::d736)
[11:57:05] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[11:57:05] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[11:57:05] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[11:57:05] *** Joins: HDurer[m] (~hdurer@2001:470:69fc:105::cc4)
[11:57:05] *** Joins: infra_red[m] (~infraredm@2001:470:69fc:105::849)
[11:57:05] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[11:57:05] *** Joins: dash[m] (~washortgr@2001:470:69fc:105::8d8)
[11:57:05] *** Joins: kadoban (~kadoban@user/kadoban)
[11:57:05] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[11:57:05] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[11:57:05] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[11:57:05] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[11:57:05] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:57:05] *** Joins: siraben (~siraben@user/siraben)
[11:57:05] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[11:57:05] *** Joins: Duuqnd (~duuqnd@2001:470:69fc:105::e9c0)
[11:57:11] *** Joins: RRRRedEye[m] (~uixneanmo@2001:470:69fc:105::f9d6)
[11:57:17] *** Joins: alphapapa[m] (~alphapapa@2001:470:69fc:105::18b7)
[11:57:17] *** Joins: santiagopim[m] (~santiagop@2001:470:69fc:105::e57d)
[11:57:19] *** Joins: yitzi (~yitzi@2001:470:69fc:105::fafd)
[11:57:19] *** Joins: neosloth[m] (~neosloth@2001:470:69fc:105::c845)
[12:12:43] *** Quits: poldy (~dbane@user/poldy) (Ping timeout: 252 seconds)
[12:14:00] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[12:14:18] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[12:14:22] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Remote host closed the connection)
[12:14:38] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[12:22:56] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[12:23:12] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[12:24:21] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Client Quit)
[12:24:37] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[12:25:19] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:34:46] *** Quits: MrFantastik (~f@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 265 seconds)
[12:42:59] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[12:54:09] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:59:53] *** Joins: poldy (~dbane@78.19.99.188)
[13:01:40] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[13:21:07] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[13:43:40] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[13:51:29] *** Quits: cods (~fred@82-65-232-44.subs.proxad.net) (Ping timeout: 265 seconds)
[14:00:41] *** Quits: xiews (~wxie@222.64.216.101) (Ping timeout: 264 seconds)
[14:03:37] *** Joins: cods (~fred@82-65-232-44.subs.proxad.net)
[14:04:34] *** Joins: xiews (~wxie@223.104.210.73)
[14:04:53] *** Quits: littleme (~user@user/littleme) (Remote host closed the connection)
[14:08:51] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 245 seconds)
[14:09:33] *** Joins: amb007 (~a_bakic@230.132.22.93.rev.sfr.net)
[14:13:28] *** Quits: xiews (~wxie@223.104.210.73) (Read error: Connection reset by peer)
[14:14:23] *** Joins: xiews (~wxie@2409:891e:9160:bff:e8b5:22a:7643:129f)
[14:18:43] *** Joins: random-nick (~random-ni@87.116.183.117)
[14:19:04] *** Quits: frgo (~frgo@p200300deef0cee001d6a41243919a152.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:19:32] *** Joins: frgo (~frgo@p200300deef0cee00656286f7b8b79341.dip0.t-ipconnect.de)
[14:26:46] *** Quits: xiews (~wxie@2409:891e:9160:bff:e8b5:22a:7643:129f) (Ping timeout: 245 seconds)
[14:27:07] *** Joins: xiews (~wxie@2409:891e:9020:142b:a818:e4b4:237c:d7b4)
[14:29:17] *** Joins: selwyn (~selwyn@user/selwyn)
[14:38:51] *** Quits: amb007 (~a_bakic@230.132.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[14:39:18] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:52:17] *** Quits: galex-713_ (~quassel@portable.galex-713.eu) (Ping timeout: 264 seconds)
[14:54:28] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:05:03] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[15:12:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:14:30] *** Joins: galex-713 (gal@portable.galex-713.eu)
[15:14:30] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[15:18:14] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:24:05] *** Quits: Patch (~Patch@cpe-74-133-231-122.kya.res.rr.com) (Ping timeout: 252 seconds)
[15:26:21] *** Quits: xiews (~wxie@2409:891e:9020:142b:a818:e4b4:237c:d7b4) (Ping timeout: 245 seconds)
[15:26:46] *** Joins: xiews (~wxie@101.88.35.231)
[15:29:21] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[15:29:49] *** Joins: yoonkn (~user@175.197.208.79)
[15:31:50] <lukego> Hey I find myself about to write a Lisp library for dumping objects into custom external formats, mostly for debugging, e.g. to turn a simulation result into a CSV file showing change over time. Anything existing stuff I should be looking at before I hack that? Sounds potentially related to e.g. object persistence but maybe not
[15:32:36] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[15:33:26] <Duuqnd> I've used CL-STORE which can dump objects to files but I don't know how good it is
[15:33:46] <Duuqnd> I think it has some sort of support for custom formats but I don't know how good that is either
[15:33:57] <lukego> Duuqnd: thanks, I'll take a peek
[15:37:33] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[15:46:21] *** Joins: SincereFox (uid337158@user/sincerefox)
[16:00:49] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[16:04:44] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[16:13:39] <Psybur> So if macros get expanded at compile time, how does that work for inputs that are created at runtime? And theres no JIT compiler?
[16:14:59] <wasamasa> the input is passed to expanded code, lol
[16:15:12] <Psybur> In the PCL cd database example, a where macro is defined which builds an `and` expression using the filters provided in a list
[16:15:14] <Psybur> https://gigamonkeys.com/book/practical-a-simple-database.html
[16:15:18] <wasamasa> by the time any input is considered, the code has already been expanded and compiled
[16:15:38] <Psybur> So how would this expand something that isnt available at compile time
[16:15:43] <wasamasa> it wouldn't
[16:16:08] <wasamasa> macros need to be written in a careful style to avoid more or less subtle bugs
[16:16:45] <Psybur> So this `where` macro wouldnt work if filters are read from stdin?
[16:17:31] <wasamasa> honestly, I'm not sure why this example uses macros and all
[16:17:38] <wasamasa> but no, the where part is a function
[16:17:58] <wasamasa> no, it's only at the beginning, lol
[16:18:59] <Psybur> Later its redefined as a macro
[16:19:02] <wasamasa> I expect the macro to work because it merely rewrites the arguments into a lambda
[16:19:17] <wasamasa> if the arguments are code reading in user input, who cares
[16:19:24] <wasamasa> the transformation doesn't depend on knowing that
[16:21:19] <Psybur> I thought it does depend on what you pass in. The macro isnt going to transform into a function like `every` right? Its going to have to know exactly which filters there are at runtime to produce the correct `and` expression?
[16:21:40] <Psybur> *compile time
[16:22:17] <wasamasa> all it needs is an actual list of them
[16:22:40] <wasamasa> because it transforms the list into a slightly different looking list
[16:22:47] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[16:24:24] <Psybur> So what would the where macro expand into at compile time, given a list of unknown size until runtime?
[16:24:47] *** Joins: aeth (~aeth@user/aeth)
[16:24:49] <wasamasa> use macroexpand-1 and see for yourself
[16:24:52] <Psybur> Or would I get prompted for the input at compile time
[16:25:22] <Psybur> Actually, I think thats a thing, right? IO happening at compile time for lisp
[16:25:35] <wasamasa> that will show you that both (where :title "foo") and (where :title (compute-foo)) expand to very similar looking code
[16:25:57] <wasamasa> you could do that, but I'd avoid that generally
[16:26:08] <wasamasa> it breaks people's assumptions
[16:26:26] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[16:31:27] <Psybur> wasamasa, oh so there is no way to pass in a variable amount of fields into "where"? Like splicing (:title x :rating 2) into where?
[16:31:44] <wasamasa> macros do not evaluate their arguments
[16:31:59] <Psybur> Thats what I was thinking, not passing in a dynamic field value
[16:32:14] <wasamasa> people typically work around that by generating code that can deal with the macro arguments
[16:35:55] <Psybur> wasamasa, so it appears this isnt allowed? (defmacro s (l) `#'(where ,@l))
[16:36:15] <wasamasa> people regularly do that with body arguments
[16:38:45] <Psybur> wasamasa, I mean I cant seem to write a macro that expands to another macro. Is that allowed or is my syntax just off? I tried (s (:title "x" :rating 1))   and got (where :title "x" :rating 1) isnt a valid function. Which makes me think I might have too many parenthesis
[16:38:49] *** Quits: galex-713 (gal@portable.galex-713.eu) (Ping timeout: 252 seconds)
[16:38:58] <wasamasa> it can be done, just debug diligently with macroexpand
[16:39:13] *** Joins: galex-713 (~quassel@37.171.177.233)
[16:41:29] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 264 seconds)
[16:46:32] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[16:47:39] <Psybur> wasamasa, ok I think I see how macros are safe from this kind of runtime thing. I tried (let* ((r (range 1 (random 10)))) (s (range 1 (random 10))))  and I got (WHERE RANGE 1 (RANDOM 10))   Thats sneaky!
[16:48:07] *** Quits: galex-713 (~quassel@37.171.177.233) (Ping timeout: 252 seconds)
[16:48:29] <wasamasa> yeah
[16:48:46] *** Joins: galex-713 (gal@portable.galex-713.eu)
[16:48:48] <wasamasa> there's a few advanced books on macrology that show how to avoid some of these pitfalls
[16:49:15] <Psybur> wasamasa, any recommendations?
[16:49:15] <wasamasa> another source of inspiration is the scheme side of things, where they mess around with hygienic macros and DSL construction and stuff
[16:49:22] <wasamasa> I've read Let over Lambda
[16:49:27] <wasamasa> On Lisp is recommended in it, too
[16:50:18] <Psybur> thanks
[16:51:46] *** Quits: andreyorst (~andreyors@2.92.125.243) (Ping timeout: 245 seconds)
[16:54:59] *** Quits: Posterdati (~posterdat@host-95-235-15-123.retail.telecomitalia.it) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[16:57:09] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[16:57:38] *** Joins: srhm (~srhm@user/srhm)
[17:04:17] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 264 seconds)
[17:05:58] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:07:12] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[17:12:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[17:12:28] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:e596:d0be:7b95:2e1f)
[17:12:28] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:e596:d0be:7b95:2e1f) (Changing host)
[17:12:28] *** Joins: skapata (~Skapata@user/skapata)
[17:13:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[17:14:05] <lukego> Hey is there a handy utility in quicklisp somewhere that I could write instead of the hilariously common (with-output-to-file (s "foo" :direction :output :if-exists :supersede :if-does-not-exist :create) ...) ?
[17:14:44] *** Joins: andreyorst (~andreyors@2.92.125.242)
[17:16:57] <jackdaniel> lukego: alexandria:with-output-to-file perhaps
[17:20:54] <lukego> jackdaniel: interesting! I checked the alexandria manual, at least on the first google hit on "alexandria lisp manual", and it's not listed there: https://common-lisp.net/project/alexandria/draft/alexandria.html. but indeed I have it in my image. will dig into how its defaults behave
[17:21:58] <lukego> alexandria:write-string-into-file certainly gets me out of trouble for now
[17:27:19] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[17:27:59] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[17:28:43] *** Joins: cosimone` (~user@93-47-228-163.ip115.fastwebnet.it)
[17:30:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 245 seconds)
[17:32:40] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 252 seconds)
[17:37:41] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[17:41:06] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[17:42:12] <lukego> (nope, it's giving an error if the file already exists, which is exactly the default I'm trying to avoid here)
[17:43:40] <lukego> oh but I never noticed the SUPERSEDE restart before! now I'm happy :)
[17:44:27] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[17:45:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[17:47:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[17:57:29] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:58:10] <edgar-rft> (defun write-that-shit-to-file-no-matter-what (&rest arghs) ...)
[18:00:16] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:00:47] *** Quits: frgo (~frgo@p200300deef0cee00656286f7b8b79341.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:00:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[18:01:15] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:03:53] *** Quits: cosimone` (~user@93-47-228-163.ip115.fastwebnet.it) (Remote host closed the connection)
[18:04:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:20:56] *** Quits: runejuhl (~runejuhl@user/runejuhl) (Ping timeout: 268 seconds)
[18:21:35] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:21:54] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[18:22:06] *** Joins: srhm (~srhm@user/srhm)
[18:22:48] *** Joins: runejuhl (~runejuhl@user/runejuhl)
[18:23:09] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[18:25:00] *** Joins: arcsech[m] (~arcsechma@2001:470:69fc:105::1:797)
[18:26:17] *** arcsech[m] is now known as Arcsech
[18:35:55] *** Joins: xsperry (~xs@cpe-188-129-101-182.dynamic.amis.hr)
[18:35:56] *** Quits: xsperry (~xs@cpe-188-129-101-182.dynamic.amis.hr) (Changing host)
[18:35:56] *** Joins: xsperry (~xs@user/xsperry)
[18:37:18] *** Joins: MrFantastik (~f@cpe-69-204-101-67.buffalo.res.rr.com)
[18:53:22] *** Quits: xiews (~wxie@101.88.35.231) (Remote host closed the connection)
[18:54:05] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:55:10] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 252 seconds)
[18:55:41] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:48] <pjb> Psybur: if you generate code at run-time, you will have to use EVAL, (COERCE sexp 'FUNCTION), COMPILE (or COMPILE-FILE) on it.  All of those functions will have to at least minimally compile the expression you give to them.  Ie. there will be a compile-time embedded in those run-time function calls.
[18:59:03] <pjb> (and therefore a macroexpansion-time embedded in that compile-time).
[19:01:17] <pjb> Psybur: note: an implementation can do the exact same thing (eg. invoke a native compiler) in all three of those functions. Or it can choose to just perform the minimal compilation (aka macroexpansion + minimal declaration processing), and call an interpreter on the result. In general, user can expect EVAL to do that (not lose time on native, optimized compilation), while COMPILE is expected to compile; coerce is expected to do what's best for the implementation. 
[19:03:00] <pjb> lukego: you may also consider my file contents accessors: com.informatimago.common-lisp.cesarum.file:binary-file-contents, sexp-file-contents, sexp-list-file-contents, string-list-text-file-contents, text-file-contents
[19:03:16] <lukego> thanks pjb 
[19:03:30] <pjb> lukego: (setf (text-file-contents "/tmp/foo") "Hello World")   (text-file-contents "/tmp/foo") #| --> "Hello World" |# 
[19:04:32] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:04:54] <pjb> lukego: there's also com.informatimago.common-lisp.csv.csv to read and write csv records.
[19:04:58] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:10:44] *** Quits: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net) (Remote host closed the connection)
[19:11:48] *** Joins: eddof13 (~textual@177.241.59.113)
[19:42:20] *** Joins: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net)
[19:44:05] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[19:44:30] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[19:57:05] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:58:03] *** Quits: eddof13 (~textual@177.241.59.113) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:58:56] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[20:02:47] *** Joins: eddof13 (~textual@177.241.59.113)
[20:05:53] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[20:06:25] <Psybur> pjb, thanks. Thats a little above my pay grade at the moment though :D My confusion was in thinking that I could pass a list of arbitrary length to a macro, but in fact I am not passing a list of elements to a macro, I am just passing an unevaluated expression, basically a tree of symbols which can get picked apart, so the structure is still static at compile time. If I have (l (range 1 (random 10))) and I pass l to macro m, I am not 
[20:06:25] <Psybur> passing a random list of elements, I am passing `l`
[20:09:20] <Psybur> But yeah I can see if I am generating code to create macros at runtime, there will be some form of compile step in there
[20:10:40] *** Quits: eddof13 (~textual@177.241.59.113) (Remote host closed the connection)
[20:12:05] *** Quits: ahlk (~user@2600:1700:31c0:3a10::48) (Ping timeout: 264 seconds)
[20:12:16] <pjb> Psybur: yes. Hence you can expand the macro at compilation time. The macro must expand to an expression that will include the expression bound to L and evaluate it at run-time.  Hence the possibility to process data that is generated at run-time, with a macro that is expanded at compilation-time.
[20:12:32] <pjb> Psybur: but this also means that perhaps you don't need a macro, but just a function?
[20:13:16] <pjb> Psybur: macros can process literal data (that is known at compilation-time), and expand different expressions depending on the literal data it's given.    But in other cases, functions are better fitted.
[20:18:01] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[20:26:35] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 252 seconds)
[20:27:15] *** Joins: giammi (~giammi@62-167-236-20.static.adslpremium.ch)
[20:32:20] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 246 seconds)
[20:34:24] *** Quits: giammi (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 250 seconds)
[20:34:35] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[20:34:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[20:35:04] *** Quits: giammi_ (~giammi@62-167-236-20.static.adslpremium.ch) (Ping timeout: 265 seconds)
[20:36:05] *** Joins: aeth (~aeth@user/aeth)
[20:39:00] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[20:47:55] *** Joins: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net)
[20:55:01] *** Joins: karlosz (~karlosz@47.180.55.252)
[20:56:57] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:57:30] *** Joins: srhm (~srhm@user/srhm)
[20:58:09] *** Joins: ahlk (~user@2600:1700:31c0:3a10::48)
[21:00:49] *** Joins: notzmv (~zmv@user/notzmv)
[21:02:08] *** Quits: ConstantDesc (~textual@cpc158823-hari22-2-0-cust72.20-2.cable.virginm.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:15] *** Joins: SincereFox (uid337158@user/sincerefox)
[21:10:31] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[21:11:08] *** Joins: amb007 (~a_bakic@230.132.22.93.rev.sfr.net)
[21:12:36] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[21:15:25] *** Joins: BosonCollider (~olofs@90-227-86-119-no542.tbcn.telia.com)
[21:15:29] *** Joins: nilof (~olofs@90-227-86-119-no542.tbcn.telia.com)
[21:15:40] *** Quits: nilof (~olofs@90-227-86-119-no542.tbcn.telia.com) (Remote host closed the connection)
[21:27:44] *** Quits: macaw (~macaw@176.221.120.196) (Quit: Client closed)
[21:27:55] *** Joins: macaw (~macaw@176.221.120.196)
[21:30:39] *** Quits: amb007 (~a_bakic@230.132.22.93.rev.sfr.net) (Ping timeout: 265 seconds)
[21:31:32] *** Joins: amb007 (~a_bakic@238.149.22.93.rev.sfr.net)
[21:43:48] *** Quits: karlosz (~karlosz@47.180.55.252) (Quit: karlosz)
[21:48:42] *** Joins: karlosz (~karlosz@47.180.55.252)
[21:50:44] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 252 seconds)
[21:50:58] *** Joins: X-Scale` (~ARM@46.50.4.194)
[21:52:20] *** X-Scale` is now known as X-Scale
[21:53:35] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[21:56:46] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[21:59:55] *** Joins: yehowshua (~yehowshua@192.24.14.195)
[22:02:51] *** Quits: amb007 (~a_bakic@238.149.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[22:03:12] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:04:09] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[22:07:43] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 252 seconds)
[22:08:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Ping timeout: 245 seconds)
[22:09:11] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:15:31] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 245 seconds)
[22:16:13] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[22:35:59] *** Joins: christophergray (~christoph@190.148.52.166)
[22:40:04] *** Quits: yehowshua (~yehowshua@192.24.14.195) (Ping timeout: 256 seconds)
[22:56:06] *** Quits: lottaquestions (~nick@2607:fa49:503e:3000:d480:3919:61b7:3376) (Ping timeout: 250 seconds)
[22:56:51] *** Quits: macaw (~macaw@176.221.120.196) (Quit: Client closed)
[22:57:02] *** Joins: macaw (~macaw@176.221.120.196)
[23:00:22] *** Joins: yehowshua (~yehowshua@192.24.14.195)
[23:12:26] *** Joins: ebrasca (~user@librepanther.com)
[23:12:32] *** Quits: christophergray (~christoph@190.148.52.166) (Quit: WeeChat 3.3)
[23:17:02] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:19:12] *** Quits: yehowshua (~yehowshua@192.24.14.195) (Quit: Client closed)
[23:26:18] *** Joins: doyougnu (~user@c-73-25-202-122.hsd1.or.comcast.net)
[23:31:17] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[23:32:07] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[23:39:12] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[23:43:26] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[23:46:58] *** Quits: mht (~mht@mht.wtf) (Ping timeout: 260 seconds)
[23:49:47] *** Quits: jkordani (~jkordani@c-69-255-2-251.hsd1.md.comcast.net) (Quit: Client closed)
[23:51:08] *** Quits: shka (~herr@109.231.6.176) (Ping timeout: 250 seconds)
[23:52:25] *** Joins: frgo (~frgo@p200300deef0cee00b0ea14751ba29eda.dip0.t-ipconnect.de)
[23:53:44] *** Joins: mht (~mht@mht.wtf)
[23:57:14] *** Quits: frgo (~frgo@p200300deef0cee00b0ea14751ba29eda.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
