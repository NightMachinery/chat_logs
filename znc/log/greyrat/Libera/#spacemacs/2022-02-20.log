[02:52:31] <FromGitter> <dalanicolai> Does anyone know this website: https://www.slant.co/topics/12572/~text-editors
[02:53:43] <FromGitter> <dalanicolai> That list looks ridiculous to me... I think you should all do some work to let people know what is the best editor. (I think many users searching for a good editor end up on that website, at least I frequently did).
[02:54:31] <FromGitter> <dalanicolai> It will also soon be the best PDF reader/editor (while it is already great of course)
[02:55:44] <FromGitter> <dalanicolai> Sorry, I just think Emacs and Spacemacs deserve more 'attention'
[02:56:37] <FromGitter> <dalanicolai> Hope you don't dislike my spam
[03:00:51] <FromGitter> <alex-ilin> The list is indeed ridiculous, it doesn't even include Notepad3, the improved and supported Notepad2 variant that supersedes Notepad2-mod.
[03:04:28] <FromGitter> <dalanicolai> Ah... maybe I should switch to notepad. Is it available on GNU/linux :) Spacemacs did not even reach version 1 yet...
[03:10:33] <FromGitter> <lebensterben> emacs is a lisp interpreter. being a text editor is a side job...
[03:10:50] <FromGitter> <dalanicolai> I am not sure if there is a list for best lisp interpreters
[03:12:12] <FromGitter> <dalanicolai> Okay good night
[03:12:49] <FromGitter> <lebensterben> bye
[04:57:25] <FromGitter> <pbellini:matrix.org> Spacemacs should be at least above Emacs on that list, though not being the regular click and type editor I can see why it's not popular.
[05:25:41] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[05:34:29] *** Quits: baldlizard (~Thunderbi@p200300f0c70e49006f8c91a8f6ba7f95.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:12:57] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[06:45:50] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[07:37:17] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[08:57:57] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[10:59:50] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[11:57:49] *** Joins: baldlizard (~Thunderbi@p57985303.dip0.t-ipconnect.de)
[13:01:24] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 240 seconds)
[17:37:21] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[17:59:34] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60)
[18:12:57] <FromGitter> <dalanicolai> Good point, although Vim still is up there.
[18:14:58] <FromGitter> <dalanicolai> From personal experience I can say that I frequently seached the web for best editors (arguments), and although I was very aware of Emacs its existence, I had never seen Spacemacs mentioned anywhere...
[18:29:48] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (Ping timeout: 250 seconds)
[18:39:24] <FromGitter> <davidpiano> How did you ever find it then? :)
[18:42:07] <FromGitter> <dalanicolai> Haha, yeah... I really wish I remembered. Probably somehow I finally ended up on some blog with useful information...
[18:42:49] <FromGitter> <kjartan_oli:matrix.org> I originally found Spacemacs by chance looking through the 'Explore' section on GitHub.
[18:44:04] <FromGitter> <dalanicolai> Just google for 'best editor linux' and check the first 10 results... probably none of the websites mentions Spacemacs. At least a few of them mention Emacs. But I had tried to learn Emacs a few times before, and concluded Emacs makes no sense when there is Vim... when I found Spacemacs I completely changed my mind...
[18:46:19] <FromGitter> <davidpiano> But you're not saying how you found Spacemacs ... obviously it gets found, or you wouldn't be having this discussion :)
[18:47:02] <FromGitter> <davidpiano> Oops sorry you already said you couldn't remember
[18:47:04] <FromGitter> <dalanicolai> I think the possibility that you end up with Spacemacs while googling for best editor is nihil
[18:47:42] <FromGitter> <dalanicolai> I really don't know what those journalists are doing in there working time...
[18:48:36] <FromGitter> <dalanicolai> Or maybe they find the difference between Spacemacs and Emacs not worthy of mentioning... which I find a big mistake
[18:52:58] <FromGitter> <davidpiano> I'm not sure if being not found on "best lists" is bad or good. I know there are many many people who would look at Emacs and Spacemacs, to give them a rating from 1 to 10, and would rate them "negative 7"
[18:58:04] <FromGitter> <dalanicolai> Well we could change best for most useful, or leave it out, but then still Spacemacs will not get mentioned. My point is that if  Spacemacs is quite a different editor/concept than Emacs. And if Emacs and Vim get mentioned, then it is ridiculous to not mention either Spacemacs or Doom.
[18:59:10] <FromGitter> <dalanicolai> I think many people miss out of a more joyful experience because of bad journalism (or bad Spacemacs 'marketing')
[18:59:54] <FromGitter> <dalanicolai> And therefore Spacemacsers must encounter far more bugs than 'necessary'
[19:06:08] <FromGitter> <davidpiano> Main reason: "I don't *want* something that will repay the time I spend learning it! I want something that will prevent me from needing to learn anything in the first place."
[19:07:30] <FromGitter> <davidpiano> "It just works, there is nothing to learn" is how you get rated 10/10.
[19:08:11] <FromGitter> <kjartan_oli:matrix.org> You can lead a horse to water, but you can't make it drink. Those people will probably suffer the usage of inferior editors forever, never knowing that they are suffering.
[19:12:13] <FromGitter> <davidpiano> If you have ideas how Spacemacs can be promoted more effectively, I believe you should do them. I don't think anyone would complain, as long as you don't give false or misleading information.
[19:17:01] <FromGitter> <dalanicolai> Haha, I hope I will not get kicked out from the community for it...
[19:18:03] <FromGitter> <davidpiano> They don't always suffer - many people legitimately don't want what Spacemacs offers, and wouldn't use it if they had it, and are better off with what they have now. The ones who should find out are the people who want it but have never seen it.
[19:18:50] <FromGitter> <dalanicolai> I will take care that I don't lie... but experiences are subjective of course
[19:19:35] <FromGitter> <dalanicolai> I will just offer them free beer... they don't have to drink it of course...
[19:19:52] <FromGitter> <dalanicolai> But they might get addicted...
[19:21:02] <FromGitter> <davidpiano> I'm confident nobody would want to kick you out of anything unless you were saying things that aren't true.
[19:21:18] <FromGitter> <kjartan_oli:matrix.org> I know I did.  I was a Vim user until GitHub recommended Spacemacs. Now I do practically everything in Emacs.
[19:21:57] <FromGitter> <davidpiano> subjective yes of course, just don't say "Spacemacs can do X" when it can't. :)
[19:22:01] <FromGitter> <dalanicolai> I will always include that it offers Vim inside of Emacs... I think that should do the filtering fairly well...
[19:22:42] <FromGitter> <dalanicolai> There is something it can't do? ;)
[19:36:11] <FromGitter> <davidpiano> I'm not sure - I don't know how to find out what it can't do. :)
[19:51:21] <FromGitter> <lebensterben> Spacemacs is not a different editor from Emacs.
[19:51:34] <FromGitter> <lebensterben> It's not even derivative work of Emacs.
[19:51:57] <FromGitter> <lebensterben> It just gives you a set of pre-configured packages.
[19:52:47] <FromGitter> <lebensterben> Credit should go to Emacs and the packages we used.
[19:54:45] <FromGitter> <kjartan_oli:matrix.org> And a completely different set of keybindings, configuration, appearance, and changes just about every other aspect of the editing experience.  I don't disagree about Spacemacs's building blocks deserving credit, but to a layman Emacs and Spacemacs might as well be different editors.
[19:54:54] <FromGitter> <lebensterben> Emacs ecosystem is heavily inspired by Vim. And recently even sublime text and VS Code.
[19:57:15] <FromGitter> <lebensterben> No that comes with legal consequences.
[19:57:26] <FromGitter> <lebensterben> We are not derivative work of Emacs.
[20:11:52] <FromGitter> <dalanicolai> I guess we need more users to find that out :)
[20:13:00] <FromGitter> <dalanicolai> I was more speaking about marketing than about giving credit...
[20:14:09] <FromGitter> <dalanicolai> That describes well my experience too...
[20:15:49] <FromGitter> <dalanicolai> I came from Vim also... I guess most Spacemacs users...
[20:16:16] <FromGitter> <lebensterben> Spacemacs is a bit bloated currently
[20:17:15] <FromGitter> <dalanicolai> Well I have about 6gb of RAM left and also 200 GB of SSD space...
[20:17:19] <FromGitter> <lebensterben> we should force user to use evil and lsp
[20:17:43] <FromGitter> <dalanicolai> But are the other packages loaded when not used?
[20:18:06] <FromGitter> <lebensterben> what I'm talking about is we give user too many choices
[20:18:12] <FromGitter> <kjartan_oli:matrix.org> Strongly disagree
[20:19:00] <FromGitter> <lebensterben> with evil, lsp, and tree-sitter, we roughly achieved feature parity of neovim
[20:19:05] <FromGitter> <dalanicolai> Well indeed I prefer to strongly recommend 'best' practices... even my making them the default
[20:19:17] <FromGitter> <dalanicolai> But it is nice not to force users
[20:19:53] <FromGitter> <lebensterben> neovim has built-in lsp and tree-sitter highlighting
[20:19:56] <FromGitter> <dalanicolai> Does neovim have pdf-tools now? And org-mode?
[20:20:12] <FromGitter> <dalanicolai> Yeah that is nice
[20:20:38] <FromGitter> <lebensterben> lsp is very stable now and should not be opitonal
[20:20:44] <FromGitter> <dalanicolai> That is the advantage of good marketing
[20:20:48] <FromGitter> <lebensterben> tree-sitter is too new so we can wait
[20:20:49] <FromGitter> <dalanicolai> Many users...
[20:21:02] <FromGitter> <dalanicolai> Many developers
[20:23:17] <FromGitter> <dalanicolai> I have sent emails to major websites listing 'popular linux editors'... I hope that I can 'wake up' their journalists...
[21:54:53] <FromGitter> <Grimpper> Could anyone tell me what this error means when I try to start a debugging session using LLDB? ⏎  ⏎ dap--create-session: Wrong type argument: stringp, nil
[21:57:47] <FromGitter> <Grimpper> This is the launch.json file: ⏎ { ⏎  ⏎ ```code paste, see link``` ⏎  ... [https://gitter.im/syl20bnr/spacemacs?at=62128823257a357825f38c92]
[22:07:24] <FromGitter> <lebensterben> M-x toggle-debug-on-error
[22:08:16] <FromGitter> <TheDohn> Not sure what folks' backgrounds are here, but from my perspective the situation is even worse in data science, maybe even dire. Many people in my field have a knee-jerk negative reaction to things like Vim (my former boss basically told me it was "unbelievably counter-intuitive" when the issue does come up )so I stayed away from things like Vim & Emacs for a long time). Many people will you at you strange when 
[22:08:16] <FromGitter> ... you ask what their preferred "text editor" is. The current situation is that 99.9% of people in my experience use things like R studio (okay, but not great) and Jupyter (which has a purpose but is waaay over used) out of sheer default because thats just what people use for DS. i.e. this is just not a topic of discussion i ... [https://gitter.im/syl20bnr/spacemacs?at=62128a9899d94f5f0c15d8cb]
[22:09:40] <FromGitter> <TheDohn> I don't know what to do about it other than I just raise the issue with anyone that will listen.
[22:09:40] <FromGitter> <lebensterben> I constantly recommend people to use r studio and jupyter notebook
[22:10:06] <FromGitter> <TheDohn> Over Spacemacs?
[22:11:14] <FromGitter> <Grimpper>  (https://files.gitter.im/543c742ddb8155e6700cb292/vfHd/image.png)
[22:11:29] <FromGitter> <Grimpper> This is the output
[22:11:38] <FromGitter> <lebensterben> Over emacs or vim
[22:11:57] <FromGitter> <TheDohn> Why?
[22:14:24] <FromGitter> <lebensterben> @Grimpper I've no idea
[22:14:33] <FromGitter> <TheDohn> I mean, they have their use cases. But I think a lot of people could benefit from using Vim or Emacs for at least a portion of their workflows.
[22:14:58] <FromGitter> <TheDohn> Or at least being familiar enough with Vim to do basic things.
[22:14:59] <FromGitter> <lebensterben> I also recommend people to use overleaf for latex
[22:15:29] <FromGitter> <Grimpper> @lebensterben thanks anyway for looking it up
[22:16:00] <FromGitter> <lebensterben> @Grimpper From what I see they all look legit
[22:18:45] <FromGitter> <Grimpper> I get the same error when running the command: dap-cpptools-setup
[22:19:44] <FromGitter> <lebensterben> can you also show me the backtrace?
[22:19:48] <FromGitter> <Grimpper>  (https://files.gitter.im/543c742ddb8155e6700cb292/pgKm/image.png)
[22:20:30] <FromGitter> <Grimpper> the format field seems sus?
[22:20:32] <FromGitter> <kjartan_oli:matrix.org> According to the docstring of `make-process`, the `:command` argument is supposed to be a list. In that backtrace it is a string.
[22:21:39] <FromGitter> <kjartan_oli:matrix.org> It does to me.
[22:21:50] <FromGitter> <lebensterben> yep
[22:22:57] <FromGitter> <lebensterben> @Grimpper do you have unzip?
[22:23:07] <FromGitter> <lebensterben> I mean /usr/bin/unzip
[22:23:21] <FromGitter> <lebensterben> or just evaluate `which unzip` in shell
[22:23:34] <FromGitter> <Grimpper> i don't have it
[22:24:32] <FromGitter> <Grimpper> woa installing it fixed the cpptools thing
[22:24:47] <FromGitter> <lebensterben> this is a undeclared dependency ...
[22:25:32] <FromGitter> <Grimpper> and the other thing that @kjartan_oli:matrix.org  points how could it be fixed?
[22:26:13] <FromGitter> <lebensterben> can you try again
[22:27:26] <FromGitter> <Grimpper> the same error
[22:27:34] <FromGitter> <lebensterben> what's your emacs version
[22:28:11] <FromGitter> <Grimpper> 1) 2-1
[22:28:32] <FromGitter> <lebensterben> @kjartan_oli:matrix.org `:name` of `make-process` is a string
[22:28:37] <FromGitter> <lebensterben> at least on 27
[22:29:05] <FromGitter> <kjartan_oli:matrix.org> I said `:command`, not `:name`.
[22:29:18] <FromGitter> <lebensterben> @Grimpper do you have /usr/bin/lldb-vscode
[22:29:31] <FromGitter> <Grimpper> yes
[22:29:52] <FromGitter> <Grimpper>  (https://files.gitter.im/543c742ddb8155e6700cb292/h4TQ/image.png)
[22:30:49] <FromGitter> <lebensterben> @kjartan_oli:matrix.org  you're right
[22:31:20] <FromGitter> <Grimpper> if that's the problem is there a way to change it to the right type?
[22:33:11] <FromGitter> <lebensterben> @Grimpper Type `:(dap-variables-expand-in-launch-configuration debug-args)` what do you get?
[22:33:41] <FromGitter> <lebensterben> replace debug-args with the thing in your backtrace
[22:33:48] <FromGitter> <lebensterben> and please don't post screenshot
[22:33:56] <FromGitter> <lebensterben> it's impossible to debug
[22:34:15] <FromGitter> <Grimpper> sorry, for that, what should i post?
[22:34:19] <FromGitter> <lebensterben> copy and paste
[22:34:22] <FromGitter> <Grimpper> okay
[22:35:08] <FromGitter> <Grimpper> eval: Symbol’s value as variable is void: debug-args
[22:35:10] <FromGitter> <Grimpper> i get this
[22:35:32] <FromGitter> <lebensterben> > replace debug-args with the thing in your backtrace
[22:35:52] <FromGitter> <lebensterben> replace debug-args with the thing in `dap-debug(...)` call
[22:36:18] <FromGitter> <lebensterben> dap-debug((:type "lldb-vscode" ...
[22:36:29] <FromGitter> <lebensterben> just paste the backtrace
[22:37:17] <FromGitter> <Grimpper> does that go on the .spacemacs file?
[22:37:22] <FromGitter> <lebensterben> no
[22:37:31] <FromGitter> <lebensterben> just paste it
[22:37:48] <FromGitter> <Grimpper> where?
[22:37:51] <FromGitter> <lebensterben> here
[22:38:12] <FromGitter> <lebensterben> do you expect me to look at the screenshot and type whatever 500 characters there?
[22:38:19] <FromGitter> <Grimpper> no no
[22:38:27] <FromGitter> <lebensterben> so just copy the backtrace and paste it here
[22:39:11] <FromGitter> <Grimpper> Debugger entered--Lisp error: (wrong-type-argument stringp nil) ⏎   make-process(:name "Debug" :connection-type pipe :coding no-conversion :command "/usr/bin/lldb-vscode" :stderr "*Debug stderr*" :noquery t) ⏎   dap--create-session((:type "lldb-vscode" :request "launch" :name "Debug" :program "/home/grim/Documents/hello_emacs/build/hello" :args [] :env [] :cwd "/home/grim/Documents/hello_emacs/" 
[22:39:11] <FromGitter> ... :dap-server-path "/usr/bin/lldb-vscode")) ⏎   dap-start-debugging-noexpand((:type "lldb-vscode" :request "launch" :name "Debug" :program "/home/grim/Documents/hello_emacs/build/hello" :args [] :env [] :cwd "/home/grim/Documents/hello_emacs/" :dap-server-path "/usr/bin/lldb-vscode")) ⏎   #f(compiled-function () #<bytecode 0x15770d634e01> ... [https://gitter.im/syl20bnr/spacemacs?at=621291d7f43b6d783fc72739]
[22:39:26] <FromGitter> <lebensterben> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=621291e69bd1c71eca69800e]
[22:39:47] <FromGitter> <Grimpper> how is that done?
[22:39:54] <FromGitter> <lebensterben> wrap it in codeblock
[22:39:57] <FromGitter> <lebensterben> use markdown syntax
[22:40:50] <FromGitter> <lebensterben> Okay, `M-x ielm` to go to inferior emacs lisp buffer
[22:41:06] <FromGitter> <lebensterben> then paste `:(dap-variables-expand-in-launch-configuration '(:type "lldb-vscode" :request "launch" :name "Debug" :program "/home/grim/Documents/hello_emacs/build/hello" :args [] :env [] :cwd "/home/grim/Documents/hello_emacs/"))` and return
[22:41:26] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6212925e0466b352a4e2a71e]
[22:41:46] <FromGitter> <Grimpper> give me a minute to figure out the syntax. I'm dumb
[22:45:38] <FromGitter> <Grimpper> markdown syntax
[22:46:45] <FromGitter> <kjartan_oli:matrix.org> @Grimpper: Three backtiks (`) on either side of the content.
[22:46:53] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=621293a56b91242320fb191d]
[22:47:10] <FromGitter> <Grimpper> thanks i was reading the help just now
[22:47:44] <FromGitter> <Grimpper> I apologize for the inconvenience
[22:48:00] <FromGitter> <lebensterben> ```code paste, see link``` ⏎  ⏎ evaluate this in ielm buffer [https://gitter.im/syl20bnr/spacemacs?at=621293e80909252318ec125e]
[22:48:46] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129416161ffc40d77d0c6f]
[22:55:11] <FromGitter> <lebensterben> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129596ddcba117a2e80a53]
[22:56:00] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=621295c83ae95a1ec163a17f]
[22:56:21] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=621295dd9a09ab24f36bd975]
[22:57:33] <FromGitter> <lebensterben> Okay I think I already found what's wrong...
[22:58:04] <FromGitter> <lebensterben> > ``` ⏎ > ELISP> (let* ((debug-args (dap-variables-expand-in-launch-configuration '(:type "lldb-vscode" :request "launch" :name "Debug" :program "/home/grim/Documents/hello_emacs/build/hello" :args [] :env [] :cwd "/home/grim/Documents/hello_emacs/"))) ⏎ >               (launch-args (-some-> (plist-get debug-args :type) ⏎ >                             (gethash dap--debug-providers) ⏎ >                 
[22:58:04] <FromGitter> ...             (funcall debug-args)))) ... [https://gitter.im/syl20bnr/spacemacs?at=62129644e9cb3c52aeddfdfa]
[22:58:17] <FromGitter> <lebensterben> it should be a list of string, intead of a string
[23:00:35] <FromGitter> <Grimpper> is that something I can change?
[23:01:53] <FromGitter> <lebensterben> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129729e9cb3c52aede0029]
[23:04:04] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=621297acc435002500b69b5b]
[23:04:29] <FromGitter> <lebensterben> something is wrong here
[23:05:04] <FromGitter> <lebensterben> evaluate `find ~/.emacs.d/elpa/27.2/develop/dap-mode-* -type d` in shell
[23:05:35] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129807d1b64840db2f5c5c]
[23:06:58] <FromGitter> <lebensterben> your lsp is up to date...
[23:07:05] <FromGitter> <lebensterben> it's actually newer than mine
[23:07:12] <FromGitter> <lebensterben> *dap
[23:07:42] <FromGitter> <Grimpper> is that a problem?
[23:08:34] <FromGitter> <lebensterben> in ielm, just enter `dap-lldb-debug-program`
[23:08:56] <FromGitter> <lebensterben> (no need to add parenthesis)
[23:09:09] <FromGitter> <Grimpper> ```dap-lldb-debug-program ⏎ "/usr/bin/lldb-vscode"``` [https://gitter.im/syl20bnr/spacemacs?at=621298ddc61ef0178e3a11a2]
[23:09:25] <FromGitter> <lebensterben> damn... this is the cause
[23:09:44] <FromGitter> <lebensterben> have you set this variable in your `.spacemacs`?
[23:10:26] <FromGitter> <Grimpper> seems so
[23:10:31] <FromGitter> <Grimpper> should i delete it?
[23:10:33] <FromGitter> <lebensterben> I was quite excited because I thought it's an upstream bug.. Now it most likely is a config error
[23:10:59] <FromGitter> <lebensterben> You may delete it or change it to `("/usr/bin/lldb-vscode")`
[23:11:04] <FromGitter> <Grimpper> man. If that's the case I'm so sorry
[23:11:08] <FromGitter> <lebensterben> no worry
[23:11:27] <FromGitter> <lebensterben> I'd like to know why you made this mistake in the first place
[23:11:34] <FromGitter> <lebensterben> is the documentation confusing?
[23:12:31] <FromGitter> <lebensterben> A quick skim and I think we have not mentioned this variable in dap layer.
[23:12:40] <FromGitter> <Grimpper> for me the documentation is really difficult to follow but I think thats on me because I have never used emacs
[23:12:53] <FromGitter> <Grimpper> so lips syntax is a mistery
[23:13:53] <FromGitter> <lebensterben> okay
[23:13:59] <FromGitter> <lebensterben> fix it and try again
[23:14:36] <FromGitter> <lebensterben> you can restart emacs and retry dap-debug
[23:15:03] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129a3f0909252318ec1f70]
[23:15:49] <FromGitter> <Grimpper> the exit code is 127
[23:16:52] <FromGitter> <lebensterben> 127 means command not found
[23:17:49] <FromGitter> <Grimpper> ```which lldb-vscode ⏎ /usr/bin/lldb-vscode ⏎ ``` [https://gitter.im/syl20bnr/spacemacs?at=62129ae50909252318ec211e]
[23:18:06] <FromGitter> <Grimpper> if it's on the path that's something that could not be found?
[23:18:08] <FromGitter> <lebensterben> remove any mentioning of `dap-lldb-debug-program` in your .spacemacs
[23:18:26] <FromGitter> <lebensterben> the default value should be good
[23:18:47] <FromGitter> <Grimpper> already done
[23:19:06] <FromGitter> <lebensterben> what's the value of dap-lldb-debug-program
[23:19:32] <FromGitter> <Grimpper> dap-lldb-debug-program is a variable defined in ‘dap-lldb.el’. ⏎ Its value is ⏎ ("/home/grim/.vscode/extensions/llvm-org.lldb-vscode-0.1.0/bin/lldb-vscode") ⏎  ⏎ This variable may be risky if used as a file-local variable. ... [https://gitter.im/syl20bnr/spacemacs?at=62129b4c0466b352a4e2badf]
[23:19:35] <FromGitter> <lebensterben> does `~/.vscode/extensions/llvm-org.lldb-vscode-0.1.0/bin/lldb-vscode` exist?
[23:19:58] <FromGitter> <lebensterben> yeah this is the default value
[23:20:07] <FromGitter> <Grimpper> it does not
[23:20:14] <FromGitter> <lebensterben> oh great it doesn't ...
[23:21:42] <FromGitter> <Grimpper> it it not enough to install it with vscode?
[23:21:57] <FromGitter> <lebensterben> so let 's set it to `("/usr/bin/lldb-vscode")`
[23:22:05] <FromGitter> <lebensterben> in you .spacemacs
[23:22:09] <FromGitter> <lebensterben> restart and retry
[23:24:03] <FromGitter> <Grimpper> could you refresh me the syntax to set a variable correctly?
[23:24:30] <FromGitter> <Grimpper> setq is enough?
[23:24:37] <FromGitter> <lebensterben> well
[23:25:00] <FromGitter> <lebensterben> you should have `dap` in `dotspacemacs-configuration-layers`
[23:25:09] <FromGitter> <Grimpper> i do
[23:25:29] <FromGitter> <Grimpper> oh a layer variable
[23:25:30] <FromGitter> <lebensterben> change `dap` to `(dap :variables dap-lldb-debug-program '("/usr/bin/lldb-vscode"))`
[23:26:14] <FromGitter> <lebensterben> if you already have something like `(dap :variables foo bar)`then change it to  `(dap :variables foo bar dap-lldb-debug-program '("/usr/bin/lldb-vscode"))`
[23:27:02] <FromGitter> <Grimpper> alright
[23:27:13] <FromGitter> <Grimpper> now it starts
[23:28:04] <FromGitter> <Grimpper> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=62129d4cddcba117a2e81a4e]
[23:28:10] <FromGitter> <Grimpper> it does the hello world
[23:28:19] <FromGitter> <Grimpper> is this the expected backtrace?
[23:29:56] <FromGitter> <lebensterben> You may `M-x toggle-debug-on-error` if it's on
[23:30:13] <FromGitter> <lebensterben> and those errors might be suppressed
[23:30:36] <FromGitter> <Grimpper> but the debugger should launch?
[23:32:05] <FromGitter> <lebensterben> just try ...
[23:32:15] <FromGitter> <Grimpper> i try
[23:32:30] <FromGitter> <Grimpper> but there no debugger launches
[23:33:26] <FromGitter> <lebensterben> no error reported?
[23:33:29] <FromGitter> <Grimpper> no
[23:33:44] <FromGitter> <lebensterben> invent an error ...
[23:33:49] <FromGitter> <lebensterben> add some breakpoint for example
[23:34:09] <FromGitter> <Grimpper> they are ignored
[23:34:23] <FromGitter> <Grimpper> there is debug output
[23:34:29] <FromGitter> <lebensterben> ?
[23:34:44] <FromGitter> <Grimpper> Hello sum: 3^M
[23:34:47] <FromGitter> <Grimpper> this is the output
[23:35:05] <FromGitter> <Grimpper> but the breakpoints are ignored
[23:35:15] <FromGitter> <Grimpper> and no interface is launched
[23:35:15] <FromGitter> <lebensterben> ^M is the escape code for \r
[23:35:34] <FromGitter> <lebensterben> I gusee you just printed the output in the code
[23:35:45] <FromGitter> <Grimpper> yes
[23:36:45] <FromGitter> <lebensterben> I've no idea
[23:36:53] <FromGitter> <lebensterben> time to give up
[23:36:58] <FromGitter> <Grimpper> yeah
[23:37:40] <FromGitter> <Grimpper> I will carefully read the documentation of the lldb because it seems now it's working
[23:38:02] <FromGitter> <Grimpper> so really appreciate your help. You have been very helpful and welcoming
[23:38:11] <FromGitter> <Grimpper> sincerely, thanks
[23:38:30] <FromGitter> <lebensterben> Also do you have /usr/bin/lddb
[23:38:50] <FromGitter> <lebensterben> lldb-vscode is just an extension, you also need to install lldb
[23:38:56] <FromGitter> <Grimpper> i have it
[23:39:05] <FromGitter> <lebensterben> I assume it's installed because otherwise there should be an error
[23:39:21] <FromGitter> <Grimpper> ``` which lldb ⏎ /usr/bin/lldb``` [https://gitter.im/syl20bnr/spacemacs?at=62129ff1f43b6d783fc74315]
[23:39:50] <FromGitter> <lebensterben> are you coding in C++
[23:39:57] <FromGitter> <Grimpper> c
[23:41:47] <FromGitter> <lebensterben> In ielm, `(require 'dap-gdb-lldb)`
[23:41:59] <FromGitter> <lebensterben> then `(dap-gdb-lldb-setup)`
[23:42:44] <FromGitter> <lebensterben> since you're working on C there's no need for `dap-cpptools-setup`
[23:43:26] <FromGitter> <lebensterben> when you run `M-x dap-debug` you will be prompted to choose an configuration
[23:43:43] <FromGitter> <Grimpper> yes, which one should i pick?
[23:43:46] <FromGitter> <lebensterben> you can use gdb instead if you prefer
[23:44:05] <FromGitter> <lebensterben> both gdb and lldb are powerful and counterintuitive
[23:44:49] <FromGitter> <lebensterben> I don't use debugger
[23:45:19] <FromGitter> <Grimpper> i see why. The set up is a nightmare
[23:46:03] <FromGitter> <kjartan_oli:matrix.org> Using gdb from the command line is actually pretty straightforward.
[23:46:33] <FromGitter> <kjartan_oli:matrix.org> That's one of the reasons I never bothered to figure out why I couldn't get the dap layer to work.
[23:49:26] <FromGitter> <lebensterben> gdb has more documentation and tutorials online
[23:51:20] *** Quits: geep (326606a8c6@2604:bf00:561:2000::3bd) (Ping timeout: 250 seconds)
[23:51:35] <FromGitter> <Grimpper> i will research it then
[23:51:51] <FromGitter> <Grimpper> thanks again to both of you
[23:51:52] *** Joins: geep (326606a8c6@2604:bf00:561:2000::3bd)
[23:57:21] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
