[00:01:25] *** Joins: GailWynand (~GailWynan@195.216.219.122)
[00:02:02] *** Joins: jgrim44 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[00:02:29] *** Quits: jgrim4 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Ping timeout: 256 seconds)
[00:02:29] *** jgrim44 is now known as jgrim4
[00:03:40] <din0> How are you setting up your PHP config?  FPM ?
[00:03:54] *** Quits: jgrim40 (~jgrim@172.58.197.170) (Ping timeout: 250 seconds)
[00:06:09] *** Joins: ada_ (uid242135@user/ada/x-9065485)
[00:06:09] *** ChanServ sets mode: +o ada_
[00:06:19] <smoking_gnu476> I have never used PHP before. It seems like I am going to use the php docker image but I don't know how I will generate the config.
[00:08:06] <smoking_gnu476> How much would I need to learn in order to make a form that sends data to SQL?
[00:08:22] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Quit: Leaving)
[00:09:41] <din0> Hmm I think if you were looking at doing all of this with official images, you'd need an 1. nginx container for serving content, 2. php-fpm container for handling PHP and 3. mysql container + volume for data storage and querying
[00:10:24] *** Joins: jgrim44 (~jgrim@172.58.197.170)
[00:10:38] <din0> Your nginx config would direct requests for PHP files to proxy to the PHP-FPM container listener
[00:12:00] <smoking_gnu476> What is the point of FPM?
[00:12:28] <smoking_gnu476> And would it be possible to read the outputs via Grafana?
[00:12:57] *** Joins: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net)
[00:13:22] *** Joins: jgrim49 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[00:13:58] *** Quits: jgrim4 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Ping timeout: 256 seconds)
[00:13:58] *** jgrim49 is now known as jgrim4
[00:14:01] <din0> FPM is one way to handle the processing of PHP files and their logic.  Older methods involved loading a module along with the main process (old LAMP-style configs for instance) but I think FPM is the preferred standard now. 
[00:15:06] *** Quits: jgrim44 (~jgrim@172.58.197.170) (Ping timeout: 256 seconds)
[00:15:10] <gooble_gobble> hey folks. i have a /etc/profile.d/foobar.sh which exports an environment variable. When i run "docker run -ti my_container /bin/bash" I see the var is set. If i run "docker run -ti my_container env" I dont see the var. What gives??
[00:16:17] <gooble_gobble> both /etc/bashrc and /etc/profile.d dont seem to work
[00:16:49] <din0> gooble_gobble: I believe it's because invoking 'env' doesn't spawn a shell like you're doing when you invoke /bin/bash
[00:18:03] <din0> When you start a bash shell it will run the scripts inside of profile.d, but 'env' isn't doing that
[00:18:39] <gooble_gobble> din0, ahh, so how does the utility run? its in a non-login non-interactive shell?
[00:18:44] <gooble_gobble> help me connect the dots
[00:19:51] <din0> Which image is the container based on?
[00:20:13] <gooble_gobble> centos
[00:21:53] <njka> gooble_gobble: why not just pass the variable in at container runtime
[00:22:01] <njka> ( just wondering )
[00:23:07] <gooble_gobble> njka, tl;dr; i dont know the path ahead of time. I have an ansible script configure my host. It eats a param based on the ci pipeline
[00:23:22] *** Joins: Atque (~Atque@user/atque)
[00:23:27] <njka> ahhh
[00:23:28] *** Joins: rightisleft (~rightisle@c-73-190-82-154.hsd1.wa.comcast.net)
[00:23:33] <njka> ewww :)
[00:24:33] <rightisleft> Hello - in daemon.json - is there a way to configure a global dns pointer? IE: can i map foo.domain.com to xxx.xxx.xxx.xxx for all containers?  
[00:25:13] <programmerq> nope. your best bet will be to run your own dns server and set your dns overrides that way.
[00:25:39] <din0> gooble_gobble I'm not 100% certain but when you don't specify the shell it appears to be either a different shell than bash and doesn't retrieve all of your environment vars.  See the difference between:  `docker run centos env` and `docker run centos /bin/bash -c env`
[00:25:45] <programmerq> you can set the dns server default in daemon.json
[00:26:12] <rightisleft> ya i was hoping to avoid running my own dns
[00:26:25] <gooble_gobble> din0, you're right... wonder what the H it's doing
[00:26:42] <programmerq> gooble_gobble / din0 it literally runs env directly and doesn't run it inside a shell. it directly calls the execve syscall directly.
[00:27:00] <rightisleft> will daemon.json use the hosts machines /etc/hosts at all?
[00:27:02] <programmerq> one too many 'directly' in there
[00:27:50] <programmerq> rightisleft: no. the /etc/hosts on the host is used by things doing resolution on the host, even dockerd itself. entries in /etc/hosts are not copied into the containers. The containers dns lookups only go over dns servers.
[00:27:52] <njka> programmerq: for emphasis :)
[00:27:57] <njka> ( sp? )
[00:28:08] <din0> programmerq ah ok, so it doesn't need to call a shell to run `env` for instance, so it doesn't inherit any environment from any shell
[00:28:09] <gooble_gobble> programmerq, ahh i see. so ther is literally no shell (and thus nothing to load)?
[00:28:31] <gooble_gobble> mind is blown... how do you run a program without a shell ...
[00:28:39] *** Parts: daemon (znc@about/web/TheBeardedBSDer) (Leaving)
[00:28:43] <njka> CMD :)
[00:28:51] <programmerq> there was someone in here earlier that had another question about dns stuff. he ended up configuring systemd-resolved to listen on the docker0 ip address and then configured docker to use the docker0 ip as the dns.
[00:29:13] <programmerq> I _THINK_ that systemd-resolved can also use /etc/hosts as a source for the dns requests it gets, but I could be wrong.
[00:29:23] <programmerq> it might have another way to set custom hosts too
[00:29:25] <njka> gooble_gobble: think about it tho... when you run an sshd... there is no shell involved
[00:29:35] <njka> just one of many examples
[00:29:38] <njka> :)
[00:29:43] <din0> Couldn't you supply your own hosts or resolv.conf file as a volume
[00:30:07] <programmerq> gooble_gobble▸ a program can be started by anything that can call exec on it-- whether it's being started by a shell or any other program. after all, a shell is just a program that runs programs.
[00:31:07] <programmerq> din0▸ you can do those hacks individually for containers, but if you want to do something individually for containers you could just use --add-host instead of overriding files that docker usually manages for you and potentially breaking the docker service discovery stuff (if you override resolv.conf)
[00:31:22] <programmerq> this question was about how to do it for every container.
[00:31:44] <gooble_gobble> programmerq, so if the program is run, but not in the context of a shell, the environment loader scripts dont run and the environment is basically empty?
[00:31:45] <programmerq> of course the best way to get dns entries available to your containers is to just make a real DNS entry somewhere. domains are easy to get.
[00:32:03] <din0> True, I forgot about the --add-host functionality.
[00:32:49] <programmerq> gooble_gobble▸ correct, the shell profile/rc files aren't loaded by a non-shell program because they are not a shell. instead, docker/containerd/runc packs in the environment vars as part of the execve request
[00:33:10] <programmerq> of course, docker does that for whatever process it starts in the container, including a shell
[00:33:35] <gooble_gobble> ahh i see... thanks programmerq 
[00:33:37] <din0> `docker run -e HELLO=WORLD centos env` works because you're passing the environment var at runtime
[00:33:39] <gooble_gobble> i was almost in tears
[00:33:39] *** Quits: Bruners (lasseb@178.16.64.98) (Ping timeout: 256 seconds)
[00:33:50] <njka> gooble_gobble: you should "man bash" bro :)
[00:33:58] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[00:34:03] <gooble_gobble> i have been... its dense
[00:34:04] <njka> gooble_gobble: all of this is explained :)
[00:34:07] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:34:15] *** Joins: jkwnki1 (~jkwnki@p2e5794ba.dip0.t-ipconnect.de)
[00:34:27] <programmerq> gooble_gobble▸ here's all the syscalls that I was able to capture that happen related to a 'docker run --rm -it centos env' command: https://gist.github.com/5c4cac3b83dbe2ec1f2807eebd9d9ba0
[00:34:46] <gooble_gobble> plus I wasnt sure if this was a bash problem, a sh problem, or something else
[00:34:55] <gooble_gobble> nice programmerq, taking a look
[00:35:02] <rightisleft> din0: no - that would then be duplicated across ALL containers
[00:35:05] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[00:35:11] <programmerq> I actually did a '--name test' as well. I am using "sudo sysdig -pc 'container.name=test'" to generate that
[00:35:15] <njka> programmerq: did you use strace to get all those syscalls?
[00:35:30] <njka> ( i'm guessing you did... but just in case you know some other magic )
[00:35:37] <programmerq> I used to work for sysdig and it has built in filters for container-awareness
[00:35:39] <rightisleft> programmerq: this is for developer environments inside a vpn - its a bit brutal with swarm dns
[00:36:00] <programmerq> that's just the open source sysdig command, none of the paid stuff
[00:37:00] <rightisleft> o well - a battle for another day - if it was supported i was going to fix this
[00:37:33] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[00:39:10] *** Joins: jgrim49 (~jgrim@172.58.197.170)
[00:39:33] *** Joins: trevors (~trevors@user/trevors)
[00:40:04] *** Joins: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au)
[00:42:15] *** Joins: jgrim48 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[00:42:17] *** Quits: jgrim4 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Ping timeout: 240 seconds)
[00:42:17] *** jgrim48 is now known as jgrim4
[00:43:37] *** Quits: jkwnki (~jkwnki@p2e5794ba.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:44:12] *** Quits: jgrim49 (~jgrim@172.58.197.170) (Ping timeout: 250 seconds)
[00:44:16] *** Joins: martums5 (~martums@user/martums)
[00:44:34] *** Quits: jkwnki1 (~jkwnki@p2e5794ba.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:59:34] *** Quits: analogsalad (~analogsal@user/analogsalad) (Quit: bye)
[01:03:31] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:05:23] *** Quits: cim (~cim@205.185.117.110) (Ping timeout: 256 seconds)
[01:06:44] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[01:07:00] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[01:08:18] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Client Quit)
[01:08:34] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[01:30:25] *** Quits: BobbyJr (~BobbyJr@robsworld.plus.com) (Remote host closed the connection)
[01:50:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[01:50:58] *** Joins: rardiol (~quassel@user/rardiol)
[01:52:50] *** Joins: cim (~cim@205.185.117.110)
[01:56:01] *** Quits: gopar (~gopar@199.36.94.212) (Remote host closed the connection)
[01:56:29] *** Joins: ExeciN (~ExeciN@user/nicexe)
[02:02:19] *** Joins: dAnjou (sid137673@id-137673.tinside.irccloud.com)
[02:05:28] *** Parts: dAnjou (sid137673@id-137673.tinside.irccloud.com) ()
[02:11:50] *** Joins: vidbina (~vid@213.94.3.130)
[02:14:50] *** Joins: Tach (~Tach@user/tach)
[02:22:36] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 256 seconds)
[02:23:14] <Tach> tabakhase thanks, looking into it
[02:25:35] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[02:27:20] *** Quits: vidbina (~vid@213.94.3.130) (Ping timeout: 250 seconds)
[02:30:22] *** Quits: smoking_gnu476 (~smoking_g@50-203-38-10-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[02:32:32] *** Quits: jgrim4 (~jgrim@d60-65-99-197.col.wideopenwest.com) (Ping timeout: 250 seconds)
[02:36:14] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:36:46] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[02:38:28] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 256 seconds)
[02:39:27] *** Quits: AnapodoPsalidaki (~AnapodoPs@154.57.4.229) (Ping timeout: 256 seconds)
[02:43:33] *** Joins: AnapodoPsalidaki (~AnapodoPs@athedsl-250022.home.otenet.gr)
[02:53:48] *** Quits: rightisleft (~rightisle@c-73-190-82-154.hsd1.wa.comcast.net) (Quit: rightisleft)
[02:57:26] *** Quits: GailWynand (~GailWynan@195.216.219.122) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:20] *** Joins: vidbina (~vid@213.94.3.130)
[02:59:34] *** Joins: catbehemoth (~vasyl@bras-base-lnglpq6100w-grc-15-206-172-247-176.dsl.bell.ca)
[03:04:05] *** Joins: lilgopher (~textual@2601:241:8000:38f0:e042:e545:8e69:b5be)
[03:19:58] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:21:17] *** Quits: ada_ (uid242135@user/ada/x-9065485) (Quit: Connection closed for inactivity)
[03:28:13] *** Joins: jazzy (~jaziz@user/jaziz)
[03:34:59] *** Quits: vidbina (~vid@213.94.3.130) (Ping timeout: 256 seconds)
[03:36:41] *** Quits: anandn (~anandn@2601:600:a27f:d92d:6c3b:dc86:41f9:d3cb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:37:58] *** Joins: trevors (~trevors@user/trevors)
[03:40:36] *** Joins: Tach (~Tach@user/tach)
[03:46:28] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 256 seconds)
[03:48:00] *** nuala3 is now known as nuala
[03:54:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[03:58:16] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 245 seconds)
[03:59:05] *** Joins: anandn (~anandn@98.232.3.180)
[04:00:58] *** Joins: Tach (~Tach@user/tach)
[04:05:17] *** Joins: Celelibi (celelibi@user/celelibi)
[04:11:29] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:17:25] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[04:20:50] *** Joins: smoking_gnu476 (~smoking_g@50-203-38-10-static.hfc.comcastbusiness.net)
[04:26:03] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[04:26:33] *** Joins: travisghansen (~travisgha@192.74.130.86)
[04:26:57] *** Joins: OPK (~OPK@user/opk)
[04:32:14] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[04:40:05] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:42:57] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Quit: Konversation terminated!)
[04:58:27] *** Joins: svm_invictvs_ (~svm_invic@user/svm-invictvs/x-6696469)
[05:00:17] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 240 seconds)
[05:01:27] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:01:48] *** Quits: anandn (~anandn@98.232.3.180) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:02:27] *** Joins: ada_ (uid242135@user/ada/x-9065485)
[05:02:27] *** ChanServ sets mode: +o ada_
[05:07:30] *** Quits: gearnode (~gearnode@lfbn-idf1-1-1539-107.w90-90.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:08:50] *** Joins: gearnode (~gearnode@2a01cb000ce2c100f22f74fffedefec1.ipv6.abo.wanadoo.fr)
[05:10:11] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Ping timeout: 256 seconds)
[05:12:58] *** Joins: anandn (~anandn@2601:600:a27f:d92d:e83d:324a:8daa:9f9f)
[05:18:12] *** Quits: akurilin_ (uid322841@id-322841.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:18:41] *** Quits: bouncy_ (~ben@user/benoit) (Ping timeout: 256 seconds)
[05:20:23] *** Joins: gopar (~gopar@199.36.94.212)
[05:25:13] *** Joins: trevors (~trevors@user/trevors)
[05:27:29] *** Quits: anandn (~anandn@2601:600:a27f:d92d:e83d:324a:8daa:9f9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:36:04] *** Quits: gopar (~gopar@199.36.94.212) ()
[05:37:49] *** Quits: tsal (~tsal@user/tsal) (Ping timeout: 240 seconds)
[05:44:26] *** Joins: tsal (~tsal@user/tsal)
[06:02:02] *** Joins: notevil (~notevil@user/notevil)
[06:06:17] *** Quits: smoking_gnu476 (~smoking_g@50-203-38-10-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[06:06:49] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:12:23] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[06:14:28] *** Joins: rpthms (~rpthms@user/rpthms)
[06:21:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 240 seconds)
[06:23:29] *** Joins: anandn (~anandn@98.232.3.180)
[06:25:19] *** Quits: anandn (~anandn@98.232.3.180) (Client Quit)
[06:29:06] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:36:44] *** Joins: keypusher (keypusher@user/keypusher)
[06:37:57] *** Joins: daMaestro (~damaestro@fedora/daMaestro)
[06:40:16] *** Joins: anandn (~anandn@2601:600:a27f:d92d:e83d:324a:8daa:9f9f)
[06:43:16] *** Quits: setesat (~setesat@94.4.156.220) (Ping timeout: 256 seconds)
[06:43:38] *** Joins: millido (~millido@84.210.150.128)
[06:54:57] *** Quits: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:04:45] *** Quits: anandn (~anandn@2601:600:a27f:d92d:e83d:324a:8daa:9f9f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:12] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[07:11:14] *** Joins: setesat (~setesat@94.4.156.220)
[07:12:48] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:48] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:02] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:26:59] *** Joins: Hydro (~Hydro@1.156.239.101)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:34] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:31:26] *** Joins: haasn (~nand@haasn.dev)
[07:32:24] *** Joins: trevors (~trevors@user/trevors)
[07:34:18] *** Quits: trevors (~trevors@user/trevors) (Client Quit)
[07:56:12] *** Joins: trevors (~trevors@user/trevors)
[08:02:46] *** Joins: anandn (~anandn@98.232.3.180)
[08:02:54] *** Quits: jstoker (jstoker@user/jstoker) (Remote host closed the connection)
[08:04:09] *** Quits: anandn (~anandn@98.232.3.180) (Client Quit)
[08:06:23] *** Joins: jstoker (~jstoker@user/jstoker)
[08:06:41] *** Joins: anandn (~anandn@2601:600:a27f:d92d:a176:1395:81f9:b649)
[08:08:32] *** Quits: anandn (~anandn@2601:600:a27f:d92d:a176:1395:81f9:b649) (Client Quit)
[08:10:14] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[08:11:05] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:14:56] *** Quits: C4Crawford (~C4Crawfor@2600:1700:5470:712f:f498:f540:8453:a379) (Ping timeout: 245 seconds)
[08:18:42] *** Joins: akurilin_ (uid322841@id-322841.ilkley.irccloud.com)
[08:20:58] *** Joins: anandn (~anandn@2601:600:a27f:d92d:a908:fe4a:67d7:11cf)
[08:22:19] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[08:22:43] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:26:27] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[08:29:24] *** Quits: daMaestro (~damaestro@fedora/daMaestro) (Quit: Leaving)
[09:03:34] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[09:06:13] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[09:07:51] *** Quits: catbehemoth (~vasyl@bras-base-lnglpq6100w-grc-15-206-172-247-176.dsl.bell.ca) (Quit: WeeChat 3.4)
[09:11:33] *** Joins: catbehemoth (~vasyl@bras-base-lnglpq6100w-grc-15-206-172-247-176.dsl.bell.ca)
[09:13:05] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[09:19:55] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[09:23:43] <bayman> how can I build an ubuntu image with systemd booted?
[09:26:38] <tabakhase> you dont want to...
[09:26:41] <tabakhase> ;-)
[09:31:47] <bayman> I want to build it just to test ansible playbooks using molecule
[09:35:53] <ikke> look at dokken
[09:36:51] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[09:37:43] <ikke> https://github.com/test-kitchen/dokken-images
[09:43:56] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:46:18] *** Quits: blackwood821 (~blackwood@user/blackwood821) (Ping timeout: 256 seconds)
[09:48:39] *** Joins: blackwood821 (~blackwood@user/blackwood821)
[09:49:42] <tabakhase> bayman well thats at least one of the cases where its "okay" - then answer is "with lots of extra work :|" - but you should find somehting on the hub to use just fine, ikkes links seems to be right on
[09:50:07] <ikke> I use that sucessfully with chef
[09:50:15] <ikke> It does require the host to have systemd running
[09:58:36] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:06:05] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Read error: Connection reset by peer)
[10:09:23] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[10:11:10] *** Joins: vidbina (~vid@213.94.3.130)
[10:28:44] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:30:21] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[10:31:05] *** Quits: Hydro (~Hydro@1.156.239.101) (Quit: Leaving)
[10:36:13] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 240 seconds)
[10:37:07] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[10:37:22] *** Quits: justIrresolute (~justache@user/justache) (Remote host closed the connection)
[10:37:55] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[10:38:23] *** Joins: bkhl (~bkhl@user/bkhl)
[10:38:37] *** Joins: justIrresolute (~justache@user/justache)
[10:45:27] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:54:25] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:56:42] *** Joins: kydd (~kydd@212.237.178.212)
[10:56:53] *** Joins: lithium (~lithium@user/lithium)
[11:05:31] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[11:11:00] *** Joins: Bruners (~lasseb@178.16.64.98)
[11:12:34] <aminvakil> bayman: I use these for exact reason: https://github.com/aminvakil/docker-os-systemd
[11:16:16] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:19:40] *** Joins: standardrat (~standardr@196.30.99.2)
[11:25:43] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:25:58] *** packet_lozenge_ is now known as packet_lozenge
[11:28:34] *** Quits: vidbina (~vid@213.94.3.130) (Ping timeout: 250 seconds)
[11:30:17] *** Quits: anandn (~anandn@2601:600:a27f:d92d:a908:fe4a:67d7:11cf) (Ping timeout: 240 seconds)
[11:30:49] <kydd> Hi! I want to pass the contents of a file in an environment variable to my container using docker-compose. Is there a way to load it automatically inside the docker-compose.yml or the `.env`?
[11:32:52] *** Joins: BobbyJr (~BobbyJr@robsworld.plus.com)
[11:49:52] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[11:52:24] *** Quits: AnapodoPsalidaki (~AnapodoPs@athedsl-250022.home.otenet.gr) (Ping timeout: 250 seconds)
[11:54:40] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[11:54:51] *** Joins: selckin (~selckin@user/selckin)
[12:07:51] <bayman> aminvakil: thanks
[12:09:41] *** Joins: effprime (~effprime@user/effprime)
[12:09:58] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:10:13] *** Quits: effprime_ (~effprime@user/effprime) (Ping timeout: 240 seconds)
[12:18:20] *** Quits: kydd (~kydd@212.237.178.212) (Remote host closed the connection)
[12:25:40] *** Joins: kydd (~kydd@212.237.178.212)
[12:30:32] *** Quits: kydd (~kydd@212.237.178.212) (Quit: Lost terminal)
[12:31:52] *** Quits: Bebef (sbreit@phobos.bebef.de) (Quit: bye)
[12:32:57] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Remote host closed the connection)
[12:33:21] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[12:33:41] *** Joins: Bebef (sbreit@phobos.bebef.de)
[12:45:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:48:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:50:09] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:510d:9008:cbba:87a0)
[12:52:01] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 256 seconds)
[12:57:31] *** Joins: Tach (~Tach@user/tach)
[13:05:37] *** Quits: SilverEagleDev (~SilverEag@azuracast/lead-developer/SilverEagleDev) (Ping timeout: 240 seconds)
[13:10:26] *** Joins: MikeBux (~MikeBux@host-091-097-122-246.ewe-ip-backbone.de)
[13:11:10] *** Joins: SilverEagleDev (~SilverEag@azuracast/lead-developer/SilverEagleDev)
[13:26:22] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[13:26:36] *** Joins: vidbina (~vid@2a02:3033:8:f709:584:444a:234f:231c)
[13:29:02] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:510d:9008:cbba:87a0) (Ping timeout: 250 seconds)
[13:30:54] *** Joins: usr123 (~usr123@27.255.249.96)
[13:31:07] <usr123> How can I check if my kubernetes pod is using tls or not?
[13:56:06] *** Joins: Proxysna (~Proxysna@185.251.89.199)
[13:57:47] *** Joins: Proxysna_ (~Proxysna@62.119.254.142)
[14:00:37] *** Quits: polymorphic (~polymorph@user/polymorphic) (Ping timeout: 240 seconds)
[14:00:40] *** Joins: molt (~molt@46.33.200.12)
[14:00:45] *** Quits: Proxysna (~Proxysna@185.251.89.199) (Ping timeout: 256 seconds)
[14:18:18] <usr123> How to find the configmap a pod is using?
[14:28:11] *** Quits: usr123 (~usr123@27.255.249.96) (Quit: Client closed)
[14:36:52] *** Joins: rardiol (~quassel@user/rardiol)
[14:49:17] *** Joins: bouncy_ (~ben@user/benoit)
[15:05:54] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:20:17] *** Quits: vidbina (~vid@2a02:3033:8:f709:584:444a:234f:231c) (Ping timeout: 240 seconds)
[15:26:32] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:1404:aaae:95e:f2e4)
[15:27:38] *** Joins: vidbina (~vid@65.red-83-38-143.dynamicip.rima-tde.net)
[15:27:51] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 256 seconds)
[15:36:40] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[15:42:35] *** Quits: Fauve_bis (~Fauve@user/fauve) (Ping timeout: 256 seconds)
[15:44:04] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[15:44:18] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:48:13] *** Quits: zakame_ (~zakame@user/zakame) (Ping timeout: 240 seconds)
[15:50:26] *** Joins: zakame_ (~zakame@user/zakame)
[15:52:29] *** Joins: Flash_ (~Flash@user/flash)
[15:54:29] *** Quits: Flash (~Flash@user/flash) (Ping timeout: 256 seconds)
[15:54:40] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[15:56:24] *** Joins: Fauve_bis (~Fauve@user/fauve)
[16:00:53] *** Quits: zakame_ (~zakame@user/zakame) (Ping timeout: 256 seconds)
[16:02:45] *** Joins: zakame_ (~zakame@user/zakame)
[16:05:50] *** Quits: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[16:05:52] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[16:08:41] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:1404:aaae:95e:f2e4) (Ping timeout: 268 seconds)
[16:12:11] *** Joins: analogsalad (~analogsal@user/analogsalad)
[16:14:29] *** Quits: zakame_ (~zakame@user/zakame) (Ping timeout: 256 seconds)
[16:16:04] *** Joins: zakame_ (~zakame@user/zakame)
[16:17:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:34:33] *** Joins: Anticom (~anticom@87.190.49.75)
[16:40:46] *** Joins: vext01_ (~edd@hudzen10.theunixzoo.co.uk)
[16:41:52] <vext01_> hi, i'm exerimenting with dockerising our CI so that tests can run in a fresh image each time
[16:42:13] <vext01_> one of the things we'd like to do is test on lots of different linux distros
[16:42:50] <vext01_> using docker-compose, i can make different linux images, but i can't see a way to have docker-compose exit non-zero if one or more container's CMD fails
[16:43:10] <vext01_> the closest I can find is --exit-code-from
[16:43:40] <vext01_> but that's not quite what we need
[16:51:30] *** Quits: zakame_ (~zakame@user/zakame) (Quit: WeeChat 2.9)
[16:55:44] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[16:57:02] *** Joins: trevors (~trevors@user/trevors)
[16:58:03] *** Joins: Anticom (~anticom@87.190.49.75)
[17:06:35] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[17:09:11] <din0> Are you running a script like a for loop to go over all of the distros you want and individually testing each one?
[17:10:02] *** Quits: vidbina (~vid@65.red-83-38-143.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[17:10:25] *** Joins: GailWynand (~GailWynan@195.216.219.122)
[17:11:16] <vext01_> din0: i was hoping to define all of the different OSs as services in inside docker-compose.yml
[17:11:35] <vext01_> but if that's not possible, I'll use one docker-compose.yml for each OS
[17:11:57] *** Joins: Anticom (~anticom@87.190.49.75)
[17:12:03] <vext01_> it just makes my buildbot setup a bit more complicated to do it that way
[17:12:45] <din0> How many are we talking, <10 or dozens?
[17:12:54] <vext01_> probably only a handful
[17:14:03] <din0> Thinking you could do a for loop over each one and then they will each exit with their own individual codes and you can do logic in the script based on the exit code
[17:15:56] *** Joins: remote (~remote@user/hackers)
[17:16:57] <vext01_> right
[17:17:08] <vext01_> so there's no "in-docker-compose" way of aggregating the exit codes?
[17:17:47] *** Joins: vidbina (~vid@80.30.179.33)
[17:17:59] <tabakhase> vext01_ do you spin all versions from one compose - or a compose per or so?
[17:18:30] <vext01_> tabakhase: i'm trying to fogure out if it's practical to list all of the OSs inside one docker-compose.yml file
[17:18:47] <vext01_> but i'd need docker-compose to exit non-zero if any one OS fails
[17:18:52] <tabakhase> closest to actual exitcodes may need the "docker-compose run" syntax... usually its more for "deploying something" then wait a bit, and see if it cam up or died along the way
[17:19:07] <vext01_> right
[17:19:14] <din0> Not that I'm aware of, if you're running everything from a single docker-compose file then I think it would consider the whole script to pass/fail rather than individual items inside of it, if you're looking for specific exit codes like $?
[17:20:07] <tabakhase> but for "running a single container to test something" id almost call compose the wrong tool (as the run-syntax has some other limitations)
[17:20:42] <vext01_> how would you reccommend doing it? with raw "docker" without compose?
[17:20:45] <tabakhase> as in, "started and cam up" is pretty much all to watch there
[17:21:01] *** Quits: GailWynand (~GailWynan@195.216.219.122) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:22:13] <tabakhase> depending on what you wanne do "docker-compose exec" may also do - but this is rly "test something on $os" rather than "test if container based on $os was build correctly"
[17:22:37] <tabakhase> (cause generally having compose files is obvs. a bit neater than 324568 character long shellworms)
[17:22:55] <vext01_> yeah
[17:23:21] <vext01_> `docker-compose run` might be ok
[17:24:08] <vext01_> we don't require any networking ports or anything, so that limitation is ok
[17:24:25] <tabakhase> (and you can still manually turn on ports if needed anyhow)
[17:24:41] <vext01_> thanks, this has been useful
[17:28:01] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[17:28:37] *** Joins: Anticom (~anticom@87.190.49.75)
[17:34:33] *** Quits: standardrat (~standardr@196.30.99.2) (Quit: Leaving)
[17:46:18] <rawtaz> does anyone know if the new 16" M1 laptops fits just fine in a) general 15.6" sleeves, and b) sleeves made for the previous generation of 16" (non-M1) MBPs?
[17:51:36] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[17:52:48] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[17:53:00] <rawtaz> oops sorry, wrong channel
[17:54:32] *** Joins: hub (~hub@user/hub)
[18:05:19] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:09:34] *** Joins: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net)
[18:10:40] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[18:15:01] *** Joins: trevors (~trevors@user/trevors)
[18:16:44] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:fed7:3306:d4fc:9a92)
[18:18:17] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 240 seconds)
[18:20:25] *** Joins: vidbina_ (~vid@dynamic-089-204-135-102.89.204.135.pool.telefonica.de)
[18:21:06] *** Quits: vidbina (~vid@80.30.179.33) (Ping timeout: 250 seconds)
[18:23:03] *** Joins: sebastianos (~sebastian@user/sebastianos)
[18:27:26] *** Joins: Anticom (~anticom@87.190.49.75)
[18:29:07] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:5047:d362:2a14:ad72)
[18:29:10] <DevAntoine> Hello there
[18:29:53] <DevAntoine> I'd like to know why when a folder is created in a bind mount it as ACLs??
[18:29:56] <DevAntoine> I'm using docker for mac
[18:30:07] <DevAntoine> My container's user is root
[18:30:49] <DevAntoine> Folder permission is as follow: drwxr-xr-x+
[18:30:55] <DevAntoine> 0: user:antoinedes deny delete
[18:31:10] <DevAntoine> That means if I want to locally delete the folder I have to use sudo.
[18:31:48] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:31:57] *** Joins: Anticom (~anticom@87.190.49.75)
[18:32:12] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:33:11] *** Joins: Anticom (~anticom@87.190.49.75)
[18:33:55] *** Joins: polymorphic (~polymorph@user/polymorphic)
[18:53:27] <rawtaz> DevAntoine: well doenst it simply have ACLs on the host?
[18:53:33] <rawtaz> doesnt*
[18:55:11] <DevAntoine> rawtaz: the folder on the host is created from inside the container
[18:55:25] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:55:48] <rawtaz> DevAntoine: still. does the folder have ACLs if you inspect it on the host?
[18:56:27] <rawtaz> seems prudent to know what it looks like on both sides so to speak
[18:56:31] <DevAntoine> rawtaz: which folder, the one created from inside the container or the root folder from where the bind mount is done?
[18:56:42] <rawtaz> DevAntoine: both :D
[18:57:07] <DevAntoine> parent folder doesn't have ACL
[18:57:19] <DevAntoine> Created folder from inside the container does
[18:57:22] <rawtaz> im just thinking in terms of info gathering. my spontaneous guess would be that theres some ACL stuff happening due to the host, i never myself saw docker or the container add ACLs
[18:57:26] <rawtaz> hmm ok
[18:57:27] <DevAntoine> Which is why it annoys me
[18:57:31] <rawtaz> so it's not inherited or anything
[18:57:42] <DevAntoine> doesn't look so
[18:57:44] <rawtaz> how do you create it in the container?
[18:58:09] <rawtaz> and does it happen if you create yet another folder sibling to this one were talking about?
[18:58:13] <rawtaz> as in, you can reproduce it
[19:01:43] <DevAntoine> rawtaz: it's created by a binary
[19:01:50] <DevAntoine> which runs as root
[19:02:29] <rawtaz> hm
[19:03:05] <DevAntoine> but I just created another dir inside the container (as root) and on my host there's no axl on it
[19:03:07] <DevAntoine> acl
[19:03:16] <DevAntoine> Good advice rawtaz!
[19:07:30] *** Quits: analogsalad (~analogsal@user/analogsalad) (Quit: bye)
[19:10:41] *** Quits: ztx1 (~ztx@user/ztx) (Quit: ztx1)
[19:15:52] *** Joins: rsx (~dummy@ppp-188-174-134-164.dynamic.mnet-online.de)
[19:18:52] *** Joins: AnapodoPsalidi (~AnapodoPs@195.46.31.29)
[19:21:42] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:fed7:3306:d4fc:9a92) (Ping timeout: 268 seconds)
[19:22:51] <gajus> I need to find a way to somehow set env variable dynamically in Dockerbuild
[19:23:00] <gajus> that would persist when docker image is run
[19:23:48] <gajus> https://gist.github.com/gajus/e27af482541b85caff693386eec8d0eb
[19:23:58] <gajus> This is what I tried, but it doesn't produce the expected results
[19:24:33] <din0> Would setting an ENV foo=bar work here?
[19:24:55] <gajus> No, it has to be set in RUN block.
[19:26:05] <din0> Try RUN /bin/bash -c env
[19:26:44] <programmerq> the SHELL instruction at the top changes it to /bin/bash already
[19:27:11] <programmerq> but I don't think the non-interactive, non-login shell will load ~/.bashrc
[19:27:20] <programmerq> and, why does it need to be in a RUN?
[19:27:30] <programmerq> ENV is more likely what you really want here
[19:27:54] *** Joins: C4Crawford (~C4Crawfor@2600:1700:5470:712f:5d8b:3dfe:4532:6f70)
[19:28:15] <programmerq> you can use an ARG to set an ENV if that would get what you need when you say "dynamically set"
[19:28:16] <gajus> ENV is not unfortunately what I am after
[19:28:27] <programmerq> okay, but why? What problem does it not solve?
[19:28:28] <gajus> we cannot use ARG in build process, that's the premise
[19:28:42] <programmerq> okay, so how does RUN help you out here?
[19:29:08] <programmerq> are you going to calculate the value inside the RUN statement?
[19:29:57] <gajus> The only way we can pass parameters to Docker build is through use of a mount
[19:29:58] <gajus> https://gist.github.com/gajus/a960bd949bd8daa356e6139ba996e01d#file-workflow-yaml-L70-L84
[19:30:45] <gajus> I need to somehow make one of those .env variables available in the Docker env when it is run
[19:31:42] <programmerq> are you not able to change that build file to include a --build-arg ?
[19:33:00] *** Quits: rsx (~dummy@ppp-188-174-134-164.dynamic.mnet-online.de) (Quit: rsx)
[19:33:31] <programmerq> I guess given your premise of not using ARG, you could use an ENTRYPOINT script that would explicitly source ~/.bashrc and then run exec "$@"
[19:34:24] <programmerq> that way, any command you specify would have the bashrc exports applied before it is launched, whether it is a bash shell or any non-shell process. You'd also be able to change the .bashrc contents by bind mounting one without changing the image.
[19:35:06] *** Quits: hub (~hub@user/hub) (Quit: WeeChat 2.8)
[19:37:36] <gajus> basically, I want to restrict use of --args because engineers keep passing secrets using --args which they are not supposed to do
[19:37:43] <gajus> --build-args*
[19:38:23] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[19:40:36] <programmerq> yeah, ENTRYPOINT is the way to go in that case. LMK if you would like me to fork your gist and show the changes
[19:41:40] <gajus> it's alright. ENTRYPOINT solution makes sense. thank you
[19:42:34] <gajus> I am contemplating now whether a better solution is this or add a new input `insecure_build_argumnets` with description that emphasizes that it cannot be used to pass secrets
[19:43:57] <DevAntoine> omg I finally understand what happened!
[19:44:19] <DevAntoine> rawtaz: the ACLs are from docker-compose
[19:44:29] <DevAntoine> when it's stopped there's no more ACLs
[19:49:47] <rawtaz> DevAntoine: im totally not understanding that. why would compose add ACLs? are you running the `docker compose` or `docker-compose`? do you have anything in your compose file suggesting ACLs?
[19:50:00] <rawtaz> docker-compose just runs docker for ya, its just a wrapper basically
[19:50:31] <DevAntoine> rawtaz: I'm running docker-compose
[19:50:49] <rawtaz> good, thats the proper one :)
[19:51:01] <DevAntoine> rawtaz: volumes are "cached" or "delegated"
[19:51:08] <DevAntoine> Maybe it's because of that?
[19:51:24] <DevAntoine> Or maybe it's because I've got two services sharing the same volumes on the host?
[19:54:35] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:291a:6af6:aea8:c890:3a97:9bc3)
[19:56:03] *** Quits: AnapodoPsalidi (~AnapodoPs@195.46.31.29) (Ping timeout: 256 seconds)
[19:56:20] <rawtaz> DevAntoine: can you pastebin your compose file?
[20:00:26] <DevAntoine> rawtaz: https://gist.github.com/devantoine/43d8ffe06f9afd55370c812d6d904154
[20:00:34] <DevAntoine> Simplified but it's enough to reproduce the issue
[20:00:47] <DevAntoine> If I remove the second mount ACL are gone
[20:02:07] <rawtaz> DevAntoine: what is the path of that folder in the container?
[20:02:12] <rawtaz> i mean the one with the ACL
[20:04:07] <DevAntoine> rawtaz: /srv/app/vendor
[20:05:13] <rawtaz> DevAntoine: on the host, did you see the ACL on that vendor folder? or do you only see it inside the container?
[20:06:59] <DevAntoine> rawtaz: I see the ACL only on the host
[20:07:06] <DevAntoine> and only when docker is up
[20:07:13] <DevAntoine> (well, docker-compose)
[20:07:23] <rawtaz> oh. not in the container.
[20:07:32] * rawtaz wonders why he didnt already know about this
[20:08:04] <rawtaz> well then it simply sounds like docker adding that ACL when the container is running in order to prevent deletion of the folder. doesnt that make pretty much sense?
[20:08:17] <DevAntoine> rawtaz: not exactly
[20:08:21] <DevAntoine> well
[20:08:24] <rawtaz> is there an ACL on the ./ folder too?
[20:08:36] <DevAntoine> If I remove the second mount I haven't any ACL
[20:08:52] <DevAntoine> rawtaz: nop
[20:08:53] <rawtaz> yes, that makes sense.
[20:08:57] <rawtaz> but doesnt what i wrote above make sense to you?
[20:09:04] <DevAntoine> yes it does too
[20:09:18] <rawtaz> did you mean that it makes sense or that the ./ folder has an ACL too?
[20:09:20] <DevAntoine> It took me soooo long to figure out what happened
[20:09:36] <DevAntoine> rawtaz: it makes sense and ./ doesn't have any ACL :)
[20:11:02] <rawtaz> i wonder why it adds the ACL to just that subfolder and not the "root" folder
[20:13:00] <DevAntoine> rawtaz: that is a really good question 
[20:13:04] <DevAntoine> I'd like to know the answer too
[20:13:20] <DevAntoine> But google isn't helping for this one
[20:40:26] *** Flash_ is now known as Flash
[20:51:16] *** Joins: beuys (~beuys@user/beuys)
[20:51:19] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:51:40] <beuys> When "service apache2 start" in a docker container fails, how can one figure out why? It seems no logs are available?
[20:51:53] <gordonjcp> someone highlighted me but it's scrolled off
[20:52:07] <ikke> beuys: docker containers do not come with an init system
[20:52:41] <ikke> beuys: you typically run the desired process directly in the foreground
[20:53:07] <beuys> ikke: I am using the Debian docker image. It works just normal. But I cant find any logs about the failed apache start.
[20:53:24] <ikke> "it works just normal", what do you mean with that?
[20:54:16] <beuys> ikke: Everything works unless I make an error in the apache conf. Then apache wont start. Still normal. The problem is I cannot find the error in any log.
[20:54:16] <ikke> https://tpaste.us/dPwW 
[20:55:10] <ikke> beuys: the error is printed to stdout/stderr, which means you can get it from docker logs <container>
[20:55:30] <beuys> Oh shit! I am on a VM, not a docker container :)
[20:55:33] <beuys> Sorry.
[20:55:42] <beuys> But why cant I find the Apache logs anywhere?
[20:55:56] <ikke> depends on where apache is configured to store logs
[20:56:14] <ikke> if it's systemd, you can use journalctl -u httpd
[20:56:34] <ikke> or apache2 if that's the service nam,e
[20:56:34] <beuys> ikke: -- No entries --
[20:56:36] <ikke> name*
[20:57:02] <beuys> Yes, "journalctl -u apache2" outputs something. Lets see ..
[20:57:21] <beuys> Oh yeah! Looks good!
[20:57:28] <beuys> Thank you so much!
[20:59:09] <beuys> That output for some reason does not wrap but truncates lines ...
[20:59:23] <beuys> Piping it into less seems to help.
[20:59:39] <beuys> Can I clear that log?
[20:59:59] <ikke> You can use arrows to scroll to the right
[21:02:03] <beuys> Hmm... I prefer the pipe to less.
[21:02:15] <beuys> I wish it was just a file and I did not need a tool to lock at it.
[21:02:29] <ikke> beuys: it's already using less
[21:03:56] <ikke> though, apparently piping it yourself to less is the only way to prevent that apparentyl
[21:04:15] <beuys> :)
[21:04:47] <beuys> Funky, I have no VirtualHost for port 80 in my sites-enabled, but Apache still serves the site on port 80.
[21:10:16] *** Joins: trevors (~trevors@user/trevors)
[21:11:56] <gordonjcp> apache is a bit like Windows
[21:12:08] <gordonjcp> it was great when it was the only game in town but there's so much out there that's better now
[21:12:48] *** Quits: Anticom (~anticom@87.190.49.75) ()
[21:13:52] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:17:07] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-85fe-8f80-ea5f-426b.res6.spectrum.com)
[21:21:06] *** Quits: beuys (~beuys@user/beuys) (Quit: leaving)
[21:25:54] *** Joins: minimal (~minimal@user/minimal)
[21:34:12] *** Joins: martums53 (~martums@user/martums)
[21:35:36] *** Joins: maret_ (~maret@static.85-10-193-148.clients.your-server.de)
[21:37:53] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 256 seconds)
[21:37:53] *** martums53 is now known as martums5
[21:38:12] *** Joins: sabry (~sabry@197.37.4.159)
[21:39:01] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 256 seconds)
[21:45:01] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[21:48:05] *** Quits: vidbina_ (~vid@dynamic-089-204-135-102.89.204.135.pool.telefonica.de) (Ping timeout: 256 seconds)
[21:48:38] *** svm_invictvs_ is now known as svm_invictvs
[21:50:08] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:53:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:55:58] *** Joins: sabry84 (~sabry@197.37.4.159)
[21:56:34] *** Quits: sabry84 (~sabry@197.37.4.159) (Client Quit)
[22:04:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 250 seconds)
[22:26:14] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[22:34:34] <Tach> gordonjcp I don't agree, there are so many great plugins and options for Apache that no other software has
[22:43:57] *** Quits: rardiol (~quassel@user/rardiol) (Ping timeout: 240 seconds)
[22:48:51] *** Quits: lithium (~lithium@user/lithium) (Quit: Textual IRC Client: www.textualapp.com)
[22:57:53] *** Joins: Bebef0 (sbreit@phobos.bebef.de)
[22:59:29] *** Joins: cotko_ (~cotko@188-230-251-153.dynamic.t-2.net)
[22:59:39] *** Quits: Bebef (sbreit@phobos.bebef.de) (Ping timeout: 256 seconds)
[22:59:39] *** Bebef0 is now known as Bebef
[23:00:13] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 256 seconds)
[23:01:11] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 256 seconds)
[23:03:10] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[23:09:44] *** Quits: martums5 (~martums@user/martums) (Read error: Connection reset by peer)
[23:10:19] *** Joins: martums5 (~martums@user/martums)
[23:12:18] *** Quits: remote (~remote@user/hackers) (Ping timeout: 250 seconds)
[23:14:36] *** Joins: rardiol (~quassel@user/rardiol)
[23:19:39] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:d52:f084:8ba4:5b68)
[23:26:47] *** Joins: GailWynand (~GailWynan@195.216.219.122)
[23:34:10] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[23:36:21] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:38:31] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:40:54] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:40:54] *** Quits: maret_ (~maret@static.85-10-193-148.clients.your-server.de) (Ping timeout: 250 seconds)
[23:42:40] *** Joins: GailWynand_ (~GailWynan@5.248.238.157)
[23:43:30] *** Quits: GailWynand (~GailWynan@195.216.219.122) (Ping timeout: 250 seconds)
[23:43:48] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[23:44:59] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:46:02] *** Quits: sabry (~sabry@197.37.4.159) (Quit: Client closed)
[23:46:56] *** Joins: GailWynand (~GailWynan@195.216.219.3)
[23:48:21] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[23:48:41] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) ()
[23:49:21] *** Quits: GailWynand_ (~GailWynan@5.248.238.157) (Ping timeout: 256 seconds)
[23:49:51] *** Joins: vlm (~vlm@user/vlm)
[23:52:22] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:54:11] *** Joins: trevors (~trevors@user/trevors)
[23:58:11] *** Joins: Lycurgus (~juan@98.4.112.204)
