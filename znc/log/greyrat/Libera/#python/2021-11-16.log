[00:00:29] <kororaa> what does numpy have against simulations with different numbers of particles in each snapshot
[00:00:39] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[00:01:14] <grym> kororaa: typically the solution is to preallocate a rectangular array that has as many columns as the maximum number of particles, often full of nans, and then only give valid values to some elements of each row
[00:01:27] <grym> kororaa: ragged arrays completely blow up numpy's internal data model
[00:01:35] <kororaa> thx
[00:01:44] <kororaa> numpy should get a better internal data model
[00:01:45] *** Joins: Pixi (~Pixi@user/pixi)
[00:01:49] <grym> nah
[00:01:55] <grym> and it's hardly alone in this
[00:02:07] *** Joins: buzzard (~buzzard@2.56.190.29)
[00:02:09] <kororaa> my numerical analysis framework would be different
[00:02:11] <grym> i can't think of a numerics library that handles ragged data
[00:02:12] <Wooble> throw out the whole concept of matrix arithmetic for a few people's convenience?
[00:02:13] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[00:03:03] <kororaa> at least let me make a ragged list if i want that i'm not going to do matrix math with
[00:03:51] *** Quits: l4yer (~l4yer@195.181.170.210) (Remote host closed the connection)
[00:03:54] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 260 seconds)
[00:03:56] *** Quits: deutor (~quassel@176.221.113.10) (Ping timeout: 246 seconds)
[00:04:04] <sudomann> what is this flag useful for: --no-use-pep517
[00:04:09] *** Joins: l4yer (~l4yer@195.181.170.210)
[00:04:22] *** Joins: deutor (~quassel@82.177.4.226)
[00:05:41] *** Joins: mcglk (~mcglk@131.191.49.120)
[00:07:33] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 250 seconds)
[00:10:24] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:10:39] <buzzard> how much overhead do lists add to simple manipulation?  e.g. assign a new integer to a variable vs assign a new integer to a position in a list?
[00:11:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Ping timeout: 256 seconds)
[00:11:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:12:13] *** Joins: stoneware3 (~stoneware@user/stoneware)
[00:12:14] *** Quits: stealth[] (~stealth]@2001:9e8:36fb:7f00:8d30:acae:5df0:7de8) (Read error: Connection reset by peer)
[00:12:18] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[00:12:19] *** stoneware3 is now known as stoneware
[00:12:50] *** Quits: TJ- (~root@about/linux/staff/tj-) (Quit: WeeChat 3.3)
[00:13:08] <Swayze> why use a list if a variable will do
[00:13:26] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:13:37] <Swayze> on an assignment tho i'd say almost no difference
[00:13:55] <Swayze> both the variable name and list index point to a place in memory
[00:14:43] <buzzard> Swayze: has to do with coords of high dimension and it looks way cleaner to write the code using a list.  writing a small test now.
[00:15:07] <phy1729> python3 -m timeit 'a=[0]; b=1'  219 nsec per loop     python3 -m timeit 'a=[0]; a[0]=1'   309 nsec per loop  but modeling the data properly is more important imo
[00:15:31] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[00:16:38] *** Joins: shokohsc868 (~shokohsc@179.106.23.93.rev.sfr.net)
[00:17:02] *** Joins: audiobirb (~audio@user/audio)
[00:17:11] *** Quits: shokohsc86 (~shokohsc@175.196.23.93.rev.sfr.net) (Ping timeout: 264 seconds)
[00:17:12] <buzzard> yeah.  asking for my understanding is all.  i don't plan to do any serious number crunching using python's native types, just curious.
[00:17:12] *** shokohsc868 is now known as shokohsc86
[00:17:16] <buzzard> thanks
[00:17:16] <Swayze> well if its way cleaner to use a list why bother about the overhead
[00:17:38] <noord> buzzard: why wouldn't benchmark yourself, implement a stopwatch, run N times
[00:17:40] <Swayze> i feel like im misssing the point of the question
[00:17:58] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[00:18:04] <buzzard> that's okay
[00:18:06] <Swayze> doesnt matter :) seems like you got an answer
[00:18:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 264 seconds)
[00:19:16] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:19:51] <noord> buzzard: you may interested in data oriented design in case allocation overhead is so high
[00:21:09] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:e27b:a84a:30df:fde3) (Remote host closed the connection)
[00:21:33] <noord> instead of creating objects stored in heap, store multiple lists that contains same info partially
[00:21:52] <phy1729> noord: no need to implement a stopwatch; just use timeit as shown
[00:22:56] <buzzard> noord: i'll look it up, thanks!
[00:23:26] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:e105:b163:5a89:b4a6)
[00:24:03] *** Joins: teut (~teut@182.64.62.109)
[00:24:16] <teut> https://ibb.co/brWzYH4  this doesnt work in python 3.9, what is that changed it?
[00:24:41] <teut> you increased cache size?
[00:25:45] *** Quits: mallkrampus (~mallkramp@89.238.150.158) (Ping timeout: 250 seconds)
[00:27:13] *** Joins: Jong (~Jong@2620:10d:c090:400::5:4527)
[00:27:34] *** Joins: sidj (~sidj@user/sidj)
[00:28:21] <supakeen> i'm sure the talk explains that it's an implementation detail one shouldn't depend on
[00:28:24] <teut> nvm something is told afterwards
[00:28:28] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[00:28:37] *** Joins: kmcm0 (~kevin@207.225.28.190)
[00:28:46] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:e105:b163:5a89:b4a6) (Ping timeout: 268 seconds)
[00:29:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[00:29:40] <teut> he said that python 3. 6 did this, 3.7 removed it
[00:29:48] <teut> looks like they added it again
[00:30:04] <teut> store const in a cache in the ast
[00:30:24] <buzzard> unrelated question--a friend of mine is interested in learning a little bit about python and i'd like some opinions on the easiest way for a feller to get started (in windows).  i don't want to start him out with a bunch of environment management and stuff, nor set him up with an editor/ide that is prone to misconfiguration.
[00:30:42] <supakeen> teut: it's an implementation detail you can't depend on it
[00:30:55] <Wooble> teut: i'm pretty sure if you use the same constant on the same line, you get the same object in any version of python.
[00:31:00] <buzzard> i tried out winpython, myself, to see how it works.  wasn't a huge fan.
[00:31:08] <Wooble> teut: no idea if ipython messes with that though
[00:31:14] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:d044:77cc:5d76:8553) (Ping timeout: 268 seconds)
[00:31:38] <supakeen> but, as far as i know the small number interning hasn't changed in quite a while
[00:32:14] <Wooble> supakeen: 1000 isn't a small number, but the behavior hasn't changed in any of the versions I have installed.
[00:32:25] *** Joins: SuperLag (~akulbe@user/superlag)
[00:32:31] <teut> how do you classify something as an implementation detail?
[00:32:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[00:32:50] <teut> even if it is , once can surely shoot in the foot with it
[00:32:53] <bjs> teut: if other implementations are allowed to do something different, it's an implementation detail
[00:33:04] <Wooble> teut: you either don't mention it in the language reference, or specifically mention it's an implementation detail there. :)
[00:33:05] <supakeen> teut: when it's not specified you can't depend on it; a = 2; b = a + 1; b is c will behave differently in pypy
[00:33:20] <bjs> teut: and it (might) be a mistake to rely on it.
[00:33:43] *** Joins: luischi (~luigi@80.30.201.209)
[00:33:55] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:34:00] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[00:34:16] <supakeen> s/will/might or might not that's the point
[00:34:36] <supakeen> i wish people would stop bringing up the interning in relation to `is` though :<
[00:34:38] <teut> I was learning API design in c++ from a book. The book said like if you are implementing a linked list , you may use a composition of 2 stack instances. thats called an implementation detail
[00:34:58] <teut> doesnt look like I can co relate it here
[00:35:11] <bjs> teut: i know what all of those words mean... but i don't know what the whole sentence meant
[00:35:11] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:35:55] <teut> oh sorry sorry, I meant a queue not a LL
[00:36:13] <teut> I get confused with the names sometimes
[00:36:13] <queue[m]> queues are always better
[00:36:16] <bjs> teut: oh yes,  one way to implement a queue is with 2 stacks
[00:36:26] <Wooble> teut: if you're implementing a python, you can reuse int objects or make a new one each time.
[00:36:43] <bjs> teut: it's an implementation detail because someone might implement a queue differently (e.g. Python's own queue type does not use 2 stacks)
[00:36:45] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[00:36:47] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:07] <teut> a is b checks the hash
[00:37:25] <bjs> teut: no `a is b` does not hash the objects at all.  `a is b` checks if a and b are the same object
[00:37:25] *** Joins: Bakunin (~Lindis@user/lindis)
[00:37:34] <noord> teut: there is nothing inconsistent, `is` checks the equality of object hash
[00:37:35] <teut> so you mean one should use == only?
[00:37:36] <bjs> and not just two objects that happen to be equal
[00:37:44] *** Parts: kmcm0 (~kevin@207.225.28.190) (WeeChat 2.8)
[00:38:09] <teut> if you pass an obj through a hash algo it should spit out the same hash everytime
[00:38:10] <bjs> teut: there's nothing wrong with `is`,  if what it says is really what you want.
[00:38:19] <bjs> teut: there's nothing to do with hashes here.
[00:38:37] <teut> every object in python has __hash__
[00:38:51] <teut> is compares __hash__ doesnt it?
[00:38:53] <bjs> teut: well no, some objects don't have hashes.  But where is this going
[00:39:11] <bjs> teut: no!  `is` asks if the two objects are the same object. It does not do anything with hashes
[00:39:14] <Wooble> teut: it compares the id(), which in cpython is the memory address
[00:39:16] *** Joins: mallkrampus (~mallkramp@81.92.203.48)
[00:39:30] <teut> hey noord says above it does check hashes
[00:39:38] <Wooble> well noord is wrong. :P
[00:39:40] <bjs> teut: then noord is wrong :)
[00:39:44] <noord> the identity I meant :)
[00:39:50] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[00:39:51] <Wooble> if it checked hashes, -1 is -2 would be true.
[00:40:07] <teut> ya there was id too, I forgot the difference between id and hash
[00:40:28] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:8002:daa:c335:918e)
[00:40:40] <teut> work that  I m getting is all make web interface in react, couldnt do python from a long time
[00:40:41] <bjs> Yes it checks object identity,  `a is b` checks if the objects referred to by a and b are the same object. e.g. `x = ...; a = x; b = x; print(a is b)`  this must always print True no matter what object ... is
[00:40:52] <Ninpo> o'reilly python bundle on humble if anyone's interested
[00:40:54] <bjs> and that's not an implementation detail, so if you want to rely on that, then yes you can
[00:41:35] *** Quits: greedom (~greedom@x59cc9a78.dyn.telefonica.de) ()
[00:42:54] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[00:43:58] *** Joins: teut65 (~teut@182.64.62.109)
[00:44:05] <teut65> ok so whats in your global dict has a hash
[00:44:26] <bjs> teut65: "your global dict" ?  But yes, dictionary keys get hashed.
[00:44:29] *** Quits: derelict (~derelict@user/derelict) (Quit: bye)
[00:44:39] <NeilRG> how do I get an unbound class method out of a class?
[00:44:44] <teut65> that can be also used as identity but id is the address
[00:44:49] <NeilRG> class C: @classmethod def f(cls): pass
[00:44:49] <bjs> NeilRG: TheClass.some_method  ?
[00:44:58] <NeilRG> C.f is giving me a bound class method?
[00:44:59] *** Joins: derelict (~derelict@user/derelict)
[00:45:05] <teut65> https://stackoverflow.com/questions/34402522/difference-between-hash-and-id
[00:45:16] <bjs> NeilRG: you want one that you have to pass `cls` to yourself?
[00:45:26] <NeilRG> bjs yeah just trying to check something
[00:45:45] *** Joins: ham5urg_ (~ham5urg@2a00:20:7047:214e:b22:3bc2:b3d3:9193)
[00:45:52] <bjs> NeilRG: classmethod stores it as the __func__ attribute
[00:46:06] <NeilRG> bjs, sorry, I want the classmethod object
[00:46:14] <NeilRG> how do I get that
[00:46:18] <NeilRG> before it's bound
[00:46:40] <teut65> thanks for correcting me
[00:47:20] <bjs> NeilRG: uh I don't think it gets saved,  what would you want to do with it?
[00:47:22] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[00:47:22] <tdsmith> NeilRG: you can grab the classmethod object from C.__dict__
[00:47:32] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:8002:daa:c335:918e) (Ping timeout: 265 seconds)
[00:47:37] <NeilRG> tdsmith, thanks
[00:47:40] <bjs> oh right yeah, it'll be in the __dict__
[00:47:44] <NeilRG> I was trying to use __getattribute__
[00:47:49] <NeilRG> but I couldn't figure it out
[00:47:56] <bjs> NeilRG: no any kind of attribute lookup will trigger returning the method
[00:47:58] *** Quits: teut (~teut@182.64.62.109) (Ping timeout: 256 seconds)
[00:48:43] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 250 seconds)
[00:48:47] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:49:17] <tdsmith> i was staring at this last week trying to write a class decorator that applied a decorator to all methods of a class, including the static and class methods, which ended up (i think) requiring similar incantations
[00:49:21] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:50:33] <Wooble> teut65: you can't use a hash as identity; there will always be collisions possible.
[00:51:08] <teut65> depends on hashing algo
[00:51:16] <bjs> teut65: no all hashing algorithms suffer from collisions
[00:51:34] <NeilRG> tdsmith, interesting, glad your experiment helped me out
[00:51:35] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 268 seconds)
[00:51:45] <teut65> people use uuids in dbs to , they dont have complains, y w'd I
[00:51:50] <NeilRG> Wooble, at Google, we used 64 bit hash as identity
[00:51:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[00:51:58] <NeilRG> Wooble, back in the day
[00:51:59] <bjs> teut65: what does "y w'd I" mean?
[00:52:14] <teut65> why w'd I
[00:52:20] <teut65> w'd isnt would?
[00:52:27] <bjs> no?
[00:52:42] <Wooble> NeilRG: practicality beats 100% guaranteed uniqueness?
[00:52:55] <teut65> maybe indian syntax
[00:53:08] <NeilRG> Wooble, yes it's faster, and fails almost never
[00:53:13] <bjs> teut65: you can use uuids, you're unlikely to get collisions because they're so big
[00:53:29] <bjs> teut65: but you still can, and all hashing algorithms suffer from collisions (you literally cannot avoid it)
[00:53:34] <NeilRG> might have been 128 bit, I don't remember
[00:53:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:54:35] <teut65> yes I know you cannot avoid it but everyone uses it, they choose good hashing functions where the probability is negligible
[00:54:48] *** Joins: rama (~rama@98.51.1.253)
[00:54:52] <teut65> probability of collision
[00:55:30] <bjs> teut65: well relatively rare, it depends on how big the hash is and how many things you're hashing obviously
[00:55:39] <bjs> teut65: but like I said earlier this is all irrelevant because `is` doesn't use hashes at all
[00:56:10] <teut65> yes got it  that it doesn't
[00:56:27] <Wooble> (and hash(-1) and hash(-2) collide for, uh, reasons.)
[00:56:36] *** Joins: odix (~ok@65.141.163.206)
[00:56:44] <bjs> infact there should be infinitely many ints that collide with them too :D
[00:56:57] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[00:57:10] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:57:14] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[00:57:19] <teut65> what algo do they use for it? dont they use SHA?
[00:57:32] *** Joins: sidj (~sidj@user/sidj)
[00:57:33] <bjs> teut65: no,  are you surprised there are collisions?
[00:57:35] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:57:59] <bjs> teut65: SHA is not a good hashing algorithm for Python,  it's a cryptographic hash function that isn't designed for the same purpose
[00:57:59] <Wooble> teut65: for reasonably sized ints, except -1, they just hash to themselves. :)
[00:57:59] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[00:58:17] <teut65> no, not because of collisions, but collisions with numbers as simple as -1 and -2
[00:58:23] <bjs> Python uses hashes to find things in hashmaps, which is a very different usecase. Infact avoiding collisions is very unimportant
[00:58:28] <bjs> because collisions in hashmaps happen *all the time*
[00:58:28] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Client Quit)
[00:59:10] <teut65> oh right right you have that probing algorithm thus
[00:59:15] <bjs> So it's not a big deal that you get hash collisions too (so long as it's fairly well distributed and it doesn't happen too often)
[00:59:26] <teut65> open addressing
[00:59:37] <bjs> Yes CPython's dicts use open addressing
[00:59:37] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[00:59:40] <teut65> big words with fairly simple logic
[00:59:41] <Wooble> teut65: that's an odd case, but IIRC -1 can't be used as the hash because it's used as a magic number in the underlying C function
[01:01:07] *** Parts: rapha (~jrs@user/rapha) (WeeChat 2.3)
[01:01:30] *** Joins: jwisbell35 (~jwisbell3@2600:6c58:4e7f:8fde:be56:5305:beff:bd88)
[01:01:33] <teut65> ya -1 is a representative for null
[01:02:00] *** Quits: teut65 (~teut@182.64.62.109) (Quit: Client closed)
[01:02:14] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 260 seconds)
[01:02:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:02:53] *** Joins: teut (~teut@182.64.62.109)
[01:03:10] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:03:21] <teut> wth is this web.libera.chat  logs me out every few minutes
[01:04:08] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[01:04:32] *** Quits: rama (~rama@98.51.1.253) (Ping timeout: 268 seconds)
[01:04:43] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[01:04:48] *** Joins: Mindscape (~Lindis@user/lindis)
[01:04:51] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:04:55] <kop> teut: You could talk with the libera people in #libera....
[01:05:25] <teut> i have tried it. get told the same stuff what you would tell
[01:05:29] <teut> get gamja
[01:05:32] <AhmedAmerican> https://www.crummy.com/software/BeautifulSoup/bs4/doc/#soupstrainer documentation says  that i can provide a name but it's not works! i tried `BeautifulSoup(content, 'lxml', parse_only=SoupStrainer(name_='state_16'))` for getting `<input type='hidden' class='gform_hidden' name='state_16' value=1`
[01:07:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:07:22] *** Joins: Klinda (~superleag@user/klinda)
[01:07:28] *** Joins: Valeria (~Valeria@user/valeria)
[01:07:45] <AhmedAmerican> Hmm, it doesn't accept CSS Selector, only `parse_only=SoupStrainer('input', {'name': 'state_16'})` works
[01:08:02] <odix> teut: whats wrong with an actual client
[01:08:44] <teut> just that I m more used to new UIs and those clients dont got them
[01:09:04] *** Joins: pycurious (~Adium@user/pycurious)
[01:09:22] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[01:09:33] *** Joins: rama (~rama@2601:642:4c0a:148a:6107:116f:4201:a894)
[01:10:35] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[01:10:45] <odix> bitchx is audacious and cutting edge
[01:10:49] <odix> ;p
[01:11:51] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[01:11:57] <teut> ya everything looks pixelated in your clients
[01:12:25] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:12:56] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:12:57] *** Joins: jme (~jme@host-78-147-68-149.as13285.net)
[01:13:03] <bjs> teut: whose clients?
[01:13:04] <odix>  timers
[01:13:12] <teut> gamja
[01:13:12] *** jme is now known as jmew
[01:13:17] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[01:13:23] <bjs> teut: what is gamja?
[01:13:55] <teut> https://sr.ht/~emersion/gamja/
[01:14:12] <teut> actually this looks good
[01:14:31] <teut> i might ve thought gamja of something else
[01:14:34] <odix> teut: why use a web client is my main question
[01:14:49] <teut> becoz its free?
[01:15:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:15:26] <teut> i dont earn, why should I spend?
[01:15:30] <phantomotap> O_o
[01:15:31] *** Joins: sgn (~sgn@user/sgn)
[01:16:11] <odix> teut: plenty of free non web clients
[01:16:28] <teut> I tried hexchat
[01:16:32] <odix> and dont quote me on this but mirc asks for registration but still works - I think
[01:16:35] *** Quits: rama (~rama@2601:642:4c0a:148a:6107:116f:4201:a894) (Ping timeout: 264 seconds)
[01:16:42] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Client Quit)
[01:16:53] <teut> didnt like setting up the settings
[01:16:53] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[01:17:14] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:17:18] <odix> I used to use x-chat quite a bit, been about 7 years, not sure if its still around
[01:17:35] <odix> oh tahts hexchat : )
[01:18:04] <nedbat> teut: i hope you find a client you like.  we should keep this chat on the topic of python
[01:18:05] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[01:18:36] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Read error: Connection reset by peer)
[01:18:44] <teut> sure, thanks for reminding
[01:19:10] <odix> sery
[01:20:49] *** Joins: irrgit (~irrgit@192.241.175.183)
[01:21:02] <jmew> im coming to the end of the codecademy python3 short 4hr beginner course on yt. any suggestion on what next to carry on learning python3?
[01:21:18] <teut> learn pandas
[01:21:42] <jmew> why?
[01:21:56] <nedbat> jmew: what kinds of software will you be writing?
[01:23:02] <jmew> i have been advised to learn python for scripting purposes
[01:23:31] <nedbat> jmew: look into this online book: Automate the Boring Stuff
[01:23:39] <nedbat> https://automatetheboringstuff.com/
[01:24:16] <teut> ya it has good stuff and there are video tutorials too for that book
[01:24:32] <jmew> il check it out, thanks
[01:25:08] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[01:25:13] <jmew> ive managed to land myself a entry level sec analyst job so i need a language under my belt going forward
[01:25:31] <teut> you need pandas then
[01:25:44] <odix> nedbat how long have you been here in python, 15+ ?
[01:25:47] <teut> pandas , matplotlib, plotlu
[01:25:50] <teut> plotly
[01:26:02] <CrtxReavr> odix, since 1989.
[01:26:07] * CrtxReavr ducks.
[01:26:16] *** Joins: TJ- (~root@about/linux/staff/tj-)
[01:26:48] <odix> is there a social security channel on this network...j/w
[01:26:50] <nedbat> teut: can you explain why a security analyst needs pands?
[01:26:53] <nedbat> *pandas
[01:27:09] <odix> lol ok im off topic have a good day ya'll
[01:27:13] <teut> sec = security?
[01:27:16] <nedbat> odix: not sure about 15 years, but a long time.
[01:27:18] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[01:27:24] <nedbat> teut: you didn't know what "sec" stood for?
[01:27:33] <teut> no sorry
[01:27:35] *** Quits: zacts (~zacts@user/zacts) (Quit: leaving)
[01:27:38] <odix> nedbat: as long as I can remember!!! python OG
[01:28:12] <nedbat> odix: you are right: I am stuck in a rut :)
[01:28:19] *** Joins: zacts (~zacts@user/zacts)
[01:28:39] * CrtxReavr just realized he's been hanging around #python for about 9 years. . . yikes.
[01:29:21] <mefistofeles> lol
[01:30:33] *** Joins: zebrag (~chris@user/zebrag)
[01:31:35] <jmew> Automate the Boring Stuff with Python look great actually
[01:31:43] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[01:32:12] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[01:32:49] *** Joins: pycurious (~Adium@user/pycurious)
[01:34:15] <odix> ctrxreavr: i am jealous of that. I came and left about that time ago and didn't stick with it. now I am back.
[01:34:26] <odix> still on the basics : )
[01:34:37] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[01:34:57] <mefistofeles> I've been here for years
[01:35:00] <mefistofeles> still on the basics
[01:35:00] <mefistofeles> xD
[01:36:12] <cow_2001> when you /whois people you get how long they've been idle on irc
[01:36:46] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Remote host closed the connection)
[01:36:47] <cow_2001> so i have this saying
[01:36:48] <odix> mefisto: I use a bib when I eat
[01:36:51] <cow_2001> idle on irc, busy irl
[01:37:00] *** Joins: resmo (~resmo@2a00:d420:9:8a00:247:8df5:3c63:377)
[01:37:13] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[01:37:14] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 256 seconds)
[01:37:14] *** Quits: Avaris (~Avaris@avar.is) (Ping timeout: 256 seconds)
[01:37:16] * odix gets back to python...
[01:37:18] *** Quits: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr) (Quit: Lost terminal)
[01:37:27] *** Joins: Avaris (~Avaris@avar.is)
[01:38:07] *** Quits: buzzard (~buzzard@2.56.190.29) (Ping timeout: 250 seconds)
[01:38:31] <lidless> Hi folks. I'm needing 2 iOS automation clients to let each other know when each is ready. My tests are in python and pytest-bdd. Wondering if there is a solid solution for this kind of this. More scalable maybe than a simple shared variable in the test
[01:38:35] <lidless> (but if that's the way to go, great)
[01:38:47] <lidless> *this kind of thing
[01:38:50] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[01:39:15] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[01:39:25] <lidless> Like... reddis might be overkill
[01:39:34] <lidless> *redis heh
[01:41:39] <rk4> i presume the two clients are on different devices?
[01:42:17] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:42:36] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[01:42:48] <lidless> Correct. One is a caller and one is a host for e.g.
[01:43:06] <lidless> Host has to begin a show before caller calls in
[01:43:47] <lidless> I can have multiple drivers for the simulators in a single context variable. I'm just trying to think big and not be sloppy
[01:44:35] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:44:42] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:44:47] <lidless> also... I'm wondering how this would work in AWS Device Farm. That's a problem for later though
[01:45:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:48:05] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:49:07] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[01:50:41] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[01:51:34] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-163.hsi6.kabel-badenwuerttemberg.de)
[01:51:50] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[01:51:56] *** Quits: jmew (~jme@host-78-147-68-149.as13285.net) (Quit: yes aye)
[01:51:59] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[01:53:52] *** Quits: delvian (~delvian@41.13.232.107) (Ping timeout: 268 seconds)
[01:54:13] *** Joins: delvian (~delvian@41.13.224.57)
[01:54:17] <causaui1> can black read from standard input / write to standard output?
[01:56:48] <noord> lidless: all those tests run on same machine client and server?
[02:00:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[02:00:48] *** Joins: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net)
[02:01:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:03:13] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:03:26] *** Joins: peterhil__ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:04:00] <lidless> Yes same machine, at least locally
[02:04:26] <lidless> Which is enough for now. No idea about AWS Devicw Farm
[02:05:21] <noord> lidless: bind a socket from server side
[02:05:44] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 246 seconds)
[02:06:14] <noord> lets call it 5000/tcp
[02:06:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[02:06:26] <noord> also try to bind 5000/tcp from client side
[02:06:35] <lidless> For what? Both are on the same file system.
[02:07:02] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:07:11] <lidless> I may be overthinking this.
[02:07:14] <noord> you can not bind same socket twice
[02:07:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:07:42] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:07:44] <lidless> True. What if there is a delayed release? (don’t lol)
[02:07:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:08:15] <noord> delayed release?
[02:08:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:08:51] <lidless> Yeah if like if the socket gets in an time wait status
[02:08:58] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:09:04] *** Joins: fikran (~fikran@user/fikran)
[02:09:16] <lidless> Sorry. On mobile. Gypos and grammatical errors galore
[02:10:31] <noord> client side polls for socket ready with timeout?
[02:11:04] <braxas> I want to see skipped test IDs with pytest - but not sure how. If I run with -ra I only see reasons for skipping, if I run with -v I see test IDs but also for passed tests, I just want to see for skipped
[02:11:14] *** Joins: mimmy (~mimmy@72.142.88.18)
[02:11:20] <lidless> But like… why not just set a variable that both can access? I wasn’t sure if something more elaborate might be needed
[02:12:26] <noord> if sharing a variable solves your problem do it
[02:13:34] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 265 seconds)
[02:14:55] <noord> lidless: you can pick any ipc communication method
[02:15:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[02:15:28] <lidless> True. Thanks. I’ll look at other approaches.
[02:15:32] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:15:45] *** Joins: odix (~ok@65.141.163.206)
[02:15:46] <noord> file, socket, pipe, shared memory, message queue etc
[02:15:59] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[02:16:04] <lidless> If I was code reviewing this, I would question something as simple as a variable. I might add threading etc. so that wouldn’t scale
[02:16:34] <lidless> And yeah was thinking redis but also thinking that’s overkill. Maybe not
[02:17:20] *** Quits: magla (~gelignite@55d4d56a.access.ecotel.net) (Quit: Stay safe!)
[02:17:30] *** Joins: Fiji (~Fiji@user/fiji)
[02:18:52] *** Quits: TJ- (~root@about/linux/staff/tj-) (Quit: WeeChat 3.3)
[02:19:14] <noord> lidless: I do not know what are you doing exactly but, server can track of active devices or connections so it can be deployed to seperately
[02:19:56] <lidless> I have an app that has radio hosts and listeners. I need to be able to behave as each and in parallel
[02:20:24] <lidless> And since there might be 0 on either side… I need to be able to create them
[02:20:49] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[02:21:21] *** Joins: TJ- (~root@about/linux/staff/tj-)
[02:22:20] <lidless> And one can be a host or listener through the same app
[02:22:39] <lidless>  It not at the same time
[02:22:44] <lidless> *but
[02:22:45] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[02:23:56] <noord> all written in same language ?
[02:24:35] <lidless> yep! Swift. But Python + Appium for UI testing
[02:25:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:25:43] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:27:12] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:28:27] <noord> lidless: I would prefer sharing variable
[02:28:35] <lidless> Hmm
[02:28:51] <lidless> Thank you for that :) It should work for now
[02:29:23] *** Joins: anonymous__ (~anonymous@gateway/tor-sasl/anonymous)
[02:31:18] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[02:32:40] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:33:01] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:33:17] *** Quits: rany (~rany@user/rany) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:33:30] *** Joins: rany (~rany@user/rany)
[02:33:49] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:34:33] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 276 seconds)
[02:34:55] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[02:34:56] *** Joins: kevr (~kevr@user/kevr)
[02:35:12] *** Quits: anonymous__ (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[02:35:45] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[02:37:00] *** Joins: alzgh (~alzgh@user/alzgh)
[02:37:53] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 264 seconds)
[02:38:01] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[02:38:55] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[02:39:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:40:08] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[02:40:57] *** Quits: mallkrampus (~mallkramp@81.92.203.48) (Ping timeout: 250 seconds)
[02:42:22] *** Quits: Techcable_ (~Techcable@168.235.93.147) (Quit: ZNC - https://znc.in)
[02:42:45] *** Joins: Echoz_ (~chris@user/echoz)
[02:43:32] *** Quits: ham5urg_ (~ham5urg@2a00:20:7047:214e:b22:3bc2:b3d3:9193) (Ping timeout: 265 seconds)
[02:43:33] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[02:44:19] *** Joins: jbox (~jbox@user/jbox)
[02:44:26] *** Joins: Techcable (~Techcable@168.235.93.147)
[02:44:44] *** Joins: anonymous__ (~anonymous@gateway/tor-sasl/anonymous)
[02:44:49] *** Joins: atlas (~jbox@user/jbox)
[02:45:08] *** anonymous__ is now known as anonymous
[02:45:14] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 256 seconds)
[02:45:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[02:45:28] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d) (Ping timeout: 265 seconds)
[02:45:30] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:45:36] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:45:56] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:46:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[02:47:22] *** Quits: jwisbell35 (~jwisbell3@2600:6c58:4e7f:8fde:be56:5305:beff:bd88) (Remote host closed the connection)
[02:47:27] *** Quits: reset (~reset@user/reset) (Ping timeout: 250 seconds)
[02:48:38] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:49:14] *** Quits: sagax (~sagax_nb@user/sagax) (Excess Flood)
[02:49:22] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 268 seconds)
[02:49:28] *** Joins: ham5urg_ (~ham5urg@ip-109-42-114-107.web.vodafone.de)
[02:50:17] <NeilRG> are there any alternatives to contexttimer?
[02:50:55] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[02:51:13] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:51:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[02:52:36] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (Ping timeout: 256 seconds)
[02:52:54] *** Joins: Kvothe (~weechat@user/elodin)
[02:53:57] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-163.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[02:54:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:54:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:54:54] *** Joins: mallkrampus (~mallkramp@89.238.150.158)
[02:54:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:55:26] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[02:59:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:00:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:00:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:00:53] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[03:02:14] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d)
[03:02:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:03:01] *** Quits: sharperguy (~sharpergu@88.130.217.97) (Ping timeout: 245 seconds)
[03:03:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:04:02] *** Joins: pycurious (~Adium@user/pycurious)
[03:04:24] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[03:04:31] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:04:39] <causa_sui> does the secrets module use /dev/random ? what happens if it blocks because the entropy is exhausted?
[03:04:48] *** Joins: sharperguy (~sharpergu@244-2-142-46.pool.kielnet.net)
[03:06:29] *** Joins: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0)
[03:06:40] <Yhg1s> causa_sui: see the last question in https://www.python.org/dev/peps/pep-0506/#frequently-asked-questions
[03:06:43] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Client Quit)
[03:06:53] <Yhg1s> (in particular the footnote)
[03:08:39] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[03:10:33] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:10:53] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[03:11:43] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:11:56] *** Joins: ubh (~ubh@user/ubh)
[03:12:18] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08)
[03:14:08] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:16:02] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:16:53] *** Joins: cdown_ (~cdown@89.32.122.5)
[03:16:57] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[03:17:19] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:19:35] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[03:19:44] *** cdown_ is now known as cdown
[03:20:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:29] <NeilRG> How is pandas managing to expose type annotations without a py.typed file?
[03:21:30] <NeilRG> https://github.com/pandas-dev/pandas/tree/master/pandas
[03:21:41] <NeilRG> I see _typing.py, but I wasn't aware that that gets exposed?
[03:22:05] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:22:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:23:18] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[03:23:39] *** Quits: upsala (~zcb@185.213.155.252) (Ping timeout: 265 seconds)
[03:25:24] <nedbat> NeilRG: isn't it because the code itself has type annotations?  Maybe I don't understand how these things work
[03:25:51] <sco1> There are stubs in ./pandas/_libs
[03:26:19] <NeilRG> nedbat, I thought py.typed was necessary for them to be exposed.  I also don't understand how these things work.  I know Thomas knows
[03:26:27] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:26:30] *** Joins: mpan (~mysql@user/mpan)
[03:26:33] *** Parts: mpan (~mysql@user/mpan) ()
[03:26:53] <NeilRG> sco1, nice, but how does mypy find these?
[03:27:16] <causa_sui> Yhg1s: sounds like the answer is "it uses /dev/urandom if available on your system" and "it doesn't block, because you wouldn't want it to anyway"
[03:27:18] <causa_sui> thanks
[03:28:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:28:13] *** Joins: sasha (~sasha@wikimedia/-sasha-)
[03:28:24] *** Joins: causaui1 (~causasui@192.241.228.169)
[03:28:47] *** Joins: final923 (~final923@x590feeb9.dyn.telefonica.de)
[03:30:19] <causa_sui> Yhg1s: this PEP also quotes someone who says I should use cryptography.io instead. Do you (or does anyone else here) have an opinion on that?
[03:30:50] <Yhg1s> causa_sui: you should probably use cryptography.io instead, yes.
[03:31:05] <Yhg1s> (it kinda depends on what you're doing, but cryptography.io is usually what you should use.)
[03:31:40] <final923> Hey, I try to parse this string: ":itsriaadPUSHH itsriaadPUSHH itsriaadPUSHH itsriaadPUSHH itsriaadPUSHH\r\n" Out of a larger string which you can see below the code on the link. It should be a very simple thing but somehow Python doesn't split the message correctly. I tried it with split having 5 or 6 as a second argument https://bpa.st/D4WQ
[03:31:48] <causa_sui> tldr I'm generating strings that will be used as passwords
[03:31:55] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 268 seconds)
[03:32:24] <InPhase> Yhg1s: To the extent of what I've been able to find, no viable exploit has ever taken advantage of the difference between /dev/urandom and /dev/random without first compromising the kernel, in which case all is lost anyway.
[03:32:31] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[03:32:47] <causa_sui> that seems to be what the PEP they linked is saying
[03:32:50] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:d1ec:e4ac:744a:8e08) (Ping timeout: 265 seconds)
[03:32:57] <Yhg1s> InPhase: I'm not sure why you're telling me this?
[03:33:12] <Yhg1s> not the PEP, but the footnote in the PEP, yes.
[03:33:18] <causa_sui> final923: I don't understand your code snippet. what is in "response"? can you give a snippet of code that is actually executable and demonstrates your problem?
[03:33:41] <final923> response is the larger string which you see at the end
[03:33:47] <InPhase> Yhg1s: That should have gone to causa_sui.
[03:33:56] <tdsmith> openssl (which is what cryptography.io wraps) does not have a better csprng than /dev/urandom; the secrets module is fine for getting some random bytes
[03:33:57] <Yhg1s> causa_sui: I wouldn't worry too much about cryptographic security, but more about algorithmic security. I don't remember if cryptography has a password generator, and generating memorisable, long passwords is usually a better defense than cryptographically strong short passwords.
[03:34:20] <final923> causa_sui: the whole code is too long, it's actually very simple, I just try to have the substring I mentioned in my first message out of the large string which you see at the end
[03:35:04] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Read error: Connection reset by peer)
[03:36:28] <causa_sui> final923: I understand you don't want to post your entire app but it would be easier to understand your problem if you gave a stripped down version that shows the problem.
[03:36:53] <final923> https://bpa.st/OILQ
[03:36:54] <sco1> NeilRG: I'm not familiar with how stubs discovery works in general, but pandas' Python code also has annotations
[03:37:03] <final923> :causa_sui this should clarify
[03:37:07] <causa_sui> Yhg1s: the docs for secrets has a recipe that I was planning to follow before I saw the mention of cryptography.io https://docs.python.org/3/library/secrets.html#recipes-and-best-practices
[03:37:22] *** Quits: sharperguy (~sharpergu@244-2-142-46.pool.kielnet.net) (Ping timeout: 256 seconds)
[03:37:32] <NeilRG> sco1, yeah, I guess my question is how is mypy discovering them.  Usually you need to have py.typed.  Thanks for taking a a look.
[03:37:33] <Yhg1s> causa_sui: the comment about cryptography.io is really about strong cryptography, not just secure random numbers.
[03:37:43] <Yhg1s> causa_sui: I don't think cryptography.io has a password generator.
[03:37:54] <causa_sui> to be clear, I don't want a password generator. I'm making one
[03:38:06] <Yhg1s> causa_sui: but really, https://xkcd.com/936/
[03:38:17] <causa_sui> yes, I know
[03:38:18] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[03:38:21] <Yhg1s> causa_sui: rule #1 in cryptography, don't make it :)
[03:38:29] <cdown> why would you make something that has been made so many times before, there's an infinite amount of interesting work out there
[03:38:31] <causa_sui> exactly. that's why I want to use secrets or such
[03:38:38] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 265 seconds)
[03:38:48] <final923> causa_sui I hope it is enough?
[03:39:04] <causa_sui> cdown: I am unaware of any password generator that will conform to dumb password rules like "your password must have a special character but ONLY %*@! are allowed"
[03:39:19] *** Quits: llh (~llh@user/llh) (Ping timeout: 268 seconds)
[03:39:26] <Yhg1s> final923: you're still showing broken code, and not the actual output of the code.
[03:39:31] <cdown> causa_sui: so why not add such a feature to an existing one
[03:39:41] <Yhg1s> final923: the print on line 4, were it correct, would print a list. What is the output you're getting?
[03:39:41] <causa_sui> cdown: I can't have this argument right now, sorry
[03:40:16] <causa_sui> final923: SyntaxError: unexpected EOF while parsing
[03:40:23] <causa_sui> please make sure your code actually executes
[03:40:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:41:03] *** Joins: bloody (~bloody@user/bloody)
[03:41:15] *** Quits: peterhil__ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:41:28] <final923> causa_sui yeah I forgot an ")" to put in the link I sent you sorry. the output is the very same string, just in a list
[03:41:40] <Yhg1s> final923: so, not the same list.
[03:41:43] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:41:50] <Yhg1s> eh, not the same string. It's now a list. Because that's what str.split() does.
[03:41:53] *** Joins: llh (~llh@user/llh)
[03:42:01] <Yhg1s> final923: are you asking 'how do I get a specific string out of the list'?
[03:42:01] <causa_sui> it looks like the string you want is in the second to last list item from the split
[03:42:36] *** Joins: nomic (~nomic@185.192.69.224)
[03:42:38] <final923> here thats what I get and what I want to get: https://bpa.st/TOAA
[03:42:43] *** Joins: ano (~ano@user/ano)
[03:42:49] *** Quits: Zephyrus (~Zephyrus@user/zephyrus) (Quit: Lost terminal)
[03:43:02] <Yhg1s> final923: is the string you want always going to be the 6th item?
[03:43:18] <causa_sui> in the second example your expected output isn't in the original
[03:43:30] <final923> Yhg1s I'm a bit confused, I worked with split function a few times already and it always worked fine, first time I get a list out of it instead of the substring
[03:43:32] *** Joins: rama (~rama@2601:642:4c0a:4b8e:dd25:1292:a2de:efe6)
[03:43:42] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-67.home.otenet.gr)
[03:43:45] <Yhg1s> final923: it always returns a new list. That's what it does.
[03:43:47] *** Quits: zepolen (~zepolen@ppp-94-66-223-67.home.otenet.gr) (Ping timeout: 250 seconds)
[03:43:51] <Yhg1s> it never just returns a substring.
[03:43:51] <causa_sui> it's returning a list on my end, as expected
[03:44:05] <final923> I'm really sorry, this is correct https://bpa.st/U6AQ
[03:44:12] <Yhg1s> final923: did you perhaps always index the list right away, and are you forgetting to index the list now?
[03:44:21] <causa_sui> I feel like there is an x-y problem going on here
[03:44:47] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:45:08] <causa_sui> ok, in this one the string you want is once again the second to last list item
[03:45:14] <Yhg1s> final923: for what it's worth, just splitting on "'" is going to be very fragile if the string contains arbitrary text from a user. What if the user's, like, confused about 's?
[03:45:25] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:45:46] <causa_sui> this string looks like it's machine generated which makes me suspicious there is a better way to do this and they are reinventing a wheel
[03:45:55] <causa_sui> (look who's talking, I know)
[03:46:01] <final923> sorry I'm confused haha I always thought it works like that, I was very sure I always used the function like that
[03:46:20] <Yhg1s> final923: well, we can't really say anything other than "it really doesn't work like that, maybe you were using somethin gelse"
[03:46:23] <final923> Yhg1s it will be always in that exact position, after the amount of "'"
[03:46:51] <causa_sui> is this part of an api response from twitch?
[03:46:55] <final923> correct
[03:47:12] *** Joins: cdown_ (~cdown@163.114.131.1)
[03:47:27] <final923> I just wanted to get a function which will get me the substring between the 5th and 6th '
[03:47:46] *** Joins: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c)
[03:47:49] <causa_sui> and you want what, the stream tittle?
[03:47:51] <causa_sui> title*
[03:48:00] <final923> it's just a message sent
[03:48:10] <Yhg1s> final923: I still think this will break if the text contains 's, but I already mentioned what you have to do. Index the list.
[03:48:29] <final923> Yhg1s ah thats what you meant, you're right
[03:48:34] *** Quits: rama (~rama@2601:642:4c0a:4b8e:dd25:1292:a2de:efe6) (Ping timeout: 268 seconds)
[03:48:35] <sco1> NeilRG: Perhaps this? https://github.com/pandas-dev/pandas/blob/master/pandas/__init__.py#L304-L306
[03:48:36] *** Joins: odix (~ok@65.141.163.206)
[03:48:55] <causa_sui> final923: so you're doing some kind of chat bot or what? you want to parse chat messages?
[03:48:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:49:02] <NeilRG> sco1, nice find!
[03:49:08] <NeilRG> I wonder why there's not a "py.typed" library yet
[03:49:18] <final923> causa_sui yes
[03:49:43] <sco1> Blame leads here: https://github.com/pandas-dev/pandas/pull/43695, which has discussion & links to other issues
[03:49:51] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 250 seconds)
[03:49:56] *** cdown_ is now known as cdown
[03:50:01] <final923> I already did it a few times but that was a while ago, could have sworn I used that function split for the purpose I told you but I guess I was wrong lol. Also thanks Yhg1s for pointing out that this doesnt work anyways
[03:50:05] <causa_sui> final923: I'd strongly encourage you to use a different approach than the web api for this then. there are extensive docs on how to connect to twitch chats via an IRC server
[03:50:13] <causa_sui> https://dev.twitch.tv/docs/irc
[03:50:32] <causa_sui> they also have a discord for chat bot authors
[03:51:00] <final923> causa_sui these are messages from the IRC server?
[03:51:04] <causa_sui> what you are doing is extremely fragile for the reasons Yhg1s mentioned. you cannot split on ' safely, especially with arbitrary text written by humans
[03:51:05] <causa_sui> yes
[03:51:13] <causa_sui> twitch uses an irc server as its back-end for stream chat
[03:51:25] <final923> yes but what you see is a message from the IRC server
[03:51:28] <causa_sui> read the page I linked
[03:51:31] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[03:51:31] <causa_sui> I understand that
[03:52:27] <final923> I need to do it like this, there are no API calls in Python that Twitch provides to extract the message as an anonymous user
[03:52:35] *** Quits: emf_ (~emf@2620:10d:c090:400::5:91bf) (Ping timeout: 264 seconds)
[03:53:41] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:53:58] <final923> And my new way now would be to just take the substring after the streamers hashtag and its name to the end of the irc message, that should work somehow
[03:54:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[03:54:07] *** Joins: sharperguy (~sharpergu@89.244.121.135)
[03:54:11] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Read error: Connection reset by peer)
[03:54:23] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[03:54:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517) (Ping timeout: 265 seconds)
[03:54:36] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[03:55:06] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Killed (NickServ (Forcing logout anonymous -> anonymous)))
[03:56:38] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[03:59:03] *** Joins: rvalue (~rvalue@user/rvalue)
[03:59:27] <kevr> Hey guys. I'm setting up parallel pytests in my project, but, we'd like to be able to run each _suite_ in parallel, not each test function. is there a way to accomplish this with pytest-xdist?
[03:59:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[04:00:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:01:34] <kevr> and by each suite, i mean each test file in the test directory.
[04:01:39] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:01:46] *** Quits: final923 (~final923@x590feeb9.dyn.telefonica.de) (Quit: Client closed)
[04:02:06] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655)
[04:02:18] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[04:03:25] *** Joins: causaui1 (~causasui@192.241.228.169)
[04:03:49] *** Joins: ano (~ano@user/ano)
[04:05:01] *** Quits: LuKaRo (~LuKaRo@p4fc32d6b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:06:28] <nedbat> kevr: i think you want  --dist loadfile    https://pypi.org/project/pytest-xdist/
[04:06:53] <nedbat> kevr: if you don't mind me asking, why do you want to run each file together?
[04:07:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[04:08:01] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[04:08:03] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[04:08:13] <skintimidation> nedbat: man
[04:08:21] <nedbat> skintimidation: ?
[04:08:49] *** Joins: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[04:09:02] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6)
[04:09:45] <kevr> nedbat: the thing here is i'm preparing test databases, and the preparation takes some time because it uses alembic to migrate and such. i'll definitely try at some point just to benchmark it, but i'm pre-thinking here that it'll be a better idea to just dedicate a database to each test file, and that test file can wipe out the tables as it continues on sequentially
[04:10:14] <kevr> i'm basing the db's off of a hash of PYTEST_CURRENT_TEST, slightly modified to only include the suite name
[04:10:20] <kevr> the names, at least
[04:10:30] <kevr> and we don't use sqlite; we can only use mariadb here.
[04:10:33] <skintimidation> nedbat: you're a cool dude
[04:10:36] <skintimidation> you've been around forever
[04:10:44] <skintimidation> what keeps you around?
[04:11:05] <kevr> that was it only has to migrate once, and we can still get some parallel testing done
[04:11:16] <kevr> once per suite, at least
[04:11:22] <kevr> way*
[04:11:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e4cb:5a57:fd6e:e655) (Ping timeout: 264 seconds)
[04:12:41] <nedbat> skintimidation: this is the second time this came up in the last few hours.... I like talking to people
[04:13:06] <kevr> we love you too, mr. ned
[04:13:10] <nedbat> kevr: try out loadfile, and see if it works
[04:14:02] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[04:14:25] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[04:14:30] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:14:42] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:15:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:15:08] <skintimidation> nedbat: someone else asked about it? lmfao, that's nuts.
[04:15:22] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:15:29] <skintimidation> nedbat: is there a modern resource for learning the proper way to do things using python's builtins, etc etc? Or do you just accrue it over tons of practice?
[04:15:43] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:16:08] <nedbat> skintimidation: the good thing is, these days, there are tons of different resources. the bad thing is, it's hard to know what they are all like, and which are good.
[04:16:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[04:16:19] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[04:16:36] <cow_2001> why is everyone talking about pandas? i didn't realise it is that popular.
[04:16:39] <kevr> i think this is the way to go, just gotta fix something affecting it, but it's definitely getting further than without and seems to be initializing fine
[04:16:44] <kevr> loadscope, even
[04:16:51] <nedbat> cow_2001: it's huge in data science
[04:16:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:16:52] <kevr> since i have the fixtures in question set to module scope
[04:16:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c)
[04:16:55] * kevr shrugs
[04:18:20] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[04:18:26] *** Joins: fikran (~fikran@user/fikran)
[04:18:27] <cow_2001> oh cool i have all sorts of pandas stuff in apt
[04:18:27] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:20d6:2b3a:ce41:e0b6) (Ping timeout: 250 seconds)
[04:19:52] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[04:20:03] <kevr> seems something is still cross-polluting
[04:20:09] * kevr will figure it out
[04:20:36] <nedbat> kevr: in my experience, it's very hard to dictate to xdist, but loadfile seems clear-cut.
[04:20:45] <kevr> +1
[04:21:18] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[04:22:35] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:23:08] *** Joins: sagax (~sagax_nb@user/sagax)
[04:23:10] <kevr> otherwise, though, it's running at blazing speeds. pretty awesome. :D
[04:25:49] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[04:26:36] <skintimidation> nedbat: that's the problem i've noticed. i'm so sick of looking for something good and getting 800,000 bootcamp-level responses
[04:26:45] <skintimidation> the channel needs a good one to recommend
[04:27:02] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:27:03] <skintimidation> i need to finish "composing programs"
[04:27:14] <skintimidation> but that one isn't really about python's full extent
[04:27:22] <kevr> hm...
[04:27:55] <skintimidation> we should really start calling "data science" what it really sis
[04:28:05] <skintimidation> "analytics of your private personal information that you wouldn't even tell your mother"
[04:28:31] <grym> skintimidation: no no, "a catch-all phrase that justifies high salaries for indeterminate reasons", get it right
[04:28:35] <sco1> Oh good, we've reached this evening's hot takes o'clock
[04:29:08] <grym> (you defined 'adtech' there, it's an easy confusion :) )
[04:29:11] <skintimidation> say hot takes again and i'll shoot you with a real gun.
[04:29:20] <sco1> yawn
[04:29:27] <skintimidation> grow the fuck up and get off of twitter. this is IRC.
[04:30:12] <skintimidation> we're talking about an issue that's crippling society and looking to end your humanity, not "my opinion about memes."
[04:30:20] <skintimidation> jesus fucking christ, that website is such a brain tumor.
[04:30:41] <nedbat> skintimidation: slow down
[04:31:11] <skintimidation> if i slow down, that's stooping to his level. you've heard what happens when you stoop to a moron's level, right?
[04:31:16] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:31:16] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:31:31] <nedbat> skintimidation: i'm asking you to stop
[04:31:38] <skintimidation> nedbat: no, you're telling me to stop. ;P
[04:31:54] <skintimidation> there's an emotional difference that people need to make clear before we can actually negotiate the difference.
[04:32:05] *** Joins: superboot (~agentgasm@user/superboot)
[04:32:34] <cow_2001> oh boy.
[04:32:46] <cow_2001> i have a question!
[04:32:50] <nedbat> cow_2001: ask it
[04:32:56] <cow_2001> hopefully it will ease the tension
[04:33:18] <cow_2001> how do people stop being drive-by committers and start contributing something substantial to free software?
[04:33:51] <nedbat> cow_2001: it's hard to join a project in a way that lets you make significant contributions
[04:33:52] <cow_2001> i have done a few drive-by commits and they were fun, but how do you really get into free software?
[04:34:12] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[04:34:29] <nedbat> cow_2001: what project interests you most?
[04:35:05] <sco1> Domain experience is usually helpful
[04:36:24] <cow_2001> hmm.
[04:36:59] <cow_2001> it was always things i used at the moment
[04:37:29] <cow_2001> so interest comes and goes
[04:37:47] <sco1> That is domain experience, it's usually easier to know how software needs to improve/grow if you're actually using it
[04:38:00] <sco1> Or you make something that you need and then other people end up needing it too :)
[04:38:03] *** Joins: causaui1 (~causasui@192.241.228.169)
[04:39:04] <tdsmith> a seagl keynote this year described a way to engage with larger projects with governance structures https://youtu.be/T_N0I1vYUrc?t=484
[04:39:36] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:39:40] <cow_2001> tdsmith: is that time point important?
[04:40:07] <tdsmith> not particularly except that there's about 8 minutes of leadin before elana starts speaking
[04:40:16] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[04:40:18] <cow_2001> oh yes
[04:40:47] *** Joins: djapo (~archangel@user/djapo)
[04:41:23] *** Joins: pycurious (~Adium@user/pycurious)
[04:42:17] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[04:42:21] <cow_2001> wait. 6h? no, that's about 20min.
[04:42:25] <tdsmith> i got involved with homebrew by fixing the things that were broken for me and then using what i learned to stick around and help fix some of the things that were broken for other people and eventually they invited me to join as a maintainer
[04:42:37] <cow_2001> wheow… ~_~
[04:42:55] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[04:42:56] <cow_2001> tdsmith: col
[04:43:00] <cow_2001> cool
[04:43:01] *** Quits: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:43:15] <cow_2001> so sticking around after the drive-by
[04:43:18] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[04:45:08] <tdsmith> just driving circuits around the block, yeah :p
[04:45:11] *** Joins: Valeria (~Valeria@user/valeria)
[04:47:19] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:48:38] <cow_2001> i just had an idea for a youtube-dl feature that may or may not already be implemented. also, may or may not be possible. ... and may or may not be a recurring feature request that is also recurringly closed and tagged as wontfix…
[04:49:34] <grym> cow_2001: there are a few ways to find out
[04:49:41] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[04:50:13] <cow_2001> i don't see it in the --help
[04:50:22] <cow_2001> let's see the bug tracker
[04:52:24] <kevr> found the issue
[04:52:25] <cow_2001> starting from some time point only download some bit
[04:52:26] <kevr> \o/
[04:53:04] <phantomotap> kevr: what was the issue?
[04:53:11] * kevr smacks phantomotap
[04:53:16] <kevr> that's secret
[04:53:33] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 265 seconds)
[04:53:56] <phantomotap> oh.
[04:54:41] <kevr> ;)
[04:54:51] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:07] *** Quits: ham5urg_ (~ham5urg@ip-109-42-114-107.web.vodafone.de) (Remote host closed the connection)
[04:55:26] <skintimidation> So now I'm back, all out of gum, etc etc, and I wanna know how I can split a string in "half (CONDITIONALLY PLUS ONE)", in which I take "spam" and get "sp", but do "spams" and get "spa". I also need the inverse.
[04:55:27] *** Joins: ham5urg_ (~ham5urg@ip-109-42-114-107.web.vodafone.de)
[04:55:38] <skintimidation> (Where I'd get am and ms, respectively)
[04:55:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:56:09] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:56:17] *** Quits: ham5urg_ (~ham5urg@ip-109-42-114-107.web.vodafone.de) (Client Quit)
[04:56:23] <skintimidation> Is it just string[:math.ceil(len(string) / 2)]? Please tell me there's a better way.
[04:56:27] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 265 seconds)
[04:58:09] <grym> (len // 2) + 1 ?
[04:59:10] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[05:00:38] <InPhase> skintimidation: s[:len(s)-len(s)//2]
[05:01:04] <cow_2001> oh no youtube-dl is dead
[05:01:14] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:01:19] <phantomotap> cow_2001: there are a few active forks though
[05:01:20] <InPhase> skintimidation: It rounds down.  You want to round down, so you invert the values.  :)
[05:01:21] <skintimidation> oh, order of operations, i presume? grym: the problem is that i want it to give me half sometimes and half+plus+one when digits are odd
[05:01:24] <grym> cow_2001: what, again
[05:01:25] <cow_2001> the new one is using discord *ptwo*
[05:01:28] <InPhase> s/to round down/to round up/
[05:01:41] <skintimidation> InPhase: mmm, i think i get it
[05:01:57] <skintimidation> actually, yeah, i like that
[05:02:48] <cow_2001> grym: i don't know how to answer that question. what what? <_<
[05:08:43] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:09:13] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:09:51] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[05:12:20] <kororaa> can i retain ending 0's with np.around
[05:12:36] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:12:46] <kororaa> like round 2.396 to 2.40 instead of 2.4
[05:13:04] *** Joins: c4017w (~c4017@209.52.68.8)
[05:13:29] *** Joins: causaui1 (~causasui@192.241.228.169)
[05:14:02] <grym> 2.4 and 2.40 are the same number
[05:14:31] <phantomotap> kororaa: how do you know that it is 2.4 instead of 2.40?
[05:14:31] <grym> how you format the output is up to you though
[05:14:46] <kororaa> i want it to display with the 0
[05:14:56] <kororaa> otherwise my units jump around
[05:15:07] <kororaa> displaying on an animation like "t = 2.40 s"
[05:15:15] <Repiphany> That's an issue for formatting when you print it out as a string
[05:15:37] <grym> print(f'{thevalue:0.2f}')
[05:15:40] <kororaa> right now it goes back and forth between 1 and 2 decimal places, so the "s" jumps around on the screen
[05:15:56] <grym> or however your display outout speaks the weirdo string formatting miniDSL
[05:16:05] <grym> % might be involved
[05:16:28] <Repiphany> `print(f't = {2.396:0.2f} s')`
[05:16:43] <Repiphany> You don't even need numpy to do the rounding
[05:16:48] *** Joins: nicode (~nic@2607:f2c0:94c5:4700:ede5:e3c1:c8dc:2e97)
[05:17:10] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102)
[05:17:43] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:fc41:a35f:792:b57c) (Ping timeout: 265 seconds)
[05:18:02] <kororaa> right now it's uh
[05:18:12] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[05:18:25] <kororaa> for a in range(50): t = ax.annotate("t = "+np.str(time_array_display[a])+" s",(-.08,-.095))
[05:19:12] <kororaa> i think if i take the np.str() out it breaks
[05:20:05] <Repiphany> It's definitely preferrable to use string format or f-strings instead of concatenating strings like that
[05:20:54] <kororaa> how do i incorporate time_array_display[a] into that?
[05:21:06] <kororaa> instead of 2.396
[05:21:25] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[05:21:33] <kororaa> time_array_display was already rounded, like time_array_display = np.around(time_array,2)
[05:22:21] <Repiphany> f'{time_array_display[a]:0.2f}'
[05:22:35] *** Quits: flokuehn (~flokuehn@87.123.247.94) (Ping timeout: 250 seconds)
[05:23:12] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:24:24] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[05:24:41] *** Joins: flokuehn (~flokuehn@87.123.247.91)
[05:25:10] <kororaa> ooh, it works
[05:25:13] <kororaa> ty :D
[05:25:31] *** Joins: Valeria (~Valeria@user/valeria)
[05:25:38] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[05:25:55] *** Joins: jtanner (sid194399@helmsley.irccloud.com)
[05:28:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:29:00] *** Quits: w4ld0 (w4ld0@gateway/vpn/protonvpn/w4ld0) (Ping timeout: 256 seconds)
[05:30:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:25] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[05:30:42] *** Joins: nomic (~nomic@185.192.69.224)
[05:32:24] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 256 seconds)
[05:34:14] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[05:35:10] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:37:43] *** Quits: nicode (~nic@2607:f2c0:94c5:4700:ede5:e3c1:c8dc:2e97) (Remote host closed the connection)
[05:39:47] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:40:54] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 256 seconds)
[05:41:28] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[05:43:33] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:43:54] *** Joins: pankid (~quassel@pankid.club)
[05:44:15] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[05:45:23] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:45:43] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:45:59] *** Quits: sharperguy (~sharpergu@89.244.121.135) (Ping timeout: 250 seconds)
[05:46:08] *** Joins: nicode (~nic@2607:f2c0:94c5:4700:4dc5:64e1:feed:1c4c)
[05:46:15] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:46:43] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 265 seconds)
[05:46:45] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[05:46:56] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[05:47:27] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[05:47:42] *** Joins: sharperguy (~sharpergu@89.244.124.62)
[05:48:04] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:48:16] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:48:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:48:44] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[05:48:55] *** Joins: causaui1 (~causasui@192.241.228.169)
[05:49:08] *** Joins: pycurious (~Adium@user/pycurious)
[05:49:31] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[05:49:33] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[05:50:26] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[05:50:32] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[05:52:02] *** Quits: delvian (~delvian@41.13.224.57) (Ping timeout: 265 seconds)
[05:52:34] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[05:52:55] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[05:52:58] *** Joins: delvian (~delvian@41.13.224.230)
[05:53:02] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[05:53:08] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:b980:e9e:375e:2046) (Quit: Leaving)
[05:53:21] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[05:54:26] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[05:56:03] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[05:56:03] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[05:56:03] *** finn_elija is now known as FinnElija
[05:57:12] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:58:46] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:59:38] <Lando-SpacePimp> omg
[05:59:40] <Lando-SpacePimp> kororaa
[06:00:27] <kororaa> 😳
[06:00:57] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[06:02:14] *** Joins: aphysically (~aphysical@user/aphysically)
[06:02:32] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[06:02:40] *** Joins: frost (~frost@user/frost)
[06:02:43] <Lando-SpacePimp> wat is this, a virus?
[06:03:13] <Swayze> :-o
[06:03:34] <Lando-SpacePimp> oh, it didn't work
[06:03:45] *** Joins: odix (~ok@65.141.163.206)
[06:04:05] <Lando-SpacePimp> shucks
[06:04:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:05:52] *** Joins: Valeria (~Valeria@user/valeria)
[06:06:16] *** Joins: bindu (~bindu@user/bindu)
[06:06:21] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[06:06:40] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:06:47] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 250 seconds)
[06:06:59] *** Joins: nac9 (~nac@user/nac)
[06:07:01] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:ec1e:7b74:9028:2102) (Ping timeout: 265 seconds)
[06:07:10] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[06:07:11] *** Quits: ryu` (~ryusaku@c72AD5BC1.dhcp.as2116.net) (Ping timeout: 245 seconds)
[06:07:18] *** flyback is now known as kriskross
[06:07:52] *** kriskross is now known as flyback
[06:08:43] *** Quits: nac (~nac@user/nac) (Ping timeout: 250 seconds)
[06:08:44] *** nac9 is now known as nac
[06:09:31] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:10:04] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:10:12] <Lando-SpacePimp> I can't remember the last time DCC worked for me
[06:10:24] *** Joins: alzgh (~alzgh@user/alzgh)
[06:11:47] *** Quits: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Ping timeout: 264 seconds)
[06:12:36] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[06:12:58] *** Joins: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[06:13:14] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:13:51] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7c30-d6d4-cc96-be8a.res6.spectrum.com) (Read error: Connection reset by peer)
[06:14:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 264 seconds)
[06:14:47] *** brabrax_ is now known as brabrax
[06:15:21] *** Joins: pycurious (~Adium@user/pycurious)
[06:15:22] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[06:15:49] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:15:52] *** Parts: ska (~ska@user/ska) (Leaving)
[06:15:59] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:16:13] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[06:16:40] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:17:56] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[06:18:22] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:18:23] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[06:19:02] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Ping timeout: 268 seconds)
[06:19:59] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:20:01] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[06:20:04] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[06:20:04] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 265 seconds)
[06:20:27] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:20:37] *** Joins: pycurious (~Adium@user/pycurious)
[06:23:19] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:23:57] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[06:24:13] *** Joins: mimmy_ (~mimmy@185.244.215.86)
[06:24:24] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:24:25] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 265 seconds)
[06:25:06] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[06:25:07] *** Joins: onichomp (~onichomp@2806:264:4404:8008:a580:1509:4e1e:c071)
[06:25:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:26:27] <kororaa> cant upload, top secret
[06:27:46] *** Joins: fikran (~fikran@user/fikran)
[06:29:57] *** Joins: causaui1 (~causasui@192.241.228.169)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:38] *** Joins: millido (~millido@84.210.150.128)
[06:30:45] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:10] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (Ping timeout: 260 seconds)
[06:33:46] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[06:34:05] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[06:35:21] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[06:37:07] *** Quits: fling (~fling@user/fling) (Ping timeout: 250 seconds)
[06:38:08] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[06:38:29] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[06:39:24] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[06:39:30] *** Joins: fling (~fling@user/fling)
[06:41:01] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[06:43:15] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:44:11] *** Joins: TJ- (~root@about/linux/staff/tj-)
[06:46:40] *** Joins: Valeria (~Valeria@user/valeria)
[06:46:47] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:46:58] *** Joins: orbatos_ (~orbatos@user/orbatos)
[06:47:03] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d) (Quit: guenhael)
[06:47:20] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[06:48:35] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:1937:5740:9a75:d704) (Ping timeout: 265 seconds)
[06:48:40] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[06:49:41] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 250 seconds)
[06:50:56] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:52:43] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[06:54:14] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[06:54:47] *** Joins: buzzard (~buzzard@2.56.190.28)
[06:55:43] *** Quits: buzzard (~buzzard@2.56.190.28) (Client Quit)
[06:56:21] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:57:38] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[06:58:36] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[06:58:56] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[06:59:40] *** Quits: mallkrampus (~mallkramp@89.238.150.158) (Ping timeout: 256 seconds)
[07:01:54] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[07:02:02] *** Joins: pycurious (~Adium@user/pycurious)
[07:03:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Ping timeout: 256 seconds)
[07:04:46] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[07:06:22] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[07:06:28] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[07:06:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:36] *** finn_elija is now known as FinnElija
[07:09:36] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[07:10:27] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[07:10:56] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[07:12:30] *** Quits: mimmy_ (~mimmy@185.244.215.86) (Quit: WeeChat 3.3)
[07:14:03] *** Joins: mallkrampus (~mallkramp@89.238.150.157)
[07:15:31] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:16:45] *** Joins: pycurious (~Adium@user/pycurious)
[07:20:42] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 260 seconds)
[07:21:23] *** Quits: nicode (~nic@2607:f2c0:94c5:4700:4dc5:64e1:feed:1c4c) (Ping timeout: 264 seconds)
[07:23:29] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[07:25:09] *** Joins: nicode (~nic@2607:f2c0:9598:9800:8797:a1c4:b386:57ae)
[07:26:31] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[07:26:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:26:56] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:27:03] *** Joins: Valeria (~Valeria@user/valeria)
[07:27:16] *** Joins: alzgh (~alzgh@user/alzgh)
[07:32:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[07:35:26] *** Joins: jinsun (~quassel@user/jinsun)
[07:35:49] *** Quits: fstd (~fstd@xdsl-78-34-189-40.nc.de) (Ping timeout: 250 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:08] *** Joins: Fiji_ (~Fiji@user/fiji)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:02] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:37:08] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:38:12] *** Joins: kdc (~kdc@196.211.197.159)
[07:39:31] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[07:41:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[07:41:32] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:42:07] *** Quits: zaquest (~notzaques@5.130.79.72) (Quit: Leaving)
[07:42:44] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[07:43:52] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[07:46:06] *** Joins: forgotmynick (uid24625@hampstead.irccloud.com)
[07:50:31] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[07:52:15] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[07:52:16] *** Joins: pycurious (~Adium@user/pycurious)
[07:52:18] *** Joins: zaquest (~notzaques@5.130.79.72)
[07:52:52] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 265 seconds)
[07:53:37] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[07:54:54] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[07:55:49] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:56:16] *** Joins: mcpac82 (~textual@212.25.0.228)
[07:56:54] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:00:12] *** Joins: thiras (~thiras@user/thiras)
[08:00:47] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[08:01:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:02:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[08:04:53] *** Joins: parv (~quass@user/parv)
[08:06:49] *** Joins: baakeydow (~baake@163.172.145.178)
[08:07:20] *** Joins: pycurious (~Adium@user/pycurious)
[08:07:43] *** Joins: Valeria (~Valeria@user/valeria)
[08:10:04] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:10:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:11:26] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[08:14:14] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:15:07] *** Joins: bindu (~bindu@user/bindu)
[08:15:57] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[08:18:01] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:18:30] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-013d-b643-4dd3-d41b.res6.spectrum.com)
[08:21:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:22:21] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-67.home.otenet.gr) (Ping timeout: 265 seconds)
[08:25:53] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[08:26:04] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-191.home.otenet.gr)
[08:29:34] *** Joins: psystemupdate (~psystemup@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:30:15] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:30:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:31:10] <psystemupdate> anyone know of a python module that represents a shell context with linux utils and posix system call handler? need to get google colab to have a linux terminal i can interact with.
[08:31:36] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:45] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[08:33:45] *** Joins: rany (~rany@user/rany)
[08:34:33] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[08:34:42] <InPhase> psystemupdate: os.system('/bin/bash')
[08:34:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[08:35:25] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-191.home.otenet.gr) (Ping timeout: 250 seconds)
[08:37:08] *** Joins: fikran (~fikran@user/fikran)
[08:37:21] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-81.home.otenet.gr)
[08:39:32] *** Joins: callq (~callq@2409:4062:2207:d478:ccd9:6245:1eca:ef96)
[08:42:43] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 268 seconds)
[08:43:56] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-81.home.otenet.gr) (Ping timeout: 256 seconds)
[08:44:30] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[08:45:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:45:45] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:45:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[08:48:42] *** Joins: Valeria (~Valeria@user/valeria)
[08:49:43] *** Quits: atlas (~jbox@user/jbox) (Ping timeout: 250 seconds)
[08:56:37] *** Joins: HaMsTeRs (~Thunderbi@14-0-157-112.static.pccw-hkt.com)
[08:57:35] *** Joins: Geo (vanosg@user/geo)
[08:58:35] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:01:35] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 264 seconds)
[09:02:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[09:02:13] *** Parts: Geo (vanosg@user/geo) (WeeChat 3.1)
[09:02:22] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[09:02:47] *** Quits: subopt (~subopt@2603-8081-2302-459a-3001-25c7-b27b-cad7.res6.spectrum.com) (Ping timeout: 264 seconds)
[09:02:53] <cluelessperson> is there a thing for integer multiplication?
[09:02:59] <cluelessperson> like //,  but */
[09:04:17] <skintimidation> Yo, python has pattern matching now?
[09:04:30] <skintimidation> cluelessperson: do you mean floor(x*y)?
[09:04:38] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[09:04:48] *** Joins: TJ- (~root@about/linux/staff/tj-)
[09:05:04] <cluelessperson> basically.
[09:05:09] <cluelessperson> skintimidation, pattern matching how?
[09:07:25] *** Joins: Stenforth (vanosg@user/geo)
[09:07:34] <skintimidation> cluelessperson: so just do math.floor(x*y)
[09:07:48] <skintimidation> or do you want math.floor(x)*math.floor(y)
[09:07:49] <skintimidation> you get to pick
[09:08:52] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:09:19] <Stenforth> Hi, I grabbed some github code that is supposed to pull the SSL cert offered from a host/port. https://bpa.st/72MA any suggestions on how to avoid that error, other than the obvious? I've tried it on multiple machines and it throws that error no matter what, so I'm not sure why it vomits there
[09:09:39] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[09:10:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:10:20] *** Joins: analoq (~yashi@user/dies)
[09:11:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:12:01] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[09:15:31] *** Joins: pycurious (~Adium@user/pycurious)
[09:15:36] *** Quits: HaMsTeRs (~Thunderbi@14-0-157-112.static.pccw-hkt.com) (Quit: HaMsTeRs)
[09:15:40] *** Quits: fling (~fling@user/fling) (Ping timeout: 256 seconds)
[09:16:27] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[09:17:37] <skintimidation> Stenforth: is it really the wrong version number?
[09:17:57] *** Joins: zepolen_ (~zepolen@109-178-210-48.pat.ren.cosmote.net)
[09:18:50] <Stenforth> I don't think so; I don't know how it could be
[09:19:18] *** Quits: zepolen_ (~zepolen@109-178-210-48.pat.ren.cosmote.net) (Read error: Connection reset by peer)
[09:19:54] <Stenforth> As I read it, its just requesting a cert
[09:19:58] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[09:22:35] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:24:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[09:24:23] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[09:25:05] <kevr> Hmm... any where to tell pytest what order to run specific test files?
[09:25:07] <kevr> way*
[09:28:10] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:17] *** Joins: Valeria (~Valeria@user/valeria)
[09:29:27] *** Quits: Mindscape (~Lindis@user/lindis) (Remote host closed the connection)
[09:30:23] *** Quits: callq (~callq@2409:4062:2207:d478:ccd9:6245:1eca:ef96) (Ping timeout: 264 seconds)
[09:31:49] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[09:33:57] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:36:45] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:37:15] *** Joins: pycurious (~Adium@user/pycurious)
[09:37:45] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Ping timeout: 265 seconds)
[09:38:18] *** Quits: mcpac82 (~textual@212.25.0.228) (Client Quit)
[09:38:29] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[09:40:00] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:40:44] *** Joins: causaui1 (~causasui@192.241.228.169)
[09:42:54] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[09:44:07] *** Joins: bindu (~bindu@user/bindu)
[09:44:24] *** Joins: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob)
[09:45:11] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[09:47:21] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 250 seconds)
[09:48:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:49:26] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[09:50:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:50:14] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[09:51:08] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[09:51:53] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Read error: Connection reset by peer)
[09:54:14] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Read error: Connection reset by peer)
[09:55:21] *** Joins: fling (~fling@user/fling)
[09:55:26] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:55:41] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[09:55:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:56:24] *** Joins: et_ (~et@user/et)
[09:57:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:57:11] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[09:57:11] *** et_ is now known as et
[09:58:32] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 265 seconds)
[09:59:50] *** Quits: forgotmynick (uid24625@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:00:57] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 265 seconds)
[10:02:32] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:03:35] *** Joins: upsala (~zcb@185.213.155.252)
[10:06:40] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[10:07:14] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[10:09:39] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-013d-b643-4dd3-d41b.res6.spectrum.com) (Quit: jarthur)
[10:09:53] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[10:10:20] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[10:10:25] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Remote host closed the connection)
[10:10:42] *** Joins: Valeria (~Valeria@user/valeria)
[10:11:08] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:11:16] *** Joins: kevr` (~kevr@user/kevr)
[10:11:26] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[10:11:56] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[10:12:09] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[10:14:03] *** Joins: manti7 (~manti7@176.10.104.94)
[10:14:21] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:15:56] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[10:16:20] <themill> Is there a module that lets me pick the right *.whl file for a particular interpreter?
[10:17:08] *** kevr` is now known as kevr
[10:19:17] *** Joins: atlas (~jbox@user/jbox)
[10:20:10] <rindolf> themill: did you try perusing pip's sources?
[10:20:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:20:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:21:08] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:22:27] *** Quits: mallkrampus (~mallkramp@89.238.150.157) (Ping timeout: 250 seconds)
[10:23:52] *** atlas is now known as jbox
[10:24:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[10:25:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:25:36] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[10:25:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[10:26:11] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:26:16] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:26:47] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[10:27:24] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[10:27:43] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[10:29:32] *** Quits: Allegretto (~allegrett@91-83-2-207.pool.digikabel.hu) (Ping timeout: 240 seconds)
[10:31:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[10:31:09] <themill> rindolf: yeah, I found regexs for looking at the filename, but not interpreter to pyver, abi or platform mappings. (Also, nothing in pip is a public module)
[10:32:00] <rindolf> themill: ok
[10:32:47] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:32:47] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[10:33:53] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[10:34:13] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Remote host closed the connection)
[10:34:47] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[10:35:34] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[10:36:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[10:36:21] *** Joins: mallkrampus (~mallkramp@185.169.255.4)
[10:36:31] *** Joins: mcpac82 (~textual@212.25.0.228)
[10:38:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[10:39:44] *** Quits: Batzy (~Batzy@user/batzy) (Quit: lata)
[10:39:47] *** Quits: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com) (Ping timeout: 265 seconds)
[10:40:02] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:40:15] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[10:41:22] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[10:41:22] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[10:42:49] *** Joins: teut (~teut@182.64.62.109)
[10:43:46] *** Joins: carl- (~carl-@185.103.188.131)
[10:44:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:46:16] *** Joins: carl-- (~carl-@185.103.188.130)
[10:46:23] <themill> packaging/utils.py::parse_wheel_filename might be the thing with packaging/tags.py might be able to be used for this. I'll have to have a play.
[10:46:29] *** Joins: fikran (~fikran@user/fikran)
[10:48:53] *** Quits: carl- (~carl-@185.103.188.131) (Ping timeout: 250 seconds)
[10:50:53] *** Joins: pycurious (~Adium@user/pycurious)
[10:52:40] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Ping timeout: 265 seconds)
[10:52:43] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:53:34] *** Joins: seednode (~seednode@user/seednode)
[10:55:04] *** Quits: orbatos_ (~orbatos@user/orbatos) (Remote host closed the connection)
[10:57:24] *** Joins: ammarsalmi (~ammarsalm@154.121.62.9)
[10:57:34] *** Joins: orbatos (~orbatos@user/orbatos)
[10:59:02] <ammarsalmi> I'm curious about somthing. Why in string formatting we need to omit the quoting marks to refer to a value of a key but outside formatting we need the quoting marks?
[10:59:36] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[10:59:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Client Quit)
[11:00:03] <rindolf> ammarsalmi: what?
[11:00:03] <ammarsalmi> '{0.[name]}'.format(dict(name='ammar')) but outside d['name']
[11:00:04] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:00:26] <ammarsalmi> Or does it depend on how we declared the dict?
[11:01:05] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[11:01:19] <supakeen> No, it's something that's allowed in the format-string syntax but not in normal Python syntax as without quotes it'd be an identifier.
[11:01:31] <supakeen> While inside a format string identifiers have { and } around them.
[11:01:33] <rindolf> ammarsalmi: i presume it was done to avoid clutter
[11:02:05] <ammarsalmi> Ok thanks. It is helpful indeed. You don't need the extra quoting inside formatting.
[11:02:05] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[11:02:09] *** Joins: encukou_ (quassel@nat-pool-brq-t.redhat.com)
[11:02:20] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:04:54] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:05:00] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[11:05:03] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Quit: Client closed)
[11:05:11] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 264 seconds)
[11:05:47] *** Joins: bindu (~bindu@user/bindu)
[11:06:25] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:06:28] *** Quits: ammarsalmi (~ammarsalm@154.121.62.9) (Read error: Connection reset by peer)
[11:06:55] *** Joins: ammarsalmi (~ammarsalm@154.121.62.9)
[11:08:01] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[11:09:34] *** Joins: szymon (~ugh@185.244.214.60)
[11:10:15] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:10:24] *** Joins: luischi (~luigi@80.30.201.209)
[11:11:02] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 265 seconds)
[11:11:49] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:12:30] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:14:03] *** Joins: kosh (~kosh@user/kosh)
[11:14:40] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 256 seconds)
[11:14:44] *** Quits: szymon (~ugh@185.244.214.60) (Remote host closed the connection)
[11:17:42] *** Joins: Allegretto (~allegrett@84-236-85-132.pool.digikabel.hu)
[11:18:26] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-239.hsi5.kabel-badenwuerttemberg.de)
[11:18:47] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[11:20:48] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[11:22:34] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Quit: Leaving)
[11:23:58] *** Joins: thiras (~thiras@user/thiras)
[11:24:11] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[11:24:57] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[11:25:17] *** Joins: tobybl (~tobybl@213.31.134.235)
[11:29:00] *** Joins: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr)
[11:29:37] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[11:29:49] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 250 seconds)
[11:30:20] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:30:26] <hexnewbie> I'm surprised I cannot seem to find any detailed suggestion of using ‘continue with <value>’ inside a for-loop as a generator.send(value) syntax sugar. I was curious to read what's bad about it, but I cannot even seem to find a suggestion of it in python.org. There are some passing mentions on python-dev but no discussion.
[11:30:32] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[11:30:35] *** Joins: palasso (~palasso@user/palasso)
[11:30:45] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:31:00] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:31:35] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[11:32:32] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[11:33:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[11:33:53] *** Joins: chele (~chele@user/chele)
[11:34:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:34:30] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:34:32] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:34:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:35:20] *** Quits: trainsley69 (~trainsley@c151-177-173-170.bredband.tele2.se) (Remote host closed the connection)
[11:35:23] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[11:36:00] *** Joins: weedmic (~weedmic@188.120.139.53)
[11:37:33] *** Joins: frost (~frost@user/frost)
[11:40:50] *** Quits: ammarsalmi (~ammarsalm@154.121.62.9) (Read error: Connection reset by peer)
[11:41:34] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[11:43:05] *** Joins: causaui1 (~causasui@192.241.228.169)
[11:44:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:45:32] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:46:00] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:46:33] *** dcaro_away is now known as dcaro
[11:46:42] *** Parts: SnowCode (~debian@vps-709aceac.vps.ovh.net) (WeeChat 3.0)
[11:48:15] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[11:48:37] *** Joins: mrwick (~mrwick@user/mrwick)
[11:48:51] *** Parts: jle (~jle@user/jle) ()
[11:49:07] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 250 seconds)
[11:50:31] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[11:50:51] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[11:51:42] *** Joins: slav0nic (slav0nic@python.su)
[11:51:43] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[11:54:20] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[11:54:33] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[11:54:57] *** Joins: guenhael1 (~Thunderbi@193.52.208.30)
[11:55:57] *** Joins: rendar (~rendar@user/rendar)
[11:55:58] *** Joins: ammarsalmi (~ammarsalm@154.121.61.92)
[11:56:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[11:56:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:56:29] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[11:56:29] *** guenhael1 is now known as guenhael
[11:56:29] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:56:42] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[11:57:36] <ammarsalmi> the = sign in formatting, it's not used for alignment? It's used to reflect the value of the name x=1, f'{x=}' -> "x=1"
[11:58:28] *** Joins: ravan_ (~ravan@user/ravan)
[11:59:52] <jinsun> yes and that is a new featurue of 3.8
[12:00:16] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:00:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:08] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 257 seconds)
[12:01:33] <rendar> with coroutines you have `x = yield` mechanism to wait for data, what is the equivalent with asyncio? `x = await` ?
[12:02:59] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:03:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:03:41] *** Quits: alkino (~quassel@user/alkino) (Quit: No Ping reply in 180 seconds.)
[12:04:17] *** Quits: weedmic (~weedmic@188.120.139.53) (Quit: Konversation terminated!)
[12:05:21] *** Joins: luischi (~luigi@80.30.201.209)
[12:05:39] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Ping timeout: 265 seconds)
[12:07:15] *** Joins: canarts (~stranac@195.29.239.126)
[12:07:24] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[12:07:42] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:07:48] <aphysically> oof I have a regression in the psf/black formatting plugin with the update today
[12:09:42] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:10:16] <jinsun> rendar: the thing you are calling coroutine should be called generator, coroutine is the thing returned by async def https://docs.python.org/3/glossary.html#term-coroutine
[12:10:21] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 250 seconds)
[12:10:35] <rendar> jinsun, i know what a coroutine is
[12:10:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:10:39] <jinsun> rendar: and you can define async generators also https://www.python.org/dev/peps/pep-0525
[12:10:55] <rendar> jinsun, i was talking about about receiving stuff, through the .send() function in coroutines
[12:10:59] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:11:11] <rendar> consumer: x=yield   producer: coro.send(23)
[12:11:26] <rendar> what can i get this ^ with asyncio?
[12:11:27] *** Joins: Warped (~Warped@user/warped)
[12:11:40] <jinsun> the thing with yield .send and .throw is generator
[12:11:42] <aphysically> looks like this maybe https://github.com/psf/black/commit/1d7260050d846d2ba2dd5bb22944b032245c7e51
[12:11:58] <aphysically> now it errors unless you explicitly put a config in your vimrc it seems
[12:12:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:12:13] <rendar> jinsun, yes i know! but since coroutines derived from generators, there is a similar mechanism in asyncio? how can i mimic that?
[12:14:09] <aphysically> ehhhh I'll report the regression tomorrow if nobody else has
[12:14:10] <aphysically> :)
[12:14:12] <aphysically> night
[12:14:47] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 264 seconds)
[12:15:46] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:17:28] *** Joins: ammarsalmi_ (~ammarsalm@154.121.61.92)
[12:18:23] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 264 seconds)
[12:18:36] <ammarsalmi_> Sorry, I'm sharing from mobile with no Volte. I asked the question because I read this from the book:
[12:18:50] <ammarsalmi_> align may be <, >, =, or ^, for left
[12:18:50] <ammarsalmi_> alignment, right alignment, padding after a sign character, or centered alignment,
[12:18:50] <ammarsalmi_> respectively
[12:19:10] *** Quits: ammarsalmi (~ammarsalm@154.121.61.92) (Ping timeout: 268 seconds)
[12:19:16] *** ammarsalmi_ is now known as ammarsalmi
[12:19:20] <ammarsalmi> so = is supposed to have some padding effect after sign
[12:20:12] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:20:13] <ammarsalmi> according to the book
[12:20:17] <jinsun> rendar: I don't think normal async defs have a way to do something like .send, that is used by the event loop internally I think, but you can use yield inside async defs to make them async generator and use await g.asend as described in PEP 525 https://www.python.org/dev/peps/pep-0525/#asynchronous-generator-object
[12:20:36] <rendar> cool, thanks
[12:21:34] *** Joins: Naan (~Naan@user/naan)
[12:21:41] <supakeen> ammarsalmi: The `=` in format strings in the case of {:=5d} for example says that you want a sign number and the total span should be 5
[12:21:47] <supakeen> s/number/character
[12:21:56] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[12:21:58] *** Joins: pycurious (~Adium@user/pycurious)
[12:22:19] *** Joins: luischi (~luigi@80.30.201.209)
[12:22:43] <ammarsalmi> thank you
[12:22:58] *** Joins: Valeria (~Valeria@user/valeria)
[12:23:30] *** Joins: legola (~legola@46.235.101.181)
[12:24:17] *** luischi is now known as luigibu
[12:24:27] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[12:24:39] <supakeen> For example `f"{5:=+10d}"` means: take the number 5, format it as a number (that's the `d` at the end) of width `10`, show the plus sign (that's the `+`), and align the sign on the left (`=`)
[12:24:45] *** Joins: luischi (~luigi@80.30.201.209)
[12:25:00] <supakeen> It'd be '+       10' with the `=` and '       +10' without it
[12:25:26] <supakeen> But this is a super specific application and I really doubt anyone knows this by heart.
[12:25:29] *** Joins: Naan` (~Naan@user/naan)
[12:25:35] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 264 seconds)
[12:26:21] <supakeen> Or that you need this as ready knowledge :)
[12:26:46] *** Quits: Naan` (~Naan@user/naan) (Client Quit)
[12:28:36] *** Joins: chele_ (~chele@user/chele)
[12:28:44] <ammarsalmi> yeah. I can see why would someone need such formatting. But like you said. It will most likely sink deep in my memory after a while. But I'll know it's there :D
[12:28:55] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:29:41] *** luischi is now known as luigibu
[12:29:41] *** Joins: magla (~gelignite@55d42279.access.ecotel.net)
[12:31:16] *** Quits: chele (~chele@user/chele) (Ping timeout: 265 seconds)
[12:33:27] *** Joins: jonthesnow (~xizhendu@240e:404:6e00:1713:eb81:8302:44fb:b27)
[12:34:25] *** Joins: Ha-Jo (~hajo@2a01:c23:9408:e800:821f:2ff:feef:dabf)
[12:35:23] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[12:36:37] <Ha-Jo> Hi, i found this line in a file: 'for line in xferbytelist[:numdisplayed]:' Can you explain, what the ':' (-> :numdisplayed) does?
[12:37:24] <Ha-Jo> or maybe, throw a keyword that i could search for?
[12:37:41] <supakeen> 'slice syntax', it means up to numDisplayed
[12:37:56] <supakeen> The syntax is `L[start:stop:step]`
[12:38:13] <Ha-Jo> Ah thank you, that makes sense.
[12:39:10] *** Joins: ryu` (~ryusaku@c09825BC1.dhcp.as2116.net)
[12:40:04] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[12:40:09] *** Joins: usr123 (~usr123@49.156.120.118)
[12:40:22] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[12:41:13] <usr123> I get this error when trying to build wheel for cffi, "  build/temp.macosx-10.9-x86_64-3.9/_openssl.c:570:10: fatal error: 'openssl/opensslv.h' file not found" here is the traceback https://dpaste.org/NksN
[12:42:15] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[12:42:32] *** Joins: holgersson (~quassel@user/holgersson)
[12:44:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 260 seconds)
[12:45:05] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[12:45:23] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:47:15] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:48:30] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[12:48:55] *** Quits: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[12:50:24] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:50] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[12:52:31] *** Joins: alexprengere (~alexpreng@163.116.174.34)
[12:53:41] *** Joins: alexprengere20 (~alexpreng@163.116.174.34)
[12:53:47] *** Quits: alexprengere20 (~alexpreng@163.116.174.34) (Client Quit)
[12:53:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:53:55] *** Quits: alexprengere (~alexpreng@163.116.174.34) (Client Quit)
[12:55:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[12:55:49] *** Joins: fikran (~fikran@user/fikran)
[12:58:48] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:01:04] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:01:38] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:02:05] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:02:21] *** Quits: MrSunshine (~MrSunshin@217-64-148-113.pool.ovpn.com) (Ping timeout: 250 seconds)
[13:04:02] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:04:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:05:54] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[13:07:32] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[13:07:35] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[13:07:58] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:08:05] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:08:18] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:08:34] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[13:09:19] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:11:30] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[13:11:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:12:50] *** Quits: delvian (~delvian@41.13.224.230) (Ping timeout: 265 seconds)
[13:13:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:13:47] *** Joins: delvian (~delvian@41.13.250.104)
[13:14:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:14:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:14:48] *** Quits: usr123 (~usr123@49.156.120.118) (Quit: Client closed)
[13:15:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[13:19:15] *** Quits: ammarsalmi (~ammarsalm@154.121.61.92) (Ping timeout: 250 seconds)
[13:19:58] *** Joins: chele (~chele@user/chele)
[13:20:31] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:21:44] *** Joins: final90 (~final90@p50900bb5.dip0.t-ipconnect.de)
[13:21:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[13:22:01] *** Quits: chele_ (~chele@user/chele) (Ping timeout: 265 seconds)
[13:22:07] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[13:22:52] <final90> could anyone tell me how the uploader does this in Python? https://www.youtube.com/watch?v=NMre6IAAAiU He uses Python, I know that, but how he visualizes that (with matplotlib I suppose) is beyond me
[13:23:54] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[13:24:24] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[13:24:41] <deniska> the only way to know for sure would be to ask the author, can't see any software related links in the description
[13:24:53] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[13:25:01] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[13:26:13] <final90> Well he won't answer that's why I thought I'd ask here. I saw other videos of him where I'm sure he uses matplotlib but this particular livestream I don't understand how he does it
[13:27:28] <deniska> Well, there's plenty of python visualization libraries, many of them use matplotlib under the hood, but provide a more humane API
[13:28:48] <final90> Which do have a more humane API? The reason I ask I want to do something similiar to this, I already have some experience already and this could be a cool project but I just don't know how he puts all those pieces together
[13:29:19] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:29:37] *** Joins: nomic (~nomic@185.192.69.224)
[13:30:31] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:31:04] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:32:00] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[13:32:17] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[13:33:14] *** Joins: usr123 (~usr123@49.156.120.118)
[13:33:30] *** Quits: kororaa (~kororaa@user/kororaa) (Ping timeout: 256 seconds)
[13:33:30] <usr123> I get this error when trying to build wheel for cffi, "  build/temp.macosx-10.9-x86_64-3.9/_openssl.c:570:10: fatal error: 'openssl/opensslv.h' file not found" here is the traceback https://dpaste.org/NksN (
[13:33:46] <usr123> Apologies if it's already answered I got diconnected.
[13:34:38] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:35:26] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:35:31] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[13:35:39] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:35:43] *** Quits: jonthesnow (~xizhendu@240e:404:6e00:1713:eb81:8302:44fb:b27) (Ping timeout: 250 seconds)
[13:36:06] <final90> usr123 its not yet
[13:39:11] *** Joins: todda7 (~torstein@31.4.136.187)
[13:39:21] *** ravan_ is now known as ravan
[13:39:27] *** Joins: shad (~shad@user/shad)
[13:39:47] *** Joins: nomic2 (~nomic@185.192.69.224)
[13:40:50] *** Joins: ammarsalmi (~ammarsalm@154.121.61.92)
[13:41:30] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:42:25] *** Quits: nomic (~nomic@185.192.69.224) (Ping timeout: 268 seconds)
[13:43:05] *** Quits: mallkrampus (~mallkramp@185.169.255.4) (Ping timeout: 250 seconds)
[13:46:40] *** Joins: causaui1 (~causasui@192.241.228.169)
[13:47:03] <bkhl> Any psycopg2 user here that knows how to properly convert a 'bytes' to the hex format used by PostgreSQL?
[13:47:36] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:47:41] <bkhl> Need to do a migration to a schema which uses classic lobs (not bytea), but expects the data to be in the 'hex' format apparently.
[13:48:00] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:51:03] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:51:05] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 264 seconds)
[13:51:14] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[13:51:19] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[13:51:38] <parv> usr123, Missing dependencies, https://askubuntu.com/questions/797351/fatal-error-openssl-opensslv-h-no-such-file-or-directory-compiling-mitmproxy ?
[13:52:40] <usr123> Right, I'm on macos. So probably can't use that. I remember issues like these were so easy to resolve in ubuntu and stuff, it would just be some sudo apt install command :(
[13:53:23] *** nomic2 is now known as nomic
[13:53:27] *** Quits: final90 (~final90@p50900bb5.dip0.t-ipconnect.de) (Quit: Client closed)
[13:53:50] <nedbat> usr123: how did you install python?
[13:55:20] <parv> usr123, Ok ... do you have OpenSSL installed including its headers & libraries? Are they found when linking them?
[13:56:10] *** Joins: pycurious (~Adium@user/pycurious)
[13:56:36] *** Joins: mallkrampus (~mallkramp@185.169.233.47)
[13:57:13] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:57:25] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:57:29] *** Joins: raxor2k (~raxor2k@78.158.246.74)
[13:57:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:00:19] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Quit: guenhael)
[14:00:33] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:00:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[14:01:42] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[14:01:46] *** Joins: Valeria (~Valeria@user/valeria)
[14:02:11] <usr123> I seem to have openssl installed: % openssl version. LibreSSL 2.8.3
[14:02:37] *** Joins: jim87 (~quassel@93.55.249.30)
[14:02:51] <raxor2k> someone who can explain why the first code works but the second one not? https://bpa.st/WYCQ
[14:03:48] <bjs> raxor2k: judging from the comment, because you passed the wrong number of arguments to execute()
[14:03:53] <bjs> what does the docs say the arguments to execute() are?
[14:04:37] <jim87> Hello! I'm on a Linux machine and I'm trying to use signal.pthread_kill(mythread.ident, signal.SIGKILL), but it's killing the entire process instead... am I doing anything wrong? This is the (simple) script: https://bpa.st/XYAA
[14:05:32] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[14:05:44] <bjs> jim87: if the target thread is executing the Python interpreter, the Python signal handlers will be executed by the main thread of the main interpreter
[14:05:47] <ammarsalmi> raxor2k, python is countingd one of them as two arguments
[14:06:02] <rendar> sending to an asyncio socket is an immediate operation, right? it's not blocking, so i don't need await...
[14:06:34] <bjs> ammarsalmi: what?
[14:06:53] <jim87> bjs: the thread is actually running python code. Is there a way to interrupt whatever is doing without killing the process?
[14:06:57] <bjs> rendar: if you mean a StreamWriter (e.g. the thing you get from `open_connection`) then there's an await drain
[14:06:59] <bjs> jim87: no.
[14:07:17] <ammarsalmi> bjs, He's passing only three but python is telling him only 2 to 3 are accepted
[14:07:18] *** Joins: evilroot (~evilroot@user/evilroot)
[14:07:24] <bjs> ammarsalmi: yeah because it's a method
[14:07:26] <bjs> all methods do that.
[14:07:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[14:07:53] <ammarsalmi> Oh right, self!
[14:08:13] <rendar> bjs, yes, if you want to await that all data has been sent to the socket kernel buffer, right? but the simple write() is not blocking because it only enqueues the data to a queue, data that must be written to the socket
[14:08:45] <bjs> rendar: yes that's what drain is for https://docs.python.org/3/library/asyncio-stream.html#streamwriter
[14:08:46] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[14:09:24] <raxor2k> ammarsalmi: ok, and ?
[14:09:54] <bjs> raxor2k: the error said something about the number of arguments,  so clearly the problem is you passed the wrong arguments (at least the wrong number of them)
[14:09:57] <rendar> bjs, should i take this as a normal design? I mean, I'm writing a Kernel object which has an input (e.g. stdin or a socket) and an output (console or socket) .. so, it must await data from input and not await it to output, i think this is a general design - right?
[14:10:58] <bjs> rendar: you could,  other libraries like trio don't do that
[14:11:02] <bjs> they just use await on both sides
[14:11:31] <raxor2k> bjs: ok, do you think i did the same?
[14:11:38] <bjs> raxor2k: the same... as what?
[14:11:40] <raxor2k> you can see in the code what im trying to do
[14:11:59] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:12:08] <bjs> raxor2k: yes but just because *I* can see what you're trying to do doesn't mean it's valid, you have to go read the libraries documentation/tutorial or whatever to see how to call execute() and what arguments it takes
[14:12:17] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[14:12:20] <bjs> The error was very clear you got the arguments to it wrong...
[14:13:41] <parv> raxor2k, Check whether that "*.execute" takes a list or a tuple instead as a second argument.
[14:15:50] <bjs> rendar: e.g. see trio.SendStream.send_all https://trio.readthedocs.io/en/stable/reference-io.html#trio.abc.SendStream which trio.open_tcp_stream returns
[14:15:50] <ammarsalmi> raxor2k, try putting the_plan_id, task_finished between () inside the call
[14:16:09] <bjs> or ... try reading the documentation for the library rather than guessing what the arguments are
[14:16:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:16:46] <ammarsalmi> I read the docs and it wasn't helpful. It says it only take on sql query that's all and he's using formatting to create the query
[14:17:57] <rendar> bjs, i see
[14:18:05] <bjs> ammarsalmi: how can you have read the docs, raxor2k didn't even say which library they were using...
[14:18:34] <ammarsalmi> I assumed it's sqllite *blush*
[14:18:45] <ammarsalmi> It's where beginners start
[14:18:57] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:19:16] <raxor2k> ammarsalmi / bjs: nvm i solved
[14:19:46] <raxor2k> and bjs: i solved before i read your example about "try putting the_plan_id, task_finished between () inside the call"
[14:20:00] <raxor2k> so i guess you did the same as i did now: guessing ? :9
[14:20:07] <bjs> raxor2k: ... I didn't say that?
[14:20:18] <bjs> Infact I said don't guess and read the docs (multiple times now)
[14:20:22] <rendar> bjs, also, what is the best way in asyncio to produce something? E.g. if i have an object which reads from stdin and then produces command lines to send to the Kernel object, what is the best way for the Kernel object to "listening" the StdinInput object? an async for? or a queue?
[14:20:59] <bjs> rendar: it depends whether you want to listen live or playback or what
[14:21:00] *** Joins: ubert (~Thunderbi@p200300ecdf0ba2663873d9a1bfed1dd8.dip0.t-ipconnect.de)
[14:21:35] <bjs> rendar: and those aren't mutually exclusive, you could have a thing that used queues internally and maybe an interface that let you use an `async for`
[14:21:49] <rendar> yeah, indeed
[14:21:51] <rendar> thanks
[14:22:03] <bjs> like `async for object in kernel.listen_in(): ...` and then `kernel.listen_in()` is an async generator that registers a queue or something
[14:22:15] <rendar> yes
[14:22:17] <bjs> (not saying that's the best API,  just that it's one that can use both queues and generators)
[14:22:25] <raxor2k> bjs: so you did read the docs and found the answer in 1 min before telling me ?
[14:22:44] <bjs> raxor2k: no?  as I pointed out to ammarsalmi I can't read the docs because you didn't tell us what library you're using
[14:23:10] <rendar> bjs, as a generator yields something with 'yield' and a listener can do a for loop with that generator, in the same way asyncio coroutines yields something always with 'yield' keyword, but instead we must use async for
[14:24:19] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2663873d9a1bfed1dd8.dip0.t-ipconnect.de) (Client Quit)
[14:24:22] *** Quits: ammarsalmi (~ammarsalm@154.121.61.92) (Read error: Connection reset by peer)
[14:24:55] *** Joins: ammarsalmi (~ammarsalm@154.121.67.252)
[14:25:29] <nedbat> usr123: how did you install python?
[14:26:40] *** Joins: alkino (~quassel@user/alkino)
[14:26:40] <supakeen> raxor2k: you're not being very friendly to people who are trying to help you by turning around and trying to prove them wrong and/or implying they don't want to tell you the answer
[14:28:38] *** Joins: Kvothe (~weechat@user/elodin)
[14:29:14] <Juhaz> there's no guarantees that every db library follows PEP-0249 but in the absense of evidence to contrary assuming this one does seems like a reasonable starting point and thus we can expect the arguments to be .execute(operation [, parameters])
[14:29:20] <Juhaz> which is, not surprisingly, exactly what they turned out to be
[14:29:25] <usr123> nedbat: I didn't, I'm using the one that comes preinstalled with macos
[14:29:55] <nedbat> usr123: if you can, installing with pyenv might give you a better development environment for things like this.
[14:30:07] <nedbat> usr123: also, i'm curious why cryptography isn't providing wheels you can install
[14:30:17] <usr123> Okay, let me check how to do that.
[14:30:36] *** Joins: frostschutz (~frostschu@2a01:c23:7c5d:7c00:4a4a:7559:1715:5c60)
[14:30:58] *** Joins: pycurious (~Adium@user/pycurious)
[14:32:35] *** Quits: m1dnight (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[14:33:05] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[14:33:59] *** Joins: m1dnight (~christoph@christophe.dev)
[14:36:25] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[14:36:32] *** Quits: raxor2k (~raxor2k@78.158.246.74) ()
[14:36:48] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[14:36:49] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[14:36:53] *** mIk3_09 is now known as mIk3_08
[14:39:32] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Client Quit)
[14:39:35] *** Quits: odix (~ok@65.141.163.206) (Remote host closed the connection)
[14:39:57] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:40:17] *** Joins: naranja (~orange@user/orangeboxcutter)
[14:42:15] *** Joins: Guddu (~Guddu@186.106.137.158)
[14:42:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:42:41] *** Joins: Valeria (~Valeria@user/valeria)
[14:43:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:43:49] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[14:44:09] *** Joins: alzgh (~alzgh@user/alzgh)
[14:45:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:45:31] *** Quits: usr123 (~usr123@49.156.120.118) (Quit: Client closed)
[14:46:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:47:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:47:23] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:48:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[14:49:58] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:50:34] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:50:52] *** Joins: darksun (~darksun@user/darksun)
[14:52:19] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:52:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:54:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[14:54:47] <shad> Hi, i'm trying to setup Flask, Flask-SQLAlchemy and Flask-Alembic all together. Here's what I built so far: https://paste.mozilla.org/CqXJCtJC the method db.createAll() does not create the tables in my database, what's wrong ? I get an SQLAlchemy error "relation "devices" does not exist" on GET /devices
[14:55:42] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 260 seconds)
[14:56:31] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[14:57:37] *** Quits: todda7 (~torstein@31.4.136.187) (Ping timeout: 250 seconds)
[14:59:11] *** Parts: rk4 (~r@user/rk4) ()
[15:00:44] *** Joins: rbp (~abdullah@103.66.177.186)
[15:01:58] *** Joins: nyah (~nyah@94.6.71.219)
[15:03:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:04:27] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[15:04:47] *** dcaro is now known as dcaro_lunch
[15:05:10] *** Joins: fikran (~fikran@user/fikran)
[15:07:46] *** Joins: raxor2k (~raxor2k@78.158.246.74)
[15:07:51] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:07:55] *** Parts: raxor2k (~raxor2k@78.158.246.74) ()
[15:08:09] *** Joins: zlg (~zlg@user/zlg)
[15:09:51] *** Joins: RiFo (~RiFo@user/rifo)
[15:11:16] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:11:23] *** Quits: rbp (~abdullah@103.66.177.186) (Quit: Konversation terminated!)
[15:11:31] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[15:11:40] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[15:12:03] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[15:12:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:12:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:40] *** Joins: noord (~noord@user/noord)
[15:20:01] *** Joins: rbp (~abdullah@103.66.177.186)
[15:20:36] *** Quits: rbp (~abdullah@103.66.177.186) (Client Quit)
[15:20:47] *** Joins: cnfun (~cnfun3@113.68.253.235)
[15:20:59] *** Quits: cnfun (~cnfun3@113.68.253.235) (Read error: Connection reset by peer)
[15:21:02] <ammarsalmi> The module formats with money and commas? I can't find it anywhere. The book is referring to it. Is this an old module?
[15:23:00] *** Joins: Valeria (~Valeria@user/valeria)
[15:23:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[15:23:29] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Quit: Konversation terminated!)
[15:23:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:24] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[15:29:16] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[15:29:21] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Read error: Connection reset by peer)
[15:29:30] *** Joins: zepolen_ (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[15:29:30] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[15:29:50] *** Joins: vaio (~gary@user/ghost)
[15:30:36] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[15:30:55] *** Joins: cebor (~cebor@user/cebor)
[15:32:47] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:33:12] *** Joins: melba (~melba@user/melba)
[15:33:58] *** Quits: zepolen_ (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Remote host closed the connection)
[15:34:12] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[15:34:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:34:29] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[15:34:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:09] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:34] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[15:37:08] <bjs> ammarsalmi: what book?
[15:38:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:39:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:40:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:36] <ammarsalmi> ok he confused me first he said from formats import commas, money then after two pages he said it's user defined -_-
[15:40:42] <ammarsalmi> learning python by o'reilly
[15:41:21] *** Joins: Klinda (~superleag@user/klinda)
[15:42:04] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Remote host closed the connection)
[15:43:13] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[15:43:34] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Client Quit)
[15:44:27] *** Joins: zepolen (~zepolen@109-178-210-48.pat.ren.cosmote.net)
[15:44:30] *** Quits: zepolen (~zepolen@109-178-210-48.pat.ren.cosmote.net) (Client Quit)
[15:44:41] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[15:44:52] *** Joins: rany (~rany@user/rany)
[15:45:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:45:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:46:09] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 250 seconds)
[15:47:01] *** Quits: mallkrampus (~mallkramp@185.169.233.47) (Ping timeout: 265 seconds)
[15:47:32] *** Joins: pycurious (~Adium@user/pycurious)
[15:48:11] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de)
[15:50:06] *** Joins: causaui1 (~causasui@192.241.228.169)
[15:50:17] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de) (Client Quit)
[15:50:30] *** Joins: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6)
[15:50:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:51:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:52:10] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[15:52:20] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[15:52:22] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de)
[15:53:13] *** Joins: joshbaptiste (~josh@192.210.151.34)
[15:53:55] *** Quits: onichomp (~onichomp@2806:264:4404:8008:a580:1509:4e1e:c071) (Read error: Connection reset by peer)
[15:54:23] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[15:54:33] *** Joins: onichomp (~onichomp@2806:264:4404:8008:a580:1509:4e1e:c071)
[15:55:52] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[15:56:04] <JimmyRustles> why is it better to return values instead of just modifying the passed values?
[15:56:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:56:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:57:09] <Yhg1s> JimmyRustles: it's not always the case, but in general, it's because it's easier to reason about the effect of the function call.
[15:57:15] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:57:16] *** Joins: linxue1 (~linxue3@113.68.253.235)
[15:57:29] *** Quits: linxue1 (~linxue3@113.68.253.235) (Read error: Connection reset by peer)
[15:57:40] <supakeen> Bit easier to reason about in what state something is if you can't/don't modify it but create a new one.
[15:58:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:58:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:59:23] *** Joins: Valeria (~Valeria@user/valeria)
[15:59:26] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[16:00:24] *** Joins: mallkrampus (~mallkramp@178.238.11.47)
[16:02:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[16:02:12] *** Joins: linxue (~linxue3@113.68.253.235)
[16:02:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:03:10] *** Joins: zeden (~zeden@user/zeden)
[16:03:31] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:04:18] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 260 seconds)
[16:04:21] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 250 seconds)
[16:04:48] *** Quits: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net) (Ping timeout: 256 seconds)
[16:05:44] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[16:05:53] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[16:06:57] *** Joins: dez (uid92154@user/dez)
[16:08:45] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[16:08:57] *** Quits: onichomp (~onichomp@2806:264:4404:8008:a580:1509:4e1e:c071) (Read error: Connection reset by peer)
[16:10:14] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[16:10:40] <Stenforth> Hi, I grabbed some github code that is supposed to pull the SSL cert offered from a host/port. https://bpa.st/72MA any suggestions on how to avoid that error, other than the obvious? I've tried it on multiple machines and it throws that error no matter what, so I'm not sure why it vomits there
[16:10:51] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:69b3:9c8e:e1c9:574d)
[16:11:13] *** Joins: jpic (~jpic@82.142.20.182)
[16:11:13] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:11:14] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:11:32] <Yhg1s> Stenforth: you're connecting to something that isn't talking TLS.
[16:11:44] <jpic> hi all, is there any import hook I can use *prior* to the sys.modules cache lookup?
[16:12:13] <Stenforth> Yhg1s: cool, thanks
[16:12:28] <Stenforth> Yhg1s: now to figure out why it thinks that when connecting to a TLS service :)
[16:12:41] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:12:42] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 260 seconds)
[16:12:43] <Stenforth> But that's awesome to start troubleshooting from
[16:12:57] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:13:46] <Yhg1s> Stenforth: what are you connecting to? Is it perhaps not starting TLS until later?
[16:15:12] *** Joins: ianliu (~ianliu@177.62.181.26)
[16:15:29] <Stenforth> in this case rdp
[16:17:19] <nedbat> jpic: i don't know the answer, but i'm curious what you'll do with it.
[16:18:11] <Yhg1s> Stenforth: since that's a complex protocol that uses both TCP and UDP, it's highly likely it doesn't just use straight TLS.
[16:18:23] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de) (Quit: jonaskabrink)
[16:18:26] <Yhg1s> jpic: there is, but I wouldn't recommend it: replace __import__.
[16:19:36] <Yhg1s> Stenforth: especially since it seems to be negotiated as part of the handshake.
[16:20:12] <Stenforth> I'm no expert for sure; But that's what i was trying to get- I thought it would negotiate that right up front
[16:20:14] <jpic> interresting, thank you Yhg1s
[16:20:27] <Stenforth> I'm just trying to get the certificate
[16:20:34] <Yhg1s> Stenforth: sure, but you're not giving it a chance. You're talking TLS straight away.
[16:20:36] <ianliu> I have a process that runs in a loop, with a try-except around it to catch KeyboardInterrupt, like so: http://ix.io/3F9o/py . The keyboard interrupt is for me to stop the process early if needed, while still printing the results collected so far. The problem is I'm getting BrokenPipe on the print statement. What am I doing wrong here?
[16:20:49] <jpic> nedbat: just want to implement a poc for an idea that I don't need but that might be some fun: https://news.ycombinator.com/item?id=29239237
[16:20:52] <Yhg1s> Stenforth: you need to do the RDP negotiation to start the TLS one.
[16:21:16] <Yhg1s> ianliu: are you piping the output somewhere?
[16:21:37] <ianliu> Yhg1s: yes, I'm running the script with foo.py | tee logs
[16:21:50] <Yhg1s> ianliu: your ^C is killing tee, which means the pipe closes and there's nothing to print to.
[16:21:59] <ianliu> oh, right
[16:22:06] *** Joins: pycurious (~Adium@user/pycurious)
[16:22:09] <ianliu> thanks
[16:22:24] *** Joins: Echoz_ (~chris@user/echoz)
[16:22:27] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[16:23:09] *** Parts: melba (~melba@user/melba) (Two pure functions walk into a bar. Nothing happens.)
[16:26:53] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[16:27:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[16:27:30] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Quit: Leaving)
[16:27:41] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[16:28:36] *** Quits: linxue (~linxue3@113.68.253.235) (Quit: Leaving)
[16:29:30] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 260 seconds)
[16:29:34] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-134.home.otenet.gr)
[16:30:02] *** Quits: zepolen (~zepolen@2a02:1388:208a:f066:8503:49af:5ec7:84e6) (Ping timeout: 265 seconds)
[16:30:55] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[16:31:03] *** Joins: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de)
[16:32:24] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:32:36] *** Quits: ericlee (~ericlee@2601:647:4681:3420::2) (Ping timeout: 245 seconds)
[16:32:57] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[16:33:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:34:25] <Pi-sistance> to get the dcostring for a function in a module I have to include the module name too right? think theres a mistake in my notes. it says I can just type functionname.__doc__
[16:34:44] *** Joins: diamondbond (~diamondbo@175.157.52.20)
[16:34:45] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[16:34:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:34:49] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[16:35:02] <Pi-sistance> why did i ask this, I just tested it.
[16:35:12] <Yhg1s> Pi-sistance: if functionname is the name that refers to the function, functionname.__doc__ works.
[16:35:24] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[16:35:31] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:35:33] <Yhg1s> Pi-sistance: If you need to do something else to refer to the function, it'll be something else.
[16:36:11] <Pi-sistance> it doesnt work for me
[16:36:13] *** Quits: jonaskabrink (~jonaskabr@eduroam-190-175.wlan.tu-harburg.de) (Quit: jonaskabrink)
[16:36:14] *** Joins: han-solo (~hanish@user/han-solo)
[16:36:21] <Pi-sistance> unless i includemodulename. first
[16:36:35] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[16:36:51] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[16:37:36] <Pi-sistance> it just says the fucntion is not defined
[16:37:38] <Yhg1s> Pi-sistance: then functionname isn't a name that refers to the function. modulename.functionname could be, though. This isn't about the __doc__ attribute, but about how you refer to the function object. (See bit.ly/pynames1 for more information on how names work.)
[16:37:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:39:07] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:69b3:9c8e:e1c9:574d) (Quit: Client closed)
[16:39:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:39:54] *** Quits: ianliu (~ianliu@177.62.181.26) (Quit: WeeChat 3.3)
[16:40:03] *** Joins: todda7 (~torstein@31.4.137.184)
[16:40:33] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:40:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[16:41:21] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:41:33] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:41:37] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 250 seconds)
[16:41:50] *** Joins: mickey8 (~user@user/mickey)
[16:43:28] *** Quits: shokohsc86 (~shokohsc@179.106.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[16:44:08] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:45:51] *** Joins: onichomp (~onichomp@2806:264:4404:8008:3c97:6f06:7dc2:e4ee)
[16:47:02] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:47:28] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:47:34] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:47:35] *** dcaro_lunch is now known as dcaro
[16:48:23] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:48:23] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:50:08] *** Quits: diamondbond (~diamondbo@175.157.52.20) (Ping timeout: 256 seconds)
[16:50:31] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:50:37] *** Joins: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net)
[16:51:13] *** Quits: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[16:52:37] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:52:58] *** Joins: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net)
[16:54:14] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:54:30] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[16:54:34] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:56:21] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:56:22] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:57:49] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:59:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[17:01:46] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:01:52] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:01:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:02:34] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[17:02:34] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[17:04:54] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[17:04:58] *** Quits: foxtrot (~foxtrot@user/foxtrot) (Ping timeout: 260 seconds)
[17:05:18] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 268 seconds)
[17:05:33] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[17:05:45] *** Joins: legola (~legola@46.235.101.181)
[17:05:50] *** Joins: Echoz_ (~chris@user/echoz)
[17:06:09] *** Joins: southey (~foxtrot@user/foxtrot)
[17:06:19] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[17:07:47] *** Joins: via_c7 (~orangeext@user/orangeextract)
[17:07:50] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:07:50] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[17:08:08] *** Parts: via_c7 (~orangeext@user/orangeextract) ()
[17:09:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:11:26] *** Joins: grooverman (~grooverma@177.102.119.40)
[17:12:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:12:37] *** Quits: BillyZane (~BillyZane@139.28.216.252) (Read error: Connection reset by peer)
[17:12:56] *** Joins: BillyZane (~BillyZane@139.28.216.252)
[17:12:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[17:13:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[17:13:55] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-239.hsi5.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[17:14:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[17:14:31] *** Joins: fikran (~fikran@user/fikran)
[17:14:34] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:15:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[17:17:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:19:16] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:19:22] *** Quits: canarts (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:20:19] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:20:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi)
[17:21:26] *** Joins: stranac (~stranac@195.29.239.126)
[17:21:57] *** Quits: carl-- (~carl-@185.103.188.130) (Quit: Leaving)
[17:22:39] *** Joins: n00b101 (uid448161@lymington.irccloud.com)
[17:22:58] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[17:23:38] *** Joins: pycurious (~Adium@user/pycurious)
[17:24:40] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:25:45] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:28:08] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 268 seconds)
[17:28:57] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[17:30:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:30:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:33:21] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:4d88:781e:9eb7:852b)
[17:35:56] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[17:36:48] <nedbat> "don't use mutable globals" they said.  did I listen? no.....
[17:37:13] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 265 seconds)
[17:37:16] <grym> nedbat: or, did you? it might've changed since the last time you looked
[17:37:39] <grym> 😇
[17:38:00] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[17:38:00] <nedbat> grym: i've spent more than an hour trying to understand why running tests passes, then running them again fails, then running again passes, etc..
[17:38:10] *** Joins: thiras (~thiras@user/thiras)
[17:38:15] <grym> ugh
[17:38:38] <grym> i have some tests that have side effects, but the worst thing they do is clutter up my disk
[17:38:43] <nedbat> grym: pytest's --failed-first is great except when it causes this
[17:38:43] <grym> (which, admittedly, isn't great)
[17:38:43] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:39:01] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:40:06] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[17:40:30] *** Joins: legola (~legola@46.235.101.181)
[17:41:46] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[17:41:50] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[17:43:10] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:43:17] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:44:07] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:44:38] <jinsun> had something like that happen at my work too, and the solution they came up with was really horrible, renaming a file
[17:44:53] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:44:58] <jinsun> (the culprit? you guessed it, sys.path.append)
[17:45:02] <grym> jinsun: the disk-cluttering? or nedbat's trouble
[17:45:19] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 250 seconds)
[17:45:35] <jinsun> nedbat like trouble, test failing when running along with other tests, but not in isolationn
[17:45:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:45:49] <grym> blech
[17:46:14] <grym> i have a mandatory PYTHONPATH=i/hate/this:$PYTHONPATH in a work project now
[17:46:39] <nedbat> jinsun, grym: in this case, I have a global which leaks between tests. But I also use --failed-first, so if t1 passes and t2 fails, then when i run the tests again, they go t2,t1. now t2 passes. I run the tests again: t1, t2.  t2 fails, etc etc.
[17:48:56] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[17:50:34] *** Joins: hemstock (~hemstock@68.71.244.6)
[17:50:44] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[17:50:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:51:06] *** Joins: kronicmage (user72429@neotame.csclub.uwaterloo.ca)
[17:51:17] *** Joins: mickey8 (~user@user/mickey)
[17:51:18] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[17:52:19] *** Joins: sickdugongo (~sickdugon@user/sickdugongo)
[17:52:21] *** Quits: ammarsalmi (~ammarsalm@154.121.67.252) (Remote host closed the connection)
[17:52:25] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:52:37] *** Joins: yeirr (~yeirr@user/yeirr)
[17:53:19] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[17:54:42] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:56:25] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[17:56:35] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:56:49] *** Joins: stoneware (~stoneware@user/stoneware)
[17:56:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:57:53] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[17:58:01] *** Joins: luigibu (~luigi@80.30.201.209)
[17:58:34] *** Quits: sickdugongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[17:59:26] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[17:59:48] *** Joins: causaui1 (~causasui@192.241.228.169)
[18:00:46] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[18:01:32] *** Joins: shokohsc8618 (~shokohsc@6.199.23.93.rev.sfr.net)
[18:01:47] *** Quits: shokohsc861 (~shokohsc@22.199.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[18:01:48] *** shokohsc8618 is now known as shokohsc861
[18:02:35] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[18:02:51] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Client Quit)
[18:03:09] <nedbat> and of course, this is actually four levels down a Cranston stack :(
[18:03:28] *** Joins: pycurious (~Adium@user/pycurious)
[18:03:57] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[18:04:10] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:04:17] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 265 seconds)
[18:04:59] *** Joins: bindu (~bindu@user/bindu)
[18:05:54] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[18:06:09] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[18:07:19] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) ()
[18:07:38] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:08:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:11:13] *** Joins: thyriaen (~thyriaen@dynamic-077-013-170-047.77.13.pool.telefonica.de)
[18:12:03] <thyriaen> I have an n dimension array of functions and an m dimensional array of data and i would like to apply those functions to the data to get a mxn matrix out of it - how can i do that ?
[18:13:14] <nicode> thyriaen: can you provide an example?
[18:14:00] *** Joins: nomic (~nomic@185.192.69.224)
[18:15:15] <thyriaen> let's say i have an array of functions : [ first adds 0, 2nd adds 1] and then i have an array [1,10,100] my resulting matrix would look like [1, 2],[10,11],[100,101]
[18:15:34] *** Joins: shokohsc8611 (~shokohsc@220.19.23.93.rev.sfr.net)
[18:15:51] <thyriaen> or rather the transpose of that
[18:15:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:16:05] *** Quits: shokohsc861 (~shokohsc@6.199.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[18:16:15] *** shokohsc8611 is now known as shokohsc861
[18:16:17] <jinsun> if by matrix you mean just a list of lists, then `[[func(x) for func in functions_list] for x in data]`
[18:16:37] <thyriaen> i would actually prefer an np.array
[18:16:46] <jinsun> (or the other order if you want the transpose of that)
[18:19:27] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[18:19:34] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:19:42] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[18:20:26] <jinsun> for numpy there would be some vectorrized way to apply those functions that I don't remember
[18:20:39] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:4d88:781e:9eb7:852b) (Quit: Client closed)
[18:21:10] <jinsun> if those functions themselves work on an entire array then you can get halfway vectorized way with [func(data) for func in functions_list] and pass that to np.array()
[18:23:26] *** Joins: servytor (uid525486@hampstead.irccloud.com)
[18:24:07] *** Joins: weedmic (~weedmic@188.120.139.53)
[18:24:59] <servytor> stupid question, but `a = b[:]` is a copy by reference, and most python functions are copy by value, right?
[18:25:27] <The-Compiler> servytor: pretty much the other way around
[18:26:06] <servytor> The-Compiler: but when I modify a, I am modifying b. I thought that was the definition of copy by reference.
[18:26:13] <The-Compiler> servytor: slicing takes a copy by value (though not recursively), and normally you would deal with references rather then copies
[18:26:43] <The-Compiler> servytor: >>> b = [1, 2, 3, 4]; a = b[:]; a.append(5); b
[18:26:44] <The-Compiler> [1, 2, 3, 4]
[18:26:49] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[18:27:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:28:10] <Pi-sistance> just started learning numpy and arraays specificially. Any reason why they have both square and rounded brackets, at least when we define one?
[18:28:31] *** Joins: ham5urg (~ham5urg@2a00:20:7043:7215:5e46:8330:19e3:fbf7)
[18:28:34] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:28:40] <jinsun> servytor: a and b are different, the things inside them are same, you are probablyy modifying the thing inside a instead of a, that change will show up in b also
[18:29:04] <servytor> jinsun, The-Compiler: I am going to google this a bit more instead of just looking stupid
[18:29:07] <servytor> thank you though
[18:30:04] <jinsun> servytor: might want to look at copy vs deepcopy https://docs.python.org/3/library/copy.html
[18:31:11] <servytor> jinsun: thank you
[18:32:51] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:33:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[18:33:47] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[18:35:17] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6092-2436-251f-01c2.res6.spectrum.com)
[18:35:38] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[18:39:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:40:05] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:40:27] <nedbat> servytor: all values in python are treated identically, and all function calls and arguments work the same.  this has details: http://bit.ly/pynames1
[18:40:56] *** Joins: mimmy (~mimmy@146.70.75.156)
[18:41:30] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[18:42:00] *** Quits: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net) (Remote host closed the connection)
[18:42:26] *** Joins: richbridger (~richbridg@089144202142.atnat0011.highway.a1.net)
[18:43:14] *** Quits: Unode (~Unode@194.94.44.220) (Quit: Not that cable)
[18:43:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:44:07] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:44:07] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[18:44:17] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[18:44:24] *** Quits: delvian (~delvian@41.13.250.104) (Ping timeout: 265 seconds)
[18:45:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[18:45:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[18:45:31] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[18:45:55] *** Joins: Unode (~Unode@194.94.44.220)
[18:46:16] *** Joins: ninjaaron (~ninjaaron@ipservice-092-217-151-212.092.217.pools.vodafone-ip.de)
[18:46:51] *** Joins: pete443 (~pete443@user/pete443)
[18:48:17] <ninjaaron> what's the trick for telling pypi that your package has type hints?
[18:48:35] *** Quits: emerent (~quassel@p200300cd57430928ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:48:36] <ninjaaron> is it just puting an empty py.typed file in the module somewhere?
[18:48:53] *** Joins: emerent (~quassel@p200300cd574309a5ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:48:56] <sco1> https://www.python.org/dev/peps/pep-0561/#packaging-type-information
[18:49:23] *** thunfisch is now known as plattfisch
[18:50:12] <SnoopJ> I'm not sure PyPI cares about that, though
[18:50:18] <ninjaaron> thanks, sco1.
[18:51:13] <SnoopJ> There is a classifier that seems relevant, though: Typing::Typed
[18:51:19] <ninjaaron> SnoopJ: I didn't say exactly what I meant. I guess I used it more as a metanymn for distutils and things.
[18:51:28] <ninjaaron> python packaging in general.
[18:51:44] *** Joins: bindu (~bindu@user/bindu)
[18:52:02] <ninjaaron> metanymy, I mean.
[18:52:25] <ninjaaron> metonymy. spelling is hard with words you never use. XD
[18:52:32] <SnoopJ> ninjaaron, ah, then I think PEP 561 is indeed the most relevant reference
[18:52:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:57] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 250 seconds)
[18:56:30] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[18:59:28] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:00:26] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:00:43] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d)
[19:00:45] <kek_> hi
[19:00:54] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[19:01:02] *** Joins: jonaskabrink (~jonaskabr@i59F5A7D8.versanet.de)
[19:01:17] <kek_> A = np.array([[0,1], [0,1]]), B = np.array([[0,1], [1,0]]) how can I compare them element wise on dim=0 s..t I get [True, False]?
[19:03:23] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:03:32] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[19:03:43] <kek_> ah np.all() solves it
[19:03:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[19:04:05] *** Joins: bindu (~bindu@user/bindu)
[19:04:41] *** Quits: dugsickongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[19:04:53] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 264 seconds)
[19:05:22] *** Quits: ninjaaron (~ninjaaron@ipservice-092-217-151-212.092.217.pools.vodafone-ip.de) (Quit: WeeChat 2.8)
[19:05:24] *** Joins: chuangzhu (~chuangzhu@user/chuangzhu)
[19:06:18] *** Quits: jonaskabrink (~jonaskabr@i59F5A7D8.versanet.de) (Ping timeout: 260 seconds)
[19:06:34] *** Joins: hel0 (~hel0@user/redrum88)
[19:08:05] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 265 seconds)
[19:08:56] <gloomy> If I want to get the "first" (any) element from a set/dict/other container, it there anything more idiomatic than next(iter(mycontainer))?
[19:09:32] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[19:09:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:10:02] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:10:56] *** Joins: gareppa (~gareppa@user/gareppa)
[19:11:04] <bjs> gloomy: nothing that works for all "containers" no
[19:14:05] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[19:15:07] *** Joins: Guest20100 (~Guest20@dyx0pyyf1yc0h8jqmycry-3.rev.dnainternet.fi)
[19:15:26] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[19:15:48] <gloomy> Hm. Don't think it's very readable. Ah well.
[19:16:05] <Guest20100> If i have a L = [1,2,3,4,5]  and I do a for loop: for i in range(len(L))  ... Is it somehow possible skip for loop from say L[1] to L[3] ? two steps in one if statement
[19:17:15] <phy1729> Guest20100: There are a few possibilites; it may be helpful to provide a bit more context
[19:17:15] <gloomy> Guest20100: you mean skip every other element or skip specific elements?
[19:17:31] *** Quits: onichomp (~onichomp@2806:264:4404:8008:3c97:6f06:7dc2:e4ee) (Read error: Connection reset by peer)
[19:18:09] *** Joins: onichomp (~onichomp@2806:264:4404:8008:3c97:6f06:7dc2:e4ee)
[19:18:25] *** Joins: Masklin_Gurder (~joel@213-67-8-136-no206.tbcn.telia.com)
[19:18:33] <Guest20100> gloomy i wanna skip for loop two iteration forward for example
[19:18:35] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[19:18:37] <Guest20100> continue does only one
[19:18:43] *** Joins: ericlee (~ericlee@2601:647:4681:3420:6411:b95a:d974:6d4)
[19:18:52] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[19:18:59] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[19:19:37] <Guest20100> https://bpa.st/YSSQ
[19:19:56] <Guest20100> confusing but i want to add numbers that are next to each other to a new list as tuple
[19:20:15] <Guest20100> so [0,2,3,4,7] would become [0,(2,4),7]
[19:20:18] *** Parts: neilthereildeil (~neilthere@204.115.183.4) ()
[19:20:36] <Guest20100> but now its printing [0,(2,4),3,4,7]
[19:20:37] *** Joins: pycurious (~Adium@user/pycurious)
[19:20:44] <SnoopJ> Guest20100, it's usually better to use enumerate(L) when you reach for range(len(L)), i.e. `for index, value in enumerate(L): do_stuff(index, value)`
[19:20:57] <Guest20100> okay
[19:21:16] <SnoopJ> but this loop is fairly complicated, I can't understand what it's doing from just a glance, I'd have to sit down with it
[19:21:31] <Guest20100> ill clear a bit junk
[19:21:38] <SnoopJ> Guest20100, the reason you're getting a tuple in the list is because of line 23 of that paste, though. You build a tuple and then you append() that tuple to the new list you're building.
[19:21:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:22:24] <gloomy> There's  probably a much more pythonic way to do it for your specific usecase but without more context, you can just do  `i = 0; while i <= len(L): ....`  and set your index manually - `i += 1` for normal iterations, `i+=2`  if you want to skip one, etc.
[19:22:51] *** Quits: shokohsc861 (~shokohsc@220.19.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[19:23:11] <Guest20100> https://bpa.st/RBQQ
[19:23:33] <Guest20100> ok i can try that, was curious if u can skip i for loop though
[19:23:34] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:23:41] <Guest20100> more than one iteration
[19:23:52] *** Joins: fikran (~fikran@user/fikran)
[19:23:56] <MacGyver> SnoopJ: It's just collapsing consecutive ranges (inclusively) from a (sorted?) list.
[19:24:29] <phy1729> Guest20100: does 2, 3 -> (2, 3) or does the range need to be at least 3?
[19:24:32] <MacGyver> I don't see why you'd want to skip loop iterations though, there's a straightforward way to write this without needing to do that.
[19:24:53] <MacGyver> Simply add the range you're currently on only when you encounter a number that's not a successor.
[19:25:04] <Guest20100> phy1729 yea would be (2,3)
[19:25:05] <MacGyver> (Or the end of the list)
[19:25:14] *** Quits: thyriaen (~thyriaen@dynamic-077-013-170-047.77.13.pool.telefonica.de) (Quit: Leaving)
[19:26:22] <ham5urg> When I read DateTimeOriginal with exifread, I get (not always) wrong dates. If I open the image with an image-viewer, I can see the correct exif-date. What am I doing wrong?
[19:26:39] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[19:28:01] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 250 seconds)
[19:28:35] <phy1729> Guest20100: something like https://gist.github.com/phy1729/ef47539e54673cef88e92ce23bd21770
[19:29:08] <schemanic[m]> Hello, I'm having trouble with understanding how to use a boto3 function, specifically to revoke/remove ingress rules in a security group based on the port they allow through. revoke_security_group_ingress() does not seem to function as documented, or I'm misunderstanding it. Here's my code: https://dpaste.org/YUOx
[19:29:43] <phy1729> don't like the code duplication, but not immedietly obvious how to restructure and and I have to run
[19:29:48] <MacGyver> Guest20100: Your issue is that you're using a nested while-loop to find your endpoint in the list instead of simply keeping track of the start and end of your current range in your outer loop.
[19:29:50] <schemanic[m]> https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/ec2.html#EC2.Client.revoke_security_group_ingress
[19:30:34] *** Quits: ham5urg (~ham5urg@2a00:20:7043:7215:5e46:8330:19e3:fbf7) (Remote host closed the connection)
[19:31:09] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:31:18] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[19:31:49] *** Joins: ham5urg (~ham5urg@2a00:20:7043:7215:d637:89e9:fae7:c04f)
[19:31:53] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Read error: Connection reset by peer)
[19:31:57] *** Joins: bindu (~bindu@user/bindu)
[19:32:08] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[19:32:21] <CrtxReavr> schemanic[m], you may need to ask in an AWS forum.
[19:32:35] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[19:32:48] *** Joins: pete443 (~pete443@user/pete443)
[19:32:54] <zitter> hi, I'm using random.randint() to generate a recordset with random LIMIT. Now "SELECT * FROM table LIMIT %d" gives me " %d format: a number is required, not bytes" and type of random.randint() is <class 'int'> Any hint?
[19:33:09] *** Quits: pete443 (~pete443@user/pete443) (Client Quit)
[19:33:40] <bjs> zitter: for what code?
[19:33:42] <zitter> I expect an integer from a function named random.randint()
[19:33:52] <Guest20100> phy1729i will try to like yours.Is there any guide for this modern python format: def rangify( data: list[int], ) -> list[Union[int, tuple[int, int]]]: data = sorted(data) ?
[19:33:54] <bjs> zitter: and that's probably what you have
[19:34:41] <zitter> bjs, http://pastie.org/p/3Lme2s01iwkl5hrzF2Sxoo
[19:35:07] <zitter> returns this: MySQLdb._exceptions.ProgrammingError: %d format: a number is required, not bytes
[19:35:19] <bjs> zitter: well this code didn't do any MySQL stuff
[19:35:20] <bjs> so?
[19:35:43] <CrtxReavr> %d is old style string formatting.
[19:35:50] <zitter> sorry, I have skipped cursor.execute(sql, args) part
[19:35:59] *** Joins: Echoz_ (~chris@user/echoz)
[19:36:09] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[19:36:11] <zitter> CrtxReavr, ah ok. What's new then?
[19:36:13] <p-i-> srsly wtf vscode?  /Users/pi/.pyenv/versions/3.10.0/bin/python -m venv .venv ;  python --version # 3.10.0 But I try setting a .venv for my .ipynb and https://pasteboard.co/3YJJ8pudAS35.png
[19:36:20] <p-i-> It says 3.9.8
[19:36:35] <CrtxReavr> zitter, well. ..  depends - why dont' you share code, maybe we can understand what you're doing.
[19:37:08] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:37:22] <bjs> zitter: https://pymysql.readthedocs.io/en/latest/modules/cursors.html#pymysql.cursors.Cursor.execute  is this the function you left out?  It says you can use %s as a placeholder
[19:37:25] <bjs> it doesn't say anything about %d
[19:37:37] *** Joins: zebrag (~chris@user/zebrag)
[19:37:53] <zitter> http://pastie.org/p/56BqwH9hO64gah9FQ4pp0r
[19:38:12] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[19:38:40] *** Joins: delvian (~delvian@41.13.250.104)
[19:40:24] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:40:49] *** Joins: darksun (~darksun@user/darksun)
[19:40:59] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:41:05] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[19:41:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[19:41:24] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[19:41:55] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[19:42:18] *** Joins: jay-m126 (~jay-m@154.72.161.106)
[19:42:31] <Guest20100> Ok got it to work with https://bpa.st/4HVA . Wondering if someone could explain the notation phy1729 used
[19:43:04] <bjs> Guest20100: they look like type hints (aka type annotations).  They document what types the parameters and return value of a function is
[19:43:11] <kek_> hi, I have  loop that generates several A=[[1,0], [0,1], [1,0]  and outside the loop I have a list B=[]. I want to do B.append(A) inside the loop but I want to add A element wise to B. How can I do that?
[19:43:29] <Guest20100> bjs it came in python 3.9 ? can I practise it somewhere?
[19:43:45] <bjs> Guest20100: no it's quite old,  and yes, in Python(?)
[19:43:46] <Guest20100> Ive been learning python 3.6
[19:44:12] <Guest20100> i meant  if theres some guide/tutorial for it
[19:44:31] <bjs> Guest20100: https://www.python.org/dev/peps/pep-0484/
[19:44:37] <Guest20100> ok thank you
[19:44:55] <kek_> nevermind I can use extend I think
[19:45:03] <Guest20100> oh 3.5, weird i have not seen this in any courses ive done
[19:45:14] <bjs> Guest20100: actually the syntax has existed since 3.0
[19:45:23] <bjs> It's just that the document was written at 3.5
[19:45:23] <Guest20100> thanks for telling me
[19:45:36] <Guest20100> so it is good practise to use this right?
[19:45:46] <bjs> Guest20100: define good practice?  Sure, people like them
[19:45:50] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[19:46:04] <bjs> It's like writing documentation and comments and all that,  it helps the reader and other developers
[19:46:08] <Guest20100> I mean when I do assignments and later apply to work I should do that
[19:46:30] <Guest20100> Ive seen a lot of machine learning github code that doesnt use it
[19:47:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:47:18] *** Joins: Klinda (~superleag@user/klinda)
[19:47:45] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Quit: Lost terminal)
[19:47:52] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[19:48:26] *** Quits: chuangzhu (~chuangzhu@user/chuangzhu) (Ping timeout: 245 seconds)
[19:49:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: Reconnecting)
[19:49:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:49:22] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[19:49:24] <CrtxReavr> kek_, when I see a list of lists, I generally assume it was created by a bug.
[19:49:39] *** Joins: hyperknot (~hyperknot@dynamic-046-114-088-020.46.114.pool.telefonica.de)
[19:49:43] <hyperknot> Hi, in 3.9 what is the recommended way to have better tracebacks in terminal?
[19:50:19] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[19:50:32] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[19:50:37] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[19:50:53] *** Joins: kdc_ (~kdc@196.211.197.159)
[19:51:43] <CrtxReavr> Um. . . Python provides pretty concise tracebacks by default.
[19:52:16] <Guest20100> Why is the typing import Union important? list[Union[int, tuple[int, int]]]:   instead of  list[int, tuple[int, int]] ?
[19:52:17] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 250 seconds)
[19:52:43] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:52:43] <lericson> Guest20100: you can int | tuple[int, int]
[19:52:53] <lericson> in 3.10 i believe
[19:53:03] *** Joins: xkuru (~xkuru@user/xkuru)
[19:53:29] <Guest20100> If I just put: def detect_ranges(L: list[int]) -> list[int, tuple[int,int]]:    it will run, so im not sure about the difference?
[19:53:44] *** Quits: kdc (~kdc@196.211.197.159) (Ping timeout: 256 seconds)
[19:53:44] <lericson> you can put -> green_goblins if you want
[19:53:58] <Guest20100> ah okay so its just like a "comment" basically
[19:54:13] <lericson> to the python runtime yes
[19:54:26] <lericson> to type checkers, it's important
[19:54:30] <Guest20100> well goblins gives nameError
[19:54:58] <bjs> Guest20100: `list[int, tuple[int, int]]` isn't valid.  It's `list[Type]` where Type is the type of the things in the list
[19:55:16] <bjs> Guest20100: yes it'll run, like if you typo something in a comment Python isn't going to spellcheck for you
[19:55:19] *** Quits: Echoz_ (~chris@user/echoz) (Ping timeout: 250 seconds)
[19:55:32] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:55:47] <Guest20100> okay
[19:55:48] <bjs> Guest20100: the Union means "one or the other".  So `def f(x: Union[int, str])` means x can be either int or str.
[19:55:56] *** Quits: onichomp (~onichomp@2806:264:4404:8008:3c97:6f06:7dc2:e4ee) (Ping timeout: 265 seconds)
[19:56:00] <Guest20100> yeah like math union okay
[19:56:12] <bjs> Guest20100: yes that's where the name comes from
[19:56:20] <Guest20100> thanks
[19:56:41] *** Joins: Echoz_ (~chris@user/echoz)
[19:58:21] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[19:58:37] <hyperknot> There are lot of "pretty traceback" type modules, I wanted to ask which one is recommended.
[19:59:30] <phy1729> Guest20100: yes the notation are type annotations. Using list and tuple rather than typing.List and typing.Tuple requires 3.9+
[19:59:48] <Guest20100> ok ty
[20:00:21] *** Joins: audiophile_ (~audiophil@user/audiophile)
[20:00:22] <phy1729> I supposed I don't really need the annotations on L9 and L10, but I was rushing a bit
[20:00:54] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:01:01] <p-i-> How to get ['foo=1', 'bar=2'] into a str:str dict?
[20:01:24] <p-i-> D = {k: v for line in L for k, v in line.split('=')}  # fails with "ValueError: too many values to unpack (expected 2)"
[20:01:28] *** Joins: ravan_ (~ravan@user/ravan)
[20:02:46] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:02:59] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[20:03:22] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 256 seconds)
[20:04:09] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 265 seconds)
[20:04:12] <phy1729> line = 'foo=1'    for k, v in line.split('=')    means   for k, v in ('foo', '1'):   so python is trying to expand 'foo' into k, v and 'foo' has 3 elements
[20:04:35] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 264 seconds)
[20:05:13] <kek_> CrtxReavr, ? it's a normal 2D array. but I figured it out.
[20:05:53] *** Joins: darksun (~darksun@user/darksun)
[20:06:19] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[20:07:36] <supakeen> p-i-: `dict(line.split("=") for line in ["foo=bar", "bar=foo"])` will do.
[20:07:43] <supakeen> But be aware that later pairs overwrite earlier pairs.
[20:08:49] <p-i-> supakeen: Thanks! I was going with key, val = lambda line: line.split('=')[0], lambda line: line.split('=')[1] ; D = {key(line), val(line) for line in L}
[20:09:03] *** Joins: bloody (~bloody@user/bloody)
[20:09:04] <p-i-> I had a feeling it was wrong
[20:09:57] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 265 seconds)
[20:10:04] *** Joins: dugsickongo (~sickdugon@user/sickdugongo)
[20:11:43] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[20:11:55] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[20:12:03] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:12:22] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[20:12:28] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[20:12:52] *** Quits: alkino (~quassel@user/alkino) (Read error: Connection reset by peer)
[20:13:25] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:15:15] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 250 seconds)
[20:15:36] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[20:15:44] *** Joins: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com)
[20:16:02] *** Quits: runelind_ (~runelind@user/runelind) (Ping timeout: 240 seconds)
[20:16:58] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:17:54] *** Joins: alkino (~quassel@user/alkino)
[20:19:34] *** Joins: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br)
[20:20:27] *** Quits: mallkrampus (~mallkramp@178.238.11.47) (Ping timeout: 250 seconds)
[20:21:21] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[20:22:23] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (Ping timeout: 250 seconds)
[20:24:05] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[20:24:34] *** Quits: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br) (Quit: Client closed)
[20:24:39] *** Joins: jim (~jim@about/linux/staff/jim)
[20:24:58] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[20:26:46] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[20:27:06] *** Joins: runelind (~runelind@user/runelind)
[20:27:08] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[20:27:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:29:00] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[20:29:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[20:29:52] <grawity> if there's a pair of functions used like "request_id = conn.search(...); <some time later> response = conn.result(request_id)" for old-style async programming, can I wrap them into a single 'async def' function?
[20:30:18] *** Quits: p3lim (~p3lim@ti0006q161-0896.bb.online.no) (Ping timeout: 260 seconds)
[20:30:34] *** Quits: brontosaurusrex (~mua@user/brontosaurusrex) (Ping timeout: 256 seconds)
[20:30:46] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Ping timeout: 260 seconds)
[20:31:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:32:11] *** Quits: jay-m126 (~jay-m@154.72.161.106) (Ping timeout: 265 seconds)
[20:32:13] *** Joins: vlas (~vlas@109.86.229.110)
[20:32:30] *** Joins: brontosaurusrex (~mua@user/brontosaurusrex)
[20:32:58] *** Joins: jay-m126 (~jay-m@129.0.204.212)
[20:33:53] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 250 seconds)
[20:33:54] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:34:10] *** Joins: mallkrampus (~mallkramp@185.169.233.48)
[20:34:45] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[20:35:16] *** Joins: rany (~rany@user/rany)
[20:35:46] <SnoopJ> I want to include a platform tag in a wheel I'm building which *does* link to non-minimal stuff (so manylinux* tags do not apply). Is there a 'standard' I should use? Seems like linux-x86_64 is what I want, but not sure if there's a specification of this directly
[20:36:25] *** Joins: runelind (~runelind@user/runelind)
[20:37:53] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[20:38:28] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d) (Ping timeout: 265 seconds)
[20:38:44] *** Joins: rbp (~abdullah@103.66.177.186)
[20:39:17] *** Quits: vlas (~vlas@109.86.229.110) (Quit: Konversation terminated!)
[20:39:35] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:39:39] *** Joins: vlas (~vlas@109.86.229.110)
[20:40:31] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:40:36] *** Joins: weedmic_ (~weedmic@188.120.139.53)
[20:40:43] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504)
[20:40:53] *** Quits: weedmic (~weedmic@188.120.139.53) (Ping timeout: 265 seconds)
[20:41:22] *** Quits: resmo (~resmo@2a00:d420:9:8a00:247:8df5:3c63:377) (Ping timeout: 265 seconds)
[20:41:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[20:41:50] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[20:42:09] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:43:05] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[20:44:57] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[20:46:28] *** Joins: BlessJah (~BlessJah@user/blessjah)
[20:46:55] *** cow_2001 is now known as editor_2001
[20:47:05] *** editor_2001 is now known as cow_2001
[20:47:48] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[20:48:03] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504) (Read error: Connection reset by peer)
[20:48:14] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d071:7f46:ac12:b504)
[20:49:56] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:50:02] <Pi-sistance> ok, still failing to get a functions doctstring unless I include the module name, have been told from 2 different sources I shiouldnt need the module's name?#
[20:50:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com)
[20:50:21] <grym> Pi-sistance: no, it merely depends on how you have access to that function
[20:50:54] <SnoopJ> If you have the function as an object, you should be able to inspect.getdoc(func)
[20:51:10] <grym> Pi-sistance: https://bpa.st/FLHA
[20:51:15] <SnoopJ> re: my question above, I think PEP 425 is what I want: https://www.python.org/dev/peps/pep-0425/#platform-tag (although it's quite out of date w/r/t platforms mentioned in e.g. PEP 599)
[20:51:32] *** Quits: todda7 (~torstein@31.4.137.184) (Ping timeout: 256 seconds)
[20:53:14] <grym> Pi-sistance: but if you're in module b, and at the top of b you `import a` and you want to get the docstring for `a.foo`, then you'll need to use `inspect.getdoc(a.foo)`
[20:53:20] <Pi-sistance> ok ty. I ws just typing .__doc__ after the function. I have to include the module name on functions form imported modules.
[20:53:43] <grym> Pi-sistance: depends on how you import it.  if you `from a import foo`, then foo.__doc__ should work fine too
[20:53:56] *** Quits: ham5urg (~ham5urg@2a00:20:7043:7215:d637:89e9:fae7:c04f) (Ping timeout: 265 seconds)
[20:54:10] <SnoopJ> Pi-sistance, you should use the inspect module
[20:54:39] <SnoopJ> it handles a lot of edge cases that .__doc__ is not properly aware of
[20:54:41] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[20:55:15] *** Joins: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net)
[20:56:00] <SnoopJ> a very simple example is a class with no docstring that inherits from one that does
[20:56:06] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[20:56:20] <Pi-sistance> ok I will make a note , thanks.
[20:58:02] *** Quits: hyperknot (~hyperknot@dynamic-046-114-088-020.46.114.pool.telefonica.de) (Quit: Textual IRC Client: www.textualapp.com)
[20:58:25] <jim> how to get docd for range()?
[20:58:48] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:58:51] <han-solo> docd ?
[20:58:58] *** Quits: Guest20100 (~Guest20@dyx0pyyf1yc0h8jqmycry-3.rev.dnainternet.fi) (Quit: Client closed)
[20:59:04] <SnoopJ> typo of "docs" maybe
[20:59:13] <grym> jim: https://docs.python.org/3/library/stdtypes.html?highlight=range#range
[20:59:13] <jim> yeah
[20:59:18] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.3)
[20:59:27] <SnoopJ> jim, at the Python REPL you can do `help(range)`, otherwise see grym's link
[20:59:29] <han-solo> ah, `print(range.__doc__)`
[20:59:30] <grym> jim: i usually google for <term> site:docs.python.org  or use zealdocs.org
[20:59:33] <jim> thanks
[20:59:33] <han-solo> or that
[20:59:42] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:59:49] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[20:59:55] <grym> or python -m pydoc "range"
[20:59:55] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:00:12] <SnoopJ> the website docs are unfortunately often more complete than what pydoc (or help(), which uses it) will give you :(
[21:00:19] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[21:00:20] *** Joins: emf (~emf@2620:10d:c090:400::5:69fc)
[21:00:22] *** Quits: n00b101 (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:35] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[21:00:48] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:00:54] <grym> i wonder if zeal can ever gain the ability to generate links that link to where the docset is canonically hosted
[21:01:10] <grym> it'd be nice, because i have some silly jumps to make right now to look something up and then link it here
[21:01:23] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:02:05] *** Joins: weedmic (~weedmic@188.120.139.53)
[21:02:18] *** Quits: weedmic_ (~weedmic@188.120.139.53) (Ping timeout: 256 seconds)
[21:02:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:02:50] *** Joins: alzgh (alzgh@user/alzgh)
[21:03:28] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[21:04:50] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[21:04:55] <SnoopJ> grym, I think Dash already can do that: https://kapeli.com/docsets#onlineRedirection
[21:04:58] <SnoopJ> not sure if Zeal exposes it though
[21:05:56] *** Joins: ham5urg (~ham5urg@ip-109-42-113-228.web.vodafone.de)
[21:06:19] <grym> maybe one day, then
[21:06:19] *** Quits: ham5urg (~ham5urg@ip-109-42-113-228.web.vodafone.de) (Read error: Connection reset by peer)
[21:06:43] *** Joins: pycurious (~Adium@user/pycurious)
[21:06:45] <grym> https://github.com/zealdocs/zeal/issues/808 then again, maybe not
[21:06:57] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[21:07:03] <SnoopJ> yea, I think that's the one
[21:07:17] <SnoopJ> "PRs welcome" is at least not a "no"
[21:07:26] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[21:07:26] <grym> and it got touched last year, if only to be renamed
[21:07:33] *** Joins: olbat (~olbat@user/olbat)
[21:07:51] *** Joins: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br)
[21:07:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:07:59] <grym> i'll subscribe to the issue and maybe be happy one day by surprise
[21:08:22] <SnoopJ> I'd probably start using it again if it gained that feature
[21:08:42] <JimmyRustles> hi
[21:08:46] <JimmyRustles> i'm trying to use the pygame_menu library
[21:08:49] <JimmyRustles> and i've got this code:
[21:08:49] <JimmyRustles> y = pygame_menu.widgets.RangeSlider('test')
[21:08:49] <JimmyRustles> y.draw(surface)
[21:09:05] <JimmyRustles> but it gives this error: TypeError: argument 1 must be pygame.Surface, not None
[21:09:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[21:09:17] <JimmyRustles> if i print surface it says it's a surface object, not None
[21:09:22] <SnoopJ> JimmyRustles, can we see the complete error report?
[21:09:40] <SnoopJ> https://bpa.st/+python+pytb
[21:10:05] <JimmyRustles> https://bpa.st/N7NA
[21:11:04] <phy1729> How is surface defined? Are you by chance doing something like  surface = some_dict.get(...)  ?
[21:11:38] <JimmyRustles> surface = pygame.display.set_mode((800, 600))
[21:12:12] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[21:12:43] <p-i-_> Does it make sense that we have to use `for k,v in mydict.items():`? Shouldn't it have been `for k,v in mydict:`? And use mydict.keys() and .values() to iterate over those
[21:13:02] <p-i-_> I'm guessing this is some legacy constraint
[21:13:49] <grym> p-i-_: if i had my druthers, attempting to iterate a "naked" dict would be a syntax error
[21:14:00] <grym> instead, it's an implicit .keys
[21:14:20] *** Quits: emerent (~quassel@p200300cd574309a5ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:14:32] <grym> and won't change for the reasons you surmise
[21:15:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[21:15:19] <SnoopJ> JimmyRustles, set_mode() returns None
[21:15:23] *** Joins: darksun (~darksun@user/darksun)
[21:15:33] *** Joins: emerent (~quassel@p200300cd574309a5ba27ebfffed28a59.dip0.t-ipconnect.de)
[21:16:04] <SnoopJ> at least, I think that's what's happening here. It looks like there might be some outdated documentation...
[21:16:40] <SnoopJ> but hmm, you said you printed it and it wasn't None.
[21:16:57] <SnoopJ> JimmyRustles, how large is this test file? Can we see the whole test program?
[21:17:13] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th) (Remote host closed the connection)
[21:17:48] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-27.dynamic.3bb.co.th)
[21:17:50] *** dcaro is now known as dcaro_away
[21:17:50] *** Joins: audiophile_ (~audiophil@user/audiophile)
[21:18:35] *** Quits: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) (Ping timeout: 265 seconds)
[21:18:52] <SnoopJ> oh hrm, no, it *is* annotated `-> Surface` actually, I take it back.
[21:19:08] <SnoopJ> there is some other set_mode() that does return None, but I doubt they're calling it
[21:20:43] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:21:24] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[21:21:24] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:21:56] *** Joins: MikZyth (~MikZyth@host-1-156-66-217.spbmts.ru)
[21:21:57] <Pi-sistance> not sure why my arrays keep telling me they are arrays on output, also gives the type if I slice an empty subsection of one.
[21:22:06] *** Joins: BH23 (~BH23@santoroj.plus.com)
[21:22:20] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[21:22:38] <grym> Pi-sistance: when you say array...
[21:22:49] <grym> do you mean list(), array.array, or numpy.array
[21:22:52] <Pi-sistance> oh, its a scaled linspace.
[21:23:11] <Pi-sistance> secoo nd array=5* some linspace.
[21:23:45] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800adf7a2369fe9598b.ipv6.abo.wanadoo.fr)
[21:24:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:24:08] <Pi-sistance> anyway, I cant slice my linspace with n+1, could swear that worked with lists
[21:24:20] * Pi-sistance tests it out
[21:24:23] *** Quits: dugsickongo (~sickdugon@user/sickdugongo) (Read error: Connection reset by peer)
[21:24:35] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:24:52] * SnoopJ isn't sure what any of that means
[21:24:59] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:25:01] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[21:26:01] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[21:27:39] *** Joins: Auron (~Auron956@user/auron)
[21:28:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567343-143.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:29:15] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[21:31:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:31:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[21:32:37] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:33:13] *** Joins: fikran (~fikran@user/fikran)
[21:35:45] *** Joins: tobybl (~tobybl@213.31.134.235)
[21:36:16] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Read error: Connection reset by peer)
[21:36:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 265 seconds)
[21:37:29] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[21:37:43] <p-i-> https://github.com/pyenv/pyenv <-- I don't see instructions for linux. Is pyenv not a good choice for linux?
[21:37:47] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:37:53] <p-i-> I don't see any out-of-the-box installer
[21:38:02] <p-i-> `apt-get install pyenv` is fail
[21:38:08] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:38:47] <SnoopJ> p-i-, https://github.com/pyenv/pyenv#basic-github-checkout
[21:38:55] <nedbat> p-i-: "Automatic installer: Visit our other project: https://github.com/pyenv/pyenv-installer" ?
[21:39:24] <sco1> You should also be able to use homebrew on linux
[21:39:51] <SnoopJ> You shouldn't need to, though
[21:40:00] <p-i-> `curl https://pyenv.run | bash` <-- beautiful!
[21:40:03] <SnoopJ> The "installation" is basically checking out the repository and running the necessary hook
[21:40:07] <p-i-> Thanks!
[21:40:12] <sco1> No, but there's 2 other better options already posted
[21:40:16] <SnoopJ> But the automated installer gives you a few more thingies
[21:40:36] <SnoopJ> sco1, I'm not sure "add another package manager to the mix" is necessarily better
[21:40:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[21:40:44] <sco1> I didn't say it was?
[21:40:46] <SnoopJ> but the documentation could definitely be clarified
[21:40:56] <SnoopJ> sco1, then I misunderstood what you said. HAND.
[21:41:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:41:23] <Pi-sistance> I meant i set a seocnd array to equal a linspace function. also I thought that both linspace and list slicing would allow me top select up to the (N+1)th element, so to basically loop
[21:41:35] <Pi-sistance> a scalar of a linspace gah
[21:41:36] *** Joins: Axy (~Axy@user/axy)
[21:42:06] *** Joins: greedom (~greedom@x59cc9a29.dyn.telefonica.de)
[21:42:10] * CrtxReavr must hax pyenv.run
[21:42:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:43:02] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:43:09] *** Quits: Falconer (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[21:43:40] *** Joins: nomic (~nomic@185.192.69.224)
[21:43:56] <The-Compiler> p
[21:43:58] <The-Compiler> oops
[21:44:07] <p-i-> `pyenv` gives "Command 'pyenv' not found, did you mean:" so it hasn't added itself to the path. And I can't see _where_ it was installed _to_.
[21:44:07] <CrtxReavr> poops?
[21:44:12] <The-Compiler> p-i-: are you on Ubuntu by any chance?
[21:44:15] <p-i-> yeah
[21:44:31] *** Joins: Batzy (~Batzy@user/batzy)
[21:44:34] <The-Compiler> p-i-: the deadsnakes ppa might be easier there to get other python versions
[21:44:50] <p-i-> yeah it doesn't do 3.10 tho
[21:45:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c4db:fc61:f9b:e1d0)
[21:45:52] *** Joins: howdoi (uid224@lymington.irccloud.com)
[21:45:55] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[21:45:55] *** Quits: Batzy (~Batzy@user/batzy) (Client Quit)
[21:46:03] <p-i-> as I do have deadsnakes anyway I can `apt-get install -y python3.9 python3.9-venv` I guess, but meh.. fragmentation of venvs
[21:46:48] *** Joins: Batzy (~Batzy@user/batzy)
[21:47:41] <SnoopJ> p-i-, did you restart your shell as specified by the pyenv-installer README? The changes won't take effect in the shell you run the installer in.
[21:47:42] <p-i-> yeezus "E: Failed to fetch..."
[21:48:01] <p-i-> how hard can it be to get a custom working python version on this OS
[21:48:04] <p-i-> yeah I did
[21:48:19] <p-i-> but inspecting .bashrc there's no edit to $PATH
[21:48:27] <p-i-> and `printenv` doesn't show evidence of pyenv
[21:48:51] *** Quits: erica (~erica@user/erica) (Quit: Ping timeout (120 seconds))
[21:48:51] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: Ping timeout (120 seconds))
[21:49:09] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[21:49:16] <p-i-> Looks like the pyenv installer created /root/.pyenv
[21:49:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[21:49:36] *** Joins: feoh2 (~feoh@137.184.104.30)
[21:49:55] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:50:02] *** Quits: prime (~prime@user/prime) (Ping timeout: 260 seconds)
[21:50:29] *** Joins: bloodElk_ (~bloodElk@user/bloodelk)
[21:50:29] *** Quits: bloodElk (~bloodElk@user/bloodelk) (Quit: ZNC - https://znc.in)
[21:50:47] *** Quits: jrabbit (~jack@user/jrabbit) (Ping timeout: 264 seconds)
[21:50:48] *** Quits: Douwd (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[21:50:50] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 268 seconds)
[21:50:56] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Ping timeout: 245 seconds)
[21:51:02] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 256 seconds)
[21:51:02] *** Quits: feoh (~feoh@137.184.104.30) (Ping timeout: 240 seconds)
[21:51:02] *** Joins: malwar3hun73r_ (~malwar3hu@134.122.29.124)
[21:51:05] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Ping timeout: 264 seconds)
[21:51:16] <p-i-> so deadsnakes gives me 3.8 at least
[21:51:21] *** Quits: InPhase (~InPhase@openscad/inphase) (Ping timeout: 245 seconds)
[21:51:23] *** Quits: neil (~kneel@rockylinux/infra/neil) (Ping timeout: 264 seconds)
[21:51:26] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[21:51:30] *** Quits: malwar3hun73r (~malwar3hu@134.122.29.124) (Ping timeout: 260 seconds)
[21:51:39] *** Joins: erica (~erica@user/erica)
[21:51:49] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[21:51:55] *** Joins: NeilHanlon (~kneel@rockylinux/infra/neil)
[21:51:55] <JimmyRustles> sorry, my power went out
[21:51:56] *** Joins: jrabbit (~jack@user/jrabbit)
[21:51:56] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:51:57] *** NeilHanlon is now known as neil
[21:52:00] *** Joins: prime (~prime@user/prime)
[21:52:08] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 260 seconds)
[21:52:09] *** Joins: InPhase (~InPhase@openscad/inphase)
[21:52:09] *** bloodElk_ is now known as bloodElk
[21:52:14] *** Joins: mastardet (~mastardet@user/mastardet)
[21:52:29] *** Joins: irrgit (~irrgit@192.241.175.183)
[21:52:35] <JimmyRustles>  SnoopJ: <Surface(800x600x32 SW)>
[21:52:38] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[21:52:42] <JimmyRustles> that's what i get when i do print(surface) after making it
[21:52:51] *** Joins: bambams (~bambams@user/bambams)
[21:52:56] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[21:53:06] <Evolver> Is there a nice transparent multicore version of `lru_cache`. When I call a function from multiple cores, I want the singular cache to be updated and used from all cores as if it were one core.
[21:54:00] <CrtxReavr> Could probably write your own that uses multiprocessing.sharedmemory
[21:54:03] *** feoh2 is now known as feoh
[21:54:32] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[21:54:40] *** Falconer is now known as Faloner
[21:54:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:54:55] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[21:55:13] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[21:55:17] *** Joins: darksun (~darksun@user/darksun)
[21:55:59] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[21:56:25] <SnoopJ> JimmyRustles, how large is your test program? Can we see it?
[21:56:28] <NoImNotNineVolt> so, i've got some python code running in aws, and i'm having issues making requests to a given url: Max retries exceeded with url: / (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)')))"
[21:56:37] <NoImNotNineVolt> (aws lambda, specifically)
[21:57:05] *** Quits: mimmy (~mimmy@146.70.75.156) (Ping timeout: 250 seconds)
[21:57:06] <NoImNotNineVolt> so, presumably it's getting its list of trusted CAs from certify/cacert.pem, which i just updated to make sure, and the issue is persisting
[21:57:09] <Evolver> CrtxReavr: meanwhile, is there a third-party cache that works fast and well, and is accessible from multiple processes? e.g. redis something
[21:57:19] <JimmyRustles> SnoopJ: https://bpa.st/ZD6A
[21:57:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:58:07] <NoImNotNineVolt> so, i'd like to troubleshoot ssl further, but i can't just drop out to a shell and echo | openssl | openssl...
[21:58:49] <NoImNotNineVolt> doh, nm. found what i needed. https://gist.github.com/gdamjan/55a8b9eec6cf7b771f92021d93b87b2c
[21:59:20] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[22:00:10] <NoImNotNineVolt> hrm, except the from OpenSSL import SSL
[22:00:11] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:00:27] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[22:01:12] *** Joins: anonymeowo (~anonymeow@107.189.14.18)
[22:01:25] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 250 seconds)
[22:02:12] *** Joins: Axy (~Axy@user/axy)
[22:03:09] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[22:05:45] *** Joins: humbertowoody (~humbertow@189.236.62.65)
[22:05:46] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[22:05:49] *** Joins: node1 (~node1@user/node1)
[22:06:08] *** Joins: alzgh (alzgh@user/alzgh)
[22:06:26] <pystardust> I am looking for a python IDE suggestions, I use neovim currently. Even tho I set up completions getting doc pages is kinda hacky. I would love something with vim binds + free and open source
[22:06:27] *** Joins: akk (~akk@75.161.146.115)
[22:07:33] <SnoopJ> JimmyRustles, ahh I understand my confusion now. I think this is happening because `menu` does not know about the surface until you call `menu.mainloop(surface)`, but calling `draw()` like this needs to know about the surface
[22:07:42] *** Joins: inomoz (~inomoz@176.59.125.26)
[22:08:17] <grym> pystardust: in no particular order: vim and its variants, emacs, vscode, pycharm are all pretty consistently popular choices depending on your needs.  there are others
[22:10:03] <pystardust> grym: thanks, which one would you suggest to start with
[22:11:08] <JimmyRustles> SnoopJ: how would i fix it then#?
[22:11:12] <JimmyRustles> i'm not sure what the solution would be?
[22:11:16] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 265 seconds)
[22:11:17] <grym> pystardust: where do you fall on the editor -- IDE spectrum of heavyweight preferences
[22:11:49] *** Quits: Faloner (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[22:11:57] <pystardust> grym: i want keyboard vim key driven work flow, but I am willing to go heavy weight
[22:12:08] <nicode> pystardust: I used vscode for a while and I found it rather nice, decent completion, debugging, testing, etc. I am trying out emacs now simply because I'm trying to go mouseless.
[22:12:11] <grym> pystardust: pycharm community or vscode are both very "batteries included, off you go!" options that have vim bindings
[22:12:25] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:13:00] <grym> pystardust: of the two, vscode is lighter
[22:13:07] <pystardust> thanks, what about IDLE, the standard python editor, does anyone use it now. Does it have modern support?
[22:13:24] <grym> pystardust: no, IDLE is known to be bad/buggy.  if you wnt something like IDLE; try https://thonny.org
[22:13:45] <CrtxReavr> Honestly, I dont'  think idle gets used much out side of python classes.
[22:14:05] <grym> idle doesn't get much love, no
[22:14:18] <pystardust> grym: thanks ill giv3e it a shot!
[22:14:22] <SnoopJ> JimmyRustles, I think you want to use `menu.add.range_slider()` instead of what you're doing here. Have a look at this and see what you think: https://bpa.st/A72Q
[22:14:36] <grym> pystardust: for just hacking around and trying things out, you can also look at ipython or bpython, which are "enhanced REPLs": scratch pads that are nice to use
[22:14:49] <CrtxReavr> Some like how it runs scripts in an interactive mode that lets you poke around, see the value of variables, etc., but you can accomplish same by running ``python -i yourscript.py``.
[22:14:51] <grym> pystardust: REPLs aren't made for permanent work, but they're great for trying out an idea
[22:15:15] <grym> "this isn't worth touching a file for, but i wonder if i could..." sort of stuff
[22:15:38] <CrtxReavr> I'll often use ipython to figure out how to use a module.
[22:15:42] <pystardust> nicode: tried my way into emacs but couldn't go without keybinds, and the features it offered was an over kill to me. maybe it might have be the thing im looking for but not without a ton of setup
[22:15:44] <CrtxReavr> (Or as a calculator.)
[22:15:53] <pystardust> whats REPLs?
[22:16:02] <SnoopJ> REPL stands for "read, eval, print, loop"
[22:16:10] <JimmyRustles> that works, SnoopJ
[22:16:11] <JimmyRustles> thanks
[22:16:13] <SnoopJ> (in other words, what the program is doing when you just run `python3`)
[22:16:22] <SnoopJ> JimmyRustles, do you understand why?
[22:16:29] <JimmyRustles> now i'm trying to implement the dropselect into another project of mine, but if i just draw it without calling mainloop(), it's not clickable
[22:16:29] <BrenBarn> there is also the amazing Pydeal :-) https://sourceforge.net/p/pydeal/code/ci/default/tree/
[22:16:34] <JimmyRustles> is there a way to use it without calling mainloop()?
[22:16:46] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:17:10] <SnoopJ> JimmyRustles, as far as I can tell, the drawing should always be something Menu does for itself. You attach widgets to the Menu using the methods on menu.add and it automagically knows to draw those widgets when drawing the Menu
[22:17:17] <nicode> pystardust: I know there is "evil mode" for emacs which is like VIM mode for emacs, might be worth a try at some point. I won't suggest emacs yet as I don't really have a good workflow and am not sure it's how I want to go.
[22:17:33] <SnoopJ> Evil is pretty good, but it doesn't make the learning curve go away (in fact, it complicates it!)
[22:17:55] <SnoopJ> Text editors edit text, so try a bunch of them and see what you like
[22:17:55] *** Joins: Falconer (~ronnyma@227.84-48-191.nextgentel.com)
[22:18:20] *** Joins: manuels (~manuel@80.211.205.88)
[22:18:23] <Swayze> nice project BrenBarn
[22:18:27] <Swayze> @ pydeal
[22:18:32] <nicode> SnoopJ: exactly, you have the benefit of them all being free so try a bunch, what you spend is your time.
[22:18:43] <SnoopJ> nicode, well, not all text editors are free, but quite a few are
[22:18:50] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:18:57] <BrenBarn> thanks
[22:19:12] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:19:14] <BrenBarn> it was based on DreamPie which I used to use a ton but which never was updated for py3
[22:19:17] <nicode> SnoopJ: right, well the ones I'm trying are, but fair enough.
[22:19:29] *** Quits: kdc_ (~kdc@196.211.197.159) (Quit: Leaving)
[22:19:33] <Swayze> yeah i just read that in the overview
[22:19:49] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[22:19:54] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[22:20:02] <p-i-> You guys really use pyenv on linux? I sorted out the failure of the installer to add to the path which is a documented fail https://github.com/pyenv/pyenv-installer/issues/112 but now executing `pyenv install 3.7.12` I get a boatload of fail https://bpa.st/OYQA
[22:20:17] <grym> p-i-: i use pyenv more or less exclusively
[22:20:25] <p-i-> How can such a great language be such a pain in the arse to setup?
[22:20:45] <CrtxReavr> Its ecosystem is a challenge.
[22:20:46] <SnoopJ> It helps when you read the error messages.
[22:20:50] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[22:21:01] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (Quit: Reconnecting)
[22:21:11] <SnoopJ> p-i-, `sudo apt install libssl-dev` if you want the ssl extension.
[22:21:14] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[22:21:17] <JimmyRustles> SnoopJ: i've got this code https://bpa.st/I62A but it just draws the menu and doesn't let me interact with the dropselect
[22:21:26] <grym> p-i-: https://github.com/pyenv/pyenv/wiki/common-build-problems#prerequisites  has a nice list of prerequisites to building
[22:21:34] <JimmyRustles> if i call mainloop(), it doesn't draw any of my other code's drawings, just the menu
[22:21:42] <grym> p-i-: er, https://github.com/pyenv/pyenv/wiki#suggested-build-environment as well
[22:21:45] <SnoopJ> n.b. they are not *requisite*, but there are things that won't get built if you don't have the stuff
[22:21:52] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:21:54] <SnoopJ> the ones being reported here, I mean.
[22:21:56] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:22:02] <p-i-> I've created a fresh ubuntu 20.04 box, and EVERY path I try to get python onto it rabbitholes.
[22:22:09] <p-i-> don't mean to rail
[22:22:13] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[22:22:14] <p-i-> and thanks for the support
[22:22:19] <p-i-> appreciated
[22:22:30] <SnoopJ> unfortunately, the intent not to do so does not make it not-doing-so, but the answers are above: install the packages needed to build those things if you want those things
[22:22:57] <SnoopJ> libreadline-dev and libbz2-dev are the other ones
[22:23:21] <Wooble> uh, doesn't ubuntu 20.04 come with python already installed since it doesn't work at all without it?
[22:23:34] <p-i-> just so frustrating when I have a deadline to hit and these extra gotchas keep popping up
[22:23:37] <SnoopJ> Yep, it comes with 3.8
[22:23:56] <p-i-> oh sheesh I was doing `which python` not `which python3`
[22:24:03] <p-i-> I thought the OS didn't have it!!
[22:24:16] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:24:24] <p-i-> 🤦‍♂️
[22:24:26] <bluss> there's a package called python-is-python3 or something too
[22:25:23] <SnoopJ> If you're using 3.x, just use `python3`. It's annoying, yes, but trying to do it all with `python` is a hassle.
[22:25:38] *** Quits: luva (~luva@146.70.62.238) (Quit: Byebye)
[22:26:10] <grym> python3 -m venv (once you've installed all the remaining bits of python3's full site that ubuntu omits) and then it's just python again :)
[22:26:16] *** Joins: luva (~luva@146.70.62.238)
[22:26:33] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[22:26:39] <SnoopJ> python3-full soon, I hope
[22:26:48] <JimmyRustles> SnoopJ: any idea why this code won't let me interact with the dropdown? https://bpa.st/I62A
[22:27:34] *** Joins: grooverman (~grooverma@177.102.117.95)
[22:29:00] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 256 seconds)
[22:31:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:31:53] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[22:32:13] <bluss> SnoopJ: yeah, I had python-is-python3 and then something I installed had to pull it away (remove it and install python-is-python2, for some reason), so.. that was just annoying :)
[22:33:34] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[22:33:45] *** Quits: Falconer (~ronnyma@227.84-48-191.nextgentel.com) (Quit: leaving)
[22:36:24] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-134.home.otenet.gr) (Ping timeout: 265 seconds)
[22:37:05] *** Quits: greedom (~greedom@x59cc9a29.dyn.telefonica.de) (Ping timeout: 268 seconds)
[22:38:56] *** Joins: zepolen_ (~zepolen@2a02:587:862b:8cd3:d2a3:6621:d9da:c65d)
[22:39:08] <p-i-> I've got some version mismatch going on: https://bpa.st/3BVQ I'm using python 3.8 and I've had to `pip install pyarmor` and `pip install foo.tar.gz` which is a custom lib, presumably obfuscated which is why I need pyarmor.
[22:39:14] <SnoopJ> bluss, Debian is a mess when it comes to Python
[22:39:43] <p-i-> What's likely going on here? Is the obfuscated lib somehow requiring 3.7 runtime?
[22:39:53] <The-Compiler> p-i-: I see 3.10 and 3.11 on https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa
[22:39:59] <SnoopJ> p-i-, that looks like you've done `sudo pip install` at some point
[22:40:04] <bluss> it seems mostly ok. It's hard to manage with a messy python ecosystem, a lot of package managers or similar things for python
[22:40:33] <SnoopJ> bluss, it's complicated before the distribution starts forming Strong Opinions, yea
[22:40:36] <p-i-> no sudo, but I am logged in as root
[22:40:41] <SnoopJ> same effect
[22:40:52] <p-i-> SnoopJ: how did you get that?
[22:41:08] <p-i-> And is it fixable?
[22:41:24] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:41:55] *** Joins: greedom (~greedom@x59cc9a29.dyn.telefonica.de)
[22:42:03] <SnoopJ> p-i-, dist-packages is the place where distribution packages live on Debian Python, mostly. I guess if it's under /usr/local/lib it's supposed to be for stuff you've installed with apt, maybe?
[22:42:21] <SnoopJ> p-i-, the problem you're seeing is that you're trying to import a package that was built for Python 3.7 from your Python 3.8
[22:42:52] <SnoopJ> err, other way around: yours is 3.7, Ubuntu's is 3.8
[22:42:56] <p-i-> The-Compiler: huh. I failed to install 3.9 with deadsnakes when I tried it a few weeks back.
[22:43:09] <p-i-> yup thought as much
[22:43:11] <SnoopJ> p-i-, can you tell us why the Python that Ubuntu came with isn't what you want?
[22:43:50] <p-i-> no that one's solved. I was being a doofus. I didn't realize it actually comes with 3.8 out of the box. I was `which python`ing instead of `which python3`
[22:43:53] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[22:44:10] *** Joins: mimmy (~mimmy@146.70.75.158)
[22:44:11] <p-i-> But looks like I really do need to downgrade to 3.7 for this awkward package
[22:44:20] <SnoopJ> How did you install helheim, whatever that is?
[22:44:28] <p-i-> Am questioning whether the package _really_ needs to be tied to a specific python version
[22:44:42] <p-i-> I did `pip install helheim.tar.gz`
[22:44:59] <SnoopJ> which interpreter was `pip` pointing at?
[22:45:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:15] *** Joins: shokohsc8615 (~shokohsc@161.251.23.93.rev.sfr.net)
[22:45:30] <p-i-> `pip version` gives: pip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8)
[22:45:37] *** Quits: shokohsc861 (~shokohsc@223.107.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[22:45:37] *** shokohsc8615 is now known as shokohsc861
[22:45:38] <p-i-> So I think it's the system one
[22:46:01] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[22:46:02] *** Joins: ednhmn (~ednhmn@200.173.176.121)
[22:46:27] *** Joins: nyah (~nyah@94.6.71.219)
[22:46:33] *** Quits: jay-m126 (~jay-m@129.0.204.212) (Ping timeout: 265 seconds)
[22:46:35] <p-i-> I tried the fix https://github.com/deepmind/acme/issues/47 of doing `sudo apt-get install libpython3.7`
[22:47:40] *** Joins: ttkap (~ttkap@user/ttkap)
[22:47:40] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:54] *** Joins: ede (~ede@user/ede)
[22:48:07] <p-i-> ok time to try with 3.7
[22:48:16] <SnoopJ> I think the many things that have been tried are part of what's created the problem, here. The steps I'd outline: 1) uninstall this package (`/usr/bin/python3 -m pip uninstall helheim` should do it), 2) uninstall the 3.7 you installed if you don't really need it, as well as libpython3.7 if you just installed that, 3) re-install the helheim package (`/usr/bin/python3 -m pip install helheim.tar.gz`)
[22:49:14] <SnoopJ> there's nothing 3.7-y about 20.04 so there are only two possibilities I can see: 1) the package is 3.7 specific (you'd need to consult their docs to find out), 2) cross-talk with your pyenv-installed interpreter
[22:49:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:50:10] * SnoopJ has had more than a few headaches where a build script incorrectly identifies the system libpython when using a pyenv-installed interpreter
[22:50:23] <SnoopJ> *especially* with older versions of CMake
[22:50:23] *** Joins: noord (~noord@user/noord)
[22:50:24] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:50:51] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:51:09] <SnoopJ> JimmyRustles, no idea, but I could try running it if you share a complete program that reproduces the problem
[22:51:11] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[22:51:19] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:56:42] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[22:57:02] <rvalue> For PyCharm users, is there a quick way where i can put an undefined variable name for a function argument and then using some hotkey get Pycharm to create a function of this variable name with the arguments Pycharm can infer from where its been used?
[22:58:14] <grym> rvalue: alt+enter suggests "create function", but won't auto-annotate anything for you
[22:58:17] <grym> with types
[22:59:11] <mefistofeles> is there a way to profile C/C++ code that's being called with python using cProfile? Or how would I achieve this?
[22:59:25] <grym> rvalue: but i just wrote `blafkldjf(x=10)` in pycharm, hit alt+enter and said "make me this" and got `def blkasjdf(x):` above it
[23:00:13] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:00:29] <SnoopJ> mefistofeles, can you say more about what your profiling task is? What are trying to measure?
[23:00:46] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[23:00:54] <Pi-sistance> I like that I can add correctly structured arrays together without having to type much
[23:01:06] <mefistofeles> SnoopJ: I'm trying to find a performance bottleneck, I guess the pretty generic stuff
[23:01:25] <mefistofeles> SnoopJ: I know it's in this loop in python that calls some C/C++ code from a lib
[23:02:08] <mefistofeles> SnoopJ: if I naively profile it, I get what's being called in the C/C++ lib, but I can't go deeper and I know there are deeper things getting called there, so I wonder if there's a way to go deeper
[23:04:06] <rvalue> grym, so thats not what my usecase is. its when i am calling functionA(f, int) where f is any function itself. so when i write functionA(onChange, 90), i want PyCharm to understand onChange should be created as a function. To help PyCharm i defined functionA as this: def functionA(foo:Callable[[int], str], input:int) -> str
[23:04:08] <SnoopJ> mefistofeles, there's valgrind's callgrind tool, but it's pretty dang expensive, so if you have a lot of work to do to get to that loop it may not be a good choice vs. instrumenting the library (if that's an option)
[23:04:12] *** Joins: jmew (~jme@host-78-147-68-149.as13285.net)
[23:04:44] <SnoopJ> (or if your program is sensitive to timing for the same reason)
[23:04:56] *** Joins: defjam (~eb0t@90.209.246.132)
[23:07:36] *** Joins: ham5urg (~ham5urg@2a00:20:7043:947f:dae5:fb46:bfd0:c025)
[23:07:41] *** Quits: ham5urg (~ham5urg@2a00:20:7043:947f:dae5:fb46:bfd0:c025) (Client Quit)
[23:07:54] <SnoopJ> gprof might be able to do it less clumsily? I've never had a go at that but I think it works in a different way
[23:08:09] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:08:36] *** Joins: shokohsc8618 (~shokohsc@63.16.23.93.rev.sfr.net)
[23:09:01] *** Quits: shokohsc861 (~shokohsc@161.251.23.93.rev.sfr.net) (Ping timeout: 250 seconds)
[23:09:03] *** shokohsc8618 is now known as shokohsc861
[23:09:37] <mefistofeles> SnoopJ: I've used gprof, but that's if I get to compile and run the C code myself, which is not the case... at least from what I can see that's the use case
[23:09:49] <mefistofeles> let me try something
[23:10:04] <SnoopJ> ah
[23:10:08] *** Quits: anonymeowo (~anonymeow@107.189.14.18) (Remote host closed the connection)
[23:10:12] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[23:10:16] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:10:29] *** Joins: mickey8 (~user@user/mickey)
[23:10:32] <SnoopJ> possibly some other sampling profiler that could tell you about the call graph on the far side of the boundary, then
[23:10:47] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:11:54] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:12:45] *** plattfisch is now known as thunfisch
[23:12:50] <SnoopJ> mefistofeles, I am 100% sure that valgrind can do it, just not sure that will fit the parts of the program you don't care about. If you are confident about the loop and the semantics necessary to support it, you could write an equivalent benchmark program, though
[23:13:00] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[23:13:04] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[23:13:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:13:45] *** Joins: bindu (~bindu@user/bindu)
[23:13:48] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[23:14:29] <grym> rvalue: oh!  yeah i think you're SOL
[23:14:45] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[23:14:52] *** Joins: hudo (~hudo@62.68.19.39)
[23:15:19] <rvalue> any idea why it doesnt work?
[23:15:29] <rvalue> not implemented?
[23:15:37] <grym> too much introspection
[23:16:04] <NoImNotNineVolt> oh my god. how does ssl work :'(
[23:16:19] <NoImNotNineVolt> so, there's a site that presents an ssl certificate, and in some of my environments, it fails to verify.
[23:16:46] <dav1d> outdated certificates on your systems?
[23:16:48] <NoImNotNineVolt> and in those environments, explicitly adding the intermediate cert to certifi/cacert.pem fixes things.
[23:17:09] <NoImNotNineVolt> nope, latest version of certifi.
[23:17:25] <NoImNotNineVolt> (which bundles its own cacert.pem, apparently)
[23:17:29] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (Ping timeout: 264 seconds)
[23:17:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:18:18] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[23:18:38] <mefistofeles> SnoopJ: hmm I'll have that in mind, it's been a long time since I last played with valgrind... but will see, lemme see if what I'm testing works, though.
[23:18:43] <mefistofeles> and thanks!
[23:18:48] *** Joins: fofoni (~fofoni@user/fofoni)
[23:18:59] <NoImNotNineVolt> the way i see it, there's three certs: site cert, intermediate cert, root ca cert. and having only the root ca cert trusted in some environments isn't sufficient, and adding the intermediate cert to my cacert.pem gets things verifying. is that normal?
[23:18:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[23:19:21] <NoImNotNineVolt> i guess if the site doesn't present a full cert chain, and only its own cert...
[23:22:07] *** Joins: haps (~haps@hyena.haps.ca)
[23:22:53] *** Quits: shokohsc861 (~shokohsc@63.16.23.93.rev.sfr.net) (Read error: Connection reset by peer)
[23:22:55] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[23:23:17] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:25:22] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[23:25:29] *** Joins: humberto1 (~humbertow@189.236.62.65)
[23:25:42] *** Joins: cebor (~cebor@user/cebor)
[23:25:57] <haps> Hi, I have a horrible question related to globals, sorry yes I know they're evil etc; I have a module, say a, with a/b.py has __all__=[..., myvar, ...] and in there I set it.  When I import that module, a.myvar is a.b.myvar returns true, but when I call the a.setmyvar(something) that's no longer the case...  All examples I saw only went to 1 level, I guess what's happening is a.setmyvar() (which is really
[23:26:03] <haps> a.b.setmyvar()) is, despite a 'global myvar', replacing a.b.myvar and somehow a copy holding the older value is created, at the a.myvar level?
[23:26:16] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:26:27] *** Joins: shokohsc861 (~shokohsc@63.16.23.93.rev.sfr.net)
[23:26:33] <SnoopJ> haps, it would really help to see the program you're referring to in its entirety
[23:26:43] <SnoopJ> i.e. we have no idea what setmyvar() does based on your description
[23:27:43] <deniska> haps: if you use `from x import y` form, it brings the name `y` into your current module, and changing x.y won't update imported y
[23:27:56] *** Quits: humbertowoody (~humbertow@189.236.62.65) (Ping timeout: 256 seconds)
[23:28:07] <Wooble> haps: there's no copying involved, but rebinding a name with the = operator binds it to a different object, it doesn't track down other references to the original object to change them
[23:29:16] <haps> SnoopJ: Sorry, I tried to make the simplest description; for example, in b.py: __all__ = ...; myvar = 1; def setmyvar(): global myvar; myvar = 2;
[23:29:28] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[23:29:40] <haps> deniska: yup, I'm just 'import a'
[23:30:05] *** Joins: todda7 (~torstein@31.4.141.17)
[23:30:09] *** Joins: rany_ (~rany@user/rany)
[23:30:10] <haps> maybe I've been staring at it too long, I'll write up something i can link to
[23:30:12] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[23:30:21] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[23:30:26] <Wooble> what's the __all__ for? You're not doing from a.b import *?
[23:30:28] <SnoopJ> yea, being able to see the actual files on bpaste may be easier
[23:31:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[23:31:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:31:22] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Ping timeout: 260 seconds)
[23:33:22] *** Joins: zepolen (~zepolen@ppp-94-66-223-80.home.otenet.gr)
[23:33:24] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[23:33:26] *** Quits: zepolen_ (~zepolen@2a02:587:862b:8cd3:d2a3:6621:d9da:c65d) (Ping timeout: 265 seconds)
[23:34:32] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:35:02] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:35:02] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[23:35:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a5f1-5281-6a38-5d1d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:35:44] *** Joins: hudo_ (~hudo@62.68.19.39)
[23:36:06] *** Parts: Amnesia (~Amnesia@user/amnesia) ()
[23:37:10] <haps> here it is: https://bpa.st/MMSA
[23:38:12] <deniska> haps: yeah, star import basically copies names
[23:38:19] <haps> Maybe that's the issue, the __init__ is the issue?
[23:38:24] <deniska> haps: reassigning to one name has no effect on the other
[23:38:32] <SnoopJ> haps, yea so `from .b import *` is equivalent to `import b; myvar = b.myvar; del b` basically, you're getting a new name
[23:39:09] <SnoopJ> (well, along with any other names)
[23:39:42] <haps> I mean, the easiest way to get around it would just be to create myvar() which returns _myvar... but I hoped there might be another way?
[23:39:51] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[23:40:10] <SnoopJ> it does seem like you want an object of some sort, here
[23:40:35] *** Joins: waynew (~wayne@user/waynew)
[23:40:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:42:17] <haps> What about in my __init__, re-importing myvar (obviously my working example has many more names) with something like from .b import *; import b.myvar as myvar;?  I actually tried that particular syntax and couldn't even get the syntax right.
[23:42:33] *** Quits: wisep__ (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: wisep__)
[23:42:34] *** Joins: fikran (~fikran@user/fikran)
[23:43:07] <SnoopJ> haps, any import here is going to create a new name. Names themselves aren't objects, they're associated with some lexical scope, and that scope doesn't cross the boundary between modules.
[23:44:36] <haps> The other approach I tried was to get rid of the global and use the trick 'this = sys.modules[__name__]', only that's still ends up pointing to a.b.myvar...
[23:45:46] <SnoopJ> haps, it might help if we knew the non-trivial context that has you working on this problem, there might be another way to go about it that avoids this problem of how names work
[23:45:51] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[23:45:53] <haps> SnoopJ: is there no way in my a.__init__.py to add an alias to the a.b.myvar, maybe by removing it from b.py:__all__ and doing something...
[23:46:39] <SnoopJ> haps, names always point to objects, *never* to other names. Great reading on this subject: https://bit.ly/pynames1
[23:47:09] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[23:47:12] <haps> The problem is I'm trying to work around someone else's code, which I can't change easily.  SnoopJ yeah that's why I used the term 'alias', hoping there was something else under the hood I wasn't aware of :-)
[23:48:20] <haps> But the variable is something that's useful elsewhere, used often, and occasionally needs to be updated.
[23:48:44] <Wooble> haps: you can import a.b, and reference it as a.b.myvar from anywhere.
[23:48:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:48:46] <SnoopJ> haps, you could have some helper object that let you do `helper.myvar` and figures out whatever `myvar` is in `b` at execution time, but you can't do it with just identifiers, nope
[23:48:49] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[23:48:56] <haps> If it wasn't for the a.b.myvar, ... hmm maybe I can move the entirety of myvar/setmvar to __init__....
[23:48:56] <SnoopJ> or yea, just import the package
[23:48:58] *** Joins: mickey8 (~user@user/mickey)
[23:49:18] <haps> or is that a terrible idea?
[23:52:17] *** Quits: mimmy (~mimmy@146.70.75.158) (Ping timeout: 265 seconds)
[23:53:03] *** Joins: sedeki (~textual@user/sedeki)
[23:54:41] *** Quits: hudo (~hudo@62.68.19.39) (Quit: Leaving)
[23:54:41] *** Quits: hudo_ (~hudo@62.68.19.39) (Quit: Leaving)
[23:54:58] *** Joins: hudo (~hudo@62.68.19.39)
[23:55:16] *** Quits: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br) (Quit: Leaving)
[23:55:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:55:40] *** Quits: weedmic (~weedmic@188.120.139.53) (Ping timeout: 265 seconds)
[23:55:50] *** Quits: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[23:56:09] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:56:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[23:56:56] *** Joins: weedmic (~weedmic@188.120.139.53)
[23:57:42] *** Quits: hudo (~hudo@62.68.19.39) (Client Quit)
[23:57:56] *** Joins: hudo (~hudo@62.68.19.39)
[23:58:28] *** Quits: humberto1 (~humbertow@189.236.62.65) (Ping timeout: 268 seconds)
[23:58:44] *** Quits: hudo (~hudo@62.68.19.39) (Client Quit)
[23:58:59] *** Joins: hudo (~hudo@62.68.19.39)
[23:59:44] <haps> Thanks for your help!  I ended up working around the problem by never interacting with that variable direclty.
[23:59:53] <haps> Directly even!
