[00:01:52] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[00:02:20] *** Joins: royaljelly (~royaljell@user/royaljelly)
[00:02:23] <ioxzev1z> Assuming fgets will read until \n you can ignore the part about appending to the final incomplete line
[00:03:43] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[00:06:49] <quartz> So use recv to read blocks of data
[00:07:03] <quartz> Than use fgets to parse it into lines, terminated by \n
[00:07:24] <quartz> at some point, fgets should read in \r\n, which is the final line that comes beofre the actual data I want to read
[00:08:06] <ioxzev1z> Right
[00:08:31] <ioxzev1z> Though if fgets on the fd will read until \n you can skip recv()
[00:08:51] <ioxzev1z> And just loop fgets
[00:08:56] <quartz> So I don't have to use recv() at all?
[00:09:00] <quartz> OK
[00:10:50] <royaljelly> I'm probably being very stupid here, but why doesn't https://paste.debian.net/plainh/88856aa2 work? It just copies stdin to stdout. 
[00:11:15] *** Joins: nabaiste^ (~nabaiste@68.101.58.90)
[00:12:12] <ioxzev1z> royaljelly, you probably want && on the if?
[00:12:38] <royaljelly> ioxzev1z: no...
[00:12:48] <ioxzev1z> vm
[00:12:52] <ioxzev1z> *nvm
[00:12:58] <Bou> "not space, or not tab" is always true
[00:13:35] <royaljelly> Bou: how?
[00:13:48] <royaljelly> if getchar() == ' '
[00:13:50] <Bou> if it's space, it's not tab. if it's tab, it's not space
[00:14:17] <royaljelly> oh yeah
[00:14:19] <royaljelly> right
[00:14:41] <ioxzev1z> if not space && tab && new_line
[00:15:49] <acaciause> that wont actually change anything though in this case although it should be written like that
[00:17:07] <acaciause> it works fine on my machine by the way, just as you pasted it :royaljelly
[00:17:20] *** Joins: emacspenguin (~My_user_n@2607:fb90:2906:938c:db5:9d31:e79e:95ba)
[00:18:32] <royaljelly> acaciause: how? It's not supposed to work...
[00:18:33] <Bou> nah it always prints the whole line
[00:19:07] <acaciause> oh I thought thats what it was supposed to do :
[00:19:12] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:19:27] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:19:30] <royaljelly> acaciause: ah no, it's supposed to print each word on a separate line 
[00:20:18] <royaljelly> alright, thanks guys
[00:20:21] *** Parts: royaljelly (~royaljell@user/royaljelly) (bye)
[00:21:48] <acaciause> https://stackoverflow.com/questions/4327942/non-buffering-stdin-reading
[00:22:01] <acaciause> royaljelly:
[00:22:05] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 252 seconds)
[00:22:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:23:31] <ioxzev1z> Left before I could paste...
[00:23:54] <quartz> ioxzev1z: I tested this but it still writes the header lines. Can you tell me what I'm doing wrong? https://godbolt.org/z/jn8YvoEcs
[00:24:48] *** Quits: emacspenguin (~My_user_n@2607:fb90:2906:938c:db5:9d31:e79e:95ba) (Ping timeout: 268 seconds)
[00:24:55] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Quit: WeeChat 3.0.1)
[00:25:17] <ioxzev1z> quartz, Remove 72, 74,75, 79 - 86. 95 - 101 looks wrong
[00:26:39] <ioxzev1z> quartz, you only need a single fgets in the code, which should be in the loop
[00:26:41] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[00:27:02] <ioxzev1z> Don't fgets(...); while(fgets(...))
[00:27:12] <quartz> ioxzev1z: But don't I need line 82
[00:27:15] *** Joins: perro (~perro@072-191-245-069.res.spectrum.com)
[00:27:22] <quartz> To check if there is a 200 in the initial line
[00:27:27] *** Tesla is now known as kish`
[00:27:31] <ioxzev1z> That should be in the loop if you want to make it simple.
[00:28:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[00:28:17] <ioxzev1z> You want to while() { check_line(); }, not read(); check_line(); while() { read(); check_line(); }
[00:29:58] <quartz> So I don't need the stupid flag then?
[00:30:57] <ioxzev1z> No, you literally just read/ignore until \r\n then start saving after it
[00:31:07] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[00:31:20] <quartz> OK let me try to fix it now
[00:32:49] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[00:33:27] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[00:33:29] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:33:33] <ioxzev1z> quartz, Also don't write to the file with fputc, write as much as possible at once.
[00:33:56] *** Joins: mrig (~mrig@user/mrig)
[00:34:35] <quartz> ioxzev1z: Use fread?
[00:35:01] <ioxzev1z> fwrite
[00:36:00] <quartz> OH!
[00:36:41] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[00:36:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:38:14] <ioxzev1z> Given 1M of data, you would end up making 1M calls to fputc
[00:38:22] <ioxzev1z> Which as you can probably guess isn't the most efficient
[00:38:47] *** u0_a391 is now known as Kit
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:39:45] *** Quits: acaciause (~acaciause@cpc140764-burn9-2-0-cust788.10-1.cable.virginm.net) (Quit: Konversation terminated!)
[00:39:51] *** Joins: noarb (~noarb@user/noarb)
[00:40:39] <Kit> on that note, is it worth it to use a string buffer before writing to a file instead of writing it directly with fprintf line by line
[00:40:53] <ioxzev1z> Kit, elaborate?
[00:40:55] <Kit> say theres 10 lines to write
[00:41:09] <Kit> currently im writing each line with fprintf
[00:41:30] <Kit> but each line is written individually
[00:41:45] <Kit> would it be worth it to use a buffer then write the buffer to disk
[00:41:58] <ioxzev1z> I doubt that you need to optimize 10 fprintf calls
[00:41:59] <Kit> or is it okay to call fprintf 10 times
[00:42:14] <Kit> im more concerned about disk wear
[00:42:43] <Kit> would that automatically be optimized out with the compiler/os
[00:43:08] <ioxzev1z> I doubt you can affect disk wear via fprintf. Might be that all 10 fprintf calls are buffered before the actual print happens
[00:43:28] <Kit> okay, cool
[00:43:29] <Kit> thanks
[00:43:37] <ioxzev1z> So calling 10 fprintf and a single one might not have any difference
[00:47:20] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:49:41] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[00:51:13] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[00:53:07] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[00:53:17] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[00:54:32] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[00:56:14] *** Joins: arinov (~arinov@213.194.126.155)
[00:56:24] <floatcomplex> does setting a file output to line buffered guarantee that the actual writes will be line-at-a-time atomic, even if they are constructed using multiple fprintf statements? i want that to be true but i would be kinda surprised if it is
[00:56:40] *** Joins: superboot (~agentgasm@user/superboot)
[00:57:04] <quartz> ioxzev1z: Sorry to keep bothering you about this, but I ran this code and it still captures the damn header lines :(
[00:57:06] <quartz> https://godbolt.org/z/d9nxPP1ab
[00:57:22] <quartz> Although I still need to get rid of fputc and use fwrite
[00:57:30] <BtbN> floatcomplex, no. The write syscalls can happily write only a single byte if they for some reason feel like it.
[00:57:39] <BtbN> The line buffering is a libc thing.
[00:57:57] <ioxzev1z> quartz, 84 looks for \r\n /anywhere/ in the line
[00:58:05] <ioxzev1z> quartz, you want if strcmp()
[00:58:07] <BtbN> Unlikely to happen in reality, but you can't rely on writing a line to a file to be atomic
[00:58:17] <quartz> omg
[00:58:19] <quartz> yeah..
[00:58:28] <ioxzev1z> quartz, iirc all http lines end in \r\n
[00:58:51] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:58:53] <quartz> So I need "\r\n\r\n"
[00:58:56] <ioxzev1z> no
[00:59:19] <ioxzev1z> You need strcmp(buf, "\r\n")
[01:00:00] <ioxzev1z> quartz, strstr will find \r\n in "abc\r\n", strcmp(buf, "\r\n") will be true if buf only contains \r\n
[01:00:04] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[01:00:16] <ioxzev1z> Well, assuming the latter returns 0
[01:01:25] <ioxzev1z> quartz, if(strcmp(buf, "\r\n") == 0) { /* buf contains only \r\n */ }
[01:02:14] <quartz> Ahhh OK
[01:02:41] <quartz> But at that point I want to begin writing to the file
[01:02:47] *** Quits: kish` (~sid742412@user/aqua) (Quit: Leaving)
[01:02:52] <ioxzev1z> Right, so just fwrite rather than fputc
[01:03:09] <ioxzev1z> while(read() contains data) { write data to file; }
[01:03:32] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[01:03:49] *** Joins: kish` (~sid742412@user/aqua)
[01:04:10] <ioxzev1z> for(;;) { read(); if read doesn't return EOF { write read data to file; }  else break; }
[01:05:15] <ioxzev1z> With that read you can set the buffer to something high, e.g. 4096 bytes or so, rather than using fputc
[01:06:17] *** Joins: sknbl (~sknbl@2a01:d0:9976::)
[01:06:21] <ioxzev1z> As I said earlier, fputc on a 1MB file will make 1M calls, whereas you make many less if you write e.g. 4096 bytes at a time. Make a 4MiB buffer if you want to go crazy with it
[01:06:25] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[01:07:08] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:07:10] <quartz> Uhhh
[01:07:27] <Kit> realloc my beloved
[01:08:24] <quartz> ioxzev1z: But what am I using the for loop for? to loop through buf?
[01:08:34] <ioxzev1z> quartz, which for loop?
[01:08:51] <quartz> 16:34:10         ioxzev1z | for(;;) { read(); if read doesn't return EOF { write read data to file; }  else break; }
[01:09:14] <ioxzev1z> The for loop runs until you hit the break, which happens when there is no more data to read
[01:09:23] *** Quits: alch (~alch@151.34.157.155) (Ping timeout: 252 seconds)
[01:09:39] <quartz> Oh, like an infinite loop, I never seen a for loop like that
[01:09:46] <quartz> just for(;;)
[01:09:53] <ioxzev1z> Right, for(;;) is equivalent to while(1)
[01:10:59] <quartz> I thought I just had to change that strstr to strcmp
[01:11:22] *** Joins: alch (~alch@151.82.135.79)
[01:11:33] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-c4fd-876a-2db9-8bd1.res6.spectrum.com)
[01:11:35] <ioxzev1z> Did you try only changing that? if so, did it work? hard to know what to suggest when I don't see the updated code.
[01:11:54] *** u0_a391 is now known as Kit_
[01:12:04] <quartz> ioxzev1z: It didn't work. Oddly enough it returns the date and time, and the file it creates is blank.
[01:12:12] <ioxzev1z> repaste
[01:12:12] <quartz> https://godbolt.org/z/a3o7P17WY
[01:12:36] <quartz> I just wanna get it working on a basic level before I do more advanced things like change to fwrite
[01:13:20] <ioxzev1z> Elaborate on "returns the date and time"
[01:13:22] <quartz> Like... the general logic or something is wrong, which is why I'm so frustrated
[01:13:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:13:52] <quartz> When I type ./http-client www.gnu.org 80 /software/make/manual/make.html
[01:14:07] <quartz> The terminal line after that is Date: Fri, 03 Dec 2021 21:34:14 GMT
[01:14:18] <quartz> It creates the file make.html but nothing is there
[01:14:23] <quartz> No contents
[01:14:33] <ioxzev1z> I think while(ch = fgetc(descriptor), ch != EOF) should be while((ch = fgetc(descriptor)) != EOF)
[01:14:53] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:14:58] *** Joins: CaCode (~CaCode@user/cacode)
[01:15:14] <twkm> they are effectively the same.
[01:15:26] *** Quits: Kit (~u0_a391@2600:380:5e26:855a:fac3:75a1:eb32:4066) (Ping timeout: 252 seconds)
[01:15:29] <ioxzev1z> oic
[01:15:35] <earnest> comma operator is fun
[01:15:59] <twkm> hopefully ch's type is int.
[01:16:06] *** Quits: gdd (~gdd@129.199.146.230) (Read error: Connection reset by peer)
[01:16:13] <ioxzev1z> It is
[01:16:55] *** Kit_ is now known as Kot
[01:17:00] *** Kot is now known as K9t
[01:17:05] *** K9t is now known as Ki6
[01:17:09] *** Ki6 is now known as Kit
[01:17:12] <quartz> Regardlness, this should work
[01:17:24] <quartz> Like the code makes sense, and I don
[01:17:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:18:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[01:20:06] <ioxzev1z> quartz, have you tested if fgets will actually return on \n or if it will read past that?
[01:20:33] *** Quits: sknbl (~sknbl@2a01:d0:9976::) (Remote host closed the connection)
[01:21:58] <quartz> ioxzev1z: Yes fgets will return on \n
[01:23:23] <twkm> it is usually a mistake to use stdio for sockets.
[01:24:03] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[01:25:15] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[01:25:35] <quartz> I think the assignmen twants me to use stdio
[01:26:36] <quartz> https://bpa.st/UVDA
[01:26:50] <quartz> But honestly anything that works at this point is fine lol
[01:27:01] <quartz> been trying to get this to work for the past few days
[01:29:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:31:13] *** Quits: neiluj (~neiluj@2a01:e0a:1f2:d960:bcae:ad27:68aa:638f) (Quit: WeeChat 3.1)
[01:34:29] *** Joins: vysn (~vysn@user/vysn)
[01:36:26] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:36:48] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of tea smugglers at https://indiedevs.net/)
[01:37:23] *** Joins: gdd (~gdd@129.199.146.230)
[01:39:37] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[01:41:27] *** Joins: dutch (~DutchIngr@user/dutch)
[01:45:31] <ioxzev1z> quartz, is your GET line correct?
[01:46:00] *** Joins: QMaury (~QMaury@64.114.207.63)
[01:46:06] <quartz> ioxzev1z: Yes
[01:46:12] *** QMaury is now known as QMS
[01:46:15] <QMS> oi
[01:46:25] <QMS> how goes it, lads?
[01:46:37] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[01:46:47] <quartz> https://bpa.st/FIXQ   that code works great, except for the part where it writes all the header lines
[01:47:34] <ioxzev1z> quartz, Line 90 "if(strstr(buf, "\r\n") != NULL)" will match ANY line, as all HTTP lines contain \r\n
[01:48:24] <ioxzev1z> iirc
[01:48:26] <quartz> Oh write
[01:48:28] <quartz> right*
[01:48:34] <quartz> Yeah it's older code
[01:49:15] <quartz> But that loop literally does nothing anyway
[01:49:44] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:49:52] *** Joins: dohtem (uid524096@user/dohtem)
[01:50:40] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Remote host closed the connection)
[01:51:04] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:53:42] <nitrix> Probably worth looking into nghttp2 library to do all that stuff for you as well. HTTP has gotten a lot more complex than how it started. 2.0 allows multiple data streams getting multiplexed on a single connection, header compression and all those other good things.
[01:54:06] <ioxzev1z> nitrix, aiui this is some class project
[01:54:34] <nitrix> Isn't that more of a reason to re-use as much code as possible :/ ?
[01:55:01] <quartz> https://bpa.st/E4AA   Apparently this is how to do it, using those functions
[01:55:02] *** Joins: Kev_ (~Kev@2a01cb0400149f00a585dd1d2eb60ae4.ipv6.abo.wanadoo.fr)
[01:55:07] <quartz> But I feel like that's generally what I did
[01:55:23] <quartz> Well, except for fread
[01:56:05] *** Quits: Albright (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[01:58:20] *** Quits: superdupond (~Kev@2a01cb0400149f0034a31c71df36b337.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[01:59:42] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:00:32] *** Quits: Kev_ (~Kev@2a01cb0400149f00a585dd1d2eb60ae4.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[02:05:21] *** Quits: mongrel (uid508343@id-508343.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:08:10] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[02:11:01] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[02:11:43] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-c4fd-876a-2db9-8bd1.res6.spectrum.com) (Ping timeout: 252 seconds)
[02:13:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:15:23] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:16:12] *** Joins: cation (cation@user/cation)
[02:16:26] *** Joins: gce108 (~gce@user/gce108)
[02:18:31] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[02:19:45] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:24:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:26:23] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[02:32:59] *** Quits: pizdets (~pizdets@183.182.111.226) (Ping timeout: 252 seconds)
[02:33:32] *** Quits: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[02:33:42] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:34:09] *** Joins: pizdets (~pizdets@183.182.114.193)
[02:34:57] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:35:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[02:37:08] *** Quits: Kit-ten (~NotApplic@2603-6010-a141-6fa3-64a3-e44c-079c-3dc4.res6.spectrum.com) (Quit: Leaving)
[02:37:10] *** Joins: mzal (7dc76dea13@2604:bf00:561:2000::69)
[02:38:07] *** Quits: QMS (~QMaury@64.114.207.63) (Quit: WeeChat 3.3)
[02:38:49] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[02:41:34] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:41:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[02:44:10] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[02:44:26] *** Joins: bindu (~bindu@user/bindu)
[02:46:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[02:50:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[02:51:23] *** Quits: Akuli (~Akuli@82-203-166-207.bb.dnainternet.fi) (Quit: Akuli)
[02:54:06] *** Joins: pnbeast (~pnbeast@2601:140:4200:b500::1)
[02:54:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:12] *** Joins: rgrinberg (~textual@187.223.248.37)
[02:55:43] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:58:52] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:01:33] <quartz> OK at last I think I got it: https://godbolt.org/z/bhh75zM6v
[03:01:35] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:02:05] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Quit: awwww)
[03:02:29] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[03:02:39] <quartz> I've no idea why this works though. I use fgets in line 90 to read from the descriptor into buf, but I don't use buf in the second while loop at line 99
[03:03:32] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:36] <phryk> I'm currently trying to manually parse PNG, all works well except for the last chunk (the IEND one) which is read twice. I'm always acting on the same FILE * and do all my reads with fread. Now I'm hella confused, because far as I can tell from the docs, this behavior should be impossibleâ€¦
[03:03:53] <quartz> I suppose the descriptor has output enough lines that, when it gets to the while loop at 99, it fputc reads only the actual file data
[03:04:29] <twkm> phryk: sounds like you are using feof wrongly, e.g., while (!feof(stream)) ...
[03:04:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:05:21] <phryk> twkm: but with fread advanding the position indicator, fread just just return 0 and write 0 bytes into the passed buffer, shouldn't it?
[03:05:26] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:06:09] <phryk> Also, I'm really not sure !feof would work, as a non-zero value indicates EOF
[03:06:50] <twkm> i showed how it might be used wrongly.  also feof isn't predictive, it is reactive.
[03:07:00] <phryk> far as I understand !feof would do the opposite. But since it's only defined as "non-zero" I'm also not sure i can just do if(feof(stream)) because I kinda assume something like -1 would be interpreted as false but would indicated EOF
[03:07:02] *** Joins: rgrinberg (~textual@187.223.248.37)
[03:07:20] <fizzie> -1 is not interpreted as false.
[03:07:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[03:07:39] <fizzie> `if (x) ...` tests whether x compares unequal to zero or not.
[03:08:06] <fizzie> ,cc if (-1) puts("-1 is truthy");
[03:08:08] <candide> fizzie: -1 is truthy
[03:08:22] <fizzie> (That's all quite orthogonal on whether `feof` makes sense or not.)
[03:08:32] <twkm> if you use while ((r=fread(...n...)) != n) ... that would seem correct.  all in all we need more info about your code.
[03:09:06] <phryk> Anyhow, I'm doing the reads within `while (!eof_reached) {` and the last thing I do in there is `eof_reached = feof(fstream) != 0;`
[03:09:21] <phryk> So, I think my usage of feof is correctâ€¦
[03:09:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:09:29] <fizzie> No, that's not correct.
[03:09:30] <twkm> i suspect you set eof_reached before you fread.
[03:09:41] <fizzie> (Well, not necessarily correct, at any rate.)
[03:09:44] <fizzie> Are you checking the return value of `fread` at all? 
[03:09:45] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:4970:ef4b:1e0f:c4a8)
[03:09:48] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[03:09:59] <phryk> twkm: no, at the very end of that loop. i also tried putting it at the beginning, but then I'm ending up with *three* IEND chunksâ€¦ :F
[03:10:15] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[03:10:29] <twkm> do you have a test case?
[03:10:30] <phryk> fizzie: yes, I have a function read_bytes that handles short reads and loops if necessary (while also checking for feof).
[03:10:45] <twkm> feof is almost always wrong.
[03:10:59] <phryk> twkm: I don't and I'm not sure I'm allowed to show you my admittedly subpar codeâ€¦ :/
[03:11:45] <phryk> But going back to the beginningâ€¦ What happens if the position indicator is at the end of the file and I call feof?
[03:12:01] <twkm> the write a an all new program, the test case, that isn't directly what you will turn in.
[03:12:02] <fizzie> Depends on whether you've tried to read past it yet or not.
[03:12:11] <phryk> Like I could understand if it jumped back to the beginning or a random place, but it always jumps back to the beginning of the last chunkâ€¦
[03:12:50] <fizzie> `feof` does _not_ test whether the position indicator is at the end, it tests whether an end-of-file condition has been set on a stream. And the end-of-file condition is only set once an attempt to read past the end has failed.
[03:12:56] <fizzie> ,faq feof
[03:12:57] <candide> http://c-faq.com/stdio/feof.html - 12. Stdio, 12.2: Why does the simple line-copying loop while(!feof(infp)) { fgets(buf, MAXLINE, infp); fputs(buf, outfp); } copy the last line twice?
[03:12:58] <phryk> fizzie: I mean the position indicator is at the end of the file and *then* I call fread, i.e. this would be the call that "overshoots"
[03:13:14] <phryk> fizzie: Oh, that might explain things.
[03:13:20] <fizzie> ^ that FAQ entry explains the most typical case of using feof wrong.
[03:13:56] <phryk> oh yes, that seems exactly my problem, thanks candide. :)
[03:14:28] <phryk> so, is there an actual good way to check whether the position indicator arrived at the end of the file or do I *have* to overshoot the file to even find out?
[03:14:40] <twkm> check fread's return value.
[03:15:27] <phryk> twkm: i have been told that short reads are not guaranteed to be caused by reaching the end of the file but can also happen in the middle, so that doesn't seem like a strong indicatorâ€¦
[03:15:40] <phryk> (told by someone with boatloads more C experience than myself)
[03:16:32] <twkm> short reads only happen because of eof or error.
[03:16:39] <twkm> (for files)
[03:17:11] <twkm> on a unix-ish system you might experience short reads if you are reading a file that's still being created.
[03:17:11] <phryk> twkm: files as opposed to "files" like in /dev?
[03:18:56] <fizzie> If you want to cater for things like pipes, you use a return value of 0 from fread as a signal for EOF.
[03:19:33] <twkm> any thing that isn't a "plain" file, e.g., block or character special files, named pipes, domain sockets, etc.
[03:19:43] <phryk> twkm: and in the case of the file still being created it would not be recognized as EOF or error?
[03:20:39] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:20:46] <twkm> you reach eof, but the "surprise" is that the file then grows such that what was the end no longer is.
[03:21:24] <fizzie> "Following" a file that's being concurrently written to is a rather complicated thing to do. Normal programs aren't generally expected to do it.
[03:21:25] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:21:41] <phryk> but then i still handle things as correct as possible by just reacting to eof or errorâ€¦
[03:21:45] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[03:21:59] *** Quits: miqztee (~username@user/miqztee) (Quit: Leaving)
[03:22:31] <phryk> Okay, last questionâ€¦ Do I understand correctly that an fread that reaches the end of the file simply doesn't advance the position indicator of the FILE *
[03:22:33] <phryk> ?
[03:23:15] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:25:24] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:26:31] *** Joins: quartz (~quartz@user/quartz)
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:26:59] *** Joins: ferdna (~ferdna@user/ferdna)
[03:27:25] *** Joins: rgrinberg (~textual@187.223.144.204)
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:28:53] *** Joins: CormacAttack (~mac@144.62.50.200)
[03:31:50] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 252 seconds)
[03:32:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[03:37:09] *** Quits: travankor (travankor@user/travankor) (Ping timeout: 252 seconds)
[03:40:13] *** Quits: engest (~engest@50.53.126.29) (Quit: Leaving)
[03:40:49] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[03:42:09] *** Quits: rgrinberg (~textual@187.223.144.204) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:43:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:44:05] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[03:44:42] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[03:44:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:44:49] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:45:41] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (Client Quit)
[03:46:25] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[03:55:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:57:03] *** Joins: Wulf (~Wulf@user/wulf)
[03:58:36] *** Joins: korg815 (~korg815@user/korg815)
[04:06:15] *** Quits: esselfe (~steph@user/esselfe) (Remote host closed the connection)
[04:06:40] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[04:07:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:08:30] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:10:39] *** Joins: esselfe (~steph@user/esselfe)
[04:12:25] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[04:12:43] *** Parts: pony (sid524992@smol/hors) ()
[04:13:25] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:15:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:16:50] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Client Quit)
[04:17:16] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:18:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:23:43] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[04:24:02] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[04:25:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:27:42] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:31:54] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:37:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:37:15] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:39:56] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:40:20] *** Joins: tolog (~tolog@89.36.78.91)
[04:43:03] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba) (Read error: Connection reset by peer)
[04:47:21] *** Quits: tolog (~tolog@89.36.78.91) (Remote host closed the connection)
[04:49:22] *** Joins: tpefreedom (~tpefreedo@user/tpefreedom)
[04:51:52] *** Joins: shivesh (~shivesh@user/shivesh)
[04:52:03] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[04:52:10] *** Parts: shugo_ (~shugo@user/shugo) ()
[04:53:47] *** Joins: nostart (~nostar@107.175.102.93)
[04:55:01] *** Joins: Mac (~mac@144.62.50.200)
[04:55:06] *** Mac is now known as Guest4184
[04:56:21] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 252 seconds)
[04:59:17] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 252 seconds)
[05:03:18] *** Joins: nostar__ (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[05:05:45] *** Quits: nostart (~nostar@107.175.102.93) (Ping timeout: 256 seconds)
[05:06:59] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1) (Read error: Connection reset by peer)
[05:06:59] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[05:06:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[05:07:44] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1)
[05:08:39] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[05:09:55] *** Quits: alch (~alch@151.82.135.79) (Ping timeout: 252 seconds)
[05:11:44] *** Joins: alch (~alch@151.82.161.139)
[05:11:55] *** Quits: random-nick (~random-ni@87.116.165.83) (Ping timeout: 256 seconds)
[05:12:32] <vim_fans> hi, there.I just encountered this statement "There is one exceptionï¼šThe address of the first Element past the end of an array can be used in pointer arithmetic" I thought that mean that given pointer A point to array a1 pointer B point to array a2.Only a2's frist element just behind the last lement of a1, can pointer A do math on pointer B. 
[05:12:59] <vim_fans> Is my thought correct?
[05:13:00] <pragma-> yup, just don't dereference it
[05:13:47] <vim_fans> pragma-: Don't dereference ? why ?
[05:14:20] <vim_fans> you mean *A = *B?
[05:14:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:14:57] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[05:15:49] <nitrix> vim_fans, Consider int buffer[] = {42, 69}; for (int *p = buffer; p != NULL; p++) {}
[05:16:47] <twkm> you can't know where a2 is located.
[05:17:48] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:19:02] <vim_fans> twkm: doesn't the address of the last element of a1 plus 1 is the first element of a2 ?
[05:19:47] <vim_fans> nitrix: so p would equal to null when p point to the next address of 69?
[05:19:49] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:20:03] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[05:20:06] <nitrix> Well, replace NULL with &buffer[2], sorry.
[05:20:25] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[05:21:05] <nitrix> You're allowed to work with the pointer, you can compare it, you can subtract from it, there's all sorts of scenarios where it's useful.
[05:21:19] <nitrix> You simply cannot deference it because you're outside the array.
[05:22:05] <vim_fans> nitrix: yeah,it make sense for me.I get it now.Thanks :D
[05:22:20] <twkm> vim_fans: the compiler might not do the order you think it does, and it might put dead space between them.
[05:22:22] <nitrix> Now, one might be tempted to think that you can just have pointers point anywhere in memory then, as long as you don't dereference them, right? But C is very clear here, only one past the end.
[05:24:52] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[05:25:53] <vim_fans> yeah twkm your explanation unveil concept of pointer in C.very appreciated it.
[05:27:58] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:28:50] *** Joins: ferdna (~ferdna@user/ferdna)
[05:29:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[05:31:43] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:33:01] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[05:33:21] *** Joins: CaCode- (~CaCode@user/cacode)
[05:33:26] *** Joins: Itaru (~DaSH@ro2.flokinet.is)
[05:34:35] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:36:21] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:40:42] <nitrix> vim_fans, In case you're curious, this is a recurring theme in C. Values have representations in memory and not every representations are valid values.
[05:43:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:43:44] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[05:43:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:45:12] <nitrix> vim_fans, Similarly, pointer values (addresses) have representations, but not every representations are valid, so you can't just create values out of thin air.
[05:45:52] <nitrix> vim_fans, A better example of this would be, `bool` which only supports the values `0` and `1`, despite it being at least as large as a byte. What are the other bits for?
[05:46:08] <caze> vim_fans: Better example: int arr[2][3] = { { 1, 2, 3 }, { 4, 5, 6 } }; int *p = &arr[0][3]; this is allowed, but then doing *p = 42; is not.
[05:46:40] <vim_fans> nitrix: I had been told that two pointers can operate subtraction only if they point to the same array.what's going on with my test. please check it out.https://pastebin.com/MBznMJgq
[05:46:46] <twkm> when you can create pointer values at will the results won't be widely portable -- only narrowly.
[05:46:49] <caze> Or even doing int t = *p;
[05:47:36] <nitrix> vim_fans, That's very true. Consider the case where pointers are UUID generated by a database when you store data in it.
[05:47:54] <caze> Even if you can prove that p must point to arr[1][0], you still cannot access that memory, whether for read or write.
[05:48:40] <vim_fans> why this statement p = q-p is not correct in my url example?
[05:48:40] <nitrix> vim_fans, Are you starting to see that subtracting two completely unrelated UUIDs would make no sense? The database would only know how to calculate the "difference", if it also knows what the UUIDs represent.
[05:49:32] <nitrix> Checking your code.
[05:49:58] <caze> vim_fans: Subtracting a pointer from another pointer gives you a pointer?
[05:50:26] <nitrix> In that example, `q` and `p` do belong to the same array though.
[05:50:48] <nitrix> The result would not be a pointer though.
[05:50:55] <caze> But he's trying to assign the result to a pointer.
[05:51:21] <nitrix> Mhm. That part's wrong. And the printf later doesn't make sense either.
[05:51:43] <vim_fans> caze: doesn't pointer is the address? the result of subtraction still is an address?
[05:51:52] <caze> vim_fans: No.
[05:52:35] <caze> vim_fans: p + 2 is q, do you agree?
[05:53:04] <vim_fans> caze: yeah i am agree with it 
[05:53:18] <vim_fans> *(p+2)
[05:53:33] <nitrix> He's asking you to do algebra. Forget C for a second.
[05:53:41] <caze> vim_fans: p + 2 = q <==> p = q - 2 <==> q - p = 2
[05:54:22] <vim_fans> caze: yeah I got it now. I totally understand it by your algebra
[05:54:47] <danielcamiel> q-p
[05:54:48] <danielcamiel> 'U'
[05:55:32] <nitrix> Pointer arithmetic works in a similar way. Pointer + integer = pointer. Pointer - integer = pointer. Pointer - pointer = integer.
[05:56:03] <caze> vim_fans: What is pointer * pointer?
[05:56:45] <vim_fans> caze:  the address of the pointer?
[05:57:07] <NRK[m]> x_x
[05:57:37] <NRK[m]> is multiplying pointers even allowed?
[05:57:38] <caze> vim_fans: It's not defined, and the operation is a syntax error.
[05:57:44] <twkm> a constraint violation.  one cannot meaningfully multiply p by q.
[05:59:09] <nitrix> This highlights an important aspect of pointers. Pointers aren't integers. The arithmetic that you do with the + and - operators are special to pointers and mean something completely different than for integers.
[05:59:11] <vim_fans> caze: sorry i thought it was assignment statement. multiply is not allowed between pointers. right?
[05:59:55] <caze> vim_fans: Correct.
[05:59:55] *** Joins: Dotz0cat (~Dotz0cat@h102.35.188.173.dynamic.ip.windstream.net)
[06:00:28] * pragma- considers p * 1
[06:00:45] <pragma-> to nullify a pointer, p * 0.  /me nods
[06:00:54] <twkm> identity theft!
[06:01:18] <vim_fans> nitrix: when + and - operator with pointer , it would add or sub multiple bytes.But in integer case, it just add or sub one
[06:02:29] <nitrix> vim_fans, If you print the pointer with %p you'd see the address increase by the size of the type that the pointer points at, yes, but it's still not a good idea to learn of them as numbers, even though in practice they are.
[06:03:14] <pragma-> vim_fans: no, pointer arithmetic works with the sizes of the pointer type
[06:03:34] <nitrix> It's better to think of them as handles/descriptors. Only the implementation knows what the difference between two handles means.
[06:03:45] <nitrix> And only if the handles happens to refer to the same object will it know.
[06:04:52] <nitrix> So all you have are handles, and sometimes offsets (difference between handles, or that you add to handles).
[06:05:11] *** Quits: Dotz0cat (~Dotz0cat@h102.35.188.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[06:05:50] *** Joins: Dotz0cat (~Dotz0cat@h87.47.22.98.static.ip.windstream.net)
[06:06:52] <nitrix> Of course we prefer to call them pointers, but it's a much better intuition that'll prevent you from doing illegal things.
[06:07:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Remote host closed the connection)
[06:09:40] <nitrix> The more opaque you treat them, the better.
[06:10:11] <caze> Think of them as fruits.
[06:10:36] *** amosbird- is now known as amosbird
[06:10:46] <caze> orange + 1 = apple, apple - orange = 1, apple - 1 = orange
[06:11:23] <pragma-> You're not supposed to compare apples and oranges!
[06:12:15] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:12:38] <nitrix> It's a cute analogy. I'm afraid people would only think of the "not comparing apples with oranges" idiom and remember the wrong lesson from it.
[06:12:41] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:94b6:ca19:7ecd:8c39)
[06:13:16] <pragma-> That's why we have cars. 
[06:13:28] <nitrix> It gets the point across that the two pointers are unrelated, but it's a little slippery.
[06:13:39] <pragma-> Everybody loves a car analogy.
[06:13:45] <nitrix> pragma-, Car handles! There we go. Fixed it.
[06:14:04] <nitrix> Knew I was missing something.
[06:15:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:15:53] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[06:18:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[06:18:20] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[06:19:13] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:19:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:20:11] *** Joins: teepee (~teepee@openscad/teepee)
[06:21:25] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[06:22:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[06:22:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:25:44] *** Quits: Guest4184 (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[06:27:25] *** Quits: csjp (~csjp@user/csjp) (Ping timeout: 250 seconds)
[06:29:11] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[06:34:26] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 252 seconds)
[06:38:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[06:40:12] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:40:24] <danielcamiel> go on candide, it's time to digivolve!
[06:42:21] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:48:23] <vim_fans> nitrix: one more question here. The book has said that "subtracting two pointers to members of the same array is valid". But when i subtract two pointers to element of different arrays, it's still work
[06:48:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[06:49:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:49:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[06:50:00] <pnbeast> vim_fans, C doesn't have many guard rails to keep you away from the edge of the road.  If you want to drive into the ditch, C will let you.  You might be stuck in the ditch once you drive there, though.
[06:51:14] <vim_fans> pnbeast: oh,okay.It made sense 
[06:52:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:52:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:52:12] *** Joins: wroathe (~wroathe@user/wroathe)
[06:52:19] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:52:22] *** Quits: nostar__ (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:52:41] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:54:25] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:57:30] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[06:57:57] <caze> vim_fans: "Works" does not mean correct.
[06:58:38] <vim_fans> caze: yeah you are right :P 
[06:59:16] <caze> vim_fans: There is behavior for which a guarantee is provided that it must always behave the same way, and then there is behavior which might currently behave as you expect, but there is no guarantee.
[07:00:37] <vim_fans> caze: your logic is very clearly,But it made sense for me.With your help,I found the pointer is so attractive to me right now.
[07:00:49] <vim_fans> I really into this concept now :D
[07:01:38] <vim_fans> typo, And not But in the last sentence 
[07:02:50] *** Joins: gear (~clarity@36.79.208.76)
[07:09:09] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[07:10:00] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[07:12:06] *** Quits: gitargy (~gitargy@76.78.94.79) (Remote host closed the connection)
[07:16:03] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[07:16:29] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[07:16:45] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[07:18:52] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[07:21:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:23:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:25:11] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:33:17] *** Quits: gear (~clarity@36.79.208.76) (Ping timeout: 252 seconds)
[07:33:35] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[07:35:16] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:56] *** Joins: rgrinberg (~textual@187.223.250.159)
[07:44:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[07:47:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:48:30] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[07:49:06] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[07:50:55] *** Joins: rgrinberg (~textual@187.223.250.159)
[07:53:05] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[07:55:03] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[08:01:55] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[08:03:41] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[08:09:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:12:35] <floatcomplex> BtbN: re: line buffered atomicity, is the answer "no, fprintf can't have that guarantee" or "no, fprintf can't have that guarantee but neither can anything else so you might as well use it"
[08:13:19] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[08:14:45] *** Joins: missogra (~missogra@dynamic-077-006-243-059.77.6.pool.telefonica.de)
[08:21:20] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[08:23:51] *** Joins: earnest (~earnest@user/earnestly)
[08:24:04] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:24:20] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[08:24:26] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 252 seconds)
[08:24:26] *** jmiehe1 is now known as jmiehe
[08:25:34] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[08:25:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[08:26:05] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[08:26:50] *** Joins: seninha (~seninha@user/seninha)
[08:30:04] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[08:31:17] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:32:34] *** Joins: mkv (~znc@ubuntu/member/m4v)
[08:32:55] *** Joins: uidops (~uidops@89.41.15.97)
[08:33:00] *** Parts: uidops (~uidops@89.41.15.97) ()
[08:33:10] *** Joins: rgrinberg (~textual@187.223.144.204)
[08:33:43] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[08:33:43] *** mkv is now known as m4v
[08:39:49] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[08:40:11] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:44:25] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Ping timeout: 252 seconds)
[08:49:11] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[08:53:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[08:54:41] <begriffs_> What's the standard name for a value that marks a place? Like \0 in strings. Something like "signifier"
[08:55:00] <floatcomplex> sentinel
[08:55:12] <begriffs_> Thank you! Was on the tip of my tongue
[08:56:41] <nitrix> Also known as the null terminator specifically for strings.
[08:57:01] *** Joins: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net)
[09:00:15] *** Quits: Matt|home (~matt@adsl-74-233-58-226.mia.bellsouth.net) (Ping timeout: 265 seconds)
[09:02:20] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[09:02:41] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[09:03:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[09:07:05] *** Quits: alch (~alch@151.82.161.139) (Read error: Connection reset by peer)
[09:11:08] *** Joins: alch (~alch@151.82.187.162)
[09:12:06] *** Joins: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net)
[09:15:35] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[09:16:19] *** Quits: Jong (~Jong@2620:10d:c090:400::5:d0b7) (Ping timeout: 252 seconds)
[09:19:27] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[09:20:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:20:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:20:05] *** Joins: wroathe (~wroathe@user/wroathe)
[09:23:01] *** Quits: missogra (~missogra@dynamic-077-006-243-059.77.6.pool.telefonica.de) (Ping timeout: 256 seconds)
[09:25:13] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:32:10] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:32:20] *** Joins: rgrinberg (~textual@187.223.144.204)
[09:33:13] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[09:34:02] *** Joins: travankor (travankor@user/travankor)
[09:41:57] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[09:45:29] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[09:47:11] <caze> canary value
[09:50:26] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[09:52:28] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[09:53:48] *** Parts: tpefreedom (~tpefreedo@user/tpefreedom) (Leaving)
[09:53:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:56:29] <floatcomplex> corvid currency
[09:59:51] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[10:00:07] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:03:36] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:04:04] *** Quits: pnbeast (~pnbeast@2601:140:4200:b500::1) (Quit: WeeChat 2.7.1)
[10:04:43] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[10:07:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:09:15] *** Joins: seninha (~seninha@user/seninha)
[10:09:38] *** Joins: madder_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[10:10:01] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Read error: Connection reset by peer)
[10:10:18] *** Quits: madder_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Remote host closed the connection)
[10:11:40] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[10:19:41] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:23:55] *** Joins: missogra (~missogra@dynamic-077-000-220-185.77.0.pool.telefonica.de)
[10:26:58] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[10:31:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[10:33:31] *** Joins: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au)
[10:33:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:34:53] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[10:37:32] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[10:39:27] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[10:39:33] *** Quits: missogra (~missogra@dynamic-077-000-220-185.77.0.pool.telefonica.de) (Quit: Leaving)
[10:41:03] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:44:19] *** Quits: VincentValentine (~VincentVa@79.126.87.86) (Ping timeout: 252 seconds)
[10:44:27] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:46:24] <vim_fans> hi,there. If i assign an array to a pointer,then the pointer would point to the first element of that array.But when you printf("%s ",p) it would automatically marched along the array?I mean that i don't need to write loop to print it out 
[10:46:53] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[10:47:34] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:50:48] <Wulf> vim_fans: Hello. Yes, printf implements this very loop.
[10:52:25] *** Joins: kdc (~kdc@196.211.197.159)
[10:53:06] <vim_fans> Wulf: it's really an awesome implementation 
[10:53:19] *** Joins: rgrinberg (~textual@187.223.248.37)
[10:54:20] <vim_fans> Wulf: by the way,what's time is it in your timezone?
[10:54:43] <vim_fans> lots of people here seems like went to bed already :P
[10:54:45] <Wulf> vim_fans: /ctcp Wulf time
[10:56:02] <vim_fans> Wulf: i never knew this command before.Thanks :D
[10:56:19] <vim_fans> what does ctcp stands for?
[10:56:30] <Wulf> "client to client protocol"
[10:56:45] <vim_fans> Got it
[10:56:48] <vim_fans> thx
[10:57:28] <vim_fans> are not living in western country
[10:57:46] <vim_fans> Eruope?
[10:57:54] <vim_fans> some country like Russian?
[10:58:04] <vim_fans> russia
[10:58:59] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 252 seconds)
[10:59:10] *** Joins: doofenshmirtz (~farawayas@103.160.128.7)
[10:59:56] <Wulf> vim_fans: Russia is UTC+03 I think. I live in UTC+01, i.e. Western Europe or Midwest Africa.
[10:59:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:00:50] *** Joins: iddev5 (~iddev5@157.41.35.183)
[11:01:53] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[11:03:15] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:03:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:03:34] *** Joins: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::)
[11:04:27] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:05:59] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:06:56] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[11:10:23] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[11:11:13] *** Joins: Telvana (~capo@user/telvana)
[11:12:26] *** Joins: rgrinberg (~textual@187.223.248.37)
[11:12:30] *** Joins: zlg (~zlg@user/zlg)
[11:12:31] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[11:18:07] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[11:18:28] *** Joins: pony (sid524992@smol/hors)
[11:19:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[11:20:59] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[11:21:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[11:21:00] *** Joins: wroathe (~wroathe@user/wroathe)
[11:24:39] *** Joins: ^tinyweasel^ (~weasel@user/tinyweasel/x-0495158)
[11:25:02] *** Quits: iddev5 (~iddev5@157.41.35.183) (Quit: Client closed)
[11:25:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[11:28:49] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[11:30:16] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:30:34] <asen> in utc+8 ,now,it is afternoon
[11:34:09] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[11:35:00] *** Joins: Telvana (~capo@user/telvana)
[11:37:16] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:37:33] *** Joins: meator (~meator@user/meator)
[11:39:21] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[11:39:31] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:42:42] *** Joins: quartz (~quartz@user/quartz)
[11:42:55] *** Joins: Burgundy (~yomon@79.115.213.171)
[11:43:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:45:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:53:14] *** Joins: lleo (~leo@89-200-41-86.mobile.kpn.net)
[11:53:59] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[11:54:03] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[11:54:15] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[11:57:05] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:57:33] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[11:59:21] *** Quits: lleo (~leo@89-200-41-86.mobile.kpn.net) (Ping timeout: 256 seconds)
[12:00:27] *** Joins: lleo (~leo@89-200-41-86.mobile.kpn.net)
[12:09:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:10:33] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[12:10:52] *** Joins: mrig (~AdiIRC@user/mrig)
[12:12:10] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr)
[12:12:41] *** Quits: meator (~meator@user/meator) (Ping timeout: 252 seconds)
[12:15:20] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:20:34] *** Joins: lesihctej (jetchisel@user/jetchisel)
[12:22:02] *** Joins: mahmutov (~mahmutov@37.155.69.128)
[12:24:25] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:94b6:ca19:7ecd:8c39) (Ping timeout: 252 seconds)
[12:26:49] *** Joins: pulse (~pulse@user/pulse)
[12:28:20] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:31:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:31:43] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[12:34:54] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:36:15] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:43:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[12:44:36] *** Quits: nabaiste^ (~nabaiste@68.101.58.90) (Remote host closed the connection)
[12:45:44] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Remote host closed the connection)
[12:48:45] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:50:23] *** Joins: MiLia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[12:51:14] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[12:52:50] *** MiLia[m] is now known as milia[m]
[12:52:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:53:54] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:54:17] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:56:20] *** Joins: QMaury (~QMaury@S0106f0f249623d23.vf.shawcable.net)
[12:56:24] <QMaury> oi
[12:56:36] <QMaury> how goes it
[12:57:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:58:58] <QMaury> i'm currently learning C and feeling pretty discouraged
[12:59:18] <veltas> What's wrong QMaury?
[12:59:21] <QMaury> can anyone link some learning resources? (other than K&R)
[12:59:29] <veltas> I guess we're moral support in here too
[12:59:53] <QMaury> eh just ran out of ideas i guess
[13:00:06] <veltas> Don't be discouraged if you find K&R hard, what is hard about it?
[13:00:13] <veltas> Some of the exercises are indeed hard
[13:00:29] <veltas> And the terminology they use might be a bit unfamliar if you're used to newer languages
[13:01:18] <QMaury> i think the K&R is fine for the most part, I just think that I need some more 'modern' resources
[13:01:39] <veltas> The C primer is often recommended
[13:02:21] <veltas> I think it has at least C99 stuff?
[13:02:59] <QMaury> hmm i've never heard of it
[13:03:08] <QMaury> I'll check it out
[13:03:10] <veltas> C Primer?
[13:03:54] <QMaury> yea
[13:04:17] <veltas> But I will say I don't think you need a more modern resource. I could be wrong but C hasn't changed much in practice since K&R, and you can always learn new syntax/features separately
[13:04:23] *** Quits: kurahaupo (~kurahaupo@pa49-180-186-164.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[13:04:50] <veltas> The only thing K&R regularly does that needs to be addressed is declaring/defining functions that take no arguments as e.g. "int main()"
[13:05:06] <quartz> dave0: You there bro?
[13:05:13] <milia[m]> <QMaury> "can anyone link some learning..." <- hello all. While I find K&R a classic read, that one should perhaps start with, I'm currently refreshing/extending my C knowledge with Samuel P. Harbison, Guy L. Steele: C A Reference Manual 5th Edition  book.
[13:05:26] *** Joins: aradesh (~aradesh@user/aradesh)
[13:05:47] <veltas> The proper way is to write "int main(void)" because it gives it a prototyped function type (i.e. will get errors if you give extra/wrong arguments to it)
[13:05:49] *** Joins: pehaef (~pehaef@user/pehaef)
[13:05:57] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[13:06:11] <veltas> Of course this doesn't matter so much for main(), but it does for other 0-argument functions
[13:06:18] <veltas> (because you're not going to call main())
[13:06:29] <QMaury> right
[13:06:36] <QMaury> I always just did main()
[13:06:54] <veltas> But in upcoming C standard I don't think you can even write main(), unprototyped functions are being removed
[13:06:54] *** Joins: pehaef (~pehaef@user/pehaef)
[13:07:01] <veltas> I think?
[13:07:17] <QMaury> idk about any of that
[13:07:18] *** Quits: alch (~alch@151.82.187.162) (Read error: Connection reset by peer)
[13:07:56] <veltas> That's the main thing in K&R that's outdated, everything else is pretty much what we still do. And there's not really any danger of being 'tarnished' by the old ways
[13:08:31] <dave0> hi quartz 
[13:08:37] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[13:08:41] <pony> what's 'modern c' like
[13:08:48] <pony> the book
[13:08:53] <quartz> dave0: Hey, just wanted to thank you again for your help
[13:09:00] <dave0> quartz: ah no worries mate
[13:09:06] <dave0> quartz: did you pass?
[13:09:11] <quartz> dave0: I got it to work finally. I had to write a seperate while loop to get past the header lines
[13:09:19] *** Quits: QMaury (~QMaury@S0106f0f249623d23.vf.shawcable.net) (Quit: WeeChat 3.3)
[13:09:24] <dave0> quartz: awesome
[13:09:32] <quartz> dave0: Well, I tested it several times, compared the output with wget using cmp
[13:09:34] <quartz> So yeah
[13:09:44] <dave0> quartz: does it work with a jpeg?
[13:10:05] <quartz> dave0: Up
[13:10:08] <quartz> Yup*
[13:10:11] <quartz> https://bpa.st/U2UQ
[13:10:15] <quartz> That's the finished product
[13:11:07] <quartz> What I didn't get was the fact that the file descriptor is just a stream of data that can be started and stopped when you want
[13:11:19] <quartz> Thus, when you stop it mid stream, it will continue from where it stopped.
[13:11:29] *** Joins: kurahaupo (~kurahaupo@pa49-179-137-99.pa.nsw.optusnet.com.au)
[13:11:34] *** Joins: alch (~alch@151.82.136.96)
[13:11:36] <dave0> quartz: looks good
[13:11:37] <quartz> I was so confused between shoving all this stuff into a buffer, and reading from the buffer
[13:11:37] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:11:38] <dave0> quartz: A+
[13:12:06] <quartz> I mean, I almost had it :)
[13:12:26] <quartz> dave0: Thanks again.
[13:12:42] <dave0> quartz: no worries :-)
[13:13:12] <pehaef> quartz: so the former instructor in me wants to immediately ask why 1000 is a good buffer length
[13:13:30] <quartz> pehaef: Yeah good point
[13:13:39] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:13:48] <quartz> Should I have added another 0?
[13:14:06] <pehaef> then I would ask why 10000 is a good buffer length :-D
[13:14:30] <dave0> it's not testing his ability to read arbitrary length lines
[13:14:54] <quartz> pehaef: I really only need the buffer to read in a simple HTTP reply from a server
[13:15:04] <quartz> But I get your point
[13:16:34] <pehaef> an answer I respect tends to be "well, there's no useful standard for a max so I have to pick one if I don't want to go nuts; I picked 1000 because when I tested it I rarely saw anything over 200 bytes, so with a safety margin... and besides, I guard against overflow so the worst thing that will happen is SORRY CAN'T READ THAT so we're good"
[13:17:42] <quartz> pehaef: That's a good answer, I'll be sure to write that down if it comes up on my exam :)
[13:17:53] <pehaef> :-D
[13:18:23] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:18:29] <pehaef> I had a grad student once who used a buffer of 17 MB; I asked why; he said he doesn't know; he got a B
[13:19:07] <quartz> pehaef: What do you teach? CS?
[13:19:39] *** Joins: mhw0 (~mhw0@gateway/tor-sasl/mhw0)
[13:20:34] <quartz> I mean, maybe he just liked the number 17 :)
[13:20:43] <quartz> Lucky number
[13:21:08] <pehaef> quartz: used to, these days I just hack code; don't miss it right now but might go back some day
[13:21:42] <quartz> pehaef: hack code? they pay you to do that?
[13:22:39] <pehaef> quartz: I am old so for me "hack" doesn't mean "break" or "crack" or whatnot, just "develop fun software" or whatnot
[13:23:59] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:24:13] *** Joins: CaCode_ (~CaCode@user/cacode)
[13:26:01] <quartz> pehaef: I feel like most people wouldn't miss teaching a bunch of students who probably don't care about what you're saying.
[13:26:08] <quartz> Except for me, I like CS and C :)
[13:26:18] <quartz> I just get angry really quick when my stuff does not work and it *should*
[13:26:41] *** Quits: CaCode- (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[13:28:30] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[13:29:59] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:30:07] <quartz> Oh, maybe what I said was offensive? I didn't mean for it to sound that way.
[13:30:45] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:30:57] *** Parts: mhw0 (~mhw0@gateway/tor-sasl/mhw0) (WeeChat 3.3)
[13:31:54] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:35:11] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:36:26] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:36:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[13:37:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:37:23] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:37:36] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[13:37:45] *** Lord_of_Life_ is now known as Lord_of_Life
[13:39:03] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:40:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:42:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:43:32] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:94b6:ca19:7ecd:8c39)
[13:45:39] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:47:23] *** Quits: kurfen (~kurfen@lfbn-ann-1-320-249.w86-200.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[13:49:56] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[13:52:04] *** Joins: kurfen (~kurfen@160.238.38.225)
[13:55:30] *** Quits: rahl (~rahl@102.114.118.74) (Quit: Reconnecting)
[13:55:44] *** Joins: rahl (~rahl@102.114.118.74)
[13:58:56] *** Quits: lleo (~leo@89-200-41-86.mobile.kpn.net) (Quit: 2+2=4: covid attack!)
[13:59:14] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:07:25] *** Quits: kurahaupo (~kurahaupo@pa49-179-137-99.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[14:07:47] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[14:08:21] *** Joins: loganlee (~Thunderbi@user/loganlee)
[14:16:29] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[14:18:22] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[14:20:16] *** Joins: FragByte (~christian@user/fragbyte)
[14:20:59] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.11)
[14:21:53] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:23:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Ping timeout: 252 seconds)
[14:24:10] *** Joins: CaCode- (~CaCode@user/cacode)
[14:26:41] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[14:28:50] *** Quits: heftig (heftig@archlinux/developer/heftig) (Quit: heftig)
[14:29:45] *** Joins: heftig (heftig@archlinux/developer/heftig)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:36:03] *** Joins: kurahaupo (~kurahaupo@pa49-179-137-99.pa.nsw.optusnet.com.au)
[14:40:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:41:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[14:42:19] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[14:43:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:45:02] *** Quits: kurahaupo (~kurahaupo@pa49-179-137-99.pa.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[14:47:47] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 252 seconds)
[14:48:13] *** Joins: random-nick (~random-ni@87.116.165.83)
[14:49:05] *** kfv_ is now known as kfv
[14:50:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:53:02] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:53:58] *** Joins: earnest (~earnest@user/earnestly)
[14:55:29] *** Quits: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 252 seconds)
[14:57:36] *** Quits: CaCode- (~CaCode@user/cacode) (Quit: Leaving)
[14:58:04] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[14:58:57] *** Joins: meator (~meator@user/meator)
[14:59:55] *** Joins: X-Scale` (~ARM@92.250.98.59)
[15:02:17] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:02:28] *** Quits: X-Scale (~ARM@25.55.43.5.rev.vodafone.pt) (Ping timeout: 260 seconds)
[15:02:28] *** X-Scale` is now known as X-Scale
[15:04:46] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[15:05:11] *** Parts: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Leaving)
[15:05:39] *** Quits: doofenshmirtz (~farawayas@103.160.128.7) (Remote host closed the connection)
[15:05:52] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[15:07:32] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:08:41] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[15:10:58] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:11:27] *** Quits: mahmutov (~mahmutov@37.155.69.128) (Ping timeout: 256 seconds)
[15:12:26] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[15:12:30] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:14:33] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:14:51] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[15:14:53] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Remote host closed the connection)
[15:15:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:18:15] *** Quits: AmR (~AmREiSa@156.199.223.24) (Ping timeout: 256 seconds)
[15:22:52] *** Quits: phox (~phox@c-98-247-195-44.hsd1.wa.comcast.net) (Quit: Lost terminal)
[15:24:58] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:27:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:30:04] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:30:44] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:31:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[15:31:42] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:33:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:01] *** Quits: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com) (Read error: Connection reset by peer)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:18] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:41:06] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[15:41:11] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:41:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:41:48] *** Joins: nrl^ (~nrl@68.101.58.90)
[15:42:00] *** Joins: Falconer_ (~ronnyma@227.84-48-191.nextgentel.com)
[15:42:02] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Ping timeout: 240 seconds)
[15:49:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[15:49:48] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:50:42] *** immibis_ is now known as immibis
[15:50:46] *** Joins: meator (~meator@user/meator)
[15:51:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:59:51] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[16:00:59] *** Joins: jjido (~Denis@90.213.58.125)
[16:01:36] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679)
[16:01:48] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:d9ba:db19:4ac0:8420) (Read error: Connection reset by peer)
[16:01:58] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:edf3:f9dc:62b5:746b)
[16:02:02] *** Joins: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[16:02:23] <terminalpusher> Am I misunderstanding something or shouldn't this program immediately terminate when either 1. the terminal is resized or 2. when there's input in the terminal? https://paste.gg/p/anonymous/37c77474ee1b41a8954f79cd3245b1b4
[16:02:45] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Ping timeout: 268 seconds)
[16:03:28] <terminalpusher> It does not terminate when I resize the terminal
[16:03:33] <terminalpusher> Only when I give it input
[16:08:11] *** Quits: alch (~alch@151.82.136.96) (Ping timeout: 256 seconds)
[16:08:13] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.3)
[16:09:11] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[16:09:33] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:10:28] <terminalpusher> To clarify my goal: I want to block until either stdin has input or when SIGWINCH happened
[16:16:27] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[16:16:42] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[16:16:47] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:17:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:23:25] *** Joins: alch (~alch@151.82.222.143)
[16:24:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:30:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[16:33:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:37:39] *** Joins: node1 (~node1@user/node1)
[16:38:11] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:38:40] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:39:53] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[16:40:14] *** Joins: meator (~meator@user/meator)
[16:41:00] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679) (Ping timeout: 256 seconds)
[16:43:11] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[16:43:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:43:30] *** Joins: meator (~meator@user/meator)
[16:46:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 252 seconds)
[16:47:42] *** Joins: Kev_ (~Kev@2a01cb0400149f00d1cae1b430cfeb09.ipv6.abo.wanadoo.fr)
[16:53:18] *** Joins: plastico (~plastico@neomutt/plastico)
[17:00:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:04:27] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[17:04:43] *** Joins: serbest (~serbest@user/serbest)
[17:06:02] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362)
[17:10:31] *** Joins: larry87 (~quassel@2601:2c7:4280:17a0:7225:e1e1:619f:bdc0)
[17:12:31] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:12:34] *** Quits: larry87 (~quassel@2601:2c7:4280:17a0:7225:e1e1:619f:bdc0) (Client Quit)
[17:18:03] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[17:18:19] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:22:31] *** Quits: serbest (~serbest@user/serbest) (Ping timeout: 252 seconds)
[17:27:30] *** Joins: Klinda (~superleag@user/klinda)
[17:30:35] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 252 seconds)
[17:30:45] *** Joins: seninha (~seninha@user/seninha)
[17:30:52] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[17:32:25] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[17:32:29] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:39:16] *** Joins: moose` (~moose@user/moose)
[17:39:28] *** Joins: Xgc_ (~Xgc@user/xgc)
[17:40:08] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[17:42:54] *** Quits: Xgc (~Xgc@user/xgc) (Ping timeout: 265 seconds)
[17:45:01] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[17:48:00] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[17:51:32] *** Joins: arinov (~arinov@178.240.181.140)
[17:58:04] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[17:58:21] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[18:03:30] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:07:01] *** Joins: tradar (~tradar@user/tradar)
[18:10:29] *** Joins: meator (~meator@user/meator)
[18:10:40] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[18:11:09] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[18:12:17] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[18:12:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[18:15:55] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[18:18:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:20:12] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:21:31] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[18:27:15] *** Joins: ferdna (~ferdna@user/ferdna)
[18:28:04] *** Joins: arinov (~arinov@178.240.181.140)
[18:31:23] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[18:33:41] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[18:44:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[18:45:36] *** Joins: brad_mssw (~bhouse@172.110.173.17)
[18:46:29] *** Joins: Jenmin (~Jenmin@111.225.66.251)
[18:48:43] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:52:02] *** Joins: superboot (~agentgasm@user/superboot)
[18:53:01] *** Quits: Jenmin (~Jenmin@111.225.66.251) (Ping timeout: 256 seconds)
[18:54:47] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[18:54:53] *** Joins: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf)
[18:55:04] *** boreas is now known as heiner
[18:56:19] *** Quits: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf) (Client Quit)
[18:57:00] *** Joins: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf)
[18:59:08] *** Quits: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf) (Client Quit)
[19:00:05] *** Joins: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf)
[19:01:10] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:01:17] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:02:40] *** Quits: Jenmin (~Jenmin@2409:8904:5390:b5f5:d63e:364d:815d:29bf) (Client Quit)
[19:03:25] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[19:04:08] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[19:04:23] *** Joins: de-facto (~de-facto@user/de-facto)
[19:05:35] *** Joins: monkey_ (~user@190.104.116.153)
[19:07:44] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:08:03] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:09:53] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[19:15:46] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:18:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[19:20:11] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:20:40] *** Joins: bindu (~bindu@user/bindu)
[19:22:28] *** Joins: mahmutov (~mahmutov@37.155.69.128)
[19:22:52] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:22:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:22:53] *** Joins: wroathe (~wroathe@user/wroathe)
[19:24:54] *** Joins: dohtem (uid524096@user/dohtem)
[19:29:12] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[19:32:19] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[19:34:07] *** Joins: Senicar3 (~Senicar@gateway/tor-sasl/senicar)
[19:36:24] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 276 seconds)
[19:36:25] *** Senicar3 is now known as Senicar
[19:37:35] *** Joins: tolog (~tolog@89.36.78.90)
[19:38:08] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Remote host closed the connection)
[19:38:26] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[19:39:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:40:27] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:40:53] *** Quits: tolog (~tolog@89.36.78.90) (Remote host closed the connection)
[19:43:37] *** Joins: quartz (~quartz@user/quartz)
[19:44:51] *** Quits: kish` (~sid742412@user/aqua) (Ping timeout: 276 seconds)
[19:45:42] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:49:10] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[19:49:27] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:50:33] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[19:55:56] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:55:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:55:56] *** Joins: wroathe (~wroathe@user/wroathe)
[19:57:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:59:58] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:00:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:02:06] *** Joins: lightningwright (~lightning@user/lightningwright)
[20:02:07] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:02:35] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[20:03:50] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[20:05:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[20:06:50] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[20:09:31] *** Quits: arinov (~arinov@178.240.181.140) (Ping timeout: 256 seconds)
[20:11:23] *** Joins: arinov (~arinov@31.142.57.149)
[20:12:20] <the_lanetly_052_> hi folks, should I use packed attr in nested struct if main struct has packed e.g: https://bpa.st/A47A
[20:15:47] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:16:42] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[20:17:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[20:19:50] *** Joins: pert (~pert@fsf/member/pert)
[20:20:51] *** Quits: brad_mssw (~bhouse@172.110.173.17) (Ping timeout: 256 seconds)
[20:21:23] *** Quits: alch (~alch@151.82.222.143) (Read error: Connection reset by peer)
[20:22:11] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[20:22:33] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 252 seconds)
[20:22:54] *** Joins: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk)
[20:24:42] *** Joins: arinov (~arinov@31.142.57.149)
[20:25:45] *** Joins: alch (~alch@151.82.155.222)
[20:26:28] *** Joins: brad_mssw (~bhouse@172.110.173.17)
[20:27:17] *** Joins: lightningwright_ (lightningw@user/lightningwright)
[20:28:11] *** Joins: shivesh (~shivesh@user/shivesh)
[20:29:44] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:29:55] *** Quits: lightningwright (~lightning@user/lightningwright) (Ping timeout: 256 seconds)
[20:30:20] *** Quits: brad_mssw (~bhouse@172.110.173.17) (Client Quit)
[20:31:22] *** Quits: lightningwright_ (lightningw@user/lightningwright) (Client Quit)
[20:32:49] *** Quits: arinov (~arinov@31.142.57.149) (Ping timeout: 256 seconds)
[20:33:18] <sebag> Does anyone know how to obtain KEY_A1, KEY_C3, KEY_B2 (i.e. numpad keys recognized as distinct from both digits and from their meta meaning (like Home, PageUp, etc.)) from ncurses/wgetch?
[20:36:47] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:edf3:f9dc:62b5:746b) (Read error: Connection reset by peer)
[20:36:48] *** Joins: rgrinberg (~textual@187.223.248.37)
[20:40:01] *** Joins: arinov (~arinov@212.156.215.30)
[20:40:51] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:42:08] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:42:24] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[20:48:54] *** Joins: fmsd (~no@105.157.162.151)
[20:49:59] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:94b6:ca19:7ecd:8c39) (Quit: simon323)
[20:52:42] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[20:54:21] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.11) (Ping timeout: 256 seconds)
[20:56:26] *** Joins: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:58:05] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[21:00:09] *** Quits: gabriel_sevecek (~gabriel@188-167-229-200.dynamic.chello.sk) (Quit: WeeChat 3.3)
[21:00:31] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[21:00:53] *** Joins: Macuser (~Macuser@2607:b400:24:0:f57e:fa8:c6ee:eccc)
[21:02:59] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[21:05:36] *** Joins: Charadon (~Charadon@155.138.164.183)
[21:05:59] <aniruddha> trying to create a program that check if the child process has terminated or not and if yes then it will re spawn the child 
[21:05:59] <aniruddha> I tried this way https://termbin.com/p0yn 
[21:05:59] <aniruddha> any suggestion? :) 
[21:06:11] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr) (Ping timeout: 256 seconds)
[21:06:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:07:22] *** Joins: jjido (~Denis@90.213.58.125)
[21:10:11] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[21:10:46] * APic grins magically.
[21:11:26] *** Joins: Akuli (~Akuli@82-203-165-50.bb.dnainternet.fi)
[21:11:51] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[21:13:46] *** Joins: node1 (~node1@user/node1)
[21:14:42] *** Joins: monkey_ (~user@190.104.116.153)
[21:14:49] <ioxzev1z> aniruddha, you only check one time then end the program, do you not want a while(1) { check(); if(terminated) { respawn(); } } ?
[21:15:42] *** Joins: AmR (~AmREiSa@156.199.223.24)
[21:15:52] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My Mac Mini has gone to sleep. ZZZzzzâ€¦)
[21:16:45] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr)
[21:18:12] *** Joins: tolog (~tolog@89.36.78.90)
[21:19:00] <aniruddha> ioxzev1z: Then I have to include all the checking stuff inside a while and do the `pid_t result = waitpid(pid, &status, WNOHANG);` inside that and then create the new child right?
[21:19:02] *** Joins: Betal (~Betal@user/betal)
[21:20:32] <ioxzev1z> Assuming you want to always respawn when the process quits, yes. If you only ever have a single subprocess then exit the program you don't need a loop
[21:21:11] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:22:12] <ioxzev1z> while(1) { spawn_process(); wait_for_sub_end(); if(process_ended()) { respawn_new() } }
[21:22:16] <ioxzev1z> Something like that
[21:22:56] <ioxzev1z> actually that if can just be if(process_ended() { continue(); } such that you then restart at the spawn_process() call
[21:23:08] <ioxzev1z> Uh, s/continue()/continue;)
[21:24:56] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: ttyl)
[21:25:12] *** Joins: halabund (~halabund@192.55.244.3)
[21:26:13] <halabund> I need to iterate through two large integer vectors of the same size. Would there be a performance penalty to representing them as two separate arrays vs having a single array of a struct that bundles two integers together?
[21:26:35] <aniruddha> ioxzev1z: ok thanks! :D
[21:26:43] <halabund> How does caching in the CPU work? Can it only cache one memory region at a time, or also multiple ones?
[21:27:13] <halabund> I know one of the answers will be to benchmark it, and I am doing it, but the results are a bit inconsistent, and I'm not sure if I can draw general conclusions from them.
[21:27:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:27:41] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[21:27:45] *** Joins: kurfen_ (~kurfen@160.238.38.230)
[21:28:17] *** Quits: kurfen (~kurfen@160.238.38.225) (Ping timeout: 256 seconds)
[21:29:32] *** Joins: paravida (~myChateau@user/paravida)
[21:30:37] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[21:31:03] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[21:31:14] <dave0> halabund: could even use an array   int vector[large][2];
[21:32:48] <halabund> What I mean is that it is well known that if a square matrix is stored in row-wise order, iterating it through by rows is faster than doing it by columns. This is due to caching effects.
[21:33:14] <halabund> Now suppose the matrix is n-by-2, and iteration is row-wise. Is there a benefit to storing it row-wise vs column-wise?
[21:33:46] <dave0> keeping things close together is usually a win
[21:34:00] <halabund> The difference to the n-by-n case is that now we deal with two columns only. Can the CPU cache two separate memory regions at the same time?
[21:34:59] <halabund> I wrote a test program where I iterate through one long vector vs iterating through two half-size vectors concurrently. If optimization is turned off, the latter is 2x faster (surprisingly). With optimization, the timings are identical. 
[21:35:11] <halabund> This I'm not sure if in this case it really helps to keep things closer.
[21:35:35] <halabund> But I don't think my naive benchmarks is representative of all real-world scenarios ... that's why I'm asking here
[21:35:49] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[21:39:11] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[21:41:45] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 252 seconds)
[21:42:07] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 252 seconds)
[21:42:46] *** Joins: aradesh (~aradesh@user/aradesh)
[21:42:49] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:43:35] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:1896:d1:b80d:19e0)
[21:44:07] *** Joins: shivesh (~shivesh@user/shivesh)
[21:45:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[21:46:20] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:47:22] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:48:56] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 260 seconds)
[21:49:50] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:50:17] *** Joins: cousteau (~cousteau@user/cousteau)
[21:51:18] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[21:51:47] *** Joins: lightningwright (lightningw@user/lightningwright)
[21:51:59] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[21:53:35] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:53:43] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[21:53:45] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:54:56] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 245 seconds)
[21:56:29] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[21:57:53] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[21:58:16] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.3)
[21:58:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[21:59:05] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:1896:d1:b80d:19e0) (Quit: Leaving)
[22:02:44] *** Joins: digilink (~digilink@user/digilink)
[22:05:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:05:44] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:06:05] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:06:26] *** Joins: monkey_ (~user@190.104.116.153)
[22:08:01] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[22:08:06] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[22:08:20] *** Joins: shivesh__ (~shivesh@user/shivesh)
[22:09:26] *** Quits: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:10:02] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:10:51] *** Joins: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca)
[22:11:27] *** Joins: xkoncek (xkoncek@lounge.fi.muni.cz)
[22:11:29] *** Parts: xkoncek (xkoncek@lounge.fi.muni.cz) (The Lounge - https://thelounge.chat)
[22:11:38] *** Quits: shivesh (~shivesh@user/shivesh) (Ping timeout: 252 seconds)
[22:11:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c5dd:3e79:954e:8ffa)
[22:11:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c5dd:3e79:954e:8ffa) (Changing host)
[22:11:58] *** Joins: skapata (~Skapata@user/skapata)
[22:13:28] *** Quits: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca) (Client Quit)
[22:15:20] *** Joins: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca)
[22:16:33] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[22:17:01] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[22:19:34] *** Quits: Macuser (~Macuser@2607:b400:24:0:f57e:fa8:c6ee:eccc) (Quit: Textual IRC Client: www.textualapp.com)
[22:21:03] *** Joins: rgrinberg (~textual@187.223.250.159)
[22:23:16] *** Quits: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[22:23:45] *** Joins: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca)
[22:24:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Read error: Connection reset by peer)
[22:27:00] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[22:28:55] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:30:31] *** Joins: CormacAttack (~mac@144.62.50.200)
[22:30:53] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 252 seconds)
[22:32:28] *** Joins: mrig (~mrig@user/mrig)
[22:35:05] *** Joins: jjido (~Denis@90.213.58.125)
[22:35:08] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362) (Remote host closed the connection)
[22:38:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:38:45] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:38:45] *** Joins: wroathe (~wroathe@user/wroathe)
[22:40:24] *** Joins: Zenton (~user@user/zenton)
[22:43:28] <DPA> Is there a tool where I can put in a C expression, and it shows me in which order which operation is performed?
[22:43:51] <DPA> I could look up the precedence myself, but I'm lazy.
[22:44:00] <pragma-> sure, the channel bot has the ,paren or ,prec command
[22:44:13] <DPA> Thanks
[22:45:24] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[22:47:31] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[22:48:16] *** Joins: vicfred (~vicfred@user/vicfred)
[22:48:54] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[22:49:19] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[22:50:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:52:10] *** Joins: dutch (~DutchIngr@user/dutch)
[22:52:59] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-0ca4-2f26-b042-b2f1.inf6.spectrum.com)
[22:54:18] *** Joins: Narrat (~omnius@p200300df5f3c959d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:55:38] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:ca4:2f26:b042:b2f1) (Ping timeout: 252 seconds)
[22:57:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[22:57:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:58:37] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:59:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:01:09] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[23:01:10] *** Quits: fmsd (~no@105.157.162.151) (Remote host closed the connection)
[23:01:25] *** Joins: fmsd (~no@105.157.162.151)
[23:01:38] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:01:57] *** Joins: node1 (~node1@user/node1)
[23:04:36] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[23:05:23] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[23:05:30] *** Joins: rgrinberg (~textual@187.223.250.159)
[23:06:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:08:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:08:31] <fizzie> Obligatory warning that there's two different things "in which order which operation is performed" might mean, and the one answered by ,paren / ,prec (which expressions are operands of which operators) does not generally relate to the other (order in which expressions are evaluated).
[23:08:35] <fizzie> ,cc int f(void) { puts("f"); return 2; } int g(void) { puts("g"); return 3; } int h(void) { puts("h"); return 5; }  printf("%d", f()+g()*h());
[23:08:37] <candide> fizzie: f g h 17
[23:09:24] <fizzie> The multiplication is "done first" (as in, the value calculated is 2+(3*5)), but in that particular instance the function f() was called first.
[23:10:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:11:17] *** Quits: dangrenier83_ (~pi@user/dangrenier83) (Quit: WeeChat 2.3)
[23:11:57] *** Quits: rahl (~rahl@102.114.118.74) (Ping timeout: 252 seconds)
[23:12:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[23:12:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:12:36] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:13:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:13:47] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:13:59] *** Joins: rahl (~rahl@102.114.63.0)
[23:14:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:14:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:14:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:14:12] *** Joins: wroathe (~wroathe@user/wroathe)
[23:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:15:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:16:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-50fd-43b5-7857-81ac.res6.spectrum.com)
[23:16:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:17:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:18:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:18:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[23:18:53] * pragma- daydreams about lazy evaluation.
[23:19:13] <clarity> meow
[23:19:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[23:21:01] <pony> henlo
[23:24:36] <pony> oh,
[23:24:38] <pony> clrs 4 is out next year
[23:24:43] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:25:15] *** Joins: strajder (~strajder@user/strajder)
[23:25:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:25:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: rebooting)
[23:26:24] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Quit: quit)
[23:26:25] *** Joins: gitargy (~gitargy@76.78.94.79)
[23:28:55] <ioxzev1z> fizzie, muh order tho
[23:29:16] <cousteau> fizzie: I remember spending a whole deal of time trying to explain that concept to someon
[23:29:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:29:38] <cousteau> no matter how hard I tried, they insisted they knew better
[23:30:57] *** Quits: shivesh__ (~shivesh@user/shivesh) (Quit: leaving)
[23:31:23] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 252 seconds)
[23:34:32] <cousteau> fizzie: anyway, thanks for that example; I could've used one of those (stupid f() + g() would always respect the order)
[23:35:12] <cousteau> then again, I think what they were claiming was that a+b always evaluated the operands from left to right
[23:36:44] *** Joins: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca)
[23:38:21] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 252 seconds)
[23:41:16] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Read error: Connection reset by peer)
[23:42:06] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[23:42:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:42:56] *** Quits: j-james (~apropos@dhcp-206-87-159-84.ubcsecure.wireless.ubc.ca) (Ping timeout: 252 seconds)
[23:45:42] *** Joins: rgrinberg (~textual@187.223.250.159)
[23:46:48] *** Quits: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca) (Quit: Leaving)
[23:47:09] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:55:52] *** Joins: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[23:57:41] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-114.home.otenet.gr) (Quit: Leaving)
