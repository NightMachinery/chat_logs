[00:06:18] <FromDiscord> <iffy (Matt Haggard)> What am I doing wrong? `nimble install pixie --verbose` produces Error\: Package not found. What can I do to debug this?
[00:06:39] <FromDiscord> <iffy (Matt Haggard)> nimble version v0.13.1, nim version 1.4.6
[00:08:22] <FromDiscord> <Rika> Remove the verbose flag
[00:09:39] <FromDiscord> <iffy (Matt Haggard)> Same result
[00:09:54] <FromDiscord> <iffy (Matt Haggard)> (except it include this line\: "9 messages have been suppressed, use --verbose to show them") \:)
[00:11:45] <FromDiscord> <Rika> So what were the lines that were suppressed
[00:13:32] <FromDiscord> <iffy (Matt Haggard)> http://ix.io/3Caf
[00:14:15] <FromDiscord> <juan_carlos> `nimble refresh` ?.
[00:15:45] <FromDiscord> <iffy (Matt Haggard)> oh... I think I was working on nimble itself and may have installed my own (broken) version. I'm reinstalling 1.4.6 and I think I'll get the right nimble now.
[00:19:22] <FromDiscord> <iffy (Matt Haggard)> Nope, that wasn't it. `nimble refresh` doesn't help either
[00:19:41] *** Quits: lenis0012 (~lenis0012@88.202.167.177) (Quit: Client closed)
[00:19:51] <FromDiscord> <Elegantbeef> why 1.4.6? 😀
[00:20:05] <FromDiscord> <iffy (Matt Haggard)> No reason, shall I try another version?
[00:20:16] <FromDiscord> <Elegantbeef> Well 1.4.8 is the most recent stable
[00:20:37] <FromDiscord> <Elegantbeef> Not that it'll solve this problem just noting the oddity of installing 1.4.6 😛
[00:21:00] <FromDiscord> <iffy (Matt Haggard)> Oh, I've been using 1.4.6 up to now.  Just reinstalling what I already had.
[00:21:04] <FromDiscord> <iffy (Matt Haggard)> This is odd\: $ nimble list -i \| grep nimble↵nimble  [0.12.0]
[00:21:11] <FromDiscord> <iffy (Matt Haggard)> $ nimble --version↵nimble v0.13.1
[00:21:31] <FromDiscord> <Elegantbeef> You seem to have an old package registry file somehow
[00:21:43] <FromDiscord> <Elegantbeef> Updating your nim version to a more modern version may resolve the issue
[00:22:05] <FromDiscord> <iffy (Matt Haggard)> K, trying 1.4.8
[00:22:26] <FromDiscord> <iffy (Matt Haggard)> Though isn't `nimble refresh` designed to fix old package registry files?
[00:22:40] <FromDiscord> <Elegantbeef> It should fetch the most recent package
[00:22:49] <FromDiscord> <Elegantbeef> But you may hold a bonkers version of nimble somehow
[00:23:29] <FromDiscord> <iffy (Matt Haggard)> Shall I get rid of `~/.nimble` (move it out of place) and reinstall?
[00:23:57] <FromDiscord> <Elegantbeef> It may work, i'm not the best at resolving nimble related issues
[00:24:02] <FromDiscord> <Elegantbeef> I generally just nuke it and restart 😛
[00:24:11] <FromDiscord> <iffy (Matt Haggard)> Very elegant. Beef.
[00:24:57] <FromDiscord> <Elegantbeef> The elegant part of my name is a distraction from my utter inelegance
[00:25:41] <nixfreak_nim[m]> If you have choosenim , `choosenim stable` then nimble update
[00:27:26] <nixfreak_nim[m]> I have stable 1.4.8 
[00:27:40] <FromDiscord> <iffy (Matt Haggard)> Deleting everything in `~/.nimble/` except `bin/` didn't work.
[00:27:44] <nixfreak_nim[m]> so try to re-install choosenim again 
[00:28:15] <nixfreak_nim[m]> wget -qO - https://nim-lang.org/choosenim/init.sh | sh
[00:28:17] <FromDiscord> <iffy (Matt Haggard)> `choosenim stable` gets me to 1.4.0 (and still has the problem)
[00:28:28] <FromDiscord> <iffy (Matt Haggard)> Isn't this a problem with nimble, though?
[00:29:13] <nixfreak_nim[m]> nim , nimble, and tools get downloaded using choosenim
[00:29:39] <FromDiscord> <exelotl> try `choosenim update stable`
[00:29:41] <nixfreak_nim[m]> I would just reinstall 
[00:30:36] <nixfreak_nim[m]> I did to reinstall on all my OS's 
[00:31:08] <FromDiscord> <iffy (Matt Haggard)> What's the last package in \~/.nimble/packages\_official.json for y'all? Mine is `listsv`
[00:31:33] <nixfreak_nim[m]> what version of choosenim do you have
[00:31:49] <FromDiscord> <iffy (Matt Haggard)> $ choosenim --version↵choosenim v0.8.2
[00:32:29] <nixfreak_nim[m]> ok so thats the newest 
[00:32:50] <nixfreak_nim[m]> you already deleted ~/.nimble/bin/ right 
[00:33:22] <nixfreak_nim[m]> what does nimble update stable say ? 
[00:33:56] <FromDiscord> <iffy (Matt Haggard)> no, I tried that, but then `nimble` wouldn't work \:) What do y'all have in `~/.config/nimble/nimble.ini` -- I think that's what got messed up
[00:34:57] <nixfreak_nim[m]> so re-install it 
[00:35:49] <nixfreak_nim[m]> wget -qO - https://nim-lang.org/choosenim/init.sh | sh
[00:36:04] <nixfreak_nim[m]> Then do a choosenim update
[00:36:07] <FromDiscord> <iffy (Matt Haggard)> I've reinstalled Nim and nimble already. I don't know how to reinstall that config file. Choosenim controls that config file?
[00:37:30] <FromDiscord> <iffy (Matt Haggard)> Resintalled choosenim; `choosenim update` doesn't work (it wants a command).  Can someone please just tell me what's in their `~/.config/nimble/nimble.ini` file?
[00:37:57] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:38:18] <nixfreak_nim[m]> * choosenim update stable I think
[00:39:41] <nixfreak_nim[m]> nimble.ini 
[00:39:42] <nixfreak_nim[m]> tree ~/.nimble/                                                                                             [16:08:56]... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/68bdc2878e5e88c62b98df388f7b0eeb50850787)
[00:40:06] <FromDiscord> <iffy (Matt Haggard)> Mine is in `~/.config` not `~/.nimble`
[00:40:38] <FromDiscord> <Elegantbeef> `choosenim update` takes a version to update
[00:40:38] <nixfreak_nim[m]> don't have that either 
[00:40:45] <FromDiscord> <Elegantbeef> so you'd have to do `choosenim update stable`
[00:41:12] <FromDiscord> <iffy (Matt Haggard)> okay, thank you for checking
[00:42:12] <FromDiscord> <iffy (Matt Haggard)> Yess!!!!! Moving `~/.config/nimble/nimble.ini` was the solution! It was leftover from running the `nimble` tests.
[00:42:20] <FromDiscord> <iffy (Matt Haggard)> Thank you for your patience!
[01:13:19] <FromDiscord> <dom96> pro-tip: use `--debug` with Nimble commands to see what it's doing
[01:30:07] *** kayabaNerve_ is now known as kayabaNerve
[01:48:03] <nrds> <06Prestige99> Can someone comment as to why this pure pragma would be needed? https://forum.nim-lang.org/t/8509#55092 I read the manual about the pure proc but don't fully understand it, outside its use for enums
[01:48:31] <nrds> <06Prestige99> It seems to change the behavior of my game at least, not 100% sure why/how
[01:58:51] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[02:00:11] *** Joins: rockcavera (~rc@192.12.113.192)
[02:00:11] *** Quits: rockcavera (~rc@192.12.113.192) (Changing host)
[02:00:11] *** Joins: rockcavera (~rc@user/rockcavera)
[02:31:51] <FromDiscord> <impbox [ftsf]> "An object type can be marked with the pure pragma so that its type field which is used for runtime type identification is omitted. This used to be necessary for binary compatibility with other compiled languages."↵you're trying to map to a C api, so you don't want nim's RTTI data included in the object which will throw off the field addressing
[02:32:59] <FromDiscord> <impbox [ftsf]> basically without the {.pure.} it's adding an extra hidden field for the type info because it's inheritable
[03:03:13] <nrds> <06Prestige99> ah, okay
[03:28:00] <NimEventer> New thread by RainbowAsteroids: Issues trying to use pattern matching, see https://forum.nim-lang.org/t/8510
[03:41:52] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[03:42:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:11:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[04:11:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:38:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[04:39:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:51:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 265 seconds)
[04:59:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[05:00:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:04:31] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[05:05:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[05:07:50] *** Gustavo6046_ is now known as Gustavo6046
[05:13:40] *** Joins: Egeon (~kaliyuga@2601:601:200:5b30::1634)
[05:18:53] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:10:02] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:10:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[06:12:02] *** Gustavo6046_ is now known as Gustavo6046
[06:15:50] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Excess Flood)
[06:24:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:28:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:31:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:38:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:42:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:48:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[06:49:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:06:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[07:09:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:15:56] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[07:16:21] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[07:16:35] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[07:17:19] *** Joins: euantorano (sid180289@helmsley.irccloud.com)
[07:19:45] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[07:29:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:30:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:30:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[07:30:50] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[07:31:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:39] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:52:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:52:49] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[07:56:09] *** Gustavo6046_ is now known as Gustavo6046
[08:38:26] <Egeon> Anyone know what is wrong with this? https://play.nim-lang.org/#ix=3Cbu
[08:39:54] <FromDiscord> <impbox [ftsf]> other than the error message?
[08:41:26] <Egeon> It is not a complete code, but the first output shouldnt be 16 but 80, coded for "P" in ASCII 
[08:41:42] <FromDiscord> <impbox [ftsf]> "it looks like you're trying to write malware"
[08:42:07] <Egeon> nah
[08:43:04] <Egeon> Are you helping?
[08:43:47] <FromDiscord> <Rika> Hard to help, what is the definition of the shell code variable
[08:43:49] <FromDiscord> <impbox [ftsf]> nah
[08:43:50] <FromDiscord> <Rika> What type
[08:44:06] <FromDiscord> <impbox [ftsf]> you can figure out how to write malware without help
[08:44:19] <Egeon> byte array
[08:44:29] <FromDiscord> <Rika> Array or seq
[08:44:36] <FromDiscord> <Rika> You cannot cast arrays to string
[08:44:47] <FromDiscord> <Rika> Different structure
[08:44:50] <Egeon> fixed byte array not seq
[08:45:01] <FromDiscord> <Rika> Well then there’s the first issue
[08:46:17] <Egeon> I do it just fine on line 11 the assert went through
[08:47:36] <FromDiscord> <Rika> Probably coincidence, I am certain that is UB
[08:47:47] <FromDiscord> <Rika> Rather not UB but incorrect logic
[08:49:38] <FromDiscord> <Rika> Ah I see
[08:49:49] <FromDiscord> <Rika> The slice index returns a sequence
[08:49:55] <FromDiscord> <Rika> So the cast works for the first part
[08:50:05] <Egeon> What is UB?
[08:50:21] <Egeon> aha I see
[08:51:45] <FromDiscord> <Rika> On the second part, use `cast[PeHeader](shellcode[pe..pe+sizeof(PeHeader)-1].addr)` I think will work
[08:52:39] <Egeon> So I should replace the slice to some other function to return a pure byte array. What'd you recommend?
[08:55:32] <Egeon> OK ty! you dint answer what is UB? I saw it mentioned twice yesterday and just now and I'm curious.
[08:57:19] <FromDiscord> <Elegantbeef> Undefined behaviour
[08:57:47] <FromDiscord> <Elegantbeef> Logic that may depend on the compiler or architecture you're using
[09:37:44] <FromDiscord> <Schelz> hi, how should I write the args if i want to compile the nim script as dll and enable ssl support
[09:37:45] <FromDiscord> <Schelz> ?
[09:38:55] <FromDiscord> <Schelz> I know that for ssl its "-d:ssl" but how do i add the second one
[09:41:02] <FromDiscord> <Elegantbeef> I assume you dont actually mean nimscript, but nim, i beleive it should be `--app:lib` i could be wrong
[09:42:21] <FromDiscord> <Elegantbeef> you may need `--noMain:on` aswell
[09:45:02] <FromDiscord> <Schelz> and for multiple args for -d its like this ? https://media.discordapp.net/attachments/371759389889003532/899903447367823410/unknown.png
[09:45:37] <FromDiscord> <Elegantbeef> nope you just do more `-d:`s
[09:45:55] <FromDiscord> <Schelz> aha ok, thx
[09:46:00] <FromDiscord> <Elegantbeef> `nim c -d:ssl -d:useNimRtl --app:lib --noMain:on main.nim`
[09:46:31] <FromDiscord> <Elegantbeef> You can of course make a `config.nims` and define all of these behind a single switch
[09:47:29] <FromDiscord> <Schelz> got it work thx
[09:55:26] <FromDiscord> <Schelz> and one last question how do I compile it for x86 architecture
[09:56:18] <FromDiscord> <Elegantbeef> `--cpu:i386` i believe
[09:56:33] <FromDiscord> <Elegantbeef> Though x86 is ambiguous
[09:56:37] <FromDiscord> <Elegantbeef> Just assume you mean 32bit
[09:56:47] <FromDiscord> <Schelz> yep
[10:35:47] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:34:34] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Remote host closed the connection)
[11:35:14] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:57:50] <FromDiscord> <Varriount> @Araq I'm still skeptical regarding `Isolated[T]`'s flexibility. Even if it works, that doesn't necessarily mean it will have low-enough friction to be useful.
[11:58:52] <FromDiscord> <Varriount> This is mostly based off my observations of the `spawn` mechanism.
[11:59:36] <FromDiscord> <Varriount> (which seems to operate on a similar premise)
[12:18:22] <FromDiscord> <narimiran> Nim 1.6 is out!! https://nim-lang.org/blog/2021/10/19/version-160-released.html
[12:19:07] <NimEventer> New thread by Miran: Nim 1.6 is out!!, see https://forum.nim-lang.org/t/8511
[12:28:31] <FromDiscord> <exelotl> aaaaaaaa congrats
[12:30:34] <PMunch> Neat!
[12:36:32] <PMunch> This is a nice blurb: A practical, compiled systems programming language offering C++-like perfomance and portability, Python-like syntax, Lisp-like flexibility, strong C, C++, JS, Python interop, and best-in-class metaprogramming.
[12:38:29] <FromDiscord> <impbox [ftsf]> woo! congrats
[12:38:45] <PMunch> Hmm, iterable[T], is that any type which has an `items` iterator? Is there a iterable[T, K] which has a `pairs` iterator?
[12:38:51] <mst> yah, neat blurb indeed
[12:38:56] <PMunch> Is there a miterator[T] for mutables?
[12:39:48] <PMunch> Ah duh, it's all explained further down..
[12:40:16] <FromDiscord> <impbox [ftsf]> "deprecated a number of error prone or redundant features"
[12:40:44] <FromDiscord> <impbox [ftsf]> doesn't seem to be much detail on this
[12:41:20] <PMunch> Well, the iterator section didn't answer any of my questions :P
[12:41:41] <PMunch> So is iterable only to take an iterator?
[12:42:43] <FromDiscord> <impbox [ftsf]> lets you pass iterators to things
[12:43:53] <PMunch> Aha, so you can do `sum(mySeq.items)` it seems, and `sum(mySeq.pairs)` where T would be a key/value tuple
[12:43:58] <PMunch> That's pretty cool!
[12:45:58] <FromDiscord> <Rika> Cool
[12:47:54] *** Joins: rockcavera (~rc@192.12.113.192)
[12:47:55] *** Quits: rockcavera (~rc@192.12.113.192) (Changing host)
[12:47:55] *** Joins: rockcavera (~rc@user/rockcavera)
[13:16:23] <FromDiscord> <haxscramper> compiler explorer PR done
[13:16:55] <FromDiscord> <haxscramper> and someone submitted release notes on hackernews already
[13:28:29] <FromDiscord> <Schelz> how can i make in nim a for loop range
[13:28:41] <FromDiscord> <Schelz> ex in python for i in range(0, 23)
[13:28:48] <FromDiscord> <enthus1ast> for idx in 0..10\:
[13:28:52] <FromDiscord> <haxscramper> `for i in 0 ..< 23`
[13:28:52] <FromDiscord> <Schelz> (edit) "i" => ""i" | "23)" => "23)""
[13:28:59] <FromDiscord> <Schelz> thx
[13:46:43] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:03:54] <FromDiscord> <tandy> is there a way to print tables nicely?
[14:04:31] <FromDiscord> <pointystick> Try this: https://github.com/xmonader/nim-terminaltables
[14:08:22] <FromDiscord> <tandy> ty
[14:08:37] <FromDiscord> <tandy> also is there a way to create a HttpHeaders object from a table?
[14:09:41] *** Quits: Egeon (~kaliyuga@2601:601:200:5b30::1634) (Ping timeout: 245 seconds)
[14:10:14] *** Joins: Egeon (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net)
[14:14:53] <FromDiscord> <tandy> omg why are httpheaders so fucked
[14:15:13] <FromDiscord> <tandy> https://github.com/nim-lang/Nim/issues/12211
[14:16:35] <mst> oh, what a tangled web we weave
[14:17:51] <mst> ...
[14:17:52] <mst> > btw, writing "thou" and "shalt" in an issue makes me skip over what you've written.
[14:17:55] * mst sulks
[14:20:32] <mst> tandy, without diminishing how bloody annoying this is, IME practically every http header implementation in every language starts off underestimating just how ridiculous HTTP in the wild will turn out to be and how much "fun" that's going to end up being in the long run
[14:21:21] <mst> generally when you find one that -does- manage to handle all this stuff, it either means the implementation got there the hard way years ago, or the implementor got there the hard way on a previous attempt somewhere
[14:22:46] <FromDiscord> <tandy> lol i bet↵(<@709044657232936960_mst=5b=49=52=43=5d>)
[14:26:05] <FromDiscord> <tandy> ok i switched back to using seq[(string, string)]
[14:28:41] <FromDiscord> <Rika> btw `{"key": "val"}` is `seq[(string, string)]`
[14:28:45] <FromDiscord> <pointystick> sent a code paste, see https://play.nim-lang.org/#ix=3Ccv
[14:29:55] <PMunch> Another option for printing tables: https://github.com/PMunch/nancy
[14:30:07] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/version-1-6/lib/pure/collections/tables.nim#L301 you can just copy this for tableref
[14:30:13] <FromDiscord> <tandy> do you have a way of going from headers to seq again?↵(@pointystick)
[14:30:16] <FromDiscord> <haxscramper> and technically `@{}` is a `seq`, `{}` is an array.
[14:31:01] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 258 seconds)
[14:31:06] <FromDiscord> <Rika> ah i see
[14:31:08] <FromDiscord> <Rika> forgot
[14:31:09] <FromDiscord> <Rika> lol
[14:31:16] <FromDiscord> <Rika> tandy: "blah.pairs.toSeq"
[14:31:24] <FromDiscord> <Rika> oh headers
[14:31:25] <FromDiscord> <Rika> wait here
[14:31:31] <FromDiscord> <tandy> nvm
[14:31:36] <FromDiscord> <Rika> headers.pairs.toSeq xddddd
[14:31:41] <FromDiscord> <tandy> lol
[14:31:42] <PMunch> HttpHeaders have a tables field which is the internal table
[14:33:00] <FromDiscord> <tandy> oh shit
[14:33:07] <FromDiscord> <tandy> i just remebered again why i started using tables
[14:33:17] <FromDiscord> <tandy> i cant index a seq by a []
[14:33:42] <FromDiscord> <Rika> lol
[14:33:44] <FromDiscord> <Rika> you can
[14:33:47] <FromDiscord> <Rika> not with strings
[14:33:48] <FromDiscord> <Rika> hehe
[14:33:49] <FromDiscord> <soupayan> is nim a transpiler?
[14:33:53] <PMunch> No
[14:33:53] <FromDiscord> <Rika> no
[14:33:59] <FromDiscord> <tandy> ok so i dont need to convert the response headers
[14:34:06] <FromDiscord> <tandy> il keep those as a tableref
[14:35:01] <FromDiscord> <soupayan> nim in action says that nim converts to c code and then compiles
[14:35:10] <FromDiscord> <Rika> yes
[14:35:12] <PMunch> That's it, I'm writing an article about this "Is Nim a transpiler nonsense"..
[14:35:12] <FromDiscord> <Rika> that does not make it a transpiler
[14:35:15] <mst> the concept of 'transpiler' is fuzzy and not really worth thinking about
[14:35:21] <FromDiscord> <Rika> C converts to asm and then assembles
[14:35:35] <FromDiscord> <Rika> PMunch: you are god
[14:35:49] <PMunch> Haha, I'm just tired of answering the same question over and over again :P
[14:35:53] <mst> e.g. rustc goes via LLVM IR as it compiles
[14:36:05] <mst> PMunch: that's pretty much the impetus for all my best articles
[14:36:09] <FromDiscord> <Rika> just call it a compiler man theres no meaningful difference
[14:36:11] <mst> PMunch: Frequently Delivered Answers
[14:36:50] <mst> and honestly I find C a much easier to debug IR than LLVM's is ;)
[14:36:52] <FromDiscord> <haxscramper> I was away for ten god damn minutes and we are back to transpiler
[14:36:52] <FromDiscord> <retkid> do you guys use sugar often? This stuff looks useful but im afraid it might reduce readability
[14:36:54] <FromDiscord> <soupayan> ok.. i was just confused.. did not mean to step on anything 😋
[14:37:04] <FromDiscord> <Rika> its okay
[14:37:05] <FromDiscord> <tandy> ree↵(@Rika)
[14:37:14] <FromDiscord> <Rika> In reply to @retkid "do you guys use": for me, no
[14:37:18] <FromDiscord> <haxscramper> `collect` is good, does not reduce readability. everything else is up to debate↵(@retkid)
[14:37:19] <FromDiscord> <haxscramper> also `std/with`
[14:37:21] <FromDiscord> <Rika> i prefer `proc(): =` over `=>`
[14:37:35] <FromDiscord> <haxscramper> IMO it should be in sugar, but it is super useful for multiple calls over the same object
[14:37:39] <FromDiscord> <Rika> i'm still not used to using collect but i intend to migrate
[14:37:44] <PMunch> @soupayan, oh not at all. It's just a question we get asked quite often, and one which some people have very strong feelings about
[14:37:45] <mst> soupayan, basically, the term 'transpiler' can mean lots of things, sometimes descriptive, sometimes insulting, almost always less useful than being explicit
[14:37:58] <FromDiscord> <Rika> `std/with` sounds good, alsto thinking of trying it out
[14:38:16] <mst> it's one of those words I honestly kinda wish nobody had ever come up with
[14:38:29] <FromDiscord> <retkid> I like filter() (i know its in sequtils but its kinda sugar  adjacent) but its syntax is a little bit weird
[14:38:31] <FromDiscord> <soupayan> In reply to @mst "<@846808276557234176>, basically, the term": yes, i agree..
[14:38:32] <PMunch> @retkid, I use sugar once in a while. But mostly for `() =>`
[14:38:45] <FromDiscord> <Rika> In reply to @retkid "I like filter() (i": nah its fairly standard with functional programming
[14:38:52] <PMunch> To be honest I just haven't checked out the module in a while and I tend to forget it's there :P
[14:39:09] <FromDiscord> <retkid> I've yet to learn a functional lang
[14:39:28] <FromDiscord> <Rika> i learned some basic haskell and i actually liked it a bit
[14:39:40] <PMunch> `dump` is also pretty nice, but I always forget about it..
[14:39:50] <FromDiscord> <Rika> what's dump?
[14:40:03] <FromDiscord> <Rika> is that like `&"{variable=}"`?
[14:40:19] <FromDiscord> <haxscramper> If dup wasn't so dysfunctional it could be used more often as well
[14:40:30] <mst> I learned enough scheme back in 2003 or so to embed guile into another program to give me async/await like semantics in the top level control flow of a callback based async I/O system by (ab)using call/cc
[14:40:43] <mst> that was good fun, though possibly only if you're me
[14:40:43] <PMunch> @retkid, I highly recommend learning one, I read Clojure for the Brave and True and it's a great way to learn both about functional languages, but also just thoroughly enjoyable
[14:41:06] <PMunch> @haxscramper, why is dump dysfunctional?
[14:41:08] <FromDiscord> <retkid> yea Clojure looks kinda insane to me
[14:41:08] <FromDiscord> <Rika> dup is dysfunctional? damn how
[14:41:17] <PMunch> Oh dup :P
[14:41:19] <FromDiscord> <Rika> pmunch: he said dup
[14:41:21] <FromDiscord> <Rika> xd
[14:41:26] <NimEventer> New thread by Puruneko: Strange-like behavior in openArray in multiple types, see https://forum.nim-lang.org/t/8512
[14:41:31] <FromDiscord> <retkid> when i was learning JVM langs I looked at scala and basically shat myself
[14:41:42] <PMunch> Clojure is just pure joy
[14:41:46] <PMunch> Such a nice language
[14:42:11] <FromDiscord> <retkid> after im done with this project i was thinking about learning Racket
[14:42:14] <mst> retkid, I had much the same reaction to the syntax and, uh, for calibration, I willingly write a lot of perl
[14:42:32] <FromDiscord> <Rika> functional languages fit how i think somewhat
[14:42:34] <FromDiscord> <Rika> its really fun
[14:44:02] <FromDiscord> <haxscramper> It is dysfunctional because most of the stdlib does not account for it (there are almost no in-place things for strutils). Also, it cannot parse `discard procThatReturnsAndMutates()` and it was kind of problematic
[14:44:19] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:45:36] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3CcE
[14:56:54] <FromDiscord> <tandy> [leorize](https://matrix.to/#/@leorize:envs.net)\: im about to start writing a jsony de/serialiser for union
[14:58:14] <mst> I'm guessing you mean json-ish ?
[14:58:48] * mst only asks cos ingy (author of YAML) and I actually wrote something called JSONY a few years back for JSON-like config files ;)
[15:00:12] <mst> (basically "JSON but with most of the syntax optional, so your configs were nice and easy to write but you could trivially paste/template in a chunk of actual JSON and that would parse as part of the document too, a number of sysadmins quite liked it for small things)
[15:05:24] <FromDiscord> <tandy> haha no, im talking about https://github.com/treefrom/jsony↵(<@709044657232936960_mst=5b=49=52=43=5d>)
[15:07:08] <FromDiscord> <tandy> that should be https://github.com/treeform/jsony
[15:11:55] <FromDiscord> <Jonah> what's the best way to automatically print the json node when doing `node.to(Struct)` errors? i'm trying to improve the crash messages from bad json data with the stdlib json library
[15:12:59] <FromDiscord> <Rika> catch the error, print the node, reraise the error
[15:15:34] <FromDiscord> <Jonah> do i have to just duplicate that code on every parse then
[15:15:37] <FromDiscord> <tandy> In reply to @tandy "[leorize](https://matrix.to/#/@leorize:envs.net)\: ": @treeform would you have any interest in me making a PR for this?
[15:30:00] <FromDiscord> <retkid> In reply to @tandy "[leorize](https://matrix.to/#/@leorize:envs.net)\: ": is marshal not good enough for you
[15:30:20] <FromDiscord> <retkid> marshal: am i joke to you
[15:31:14] <PMunch> mst, that actually sounds pretty interesting. Do you have a link to the project?
[15:32:12] <mst> p3rl.org/JSONY is the implementation we put together
[15:32:47] <mst> note that it's using a PEG grammar under the hood to be easy to port to other stuff, but I dunno if anybody did
[15:34:30] <FromDiscord> <tandy> marshal is slow and not flexible, also i think jsony support more type features↵(@retkid)
[15:34:53] <FromDiscord> <retkid> marshal has treated me well
[15:35:07] <FromDiscord> <retkid> however i have not had more than like 8 mb
[15:35:29] <FromDiscord> <retkid> sorry its 16 mb
[15:35:52] <FromDiscord> <retkid> are you sure its not a disk limit @tandy
[15:35:57] <FromDiscord> <retkid> In reply to @tandy "marshal is slow and": 
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:47] <FromDiscord> <Rika> ? where was disk limits mentioned
[15:37:23] <PMunch> Hmm, I wonder what would happen if I ran Futhark on the C code generated by Nim :P
[15:44:41] <NimEventer> New post on r/nim by trustable-code: Nim version 1.6.0 released, see https://reddit.com/r/nim/comments/qba84c/nim_version_160_released/
[15:47:02] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[15:47:41] <PMunch> @Rika, @mst, @soupayan: https://peterme.net/is-nim-a-transpiler.html
[15:49:25] <mst> PMunch: coffeescript is probably the single most central example
[15:53:46] <FromDiscord> <narimiran> @PMunch nice article! i predict this one to be shared even more than the object vs ref object one 🙂
[15:55:06] <FromDiscord> <haxscramper> good
[15:55:06] <FromDiscord> <haxscramper> good article\
[15:56:19] <PMunch> @mst, I tried to use examples who actually referred to themselves as transpilers
[15:57:12] <PMunch> But yeah, coffeescript will probably fall under most peoples definition
[15:57:29] <FromDiscord> <haxscramper> it it possible to dump LLVM IR from clang?
[15:57:39] <FromDiscord> <haxscramper> IIRC it is still somewhat readable
[15:57:59] <FromDiscord> <haxscramper> Can be used as an example of abstraction level drop for cxx for example
[15:58:22] <PMunch> @narimiran, this one? https://peterme.net/nim-types-originally-a-reddit-reply.html
[15:58:38] <FromDiscord> <narimiran> yeah
[15:59:01] <mst> PMunch: you mean like https://coffeescript.org/#transpilation
[15:59:21] <mst> PMunch: oh, shit, it's calling *babel* a transpiler, sorry, misread
[16:00:02] <mst> PMunch: I'm about 98% sure that I first encountered the term transpiler because it gained popularity being used to describe coffeescript, but fair point about the self-description
[16:00:12] <PMunch> Haha, I like how Babel has in big bold yellow letters at the top of their page "Babel is a JavaScript compiler."
[16:00:17] <PMunch> So yeah, flexible term .P
[16:00:20] <mst> *LOL*
[16:00:37] <mst> 'transpiler, n.: somebody else's compiler'
[16:00:45] <PMunch> Haha, exactly!
[16:07:55] <PMunch> @mst, added some notes about Babel and CoffeeScript and just had to throw that definition in there. Let me know if you want me to change the attribution
[16:08:15] <FromDiscord> <el__maco> aren't most (new) compilers transpilers these days. They transpile to LLVM's IR don't they
[16:08:33] <PMunch> Did you read the article?
[16:08:40] <FromDiscord> <haxscramper> `nuclear.jpg`
[16:08:43] <mst> PMunch: fine by me :D
[16:09:10] <FromDiscord> <el__maco> which article?
[16:09:27] <FromDiscord> <haxscramper> https://peterme.net/is-nim-a-transpiler.html
[16:09:46] <PMunch> The definition is kinda floating. By loosest of definitions then yes compiling to LLVM's IR is a transpilation. But for the term to actually be useful it's not a very good way to use the term
[16:10:28] <mst> I think your "level of abstraction" heuristic is pretty good, in so far as the term is useful at all
[16:11:54] <FromDiscord> <el__maco> yeah idk, the article seems to have a point but its mostly about semantics and arguing about semantics is rarely very worthwhile it would feel like
[16:11:59] <PMunch> Well the problem (as I note in the penultimate section) is that no two languages are exactly the same, so determining the "level of abstraction" isn't exactly trivial
[16:12:27] <PMunch> @el__maco, when talking about terms semantics is pretty much the only thing you can argue
[16:12:52] <FromDiscord> <narimiran> "arguing about semantics is rarely very worthwhile" - and here we are, throwing transpiler left and right
[16:13:12] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3Cd1
[16:13:32] <FromDiscord> <haxscramper> none of these arguments make any sense for a person who wrote any meaningful amount of nim code, or bothered to read the docs
[16:14:01] <FromDiscord> <haxscramper> also pretty common ones are "user-defined operators are bad", "the world will turn into chaos if we let people write macros"
[16:14:21] <PMunch> I mean, at least that is partially true
[16:14:24] <FromDiscord> <haxscramper> again, borderline between personal preferences and unbased FUD claims
[16:14:30] <FromDiscord> <haxscramper> still most popular discussion points
[16:14:43] <FromDiscord> <haxscramper> yes, everything is true to some extent
[16:14:47] <FromDiscord> <haxscramper> even case insensetivity
[16:15:03] <PMunch> As I like to say, meta-programming is like a chainsaw. You can do things a whole lot more efficiently, but it's also much easier to take your own leg of by accident
[16:15:04] <FromDiscord> <haxscramper> the question - is that what we should be discussing?
[16:15:15] <FromDiscord> <haxscramper> or maybe there are some other, more meaningufl topics
[16:15:31] <PMunch> Oh for sure, I don't disagree that these are silly things to argue about
[16:16:29] <FromDiscord> <haxscramper> Yes, of course everything is useful in moderation. But usually argument against macros is black-and-white discussion↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[16:16:51] <FromDiscord> <haxscramper> Those who write macros complain about typed being unspeced
[16:16:56] <FromDiscord> <haxscramper> Or something like that
[16:18:03] <FromDiscord> <haxscramper> Those who don't argue about macros turning ecosystem into boiling inferno stiched of myriads of randomized dialects
[16:19:34] <mst> PMunch: 'heuristic' was meant to imply vague and lossy, yeah
[16:19:54] <mst> PMunch: but it's the least worst heuristic for 'is it a transpiler' I've yet encountered (though, uh, that's not a high bar)
[16:20:41] <mst> el__maco, the fact that transpiler is unusually semantically unmoored is kinda the point of the discussion
[16:21:40] <PMunch> Hmm, this JSONY thing looks pretty neat
[16:24:57] <mst> PMunch: being able to paste a JSON block into the middle while still not needing all that ceremony yourself has been v. handy
[16:25:10] <mst> I also sometimes use it for quick lines-of-JSON-on-the-wire protocols
[16:25:24] <mst> basically "if the first line sent to the server has no leading [, assume JSONY"
[16:25:36] <mst> means I can generally trivially test stuff using socat
[16:27:26] <PMunch> Yeah I like the "if you want structure just paste JSON" approach
[16:27:40] <PMunch> While still making it trivial to write
[16:27:57] <PMunch> One thing  I don't quite understand though is how { "of": "things" } was generated in the example
[16:28:41] <PMunch> Oh, is it because in a {} subhash every other value is a key?
[16:28:45] <mst> { of things } -> { "of": "things" }
[16:28:46] <mst> yes
[16:28:49] <PMunch> Right
[16:29:13] <mst> basically, the way to think about it is "make as much of the syntax as possible optional"
[16:29:16] <PMunch> I thought it might have to do with the newline and indentation
[16:30:01] <mst> nope, it's not whitespace sensitive, *not* doing that was kind of what led me to design it, then I convinced ingy that even if he didn't understand why you wouldn't just use YAML instead it would make a good example for his parsing tools ;)
[16:30:35] *** Joins: arkurious (~arkurious@user/arkurious)
[16:38:08] <PMunch> Well it is kinda whitespace sensitive since it uses newlines
[16:40:44] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:45:10] <PMunch> Haha: https://www.fredrikholmqvist.com/pages/why-i-hate-frameworks.html
[16:51:51] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:53:21] <FromDiscord> <Rika> i just read that a few hours ago lmfao
[16:54:38] <FromDiscord> <dom96> 1.6 is out 😮
[17:02:59] *** Joins: rockcavera (~rc@192.12.113.192)
[17:02:59] *** Quits: rockcavera (~rc@192.12.113.192) (Changing host)
[17:02:59] *** Joins: rockcavera (~rc@user/rockcavera)
[17:06:11] <nrds> <06Prestige99> Awesome! 
[17:11:41] <nrds> <06Prestige99> https://nim-lang.org/blog/2021/10/19/version-160-released.html
[17:11:44] <FromDiscord> <dom96> and on HN too, awesome
[17:11:54] <PMunch> Yup, it's everywhere :)
[17:11:57] <FromDiscord> <dom96> where is the launch party?
[17:12:12] <PMunch> My place, seven o'clock?
[17:13:00] <supakeen> i'll bring the salmon
[17:14:00] <FromDiscord> <narimiran> is case and style (in)sensitivity already mentioned on HN or we're still waiting for it?
[17:14:28] <FromDiscord> <dom96> ssssshhh you'll jinx it
[17:15:02] <nrds> <06Prestige99> wow there are a lot of updates
[17:15:53] <PMunch> supakeen, as if we don't have enough salmon in Norway already :P
[17:16:00] <supakeen> that's the joke!
[17:18:09] <supakeen> (it wasn't very good)
[17:19:19] <FromDiscord> <dom96> so many HN comments, damn
[17:22:14] <FromDiscord> <Gumber> @dom96 remember like 5 years ago when Nim would have a release and it was just fighting FUD / criticism all day on HN?
[17:22:37] <FromDiscord> <Gumber> now it's like most of the reception to releases is actually positive and mostly curiosity / warm feedback
[17:22:43] <FromDiscord> <Gumber> what a refreshing / joyous change
[17:23:43] <supakeen> Suspicious amount of GC talk.
[17:24:46] <FromDiscord> <Gumber> actually there's not much comparatively
[17:30:04] <FromDiscord> <Rika> Where’s the insensitivity comment
[17:31:57] <PMunch> Ssssshhh
[17:32:05] <FromDiscord> <exelotl> where's the tweet I can RT? :P
[17:32:39] <PMunch> Hmm, maybe this is the right moment to write an article about Futhark. Ride the wave of Nim curiosity
[17:33:13] <FromDiscord> <haxscramper> https://news.ycombinator.com/item?id=28918044 there is one for whitespace↵(@Rika)
[17:34:03] <FromDiscord> <haxscramper> I mean sure, "since the whitespace is significant, it ends up being one more potential source of bugs."
[17:34:29] <FromDiscord> <haxscramper> since `<insert any language feature>` is significant, misusing it can lead to bugs
[17:34:38] <FromDiscord> <haxscramper> like mistyping variable names
[17:34:42] <FromDiscord> <dom96> In reply to @Gumber "<@!132595483838251008> remember like 5": Honestly hard for me to tell whether there is less FUD these days. There is definitely less "but style insensitivity omg"
[17:35:09] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[17:35:09] <FromDiscord> <haxscramper> what was it called? "Shadowing of the variable in for loop scope is a latent bug"
[17:35:10] <FromDiscord> <haxscramper> yeah sure, whatever
[17:35:11] <FromDiscord> <Gumber> well, at least there seems to be way more positivity
[17:35:47] <FromDiscord> <dom96> Anyway, we've come far: https://web.archive.org/web/20110704041631/http://force7.de/nimrod/ 🙂
[17:36:05] <FromDiscord> <Rika> In reply to @haxscramper "I mean sure, "since": Since the variable name casing is significant …
[17:36:06] <FromDiscord> <Rika> Heh
[17:36:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[17:36:48] <FromDiscord> <dom96> (and that takes me back to the discussion we've had about Nim and Python, you can clearly see it's mentioned there ;))
[17:36:57] <FromDiscord> <Rika> Anyway these kinds of discussions always drain me of energy
[17:37:04] <FromDiscord> <Rika> So perhaps I shall stop reading
[17:38:16] <FromDiscord> <dom96> I love reading these discussions
[17:38:44] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:38:44] <FromDiscord> <Rika> In reply to @dom96 "(and that takes me": Well okay, Nim takes a good amount of inspiration from Python, but it still doesn’t mean it should take more
[17:39:01] <FromDiscord> <haxscramper> `[x for y in z if q]`
[17:39:04] <FromDiscord> <Rika> In reply to @dom96 "I love reading these": I don’t, some debates are just annoying to keep on reading
[17:39:05] <FromDiscord> <dom96> In reply to @Rika "Well okay, Nim takes": `snake_case` definitely not, other things perhaps
[17:39:17] <FromDiscord> <haxscramper> I mean how come you don't want this
[17:39:27] <FromDiscord> <Rika> In reply to @dom96 "`snake_case` definitely not, other": Yes perhaps some, I do not mean whole of Python is not something to take inspiration from
[17:39:34] <mst> for x in "foo", "bar":
[17:39:37] <mst> for x in "foo":
[17:39:45] * mst beats himself unconscious with his own keyboard
[17:40:00] <FromDiscord> <Rika> Poor keyboard
[17:40:02] <FromDiscord> <haxscramper> time to slice pythong list
[17:40:11] <FromDiscord> <haxscramper> `:::::-1-1-2-1-2-31::`
[17:40:18] <FromDiscord> <dom96> I remember the time when Nim had no slicing
[17:40:26] <FromDiscord> <dom96> And I wanted to just copy Python
[17:40:27] <FromDiscord> <haxscramper> that's how you get x^288th element
[17:40:32] <FromDiscord> <dom96> Araq gave great arguments why we shouldn't
[17:40:32] <FromDiscord> <Rika> In reply to @dom96 "I love reading these": Some discussions are genuinely nice to read but that’s like diamond in the rough
[17:40:36] * mst really likes snake_case
[17:40:37] *** Joins: rb (~augh@theguntretort.com)
[17:40:40] <FromDiscord> <dom96> and so we didn't, that's how we should do things
[17:40:50] <FromDiscord> <Rika> Yeah
[17:41:02] * mst would suggest people remember that the only reason for camelCase is that xerox PARC's ASCII variant didn't actually have an _ so they had to improvise
[17:41:13] <FromDiscord> <Rika> Discussion is always good until it devolves into shouting
[17:41:20] <mst> I do have an _ so damnit I'm going to use it
[17:41:35] <mst> (the way nim lets people not have to care about that is both insane and really quite neat in that regard ;)
[17:41:36] <FromDiscord> <Rika> I mean you do you that’s the point of style insensitivity
[17:41:47] <FromDiscord> <Rika> Insane as in
[17:41:51] <FromDiscord> <Rika> What way
[17:42:09] <NimEventer> New thread by Solo989: VarArgs Broke on latest nim., see https://forum.nim-lang.org/t/8513
[17:42:21] <FromDiscord> <dom96> yep, and you could do so much more: make the doc generator display the symbols in your favourite style, make your IDE completely style insensitive, make Nim understand which style you're using and show appropriate error messages
[17:42:37] <mst> I'm sorry, I'm not going to get into an argument over whether the word 'insane' is a compliment or not
[17:42:50] <mst> go argue with somebody over what a transpiler is instead :P
[17:43:26] <FromDiscord> <Rika> Aww
[17:44:40] * mst still suspects that in theory he would have preferred foo_bar -> fooBar rather than just ignoring case and underscores entirely, but in practice I've yet to run into a case where that actually made a difference so *meh*
[17:46:55] <FromDiscord> <Rika> Differing ways of capitalising acronyms. Nim prefers not shouting (Html), some do as written in English (HTML)
[17:47:04] <FromDiscord> <dom96> it sucks that the IRC<->Discord bridge doesn't support actions
[18:19:01] <FromDiscord> <narimiran> "I started looking at Nim a few months ago, but I didn't like the feature where it ignores underscores and capitalization."
[18:19:03] <FromDiscord> <haxscramper> https://news.ycombinator.com/item?id=28918562
[18:19:09] <FromDiscord> <haxscramper> now we are talking
[18:19:10] <FromDiscord> <narimiran> ding-ding-ding, we have a winner
[18:19:28] <FromDiscord> <narimiran> (did we post the same thing at the same time? :))
[18:19:33] <FromDiscord> <haxscramper> almost
[18:19:44] <FromDiscord> <haxscramper> well, modulo matrix bridge lag of course
[18:20:35] <FromDiscord> <narimiran> ok, if somebody decides to reply — there is `nimgrep` which deals with "make grepping harder"
[18:22:31] <FromDiscord> <haxscramper> I don't use nimgrep evenm
[18:22:55] <FromDiscord> <haxscramper> `rg` is still faster, and I used it for everything else
[18:23:07] <FromDiscord> <haxscramper> and I never had any issues with style insensetivity
[18:23:18] <FromDiscord> <enthus1ast> i find the "whitespace" vs braces quite amusing actually \:)↵one should have whitespace any how, but when a brace is not in place, you dont see it, and must count...
[18:23:35] <FromDiscord> <enthus1ast> every time i edit js ....
[18:23:50] <FromDiscord> <narimiran> rainbow parentheses plugin 😉
[18:24:05] <FromDiscord> <enthus1ast> have it↵(@narimiran)
[18:24:25] <mst> I prefer braces -and- sensible indentation over just indentation
[18:24:30] <FromDiscord> <enthus1ast> fixing identation bugs takes seconds
[18:24:38] <mst> but I don't care about that enough to mind nim's syntax
[18:24:50] <FromDiscord> <haxscramper> I updated reply↵(@narimiran)
[18:25:34] <FromDiscord> <Rika> In reply to @narimiran "ding-ding-ding, we have a": HES REASONABLE THO
[18:25:43] <FromDiscord> <Rika> hes not like "fuck this this is scuffed" or w/e
[18:26:38] <FromDiscord> <haxscramper> THO
[18:26:51] <FromDiscord> <Rika> In reply to @narimiran "rainbow parentheses plugin 😉": then that is one more argument against "default tooling doesnt work well with whitespace", nice
[18:27:29] <FromDiscord> <Rika> enthusiast: many indentation bugs give errors as cryptic as C++ template errors sometimes
[18:29:26] <mst> https://news.ycombinator.com/item?id=28918780
[18:29:47] <mst> (I think that reads as friendly, it's supposed to at least)
[18:29:56] <FromDiscord> <dom96> In reply to @Rika "hes not like "fuck": true
[18:30:59] <FromDiscord> <haxscramper> hn discussion I linked had approximately \~2855 words worth of text
[18:31:06] <FromDiscord> <haxscramper> 2.5k+ words for this crp
[18:31:08] <FromDiscord> <Rika> mst lmfao
[18:31:20] <FromDiscord> <Rika> its more passive aggressive id say
[18:35:47] <mst> Rika, I went with 'not had time' to try and defang that but yeah probably
[18:35:49] * mst shrugs
[18:47:42] <FromDiscord> <dom96> Hrm, I think it reads friendly
[18:48:18] <mst> probably depends on the reader, but I'm just going to leave it up and led what happens happen
[18:48:27] <mst> if I get docked an imaginary internet point or three that's fine
[18:48:36] <mst> usually that happens when people don't understand a pun
[18:51:12] <FromDiscord> <IsaacPaul> I did not know nim was style insensitive.. honestly, I'm still getting used to the white space and I dont see an issue with the capitalization stuff
[18:51:24] <FromDiscord> <IsaacPaul> (edit) "capitalization" => "style"
[18:52:18] <FromDiscord> <Rika> ~~well its something you dont notice unless you're looking for a fight~~
[18:52:25] <FromDiscord> <el__maco> the only "problem" I have had with the syntax so far is the occasional requirement to add blanks where I would normally have none. Seems a bit odd that ``a=-1 `` type of statement doesn't seem to work
[18:52:42] <FromDiscord> <Rika> because it parses as a =- 1
[18:52:49] <FromDiscord> <el__maco> similar thing with the star sometimes
[18:52:59] <FromDiscord> <Rika> example?
[18:53:45] <FromDiscord> <enthus1ast> i would argue that you normally should have a whitespace there
[18:54:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[18:54:39] <FromDiscord> <el__maco> doesn't something like ``var a=10`` require a blank
[18:54:42] <mst> enthus1ast you would. I would. I've seen a fair bit of code that didn't, especially when doing multiple assignments
[18:54:54] <mst> (a=-1,b=7) type of code
[18:55:28] <FromDiscord> <el__maco> what is this =- operator anyways
[18:56:18] <nrds> <06Prestige99> a = -1 ?
[18:57:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:57:22] <FromDiscord> <IsaacPaul> Swift enforces spacing. I like it a lot. Gives me 1 less thing to to think about lol
[18:57:55] <nrds> <06Prestige99> wonder if nimpretty handles that case
[18:59:07] <FromDiscord> <Rika> In reply to @el__maco "what is this =-": possible operator
[18:59:28] <FromDiscord> <Rika> In reply to @el__maco "doesn't something like ``var": no, `var a = 10` makes no sense
[18:59:52] <FromDiscord> <Rika> and `a=10` is not ambiguous i believe
[19:00:03] <FromDiscord> <Rika> !eval var a = 10
[19:00:06] <FromDiscord> <el__maco> do I need the ``=-`` operator I wonder. Or ``=``... because if not, I could consider solving this "problem" the same way I solved Nim's unfortunate tendency to reject tabs
[19:00:08] <NimBot> Compile failed: /usercode/in.nim(1, 7) Error: invalid token:  (\29)
[19:00:27] <FromDiscord> <Rika> !eval var a = 10; a=10; echo a
[19:00:30] <NimBot> Compile failed: /usercode/in.nim(1, 14) Error: invalid token:  (\29)
[19:00:48] <FromDiscord> <Rika> eh? is this just discord fucking with me or what
[19:01:20] <FromDiscord> <treeform> In reply to @tandy "<@!107140179025735680> would you have": Sure. I take all of the jsony PRs.
[19:01:38] <FromDiscord> <Rika> In reply to @el__maco "do I need the": the idea is that someone might define it then `a=-1` would change meaning if =- undefined meant using `a = -1`
[19:01:56] <FromDiscord> <Rika> just space your operators properly...
[19:02:15] <FromDiscord> <el__maco> I don't want extra spaces, they are noise to me
[19:02:34] <FromDiscord> <el__maco> just aesthetic preference 🤷‍♂️
[19:03:16] <FromDiscord> <el__maco> Nim's syntax otherwise is so clean and free from noise
[19:03:24] <FromDiscord> <Rika> i mean okay
[19:03:30] <FromDiscord> <Rika> cant win every battle i guess
[19:03:57] <FromDiscord> <clyybber> @exelotl are you sure https://github.com/nim-lang/Nim/issues/19011 is a regression? AFAICT it an issue on 1.2.x and 1.0.x too
[19:04:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:05:05] <FromDiscord> <exelotl> oh weird
[19:05:36] <FromDiscord> <clyybber> (edit) "it" => "it's"
[19:07:27] <FromDiscord> <exelotl> @clyybber the following does compile on 1.2.x  https://play.nim-lang.org/#ix=3Ce0
[19:07:39] <FromDiscord> <exelotl> I assumed it was because the AST didn't have the junk in it
[19:07:51] <FromDiscord> <exelotl> but it might just be due to the implementation of parseEnum
[19:09:17] <FromDiscord> <clyybber> yeah, still a valid bug of course
[19:14:30] <FromDiscord> <exelotl> Amended my ticket:↵> This issue was introduced in Nim 0.19.0. The AST is as-expected in 0.18.x. However, parseEnum could still handle the bad AST until 1.4.0.
[19:29:51] <FromDiscord> <juan_carlos> Congrats to all the core team and contributors for 1.6.
[19:39:29] <FromDiscord> <retkid> > support for Apple silicon/M1, 32-bit RISC-V, armv8l, CROSSOS, improved support for NodeJS backend
[19:39:37] <FromDiscord> <retkid> :O
[19:39:42] <FromDiscord> <retkid> big W
[19:45:34] <FromDiscord> <iffy (Matt Haggard)> @treeform Does pixie have a built-in way to remove the alpha channel from a PNG file? Browsing the source makes me think no, so I'm just double checking.
[19:49:56] <FromDiscord> <Rika> Use nimpng for that instead I would say…
[20:02:22] <FromDiscord> <iffy (Matt Haggard)> That was easier than I expected\: http://ix.io/3Ceb
[20:02:58] <FromDiscord> <nc-x> is there any roadmap (new features / existing experimental stuff getting stabilized / lots of work on nimsuggest etc) for the next release?
[20:03:10] <FromDiscord> <nc-x> (edit) "is there any roadmap (new features / existing experimental stuff getting stabilized / lots of work on nimsuggest etc) ... for" 03added "planned"
[20:03:34] <FromDiscord> <nc-x> (edit) "is there any roadmap (new features / existing experimental stuff getting stabilized / lots of work on nimsuggest ... etc)" 03added "/ ic / getting rid of forward declarations"
[20:03:58] <FromDiscord> <Rika> Issues on GitHub have a milestone system I believe
[20:04:03] <FromDiscord> <nc-x> btw congratulations on 1.6 release
[20:04:32] <FromDiscord> <nc-x> In reply to @Rika "Issues on GitHub have": nothing for 1.8 yet https://github.com/nim-lang/Nim/milestones
[20:04:48] <FromDiscord> <Rika> That is because 1.6 just released
[20:04:54] <FromDiscord> <Rika> Over time issues will be added
[20:05:14] <FromDiscord> <nc-x> there is one issue in https://github.com/nim-lang/RFCs/milestone/5 but no progress afaik
[20:05:43] <FromDiscord> <nc-x> In reply to @Rika "Over time issues will": i know, i am just asking if any "major" things are planned, like making orc default etc..
[20:06:10] <FromDiscord> <Rika> I think that is one yes
[20:06:21] <FromDiscord> <Rika> Otherwise it’s just scattered in the text channels here
[20:07:13] <FromDiscord> <pointystick> Three big things I remember are incremental compilation, CPS and lazy semcheck.  I'm not sure what release they're scheduled for, if any
[20:08:12] <FromDiscord> <dom96> CPS isn't developed by the core team
[20:16:24] <FromDiscord> <leorize> cps already works on 1.6
[20:21:27] <FromDiscord> <haxscramper> IC seems to be postponed with no concrete release date, lazy semcheck was barely scratched and unlikely to be released in working capacity any time soon↵(@pointystick)
[20:22:08] <FromDiscord> <zetashift> damn, IC sounds like a hard problem to solve!
[20:22:25] <FromDiscord> <haxscramper> Milestones can be ignored, nobody bothers to do them anyway↵(@nc-x)
[20:23:14] <FromDiscord> <haxscramper> They are not filled/updated/tracked/remembered when aiming for feature and so on
[20:37:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:46:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[20:47:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:24:23] <FromDiscord> <exelotl> if I want to make a macro that outputs a call to a proc (from the same module), how do I ensure it calls the intended proc and not someone else's proc that happens to have the same name?
[21:24:43] <FromDiscord> <ynfle (ynfle)> `bindSym`
[21:25:25] <NimEventer> New thread by Shirleyquirk: GenAst, see https://forum.nim-lang.org/t/8514
[21:26:07] <FromDiscord> <exelotl> sent a code paste, see https://paste.rs/fA4
[21:27:49] <FromDiscord> <ynfle (ynfle)> https://nim-lang.org/docs/manual.html#macros-bindsym Check out this link
[21:32:56] <FromDiscord> <haxscramper> Compiler explorer for nim 1.6.0 was merged, should be available soon
[21:33:41] <FromDiscord> <haxscramper> Relatively soon, when they roll out new versions\
[21:38:33] <FromDiscord> <kevin> Is there a way to stop a `spawn`ed thread?
[21:39:19] <FromDiscord> <kevin> sent a code paste, see https://play.nim-lang.org/#ix=3CeG
[21:39:26] <NimEventer> New thread by V3ss0n: The fate of Nim Editors, see https://forum.nim-lang.org/t/8515
[21:40:32] <FromDiscord> <exelotl> ynfle: ah thanks!
[21:44:41] <FromDiscord> <el__maco> are the config files compatible between 1.4.8 and 1.6.0
[21:44:54] <FromDiscord> <el__maco> i.e. can I just copy my nim.cfg over
[21:48:03] <FromDiscord> <haxscramper> yes
[21:48:10] <FromDiscord> <el__maco> good
[21:48:48] <FromDiscord> <haxscramper> there are new recommended flags https://forum.nim-lang.org/t/8511#55108 for this version of course↵(@elmaco)
[21:51:56] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[21:52:57] *** Joins: xet7 (~xet7@user/xet7)
[21:53:01] <FromDiscord> <el__maco> I notice ``--experimental:codeReordering`` doesn't seem to be the best of ideas to have there
[21:58:44] <FromDiscord> <haxscramper> Well, I personally see exactly zero reason for this feature to exist in the first place
[21:58:59] <FromDiscord> <haxscramper> Because how hard could it be to write seveal procs forward
[21:59:30] <FromDiscord> <haxscramper> Also last time I used this it just hung compiler on mutually recursive generic calls or something like that
[22:00:53] <FromDiscord> <el__maco> its the best feature of the language tbh. Writing forward declarations is so silly
[22:01:47] <FromDiscord> <haxscramper> I dont' say there is some meaning in that, I say it is so trivial there is no need to maintain another experimental feature for this
[22:04:12] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[22:26:28] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:31:36] <NimEventer> New thread by Gcao: Does Nim support name for anonymous procedures?, see https://forum.nim-lang.org/t/8516
[22:42:31] <FromDiscord> <Koni> is there any command to bootstrap a Nim Project?
[22:45:55] <FromDiscord> <zetashift> When one is past the honeymoon phase with a language and straight up into compiler fights!
[22:46:18] <FromDiscord> <zetashift> `nimble init`↵(@Koni)
[22:47:01] <FromDiscord> <Koni> :hmmok:
[23:07:31] <FromDiscord> <exelotl> hmm I just noticed my library has `sgn` and `sgn3` (these names came from the C library I translated) https://media.discordapp.net/attachments/371759389889003532/900105394851045436/unknown.png
[23:07:58] <FromDiscord> <exelotl> but Nim already has a `sgn` in std/math which does the same thing as my `sgn3`
[23:10:53] <FromDiscord> <exelotl> what would be a better name for a sign function that only ever returns 1 or -1 ?
[23:14:24] <FromDiscord> <Elegantbeef> `sign`
[23:16:04] <FromDiscord> <ee7> You can also call it signum. "sign" sounds a lot like "sine". See e.g. https://mathworld.wolfram.com/Sign.html
[23:17:01] <FromDiscord> <ee7> (Congrats everyone on 1.6!)
[23:19:42] <FromDiscord> <exelotl> I'm considering `sign` but it feels backwards. It should be like  `del` vs `delete` where the cheaper _"I know what I'm doing"_ version is the one with the abbreviated name
[23:39:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:42:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:42:37] <FromDiscord> <konsumlamm> i see exactly zero reason for `del` and `delete` existing tbh, it only causes confusion
[23:50:51] <FromDiscord> <ee7> I meant `sgn3` could be called `signum`, and then you could name the other one something explicit like `signumNoZero` or `signumOnlyOnes`? This isn't compatible with your abbreviated naming thing, though.
[23:51:37] <FromDiscord> <ee7> But if you like `sgn3`, you could have `sgn2`.
[23:51:39] <FromDiscord> <IsaacPaul> Yea I was just about suggest something like `signFavorPositive`
[23:54:51] <FromDiscord> <IsaacPaul> I honestly wouldn't expect sign to ever return 0 tbh. I expect a 'sign' back..
[23:56:57] <FromDiscord> <ee7> That's how it works in numpy. See https://numpy.org/doc/stable/reference/generated/numpy.sign.html
[23:57:56] <FromDiscord> <IsaacPaul> ooo I got it.. sgn(x: T, zeroResult: T) then just pass in a default value for 0 lol
[23:58:13] <FromDiscord> <exelotl> mathematically it makes no sense but in game physics I basically always want a 1 or -1
[23:58:34] <FromDiscord> <exelotl> lest I riddle my game with subpixel-perfect collision bugs xD
