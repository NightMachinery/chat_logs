[00:00:17] <Z-module> What do you mean by cross product?
[00:01:05] <Z-module> If the entries of the matrices are from any commutative ring at all (like R or Z or Z/4Z), then normal matrix multiplication is always associative.
[00:01:46] *** Quits: bildramer (~bildramer@athedsl-22607.home.otenet.gr) (Ping timeout: 245 seconds)
[00:01:58] <Z-module> and also if the entries are from Z, you can do the matrix mult. first and apply reduction mod 4 only on the final answer, or you can reduce everything mod 4 before beginning (and then again at the end), and the result will be the same.
[00:02:59] <Z-module> I think you do mean ordinary matrix multplication. But beware, that is not called "cross product" which is something else entirely.
[00:04:07] <biberao> Z-module: i need you for some logic you in?
[00:04:25] <Z-module> can't just now, ahve to go do stuff, sorry
[00:05:03] *** Joins: bildramer (~bildramer@2a02:587:620e:c00:ec0f:9f01:1ad6:9330)
[00:05:59] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[00:10:26] <cuppajoeman> https://usercontent.irccloud-cdn.com/file/FeVbw8qi/image.png
[00:10:32] <biberao> PlanckWalk: here?
[00:10:34] <cuppajoeman> How do we know that this is consistent?
[00:11:05] <riv> it's not obvious
[00:11:12] <riv> one way would be to construct a model
[00:11:16] <cuppajoeman> https://usercontent.irccloud-cdn.com/file/mtZEf9II/image.png
[00:11:20] <cuppajoeman> (def of consistent)
[00:12:08] <cuppajoeman> Wouldn't we have to show that there is no deduction of [ (f.a. x ) x = x) & ~ (f.a. x) x = x ]
[00:12:44] <riv> existence of a model implies consistency
[00:12:52] <riv> proving syntactic consistency directly is very diffifcult
[00:13:44] <cuppajoeman> Can you explain how we have this: "existence of a model implies consistency"
[00:13:52] <riv> it's a theorem
[00:15:30] <cuppajoeman> I see why
[00:16:20] <cuppajoeman> If Sigma is inconsistent then we can deduce a contradiction, by soundness Sigma logically implies a contradiction
[00:16:43] <cuppajoeman> But the only way for Sigma to logically imply a contradiction is vacuously, so Sigma must have no model
[00:17:03] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca)
[00:17:11] <cuppajoeman> So the contrapositive says that If sigma has a model, then it is consistent
[00:17:27] *** Quits: Koen (~Koen@61.192.201.77.rev.sfr.net) (Quit: Leaving...)
[00:17:33] <cuppajoeman> Ok, so you're saying we just have to construct a model of Sigma, and we would show it's consistent?
[00:18:29] <Inline> err
[00:18:49] <Inline> So the contrapositive says that If sigma has a "consistent model", then it is consistent
[00:19:29] *** Joins: Firedancer (sid336191@hampstead.irccloud.com)
[00:20:45] <Inline> seems like it is a goal-posting down thing
[00:21:05] <Inline> otherwise it looks like you solved the halting problem or decidability
[00:21:24] <riv> yes maybe you could construct a model without much difficulty
[00:21:45] <Inline> the model is a thing and it's consistency is another thing
[00:22:20] <riv> model implies consistency
[00:23:32] <Inline> it's an open thing, more consistent, most consistent for some purpose and no-more-consistent than a certain threshold for any-purpose
[00:23:50] <Inline> there are contingents
[00:24:14] <riv> dont think what youre saying is good
[00:24:20] <Inline> hmmm
[00:25:10] <riv> https://math.stackexchange.com/questions/989984/existence-of-model-implies-consistency-in-cohens-book this is the theorem
[00:25:21] *** Joins: Warhammer (~conta@196.189.190.136)
[00:28:24] *** Quits: Warhammer (~conta@196.189.190.136) (Quit: Leaving)
[00:29:15] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[00:29:56] *** Quits: takuan_dozo (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[00:30:57] *** bosspotato_ is now known as bosspotato
[00:33:03] <Inline> hmmm
[00:33:06] <Inline> Having agreement with itself or with something else
[00:33:23] <Inline> CONSISTENT. That which agrees with something else
[00:33:33] <Inline> so we have 2 parts to it
[00:33:42] <Inline> with itself is rather trivial or not ?
[00:33:52] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:34:42] <riv> you are just saying words
[00:34:47] <Inline> yes
[00:34:50] <Inline> like you
[00:34:53] <Inline> lol
[00:34:55] <Inline> oh man
[00:35:16] *** Joins: brownorange (~brownoran@user/brownorange)
[00:37:53] *** Joins: tektik (~said@68.33.69.0)
[00:50:02] <biberao> brownorange:
[00:50:05] <biberao> i have something for you
[00:50:16] <brownorange> ok
[00:50:24] <biberao> we're trying to prove the book is wrong
[00:50:28] <biberao> prove this
[00:50:30] <biberao> https://imgur.com/a/IoBhC5u
[00:51:05] <brownorange> that's suppose to be a tautology i'm guessing?
[00:51:39] <biberao> well
[00:52:04] <biberao> the question requires me to get to (a<=>b) from the left part
[00:52:05] *** Joins: orbatos (~orbatos@user/orbatos)
[00:53:10] *** Joins: Jordy (~jordy@user/jordy)
[00:53:16] *** Joins: Jordy_ (~jordy@user/jordy)
[00:53:31] <brownorange> i can give it a try
[00:53:44] <biberao> thanks
[00:54:19] *** Quits: orbatos__ (~orbatos@user/orbatos) (Ping timeout: 268 seconds)
[00:55:30] *** Quits: Jordy (~jordy@user/jordy) (Client Quit)
[00:55:41] *** Quits: Jordy_ (~jordy@user/jordy) (Client Quit)
[00:56:59] *** Joins: jellydonut (~quassel@185.213.154.161)
[00:57:25] <brownorange> "!(!a implies b) or (a and b)" according to wolfram that generate the truth table xnor has.
[00:57:31] <brownorange> which means
[00:58:05] <brownorange> (~(~a implies b) or (a and b)) xnor (a xnor b)
[00:58:23] <brownorange> as for proving it syntactically, that will take much longer
[00:58:39] <biberao> well
[00:58:46] <biberao> i wanted syntactically lol
[00:59:05] <biberao> i want to compare to the book maybe someone got a better lightbulb
[00:59:38] <brownorange> sure. i'll have a go. it might take a while i haven't done a proof in at least a year
[01:00:53] <int-e> biberao: you get to use about every identity in the book ;) (<==> in terms of ==>; ==> in terms of \/ and ~; de Morgan, distributivity, and a bunch of trivial simplifications like ~a /\ a = _|_)
[01:01:16] <biberao> ok let me paste the solution
[01:01:23] <biberao> because line 4 and 5 is driving me nuts
[01:01:40] <biberao> https://imgur.com/a/zcJ6tk2
[01:02:01] <biberao> *are
[01:02:33] <PlanckWalk> Don't you already have (a <-> b) = (~a & ~b) v (a & b)?
[01:02:58] <biberao> yes
[01:03:03] <biberao> but they want the rest
[01:03:14] <biberao> i know that it already has the solution
[01:03:23] <PlanckWalk> So everything after line 4 is superfluous
[01:03:38] <biberao> but they want us to do that
[01:03:40] <int-e> biberao: line 5 is missing a "\/ a" inside the first bracket
[01:04:48] <biberao> ok
[01:04:51] <int-e> biberao: the step is using distributivity.
[01:04:51] <biberao> that looks better
[01:05:04] <biberao> yes i understood that but since it "ate" the "a"
[01:05:06] <biberao> i was
[01:05:17] <biberao> something is wrong
[01:05:22] <int-e> so's the next one, which uses the invisible "\/ a"
[01:05:53] *** Quits: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:05:56] <biberao> ya after that it distributes the "a"
[01:06:19] <biberao> i was like am i going crazy :D
[01:06:20] <int-e> what's that notation for truth :-/
[01:06:36] <PlanckWalk> I expect it's not in English
[01:06:46] <int-e> ah, right.
[01:06:48] <biberao> int-e: "V"
[01:06:50] <biberao> ?
[01:06:53] <int-e> yeah
[01:06:53] <biberao> Verdade = Truth
[01:07:27] <biberao> this book relies a lot on this way of solving other book relies more on truth tables
[01:07:43] <biberao> int-e: you figured it out nicely thanks :D
[01:07:49] *** Joins: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net)
[01:07:52] <PlanckWalk> They're equivalent, really.  Truth tables are equivalent to disjunctive normal form
[01:07:57] <brownorange> @biberao you might like this as a starting point.  http://us.metamath.org/mpeuni/pm4.65.html
[01:08:29] <biberao> ok cool
[01:08:32] <PlanckWalk> So if you can put two expressions into DNF, then they're equivalent
[01:08:40] <PlanckWalk> Err, into the same DNF
[01:08:45] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[01:08:57] *** Quits: stanrifkin (~stanrifki@p200300dbcf43bc00cd4d72ec98b8b11a.dip0.t-ipconnect.de) (Quit: Leaving)
[01:09:14] <biberao> ah ok
[01:09:25] <biberao> PlanckWalk: but they demand us the superfluous stuff
[01:09:39] <PlanckWalk> Each term of DNF corresponds to a "1" in a row of truth table
[01:10:10] <int-e> the DNF /may/ be exponentially smaller
[01:10:23] <PlanckWalk> Larger?  Yes, it may.
[01:10:32] <int-e> no, smaller, than the truth table
[01:10:40] <PlanckWalk> Oh, right.
[01:10:49] <int-e> a \/ b \/ c \/ d
[01:11:00] <PlanckWalk> If the table has very few ones
[01:11:09] <biberao> int-e: im so used to english typing here that when i solve an exercise and want to show i usually do (p or V)=T and meant to type (p or T)=T
[01:11:13] <int-e> Well, "the". It's also ambiguous
[01:11:31] <int-e> (smallest DNFs are not unique)
[01:11:58] <PlanckWalk> Oh, I guess I meant full DNF
[01:12:06] <PlanckWalk> Or canoncical DNF
[01:12:16] *** Parts: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-130.dsl.bell.ca) ()
[01:12:17] <PlanckWalk> canonical*
[01:13:25] *** Joins: cjb (~cjb@user/cjb)
[01:13:57] <int-e> biberao: there's a case to be made for the language-neutral ⊤ and ⊥ for T and F
[01:14:52] <biberao> its not easy
[01:15:36] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:17:02] *** Joins: isekaijin (~isekaijin@user/isekaijin)
[01:18:12] <brownorange> @biberao is there no limit on what theorems you can start with?
[01:18:24] <biberao> brownorange: no limits
[01:18:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:19:05] <brownorange> nice. well i would definitely recommend exploiting metamath's database of theorems
[01:20:55] <biberao> brownorange: int-e spotted the error.
[01:21:48] <brownorange> @biberao ah good, i had to actually switch axiom systems once to prove a theorem
[01:22:36] <biberao> thanks everyone for the time spent helping me
[01:24:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:27:27] *** crankslider is now known as slidercrank
[01:33:30] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[01:33:58] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:41:34] *** Joins: Guest44 (~Guest44@2a02:8308:310:f000:e1f3:6ca7:1b5c:d302)
[01:43:32] *** Quits: Guest44 (~Guest44@2a02:8308:310:f000:e1f3:6ca7:1b5c:d302) (Client Quit)
[02:01:46] *** Joins: seninha (~seninha@user/seninha)
[02:04:44] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:55] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.3)
[02:05:14] *** Joins: Arcorann (~A@user/arcorann)
[02:08:36] *** Quits: preyalone (uid21561@id-21561.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:47] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 250 seconds)
[02:13:15] *** Quits: rtur (~weechat@mail.rtur.org) (Ping timeout: 265 seconds)
[02:14:28] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[02:14:56] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[02:16:03] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3-dev)
[02:16:13] <nicoty> What's the fastest way to calculate some number  "a" where "a" is the smallest multiple of some number "b" that's at least as big as some number "c" but isn't a multiple of some arbitrary amount of numbers  "d", "e", etc.?
[02:17:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:19:19] <nicoty> Looking back, that question's a bit ambiguous. To be clear, I meant that "a" isn't a multiple of some arbitrary amount of numbers  "d", "e", etc.
[02:26:29] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790:2422:c266:c912:abfe)
[02:27:16] <Vornicus> so a | b, a >= c, a ∤ {d,e, ...}?
[02:28:00] <qergle> b|a
[02:28:10] <Vornicus> ...right, that way
[02:28:11] *** Joins: phao (~phao@2804:d45:8e7a:de00:3d77:95ad:ea97:5294)
[02:28:19] <qergle> and {d,e,...} ∤ a
[02:28:48] *** Joins: stipa (~stipa@user/stipa)
[02:31:06] <PlanckWalk> Probably just counting forward from the smallest multiple of b that's at least c
[02:31:32] <PlanckWalk> You might do some minor simplifications if and of d+ share factors with a
[02:31:39] <PlanckWalk> if any* of
[02:31:46] <PlanckWalk> Err, with b
[02:32:11] *** Quits: anovick (~anovick@IGLD-83-130-138-203.inter.net.il) (Ping timeout: 264 seconds)
[02:32:12] <qergle> if d+ share factors with b, the problem is over.
[02:32:21] <PlanckWalk> Not completely
[02:32:28] *** Joins: emerent_ (~quassel@p200300cd57485584ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:32:28] *** emerent is now known as Guest2829
[02:32:28] *** emerent_ is now known as emerent
[02:32:36] <Vornicus> for values of d that don't share factors with b, then it'll only ever hit once every d
[02:32:59] *** Quits: Guest2829 (~quassel@p200300cd57485576ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:33:09] <PlanckWalk> The d+ may have prime factors that b doesn't
[02:33:17] <PlanckWalk> (Or really, factors in general)
[02:34:00] <qergle> right, coprimality is stronger than is being asked of here
[02:34:02] <PlanckWalk> But you can fairly easily find gcds
[02:34:23] <Vornicus> for values of d that *do*, uh ... I can't do it in my head, but I think it also has a cycle of length gcd(b,d)
[02:34:32] <PlanckWalk> If b = 6 and d=10, then you can fairly easily just treat d as if it were 5
[02:34:34] <qergle> just crawl up (sieve) and discard the obvious no-gos
[02:34:54] <PlanckWalk> It's usually pretty easily to find *non*-multiples
[02:35:25] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Quit: Reconnecting)
[02:35:39] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[02:36:22] <PlanckWalk> Like primes, their density decreases pretty slowly
[02:37:02] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790:2422:c266:c912:abfe) (Quit: Never gonna give you up, never gonna let you down...)
[02:38:35] <nicoty> So I should just use something like the following?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/45fe8dc12b1cc74049351e27284380a1e9194995)
[02:38:36] *** Quits: cherim (UserNick@host-217-197-197-182.rev.as20985.net) (Read error: Connection reset by peer)
[02:38:38] <PlanckWalk> So basically just remove factors shared with b.
[02:39:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:39:28] *** Joins: cherim (UserNick@host-217-197-197-182.rev.as20985.net)
[02:39:37] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:39:41] <PlanckWalk> Then count up from  ceil(c/b)
[02:40:42] <PlanckWalk> You coudl probably sieve, but since you only want the first one, that probably doesn't help much unless you have a *lot* of divisors to remove.
[02:41:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:41:36] <PlanckWalk> You coudl estimate an average for how many you need to test, and sieve about that many at a time.
[02:42:14] <PlanckWalk> But since it only grows like log(N), it's hardly worth it.
[02:45:36] <nicoty>  * So I should just use something like the following?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/87058197ca745243afff138f77e8784f317d66b4)
[02:45:45] <PlanckWalk> I don't know rust
[02:45:55] <PlanckWalk> But let's see...
[02:46:37] <PlanckWalk> Like, I'm not sure what "let mut out" means, but I presume it's nothing about a dog needing to do its business outside
[02:46:46] *** Quits: sheepduck_ (~sheepduck@user/sheepduck) (Remote host closed the connection)
[02:47:30] <nicoty> Oh it's just some rust-specific syntax that means that the `out` variable is mutable.
[02:47:31] <PlanckWalk> Basically the structure looks like I'd expect yes
[02:47:49] <PlanckWalk> Find the first, then test a candidate against forbidden factors
[02:47:57] <PlanckWalk> And keep doing that
[02:48:48] <nicoty> Ok thanks. I'm not sure I got what you guys were talking about with not indlcuding d, e, etc. that are also factors of b though. What's the purpose of that?
[02:49:15] <int-e> nicoty: you should probably also check that none of the numbers in not_factors divides factor (to avoid the embarrassment of looping indefinitely)
[02:49:53] <nicoty> Ah good catch, I'll do that
[02:53:11] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[02:54:13] *** Joins: sonny (~sonny@8.21.10.78)
[02:54:26] <PlanckWalk> nicoty: if you were doing sieving, you'd want some step like that
[02:54:35] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[02:54:37] <PlanckWalk> But it's probably not worthwhile
[02:55:58] <PlanckWalk> You'd need a *lot* of non-factors for it to be any help at all, and large numbers.
[02:56:52] <PlanckWalk> E.g. a hundred thousand non-factors with a starting number of 100 digits or something.
[02:57:13] *** Joins: jk8h (~jk@user/jk8h)
[02:59:08] <PlanckWalk> Hmm actually I guess it could help with smaller problem sizes too.
[02:59:22] <PlanckWalk> But most problems will be trivially fast anyway.
[03:00:12] <nicoty> So I should just remove those numbers from the `not_factors` list?
[03:00:40] <PlanckWalk> Probably not.
[03:00:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:01:11] <nicoty> I guess I misunderstood what the advice was..
[03:01:14] <PlanckWalk> The simplest algorithm here is fast enough for most purposes.
[03:01:59] <PlanckWalk> It's really a matter of you initially asking for "the fastest", but you probably don't actually need "the fastest"
[03:02:17] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-48d0-0004-7e9c-d196.res6.spectrum.com) (Read error: Connection reset by peer)
[03:03:11] *** Quits: bitd (~bitd@user/bitd) (Remote host closed the connection)
[03:03:14] *** Joins: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655)
[03:03:49] <nicoty> Yeah but just to be clear, was actually was the suggested optimisation? Because I don't think I understood what it was and what it's supposed to achieve.
[03:03:58] <nicoty> what actually*
[03:04:35] <PlanckWalk> Well, let's suppose that you had b=6 and non-factors={12, 30, 5, 17, 22}
[03:05:31] <PlanckWalk> You're counting up in multiples of 6 already, so you can just keep track of how many multiples you have
[03:06:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:06:12] <PlanckWalk> I.e. you're looking for a=bk, and incrementing k each time
[03:07:25] <PlanckWalk> d=12 means eliminating any k that are divisible by 2
[03:07:34] <PlanckWalk> d=30 means eliminating any k that are divisible by 5
[03:07:43] *** Quits: arseniiv (~arseniiv@136.169.238.48) (Ping timeout: 265 seconds)
[03:07:44] <PlanckWalk> d=5 *also* means eliminating any k that are divisible by 5, so you can get rid of that
[03:08:05] <PlanckWalk> d=22 means eliminating k divisible by 11
[03:08:27] <PlanckWalk> So you've reduced the list to {2, 5, 11, 17}
[03:08:34] <nicoty> Oh I see, that makes sense, thanks.
[03:08:42] <PlanckWalk> Then you can use a sieve on that
[03:09:54] <PlanckWalk> Start with a table from your minimum value, and cross out all multiples of 2 (which just requires addition, no division).  Then cross out multiples of 5, 11, and 17.
[03:10:12] *** Quits: phao (~phao@2804:d45:8e7a:de00:3d77:95ad:ea97:5294) (Quit: Leaving)
[03:10:14] <PlanckWalk> Note that the larger values mean you do less work.
[03:10:42] <nicoty> That won't be applicable for my use case I think. I should've mentioned that the numbers in `not_factors` will be prime numbers (fwiw, `factor` will also be a prime number).
[03:11:13] <PlanckWalk> E.g. if your table had 30 values in it, the multiples of 2 cross out 15 numbers, the 5's cross out 6, the 11's cross out 2, and the 17's cross out only 1.
[03:12:07] <PlanckWalk> That's a lot faster than testing every number in the table by division with each of the forbidden factors.
[03:12:17] <PlanckWalk> And yeah, if they're prime it's not needed.
[03:12:38] <PlanckWalk> But a sieve might still be useful
[03:12:47] <PlanckWalk> (Depending how many there can be)
[03:13:08] <PlanckWalk> (and what sizes they are)
[03:14:05] <nicoty> What might the sieve still be useful for? I don't think I quite caught what you meant
[03:14:11] <PlanckWalk> You could even do a quick estimate to see whether it's worthwhile.  Add up the reciprocals to get an average of how many numbers you'll likely need to test
[03:14:35] <PlanckWalk> The sieve might be useful for speeding up finding suitable multiples.
[03:16:07] <PlanckWalk> Oops, not adding reciprocals.
[03:16:29] *** Quits: trbp (~trbp@user/trbp) (Remote host closed the connection)
[03:16:48] <PlanckWalk> Multiplying d/(d-1) for each non-factor d.
[03:17:44] *** Quits: placeb0 (uid283215@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:17:45] <PlanckWalk> For my example, 2/1 * 5/4 * 11/10 * 17/16 ~= 2.9.  So you'd on average expect to need to test about 3 numbers before finding a winner
[03:17:56] <PlanckWalk> A sieve would be hardly useful there.
[03:18:01] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[03:18:28] <nicoty> Ok I think you lost me with the sieve thing. How should I be incorporating sieving to what I'm already doing with the functions I sent earlier?
[03:18:45] <PlanckWalk> A sieve would replace the second half
[03:18:57] <PlanckWalk> It would also be more complex
[03:19:14] <PlanckWalk> It's up to you whether it's worthwhile
[03:22:03] <PlanckWalk> If your list of non-factors included the first 1000 primes, it would definitely be useful.
[03:23:19] <nicoty> I don't really see how a sieve would help though. The way I'm thinking that a sieve might be incroporated is if I generated some multiples of the factor, then mark off any multiples of the non-factor, then get the first non-marked result. But I don't get how that would be faster than just using the function from earlier?
[03:23:30] <PlanckWalk> Though really, even that wouldn't be terribly slow with what you have
[03:23:53] <PlanckWalk> The main difference is the reduced work you have to do per factor.
[03:24:06] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[03:24:43] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[03:24:46] <nicoty> Ah ok I guess that makes sense.
[03:25:26] *** Quits: dsrt^ (~dsrt@70.166.66.234) (Remote host closed the connection)
[03:25:45] <PlanckWalk> In that example it might be a factor of 10 speedup or so.
[03:26:05] <PlanckWalk> But it would still be the difference between (say) 100 microseconds and 10 microseconds.
[03:26:38] <PlanckWalk> SO you'd need to use this *a lot* for any difference to be noticeable.  As I said, I only mention it because you asked for fastest, and this can be faster.
[03:28:34] <nicoty> Thanks I appreciate it. How does the "Multiplying d/(d-1) for each non-factor d." formula for estimating the number of multiples to check work though? What's the reasoning behind it?
[03:29:12] *** Joins: son0p (~ff@181.136.122.143)
[03:29:33] <PlanckWalk> If c was "uniformly random" within the lcm, then you can treat the divisibility as being roughly independent from each other.
[03:29:54] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Quit: Leaving)
[03:30:11] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:23] <PlanckWalk> So the probability of a given numbe tested being suitable is (1-1/d)*(1-1/e)*...
[03:30:35] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[03:30:35] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:31:04] <PlanckWalk> So the average number of numbers you woudl need to test if sampling randomly would be (d/(d-1))*(e/(e-1))*...
[03:31:30] <PlanckWalk> Incrementing isn't actually sampling randomly, but it's still a reasonable estimate.
[03:31:51] *** Joins: frelleck (~frelleck@user/frelleck)
[03:31:55] <PlanckWalk> (So long as the number of factors is large enough)
[03:33:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[03:35:15] *** Joins: librenut (librenut@gateway/vpn/protonvpn/librenut)
[03:35:22] *** Parts: librenut (librenut@gateway/vpn/protonvpn/librenut) (¡Hasta luego!)
[03:35:31] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[03:35:32] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[03:37:00] *** Joins: dutch (~DutchIngr@user/dutch)
[03:38:10] *** Quits: anovick (~anovick@2a0d:6fc0:184c:5f00:64c6:d643:3b18:a655) (Ping timeout: 260 seconds)
[03:39:06] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[03:39:07] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:43:31] *** Joins: p0indexter (~alpha@user/p0indexter)
[03:44:07] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:ac4a:76c2:329a:2025) (Ping timeout: 240 seconds)
[03:47:13] <nicoty> PlanckWalk: Fwiw, the reason I was asking for a method to get the smallest multiple earlier is for the following problem: I have a sorted list of numbers "a" that contains the totatives of "b" ("b" is the product of the numbers in `not_factors` mentioned earlier) and the numbers that are in the same equivalence class modulo "b" as these totatives where "a" is split into segments of size "c". I want to get the smallest multiple of some number "d" in a segment
[03:47:13] <nicoty> indexed by the number "e". Is the method we talked about still the best way to go about this, or is there now a better way, given this new information?
[03:50:52] *** Quits: isekaijin (~isekaijin@user/isekaijin) (Quit: WeeChat 3.3)
[03:50:53] <PlanckWalk> It still looks fine.
[03:51:28] <PlanckWalk> Even better really.  If the number of not-factors is small enough that you can get a list of all the totatives of their lcm, then you definitely don't need a sieve.
[03:53:37] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[03:53:37] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:02:05] <PlanckWalk> Hmm, if d=1 to about 5, you might be better off just counting through the list and testing for divisibility by d
[04:02:49] <PlanckWalk> Maybe even up to 10-ish.
[04:03:34] <PlanckWalk> Testing a list of numbers for divisibility by d can be faster than testing a list of numbers by all of the non-factors if d is small enough.
[04:08:11] <PlanckWalk> (Testing for divisibility by d doesn't actually require division here)
[04:11:18] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Remote host closed the connection)
[04:11:39] *** Joins: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022)
[04:17:10] *** Quits: calcmandan (~quassel@user/calcmandan) (Ping timeout: 252 seconds)
[04:19:59] <nicoty> How would I test divisibility by d without using division?
[04:21:22] *** Joins: frost (~frost@59.71.244.189)
[04:21:24] *** Quits: AimHere (~David@vpn-fn-229.net.ed.ac.uk) (Quit: Leaving)
[04:21:50] *** Joins: AimHere (~David@92.238.16.159)
[04:21:53] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[04:22:35] *** Quits: Turingtoast (~Tino@200116b860e87e00e09f8ca86171877a.dip.versatel-1u1.de) (Ping timeout: 264 seconds)
[04:23:44] <PlanckWalk> nicoty: add d to the current multiple, keep reading until you either hit it or exceed it, add another multiple of d
[04:24:06] *** Joins: Turingtoast (~Tino@200116b86006e400e516273285f2eaed.dip.versatel-1u1.de)
[04:25:37] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[04:25:45] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[04:25:52] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[04:27:26] <PlanckWalk> But again, almost certainly not really needed.
[04:27:45] <PlanckWalk> Just doing what you did first is fine.
[04:31:14] *** Quits: tektik (~said@68.33.69.0) (Quit: Leaving)
[04:33:28] *** Joins: isekaijin (~isekaijin@user/isekaijin)
[04:35:49] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[04:37:35] *** Quits: sonny (~sonny@8.21.10.78) (Ping timeout: 264 seconds)
[04:40:28] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[04:41:12] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: ars longa vita brevis)
[04:41:23] *** Joins: anovick (~anovick@IGLD-83-130-138-203.inter.net.il)
[04:44:38] *** Joins: sonny (~sonny@8.21.10.78)
[04:46:27] *** Quits: sonny (~sonny@8.21.10.78) (Client Quit)
[04:47:17] *** Joins: horseface (~horseface@user/horseface)
[04:54:53] <Gustavo6046> Is there a case where the Newton-Raphson's method of approximation takes a non-finite number of steps to converge?
[04:55:02] <Gustavo6046> With a real function.
[04:55:40] *** Quits: emby (~em@li247-180.members.linode.com) (Changing host)
[04:55:40] *** Joins: emby (~em@user/emnode)
[04:59:58] <PlanckWalk> Yes
[05:00:23] *** Quits: xff0x (~xff0x@2001:1a81:52c3:e900:6f99:de0e:9a06:26db) (Ping timeout: 264 seconds)
[05:00:43] <PlanckWalk> There are all sorts of convergence and non-convergence behaviours
[05:01:12] *** Joins: xff0x (~xff0x@2001:1a81:52c3:e900:c99c:9c9c:56dc:ad93)
[05:02:57] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[05:03:07] <PlanckWalk> I do wonder if there's a cse where it converges only on a dense set of measure zero.
[05:03:22] <PlanckWalk> It wouldn't surprise me
[05:03:59] <somiaj> In the complex number's you get Newton's Fractal, and the boundary is measure zero I belive, and those are the only points that don't converge to some root
[05:04:21] <somiaj> Though restricting to the reals could change things a bit
[05:05:54] <somiaj> Though I guess with the reals you could just do silly stuff like x^4 + 1, which has no real roots, but I assume we do want to look at the case that we do have real roots
[05:09:31] <PlanckWalk> Even functions that do have real roots and have nonzero derivative at that root don't have to converge in the neighbourhood of that root.
[05:09:53] <PlanckWalk> Err, in any* neighbourhood
[05:14:47] *** Quits: andreasbuhr (~quassel@p548dd522.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[05:14:51] *** Joins: andreasbuhr_ (~quassel@p548dde12.dip0.t-ipconnect.de)
[05:14:52] <PlanckWalk> So hmm, maybe something like  x + x^2 sin(1/x)  converges on a dense set of measure zero.
[05:15:27] <PlanckWalk> Oh, that's not the one I want
[05:16:36] <PlanckWalk> I want the coefficient of sin(1/x) to be bounded so that there's only one root
[05:17:40] <PlanckWalk> And have lots of little wiggles in it
[05:19:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:23:14] <PlanckWalk> Maybe more like  x + 2 (1-e^(-x^2)) sin(x+1/x)  or something.
[05:26:04] <PlanckWalk> I'd guess that possibly converges on a dense set of measure zero
[05:27:19] *** Quits: TOB_CyxoB (~TOB_CyxoB@gateway/tor-sasl/tobcyxob/x-83841022) (Quit: Leaving)
[05:27:34] *** Quits: xff0x (~xff0x@2001:1a81:52c3:e900:c99c:9c9c:56dc:ad93) (Ping timeout: 252 seconds)
[05:27:59] *** Quits: emf (~emf@2620:10d:c090:400::5:35f6) (Ping timeout: 264 seconds)
[05:29:22] *** Joins: xff0x (~xff0x@2001:1a81:52fe:af00:73f9:c60:e593:d5a0)
[05:32:38] *** Joins: jax2 (~user@47.149.122.76)
[05:37:06] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:39:23] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 264 seconds)
[05:40:40] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[05:41:13] *** Joins: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu)
[05:42:13] *** Quits: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu) (Client Quit)
[05:43:28] *** Joins: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu)
[05:43:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 264 seconds)
[05:44:09] *** Quits: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu) (Client Quit)
[05:44:56] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[05:48:15] *** Quits: jax2 (~user@47.149.122.76) (Remote host closed the connection)
[05:51:30] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[05:51:31] *** Joins: mallkrampus (~mallkramp@207.45.82.186)
[05:57:17] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:59:48] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[06:00:48] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[06:05:16] *** Joins: jax2 (~user@47.149.122.76)
[06:13:08] *** Quits: jax2 (~user@47.149.122.76) (Remote host closed the connection)
[06:15:55] *** Joins: cheater1__ (~Username@user/cheater)
[06:15:59] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 264 seconds)
[06:16:03] *** cheater1__ is now known as cheater
[06:19:07] *** Quits: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[06:25:00] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7801:e57d:bc9d:7cb7) (Ping timeout: 260 seconds)
[06:25:11] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[06:27:05] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[06:33:20] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[06:36:49] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 252 seconds)
[06:40:30] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[06:44:45] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Remote host closed the connection)
[06:46:27] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[06:48:28] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[06:50:54] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[06:51:22] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[06:53:59] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[06:57:20] *** Joins: Brainium (~brainium@user/brainium)
[06:58:24] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[07:00:57] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[07:01:05] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:03:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:08:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[07:10:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:14:30] *** Joins: loller_ (uid358106@id-358106.uxbridge.irccloud.com)
[07:15:31] *** Quits: specing (~specing@user/specing) (Ping timeout: 245 seconds)
[07:17:21] *** Joins: specing (~specing@user/specing)
[07:20:05] *** Joins: pluri (~pluri@user/pluri)
[07:20:30] <Gustavo6046> Ah okay
[07:21:03] <Gustavo6046> Yeah I think there are but only for a few polynomials
[07:23:27] <Gustavo6046> And if you have a cubic polynomial, and you affix two of the roots and plot on the complex name for the third root whether the Newton fractal for the corresponding polynomial contains such an infinite cycle at all, I think you get figures that look very much like Mandelbrot sets, because it's a parameter space (the parameter of the 3rd root of the cubic polynomial whose Newton method results are
[07:23:29] <Gustavo6046> being plottde on the complex plane), much like the Mandelbrot set is
[07:28:27] <Gustavo6046> Yum, cardioid and bubbles. I love myself some math butts.
[07:29:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:29:54] *** Joins: kronicmage (user3131@neotame.csclub.uwaterloo.ca)
[07:33:23] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 264 seconds)
[07:36:18] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[07:36:27] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[07:39:13] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[07:39:28] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[07:41:11] <kronicmage> hello all! can any linalg experts help w/ an intuition problem?
[07:41:40] <kronicmage> i'm trying to use a vandermonde matrix to get a least squares polynomial that is also in the span of a particular set of polynomials
[07:42:29] <kronicmage> so i have a matrix A which is a vandermonde matrix on the x-values of the points i'm fitting, and a matrix P which is a matrix whose column space is the span of the polynomials i need the answer to be a linear combination of
[07:43:21] <kronicmage> to get the least squares fit, my textbook tells me that I should solve for c in APc = Proj_Col{AP} b
[07:43:47] <kronicmage> where b is a vertical vector of the y-values of the points i'm fitting
[07:44:50] <kronicmage> can anyone tell me why I'm orthogonal projecting onto the column space of AP, rather than the column space of A? shouldn't projecting onto the column space of A get me closer to the y-values in b, while still giving us an answer in the column space of P?
[07:45:06] <kronicmage> thanks in advance for any help!
[07:52:41] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[07:52:51] <qergle> ok, that's a lot to parse, but there seems to be a change of basis map going on as well.
[07:53:28] <qergle> the vandermonde will presumably get it in terms of the canonical P^n basis, and then you want it in the basis specified in matrix P.
[07:54:46] *** Joins: Arkady (~severianx@2800:810:410:813a:546c:efa3:ddec:c45e)
[07:55:42] <qergle> say your P_n(x)=a_n*x^n + a_{n-1}x^(n-1) + ... + a_0, the vandermonde gets you the coefficient vector (a_n a_{n-1} ... a_0)
[07:55:55] <qergle> in the standard basis
[07:57:40] *** Quits: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[07:58:22] *** Joins: Dotz0cat (~Dotz0cat@h113.245.19.98.static.ip.windstream.net)
[07:59:54] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[08:00:37] *** Quits: lieven (~mal@ns2.wyrd.be) (*.net *.split)
[08:00:37] *** Quits: Robbin (~Robbin@user/robbin) (*.net *.split)
[08:00:37] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (*.net *.split)
[08:00:37] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[08:00:37] *** Quits: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org) (*.net *.split)
[08:00:37] *** Quits: raekye (~raekye@creatifcubed.com) (*.net *.split)
[08:00:37] *** Quits: cawfee (~root@2406:3003:2077:2758::babe) (*.net *.split)
[08:00:37] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[08:00:37] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[08:00:37] *** Quits: Lea2 (~learath2@user/learath2) (*.net *.split)
[08:00:37] *** Quits: sblip_ (~sblip@107.161.25.77) (*.net *.split)
[08:00:37] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[08:00:37] *** Quits: thaumavorio_ (~thaumavor@thaumavor.io) (*.net *.split)
[08:00:37] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[08:00:37] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[08:00:37] *** Quits: njd (~njd@159.65.3.79) (*.net *.split)
[08:00:37] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[08:00:44] *** Joins: sblip (~sblip@107.161.25.77)
[08:00:45] <qergle> also, as to your specific question, why would not involving matrix P give you a least squares solution in terms of the basis specified as P's columns?
[08:00:49] *** Joins: Learath2 (~learath2@user/learath2)
[08:00:54] *** Joins: cawfee (~root@2406:3003:2077:2758::babe)
[08:00:56] *** Joins: EmmyNoether (~EmmyNoeth@yoke.ch0wn.org)
[08:00:57] *** Joins: FLHerne_ (flh@flherne.uk)
[08:01:05] *** Joins: raekye (~raekye@creatifcubed.com)
[08:01:07] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[08:01:09] *** Joins: kzootech (~awalm@kzoo.tech)
[08:01:09] *** Joins: lieven (~mal@ns2.wyrd.be)
[08:01:12] *** Joins: Robbin- (~Robbin@user/robbin)
[08:01:19] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[08:01:31] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[08:01:31] *** Joins: southey (~foxtrot@user/foxtrot)
[08:01:37] *** Joins: njd (~njd@159.65.3.79)
[08:01:37] *** Joins: thaumavorio (~thaumavor@thaumavor.io)
[08:02:07] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[08:02:35] <qergle> ok, i'll bbl. if you have any further comments leave them here.
[08:02:49] *** FLHerne_ is now known as FLHerne
[08:03:26] *** Joins: Ara (~Ara@user/ara)
[08:05:41] *** Joins: brownorange (~brownoran@user/brownorange)
[08:11:21] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:18:01] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[08:18:52] *** Quits: Arkady (~severianx@2800:810:410:813a:546c:efa3:ddec:c45e) (Quit: Quit)
[08:19:05] <brownorange> What's the official guide to know if a book about math or logic is bad/misleading based on review scores?
[08:19:10] *** Joins: Arkady (~severianx@2800:810:410:813a:546c:efa3:ddec:c45e)
[08:19:13] <PlanckWalk> There isn't one.
[08:19:23] *** Quits: Arkady (~severianx@2800:810:410:813a:546c:efa3:ddec:c45e) (Client Quit)
[08:20:10] <brownorange> i'm concerned because it seems both cranks and experts will give low ratings. so their reviews appear side by side
[08:21:20] <brownorange> does the author need an an Erdos number for example
[08:22:11] <kronicmage> @qergle thank you! the change of basis thing pointed me in the right direction. turns out if you solve APc = Proj_Col{A}b that's the same thing as calculating the projection of b onto Col{A}, and then projecting that point onto Col{P}
[08:22:15] <kronicmage> which is obviously wrong
[08:22:39] *** Quits: cjb (~cjb@user/cjb) ()
[08:28:00] *** Joins: Guest73 (~Guest73@a86f-92a9-5025-ed0c-4880-8a0d-07d0-2001.dyn.estpak.ee)
[08:28:03] *** Parts: Guest73 (~Guest73@a86f-92a9-5025-ed0c-4880-8a0d-07d0-2001.dyn.estpak.ee) ()
[08:30:17] <brownorange> Odd there's almost no quality documentaries on Liebniz except as it intersects with Newton.
[08:33:24] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[08:34:22] <jmorris> brownorange: why would they need an erdos number
[08:34:26] <jmorris> that's a dumb metric
[08:34:42] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[08:41:40] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 252 seconds)
[08:42:05] <PlanckWalk> For reasonably introductory texts I suspect that looking at how many universities have it on their reading list is a one-way indication of reasonableness.
[08:42:27] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[08:42:40] <PlanckWalk> Like, not even doing a world survey of all universities, just that if you see at least a couple that list it then it's probably not *the worst*.
[08:43:17] <PlanckWalk> (The reverse isn't true though, not being on a university list is no guide to it beign rubbish)
[08:43:33] *** Joins: notzmv (~zmv@user/notzmv)
[08:45:19] <brownorange> what if the author has no wikipedia page?
[08:47:28] <brownorange> dumb question. lots of people not qualified could have wikipedia page.
[08:47:51] <jmorris> brownorange: also means nothing
[08:50:21] <Galois> the standard way is to just ask someone who knows the subject
[08:51:04] <Galois> I've seen pretty much all the books in my field and even if not I can tell in a few seconds whether a book in my field is any good
[08:51:22] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[08:51:32] <jmorris> but do you have a wikipedia page Galois
[08:52:48] <Galois> I guess if someone insists on doing this in a weird way then they're going to get weird results
[08:54:02] *** Joins: notzmv (~zmv@user/notzmv)
[08:55:34] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[08:57:50] <PlanckWalk> The obviously correct solution is to feed all the books into a ML model, train it to classify based on web site review scores, content of author Wikipedia pages, and tweets that mention it.
[08:58:28] <PlanckWalk> Then sell it to DeepMind for a few million and retire, no longer caring about whether the book was any good or not.
[08:58:39] <jmorris> PlanckWalk: you're describing amazon
[08:59:06] <PlanckWalk> Dammit, Bezos.
[08:59:15] <PlanckWalk> Stealing all my ideas before I have them.
[09:01:56] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:05:00] *** Joins: Guest81 (~Guest81@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[09:09:07] <Decker> what's a typical denotation of curvature?  (oh some gradient symbol huh?)  how to type math symbols on windows :/
[09:10:06] <Decker> κ of that?
[09:10:08] <Decker> (or)
[09:10:35] <Galois> this one? https://en.wikipedia.org/wiki/Gaussian_curvature
[09:10:44] <isekaijin> R^\alpha_{\beta \gamma \deleta}
[09:10:47] <Galois> or this one https://en.wikipedia.org/wiki/Riemann_curvature_tensor
[09:11:10] <isekaijin> delta* ofc
[09:23:46] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[09:33:01] <Decker> https://www.khanacademy.org/math/multivariable-calculus/multivariable-derivatives/differentiating-vector-valued-functions/a/curvature
[09:33:55] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[09:34:42] <greenbagels> Decker: κ typically depends on the specific curve you'rre looking at, and where on the curve you're looking
[09:35:11] <Decker> well it's a circle so no :)  but ya
[09:35:19] <Decker> it's just 1/r
[09:35:40] <Decker> which angles are really curvature at r=1
[09:35:52] <greenbagels> the curvature isnt a circle
[09:36:01] <Decker> a circle has a constant curvature
[09:36:04] <greenbagels> yes
[09:36:07] <qergle> the google term is "oscullating circle"
[09:36:12] <greenbagels> https://en.wikipedia.org/wiki/Osculating_circle
[09:36:19] <Decker> that's all :) but yes you could have a function of r ok K
[09:36:21] <Decker> (or)
[09:36:32] <qergle> oh did i add an "l" where there shouldn't be one?
[09:36:51] <greenbagels> im officially confused about what youre question is at this point
[09:37:14] <qergle> well, oscillating has two ells, so clearly oscullating should as well. ∎
[09:39:35] <Decker> is that k \kappa ?
[09:39:43] <qergle> κ
[09:39:49] <qergle> it is indeed
[09:44:43] <qergle> maybe this is nicer 𝜅
[09:45:29] *** Quits: frelleck (~frelleck@user/frelleck) ()
[09:46:33] <Decker> http://mathb.in/66316 something like this
[09:46:50] <Decker> not really sure where I was going to go with that beyond that
[09:47:38] *** Joins: tizef (~tizef@202.153.80.26)
[09:53:37] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[09:54:29] <kronicmage> hey guys, given that i have a function `solveGauss :: [[Double]] -> [[Double]] -> Maybe [[Double]]` that solves for Ax = b given A and b (if x exists), how can I use this to implement converting a matrix to RREF?
[09:54:50] <kronicmage> assuming `solveGauss` is a blackbox and I don't want to reimplement a significant part of it
[09:55:35] *** Quits: mallkrampus (~mallkramp@207.45.82.186) (Ping timeout: 264 seconds)
[09:55:51] <qergle> solvegauss probably doesn't go all the way to rref, stops at lu
[09:56:42] <qergle> if x exists uniquelly, the rref is identity, if x is infinite then it'll be some other thing.
[09:57:07] <qergle> s/if x is infinite/if there are infinite x's/
[09:57:36] <kronicmage> yeah if there are infinite x's the function returns Nothing lol
[09:57:41] <kronicmage> so I guess I can't get much out of it
[09:57:45] <qergle> but if A is square, which is a nice case, then if x exists then rref(A) is identity.
[10:00:06] <Decker> F = \frac {m \kappa v} \theta  (I)
[10:00:39] <qergle> if A is square nxn and rank(A)=r<n, then rref(A) will be a I_r in top left and then the infinite d.f stuff in the n-r columns on the right
[10:01:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:01:40] <qergle> something like that is a close approximation to the actual taxonomy
[10:04:27] <Decker> $F = m v ( \frac  \kappa  \theta = 1 )$  :) even more useful
[10:05:14] <qergle> kronicmage: so is A square and is it the case that either no x exists or x exists uniquely? then if x exists rref(A)=I
[10:05:46] <qergle> maybe you didn't mean rref(A) but echelon(A), or something?
[10:06:13] <qergle> bbl. leave a comment here if you have any.
[10:08:22] *** Joins: mallkrampus (~mallkramp@148.72.164.125)
[10:08:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[10:09:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:10:37] *** Quits: andreasbuhr_ (~quassel@p548dde12.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:11:45] *** Joins: andreasbuhr (~quassel@p548dde12.dip0.t-ipconnect.de)
[10:12:09] <kronicmage> i wanted to calculate rref of a non-square matrix, and i was too lazy to reimplement rref so i wanted to see if i could reuse the blackbox solver lol
[10:12:24] <kronicmage> thanks for the input though, I still appreciate it
[10:13:41] *** Quits: andreasbuhr (~quassel@p548dde12.dip0.t-ipconnect.de) (Remote host closed the connection)
[10:22:10] *** Joins: pluri (~pluri@user/pluri)
[10:22:12] *** Joins: src (~src@user/src)
[10:22:41] *** Quits: tizef (~tizef@202.153.80.26) (Remote host closed the connection)
[10:31:21] <qergle> kronicmage: a single x solution won't be enough to determine the rref.
[10:35:22] <qergle> but if A is non-square and has a unique x solution then it must have more rows than columns, so A is mxn with m>n, then rref(A) will be I_n on top of m-n rows of 0s. i believe.
[10:36:10] <qergle> if the x solution isn't unique, only knowing one of them isn't enough to construct the rref.
[10:39:05] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[10:42:54] <lpapp> double x = (line2.yintercept - line1.yintercept) / (line1.slope - line2.slop); y = x * line1.slope + line1.yintercept; Point intersection = new Point(x, y); -> is there a graphical or at least a comprehensive description for this equation of finding out the intersection point of two non-parallel lines?
[10:47:44] *** Joins: palasso (~palasso@user/palasso)
[10:48:59] *** Quits: krator44 (~krator44@user/krator44) (Quit: --)
[10:49:01] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:49:06] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:49:28] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:49:31] *** Joins: krator44 (~krator44@user/krator44)
[10:50:01] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:50:04] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[10:52:44] <qergle> lpapp: ok, i can try...
[10:53:16] <qergle> think of (line2.yintercept - line1.yintercept) as a wedge between y-values at x=0
[10:54:16] <qergle> you need to close that gap (by either moving to the right or to the left, depending on the slopes of these two lines)
[10:54:43] <qergle> once you've moved to a certain x that closes the gap to 0, you have the x-coordinate of the intersection.
[10:55:33] <qergle> (line1.slope - line2.slope) tells you by how much you close the gap by moving a unit x in the right direction (left or right)
[10:55:34] *** Joins: brownorange (~brownoran@user/brownorange)
[10:56:24] <qergle> so (line2.yintercept - line1.yintercept)/(line1.slope - line2.slope) tells you how many units of x you need to move (and in which direction) to fully close the vertical gap you have at x=0.
[10:56:50] <qergle> that's as good as i can do on a monday morning after only 1 coffee.
[11:03:15] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:03:24] *** Joins: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b)
[11:04:41] *** Quits: src (~src@user/src) (Quit: Leaving)
[11:06:52] <lpapp> Thanks, now I just need to figure out the sign, I guess :)
[11:07:24] <qergle> the formula already tells you the sign
[11:07:58] <qergle> but if you want the intuition, if line 2 is above line 1 at x=0 then (line2.yintercept - line1.yintercept)>0
[11:08:09] <lpapp> if line1 y intercept is higher and the line 1 slope is bigger, then x must be minus, if line 1 slope is smaller, then x is positive
[11:08:26] <qergle> yes
[11:09:17] <qergle> well, let's be careful, a bit
[11:09:57] <qergle> by "bigger" what do we mean?
[11:09:57] <lpapp> y can also be calculated from line2 slope an intercepts, right?
[11:10:02] <lpapp> greater
[11:10:05] <lpapp> higher
[11:10:07] <lpapp> on the axis
[11:10:50] <lpapp> Although, I suppose that if they are both in negative, then it is the other way around, if lower
[11:11:06] <qergle> just be mindful of signs
[11:11:10] <lpapp> ah, no, I take that back.
[11:11:18] <lpapp> y can also be calculated from line2 slope an intercepts, right?
[11:11:49] <lpapp> intercept*
[11:11:54] <qergle> for example
[11:12:03] *** Joins: andreasbuhr (~quassel@p548dd4a5.dip0.t-ipconnect.de)
[11:12:10] <lpapp> yeah, any of them, it does not have to be line1, thanks.
[11:12:42] <qergle> np
[11:18:29] *** Joins: tizef (~tizef@202.153.80.26)
[11:18:52] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[11:19:51] *** Quits: Guest81 (~Guest81@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[11:23:44] *** Joins: millido (~millido@84.210.150.128)
[11:27:49] <brownorange> ((G <-> True) <-> (PA -> !(PA -> G))) /\ ((PA+G)->(G <-> True)) /\ ((PA+G) -> (PA->G)) |- (G <-> True) <->  (PA->G /\ !PA->G) |- (G <-> True) -> (Falsum \/ !PA)
[11:28:29] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[11:29:32] <brownorange> what i'm asserting is that if G is true, then it implies a contradiction, because PA+G would let us prove PA->G , so the definition of G gets contradicted.
[11:30:23] <brownorange> why should this matter? because it means saying G is undecidable in PA, but true in PA+G isn't a good thing. it's true by a contradiction
[11:30:56] <brownorange> I tried to warn about this
[11:31:36] <brownorange> it should have been no surprise that a statement partially correct about itself, is still partially incorrect, and that carries over even if you outright assume the statement as if it were true.
[11:31:59] *** Joins: spynx (~spynxic@spynxic.powered.by.lunarbnc.net)
[11:33:18] *** Quits: begui (~begui@2600:1700:1950:5fa0:63a5:6a3:c33c:225d) (Remote host closed the connection)
[11:33:18] *** Joins: begui (~begui@2600:1700:1950:5fa0:7d20:8b31:ae6c:1211)
[11:33:26] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: loller_ (uid358106@id-358106.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: pdg (sid395042@lymington.irccloud.com) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: joel135 (sid136450@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: astra` (sid289983@user/amish) (Ping timeout: 245 seconds)
[11:33:46] *** Joins: loller_ (uid358106@id-358106.uxbridge.irccloud.com)
[11:33:48] *** Joins: astra` (sid289983@user/amish)
[11:33:49] *** Joins: pdg (sid395042@id-395042.lymington.irccloud.com)
[11:33:50] *** Joins: joel135 (sid136450@id-136450.hampstead.irccloud.com)
[11:33:51] *** Quits: SanchayanMaity (sid478177@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[11:33:51] *** Quits: Boarders (sid425905@lymington.irccloud.com) (Ping timeout: 245 seconds)
[11:34:15] *** Joins: SanchayanMaity (sid478177@id-478177.hampstead.irccloud.com)
[11:34:15] *** Joins: Boarders (sid425905@id-425905.lymington.irccloud.com)
[11:34:33] <brownorange> if G is undecidable in PA, that's just the truth. you can't warp it to say it is still true by moving goal posts
[11:34:50] *** Joins: DPA (~DPA@2a05:41c0:4:604::a3c:10d)
[11:35:06] *** Quits: markasoftware (~quassel@107.161.26.124) (Ping timeout: 245 seconds)
[11:35:06] *** Quits: qedders64 (~qedders@132.76.61.51) (Ping timeout: 245 seconds)
[11:35:20] *** Joins: markasoftware (~quassel@107.161.26.124)
[11:35:31] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[11:35:41] *** Joins: notzmv (~zmv@user/notzmv)
[11:35:50] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:44:32] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:47:39] *** Joins: biberao (~m@user/biberao)
[11:47:39] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[11:47:41] <biberao> hi
[11:48:20] <brownorange> hi
[11:49:35] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 264 seconds)
[11:49:39] <biberao> hey brown
[11:49:51] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[11:51:10] <biberao> damn i need to ask a stupidquestion
[11:51:12] <biberao> hehe
[11:52:04] *** Quits: wwilly (~wwilly@217.140.106.13) (Quit: Leaving)
[11:52:18] <brownorange> my only fear about my project to reform math, is that i've somehow entirely missed the point what i'm trying to correct
[11:52:32] *** Joins: pluri (~pluri@user/pluri)
[11:53:08] <brownorange> that perhaps an unchangeable fact about numbers is why math can't be "improved"
[11:53:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:55:20] *** Joins: qedders (~qedders@132.76.61.51)
[11:55:30] <brownorange> the question shouldn't be what you lose in expressiveness, but what you lose in making a worthless undecidable downgraded from wff
[11:55:33] *** Joins: relyks (~relyks@ool-45725d43.dyn.optonline.net)
[11:56:09] <brownorange> imo you lose nothing, because you're saying it's true/false, you're saying it's not a wff of the language/system anymore. this isn't radical
[12:00:27] <biberao> brownorange: thats for me?
[12:00:50] <brownorange> @biberao i'm just talking openly.
[12:02:37] <biberao> ok
[12:02:39] <biberao> let it go
[12:03:33] <biberao> :D
[12:07:18] <biberao> brownorange: stupid question in a championship 3 points for victory 1 for tie and 0 for defeat. A team played 20 games lost 6 and has 36 points.
[12:09:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:11:39] <brownorange> @biberao i'm not really a good mathematician, but i'm sure the answer is fascinating
[12:12:41] <biberao> mean :D
[12:15:02] <biberao> i understood now
[12:16:29] <biberao> wow it worked
[12:17:40] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[12:22:52] *** Quits: voids (~x@user/voids) (Remote host closed the connection)
[12:23:10] *** Joins: voids (~x@102.209.19.93.rev.sfr.net)
[12:27:54] *** Joins: NEYi (~NEYi@109.251.216.38)
[12:30:09] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (Quit: All for nothing)
[12:33:29] *** Joins: nehsou^ (~nehsou@70.166.66.234)
[12:37:35] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:41:59] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:42:53] <qergle> what's the answer
[12:42:59] <qergle> how many wins? how many ties?
[12:44:50] <biberao> 20 games lost 6 that means 14 games and 36 points
[12:45:44] <biberao> 11 wins?
[12:45:48] <qergle> yes
[12:46:05] <qergle> (36-14)/2=11
[12:46:25] <biberao> you know at first i didnt think like this
[12:46:56] <biberao> if played 20 games and lost 6 means 14 games (wins and ties) since losses is 0 points
[12:47:46] <biberao> i need to learn this way of thinking
[12:49:31] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:50:23] <biberao> drogas: how much?
[12:50:45] <qergle> first bag is free
[12:51:03] <biberao> qergle: you want some dont you
[12:51:04] <biberao> :D
[12:51:42] <drogas> depends on what you want, we have pumpkin spice pack for the festive season with five samples
[12:52:23] <biberao> give a bag to qergle he helped me
[12:53:05] <qergle> i get my highs from combinatorics, kthxbai
[12:53:55] <drogas> oh yes you can definitely combine them so we got you!
[12:54:23] <biberao> qergle: lets trade
[12:54:35] <biberao> he gives you a bag and you teach me combinatorics
[12:54:41] *** Quits: Bowserinator (Bowserinat@hellomouse/dev/bowserinator) (Ping timeout: 245 seconds)
[12:55:24] <biberao> deal?
[12:55:33] *** Joins: Bowserinator (Bowserinat@hellomouse/dev/bowserinator)
[12:56:05] <biberao> guess not :\
[12:58:36] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:01:26] <mh_le> morning all
[13:01:46] <biberao> hi
[13:12:19] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[13:13:16] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:13:33] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[13:15:45] <kronicmage> hello
[13:20:31] *** Quits: biberao (~m@user/biberao) (Ping timeout: 245 seconds)
[13:22:35] *** Quits: relyks (~relyks@ool-45725d43.dyn.optonline.net) (Quit: relyks)
[13:26:41] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:26:57] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:29:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:29:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:29:52] *** Joins: tacegory (~tacegory@user/tacegory)
[13:31:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:32:04] *** Quits: complete16 (~cameron@69-176-153-42.spartan-net.net) (Ping timeout: 252 seconds)
[13:34:21] *** Quits: AimHere (~David@92.238.16.159) (Quit: Leaving)
[13:37:35] *** Quits: anovick (~anovick@IGLD-83-130-138-203.inter.net.il) (Ping timeout: 264 seconds)
[13:40:28] *** Joins: arseniiv (~arseniiv@136.169.238.48)
[13:47:18] *** Joins: BlueSky (~BlueSky@user/bluesky)
[13:48:03] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[13:48:25] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:48:53] <BlueSky> If solutions of a differential equation intersect, then what can you tell about its differential equation https://imgur.com/QuPX04b
[13:49:18] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[13:49:21] *** Quits: gganbu (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[13:49:43] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[13:49:55] *** Quits: voids (~x@102.209.19.93.rev.sfr.net) (Changing host)
[13:49:55] *** Joins: voids (~x@user/voids)
[13:54:59] *** Quits: tizef (~tizef@202.153.80.26) (Ping timeout: 264 seconds)
[13:55:04] *** Joins: mbuf (~Shakthi@223.178.116.173)
[14:04:57] *** Joins: heineken (~i.am@user/heineken)
[14:05:32] *** Joins: phao (~phao@2804:d45:8e7a:de00:61d8:42bc:91aa:7652)
[14:09:47] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:10:02] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:10:53] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:80b:c38b:f285:a0b8) (Quit: Quit)
[14:10:54] *** Joins: tizef (~tizef@202.153.80.26)
[14:15:46] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[14:17:40] *** Quits: tizef (~tizef@202.153.80.26) (Remote host closed the connection)
[14:22:19] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[14:23:17] <rond_> is minimum and infimum (maximum and supremum) the same on sets of integers?
[14:23:41] <rond_> or, even to be more precise, on a finite set of integers?
[14:24:20] <rond_> I wonder why in paper author uses sup() when, in my opinion, max() would have the same effect and would be probably easier to understand...?
[14:26:27] <int-e> yeah, the supremum of a finite set is just the set's maximum
[14:27:14] <int-e> doing away with max in favor of sup is also a simplification... ultimately it's a matter of taste.
[14:29:52] *** Joins: seninha (~seninha@user/seninha)
[14:34:08] <Z-module> rond_: does that same paper involve sups of any infinite sets?
[14:35:18] *** Quits: phao (~phao@2804:d45:8e7a:de00:61d8:42bc:91aa:7652) (Quit: Leaving)
[14:39:28] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:e886:9a:1db9:e84a)
[14:39:54] <greenbagels> drogas: sign me up for that spice
[14:41:08] <greenbagels> also good morning int-e, Z-module
[14:41:55] <rond_> Z-module no infinities here
[14:42:11] <BlueSky> If solutions of a differential equation intersect, then what can you tell about its differential equation https://imgur.com/QuPX04b
[14:42:37] *** Quits: dld (~davidlowr@2601:197:600:1210:750d:ae1c:e5be:6956) (Ping timeout: 252 seconds)
[14:43:33] <greenbagels> BlueSky: do they want you to only choose one answer
[14:43:42] <BlueSky> yes
[14:43:42] <greenbagels> if so, that makes thinking about it a lot easier
[14:48:07] <BlueSky> greenbagels: ?
[14:58:35] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 264 seconds)
[15:22:25] *** Joins: dez (uid92154@user/dez)
[15:33:22] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[15:36:16] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:36:59] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:e886:9a:1db9:e84a) (Ping timeout: 264 seconds)
[15:37:36] *** Quits: specing (~specing@user/specing) (Ping timeout: 245 seconds)
[15:38:59] *** Joins: r-g (~r-g@51.158.144.32)
[15:41:34] *** Joins: savask (~savask@Powder/Developer/savask)
[15:42:05] *** Quits: jmorris (uid433911@id-433911.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[15:42:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:45:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:49:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:51:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[15:54:24] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[15:54:50] *** Joins: biberao (~m@user/biberao)
[15:54:53] <biberao> hey
[15:56:24] *** Joins: stblaha (~stblaha@user/stblaha)
[16:01:21] *** Quits: kurfen_ (~kurfen@37.120.204.67) (Ping timeout: 245 seconds)
[16:05:03] *** Joins: wwilly (~wwilly@fw-tnat-cam1.arm.com)
[16:05:52] *** Joins: Maturion (~Maturion@p200300ede71dee00df4e48e33420aef6.dip0.t-ipconnect.de)
[16:06:37] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[16:09:36] *** Quits: W (~w@user/w) (Quit: Updating kernel)
[16:13:46] *** Joins: src (~src@user/src)
[16:13:56] *** Joins: W (~w@user/w)
[16:17:26] *** Joins: dld (~davidlowr@2620:6e:6000:2900:5c78:4bcc:82fe:593c)
[16:18:46] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:a801:5fe6:fb5a:8be5)
[16:19:19] *** Quits: Maturion (~Maturion@p200300ede71dee00df4e48e33420aef6.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[16:19:59] *** Joins: xiongxin (~quassel@113.116.35.81)
[16:22:21] <tomeaton17> Can someone help me to understand the characteristic function of a random variable
[16:24:20] <tomeaton17> In my lecture they said that it can fully describe a random variable but that was it.
[16:24:40] *** Joins: Guest81 (~Guest81@wireless-mustang27.nat.smu.edu)
[16:26:00] <greenbagels> tomeaton17: is https://en.wikipedia.org/wiki/Characteristic_function_(probability_theory) helpful at all
[16:31:28] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[16:33:40] *** Joins: Maturion (~Maturion@p200300ede72291004edca8e961fc1ad6.dip0.t-ipconnect.de)
[16:33:49] *** Joins: tomeaton1799 (~tomeaton1@dyn3135-233.wlan.ic.ac.uk)
[16:34:09] *** tomeaton1799 is now known as tomeaton18
[16:34:39] *** Joins: b93 (~I@87.196.81.103)
[16:36:37] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:a801:5fe6:fb5a:8be5) (Ping timeout: 256 seconds)
[16:45:46] *** Quits: b93 (~I@87.196.81.103) (Ping timeout: 258 seconds)
[16:46:26] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[16:48:24] *** tomeaton18 is now known as tomeaton17
[16:50:45] *** Quits: arseniiv (~arseniiv@136.169.238.48) (Ping timeout: 258 seconds)
[16:52:57] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[16:53:08] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:02:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:14] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:03:39] *** Joins: sonny (~sonny@8.21.10.78)
[17:06:02] *** Joins: Trieste_ (T@user/pilgrim)
[17:06:41] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 264 seconds)
[17:11:55] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[17:12:14] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:12:34] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:13:42] *** Joins: broflakes (~broflakes@5634737a.rev.stofanet.dk)
[17:17:23] *** Quits: xiongxin (~quassel@113.116.35.81) (Quit: No Ping reply in 180 seconds.)
[17:17:36] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[17:17:56] *** Joins: Europa (~Europa@user/europa)
[17:18:39] *** Joins: xiongxin (~quassel@113.116.34.92)
[17:19:53] *** Joins: arseniiv (~arseniiv@136.169.238.48)
[17:19:57] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[17:20:19] *** Joins: Europa (~Europa@user/europa)
[17:26:29] *** Quits: Guest81 (~Guest81@wireless-mustang27.nat.smu.edu) (Ping timeout: 256 seconds)
[17:28:36] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b157-81d2-c247-f7c3.res6.spectrum.com)
[17:29:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:30:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[17:31:40] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[17:32:56] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7926:2664:9b12:1b9a)
[17:34:24] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Quit: ZNC 1.8.2 - https://znc.in)
[17:34:48] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[17:35:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:36:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[17:37:35] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 264 seconds)
[17:39:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[17:40:40] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 252 seconds)
[17:45:41] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:48:34] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:49:01] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi)
[17:49:02] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:49:12] *** Quits: tomeaton17 (~tomeaton1@dyn3135-233.wlan.ic.ac.uk) (Quit: Client closed)
[17:50:37] *** Joins: cgadski (~cgadski@a94-132-124-55.cpe.netcabo.pt)
[17:50:51] *** Quits: cgadski (~cgadski@a94-132-124-55.cpe.netcabo.pt) (Client Quit)
[17:51:48] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[17:52:13] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[17:52:32] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[17:52:56] <savask> Did you guys know about http://sequencedb.net ? The site runs an algorithm to automatically find (empirical) relationships between OEIS sequences
[17:57:27] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[17:57:58] *** Joins: Cale (~cale@2607:fea8:995f:d3e0:a7e3:45a3:f953:e812)
[17:58:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:00:04] <savask> There's even a twitter bot posting "conjectures" it found
[18:01:44] <quantum> One of my favourite twitter bots is the one that posts logical tautologies
[18:02:04] <Franciman> I feel a bit lost
[18:02:13] <Franciman> I thought I understood 1-differential forms
[18:02:18] <Franciman> not I am confronted with k-differential forms
[18:02:22] *** Joins: stipa (~stipa@user/stipa)
[18:02:30] <Franciman> and I can't quite understand how to interpret things
[18:02:50] *** Quits: thaumavorio (~thaumavor@thaumavor.io) (Quit: ZNC 1.8.2 - https://znc.in)
[18:03:06] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-9318-86ec-5dd6-c4be.res6.spectrum.com)
[18:03:59] <cuppajoeman> Let X, Y be two real valued random variables with joint CDF F_(X,Y) (x, y) and marginal CDF's F_X (x) and F_Y (y). Prove that (F_(X,Y) (x,y))/(F_X(x) + F_Y(y)) <= 1/2.
[18:04:23] <Franciman> for example a 2-differential form is a bilinear alternate function \omega : V(M) x V(M) -> C^inf(M)
[18:04:36] <Franciman> so it goes over two vector fields
[18:04:38] <Franciman> not just one
[18:05:12] <cuppajoeman> The only thing I seem to know is that 0 <= F_X(x) + F_Y(y) <= 2, which means that 1/(F_X(x) + F_Y(y)) >= 1/2 so long as their sum isn't zero
[18:05:38] *** Joins: thaumavorio (~thaumavor@thaumavor.io)
[18:11:36] <quantum> Franciman: It's probably easier to look at how they work on vector spaces instead of on manifolds
[18:11:38] <quantum> (to begin with at least)
[18:12:06] <quantum> a "one form on a vector space" is an element of the dual space
[18:13:54] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:14:38] <quantum> you can then build up to k-forms, first by looking at multilinear maps on the vector space (tensor product of dual elements) and then antisymmetric maps on the spce
[18:14:41] <quantum> *space
[18:15:04] <cuppajoeman> I was able to deduce it from F_(X,Y) (x,y) <= F_X(x) & F_(X,Y) (x,y) <= F_Y(y) and taking the sum of the two inequalities.
[18:15:08] <Franciman> quantum: uhm ok, restricting to a R^n
[18:15:09] <Franciman> thanks
[18:15:12] <Franciman> still a bit lost though
[18:15:19] <Franciman> because now I want to have a sort of intuition :P
[18:16:31] <quantum> How were 1-forms introduced to you?
[18:17:10] <quantum> (I'll try and work from there)
[18:19:16] <quantum> Franciman
[18:19:49] <Franciman> quantum: sorry here I am
[18:20:13] <Franciman> I got introduced to them as things I can integrate over a space
[18:20:15] <Franciman> and get a number
[18:20:37] <quantum> ok
[18:21:04] <Franciman> now i can see that being antisymmetric is what you want for talking about orientation
[18:21:22] *** Quits: wwilly (~wwilly@fw-tnat-cam1.arm.com) (Ping timeout: 260 seconds)
[18:21:28] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:22:27] *** Joins: bosspotato (~bosspotat@142.184.100.116)
[18:22:28] *** Quits: bosspotato (~bosspotat@142.184.100.116) (Changing host)
[18:22:28] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[18:23:06] <quantum> So while diff. forms are things you integrate, that's not a great definition to work with if
[18:23:13] <quantum> *if you need to actually calculate things with them
[18:23:22] <Franciman> hmm I see, can I do a small question?
[18:23:35] <Franciman> is it that diff forms are related to tangent spaces?
[18:23:45] <Franciman> i..e 2-diff forms work on spaces with 2dim tanget spaces
[18:23:56] <Franciman> k-diff forms on spaces with k-dim tangent spaces
[18:24:09] <quantum> yes
[18:24:11] <quantum> So the approach I'm familiar with first defines what a diff. form should be on a tangent space (by just using an arbitrary vector space)
[18:24:30] <quantum> and then expands it to the generic case of the tangent bundle on a manifold
[18:24:46] <Franciman> oh ok I did something slightly different, but equal
[18:24:52] <Franciman> I defined them on open sets of R^n
[18:24:59] <quantum> yeah, pretty much
[18:24:59] <Franciman> and then saw how to define them on charts of a manifold
[18:25:17] <quantum> yeah, that's also a good way to go about it
[18:25:49] <Franciman> so uhm, what is it with this determinant?
[18:25:53] <Franciman> I saw that for example
[18:26:09] <Franciman> dx_1 ^ ... ^ dx_n (X_1, .., X_n) = det dx_i(X_j)
[18:26:45] <quantum> So we'll take this step by step
[18:26:50] <Franciman> all ears ^^
[18:26:52] *** Quits: N0X (~nero@cpe-70-119-110-61.tx.res.rr.com) (Ping timeout: 252 seconds)
[18:26:56] <quantum> Do you know how the wedge product (^) is defined?
[18:27:05] <quantum> like algebraically?
[18:27:10] <Franciman> i did this the nasty way
[18:27:15] <Franciman> I defined tensor algebra
[18:27:23] <Franciman> and then external algebra, as its quotient
[18:27:38] <quantum> that's honestly a pretty good way to go about it
[18:27:43] <Franciman> so for me w ^ v is defined
[18:27:48] <Franciman> as uhm
[18:27:50] <Franciman> for example
[18:27:52] *** Joins: N0X (~nero@cpe-70-119-110-61.tx.res.rr.com)
[18:27:57] <Franciman> dx_1 ^ dx_2 is itself
[18:28:04] <Franciman> then I extend by linearity
[18:28:39] *** Joins: wwilly (~wwilly@fw-tnat-cam1.arm.com)
[18:28:52] *** Quits: xiongxin (~quassel@113.116.34.92) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:28:53] <quantum> ok, if `λ, μ\in V^*` are dual vectors, what `λ^μ` as a bilinear map?
[18:29:13] <Franciman> to answer that I have used this approach
[18:29:34] <Franciman> V ^ V is isomorphic to A_2(V) (the set of bilinear maps)
[18:29:39] <Franciman> and antisymmetric
[18:29:46] <Franciman> which itself is isomorphic to
[18:29:48] <Franciman> V* ^ V*
[18:29:56] <Franciman> and the isomorphism is given by the determinant thing
[18:30:09] <quantum> I think you're overcomplicating things a little
[18:30:11] <Franciman> so \lambda ^ \mu (v_1, v_2) = det
[18:30:37] <cuppajoeman> I want to find the maximum of a function f, I know that ln(x) < ln(y) iff x < y. So I'm looking for a point x in dom(f) where for all z in dom(f), we have f(x) >= z. I remember that I can equivalently find the maximum of ln(f(x)), but I can't recall why. Can someone remind me of the proof?
[18:31:02] <Franciman> quantum: basically I know that: \lambda_1 ^ \lambda_2 (v_1, v_2) = det (lambda_i(v_j))
[18:31:49] <quantum> Are you taking that as a definition or as something you need to show (either is fine, just need somewhere to start)
[18:32:15] *** Joins: Koen (~Koen@104.192.201.77.rev.sfr.net)
[18:32:16] <Franciman> I can take it as a definition, but I would need some help understanding what's going on
[18:32:24] <Franciman> otherwise I can take the external algebra definition
[18:32:29] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:32:34] <Franciman> and get to this through the abovementioned isomorphisms
[18:33:05] <Franciman> i.e. as you wish
[18:34:18] <quantum> so for me, the wedge product of two dual vectors is defined as `λ^μ = 1/2(λ(x)μ - μ(x)λ)` (`(x)` is the tensor product, you can prove this from the tensor algebra definition)
[18:34:41] <Franciman> oh ok
[18:34:43] <Franciman> yes
[18:34:47] <Franciman> that's the antysmimmetrizzator
[18:34:51] <TheHermann> why does the quantity 1 / (1-k) grow for very large k?
[18:35:26] <W> it doesn't
[18:35:57] <W> some calculator (e.g. software) might think it does, due to errors in it, of course
[18:35:58] <cuppajoeman> 1/ (1-2) = -1, 1/(1-3) = -1/2, 1/(1-4) = -1/3, well technically it does
[18:36:44] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:36:48] <W> oh, yeah I guess
[18:36:49] <Franciman> quantum: can I ask about a specific matter, to check the understanding
[18:36:55] <quantum> you can then show (induction) that `λ_1^λ_2^...^λ_k = 1/(k!) \sum_{σ\in S_k} \sign(σ)λ_{σ(1)} (x) λ_{σ(2) ... (x) λ_{σ(k)`
[18:37:00] <W> I was thinking absolute values, but yes, it "grows" closer to the zero from the negative side
[18:37:02] <quantum> sure
[18:37:09] <cuppajoeman> yes
[18:37:12] <Franciman> I want to prove poincaré's lemma
[18:37:27] <Franciman> i.e. a starred set has de rham's cohomology groups = 0
[18:37:39] <Franciman> i.e. we want to find a primitive of each differential form
[18:38:07] <Franciman> I can easily do it for 1-dim differential forms
[18:38:09] <quantum> What reference are you working from
[18:38:13] <Franciman> I just integrate over segments, and that's it
[18:38:21] <Franciman> quantum: ok, here you are going to hear me curse a lot
[18:38:22] *** Joins: complete16 (~cameron@69-176-153-174.spartan-net.net)
[18:38:31] <quantum> since there's a lot to cover and I can't explain it over IRC easily
[18:38:32] <W> TheHermann, so, basically, because 1-k is negative, so the whole value is negative, and the 0 it is approaching is larger than any negative number
[18:39:01] <Franciman> because my teacher didn't give us a reference, it gave us some lecture notes of another teacher (they are really incomplete, because probably that other teacher expected pupils to know things already)
[18:39:08] <Franciman> so I am left filling the blanks all the time
[18:39:16] <Franciman> and iI don't have a real book I can get help with
[18:39:33] <quantum> I would highly recommend reading Bott and Tu's diff. forms in geometry
[18:39:37] *** Quits: Maturion (~Maturion@p200300ede72291004edca8e961fc1ad6.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[18:39:37] *** Quits: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b) (Ping timeout: 258 seconds)
[18:39:45] <Franciman> most books I found use the definition of wedge product you just used
[18:39:52] <Franciman> but we used the one using abstract algebra
[18:39:55] <Franciman> oh great
[18:40:14] <Franciman> quantum: https://www.maths.ed.ac.uk/~v1ranick/papers/botttu.pdf ?
[18:40:25] <TheHermann> W OK my prof said the opposite :s
[18:40:34] <quantum> Franciman: yes
[18:40:38] <Franciman> thanks a lot, sensei
[18:40:39] *** Joins: ravan (~ravan@user/ravan)
[18:40:49] <quantum> there's also a series of books by Lee about manifolds
[18:41:03] <quantum> which are very good if you want some bg
[18:41:24] <Franciman> I really like this part of connecting homology groups
[18:41:26] <Franciman> with differential forms
[18:41:29] <quantum> I can DM you copies if you wan them
[18:41:36] <Franciman> but I feel I always miss out thing :<
[18:41:38] <Franciman> things*
[18:41:59] <W> TheHermann, your prof probably knows what they're talking about, they might have meant what I presumed from the start too, that its magnitude gets smaller and smaller
[18:42:04] *** Joins: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1)
[18:42:06] <TheHermann> the complete formula is k(A)/(1-k(A)) for k to infinity
[18:42:20] <Franciman> quantum: uh do you mean lee differential geometry?
[18:42:41] <quantum> I haven't heard of that one
[18:42:47] <W> TheHermann, the parentheses after k is strange there if k is the variable in a limit, usually used to denote that k is a function
[18:42:49] <quantum> but there's Lee "Introduction to manifolds"
[18:43:13] <quantum> and "Introduction to Riemannian mflds" (though that might not be _as_ closely related
[18:43:14] <Franciman> ah I have that one, yes thanks
[18:43:18] *** Joins: Guest81 (~Guest81@wireless-mustang27.nat.smu.edu)
[18:43:25] <W> TheHermann, if it's not a function and it's just a weirdly written multiplication, whether it is positive or negative also depends on the sign of A
[18:43:28] <Franciman> I didn't use it, because it uses a slightly different approach than my teacher
[18:43:32] <Guest81> https://i.imgur.com/QLTyhAU.png can someone help with this exercise
[18:43:37] *** Quits: Oli (~Unknown@user/oli) (Ping timeout: 268 seconds)
[18:43:37] <Franciman> so it would make things harder for the exam _of tomorrow_
[18:43:39] <TheHermann> k goes to infinity and is growing
[18:44:12] <TheHermann> k is positive
[18:45:02] *** Joins: Oli (~Unknown@user/oli)
[18:46:58] <TheHermann> the teacher says k increases, -k decreases. but 1 / (1-k) grows W
[18:47:30] <W> TheHermann, this is correct, 1/(1-k) grows towards 0
[18:49:25] <TheHermann> grows towards 0 ?? :S
[18:49:35] <cuppajoeman> Yeah, just plug in values
[18:49:40] <cuppajoeman> that's the first thing you should do
[18:50:16] <cuppajoeman> Is the maximum of a function the same as the maximum of that function composed with an order preserving function?
[18:50:47] <Franciman> thanks a lot, quantum
[18:51:02] <TheHermann> but what does it mean it grows towards 0 ?. the function is 0
[18:51:21] <cuppajoeman> what do you mean "the function is 0"
[18:51:22] <W> TheHermann, the function is never 0, it only approaches 0 as a limit
[18:51:24] <quantum> Franciman: np, I didn't do much but I hope those references help you
[18:52:14] <Franciman> getting references is super helpful
[18:52:18] <Franciman> I hate my teacher's style
[18:52:22] <Franciman> he has 0 interest in teaching
[18:52:27] *** Quits: complete16 (~cameron@69-176-153-174.spartan-net.net) (Quit: WeeChat 3.2)
[18:57:28] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 265 seconds)
[18:57:44] *** Quits: sonny (~sonny@8.21.10.78) (Quit: Going offline, see ya! (www.adiirc.com))
[19:00:26] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[19:05:56] <cuppajoeman> Ok, let f: X -> Y and g: Y -> Z, and assume that forall x, y in Y, x =< y => g(x) =< g(y). Let m in X be the maximum point of f so that for all x in X, g(m) >= x. We will show that m is the maximum point of g o f. Let z in Z we want to show g(f(m)) >= z.  We know that for any x in X we have f(m) >= x, so then g(f(m)) >= g(x).
[19:06:28] <cuppajoeman> Err
[19:06:35] <cuppajoeman> ignore that
[19:10:30] *** Quits: dauggy (~wojtek@31.12.0.178) (Quit: Lost terminal)
[19:10:41] <cuppajoeman> Let f: X -> Y and g: Y -> Z, and assume that forall x, y in Y, x <= y implies g(x) <= g(y). Let m be the maximum point of f so that f(m) >=f(x) for every x in X. We will prove that m is the maximum point of g o f. We know that g(f(m)) >= g(f(x)) for every x in X, so m is the maximum point of g o f.
[19:10:44] <cuppajoeman> Is that better?
[19:12:34] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:748d:5da9:5591:4246)
[19:16:25] <Z-module> It would be far more readable to call the two points of Y  y and y'  instead of  x and y.  In fact, you used x for points in two different spaces -- technically fine since they were both quantified, but it's hard to keep track of.
[19:17:30] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[19:23:47] *** Quits: Guest81 (~Guest81@wireless-mustang27.nat.smu.edu) (Ping timeout: 256 seconds)
[19:25:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[19:27:35] <cuppajoeman> Ok thanks
[19:27:43] <cuppajoeman> I'll do that next time
[19:29:39] <|smlckz|> how do i approach this problem? https://ttm.sh/eSo.jpg
[19:37:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-84.dhcp.inet.fi) (Quit: Leaving)
[19:38:20] <cuppajoeman> Let lda be lambda, and b be beta, I'm trying to find the max of f(x) = lda * b * x ^(b -1) e^(-lda * x^b). Thus far I've tried to take the natural logarithm of it and find the maximum of that since ln(x) is an order preserving function. This is what I got to.
[19:38:34] <cuppajoeman> https://usercontent.irccloud-cdn.com/file/NDBiGzT2/irccloudcapture6845197959074486971.jpg
[19:38:38] <isekaijin> Is this some Weibull nonsense?
[19:39:36] <cuppajoeman> It's from a probability course, but they didn't say what the equation represented, they just said find the mode of the following PDF
[19:40:49] <isekaijin> Anyhow, lda * b * e^(-lda) is a constant, so we can just work with x^(b-1) e^(x^b).
[19:41:07] <isekaijin> Now, taking logarithms as you say, we get (b-1) ln(x) + x^b
[19:41:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:41:54] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[19:42:12] <isekaijin> Now, x is a critical point of the PDF if and only if it is a critical point of the last expression.
[19:42:39] <isekaijin> So taking the derivative w.r.t. x, we get (b-1) / x + b x^(b-1) = 0.
[19:42:43] <isekaijin> So far so good?
[19:42:46] <cuppajoeman> You used the fact that multiplication was an order preserving function?
[19:42:55] <isekaijin> ?
[19:43:00] <isekaijin> Where?
[19:43:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[19:43:05] <cuppajoeman> "Anyhow, lda * b * e^(-lda) is a constant, so we can just work with x^(b-1) e^(x^b)."
[19:43:19] <isekaijin> f(x) = lda * b * e^(-da) * x^(b-1) * e^(x^b)
[19:43:33] <isekaijin> e^(-lda), sorry
[19:43:51] <isekaijin> The first three factors are constant, so we can just ignore them.
[19:44:08] <cuppajoeman> So we can remove the constant because the function g(x) = 1/ (lda * b * e ^(-lda) ) is order preserving so the function g o f has the same maximum of f ?
[19:44:20] *** Lord_of_Life_ is now known as Lord_of_Life
[19:44:31] <isekaijin> cuppajoeman: lda * b * e^(-lda) is a positive constant k.
[19:44:40] <cuppajoeman> Right
[19:44:43] <isekaijin> To maximize f(x) is the same thing as to maximize f(x) / k.
[19:44:45] <isekaijin> Becuase k > 0.
[19:44:53] <cuppajoeman> Because 1/k is order preserving
[19:44:57] <cuppajoeman> ?
[19:45:05] <isekaijin> What?
[19:45:17] <isekaijin> 1/k is a constant, not a function.
[19:45:26] <cuppajoeman> Z-module: Am I using order preserving right here?
[19:45:26] <isekaijin> Maximizing x is the same thing as maximizing 2x, right?
[19:45:53] <isekaijin> Similarly, maximizing x is the same as maximizing (1/5) x, or pi x, or x/e, whatever.
[19:46:29] <cuppajoeman> Yeah, and the way you know it's the same is by the fact that it's order preserving
[19:46:33] *** Joins: emf (~emf@2620:10d:c090:400::5:75e7)
[19:46:56] <isekaijin> I guess you can say that g(x) = kx is order-preserving when k > 0.
[19:46:59] <isekaijin> But that's too complicated.
[19:47:22] <isekaijin> It's just plainly obvious that multiplying your objective function times a constant will not change the point(s) where the maximum value is attained.
[19:47:37] <cuppajoeman> RIght so we're going to minimize x^(b-1) e^(x^b)
[19:47:43] <isekaijin> Maximize.
[19:47:48] <cuppajoeman> yes
[19:47:54] <isekaijin> Okay, now we maximize the logarithm of that instead.
[19:48:04] <isekaijin> Which is (b-1) ln(x) + x^b.
[19:48:13] <cuppajoeman> Yes
[19:48:36] <isekaijin> Since this is an infinitely differentiable function defined on an open set, yadda yadda yadda, I am getting bored...
[19:48:48] <isekaijin> ... we take the derivative and set it to zero, to find the critical points.
[19:48:58] <isekaijin> (b-1) / x + b x^(b-1) = 0
[19:49:01] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[19:49:08] <cuppajoeman> Yeah I got to there
[19:49:20] *** Joins: moose (~moose@user/moose)
[19:49:39] <isekaijin> Now multiply times x to obtain (b-1) + bx^b = 0.
[19:49:45] <cuppajoeman> You can't do that??
[19:49:53] <isekaijin> Why?
[19:50:03] <cuppajoeman> WHere did we assume x != 0 ?
[19:50:21] <isekaijin> We never did, but it is clear that the original PDF satisfies f(0) = 0.
[19:50:36] <isekaijin> Errr, wait.
[19:50:37] <|smlckz|> someone want to help me
[19:50:41] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[19:50:43] <isekaijin> cuppajoeman: No, you have a point.
[19:51:03] <isekaijin> cuppajoeman: Let's assume first that b > 1.
[19:51:10] <cuppajoeman> sure
[19:51:23] <isekaijin> If b > 1, then the original PDF satisfies f(0) = 0.
[19:51:29] <isekaijin> Because x^(b-1) = 0.
[19:51:44] <isekaijin> (Notice that b-1 is a positive exponent when b > 1.)
[19:51:57] <cuppajoeman> Yes
[19:52:06] <isekaijin> Therefore, in this case, we can multiply everything times x, and we get...
[19:52:19] <isekaijin> b-1 + bx^b = 0
[19:52:33] <isekaijin> (Since x = 0 cannot possibly be the value where the PDF is maximized anyway.)
[19:53:19] <cuppajoeman> Ok
[19:53:34] <isekaijin> Now, solving for x, we get x^b = (1-b) / b = 1/b - 1, hence x = (1/b - 1)^(1/b).
[19:53:39] <cuppajoeman> Agreed.
[19:53:57] <isekaijin> This is the value where the PDF is maximized.
[19:54:08] <cherim> "<|smlckz|> how do I approach this problem? https://ttm.sh/eSo.jpg " is actually somewhat fun. Challenge ##math to find the answer as an elementary function of a (it is).
[19:54:36] <isekaijin> cuppajoeman: For b = 1, the PDF reduces to the exponential distribution, and it is obvious that its PDF is maximized when x = 0.
[19:54:52] <cherim> You can think this about the usual 1/(1+e^y) + 1/(1+e^-y) trick and a typo in the statement, but it isn't
[19:55:06] <cuppajoeman> What does this represent
[19:55:16] <cuppajoeman> Knowing the value where the PDF is maximized
[19:55:31] <cuppajoeman> I know that the probability density function evaluated at a single point means nothing
[19:56:06] <cuppajoeman> But I know that when you take the integral over [a, b], you get P(a <= X <= b )
[19:56:47] <isekaijin> Weren't you trying to find the mode of the distribution?
[19:56:54] <cuppajoeman> that's right
[19:58:54] *** Quits: N0X (~nero@cpe-70-119-110-61.tx.res.rr.com) (Ping timeout: 260 seconds)
[19:59:22] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:167f:ca90:fc42:773b)
[19:59:30] <isekaijin> So, then, if I understand correctly, you need to find the value where the PDF is maximized, right? The mode is the point m such that the “infinitesimal probability” of X being in an interval of length eps > 0 centered at m is maximized.
[19:59:46] <isekaijin> In other words, you need to find the point where the PDF is maximized.
[20:00:07] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[20:00:31] *** Joins: N0X (~nero@104-182-99-92.lightspeed.rcsntx.sbcglobal.net)
[20:00:32] <isekaijin> I am a simple man, I do not play any fancy measure-theoretic games to solve a simple problem.
[20:00:51] <HisShadow> hmm, is there a real example of a sequence a_k somewhere where to prove convergence easily you need to define b1 = a1, b2 = a2 - a1, b3 = a3 - a2, ... and use series test on sum b_k?
[20:01:02] <|smlckz|> cherim: what do you mean by an elementary function?
[20:01:14] <Z-module> In |smlckz|'s link there, the integration limits tell you that the inside integral is actually for dy.  I wish they'd written  dy dx  instead of dx dy
[20:01:41] <cherim> https://en.wikipedia.org/wiki/Elementary_function
[20:01:57] <cuppajoeman> Thanks for the explanation isekaijin
[20:03:20] <isekaijin> Anyhow, for the b < 1 case, I think there are no critical points, hence no maximum at all, because x^b = 1/b - 1 would imply that x^b < 0, which is impossible.
[20:09:45] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:13:12] *** Parts: jrm (~jrm@156.34.187.65) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[20:17:18] *** Parts: savask (~savask@Powder/Developer/savask) ()
[20:17:30] *** Quits: rak (~rak@debian/rak) (Quit: Segmentation fault (core recycled))
[20:18:03] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[20:19:19] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[20:19:35] <cherim> Looks like I made a wrong guess on where the fun is
[20:20:01] *** Quits: andreasbuhr (~quassel@p548dd4a5.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:20:32] <cherim> Or not, you fixed b>1/b<1 in the end
[20:20:39] *** Quits: Europa (~Europa@user/europa) (Ping timeout: 276 seconds)
[20:20:39] *** Joins: Europa_ (~Europa@user/europa)
[20:23:09] *** Quits: Europa_ (~Europa@user/europa) (Remote host closed the connection)
[20:24:39] *** Joins: W7 (~W7@69.168.242.46)
[20:25:00] *** Parts: W7 (~W7@69.168.242.46) ()
[20:25:03] *** Joins: Europa (~Europa@user/europa)
[20:25:53] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[20:27:53] *** Joins: robin (~robin@user/terpri)
[20:38:18] *** Quits: Koen (~Koen@104.192.201.77.rev.sfr.net) (Remote host closed the connection)
[20:38:46] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[20:39:11] <lpapp> hi, what is the name of the operation when you "normalise by w" in a 4D vector, basically dividing x, y and z by w and setting w to 1?
[20:40:23] <qergle> homogenizing?
[20:40:33] <lpapp> that is what I also thought yes
[20:40:40] <lpapp> we currently call the method wNormalize
[20:40:44] <lpapp> but it sounds bad
[20:41:17] *** Joins: rak (~rak@debian/rak)
[20:41:27] <Franciman> uhm isn't it dehomogenizing?
[20:41:33] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:748d:5da9:5591:4246) (Quit: Client closed)
[20:41:34] <Franciman> making homogeneous coordinate affine
[20:41:34] <lpapp> homogenize?
[20:41:42] <qergle> when you do this, for example in projective space with 3 coords, you call them "homogeneous coordinates"
[20:41:56] <qergle> (X,Y,1)
[20:42:02] <lpapp> affinize?
[20:42:03] <lpapp> :P
[20:42:10] <Franciman> then if you divide by z
[20:42:12] <Franciman> you get affine coords
[20:42:44] <lpapp> so, how would you call this method
[20:42:49] <lpapp> wNormalize is a bit awkward
[20:42:49] <qergle> normalize seems fine to me
[20:42:54] <qergle> you're normalizing by W
[20:43:03] <lpapp> you mean wNormalize is fine?
[20:43:11] <lpapp> normalizing a vector is something else
[20:43:18] <lpapp> we cannot just use the normalize thereof
[20:43:22] <lpapp> name*
[20:43:23] *** Quits: DrMax (~DrMax@node-1w7jra94757g1vmdkov85fhtq.ipv6.telus.net) (Ping timeout: 246 seconds)
[20:43:29] <qergle> i am not endorsing the camel-case name, just the idea that you are normalizing by W. call it what you wish.
[20:43:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:43:45] <lpapp> normalizing is confusing
[20:43:55] <lpapp> someone looked at it and he thought of square root, etc.
[20:44:03] <lpapp> without looking into the implementation
[20:44:13] <lpapp> do not feel normalize by w is crystal clear.
[20:44:50] *** Joins: specing (~specing@user/specing)
[20:44:55] <qergle> wHomogenize might make them think of milk then.
[20:45:07] <lpapp> in a math class?
[20:45:34] <qergle> already showing handicap by thinking sqrt from before
[20:45:34] <isekaijin> More than anything else, “whomogenize” makes me think of “cool whip”.
[20:45:54] <lpapp> oh well
[20:46:07] <bildramer> projection to the w=1 plane?
[20:46:31] <qergle> that is not occurring though
[20:47:19] <bildramer> ah right
[20:47:26] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[20:47:35] <qergle> maybe NormalizeCoordinate
[20:48:03] <qergle> you have information content issue, want to condense an operation into a variable/function name that conveys full description.
[20:48:39] <qergle> maybe call function "FunctionThatTakes4DVectorAndDividesAllCoordinatesByValueOfLastCoordinate" then no confusion. :>
[20:49:00] <lpapp> I think wNormalize could also mean making w between 0..1
[20:49:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:52] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[20:53:02] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:56:23] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:56:41] *** Quits: kmh (~kmh@2a00:6020:5004:6800:a8fd:bd5b:171e:1889) (Read error: Connection reset by peer)
[20:56:53] *** Joins: DrMax (~DrMax@node-1w7jra94757g0qm6ux0eknpcd.ipv6.telus.net)
[21:01:27] <|smlckz|> :(
[21:02:56] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[21:03:48] *** Joins: tizef (~tizef@202.153.80.26)
[21:04:01] *** Quits: wwilly (~wwilly@fw-tnat-cam1.arm.com) (Quit: Leaving)
[21:13:12] *** Quits: mbuf (~Shakthi@223.178.116.173) (Quit: Leaving)
[21:19:08] *** Joins: econo (uid147250@user/econo)
[21:20:02] *** Joins: magla (~gelignite@55d45a4d.access.ecotel.net)
[21:25:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:32:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:35:59] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:39:12] *** Quits: tizef (~tizef@202.153.80.26) (Quit: tizef)
[21:40:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[21:42:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:42:31] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Remote host closed the connection)
[21:43:25] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[21:43:36] *** Joins: Guest91 (~Guest91@193.170.159.99)
[21:44:06] <Guest91> Can you take the square of an area under a acceleration time graph to get the distance?
[21:45:14] <Guest91> As taking that area is basically multiplying by time to get speed, wouldn't squaring it be multiplying by time^2?
[21:45:32] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 268 seconds)
[21:46:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:46:57] <Guest91> (At least for linear graphs, as in delta(d)/delta(t) is constant.)
[21:47:14] <Guest91> delta(a)/delta(t)*
[21:48:02] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:53:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:55:35] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 264 seconds)
[21:55:52] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[21:58:19] *** Joins: hyiltiz (~quassel@31.220.5.250)
[21:59:43] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 258 seconds)
[22:00:16] *** Quits: h_m (~hugh@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[22:01:24] <somiaj> You can't get distance from just acceleration
[22:01:41] <Player001> you'll want to take to integrate and solve for the displacement equation
[22:01:54] <Player001> you'll want to integrate and solve for the displacement equation
[22:02:18] <Player001> using any initial conditions given by the problem
[22:02:39] *** Joins: h_m (~hugh@186-149-117-154.bitcointernet.co.za)
[22:02:57] <somiaj> The area under the acceleration graph on [a,b] is just the change in velocity, Delta v, on that interval.
[22:03:43] <somiaj> Even if you knew your initial velocity, v(a), and included the change in velocity, you still can't get displacement from the area.
[22:03:52] *** Joins: audiobirb (~audio@2603-8081-1800-1546-aa2c-362e-4508-2aa9.res6.spectrum.com)
[22:04:08] <somiaj> But you could get v(t) = v(a) + int_a^t a(x) dx, and then use v(t) to get displacement.
[22:04:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:04:43] *** Quits: Guest91 (~Guest91@193.170.159.99) (Ping timeout: 256 seconds)
[22:06:45] <somiaj> I guess you could write it as a double integral, int_a^b ( v(a) + int_a^t a(x) dx ) dt = (b-a)v(a) + int_a^b int_a^t a(x) dx dt
[22:09:42] *** Joins: phao (~phao@2804:d45:8e7a:de00:f933:818:5663:695b)
[22:15:17] *** Quits: nagefire (~nagefire@66-219-236-165.dynamic.ip.veracitynetworks.com) (Ping timeout: 250 seconds)
[22:18:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[22:19:23] <biberao> good afternoon
[22:19:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:20:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Read error: Connection reset by peer)
[22:22:02] <biberao> any of you uses a tablet to draw like figures for math?
[22:22:06] *** Quits: magla (~gelignite@55d45a4d.access.ecotel.net) (Quit: Stay safe!)
[22:24:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:28:02] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[22:28:18] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[22:29:59] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[22:30:13] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:30:14] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[22:30:43] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[22:32:07] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[22:33:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:34:53] <bildramer> say I have a square full rank matrix A with random small integer entries. between -3 and 3, or maybe -4 and 4. small dimension, too, anywhere from 3 to 10. and I want the solution of Ax=0 to be unique and have the property that the entries of x are all distinct integers. what restrictions have to be placed on the matrix? is the easiest method just brute force "try a bunch"?
[22:35:14] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 260 seconds)
[22:36:09] <bildramer> actually nevermind they don't even have to be integers, but they have to be distinct
[22:36:16] <qergle> how can full rank have solution Ax=0 with x≠0
[22:36:41] <bildramer> ...right
[22:36:55] <bildramer> yeah I'm dumb
[22:37:18] <bildramer> rank as close to full as possible, so dimension minus one
[22:37:28] <Z-module> bildramer:  however, the inverse of A, computed over Q, won't usually have all integer entries.
[22:37:59] *** Joins: hyiltiz (~quassel@31.220.5.250)
[22:38:12] <qergle> bildramer: if rank n-1 then if x solves Ax=0 won't c*x solve too?
[22:38:13] <bildramer> but then I can just add up the n-1 equations above and get the final one. nevermind, completely trivial lol
[22:38:34] <qergle> for some non-zero x.,
[22:38:59] <qergle> the best you can do is a subspace of a line.
[22:39:10] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:39:11] <bildramer> yeah, unique up to multiplication
[22:39:14] <somiaj> full rank is equivalant to Ax = 0 having a unique solution, due to rank-nullity theroem.
[22:39:15] <bildramer> should have specified
[22:39:27] <qergle> problem morphing faster than my prng
[22:39:59] *** Quits: Turingtoast (~Tino@200116b86006e400e516273285f2eaed.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:40:20] <bildramer> my problem is that I'm trying to generate solvable (trivially for a computer, not so for humans) problems for puzzle, and it's best if solutions are unique too
[22:40:36] *** Joins: mendel_munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[22:40:36] *** Quits: phao (~phao@2804:d45:8e7a:de00:f933:818:5663:695b) (Quit: Leaving)
[22:40:41] <somiaj> I can't think of any other property besides that there exists n-1 linearly independent rows/columns
[22:40:41] <bildramer> the exact specification only matters as long as it doesn't make things either too easy humanly, or impossible
[22:40:59] *** munkis is now known as Guest376
[22:40:59] *** Quits: Guest376 (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Killed (tungsten.libera.chat (Nickname regained by services)))
[22:40:59] *** mendel_munkis is now known as munkis
[22:41:02] <bildramer> oh well
[22:41:35] <qergle> somiaj: he does want all entries in x to be different though, so that adds a minor additional restriction
[22:41:40] <[itchyjunk]> my professor proved 1 is the largest natural number and asked us to catch his trick. took me a second but I caught it!
[22:41:49] <[itchyjunk]> another successful day of mathematics
[22:42:05] <somiaj> qergle: ahh I missed that evolution
[22:42:18] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[22:42:36] <somiaj> [itchyjunk]: under what well order? 2<3<4<5<....<1
[22:42:49] <somiaj> or the ordinal omega+1
[22:43:08] <[itchyjunk]> the argument was something like, for all n \in Z, n^2 > = n
[22:43:26] <[itchyjunk]> for maximal n, n = n^2 since it cannot be greater
[22:43:50] <[itchyjunk]> then he did something like either n = 0 or n = 1, and since 1 > 0, n = 1
[22:43:58] <[itchyjunk]> but he assumed maximal n existed
[22:44:27] <[itchyjunk]> the context was we were talking about eulers work in calculus of variation
[22:44:49] <[itchyjunk]> apparently he did stuff that assumed existence of some minimal function then worked out what it was
[22:45:29] <somiaj> sometimes it is lost how much intuition and guessing is used in mathematics in modern math where everything is now provable from axioms.
[22:45:58] <somiaj> Formalisim is often created due to issues that arise without it
[22:46:18] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:46:34] <somiaj> One prime example is limits were fairly well used before cauchy added the epislon-delta definition to deal with various problems one could run into with a more nieve definition/intuition.
[22:46:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:47:05] <bildramer> yeah
[22:48:23] *** Quits: rex_victor (~rex@HSI-KBW-109-193-114-185.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 264 seconds)
[22:49:56] *** Quits: dld (~davidlowr@2620:6e:6000:2900:5c78:4bcc:82fe:593c) (Ping timeout: 258 seconds)
[22:51:15] *** Quits: Macuser (~Macuser@216.30.159.201) (Max SendQ exceeded)
[22:52:10] *** Joins: rex_victor (~rex@2a02:8071:2280:a220::58e)
[22:55:56] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:7926:2664:9b12:1b9a) (Ping timeout: 245 seconds)
[22:58:06] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 260 seconds)
[22:58:54] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:01:23] *** Joins: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net)
[23:04:27] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[23:04:43] *** Joins: CombatVet (~c4@user/combatvet)
[23:06:22] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[23:06:37] *** Joins: magla (~gelignite@55d45a4d.access.ecotel.net)
[23:08:43] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[23:08:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:7926:2664:9b12:1b9a)
[23:16:56] *** heineken is now known as battousai
[23:23:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Client closed)
[23:25:27] *** Quits: battousai (~i.am@user/heineken) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:26:22] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[23:26:42] <cuppajoeman> I'm trying out this problem: https://usercontent.irccloud-cdn.com/file/UDLS6zBa/image.png
[23:27:24] *** Joins: Kaylah (~Kaylah@ptr-eit6u3erip0lxc52zi7.18120a2.ip6.access.telenet.be)
[23:27:35] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[23:27:35] <cuppajoeman> I'm not even sure how to compute P(X < 3), If X ~ N(0, 1) then P(X < 3) = int from -inf to 3 of  1/sqrt(2pi) e^(-x^2/2) dx
[23:27:48] <biberao> i bet Z-module can
[23:28:08] <biberao> he just cant cook
[23:28:10] <cuppajoeman> I guess I'm not sure if we're suppose to be able to compute P(X < a) for X ~ N(0, 1) in general
[23:28:13] <qergle> cuppajoeman: do you need to?
[23:28:27] <cuppajoeman> Probably not, but I got curious if we could or not now
[23:28:34] <qergle> isn't Y just X shifted one to the right?
[23:29:09] <somiaj> cuppajoeman: that integral is a classic one that has no closed form antiderivative, some places require using a z-table, though just use the error function
[23:29:13] *** Joins: seninha (~seninha@user/seninha)
[23:29:33] <cuppajoeman> qergle: Yeah, : https://usercontent.irccloud-cdn.com/file/MD24yjdd/image.png
[23:30:06] <cuppajoeman> So the N(0,1) integral shoud be larger because you're getting more of the hump
[23:30:09] *** Joins: dauggy (~wojtek@31.12.0.178)
[23:30:29] <qergle> therefore P(X<3) = P(Y<4)
[23:30:43] <qergle> and P(Y<3) < P(Y<4)
[23:30:57] <cuppajoeman> So we conclude that P(X<3) > P(Y< 3)
[23:31:08] <qergle> we s/conclude/prove/
[23:31:27] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[23:31:27] <cuppajoeman> proved?
[23:31:35] <qergle> didn't we?
[23:31:38] <cuppajoeman> yes
[23:31:47] <cuppajoeman> <3
[23:31:57] *** Joins: newpy (~newpy@2601:280:4381:1390:80e5:b4c3:137e:ac42)
[23:32:30] <cuppajoeman> That idea should work given any positive function
[23:33:38] <qergle> i mean you can add bells and whistles by putting a few integrals in there
[23:34:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 258 seconds)
[23:34:55] <qergle> but all you really need is that CDF(x) ≤ CDF(y) if x ≤ y
[23:35:18] <qergle> i think that's what you mean by positive function, monotonic increasing, yes?
[23:36:14] <cuppajoeman> Yeah
[23:36:15] <qergle> and the observation, of course, that P(X<3) and P(Y<4) are the same thing.
[23:36:44] <qergle> the monotonicity gives P(Y<4) > P(Y<3)
[23:37:21] <qergle> bbiab
[23:41:09] *** Joins: emf_ (~emf@2620:10d:c090:400::5:a662)
[23:41:31] <cuppajoeman> I'm reading about the gamma function, I needed to use integration by parts, and totally forgot the proof, then I also forgot what an indefinite integral was, (indefinite integralhttps://i.imgur.com/5z0TLKK.png). Now working on understanding the proof of integration by parts: https://i.imgur.com/SAM0jGb.png. My question is what does "integrating both sides even mean",  based on the definition these indefinite integrals are sets, so
[23:41:31] <cuppajoeman> doesn't having a plus on the RHS not make any sense?
[23:44:11] *** Quits: emf (~emf@2620:10d:c090:400::5:75e7) (Ping timeout: 264 seconds)
[23:44:28] <somiaj> I would just think in terms of antiderivatives, and there is a theorem that states if F'(x) = G'(x) then F(x) = G(x) + Constant
[23:44:57] <somiaj> so if you have a(x) = b(x), then A(x) = B(x) + C, where A(x) and B(x) are antideriatives, and due to the FTC, we just use the integral symbol for this
[23:45:16] <somiaj> so int a(x) dx = int b(x) dx is just another way to say that.
[23:45:41] <somiaj> (usually the constant isn't added until the antiderivative is actually taken)
[23:47:05] <somiaj> So when it is said that int f(x) g'(x) dx = f(x) g(x) - int f'(x) g(x) dx, it is really saying that both those expressions (Which include an integral) generate the same family of antiderivatives.
[23:48:08] <somiaj> Note, you can also just avoid antiderivatives here and this also holds for integrals, int_a^b f(x) g'(x) dx = f(x)g(x)|_a^b - int_a^b f'(x) g(x) dx
[23:48:28] <somiaj> then you have an equality of numbers vs an equality of 'families'
[23:48:37] <cuppajoeman> Right
[23:49:45] <cuppajoeman> If I define A(f) = { F: where F' = f}, then to re-write the second line we would write A(d/dx ( u(x) * v(x) ) ) = A ( v(x) d/dx u(x)  + u(x) d/dx v(x) )
[23:49:48] <somiaj> Maybe another way to think about it is if you have an equality between two integral statements, it means that the constants of integrations can be chosen appropetly to make them equal as functions.
[23:50:15] *** Joins: jmorris (uid433911@id-433911.hampstead.irccloud.com)
[23:50:37] <cuppajoeman> Then I can re-write RHS to be A(v(x) d/dx u(x) ) + A( u(x) d/dx v(x) ) where + is interepreted as set addition
[23:50:46] <cuppajoeman> Is that valid or am I off the rails
[23:50:51] <somiaj> You could do that, though I think here being overly formal can sometimes miss things. But this just is due to the fact there is more than one possible antiderivative.
[23:51:30] <somiaj> cuppajoeman: got to be careful there, but yes I think it works, since you can just combine the constants into a single one
[23:52:31] <cuppajoeman> How do we know that A( d/dx (u(x) * v(x)) ) becomes u(x) * v(x), shouldn't it be that with some constant?
[23:52:44] <cuppajoeman> hinting at 3rd line
[23:53:29] <somiaj> Indefinite integrals are just a bit strange, since sometimes people like to relate them to definite integrals, int_a^x f(t) dt, but for instance int_a^x 2t dt, will not generate all possible antiderivatives of 2t
[23:54:51] <somiaj> cuppajoeman: If you had a constant there, say +C1, you could move that constant over to the other side of the equation and combine it with the constant you generate by the other antiderivative
[23:54:51] <cuppajoeman> I do find it strange, this thing defined as a set, is sometimes treated not as a set and everyone is ok with it?
[23:55:15] <cuppajoeman> ok
[23:55:40] <somiaj> I think it isn't often thought of as a set, but though of as 'any possible antiderivative' vs 'the set of all antiderivatves'
[23:56:03] <cuppajoeman> So it's a single thing?
[23:56:04] <somiaj> the problem is the first thing isn't that formal, but very useful, and the second is formal, but can add complications you don't often seen when things are proven.
[23:56:08] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[23:56:54] <somiaj> It kinda shifts back and forth, and provided in the end you end up with all possible antiderivatives, it is okay
[23:56:55] <cuppajoeman> Hmm, ok, maybe I can do the standard proof first and then see if I can re-write it more formally
[23:57:19] <somiaj> and in this case, you can formalize it to fix the issues you are running into, but these fixes don't help better understand integration by parts, nor help you understand where it came from.
[23:57:55] <somiaj> two fixes are like you are doing, think of things as sets, though I prefer the fix of integrals just introduce unknown constants
[23:57:55] <cuppajoeman> I guess a question I have is which fact are we using to show that A(d/dx f(x)) = {f + c: c in R}
[23:58:03] <somiaj> and then you can group all the constants together into a single one.
[23:58:03] *** Quits: Kaylah (~Kaylah@ptr-eit6u3erip0lxc52zi7.18120a2.ip6.access.telenet.be) (Ping timeout: 256 seconds)
[23:58:28] <somiaj> the main theorem is if F'(x) = G'(x) then F(x) = G(x) + C (or F(x) and G(x) differ by a constant)
[23:59:53] <somiaj> so using that int d/dx( f(x) ) dx = f(x) + C
[23:59:58] *** Joins: Kaylah (~Kaylah@ptr-eit6u3gpspvt6v7zo0k.18120a2.ip6.access.telenet.be)
