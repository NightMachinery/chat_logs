[00:08:43] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[00:09:29] *** Joins: xet7 (~xet7@user/xet7)
[00:39:23] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[00:43:54] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[00:45:49] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[00:48:20] <PMunch> Rendering episode 4 of the keyboard firmware series!
[00:49:16] <supakeen> link?
[00:50:11] <nrds> <06Prestige99> \o/
[00:51:46] <PMunch> I mean it's rendering, so it's not uploaded yet, and so no link :P
[00:52:47] <PMunch> It'll be added to this playlist though once it's done: https://www.youtube.com/playlist?list=PL9Yd0XwsGAqwzBkhRNT_H2gsedNcCh4Pw
[00:53:06] <PMunch> But it's going to take about an hour to render. And it's getting late. So I'll probably upload it tomorrow morning
[00:54:11] <FromDiscord> <Elegantbeef> Content with content 😛
[00:55:27] <PMunch> Ugh, I just looked at the other episodes I've recorded.. Not looking forward to edit nr. 6.. It's almost six and a half hours long, and the first hour I was muted -_-
[00:55:55] <FromDiscord> <Elegantbeef> Ah so you mean only the first hour is watchable
[00:56:12] <FromDiscord> <Elegantbeef> I could not help myself
[00:57:11] <PMunch> Haha :P
[00:57:42] <FromDiscord> <Elegantbeef> You say haha but i can hear the crying from here
[00:58:18] <PMunch> Not at all, people actually seem to prefer my audio to my videos :P
[00:58:49] <FromDiscord> <Elegantbeef> Well the accent is calming, when it's not screaming "viking"
[00:59:27] <FromDiscord> <Elegantbeef> I'm currently taking a break from fighting with framebuffers, so where the hell are all the Nim questions?!
[01:00:49] <PMunch> Accent? Believe me you don't want the Norwegian accent
[01:00:58] <PMunch> Oooh, Nim questions! I know this
[01:01:16] <PMunch> What is the benefit of style insensitivity?
[01:01:42] <PMunch> Since Nim uses C as a backend, does that mean it's a transpiler?
[01:02:04] <PMunch> Can I program Nim with brackets instead of indentation? I don't like whitespace
[01:02:17] <PMunch> Oh, and if I do want to use whitespace, can I use tabs?
[01:02:46] <FromDiscord> <Elegantbeef> Lol
[01:03:01] <PMunch> I really like Nim, just a shame that it uses a GC..
[01:03:07] <PMunch> Did I miss anything? :P
[01:03:17] <FromDiscord> <Elegantbeef> Oh there's evo 😛
[01:03:39] <FromDiscord> <evoalg> You called? 😉  Some people use `1..5` and some use `1 .. 5` ... it's just a matter of preference?
[01:04:09] <FromDiscord> <Elegantbeef> Why is my program slower than python?
[01:04:31] <FromDiscord> <evoalg> my question was serious!
[01:04:37] <FromDiscord> <Elegantbeef> i use `a..b` when there is no math, if there is math i do `a .. 1 +5`
[01:04:50] <PMunch> @evoalg, was that actually a question? It's mostly preference, although I think the official styleguide is to use the spaces variant
[01:05:09] <PMunch> `a .. 1 +5`... You psycho
[01:05:19] <FromDiscord> <Elegantbeef> i edited it
[01:05:24] <FromDiscord> <Elegantbeef> `a .. 1 + 5` dumbo
[01:06:06] <PMunch> Haha :P
[01:06:08] <nrds> <06Prestige99> I usually wrap mine in parens if anything else is nearby
[01:06:26] <nrds> <06Prestige99> but nobody likes the way I do things so :P
[01:06:29] <FromDiscord> <evoalg> thank you ... and some for `1 ..< 5` vs `1..<5` vs `1 .. <5` I guess
[01:06:31] <FromDiscord> <Elegantbeef> Well it's ok to be wrong prestige, just as long as you admit it
[01:06:36] <nrds> <06Prestige99> Lol
[01:07:13] <FromDiscord> <Elegantbeef> Yep it's mostly preference but mine is right
[01:07:48] <FromDiscord> <evoalg> I had `a -1` in my and it took me ages to figure out what was wrong (being new to nim)
[01:08:16] <FromDiscord> <Elegantbeef> unary operators!
[01:09:06] <FromDiscord> <evoalg> I didn't understand why the compiler error message was saying I was trying to call a
[01:09:21] <FromDiscord> <evoalg> but in hindsight it obvious
[01:10:16] <PMunch> Haha, yeah the Nim syntax is sometimes so lenient that error messages can be a bit confusing :P
[01:11:30] <FromDiscord> <evoalg> `a -1` in python subtracts 1 ... but yea it's bad practice
[01:12:36] <FromDiscord> <Elegantbeef> Yea it's very ambiguous
[01:13:08] <FromDiscord> <evoalg> Elegantbeef I was looking at your elegant slicterator and I see you cunningly have an iterator call an iterator ... but does that use extra mem?
[01:13:16] <FromDiscord> <Elegantbeef> Nope
[01:13:20] <FromDiscord> <Elegantbeef> Iterators expand at compile time
[01:13:25] <FromDiscord> <Elegantbeef> non closure ones atleast
[01:13:34] <FromDiscord> <evoalg> oh that's soo cool
[01:14:00] <FromDiscord> <evoalg> what is non closure? ... is it meta programing that I'm not up to yet?
[01:14:59] <FromDiscord> <Elegantbeef> closure iterators are iterators that capture their initialization values
[01:15:27] <PMunch> If you need to ask you probably don't need to worry about them
[01:16:54] <FromDiscord> <Elegantbeef> For a shitty example https://play.nim-lang.org/#ix=3EJy
[01:17:01] <FromDiscord> <Elegantbeef> But yea like pmunch said no need to worry
[01:17:25] <FromDiscord> <impbox [ftsf]> closure iterators can capture state and then you can call them at your leisure or pass them around as variables
[01:17:33] <FromDiscord> <impbox [ftsf]> Pretty cool
[01:17:50] <FromDiscord> <impbox [ftsf]> I use them like coroutines
[01:17:51] <PMunch> Fun fact, it's also how async is implemented in Nim
[01:20:35] <FromDiscord> <Elegantbeef> That wasnt too fun, i want a refund
[01:22:20] <PMunch> Well it was free..
[01:22:42] <FromDiscord> <Elegantbeef> Free things can be good, all the software i use is free! 😜
[01:22:53] <PMunch> All?
[01:23:31] *** Quits: kenran (~kenran@200116b82b539f00f3f309ebb0e24d35.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[01:31:16] <FromDiscord> <Elegantbeef> Yep
[01:34:10] <FromDiscord> <dom96> sent a code paste, see https://play.nim-lang.org/#ix=3EJM
[01:37:55] <FromDiscord> <evoalg> I'm confused ... I get subtraction when I do that in python
[01:38:11] <PMunch> I guess it depends on what `a` is defined as
[01:38:27] <FromDiscord> <dom96> yeah, I assigned a function to `a`
[01:38:40] <PMunch> >>> a = 10
[01:38:40] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[01:38:40] <PMunch> >>> a -1
[01:39:06] <FromDiscord> <evoalg> ah! ... trying to confuse me ... you'll find it's not difficult 😉
[01:39:12] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[01:41:53] <FromDiscord> <evoalg> ElegantBeef I see with that closure example you gave: https://play.nim-lang.org/#ix=3EJy ... I can't do `echo doThing(5)` or `echo doThing()(5)` ... I have to assign the closure iterator to a variable first?
[01:44:28] <FromDiscord> <Elegantbeef> Yea afaik when you do `var a = doThing` it instantiates the iterator so if you want to do it on one line you'd have to do `echo (var a = doThing; a(5))`
[01:44:39] <FromDiscord> <dom96> heh, PMunch's messages come through as "quotes" on Discord
[01:44:45] <FromDiscord> <Elegantbeef> I dont use closures much so i could be wrong about the semantics there
[01:44:58] <FromDiscord> <Elegantbeef> Well he did quote
[01:45:05] <FromDiscord> <Zoom> You're not
[01:45:13] <PMunch> The messages starting with `>>>` ?
[01:45:14] <FromDiscord> <Elegantbeef> Thanks Zoom
[01:45:20] <FromDiscord> <dom96> PMunch: yeah
[01:45:43] <FromDiscord> <Elegantbeef> yea `>` is the quote in element/discord
[01:45:46] <PMunch> Guess that makes sense, just the bridge trying its best :P
[01:46:30] <FromDiscord> <dom96> I often wonder why closure iterators don't have a clearer way of initialisation
[01:46:44] <FromDiscord> <Zoom> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: any idea on how to add `pairs` to your slierators?
[01:46:54] <FromDiscord> <Elegantbeef> What type of pairs
[01:46:58] <FromDiscord> <Zoom> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/908480390484856892): [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: any idea on how to add `pairs` to your slicerators?
[01:47:52] <FromDiscord> <Zoom> immutable and mutable? \:P
[01:48:16] <FromDiscord> <evoalg> gosh Elegantbeef you might have to fix that module name if people are actually going to start using it
[01:48:16] <FromDiscord> <Elegantbeef> Well i can make a macro for mutable pairs
[01:48:34] <FromDiscord> <Elegantbeef> slicerator is probably the better name
[01:48:46] <FromDiscord> <Elegantbeef> sliceterator is too silly
[01:49:09] <FromDiscord> <evoalg> it grows on me after a while 😉
[01:49:30] <FromDiscord> <Elegantbeef> But i did fix the repo name so it should be fine now
[01:49:49] <FromDiscord> <Elegantbeef> Remember Zoom we cannot do `(int, var T)` but a macro can
[01:49:56] <FromDiscord> <Elegantbeef> So yea i'll throw in some macros for that
[01:50:52] <FromDiscord> <Zoom> Yeah, I figured there's no room for much improvement besides macros.
[01:52:08] <FromDiscord> <evoalg> when I uninstall and install it, it still says "Success: slicterator installed successfully."
[01:52:54] <FromDiscord> <Elegantbeef> Lol
[01:52:56] <FromDiscord> <Zoom> I like and don't like how conservative Nim is with all those suggestion and PRs for iterators and such by Timothee.
[01:53:23] <FromDiscord> <Elegantbeef> I mean iterable is a mess imo
[01:53:28] <FromDiscord> <Elegantbeef> Its a nice idea but poorly implemented
[01:53:58] <FromDiscord> <Zoom> It's something and the scope is limited, so at least not much damage
[01:54:00] <PMunch> Okay, video is finished rendering now, and uploading to YouTube. Should go live once it's ready
[01:54:30] <FromDiscord> <evoalg> I also have to `import slicterator` as `import slicerator` doesn't work ... would my system be caching the old one with the wrong name?
[01:54:55] <FromDiscord> <Elegantbeef> Well sliceterator is the name of the module
[01:55:01] <FromDiscord> <Elegantbeef> Look at the git url and the module in `src`
[01:55:14] <FromDiscord> <Elegantbeef> I will be changing it to slicerator since i prefer that happy accident
[01:55:24] <FromDiscord> <Elegantbeef> But i'm still dicking around with framebuffers
[01:57:15] <PMunch> Now I really have to go to bed..
[01:57:50] <FromDiscord> <evoalg> I played with `rfind` in slicerator and maybe it should maybe be named `rfindAll` as I think the `re` module has findAll to return all the instances??
[01:58:23] <FromDiscord> <Elegantbeef> Just dont use regex like a sane person 😛
[01:58:26] <FromDiscord> <Elegantbeef> I'm kidding of course
[02:03:18] <FromDiscord> <Elegantbeef> The names arent ideal either, so yea will probably change it
[02:05:44] <PMunch> So I should use regex like an insane person?
[02:07:40] <FromDiscord> <evoalg> my Perl days meant I fell in love with regex's
[02:07:54] <FromDiscord> <zentoad> Is there a way to use a C++ class that takes std::vector?
[02:14:12] <PMunch> Video seems to be up now. And I'm off to bed! It's not super interesting unless you're interested in macros, microcontrollers, and/or keyboards though..
[02:14:13] <PMunch> https://www.youtube.com/watch?v=4lyGYD0C1qQ
[02:14:25] <FromDiscord> <Elegantbeef> Buh bye
[02:14:30] <PMunch> Bye
[02:14:33] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[02:16:26] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:21:12] <FromDiscord> <evoalg> non-closure iterators calling non-closure iterators don't use extra mem, but proc's do right? Each time a proc is called it will assign mem for that proc etc, whereas non-closure iterators are expand inline to the code that called it at compile time ... have I got that right?
[02:22:19] <FromDiscord> <Elegantbeef> Yes
[02:22:29] <FromDiscord> <evoalg> Thank you!
[02:24:04] <FromDiscord> <Elegantbeef> `template` `macro` and non closure `iterator` are expanded at the call site at compile time so you can do 0 cost abstractions there
[02:24:23] <FromDiscord> <Elegantbeef> inb4 "There are no 0 cost abstractions" gang shows up
[02:24:50] <FromDiscord> <tandy> is it possible to make nim bindings for a typescript project?
[02:25:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:25:42] <FromDiscord> <Elegantbeef> There is an (abandoned?) typescript to nim transpiler but nope you cannot just do TS \<-\> Nim since nim doesnt know about TS
[02:30:11] <FromDiscord> <logo> Once PMunch comes back up, I need to talk to him about keyboards lmao.
[02:32:05] <FromDiscord> <PMunch> Did someone say keyboards?
[02:32:58] <FromDiscord> <evoalg> So an iterator is good for low mem and probably some faster code too right? .. but other than that, everything an iterator can do a proc can do??
[02:33:24] <FromDiscord> <logo> In reply to @PMunch "Did someone say keyboards?": Mechanical keyboard nerd here!
[02:34:00] <FromDiscord> <logo> opens spreadsheet
[02:34:17] <FromDiscord> <logo>  https://media.discordapp.net/attachments/371759389889003532/908492359262679070/unknown.png
[02:34:34] <FromDiscord> <logo> Not too much rn
[02:34:40] <FromDiscord> <PMunch> Oh damn!
[02:34:55] <FromDiscord> <logo> Been in the hobby for like two years now?
[02:34:58] <FromDiscord> <tandy> https://github.com/mcclure/dts2nim
[02:35:00] <FromDiscord> <tandy> https://github.com/bung87/ts2nim
[02:35:04] <FromDiscord> <PMunch> Still way more than my single board 😋
[02:35:07] <FromDiscord> <tandy> i found these
[02:35:09] <FromDiscord> <logo> Ah we should move to #offtopic
[02:37:05] <FromDiscord> <tandy> nice↵(@logo)
[02:37:11] <FromDiscord> <tandy> have you guys seen the dactyl generator josh reve is building?
[02:37:12] <FromDiscord> <tandy> https://github.com/joshreve/dactyl-keyboard
[02:37:31] <FromDiscord> <tandy> hmm yes↵(@logo)
[02:37:42] <FromDiscord> <Elegantbeef> Using iterators over procs generally reduces the memory foot print and reduces allocations increasing performance
[02:38:10] <FromDiscord> <Elegantbeef> That doesnt hold true 100% but in cases you're slicing to iterate using Nim's built in `[]` slice proc you're going to get better performance from a proper iterator
[02:42:29] <FromDiscord> <evoalg> Thank you!
[02:45:21] <FromDiscord> <Elegantbeef> No problem, finally got my framebuffers to work properly!
[02:52:28] <FromDiscord> <demotomohiro> But inline iterator always inlining code in call site. Isn't that make your code larger than using proc and affect instruction cache?
[02:52:52] <FromDiscord> <Elegantbeef> Oh no larger code, whatever will we do!
[02:55:18] <FromDiscord> <Elegantbeef> Yes it makes the binary larger probably, but given that we're comparing `a[3..5]` duplicating a slice then iterating the children vs just iterating over the elements directly there is no issue
[02:56:31] <FromDiscord> <demotomohiro> I see
[03:01:40] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3EK3
[03:01:48] <FromDiscord> <impbox [ftsf]> i thought i'd try that block style syntax
[03:02:19] <FromDiscord> <Elegantbeef> Ah you're too good for  `import std/[os, strformat, strutils]` i see
[03:03:36] <FromDiscord> <Elegantbeef> You just need commas for that one since that's a single import statement
[03:03:51] <FromDiscord> <Elegantbeef> Oddly it doesnt support newline seperated ones
[03:04:46] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[03:11:46] *** Joins: rockcavera (~rc@192.12.114.204)
[03:11:46] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[03:11:46] *** Joins: rockcavera (~rc@user/rockcavera)
[03:11:47] <FromDiscord> <evoalg> In reply to @Elegantbeef "No problem, finally got": Well done!
[03:14:57] <FromDiscord> <tandy> im gna try use futhark to wrap this https://github.com/TeamAntumbra/libantumbra
[03:20:09] <FromDiscord> <impbox [ftsf]> so a C type has a null terminated array of chars `char szPname[123];` I want to convert this to a nim string, what's the recommended method?
[03:20:57] <FromDiscord> <impbox [ftsf]> using $ on it gives me  `[82, 111, 108, 97, 110, 100, 32, 68, 1...`
[03:21:40] <FromDiscord> <Elegantbeef> If you know the length make a new string of that length and copymem, if you dont know the length iterate over it adding each to the string
[03:21:41] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[03:22:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EK4
[03:22:28] <FromDiscord> <impbox [ftsf]> I know the size of the array, but it's null terminated so it will be shorter
[03:22:56] <FromDiscord> <impbox [ftsf]> i figured i could cast it to a cstring and then $ that, but can't figure out how
[03:23:25] <FromDiscord> <impbox [ftsf]> `Error: expression cannot be cast to cstring`
[03:23:25] <FromDiscord> <Elegantbeef> should just be `cast[cstring](yourCharStr[0].addr)`
[03:23:37] <FromDiscord> <impbox [ftsf]> `    result.add($cast[cstring](caps.szPname))` ahh i was doing this
[03:25:44] <FromDiscord> <Elegantbeef> Did the cast to cstring work?
[03:25:51] <FromDiscord> <impbox [ftsf]> hmm only gives me the first character
[03:26:43] <FromDiscord> <Elegantbeef> Wait is the a reason you dont just wrap it as a cstring?
[03:26:56] <FromDiscord> <impbox [ftsf]> i didn't write the wrapper
[03:27:08] <FromDiscord> <Elegantbeef> Isnt it for all intents and purposes a cstring
[03:27:10] <FromDiscord> <Elegantbeef> Ah
[03:27:26] <FromDiscord> <impbox [ftsf]> windows api shit
[03:27:33] <FromDiscord> <Elegantbeef> perhaps `$cast[ptr cstring](yourCharStr.addr)[]` though that seems odd
[03:28:44] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[03:28:49] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3EK5 mmm it works here
[03:28:53] <FromDiscord> <impbox [ftsf]> wonder what's different
[03:31:34] <FromDiscord> <impbox [ftsf]> oohh, WCHARs not chars
[03:31:57] <FromDiscord> <Elegantbeef> Ah yes Whiney Chars
[03:34:41] <FromDiscord> <impbox [ftsf]> ooh i created broken code
[03:34:57] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3EKa
[03:35:01] <FromDiscord> <impbox [ftsf]> `    var name: string = $(cast[wstring](caps.szPname[0].addr))`
[03:46:33] <FromDiscord> <Yardanico> wait what are you trying to do
[03:46:51] <FromDiscord> <leorize> that's a codegen bug for sure
[03:46:54] <FromDiscord> <Yardanico> convert a utf-16 string to utf-8?
[03:47:01] <FromDiscord> <leorize> can you open an issue for it?
[03:47:09] <FromDiscord> <impbox [ftsf]> i'm trying to turn an array[WCHAR] -> string
[03:47:27] <FromDiscord> <impbox [ftsf]> @leorize sure
[04:18:26] <FromDiscord> <federico3> any way to convert an integer to pairs of hex bytes with toHex?
[04:23:12] <FromDiscord> <RattleyCooper> In reply to @federico3 "any way to convert": Like take a slice of bits?
[04:23:41] <FromDiscord> <RattleyCooper> or just get multiple hex values?
[04:25:22] <FromDiscord> <RattleyCooper> What is your input and what is your expected output?
[04:26:32] <FromDiscord> <Daniel M. Jaén> Any packets for HTTP requests?
[04:27:23] <FromDiscord> <Elegantbeef> You mean packages?
[04:27:23] <FromDiscord> <Yardanico> In reply to @Daniel M. Jaén "Any packets for HTTP": httpclient in stdlib
[04:27:54] <FromDiscord> <Daniel M. Jaén> In reply to @Elegantbeef "You mean packages?": Yes
[04:27:57] <FromDiscord> <Daniel M. Jaén> In reply to @Yardanico "httpclient in stdlib": ok
[04:32:26] <FromDiscord> <Elegantbeef> [Zoom](https://matrix.to/#/@Zoom:matrix.org)\: got any more ideas for iterators?
[04:37:29] <FromDiscord> <evoalg> Elegantbeef ... day15 of the 2020 AOC is a good one in that part1 is easy, but in part2 it was running exactly the same thing but to many more loops, and it ran & ran and wouldn't finish.↵(I left it running overnight and it still didn't finish).↵I looked up reddit for help and turns out the correct technique for part2 is to make the part1 code more efficient! ... eg by using a cache (memoization).↵I did a cache with tables and it f
[04:37:54] <FromDiscord> <Elegantbeef> https://github.com/beef331/kashae 😛
[04:38:39] <FromDiscord> <evoalg> oh!
[04:44:15] <FromDiscord> <evoalg> "when you want to clear the cache based off some conditional like if the sun is in your eyes" <-- lol
[04:51:54] <FromDiscord> <Elegantbeef> Well there we go slicerator is now the proper name and it now has `forMitems` 😀
[04:54:24] <FromDiscord> <Elegantbeef> I do wonder if i did that day
[04:55:29] <FromDiscord> <evoalg> Nice!
[04:55:40] <FromDiscord> <Elegantbeef> Hmm i did it but only have the first solution stored
[04:56:21] <FromDiscord> <evoalg> oh day15 - oh ok!
[04:56:44] <FromDiscord> <evoalg> part2 is exactly that same but more loops
[04:57:21] <FromDiscord> <evoalg> loop to 30000000 instead of 2020 😉
[05:00:24] <FromDiscord> <Elegantbeef> Ah yea my first pass was fine enough performance wise
[05:01:12] <FromDiscord> <Elegantbeef> Explains why I didnt have the second solution
[05:01:56] <FromDiscord> <evoalg> hehe I wouldn't imagine anything less from you ... you just don't do quick & dirty 😉
[05:02:04] <FromDiscord> <Elegantbeef> Though i designed it oddly given i didnt know the next step, and generally they're compounded https://play.nim-lang.org/#ix=3EKm
[05:02:09] <FromDiscord> <Elegantbeef> I mean it's pretty messy
[05:04:32] <FromDiscord> <evoalg> ahhh so kashae wouldn't help because you're using a table which is like a lookup cache anyway?
[05:05:04] <FromDiscord> <Elegantbeef> Yea i designed it in such a way that i already used a cache
[05:05:22] <FromDiscord> <Elegantbeef> Did kashae make your solution cleaner?
[05:05:55] <FromDiscord> <evoalg> I'm still playing with it ... I'm slow 😉 ... I'll let you know
[05:14:13] <FromDiscord> <Elegantbeef> What the readme didnt explain it?! But all that well written comedy
[05:14:55] <FromDiscord> <evoalg> Yep it was very good ... I'm just slow hehe 🙂
[06:03:17] <FromDiscord> <evoalg> In reply to @Elegantbeef "Did kashae make your": I tried it on a previous version but it didn't seem to do anything and I don't know what I'm doing. This my manual cache (non-kashae) version (that takes less than 4 secs to run): https://play.nim-lang.org/#ix=3EKv ... but I dunno where to start to make it use kashae (other than me actually using a proc someone for a change). Still, I'm actually proud of my code (even though I can't fold i
[06:05:32] <FromDiscord> <Elegantbeef> Yea i dont think you can use it here, i was assuming you had a recursive call causing the slow down
[06:06:02] <FromDiscord> <Elegantbeef> I suggest kashae before seeing the problem again
[06:06:47] <FromDiscord> <Elegantbeef> suggested\
[06:06:53] <FromDiscord> <evoalg> I'm very glad you suggested kashae ... and I have done recursion in some of my other AOC solutions!
[06:07:56] <FromDiscord> <evoalg> I guess I lead you down the wrong path when I mentioned memoization - sorry!
[06:08:07] <FromDiscord> <Elegantbeef> Lol it's fine 😀
[06:08:31] <FromDiscord> <evoalg> ... but now I know where to get me some good memoization
[06:09:47] <FromDiscord> <Elegantbeef> I dont know if it's good...
[06:10:29] <FromDiscord> <evoalg> from my perspective, it's magic
[06:11:41] <FromDiscord> <Elegantbeef> Yea macros give a lot of convoluted power
[06:12:07] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:12:10] <FromDiscord> <evoalg> How are the dogs?
[06:12:53] <FromDiscord> <Elegantbeef> The one that got it's ear bit is normal, the other one is very skiddish/cautious
[06:13:15] <FromDiscord> <Elegantbeef> I think the one with the bit ear actually likes his cone a bit since it lets him nudge people more 😀
[06:13:28] <FromDiscord> <evoalg> lol
[06:14:21] <FromDiscord> <evoalg> I bet they're glad to be at home with you
[06:17:44] <FromDiscord> <Elegantbeef> Not exactly since I didnt take the one for a walk, he got really nudgey since he really wanted to go
[06:19:44] <FromDiscord> <Rika> Good morning
[06:20:33] <FromDiscord> <evoalg> morning Rika
[06:20:38] <FromDiscord> <Elegantbeef> Yellow rika
[06:20:55] <FromDiscord> <Rika> Oh god it’s you
[06:22:02] <FromDiscord> <Rika> Damn man why does everyone make 15 billion libraries
[06:22:18] <FromDiscord> <Elegantbeef> Who does?
[06:23:11] <FromDiscord> <Rika> You
[06:23:32] <FromDiscord> <Elegantbeef> I spose i have a few
[06:26:57] <FromDiscord> <Elegantbeef> But lets be honest no one uses any of them
[06:27:26] <FromDiscord> <Elegantbeef> Though i guess i know i have atleast 1 user of slicerator
[06:27:34] <FromDiscord> <Rika> Damn bro if no one uses yours who the fuck uses mine
[06:28:39] <FromDiscord> <Elegantbeef> Well no one ever makes issues on mine so i can only think no one uses them
[06:28:54] <FromDiscord> <Elegantbeef> I suppose the alternative is i make such flawless librarie
[06:33:15] <FromDiscord> <Rika> No way
[06:59:38] <FromDiscord> <dangbinghoo> sent a long message, see http://ix.io/3EKN
[07:00:42] <FromDiscord> <dangbinghoo> choosenim 0.8.2 won't work on Termux(android/arm64)
[07:00:46] <FromDiscord> <dangbinghoo> ~ $ choosenim --debug devel↵     Debug: Reporting to analytics...↵SIGSEGV: Illegal storage access. (Attempt to read from nil?)
[07:00:55] <FromDiscord> <Yardanico> can you compile it in debug mode and see what's the error?
[07:01:06] <FromDiscord> <Yardanico> you can install nim in termux itself with `pkg install nim`
[07:01:28] <FromDiscord> <dangbinghoo> I installed nim, nimble from Termux pkg
[07:02:38] <FromDiscord> <dangbinghoo> and then nimble install choosenim
[07:02:47] <FromDiscord> <Yardanico> what for?
[07:03:08] <FromDiscord> <Yardanico> i mean, if you want to get the devel nim and choosenim doesn't work, you can compile it manually
[07:03:12] <FromDiscord> <dangbinghoo> nimble sucessfully installed choosenim, but then running choosenim to update nim failed
[07:03:44] <FromDiscord> <Yardanico> well, also since you have nim installed from the pkg choosenim won't be able to update it, it'll install another copy
[07:04:31] <FromDiscord> <dangbinghoo> we I build choosenim using nimble when installing? I means pass debug flag to nimble?
[07:04:46] <FromDiscord> <dangbinghoo> (edit) "we" => "can"
[07:05:28] <FromDiscord> <dangbinghoo> (edit) "can I build choosenim using nimble when installing? I means pass debug flag to nimble? ... " 03added "and then nimble will build the debug version of choosenim"
[07:06:15] <FromDiscord> <Yardanico> I don't think you can do that with `nimble install`, you need to clone the choosenim repo and build in debug mode yourself
[07:06:22] <FromDiscord> <dangbinghoo> ok
[07:24:13] <FromDiscord> <dangbinghoo> sent a long message, see http://ix.io/3EKO
[07:24:45] <FromDiscord> <dangbinghoo> sent a long message, see http://ix.io/3EKP
[07:24:47] <FromDiscord> <Yardanico> pls don't paste next time like that :)
[07:25:10] <FromDiscord> <Yardanico> but basically, the issue seems like it can't verify the certificate, does your ISP replace SSL certificates or something?
[07:25:18] <FromDiscord> <dangbinghoo> 😀  ok, sorry
[07:26:05] <FromDiscord> <Yardanico> as it says, it tries to access `https://api.github.com/repos/nim-lang/nightlies/releases` but that fails because it can't verify the correctness of the SSL certificate
[07:26:08] <FromDiscord> <Yardanico> ah, right, you can try one more thing
[07:26:14] <FromDiscord> <dangbinghoo> im using proxy in china
[07:26:26] <FromDiscord> <Yardanico> try to see if you have `ca-certificates` package installed
[07:27:40] <FromDiscord> <Yardanico> In reply to @dangbinghoo "im using proxy in": yeah, if a proxy changes SSL certificates the only way to fix this issue is to compile choosenim with `-d:nimDisableCertificateValidation`, but just be aware that this is potentially unsafe and anyone can MITM you
[07:28:00] <FromDiscord> <dangbinghoo> Reading state information... Done↵ca-certificates is already the newest version (1:2021-10-26-0).↵0 upgraded, 0 newly installed,
[07:28:19] <FromDiscord> <Yardanico> then the only way is to compile choosenim with the flag I've shown above
[07:28:42] <FromDiscord> <dangbinghoo> ok , i will try
[07:34:22] <FromDiscord> <evoalg> if I have two ints say 2 and 5, and I want to see if 3 is in the range 2..5 then I can do `if 3 in {2..5}`  <-- that's the way should do it, right?
[07:34:49] <FromDiscord> <Rika> No need for the {} afaik
[07:34:54] <FromDiscord> <Yardanico> yeah, as @Rika said
[07:35:01] <FromDiscord> <Yardanico> {} is the syntax for sets, you don't need them here
[07:35:03] <FromDiscord> <Rika> !eval echo 3 in 2..5
[07:35:07] <NimBot> true
[07:35:22] <FromDiscord> <evoalg> oh! thank you!
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:25] <FromDiscord> <Yardanico> basically `..` https://nim-lang.org/docs/system.html#..%2CsinkT%2CsinkU creates a HSlice, and then `contains` is called https://nim-lang.org/docs/system.html#contains%2CHSlice%5BU%2CV%5D%2CW
[07:36:30] <FromDiscord> <Rika> Technically more efficient as well
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:35] <FromDiscord> <Yardanico> that too
[07:41:05] <FromDiscord> <Elegantbeef> `..` is a fun operator depending on context 😀
[07:41:13] <FromDiscord> <evoalg> it creates the seq / array that takes up memory right? It doesn't do it by iterator?
[07:41:41] <FromDiscord> <Elegantbeef> What do you mean?
[07:41:49] <FromDiscord> <Yardanico> @evoalg sets are not seqs/arrays
[07:41:55] <FromDiscord> <Yardanico> they are value types, so it's not really that bad
[07:42:29] <FromDiscord> <Yardanico> and if you mean `..`, it's treated differently if it's inside a set
[07:42:35] <FromDiscord> <evoalg> the `..` I mean, it creates something that then contains calls?
[07:43:20] <FromDiscord> <Elegantbeef> The compiler handles it and knows what it means
[07:43:49] <FromDiscord> <Yardanico> yeah, @evoalg `..` in sets is treated by the compiler and it can only have constant values anyway, so it's doesn't do any "calls" at runtime
[07:43:49] <FromDiscord> <evoalg> so if I do `if 3000 in 1..300000000` then does it create an openarray and then loops to check?
[07:43:55] <FromDiscord> <Yardanico> no
[07:44:06] <FromDiscord> <Elegantbeef> `..` makes a slice which is a `a` and `b` value
[07:44:27] <FromDiscord> <Yardanico> this is without sets, so `..` just creates an HSlice and `in` checks if `3000` is >= 1 and <= 300000000
[07:44:32] <FromDiscord> <Yardanico> just don't worry about it :)
[07:44:33] <FromDiscord> <Elegantbeef> `3000 in 1..30000000` is shorthand for `3000 >= 1 and 3000 <= 30000000`
[07:44:40] <FromDiscord> <evoalg> oh nice!
[07:44:48] <FromDiscord> <dangbinghoo> In reply to @Yardanico "yeah, if a proxy": thank you, this works!
[07:44:59] <FromDiscord> <evoalg> thank you all for your help!
[07:45:23] <FromDiscord> <Elegantbeef> In most cases `..` creates a slice which just an object with `a` and `b` fields
[07:45:38] <FromDiscord> <Elegantbeef> There are some cases that's not true
[07:46:06] <FromDiscord> <Elegantbeef> `var a: 2..5` for instance is just an integer that can only have `2, 3, 4, 5` as values else it errors
[07:46:33] <FromDiscord> <Elegantbeef> But that's a shorthand for `range[2..5]`
[07:46:53] <FromDiscord> <evoalg> ohhhh
[07:46:58] <FromDiscord> <Yardanico> yeah, it's in https://github.com/nim-lang/Nim/wiki/Lesser-known-Nim-features (feel free to add more stuff here btw)
[07:47:04] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#types-subrange-types if you ever really want to fall asleep
[07:47:11] <FromDiscord> <Yardanico> XD
[07:47:19] <FromDiscord> <evoalg> hehe
[07:47:47] <FromDiscord> <Elegantbeef> I personally really love subrange types but system lacking a `contains` procedure for them makes me sad
[07:48:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EKT
[07:48:54] <FromDiscord> <evoalg> sets are different you say, so does `1..3000000` fill out the set with values?
[07:49:18] <FromDiscord> <Elegantbeef> Yes but Nim's bitsets are liimited to 65k values
[07:49:23] <FromDiscord> <Yardanico> exactly, so it won't compile
[07:49:32] <FromDiscord> <evoalg> ahhhhh ok
[07:49:39] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html#types-set-type
[07:49:43] <FromDiscord> <Elegantbeef> So `yourSet.high - yourSet.low <= uint16.high`
[07:50:00] <FromDiscord> <evoalg> ok thanks ... I'll do some reading
[07:50:23] <FromDiscord> <Elegantbeef> If i keep mentioning stuff you'll have to read more 😀
[07:50:58] <FromDiscord> <Elegantbeef> Inside a set constructor`2..5` is just shorthand for `{2, 3, 4, 5}`
[07:51:29] <FromDiscord> <Elegantbeef> Nim's sets are very nice and i wish more languages adopted wirth style sets
[07:53:17] <FromDiscord> <Elegantbeef> Dont you dare tell me to manually bitwise or values together!
[07:54:09] <FromDiscord> <Yardanico> btw @evoalg, sadly discord reactions don't propagate to matrix :)
[07:54:29] <FromDiscord> <Yardanico> so beef won't see your reactions on his messages
[07:54:45] <FromDiscord> <Elegantbeef> It's ok i know evo thinks they're top quality
[07:55:41] <FromDiscord> <evoalg> oh all this time my love hearts were going unnoticed
[08:05:07] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[08:07:17] <FromDiscord> <Rika> Bitsets are nice
[08:07:46] <FromDiscord> <Rika> Especially with enums
[08:13:51] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (*.net *.split)
[08:13:51] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[08:18:25] *** Joins: rb (~augh@theguntretort.com)
[08:51:23] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:13:07] <FromDiscord> <dangbinghoo> hi choosenim is just for install/switching x86 arch. ?
[09:15:04] <FromDiscord> <dangbinghoo> I compiled a arm64 choosenim in termux for aarch64, and it's successfully installing nim 1.6 or current devel 1.7.1, only it's just grab tarball and extracted to home path.
[09:16:04] <FromDiscord> <Elegantbeef> That's what it does
[09:16:05] <FromDiscord> <dangbinghoo> and using `file` to check the nim executable shows `/data/data/com.termux/files/home/.choosenim/toolchains/nim-1.6.0/bin/nim: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, with debug_info, not stripped`
[09:16:24] <FromDiscord> <Elegantbeef> Unless you select a specific commit it'll get a nightly for devel, or the given version
[09:16:49] <FromDiscord> <dangbinghoo> ahh, I think it would grab the source and build one for current target
[09:21:59] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 264 seconds)
[09:34:26] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[10:06:36] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[10:16:48] <FromDiscord> <leorize> @dangbinghoo\: nightlies has arm binaries\: https://github.com/nim-lang/nightlies/releases/tag/latest-devel
[10:17:29] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Quit: Leaving)
[10:17:37] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[10:51:04] <FromDiscord> <dangbinghoo> In reply to @leorize "<@737477820288204881>\: nightlies has arm": thx
[11:07:05] <NimEventer> New thread by Elcritch: Treat memory allocation as effect?, see https://forum.nim-lang.org/t/8613
[11:36:11] *** Joins: PMunch (~PMunch@user/pmunch)
[11:40:36] *** Joins: pro (~pro@user/pro)
[11:52:09] <FromDiscord> <dangbinghoo> using `choosenim devel --latest`  can build the latest nim for termux
[12:35:08] <FromDiscord> <brentp> I send a `pointer` to a c function that allocates memory. can I use `dealloc` to free that or must I use `free` ?
[12:35:58] <FromDiscord> <Rika> Use neither; figure out which free function (from the same library) to use
[12:36:51] <FromDiscord> <brentp> it's a `void `, not a struct with a destroy-like function
[12:39:14] <PMunch> You should use free
[12:39:28] <PMunch> Dealloc is intended for use with one of Nims alloc procedures
[12:39:50] <FromDiscord> <brentp> In reply to @PMunch "You should use free": cheers
[12:40:14] <PMunch> The difference is that the default Nim GC allocates a pool of memory I believe, and the allocs end up in that pool afaik, so freeing them needs a bit of special logic.
[12:48:19] <FromDiscord> <Rika> You do not know what allocator the C function used is why I said not to use either
[12:48:37] <FromDiscord> <Rika> If this is a library, usually there is an accompanying free function
[12:49:00] <FromDiscord> <Rika> If this is a C standard library function then okay free will work
[13:17:17] <FromDiscord> <tandy> how do i update nimble?
[13:17:32] <FromDiscord> <tandy> choosenim update devel didnt seem to do it
[13:18:58] <FromDiscord> <Rika> 0.14 is not stable
[13:19:09] <FromDiscord> <tandy> hmm
[13:19:19] <FromDiscord> <tandy> i want semver deps \:)
[13:28:29] <FromDiscord> <Rika> Nimble install nimble
[13:29:18] <FromDiscord> <Rika> You will have to clear your cache and package folder, and also all “develop”ed packages will not be registered properly afaik
[13:31:29] <FromDiscord> <tandy> hmm il wait  i forgot about that mess lol
[13:32:23] <FromDiscord> <Rika> Maybe look into the other package managers Nim has
[13:43:46] <FromDiscord> <Solitude> or just dont update nimble
[13:56:34] <FromDiscord> <Rika> Yeah honestly I don’t think I’ll ever update nimble unless it doesn’t break anything in my packages folder
[13:56:40] <FromDiscord> <Rika> Or it migrates smoothly
[14:01:23] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:31:13] <FromDiscord> <Zoom> sent a long message, see http://ix.io/3ELX
[14:33:23] <PMunch> Yay.. I'm getting GC-crashes in my multi-threaded, async, dynamic library embedded code..
[14:34:02] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[14:46:56] <supakeen> surprised pikachu
[14:47:27] <PMunch> It normally works pretty well :P
[14:47:31] <PMunch> Surprisingly enough
[15:02:13] <FromDiscord> <evoalg> In reply to @Zoom "Not exactly. The main": Thank you!
[15:33:39] <NimEventer> New thread by Lpirl: How to hide FFI details from implementations of a (C FFI) interface?, see https://forum.nim-lang.org/t/8614
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:46] <FromDiscord> <brentp> with default GC and `-d:useGcAssert`, I get: `[GCASSERT] markS: foreign heap root detected B!Traceback (most recent call last)` (and lot's of problems with variables that are related to this).↵but when changing to --gc:orc, the problems go away and there's no error from GCASSERT. Does that check still work with --gc:orc?
[15:40:35] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[15:45:46] <FromDiscord> <dom96> not sure but you can check by grepping for that define in Nim source code
[15:58:38] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[16:09:40] <FromDiscord> <brentp> In reply to @dom96 "not sure but you": well, it seems it was onto something. i was wrapping a C struct and my nim definition was not quite right so size was wrong.
[16:09:41] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[16:15:37] <PMunch> @brentp, may I interest you in Futhark?
[16:15:56] <PMunch> Automatic wrapping of C code to avoid exactly that kind of situation
[16:17:17] <FromDiscord> <brentp> https://futhark-lang.org/docs.html looks pretty cool.
[16:19:40] <PMunch> Not that Futhark..
[16:19:45] <NimEventer> New thread by V3ss0n: Readability problems, see https://forum.nim-lang.org/t/8615
[16:19:54] <PMunch> This Futhark: https://github.com/PMunch/futhark
[16:21:35] <FromDiscord> <brentp> ah, that's better. indeed, I'll use that next time.
[16:22:14] *** Quits: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Client limit exceeded: 20000)
[16:22:41] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[16:33:07] <PMunch> I recently switched to it for a work project, from a manual wrapping I made quite a while ago. Looking at the diff between the two wrappings it's a wonder that my hand-wrapped implementation didn't crash left, right, and centre.. It had apparently degraded as the versions of the underlying library moved on, and I only noticed when it crashed. Created Futhark to avoid that happening again, and it's worked flawlessly for pretty much every project I've thrown it 
[16:33:07] <PMunch> at :)
[16:57:05] <FromDiscord> <brentp> In reply to @PMunch "I recently switched to": and does it handle C structs with bitfields?
[17:00:50] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[17:08:16] <FromDiscord> <logo> In reply to @brentp "https://futhark-lang.org/docs.html looks pretty coo": That is kinda cool tho
[17:18:52] <PMunch> @brentp, ah bitfields is one of the few things it doesn't yet support
[17:19:03] <PMunch> Should be easy enough to add though
[17:19:45] <PMunch> And it's built in such a way that you can override specific types without manual interference
[17:26:05] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[17:26:08] <FromDiscord> <brentp> @PMunch , I'll keep an eye on it.
[17:28:43] <FromDiscord> <hmmm> yo bois how do I prepend stuff to a seq?
[17:29:35] <FromDiscord> <hmmm> from @[1,2,3] to @[0,1,2,3]
[17:29:55] <FromDiscord> <hmmm> I mean not manually but with a some comfy one world thingy from library
[17:30:19] <FromDiscord> <hmmm> word
[17:32:15] <FromDiscord> <Rika> `0 & @[1,2,3]`?
[17:32:22] <FromDiscord> <Rika> no its not fast
[17:32:24] <FromDiscord> <Rika> no its not efficient
[17:32:47] <FromDiscord> <Rika> do you want it out of place or inplace? the one i sent is out of place (returns new value)
[17:32:59] <FromDiscord> <Rika> inplace is "modifies original variable"
[17:33:07] <FromDiscord> <hmmm> apparently there is a comfy thingy.insert(0,0)
[17:33:13] <FromDiscord> <Rika> naturally inplace does less memory allocation but it will still be slow
[17:33:17] <FromDiscord> <Rika> yes that is inplace
[17:33:21] <FromDiscord> <Rika> still slow tho
[17:33:43] <FromDiscord> <hmmm> hmm slow is fine
[17:33:53] <FromDiscord> <Rika> ok /hm+/
[17:34:03] <FromDiscord> <hmmm> 😃
[17:36:16] <FromDiscord> <hmmm> what would be the fast way just for cultural enrichment? 🤔
[17:36:30] *** Joins: arkurious (~arkurious@user/arkurious)
[17:36:59] <PMunch> There really isn't a fast way to do it
[17:37:18] <PMunch> It needs to reallocate the entire seq and copy the memory one element over
[17:37:22] <FromDiscord> <Rika> no
[17:37:26] <FromDiscord> <Rika> the fast way is to not do it
[17:37:42] <PMunch> Or maybe not reallocate if it has leftover capacity in the seq, but still copy everything one element over
[17:37:45] <FromDiscord> <Rika> or use a type that has O(1) prepend
[17:37:53] <FromDiscord> <Rika> sorry
[17:37:57] <FromDiscord> <Rika> constant-time prepend
[17:38:07] <PMunch> Or, if you're just prepending, turn the seq around
[17:38:07] <FromDiscord> <Rika> like idk a linked list perhaps?
[17:38:12] <FromDiscord> <Rika> of course theres an issue there
[17:38:18] <FromDiscord> <Rika> (edit) "an issue" => "a few other issues"
[17:39:06] *** Joins: rockcavera (~rc@192.12.114.204)
[17:39:07] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[17:39:07] *** Joins: rockcavera (~rc@user/rockcavera)
[17:40:29] <FromDiscord> <hmmm> i see, i didn't think about turning it around, don't know if it would work in my case tho
[17:40:50] <PMunch> Why wouldn't it work?
[17:41:39] <FromDiscord> <hmmm> Hmm I'm still wrapping my small head around it, whats the command to flip it around so I can try it in the wild
[17:42:04] <FromDiscord> <Rika> you could theoretically make a datatype "doublesided seq" that acts like a regular seq but puts the first element in the middle of the buffer instead of the start (this way you can expand both ways) but there are many downsides to doing this
[17:42:08] <FromDiscord> <Rika> reversed
[17:42:11] <FromDiscord> <Rika> (edit) "reversed" => "`reversed`"
[17:42:18] <FromDiscord> <Rika> or `reverse` (inplace
[17:45:16] <PMunch> @hmmm, no simple way of doing it. You need to do it yourself
[17:47:27] <PMunch> I guess you could make a distinct type though
[17:47:36] <FromDiscord> <konsumlamm> or just use a deque (from `std/deques`)
[17:47:49] <FromDiscord> <konsumlamm> if you need append on both sides
[17:53:54] <FromDiscord> <Rika> oh yeah thats true
[17:54:01] <FromDiscord> <Rika> i forgot that existed
[17:55:08] <FromDiscord> <hmmm> I mean logically speaking if I flip it around and append and reflip back is not the same amount of work or greater than copying each element over?
[17:59:31] <PMunch> Well of course
[18:00:10] <PMunch> I mean rewriting your entire program logic so that you always iterate over the sequence back to front and then you can add new elements to the back instead of prepending
[18:02:10] <FromDiscord> <hmmm> oh
[18:02:21] <FromDiscord> <hmmm> ooooh
[18:02:43] <PMunch> That would make appending expensive and prepending cheap
[18:02:47] <FromDiscord> <hmmm> yea but it wouldnt work I still need to append on the other side
[18:03:07] <PMunch> Ah right, then you're probably better off with a deque or a linked list
[18:03:21] <FromDiscord> <hmmm> I need to append (a lot) and prepend very rarely
[18:03:37] <PMunch> Define "a lot"
[18:03:56] <PMunch> If you sequences are fairly short you probably don't have to worry about the penalty of the insert anyways
[18:03:58] <FromDiscord> <hmmm> for loops
[18:04:48] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[18:05:03] <FromDiscord> <hmmm> yeye I've already used insert, it was just curiosity
[18:05:23] <FromDiscord> <hmmm> the flipping the entire program around was very instructive lok
[18:05:26] <FromDiscord> <hmmm> lol
[18:06:05] <FromDiscord> <Rika> just move to australia and program there
[18:06:09] <FromDiscord> <Rika> easy now your program is flipped
[18:06:14] <FromDiscord> <hmmm> I might move to japan
[18:06:38] <FromDiscord> <hmmm> a) very kind people b) good food c) modern cities that are clean
[18:06:53] <FromDiscord> <Rika> oh youre serious
[18:06:56] <PMunch> Haha :P
[18:07:01] <FromDiscord> <Rika> i was thinking why you mentioned that
[18:07:05] <FromDiscord> <hmmm> the problem is the language, your runes are worse than c++
[18:07:41] <FromDiscord> <Rika> いやいや、わかりやすいよ
[18:07:45] <FromDiscord> <hmmm> jesus
[18:07:52] <PMunch> You could always move to Norway, doesn't really have any of the benefits you listed, but it's a pretty nice place
[18:08:08] <FromDiscord> <Rika> im joking real japanese people dont scold me my japanese not good me N4
[18:09:06] <PMunch> Well, depends on how you look at it. Most people are nice, but not very social. Our native food is pretty much all just about survival, so we mostly eat other peoples food, and are pretty good at it. Our cities aren't modern and clean though, but they're also not jam-packed with people *shrugs*
[18:09:29] <FromDiscord> <Rika> i live in rural japan
[18:09:31] <FromDiscord> <Rika> its pretty uh
[18:09:33] <FromDiscord> <Rika> empty
[18:09:35] <FromDiscord> <Rika> here
[18:09:43] <FromDiscord> <hmmm> dude you forgot it's cold as hell there
[18:09:47] <FromDiscord> <Rika> people are not very social in japan as well
[18:10:09] <FromDiscord> <Rika> its not as cold here but you need to be aware that it gets hot when its summer
[18:10:27] <FromDiscord> <Rika> if you're not used to tropics heat then you might not survive
[18:10:50] <FromDiscord> <hmmm> nono when I said cold I was talking norway
[18:11:01] <FromDiscord> <Rika> i know
[18:11:05] <FromDiscord> <Rika> read what i said here
[18:11:09] <FromDiscord> <Rika> again
[18:11:09] <FromDiscord> <hmmm> japan climate is perfect and you have sakura on top and it makes it purrfect
[18:11:11] <FromDiscord> <Rika> why did i say here
[18:11:27] <FromDiscord> <Rika> `its not as cold here` -> not as cold here compared to norway
[18:11:49] <FromDiscord> <hmmm> dude did you just flip around your own sentence?
[18:11:50] <FromDiscord> <Rika> In reply to @hmmm "japan climate is perfect": really? you sure? you're fine with 35~+ C summers?
[18:11:57] <FromDiscord> <hmmm> you used reverse or reversed? :3
[18:12:40] <PMunch> It's not that cold here
[18:12:49] <FromDiscord> <Rika> says the native
[18:12:59] <PMunch> I mean today it's even positive degrees out
[18:13:12] <FromDiscord> <hmmm> oh and aside from language japan is also expensive like hell, that's another thing to consider for my retirement plans
[18:13:20] <FromDiscord> <Rika> well
[18:13:20] <FromDiscord> <Rika> uh
[18:13:21] <FromDiscord> <Rika> yeah
[18:13:30] <PMunch> Well.. Can't really compete there.. 
[18:13:39] <PMunch> Norway is one of the most expensive places to live
[18:13:45] <FromDiscord> <Rika> lol
[18:13:46] <FromDiscord> <hmmm> really?
[18:13:49] <PMunch> Mhm
[18:14:22] <FromDiscord> <hmmm> maybe because you are like the arabs of europe, sell a lot of gas and everyone is rich
[18:14:30] <PMunch> Some things more than others of course
[18:14:52] <PMunch> Alcohol is super expensive. But in comparison to our salaries electronics is pretty cheap
[18:22:04] <PMunch> Is there a way to make a dirty proc? Ie. a procedure that acts like a template in that it can access outside symbols, but which just gets rewritten into a procedure call instead of duplicating the code?
[18:22:14] <FromDiscord> <dom96> nope
[18:22:18] <PMunch> More out of curiosity than anything
[18:22:21] <PMunch> Aha
[18:25:49] *** Parts: federico3_ (~quassel@debian/federico) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:28:09] <FromDiscord> <retkid> didn't know Rika was japanese
[18:28:12] <FromDiscord> <retkid> anyway
[18:28:27] <FromDiscord> <retkid> just me or htmlparser and xmlnodes pretty lightweight?
[18:28:34] <FromDiscord> <retkid> I want to search by classes and containers
[18:35:40] <FromDiscord> <Rika> i am not
[18:36:54] <FromDiscord> <Recruit_main707> you were from Filipinas werent you?
[18:38:45] <FromDiscord> <Rika> yes
[18:40:32] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[18:41:41] *** Joins: xet7 (~xet7@user/xet7)
[18:44:14] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[19:14:54] *** Joins: tiorock (~rc@192.12.114.204)
[19:14:55] *** Quits: tiorock (~rc@192.12.114.204) (Changing host)
[19:14:55] *** Joins: tiorock (~rc@user/rockcavera)
[19:14:55] *** rockcavera is now known as Guest9828
[19:14:55] *** Quits: Guest9828 (~rc@user/rockcavera) (Killed (calcium.libera.chat (Nickname regained by services)))
[19:14:55] *** tiorock is now known as rockcavera
[19:26:44] <FromDiscord> <hmmm> munchie should I roll my sublimetext with the old nimline or use it combined with your nimlsp?
[19:27:33] <FromDiscord> <hmmm> do not try to sell me vscode I'm not buying 🧐
[20:09:50] <FromDiscord> <Rika> Vscode
[20:09:54] <FromDiscord> <Rika> Do it or suffer
[20:44:17] <FromDiscord> <treeform> Does any one know how to select {} vs [] using polymorphism?  https://gist.github.com/treeform/1f652bbaa55623c2c23bcc12f7d94655
[20:44:51] <FromDiscord> <treeform> how do I grab the curly array?
[20:48:03] <FromDiscord> <treeform> hmm https://nim-lang.org/docs/manual.html#statements-and-expressions-table-constructor
[20:49:27] <FromDiscord> <konsumlamm> yeah, it's just sugar for arrays of tuples, they're not separate types
[20:49:52] <FromDiscord> <konsumlamm> ig you could make a macro that parses the input
[20:54:43] <FromDiscord> <treeform> can I do that with generics?
[20:55:14] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3ENJ
[20:58:25] <FromDiscord> <konsumlamm> how would you separate `[(1, 2), (3, 4)]` and `{1: 2, 3: 4}`? they're exactly the same, except for syntax
[20:58:26] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3ENK
[20:58:34] <FromDiscord> <treeform> (edit) "https://play.nim-lang.org/#ix=3ENK" => "https://play.nim-lang.org/#ix=3ENL"
[20:58:44] <FromDiscord> <treeform> I don't need to separate that
[20:58:46] <FromDiscord> <treeform> only when keys are strings
[20:59:05] <FromDiscord> <treeform> this is fine to be the same: [("1", 2), ("3", 4)] and {"1": 2, "3": 4}
[21:00:05] <FromDiscord> <geekrelief> In reply to @treeform "can I do that": https://play.nim-lang.org/#ix=3ENM
[21:00:07] <FromDiscord> <konsumlamm> well, i'd report an issue for the compiler crash first of all
[21:00:08] <FromDiscord> <geekrelief> does that work for you?
[21:01:24] <FromDiscord> <treeform> yes it does! Thank you.
[21:01:32] <FromDiscord> <konsumlamm> something like `T: not tuple` (or something more specific) should also work
[21:03:45] <FromDiscord> <treeform> @geekrelief I ended up going with: https://play.nim-lang.org/#ix=3ENO
[21:03:52] <FromDiscord> <treeform> for some reason the type t makes it work 🙂
[21:03:58] <FromDiscord> <geekrelief> yup
[21:04:10] <FromDiscord> <geekrelief> I couldn't get it to work without definying type t
[21:04:16] <FromDiscord> <geekrelief> (edit) "definying" => "defining"
[21:04:48] <FromDiscord> <geekrelief> I've run into something like this before with specifying complex types in a param list
[21:05:48] <FromDiscord> <konsumlamm> yeah, it's called a compiler bug
[21:10:30] <FromDiscord> <dom96> Anybody have any fun plans for this weekend? 🙂
[21:10:52] <FromDiscord> <Rika> fun as in
[21:11:33] <FromDiscord> <treeform> In reply to @dom96 "Anybody have any fun": I am flying to San Francisco
[21:12:01] <FromDiscord> <dom96> In reply to @Rika "fun as in": dunno, whatever you consider fun I guess
[21:12:23] <FromDiscord> <dom96> In reply to @treeform "I am flying to": nice, company conference?
[21:12:27] <FromDiscord> <dom96> (edit) "conference?" => "conference/meetup?"
[21:12:37] <FromDiscord> <treeform> both work and pleasure
[21:12:39] <FromDiscord> <Recruit_main707> In reply to @dom96 "Anybody have any fun": i finished my exams so my plans are, whatch f1, code if i feel like, nothingness
[21:12:47] <FromDiscord> <treeform> but weekend is all mine
[21:12:54] <FromDiscord> <Rika> looking into music production in my case
[21:13:00] <FromDiscord> <Rika> gotta boot into windows for that though
[21:13:07] <FromDiscord> <Rika> got some vsts that i cant run on linux
[21:13:42] <FromDiscord> <dom96> In reply to @Recruit_main707 "i finished my exams": Nice, hope they went well! F1 sounds fun, I keep wanting to watch it but don't want to pay Sky for the privilege
[21:14:21] <FromDiscord> <dom96> In reply to @Rika "looking into music production": got a soundcloud you wanna share? 😄
[21:14:24] <FromDiscord> <Recruit_main707> ~~there are some not very law friendly websites to see it~~
[21:14:30] <FromDiscord> <Rika> no, i havent started perse
[21:14:34] <FromDiscord> <Rika> still daw-swapping
[21:14:55] <FromDiscord> <Rika> looking for something that works for me, kinda like a programming language or text editor choice spiel
[21:15:01] <FromDiscord> <exelotl> Renoise is <3
[21:15:07] <FromDiscord> <Rika> yeah i was looking into that
[21:15:26] <FromDiscord> <Rika> my two narrowed down choices is renoise or digital performer
[21:15:52] <FromDiscord> <Rika> then i need to look into the infinite depths of music theory
[21:16:08] <FromDiscord> <dom96> In reply to @Recruit_main707 "~~there are some not": I've been trying to ~~find~~steer clear of some torrents but all my searches haven't turned up any
[21:16:46] <FromDiscord> <dom96> In reply to @Rika "looking for something that": wasn't there a pretty cool Nim-based tool for this, I recall something from NimConf
[21:17:01] <FromDiscord> <Recruit_main707> ahhh right, it was a dsl
[21:17:03] <FromDiscord> <Recruit_main707> iirc
[21:17:08] <FromDiscord> <Rika> whatsit
[21:17:45] <FromDiscord> <Recruit_main707> i have the idea that it ends in -ino or something like that but im not sure
[21:17:57] <FromDiscord> <Recruit_main707> could be completely wrong
[21:18:29] <FromDiscord> <Recruit_main707> Omni
[21:19:13] <FromDiscord> <Recruit_main707> i had my brain in big endian mode when trying to remember
[21:19:52] <FromDiscord> <Rika> inmo
[21:20:02] <FromDiscord> <dom96> this is what I'm thinking of: https://www.youtube.com/watch?v=cBqBfPRWla8&list=PLxLdEZg8DRwRXNrY7yyGU0-g_GRSyRGKo&index=12
[21:20:07] <FromDiscord> <Recruit_main707> ah
[21:20:17] <FromDiscord> <Rika> eh i dont want to be limited to simple wave samples
[21:20:19] <FromDiscord> <Recruit_main707> that makes more sense yeah
[21:20:31] <FromDiscord> <Rika> will probably get the demo for renoise then, see if i like it and then buy it
[21:20:38] <FromDiscord> <Rika> man 75 dollars is such a steal of a price ngl
[21:20:52] <FromDiscord> <Rika> considering that thats cheaper than some plugins
[21:38:08] <FromDiscord> <geekrelief> In reply to @treeform "In theory this should": Are you going to create an issue for the compiler crash / tupledecl issue?
[21:44:40] <FromDiscord> <hmmm> yo boyz at the end of my newest genius creation I call a cli app with osproc execprocess, since I call it massively it will spawn the fugly terminal multiple times per second. I'm getting seizures here, how do I tell execproc not to spawn fugly windows from hell but to do it quietly and silently?
[21:50:39] <FromDiscord> <enthus1ast> i think you cant with exeProcess
[21:50:50] <FromDiscord> <enthus1ast> can't   execProcess
[21:51:20] <FromDiscord> <hmmm> should I use something else like startProcess?
[21:51:31] <FromDiscord> <enthus1ast> is this cli program one of yours?
[21:51:53] <FromDiscord> <hmmm> nope it's qpdf
[21:56:39] <FromDiscord> <enthus1ast> @hmmm\: try the "poDaemon" option
[21:56:56] <FromDiscord> <enthus1ast> this sets the "CREATE\_NO\_WINDOW" flag
[21:57:07] <FromDiscord> <enthus1ast> but i don't know if this works for cmd window
[21:57:18] <FromDiscord> <enthus1ast> https://github.com/nim-lang/Nim/blob/1090b0c4af472b7064193c2795c43a00ae21030b/lib/pure/osproc.nim#L724
[21:58:28] <FromDiscord> <hmmm> hmm
[21:58:32] <FromDiscord> <hmmm> interesting
[21:58:35] <FromDiscord> <hmmm> I'll try
[22:05:04] <FromDiscord> <hmmm> anyway I'm getting confused, what's the difference between execCmdEX, execCmd, startProcess and execProcess
[22:05:17] <FromDiscord> <hmmm> there is too many 🧐
[22:09:40] <FromDiscord> <enthus1ast> yes
[22:09:46] <FromDiscord> <enthus1ast> i also have to look them up
[22:10:04] <FromDiscord> <enthus1ast> every time i want to use them
[22:15:12] <FromDiscord> <enthus1ast> but was poDaemon working?
[22:25:51] <FromDiscord> <hmmm> can't try right now, I need to fix the program somewhere else first lol
[22:41:32] <FromDiscord> <treeform> In reply to @geekrelief "Are you going to": flying now, maybe later
[22:52:32] *** Joins: neurocyte0132889 (~neurocyte@94.46.73.137)
[22:52:32] *** Quits: neurocyte0132889 (~neurocyte@94.46.73.137) (Changing host)
[22:52:33] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:01:32] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:02:03] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:05:02] *** Joins: greaser|q (greaser@antihype.space)
[23:05:56] <FromDiscord> <retkid> so spawn is calling all my functions to return generics, T
[23:06:04] <FromDiscord> <retkid> how do i cast them to a type?
[23:06:05] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:06:05] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:07:08] <FromDiscord> <5271> is there a way ot make a program that doesn't open any windows and just runs in background in nim?
[23:07:21] <FromDiscord> <5271> (edit) "ot" => "to"
[23:07:35] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/908802727658795038/unknown.png
[23:07:37] <FromDiscord> <retkid> v
[23:07:39] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/908802741172850718/unknown.png
[23:07:43] <FromDiscord> <retkid> i cant post images/
[23:15:58] <FromDiscord> <retkid> guess there is no answer
[23:15:59] <FromDiscord> <retkid> ¯\_(ツ)_/¯
[23:16:13] <FromDiscord> <Elegantbeef> I mean the issue isnt clear
[23:16:23] <FromDiscord> <Elegantbeef> You're hovering the second error not the first
[23:16:43] <FromDiscord> <retkid> well, they are both the same problem
[23:16:59] <FromDiscord> <Elegantbeef> Sure so give context so we can see the whole procedure
[23:17:25] <FromDiscord> <Elegantbeef> You've covered have the screen with the error and we have 0 context
[23:19:47] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3EOe
[23:19:59] <FromDiscord> <retkid> (edit) 
[23:20:23] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3EOe" => "https://play.nim-lang.org/#ix=3EOf"
[23:20:57] <FromDiscord> <retkid> my first guess would be to cast test to tuple(string, string)
[23:21:09] <FromDiscord> <retkid> but how do i do that
[23:22:10] <FromDiscord> <Elegantbeef> `Error: cannot create a flowVar of type: (string, string)`
[23:22:31] <FromDiscord> <Elegantbeef> Seems you're supposed to do `^test` to block for the value then unpack it
[23:23:24] *** Quits: blackbeard420_ (~blackbear@45.33.85.133) (Quit: ZNC 1.8.2 - https://znc.in)
[23:23:36] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[23:24:39] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[23:24:45] <FromDiscord> <retkid> (edit) 
[23:25:03] <FromDiscord> <retkid> that is nowhere in the doc
[23:25:26] <FromDiscord> <retkid> wrong doc i guess nvm
[23:27:59] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3EOg
[23:28:28] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3EOg" => "https://play.nim-lang.org/#ix=3EOh"
[23:30:05] <FromDiscord> <hmmm> out= execProcess("qpdf","", argz, options = {poStdErrToStdOut,poDaemon})
[23:30:14] <FromDiscord> <hmmm> it was perfeccccccccccct
[23:30:35] <FromDiscord> <hmmm> enthy you are the nimmer of the day :nim1:
[23:34:35] <FromDiscord> <hmmm> I must say wnim is the most pleasurable windows GUI I've tried till now, too bad it's missing a grid / spreadsheetlike control
[23:37:09] <FromDiscord> <Elegantbeef> So retkid strings cannot be used since they're GC'd types i assume
[23:40:28] <FromDiscord> <hmmm> now my next question would be, it is possible for my exe to eat qpdf so I have everything inside a single exe file?
[23:40:35] <FromDiscord> <Elegantbeef> It works with arc though i suspect it loses memory
[23:41:06] <FromDiscord> <Elegantbeef> Cause with orc it crashes due to trying to dereference already dereferenced memory
[23:41:17] <FromDiscord> <Elegantbeef> `staticRead("yourFile.qpdf")`
[23:41:35] <FromDiscord> <hmmm> hmmm but it's an entire program
[23:41:39] <FromDiscord> <hmmm> it's like 10 files
[23:41:42] <FromDiscord> <hmmm> will it work?
[23:42:20] <FromDiscord> <Elegantbeef> You could use Zippy, it can compress at compile time
[23:42:39] <FromDiscord> <Elegantbeef> Well compress and archive
[23:42:53] <FromDiscord> <hmmm> oh
[23:43:00] <FromDiscord> <Elegantbeef> Otherwise you could indeed load all 10 files into a collection using static read
[23:43:02] <FromDiscord> <hmmm> mmm
[23:44:35] <FromDiscord> <hmmm> if I eat the files with static read do I still keep calling qpdf with execproc?
[23:45:42] <FromDiscord> <Elegantbeef> No clue
[23:46:04] <FromDiscord> <Elegantbeef> You can put it in a memfile then execute it
[23:46:14] <FromDiscord> <Elegantbeef> Or atleast should be able to
[23:46:29] <FromDiscord> <hmmm> yea there is also the bit thingy, if I eat the 64 bit version of qpdf it won't probably work for 32bit machines I guess
[23:47:31] <FromDiscord> <Elegantbeef> I mean that's what normally happenes with 32bit vs 64bit 😀
[23:47:37] <FromDiscord> <hmmm> lol yea
[23:51:47] <FromDiscord> <tandy> [bung87 (Bung)](https://matrix.to/#/@bung87-59f2c890d73408ce4f7befee:gitter.im)\: you around?
