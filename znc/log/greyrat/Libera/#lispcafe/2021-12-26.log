[00:07:55] <shka> especially multimethods
[00:25:30] <pl> DS9 was also a bit of a ripoff, but fortunately had less problems with writing staff than TNG
[00:26:08] <pl> (and they tried to make long-arching plot, which was verboten for TNG)
[00:26:37] <shka> *sigh*
[00:26:37] <aeth> on the other hand
[00:27:13] <aeth> because DS9 was more ahead of its time, it's less interesting now that every series has a dark, continuous story arc
[00:27:15] <shka> DS9 is my favorite Trek, and certainly the most even one 
[00:27:33] <aeth> TNG was a bunch of completely random hit-or-miss episodes
[00:27:48] <aeth> so the best and worst post-TOS episodes were in TNG
[00:27:53] <shka> aeth: they had some two parters ;-)
[00:29:05] <shka> i also think that voyager had some of the worst episodes
[00:29:13] <shka> worse then the TNG even
[00:29:20] <aeth> idk
[00:29:26] <aeth> TNG season 1 is awful
[00:29:30] <aeth> I'm surprised they didn't cancel the show
[00:29:37] <shka> well, it almost did
[00:29:47] <aeth> It's like two different shows (the Riker beard joke)
[00:29:57] <aeth> if anyone here doesn't watch TNG, start with season 2
[00:30:54] <shka> but at least Voyager had this, and it was pure absurd https://www.youtube.com/watch?v=XGUKYkW3rks
[00:30:55] -ixelp- Star Trek Voyager 4K AI clip - Bride of Chaotica - Queen Arachnia - Captain Janeway - OLD VERSION - YouTube
[00:31:21] <shka> and i would rather watch 7 seasons of this then 1 season of voyager :D
[00:32:29] <selwyn> what
[00:32:46] <aeth> worst episode was the season finale of season 2
[00:32:48] <shka> selwyn: yeah, they had some old props from the flash gord laying around
[00:33:02] <aeth> the 1980s were another era... they actually made the season finale of a major TV show... a clip show
[00:33:04] <selwyn> i thought voyager was a tv show from the 90s
[00:33:10] <selwyn> is this another film
[00:33:12] <shka> selwyn: it was 
[00:33:21] <aeth> https://memory-alpha.fandom.com/wiki/Shades_of_Gray_(episode)
[00:33:22] -ixelp- Shades of Gray (episode) | Memory Alpha | Fandom
[00:33:39] <shka> this was a holodeck episode, using props from old flash gordon movies
[00:33:46] <selwyn> hilarious
[00:33:52] <shka> ikr
[00:34:31] <shka> honestly voyager would be much better as a comedy :P
[00:34:39] <selwyn> sigh
[00:34:45] <selwyn> i am stuck on 'water hazard'
[00:35:12] <selwyn> completing hl2 for the nth time should be very straightforward intellectually
[00:35:28] <shka> yeah, especially since it is pretty easy game
[00:36:34] <aeth> heh
[00:36:46] <aeth> yeah, the boat section of HL2 is so bad and it goes on forever
[00:36:57] <aeth> apparently, there was a bug in one of the files that made the boat control terribly and it wasn't meant to be like that
[00:37:00] <aeth> iirc
[00:37:12] <aeth> a lot of my playthrough attempts of HL2 end there
[00:37:13] <shka> i was replaying Blood on well  done because i hate myself
[00:37:36] <shka> i actually like water hazard
[00:37:55] <aeth> I don't mind the other vehicle section of HL2 because the car's just supposed to get you from house set piece to house set piece
[00:37:56] <shka> i don't know why it is so hated
[00:38:00] <selwyn> i think the beginning of water hazard is one of the highlights of the game
[00:38:37] <selwyn> everyone has different tastes i guess
[00:38:45] <shka> and not much of what civvie11 calls "valve blue balling"
[00:38:58] <aeth> I think the problems with water hazard are: (1) the vehicle is bugged; (2) it goes on forever; (3) you are defenseless for a very long time; (4) it was meant to show off how open the Source 1 engine's maps can be, but tech demo segments don't age well
[00:39:02] <selwyn> i didn't dislike ravenholme but first time i played it i didn't appreciate the distraction from the main storyline
[00:39:32] <aeth> My problem with Ravenholm is it's too easy. You can even do the whole thing with the gravity gun (you get an achievement) and are kind of encouraged to, at least until you get the shotgun
[00:39:58] <shka> aeth: i mean... HL1 surface tension flashback
[00:40:48] <aeth> speaking of sections that people don't like but I like...
[00:40:55] <shka> https://www.youtube.com/watch?v=eH7bxHHJsy4&t=2216s
[00:40:56] -ixelp- Half-Life - A Linear Sequence of Scares - YouTube
[00:40:56] <aeth> apparently people hate Residue Processing
[00:41:09] <shka> aeth: yes, because it is crap
[00:41:11] <aeth> I like Residue Processing. The part after you lose your weapons where you have to mostly do platforming around acid and stuff
[00:41:26] <aeth> It kind of serves as an intermission in the action and breaks up what would otherwise be an incredibly long section of fighting soldiers
[00:42:15] <aeth> sort of like how you can't have music at 10/10 all of the time or else it has no impact.
[00:42:39] <selwyn> well they certainly get music right
[00:42:50] <selwyn> most of my favourite moments in hl are musical moments
[00:44:58] <aeth> but back to Ravenholm... the thing is, if you play a lot of zombie games... Ravenholm's really nothing
[00:45:58] <aeth> in zombie games, there are two threats: the crowd and the (mini)bosses
[00:46:03] <aeth> but Ravenholm doesn't really offer that
[00:46:13] <selwyn> goddamn i am dumb
[00:46:15] <aeth> actual zombies make bad enemies
[00:46:19] <selwyn> i unlocked the next gate without realising it
[00:47:41] <shka> btw, if you want to play a cool retro-fps ion fury is really cool
[00:48:03] <shka> has some problems, but it is fun 
[00:51:31] <selwyn> i wonder what the vorts are cooking
[00:51:46] <selwyn> they eat headcrabs in hl alyx
[00:56:28] <copec> https://www.reddit.com/r/programmingcirclejerk/comments/ro8hmv/lisp_completely_changed_how_my_brain_thinks_in/hpwyvi2/?utm_source=share&utm_medium=ios_app&utm_name=iossmf&context=3
[00:56:29] -ixelp- Lisp completely changed how my brain thinks in college. After three months of writing Lisp I was completing my CS assign [...]
[01:02:07] <hayley> https://www.youtube.com/watch?v=mEBRzrYKifU
[01:02:08] -ixelp- Thank God It's Not Christmas - YouTube
[01:03:03] <pl> https://old.reddit.com/r/programmingcirclejerk/comments/ro8hmv/lisp_completely_changed_how_my_brain_thinks_in/hpxje8i/ <--- I think I
[01:03:04] -ixelp- Goheeca comments on Lisp completely changed how my brain thinks in college. After three months of writing Lisp I was com [...]
[01:03:13] <pl> I've seen most of that comment spoken once about Haskell
[01:03:41] <shka> how pretentious
[01:03:59] <hayley> https://www.reddit.com/r/ProgrammerHumor/comments/6csxb0/after_all_youve_tasted_haskell_shes_not_like/
[01:04:00] -ixelp- After all, you've tasted Haskell, she's not like anything else : ProgrammerHumor
[01:04:40] <hayley> WARNING: high levels of webshit "humor" if you navigate around too much
[01:19:43] <gilberth> I like this joke <https://www.reddit.com/r/programmingcirclejerk/comments/rjjxst/i_know_it_might_controversial_but_log4j_can_be/>
[01:19:44] -ixelp- I know it might controversial but log4j can be re-written in Rust and vulnerabilities will go away. : programmingcirclej [...]
[01:20:24] <gilberth> Hint: log4j worked as advertised. It's not a bug in log4j.
[01:23:44] <gilberth> But sure the garbage collector is the culprit.
[01:24:38] <hayley> Well, hypothetically doing dlopen() in Rust is harder, mostly because there is no stable ABI so you literally cannot unless you make everything extern C
[01:24:45] <edgar-rft> Santa brought me some garbage to collect :-)
[01:25:39] <hayley> https://i.redd.it/dd5kppjrln781.png
[01:26:30] <shka> self-enjoyer, huh?
[01:26:41] <pl> hayley: they need to embrace the wisdom of COM (or VMS)
[01:27:15] <shka> good night all
[01:27:16] <gilberth> hayley: Well, this remote loading of classes is a feature of log4j. And this features works as advertised. But yeah, if your language is so crippled that you can't do that, you're probable safe. Indeed.
[01:27:40] <hayley> https://www.youtube.com/watch?v=6Iz53uzlNls
[01:27:41] -ixelp- Sparks - "National Crime Awareness Week" (official video) - YouTube
[01:27:42] <gilberth> Take care, shka.
[01:28:51] <gilberth> edgar-rft: Nothing to collect here.
[01:28:55] * hayley found another trans programmer group and they are all crabs again.
[01:30:11] <hayley> Unless I build <https://applied-langua.ge/anarchist-code-shop.png> next to #lispcafe, seems they all are.
[01:32:37] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[01:55:55] <gilberth> For my toy CPU, I wonder if I could implement some kind of "burst" mode. As long as the same memory chip is addressed, I could keep /RD low and just change the next address lines. when the addressed chip changes, I need to account for propagation delays of both the address decoder and the /RD line, so that no two chips could ever drive the data lines at the same time.
[01:56:59] <gilberth> In particular with memory mapped I/O, I also am concerned about that read operations aren't necessarily idempotent. Better keep the address stable and really pulse /RD during that.
[02:20:21] <pl> gilberth: well, most SDRAM controllers do that?
[02:23:33] <pl> gilberth: I think the usual trick is that you have pipelined DRAM controller that tries to avoid a full readdressing cycle so long as new read requests don't require switching, which you then combine with caches that are refreshed by full line, resulting in non-atomic reads/writes being bursty by default
[02:25:11] <hayley> https://www.youtube.com/watch?v=FDiapbD0Xfg A pipelined Minecraft CPU with pipelining, a data cache and a branch predictor.
[02:25:11] -ixelp- CHUNGUS 2 - A very powerful 1Hz Minecraft CPU - YouTube
[02:39:32] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:40:12] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Read error: Connection reset by peer)
[02:40:24] *** Joins: dra (~dra@2a04:4540:6420:3a00:b16a:478f:ee9c:ecfa)
[02:40:26] <dra> Hello!
[02:40:52] <hayley> Hello dra!
[03:01:27] <amazigh> join us and share the lispware
[03:10:31] <dra> Join where?
[03:22:49] <hayley> https://i.redd.it/kfueo0n1be871.jpg
[03:24:10] <selwyn> whats ironic about that
[03:24:45] <hayley> That the MicroPython people couldn't write MicroPython in MicroPython.
[03:25:32] <selwyn> is it ironic if its completely expected lol
[03:25:56] <hayley> Yes.
[03:27:07] <selwyn> why does line 7 read list instead of nil
[03:28:09] * hayley shrugs
[03:33:33] <hayley> Well, I guess if we know that LIST is NIL, then it is easier to preserve the register (a no-op) than load a constant.
[03:33:49] <selwyn> ok
[03:34:11] <hayley> ...assuming the first argument and first return value are in the same register, which IIRC they aren't, but a register-register MOV is pretty cheap.
[03:44:27] <moon-child> I would expect value numbering to turn that into a constant load
[03:44:29] <moon-child> :)
[03:47:17] *** Quits: dra (~dra@2a04:4540:6420:3a00:b16a:478f:ee9c:ecfa) (Ping timeout: 240 seconds)
[03:47:54] <hayley> OTOH we have to load NIL to do the NULL test, so it doesn't matter when NULL is inlined.
[03:49:08] <hayley> IIRC global value numbering is oblivious to loading constants that aren't immediates in IR though. So it wouldn't help just yet.
[03:53:37] *** Quits: phantomics (~phantomic@97-118-135-6.hlrn.qwest.net) (Ping timeout: 240 seconds)
[04:04:08] <Alfr> hayley, why on earth does that minecraft cpu implement popcount?
[04:14:41] <hayley> Alfr: Good question.
[04:14:55] <hayley> Must be a NSA request, per https://vaibhavsagar.com/blog/2019/09/08/popcount/
[04:14:56] -ixelp- You Won’t Believe This One Weird CPU Instruction! - Vaibhav Sagar
[04:15:28] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::4f)
[04:23:26] *** Joins: robin (~robin@user/terpri)
[04:34:45] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[04:35:12] *** Joins: Alfr (~Alfr@user/alfr)
[05:17:53] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::4f) (Quit: Leaving)
[05:22:17] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[05:22:45] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[05:25:07] <selwyn> > popcount has become so pervasive that both GCC and Clang will detect an implementation of popcount and replace it with the built-in instruction
[05:25:09] <selwyn> wow
[05:26:27] <moon-child> meh they'll do that with a bunch of stuff, including rots
[05:26:35] <moon-child> fun fact: in the early days, somebody made a software implementation of popcnt that beat the silicon
[05:26:39] <selwyn> sigh
[05:26:43] <selwyn> i guess i am easily impressed
[05:27:21] <moon-child> I think clang will even do closed-form triangle numbers
[05:28:25] <selwyn> i heard about that
[05:47:11] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[05:47:48] *** Joins: Alfr (~Alfr@user/alfr)
[06:03:50] <hayley> "Another major source of 'bloat' in the LispM was the fact that it had full word pointers at a time when microcomputers were still crawling around with 16-bit pointers and wetting themselves (the Purify diaper hadn't come on the scene yet)."
[06:06:35] <pl> ... Wat 
[06:07:04] <hayley> Henry Baker confirmed diaperfur /s
[06:07:28] <moon-child> ocr fail?
[06:08:08] <hayley> It was on Usenet, so unlikely.
[06:08:57] <pl> I was actually thinking more about the 16bit pointer and full word pointers 
[06:09:10] <pl> Since the comparison doesn't make sense to my literal mind 
[06:09:56] <hayley> 32-bit pointers, and micros had 16 bits (anything 6502 had 16 bits, muLisp on IBM PC had 16 bits with different segments for CAR/CDR according to gilberth)?
[06:11:00] <gilberth> But a pointer on a LispM is not "full width" in the sense that the full word is used for the pointer.
[06:11:14] <moon-child> 'different segments' cute
[06:11:23] <hayley> Yes, but still pretty big.
[06:11:55] <gilberth> It's the micros that use the full word for a pointer. And the ancient machines only using a fraction of a word. See the original LISP.
[06:12:24] <hayley> The 68k Macintosh and 386 PCs would have 32 bit pointers* but that's probably half a decade after the point of comparison (1980?)
[06:12:52] <pl> 68k macintosh depended on whether you had 32bit clean setup or not 
[06:12:56] <hayley> *Obligatory mention that people would use the high 8 bits of pointers on the 68k for random crap, since there were only 24 address lines actually exposed on the 68000 chip.
[06:13:00] <gilberth> Be careful with the 68k when discussing pointers.
[06:13:04] <hayley> Hey, that's why I added the asterisk!
[06:13:36] <hayley> But AIUI no one tried to pack 24-bit pointers, in terms of storage they were 32-bit.
[06:13:44] <moon-child> sure would be nice if we got to use the high 16 bits for random crap on arm/x86/..
[06:14:08] <gilberth> NaN-boxing? scnr
[06:14:11] <hayley> But then you end up with the problem where the 68020 came out, which did expose the high 8 bits, and all your code broke.
[06:14:19] <moon-child> gilberth: ._.
[06:14:25] <moon-child> hayley: 256tb ought to be enough for everybody
[06:14:56] <hayley> moon-child: https://www.youtube.com/watch?v=EtZXMj_gUjU
[06:14:57] -ixelp- Unboxing 3 PETABYTES of storage!! - YouTube
[06:15:08] <pl> 68020 macs ended up specially supporting disabling upper 8 bit, iirc
[06:15:58] <moon-child> hayley: tbf I don't think you're ever going to have a 3pb workingset.  So access anything that huge indirectly, same as you would have had to do anyway; don't map it
[06:16:26] <moon-child> moot point regardless; but
[06:16:27] <gilberth> Pointer swizzling? scnr 2.0
[06:17:20] <hayley> Well, you could use the Pauseless hack and use it to un-swizzle pointers to no man's land.
[06:17:38] <hayley> But then what's paged in ≠ what's on disk. So basically incremental swizzling.
[06:17:42] <pl> amd64 sign-extends the pointers to avoid some issues 
[06:18:16] <hayley> gilberth: OOZE 2.0? scnr
[06:18:27] <gilberth> We could bet on having 128-bit words once 3PB RAM becomes affordable.
[06:20:09] <hayley> But I think the quote was just about pointer size, not how much was addressable. I mean, we still pay 128 bits for cons cells with two 48-bit pointers.
[06:20:23] <gilberth> pl: The pointers are not exactly sign extended. It's rather like you cannot map a pointer not being all ones or all zeros in the upper 16 bits. But the effect is the same: Bits are not just dropped as with the 68k.
[06:20:33] <hayley> Compressed oops are a thing for a reason.
[06:21:11] <moon-child> gilberth: upper 17, not 16
[06:21:21] <gilberth> hayley: But then the term "full word pointer" does not make any sense in this context.
[06:21:23] <pl> gilberth: there's no actual guarantee about having useless upper 17 or 16
[06:21:48] <hayley> gilberth: Sure, that was stupid, unless you say "Real machines have 32 bit words!"
[06:22:05] <gilberth> pl: As I said. A future processor may as well add the needed page table indirection.
[06:22:11] <pl> amd64 specifies, iirc, that any operation that takes a memory address will sign extend it over the unsupported memory bits
[06:22:29] <pl> Currently that's only 8, iirc 
[06:22:34] <hayley> I remember my olde university server would loudly print out JVM arguments for some reason, and they had compressed oops on. Probably helps when you give hundreds of students a few machines with 8GB of memory to go around. 
[06:22:36] <moon-child> gilberth: it _did_ get added.  5-level paging is a thing
[06:22:40] <gilberth> moon-child: 17? 16? *sigh* It's late. Poor excuse, I know.
[06:22:52] <moon-child> get 57 bits of address space on newer intels
[06:23:16] <gilberth> So much for my NaN-boxing.
[06:23:18] <hayley> 128 PB is enough for anyone(tm).
[06:23:29] <pl> On the earliest hw you had afaik only 40bits physical, and if you were unlucky and had first gen intel 64, then you only had 36bit physical and most software didn't work 
[06:23:30] <moon-child> pl: see wikipedia diagram @ https://en.wikipedia.org/wiki/X86-64#Virtual_address_space_details
[06:24:30] <pl> moon-child: yep 
[06:27:04] <gilberth> I remember embarrassing both our lecturer and me once for I pointed out his statement that the virtual address space always is larger than the physical is false.
[06:29:24] <hayley> I remember telling my lecture that you couldn't average 1 cycle latency (without the most fancy of tricks like instruction fusion and register renaming), because some instructions are slower than 1 cycle, so that would require some to be faster than 1 cycle, which can't happen with synchronous logic. He took it fine.
[06:30:16] <hayley> (FWIW they only taught pipelining, superscalar execution, then eventually got to OoO, branch prediction and register renaming very late into that part of the year.)
[06:35:59] <hayley> How fun, now that I have a break from university I can get an education.
[06:36:27] <gilberth> Does this surprise you?
[06:36:48] <hayley> No, I'm just saying that it's fun
[06:37:11] <gilberth> Actually, it's not so funny.
[06:37:17] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[06:37:53] <hayley> fun, not funny.
[06:38:19] *** Joins: Alfr (~Alfr@user/alfr)
[06:38:28] <gilberth> You're splitting hairs. ;-)
[06:39:26] * hayley reads logs
[06:40:04] <hayley> "The AND instruction in this VM does not update flags, when it should." "That [there are bugs in the code we give you] is a fairly realistic assumption in any software project."
[06:40:21] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[06:41:15] *** Joins: Alfr (~Alfr@user/alfr)
[06:42:48] <hayley> But my favourite piece of bogosity this year has to be a comment in source code (for generating a 512-bit RSA key) that "key length should be at least 16"
[06:43:26] <moon-child> lul
[06:43:35] <moon-child> didn't somebody brute-force a 700- or 900-bit ish key?
[06:43:42] <gilberth> 16 what? Miles?
[06:44:00] <hayley> You can factor 768 IIRC.
[06:44:29] <hayley> https://en.wikipedia.org/wiki/RSA_Factoring_Challenge#The_prizes_and_records 829 bits was factored last year.
[06:45:01] <hayley> gilberth: Bits.
[06:45:18] <hayley> It would be nearly excusable if it were a 16 byte symmetric key, but 16 bit RSA is hilariously bad.
[06:46:33] <GreaseMonkey> 16-bit RSA is what you basically end up with in pacemakers
[06:46:34] <moon-child> meh, given quantum computers seem to be becoming a thing, go for 256-bit
[06:46:39] <moon-child> symmetric
[07:15:04] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:16:08] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:21:25] <hayley> moon-child: It's just not as awful as 16-bit RSA.
[07:21:53] <hayley> A bar to clear that is so low, it's basically embedded into the ground, but a bar to clear nonetheless.
[07:25:43] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[07:29:57] <hayley> gilberth: Did the Rust book still say that 32-bit arithmetic was faster when you read it?
[07:29:57] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[07:31:35] <gilberth> hayley: Huh? I don't remember. And addition is not exactly O(1), anyway.
[07:32:00] <hayley> It still says i32 is default, but f64 (double) is default for floats. Makes sense.
[07:32:14] <gilberth> Faster than what? 64-bit addition? On a 64-bit machine?
[07:32:57] <hayley> https://github.com/rust-lang/rfcs/blob/master/text/0212-restore-int-fallback.md#rationale-for-the-choice-of-defaulting-to-i32 does say "There are reasons for using i32 instead: It's familiar to programmers from the C programming language (where the default int type is 32-bit in the major calling conventions), it's faster than 64-bit integers in arithmetic today, and is superior in memory usage while still providing a reasonable range of possible
[07:32:57] <hayley> values."
[07:32:58] -ixelp- rfcs/0212-restore-int-fallback.md at master · rust-lang/rfcs · GitHub
[07:33:10] <hayley> 1. So? 2. Nope. 3. Not reasonable for an "integer" type.
[07:33:41] <moon-child> 64-bit div could be a bit slower
[07:33:41] <gilberth> Yep, i32 is the default perhaps because C compilers chose to make 'int' being that. Which is not the original spirit of the 'int' data type which should match your natural word width. What ever that might be.
[07:33:43] <moon-child> still
[07:33:59] <hayley> The RFC then mentions vectorisation, but I hope you are picking the smallest type that works for that.
[07:34:23] <hayley> Worse would be to default to i32 when you can fit in a u8; you're missing on a 4x speedup by that logic.
[07:35:07] <gilberth> Well, as moon-child said. Division and multiplication could behave that way.
[07:35:56] <hayley> I guess so. But IMO better to be explicit if you care for top performance, since you can still benefit from going even tighter.
[07:37:11] <gilberth> The ARM I worked with only had a 16 bit x 16 bit HW-multiplier. Heck, 32-bit x 16-bit speed depended on which one you multiplied with which.
[07:37:39] <gilberth> hayley: But that logic bignums should be the default.
[07:38:12] <hayley> Yes.
[07:38:39] <gilberth> Rust is highly hypocritical in this respect. Bragging about bounds checks, while happily let integers overflow without notice by default.
[07:39:04] <sham1> Tbf, it's not without notice in debug mode
[07:39:33] <hayley> Yeah, but then everything else is dog slow in debug mode.
[07:39:34] <gilberth> More terrific: Semantics of the language change on a compiler switch!
[07:40:32] <sham1> I suppose they thought that having integer overflow being essentially undefined behaviour was a good thing to copy from C and thus they could get away with that
[07:40:48] <hayley> It's not UB, it's specified to wrap. But still not nice.
[07:40:51] <gilberth> Do I need to ask every author: "Is that Debug-Rust, or Release-Rust that you wrote that program in?"
[07:41:01] <sham1> Signed aren't. Unsigned is
[07:41:05] <sham1> Just like C
[07:41:23] <hayley> You might as well make a safe C which calls puts("8======D"); when you encounter UB.
[07:41:25] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[07:41:39] <sham1> Yes
[07:41:54] <hayley> https://rust-lang.github.io/rfcs/0560-integer-overflow.html
[07:41:54] -ixelp- 0560-integer-overflow - The Rust RFC Book
[07:42:09] <gilberth> Overflow checking could have been the default. Skip it, if and only if the programmers says so. I mean by that logic "The C programmer is used to that" they could have skipped bounds checks and the whole borrow checker to begin with.
[07:43:17] <sham1> Nobody said that the reasoning is good or consistent :p
[07:43:41] <GreaseMonkey> honestly the default integer size should be bignum
[07:43:51] <GreaseMonkey> if you want something else, you either want the size of a pointer, or a specific width
[07:44:16] <GreaseMonkey> and speaking of things that suck about C, i'm learning how to code for Windows 3.x
[07:44:23] <GreaseMonkey> for shenannery of course
[07:44:23] <gilberth> So their definition of safe is bogus. What does safe mean here: "Won't crash, but does sth unexpected." (modulo arithmetric) or "Will panic" (bounds checks). While not access an 100 element array with a[i%100]? Look mum, no harm done!
[07:45:29] <gilberth> This is inconsistent and just lazy.
[07:45:59] <GreaseMonkey> i firmly believe that a program should bail out of a bad situation it can't handle, even if it has to crash. there are exceptions (ha) to this, e.g. embedded systems may need to stay alive during calamity, but then again those things *do* have watchdog timers usually
[07:46:35] <GreaseMonkey> set those things to something like 60 msecs, make sure something happens every 50 msecs, and make sure you can reboot really quickly
[07:47:33] <gilberth> GreasMonkey: Consistently crash, that is halt, is fine. With embedded system you could reboot the whole thing. Some systems reboot itself every once in the while just in case, an accepted practice for more reliability.
[07:47:48] <sham1> Then again, things like pacemakers don't tend to use "trendy" languages like Rust despite rustaceans trying to enter embedded space
[07:48:10] <gilberth> GreaseMonkey: That is called a HW watchdog. You need to trigger it in time or else it'll pull your /RESET line.
[07:48:42] <gilberth> All serious embedded system have such a watchdog.
[07:49:06] <GreaseMonkey> i'm looking forward to Zig being able to do embedded stuff properly but there are some issues right now - lld seemed to lack some key features... or was it documentation?
[07:49:13] <hayley> Hedge ya bets, how long until we have to found an actual <https://www.youtube.com/watch?v=tbHix56qfG8>
[07:49:13] -ixelp- The Aircrash Bureau - YouTube
[07:49:26] <hayley> I'm looking forward to handling Zig-related crashes too FWIW.
[07:49:31] <GreaseMonkey> and yes, i'm not sure which microcontrollers don't have one built in
[07:49:59] <epony> servers have it too if you have a BMC or a ME, and some desktop and laptops too (also it's on many periphery like wireless and nics and drivers control it)
[07:50:06] <gilberth> This watchdog is pure HW as could be as easy as a diode, a resistor and a capacitor. Perhaps a Schmitt trigger. No way to fool it.
[07:50:59] <epony> transportation and large machines have a deadman switch
[07:51:14] <gilberth> It's often part of your Reset IC. Which also looks for power brown-out and stable power for power up reset.
[07:51:32] *** Quits: semz (~none@user/semz) (Ping timeout: 240 seconds)
[07:53:07] <gilberth> hayley: What is this Zig? The new Rust in town?
[07:53:26] <GreaseMonkey> it aims to be a better C, not to be a better C++, so no, not quite Rust
[07:53:36] <hayley> "Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software."
[07:53:43] <hayley> "Well, were the other ones chopped liver then?" - David Ungar, probably
[07:54:08] <hayley> .oO(He just said "Were the rest chopped liver?")
[07:54:11] <GreaseMonkey> it does borrow some ideas from Rust, but you do still need to take care w/ memory allocation and the like
[07:54:21] <GreaseMonkey> as it doesn't go down the road of doing the borrow checker thing
[07:54:21] <epony> where robust is somewhat funny ;-)
[07:54:29] <mfiano> That sounds like a marketing pitch for every programming language.
[07:54:38] <GreaseMonkey> mfiano: yeah that's quite true
[07:54:39] <hayley> mfiano: That's the joke.
[07:54:54] <gilberth> When it doesn't have a GC, it's not general purpose. Next!
[07:54:57] <hayley> IIRC there was flamage on the OpenBSD mailing list like that.
[07:55:24] <mfiano> gilberth: Next would be Go, which aims to be a better C with a GC...but you will probably not like it :)
[07:55:26] <GreaseMonkey> yeah except sometimes you actually want to know exactly how much crap you're allocating
[07:55:27] <epony> I haven't seen it, jew new languages are mostly silly.
[07:55:28] <hayley> https://marc.info/?l=openbsd-ports&m=161449568814043
[07:55:29] -ixelp- 'Re: new: lang/zig' - MARC
[07:55:29] <sham1> It'd be interesting if some language said that it's not "for maintaining robust, optimal, and reusability software"
[07:55:31] <GreaseMonkey> e.g. embedded systems
[07:56:03] <gilberth> mfiano: Go is fine and reasonable fast.
[07:56:08] <GreaseMonkey> huh, i really should check out Go some time
[07:56:46] <epony> it's like C++ without the ++
[07:57:37] <sham1> It's like ALGOL 68
[07:57:53] <gilberth> Well, I won't use it for anything. I have CL. But Go is actually miles ahead of Rust. You have a GC, Closures. And it is not 300x slower than C like Rust. Hacking my toy Lisp with Go was --- after I found my way around --- painless.
[07:58:07] <GreaseMonkey> also reminds me i should probably check out one of the versions of Oberon, hopefully it would be an improvement over Pascal
[07:58:56] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:59:42] <epony> originally Go did not have GC and such fluff
[08:00:10] <sham1> Nor parametric polymorphism
[08:00:10] <dave0> maw
[08:00:14] <epony> not a stable language feature wise, but slow development
[08:00:46] <epony> tries to address concurrent programming paradigms for parallelism
[08:01:07] <epony> I'd call it an ambitious library
[08:03:45] <epony> obviously these are application programming languages so anything goes, safety, garbage, automatic virtualisation etc
[08:04:22] *** Joins: semz (~none@user/semz)
[08:05:59] <epony> to make good use of their "parallelism" it must go in the OS (kernel syscalls) and the HW (CPU features), where the real deal is (missing support)
[08:07:53] <epony> comparing just the number of syscalls and experimental / development status, Linux >> Unix in terms of concurrency and SMP
[08:10:41] * hayley seriously suspects her Petalisp-on-GPU hack is screwed by Amadahl's law. She increased the neuron count by 4× or so, and it only ran 20% slower.
[08:10:44] <hayley> FWIW the compiler is bloody slow. I wonder if I can run it in parallel.
[08:11:16] <epony> servers are going 16-64 cores these days for general availability..
[08:11:49] <epony> I think Go should have appeared in 2000
[08:12:53] <epony> with distc(ompilation) you have to program naively (procedurally).. which is not what you like ;-)
[08:13:50] <epony> or the compiler first stages should be doing it for you (unrolling it all)
[08:14:31] <dave0> epony: who are you talking to?
[08:14:54] <epony> not-mfiano, obviously ;-)
[08:16:13] <epony> otherwise that would be in the data oriented programming series of topics
[08:17:16] <epony> dave0, did not want to interrupt you.. go on please
[08:17:42] <hayley> Himself, since we all /ignored him?
[08:19:13] <gilberth> Who are you talking about?
[08:19:17] <epony> the point is, I haven't ignored you ;-)
[08:19:19] <hayley> epony?
[08:19:26] <epony> yes
[08:20:11] <dave0> oh i'm used to kicking people.. dont see much /ignore'ing :-)
[08:20:38] <epony> maybe you should wear a helmet around such people (kicking type)
[08:22:11] <epony> the ones that open doors for cats and give them food are nicer
[08:25:13] <hayley> Well, now I allocate approximately nothing on the GPU in a loop, which is a good start.
[08:31:02] <epony> btw, spelling mistake above, unintentional (kbd mishap on a heavily swapping machine), it should read "just these new languages are mostly silly" (don't know how that could read worse, excuse that nuisance)
[08:31:11] <hayley> And apparently only like 10% of runtime is setting up GPU kernels, and none seems to be in actually running the code. The rest is the Petalisp JIT...somehow.
[08:32:35] <epony> hm, I'd think too that independent threads / cores exec would make the parallelism work, instead of shuffling on 1 core and running on others
[08:33:09] <epony> don't the GPUs have like 3 types of cores?
[08:33:40] <dave0> hayley: this is an old aussie song: https://youtu.be/NDIaHL9RpqM
[08:33:41] -ixelp- Little River Band - Love Is A Bridge - YouTube
[08:34:36] <hayley> dave0: https://www.youtube.com/watch?v=mEBRzrYKifU
[08:34:37] -ixelp- Thank God It's Not Christmas - YouTube
[08:36:01] <hayley> Also TIL that adding RGB noise might stop the Discord image filter thing from detecting your excellent memes as porn.
[08:36:20] * hayley uploaded an image: (851KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BxakzFDhIUHqvfQGSmiHjcyl/average-egoist-telekommunist.jpeg >
[08:36:21] <hayley> Mostly readable, right?
[08:36:34] <epony> but does that not trigger steg-detectors?
[08:36:40] <dave0> hayley: at least it's in english :-)
[08:38:20] <dave0> does good old dither work?
[08:38:28] <hayley> Probably not.
[08:38:39] <hayley> Perlin noise also doesn't work, it has to be pretty disruptive.
[08:38:42] <epony> stick figures are pr0n
[08:39:06] <epony> that's why xkcd is in the NSFW category
[08:42:46] <epony> re:zig, the think about reading the changelogs is that you don't see debates and talk, you just see a curious new addition in the lang category, you open the page to check it out, and then you forget about it ;-)
[08:43:09] <moon-child> hm, can you also use that to sneak in actual porn?
[08:43:21] <dave0> lol
[08:43:42] <epony> steganography for the masses
[08:44:58] <epony> "classifieds is not about espionage and secrecy, it's about primitive taxognomy"
[08:45:08] <hayley> Probably.
[08:45:41] <epony> we. see. you. there. what. you. did. that. one. time.
[08:46:14] <epony> that's how PHP strings append works
[08:48:35] <dave0> is the shops open today cos boxing day except it's sunday?
[08:49:00] <dave0> or is it monday
[08:50:53] <dave0> eh doesn't matter
[09:02:11] <hayley> OTOH TIME reports a CPU usage of like 38%, so the profiler mustn't be counting waiting time.
[09:22:09] * hayley continues playing with work chunk sizes, and finds the best right now is like 8 per dimension.
[09:23:02] <hayley> And the CPU usage goes up to 88% so I guess the GPU stuff is faster now.
[09:23:35] <dave0> https://youtu.be/2AzEY6ZqkuE
[09:23:36] -ixelp- - YouTube
[09:23:44] <dave0> oops maybe it got removed
[09:24:14] <hayley> Apparently gilberth made a copyright claim.
[09:24:23] <dave0> lol
[09:24:25] <hayley> https://www.youtube.com/watch?v=C2ZfglIFiuc
[09:24:26] -ixelp- National Crime Awareness Week (Complete Psycho) - YouTube
[09:26:41] <dave0> found a different version https://youtu.be/55xQu9eIPIA
[09:26:42] -ixelp- Harry Nilsson ~ Everybody's Talking (1969) - YouTube
[09:28:56] <dave0> copyright gilberth
[09:30:16] <hayley> "<some client> Can we have HDDs?" "<VPS provider> No, they are too hard to maintain." "<me> Why not use tapes and one of those selection machines then?"
[09:39:30] <dave0> hayley: https://youtu.be/HLnKgYuDdxg
[09:39:31] -ixelp- Jingle Bells - The Singing Dogs - Dr Demento - YouTube
[09:47:13] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 268 seconds)
[09:48:54] *** Joins: aeth (~aeth@user/aeth)
[10:02:38] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 268 seconds)
[10:03:57] *** Joins: notzmv (~zmv@user/notzmv)
[10:05:00] <hayley> https://www.youtube.com/watch?v=AqA5RBl_3NY
[10:05:01] -ixelp- Beat the Clock (Live in Concert) - YouTube
[10:32:31] *** Joins: treflip (~user@user/treflip)
[10:33:41] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:18:30] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[11:38:14] <hayley> https://dl.acm.org/doi/10.1145/1449764.1449774 They did done it, memory leaks are no more
[11:38:15] -ixelp- Tolerating memory leaks | Proceedings of the 23rd ACM SIGPLAN conference on Object-oriented programming systems language [...]
[11:39:27] <semz> ...isn't this basically swap?
[11:39:39] <hayley> Yes.
[11:40:09] <hayley> ...but they swap out objects rather than pages, so you don't crash and burn because pages have a mixture of dead and live objects.
[11:40:35] <hayley> Basically the same idea as http://3e8.org/pub/scheme/doc/lisp-pointers/v1i3/p17-white.pdf methinks.
[11:47:23] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[11:52:43] *** Joins: shka (~herr@109.231.0.226)
[12:14:22] <hayley> https://www.youtube.com/watch?v=1r9lSa_9TKg
[12:14:23] <amazigh> https://lagale.bandcamp.com/track/tes-balafres-2
[12:14:23] -ixelp- Sherlock Holmes - YouTube
[12:14:24] -ixelp- Tes Balafres | La Gale
[12:25:42] <sm2n> wow I just saw the app store page for the irc.com app (andrew lee's insane thing)
[12:25:52] <sm2n> I am pretty sure it is just a rebranded matrix client
[12:26:03] <sm2n> which is pretty ironic
[12:47:46] * hayley uploaded an image: (11KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NxgmxzyAinDRWKPTyXQeCmmr/Screenshot_2021-12-26_20-26-01.png >
[12:53:04] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[12:53:14] <sm2n> nice
[12:53:20] <hayley> nice
[12:54:48] <semz> > Push messaging: Don't miss a message - get notified when you receive a message and never miss a notification
[12:54:49] <semz> lol
[12:55:08] <hayley> https://www.youtube.com/watch?v=d_nomfDoiGQ
[12:55:08] -ixelp- Please Push No More - YouTube
[13:08:19] <moon-child> hayley: dw I fixed it
[13:15:11] <hayley> Again?!
[13:25:18] <moon-child> What can I say?  It's in my nature to be helpful.
[13:28:35] *** Joins: notzmv (~zmv@user/notzmv)
[13:53:06] * hayley has to convince someone that the popularity of the one-more-re-nightmare is very atypical.
[13:53:41] <hayley> *the article
[13:54:36] <hayley> It helps that it's just compiler theory (more or less) from top to bottom. And it spans from front to end (sorta, from derivatives to instruction selection), so there is a wide audience.
[13:55:09] <hayley> Compare to any other applied-langua.ge article which, on average, critiques something else in a snarky tone, requires some obscure CS knowledge, and general terminology of egoist anarchism.
[14:23:48] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[14:38:37] *** Joins: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de)
[14:59:00] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::4f)
[14:59:56] <hayley> https://www.youtube.com/watch?v=igILhbNWvlk
[14:59:57] -ixelp- The Smiths - That Joke Isn't Funny Anymore - YouTube
[15:05:04] <dave0> morrissey has an impressive chin
[15:14:54] <shka> hayley: also, how didn't you made your way into r/programmingcirclejerk yet? :D
[15:15:23] <hayley> I have before, actually.
[15:15:32] <shka> ok, that makes sense
[15:15:42] <hayley> Something like "Masochist programming, or who's doing the computation now?"
[15:17:13] <hayley> Not sure how my more recent writings didn't get in there, though.
[15:17:33] <hayley> Mustn't be much to jerk.
[15:17:44] * hayley has to teach phone autocorrect all the rude words now.
[15:20:19] <hayley> shka: What do you think was jerk worthy? Or was it that I must have written something by now?
[15:20:43] <shka> a lot of stuff you write is jerk worthy 
[15:21:08] <shka> didn't want to point that out previously 
[15:21:14] <hayley> Pick something? (:
[15:22:03] <hayley> For the most part, there is usually just one funny sentence which says something controversial (or blatantly wrong).
[15:24:30] <shka> well, here you go
[15:24:36] <shka> anyway, time for a dinner
[15:30:48] *** Joins: random-nick (~random-ni@87.116.180.98)
[15:36:04] <rotateq> what do you have for dinner this day?
[15:45:52] *** Quits: Inline__ (~Inline@2a02:908:1252:7a80::4f) (Quit: Leaving)
[15:58:01] <shka> rotateq: dumplings!
[16:00:59] <rotateq> oh nice! i made those too on friday ^^ and still 6 left for cooking XD
[16:03:29] <rotateq> with Rotkohl of course
[16:05:14] <rotateq> (red cabbage)
[16:05:56] <rotateq> not to be confused with the nine red scabbards :P
[16:11:05] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:12:26] <selwyn> i should make pies again
[16:13:41] <rotateq> I still have an apple strudel to bake ... and vanilla ice cream
[16:13:51] <rotateq> Strudel :D thx deepl
[16:18:56] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::4f)
[16:20:02] <shka> what is the cheapest Pi type of computer with wifi?
[16:21:41] <selwyn> no idea but i think that being in stock should be the most important factor
[16:23:43] <rotateq> hm comes the zero with wifi?
[16:23:52] <selwyn> i don't think mine did
[16:23:57] <selwyn> they might update the models idk
[16:24:50] <rotateq> i thought about buying also a pi 4 or 400 (would be good when on the go), but on pollin.de it's not bringable right now (and i don't have the money anyway)
[16:44:21] <edgar-rft> shka, the obvious answer: a stolen one
[17:24:21] *** Quits: Alfr (~Alfr@user/alfr) (Killed (mercury.libera.chat (Nickname regained by services)))
[17:24:25] *** Joins: Alfr (~Alfr@user/alfr)
[17:26:34] <dave0> nite all
[17:27:28] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:30:24] <rotateq> edgar-rft: :D
[17:30:52] <rotateq> oh yes must be 12 in the night in australia now
[17:35:25] <selwyn> are there any off brand imitations of the pi
[17:35:49] <selwyn> seems like it would be a lot of effort to develop such a thing
[18:00:01] *** Quits: Alfr (~Alfr@user/alfr) (Killed (erbium.libera.chat (Nickname regained by services)))
[18:00:05] *** Joins: Alfr (~Alfr@user/alfr)
[18:08:53] <SAL9000> selwyn: there's plenty of similar single-board computers, I believe hayley has a spreadsheet somewhere
[18:20:53] <shka> ok, so another question
[18:21:04] <shka> what is omitted from Pi zero?
[18:21:49] <SAL9000> as compared to...?
[18:21:57] <shka> as compared to Pi 3/4
[18:22:04] <shka> i don't see audio jack for instance 
[18:22:09] <SAL9000> first thing that comes to mind is USB 3 host ports
[18:22:26] <SAL9000> iirc Pi 4 has 2 CSI connectors rather than 1
[18:22:54] <SAL9000> no ethernet on the Zero, either
[18:23:00] <SAL9000> only one hdmi rather than two
[18:25:05] <shka> i see
[18:25:57] *** Joins: treflip (~user@user/treflip)
[18:26:01] *** Quits: v3ga (~v3ga@cpe-98-25-21-91.sc.res.rr.com) (Ping timeout: 256 seconds)
[18:27:40] <gilberth> Good morning #lispcafe!
[18:30:50] <selwyn> you can get a usb hub with ethernet for the pi zero
[18:30:53] <selwyn> https://shop.pimoroni.com/products/three-port-usb-hub-with-ethernet-and-microb-connector?variant=22477883847&currency=GBP&utm_source=google&utm_medium=cpc&utm_campaign=google+shopping?utm_source=google&utm_medium=surfaces&utm_campaign=shopping&gclid=EAIaIQobChMIicrOzd2B9QIVMYBQBh2NtwCIEAQYAiABEgKXy_D_BwE
[18:30:54] -ixelp- Three Port USB Hub with Ethernet (micro B) – Pimoroni
[18:31:08] <selwyn> which adds a lot of functionality in a compact form factor
[18:32:28] <selwyn> shka: got a project in mind?
[18:32:42] <selwyn> hayley: does this spreadsheet exist
[18:34:20] <shka> selwyn: yeah, nothing complex, but gonna need wifi, audio jack and usb port 
[18:35:19] <gilberth> What are you planing?
[18:38:59] <shka> small server/media center for my parents
[18:40:07] <shka> among other things, i want it to be online, so i can log into it with ssh
[18:40:29] <shka> and from that update their computers 
[18:40:59] <shka> but it would be also handy for audio calls, or simply streaming audio to speakers in the kitchen
[18:41:26] <shka> i could a wire simple keyboard for it, so there would be dedicated buttons to call family members
[18:42:08] <gilberth> Heh. You want to be able to just give them advice by your voice from the off?
[18:42:33] <selwyn> you could give them some nice keycaps
[18:43:05] <shka> that as well, but my issue is that GSM signal is not that great in there, so it is sometimes difficult to just talk
[18:43:36] <shka> and apparently not all phones do wifi calling for some reason
[18:43:48] <gilberth> You say internet is more reliable than GSM? Strange world.
[18:43:55] <shka> selwyn: i have plenty of spare keycaps, even 4 relegables :P
[18:44:04] <selwyn> i only learned about wifi calling yesterday
[18:44:11] <selwyn> using a smartphone for the first time in years
[18:44:19] <selwyn> but i might give it up by new year idk
[18:44:32] <selwyn> i noticed i felt more irritable
[18:44:35] <shka> gilberth: rural area, DSL infrastructure in place, perhaps not super high transfer, but at least it works
[18:46:25] <shka> and the GSM works if you are standing in the right place 
[18:46:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[18:46:55] <gilberth> shka: Yes, this is the strange thing. In Germany it would have been the reverse. At my former home the landline what utter shit. 384kb/s on a dry day, 0 when it rained. Our internet connection was by LTE.
[18:47:35] <shka> heh, that's interesting
[18:47:36] <selwyn> reminded that my internet should be better than it is
[18:47:58] <shka> anyway, there is fairly fresh telephone lines in there
[18:48:01] <shka> from the 90s
[18:48:23] <shka> so DSL works, but it is just dsl
[18:48:29] <shka> not broadband
[18:48:31] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[18:48:33] <gilberth> We were lucky and the radio tower for LTE was in straight line of sight some 6km away. I believe the landline was as long, and olde, and paper isolated, which is why it didn't work when it got wet.
[18:48:34] <shka> still enough for most applications 
[18:48:48] <selwyn> i wonder how old my phone line is
[18:48:52] *** Joins: aeth (~aeth@user/aeth)
[18:49:31] <gilberth> I live in a third world country internet-wise.
[18:51:39] <gilberth> And wouldn't it have been for the LTE connection, we would have been cut off at rainy days. POTS would have worked, by the phone company insisted on VoIP with DSL, the land line was not fit enough for when wet.
[18:51:56] <gilberth> * but the phone company
[18:54:09] <shka> i noticed that a lot of infrastructure in the Germany is rather old
[18:54:49] <gilberth> We wanted to move and found lovely offers of old houses with plenty of space, which is what we seeked. But at those places there was no internet and no mobile service, you could rely on. A pity.
[18:56:51] *** Alfr is now known as Guest5008
[18:56:51] *** Quits: Guest5008 (~Alfr@user/alfr) (Killed (osmium.libera.chat (Nickname regained by services)))
[18:56:55] *** Joins: Alfr (~Alfr@user/alfr)
[18:57:36] <gilberth> shka: This happened in the 80s. The then government once planned to route fiber to every home but by lobbying decided that cable TV would be more important than a data network. The whole country then got cable TV instead. So, we are stuck. What puzzles me: When we could have afforded to dig the whole country up for cable TV in the mid/late 80s in no time, why can't we do with fiber now?
[18:58:25] <selwyn> lol
[18:58:31] <selwyn> you people know nothing of old infrastructure
[19:00:12] <shka> gilberth: can't you use the same cables for data?
[19:00:33] <gilberth> In cities it's not any better. When you move into flat at a multi-story house, you lost and are stuck with "up to 16Mbps" often. As there is not enough wires for 100Mps or more as you this "VDSL" interferes with signals on neighboring copper pairs. => Not enough capacity for every flat.
[19:01:07] <selwyn> is internet speed that important for a local area, though
[19:01:14] <gilberth> shka: You can, but you get a shared medium. When people get back from work the bandwidth drops considerably.
[19:01:41] <shka> right
[19:01:51] <gilberth> selwyn: Is 384kbps with like 20% packet loss rate bearable for you?
[19:01:54] <selwyn> there are some local areas in britain that are trying to become tech hubs off of their internet speed but it seems desperate to me
[19:02:34] <selwyn> gilberth: internet speed is relatively important for me but it is negotiable
[19:03:12] <selwyn> i would not consider internet speed very important at all when deciding where to move/set up a business
[19:03:16] <gilberth> selwyn: I am talking about .384Mbps. That's 300x slower than 100MBps; on a dry day.
[19:04:44] <gilberth> On a wet day you often get timeouts because of the packet drop rate and flow control kicks in to lower that speed further. So we talk of barely above old school analogue modem speed.
[19:06:01] <shka> i honestly don't understand why cable TV was envisioned as a public infrastructure project 
[19:06:17] <selwyn> lobbying?
[19:06:30] <gilberth> 384kbps is 38KB/s. Or 21.3s for 1MB to be transfered.
[19:06:41] <selwyn> lol
[19:08:30] <gilberth> shka: It was about private TV. The conservative party felt that public broadcast was too leftish. And cable TV was thought being necessary for private TV and they hoped that private TV would be less leftish.
[19:09:38] <gilberth> Throw in some classical corruption. For rather close friends of the government benefitting from private TV.
[19:10:45] <gilberth> So we have to thank Helmut Kohl for that. The former chancellor Helmut Schmidt from the social democrats wanted the fiber. Kohl wanted TV.
[19:11:27] <gilberth> Imagine we would have completely wired up with fiber-to-the-home by 1990. That would have been terrific.
[19:12:48] <gilberth> *sigh* Germany once was innovative. Then TV killed that. ;-(
[19:13:43] <shka> ~~TV killed German star~~
[19:14:06] <shka> https://www.youtube.com/watch?v=W8r-tXRLazs
[19:14:06] -ixelp- The Buggles - Video Killed The Radio Star (Official Music Video) - YouTube
[19:15:57] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[19:16:19] <shka> gosh, just reading up on the spacex starship news
[19:16:43] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[19:16:43] <gilberth> Well, we still were in the 90s. ISDN was relatively wide-spread. And ISDN is an improvement over POTS. All digital with two 64kbps channels. Used for digital voice, but also for data links. With a very low latency. In fact I preferred to use a 128kbps ISDN link (you could combine those two channels) over DSL in 2005 for an interactive SSH login. Then it was downhill.
[19:17:38] <shka> i swear to God, if spacex wasn't successful company i would consider Elon Musk to be a grifter 
[19:18:08] <shka> And i may still consider him a con-man regardless
[19:18:34] <shka> tesla is certainly overvalued 
[19:19:25] <gilberth> And about infrastructure in general. Germany is in very bad shape. We have a lot of bridges that need to be replaced. Often speed of traffic is already limited to put less stress on those bridges. And roads are in bad shape in general.
[19:20:39] <MichaelRaskin> shka: recursive con: everyone know Musk is good at confidence plays and expect him to pull off a con at regulators when pushing for self-driving approval
[19:21:01] <gilberth> At times I wonder where all the taxes go that I payed. And I payed a real lot of taxes.
[19:21:43] <shka> MichaelRaskin: i think that there is more hope in that utility provider tesla
[19:22:02] <shka> at least that makes slightly more sense to me
[19:22:12] <pjb> gilberth: in the pockets of the politicians, and their friends at pfizzer.
[19:22:33] <shka> self-driving is cool and all, but does not mean that they will be first to actually do that
[19:22:48] <shka> or it will be that big of a deal
[19:23:07] <MichaelRaskin> First to do or first to win approval?
[19:23:24] <shka> both
[19:28:07] <shka> anyway, Tesla market cap / number of cars sold per year = millions of dollars
[19:28:12] <shka> and that is is just not right
[19:28:56] <MichaelRaskin> Wait, you want to say that 20× revenue market cap is not right? Welcome to the completely generally unhinged economy
[19:30:20] <shka> more like 1000 times revenue market cap
[19:30:38] <shka> and how tesla actually made a profit?
[19:30:45] <shka> ... via a bitcoin
[19:30:46] <MichaelRaskin> Gross revenue or profit?
[19:30:55] <shka> profit
[19:31:09] <shka> btw, has bitcoin prices finally crashed?
[19:31:14] <MichaelRaskin> Market cap has been disconnected from profit for quite a bit now
[19:31:33] <shka> yes, and i think that it is problematic to say the least
[19:31:36] <MichaelRaskin> Tesla did have non-bitcoin profit, too, as far as I remember
[19:32:29] <MichaelRaskin> Also note that Tesla does have some material barriers of entry around their position, wiping out Tesla will drop global electric car shipments for quite a while
[19:34:00] <shka> sure
[19:34:27] <shka> iirc Tesla has also some dealing with the Chinese government 
[19:34:34] <shka> that Shanghai factory
[19:36:51] <MichaelRaskin> A more interesting question is what is their reliance on China for out of China shipments
[19:37:12] <shka> that i don't know
[19:37:32] <shka> but simple fact that Tesla is valued more then VW and Toyota combined is just silly
[19:38:08] <shka> especially since toyota is working on that solid state battery 
[19:38:42] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[19:39:01] <MichaelRaskin> Lab work is high risk…
[19:39:38] <shka> sure, but Toyota can afford that risk
[19:40:08] <MichaelRaskin> Musk is good both at cons and at shipping something, which makes it easier to maintain the idea that the current Tesla batteries — actually being shipped today — are good enough for practical cars
[19:40:22] <MichaelRaskin> I am not saying this lab work should be counted against the cap
[19:40:48] <MichaelRaskin> Just that people don't put too much faith into counting it in favour of the cap now
[19:42:33] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[19:44:48] <shka> well, sometimes it looks like musk is just a cult leater
[19:44:51] <shka> *leader
[19:45:11] <shka> he is literally worshiped 
[19:46:43] <gilberth> At least Musk has some visions.
[19:47:35] <SAL9000> some vision, or some visions? :-)
[19:47:40] <shka> gilberth: i don't know about that 
[19:47:42] <SAL9000> the latter fits with the "cult leader" part
[19:47:56] <shka> cars, electric or not, won't scale
[19:48:12] <gilberth> In contrast to Bezos who runs a Ponzi scheme essentially.
[19:48:19] <shka> as for SpaceX... it is high risk/high reward route 
[19:48:36] <shka> no super heavy = no starlink for instance 
[19:48:47] <shka> and super heavy... is technically challenging 
[19:49:15] <gilberth> I don't believe that electric cars would do any good. That's a red herring.
[19:49:40] <shka> gilberth: and hyperloop, boring company...
[19:50:10] <shka> that's why i said that if not for spaceX i would consider musk to be a grifter 
[19:50:27] <gilberth> Yeah, I agree.
[19:52:41] <MichaelRaskin> Well, I think boring company actually digs something at the very least?
[19:53:08] <shka> yeah, they have digged few miles of tunnels
[19:53:13] <MichaelRaskin> I think he doesn't personally run hyperloop
[19:53:34] <shka> but i don't see good plan to actually use those tunnels 
[19:53:43] <MichaelRaskin> I mean, a few miles is not that little, at least enough to wait and see how that Las Vegas system goes
[19:54:35] <MichaelRaskin> (In terms of digging)
[19:54:36] <selwyn> i was surprised to learn recently that they came up with viable plans for the channel tunnel in the mid 19th century
[19:56:13] <MichaelRaskin> Speaking of risky visions, there is also Neuralink, though
[19:56:59] <selwyn> hm
[19:57:15] <MichaelRaskin> But I would say that both SpaceX and Tesla deliver physical things that generally work at a serial scale
[19:58:33] <MichaelRaskin> Which doesn't mean Musk avoids playing con games. He just does not limit himself to con games.
[19:59:34] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 268 seconds)
[20:01:11] *** Joins: aeth (~aeth@user/aeth)
[20:10:14] *** Joins: rogersm (~rogersm@90.166.180.250)
[20:13:13] *** Joins: dra (~dra@2a04:4540:6407:f800:ddd1:8fac:a809:c56e)
[20:13:14] <dra> Hello!
[20:16:07] <gilberth> Hello dra!
[20:18:11] <rotateq> dra!
[20:18:23] <rotateq> and gilberth! merry lispmas
[20:25:03] *** nckxmas is now known as nckx
[20:27:28] <contrapunctus> Merry Grav-Mass, folks 😏
[20:27:43] *** Quits: treflip (~user@user/treflip) (Quit: ERC (IRC client for Emacs 27.2))
[20:27:45] <contrapunctus> And happy Public Domain Day in advance 😁
[20:28:40] <gilberth> Public domain? Not possible here.
[20:29:04] <edgar-rft> no domaining allowed in public
[20:31:20] <rotateq> sorry i was not here a longer time, just a bit active in the other channels
[20:42:43] <shka> that club-drf algorithm is mostly suited to getting very small random forests
[20:43:21] <shka> otherwise it is better to simply build desired forest from 0
[20:46:53] <edgar-rft> what algorithm is needed for buiding rain-forests?
[20:47:18] <rotateq> edgar-rft: Bitte ein Bit.
[20:57:01] <edgar-rft> rain-forests, not beer-forests :-)
[20:57:28] <rotateq> but, but, it helped saving those! or not?
[20:57:56] <rotateq> in the beginning of TAoCP 4A Knuth has this slogan too :P
[20:59:45] <edgar-rft> throw all idiots out of germany an replant the german forests instead
[21:00:08] <rotateq> yes
[21:00:22] <rotateq> but wait, .. there's some hook for us to it
[21:00:30] <gilberth> Do we have enough idiots? And if we throw them out, who would plant the trees then?
[21:00:33] <rotateq> oh okay sure, just the idiots
[21:01:10] <contrapunctus> gilberth: let's start a revolution in the countries that don't permit public domain 😏
[21:02:08] <gilberth> And would there be anybody be left in Saxony or Bavaria? /me runs and takes cover.
[21:03:39] <gilberth> contrapunctus: I am not so sure, whether I actually would want a revolution. Most of the time you wake up to recognize that things got worse after a revolution.
[21:08:36] *** Quits: dra (~dra@2a04:4540:6407:f800:ddd1:8fac:a809:c56e) (Quit: Leaving)
[21:48:33] *** Joins: dra (~dra@2a04:4540:6407:f800:2d34:8e98:9953:8f90)
[23:15:26] <shka> any cool tricks to make slime repl better?
[23:16:12] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[23:16:19] <selwyn> sigh
[23:16:28] <gilberth> shka: Define "better".
[23:16:32] <selwyn> trying to do the ravenholm no bullet achievement
[23:16:38] <selwyn> didn't realise you couldn't use the crowbar
[23:17:11] <gilberth> HL2?
[23:17:22] <shka> gilberth: well, i am looking for external perspective on this
[23:18:18] <selwyn> ofc
[23:18:35] <selwyn> i like the slime repl
[23:19:06] <gilberth> shka: Well, the stream implementation is s***. Things like STREAM-LINE-LENGTH and the current column are off. Also too many FINISH-OUTPUT waiting for a round trip. I have some quick, dirty and hot fixes.
[23:19:37] *** Joins: Alfr (~Alfr@user/alfr)
[23:20:31] <gilberth> selwyn: Which one was it with the "Use exactly one bullet" achievement? That was fun.
[23:21:02] <selwyn> thats in ep1 i think
[23:21:10] <drakonis> selwyn: gravity gun, my guy
[23:21:20] <drakonis> ravenholm is hl2 not ep1
[23:21:36] * gilberth 's favorite weapon is radiators ripped off from the wall.
[23:22:25] <Duuqnd> drakonis: Yes, but the "use exactly one bullet" achievement was in Episode 1
[23:22:34] <Duuqnd> (it's called "The One Free Bullet" btw)
[23:23:19] <selwyn> i prefer the saw blades
[23:23:24] <gilberth> drakonis: I am aware. But I am puzzled because Ravenholm without bullets ought to be easy. A lot of saw blades and gas bottles available.
[23:23:59] <shka> gilberth: yes, but there are those fast zombies 
[23:24:20] <gilberth> shka: Just ignore those. :-)
[23:25:38] <drakonis> ravenholm is the best level by far
[23:25:46] <drakonis> scary? not even
[23:25:47] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[23:27:44] *** Joins: aeth (~aeth@user/aeth)
[23:29:07] <selwyn> the hl universe ought to be terrifying, though they don't go for that angle
[23:29:25] <selwyn> they seem to have pushed it harder in the hl2 beta
[23:29:46] <selwyn> iirc everyone has to wear gas masks to protect from the toxic atmosphere and children are enslaved by the combine
[23:32:32] <Duuqnd> Even in the released version it feels like HL2 should feel a lot more oppressive and/or scary than it does
[23:33:06] <Duuqnd> I blame GMod
[23:33:28] <sham1> GMod and I suppose by proxy royalty-free music
[23:34:02] <selwyn> damn it gave me the achievement anyway :D
[23:34:07] <selwyn> it was not that hard though
[23:34:13] <selwyn> the gnome in the rocket is surely the hardest
[23:35:43] <Duuqnd> I did that one once and the game just didn't give me the achievement
[23:35:52] <selwyn> :(
[23:36:23] <selwyn> i heard about someone who got the gnome there but closed the rocket hatch by mistake
[23:36:31] <Duuqnd> Maybe I did sv_cheats at one point and forgot about it but the gnome achievement was my whole reason for playing so I don't think I'd do that
[23:39:30] <gilberth> I tried the gnome achievement maybe twice, but just lost patience.
[23:44:19] <gilberth> And I never managed to do the "do not touch the sand" achievement. I thought I did, but the game believed otherwise.
[23:47:15] <selwyn> how did gmod make it less scary
[23:49:13] <shka> club-drf is not very useful algorithm
[23:49:15] <shka> eh
[23:50:18] <selwyn> just realised the thumpers are the opposite of what you get in dune
[23:50:29] <selwyn> regular beats keep the dangerous sand creatures away instead of attracting them
