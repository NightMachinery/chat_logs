[00:01:17] *** Quits: xackus (~xackus@pppoe8.w.knc.pl) (Ping timeout: 256 seconds)
[00:12:01] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:16:08] *** Joins: ur5us (~ur5us@203.86.198.200)
[00:27:23] *** Quits: nokierae (~textual@024-178-231-238.res.spectrum.com) (Ping timeout: 264 seconds)
[00:27:43] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:43:54] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[01:22:35] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:23:31] *** Quits: kenran (~kenran@200116b82b539f00f3f309ebb0e24d35.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[01:38:40] *** Quits: novakane (~novakane@user/novakane) (Quit: WeeChat 3.3)
[01:48:57] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[02:12:56] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:02] *** Joins: [deleted] (~livoreno@user/notzmv)
[02:28:32] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[02:31:56] *** Quits: tgschultz_ (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:32:25] *** Joins: tgschultz_ (~UserNick@047-034-058-084.res.spectrum.com)
[03:29:57] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:55:49] *** Quits: rgrinberg (~textual@190.113.102.153) (Ping timeout: 250 seconds)
[04:00:29] *** Quits: fleg (64bf4386e9@user/fleg) (Remote host closed the connection)
[04:17:32] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[04:25:37] *** Joins: Tekk_ (~tekk@cpe-76-182-45-53.nc.res.rr.com)
[04:28:11] *** Quits: Tekk (~tekk@static-198-54-134-153.cust.tzulo.com) (Ping timeout: 256 seconds)
[04:34:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:45:30] *** Tekk_ is now known as Tekk
[04:47:46] *** Joins: cr1901_pidgin (~William@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:01:22] *** cr1901_pidgin is now known as cr1901
[05:02:02] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[05:02:16] *** Joins: rgrinberg (~textual@190.113.102.153)
[05:03:25] *** kandinsk1 is now known as kandinski
[05:08:34] *** Joins: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:08:54] *** Parts: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) ()
[05:09:10] *** Joins: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:21:10] *** Quits: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Quit: Leaving)
[05:21:25] *** Joins: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:24:06] *** Quits: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Client Quit)
[05:24:20] *** Joins: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:24:30] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:24:38] *** Joins: Guest999 (~Guest999@2600:8803:3806:6d00:76a5:5440:8e70:b929)
[05:25:52] *** Joins: rgrinberg (~textual@190.113.102.153)
[05:28:45] *** Quits: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Client Quit)
[05:28:58] *** Joins: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:30:29] *** Quits: cr19011 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Remote host closed the connection)
[05:32:32] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[05:32:49] *** cr1901 is now known as cr1901_pidgin
[05:33:08] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:38:16] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Quit: Leaving)
[05:38:40] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:40:21] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Client Quit)
[05:41:11] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[05:41:15] *** Quits: Guest999 (~Guest999@2600:8803:3806:6d00:76a5:5440:8e70:b929) (Quit: Ping timeout (120 seconds))
[05:45:18] *** Quits: cr1901_pidgin (~William@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Quit: Leaving.)
[05:52:44] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[05:53:16] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[05:55:06] *** Quits: lumo_e (~enrico@151.29.49.198) (Quit: Quit)
[05:58:43] *** Joins: earnestly (~earnest@user/earnestly)
[06:04:23] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Quit: Leaving)
[06:05:33] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[06:09:52] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Client Quit)
[06:12:07] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:13:35] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[06:17:07] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Client Quit)
[06:18:32] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[06:19:13] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Remote host closed the connection)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:33:11] *** Joins: sonny (~sonny@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca)
[06:33:43] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:38:36] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[06:38:38] *** cr1901_ is now known as cr1901
[06:53:43] <tgschultz_> interesting. I've found a situation in a multithreaded application where returning an error on the main thread causes it to lock up.
[06:53:50] *** tgschultz_ is now known as tgschultz
[07:05:22] *** Parts: sonny (~sonny@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca) (Good Bye)
[07:07:47] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Quit: Client limit exceeded: 20000)
[07:07:59] *** Quits: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3) (Quit: Client limit exceeded: 20000)
[07:08:47] *** Quits: superdeluxe[m] (~superdelu@2001:470:69fc:105::1:11b) (Quit: Client limit exceeded: 20000)
[07:13:40] <tgschultz> best guess: main thread has thrown the error but is waiting for the other thread (infinitely running) to end before dumping? Is there a pattern for handling this situation I'm missing?
[07:14:09] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[07:14:22] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[07:14:34] *** Joins: superdeluxe[m] (~superdelu@2001:470:69fc:105::1:11b)
[07:17:16] <tgschultz> oh, duh: don't defer thread.join() on a thread that runs indefinitely.
[07:23:33] *** Quits: earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[07:27:29] *** Joins: earnestly (~earnest@user/earnestly)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:23] *** Parts: felinae (~felinae@user/felinae) ()
[08:06:41] *** Joins: losinggeneration (~quassel@64.225.54.254)
[08:13:51] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:13:51] *** Quits: bblack (~bblack@wikimedia/bblack-WMF) (*.net *.split)
[08:13:51] *** Quits: harley_l (~quassel@64.225.54.254) (*.net *.split)
[08:13:51] *** Quits: wozeparrot (~wozeparro@user/wozeparrot) (*.net *.split)
[08:13:51] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[08:17:26] *** Quits: tauoverpi (~tau@c83-250-20-167.bredband.tele2.se) (Quit: WeeChat 3.3)
[08:18:25] *** Joins: cursey (~cursey@user/cursey)
[08:18:25] *** Joins: bblack (~bblack@wikimedia/bblack-WMF)
[08:18:25] *** Joins: wozeparrot (~wozeparro@user/wozeparrot)
[08:18:25] *** Joins: rb (~augh@theguntretort.com)
[08:29:42] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[08:56:06] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:58:17] *** Joins: l1x (uid1954@tinside.irccloud.com)
[09:50:03] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[10:06:36] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[10:17:21] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[10:22:00] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[10:25:56] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[10:44:01] *** Quits: orhun (~orhun@archlinux/trusteduser/orhun) (Ping timeout: 250 seconds)
[10:44:28] *** Joins: orhun (~orhun@archlinux/trusteduser/orhun)
[10:55:52] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Remote host closed the connection)
[10:56:11] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312)
[11:05:29] *** Quits: tgschultz (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[11:06:03] *** Joins: tgschultz (~UserNick@047-034-058-084.res.spectrum.com)
[11:10:49] *** Quits: binarycat (~binarycat@35.24.192.117) (Remote host closed the connection)
[11:11:06] *** Joins: binarycat (~binarycat@35.24.192.117)
[11:40:31] <bgiannan> still can't build zig on my mac: now it can't find `<machine/endian.h>`
[11:55:02] *** Joins: novakane (~novakane@user/novakane)
[11:55:14] <bgiannan> i find it in /Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk/System/Library/Frameworks/Kernel.framework/Versions/A/Headers/arm/endian.h
[11:55:24] <bgiannan>   hum no not that one
[11:57:50] <bgiannan> /Library/Developer/CommandLineTools/SDKs/MacOSX11.3.sdk/usr/include/machine/endian.h
[11:57:52] <bgiannan> there
[11:58:49] *** Joins: cr1901_ (~cr1901@2601:8d:8600:911:482a:c770:92f8:6df7)
[11:59:17] <bgiannan> seems like it stopped working after i updated xcode and command line tools
[11:59:30] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:fd20:3ea1:87e4:3312) (Read error: Connection reset by peer)
[12:13:24] <bgiannan> andrewrk, any idea?
[12:20:53] *** Joins: freshcoffee2 (~fresh@user/freshcoffee)
[12:23:45] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[12:23:49] *** Quits: freshcoffee1 (~fresh@user/freshcoffee) (Ping timeout: 268 seconds)
[12:24:25] <bgiannan> ah !
[12:24:27] <bgiannan> Ignoring CMAKE_OSX_SYSROOT value:
[12:24:29] <bgiannan>    /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
[12:24:31] <bgiannan>   because the directory does not exist
[12:25:47] <bgiannan> added -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk which is the correct directory and now it works
[13:22:56] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:46:58] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[13:57:59] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[13:58:11] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:59:16] *** Quits: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d454) (Ping timeout: 245 seconds)
[14:04:55] *** Joins: dbuckley (~dbuckley@2601:182:c77f:c13b:ae1f:6bff:fe6c:d454)
[14:07:35] <Franciman> my first zig test will be a parser per s-exprs
[14:21:31] *** Joins: earnestly (~earnest@user/earnestly)
[14:23:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[14:23:26] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[14:32:20] <Franciman> are async functions coroutines?
[14:32:28] <Franciman> or do they need to run on different threads?
[14:42:54] <Franciman> uhm I am confused :P
[14:43:12] <Franciman> I wanted to define a generator, i.e. a function that yields many results
[14:43:21] <Franciman> so that I can await many times
[14:43:26] <Franciman> but I think I am mistaken 
[14:45:08] <ifreund> Franciman: async 
[14:45:18] <ifreund> let me try again 
[14:45:45] <ifreund> Franciman: async functions in zig are lower level than coroutines, they can be used to implement coroutines though
[14:46:28] <ifreund> they are just a way to suspend execution of a function and resume it at some later point in the program
[14:46:53] *** Joins: fleg (64bf4386e9@user/fleg)
[14:47:03] *** Quits: LostKobrakai (~LostKobra@dia.uberspace.de) (Quit: ZNC 1.8.2 - https://znc.in)
[14:47:12] <ifreund> note that this language feature is currently at the proof of concept phase, it's not as mature as the rest of the language
[14:47:14] *** Joins: LostKobrakai (~LostKobra@dia.uberspace.de)
[14:47:41] <Franciman> I understand, thanks
[14:48:14] <ifreund> you can use them to implement generators fwiw, but it's pretty hacky
[14:49:19] <ifreund> https://github.com/ziglang/zig/issues/5611
[14:50:38] <Franciman> I see
[14:53:03] <Franciman> thanks ifreund 
[14:53:13] <ifreund> no problem!
[14:54:09] <Franciman> then, another thing I wanted to ask is if there is any stdlib support for unicode characters handling
[14:54:49] <Franciman> I am super visually impaired
[14:54:51] <Franciman> found it
[14:54:53] <Franciman> sorry
[15:02:58] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:09:42] *** Quits: tgschultz (~UserNick@047-034-058-084.res.spectrum.com) (Quit: Going offline, see ya! (www.adiirc.com))
[15:10:18] *** Joins: tgschultz (~UserNick@047-034-058-084.res.spectrum.com)
[15:11:06] <ifreund> no worries :D
[15:11:40] <ifreund> Franciman: if you need unicode handling beyond what the std provides see: https://github.com/jecolon/ziglyph
[15:13:18] *** Joins: nyah (~nyah@94.6.71.219)
[15:17:43] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[15:18:44] *** Quits: cepheus (~cepheus@user/cepheus) (Remote host closed the connection)
[15:20:04] *** Quits: lkronnus (~kron@179097066201.provale.com.br) (Read error: Connection reset by peer)
[15:29:32] <Franciman> yep very useful, thanks
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:34] *** Quits: siraben (~siraben@user/siraben) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: josias (~mottmatri@2001:470:69fc:105::b6c) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: AtomToast (~atomtoast@2001:470:69fc:105::8a5) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: motiejus (~motiejus@2001:470:69fc:105::38fb) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: moats (~oats@user/oats) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: ugla (~ugla@2001:470:69fc:105::2b5) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: devast8a (~devast8a@2001:470:69fc:105::3f46) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: midi[m] (~justmidim@2001:470:69fc:105::c739) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: M9S[m] (~ninesmatr@2001:470:69fc:105::d9a0) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: polykernel (~polykerne@user/polykernel) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: cartesius[m] (~cartesius@2001:470:69fc:105::da2f) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: Nuss[m] (~nussnussc@2001:470:69fc:105::912a) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: LevyElara[m] (~tauoverpi@2001:470:69fc:105::728) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: gpanders (~gpanders@user/gpanders) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: barath (~barath@2001:470:69fc:105::21a) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: bfredl (~bfredl@2001:470:69fc:105::183) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: acd8 (~acd84c8cc@2001:470:69fc:105::916) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: heartles (~heartles@2001:470:69fc:105::f8b) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: superdeluxe[m] (~superdelu@2001:470:69fc:105::1:11b) (Quit: Bridge terminating on SIGTERM)
[15:40:56] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 245 seconds)
[15:41:15] *** Quits: leon-p (~leon-p@2a02:8108:96c0:1810:98c5:fbff:fed4:4498) (Quit: leon-p)
[15:42:30] *** Joins: leon-p (~leon-p@2a02:8108:96c0:1810:8c26:afff:fe28:7be6)
[15:42:57] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:56:43] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[15:58:46] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[15:58:47] *** Joins: siraben (~siraben@user/siraben)
[15:58:47] *** Joins: bfredl (~bfredl@2001:470:69fc:105::183)
[15:58:47] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[15:58:47] *** Joins: ugla (~ugla@2001:470:69fc:105::2b5)
[15:58:47] *** Joins: heartles (~heartles@2001:470:69fc:105::f8b)
[15:58:54] *** Joins: polykernel (~polykerne@user/polykernel)
[15:58:55] *** Joins: CrystalGamma[m] (~crystalga@2001:470:69fc:105::1011)
[15:58:58] *** Joins: LevyElara[m] (~tauoverpi@2001:470:69fc:105::728)
[15:58:58] *** Joins: midi[m] (~justmidim@2001:470:69fc:105::c739)
[15:58:58] *** Joins: Nuss[m] (~nussnussc@2001:470:69fc:105::912a)
[15:58:58] *** Joins: josias (~mottmatri@2001:470:69fc:105::b6c)
[15:58:58] *** Joins: voroskoi[m] (~voroskoif@2001:470:69fc:105::e17)
[15:58:58] *** Joins: darkbit[m] (~darkbitst@2001:470:69fc:105::3ae3)
[15:58:58] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[15:58:58] *** Joins: blackcatter[m] (~blackcatt@2001:470:69fc:105::e10c)
[15:58:58] *** Joins: cartesius[m] (~cartesius@2001:470:69fc:105::da2f)
[15:58:59] *** Joins: M9S[m] (~ninesmatr@2001:470:69fc:105::d9a0)
[15:58:59] *** Joins: LorisCro[m] (~kristoff-@2001:470:69fc:105::1:2521)
[15:58:59] *** Joins: superdeluxe[m] (~superdelu@2001:470:69fc:105::1:11b)
[15:59:00] *** Joins: tomku[m] (~tomkumozi@2001:470:69fc:105::1:2fcb)
[15:59:00] *** Joins: moats (~oats@user/oats)
[15:59:00] *** Joins: AtomToast (~atomtoast@2001:470:69fc:105::8a5)
[15:59:01] *** Joins: barath (~barath@2001:470:69fc:105::21a)
[15:59:01] *** Joins: acd8 (~acd84c8cc@2001:470:69fc:105::916)
[15:59:01] *** Joins: gpanders (~gpanders@user/gpanders)
[16:18:10] *** Joins: frmdstryr (~jrm@172.58.203.10)
[16:20:00] *** Quits: siraben (~siraben@user/siraben) (Quit: Client limit exceeded: 20000)
[16:20:34] *** Quits: motiejus (~motiejus@2001:470:69fc:105::38fb) (Quit: Client limit exceeded: 20000)
[16:20:39] *** Quits: devast8a (~devast8a@2001:470:69fc:105::3f46) (Quit: Client limit exceeded: 20000)
[16:21:49] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Quit: Client limit exceeded: 20000)
[16:21:49] *** Quits: heartles (~heartles@2001:470:69fc:105::f8b) (Quit: Client limit exceeded: 20000)
[16:28:09] *** cr1901_ is now known as cr1901
[16:30:41] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 256 seconds)
[16:32:25] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[16:39:55] *** Joins: xackus (~xackus@pppoe8.w.knc.pl)
[17:00:36] *** Quits: leon-p (~leon-p@2a02:8108:96c0:1810:8c26:afff:fe28:7be6) (Quit: leon-p)
[17:03:46] <ifreund> check out what I just stumbled across: https://git.sr.ht/~mil/mepo
[17:04:16] *** Joins: leon-p (~leon-p@2a02:8108:96c0:1810:caa:4aff:fe61:ff98)
[17:04:27] *** Joins: devast8a (~devast8a@2001:470:69fc:105::3f46)
[17:04:28] *** Joins: motiejus (~motiejus@2001:470:69fc:105::38fb)
[17:04:28] *** Joins: siraben (~siraben@user/siraben)
[17:04:28] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[17:04:28] *** Joins: heartles (~heartles@2001:470:69fc:105::f8b)
[17:12:44] <Franciman> awesome
[17:32:16] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:36:30] *** Joins: arkurious (~arkurious@user/arkurious)
[17:44:19] *** Joins: Guest43 (~Guest43@188.130.155.151)
[17:44:33] *** Quits: Guest43 (~Guest43@188.130.155.151) (Client Quit)
[18:08:48] *** Quits: leon-p (~leon-p@2a02:8108:96c0:1810:caa:4aff:fe61:ff98) (Quit: leon-p)
[18:18:13] *** Joins: rgrinberg (~textual@200.5.63.76)
[18:29:07] <Franciman> is it convenient to return an arraylist ?
[18:29:14] <Franciman> or is it better to always return a pointer to an array list?
[18:29:32] <Franciman> (in terms of size of the return type)
[18:31:01] <Franciman> wait I don't understand something
[18:31:07] <Franciman> if I do:
[18:32:01] <Franciman> var array = ArrayList(u32).initCapacity(alloc, 200);
[18:32:09] <Franciman> then I am in charge of doing array.dealloc(), right?
[18:32:12] <Franciman> deinit*
[18:32:14] <Franciman> sorry
[18:42:09] *** Quits: xackus (~xackus@pppoe8.w.knc.pl) (Ping timeout: 256 seconds)
[18:50:41] <Franciman> ok got this
[18:50:54] <Franciman> still asking myself if it is ok to return ArrayLists
[18:51:13] <Franciman> or I had better return a pointer to an ArrayList (therefore dynamically allocating it)
[18:51:15] <Franciman> from a function
[18:51:47] <dutchie> you can return an ArrayList. the more common pattern is to use .toOwnedSlice
[18:52:43] <dutchie> generally "who is in charge of doing .deinit()" is a question of ownership
[18:53:10] <Franciman> ah so ArrayList is about constructing a slice, I see
[18:53:12] <dutchie> having done a bit of Rust before coming to Zig, having a mental version of the borrow checker running is very useful
[18:53:38] <Franciman> I see
[18:53:45] <Franciman> but when I run .toOwnedSlice
[18:53:50] <Franciman> is a full copy done?
[18:53:54] <dutchie> i guess it depends on whether you view ArrayList as part of your API or an implementation detail, both are valid depending on the circumstance
[18:53:56] <dutchie> no
[18:53:57] <Franciman> or is just the pointer swapped?
[18:54:01] <dutchie> it just swaps out the pointer
[18:54:06] <Franciman> awesome
[18:54:08] <Franciman> I like this
[18:54:18] <dutchie> you are left with a new slice pointing at the memory and an empty arraylist ready to reuse if you need to
[18:54:38] <Franciman> well I put the arraylist in an abstract syntax tree
[18:54:42] <Franciman> but there I won't change it
[18:54:44] <Franciman> just read it
[18:54:47] <Franciman> so the slice is better
[18:54:57] <Franciman> thanks a lot dutchie 
[18:55:10] <dutchie> yeah, then you can enforce that by making it []const T
[19:08:44] *** daex_ is now known as daex
[19:27:38] *** Joins: Tekk_ (~tekk@86.106.143.191)
[19:30:23] *** Quits: Tekk (~tekk@cpe-76-182-45-53.nc.res.rr.com) (Ping timeout: 264 seconds)
[19:37:18] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[19:38:49] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[19:41:02] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[19:42:28] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[19:51:52] *** Joins: Arw (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[19:53:03] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:00:57] *** Joins: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801)
[20:05:29] *** Joins: koakuma (~koa@user/koakuma)
[20:07:25] *** Quits: notapenguin (~ryu@2804:14d:5680:8a2c:75cf:7f59:516a:b801) (Quit: WeeChat 3.3)
[20:11:20] *** Quits: slothby (~JoshAshby@irc.isin.space) (Quit: brb ... maybe)
[20:19:32] *** Joins: slothby (~JoshAshby@irc.isin.space)
[20:21:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[20:37:38] *** Quits: leah2 (~leah@vuxu.org) (Remote host closed the connection)
[20:39:34] *** Joins: leah2 (~leah@vuxu.org)
[20:48:33] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:51:14] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:56:12] *** Joins: notzmv (~zmv@user/notzmv)
[21:02:42] *** Quits: ashn (~ashn@2601:45:8080:6160::581c) (Quit: Leaving)
[21:10:55] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[21:12:58] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Remote host closed the connection)
[21:22:38] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[21:29:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[21:31:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:37:26] *** Quits: Tekk_ (~tekk@86.106.143.191) (Ping timeout: 260 seconds)
[21:41:42] <Franciman> if I don't have any constraint, would you suggest using zig's GeneralPurposeAllocator 
[21:41:48] <Franciman> or c's malloc/free ?
[21:44:22] *** Quits: af (~af@awalgarg.me) (Ping timeout: 260 seconds)
[21:57:24] *** Joins: af (~af@awalgarg.me)
[22:06:43] *** Quits: frmdstryr (~jrm@172.58.203.10) (Ping timeout: 256 seconds)
[22:15:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:16:27] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[22:17:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:20:47] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 264 seconds)
[22:24:14] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:25:19] *** Joins: frmdstryr (~jrm@172.58.203.10)
[22:27:03] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:29:47] *** Quits: rgrinberg (~textual@200.5.63.76) (Client Quit)
[22:32:29] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:33:14] *** Joins: bindu (~bindu@user/bindu)
[22:34:15] *** Joins: livoreno (~livoreno@user/notzmv)
[22:37:25] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[22:39:48] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[22:39:48] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[22:39:48] *** Joins: tane (~tane@user/tane)
[22:42:52] *** Joins: haliucinas (~haliucina@5.20.153.21)
[22:48:05] *** Quits: frmdstryr (~jrm@172.58.203.10) (Ping timeout: 256 seconds)
[22:52:33] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:05:02] *** Joins: greaser|q (greaser@antihype.space)
[23:06:05] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[23:06:05] *** Joins: greaser|q (greaser@user/greasemonkey)
[23:09:52] <Franciman> uhm
[23:09:55] <Franciman> so
[23:10:10] <Franciman> I can't have mutually recursive functions with error sets?
[23:12:56] <Franciman> ah maybe it's just an inference problem
[23:19:21] *** Quits: fleg (64bf4386e9@user/fleg) (Read error: Connection reset by peer)
[23:28:47] <viashimo> Franciman: you need explicity error sets for recursive functions
[23:28:50] <viashimo> explicit*
[23:33:07] *** Joins: rgrinberg (~textual@200.5.63.76)
[23:51:00] *** Joins: mplio (~mplio@2a02-a452-be1f-1-fe3f-dbff-fe02-92e4.fixed6.kpn.net)
