[03:00:06] *** Joins: Guest56 (~textual@209.51.86.47)
[03:08:30] *** Quits: Guest56 (~textual@209.51.86.47) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:51] *** Joins: venue (~venue@209.51.86.47)
[03:13:43] *** Quits: venue (~venue@209.51.86.47) (Quit: Textual IRC Client: www.textualapp.com)
[03:13:59] *** Joins: venue (~venue@209.51.86.47)
[03:25:09] *** Parts: venue (~venue@209.51.86.47) (adios)
[03:27:34] *** Joins: venuex (~venue@209.51.86.47)
[03:33:12] *** Quits: venuex (~venue@209.51.86.47) (Changing host)
[03:33:12] *** Joins: venuex (~venue@user/venue)
[03:45:27] *** Joins: postmodern (~postmoder@user/postmodern)
[03:46:16] <postmodern> when did jruby switch from jruby-bin-X.Y.Z.tar.gz to jruby-dist-X.Y.Z-bin.tar.gz archive names?
[03:46:16] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[04:04:21] <postmodern> hmm appears to have changed when jruby switched to releasing from maven.org.
[05:06:56] <postmodern> there, fixed the file names in the ruby-versions checksums database, so ruby-install will correctly verify the downloaded jruby release files again. https://github.com/postmodern/ruby-versions/issues/53
[05:31:27] *** Quits: postmodern (~postmoder@user/postmodern) (Read error: Connection reset by peer)
[07:45:12] *** Quits: venuex (~venue@user/venue) (Quit: was tired)
[08:52:26] *** Joins: mattil (~mattil@87-92-63-124.bb.dnainternet.fi)
[09:40:49] *** Quits: mattil (~mattil@87-92-63-124.bb.dnainternet.fi) (Quit: Leaving)
[10:22:03] *** Joins: venue (~venue@user/venue)
[10:23:23] *** Quits: venue (~venue@user/venue) (Client Quit)
[13:02:30] *** Quits: enebo[m] (~enebo@2001:470:69fc:105::e6) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: JulesIvanicGitte (~gittergui@2001:470:69fc:105::3118) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: TimGitter[m] (~gittertir@2001:470:69fc:105::314f) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: ChrisSeatonGitte (~gitterchr@2001:470:69fc:105::30fb) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: basshelal[m] (~basshelal@2001:470:69fc:105::30e7) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: MattPattersonGit (~gitterfid@2001:470:69fc:105::3105) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: kares[m] (~karesmatr@2001:470:69fc:105::30d1) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: byteit101[m] (~byteit101@2001:470:69fc:105::30ec) (Quit: Bridge terminating on SIGTERM)
[13:02:30] *** Quits: kalenp[m] (~kalenpmat@2001:470:69fc:105::3153) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: RobertNicholas[m (~nicholasr@2001:470:69fc:105::3167) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: MarcinMielyskiGi (~gitterlop@2001:470:69fc:105::3134) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: JesseChavezGitte (~gitterjes@2001:470:69fc:105::3122) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: FlorianDoubletGi (~gitterflo@2001:470:69fc:105::310c) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: ahorek[m] (~ahorekmat@2001:470:69fc:105::30e2) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: CharlesOliverNut (~gitterhea@2001:470:69fc:105::311e) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: rebelwarrior[m] (~rebelwarr@2001:470:69fc:105::beba) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: headius (~headius@2001:470:69fc:105::3027) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: GGibson[m] (~mistergib@2001:470:69fc:105::8ddc) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: fzakaria[m] (~fzakariam@2001:470:69fc:105::30f6) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: OlleJonssonGitte (~gitteroll@2001:470:69fc:105::313b) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: TimGitter[m]1 (~gittertim@2001:470:69fc:105::314b) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: RomainManni-Buca (~gitterrma@2001:470:69fc:105::3146) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: danieljrubyquest (~danieljru@2001:470:69fc:105::d505) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: BlaneDabneyGitte (~gitterrae@2001:470:69fc:105::3140) (Quit: Bridge terminating on SIGTERM)
[13:02:31] *** Quits: lopex[m] (~lopexm]@2001:470:69fc:105::3158) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: liamwhiteGitter[ (~gitterlia@2001:470:69fc:105::312d) (Quit: Bridge terminating on SIGTERM)
[13:02:32] *** Quits: KarolBucekGitter (~gitterkar@2001:470:69fc:105::3127) (Quit: Bridge terminating on SIGTERM)
[13:02:38] *** Quits: JasonvanZyl[m] (~jasonvanz@2001:470:69fc:105::dbb4) (Quit: Bridge terminating on SIGTERM)
[13:02:38] *** Quits: XavierNoriaGitte (~gitterfxn@2001:470:69fc:105::3111) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: kai[m]1 (~kaikdeorg@2001:470:69fc:105::c43) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Quit: Bridge terminating on SIGTERM)
[13:02:44] *** Quits: demon36[m] (~demon36ma@2001:470:69fc:105::dc32) (Quit: Bridge terminating on SIGTERM)
[13:05:55] *** Joins: ahorek[m] (~ahorekmat@2001:470:69fc:105::30e2)
[13:18:08] *** Joins: enebo[m] (~enebo@2001:470:69fc:105::e6)
[13:18:09] *** Joins: kai[m]1 (~kaikdeorg@2001:470:69fc:105::c43)
[13:18:09] *** Joins: lopex[m] (~lopexm]@2001:470:69fc:105::3158)
[13:18:09] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[13:18:20] *** Joins: MattPattersonGit (~gitterfid@2001:470:69fc:105::3105)
[13:18:20] *** Joins: byteit101[m] (~byteit101@2001:470:69fc:105::30ec)
[13:18:20] *** Joins: basshelal[m] (~basshelal@2001:470:69fc:105::30e7)
[13:18:20] *** Joins: FlorianDoubletGi (~gitterflo@2001:470:69fc:105::310c)
[13:18:20] *** Joins: XavierNoriaGitte (~gitterfxn@2001:470:69fc:105::3111)
[13:18:20] *** Joins: ChrisSeatonGitte (~gitterchr@2001:470:69fc:105::30fb)
[13:18:20] *** Joins: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100)
[13:18:20] *** Joins: fzakaria[m] (~fzakariam@2001:470:69fc:105::30f6)
[13:18:21] *** Joins: demon36[m] (~demon36ma@2001:470:69fc:105::dc32)
[13:18:21] *** Joins: OlleJonssonGitte (~gitteroll@2001:470:69fc:105::313b)
[13:18:21] *** Joins: BlaneDabneyGitte (~gitterrae@2001:470:69fc:105::3140)
[13:18:21] *** Joins: liamwhiteGitter[ (~gitterlia@2001:470:69fc:105::312d)
[13:18:21] *** Joins: rebelwarrior[m] (~rebelwarr@2001:470:69fc:105::beba)
[13:18:21] *** Joins: RobertNicholas[m (~nicholasr@2001:470:69fc:105::3167)
[13:18:21] *** Joins: TimGitter[m] (~gittertim@2001:470:69fc:105::314b)
[13:18:21] *** Joins: kares[m] (~karesmatr@2001:470:69fc:105::30d1)
[13:18:21] *** Joins: CharlesOliverNut (~gitterhea@2001:470:69fc:105::311e)
[13:18:21] *** Joins: KarolBucekGitter (~gitterkar@2001:470:69fc:105::3127)
[13:18:21] *** Joins: kalenp[m] (~kalenpmat@2001:470:69fc:105::3153)
[13:18:21] *** Joins: JasonvanZyl[m] (~jasonvanz@2001:470:69fc:105::dbb4)
[13:18:21] *** Joins: JulesIvanicGitte (~gittergui@2001:470:69fc:105::3118)
[13:18:21] *** Joins: JesseChavezGitte (~gitterjes@2001:470:69fc:105::3122)
[13:18:21] *** Joins: danieljrubyquest (~danieljru@2001:470:69fc:105::d505)
[13:18:21] *** Joins: MarcinMielyskiGi (~gitterlop@2001:470:69fc:105::3134)
[13:18:21] *** Joins: GGibson[m] (~mistergib@2001:470:69fc:105::8ddc)
[13:18:21] *** Joins: RomainManni-Buca (~gitterrma@2001:470:69fc:105::3146)
[13:18:23] *** Joins: headius (~headius@2001:470:69fc:105::3027)
[13:18:27] *** Joins: TimGitter[m]1 (~gittertir@2001:470:69fc:105::314f)
[18:35:25] *** Joins: venue (~venue@user/venue)
[22:04:52] *** Joins: mattil (~mattil@87-92-63-124.bb.dnainternet.fi)
[22:05:20] <headius> g'day
[22:07:38] <headius> enebo: woot just saw 6777
[22:07:55] <enebo[m]> well not totally woot
[22:08:00] <enebo[m]> it should be now though
[22:08:23] <headius> so the method table change seems to be working out
[22:08:30] <enebo[m]> When I woke up I forgot I pushed that fix before stopping so I did not see it had a single regression
[22:09:03] <enebo[m]> yeah if you look at my PR you will see quite a few changes but most of those were me getting rid of the use of getNonIncludedClass to getOrigin
[22:09:42] <headius> yeah we should have done that a long time ago just to match terminology
[22:09:59] <enebo[m]> sharing the method was a couple of lines to IncludedModuleWrapper with a bunch of removed methods since we do not need to delegate any more
[22:10:26] <enebo[m]> I fixed two other prepend bugs not actually solved by this but they are tiny commits which can be evaluated pretty easily
[22:10:50] <enebo[m]> There is one more I am looking at for constant resolution of a included module which has been prepended
[22:11:13] <headius> ah yeah
[22:11:21] <enebo[m]> I can see if I do ancestors I see the right list but if I walk up superclasses it skips them
[22:11:57] <headius> I wonder if we could just rename PrependedModule
[22:12:07] <headius> it is not something I would ever expect third-party code to care about
[22:12:34] <enebo[m]> we have a lot of checks like 'attribute == other.attribute' to mean things like 'skip this it is prepended' which has made understanding this more difficult
[22:12:52] <enebo[m]> Yeah I thought about that too
[22:13:14] <enebo[m]> I would guess no one should be using it in an instanceof or constructing it directly
[22:13:26] <headius> yeah they do this.methodTable == that.methodTable checks in MRI too which are confusing
[22:14:43] <headius> getOrigin change looks so much better
[22:15:23] <enebo[m]> It also is shorter :)
[22:16:10] <enebo[m]> Another thing I was thinking about was making an isSame then I realized there was one so I made isSameOrigin
[22:16:17] <headius> yeah I see that
[22:16:30] <headius> yeah this doesn't look bad
[22:16:41] <enebo[m]> I thought about using it for things where we don't even neccesarily need to call getOrigin on one member just to make it more obvious
[22:17:51] <enebo[m]> For 3.0 logic we will also need to keep track of all includes/prepends on original module so when we change it via include/prepend all consumers of it will change
[22:18:08] <headius> so they do basically delegate like we always wanted to
[22:18:25] <enebo[m]> well it sure looks that way
[22:18:49] <headius> 🙄
[22:18:57] <headius> should have been that way years ago
[22:19:15] <enebo[m]> yeah although the accounting sort of explains why they were resistant
[22:22:02] <headius> I see you have a PR for 9.2 as well, you feel pretty safe about it>
[22:22:02] <headius> ?
[22:22:25] <headius> so frustrating that we can't mark more than one milestone for these prepend issues
[22:22:42] <enebo[m]> I landed one directly as it was just a mistake of not adding methodLocation.searchXXX if was only searchXXXX
[22:23:42] <headius> ok
[22:24:04] <headius> there's a mix of prepend issues marked for 9.2.20 or 9.3 right now, just reviewing updates
[22:24:30] <enebo[m]> This other one which is a PR atm is just removing using definedClass in AliasMethod for call(s) klazz
[22:24:51] <enebo[m]> which I would argue was the wrong behavior anyways if we were in the presence of a method containing a super
[22:25:10] <enebo[m]> I did not verify that but it looked wrong to me
[22:25:45] <headius> alias super behavior has changed subtly over the years too
[22:26:00] <headius> I think we still do it a bit differently than CRuby
[22:26:07] <enebo[m]> it was masking off findImplementer logic
[22:27:24] <enebo[m]> It might have been correct for some other setDefinedClass consumer maybe knowing it is the proper location to search if super is present but in the case of prepend I don't think that is right
[22:27:57] <enebo[m]> LOL ok...so definedClass is only used for prepend
[22:29:20] <headius> there's not much left on 9.3... reviewing to see what can be deferred
[22:29:31] <headius> I punted a couple obscure load issues to 9.3.1
[22:29:49] <enebo[m]> headius: and just to follow up...I recently changed milestones on those prepend issues to reflect where I planned on landing them
[22:30:43] <enebo[m]> 2 of them are isolated enough to just go on 9.2 the super one donv opened is fixed (among other things) by sharing the method map
[22:31:03] <enebo[m]> that one I was less gung ho on considering backporting
[22:31:04] *** Quits: mattil (~mattil@87-92-63-124.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[22:31:36] <enebo[m]> It feels bigger/riskier in a way I cannot really qualify
[22:32:01] *** Joins: mattil (~mattil@87-92-63-124.bb.dnainternet.fi)
[22:32:04] <headius> yeah cool I saw that bunch get retargeted and it will be great to have them gone
[22:32:20] <enebo[m]> The 2 I did back port are either completely broken (alias) or super obviously just doing it wrong
[22:32:35] <headius> I am looking at this thread kill race issue for a bit
[22:32:47] <headius> there's not much else that needs to go into 9.3 of the non-prepend stuff
[22:32:59] <enebo[m]> but with that said 'doing it wrong' makes me wonder how many more sites should be updated in our code base to do methodLocation.XXX
[22:33:37] <enebo[m]> I am hoping to fix the constant one and then the only open prepend issue is enumerable in JI which I do not think is likely really prepends issue
[22:33:38] <headius> nice this may be fixed by my handle_interrupt changes
[22:33:41] <headius> it is not hanging on master
[22:34:39] <enebo[m]> A spicy bonus would be if I could fix the two other prepend alias owner issues in ruby/spec that are tagged out
[22:34:47] <enebo[m]> Although owner of alias methods I doubt are all that important in real code
[22:35:12] <enebo[m]> Especially since they report weird anonymous classes
[22:35:29] <headius> yeah
[22:36:07] <enebo[m]> prepend on include which is then included is a weird beast codewise :)
[22:36:34] <enebo[m]>     m = Module.new { def meth; :m end }
[22:36:34] <enebo[m]>     c = Class.new { prepend(m); alias_method :alias, :meth }
[22:37:17] <headius> oh ruby
[22:37:24] <enebo[m]> owner of meth here should be c but it is likely some wrapper :)
[22:37:58] <enebo[m]> so I likely will only fix this if it is obvious (e.g. 30-45 minutes of puttering)
[22:38:42] <enebo[m]> I am really only boiling the ocean on these issues because 3.0 is a significant change and I want us to be pretty working on old behavior before changing it
[22:40:14] <headius> yeah for sure
[22:40:18] <headius> great leap forward
[22:40:25] <headius> yeah this seems fixed
[22:40:35] <headius> 👍
[22:40:39] <enebo[m]> congrats
[22:41:23] <enebo[m]> ok the 9.2 thing says red but it ran out of meatspace in a jit job
[22:44:50] <headius> enebo: oh not sure if you saw but FFI changes backported to 9.2 look good now too
[22:45:12] <headius> that covers upgrading as well as the bundle issue where we activate FFI too early
[22:45:21] <enebo[m]> great
[22:48:50] <headius> zeitwerk test suite is nearly 100%, only three failures, so I closed the original issue and punted those failures to 9.3.1
[22:56:21] <headius> down to 9 open (milestone shows 10 but there's only 9 in the list) with 7 of those prepend related
[23:00:13] <enebo[m]> ok and only 1 of those 7 is not fixed
[23:01:01] <headius> I punted the open-ended fiber leak issue and will examine that in 9.3.1 along with the parallel fiber shutdown thing that eregon filed
[23:01:19] <enebo[m]> the optmized escapeCGI is part of prepend too if you were including that PR
[23:01:32] <headius> they may or may not be related but given the fact that fiber shutdown runs in parallel there is a potential for it to interfere with fiber termination
[23:02:05] <headius> shutdown runs in the GC and because it can trigger ensures and runs in parallel it may end up racing and messing up the locking structures involved
[23:14:44] <headius> enebo: last issue with bundler was also fixed by other updates
[23:15:07] <headius> so I'm thinking a round of gem and dependency updates
[23:15:21] <enebo[m]> sure thing
[23:15:37] <enebo[m]> may as well be current when we leave the gate
[23:16:07] <headius> yeah and there have been some good jnr updates recently
[23:30:27] *** Quits: fidothe (sid1130@id-1130.highgate.irccloud.com) (*.net *.split)
[23:31:07] *** Joins: fidothe (sid1130@highgate.irccloud.com)
