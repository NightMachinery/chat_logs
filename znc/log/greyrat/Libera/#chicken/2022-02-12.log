[00:41:44] <dieggsy> Zipheir: aren't you supposed to force a delayed value before using it anyway?
[01:06:44] <Zipheir> dieggsy: Of course.  But a forced promise is a promise still.
[01:07:52] <Zipheir> If x and (delay x) are considered different types by Scheme, then it should be possible to say which one you expect in the type signature.
[01:07:58] <dieggsy> Zipheir: wait... is it though?
[01:08:17] <dieggsy> (integer? (force (foo 2))) -> #t 
[01:08:27] <dieggsy> Zipheir: I do agree with that
[01:08:34] <Zipheir> Yes, but (foo 2) is still a promise after it's been forced.
[01:08:55] <dieggsy> Oh i see your point
[01:08:55] <Zipheir> (let ((x (foo 2))) (force x) x) ; => #<promise>
[01:09:39] <Zipheir> It's always a promise.  force is just the magic procedure Promise -> *.
[01:10:05] <Zipheir> (Well, CHICKEN lets you force anything.)
[01:10:49] <dieggsy> Zipheir: is it maybe implemented as a struct in chicken?
[01:11:00] <dieggsy> er, as a record
[01:11:49] <dieggsy> in which case you'd use some variant of the (struct ...) type
[01:13:42] <dieggsy> which is to say, as far as i can tell (and i'm evidently no expert lol)  there's no way to tell the compiler a value is delayed in a way more useful than "this returns a promise structure"
[01:16:28] <Zipheir> Oh wow, that works.
[01:16:40] <Zipheir> (struct promise), that is.
[01:16:46] <Zipheir> Wonky!
[01:16:47] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[01:17:35] <Zipheir> dieggsy: Thanks.  I really don't think it should work, but it does. :-)
[01:20:01] <dieggsy> Zipheir: i found this by looking here https://wiki.call-cc.org/man/5/Types#type-syntax and also grepping the sources for how promises are represented internally FWIW
[01:20:17] <dieggsy> so.... you can rely on it unless chicken devs decide to implement promises some other way in the future (?) i'd guess jaja
[01:20:25] <Zipheir> dieggsy: Thanks for doing all that work.
[01:20:55] <Zipheir> I'm going to file a bug, though, since I'd like to not rely on internal rep..
[01:24:26] <dieggsy> I think that's fair
[01:43:10] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[02:14:17] *** Quits: rgherdt (~rgherdt@port-92-195-61-212.dynamic.as20676.net) (Ping timeout: 240 seconds)
[03:10:17] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 240 seconds)
[03:17:19] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[04:14:14] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 250 seconds)
[04:44:28] <vandusen> [eggs repo (r41074, by kon)] save branch
[05:10:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[05:10:38] <vandusen> [eggs repo (r41075, by kon)] rename modules to (Main Sub) style
[05:25:04] *** Joins: m455 (~m455@user/m455)
[05:27:54] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:29:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:34:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[05:41:10] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:45:04] *** Joins: s-liao5 (~s-liao@101.86.96.21)
[05:46:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:02:27] *** Quits: lambdart (~lambdart@189.4.76.230) (Remote host closed the connection)
[06:15:45] *** Quits: s-liao5 (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:22:55] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:43:34] <vandusen> [eggs repo (r41076, by kon)] not conversion when from = to, test better match for boost source?
[06:49:56] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[06:51:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[07:10:52] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:20:07] *** Quits: sts-q (~sts-q@212.53.219.192) (Ping timeout: 256 seconds)
[07:20:40] *** Joins: sts-q (~sts-q@212.53.219.131)
[07:38:29] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:48:27] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:58:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:37:29] <vandusen> [eggs repo (r41077, by kon)] add *val-with-units, add u:test, simplify test, add tests
[08:49:27] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[09:20:21] *** Quits: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch) (Remote host closed the connection)
[09:32:43] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:37:45] <sjamaan> moin
[11:09:47] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[11:09:57] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 240 seconds)
[11:23:47] *** Joins: rgherdt (~rgherdt@port-92-195-61-212.dynamic.as20676.net)
[11:32:14] *** Quits: klovett_ (~klovett@107.127.17.177) (Quit: ZZZzzzâ€¦)
[12:19:35] *** Joins: crumpo (~crumpo@user/crumpo)
[12:30:35] <vandusen> SPAM! SPAM! SPAM! by freeee
[12:42:04] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:12:26] <vandusen> SPAM! SPAM! SPAM! by freeee
[14:22:08] *** Joins: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch)
[14:25:22] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[14:28:19] *** Quits: amk (~amk@109.255.169.126) (Read error: Connection reset by peer)
[14:34:34] *** Joins: amk (~amk@109.255.169.126)
[15:34:16] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[15:40:49] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9)
[15:40:49] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e557:6165:d2a8:a2e9) (Changing host)
[15:40:49] *** Joins: skapata (~Skapata@user/skapata)
[15:58:44] *** Quits: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch) (Remote host closed the connection)
[16:50:36] *** Quits: sts-q (~sts-q@212.53.219.131) (Remote host closed the connection)
[17:02:10] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:57:51] *** Joins: ublx (~ublx@user/ublx)
[17:58:56] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[18:02:51] *** Joins: klovett (~klovett@107.127.17.177)
[18:15:25] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[18:16:44] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[18:43:07] *** Joins: crumpo (~crumpo@user/crumpo)
[18:59:30] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[19:59:57] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[20:09:05] *** Joins: sts-q (~sts-q@212.53.219.131)
[20:41:11] *** Quits: Kooda (~kooda@natsu.upyum.com) (Remote host closed the connection)
[20:41:46] *** Joins: ublx (~ublx@user/ublx)
[20:43:03] *** Joins: Kooda (~kooda@natsu.upyum.com)
[22:27:41] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[23:12:10] <crumpo> Is it possible to install the chicken-bind binary somewhere other than /usr/bin?
[23:17:01] <crumpo> Ah maybe more generally, to tell chicken-bind to install somewhere else. I'm aware of CHICKEN_INSTALL_REPOSITORY/CHICKEN_REPOSITORY_PATH but is there an equivalent for binaries?
[23:17:10] <crumpo> *chicken-install, not bind >_<
[23:18:56] <dieggsy> crumpo: I don't actually think there is at the moment
[23:19:16] <wasamasa> the most reliable way is to install the scheme system itself into a writeable prefix
[23:19:23] <dieggsy> other than fully installing chicken under a different PREFIX
[23:19:26] <dieggsy> right
[23:19:31] <crumpo> hmm, OK, thanks
[23:20:00] <crumpo> Would allowing that be useful to others? I could submit a PR if it might be
[23:20:30] <wasamasa> lol
[23:20:33] <wasamasa> there are no PRs
[23:20:54] <wasamasa> just patches on a mailing list
[23:21:09] <dieggsy> i think you can attach patches to the bug tracker too
[23:21:16] <dieggsy> which i guess just goes to the mailing list anyway
[23:21:41] <wasamasa> they go to people subscribing to all changes
[23:22:24] <crumpo> oh ok, cool
[23:24:49] *** Quits: nyarmith (~nyarmith@pool-72-95-220-156.pitbpa.fios.verizon.net) (Ping timeout: 256 seconds)
[23:27:33] *** Joins: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch)
[23:44:17] <dieggsy> huh. i was curious about installing to .local and it's actually not working for me somehow
[23:44:53] <dieggsy> nope, i fixed it nvm
[23:45:23] <Zipheir> What are PRs after all if not pointers to patches?
[23:50:28] <dieggsy> how do i catch an import exception? it doesn't seem like handle-exceptions works in that case
[23:55:44] <dieggsy> or i guess more generally exceptions at macro expand time which I guess(?) is what's happening when a module isn't found
