[00:00:16] <FromDiscord> <deech> Specifically using `const` functions in a non-`const` way, `nim`'s doesn't catch it, neither does `g++` but `clang` does.
[00:00:39] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[00:00:44] *** Joins: flynn (~mcbloch@user/flynn)
[00:03:14] <FromDiscord> <deech> I've imported all my library modules into a single otherwise empty module and tried compiling it with `--app:staticlib` in the hopes that it would codegen all of them and but that doesn't work.
[00:11:48] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[00:19:17] <FromDiscord> <AdawareDev> hi guys
[00:19:40] <FromDiscord> <AdawareDev> can someone help me pls https://media.discordapp.net/attachments/371759389889003532/882713837369958491/unknown.png
[00:46:24] <FromDiscord> <retkid> why is print called echo in nim
[00:46:32] <PMunch> Why not?
[00:46:34] <FromDiscord> <retkid> when the only other language i've encountered that does that is bash
[00:46:39] <PMunch> Same as bash
[00:46:57] <PMunch> I mean it's not printing anything on a printer *shrugs*
[00:47:00] <FromDiscord> <retkid> but Nim is not really inspired by bash or related to it at all for that matter
[00:47:22] <FromDiscord> <retkid> most of its source languages have write and print
[00:47:35] <FromDiscord> <retkid> im not complaining, just curious
[00:48:05] <PMunch> I don't really know to be honest
[00:48:32] <FromDiscord> <retkid> (edit) "print" => "print, and put"
[00:50:11] <PMunch> @AdawareDev, you seem to have a messed up compiler..
[00:53:00] <FromDiscord> <retkid> yea so i checked every souce lang
[00:53:03] <FromDiscord> <retkid> (edit) "souce" => "source"
[00:53:07] <FromDiscord> <retkid> none use echo
[00:53:16] <FromDiscord> <retkid> maybe they just thought it looked cool
[00:53:49] <FromDiscord> <AdawareDev> In reply to @PMunch "<@849539131955740732>, you seem to": oh ok
[00:54:05] <FromDiscord> <AdawareDev> @AdawareDev, you seem to have a messed up compiler..
[00:54:09] <FromDiscord> <AdawareDev> (edit) "@AdawareDev, you seem to have a messed up compiler.." => "how could i fix it?"
[00:55:45] <PMunch> Which compiler do you use?
[00:56:43] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[00:57:51] *** Joins: flynn (~mcbloch@user/flynn)
[00:58:37] <FromDiscord> <AdawareDev> gcc
[00:59:02] <PMunch> Could you do gcc -v?
[00:59:08] <PMunch> And how did you install it?
[00:59:27] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:59:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:03:24] <FromDiscord> <AdawareDev> choco
[01:03:37] <FromDiscord> <AdawareDev>  https://media.discordapp.net/attachments/371759389889003532/882724900815667240/unknown.png
[01:04:08] <FromDiscord> <AdawareDev> I can only compile inside C:/Users/Adaware/
[01:04:35] <PMunch> That sounds weird
[01:04:40] <PMunch> But then again Windows..
[01:05:23] <FromDiscord> <brainproxy> why is there no `[]` proc for OrderedSet?
[01:24:02] *** Quits: dmu (~darkmusic@user/darkmusic) (Quit: leaving)
[01:41:43] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[02:00:33] *** Quits: max22- (~maxime@2a01cb0883359800f554d7694bd7e6d3.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:10:50] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:11:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:12:17] <FromDiscord> <haxscramper> In reply to @retkid "why is print called": It was made this way so people could implement their own 'print' proc with spaces
[02:13:16] *** Gustavo6046_ is now known as Gustavo6046
[02:14:03] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[02:14:23] *** Joins: mjsir911 (~bnc@user/mjsir911)
[02:15:52] <FromDiscord> <fae> I must be missing something subtle about generic constraints, because it's interesting that this works https://play.nim-lang.org/#ix=3xGe
[02:16:16] <FromDiscord> <fae> but this doesnt https://play.nim-lang.org/#ix=3xGf
[02:20:22] <FromDiscord> <Elegantbeef> `[T, S: enum]` is just like `a, b: int`
[02:20:29] <FromDiscord> <Elegantbeef> They have to be the same enum type
[02:20:43] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:21:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:21:21] <FromDiscord> <fae> ah okay, I thought it just meant any enum
[02:21:48] <FromDiscord> <Elegantbeef> Well it does mean any enum, but it only the resolved type applies to both on the left hand of `:`
[02:22:17] <FromDiscord> <fae> I figured that declaring two type parameters would imply that you have two different types
[02:22:38] <FromDiscord> <fae> Two different types that are both enums
[02:22:44] <FromDiscord> <fae> at least thats the way i was reading it
[02:23:03] <FromDiscord> <Yardanico> In reply to @fae "at least thats the": just read them the same as normal arguments
[02:23:18] <FromDiscord> <Elegantbeef> They're bounded to the same resolved type
[02:23:21] <FromDiscord> <Yardanico> "a, b: int" is not always the same as  "a: int; b: int"
[02:23:28] <FromDiscord> <Yardanico> i mean not int specifically, but this notation of arguments
[02:23:34] <FromDiscord> <Elegantbeef> So it might be useless but it's how it works
[02:23:45] <FromDiscord> <Elegantbeef> Better example would've been `a, b: SomeInteger`
[02:24:03] <FromDiscord> <Yardanico> yas
[02:24:22] <FromDiscord> <Elegantbeef> This behaviour allows you to easily say multiple parameters are bound to the exact same typeclass, which is more useful üòÄ
[02:24:52] <FromDiscord> <fae> true, i suppose you are more often operating on same types with operators and such
[02:24:55] <FromDiscord> <fae> thanks for the explanation
[02:51:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[02:51:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:16:42] *** Joins: watzon (~watzon@136.36.149.145)
[03:40:33] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[03:40:36] *** Quits: asd (~noname@user/asd) (Ping timeout: 276 seconds)
[03:51:45] *** Joins: asd (~noname@user/asd)
[04:08:17] <FromDiscord> <retkid> In reply to @haxscramper "It was made this": It‚Äôs a learning tool?
[04:08:38] <FromDiscord> <Yardanico> In reply to @retkid "why is print called": why is echo called print in python?
[04:08:42] <FromDiscord> <Yardanico> pretty weird imo
[04:09:13] <FromDiscord> <retkid> Because Lisp used print
[04:09:29] <FromDiscord> <retkid> Most likely
[04:09:51] <FromDiscord> <Yardanico> no, not at all
[04:10:17] <FromDiscord> <retkid> Well, Lisp I‚Äôd a influential Lang with print
[04:10:28] <FromDiscord> <retkid> And I think Haskell uses prints
[04:10:34] <FromDiscord> <Yardanico> but what's the problem with `echo`?
[04:10:39] <FromDiscord> <retkid> None
[04:10:44] <FromDiscord> <retkid> I‚Äôm just curious
[04:11:02] <FromDiscord> <retkid> Why echo specifically when so few Lang‚Äôs use that
[04:11:32] <FromDiscord> <retkid> Why not puts, write, or print or Sdrout
[04:11:45] <FromDiscord> <Yardanico> stdout is an entirely different thing
[04:11:53] <FromDiscord> <Yardanico> it's a file descriptor, and Nim does have it
[04:11:59] <FromDiscord> <Yardanico> as well as `write` which is used to write to a file descriptor
[04:12:47] *** Quits: watzon (~watzon@136.36.149.145) (Quit: WeeChat 3.2)
[04:13:03] <FromDiscord> <retkid> Dunno, I think Haxs was right
[04:13:19] <FromDiscord> <retkid> So you can make your own print for your purposes
[04:13:37] <FromDiscord> <Yardanico> just ask araq if you really want to
[04:15:35] <FromDiscord> <Yardanico> i don't think it's the "make your own print" at all
[04:15:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:15:46] <FromDiscord> <Yardanico> but that's just my guess, ask araq directly if you want to know the real answer :)
[04:16:12] <FromDiscord> <retkid> Feel like I‚Äôm gonna get ‚Äúlol dunno just cuz‚Äù like any question you ask someone importantly
[04:16:26] <FromDiscord> <retkid> (edit) "importantly" => "important"
[04:16:52] *** Joins: flynn (~mcbloch@user/flynn)
[04:29:00] *** Joins: watzon (~watzon@136.36.149.145)
[04:29:57] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:44:47] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:46:07] *** Joins: neurocyte5 (~neurocyte@46.243.81.86)
[05:46:07] *** Quits: neurocyte5 (~neurocyte@46.243.81.86) (Changing host)
[05:46:07] *** Joins: neurocyte5 (~neurocyte@user/neurocyte)
[05:48:10] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:48:10] *** neurocyte5 is now known as neurocyte
[05:52:55] <FromDiscord> <auxym> Any opinions on defining a an object field with `{.bitsize:1}` as `bool`? https://play.nim-lang.org/#ix=3xGY Seems to work, but is it a horrible abuse of an implementation detail?
[05:54:17] <FromDiscord> <Elegantbeef> If you need it to be a bool i dont see an issue
[05:56:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3xGZ
[05:56:27] <FromDiscord> <Elegantbeef> can obviously change those binary lits to actual numbers if you prefer
[05:58:52] <FromDiscord> <auxym> I don't need it to be a bool, just from an ergonomics/API design standpoint I like it a bit better. Semantically, a 1-bit value pretty much is a bool, and then you don't need to do `== 1` in if statements, etc.
[06:00:14] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3xH0
[06:00:24] <FromDiscord> <Elegantbeef> then you just do `clken in yourObj.flags`
[06:00:38] <FromDiscord> <Elegantbeef> But idk the api so i'm just a numpty
[06:00:58] <FromDiscord> <auxym> As for the field fields, thanks for the range tip. I'm leaning towards using enums when it makes sense, but will probably use ranges when not
[06:03:22] <FromDiscord> <auxym> Yeah I can't do that, working on implementing peripheral register access for ARM cortex-M mcus, so I need to follow the exact binary structure of the register (the above struct is a 16 bit register for SAMD21's generic clock periph). See some posts I made in https://forum.nim-lang.org/t/7731 for more info, but it's very much a wip at this point...
[06:03:45] <FromDiscord> <Elegantbeef> I mean it has the exact binary structure üòÄ
[06:04:06] <FromDiscord> <Elegantbeef> Forgot the bitsize though üòÄ
[06:04:50] <FromDiscord> <auxym> it does? Not sure I follow, clken and wrtlock have to end up at bits 15/14 of a uint16
[06:05:25] <FromDiscord> <auxym> with id/gen at the lower bits (reserved is padding for unused bits)
[06:06:05] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3xH1
[06:06:30] <FromDiscord> <Elegantbeef> A `set[T]` is a bitarray so given this example it'd be the same binary representation
[06:06:42] <FromDiscord> <Elegantbeef> Just depends on what you're after if the bools are nicer or worse
[06:06:59] <FromDiscord> <Elegantbeef> Or if you prefer an integer üòÄ
[06:07:04] <FromDiscord> <auxym> ah! I see. Not sure if it's a huge improvement on ergonomics but I'm definitely keeping the idea in mind üôÇ
[06:20:55] <FromDiscord> <deech> Any advise here? https://discord.com/channels/371759389889003530/371759389889003532/882708434879914035
[06:22:32] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 245 seconds)
[06:37:46] *** Joins: vicfred (~vicfred@user/vicfred)
[07:08:37] <FromDiscord> <Rika> In reply to @retkid "Feel like I‚Äôm gonna": And why would that be an invalid answer to such a question?
[07:16:56] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:58:43] <FromDiscord> <gogolxdong (liuxiaodong)> what's the fastest way of Nim to allocate 64GB memory?
[08:00:15] <FromDiscord> <impbox [ftsf]> `discard alloc(64_000_000_000)` ?
[08:03:56] <FromDiscord> <gogolxdong (liuxiaodong)> allocates 112GB takes 24 seconds.
[08:04:37] <FromDiscord> <Rika> can allocation of such a large block of memory take less time than that?
[08:04:45] <FromDiscord> <gogolxdong (liuxiaodong)> isn't it 1 shl 30?
[08:05:00] <FromDiscord> <gogolxdong (liuxiaodong)> yes
[08:05:53] <FromDiscord> <Rika> yes its 1 shl 30
[08:07:08] <FromDiscord> <impbox [ftsf]> oops
[08:07:24] <FromDiscord> <impbox [ftsf]> maths is hard
[08:07:47] <FromDiscord> <Rika> nah its just confusion btwn 2^ and 1 shl
[08:08:19] <FromDiscord> <impbox [ftsf]> aww no ^ operator for power
[08:08:32] <FromDiscord> <Rika> check math again
[08:08:33] <FromDiscord> <impbox [ftsf]> unless i import math
[08:08:40] <FromDiscord> <Rika> lol
[08:08:49] <FromDiscord> <Rika> almost got you
[08:09:33] <FromDiscord> <impbox [ftsf]> seems odd that it's not in system like `+ -  /`
[08:15:58] <FromDiscord> <Arathanis> I don;t think `^` supports negative exponents either :/
[08:16:04] <FromDiscord> <Arathanis> otherwise its very nice to have imported
[08:28:44] <FromDiscord> <Elegantbeef> well it uses an optimized exponent logic, that only works on whole positive numbers, so you could make your own alias of `pow` to `^`, but yea not ideal, arguably `^` should've been `pow` backed and `fastPow` should've been made
[08:32:15] <FromDiscord> <Rika> damn man does lto really halve my execution time
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:33:42] <FromDiscord> <Gumber aka Zachary Carter> doubles your compiliation time
[08:33:45] <FromDiscord> <Gumber aka Zachary Carter> (edit) "compiliation" => "compilation"
[08:33:49] <FromDiscord> <Gumber aka Zachary Carter> maybe
[08:34:00] <FromDiscord> <Gumber aka Zachary Carter> but doesn't really matter, because you can just throw it on when you want to spit out an optimized binary
[08:34:42] <FromDiscord> <Gumber aka Zachary Carter> also if you're already optimized for speed
[08:34:45] <FromDiscord> <Gumber aka Zachary Carter> you might not see much improvement
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:55:16] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[09:56:22] *** Joins: flynn (~mcbloch@user/flynn)
[10:20:39] <NimEventer> New thread by Kalbhairab: Imbed ace editor in nim Playground, see https://forum.nim-lang.org/t/8388
[10:21:39] *** Joins: max22- (~maxime@2a01cb088335980087ef5e22f6c6ad9b.ipv6.abo.wanadoo.fr)
[10:45:54] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:46:07] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:16:54] <NimEventer> New thread by V3ss0n: Nim should jump into Blockchain , Web3 and DAPP development trend ., see https://forum.nim-lang.org/t/8389
[12:28:02] <FromDiscord> <retkid> whats the exception for
[12:28:06] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[12:28:20] <FromDiscord> <Elegantbeef> Non it's not an exception
[12:28:45] <FromDiscord> <Elegantbeef> Dereferencing a nil pointer is not something you want to use exception handling on
[12:29:23] <FromDiscord> <Elegantbeef> If you want a "why?" read https://forum.nim-lang.org/t/8342
[12:32:14] <FromDiscord> <retkid> for reference
[12:32:19] <FromDiscord> <retkid> the code im running looks like this
[12:32:38] <FromDiscord> <retkid> i stripped everything away to try and isolate it
[12:32:40] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3xIm
[12:32:43] <FromDiscord> <retkid> it seems to not be a nim problem
[12:33:00] <FromDiscord> <retkid> strace time!
[12:33:36] <FromDiscord> <impbox [ftsf]> linking to any foreign libs?
[12:33:41] <FromDiscord> <Elegantbeef> Well if you arent using pointers or references then yes it's not Nim üòÄ
[12:34:28] <FromDiscord> <impbox [ftsf]> I suspect there's more context we're missing
[12:34:41] <PMunch> I mean your minimal example runs just fine (after importing the net module and switching print for echo)
[12:34:42] <FromDiscord> <Elegantbeef> Plus when nim has nilref errors they tend to give you the line they happen at
[12:34:45] <FromDiscord> <Elegantbeef> !eval var a\: ref int;a[] = 300
[12:34:47] <NimBot> Compile failed: /usercode/in.nim(1, 9) Error: ':' or '=' expected, but got 'keyword ref'
[12:34:59] <FromDiscord> <Elegantbeef> god damn it!
[12:35:11] <FromDiscord> <retkid> yea nope i dont have any refs just that
[12:35:18] <FromDiscord> <retkid> so i could do a few things
[12:35:18] <FromDiscord> <impbox [ftsf]> bad rams?
[12:35:22] <PMunch> !eval var a: ref int;a[] = 300
[12:35:26] <NimBot> Traceback (most recent call last)‚Üµ/usercode/in.nim(1)      in‚ÜµSIGSEGV: Illegal storage access. (Attempt to read from nil?)
[12:35:27] <nrds> <12R2D299> Traceback (most recent call last) /usercode/in.nim(1)      in SIGSEGV: Illegal storage access. (Attempt to read from nil?)
[12:35:40] <PMunch> That's what you get for using silly Discord @ElegantBeef
[12:35:43] <FromDiscord> <retkid> In reply to @impbox "bad rams?": i suspect something to do with memory buffers
[12:35:47] <FromDiscord> <Elegantbeef> thanks pmunch üòõ
[12:35:50] <FromDiscord> <Rika> Beef is not on discord
[12:35:50] <FromDiscord> <Elegantbeef> I'm on matrix you dunce
[12:35:52] <FromDiscord> <retkid> (edit) "buffers" => "buffers, but dunno"
[12:36:11] <FromDiscord> <Rika> And PMunch can‚Äôt see that you‚Äôre on matrix
[12:36:12] <PMunch> Kinda hard to tell from IRC: `<FromDiscord> <Elegantbeef> I'm on matrix you dunce`
[12:36:17] <FromDiscord> <impbox [ftsf]> @retkid can you share the full code you're using?
[12:36:20] <FromDiscord> <Rika> Ever since the bot swap I believe
[12:36:36] <FromDiscord> <Elegantbeef> Yea i know, but free insults to pmunch is fun
[12:37:02] <FromDiscord> <Elegantbeef> That's what you get for using silly irc üòâ
[12:37:18] <FromDiscord> <retkid> In reply to @impbox "<@!217459674700578816> can you share": its a problem with everything around nim and i probably gotta contact some people and ask for advice after getting something from the strace
[12:37:45] <PMunch> You're probably just doing something silly
[12:37:58] <FromDiscord> <retkid> In reply to @PMunch "You're probably just doing": i am indeed
[12:38:08] <FromDiscord> <impbox [ftsf]> like using java?
[12:38:11] <FromDiscord> <Elegantbeef> More nil checks
[12:38:20] <FromDiscord> <retkid> every line is a nil check
[12:38:35] <FromDiscord> <Elegantbeef> In the other programs?
[12:38:51] <PMunch> I just meant that if you share a minimal example of code that fails it would probably be clear to one of us what's going wrong
[12:40:16] <FromDiscord> <retkid> In reply to @PMunch "I just meant that": when you do something as silly as what im doing, you get to a point where you dont want to share the full context because of how stupid it is
[12:40:37] <PMunch> Haha :P
[12:40:46] <FromDiscord> <Elegantbeef> Well stupidity never stopped people from publishing code before
[12:41:11] <FromDiscord> <Rika> In reply to @Elegantbeef "Well stupidity never stopped": Case in point you?
[12:41:26] <FromDiscord> <retkid> That is true, but i will say, i was able to get java-nim server inter-op with library loading to work in, testing
[12:41:33] <FromDiscord> <retkid> but not, in practice it seems
[12:41:45] <FromDiscord> <retkid> (edit) "in," => "in.."
[12:42:30] <FromDiscord> <retkid> and, the main problem is, there is no code for me to give you? the only thing that might help is the strace
[12:43:07] <FromDiscord> <retkid> kotlin code is super duper simple and not really a problem, the nim code has been stripped down to like 5 lines
[12:43:17] <FromDiscord> <retkid> the code is probably with the other stuff i didn't make
[12:43:21] <madprops> i liked kotlin
[12:43:40] <PMunch> Oh hi madprops
[12:43:44] <madprops> hey
[12:44:01] <FromDiscord> <retkid> Kotlin is pretty cool
[12:44:07] <PMunch> Did you try this on mobile? https://github.com/PMunch/nim-playground-frontend/pull/25
[12:44:10] <FromDiscord> <retkid> though its limited by the JVM shitty
[12:44:19] <FromDiscord> <impbox [ftsf]> kotlin is a lot nicer than writing java for sure
[12:44:42] <FromDiscord> <retkid> In reply to @impbox "kotlin is a lot": oh defd
[12:44:43] <FromDiscord> <retkid> (edit) "defd" => "def"
[12:44:52] <FromDiscord> <retkid> i can write kotlin pretty proficiently
[12:45:03] <FromDiscord> <retkid> but when writing java its like... so disgusting and slow
[12:45:08] <FromDiscord> <enthus1ast> if you do not use external c code or so, i would avoid nil
[12:45:24] <FromDiscord> <enthus1ast> idiomatic nim should be withouth nil imho
[12:45:38] <madprops> PMunch no .. not sure how I could try it with my phone, i'd have to host it
[12:45:48] <madprops> or well i could just use firefox dev tools 
[12:45:48] <FromDiscord> <retkid> yea all i did was define vars and open a socket
[12:45:53] <FromDiscord> <retkid> which is allnim
[12:45:54] <FromDiscord> <retkid> (edit) "allnim" => "all nim"
[12:46:12] <madprops> PMunch, does it look bad? i'll give it a look
[12:46:20] <FromDiscord> <Elegantbeef> Think most of us agree enthus, use notnil where applicable \:P
[12:46:46] <FromDiscord> <retkid> none of these functions should return nil,
[12:46:47] <FromDiscord> <retkid> (edit) "nil," => "nil"
[12:46:57] <FromDiscord> <retkid> unless there is a memory error.
[12:47:07] <FromDiscord> <enthus1ast> @retkid\: it could be if you use an older nim version  that this line\:`var container: seq[string]`could cause this error
[12:47:19] <FromDiscord> <Rika> In reply to @Elegantbeef "Think most of us": Strangest nickname I‚Äôve seen in a while
[12:47:24] <FromDiscord> <enthus1ast> at least when you use it later withouth initialize
[12:47:30] <PMunch> madprops, I haven't tried it either. But I'd imagine it might look weird
[12:47:35] <FromDiscord> <retkid> i'll comment it out and see
[12:47:46] <FromDiscord> <enthus1ast> this line by itself is fine
[12:47:57] <FromDiscord> <retkid> yea no i posted the full context
[12:48:04] <FromDiscord> <enthus1ast> and in newer nim versions you do not need to write = @[]
[12:48:20] <FromDiscord> <retkid> woah cool
[12:48:29] <FromDiscord> <retkid> seq[] looks better tho
[12:51:55] <FromDiscord> <retkid> Ah
[12:51:56] <FromDiscord> <retkid> got it
[12:51:58] <FromDiscord> <retkid> simple error
[12:52:07] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/ZkG
[12:52:16] <FromDiscord> <retkid> a memory lag spike caused the socket to time out
[12:52:22] <FromDiscord> <retkid> (edit) "out" => "out, or a cpu spike"
[12:52:27] <FromDiscord> <retkid> (edit) "a memory lag spike caused the socket to time out, or a cpu ... spike" 03added "spike, or a swap"
[12:52:30] <FromDiscord> <retkid> (edit) "spike" => "spike, etc"
[12:52:38] <FromDiscord> <retkid> (edit) 04removed "lag"
[12:54:49] <FromDiscord> <retkid> yea so it seems sockets are pretty sensitive to timeouts?
[12:54:55] <FromDiscord> <retkid> is there anyway to get around this
[12:56:07] <FromDiscord> <enthus1ast> i think the code you posted should not have error out like this
[12:57:07] <madprops> PMunch, it does look bad on mobile. I'm trying another design
[12:59:57] <PMunch> Most browsers include a "view as if on mobile" button by the way
[13:01:15] <PMunch> Not that the current design looks super good an mobile, but it works..
[13:03:00] <FromDiscord> <enthus1ast> this strace is a connect timeout or? net.connect should throw an exception if something goes wrong‚Üµ(@retkid)
[13:12:09] <FromDiscord> <retkid> In reply to @enthus1ast "this strace is a": [pid 81010] <... futex resumed>)        = -1 ETIMEDOUT (Connection timed out)
[13:12:21] <FromDiscord> <retkid> its an os error
[13:12:48] <FromDiscord> <enthus1ast> yes, but in your code you sent you do not do a connect
[13:12:59] <FromDiscord> <retkid> oh did i forget
[13:13:02] <FromDiscord> <retkid> (edit) "oh did i forget ... " 03added "to include"
[13:13:18] <FromDiscord> <retkid> i might've reverted back
[13:13:19] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3xIp
[13:13:31] <FromDiscord> <retkid> (edit) "i might've reverted back ... " 03added "or something"
[13:14:08] <FromDiscord> <retkid> see what happens
[13:14:12] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3xIq
[13:14:20] <FromDiscord> <retkid> eventually im gonna need to change the name from hello world to see what happens
[13:14:29] <FromDiscord> <retkid> (edit) "hello world to see what happens" => "helloworld"
[13:14:45] <FromDiscord> <enthus1ast> there is still no connect ;)
[13:15:21] <FromDiscord> <retkid> hm
[13:15:25] <FromDiscord> <retkid> maybe thats somewhere else then
[13:44:51] <madprops> PMunch, should I PR to a different branch for you to test it?
[13:49:56] <madprops> or do you want to see some images first?
[13:52:16] <madprops> https://imgur.com/a/tYq7uaV
[13:53:36] <madprops> the last image is red to highlight the output area which can overflow x and y
[13:58:55] <FromDiscord> <impbox [ftsf]> In reply to @Elegantbeef "Think most of us": how to notnil?
[14:08:18] <FromDiscord> <Elegantbeef> @impbox [ftsf]\: https://nim-lang.org/docs/manual_experimental.html#not-nil-annotation
[14:09:10] <NimEventer> New thread by Mareklachbc: How to quickly get the first, or last element of an array in Nim?, see https://forum.nim-lang.org/t/8390
[14:17:06] <FromDiscord> <impbox [ftsf]> In reply to @Elegantbeef "Think most of us": sounds good... but doesn't seem very recommended if it's experimental
[14:17:56] <FromDiscord> <Elegantbeef> Well do notation is also there, so.... put that in your pipe and smoke it üòõ
[14:18:29] <FromDiscord> <impbox [ftsf]> true, though it's not hidden behind an experimental pragma
[14:18:39] <FromDiscord> <impbox [ftsf]> i take it not nil is pretty stable then?
[14:28:28] *** Joins: krux02 (~krux02@p5484545c.dip0.t-ipconnect.de)
[14:36:51] <PMunch> You can just PR to master branch, I just pull your branch to test it
[14:37:55] <PMunch> Hmm, now the options seems like they apply to the output and not the input..
[14:47:17] <madprops> fair. i'll try putting them back up
[14:47:20] <madprops> where they were
[14:47:23] <madprops> but with the overall improvements
[14:50:50] *** Joins: federico3 (~quassel@debian/federico)
[14:55:25] *** Quits: federico3 (~quassel@debian/federico) (Ping timeout: 252 seconds)
[14:56:18] *** Joins: federico3 (~quassel@debian/federico)
[15:19:48] <madprops> PMunch, https://imgur.com/a/fRETkDO
[15:19:48] <madprops> made it so the options are position absolute on browser, and `relative`  on mobile
[15:19:59] *** Joins: userj (~userjjjj@2405:3800:89f:a308:e17a:b025:798a:38ae)
[15:20:36] <PMunch> Looks pretty good
[15:31:11] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:37:10] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:37:21] <PMunch> Hmm, interesting. I get a SIGSEGV from a closure that is getting called from C
[15:50:46] <PMunch> It seems like it's because the variable I was trying to use in the callback was not global
[15:51:25] *** Joins: arkurious (~arkurious@user/arkurious)
[15:51:49] <PMunch> Using GC_ref doesn't work either..
[15:52:14] <PMunch> I don't have to try and add anything to it, it's enough that I try to echo an empty seq
[16:03:56] *** Quits: krux02 (~krux02@p5484545c.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:06:06] *** Quits: userj (~userjjjj@2405:3800:89f:a308:e17a:b025:798a:38ae) (Changing host)
[16:06:06] *** Joins: userj (~userjjjj@user/userj)
[16:06:23] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[16:06:56] <PMunch> Is there a guide somewhere to what is considered safe/unsafe when passing Nim objects back and forth to C callbacks?
[16:07:29] *** Joins: flynn (~mcbloch@user/flynn)
[16:08:15] <PMunch> For example now I'm passing a `ptr seq[JsonNode]` to a callback, and then I add JsonNodes to that in the callback and use the sequence afterwards. This smells a bit off to me, but I'm not sure if it's actually bad
[16:09:25] *** Joins: Zevv (~Zevvvvv@185.238.131.12)
[16:10:15] <Zevv> Hey folks - there's only 70 people here I see, is this channel bridged to discord and matrix at this time?
[16:11:50] <PMunch> Yes, most people are over on Discord/Matrix (they all appear as FromDiscord here)
[16:12:22] <Zevv> 70 seems so few :/
[16:13:01] <PMunch> This is a graph showing the bridges: https://nim-lang.org/blog/2021/06/19/new-community-home.html
[16:13:21] <PMunch> I think the Telegram bridge got taken out though, that community is quite different from this one for whatever reason
[16:13:29] <Zevv> that's nice and messy, welcome to 2021
[16:13:55] <PMunch> Yeah, the Freenode debacle seems to have scared away quite a few people from IRC unfortunately..
[16:14:24] <arkanoid> I'm experimenting with =destroy and refc GC on objects. I see that it runs even before the object goes out scope
[16:14:27] <Zevv> yeah, can't have that old stuff. I tried matrix for 5 weeks but it's so super crappy.
[16:14:30] <Zevv>  anyway; araq mentioned in a recent forum post that there's work being done on circular imports
[16:14:55] <Zevv> is that theoretical/hypotetical work, or is something in progress? I can't seem to find any up to date discussions about this
[16:14:57] <PMunch> Oh yeah, I saw that
[16:15:34] <PMunch> Not sure to be honest, that's the first thing I've heard about circular imports in quite a while
[16:15:36] <Zevv> it's one of my major problems with nim from day 1, and it's keeping nim from getting adopted at 2 of my customers
[16:16:09] <PMunch> So I imagine it might be more of a "I have some work on that stashed away on a branch somewhere" rather than "that is the code I'm working on every day"
[16:16:28] <Zevv> I was also hoping for active discussions in an rfc issue or so
[16:16:32] <PMunch> It is surprisingly annoying once you run into it..
[16:16:41] <Zevv> I run into it way too often
[16:16:50] <Zevv> every single project I end up with these waay to long source files
[16:16:53] <PMunch> @Araq might be able to shed some light on it
[16:17:07] <Zevv> or the usual "types.nim" where everything gets etwined and -tangled
[16:17:37] <PMunch> Yeah, it's an unfortunate state of affairs
[16:17:50] <PMunch> Like you can definitely work around it, but it's clunky
[16:27:49] <arkanoid> I'm navigathing through deeply nested structs filled with "ptr OtherStruct" like fields, so I have to use it like "myObj.myAttr[].otherAttr[].otherAttr[]", is there a shortcut to avoid using [] then dealing with ptr types?
[16:28:40] <PMunch> Just don't use it?
[16:28:47] <PMunch> Nim should deref automatically
[16:29:24] <arkanoid> yeah I was expecting that, but seems not doing it
[16:29:47] <FromDiscord> <Araq> @zevv there is https://github.com/nim-lang/RFCs/issues/416 being the most recent discussion about it
[16:32:21] <arkanoid> PMunch: you're right, it is just echo and $ that requires it explicitly. My fault
[16:32:25] <Zevv> ah right, thanks
[16:33:27] *** Quits: max22- (~maxime@2a01cb088335980087ef5e22f6c6ad9b.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[16:34:56] <PMunch> arkanoid, yeah it will only do it when it's not ambiguous
[16:35:17] <PMunch> echo for example doesn't know if you meant to pass it a pointer or if it should deref it
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:56] <arkanoid> makes perfect sense, I just fixed for echo and did a synecdoche after that
[16:39:59] <Zevv> that's the first time I heard someone use that world in the wild
[16:43:12] <PMunch> Think I've seen it once in a book, but first time in actual conversation
[16:45:53] <arkanoid> that's the price I've to pay growing up in a country where classical literature is taught like it's something more important that being able to dereference a pointer correctly
[16:46:27] <PMunch> I think that's pretty much every country TBH :P
[16:50:29] <arkanoid> I bet it depends on the probability of stepping accidentally on some important archeological finding digging 30cm under the ground
[16:54:07] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:54:43] <arkanoid> talking about stepping on something, if I step on a "Error: execution of an external compiler program ... " is it always to be considered important?
[16:55:25] <PMunch> Define important
[16:55:37] <PMunch> More important than being with your dying mother, probably not
[16:55:57] <PMunch> Important to getting your program to run, pretty much essential
[16:56:07] <arkanoid> well, within the boundary of someone asking on irc :P
[17:05:47] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[17:14:31] *** Quits: LyndsySimon (sid34452@tooting.irccloud.com) ()
[17:14:47] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[17:21:36] <NimEventer> New thread by Rbohl64: Is async expected to work within a Thread() ?, see https://forum.nim-lang.org/t/8391
[17:22:35] *** Joins: rockcavera (~rc@192.12.112.97)
[17:22:35] *** Quits: rockcavera (~rc@192.12.112.97) (Changing host)
[17:22:35] *** Joins: rockcavera (~rc@user/rockcavera)
[17:27:12] *** Joins: max22- (~maxime@2a01cb0883359800a52ea8a51dfe9c16.ipv6.abo.wanadoo.fr)
[17:31:43] <madprops> can echo's be checked on integration tests or runnableExamples ?
[17:33:39] <FromDiscord> <Rika> no, i dont understand why you would need such though
[17:34:28] <madprops> because all the proc does is print some stuff
[17:34:42] <madprops> so i don't know how to test it
[17:34:48] <PMunch> Hmm, didn't treeform or someone write a library to do just that?
[17:34:53] <FromDiscord> <Rika> test it for what?
[17:35:00] <madprops> test if it works properly
[17:35:00] <FromDiscord> <Rika> sanity check? use asserts imo
[17:35:17] <FromDiscord> <Rika> In reply to @PMunch "Hmm, didn't treeform or": ah yes this i remember, ill try findint ig
[17:35:19] <FromDiscord> <Rika> finding it
[17:35:43] *** Joins: Vladar (~Vladar@46.162.2.53)
[17:37:07] <PMunch> Ah, this thing: https://github.com/treeform/ptest
[17:37:10] <nrds> <12R2D299> 4GitHub: 7"Print-testing for nim."
[17:37:15] <PMunch> Wait, it's two years old?
[17:37:53] <FromDiscord> <Rika> lol
[17:39:52] <PMunch> Must've been posted somewhere recently
[17:40:03] <PMunch> Feels like it was yesterday
[17:41:12] <FromDiscord> <xflywind> testament supports integration tests
[17:41:13] <FromDiscord> <Rika> it feels like 2 years ago for me lol
[17:41:45] <FromDiscord> <xflywind> https://nim-lang.github.io/Nim/testament.html
[17:48:34] <madprops> why is it called testament? because of tests ?
[17:48:53] <madprops> kindof original heh
[18:03:16] <madprops> seems testament doesn't work if I put the binaries in /bin https://forum.nim-lang.org/t/7577
[18:04:14] <FromDiscord> <haxscramper> earlier nimble was named "babel", nim was named "nimrod" and "testament" hasn't changed it's name‚Üµ(<@709044657232936960_madprops=5b=49=52=43=5d>)
[18:04:37] <FromDiscord> <haxscramper> Probably there are more names like that, which were changed at some point
[18:05:19] <madprops> i knew about nimrod
[18:09:30] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[18:10:36] *** Joins: flynn (~mcbloch@user/flynn)
[18:11:01] <FromDiscord> <Rika> testament existed before the name change??
[18:14:46] <madprops> this print testing idea sounds kinda crazy
[18:20:26] <PMunch> Yeah it's an interesting concept
[18:23:18] <Zevv> does nim stdlib has a function to humanize into iso units? e.g. 0.00003 -> "30¬µ"
[18:23:36] <Zevv> I can't find ¬µ in the stdlib, so I guess not?
[18:27:05] <FromDiscord> <auxym> maybe with unchained?
[18:28:38] <Zevv> nah I got this, the logic is simple of course, I was just being lazy
[18:31:42] *** Quits: max22- (~maxime@2a01cb0883359800a52ea8a51dfe9c16.ipv6.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[18:39:34] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:57:30] <arkanoid> if I do "let foo = Vector2D(x: 0, y: 0, space: "local").unsafeAddr" will the object stay on the stack or will be disposed immediately?
[18:58:15] <arkanoid> Vector2D = object
[19:01:57] <FromDiscord> <haxscramper> Object construction results might go through an intermediate storage, but what you really need to do is look at C code
[19:02:30] <FromDiscord> <haxscramper> But I assume it does `T12_ = object-construction; let foo_123 = &T12_`
[19:26:25] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[19:27:50] <cornfeedhobo> hello. question; I'm a little surprised to see an irc library in the github repo here https://github.com/nim-lang/irc/blob/master/src/irc.nim
[19:28:18] <nrds> <06Prestige99> What's the question? :P
[19:29:04] <FromDiscord> <haxscramper> !eval echo 12
[19:29:08] <NimBot> 12
[19:29:35] <cornfeedhobo> i think most other languages have avoided this type of protocol support in core libraries. how did this make it into this repo?
[19:29:51] <FromDiscord> <haxscramper> Well, there is supposed to be official working telegram bot on IRC that evaluates code
[19:29:51] <FromDiscord> <haxscramper> And nim in action has (extended) chaper on writing this bot
[19:31:04] <FromDiscord> <haxscramper> It didn't make it into the repo, it is just placed in the same organization
[19:31:27] <FromDiscord> <haxscramper> And it is not officially repeased, there is no `std/irc` etc.
[19:31:34] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) ()
[19:31:37] <cornfeedhobo> oh duh. i see. thanks
[19:31:44] <FromDiscord> <haxscramper> And making separate org. for "less needed modules" is kind of pointless
[19:31:47] <cornfeedhobo> yeah
[19:31:48] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[19:53:23] *** Joins: max22- (~maxime@2a01cb0883359800b9a79637bda73194.ipv6.abo.wanadoo.fr)
[19:57:30] <FromDiscord> <Araq> https://github.com/nim-lang/Nim/issues?q=is%3Aopen+is%3Aissue+label%3AShowstopper
[19:57:51] <FromDiscord> <Araq> no showstopper bugs left, 1.6 is ready
[19:58:11] <FromDiscord> <Araq> (not entirely serious, but it's good)
[20:09:19] <nrds> <06Prestige99> \o/
[20:21:30] <FromDiscord> <RattleyCooper> Is there a way to accept any enum as a parameter in a template without using generics?
[20:22:38] <FromDiscord> <RattleyCooper> One of the arguments is a procedure and if I use generic type it doesn't let me use the procedure when I call the template because the template doesn't have a concrete type, due to unspecified generic parameters
[20:23:12] <FromDiscord> <RattleyCooper> (edit) "One of the arguments is a procedure and if I use generic type it doesn't let me use the procedure ... when" 03added "as an argument"
[20:23:37] <FromDiscord> <RattleyCooper> (edit) "parameters" => "parameters.  If I use a concrete enum type then it works but as soon as I make it generic it doesn't like it"
[20:23:37] <FromDiscord> <deech> What is the difference between a `char` and a `cchar`? I see that one is `Magic` in `system.nim` and the other is an alias for a C `char` but `ptr char`  and `ptr cchar` both codegen a `NIM_CHAR` .
[20:27:21] *** Quits: max22- (~maxime@2a01cb0883359800b9a79637bda73194.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:28:17] <FromDiscord> <haxscramper> `template(arg: EnumType): untyped`
[20:29:36] <FromDiscord> <haxscramper> oh, any enum without generircs is a `arg: enum`
[20:29:51] <FromDiscord> <haxscramper> But this is still a generic, it is just implicit
[20:30:05] <FromDiscord> <haxscramper> You cant do "any type" without generics
[20:31:37] <FromDiscord> <RattleyCooper> In reply to @haxscramper "You cant do "any": Is there a way to use a procedure as an argument when using generics?
[20:32:04] <NimEventer> New thread by Ingo: Asyncstreams example?, see https://forum.nim-lang.org/t/8392
[20:35:10] *** Joins: max22- (~maxime@2a01cb08833598004d1bbe70867eb08c.ipv6.abo.wanadoo.fr)
[20:37:14] <FromDiscord> <haxscramper> What exactly do you mean by "when using generics". This use case is no different from regular "use procedure as an argument"‚Üµ(@RattleyCooper)
[20:37:56] <FromDiscord> <haxscramper> `proc arg[T](cb: proc(): T)`
[20:38:30] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:39:36] *** Joins: flynn (~mcbloch@user/flynn)
[20:41:56] <FromDiscord> <RattleyCooper> sent a code paste, see https://play.nim-lang.org/#ix=3xKV
[20:42:09] <FromDiscord> <RattleyCooper> (edit) "https://play.nim-lang.org/#ix=3xKV" => "https://play.nim-lang.org/#ix=3xKW"
[20:42:49] <FromDiscord> <RattleyCooper> (edit) "https://play.nim-lang.org/#ix=3xKW" => "https://play.nim-lang.org/#ix=3xKY"
[20:43:30] <FromDiscord> <RattleyCooper> (edit) "https://play.nim-lang.org/#ix=3xKY" => "https://play.nim-lang.org/#ix=3xKZ"
[20:44:16] <FromDiscord> <haxscramper> Well, you have unspecified argument
[20:44:38] <FromDiscord> <haxscramper> It is telling you have missing argument, and you do indeed miss an argument, so adding argument, or makig it default will solve the issue
[20:45:10] <FromDiscord> <haxscramper> But because you have `cond: untyped`, which I assume can't be defaulted you would need to specify things explicitly
[20:45:25] <FromDiscord> <RattleyCooper> I can make it a proc
[20:45:26] <FromDiscord> <haxscramper> Or reorder things in a way that would allow `pr` to be defaulted
[20:45:46] <FromDiscord> <RattleyCooper> what is the missing argument?
[20:46:10] <FromDiscord> <haxscramper> I ran code you pasted earlier
[20:46:17] <FromDiscord> <haxscramper> Before you edited it 10 times
[20:46:23] <FromDiscord> <RattleyCooper> sry lol
[20:46:27] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3xL1
[20:46:54] <FromDiscord> <RattleyCooper> Was trying to make it a short example and had to copy/paste
[20:47:31] <FromDiscord> <RattleyCooper> I was using undefined `{}`.  Figured I wouldn't paste in a bunch of stuff that was actually working and focus on what wasn't
[20:48:11] <FromDiscord> <haxscramper> Now it also errors out on‚Üµc argument in jump‚Üµmissing `[T]` parameter in jump‚Üµ Error: undeclared identifier: 'key'
[20:48:20] <FromDiscord> <haxscramper> These are three errors at least
[20:48:50] <FromDiscord> <haxscramper> If you need to pass generic proc to a template you need to explicitly inst. it
[20:48:52] <FromDiscord> <fae> typetraits manual indicates it is all compile time reflection, so there should be no runtime cost for converting a type name to string?
[20:48:55] <FromDiscord> <haxscramper> `jump[T]`
[20:49:17] <FromDiscord> <haxscramper> In reply to @fae "typetraits manual indicates it": No, there should not be any runtime cost
[20:49:40] <FromDiscord> <haxscramper> IIRC you can do `expandMacros` on something like `$typeof(arg)` and it will show up as stirng literal
[20:54:55] <FromDiscord> <RattleyCooper> In reply to @haxscramper "If you need to": I think I'm misunderstanding something
[20:56:46] <FromDiscord> <aleclarson> is `varargs[any]` not allowed?
[20:56:53] <FromDiscord> <aleclarson> or nonsensical in some way?
[20:57:25] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3xL6
[20:57:29] <FromDiscord> <haxscramper> In reply to @aleclarson "is `varargs[any]` not allowed?": No, it is not allowed
[20:57:53] <FromDiscord> <haxscramper> In reply to @aleclarson "or nonsensical in some": It means "variable-lenght list of any types, placed in the same container"
[20:58:30] <FromDiscord> <haxscramper> As any statically typed PL nim requires container elements be of the same type
[20:58:50] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3xL8
[21:00:26] <FromDiscord> <RattleyCooper> But I'm not trying to use anything generic in the callback
[21:00:46] <FromDiscord> <haxscramper> `jump` is a generic
[21:00:58] <FromDiscord> <haxscramper> It accepts generic type `Controller`, and you are passing it
[21:01:50] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3xL9
[21:03:50] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[21:04:08] <FromDiscord> <RattleyCooper> Omg I get it lol
[21:04:20] <FromDiscord> <RattleyCooper> thank you.
[21:05:29] <FromDiscord> <RattleyCooper> I didn't realize I needed the generic in the typedef of the controller in the callback argument but it totally makes sense.
[21:05:59] <FromDiscord> <RattleyCooper> (edit) "Omg I ... getit!" 03added "finally" | "it" => "it!"
[21:35:50] <FromDiscord> <aleclarson> is there a helper function for converting `varargs` to a pointer
[21:37:59] <FromDiscord> <aleclarson> i'm trying to pass it into a C function as a const pointer
[21:45:55] <FromDiscord> <fae> Oh hey it‚Äôs Alec Larson üòÄ thanks for all the hard work on Vite bud
[21:48:32] *** Quits: watzon (~watzon@136.36.149.145) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:48:39] <FromDiscord> <aleclarson> In reply to @fae "Oh hey it‚Äôs Alec": no problem \:)
[21:49:19] *** Joins: watzon (~watzon@136.36.149.145)
[21:49:56] <FromDiscord> <fae> It‚Äôs always fun seeing people from the FE community in these random systems programming discords
[21:51:12] <FromDiscord> <aleclarson> i don't think i've ever seen it, haha. i'm building a full-stack framework, so here i am!
[21:52:57] *** Quits: watzon (~watzon@136.36.149.145) (Client Quit)
[21:53:43] *** Joins: watzon (~watzon@136.36.149.145)
[22:02:02] *** Quits: watzon (~watzon@136.36.149.145) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:02:18] *** Joins: watzon (~watzon@136.36.149.145)
[22:30:48] <FromDiscord> <haxscramper> In reply to @aleclarson "is there a helper": `varargs` itself, as a type does not exists IIRC, so you can't have `toT(arg: varargs[int])`, as it is just sugar over `toT(args: openarray[int])`
[22:30:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:31:01] <FromDiscord> <haxscramper> What is the C function signature?
[22:31:56] *** Joins: flynn (~mcbloch@user/flynn)
[22:39:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:55:47] *** Joins: audiophile_ (~audiophil@user/audiophile)
[23:22:12] <FromDiscord> <aleclarson> In reply to @haxscramper "What is the C": Part of the signature is `size_t argc, const napi_value argv` and my proc takes `varargs[napi_value]` where `type napi_value = pointer`
[23:25:38] <FromDiscord> <aleclarson> sent a code paste, see https://play.nim-lang.org/#ix=3xLY
[23:26:16] <FromDiscord> <aleclarson> (edit) 
[23:26:18] <FromDiscord> <haxscramper> You can' in theory use `unsafeAddr argv[0] + len(argv)` and pass the data to C proc, but ideally I would recommend using `seq[napi_value]`
[23:26:32] <FromDiscord> <haxscramper> It won't blow up if you do it with varargs instead of a seq though, I'm just not sure about that
[23:27:09] <FromDiscord> <aleclarson> I suppose it's safe as long as the C function doesn't hold onto the pointer
[23:28:17] <FromDiscord> <haxscramper> accessing `unsafeAddr argv[0]` might be considered implementation detail, since nothing says it must be a seq/container/etc.
[23:28:33] <FromDiscord> <haxscramper> if `argv` is a varargs
[23:29:15] <FromDiscord> <aleclarson> gotcha, thanks a lot ^^
[23:35:46] <NimEventer> New Nimble package! stripe - Nim client for Stripe.com, see https://github.com/iffy/nim-stripe
[23:35:49] <nrds> <12R2D299> 4GitHub: 7"Nim library for using the Stripe API"
[23:39:20] <FromDiscord> <PsychoClay> how do i turn a table into an openarray
[23:43:14] <FromDiscord> <haxscramper> collect keys/values into a `seq`. `seq` is an `openarray`
[23:43:53] <FromDiscord> <PsychoClay> is there some proc that does this or do i need to use a for loop
[23:46:47] <FromDiscord> <haxscramper> For loop
