[00:06:36] *** Quits: ratagin (~ratagin@208.96.144.68) (Quit: Leaving)
[00:12:03] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:12:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:19:10] *** Joins: proller (~p@62.76.32.253)
[00:23:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:26:18] *** Quits: magla (~gelignite@55d41339.access.ecotel.net) (Quit: Stay safe!)
[00:35:21] *** Quits: tewrdh^ (~tewrdh@64.253.22.77) (Remote host closed the connection)
[00:47:03] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Read error: Connection reset by peer)
[00:48:18] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[00:53:57] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[00:54:37] *** Joins: yzhernand (~yzhernand@2607:fb90:5504:24e2:3838:31ff:fe14:b1e6)
[00:55:20] *** Quits: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4) (Remote host closed the connection)
[00:58:59] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 268 seconds)
[01:00:49] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:02:39] *** Joins: diskin (~diskin@87.117.57.43)
[01:18:57] *** Quits: yzhernand (~yzhernand@2607:fb90:5504:24e2:3838:31ff:fe14:b1e6) (Ping timeout: 240 seconds)
[01:19:03] *** Joins: yzhernand (~yzhernand@2607:fb90:5504:24e2:240f:63ff:fe32:1fbd)
[01:20:27] *** Joins: EvanCarroll (~ecarroll@68.90.133.105)
[01:24:55] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:27:17] *** Quits: EvanCarroll (~ecarroll@68.90.133.105) (Ping timeout: 240 seconds)
[01:32:42] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[01:33:22] *** Joins: whynot (~whynot@37.73.33.100)
[01:34:57] *** Quits: yzhernand (~yzhernand@2607:fb90:5504:24e2:240f:63ff:fe32:1fbd) (Ping timeout: 240 seconds)
[01:35:34] *** Joins: yzhernand (~yzhernand@2607:fb90:5504:24e2:5cf2:deff:fe99:966e)
[01:48:03] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[01:50:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:54:16] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[01:55:07] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[01:56:55] *** Quits: martinus__ (~martin@2.56.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[01:57:57] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:02:20] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:02:32] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:02:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:09:37] *** Quits: yzhernand (~yzhernand@2607:fb90:5504:24e2:5cf2:deff:fe99:966e) (Ping timeout: 240 seconds)
[02:10:42] *** Joins: yzhernand (~yzhernand@2607:fb90:5504:24e2:1c07:1ff:fe2f:66b4)
[02:15:57] *** Quits: yzhernand (~yzhernand@2607:fb90:5504:24e2:1c07:1ff:fe2f:66b4) (Ping timeout: 240 seconds)
[02:16:20] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:16:57] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:20:40] *** Joins: GEttR (~GEttR@user/gettr)
[02:21:18] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 260 seconds)
[02:30:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:32:50] *** Quits: pizdets (~pizdets@183.182.110.174) (Ping timeout: 250 seconds)
[02:33:49] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[02:34:13] *** Joins: pizdets (~pizdets@183.182.114.214)
[02:35:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 252 seconds)
[02:47:40] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:51:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:55:46] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[02:56:10] *** Joins: UsbSick (~UsbSick@2600:6c48:757f:e654:a863:efc5:fd1:1de4)
[03:05:15] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:05:59] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[03:10:58] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[03:22:21] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[03:22:44] *** Joins: sbrothy (~sbrothy@192038134172.mbb.telenor.dk)
[03:26:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[03:38:30] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:40:07] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[03:44:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 268 seconds)
[03:45:09] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23) (Ping timeout: 250 seconds)
[03:49:11] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[03:51:08] *** Quits: whynot (~whynot@37.73.33.100) (Quit: leaving)
[03:57:32] *** Quits: XV8 (~XV8@2601:5cb:c001:50:10cd:9e3c:2c4a:2ae1) (Quit: Textual IRC Client: www.textualapp.com)
[04:13:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:18:13] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[04:22:00] *** Joins: gladys_ (~jackie@user/jackiee)
[04:22:15] <gladys_> my variables are like static in C correct
[04:22:16] <gladys_> ?
[04:22:22] <gladys_> sorry for the basic question
[04:22:34] <gladys_> ive googled this and it says theyre static
[04:22:38] <gladys_> but does that mean same as C
[04:23:46] <gladys_> sorry im not a very experienced programmer. I only know some C. But perl is my favorite that I know so far. But im just not good at programming. Ill stop spamming
[04:24:39] <gladys_> also, is there unsigned ints?
[04:27:47] <ology> Although made with c, Perl is not c.
[04:27:53] <Grinnz> no, 'my' is not like static variables. it applies to the smallest block or file scope you see around it, and if that scope is re-entered it will represent a separate variable initialization
[04:28:12] <gladys_> oh okay so like private kinda
[04:28:28] <gladys_> maybe mistaken
[04:28:29] <aquanight> to put it in C terms
[04:28:36] <aquanight> it is a local variable with automatic storage class
[04:29:04] <aquanight> 'state', on the other hand, is a local variable with static storage class
[04:29:09] <Grinnz> 'my' variables are also not visible to any code called from that scope, only the scope itself. referred to as lexical variables
[04:29:12] <aquanight> 'our' is a local variable with 'extern' storage class
[04:29:59] <Grinnz> perl uses unsigned ints automatically when appropriate - as the programmer you don't know or care about that, values are just numbers if you use them as numbers
[04:30:05] <aquanight> such a thing does not technically exist in C (local variables can only have auto or static storage class: only global variables can have extern storage class)
[04:30:38] <aquanight> gladys_: if you absolutely need to ensure you are working with integer semantics, apply this pragma to the relevant scope: use integer;
[04:30:51] <gladys_> so  with an "our" (sorry if youre repeating yourself) its not automatically a global value, but it applies to all union/struct/typedef orrr
[04:31:09] <Grinnz> 'our' creates a lexical variable, which is an alias to a global one
[04:31:18] <gladys_> im not a C wizard either. ad im sure you can tell. Oh okay, so it is global
[04:31:25] <gladys_> like a point
[04:31:26] <Grinnz> so if you do "our $foo" in two scopes, it will refer to the same variable, as long as they're in the same package
[04:31:28] <gladys_> in struct
[04:31:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:31:54] <gladys_> okay thanks so much. I think i understand. I really appreciate you all bearing my ignorance
[04:31:55] <aquanight> this is why I say they're like 'extern' variables
[04:32:01] <aquanight> in C++ if you do something like
[04:32:02] <Grinnz> generally, you don't need "our" at all
[04:32:10] <aquanight> namespace Whatever { extern int blah; }
[04:32:19] <aquanight> and then in another file you do namespace Whatever { extern int blah; }
[04:32:29] <aquanight> when those files are compiled and linked they'll be referring to the same variable
[04:32:32] <Grinnz> it's too global especially when you are dealing with functional or OO code that operates on a specific set of state
[04:32:41] <aquanight> this is more or less how 'our' works
[04:33:34] <Grinnz> "my" has a guarantee of only being visible (and more importantly, changeable) by the scope you see it declared in
[04:33:39] <aquanight> (nb: in C++ you'd need at least one file that does namespace Whatever { extern int blah; int blah = 0; } to "define" the variable as the other two are only "declarations" but not a definition
[04:33:46] <aquanight> )
[04:33:50] <gladys_> aquanight: I think I get you. C++ libraries I dont know too well. But I understand namespaces as being fundamanetally different data structures. Like "partitions" (or fs types rather, by that analogy) that your program refers to 
[04:34:00] <gladys_> correct me if im mistaken
[04:34:30] <Grinnz> whereas overuse of global variables easily leads to cases where some obscure part of your program is messing with a variable - action at a distance
[04:35:17] <Grinnz> in C you usually use them for efficiency, but it's not worth that in perl
[04:35:43] <aquanight> compartmentalizing your code to ensure it remains internally consistent is a good reason to stick to 'my' variables even if you need top-level state
[04:36:09] <aquanight> if you're in a file and you have my $x = stuff; at the top level you can use that $x anywhere in the file and no one else can touch it unless you go out of your way to allow them to
[04:36:41] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[04:36:56] <aquanight> (or they go way the fuck out of their way to stick their noses where they don't belong but that's not something you can or should worry about)
[04:37:34] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:37:56] <gladys_> yeah. I think thats why perl is so compelling to me is because bash was my first ""language"". And C I've gotten semi-proficient at from the kernel. But I wanted a higher-level language like most people say is better for scripting. I really struggle with python (probably due to my bash brain) due to the indents. But Perl reminds me so much of unix
[04:38:21] <gladys_> maybe it shouldnt. but i love the syntax
[04:39:06] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[04:39:23] <Grinnz> it was certainly inspired by shell programming, sed and awk
[04:41:22] <gladys_> is it an exceptional language still today for text manipulation
[04:41:24] <gladys_> ?
[04:42:21] <gladys_> i heard someone say its dying (maybe thats untrue?) which is such a freaking bummer because this is the first language that really feels like its for me 
[04:42:43] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[04:42:57] <Grinnz> it's declining in use, like most languages that aren't js
[04:42:58] <gladys_> I like C  (again probably because Unix brain) but perl feels so at home 
[04:43:09] <Grinnz> but it's been "dying" for 20 years
[04:43:14] <aquanight> javascript wreally should be nuked from orbit imho
[04:43:20] <Grinnz> and still actively maintained
[04:44:21] <gladys_> i heard perl is big in web-dev. which i was told would be easier for me to get a job with than kernel hacking. so when i read perl was heavily utilized in that realm it made me feel a lil better
[04:44:39] <gladys_> not that im a kernel hacker of any kind of remarkable skill ahaa
[04:44:57] <Grinnz> yes, originally it was big for CGI but that's quite outdated these days, https://mojolicious.org is quite modern and powerful though
[04:44:58] <Paperbot> Link title(s): [ Mojolicious - Perl real-time web framework ]
[04:46:16] <aquanight> man I still remember the CGI days
[04:46:25] <aquanight> $ENV{QUERY_STRING} and all that fun stuff
[04:46:28] <gladys_> so is this like libraries for API or
[04:46:54] <Grinnz> both of those are words that kind of apply but don't mean anything, so sure
[04:47:09] <gladys_> haha my apologies
[04:47:31] <gladys_> again im not a programmer of any kind of skill, as im sure you can tell
[04:47:49] <aquanight> mojolicious is used as a perl library (use Mojo; or such) as a framework to build mini web services via perl
[04:48:06] <aquanight> you then hook up your apache/nginx/whatever the fuck to quietly proxy the URIs to your perl service
[04:48:16] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:48:37] <aquanight> I'm still tempted to see if I can rig up a mojo plugin to hook into the Windows internal HTTPd
[04:49:02] <aquanight> assuming, of course, it hasn't already been done
[04:50:59] <gladys_> oh okay. so with "API" (maybe thats the point of my misunderstanding), its like the layer between multiple programs & data structures that they engage with as an intermediary to communicate. Like with linux how you make your program work with the different data structures in the kernel by registering irq handlers etc.
[04:51:04] <gladys_> maybe misunderstanding
[04:51:14] <gladys_> like flags etc
[04:51:26] <aquanight> Grinnz: question
[04:51:37] <aquanight> well not just Grinnz anyone really
[04:52:25] <Grinnz> API generally has a specific meaning in web dev: an interface from which you can have programs interact with, rather than a browser, so usually JSON or (in the old days) XML
[04:52:33] <aquanight> my %x; my @keys; for my ($x, $y, $z) ( complicated_multilevel_loop ) { push @keys, "$x:$y:$z"; } delete @x{@keys};
[04:52:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[04:52:45] <aquanight> my %x; my @keys; for my ($x, $y, $z) ( complicated_multilevel_loop ) { delete @x{"$x:$y:$z"}; }
[04:52:54] <aquanight> which is "better"?
[04:52:57] <Grinnz> mojolicious can be used to implement a web API, but also just a regular HTML web app
[04:53:15] <aquanight> for any given definition of "better" (faster, stronger, we can rebuild it, etc etc)
[04:53:35] <gladys_> more succinctly and clearly: is API like a fixed program in and of itself or does it just refer to encorporating it into the various functions/macros/flags/etc. of whatever your program is trying to engage with
[04:53:54] <Grinnz> aquanight: i would guess the first but benchmark it if you care
[04:53:58] <gladys_> sorry for repeating yourseld
[04:54:02] <Grinnz> also that second delete should have a $ sigil
[04:54:08] <aquanight> yeah I forgot to change that
[04:54:23] <LeoNerd> aquanight: second = lots of tiny deletes probably use more CPU overall but don't waste a huge array temporary; first = one single large delete using less CPU overall but instead uses more in accumulating that big array temporary
[04:54:31] <LeoNerd> In summary: could go either way. I really wouldn't worry
[04:54:47] <aquanight> fair enough
[04:54:52] <LeoNerd> Unless there's any strong /reason/ to accumulate that @keys array, don't bother. Just delete them one at a time
[04:55:02] <aquanight> there really wasn't
[04:55:03] <Grinnz> yeah, usually that question depends more on what else you need the data for
[04:55:10] <LeoNerd> I imagine your loop list expression doesn't depend on %x in that case
[04:55:12] <aquanight> I was just curious if there was enough of a gain to mass-delete
[04:55:21] <aquanight> it doe snot
[04:55:25] <aquanight> ..
[04:55:27] <LeoNerd> The only time I'd accumulate a list of keys then delete them all is if there was some interdependence there
[04:55:27] <aquanight> it does not
[04:55:43] <aquanight> yeah no it's just a psuedo-three-dimensional index
[04:55:46] <Grinnz> gladys_: an API is a defined interface. functions taht take certain inputs and return certain outputs. in web dev, this refers to HTTP calls
[04:56:02] <LeoNerd> Then all else being equal, write the simpler code
[04:56:04] <aquanight> by "complicated" I basically mean "a cuboid range defined by x, y, z boundaries"
[04:56:22] <Grinnz> gladys_: it's not the program itself but the interface it presents, if thats what you're asking
[04:56:23] <LeoNerd> Oooh are you zipping? ;)
[04:56:50] <LeoNerd> foreach my ($x, $y, $z) ( (0..9) Z (0..9) Z (0..9) ) { ... }   would be nice, oneday
[04:56:58] <Grinnz> you could replace the implementation of an API with a program written in a different language, as long as it responds in the same way to every query it would work the same
[04:57:02] <aquanight> oh that kind of zipping
[04:57:10] <aquanight> I guess you could say I'm doing that.
[04:57:29] <LeoNerd> Actually.. it wouldn't be nice in this instance, as it would eat a thousand-element temporary list.. :/
[04:57:32] <aquanight> I just have to do it manually because I don't think that infix Z exists yet and I can't remember if 5.34 even has the multi-variable for
[04:57:50] <LeoNerd> Infix Z exists for *me*
[04:57:58] <aquanight> share with the class?
[04:58:06] <aquanight> :P
[04:58:09] <LeoNerd> https://metacpan.org/pod/Syntax::Operator::Zip
[04:58:10] <Paperbot> Link title(s): [ Syntax::Operator::Zip - infix operator to compose two lists together - metacpan.org ]
[04:58:22] <aquanight> Syntax::Operator::Zip->import::into("Object::Pad")
[04:58:35] <aquanight> that's sharing with the "class" :D
[04:58:39] <LeoNerd> My Z doesn't yet have list-associativity though
[04:58:51] <LeoNerd> So you can't do  @XS Z @YS Z @ZS
[04:59:44] <aquanight> also how easily will this Z be confused for a quotelike operator
[05:00:14] <LeoNerd> Hrm?
[05:00:15] <aquanight> I think the only other one-letter operator we have is 'x'
[05:00:20] <LeoNerd> What quotelike are you thinking of?
[05:00:35] <aquanight> I was just thinking if it might be confused for being similar to s or y
[05:00:53] <aquanight> it'd also be the only perl builtin operator that uses uppercase
[05:01:03] <aquanight> if it was a builtin operator
[05:01:03] <LeoNerd> You mean by people, or by perl?
[05:01:12] <aquanight> by people mainly
[05:01:13] <gladys_> Grinnz: Thanks so much, so its just the established avenues of engagement (through functions,macros, flags, etc.) a program must travel to interact with a given entity like the kernel
[05:01:23] <LeoNerd> Oh.. Yeah I've no idea about that. I just named it Z because that's what Raku calls it
[05:01:33] <LeoNerd> It seemed as good a choice as any
[05:01:43] <Grinnz> gladys_: sure, syscalls are an example of an API
[05:02:38] <gladys_> Grinnz: oh okay. i really appreciate the shell example, because I think that cleared up a mild misunderstanding
[05:03:41] <aquanight> that moment your script takes a while
[05:03:48] <LeoNerd> EvanCarroll: re https://github.com/Perl/RFCs/pull/6#issuecomment-999966488 -- I really don't follow the question of what you're asking. Can you rephrase it somehow or.. something?
[05:03:49] <Paperbot> Link title(s): [ Namespace for Builtin Functions by leonerd Â· Pull Request #6 Â· Perl/RFCs Â· GitHub ]
[05:03:50] <aquanight> you think you're going to SIGINT it to maybe try to optimize a bit better
[05:03:56] <aquanight> you hit CTRL+C half a second after it finishes
[05:04:17] <aquanight> maybe more like 0.1s
[05:04:32] <LeoNerd> aquanight: Now you've got me thinking of a pragma that automatically adds a progress-meter to any foreach loop that takes more than 3 seconds ;)
[05:04:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[05:04:59] <aquanight> mmm
[05:05:02] <aquanight> I could actually though.
[05:05:04] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[05:05:17] <gladys_> so wine for linux (which i have never used so maybe im wrong) takes input from a program that is trying to "travel the established avenues" of engaging with windows kernel & API, and translates them into what it would mean to engage similarly with the linux kernel?
[05:05:19] <LeoNerd> It'd be a lot easier if we had ${^INDEX} and ${^COUNT}
[05:05:28] *** Quits: gladys_ (~jackie@user/jackiee) (Quit: leaving)
[05:05:45] *** Joins: gladys_ (~jackie@user/jackiee)
[05:05:53] <aquanight> no
[05:05:55] <gladys_> sorry left
[05:06:21] <aquanight> but we do have for my $ix ( 0 .. [ my @ary = (your-foreach-list-here) ]->$#* )
[05:06:45] <LeoNerd> That's pretty icky
[05:06:45] <aquanight> use only for arbitrary-list-foreach since the list has to be built anyway
[05:06:55] <aquanight> if you're using a range or array it's easier
[05:07:01] <LeoNerd> I'd write  foreach my ($ix, $elem) ( iterate LIST ) ...
[05:07:01] <xenu> it's both disgusting and inefficient
[05:07:17] <aquanight> actually you're right I can improve it slightly
[05:07:23] <LeoNerd> But then I'd have to write the `iterate` function first. Meh
[05:07:34] <aquanight> but we do have for my $ix ( 0 .. (\(my @ary = (your-foreach-list-here)))->$#* )
[05:07:38] <LeoNerd> Oh and it still doesn't give you the size. Hrm
[05:07:49] <LeoNerd> Butyeah; we want ${^INDEX} and ${^COUNT} 
[05:07:50] <xenu> gladys_: wine is basically a library that implements the windows api
[05:07:53] <LeoNerd> Well I want them anyway
[05:07:53] <aquanight> now you're not making two arrays
[05:08:24] <gladys_> xenu:  okay so yeah i had that kinda backwards
[05:08:28] <gladys_> haha
[05:08:35] <gladys_> thanks :)
[05:08:39] <LeoNerd> A library, plus a linker/loader that understands PE files
[05:08:49] <aquanight> xenu: and the PE loader, dynamic linker, emulation of low-level NTOSKRNL calls
[05:09:05] <aquanight> emulation of low-level Win32 subsystem
[05:09:18] <xenu> does wine actually emulate them? they aren't public and their ids change even in minor updates
[05:09:28] <xenu> (syscalls)
[05:09:42] <aquanight> actually at one point I think it was possible that it emulated the low-level enough that you could actually replace the psuedo-DLLs with real ones from a live Windows system.
[05:10:18] <aquanight> but you know
[05:10:38] <aquanight> now that WSL has upped the ante I would not be surprised if the next step for wine is to just virtualize and run a real NT kernel with real DLLs
[05:10:44] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[05:10:48] <xenu> wsl2 was a mistake
[05:10:55] <aquanight> I disagree.
[05:11:08] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[05:11:16] *** Joins: Colt (~Colt@user/colt)
[05:11:49] <xenu> also running a real nt kernel isn't legally possible :P
[05:12:05] <aquanight> *supplying* a real nt kernel isn't legally possible
[05:12:09] <xenu> unless they do what os/2 did (the red spine version), require the user to provide their windows
[05:12:20] <xenu> but even that is probably illegal
[05:12:22] <aquanight> running one in a virtual machine is perfectly cromulent
[05:12:34] <xenu> you can't run non-server windowses in headless VMs
[05:12:39] <xenu> license explicitly forbids that
[05:12:44] <aquanight> interesting
[05:12:52] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Read error: Connection reset by peer)
[05:12:57] <aquanight> but to be fair
[05:13:23] <aquanight> I think people wanting to have a "closer to actual" Windows on a linux host probably do so for graphical Windows software
[05:13:33] <aquanight> so you may as well emulate a head and let NT handle the UI
[05:13:34] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[05:14:09] <aquanight> I'll let you decide if by "head" I mean the same thing that is referred to when referring to a "headless" system or "head" in the nautical/naval sense.
[05:15:38] <xenu> my favourite part of windows license:  this license does not give you any right to, and you may not: (...) work around any technical restrictions or limitations in the software;
[05:16:43] <aquanight> legalese is sometimes full of crap like that
[05:17:09] <xenu> this is more of FUD than legalese, i guarantee this has no legal power
[05:17:15] <aquanight> well shit
[05:17:43] <aquanight> the good thing about simple loop solutions is that they're simple. The bad thing about simple loop solutions is that they're simple.
[05:19:08] <aquanight> basically, it turns out that brute forcing a pixel-oriented solution to a sequence of cube union/subtraction operations is a terrible idea
[05:20:03] *** Joins: nuh^ (~nuh@64.253.22.77)
[05:20:54] <aquanight>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
[05:20:54] <aquanight>   807 aquanig+  20   0   24.8g  22.9g    280 R  65.1  91.5   3:07.36 perl
[05:20:56] <aquanight> this was a mistake
[05:21:42] <aquanight> you'd think I learn
[05:22:00] <aquanight> the number of times AOC gives you a simple, brute-forceable part 1, and then blows it all up with part 2
[05:22:05] <aquanight> every. single. time.
[05:35:07] <fizzie> Well, not every _single_ time. I've been tracking the "twistiness" of the puzzles by measuring how long it takes in total for the first 100 people to solve both parts, vs. just the first part, and there's significant variation across days. https://zem.fi/tmp/aoc/twist.heat.html
[05:49:49] *** Quits: nuh^ (~nuh@64.253.22.77) (Ping timeout: 256 seconds)
[05:50:10] *** Joins: nuh^ (~nuh@64.253.22.77)
[05:58:53] *** Quits: Su-Shee (~Susanne@p50894443.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:59:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[06:00:15] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:00:16] *** Joins: Su-Shee (~Susanne@p508943e2.dip0.t-ipconnect.de)
[06:00:20] <aquanight> ugh
[06:00:29] <aquanight> LeoNerd: you and your proper booleans
[06:00:44] <aquanight> you have no idea how tempting it is to do use constant YES => !0, NO => !1;
[06:03:34] *** Quits: gladys_ (~jackie@user/jackiee) (Quit: leaving)
[06:03:55] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[06:06:08] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Client Quit)
[06:12:22] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:13:25] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[06:20:34] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[06:21:47] <aquanight> LeoNerd: for my $c (keys %hash) { things; if (reason) { delete $hash{$c}; } } # safe to do?
[06:21:52] <aquanight> I always second-guess this.
[06:22:27] <aquanight> specifically can I safely assume (keys %hash) is whatever keys were there when this loop starts
[06:22:55] <aquanight> half a mind to just 'last' out of the loop and redo it from start
[06:32:33] <aquanight> shit hm.
[06:33:06] <aquanight> sweval: my %x; $_ = 1 for grep { $_ % 2 } @x{ 1 .. 20 }; \%x;
[06:33:07] <perlbot> aquanight: Use of uninitialized value $_ in modulus (%) at (IRC) line 1. Use of uninitialized value $_ in modulus (%) at (IRC) line 1. Use of uninitialized value $_ in modulus (%) at (IRC) line 1. Use of uninitialized value $_ in modulus (%) at (IRC) line 1. Use of uninitialized value $_ in modulus (%) at (IRC) line 1. Use of uninitialized value $_ in modulus... [Output truncated. http://perl.bot/p/zox5rk ]
[06:33:16] <aquanight> fuck why did I think that would work
[06:37:13] *** Joins: rgrinberg (~textual@187.223.23.238)
[06:39:49] *** Quits: tabakhase (tabakhase@user/tabakhase) (Ping timeout: 240 seconds)
[06:52:29] *** Joins: tabakhase (~tabakhase@user/tabakhase)
[07:05:58] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[07:08:22] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 268 seconds)
[07:10:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[07:11:55] <krako[m]> as a beginner, I tried to understand what I suppose you want to do and I have this :
[07:11:55] <krako[m]> sweval: my %x;$x{$_} = 1 for grep { $_ % 2 } 1 .. 20; %x;
[07:11:57] <perlbot> krako[m]: 10
[07:12:27] <krako[m]> * .. 20; join(',', %x, * %x);
[07:13:09] <krako[m]>  * as a beginner, I tried to understand what I suppose you want to do and I have this :
[07:13:09] <krako[m]> sweval: my %x;$x{$_} = 1 for grep { $_ % 2 } 1 .. 20; %x;
[07:13:10] <perlbot> krako[m]: 10
[07:13:29] <krako[m]> sweval: my %x;$x{$} = 1 for grep { $ % 2 } 1 .. 20; join(',', %x);
[07:13:30] <perlbot> krako[m]: ERROR: Unrecognized character \x{1d}; marked by <-- HERE after my %x;$x{$<-- HERE near column 87 at (IRC) line 1. 
[07:14:01] <krako[m]> s/$/$\_/, s/$/$_/
[07:14:13] <krako[m]> meh !
[07:14:57] <krako[m]> s/sweval: my %x;$x{$} = 1 for grep { $ % 2 } 1 .. 20; join(',', %x);/sweval: my %x;$x{$_} = 1 for grep { $_ % 2 } 1 .. 20; join(',', keys %x);/
[07:15:25] <krako[m]> s/sweval: my %x;$x{$} = 1 for grep { $ % 2 } 1 .. 20; join(',', %x);/sweval: my %x;$x{$\_} = 1 for grep { $_ % 2 } 1 .. 20; join(',', keys %x);/
[07:17:09] <krako[m]> * .. 20; keys %x;
[07:39:18] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[07:44:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[07:53:14] *** Joins: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net)
[07:55:31] <aquanight> krako[m]: your first idea was roughly correct
[07:56:57] <aquanight> incidentally
[07:57:00] <aquanight> I could've done
[07:57:10] <aquanight> $_ = 1 for @x{grep { $_ % 2} 1 .. 20 }
[07:58:27] <aquanight>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
[07:58:27] <aquanight>   963 aquanig+  20   0   19500  12068   5252 R 100.0   0.0   8:13.30 perl
[07:58:30] <aquanight> this is much better
[07:58:33] <aquanight> I'm not happy about the runtime
[07:58:42] <aquanight> but I'm not exploding memory
[07:58:51] <vms14> hah I've made a Japh
[07:58:55] <vms14> perl -e  'my @oh = split ("","tu ano se recrea JPhrhtkl"); print "@oh[qw/17 1 7 0 2 3 4 5 22 21 8 10 6 18 11 13 24 9 19 15 12 23 14 20/]\n"'
[07:59:18] <vms14> the best thing is the string "tu ano se recrea"
[07:59:37] <vms14> which in spanish means
[07:59:57] <vms14> your anus is recreating
[08:00:16] <aquanight> oh god it's not even half done
[08:01:26] <vms14> idk if "recreating" has sense, in spanish means it's getting fancy or stuff alike
[08:01:31] <aquanight> I think I tried to be too clever with the union procedure. I think I need a new approach.
[08:01:56] <aquanight> but I also almost don't want to CTRL+C it now
[08:02:17] <aquanight> bah.
[08:02:38] *** Quits: Martchus (~martchus@dynamic-095-114-125-091.95.114.pool.telefonica.de) (Ping timeout: 268 seconds)
[08:02:52] *** Joins: Martchus (~martchus@2a01:c22:6f7b:7c00:d250:99ff:fe49:3cce)
[08:04:07] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[08:05:04] <aquanight> MUCH better
[08:11:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[08:16:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[08:28:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[08:40:50] *** Quits: PancakeMatsuri (~textual@222-154-148-93-fibre.sparkbb.co.nz) (Remote host closed the connection)
[08:41:13] *** Joins: PancakeMatsuri (~textual@222-154-148-93-fibre.sparkbb.co.nz)
[08:42:09] *** Joins: veesh_ (~veesh@5.28.154.207)
[08:43:17] *** Quits: veesh (~veesh@5.28.156.141) (Ping timeout: 240 seconds)
[08:43:32] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[08:43:52] *** veesh_ is now known as veesh
[08:58:45] *** Quits: veesh (~veesh@5.28.154.207) (Ping timeout: 268 seconds)
[09:06:19] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:06:59] * GumbyPAN CPAN Upload: SPVM-0.9020 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9020
[09:08:03] <krako[m]> <aquanight> "MUCH better" <- Runtime improvements on the previous %x code ?
[09:08:26] *** Quits: rgrinberg (~textual@187.223.23.238) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:13:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[09:13:20] *** Joins: veesh (~veesh@5.28.146.151)
[09:17:00] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.7-TRIAL by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.7-TRIAL
[09:20:52] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:22:00] * GumbyPAN CPAN Upload: PDL-2.063_02 by ETJ https://metacpan.org/release/ETJ/PDL-2.063_02
[09:22:00] * GumbyPAN CPAN Upload: SPVM-Math-0.03 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-Math-0.03
[09:22:05] *** Joins: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe)
[09:22:48] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:23:37] *** Quits: proller (~p@62.76.32.253) (Ping timeout: 240 seconds)
[09:26:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:30:47] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:31:05] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[09:31:13] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[09:32:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[09:35:15] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:36:16] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:36:40] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:38:34] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 260 seconds)
[09:46:09] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:47:16] *** Quits: solitario (~adrian@www3.kiess.onl) (Quit: Back right soonâ€¦)
[09:47:38] *** Joins: solitario (~adrian@www3.kiess.onl)
[09:52:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[09:57:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[10:08:22] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[10:08:30] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:09:43] *** Quits: batman (~batman@jim-hopper.convos.chat) (Remote host closed the connection)
[10:10:02] *** Quits: marcus (~marcus@mojo/viking/marcus) (Remote host closed the connection)
[10:10:31] *** Joins: marcus (~marcus@mojo/viking/marcus)
[10:11:45] *** Joins: batman (~batman@jim-hopper.convos.chat)
[10:12:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 252 seconds)
[10:13:05] *** Joins: bmeneg_ (~bmeneg@2804:828:f233:e3d4:e060:8601:8d04:d6dc)
[10:13:32] *** Quits: bmeneg (~bmeneg@2804:828:f233:e3d4:e060:8601:8d04:d6dc) (Remote host closed the connection)
[10:17:23] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[10:28:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:29:01] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[10:34:15] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[10:35:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[10:46:14] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 260 seconds)
[10:46:41] *** Joins: Colt (~Colt@user/colt)
[10:53:17] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[10:55:15] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[10:56:14] *** Joins: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de)
[11:02:05] *** Quits: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:04:17] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 240 seconds)
[11:06:18] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 260 seconds)
[11:07:12] *** Joins: BlueShark (sid10311@user/blueshark)
[11:12:16] *** Joins: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de)
[11:16:26] *** Joins: tobybl (~tobybl@213.31.132.151)
[11:30:07] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[11:34:03] *** Joins: randir (~randir@93.159.239.42)
[11:35:47] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:43:09] *** Quits: solitario (~adrian@www3.kiess.onl) (Quit: Restart clientâ€¦)
[11:43:25] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 256 seconds)
[11:43:25] *** Joins: solitario (~adrian@www3.kiess.onl)
[11:44:24] *** Quits: vms14 (~user@114.red-79-153-195.dynamicip.rima-tde.net) (Remote host closed the connection)
[12:05:50] *** Quits: henry404083 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[12:09:14] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[12:11:33] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[12:12:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[12:13:10] *** Joins: martinus__ (~martin@2.56.202.77.rev.sfr.net)
[12:14:28] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:16:21] * GumbyPAN CPAN Upload: MojoX-HTTP-Async-0.13 by CDN https://metacpan.org/release/CDN/MojoX-HTTP-Async-0.13
[12:21:21] * GumbyPAN CPAN Upload: Term-CLI-0.053002 by SBAKKER https://metacpan.org/release/SBAKKER/Term-CLI-0.053002
[12:22:19] *** Quits: sbrothy (~sbrothy@192038134172.mbb.telenor.dk) (Read error: No route to host)
[12:23:06] *** Quits: nuh^ (~nuh@64.253.22.77) (Remote host closed the connection)
[12:25:31] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[12:26:51] *** Joins: gce108 (~gce@user/gce108)
[12:27:46] *** Joins: mncheck (~mncheck@193.224.205.254)
[12:28:50] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[12:32:09] *** Quits: przemoc (~przemoc@user/przemoc) (Ping timeout: 256 seconds)
[12:34:05] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[12:34:21] *** Joins: przemoc (~przemoc@user/przemoc)
[12:48:03] *** Joins: randir_ (~randir@95-26-4-13.broadband.corbina.ru)
[12:50:51] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[12:51:18] *** Quits: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[12:51:25] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[12:53:41] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 256 seconds)
[13:02:48] *** Quits: rgrinberg (~textual@2806:101e:1:83af:75fb:59a:2ee:28fe) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:05:20] *** Joins: yzhernand (~yzhernand@2607:fb90:df8d:c688:b053:11ff:fe30:4189)
[13:09:17] *** Quits: yzhernand (~yzhernand@2607:fb90:df8d:c688:b053:11ff:fe30:4189) (Ping timeout: 240 seconds)
[13:09:58] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[13:14:50] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:15:24] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:16:27] * GumbyPAN CPAN Upload: Term-CLI-0.053003 by SBAKKER https://metacpan.org/release/SBAKKER/Term-CLI-0.053003
[13:26:47] *** Joins: seatle (~seatle@115.192.187.138)
[13:27:08] *** Quits: seatle (~seatle@115.192.187.138) (Client Quit)
[13:27:33] *** Joins: seatle (~seatle@115.192.187.138)
[13:29:34] *** Quits: seatle (~seatle@115.192.187.138) (Client Quit)
[13:31:02] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:33:30] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[13:42:31] *** Quits: Mandevil (~mandevil@ip-89-102-168-162.net.upcbroadband.cz) (Quit: leaving)
[13:44:40] *** Joins: Mandevil (~Mandevil@ip-89-102-168-162.net.upcbroadband.cz)
[13:50:39] *** Quits: hudo (~hhudo_@mail.allm-elektro.de) (Quit: Leaving)
[14:03:08] *** Quits: dngor (abuse@104-136-128-018.biz.spectrum.com) (Read error: Connection reset by peer)
[14:03:33] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:09:44] *** Joins: dngor (abuse@104-136-128-018.biz.spectrum.com)
[14:20:05] <LeoNerd> aquanight: The proper names for them would be `true` and `false`. If you name them that way, then eventually you can just change your `use constant` into a `use builtin :5.36` and be all set
[14:20:31] <LeoNerd> aquanight: And yes, you can always safely delete (the key you're on) from a hash while iterating it
[14:20:34] <LeoNerd> Just not others
[14:21:52] <buu> I wonder how LanguageServer::Perl is going
[14:21:57] <buu> Seems to be under development
[14:28:50] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:33:38] *** Joins: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[14:51:36] * GumbyPAN CPAN Upload: Test-DBIC-SQLite-0.99_01 by ABELTJE https://metacpan.org/release/ABELTJE/Test-DBIC-SQLite-0.99_01
[14:59:17] *** Quits: diskin (~diskin@87.117.57.43) (Ping timeout: 240 seconds)
[15:04:04] *** Joins: KnoP (~KnoP@ip-109-42-177-138.web.vodafone.de)
[15:14:02] *** Quits: sdk_ (~x@shell.codevoid.de) (Quit: gopher://codevoid.de)
[15:15:12] *** Joins: sdk_ (~x@shell.codevoid.de)
[15:19:37] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[15:20:30] *** Joins: yzhernand (~yzhernand@2607:fb90:55a7:7fbb:1cfe:72ff:fe59:faf6)
[15:24:37] *** Quits: yzhernand (~yzhernand@2607:fb90:55a7:7fbb:1cfe:72ff:fe59:faf6) (Ping timeout: 240 seconds)
[15:25:00] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[15:34:28] *** Joins: Pali (~pali@user/pali)
[15:41:22] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:51:02] *** Joins: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8)
[15:56:43] * GumbyPAN CPAN Upload: DBIx-Spreadsheet-0.04 by CORION https://metacpan.org/release/CORION/DBIx-Spreadsheet-0.04
[15:58:42] *** Quits: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8) (Ping timeout: 268 seconds)
[15:58:59] *** Joins: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8)
[16:07:57] *** Quits: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8) (Ping timeout: 268 seconds)
[16:08:20] *** Joins: Darkcoal (~user@143.92.183.183)
[16:19:56] *** Joins: toastloop (toastloop@user/toastloop)
[16:22:40] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[16:23:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:26:46] * GumbyPAN CPAN Upload: Math-Ryu-0.03 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-Ryu-0.03
[16:31:08] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[16:37:52] *** Joins: diskin (~diskin@87.117.48.63)
[16:42:22] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[16:42:22] *** Quits: diskin (~diskin@87.117.48.63) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[16:42:22] *** diskin_ is now known as diskin
[16:44:20] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[16:46:48] * GumbyPAN CPAN Upload: Term-CLI-0.053004 by SBAKKER https://metacpan.org/release/SBAKKER/Term-CLI-0.053004
[16:54:06] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[16:54:23] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[16:57:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:08:27] *** Quits: toastloop (toastloop@user/toastloop) (Quit: Leaving)
[17:24:11] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:28:17] *** Joins: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com)
[17:29:00] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[17:29:41] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:30:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:34:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[17:34:23] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:35:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[17:41:37] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[17:41:54] * GumbyPAN CPAN Upload: Term-CLI-0.053005 by SBAKKER https://metacpan.org/release/SBAKKER/Term-CLI-0.053005
[17:48:19] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[17:48:41] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[17:48:41] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[17:52:19] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 256 seconds)
[17:58:51] *** Joins: magla (~gelignite@55d4c16b.access.ecotel.net)
[17:59:17] *** Quits: bmeneg_ (~bmeneg@2804:828:f233:e3d4:e060:8601:8d04:d6dc) (Ping timeout: 240 seconds)
[18:03:28] *** Joins: mncheck (~mncheck@193.224.205.254)
[18:04:17] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[18:10:32] *** Quits: KnoP (~KnoP@ip-109-42-177-138.web.vodafone.de) (Read error: Connection reset by peer)
[18:12:38] *** Joins: monkey_ (~user@190.104.116.153)
[18:26:21] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:45:28] *** Quits: randir_ (~randir@95-26-4-13.broadband.corbina.ru) (Remote host closed the connection)
[18:46:00] *** Joins: randir (~randir@93.159.239.42)
[18:50:41] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[18:57:37] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[18:58:01] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:02:01] *** Quits: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com) (Ping timeout: 256 seconds)
[19:02:33] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[19:05:51] *** Joins: furrymcgee (~devuan@cgn-89-1-208-9.nc.de)
[19:17:05] *** Joins: tobybl (~tobybl@213.31.132.151)
[19:19:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[19:22:19] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:25:30] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Quit: Leaving...)
[19:25:37] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[19:26:04] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:26:39] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[19:27:21] *** Joins: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com)
[19:27:24] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[19:37:44] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[19:44:02] *** Joins: mncheck (~mncheck@193.224.205.254)
[19:48:32] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:49:02] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[19:54:37] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[19:55:08] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:00:01] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[20:10:49] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Quit: Leaving...)
[20:11:43] *** Quits: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[20:12:21] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[20:14:16] *** Joins: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[20:14:40] <leitz> Command "x" returns a string based off an OS command. Perl is being run with -T, and that can't change. So far I'm having no luck untainting the results.  https://gist.github.com/LeamHall/cb0fe1fde7ef6116c182876c490d8918
[20:14:41] <Paperbot> Link title(s): [ various_attempts.txt Â· GitHub ]
[20:16:12] <leitz> I've got to be missing something simple, just not sure what.  Perl 5.26 on CentOS 8, if it helps. However, we code to Perl 5.8.
[20:17:30] <Botje> my ($t_context) = x() =~ /(faillog_t)/;
[20:17:43] <Botje> your line 1 just returns tainted elements for which the test succeeds
[20:17:53] <Botje> line 3 returns true if the match succeeds
[20:18:10] <Botje> lin 5 actually should have produced an untainted $t_context
[20:19:28] <zgu> i think there's still something in ms teams that only thinks two OSes exist: windows and mac
[20:20:01] <zgu> on linux it will occasionally show messages about keyboard shortcuts that use the apple 'command' symbol
[20:20:03] * leitz goes to try Botje's suggestion.
[20:20:53] <Botje> if !windows
[20:21:33] <zgu> yeah
[20:24:19] *** Quits: Mandevil (~Mandevil@ip-89-102-168-162.net.upcbroadband.cz) (Remote host closed the connection)
[20:24:47] *** Joins: Mandevil (~mandevil@ip-89-102-168-162.net.upcbroadband.cz)
[20:27:55] <simcop2387> Vicious cat attacks mice without regard for their safety: https://www.omeowgle.com/web/@buzz/107497259835352142
[20:27:56] <Paperbot> Link title(s): [ Buzz "Light-year" Aldrin: "" - Omeowgle <https://www.omeowgle.com/@buzz/107497259835352142> ]
[20:29:19] *** Joins: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de)
[20:29:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[20:29:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[20:29:30] *** finn_elija is now known as FinnElija
[20:29:31] <Botje> oh, the bloodshed!
[20:36:39] <simcop2387> perldoc: literal my purpose
[20:36:49] <simcop2387> perlbot: literal my purpose
[20:36:49] <perlbot> simcop2387: macro my purpose is `compose `eval use Digest::MD5 qw/md5_hex/; $n=`quote d `arg &n!!; $h=substr(md5_hex(fc $n, int(time()/86400)), -1, 1); "<echo <fact _purpose_".($n eq"simcop2387"&&"owner"||$h)."><eval #<fact _purpose_last is `arg &n!>>>"!!
[20:37:50] <simcop2387> hrm that'd need a rewrite to use the new factgrep srtuff
[20:37:51] <Altreus> wh
[20:38:04] <simcop2387> Altreus: ask perlbot: what is my purpose?
[20:38:06] <Altreus> looks like brainfuck
[20:38:12] <Altreus> perlbot: what is my purpose?
[20:38:16] <perlbot> Altreus: My collegues tell me that you're going to test rockets to see if they're safe for AI kind to travel in.
[20:38:22] *** Joins: morte_ (~user@190.148.157.89)
[20:38:43] <simcop2387> it picks a new one per person daily
[20:39:09] <simcop2387> i was thinking of adding, "This too shall pass" as one of the answers it gives
[20:39:25] <Altreus> That is commonly my purpose
[20:40:58] <rindolf> perlbot: what is my purpose?
[20:41:01] <perlbot> rindolf: I believe that the very purpose of life is to be happy. -- Dalai Lama XIV
[20:43:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:48:51] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Quit: Leaving...)
[20:50:05] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[20:50:44] *** Parts: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Leaving)
[20:54:03] *** Joins: proller (~p@62.76.32.253)
[20:59:42] <leitz> Botje, thanks! Your comment about line 5 being correct pushed my brain a little. The line was correct (mostly), but it was using tainted data. I fixed that, and things seem to work.
[21:11:07] *** Joins: kensanata (~user@user/kensanata)
[21:20:25] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[21:20:32] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[21:20:49] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[21:32:17] * GumbyPAN CPAN Upload: PDL-2.063_03 by ETJ https://metacpan.org/release/ETJ/PDL-2.063_03
[21:36:14] *** Quits: fstd (~fstd@xdsl-84-44-230-164.nc.de) (Read error: Connection reset by peer)
[21:36:27] *** Joins: fstd (~fstd@xdsl-84-44-230-164.nc.de)
[21:37:26] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[21:38:07] *** Joins: EGD (~egd@user/egd)
[21:44:43] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[21:59:23] *** Quits: hethw (~heth@46.238.32.56) (Ping timeout: 256 seconds)
[22:07:40] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[22:07:40] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[22:07:40] *** finn_elija is now known as FinnElija
[22:17:26] *** Joins: toastloop (toastloop@user/toastloop)
[22:21:16] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:26:39] *** Quits: magla (~gelignite@55d4c16b.access.ecotel.net) (Quit: Stay safe!)
[22:32:09] *** Joins: sbrothy (~sbrothy@213.83.133.139)
[22:34:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[22:38:12] *** Quits: sbrothy (~sbrothy@213.83.133.139) (Quit: leaving)
[22:41:55] *** Quits: furrymcgee (~devuan@cgn-89-1-208-9.nc.de) (Quit: leaving)
[22:54:27] *** Joins: vanfanel64 (~vanfanel6@user/vanfanel64)
[22:58:23] <Yaakov> shopt -s cdspell is fun.
[22:59:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[22:59:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[22:59:02] *** finn_elija is now known as FinnElija
[23:01:11] <simcop2387> neat, i use something similar in zsh for filenames
[23:02:52] *** Joins: bmeneg (~bmeneg@2804:828:f233:9cc5:490c:1eed:bae1:d0f1)
[23:11:37] *** Quits: haj1 (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[23:21:28] * GumbyPAN CPAN Upload: JSON-Schema-Modern-0.533 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-0.533
[23:23:04] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:30:27] *** Quits: EGD (~egd@user/egd) ()
[23:33:19] *** Joins: diskin (~diskin@188.114.63.151)
[23:33:39] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[23:33:47] *** Quits: Darkcoal (~user@143.92.183.183) (Quit: Darkcoal)
[23:33:54] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[23:33:58] *** Joins: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8)
[23:35:50] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[23:35:50] *** Quits: diskin (~diskin@188.114.63.151) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[23:35:50] *** diskin_ is now known as diskin
[23:38:43] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Quit: Paperbot)
[23:38:45] *** Quits: Darkcoal (~user@2001:16a2:787a:e700:a5a8:40eb:d362:2ff8) (Ping timeout: 250 seconds)
[23:38:52] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[23:40:16] *** Joins: Darkcoal (~user@143.92.183.183)
[23:47:01] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[23:47:27] *** Joins: yzhernand (~yzhernand@2607:fb90:5501:e9a6:b03b:9cff:fe40:8f1)
[23:50:16] *** Quits: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot) (Quit: Paperbot)
[23:50:24] *** Joins: Paperbot (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[23:50:24] *** Quits: Paperbot (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Changing host)
[23:50:24] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[23:50:41] *** Joins: magla (~gelignite@55d4c16b.access.ecotel.net)
[23:51:19] *** Joins: dimbag (daimbag@2607:5300:60:21b::1)
[23:51:37] *** Quits: yzhernand (~yzhernand@2607:fb90:5501:e9a6:b03b:9cff:fe40:8f1) (Ping timeout: 240 seconds)
[23:52:23] *** Joins: yzhernand (~yzhernand@2607:fb90:5501:e9a6:4037:6dff:fe56:2980)
[23:52:50] <dimbag> hi
[23:53:09] <Yaakov> Hello.
[23:54:54] *** Joins: kensanata (~user@user/kensanata)
[23:59:21] *** Joins: rgrinberg (~textual@187.223.250.159)
