log/greyrat/Libera/#linux/2021-9-6.log:2721:[13:41] <Sauvin> lucerne, what syntax are you using to elicit the error you want to ignore?
log/greyrat/Libera/#pandoc/2021-8-28.log:19:[15:11] <ede> lucerne: i always converted from markdown, but never to. maybe the same pattern: target+ext1-ext2. if not, maybe select another output format like markdown_strict.
log/greyrat/Libera/#lesswrong/2021-8-27.log:1021:[22:33] <gwern> ...HÃ´tel National, Lucerne, Switzerland, June 30, 1939.[21][22][23]' hee hee
log/greyrat/Libera/#pandoc/2021-8-27.log:17:[16:15] <ede> lucerne, just stumbled upon it myself (writing some text which i wanted to actually include it), check Extension: header_attributes
log/greyrat/Libera/#css/2021-8-24.log:154:[15:56] <hassoon> lucerne: you can make a browser extension that does that for you whenever you openup the github issues
log/greyrat/Libera/#css/2021-8-24.log:136:[15:45] <hassoon> lucerne: above the posts? you mean in a fixed manner ? or glued above the posts and then it should disappear with the scroll ?
log/greyrat/Libera/#debian/2021-8-16.log:473:[7:24] <jhutchins> greyrat: Does it not write to a log in /root?
greyrat/Libera/#debian/2021-8-16.log:473:[7:24] <jhutchins> greyrat: Does it not write to a log in /root?
log/greyrat/Libera/#org-mode/2021-8-12.log:203:[18:17] <ericsfraga> lucerne: check out the value of org-link-parameters. There should be an entry for mailto: links.  You may be able to customise this to start up Chrome with gmail as the site?
greyrat/Libera/#org-mode/2021-8-12.log:203:[18:17] <ericsfraga> lucerne: check out the value of org-link-parameters. There should be an entry for mailto: links.  You may be able to customise this to start up Chrome with gmail as the site?
log/greyrat/Libera/#debian/2021-8-9.log:1273:[18:54] <greatcoof> n4dir: also there is a guy named greyRat
greyrat/Libera/#debian/2021-8-9.log:1273:[18:54] <greatcoof> n4dir: also there is a guy named greyRat
log/greyrat/Libera/#css/2021-8-4.log:301:[15:0] <hassoon> lucerne: for .code-excerpt .code, do white-space:normal;
greyrat/Libera/#css/2021-8-4.log:301:[15:0] <hassoon> lucerne: for .code-excerpt .code, do white-space:normal;
log/greyrat/Libera/#css/2021-8-4.log:292:[14:51] <hassoon> lucerne: you don't want the text blocks to be scrollable in result ?
greyrat/Libera/#css/2021-8-4.log:292:[14:51] <hassoon> lucerne: you don't want the text blocks to be scrollable in result ?
log/greyrat/Libera/#css/2021-8-4.log:288:[14:50] <hassoon> lucerne: i don't understand
greyrat/Libera/#css/2021-8-4.log:288:[14:50] <hassoon> lucerne: i don't understand
log/greyrat/Libera/#reddit-sysadmin/2021-8-2.log:3485:[21:35] <iphone> greyrat_: rats are cool
greyrat/Libera/#reddit-sysadmin/2021-8-2.log:3485:[21:35] <iphone> greyrat_: rats are cool
log/greyrat/Libera/#emacs/2021-8-2.log:723:[10:27] <aidalgol> twb: AIUI, alfalfa is what we call lucerne.
greyrat/Libera/#emacs/2021-8-2.log:723:[10:27] <aidalgol> twb: AIUI, alfalfa is what we call lucerne.
log/greyrat/Libera/#commonlisp/2021-7-17.log:230:[17:37] <pjb> lucerne: the output streams won't count the newlines. Only if the current column is zero.
greyrat/Libera/#commonlisp/2021-7-17.log:230:[17:37] <pjb> lucerne: the output streams won't count the newlines. Only if the current column is zero.
log/greyrat/Libera/#commonlisp/2021-7-17.log:229:[17:36] <pjb> lucerne: well, for at-least 2 lines, perhaps ~2% would be better. Of ~&~V% (1- n)
greyrat/Libera/#commonlisp/2021-7-17.log:229:[17:36] <pjb> lucerne: well, for at-least 2 lines, perhaps ~2% would be better. Of ~&~V% (1- n)
log/greyrat/Libera/#commonlisp/2021-7-17.log:227:[17:35] <pjb> lucerne: ~2&
greyrat/Libera/#commonlisp/2021-7-17.log:227:[17:35] <pjb> lucerne: ~2&
log/greyrat/Libera/##anime/2021-7-14.log:255:[2:18] <ImoutoBot> beaky: lucerne has no quotes.
greyrat/Libera/##anime/2021-7-14.log:255:[2:18] <ImoutoBot> beaky: lucerne has no quotes.
log/greyrat/Libera/##anime/2021-7-14.log:254:[2:18] <beaky> !quote lucerne 
greyrat/Libera/##anime/2021-7-14.log:254:[2:18] <beaky> !quote lucerne 
log/greyrat/Libera/#python/2021-7-9.log:1450:[12:58] <rannnn8888> greyrat here ?
greyrat/Libera/#python/2021-7-9.log:1450:[12:58] <rannnn8888> greyrat here ?
log/greyrat/Libera/#clschool/2021-6-20.log:206:[17:51] <beach> lucerne: Yes, that's what I tell them.  If they have a group that knows about compilers and language implementation, they are fine.  Most don't.
greyrat/Libera/#clschool/2021-6-20.log:206:[17:51] <beach> lucerne: Yes, that's what I tell them.  If they have a group that knows about compilers and language implementation, they are fine.  Most don't.
log/greyrat/Libera/#clschool/2021-6-20.log:155:[17:31] <beach> greyrat: We need competent teachers more than anything, and the university system does not produce such teachers. 
greyrat/Libera/#clschool/2021-6-20.log:155:[17:31] <beach> greyrat: We need competent teachers more than anything, and the university system does not produce such teachers. 
log/greyrat/Libera/#clschool/2021-6-20.log:143:[17:25] <beach> greyrat: My domain is at the university level.  I don't have the competence for the lower levels. 
greyrat/Libera/#clschool/2021-6-20.log:143:[17:25] <beach> greyrat: My domain is at the university level.  I don't have the competence for the lower levels. 
log/greyrat/Libera/#clschool/2021-6-20.log:135:[17:23] <beach> greyrat: I can't argue with K12 in your country.
greyrat/Libera/#clschool/2021-6-20.log:135:[17:23] <beach> greyrat: I can't argue with K12 in your country.
log/greyrat/Libera/#clschool/2021-6-20.log:83:[17:4] <beach> lucerne: I take it you are not pleased with that solution. 
greyrat/Libera/#clschool/2021-6-20.log:83:[17:4] <beach> lucerne: I take it you are not pleased with that solution. 
log/greyrat/Libera/#emacs/2021-6-20.log:284:[2:26] <MattByName> theoceaniscool hmw brainfunnel zebrag Krystof hypera1r siika__ lucerne
greyrat/Libera/#emacs/2021-6-20.log:284:[2:26] <MattByName> theoceaniscool hmw brainfunnel zebrag Krystof hypera1r siika__ lucerne
log/greyrat/Libera/#commonlisp/2021-6-20.log:15:[0:33] <phoe> greyrat: but still, this code should be equivalent to (with-input-from-string (s "...") (use-stream s)) as long as S does not leak outside this context
greyrat/Libera/#commonlisp/2021-6-20.log:15:[0:33] <phoe> greyrat: but still, this code should be equivalent to (with-input-from-string (s "...") (use-stream s)) as long as S does not leak outside this context
log/greyrat/Libera/#commonlisp/2021-6-20.log:9:[0:28] <phoe> greyrat: with-input-from-string is going to work with dynamic context
greyrat/Libera/#commonlisp/2021-6-20.log:9:[0:28] <phoe> greyrat: with-input-from-string is going to work with dynamic context
log/greyrat/Libera/#commonlisp/2021-6-19.log:565:[18:51] <edgar-rft> greyrat: according to http://www.sbcl.org/manual/ --script <filename> implies --no-userinit --no-sysinit --disable-debugger --end-toplevel-options
greyrat/Libera/#commonlisp/2021-6-19.log:565:[18:51] <edgar-rft> greyrat: according to http://www.sbcl.org/manual/ --script <filename> implies --no-userinit --no-sysinit --disable-debugger --end-toplevel-options
log/greyrat/Libera/#commonlisp/2021-6-19.log:525:[16:23] <etimmons> lucerne: there's also qlot and clpm
greyrat/Libera/#commonlisp/2021-6-19.log:525:[16:23] <etimmons> lucerne: there's also qlot and clpm
log/greyrat/Libera/#commonlisp/2021-6-19.log:519:[16:12] <ldb> lucerne: ASDF is used by Quicklisp to load dists, so if you clone the git repos to quicklisp/local-projects, you should be able to quickload them as well
greyrat/Libera/#commonlisp/2021-6-19.log:519:[16:12] <ldb> lucerne: ASDF is used by Quicklisp to load dists, so if you clone the git repos to quicklisp/local-projects, you should be able to quickload them as well
log/greyrat/Libera/#commonlisp/2021-6-19.log:511:[16:6] <ldb> lucerne: you know how to use ASDF?
greyrat/Libera/#commonlisp/2021-6-19.log:511:[16:6] <ldb> lucerne: you know how to use ASDF?
log/greyrat/Libera/#commonlisp/2021-6-19.log:507:[15:51] <phoe> lucerne: https://github.com/Zulu-Inuoe/jzon
greyrat/Libera/#commonlisp/2021-6-19.log:507:[15:51] <phoe> lucerne: https://github.com/Zulu-Inuoe/jzon
log/greyrat/Libera/#emacs-circe/2021-6-18.log:20:[16:8] <bremner> greyrat: customize lui-max-buffer-size
greyrat/Libera/#emacs-circe/2021-6-18.log:20:[16:8] <bremner> greyrat: customize lui-max-buffer-size
log/greyrat/Libera/#emacs-circe/2021-6-18.log:14:[16:5] <bremner> greyrat: do you have any limits on buffer size?
greyrat/Libera/#emacs-circe/2021-6-18.log:14:[16:5] <bremner> greyrat: do you have any limits on buffer size?
log/greyrat/Libera/#perl/2021-6-18.log:164:[1:18] <par> greyrat: maybe have it print everyline except the one that match regex?
greyrat/Libera/#perl/2021-6-18.log:164:[1:18] <par> greyrat: maybe have it print everyline except the one that match regex?
log/greyrat/Libera/#emacs/2021-6-18.log:92:[0:52] <bpalmer> greyrat: use the lexical-let macro
greyrat/Libera/#emacs/2021-6-18.log:92:[0:52] <bpalmer> greyrat: use the lexical-let macro
log/greyrat/Libera/#emacs/2021-6-18.log:90:[0:52] <bpalmer> greyrat: you probably are evaluating it in a location that uses dynamic scoping.
greyrat/Libera/#emacs/2021-6-18.log:90:[0:52] <bpalmer> greyrat: you probably are evaluating it in a location that uses dynamic scoping.
log/greyrat/Libera/#evil-mode/2021-6-17.log:33:[18:33] <i0e> greyrat: but you can use Ctrl+h if you would like to read that code.
greyrat/Libera/#evil-mode/2021-6-17.log:33:[18:33] <i0e> greyrat: but you can use Ctrl+h if you would like to read that code.
log/greyrat/Libera/#evil-mode/2021-6-17.log:32:[18:27] <i0e> greyrat: oh, sorry i dont know how targets does it
greyrat/Libera/#evil-mode/2021-6-17.log:32:[18:27] <i0e> greyrat: oh, sorry i dont know how targets does it
log/greyrat/Libera/#evil-mode/2021-6-17.log:30:[18:25] <i0e> greyrat: are you using /?
greyrat/Libera/#evil-mode/2021-6-17.log:30:[18:25] <i0e> greyrat: are you using /?
log/greyrat/Libera/#emacs/2021-6-17.log:1760:[18:24] <wasamasa> greyrat: this will actually give you the source form, unlike symbol-function (which might give you bytecode instead)
greyrat/Libera/#emacs/2021-6-17.log:1760:[18:24] <wasamasa> greyrat: this will actually give you the source form, unlike symbol-function (which might give you bytecode instead)
log/greyrat/Libera/#emacs/2021-6-17.log:1759:[18:23] <wasamasa> greyrat: in which case, macroexpand it
greyrat/Libera/#emacs/2021-6-17.log:1759:[18:23] <wasamasa> greyrat: in which case, macroexpand it
log/greyrat/Libera/#emacs/2021-6-17.log:1758:[18:23] <wasamasa> greyrat: let me guess, you're trying to make sense of a macro
greyrat/Libera/#emacs/2021-6-17.log:1758:[18:23] <wasamasa> greyrat: let me guess, you're trying to make sense of a macro
log/greyrat/Libera/#emacs/2021-6-17.log:1755:[18:22] <wasamasa> greyrat: symbol-function
greyrat/Libera/#emacs/2021-6-17.log:1755:[18:22] <wasamasa> greyrat: symbol-function
log/greyrat/Libera/#emacs/2021-6-14.log:2427:[21:41] <JordiGH> greyrat: Can a regex do this? Regexes can't count.
greyrat/Libera/#emacs/2021-6-14.log:2427:[21:41] <JordiGH> greyrat: Can a regex do this? Regexes can't count.
log/greyrat/Libera/#thelounge/2021-6-14.log:618:[15:38] <Snuupy> lucerne: what platform
greyrat/Libera/#thelounge/2021-6-14.log:618:[15:38] <Snuupy> lucerne: what platform
log/greyrat/Libera/#perl/2021-6-11.log:1103:[19:39] <gordonfish> greyrat: Ah, forgot that actually existed. Felt like a typo for a moment :)
greyrat/Libera/#perl/2021-6-11.log:1103:[19:39] <gordonfish> greyrat: Ah, forgot that actually existed. Felt like a typo for a moment :)
log/greyrat/Libera/#perl/2021-6-11.log:1070:[19:28] <Altreus> greyrat: there's only one perl process in your thing... can ripgrep perform both tests in the same process?
greyrat/Libera/#perl/2021-6-11.log:1070:[19:28] <Altreus> greyrat: there's only one perl process in your thing... can ripgrep perform both tests in the same process?
log/greyrat/Libera/#perl/2021-6-10.log:1447:[20:42] <revhippie> greyrat: you can impose scalar context with the concatenation operator -- print "$#a, " . @a . "\n";
greyrat/Libera/#perl/2021-6-10.log:1447:[20:42] <revhippie> greyrat: you can impose scalar context with the concatenation operator -- print "$#a, " . @a . "\n";
log/greyrat/Libera/#thelounge/2021-6-10.log:167:[15:38] <bl1nk> lucerne: If that's a user on this network you can use /query alis to open a chat with that user.
greyrat/Libera/#thelounge/2021-6-10.log:167:[15:38] <bl1nk> lucerne: If that's a user on this network you can use /query alis to open a chat with that user.
log/greyrat/Libera/#perl/2021-6-10.log:791:[12:0] <Grinnz> greyrat: it has custom parsing
greyrat/Libera/#perl/2021-6-10.log:791:[12:0] <Grinnz> greyrat: it has custom parsing
log/greyrat/Libera/#perl/2021-6-10.log:788:[11:59] <Grinnz> greyrat: first one - the filehandle argument is not followed by a comma
greyrat/Libera/#perl/2021-6-10.log:788:[11:59] <Grinnz> greyrat: first one - the filehandle argument is not followed by a comma
log/greyrat/Libera/#perl/2021-6-10.log:763:[11:52] <Gin> greyrat: My thought is that some more insightful questions can be asked through mailing lists.
greyrat/Libera/#perl/2021-6-10.log:763:[11:52] <Gin> greyrat: My thought is that some more insightful questions can be asked through mailing lists.
log/greyrat/Libera/#perl/2021-6-10.log:753:[11:47] <Gin> greyrat: What is Stackoverflow wanting?
greyrat/Libera/#perl/2021-6-10.log:753:[11:47] <Gin> greyrat: What is Stackoverflow wanting?
log/greyrat/Libera/#perl/2021-6-10.log:744:[11:43] <xenu> greyrat: mostly the fact that it lazy loads the posts using javascript and because of that it hijacks ctrl+f
greyrat/Libera/#perl/2021-6-10.log:744:[11:43] <xenu> greyrat: mostly the fact that it lazy loads the posts using javascript and because of that it hijacks ctrl+f
log/greyrat/Libera/#perl/2021-6-10.log:742:[11:42] <Gin> greyrat: I haven't
greyrat/Libera/#perl/2021-6-10.log:742:[11:42] <Gin> greyrat: I haven't
log/greyrat/Libera/#perl/2021-6-10.log:721:[11:38] <Grinnz> greyrat: for the record i personally prefer public logging, but in the case of this channel i don't care enough to make the case for it
greyrat/Libera/#perl/2021-6-10.log:721:[11:38] <Grinnz> greyrat: for the record i personally prefer public logging, but in the case of this channel i don't care enough to make the case for it
log/greyrat/Libera/#perl/2021-6-10.log:716:[11:35] <Grinnz> greyrat: yes, some places find it useful enough
greyrat/Libera/#perl/2021-6-10.log:716:[11:35] <Grinnz> greyrat: yes, some places find it useful enough
log/greyrat/Libera/#perl/2021-6-10.log:667:[11:19] <Grinnz> greyrat: you can use the substr function to see if a literal string is contained within another string, and even replace it with another string
greyrat/Libera/#perl/2021-6-10.log:667:[11:19] <Grinnz> greyrat: you can use the substr function to see if a literal string is contained within another string, and even replace it with another string
log/greyrat/Libera/#perl/2021-6-10.log:666:[11:19] <Grinnz> greyrat: there isn't
greyrat/Libera/#perl/2021-6-10.log:666:[11:19] <Grinnz> greyrat: there isn't
log/greyrat/Libera/#perl/2021-6-10.log:644:[11:12] <Grinnz> greyrat: nope, \E only works literally
greyrat/Libera/#perl/2021-6-10.log:644:[11:12] <Grinnz> greyrat: nope, \E only works literally
log/greyrat/Libera/#perl/2021-6-10.log:6:[1:12] <revhippie> greyrat: see https://perldoc.perl.org/perlre#Quantifiers
greyrat/Libera/#perl/2021-6-10.log:6:[1:12] <revhippie> greyrat: see https://perldoc.perl.org/perlre#Quantifiers
log/greyrat/Libera/#lesswrong/2021-6-10.log:81:[1:2] <Obormot\Arcturus> lucerne: Actions, see http://web.archive.org/web/20160419125154/http://www.irchelp.org/irchelp/rfc/ctcpspec.html
greyrat/Libera/#lesswrong/2021-6-10.log:81:[1:2] <Obormot\Arcturus> lucerne: Actions, see http://web.archive.org/web/20160419125154/http://www.irchelp.org/irchelp/rfc/ctcpspec.html
log/greyrat/Libera/#lesswrong/2021-6-10.log:67:[0:59] <dbohdan> lucerne: "Actions"
greyrat/Libera/#lesswrong/2021-6-10.log:67:[0:59] <dbohdan> lucerne: "Actions"
log/greyrat/Libera/#org-mode/2021-6-9.log:268:[23:31] <rdrg109> lucerne: You mean, let's say, using Org Mode in a Python comment?
greyrat/Libera/#org-mode/2021-6-9.log:268:[23:31] <rdrg109> lucerne: You mean, let's say, using Org Mode in a Python comment?
log/greyrat/Libera/#lesswrong/2021-6-9.log:1295:[23:30] <dbohdan> lucerne: I haven't seen an ebook of gwern's site.  It would be more difficult to adapt his site to a static format than it was SSC.  If you want a best-of list, try https://www.gwern.net/index#popular and https://www.gwern.net/index#notable.
greyrat/Libera/#lesswrong/2021-6-9.log:1295:[23:30] <dbohdan> lucerne: I haven't seen an ebook of gwern's site.  It would be more difficult to adapt his site to a static format than it was SSC.  If you want a best-of list, try https://www.gwern.net/index#popular and https://www.gwern.net/index#notable.
log/greyrat/Libera/#lesswrong/2021-6-9.log:1266:[23:2] <Logos01> lucerne: I'm not aware of any that don't.
greyrat/Libera/#lesswrong/2021-6-9.log:1266:[23:2] <Logos01> lucerne: I'm not aware of any that don't.
log/greyrat/Libera/#machomebrew/2021-6-9.log:7:[18:7] <R2robot> greyrat: one way is to edit the formula
greyrat/Libera/#machomebrew/2021-6-9.log:7:[18:7] <R2robot> greyrat: one way is to edit the formula
log/greyrat/Libera/#debian/2021-6-9.log:219:[5:12] <queso> greyrat, PMT: debian 11.0.  xfce 4.16.  X.Org version: 1.20.11.  Now when I do ctrl-shift-c the behavior is no different from ctrl-c.
greyrat/Libera/#debian/2021-6-9.log:219:[5:12] <queso> greyrat, PMT: debian 11.0.  xfce 4.16.  X.Org version: 1.20.11.  Now when I do ctrl-shift-c the behavior is no different from ctrl-c.
log/greyrat/Libera/#org-mode/2021-6-9.log:44:[2:44] <rdrg109> lucerne: Thank you for sharing that. I was wondering whether a tool for searching multiple code repositories existed, so thanks for that! :)
greyrat/Libera/#org-mode/2021-6-9.log:44:[2:44] <rdrg109> lucerne: Thank you for sharing that. I was wondering whether a tool for searching multiple code repositories existed, so thanks for that! :)
log/greyrat/Libera/#org-mode/2021-6-9.log:38:[1:51] <zebrag> lucerne: Nice search tool, thanks
greyrat/Libera/#org-mode/2021-6-9.log:38:[1:51] <zebrag> lucerne: Nice search tool, thanks
log/greyrat/Libera/#org-mode/2021-6-8.log:228:[17:59] <zebrag> hi lucerne
greyrat/Libera/#org-mode/2021-6-8.log:228:[17:59] <zebrag> hi lucerne
log/greyrat/Libera/#org-mode/2021-6-8.log:214:[17:49] <rdrg109> greyrat: If they are used in a code block, they are noweb references. Further information can be found in the section "(org) Noweb Reference Syntax" of the Org Mode info manual.
greyrat/Libera/#org-mode/2021-6-8.log:214:[17:49] <rdrg109> greyrat: If they are used in a code block, they are noweb references. Further information can be found in the section "(org) Noweb Reference Syntax" of the Org Mode info manual.
log/greyrat/Libera/#emacs-circe/2021-6-8.log:84:[16:5] <Thaodan> greyrat: true however bitlbee has better integration into IRC and I found using that inside emacs more pleasant
greyrat/Libera/#emacs-circe/2021-6-8.log:84:[16:5] <Thaodan> greyrat: true however bitlbee has better integration into IRC and I found using that inside emacs more pleasant
log/greyrat/Libera/#emacs-circe/2021-6-8.log:82:[16:5] <jdz> greyrat: I was rather looking for actual current memory contents, not memory behavior of a piece of code.
greyrat/Libera/#emacs-circe/2021-6-8.log:82:[16:5] <jdz> greyrat: I was rather looking for actual current memory contents, not memory behavior of a piece of code.
log/greyrat/Libera/#emacs-circe/2021-6-8.log:78:[16:3] <Thaodan> greyrat: Bitlbee is an IM to IRC bridge. 
greyrat/Libera/#emacs-circe/2021-6-8.log:78:[16:3] <Thaodan> greyrat: Bitlbee is an IM to IRC bridge. 
log/greyrat/Libera/#emacs-circe/2021-6-8.log:61:[15:56] <jdz> lucerne: What do you mean?
greyrat/Libera/#emacs-circe/2021-6-8.log:61:[15:56] <jdz> lucerne: What do you mean?
log/greyrat/Libera/#emacs-circe/2021-6-8.log:38:[15:29] <wasamasa> lucerne: how exactly did you notice it's constantly garbage collecting?
greyrat/Libera/#emacs-circe/2021-6-8.log:38:[15:29] <wasamasa> lucerne: how exactly did you notice it's constantly garbage collecting?
log/greyrat/Libera/#emacs/2021-6-8.log:1747:[15:27] <jamzattack> lucerne: (setq recentf-auto-cleanup 'never)
greyrat/Libera/#emacs/2021-6-8.log:1747:[15:27] <jamzattack> lucerne: (setq recentf-auto-cleanup 'never)
log/greyrat/Libera/#emacs/2021-6-8.log:1637:[14:41] <dale> greyrat: Of course, I can think of many ways to potentially "switch to a buffer", like what if you kill a buffer and now your IRC buffer is the active buffer, should that trigger your code?  What if you make a new frame displaying your IRC buffer?
greyrat/Libera/#emacs/2021-6-8.log:1637:[14:41] <dale> greyrat: Of course, I can think of many ways to potentially "switch to a buffer", like what if you kill a buffer and now your IRC buffer is the active buffer, should that trigger your code?  What if you make a new frame displaying your IRC buffer?
log/greyrat/Libera/#emacs/2021-6-8.log:1623:[14:39] <dale> greyrat: Maybe you want to test the value of this-command?
greyrat/Libera/#emacs/2021-6-8.log:1623:[14:39] <dale> greyrat: Maybe you want to test the value of this-command?
log/greyrat/Libera/#emacs/2021-6-8.log:1616:[14:38] <irek> lucerne: I see.  Anyway, I think that solution with (interactive-p) will be quite general :)
greyrat/Libera/#emacs/2021-6-8.log:1616:[14:38] <irek> lucerne: I see.  Anyway, I think that solution with (interactive-p) will be quite general :)
log/greyrat/Libera/#emacs/2021-6-8.log:1612:[14:35] <irek> lucerne, greyrat: you can also use (interactive-p) function to test if something was run by user input.  So use hook like before and then add condition with (interactive-p)
greyrat/Libera/#emacs/2021-6-8.log:1612:[14:35] <irek> lucerne, greyrat: you can also use (interactive-p) function to test if something was run by user input.  So use hook like before and then add condition with (interactive-p)
log/greyrat/Libera/#emacs/2021-6-8.log:1595:[14:32] <irek> greyrat: Well you can always write your own interactive function that will switch to irc buffer and after that eval anything you want.
greyrat/Libera/#emacs/2021-6-8.log:1595:[14:32] <irek> greyrat: Well you can always write your own interactive function that will switch to irc buffer and after that eval anything you want.
log/greyrat/Libera/#linux-ops/2021-6-8.log:13:[12:22] <jim> greyrat, you;d have to be actively discussing with us, otherwise that's idling... so, would you mind doing /part #linux-ops
greyrat/Libera/#linux-ops/2021-6-8.log:13:[12:22] <jim> greyrat, you;d have to be actively discussing with us, otherwise that's idling... so, would you mind doing /part #linux-ops
log/greyrat/Libera/#linux-ops/2021-6-8.log:12:[12:19] <jim> greyrat, is there something you needed?
greyrat/Libera/#linux-ops/2021-6-8.log:12:[12:19] <jim> greyrat, is there something you needed?
log/greyrat/Libera/#linux-ops/2021-6-8.log:11:[12:15] <DLange> greyrat, you have joined here again...
greyrat/Libera/#linux-ops/2021-6-8.log:11:[12:15] <DLange> greyrat, you have joined here again...
log/greyrat/Libera/#fanfiction/2021-6-8.log:8:[12:1] <mado_scientisto> lucerne hmm
greyrat/Libera/#fanfiction/2021-6-8.log:8:[12:1] <mado_scientisto> lucerne hmm
log/greyrat/Libera/#fanfiction/2021-6-8.log:7:[11:58] <mado_scientisto> greyrat 6
greyrat/Libera/#fanfiction/2021-6-8.log:7:[11:58] <mado_scientisto> greyrat 6
log/greyrat/Libera/#fanfiction/2021-6-8.log:6:[11:57] <mado_scientisto> lucerne 78
greyrat/Libera/#fanfiction/2021-6-8.log:6:[11:57] <mado_scientisto> lucerne 78
log/greyrat/Libera/#emacs-circe/2021-6-8.log:30:[11:34] <aidalgol> lucerne: I don't disable that specifically, instead I just enable `circe-reduce-lurker-spam'.
greyrat/Libera/#emacs-circe/2021-6-8.log:30:[11:34] <aidalgol> lucerne: I don't disable that specifically, instead I just enable `circe-reduce-lurker-spam'.
log/greyrat/Libera/#fanfiction/2021-6-8.log:5:[11:21] <mado_scientisto> lucerne, hi
greyrat/Libera/#fanfiction/2021-6-8.log:5:[11:21] <mado_scientisto> lucerne, hi
log/greyrat/Libera/#linux-ops/2021-6-8.log:6:[3:39] <jim> greyrat, Hi, you've reached the channel for linux channel staff, how can we help?
greyrat/Libera/#linux-ops/2021-6-8.log:6:[3:39] <jim> greyrat, Hi, you've reached the channel for linux channel staff, how can we help?
log/greyrat/Libera/#linux/2021-6-8.log:142:[1:5] <carlos> lucerne ... termbin ... works perfect in my computer, i use devuan
greyrat/Libera/#linux/2021-6-8.log:142:[1:5] <carlos> lucerne ... termbin ... works perfect in my computer, i use devuan
log/greyrat/Libera/#thelounge/2021-6-8.log:8:[0:54] <bookworm> lucerne: update to the latest master
greyrat/Libera/#thelounge/2021-6-8.log:8:[0:54] <bookworm> lucerne: update to the latest master
log/greyrat/Libera/#emacs-circe/2021-6-7.log:4:[21:20] <bone-baboon> greyrat: `C-r greyrat` or `C-s greyrat`. Maybe someone else knows a Circe specific way.
greyrat/Libera/#emacs-circe/2021-6-7.log:4:[21:20] <bone-baboon> greyrat: `C-r greyrat` or `C-s greyrat`. Maybe someone else knows a Circe specific way.
log/greyrat/Libera/#emacs/2021-6-7.log:236:[20:12] <wasamasa> greyrat: press the keys and see for yourself
greyrat/Libera/#emacs/2021-6-7.log:236:[20:12] <wasamasa> greyrat: press the keys and see for yourself
log/greyrat/Libera/#emacs/2021-6-7.log:225:[20:8] <lispmacs> greyrat: do you know the code for that?
greyrat/Libera/#emacs/2021-6-7.log:225:[20:8] <lispmacs> greyrat: do you know the code for that?
log/greyrat/Libera/#emacs/2021-6-7.log:213:[20:5] <lispmacs> greyrat: hmm... I can't just add some kind of variable setting code at the top of the file?
greyrat/Libera/#emacs/2021-6-7.log:213:[20:5] <lispmacs> greyrat: hmm... I can't just add some kind of variable setting code at the top of the file?
log/greyrat/Libera/#emacs/2021-6-7.log:169:[19:38] <bremner> lucerne: circe works fine for me with bip (another bouncer_
greyrat/Libera/#emacs/2021-6-7.log:169:[19:38] <bremner> lucerne: circe works fine for me with bip (another bouncer_
log/greyrat/Libera/#emacs/2021-6-7.log:134:[19:21] <thomasb06> greyrat: prefix-matching? What do you mean?
greyrat/Libera/#emacs/2021-6-7.log:134:[19:21] <thomasb06> greyrat: prefix-matching? What do you mean?
log/greyrat/Libera/#emacs/2021-6-7.log:122:[19:14] <thomasb06> lucerne-: M-p and M-n
greyrat/Libera/#emacs/2021-6-7.log:122:[19:14] <thomasb06> lucerne-: M-p and M-n
log/greyrat/Libera/#emacs/2021-6-7.log:117:[19:11] <thomasb06> lucerne-: and M-n to move forward
greyrat/Libera/#emacs/2021-6-7.log:117:[19:11] <thomasb06> lucerne-: and M-n to move forward
log/greyrat/Libera/#emacs/2021-6-7.log:115:[19:11] <thomasb06> lucerne-: M-p
greyrat/Libera/#emacs/2021-6-7.log:115:[19:11] <thomasb06> lucerne-: M-p
log/greyrat/Libera/#emacs/2021-6-7.log:110:[19:4] <lucerne-> In circe, how do I make the arrows go through the history using a prefix match of what is already written?
greyrat/Libera/#emacs/2021-6-7.log:110:[19:4] <lucerne-> In circe, how do I make the arrows go through the history using a prefix match of what is already written?
log/greyrat/Libera/##philosophy/2021-6-7.log:190:[19:0] <alix> and greyrat also
greyrat/Libera/##philosophy/2021-6-7.log:190:[19:0] <alix> and greyrat also
log/greyrat/Libera/##philosophy/2021-6-7.log:189:[19:0] <alix> 'lucerne' is connected with the same IP as yours, which is why your nick on this client is 'lucerne-'
greyrat/Libera/##philosophy/2021-6-7.log:189:[19:0] <alix> 'lucerne' is connected with the same IP as yours, which is why your nick on this client is 'lucerne-'
log/greyrat/Libera/##philosophy/2021-6-7.log:186:[18:59] <lucerne-> It should be lucerne
greyrat/Libera/##philosophy/2021-6-7.log:186:[18:59] <lucerne-> It should be lucerne
log/greyrat/Libera/##philosophy/2021-6-7.log:185:[18:58] <lucerne-> Why is my nick lucernce- though
greyrat/Libera/##philosophy/2021-6-7.log:185:[18:58] <lucerne-> Why is my nick lucernce- though
log/greyrat/Libera/##philosophy/2021-6-7.log:184:[18:58] <lalia> Yep, lucerne- :)
greyrat/Libera/##philosophy/2021-6-7.log:184:[18:58] <lalia> Yep, lucerne- :)
log/greyrat/Libera/##philosophy/2021-6-7.log:183:[18:57] <lucerne-> lalia: Can you see this? ð
greyrat/Libera/##philosophy/2021-6-7.log:183:[18:57] <lucerne-> lalia: Can you see this? ð
log/greyrat/Libera/#fanfiction/2021-6-7.log:12:[18:57] <lucerne-> hey
greyrat/Libera/#fanfiction/2021-6-7.log:12:[18:57] <lucerne-> hey
log/greyrat/Libera/#fanfiction/2021-6-7.log:11:[18:57] <lucerne-> hi
greyrat/Libera/#fanfiction/2021-6-7.log:11:[18:57] <lucerne-> hi
log/greyrat/Libera/##philosophy/2021-6-7.log:37:[18:21] <lalia> greyrat: you're in good company. plenty of OG emacs fans around here if you're having trouble. I think there's probably a channel or two dedicated to the software even.
greyrat/Libera/##philosophy/2021-6-7.log:37:[18:21] <lalia> greyrat: you're in good company. plenty of OG emacs fans around here if you're having trouble. I think there's probably a channel or two dedicated to the software even.
log/greyrat/Libera/##philosophy/2021-6-7.log:29:[18:19] <lalia> greyrat: howdy
greyrat/Libera/##philosophy/2021-6-7.log:29:[18:19] <lalia> greyrat: howdy
