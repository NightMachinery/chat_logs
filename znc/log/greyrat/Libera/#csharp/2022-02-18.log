[00:01:48] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[00:06:12] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 272 seconds)
[00:08:44] *** Quits: Assault (~Assault@87-95-121-77.bb.dnainternet.fi) (Ping timeout: 272 seconds)
[00:10:36] <JakeSays> ki9a: we have a few of those "location..." shows here
[00:12:00] <ki9a> but not like this one!
[00:12:05] <ki9a> you can't replace these two
[00:12:11] *** Joins: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvge4nr0zyhxp9mg.ipv6.telus.net)
[00:12:18] <ki9a> https://en.wikipedia.org/wiki/Location,_Location,_Location
[00:14:49] *** Quits: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au) (Read error: Connection reset by peer)
[00:15:01] <mantas322> Domain Name is exactly the same.  Host/Machine name is obviously distinct to each instance. IP is different though.
[00:15:03] *** Quits: jinsun (~jinsun@user/jinsun) (Read error: Connection reset by peer)
[00:15:06] <mantas322> which im obtaining string myIP = Dns.GetHostByName(hostName).AddressList[0].ToString();
[00:15:13] *** Joins: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au)
[00:15:28] <mantas322> But this seems like an unreliable switch.
[00:15:59] <mantas322> I wouldn't want them changing on me.
[00:16:05] <mantas322> I'm not sure if this is possible.
[00:16:20] *** Joins: jinsun (~jinsun@user/jinsun)
[00:16:24] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[00:17:45] <JakeSays> MatthiasVance: the woman was pinned against the aft bulkhead by a food cart. she rode all the way to the ground like that and survived the crash. i think that because of where she was most of the impact force was absorbed by the fuselage.
[00:20:22] *** Tobbi__ is now known as Tobbi
[00:39:33] <mantas322> "often a separate ip range for remote endpoints"   So maybe if I look at the starting IP Address I can determine if they are in the office or outside of it.
[00:40:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:45:47] <DevJohnC> new pet peeve: websites that list a table of data that's big and refuse to provide a CSV/XML/other interchange format to read the data programatically
[00:46:51] <mantas322> most websites don't want to be used programmatically.
[00:47:26] <DevJohnC> it's a microsoft site listing possible values for a set of data fields in a file format
[00:47:37] <DevJohnC> it SHOULD be used programatically
[00:51:15] <Suchiman> DevJohnC: can you copy to excel? xD
[00:51:58] <DevJohnC> Suchiman, section by section!
[00:52:04] *** Joins: exvicesindaco_ (~exvicio@host-95-244-78-72.retail.telecomitalia.it)
[00:54:27] <mantas322> great "You do not have authorization to access this resource."
[00:54:33] <mantas322> damn azure
[00:54:36] <mantas322> damn permissions
[00:54:39] *** Quits: exvicesindaco (~exvicio@37.163.159.118) (Ping timeout: 252 seconds)
[00:54:41] *** exvicesindaco_ is now known as exvicesindaco
[00:54:52] <mantas322> This problem........
[01:02:17] *** Quits: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Remote host closed the connection)
[01:02:31] *** Joins: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[01:03:27] *** Quits: luetm (sid505021@id-505021.helmsley.irccloud.com) (Read error: Connection reset by peer)
[01:03:37] *** Joins: luetm (sid505021@id-505021.helmsley.irccloud.com)
[01:04:09] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:12] *** Quits: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Remote host closed the connection)
[01:04:12] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 240 seconds)
[01:04:26] *** Joins: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[01:04:34] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[01:04:36] *** Quits: merpnderp (sid16744@id-16744.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:05:00] *** Quits: flagrama (sid145621@id-145621.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[01:05:00] *** Quits: Nasp (uid12131@user/nasp) (Ping timeout: 240 seconds)
[01:05:00] *** Quits: khanred (uid127562@user/khanred) (Ping timeout: 240 seconds)
[01:05:35] *** Joins: Nasp (uid12131@user/nasp)
[01:05:35] *** Joins: khanred (uid127562@user/khanred)
[01:05:36] *** Joins: flagrama (sid145621@id-145621.hampstead.irccloud.com)
[01:05:37] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[01:05:38] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[01:21:12] *** Joins: alguien (~alguien@user/alguien)
[01:25:38] *** Quits: exvicesindaco (~exvicio@host-95-244-78-72.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[01:30:37] *** Quits: Bradley32110 (~IceChat95@071-013-010-066.biz.spectrum.com) (Ping timeout: 240 seconds)
[01:32:31] *** Joins: Bradley32110 (~IceChat95@071-013-010-066.biz.spectrum.com)
[01:35:42] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:54:09] <merced> 0
[01:59:11] <Nasp> Just had to throw out two people who broke into the apartment stairwell
[01:59:33] <Nasp> "We are just waiting for the bus"
[02:02:17] <teegee> just flood it with nitrogen next time
[02:02:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:05:03] <Nasp> Well the other day they were sniffing nitrous
[02:05:08] <Nasp> So maybe just a spark will do it
[02:19:24] *** Quits: MaNa2k (~MaNa2k@224.81-166-66.customer.lyse.net) (Quit: Leaving)
[02:32:13] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:36:23] *** Quits: Autowired (~autowired@dslb-094-218-237-093.094.218.pools.vodafone-ip.de) (Quit: Nettalk6 - www.ntalk.de)
[02:42:49] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[02:46:50] <Cecen> I take back every good thing I said about VS2022, its performance is so bad that it's borderline unusable
[02:47:43] <Cecen> But at least it's responsive despite taking a solid 2-3 minutes to apply syntax highlighting after building, I guess
[02:49:09] *** Quits: mikrosis (~mikrosis@dynamic-046-114-171-234.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:51:33] *** Quits: jamea (~jamea@201.77.110.253) (Remote host closed the connection)
[02:52:30] *** Joins: jamea (~jamea@201.77.110.253)
[02:57:44] *** Quits: DoofusCanadensis (~DoofusCan@node-1w7jr9yercvge4nr0zyhxp9mg.ipv6.telus.net) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:06:56] *** Joins: AdaskoTheBeAsT (~Adasko@89-64-126-116.dynamic.chello.pl)
[03:07:51] <AdaskoTheBeAsT> hi
[03:12:24] <Slade> https://pbs.twimg.com/media/FLvzsUZWUAcJ7Pb?format=png&name=small ba dum tss
[03:21:52] *** Quits: AdaskoTheBeAsT (~Adasko@89-64-126-116.dynamic.chello.pl) (Quit: Leaving)
[03:25:13] *** Quits: mantas322 (uid498688@id-498688.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:25:59] *** Quits: jamea (~jamea@201.77.110.253) (Ping timeout: 256 seconds)
[03:31:48] *** Quits: niston (~gridrun@user/niston) (Read error: Connection reset by peer)
[03:32:13] *** Joins: niston (~gridrun@user/niston)
[03:32:57] *** Joins: argoneus (~argoneus@argoneus.com)
[03:42:45] <teegee> Cecen: how many projects? loc?
[03:49:36] *** Joins: ejjfunky (~ejjfunky@125.164.16.250)
[03:50:40] *** Joins: Xenoprimate_Surf (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[03:52:11] <Nasp> Cecen:  It's horrible
[03:52:19] <Nasp> They say it's faster than ever and i feel like it's worse than ever
[03:54:37] *** Quits: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 256 seconds)
[03:55:32] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:57:23] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[03:58:14] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[03:58:36] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:59:44] *** Joins: tang^ (~DoofusCan@2605:8d80:4a0:34a8:2585:92a6:e2e:84aa)
[04:00:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:00:47] *** tang^ is now known as DoofusCanadensis
[04:05:24] *** Quits: DoofusCanadensis (~DoofusCan@2605:8d80:4a0:34a8:2585:92a6:e2e:84aa) (Ping timeout: 240 seconds)
[04:06:55] *** Joins: DoofusCanadensis (~DoofusCan@2605:8d80:4a0:34a8:2585:92a6:e2e:84aa)
[04:07:09] *** Quits: DoofusCanadensis (~DoofusCan@2605:8d80:4a0:34a8:2585:92a6:e2e:84aa) (Client Quit)
[04:28:03] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[04:56:31] *** Parts: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:03:48] *** Quits: eurogos (~jongoslin@2a00:23a8:4cca:5901:898c:befe:dd29:f282) (Ping timeout: 252 seconds)
[05:31:06] *** Quits: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se) (Ping timeout: 272 seconds)
[05:40:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:40:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[06:38:26] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:40:36] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:41:35] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[06:44:34] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 272 seconds)
[06:54:31] *** Joins: jamea (~jamea@177.239.81.39)
[07:02:49] *** Quits: ejjfunky (~ejjfunky@125.164.16.250) (Quit: Leaving)
[07:03:12] *** Joins: ejjfunky (~ejjfunky@125.164.16.250)
[07:05:24] *** Quits: ejjfunky (~ejjfunky@125.164.16.250) (Client Quit)
[07:06:38] *** Joins: ejjfunky (~ejjfunky@125.164.18.205)
[07:20:08] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:32:48] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[07:35:07] <vim_fans> hi,there. I got a problem with utf-8 format .    i received a post request which's txt/xml . Encoding.UTF-8.getString(buffer) return noting.
[07:36:10] <JakeSays> vim_fans: how long is buffer?
[07:36:47] <vim_fans> JakeSays: 1000000(which is enough for the stream)
[07:37:21] <JakeSays> vim_fans: ok how many valid bytes does it contain
[07:37:29] <vim_fans> 647
[07:37:46] <JakeSays> have you looked at them?
[07:38:10] <vim_fans> but encoding.unicode.getstring(buffer) return some result. but is not the correctly farmmat
[07:38:26] <vim_fans> JakeSays: what do you mean looked at them ?
[07:38:38] <vim_fans> I can't see the xml content
[07:38:40] <JakeSays> in the debugger. have you looked at the bytes
[07:39:02] <vim_fans> JakeSays: you mean print the item of byte array?
[07:39:29] <JakeSays> well, you could do that, but it'd be easier just to look at them in the debugger
[07:40:23] <vim_fans> i did it. but the result seems very wired .it was not binary number confused
[07:42:29] <JakeSays> well, Encoding.UTF8.GetString() will parse the entire buffer, and your buffer isn't valid because it has 1,000,000-647 invalid bytes
[07:42:56] <JakeSays> although it may ignore the trailing ones. i dont remember
[07:43:50] <JakeSays> vim_fans: try Encoding.UTF8.GetString(buffer, 0, 647)
[07:44:24] <JakeSays> but it's difficult to diagnose the issue w/o seeing the 647 bytes
[07:51:57] *** Joins: kobo (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[07:56:12] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[07:59:26] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:55:40] *** Quits: Xenoprimate_Surf (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 272 seconds)
[09:02:11] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[09:05:09] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[09:28:49] <vim_fans_> JakeSays: I changed my  code to stream.Read(buffer,0,buffer.Length)    buffer.Length=stream.Length which is 647
[09:29:32] <JakeSays> vim_fans_: what is the type of buffer
[09:31:34] <vim_fans_> byte[]
[09:32:55] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[09:33:25] <vim_fans> JakeSays: Did i miss anything here ? I disconnected
[09:34:15] <JakeSays> vim_fans: buffer.Length is not writable
[09:36:01] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[09:36:44] <vim_fans>                 byte[] buffer = new byte[stream.Length];   JakeSays
[09:38:25] <JakeSays> vim_fans:var xml = (new StreamReader(stream)).ReadToEnd();
[09:39:11] <JakeSays> vim_fans: -or- var xml = (new StreamReader(stream, Encoding.UTF8)).ReadToEnd();
[09:41:38] <JakeSays> vim_fans: or var xml = XElement.Load(stream);
[09:43:38] <vim_fans> JakeSays: it doesn't work either
[09:44:03] <JakeSays> vim_fans: then your data is bad.
[09:48:36] <JakeSays> vim_fans: try var xml = (new StreamReader(stream, Encoding.UTF8, true)).ReadToEnd();
[09:57:42] <Cecen> This team I just met tracks their work hours with mandatory check-ins when they start the day, leave for lunch, return from lunch, and end the day and it makes me insanely uncomfortable for some reason
[09:57:49] <Cecen> Just wanted to share the discomfort
[09:58:22] <JakeSays> Cecen: that would drive me nuts
[10:02:08] <vim_fans> JakeSays:                 Stream stream = context.Request.InputStream;                    var xml = new StreamReader(stream, Encoding.UTF8, true).ReadToEnd();  does these code is correct to recieve xml file which sned by post method ? i use Fiddler to post these reqeust ,but i got the empty
[10:02:42] <JakeSays> vim_fans: that will work if your data is correct
[10:04:04] <Cecen> The stream is probably at the end
[10:14:34] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[10:14:37] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[10:16:45] <ap5> Good mornings
[10:17:25] <ap5> vim_fans: stream.Position = 0; before you add it to the StreamReader
[10:18:52] *** Joins: Assault (~Assault@87-95-121-77.bb.dnainternet.fi)
[10:21:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:30c6:5266:d9db:c38f)
[10:21:35] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[10:37:47] <JakeSays> ap5: i dont think a request stream is seekable
[10:40:15] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[10:41:29] <tsujp> Okay I've spent some time reading about Moq and restructured a lot of my code but I am on the last bit I cannot figure out
[10:41:35] <ap5> JakeSays, ah. Didn't see that. Just saw "stream" and it returns "it is empty"
[10:41:52] <ap5> tsujp, tell us
[10:42:30] <tsujp> I cannot move the use of a dependency in my class to dependency injection (that I know of) because the thing I want to dependency inject requires a run-time value (best way I can explain it). I'm preparing a gist now, sec
[10:44:48] <ap5> But then you need to move that value out of the constructor, and into the method(s) that need it
[10:46:53] <vim_fans> let's say these are the post data '<xml><name>vito><age>15</age></xml>'   what i can get through previos code is vito     15.
[10:47:03] <vim_fans> why the result missing xml tags?
[10:48:10] <ap5> tsujp, or!! You need to wrap that new of the object, that takes the runtime value into its constructor into a factory, that can be added to the IoC, then at runtime you depend on that factory method, that you can inject into your constructor, and then do myFactory.Construct(runTimeValue);
[10:48:59] <ap5> vim_fans because you are not viewing the raw respoonse in the browser
[10:49:08] <tsujp> Here's the gist https://gist.github.com/tsujp/d652e170c37032aa40ed87b3fab13af4
[10:50:08] <ap5> tsujp, wrap the subscriptionId into some kind of options class, and inject that into IoC
[10:50:40] <vim_fans> ap5: then how should i process the xml data without these tags?
[10:50:40] <tsujp> The `subscriptionId` is determined at runtime as part of the request though ap5, sec let me add that bit in
[10:50:54] <ap5> Ah, you can't
[10:51:57] <ap5> tsujp, then you need to rap your NetworkManagementClient in something
[10:52:07] <ap5> That thing you wrap it in, you can mock
[10:52:09] <tsujp> Refresh the gist
[10:52:46] <ap5> Wrap the NetworkManagementClient
[10:53:32] <tsujp> Okay I can wrap the NetworkManagementClient so you call a method which accepts only a `subscriptionId` and that returns a NetworkManagementClient but I still need to provide the `subscriptionId`
[10:53:47] <tsujp> And line 29 where I `new NetworkManagementClient` still exists in the ConfigureService
[10:54:11] <tsujp> So I don't see how that solves the issue of me wanting to dependency inject the NetworkManagementClient in ConfigureService only after I know the `subscriptionId` in Foo
[10:57:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:57:17] <ap5> tsujp, sec. Let me create some broken code
[10:57:44] <tsujp> I've updated the gist to include a factory ap5 https://gist.github.com/tsujp/d652e170c37032aa40ed87b3fab13af4
[10:58:49] <ap5> tsujp, https://pastebin.com/ab78p2C4
[11:02:49] <vim_fans> ap5: <xml>   <ToUserName><![CDATA[wx5823bf96d3bd56c7]]></ToUserName></xml>  .  then Encoding.utf-8.getstring(buffer) can't get anything
[11:03:05] <vim_fans> ap5:  this is my my code didn't work for me
[11:03:21] <ap5> Strange :)
[11:03:31] <vim_fans> the post data including "![CD.."
[11:08:32] <tsujp> I'll try, give me a while though
[11:09:34] <ap5> vim_fans, i dont think i can help anymore than this :/ (i am working myself on an obscure problem) - but keep me updated, and i will be your rubberduck
[11:09:59] *** Joins: Assault_ (~Assault@87-95-121-77.bb.dnainternet.fi)
[11:14:08] *** Joins: alguien (~alguien@user/alguien)
[11:17:28] <tsujp> Sorry ap5 I'm still confused on how that helps, is ManagementGateway here supposed to wrap Foo?
[11:19:28] <tsujp> What if I had a method on DoCreation which sets the `client` to use?
[11:19:36] <ap5> tsujp, it wraps NetworkManagementClient, so you can mock it. Wasn't that your problem? Then you can inject the gateway into your Service
[11:19:55] <ap5> tsujp, well i dont know if you have
[11:19:57] <ap5> :)
[11:20:02] <tsujp> So in `Foo.DoSomething` I first call `_configureService.SetClient(subscriptionId)` and this `SetClient` method sets the `_client` property on the `ConfigureService`
[11:20:08] <tsujp> No I mean is that a (non stupid) solution?
[11:20:47] <tsujp> It doesn't wrap the NetworkManagementClient you're wrapping DoSomething no?
[11:22:00] <tsujp> Like, you're calling `client.DoSomething()` but that's really, really confusing to me because (1) it's got the same method name and (2) that's not how it's being used
[11:22:04] <tsujp> Let me further expand the gist
[11:22:43] <ap5> tsujp, i really don't know if that is really really confusing, because i don't know your entire codebase
[11:23:20] <ap5> The SetClient solution feels like a hack
[11:23:29] <tsujp> Can you refresh the gist page and see line 33-36?
[11:23:31] <tsujp> ap5
[11:23:33] <ap5> Well, i need to work on my work problems :)
[11:24:33] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[11:25:08] <ap5> tsujp, but how are you going to mock out the management factory? Isn't that the whole deal?
[11:25:49] <tsujp> So that's what I need to mock in this case right? I need to mock the management factory so that it returns a mock NetworkManagementClient?
[11:27:20] <ap5> I dont know :D
[11:27:49] <ap5> Didn't you ask how we would construct the code so you could mock NetworkManagementClient?
[11:27:58] <tsujp> Yes
[11:28:20] <tsujp> That's what I want. If I can mock NetworkManagementClient then I can mock when it calls `client.SecurityRules.ListAsync` on line 34
[11:28:25] <ap5> You do that my implementing my Gateway, and injecting that into your service
[11:28:26] <tsujp> How do I do that given the provided gist
[11:28:37] <tsujp> But your gateway does `client.DoSomething()`
[11:28:39] <tsujp> What is that method
[11:28:46] <ap5> IT IS AN EXAMPLE
[11:28:48] <tsujp> Why does the azure provided NetworkManagementCLient have a custom method on it
[11:29:01] <ap5> Jesus
[11:29:02] <ap5> :D
[11:29:11] <ap5> I am not writing your code
[11:30:06] <ap5> My Gateway is an example. If you want to mock out the call to ListAsync, then you add a method in the Gateway, that news up a client and calls that method, then you can mock that call as well
[11:30:43] *** Joins: alguien (~alguien@user/alguien)
[11:31:29] <tsujp> I don't think that's going to work
[11:31:53] <ap5> Why?
[11:32:11] <tsujp> Because I have already tried it (I think) and I don't understand your example beyond it's an interface which can be mocked
[11:32:27] <ap5> I know it will, and that you then can mock the calls out, but i am not writing the whole shebang
[11:32:37] <tsujp> But it's in the wrong place (?) isn't a constructor which takes injection (?) and I don't know if you're providing that example to wrap Foo or ConfigureService
[11:32:58] <tsujp> I'm not asking you to write the whole thing, I just literally do not get it because everything in C# land is 5000000000000000000000000000x more complicated than it ought to be
[11:33:12] <ap5> You add the gateway to the IoC and add it to the service constructor
[11:34:16] <tsujp> ConfigureService needs a NetworkManagementClient, called `client`. This `client` needs a value only known at runtime (otherwise this would be a trivial dependency injection) and that value at runtime is known in Foo which calls the ConfigureService. I want to unit test ConfigureService using Nunit and Moq. I don't know how to provide a mocked
[11:34:16] <tsujp> `client` to ConfigureService short of using a setter which sets a client which feels like a hack.
[11:34:39] *** Joins: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a16e:d671:52cf:2026)
[11:36:10] <ap5> You wrap the NetworkManagementClient, and then you can mock it :) That is my answer
[11:36:50] <tsujp> it's already wrapped in the ManagementClientFactory
[11:37:08] <tsujp> And as I said, ConfigureService does not have a constructor at all, so how is it meant to be depenency injected
[11:37:21] <tsujp> Given the fact it needs a runtime value to be used in production code
[11:37:34] <tsujp> I'm not going to rewrite the entire codebase just so it's testable but unuseable in production
[11:38:58] <ap5> You can't mock out your static management factory class
[11:39:10] <ap5> If you dont want to rewrite it, well then you can test it
[11:39:38] <vim_fans> ap5: system.net.http  could be found in .net framework 4
[11:39:47] <biberu> tsujp: perhaps this was already answered above, but you can inject things that require additional parameters at runtime just fine, what issue are you experiencing with that?
[11:39:48] <vim_fans> ap5: how to resolve it ?
[11:40:15] <tsujp> I don't know how to do that and what I see on the microsoft documentation has hardcoded values only in Startup.cs which is useless for me biberu
[11:41:08] <biberu> tsujp: where should this value come from? is it available to the di container or to the component you're injecting into?
[11:42:06] <tsujp> Check this gist biberu https://gist.github.com/tsujp/d652e170c37032aa40ed87b3fab13af4 -- Foo receives a DI'd class `ConfigureService` and ConfigureService itself has _no constructor_ because the thing I want to mock, the NetworkManagementClient (line 30) requires a value `subscriptionId` that I only know when `DoSomething` in `Foo` is called
[11:42:36] <tsujp> There's a lot of indirection here that I cannot simplify any further and I don't know what to do, cannot find the answer in docs (that I know of) or google
[11:43:11] <biberu> tsujp: so essentially ConfigureService is in an invalid state until it's been given additional data *after* initialization?
[11:43:20] <tsujp> Correct
[11:43:26] <biberu> this is strong sign that you need another component in your design
[11:43:58] <biberu> e.g. something that is responsible for getting that id, that you can then use to construct a *valid* ConfigureService, that can be passed around as you need
[11:44:26] <biberu> meeting, bbiaw
[11:44:55] <tsujp> So this means I should stop DI-ing ConfigureService itself
[11:45:22] <biberu> not necessarily, but it should be *valid* when injected
[11:46:17] <tsujp> I'm confused on what could even be the solution here, I could DI another class which has a single method `GiveMeAConfigureService(string subscriptionId)` and then call that method at line 12 which would result in a valid ConfigureService?
[11:47:32] <tsujp> Just to be clear: The ConfigureService is invalid because it needs a NetworkManagementService (this is a Microsoft provided type) which ONLY accepts the runtime value via a constructor, so I cannot DI NetworkManagementService into ConfigureService's constructor unless I have the calling-class provide it directly.. idk
[11:47:55] <tsujp> Like, i just _do not know_ every DI tutorial or example online conventiently has DI classes which can have properties set after the fact blah blah
[11:48:18] <tsujp> But Microsoft's NetworkManagementClient class has very specifically this field in it `private readonly string _subscriptionId;`
[11:48:36] <tsujp> So I _cannot_ set that after it's been DI'd so I cannot use DI for it so I cannot mock it so I cannot test it
[11:48:48] <tsujp> But I cannot change it because it's an Azure SDK I need for the functionality of the code...
[11:48:54] <biberu> since new ConfigureService() is nonsensical, you can't use it like that, it should have a constructor
[11:49:05] <biberu> that's where you inject the id or whatever service it needs to be useful
[11:49:37] <biberu> once you have that in place you either set it up to inject ConfigureService directly, or a ConfigureServiceFactory of some sort, it depends
[11:50:24] <biberu> having classes that need mutable properties set after initialization to be useful is a great way to shoot yourself in the foot
[11:50:42] <tsujp> I don't want that to be the case just to be clear
[11:51:01] <tsujp> To explain again because I don't know if I am using the correct words here
[11:51:21] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:51:31] <tsujp> See on line 29 (even though its commented out) where I do `var client =Â  new ...` (forget the ManagementClientFactory crap)
[11:51:41] <tsujp> That's the canonical example of: put that in the constructor and use DI instead, yeah?
[11:51:43] <tsujp> No problem, easy
[11:51:46] <tsujp> E X C E P T
[11:52:32] <tsujp> It requires a parameter `subscriptionId` which is not hardcoded from AppSettings.JSON, not from an environment variable. That value comes from the database entity which is fetched from the REST request which calls this stuff, i.e. it's dynamic
[11:52:54] <tsujp> So if I dependency inject the NetworkManagementClient into the ConfigureService, the NetworkManagementClient won't be valid
[11:53:02] <tsujp> And so netiehr will the ConfigureService using it
[11:53:29] <tsujp> Unelss there is a way to provide arguments to a depdency injected constructor that are NOT hardcoded or from environment variables or from AppSettings.json
[11:53:33] <tsujp> I don't see how this can be solved
[11:53:44] <tsujp> If you can provide arguments to a DI constructor then I can just pass `subscriptionId` and this is solved
[11:53:55] <biberu> you can
[11:54:08] <tsujp> How I haven't seen anything that isn't from an env var or appsettings.json
[11:54:10] <biberu> how depends on where that value is known
[11:54:28] <tsujp> The value is known after ConfigureService itself is DId
[11:54:40] <tsujp> So I assume I need to first remove ConfigureService being DId in Foo
[11:54:45] <biberu> by what component?
[11:55:29] <tsujp> The calling component (which is an ASP.NET controller) calls `Foo.DoSomething()`
[11:55:38] <tsujp> So in both that controller and Foo.DoSomething the `subscriptionId` is known
[11:55:54] <tsujp> The class `Foo` uses the `ConfigureService` via DI
[11:56:14] <tsujp> The `ConfigureService` uses the Azure SDK client class `NetworkManagementClient`
[11:56:21] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[11:56:34] <biberu> so Foo knowns subscriptionId, but Foo needs a ConfigureService, but ConfigureService needs a subscriptionId
[11:56:40] <tsujp> Correct
[11:57:01] <biberu> you need to break that cycle
[11:57:09] <biberu> plenty of ways to do that
[11:57:32] <tsujp> Foo is `AddScoped` as follows: `services.AddScoped<IFoo, Foo>();`
[11:58:06] <biberu> a simple version would be to inject a Func<subscriptionId, IConfigureService>, or corresponding interface, then you just call that to recieve a ConfigureService once the subscriptionId is known to Foo
[11:58:55] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:59:03] <tsujp> So that is injected into Foo? What is that pattern called so I can google it because I don't understand how that would be done _exactly_
[11:59:17] <biberu> that's just a factory
[12:00:02] <ap5> And it is a better solution than a static class factory, because it can then be mocked
[12:00:28] <tsujp> Ah okay, so instead of Foo being DId `ConfigureService` I just DI `ConfigureServiceFactory` and then within Foo once I know `subcriptionId` I call `ConfigureServiceFactory.GiveMeAConfigureService(subscriptonId)` right?
[12:00:42] <biberu> tsujp: perhaps this looks more familiar? interface ConfigureServiceFactory { IConfigureService Create(string subscriptionId); }
[12:00:55] <tsujp> Yep okay on the same page now biberu and ap5
[12:00:57] <tsujp> Let me try that
[12:01:03] <Nasp> Ohh jesus this again
[12:01:10] <biberu> that's just a long way of writing here's a subscriptionId, give me an IConfigureService
[12:02:07] <Nasp> tsujp:  What is your SUT in your example?
[12:02:39] <tsujp> The SUT is the ConfigureService
[12:03:05] <biberu> tsujp: note that the rule that leads to a working solution here is *refusing to allow objects to be initialized to invalid states*, adding a constructor to ConfigureService gives you a constraint that leads to a working design
[12:05:45] <Nasp> Inject your ManagementClientFactory
[12:05:57] <tsujp> I'm mixing things up to do that now
[12:06:27] <Nasp> does ManagementNetworkClient have an interface?
[12:06:42] <tsujp> It does not
[12:06:49] <Nasp> Then it wont help
[12:06:51] <tsujp> It allows mocking via a parameterless protected constructor
[12:07:07] <Nasp> Then you need to wrap ManagementNetworkClient
[12:07:44] <tsujp> Yes but ConfigureService itself is DId which uses NetworkManagementClient which tighly couples them unless DI is used which it cannot be unless this factory is made
[12:08:09] <tsujp> Here's microsoft's NetworkManagementClient class https://gist.github.com/tsujp/736915364b81b2a0221210d4a24adb2a
[12:08:25] <tsujp> Blame them for having a shitty `private readonly string _subscriptionId` that requires it to be set via constructor
[12:08:40] <tsujp> Although biberu says ` *refusing to allow objects to be initialized to invalid states*` so I assume that's actually the preferred way
[12:08:43] <tsujp> Hence: factories
[12:08:57] <Nasp> Yes
[12:10:17] <biberu> tsujp: if the client isn't usable without that id it must have a constructor that requires it, same rule as above
[12:17:39] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[12:19:47] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[12:34:50] <tsujp> Eyy I think it all just works now
[12:35:07] <tsujp> I can see the mocked response given a mocked client, no complaints on DI for the production version etc
[12:35:19] <tsujp> Thank you for your patience all ap5 biberu Nasp
[12:35:29] <Nasp> Yay
[12:35:44] <tsujp> I wasn't / am not trying to be difficult this stuff is just hard for me to reason about, I come from a very strong imperative non-OOP background
[12:35:49] <Nasp> Yeah i got that
[12:36:03] <Nasp> So in general you want to inject as much as possible, except method a few static helpers
[12:36:13] <Nasp> But when it comes to testing it forces  you into structuring your code in these small bits
[12:36:20] <Nasp> Which i would argue usually makes for a better design
[12:36:30] <ap5> True
[12:36:48] <ap5> I like the way IoC has made me think, especially about testing
[12:37:17] <tsujp> Yeah wanting to test that configuration service in this case kind of forced that upon me but I can see the benefit with IoC and DI now at least so far as switching things up for testing etc
[12:37:22] <Nasp> TDD even if you don't test that well or remove them afterwards, will design a smaller composable system imo
[12:37:33] <Nasp> Can we see the actual test?
[12:37:51] <Nasp> And which unit testing lib are you using
[12:40:24] <tsujp> I'm modifying the production code to have a return value on the `Task` in question but it gets invoked correctly and I can see the mocked values in the debugger etc, I can paste the test code knowing that. The only bit missing is checking they have the correct properties (which is the bit I am going to add to the Task in the production method so
[12:40:24] <tsujp> it's Task<Properties> instead of just Task)
[12:40:27] <tsujp> Using Nunit and Moq
[12:40:34] *** Joins: eurogos (~jongoslin@2a00:23a8:4cca:5901:6dc4:f49f:cde1:45b)
[12:40:37] <interop_madness> Ah, good old VisualSourceSafe. The trusty old workhorse when it comes to figuring out early code history.
[12:40:46] <tsujp> Might chuck Specflow on top of it makes things nice and composable
[12:41:49] <tsujp> Nasp https://gist.github.com/tsujp/e8d203f31918a5c258e06cc6f32f6322
[12:42:25] <Nasp> tsujp:  Do you know of paramaterized tests?
[12:42:31] <tsujp> I do not
[12:42:45] <Nasp> It's a very powerful tool which you can sometimes use
[12:42:58] <Nasp> Lets se you need to parse something, lets just say it's a DateTime for simplicify
[12:43:09] <tsujp> Unless they are the decorators `[Thing(-1)]` and then `[Thing(-2)]` which execute the given test for each decorator?
[12:43:12] <Nasp> And you have a method for parsing it, but you have 5 different tests you want to make sure it can parse it in strange format
[12:44:10] <Nasp> But instead of making 5 differetn tests, then you can make one test  public void ParseShouldNotFail(string datetime)
[12:44:21] <Nasp> And then you can give it input params through attributes or a list
[12:44:24] <ap5> tsujp, this explains it with a nice example: https://dzone.com/articles/parameterized-test-example-in-the-net-core-using-n
[12:44:43] <ap5> (scroll down to The TestCase Attribute headline)
[12:44:53] <tsujp> Ah yep the testcase attribute was the thing I was thinking of there with `[Thing(-1)]`
[12:45:20] <tsujp> Specflow is kind of like that then it just uses a different methodology to achieve the same functionality
[12:45:21] <ap5> It makes your test more readable
[12:45:30] <ap5> tsujp, it does
[12:45:57] <tsujp> yeah because it uses english that's regex'd and what not, there's a pretty comprehensive specflow test for another thing in this codebase and I thought it was quite elegant
[12:46:06] <ap5> SpecFlow is a ... layer on top of unit testing frameworks :)
[12:46:10] <tsujp> Ye
[12:46:19] <Nasp> Specification by example is nice if you also want living documentation of your system
[12:46:32] <ap5> I like it, but i can implement it in my org, because it would require a lot of training of other personel
[12:46:43] <ap5> can't*
[12:46:46] <Nasp> Although i remember Specflow as being a pain, i would rather use https://storyteller.github.io/documentation/
[12:47:16] <ap5> Uh. Didn't know about that, Nasp. Thanks
[12:47:49] <tsujp> My familiarity with specflow is literally 1 day old but when i was messing around with it yesterday it felt alright
[12:48:47] <ap5> If the QAs and POs can write stories in the format, then you have a pretty neat pipeline, because you can express Acceptance tests in writing, that you can also run at your code
[12:49:15] <ap5> It requires a lot of plumming though :)
[12:50:21] *** Joins: Babbage (~Babbage@94.11.27.96)
[12:54:11] <Babbage> hey
[12:54:41] <ap5> my my
[12:54:45] <ap5> Good song
[12:54:55] <ap5> almost good song
[13:10:38] <Tobbi_> I haven't said "morning peasants" yset
[13:10:39] <Tobbi_> *yet
[13:13:16] <ap5> Morning
[13:13:42] <ap5> It isn't quite morning here, but it is fine
[13:14:44] *** Joins: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce)
[13:14:51] <dan01> hey guys
[13:14:58] <dan01> I know this sounds stupid but
[13:15:09] <dan01> I'm debugging an app
[13:15:48] <dan01> So I do a bunch of clicks with the mouse, then I attach the debugger, I do another click and bam, it hits the break point
[13:15:53] <dan01> Ok, all cool so far
[13:16:40] <dan01> Is there any way I can somehow save that state for me to go back to, without having to do those clicks over and over again?
[13:16:47] <dan01> Does a memory dump do that?
[13:24:59] <Nasp> You need to use a technology that supports hot reloading
[13:25:22] <Nasp> I assume desktop?
[13:26:53] *** Joins: kobo_ (~kobo___@c-d02b225c.029-1613-6f72651.bbcust.telenor.se)
[13:29:47] <Nasp> MatthiasVance:  I just won the lottery, i found a controller with 4500 lines
[13:32:03] <ap5> :O
[13:32:09] <ap5> Congratz :D
[13:34:46] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:35:00] <Nasp> most of it is test data
[13:35:10] <Nasp> But it's still ugly as fuck
[13:35:17] <Nasp> Just have 30 models inside the controller
[13:38:00] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[13:38:15] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[13:38:36] *** Joins: humanface (~humanface@20014C4E1C404700BD79BBA6CD5534E6.dsl.pool.telekom.hu)
[13:38:55] <ap5> Nasp, it sounds like a nasty thing you have gotten hold of :D
[13:39:08] <Nasp> It's an endpoint for seing sales figures
[13:39:16] <Nasp> It's public too protected by a token for some reason
[13:43:25] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: hussam (~hussam@user/hussam) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: Citillara[m] (~citillara@user/citillara) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: BSaboia[m] (~bsaboiama@2001:470:69fc:105::1:6247) (Quit: Bridge terminating on SIGTERM)
[13:43:31] *** Quits: ki9d (~ckchatcar@2001:470:69fc:105::4897) (Quit: Bridge terminating on SIGTERM)
[13:46:34] *** Joins: hussam (~hussam@user/hussam)
[13:49:20] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[13:50:45] *** Quits: firewyre- (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[13:54:36] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 240 seconds)
[13:57:02] <irwiss> an MVP https://i.redd.it/lhdzeq8hehi81.png :D
[13:57:04] *** Joins: BSaboia[m] (~bsaboiama@2001:470:69fc:105::1:6247)
[13:57:18] *** Joins: Citillara[m] (~citillara@user/citillara)
[13:57:33] *** Joins: ki9d (~ckchatcar@2001:470:69fc:105::4897)
[13:57:33] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[14:09:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[14:10:44] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[14:14:47] <eurogos> ...just testing in production B-)
[14:17:05] <Tobbi_> That's what we do excllusively.
[14:19:21] <eurogos> i mean, i wish i was better than this... but frankly I dont have the time
[14:19:28] <eurogos> and i like the buzz
[14:23:42] *** Quits: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce) (Ping timeout: 252 seconds)
[14:30:31] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[14:32:23] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[14:37:22] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Remote host closed the connection)
[14:57:51] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[15:03:03] <Nasp> Suchiman:  I bet you can remember this, the InProcessHosting in the AspNetcore modules have some restrictions right?
[15:03:30] <Suchiman> Nasp: dunno, what kind of restrictions
[15:03:39] <Nasp> Like does it work for framework
[15:03:52] <Nasp> I've just made this OutOfProcess and i'm quite sure it was for a specific reason
[15:03:54] <Suchiman> ah, InProcess hosting is core exclusive
[15:03:56] <Nasp> Now someone wants to change it to in process
[15:06:09] <Nasp> Suchiman:  I can tell you non-SDK based format seem to be completely borked
[15:06:21] <Suchiman> ??
[15:06:22] <Nasp> VS seems like it can't handle it anymore
[15:17:27] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:18:24] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[15:19:38] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:22:05] <tsujp> Okay I've got another question (do DI or stuff like before lol) : Got a class I'm testing, just want to verify it computes a value correctly but in production code I don't have any use for such a value -- should I make it return the value anyway singularly for the purpose of being able to unit test it?
[15:23:23] <tsujp> The method is a `Task` and takes in a value, does some mutation, and sets that value on a 3rd party API, I could make it `Task<ReturnValue>` and check the return value (what i describe above)
[15:23:37] <tsujp> Should I instead somehow Mock the 3rd party API call here too and intercept the value it tries to set and verify that way?
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:31:35] <biberu> tsujp: split it in two components, one that calculates the value (ideally a pure function that's easy to unit test), and one that calls the api
[15:32:36] <tsujp> Gotcha
[15:32:57] <tsujp> I have a similar pattern elsewhere however one of the calculation methods is `private` because it's an implementation detail. In that case don't test it?
[15:34:03] <biberu> tsujp: if understand you correctly it looks like this now: Stuff -> Task, but if you refactor it into (Stuff -> Value) -> Task the first step can become its own function, and what remains (hopefully) only does one thing: calls the api with the value
[15:34:46] <pandem> yeah but the issue with testing private functions is a real one
[15:34:59] <pandem> you could make it internal and use internalsvisible attribute
[15:35:19] <biberu> yeah, if just don't to make it part of your public api it should be internal
[15:36:20] <Nasp> Avoid testing private methods
[15:36:25] <Nasp> Don't expose it just for the sake of a test
[15:37:15] <biberu> if it should be private or internal depends on what it is
[15:38:16] <pandem> i think in most cases it doesn't matter that much if it's just used by other projects in the same solution but maybe that's just me
[15:38:24] <pandem> if you have more consumers then it starts to matter
[15:39:33] <biberu> solution? i'd only expose it to tests, or consider moving it to another project where it makes sense to declare it public
[15:43:15] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[15:46:17] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[15:49:55] <tsujp> Okay and a third, I can see Callbacks in Moq -- is doing the following sane? I use Moq to mock a 3rd party api (sane so far) and then I have a Callback where, within this Callback, I check some value is equal to what I expect and if it is the test passes (is this sane?)
[15:51:46] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:52:01] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:57:23] *** Joins: Klinda (~superleag@user/klinda)
[15:59:36] <tsujp> It appears you can access the parameters given to the Setup method you're mocking in the Callback (I think), neat
[16:04:26] <tsujp> Awww yiss
[16:04:30] <tsujp> It can be done bois
[16:04:45] <tsujp> Looks kinda sane too if I do say so just part of Moq itself
[16:05:02] <tsujp> This makes up for my pizza being delayed by over an hour
[16:20:59] <tsujp> Looks like you can also access invocation parameters via Returns too, neat
[16:25:10] <Babbage> https://www.youtube.com/watch?app=desktop&v=vPQh1FrbOc0
[16:25:33] <Babbage> loads of people watching that atm, some crazy plane landings happening atm in the storm in the uk
[16:29:30] *** Quits: Assault (~Assault@87-95-121-77.bb.dnainternet.fi) (Quit: Leaving)
[16:32:50] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Read error: Connection reset by peer)
[16:36:18] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[17:00:46] <interop_madness> lol, 214k viewers
[17:01:16] *** Joins: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce)
[17:01:24] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[17:01:57] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[17:02:01] *** Joins: k8yun (~k8yun@user/k8yun)
[17:03:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Read error: Connection reset by peer)
[17:04:12] *** Joins: jamea (~jamea@177.239.81.39)
[17:04:16] <eurogos> that is stressful
[17:08:03] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[17:08:40] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:11:25] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:12:36] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[17:13:10] <lz_> that is stressful https://www.reddit.com/r/Damnthatsinteresting/comments/svdijn/caving_expert_cave_survivalist_professional/
[17:16:00] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Ping timeout: 272 seconds)
[17:16:23] <lz_> ok time to go out
[17:30:15] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[17:33:04] *** Quits: pingec (~pingo@84-255-226-67.static.t-2.net) (Remote host closed the connection)
[17:34:51] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 256 seconds)
[17:36:16] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 272 seconds)
[17:36:45] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Ping timeout: 252 seconds)
[17:38:35] *** Quits: Babbage (~Babbage@94.11.27.96) (Remote host closed the connection)
[17:39:37] <irwiss> so... it's weekend... `indent_style = space` or `indent_style = tab`? :P
[17:39:49] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[17:40:29] <interop_madness> space
[17:41:08] <interop_madness> a space is clearly defined, a tab is specific to implementation and environment
[17:41:28] <interop_madness> it's perfectly valid for a tab to be 250,000 spaces
[17:42:05] <interop_madness> the result should be a source file that's verbatim, regardless of the text editor it's displayed in
[17:42:06] <irwiss> but you can also do `indent_size = 4` :P
[17:42:23] <interop_madness> but that's specific to one editor of one person
[17:42:34] *** Joins: smitty (~smitty@2603:900a:1700:187e:8156:f336:2537:dedc)
[17:43:02] <irwiss> no, put it in .editorconfig and it's supported in any halfassed IDE
[17:44:21] <interop_madness> not notepad++
[17:44:31] <interop_madness> neither EDIT.COM
[17:44:39] <interop_madness> neither cat
[17:45:08] <ki9d> anyone happen to know how to listen to things being pushed to the google gtm script?
[17:45:29] *** Joins: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com)
[17:45:30] <ki9d> There seems to be infrastructure to listen to changes in the gtm datalayer but the docs are missing.
[17:47:04] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[17:47:22] <irwiss> interop_madness: if you really want to you can alias cat to read editorconfig and pipe it to tabs command :P
[17:47:29] <irwiss> also np++ has plugin for editorconfig too
[17:47:45] <interop_madness> introduces additional work/complexity
[17:47:51] <interop_madness> spaces work
[17:48:05] <irwiss> nah, working with someone who uses edit.com is extra complexity :D
[17:49:24] <interop_madness> true, but not a counterargument
[17:49:50] <interop_madness> fact: using spaces instead of tabs makes the source file appear the same (modulor syntax highlighting) across evironments
[17:51:17] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[17:53:48] <interop_madness> this may be important or at least desireable when we're dealing with verbose languages such as C++ where we might want to put every function parameter in a separate line due to the sheer literal size of parameter types: https://paste.ee/r/wXafo/0
[17:55:27] <edcba_> well maybe source files shouldn't be text based but binary based
[17:55:36] *** edcba_ is now known as edcba
[17:55:39] <irwiss> ew, that's annoying style to begin with :P
[17:55:41] *** Quits: edcba (~edcba@78.193.195.38) (Changing host)
[17:55:41] *** Joins: edcba (~edcba@user/edcba)
[17:55:53] <irwiss> also stop naming internal classes the same as std ones and you can use std namespace :P
[17:56:11] <edcba> i mean having non normalized config/source files is a pain
[17:56:54] <edcba> that's one of the thing i don't like with unix env, too much text based
[17:57:42] <edcba> whereas windows mainly using GUIs doesn't care about text files
[17:57:48] *** Joins: jamea (~jamea@189.231.12.163)
[17:58:00] <irwiss> edcba: yeah binary source files don't sound too bad... diffs could also be way better doing binary AST comparisons rather than lousy fuzzy text searches
[17:59:05] <edcba> but yeah it will be a very hard sell to devs
[17:59:36] <edcba> they still want to be able to do some replacement using text tool
[17:59:39] <edcba> s
[17:59:49] <Suchiman> interop_madness: using namespace std;
[18:00:19] <irwiss> edcba: yeah where's that xkcd on flows
[18:00:21] <interop_madness> Suchiman, not advisable everywhere, also, doens't shorten the pasted code considerably
[18:00:43] <irwiss> edcba: https://m.xkcd.com/1172/ :D
[18:02:04] <interop_madness> irwiss, I think Allman bracing and putting parameters in separate lines if the function+parameters exceed some length is pretty much the best way to write C++
[18:02:06] <interop_madness> YMMV
[18:02:58] <interop_madness> also, "const" always to the right of the variable, never to the left. reflects the way the compiler tries first to bind the const keyword
[18:03:26] *** Quits: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce) (Ping timeout: 250 seconds)
[18:03:28] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[18:04:42] <irwiss> yeah i don't mean the const, i mean the shitton of spaces to align stuff
[18:05:09] <interop_madness> i think it's supremely readable that way
[18:05:36] <interop_madness> obviously I try to put every function parameter in the same line, if the total length doesn't exceed whatever the max line length is I allow
[18:06:18] <interop_madness> we have legacy code with functions that have 15-20 parameters (not my idea). it's simply unworkable any other way
[18:07:04] <interop_madness> One might argue "no need to align the parameters under each other, just put them in individual lines" - that's a matter of taste, I prefer them aligned
[18:08:27] <irwiss> there was also this, but getting editor support is probably not realistic https://nickgravgaard.com/elastic-tabstops/
[18:08:34] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 272 seconds)
[18:09:28] <interop_madness> At least the code looks like I would prefer it
[18:12:54] *** Joins: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce)
[18:16:54] <Nasp> irwiss:  That's how you start a war
[18:17:10] <irwiss> it's the weekend, perfect time for wars :P\
[18:18:11] <Nasp> I want to make a nazi editor config so we don't have to dicuss styling
[18:18:18] <Nasp> Same with a few analyzers
[18:19:12] <irwiss> you can configure a ton of analyzers in editorconfig for c# and f# iirc
[18:26:25] *** Joins: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[18:27:53] <Nasp> yes
[18:28:02] <Nasp> But it just takes a good while to configure
[18:31:37] *** Quits: dan01 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce) (Ping timeout: 240 seconds)
[18:32:21] <biberu> interop_madness: i don't like the formatting in that example at all, the parameter list has to be read both horizontally and vertically, it's hard to even determine how many parameters there are, and if the return type or function name change length you've got to realign the parameters
[18:34:03] <jonp> that's why you don't align parameters with `(`
[18:34:10] <jonp> you align "two tab stops in"
[18:34:27] <jonp> and if you're gonna go multi-line, the `(` should be the last token on the line
[18:34:34] <biberu> ^
[18:35:02] <jonp> bool VerboseFunction( \n \t \t std::vector<std::string> const& strings, \n \t \t std::map<â€¦> const & map) \n { â€¦
[18:35:23] <jonp> i *hate* it when params are aligned with `(`, for that "refactoring" reason
[18:35:25] <jonp> it also makes for ugly code
[18:35:31] <jonp> as nothing is consistent across the file
[18:35:39] <jonp> as all method names have different lengths
[18:36:16] <biberu> yeah, it's so weird to scroll through files where all the parameters are on different indents
[18:36:55] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[18:38:23] <jonp> e.g. https://github.com/xamarin/xamarin-android/blob/ebdd4b826cc208202ac1793484cad2fe0036abc2/src/Mono.Android/Java.Interop/EventHelper.cs
[18:39:26] <biberu> but tabs
[18:39:37] <jonp> tabs are good
[18:39:43] <biberu> spaces are good
[18:39:53] <jonp> spaces are hostile
[18:39:57] <biberu> :D
[18:41:14] <jonp> pity i'm having a brain fart for terminology at the moment
[18:41:24] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[18:41:42] <jonp> certain people can't easily read 2/4 space indents, due to poor eyesight or whatever
[18:41:54] <jonp> tabs allow them to change the tab spacing for them, without impacting everyone else
[18:42:00] <jonp> it's a usability issue
[18:44:28] <biberu> hm, i can see that being a thing for 2 spaces, but 4?
[18:52:52] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[18:53:15] *** Joins: k8yun (~k8yun@user/k8yun)
[19:00:36] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[19:01:03] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:01:24] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (Ping timeout: 240 seconds)
[19:02:05] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[19:06:53] *** Joins: dan101 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce)
[19:11:43] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[19:15:14] *** Quits: eurogos (~jongoslin@2a00:23a8:4cca:5901:6dc4:f49f:cde1:45b) (Read error: Connection reset by peer)
[19:16:35] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 256 seconds)
[19:23:24] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[19:24:38] *** Joins: cliluw (~cliluw@47.147.77.43)
[19:35:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:36:30] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[19:48:36] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Ping timeout: 240 seconds)
[19:49:58] <brianonymous> THREEEE DAAAAY WWWEEEEKEEEEND
[19:50:47] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:52:37] *** Quits: dan101 (~dan01@2a02:2f09:3805:0:4c86:b163:cc22:a7ce) (Ping timeout: 256 seconds)
[19:56:41] <Nasp> https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-net-7-preview-1/
[19:56:48] <Nasp> I wonder what "MVC: Improvements to endpoint routing, link generation, and parameter binding." means
[19:56:57] <Nasp> Please lt it be strongly typed routing
[19:58:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:58:44] <Nasp> Strongly typed SignalR, ohh yeah
[19:59:26] <Nasp> I hope this is a joke https://usercontent.irccloud-cdn.com/file/PBeKdJK6/image.png
[19:59:34] <BSaboia> I am building something like a suggestion dictionary. There are a bunch of words on a dictionary, and they translate to a sentence (definition of something else). I did this: 			var suggestions = Definitions.Keys.Where(k => k.StartsWith(term));
[19:59:55] <BSaboia> Is there a way to improve this?
[20:00:12] <Nasp> What do you want to improve?
[20:00:41] <BSaboia> Maybe there are going to be a lot of subsequent calls to this method (while you type, you get suggestions), so I want subsequent calls to be faster at the expense of maybe the first one being more heavy
[20:01:16] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Read error: No route to host)
[20:01:17] <Nasp> Also what's the value for the dictionary?
[20:01:23] <BSaboia> <string, string>
[20:01:41] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[20:02:10] <Nasp> It doesn't look like you are using the value?
[20:02:26] <BSaboia> I am not
[20:02:39] <Nasp> Then you should use a list
[20:02:48] <Nasp> Is this dictionary initialized from code or where do you get these definitions from
[20:02:54] <BSaboia> Nasp, no, I think I was not clear
[20:03:20] <Nasp> Database?
[20:04:08] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[20:06:35] <BSaboia> Nasp, it is in memory. I have a Dictionary<string, string> of acronyms (key) and their definition (value) (let's say, USA -> United States of America). I want that while the user inputs the
[20:06:50] <BSaboia> ... the key, it will show suggestions for possible keys
[20:07:11] <Nasp> And this in memory dictionary is not fast enough?
[20:07:33] <BSaboia> it is, but this is more like an exercise. Because it will be over the internet
[20:08:07] <Nasp> I need more to give any sort of advice
[20:08:36] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[20:09:46] <BSaboia> Nasp, what I want is that the list is i.e ordered so it would be faster to search for it
[20:09:59] <jonp> how big is this dictionary?
[20:10:08] <jonp> if it's "small", what you have is likely fine
[20:10:26] <BSaboia> jonp, something like 1 million entries. So I don't think it's "big"
[20:10:35] <BSaboia> It's financial terms
[20:10:37] <jonp> for "in-memory", 1e6 entries is big
[20:10:47] <jonp> unless you have like a ton of ram
[20:11:26] <BSaboia> I see
[20:11:37] <BSaboia> I never tested it fully (loading all values)
[20:11:45] <Nasp> Maybe start by that
[20:11:53] <Nasp> But don't you have a database or something for these values?
[20:12:18] <jonp> assume each key & value is 5 chars: a string itself requires 2*length+2 bytes (plus more), so you're looking at 12*1e6 bytes, just in strings.
[20:12:47] <jonp> 12 meg, in itself, isn't necessary "a lot", but each time you do your filter it'll create more and more garbage
[20:13:20] <BSaboia> Nasp, yes. But they are loaded and then they stay at the customer's app, unless you want to reload
[20:18:56] <BSaboia> So you agree that this is an alright implementation?
[20:19:41] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:21:51] <irwiss> BSaboia: could consider a trie too, possibly saving some memory over string->string dictionary
[20:21:58] <irwiss> for the live suggestions part
[20:23:25] <BSaboia> irwiss, yeah
[20:23:51] <BSaboia> This is O(n) and I think that it _could_ be more than O(n) in the first one, but better off afterwards on average
[20:24:03] <BSaboia> But it is also alright
[20:24:16] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:24:30] <Slade> for docker stuff. i still want wsl2 right?   does it matter if i'm on win11 pro vs home?
[20:26:22] *** Quits: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au) (Read error: Connection reset by peer)
[20:28:19] *** Joins: Forgetfwrk_Lion (~Forgetwrk@220-244-3-190.tpgi.com.au)
[20:28:57] *** Quits: smitty (~smitty@2603:900a:1700:187e:8156:f336:2537:dedc) (Ping timeout: 240 seconds)
[20:29:12] <BSaboia> WSL2 had some serious networking issues with Docker. But I am not using Windows right now so I don't know if it's fixed
[20:29:16] <brianonymous> thats what im using
[20:32:27] <Nasp> In general docker for windows seems quite... meh
[20:32:37] *** Quits: __gandhibobandhi (~gandhibob@2a02:8109:86c0:4a40:a16e:d671:52cf:2026) (Ping timeout: 240 seconds)
[20:32:44] *** Joins: smitty (~smitty@2603:900a:1700:187e:8156:f336:2537:dedc)
[20:36:19] <Slade> brianonymous: you're using wsl2 with docker for windows?
[20:36:25] <brianonymous> yeah
[20:36:40] <brianonymous> its way faster in a lot of things
[20:36:45] <Slade> thats what i used to use on 10. wasnt sure if there was a new hotness
[20:36:52] <Nasp> I have issues with something in docker is memory leaking on windows
[20:36:56] <Nasp> Ends up using 50+GB
[20:36:57] <brianonymous> oh, i dunno if there is new hotness
[20:37:07] <Nasp> I think podman is the new hotness
[20:37:15] <Nasp> Since Docker desktop requires a license if you are a business
[20:39:00] <Slade> podman seems a nontrivial install on wsl2
[20:39:30] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[20:40:03] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Read error: No route to host)
[20:40:06] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[20:40:35] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[20:41:24] *** Quits: jamea (~jamea@189.231.12.163) (Ping timeout: 240 seconds)
[20:42:37] <Slade> they are sorta wordy about wsl2 on windows home. https://docs.microsoft.com/en-us/windows/wsl/faq#does-wsl-2-use-hyper-v--will-it-be-available-on-windows-10-home-
[20:42:51] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[20:44:36] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 240 seconds)
[20:45:16] <khanred> I wish we would settle on the requirements for this feature...
[20:45:29] <khanred> Yay "agile" I guess
[20:52:32] <lz_> when i see job offers for a "build master" job, i instantly know they're full of shit
[20:53:22] <lz_> typically a company that has the shittiest build process ever and don't want to be annoyed so they'd rather ask someone to deal with it
[20:55:28] <smitty> you know its going to be a rube-golderg machine if it's someone's dedicated job
[20:55:41] <smitty> which, granted, may be required if it's some old monolithic software
[20:55:48] <khanred> We have several "deployment engineers"
[20:56:22] <khanred> I'm glad I don't touch prod
[20:57:00] <smitty> where's your sense of adventure
[20:57:09] * smitty sets the output directory in 'release' build config to an ftp
[20:57:18] <khanred> Dead, like my sense of self worth
[20:57:24] <Nasp> We have someone who's dedicated for that
[20:57:35] <Nasp> It's gotten better, but he seems to insist he's the only one fiddling with it
[20:57:40] <Nasp> Seems like some sort of job security
[20:57:58] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[21:00:41] *** Quits: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it) (Quit: Client closed)
[21:00:54] <khanred> https://usercontent.irccloud-cdn.com/file/sDdHWagK/donot.jpg
[21:02:15] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 256 seconds)
[21:12:55] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:14:14] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:16:43] *** Quits: ejjfunky (~ejjfunky@125.164.18.205) (Ping timeout: 256 seconds)
[21:31:34] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[21:36:56] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 272 seconds)
[21:46:22] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:46:22] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:46:51] <cloudbender> Where do we past code snippets ?
[21:47:37] <jonp> pastebin.com, gist.github.com, whatever
[21:50:59] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[21:52:56] <BSaboia> cloudbender, I like hastebin.com
[21:54:34] <cloudbender> hmmm lemme see
[21:56:33] <cloudbender> I have an account on github, so ...
[21:56:41] <cloudbender> Question at line 11 please
[21:56:42] <cloudbender> https://gist.github.com/cloudbender/ad33aa1fc64f2743955c7145d40c9915
[22:00:14] <cloudbender> I won't know any property names before I inspect the document
[22:04:37] <Nasp> You need to get K but dont know if it's K?
[22:05:16] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[22:05:42] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:08:55] <cloudbender> right
[22:09:35] <cloudbender> I need to deduce the proprety name (key) in the key:value pair
[22:10:30] *** Quits: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net) (Ping timeout: 272 seconds)
[22:17:05] <jonp> cloudbender: this type? https://docs.microsoft.com/en-us/dotnet/api/system.text.json.jsondocument?view=net-6.0
[22:20:07] <cloudbender> yup
[22:20:14] <jonp> cloudbender: if so, looks like you may want EnumerateObject? https://docs.microsoft.com/en-us/dotnet/api/system.text.json.jsonelement.enumerateobject?view=net-6.0#system-text-json-jsonelement-enumerateobject
[22:20:39] <cloudbender> .GetProperty("K") is of no use to me'
[22:20:55] <cloudbender> since I don't know "K" until I inspect
[22:22:15] <cloudbender> OK EnumerateObject I'll fiddle with that and see
[22:22:20] <cloudbender> Thanks
[22:23:04] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[22:33:03] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[22:39:44] <jonp> cloudbender: https://dotnetfiddle.net/yDsFai
[22:39:50] <jonp> looks like EnumerateObjecjt() works
[22:42:31] *** Joins: dan101 (~dan01@2a02:2f0f:311c:1500:807:bb7f:c0e0:9eea)
[22:42:39] <cloudbender> jonp thank you, that's great
[22:51:06] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[23:01:12] *** Joins: jamea22 (~jamea@10.189-202-213.bestelclientes.com.mx)
[23:03:14] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Read error: Connection reset by peer)
[23:03:32] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[23:05:00] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 240 seconds)
[23:07:00] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 240 seconds)
[23:07:25] *** Joins: Klinda (~superleag@user/klinda)
[23:13:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:26:37] *** Quits: shailangsa (~shailangs@host86-186-127-164.range86-186.btcentralplus.com) (Remote host closed the connection)
[23:28:35] *** Quits: MichaelLong (~ml@user/michaellong) (Remote host closed the connection)
[23:29:42] *** Joins: MichaelLong (~ml@2a00:6020:b0a2:fb00:c72f:61c4:7fe8:4755)
[23:29:42] *** Quits: MichaelLong (~ml@2a00:6020:b0a2:fb00:c72f:61c4:7fe8:4755) (Changing host)
[23:29:42] *** Joins: MichaelLong (~ml@user/michaellong)
[23:32:36] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[23:51:45] *** Quits: MichaelLong (~ml@user/michaellong) (Remote host closed the connection)
[23:52:51] *** Joins: MichaelLong (~ml@2a00:6020:b0a2:fb00:9134:802a:5fea:db98)
[23:52:51] *** Quits: MichaelLong (~ml@2a00:6020:b0a2:fb00:9134:802a:5fea:db98) (Changing host)
[23:52:51] *** Joins: MichaelLong (~ml@user/michaellong)
[23:59:02] <irwiss> https://i.redd.it/9vk7pcosdmi81.jpg almost loony tunes
[23:59:56] *** Joins: alguien (~alguien@user/alguien)
