[00:00:39] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[00:02:21] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67) (Quit: Client closed)
[00:03:11] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:03:33] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:04:36] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[00:04:54] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 260 seconds)
[00:05:03] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:06:58] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Remote host closed the connection)
[00:07:48] *** Joins: Telvana (~capo@user/telvana)
[00:08:41] *** Quits: TJ- (~root@user/tj-) (Remote host closed the connection)
[00:09:07] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2)
[00:10:16] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[00:10:20] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[00:10:29] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[00:10:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:11:03] *** Joins: Valeria (~Valeria@user/valeria)
[00:11:19] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[00:12:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[00:12:07] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:12:33] *** Joins: akk (~akk@75.161.146.115)
[00:12:51] *** Joins: ali1234 (~al@user/ali1234)
[00:13:24] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[00:14:31] *** Quits: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com) (Read error: Connection reset by peer)
[00:14:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:14:36] *** Joins: ngaio (~ngaio@static-68-235-44-10.cust.tzulo.com)
[00:17:16] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 268 seconds)
[00:17:26] *** Quits: parv (~quass@user/parv) (Ping timeout: 260 seconds)
[00:17:40] *** Joins: parvXirc (~quass@user/parv)
[00:18:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 264 seconds)
[00:18:11] *** Quits: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr) (Quit: Lost terminal)
[00:19:46] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2) (Quit: guenhael)
[00:20:10] *** Joins: Telvana (~capo@user/telvana)
[00:20:39] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[00:21:42] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 260 seconds)
[00:21:47] *** Quits: yaalon_ (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[00:22:00] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[00:22:04] *** Joins: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net)
[00:22:19] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[00:22:26] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[00:22:26] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:22:49] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[00:22:50] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:23:38] *** Quits: ngaio (~ngaio@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[00:23:44] <Compu-Celebi> I just noticed that, in Python 3.6.9, attempting to raise a negative number by a fractional exponent results does not result in an exception.
[00:23:53] <Compu-Celebi> s/results does not result/does not result/
[00:23:54] *** Joins: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com)
[00:24:04] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 268 seconds)
[00:25:07] <Compu-Celebi> In what version of Python was that feature introduced?
[00:25:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:26:01] <Compu-Celebi> I know that I was still programming in the Python 2 series when I first had an interpreter attempting to do that.  I probably never did it after I commenced programming in the Python 3 series.
[00:26:12] <Compu-Celebi> Perhaps, it was introduced in Python 3.0.
[00:27:24] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[00:27:37] *** Joins: fikran (~fikran@user/fikran)
[00:29:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[00:29:50] *** Quits: computeiro (~Wender@189.37.66.8) (Remote host closed the connection)
[00:29:57] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:30:57] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[00:32:04] <Compu-Celebi> However, in Python 3.6.9, invoking `math.sqrt` with a negative argument still results in an exception, requiring `cmath.sqrt` or another alternative to be used.
[00:33:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[00:33:07] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:34:16] *** Parts: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[00:34:24] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[00:34:48] *** Quits: Valeria (~Valeria@user/valeria) (Ping timeout: 256 seconds)
[00:35:15] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.2)
[00:35:20] <Compu-Celebi> https://docs.python.org/3.6/reference/expressions.html says, "Raising a negative number to a fractional power results in a `complex` number.  (In earlier versions, it raised a `ValueError`.)"
[00:35:42] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:35:44] <seds> Has anyone implemented the "remember device" feature by AWS's cognito? Currently our frontend does the signin through our fastapi endpoint, however, I wonder how the backend should know wheather the user is trying to login from a trusted device by cognito. Anyone implemented something similar?
[00:35:49] *** Joins: Hackerpcs (~user@user/hackerpcs)
[00:36:46] <seds> basically: how the frontend knows the device key the user is logging in when it does not have any aws support, only our backend
[00:37:26] <Compu-Celebi> So do that page's counterparts for all earlier minor versions of the Python 3 series.
[00:37:37] <Compu-Celebi> Evidently, it was introduced in version 3.0.
[00:38:36] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[00:38:48] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[00:39:05] <hexnewbie> Compu-Celebi: The beauty of floats: raising -1 to the power of 1/2 leaves the real part non-zero ;)
[00:39:30] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[00:40:16] <Compu-Celebi> I noticed that the real part was `6.123233995736766e-17`, instead of `0`.
[00:40:56] <Compu-Celebi> I discovered the feature when I inadvertently inputted `(-2j) ** 0.5` as `(-2) ** 0.5`.
[00:40:59] *** Quits: NoelFlantier (~Hubert@gifi.cassossie.net) (Ping timeout: 265 seconds)
[00:41:48] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2)
[00:43:26] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[00:43:52] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Read error: Connection reset by peer)
[00:45:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:46:31] *** Quits: nomic (~nomic@185.198.243.6) (Quit: Leaving)
[00:46:41] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[00:46:49] *** Joins: nomic (~nomic@185.198.243.6)
[00:47:35] *** Quits: gbear605_ (~gbear605@user/gbear605) (Ping timeout: 268 seconds)
[00:47:55] *** Joins: gbear605 (~gbear605@user/gbear605)
[00:47:57] *** Joins: cheater1__ (~Username@user/cheater)
[00:48:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[00:48:15] *** cheater1__ is now known as cheater
[00:48:19] <Compu-Celebi> Strangely, Python 3.6.9 evaluates `(-1) ** (1/3)` as `(0.5000000000000001+0.8660254037844386j)`, instead of `-1` or `-1.0`.
[00:49:22] <Compu-Celebi> In addition, it evaluates `(-27) ** (1/3)` as `(1.5000000000000004+2.598076211353316j)`, which is neither 3i nor either of the non-principal cube roots of negative twenty-seven according to Wikipedia.
[00:49:58] *** Joins: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net)
[00:50:15] <Compu-Celebi> Oh, Wikipedia says "-27i," not "-27."
[00:50:27] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[00:51:02] *** Quits: lbracher (~lucas@94.105.106.159.dyn.edpnet.net) (Ping timeout: 260 seconds)
[00:51:17] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 268 seconds)
[00:51:29] <Compu-Celebi> `(-27j) ** (1/3)` evaluates to `(2.598076211353316-1.4999999999999998j)`, which virtually matches one of the non-principal cube roots of -27i according to Wikipedia.
[00:51:29] *** Quits: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net) (Client Quit)
[00:53:07] *** Joins: masta_ (~oyster@user/masta/x-2645138)
[00:53:23] <Compu-Celebi> `(-1j) ** (1/3)` evaluates to `(0.8660254037844387-0.49999999999999994j)`, whose real part virtually equals the imaginary part of the evaluation of `(-1) ** (1/3)` and whose imaginary part virtually equals the additive inverse of the real part of the evaluation of `(-1) ** (1/3)`.
[00:53:33] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:53:33] *** Joins: kosh_ (~kosh@user/kosh)
[00:53:58] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Read error: Connection reset by peer)
[00:54:32] <hexnewbie> Compu-Celebi: Other calculators (Qalculate) also don't return the principal root here
[00:54:46] *** Joins: Duckle1 (~Duckle@user/duckle)
[00:54:46] *** Joins: manuels1 (~manuel@80.211.205.88)
[00:54:50] *** Quits: gitly (~gitly@85.255.235.207) (Ping timeout: 260 seconds)
[00:54:55] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[00:55:02] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[00:55:16] *** Joins: tf_ (~tf@user/tf)
[00:55:20] *** Joins: BytesAndCoffee|a (~libera@bytes.coffee)
[00:55:28] <Compu-Celebi> I know that positive real numbers have two non-principal cube roots and that they are imaginary.  Therefore, I would be unsurprised by the same being true for negative real numbers.
[00:55:28] *** Joins: Papa_ (~papa@user/papa)
[00:55:28] *** Joins: tdsmith_ (~tdsmith@tds.xyz)
[00:55:32] *** Joins: guntbert_ (~yesitsme@user/guntbert)
[00:55:33] *** Joins: daex_ (~daex@user/daex)
[00:55:37] *** Joins: Fingel_ (fingel@user/fingel)
[00:55:39] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[00:55:41] *** Joins: EGH_z (~EGH@185.25.195.104)
[00:55:42] *** Joins: ColdKeybo[a]rd (~ColdKeybo@user/coldkeyboard)
[00:56:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:56:10] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 260 seconds)
[00:56:10] *** Quits: khile (cacambo@triton.blinkenshell.org) (Ping timeout: 260 seconds)
[00:56:12] *** Joins: _koolazer (~koo@user/koolazer)
[00:56:13] *** Joins: purplex_ (~purplex@user/purplex)
[00:56:13] *** masta_ is now known as masta``
[00:56:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:56:20] *** Joins: uuair_ (~quassel@user/uuair)
[00:56:25] *** Joins: Falcon|1 (andreas@user/falcon/x-0540249)
[00:56:38] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[00:56:39] *** Joins: _zware (~zach@python/psf/zware)
[00:56:39] *** Joins: FuraiTHD (~Furai@cookiehoster.furai.pl)
[00:56:43] *** Joins: Cienisty5 (Cienisty@user/cienisty)
[00:56:43] *** Quits: Kabouik (~Kabouik@user/kabouik) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: papa (~papa@user/papa) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: purplex (~purplex@user/purplex) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: dale (dale@user/dale) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (strontium.libera.chat (Nickname regained by services)))
[00:56:43] *** Cienisty5 is now known as Cienisty
[00:56:48] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: uuair (~quassel@user/uuair) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 246 seconds)
[00:56:58] *** Joins: cryocaustik76 (~cryocaust@user/cryocaustik)
[00:56:59] *** Joins: woffle (awoo@libera/staff/moonmoon)
[00:57:01] *** Joins: arti_ (~arti@2001:bb8:4008:2020::f)
[00:57:06] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[00:57:07] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Read error: Connection reset by peer)
[00:57:07] *** Quits: Duckle (~Duckle@user/duckle) (Read error: Connection reset by peer)
[00:57:07] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (Ping timeout: 268 seconds)
[00:57:07] *** Joins: dale (dale@user/dale)
[00:57:07] *** Duckle1 is now known as Duckle
[00:57:09] *** Joins: taeaad_ (~taeaad@user/taeaad)
[00:57:09] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[00:57:15] *** Joins: habnabit (habnabit@python/site-packages/habnabit)
[00:57:15] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: spai (~spai@user/spai) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: guntbert (~yesitsme@user/guntbert) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: pacbard (~pacbard@user/pacbard) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: habnabit_ (habnabit@python/site-packages/habnabit) (Ping timeout: 268 seconds)
[00:57:19] *** Joins: dhch7 (~dhch@185.213.154.168)
[00:57:20] *** Joins: greenbagels_ (~gb@user/greenbagels)
[00:57:31] *** Joins: Alan9 (~alan@user/alan)
[00:57:46] *** Quits: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: ferros (~ferros@vps-eacaba1b.vps.ovh.net) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: Swayze (~gryster@user/swayze) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: zware (~zach@python/psf/zware) (Ping timeout: 246 seconds)
[00:57:47] *** cryocaustik76 is now known as cryocaustik7
[00:57:47] *** Quits: zommKa (~ccctttmat@2001:470:69fc:105::b947) (Ping timeout: 246 seconds)
[00:57:47] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (Ping timeout: 246 seconds)
[00:57:47] *** Quits: taeaad (~taeaad@user/taeaad) (Ping timeout: 246 seconds)
[00:57:47] *** Quits: _0ne (~one@user/0ne/x-2101768) (Ping timeout: 246 seconds)
[00:57:47] *** Quits: timothy (~timothy@redhat/timothy) (Ping timeout: 246 seconds)
[00:57:51] *** Joins: pacbard (~pacbard@user/pacbard)
[00:57:51] *** _zware is now known as zware
[00:57:57] *** Joins: polyrob_ (~rob@user/polyrob)
[00:58:00] *** Joins: tofran0 (~tofran@37.189.158.134)
[00:58:04] *** Quits: prime (~prime@user/prime) (Ping timeout: 268 seconds)
[00:58:04] *** Quits: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[00:58:09] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[00:58:13] *** Joins: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net)
[00:58:19] *** Joins: gitly (~gitly@148.252.129.79)
[00:58:23] *** Quits: manuels (~manuel@80.211.205.88) (Read error: Connection reset by peer)
[00:58:23] *** Quits: Fingel (fingel@user/fingel) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: tdsmith (~tdsmith@tds.xyz) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: daex (~daex@user/daex) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: gildarts (16abab341f@user/gildarts) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: starz (~starz@2001:41d0:8:4bd3::1) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: Jmtrix (~qed@user/jmtrix) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 264 seconds)
[00:58:23] *** manuels1 is now known as manuels
[00:58:23] *** Quits: tf (~tf@user/tf) (Ping timeout: 264 seconds)
[00:58:23] *** Joins: frrs (~ferros@vps-eacaba1b.vps.ovh.net)
[00:58:23] *** Quits: allegary (~allegary@apache/committer/gjm) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: glider_ (~glider@user/glider) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (Read error: Connection reset by peer)
[00:58:23] *** Quits: Chex (~Chex@user/chex) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: erry (~erry@errietta.me) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: Alan (~alan@user/alan) (Ping timeout: 264 seconds)
[00:58:24] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 264 seconds)
[00:58:24] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 264 seconds)
[00:58:24] *** tofran0 is now known as tofran
[00:58:24] *** Alan9 is now known as Alan
[00:58:24] *** dhch7 is now known as dhch
[00:58:25] *** Joins: pycurious (~Adium@user/pycurious)
[00:58:29] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 246 seconds)
[00:58:34] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[00:58:40] *** Joins: timothy (~timothy@redhat/timothy)
[00:58:44] *** woffle is now known as moonmoon
[00:58:49] *** Joins: ntdll (~ntdll@user/ntdll)
[00:58:51] *** Joins: erry (~erry@errietta.me)
[00:58:53] *** Joins: dlam (~dlam@dlam.me)
[00:58:53] *** Quits: Hummer12007 (061e0434dc@2604:bf00:710:0:5054:ff:feea:5006) (Ping timeout: 264 seconds)
[00:58:57] *** Joins: _0ne (~one@user/0ne/x-2101768)
[00:59:00] *** polyrob_ is now known as polyrob
[00:59:04] *** Joins: Hummer12007 (061e0434dc@2604:bf00:710:0:5054:ff:feea:5006)
[00:59:09] *** Joins: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net)
[00:59:25] *** Joins: gildarts (16abab341f@user/gildarts)
[00:59:38] *** Joins: prime (~prime@user/prime)
[01:00:10] *** Quits: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net) (Client Quit)
[01:00:26] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[01:00:32] *** kosh_ is now known as kosh
[01:00:43] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[01:00:52] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[01:01:08] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:01:39] *** Joins: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net)
[01:02:00] *** Joins: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de)
[01:02:05] *** Quits: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net) (Remote host closed the connection)
[01:02:14] *** Quits: emerent (~quassel@p200300cd57485527ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:02:28] <SnoopJ> Compu-Celebi, that is one of the so-called "roots of unity" for n=3, https://en.wikipedia.org/wiki/Root_of_unity#Explicit_expressions_in_low_degrees
[01:02:30] *** Joins: emerent (~quassel@p200300cd5748556aba27ebfffed28a59.dip0.t-ipconnect.de)
[01:02:48] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:03:29] *** Joins: glider (~glider@user/glider)
[01:03:34] *** frrs is now known as ferros
[01:03:39] <Compu-Celebi> I actually read portions of that article as a result of reading the Wikipedia article "Cubic equation."
[01:03:57] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[01:04:48] *** Joins: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net)
[01:05:04] *** Quits: guenhael_ (~guenhael@82-64-168-140.subs.proxad.net) (Remote host closed the connection)
[01:05:05] *** Quits: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de) (Quit: Leaving)
[01:05:09] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[01:05:35] *** Joins: spai (~spai@user/spai)
[01:06:04] *** Joins: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de)
[01:06:22] *** Joins: Julian1988 (~gozeh@ip-95-223-70-140.hsi16.unitymediagroup.de)
[01:06:46] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[01:06:49] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:08:17] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[01:08:23] *** Quits: mcon (~Thunderbi@host-79-55-229-50.retail.telecomitalia.it) (Quit: mcon)
[01:08:50] <Compu-Celebi> I recollect that the nth roots of unity are the bases whose nth power is one.
[01:09:11] <Compu-Celebi> They are the nth roots of one.
[01:09:56] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Read error: Connection reset by peer)
[01:10:49] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67)
[01:11:13] <Compu-Celebi> Why are they called "roots of unity"?  Does "unity" equal one, ha?
[01:11:25] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[01:11:33] <Repiphany> Yes, unity is a mathy way of saying one
[01:11:47] <phy1729> You may be interested in ##math :)
[01:12:05] *** Joins: ede (~ede@user/ede)
[01:12:09] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 256 seconds)
[01:12:14] *** Joins: allegary (~allegary@apache/committer/gjm)
[01:12:34] <ferros> unity?
[01:12:36] *** Joins: onichomp (~onichomp@2806:264:4404:8200:484:c4c5:73a0:a3da)
[01:12:36] *** Joins: tspng (~tspng@2a02:168:a1a1:1:4409:e975:3849:b301)
[01:12:44] <ferros> Maybe unit?
[01:12:48] <Zweimer> def func(self) -> Tuple[int, str, str]:     How can I check if the returned value has the right structure? x = func()  \n  if x is Tuple[int, str, str]  does not work.
[01:13:05] <ferros> And unit as identity element is one only in certain context
[01:14:30] <bjs> Zweimer: at runtime? it's hard to do, you'd have to check it's a tuple and that each element has the right type
[01:14:36] *** Joins: kop (~user@karlpinc-net.karlpinc.com)
[01:14:37] <bjs> Zweimer: some tools can check statically though, like mypy
[01:14:55] <ferros> Yeah mypy is the way to go most likely
[01:15:12] <Zweimer> Right. I hoped there is a more elegant way of doing this at runtime. (Haven't used mypy before)
[01:15:20] <Compu-Celebi> "Unit" is derived from "unity," which is derived from the Latin word "unus," which translates as "one."
[01:15:33] *** Quits: delvian (~delvian@41.13.192.7) (Ping timeout: 256 seconds)
[01:15:44] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[01:15:45] <ferros> mypy is more elegant in my view but guess it's a preference
[01:16:07] <bjs> Zweimer: `if isinstance(t, tuple) and isinstance(t[0], int) and isinstance(t[1], str) and isinstance(t[2], str) and len(t) == 3` is the closest you'll get.  I think mypy *is* the more elegant way of doing it (but it's just not at runtime)
[01:16:34] <phy1729> Zweimer: if you do it with mypy, there's no code to check at runtime which seems pretty elegant to me
[01:16:46] <Zweimer> Right. I might have a look at mypy then :)
[01:18:19] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[01:18:19] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 268 seconds)
[01:18:23] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 256 seconds)
[01:18:39] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[01:19:16] *** Joins: delvian (~delvian@41.13.192.7)
[01:20:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:20:19] *** Quits: chatcat (chatcat@gateway/vpn/airvpn/chatcat) (Read error: Connection reset by peer)
[01:21:08] *** Joins: Khoyo (~khoyo@user/khoyo)
[01:21:54] <Compu-Celebi> SnoopJ, if you meant that `(0.5000000000000001+0.8660254037844386j)` is approximately one of the third roots of unity, you are incorrect, because that is a cube root of negative one, not one, one of whose non-principal cube roots is approximately `(-0.5000000000000001+0.8660254037844386j)`.
[01:22:01] <Compu-Celebi> Notice the additive inverse.
[01:22:02] *** Quits: msfninja (~kali@user/msfninja) (Ping timeout: 268 seconds)
[01:22:21] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[01:22:25] <Compu-Celebi> s/are/were/
[01:22:38] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[01:23:18] *** Joins: grooverman (~grooverma@177.102.119.40)
[01:25:44] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[01:26:05] <phy1729> Compu-Celebi: what exactly is the issue?
[01:26:27] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[01:27:19] <Compu-Celebi> Nothing, but I am attempting to ascertain how to calculate non-principal cube roots.  How do Python interpreters do that?
[01:27:29] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:29:00] <phy1729> I mean the mathy way is just convert to polar coordinates, find the principal and then just multiply by e^(n * 2pi * i / 3)   n=0...2 for cube roots
[01:30:08] <phy1729> roots make a lot more visual sense on the complex plane
[01:30:36] *** Joins: pgib (~textual@173.38.117.89)
[01:30:51] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[01:31:22] <Compu-Celebi> I barely studied complex numbers when I attended high school, and none of my formal education involved the complex plane, although I have been exposed to it on Wikipedia for quite a while.
[01:31:22] <parvXirc> Zweimer, https://termbin.com/b02q
[01:31:31] <Compu-Celebi> I am familiar with trigonometry.
[01:32:09] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52)
[01:32:53] <Zweimer> parvXirc This looks a bit over the top :O
[01:33:08] <parvXirc> Zweimer, Sorry that version is not complete, try https://termbin.com/rpjf
[01:34:17] <parvXirc> Zweimer, Yeah, I was trying my hand at decorations. I feel what check_subset funtion does, could be just a normal function sans nested functions.
[01:34:49] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:34:49] *** Quits: bninja (~bloodninj@user/bloodninja) (Ping timeout: 256 seconds)
[01:35:11] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:35:36] *** Quits: onichomp (~onichomp@2806:264:4404:8200:484:c4c5:73a0:a3da) (Ping timeout: 268 seconds)
[01:36:15] <parvXirc> Zweimer, In nay case my version does not care for type annotations. Check `runtype` https://runtype.readthedocs.io/en/latest/
[01:36:17] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[01:36:36] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[01:36:49] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[01:36:51] <Zweimer> Yeah this could be a solution. The question is if it's neater than bjs's `if isinstance(t, tuple) and isinstance(t[0], int) and isinstance(t[1], str) and isinstance(t[2], str) and len(t) == 3` or the mypy idea. However, I will investigate your solution a bit to figure out how it works!
[01:39:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[01:39:26] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:39:42] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:41:03] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[01:41:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:41:43] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[01:43:54] *** Joins: anddam (~anddam@user/anddam)
[01:44:11] *** Quits: anddam (~anddam@user/anddam) (Client Quit)
[01:44:21] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:44:28] *** Joins: anddam (~anddam@user/anddam)
[01:46:05] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 268 seconds)
[01:46:16] *** Joins: haasn` (~nand@haasn.dev)
[01:46:19] *** Joins: ali12341 (~al@user/ali1234)
[01:46:21] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:46:21] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[01:46:23] *** Quits: metaace (~metaace@user/metaace) (Quit: Goodbye!)
[01:46:23] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:46:23] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[01:46:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:46:26] *** Quits: jasiek (~jps@kuweta.sanepid.org) (Ping timeout: 246 seconds)
[01:46:28] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:46:30] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[01:46:30] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[01:46:35] *** Quits: Liexei (~Liexei@user/liexei) (Ping timeout: 264 seconds)
[01:46:43] *** Quits: Titore (~Titore@user/titore) (Ping timeout: 265 seconds)
[01:46:45] *** Joins: de-facto (~de-facto@user/de-facto)
[01:46:47] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[01:46:53] *** Quits: Ennea (~Ennea@user/ennea) (Ping timeout: 252 seconds)
[01:46:54] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[01:47:01] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:47:01] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[01:47:11] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:47:11] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 264 seconds)
[01:47:11] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[01:47:15] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[01:47:18] *** Joins: kevr (~kevr@user/kevr)
[01:47:18] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:47:24] *** Quits: haasn (~nand@haasn.dev) (Ping timeout: 268 seconds)
[01:47:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:47:29] *** Quits: crackerjack (~crackerja@pear.bnc4free.com) (Ping timeout: 264 seconds)
[01:47:32] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:47:40] *** haasn` is now known as haasn
[01:47:53] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Ping timeout (120 seconds))
[01:47:56] *** Joins: metaace (~metaace@user/metaace)
[01:48:02] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[01:48:12] *** Joins: jasiek (~jps@kuweta.sanepid.org)
[01:48:14] *** Joins: Ennea (~Ennea@user/ennea)
[01:48:16] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:48:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[01:49:04] *** Joins: ano (~ano@user/ano)
[01:49:08] *** Joins: Atque (~Atque@user/atque)
[01:49:11] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[01:49:20] *** Joins: Liexei (~Liexei@user/liexei)
[01:49:20] *** Joins: Bakunin (~Lindis@user/lindis)
[01:49:27] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[01:49:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:49:30] *** finn_elija is now known as FinnElija
[01:49:38] *** Joins: crackerjack (~crackerja@pear.bnc4free.com)
[01:49:46] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[01:49:51] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[01:49:53] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:50:33] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[01:51:08] *** Joins: plastico (~plastico@neomutt/plastico)
[01:51:11] <parvXirc> Re [decorator function being] "over the top", well it would have been nice if both function & its argument could be passed along together instead of having to access the latter separately.
[01:51:24] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:51:38] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255)
[01:51:43] *** Joins: newpy (~newpy@206.168.231.90)
[01:51:48] *** Joins: ano (~ano@user/ano)
[01:52:57] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 256 seconds)
[01:53:10] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:53:11] *** Joins: goldfish (~goldfish@user/goldfish)
[01:53:27] *** Quits: Samian (~s@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[01:53:53] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[01:54:59] *** Joins: ano (~ano@user/ano)
[01:55:01] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[01:55:24] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52) (Read error: Connection reset by peer)
[01:55:59] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[01:56:02] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52)
[01:56:03] *** Joins: Titore (~Titore@user/titore)
[01:56:18] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[01:56:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[01:57:01] *** Joins: monkey_ (~user@190.104.116.153)
[01:57:22] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[01:57:38] *** Joins: nbin (~nbin@user/nbin)
[01:57:51] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (Remote host closed the connection)
[01:58:06] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[01:58:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:59:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[02:00:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:00:29] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[02:01:30] *** Joins: defn (~n0b0dy@user/defn)
[02:02:29] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:02:40] *** Quits: d3fn (~n0b0dy@user/defn) (Ping timeout: 260 seconds)
[02:03:03] *** Quits: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7) (Quit: Leaving)
[02:03:22] *** Joins: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7)
[02:06:11] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[02:09:42] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[02:09:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:09:56] *** Joins: Atque (~Atque@user/atque)
[02:10:19] *** Joins: nos0u1 (~nosoul@178-143-43-225.dynamic.orange.sk)
[02:10:29] *** Quits: nos0u1 (~nosoul@178-143-43-225.dynamic.orange.sk) (Remote host closed the connection)
[02:11:46] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:12:23] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[02:13:01] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 245 seconds)
[02:14:51] *** Joins: Khoyo (~khoyo@user/khoyo)
[02:15:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[02:15:41] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[02:16:30] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[02:17:32] *** Quits: eblip (~eb0t@90.202.252.138) (Ping timeout: 268 seconds)
[02:18:28] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d) (Remote host closed the connection)
[02:18:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:18:49] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:19:00] *** Joins: eblip (~eb0t@90.202.254.138)
[02:19:05] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d)
[02:19:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:19:39] *** Joins: Klinda (~superleag@user/klinda)
[02:20:36] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[02:20:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:22:04] *** Quits: Julian1988 (~gozeh@ip-95-223-70-140.hsi16.unitymediagroup.de) (Remote host closed the connection)
[02:22:19] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:22:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com)
[02:22:59] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[02:24:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[02:25:01] *** Joins: matsaman (~matsaman@user/matsaman)
[02:25:42] *** Quits: Compu-Celebi (~Compu-Cel@96-18-74-43.cpe.sparklight.net) (Quit: I am disconnecting from this network.)
[02:26:02] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[02:26:10] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:26:15] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.3)
[02:26:57] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[02:27:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:27:40] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[02:29:33] *** Joins: sertsa (~sertsa@209.140.9.160)
[02:30:32] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[02:31:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:31:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:32:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:33:20] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2) (Read error: Connection reset by peer)
[02:33:42] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[02:34:47] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:35:06] *** Quits: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:35:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:36:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:37:21] *** Joins: fikran (~fikran@user/fikran)
[02:37:28] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[02:39:45] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[02:39:55] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:41:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:41:31] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[02:42:03] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[02:43:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[02:44:39] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 268 seconds)
[02:44:58] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[02:45:27] *** ali12341 is now known as ali1234
[02:46:29] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[02:46:34] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[02:46:35] *** guenhael1 is now known as guenhael
[02:46:46] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[02:47:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[02:47:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:48:17] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:48:51] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:49:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:49:15] *** Joins: monkey_ (~user@190.104.116.153)
[02:50:12] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[02:50:36] *** Joins: alzgh (~alzgh@user/alzgh)
[02:50:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:51:50] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[02:54:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:54:21] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[02:54:46] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[02:56:22] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[02:56:34] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[02:56:42] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[02:57:17] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:57:27] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[02:57:53] *** Joins: Majost (uid143251@id-143251.uxbridge.irccloud.com)
[02:58:53] *** Joins: LTCD (~LTCD@0547499c.skybroadband.com)
[02:59:21] <LTCD> Hey how can I fix this error can only concatenate str (not "bytes") to str for the following line: junk = "A" * 248 + add + buf + "C" * (700 - len(buf))
[02:59:47] *** Quits: delvian (~delvian@41.13.192.7) (Ping timeout: 264 seconds)
[03:01:35] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 264 seconds)
[03:02:03] <jinsun> LTCD: what is add and buf?
[03:02:13] *** rickybob is now known as siRick
[03:03:08] <LTCD> jinsun Here is the full code: www.pastebin.com/xkm3Hqz0
[03:03:53] <Majost> What is the proper way to to create an instance of an object in a unittest TestCase class, which can be used by different tests in the class?
[03:04:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:04:28] <nedbat> Majost: you can create it in the setUp method
[03:05:13] <KirkMcDonald> LTCD: I suspect you want to use bytes throughout this code, not str.
[03:05:24] <KirkMcDonald> LTCD: Meaning b"" instead of ""
[03:06:16] <LTCD> KirkMcDonald No, because I want the numerous A's to remain as that·
[03:07:25] <KirkMcDonald> LTCD: What is the type of the object to which `add` refers?
[03:07:40] <nedbat> LTCD: why would a bytestring change the "A"s?
[03:07:44] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:08:01] *** Joins: thiras (~thiras@user/thiras)
[03:08:20] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[03:08:43] <Majost> nedbat: Do you know of any good examples of this I can look at?
[03:10:05] <nedbat> Majost: this is a goofy toy example, but shows the idea: https://gist.github.com/nedbat/b0267283ec8fb2e0dcc87d475fd662fb
[03:10:20] <Majost> Thanks!
[03:10:28] <LTCD> KirkMcDonald I'm not sure.
[03:10:42] <LTCD> nedbat I thought it would change them into hex or something?
[03:10:52] <Majost> I was thinking I had to call it as `setUp(self.the_thing = make_a_thing())`
[03:10:57] <nedbat> LTCD: no, b"A" is an ascii A
[03:11:04] <KirkMcDonald> LTCD: No. It is just a sequence of bytes.
[03:11:09] <nedbat> Majost: the unittest test runner calls setUp for you
[03:11:21] <Majost> Ahh
[03:11:29] <Majost> That makes more sense now.
[03:12:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:12:06] <nedbat> LTCD: the thing is, your string on line 4 is all hex anyway.  you want bytestrings
[03:12:23] *** siRick is now known as rickybob
[03:12:49] <LTCD> Fine, I'll add a b before all the ""
[03:13:13] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-a84d-5e37-b6bd-99de.res6.spectrum.com)
[03:13:37] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:f33b:fde:6c61:c559) (Quit: Konversation terminated!)
[03:13:55] <stats4647> Hi, I have a variable that may have contact ‘string' or ['string','string'], if it's the former, I'd like to convert it to ['string'] - do I have to check its type with isinstance() or is there a more succinct way? TIA
[03:14:09] <KirkMcDonald> stats4647: You pretty much have to check the type.
[03:14:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:14:49] <stats4647> KirkMcDonald: thanks
[03:14:49] <LTCD> It appears to work so BRB.
[03:15:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:16:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:18:29] *** Quits: LTCD (~LTCD@0547499c.skybroadband.com) (Quit: Client closed)
[03:18:51] *** Quits: nicode (~nic@216.154.33.88) (Quit: WeeChat 2.8)
[03:19:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:19:50] *** Quits: nomic (~nomic@185.198.243.6) (Quit: Leaving)
[03:20:37] *** Quits: sertsa (~sertsa@209.140.9.160) (Quit: Leaving)
[03:22:26] *** Joins: nomic (~nomic@185.198.243.6)
[03:23:27] <cluelessperson> I'm having one difficulty with asyncio,  how do I pass variables between async functions?
[03:23:38] <cluelessperson> correction, how do I pass data between long running async functions?
[03:26:35] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[03:27:10] <cluelessperson> hm, perhaps just a list of client queues in a mutable.
[03:28:37] *** Quits: Akuli (~Akuli@82-203-163-207.bb.dnainternet.fi) (Quit: Leaving)
[03:29:51] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 256 seconds)
[03:31:18] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[03:31:38] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[03:32:49] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[03:32:57] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[03:33:02] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[03:34:23] *** Quits: cosimone (~user@93-44-186-19.ip98.fastwebnet.it) (Ping timeout: 256 seconds)
[03:34:34] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[03:35:03] <cluelessperson> the tools I'm aware of for passing data are:  Queue and Event
[03:37:32] *** Quits: tspng (~tspng@2a02:168:a1a1:1:4409:e975:3849:b301) (Quit: Leaving, bye!)
[03:37:42] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[03:39:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:39:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:8056:a659:b191:c249) (Ping timeout: 260 seconds)
[03:39:53] * cluelessperson goes back to trio task communication
[03:39:59] *** Quits: parvXirc (~quass@user/parv) (Ping timeout: 264 seconds)
[03:40:57] *** Joins: ThomasJ_ (~ThomasJ@user/thomasj)
[03:41:11] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Ping timeout: 264 seconds)
[03:41:22] *** ThomasJ_ is now known as ThomasJ
[03:41:36] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[03:41:39] *** Joins: thorbw (~tw@46.230.138.219)
[03:42:16] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[03:43:44] * cluelessperson found https://trio.readthedocs.io/en/stable/reference-core.html#managing-multiple-producers-and-or-multiple-consumers
[03:46:17] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[03:48:51] <drdesquire_> cluelessperson: you cant return the value you need?
[03:50:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[03:51:55] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:51:58] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:52:15] *** Quits: nomic (~nomic@185.198.243.6) (Quit: Leaving)
[03:52:44] <cluelessperson> drdesquire_, You can't just have 100 clients requesting data from a single synchronous camera.
[03:53:07] <cluelessperson> https://github.com/python-trio/trio/issues/987
[03:53:25] *** Joins: binary011 (~binary01@192.110.171.216)
[03:53:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[03:54:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:54:13] *** Quits: binary011 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[03:54:21] <drdesquire_> :)
[03:55:34] <cluelessperson> drdesquire_, You create a thread (or asyncio task) that watches the camera for frames, then you broadcast through a shared channel or pipe or whatever that all the client request tasks watch for updates from
[03:56:11] *** Quits: magla (~gelignite@55d469ae.access.ecotel.net) (Quit: Stay safe!)
[03:57:20] <cluelessperson> drdesquire_, the problem is that such a broadcast channel concept doesn't yet exist in this framework (trio)
[03:57:41] <MrBurns> I have a listGroup[list1,list2,list3...] and I would like to save the group in a .csv file format like row1=list1 , row2=list2 etc.. what would be the correct way to do this?
[03:58:19] <grym> MrBurns: with the csv writer module
[03:58:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[03:59:57] <MrBurns> grym: Ok. thanks
[04:00:49] <adder`> cluelessperson, you can clone the receiver, it's in the docs
[04:00:56] <adder`> unless I'm misunderstanding what you need
[04:01:05] <cluelessperson> adder`, clone the receiver?
[04:01:16] <adder`> transmitter*
[04:01:59] <cluelessperson> I need a broadcast channel or similar
[04:02:33] <adder`> you can have one sending channel and as many as you want receiving channels
[04:02:51] <adder`> then you feed whatever you need to feed into sending channel and it gets out at the receivers
[04:03:57] <cluelessperson> adder`, how do I moderate or control receiving channels for various connecting clients?
[04:04:35] <adder`> I have no idea what you're doing but there's your broadcast channel
[04:04:42] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[04:05:35] <cluelessperson> adder`, so a user connects to the server,   their request task needs to observe updates to the broadcast channel
[04:06:34] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[04:07:25] <cluelessperson> adder`, I'm confused.
[04:08:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:09:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[04:10:53] <cluelessperson> adder`, Do you mean just copying the receiving end?   Won't the first client to retrieve a value, remove that value like a queue for the other clients?
[04:11:34] <cluelessperson> adder`, or do you mean having each client add a channel to a list, that something else watches the common input to send to all the clients?
[04:11:50] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[04:11:57] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[04:12:48] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[04:15:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:16:36] *** Joins: goldfish (~goldfish@user/goldfish)
[04:16:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[04:17:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:17:43] <drdesquire_> cluelessperson: tbh anync makes my head hurt but these docs are fun :) I like the nursery concept, but isn't that the source of your problem?
[04:18:10] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:18:35] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[04:19:35] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 264 seconds)
[04:19:42] <cluelessperson> drdesquire_, all asyncio really is, is a while loop that iterates over a list of tasks that you can modify.   Each task must call asyncio.sleep(   allowing the larger loop to continue work in the next task.
[04:20:42] <cluelessperson> then you deal with the normal threading issues, locking, shared variables, etc.
[04:21:27] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:21:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Ping timeout: 256 seconds)
[04:23:04] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[04:24:49] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:25:21] *** Joins: goldfish (~goldfish@user/goldfish)
[04:25:52] *** Joins: drdesquire (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[04:26:21] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Ping timeout: 245 seconds)
[04:26:32] *** Joins: Wulf (~Wulf@user/wulf)
[04:27:13] <drdesquire> cluelessperson: I picked up my laptop and it crashed. saw 'async is fancy while loop' but I coudlt read the rest
[04:27:25] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:27:29] <cluelessperson> drdesquire_, all asyncio really is, is a while loop that iterates over a list of tasks that you can modify.   Each task must call asyncio.sleep(   allowing the larger loop to continue work in the next task.
[04:27:38] <cluelessperson> then you deal with the normal threading issues, locking, shared variables, etc.
[04:27:43] <cluelessperson> as far as I understand.
[04:28:35] *** Joins: Bakunin (~Lindis@user/lindis)
[04:28:43] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[04:29:03] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[04:30:37] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:31:18] *** Quits: ubert (~Thunderbi@p200300ecdf4fcafee019fddc82d0353e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:31:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:31:24] *** Joins: ub (~Thunderbi@p200300ecdf4fca30e019fddc82d0353e.dip0.t-ipconnect.de)
[04:33:19] <drdesquire> cluelessperson: I just started looking into rust FFI's. Not sure it could work, but in theory tokio could be ported to python with PyO3 or something
[04:33:43] *** ub is now known as ubert
[04:34:00] <drdesquire> cluelessperson: or I am a crazy person
[04:35:02] *** Quits: flokuehn (~flokuehn@87.123.247.76) (Ping timeout: 268 seconds)
[04:35:15] *** Joins: audiobirb (~audio@user/audio)
[04:35:32] <drdesquire> https://github.com/PyO3/pyo3/blob/0b269c4d3d64ea2effb2c687493b05ff3520e502/guide/src/ecosystem/async-await.md idk like I said async hurts my head
[04:35:42] *** Joins: anddam (~anddam@user/anddam)
[04:36:38] *** Quits: goldfish (~goldfish@user/goldfish) (Quit: Leaving)
[04:36:42] *** Joins: flokuehn (~flokuehn@87.123.247.95)
[04:37:09] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:37:43] <cluelessperson> drdesquire, I'm not familiar with rust.
[04:38:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:39:22] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:41:21] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[04:42:07] *** Quits: drdesquire (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Remote host closed the connection)
[04:43:58] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[04:44:18] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[04:45:13] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[04:45:39] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[04:48:33] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[04:48:38] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[04:50:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5127-c5ae-948a-d7af.res6.spectrum.com) (Read error: Connection reset by peer)
[04:50:56] *** guenhael1 is now known as guenhael
[04:52:07] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:52:51] *** Quits: _0ne (~one@user/0ne/x-2101768) (Quit: _0ne)
[04:55:17] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[04:55:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:56:26] *** Joins: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs)
[04:57:19] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:58:25] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[05:00:23] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:00:26] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[05:00:36] <whatsupdoc> Is there a better way to do this in python?
[05:00:51] <whatsupdoc> https://dpaste.org/gN5v
[05:00:54] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[05:02:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:02:46] <SnoopJ> whatsupdoc, it's not really clear what this loop is supposed to do, but you could get the result at the end of the loop with `nex = myString[-1]`
[05:03:09] <whatsupdoc> I'm trying to loop through a string, two characters at a time
[05:03:21] <whatsupdoc> Am I just dumb and there' s a better way?
[05:03:55] <aphysically> SnoopJ: obviously the correct way to get the last item in an iterable is to loop through it with pass then use the iteration variable after the loop closes
[05:03:58] <aphysically> [don't do this]
[05:04:14] <whatsupdoc> "hello" iterations: ('h','e'), ('e','l'), ('l', 'l'), ('l', 'o')
[05:04:45] <aphysically> I was trying to think of the best way to program a moving window iteration in python
[05:04:54] <aphysically> and my conclusion was all solutions were terrible or unreadable
[05:04:57] <aphysically> :)
[05:04:58] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 260 seconds)
[05:05:00] <whatsupdoc> lol
[05:05:03] <whatsupdoc> that's what i think also
[05:05:23] <whatsupdoc> back to using range(len()) lol
[05:05:27] <SnoopJ> I'd probably write a generator function to yield a pair at a time
[05:05:29] <aphysically> thre was a decent way to do it with something in itertools or some such iirc but it wasn't obvious what's going on
[05:05:46] <SnoopJ> yea, the chunks recipe in the itertools docs (or in more-itertools) can do it too
[05:06:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:06:32] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[05:06:48] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[05:07:27] <nedbat> whatsupdoc: for a,b in zip(the_list, the_list[1:]):
[05:07:36] <SnoopJ> ah, yes, far simpler than a generator
[05:07:55] <whatsupdoc> smart
[05:08:03] <jinsun> in python 3.10 https://docs.python.org/3/library/itertools.html#itertools.pairwise
[05:09:17] <whatsupdoc> python should add for cur, nex in my_str:
[05:09:34] <SnoopJ> whatsupdoc, what would that do for a length-one string?
[05:09:45] <whatsupdoc> assign to None if unavailable
[05:09:47] <SnoopJ> or the empty string, even
[05:10:03] <aphysically> maybe wanting moving windows are a sign I have a terrible algorithm in mind
[05:10:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[05:10:12] *** Quits: feoh (~feoh@137.184.104.30) (Quit: Ping timeout (120 seconds))
[05:10:16] <SnoopJ> they're not uncommon
[05:10:34] *** Quits: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:10:45] *** Joins: feoh (~feoh@137.184.104.30)
[05:10:53] <SnoopJ> but sometimes over a sequence you just keep track of indices
[05:11:09] <jinsun> whatsupdoc: more_itertools.windowed does the filling with None thing, https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed
[05:12:22] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 260 seconds)
[05:13:21] <jinsun> for the last item more_itertools does `deque(iterable, maxlen=1)[-1]`
[05:13:37] <jinsun> not sure why not `list(iterable)[-1]`
[05:13:42] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:14:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:14:07] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:15:12] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[05:17:38] <aphysically> idk probably a microptimization
[05:17:49] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:18:10] *** Joins: amo (~amogorkon@port-92-196-83-208.dynamic.as20676.net)
[05:18:12] <jinsun> ah maxlen=1
[05:18:21] <jinsun> so it will not blow up
[05:18:30] <jinsun> dunno why I didn't notice that
[05:18:39] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[05:19:13] <jinsun> `*_, last = iterable` would also work
[05:20:13] <jinsun> but that will be similar to the list way
[05:21:29] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[05:21:46] *** Quits: amogorkon (~amogorkon@port-83-236-11-55.dynamic.as20676.net) (Ping timeout: 260 seconds)
[05:21:46] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[05:21:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:24:17] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[05:25:45] *** Joins: oriba (~oriba@dynamic-077-011-083-121.77.11.pool.telefonica.de)
[05:26:03] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[05:26:36] *** Joins: pycurious (~Adium@user/pycurious)
[05:27:53] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[05:28:19] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[05:28:27] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:28:48] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[05:29:42] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[05:29:54] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Remote host closed the connection)
[05:31:48] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[05:32:02] *** Quits: oz4ga (~tim@93.90.4.233) (Ping timeout: 260 seconds)
[05:32:42] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[05:32:49] *** Quits: flokuehn (~flokuehn@87.123.247.95) (Ping timeout: 256 seconds)
[05:33:06] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[05:34:14] *** Quits: frost (~frost@user/frost) (Ping timeout: 268 seconds)
[05:34:43] *** Joins: flokuehn (~flokuehn@87.123.247.55)
[05:35:58] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:36:23] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 264 seconds)
[05:37:07] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[05:37:50] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[05:39:10] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 268 seconds)
[05:40:11] *** bloodninja123 is now known as bloodninja
[05:41:03] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Client Quit)
[05:41:25] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[05:42:59] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:44:11] *** Quits: oriba (~oriba@dynamic-077-011-083-121.77.11.pool.telefonica.de) (Ping timeout: 264 seconds)
[05:45:10] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:edbd:587a:83cb:1c2) (Remote host closed the connection)
[05:45:58] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:48:47] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[05:49:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:49:42] *** Joins: galroth (~galroth@075-132-065-033.res.spectrum.com)
[05:49:59] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[05:52:03] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:53:27] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[05:54:27] *** Joins: Samian (~s@user/samian)
[05:54:54] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 260 seconds)
[05:55:15] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:55:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[05:57:23] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:58:19] *** Joins: binary01 (~binary01@192.110.171.216)
[06:03:02] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) ()
[06:08:09] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[06:08:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:09:05] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:11:12] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[06:12:10] *** tdsmith_ is now known as tdsmith
[06:12:17] *** Quits: jpds1 (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[06:12:42] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[06:14:45] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[06:15:44] *** Quits: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[06:16:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:16:22] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:17:10] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:17:30] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[06:18:05] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67) (Quit: Client closed)
[06:21:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[06:21:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[06:24:46] *** Quits: thorbw (~tw@46.230.138.219) (Ping timeout: 260 seconds)
[06:25:10] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:25:39] *** Joins: brabrax (~brabrax@user/brabrax)
[06:25:58] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:29:45] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d) (Ping timeout: 268 seconds)
[06:30:41] *** Joins: RiFo (~RiFo@user/rifo)
[06:32:01] *** Quits: galroth (~galroth@075-132-065-033.res.spectrum.com) (Quit: WeeChat 3.3)
[06:32:06] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d)
[06:33:30] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:37:47] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:39:14] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[06:40:10] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 260 seconds)
[06:41:19] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[06:42:42] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[06:45:09] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:45:18] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:46:15] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Remote host closed the connection)
[06:46:35] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[06:50:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:51:31] <amosbird> Hello! What's the recommended way to parallelize a for loop currently?
[06:51:44] <amosbird> nowdays
[06:53:35] *** Joins: djapo (~archangel@user/djapo)
[06:55:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[06:58:08] *** Joins: frost (~frost@user/frost)
[07:01:55] *** Joins: bluap (~bluap@cpc156931-stav19-2-0-cust147.17-3.cable.virginm.net)
[07:05:15] *** Joins: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net)
[07:05:32] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-a84d-5e37-b6bd-99de.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:05:38] <twb> Should I be able to do this?  "zip /usr/lib/python39.zip /usr/lib/python3.9; rm -rf /usr/lib/python3.9; python3" ?
[07:06:10] <twb> When I try it, I can see '/usr/lib/python39.zip' is in sys.path, but it fails straight away with ModuleNotFoundError: No module named 'encodings'
[07:07:54] *** Quits: rando25892 (~user@user/rando25892) (Quit: changing servers)
[07:09:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:09:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:09:30] *** finn_elija is now known as FinnElija
[07:12:54] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (Quit: leaving)
[07:14:24] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[07:14:58] *** Joins: Somni (~insomnia@77-88-237-24.gci.net)
[07:15:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:16:54] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[07:18:34] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[07:20:12] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:21:12] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[07:21:27] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[07:22:28] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[07:23:07] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[07:24:57] *** Quits: rickybob (uid410295@2a03:5180:f:1::6:42b7) (Quit: Connection closed for inactivity)
[07:26:06] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:26:23] <xcombelle> amosbird: you can use multiprocessing.Pool.map or multiprocessing.Pool.imap  but I don't know if it is nowdays enough
[07:26:43] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[07:29:38] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[07:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:17] *** Joins: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net)
[07:31:26] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[07:32:27] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[07:32:46] <jr_web_dev> what can i use to save a tiny bit of information and make it persist.. im guessing i can write to a file and read a file.. write a txt, open it up and read it.. but is there soemthing else better?  perhaps a library where i dont have to do all the opening and reading.. just one or two commands and viola
[07:33:30] <leduyquang753> It's not that hard to work with a file in Python though.
[07:34:24] <jr_web_dev> guess your right
[07:34:29] <jr_web_dev> now that i think of it
[07:35:46] <jr_web_dev> but arent there other options like sqlite.. im not too familiar with it.. i knows its like some kind of desktop database or something.  You think something like that would be cooler?
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:21] <jr_web_dev> or should i say more secure
[07:36:28] <leduyquang753> If you do something just because it's "cooler" you are probably doing it wrong.
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:43] <jr_web_dev> no your right leduyquang753 im just lacking vocabulary here
[07:36:58] <jr_web_dev> i just dont know whats the most approriate way of doing this
[07:37:02] <leduyquang753> SQLite is actually more complicated than a simple file.
[07:37:10] <jr_web_dev> right
[07:37:23] <jr_web_dev> i just want to persist data
[07:37:35] <jr_web_dev> something as simple as what was your last browser selection before you closed the program
[07:38:38] <jr_web_dev> if my application needed alot of persistant data then would using a RDBMS like mySql would be smart.. i know we use that with web applications
[07:39:31] <jr_web_dev> and not smart.. imean would it be standard thing to do
[07:40:03] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 268 seconds)
[07:40:35] <jr_web_dev> im trying to find what would suite best with python
[07:40:56] <jr_web_dev> and using a gui app like tkinter
[07:41:05] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[07:43:48] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[07:43:55] *** Joins: mcglk (~mcglk@131.191.49.120)
[07:45:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:45:32] *** Quits: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[07:46:09] *** Joins: pwnd_sfw0 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:47:17] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Read error: Connection reset by peer)
[07:47:34] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:47:34] *** pwnd_sfw0 is now known as pwnd_sfw
[07:47:35] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[07:48:08] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[07:48:29] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:48:53] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[07:49:21] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[07:49:27] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Client Quit)
[07:50:23] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[07:51:34] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[07:54:29] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[07:57:58] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:59:05] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[07:59:54] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[07:59:54] *** jmiehe1 is now known as jmiehe
[08:02:08] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[08:02:48] *** Joins: subho (~subho@49.37.52.71)
[08:03:20] *** Joins: jazzy2 (~jaziz@user/jaziz)
[08:05:04] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:05:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:11:40] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[08:13:26] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 260 seconds)
[08:13:35] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[08:15:20] *** Joins: subho (~subho@49.37.52.71)
[08:15:48] *** Quits: l4yer (~l4yer@159.48.55.8) (Ping timeout: 268 seconds)
[08:17:02] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:17:34] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[08:17:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:20:37] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[08:21:47] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[08:26:10] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:28:30] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:28:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[08:30:17] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[08:30:20] *** Quits: FurCoatStarlette (FurCoatSta@159.196.89.115) (Remote host closed the connection)
[08:30:59] *** Quits: bluap (~bluap@cpc156931-stav19-2-0-cust147.17-3.cable.virginm.net) (Quit: bluap)
[08:31:53] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[08:33:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[08:33:42] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[08:34:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[08:34:09] *** Joins: KombuchaKip (~kip@192.252.230.5)
[08:34:19] *** Joins: p-i- (~Ohmu@223.206.64.253)
[08:37:35] *** Quits: emf (~emf@2620:10d:c090:400::5:38d) (Ping timeout: 264 seconds)
[08:37:35] *** Joins: subho (~subho@49.37.52.71)
[08:39:04] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[08:40:55] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[08:40:55] *** Joins: emf (~emf@163.114.132.5)
[08:41:02] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[08:41:10] *** Joins: Milos (~Milos@user/milos)
[08:41:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:41:53] *** Quits: subho (~subho@49.37.52.71) (Client Quit)
[08:41:56] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[08:42:51] *** Joins: sazawal (~sazawal@2401:4900:51d3:d1f5:43f9:44a4:47de:b486)
[08:43:00] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:43:04] *** Quits: sazawal (~sazawal@2401:4900:51d3:d1f5:43f9:44a4:47de:b486) (Client Quit)
[08:43:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:44:39] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[08:45:24] *** Quits: emf (~emf@163.114.132.5) (Read error: Connection reset by peer)
[08:46:03] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[08:46:11] *** Joins: emf (~emf@2620:10d:c090:400::5:f801)
[08:47:32] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[08:48:19] *** Quits: DeaDSouL (~DeaDSouL@45.86.201.212) (Ping timeout: 256 seconds)
[08:48:26] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (Ping timeout: 245 seconds)
[08:48:51] *** Quits: rpittau (sid346891@id-346891.tinside.irccloud.com) (Ping timeout: 245 seconds)
[08:48:59] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[08:49:06] *** Quits: dez (uid92154@user/dez) (Ping timeout: 268 seconds)
[08:49:08] *** Quits: shurane (sid132556@id-132556.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:49:08] *** Quits: matthewwilkes (sid500242@id-500242.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[08:49:10] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 260 seconds)
[08:49:10] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 260 seconds)
[08:49:10] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 260 seconds)
[08:49:11] *** Quits: Sario (sid356235@miraheze/Sario528) (Ping timeout: 260 seconds)
[08:49:16] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 245 seconds)
[08:49:16] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[08:49:22] *** Quits: df_data (sid466269@id-466269.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[08:49:35] *** Quits: Majost (uid143251@id-143251.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[08:49:35] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[08:49:41] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (Ping timeout: 245 seconds)
[08:49:41] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 245 seconds)
[08:49:41] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 245 seconds)
[08:49:41] *** Quits: EWDurbin (sid38710@id-38710.tinside.irccloud.com) (Ping timeout: 245 seconds)
[08:49:43] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 268 seconds)
[08:49:43] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[08:49:44] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 268 seconds)
[08:49:44] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 268 seconds)
[08:49:45] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:49:45] *** Quits: sparc (sid160069@id-160069.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[08:49:51] *** Quits: flagrama (sid145621@id-145621.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:50:00] *** Joins: DeaDSouL (~DeaDSouL@45.130.136.28)
[08:50:04] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 260 seconds)
[08:50:04] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 260 seconds)
[08:50:04] *** Quits: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:04] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:04] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:50:06] *** Quits: jposer (sid132110@id-132110.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[08:50:18] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:50:18] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:50:20] *** Quits: curiosity (uid511277@user/cypris) (Ping timeout: 268 seconds)
[08:50:21] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[08:50:21] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[08:50:21] *** Quits: arch-geek (uid525804@id-525804.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[08:50:23] *** Quits: kmikita (uid461814@id-461814.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[08:50:32] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 260 seconds)
[08:50:32] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:47] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Ping timeout: 264 seconds)
[08:50:55] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:56] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 260 seconds)
[08:50:56] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 260 seconds)
[08:50:57] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Read error: Connection reset by peer)
[08:50:57] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 268 seconds)
[08:50:58] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 268 seconds)
[08:50:58] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[08:51:00] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: MrNaz (sid133418@id-133418.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 260 seconds)
[08:51:00] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[08:51:11] *** Joins: kmikita (sid499273@id-461814.helmsley.irccloud.com)
[08:51:11] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[08:51:12] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[08:51:15] *** Joins: drmessano_ (drmessano@user/drmessano)
[08:51:16] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[08:51:16] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[08:51:16] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[08:51:17] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[08:51:20] *** Joins: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com)
[08:51:25] *** Joins: Sario (sid356235@miraheze/Sario528)
[08:51:25] *** Joins: bjs (sid190364@user/bjs)
[08:51:28] *** Joins: curiosity (uid511277@user/cypris)
[08:51:29] *** Joins: Evolver (sid32215@user/evolver)
[08:51:40] *** Joins: debnet (sid330295@python/afpy/debnet)
[08:51:42] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[08:51:48] *** Joins: ormiret (sid314108@2a03:5180:f:2::4:cafc)
[08:51:50] *** Joins: Pent (sid313808@2a03:5180:f:2::4:c9d0)
[08:51:54] *** Joins: subho (~subho@49.37.52.71)
[08:51:58] *** Joins: adiKt (uid472628@2a03:5180:f::7:3634)
[08:51:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[08:52:02] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[08:52:02] *** Joins: circuitbone (sid355934@user/circuitbone)
[08:52:07] *** Joins: EWDurbin (sid38710@2a03:5180:f::9736)
[08:52:09] *** Joins: dohtem (uid524096@user/dohtem)
[08:52:10] *** Joins: shurane (sid132556@2a03:5180:f:1::2:5cc)
[08:52:10] *** Joins: fury (uid193779@2a03:5180:f:1::2:f4f3)
[08:52:13] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[08:52:13] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[08:52:13] *** Joins: matthewwilkes (sid500242@2a03:5180:f:5::7:a212)
[08:52:14] *** Joins: shawwwn (uid6132@2a03:5180:f:1::17f4)
[08:52:14] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[08:52:17] *** Joins: dez (uid92154@user/dez)
[08:52:19] *** Joins: whatsupdoc (uid509081@2a03:5180:f:4::7:c499)
[08:52:19] *** Joins: eichin (sid27120@2a03:5180:f::69f0)
[08:52:20] *** Joins: jposer (sid132110@2a03:5180:f:5::2:40e)
[08:52:20] *** Joins: MrNaz (sid133418@2a03:5180:f:5::2:92a)
[08:52:22] *** Joins: arch-geek (uid525804@2a03:5180:f:5::8:5ec)
[08:52:22] *** Joins: Pr0phet (sid505706@2a03:5180:f:4::7:b76a)
[08:52:23] *** Joins: flagrama (sid145621@2a03:5180:f:4::2:38d5)
[08:52:23] *** Joins: altendky (sid135382@2a03:5180:f:4::2:10d6)
[08:52:27] *** Joins: morgabra (sid500580@user/morgabra)
[08:52:27] *** Joins: BlueShark (sid10311@user/blueshark)
[08:52:28] *** Joins: NiKaN (sid385034@2a03:5180:f:1::5:e00a)
[08:52:28] *** Joins: pjlsergeant (sid143467@2a03:5180:f:4::2:306b)
[08:52:28] *** Joins: poiqwepoiqwe (uid525840@2a03:5180:f:4::8:610)
[08:52:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:52:31] *** Joins: rubin55 (sid175221@2a03:5180:f:4::2:ac75)
[08:52:35] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[08:52:49] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[08:54:14] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[08:54:18] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[08:54:19] *** Joins: sparc (sid160069@id-160069.uxbridge.irccloud.com)
[08:56:41] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[08:57:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[08:57:58] *** Joins: nicode (~nic@216.154.33.88)
[08:59:45] <nicode> Howdy, does anyone know if there's a way to read characters from a curses screen (python version of course)?
[08:59:52] *** Quits: noyb (~noyb@user/noyb) (Quit: leaving)
[09:00:12] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[09:00:40] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:01:18] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[09:01:24] <nicode> My alternative is to save an array or arrays and each time I draw a character to the screen I also store it in my array by its coordinates
[09:01:49] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[09:02:10] <nicode> or I suppose there's mapping in python where I can use (x, y) as a key and then the character as the value
[09:02:35] *** Quits: Hash (~stoned@hack.the.planet.with.hashsecurity.org) (Remote host closed the connection)
[09:02:54] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[09:02:57] *** Joins: subho (~subho@49.37.52.71)
[09:02:58] <Repiphany> https://docs.python.org/3/library/curses.html#curses.window.instr
[09:03:09] *** Joins: ano (~ano@user/ano)
[09:04:09] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:04:39] *** Joins: Hash (~stoned@hack.the.planet.with.hashsecurity.org)
[09:04:58] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:06:35] <nicode> Thanks Repiphany!
[09:11:33] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:12:12] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:12:58] *** Joins: analoq (~yashi@user/dies)
[09:15:37] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Read error: Connection reset by peer)
[09:17:22] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[09:17:31] *** Quits: adiKt (uid472628@2a03:5180:f::7:3634) (Quit: Connection closed for inactivity)
[09:18:52] *** Joins: Anom (~Anom@2804:d4b:803d:5d00:c3cb:4ddc:ef2:c6f3)
[09:22:24] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[09:24:11] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:28:05] *** Joins: djapo (~archangel@user/djapo)
[09:30:23] *** Quits: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net) (Ping timeout: 264 seconds)
[09:32:06] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[09:33:21] *** Quits: menace (~someone@user/menace) (Quit: menace)
[09:35:06] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[09:35:10] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[09:35:32] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[09:38:38] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[09:39:03] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 268 seconds)
[09:40:13] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:e431:530c:9ef4:168a) (Read error: Connection reset by peer)
[09:47:50] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:36] *** Joins: seednode4 (~seednode@user/seednode)
[09:51:08] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[09:53:58] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[09:55:43] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[09:56:06] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[09:59:03] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Client Quit)
[09:59:10] *** Joins: l4yer (~l4yer@159.48.55.10)
[09:59:26] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[10:02:43] *** Joins: ykska (~ykska@182.226.37.172)
[10:03:46] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:12:11] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 245 seconds)
[10:14:41] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 245 seconds)
[10:15:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[10:15:59] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:18:57] *** Joins: alzgh (~alzgh@user/alzgh)
[10:26:29] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:29:41] *** Joins: odix (~ok@65.141.163.206)
[10:31:28] *** Quits: eblip (~eb0t@90.202.254.138) (Ping timeout: 268 seconds)
[10:31:34] <odix> Hello friends : ) I have a very simple script im trying to get to print in a sentence, doing it my way. I'm having trouble saving a variable that is an eval(str) of itself to form the full sentence. I can loop the words correctly but not put them together. https://bpa.st/WX7A
[10:31:50] <odix> problem is in the sen line
[10:33:19] *** Joins: eblip (~eb0t@90.209.247.46)
[10:36:13] *** Joins: kosh (~kosh@user/kosh)
[10:36:46] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c9dc:bbab:aca1:5383)
[10:38:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:39:42] <odix> ahhh +=
[10:39:44] <odix> thanks
[10:42:15] <coc0nut> is python2 phased out now?
[10:42:22] *** Quits: gitly (~gitly@148.252.129.79) (Ping timeout: 260 seconds)
[10:42:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:42:59] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d) (Ping timeout: 264 seconds)
[10:43:01] <Mulugruntz> coc0nut yes
[10:44:06] *** Joins: gitly (~gitly@185.69.145.2)
[10:45:08] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:3497:b48f:d37d:f1b8)
[10:45:14] <Mulugruntz> Hi guys. I want to run tox (or any other way) to run pytest on 4 different envs (py 36 37 38 39). But they're not installed on my machine. So I want to run my tests on docker. I've installed tox-docker. It builds the images, runs the containers. But runs the tests on the host (not in the containers...). Anything I'm missing?
[10:46:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[10:47:25] <Mulugruntz> https://bpa.st/EDLQ
[10:48:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:54:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:56:28] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:58:29] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[10:59:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:59:22] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[11:01:45] <very_sneaky> Mulugruntz: doesn't address your problem, but another option is to use pyenv to manage multiple local interpreters. not necessarily better, but something to think about if docker isn't working for you
[11:02:11] <very_sneaky> the tox-pyenv package looks like it deals with this
[11:02:24] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Client Quit)
[11:03:19] <Mulugruntz> very_sneaky yeah, I know I could install several envs. I was trying to avoid that. Especially  when docker downloads and creates  the container in about 5-10 sec. And macOS removes the older envs everytime I run brew.
[11:03:53] <Mulugruntz> (somehow, it keeps the latest py2 and latest py3, and removes everything else)
[11:05:11] *** Quits: odix (~ok@65.141.163.206) ()
[11:06:49] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:09:10] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[11:09:52] <Mulugruntz> very_sneaky "The versions passed to pyenv local must be installed for this to work." :( I was about to give it a try. Then I saw this :-(
[11:09:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:13:34] *** Joins: upsala (~zcb@185.213.155.252)
[11:13:37] <very_sneaky> Mulugruntz: pyenv manages multiple interpreters separate from your system/brew - `pyenv install 3.6.9` will install that interpreter and allow you to switch to it
[11:14:41] <Mulugruntz> very_sneaky  yes. Apparently tox-pyenv is for CircleCI, right? I'm checking their docs to see if I can run jobs locally, without using their cloud
[11:15:47] <very_sneaky> ah, i hadn't looked that far into it. I use pyenv to manage a number of different interpreters and assumed there would be a solution to use tox to switch between them locally - tox-pyenv was the first solution i saw
[11:18:31] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[11:21:11] <very_sneaky> Mulugruntz: my read is that you just pass multiple versions to the `pyenv local` command as per https://github.com/pyenv/pyenv/blob/master/COMMANDS.md#pyenv-local-advanced, and then configure your `tox.ini` to have `envlist = py36,py37,py38` etc
[11:21:48] <very_sneaky> so to do it locally, just run the commands directly rather than providing them in a ci conf file
[11:22:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[11:22:17] <Mulugruntz> but the first file is `circle.yml`   https://pypi.org/project/tox-pyenv/
[11:22:49] <very_sneaky> yes, but if you look at what it's doing, it's just isntalling `tox` and `tox-pyenv`, and then running `pyenv local 2.7.9 3.4.3 3.5.0` in the project working directory
[11:23:09] <very_sneaky> if you do the same locally, it should still work for you
[11:23:26] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 245 seconds)
[11:23:50] <very_sneaky> you just have to manage your pyenv installation yourself rather than relying on what circleci has pre-installed
[11:27:45] <very_sneaky> Mulugruntz: does that make sense?
[11:28:36] *** Joins: jay-m1262 (~jay-m@154.72.163.165)
[11:28:46] *** Joins: jay-m1263 (~jay-m@154.72.163.165)
[11:29:46] *** Joins: cheater (~Username@user/cheater)
[11:31:23] *** Joins: manti7 (~manti7@176.10.104.94)
[11:32:23] <very_sneaky> Mulugruntz: for clarity: https://bpa.st/WAHA
[11:32:51] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:32:58] <very_sneaky> i'm not sure how this would integrate with a virtual environment though/whether it should. might require a bit more digging
[11:34:21] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[11:34:59] <Mulugruntz> very_sneaky hmmm I see, yeah.  But now, all of a sudden, I get a brew command (macOS) in my script. So it wouldn't run on other platforms (no longer universal)
[11:35:03] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:35:39] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[11:35:44] <Mulugruntz> I'll try something
[11:36:02] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[11:36:47] <very_sneaky> I assumed this was for local testing. There are equivalent commands for the common operating systems. on windows you can use pyenv-win, pyenv as it is works on linux too - would just have to use the relevant package manager
[11:36:58] <Mulugruntz> damn, so many deps https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[11:37:10] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[11:37:30] <very_sneaky> what are you trying to do here?
[11:37:46] <very_sneaky> is this targeting a CI or are you doing it locally?
[11:38:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:48] <Mulugruntz> it's a home assessment for job interview. I've done my whole stuff and now pimping it. I wanted to have a simple command to run tests on several py versions. And because I don't want them to run into troubles depending on their machine (I don't know what they're running), I'm trying to see my  options..
[11:39:49] <Mulugruntz> ah because of NDA, I'm pretty sure I cannot put it on the cloud
[11:39:55] <very_sneaky> docker is portable - you're still only targeting linux in that case though. Depending on the organisation, they also may have proxies or firewalls that may interfere with the download of docker images. I know I do at my work.
[11:40:20] <Mulugruntz> yes, that's why I was thinking of using docker.
[11:40:36] <Mulugruntz> Maybe tox was a bad idea
[11:40:44] <very_sneaky> if you just want to test it before shipping, doing this locally is prob your best bet
[11:40:45] <Mulugruntz> Maybe I'll need to create 4 `Dockerfile`
[11:40:51] <Mulugruntz> but that seems ugly
[11:40:54] <very_sneaky> you don't need them to run all of the tests on all of the python versions
[11:41:06] <very_sneaky> seems like you just want to get coverage to make sure whatever interpreter they _do_ have, it will work
[11:41:25] <Mulugruntz> I want to show that my  solution is backward compatible
[11:41:29] <very_sneaky> you won't be able to control their environment and specifically which python interpreters they have installed
[11:41:51] <very_sneaky> a statement in the readme listing compatible versions isn't sufficient?
[11:42:29] <Belxjander> Mulugruntz: so no chance of using "try:" and "except:" within your code for platform variance testing?
[11:43:27] <Mulugruntz> Well, if it  works on all 4 envs, no need for try except
[11:43:56] <Mulugruntz> very_sneaky saying it is one thing. Showing that I can prove it is another
[11:44:07] <Mulugruntz> https://github.com/docker/docker-py
[11:44:24] <Belxjander> Mulugruntz: on "AmigaOS" as a target there is an "amiga" module that can be import... but doesn't exist for other systems... is there equivalent modules you can "try:\n\timport modname\nexcept:\n\tmodname = None" with later "if modname is not None:" conditional usage?
[11:44:27] <Mulugruntz> >>> client.containers.run("ubuntu:latest", "...")
[11:44:34] <very_sneaky> I think you're going to have a hard time proving it if you can't use cloud or control their environment. You can say it and they can verify it? if you've tested it, that should work
[11:44:47] *** Quits: emf (~emf@2620:10d:c090:400::5:f801) (Ping timeout: 264 seconds)
[11:45:21] <very_sneaky> if you really want to you could include a dump of the tox output on your local machine
[11:47:06] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[11:47:09] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:47:31] <Mulugruntz> hmmm... it feels like there's something missing. Maybe later, when I have more time I'll create a module that does exactly  that (if it indeed doesn't exist) and push it to github
[11:47:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:47:52] <very_sneaky> does what?
[11:48:23] <Mulugruntz> run a command on N docker containers
[11:48:37] <Mulugruntz> and aggregate the results, and whatnot
[11:49:23] <Mulugruntz> Belxjander I understand what  you're saying. I think it's not what we're talking about though :)
[11:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:49:30] <very_sneaky> i mean, even in that case, you're making the assumption that whoever is running your code or tests has docker installed
[11:49:38] *** Joins: orange (~orangeext@user/orangeextract)
[11:49:45] <Mulugruntz> yes, we'll always need some prerequisites
[11:50:41] <Mulugruntz> but I think it's better to have one than to have many assumptions and having to run different  stuff depending on the platform / shell / etc...
[11:51:32] <Mulugruntz> because I could make a .sh, .zsh, .fish, .ksh, ... but seriously, that would start to be useless and unneeded.
[11:51:42] <Mulugruntz> .bat, .ps1  :-P
[11:51:54] *** Joins: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[11:52:30] <very_sneaky> I think the safest assumption would just be a python environment and not start introducing extraneous requirements
[11:52:36] <very_sneaky> i.e., all you have to do is run `tox`
[11:52:54] <Mulugruntz> yes, but tox does not install envs. It reuses the ones on the system
[11:53:15] <very_sneaky> sure, and i would say that's beyond your responsibility as the writer of the library
[11:53:16] <Mulugruntz> if the host  has none of them, nothing will be executed
[11:58:48] <very_sneaky> it looks like tox has the capability to specify which environment you want to run the tests in. This is how h5py manage it: https://docs.h5py.org/en/stable/contributing.html?highlight=tox#run-the-tests
[11:59:00] <very_sneaky> and a look at their tox.ini: https://github.com/h5py/h5py/blob/master/tox.ini
[11:59:14] *** Joins: mei3 (~mei@user/mei)
[12:00:30] <Mulugruntz> very_sneaky you're correct. However, these envs need to be installed *before* running `tox`. Not gonna run on Docker
[12:01:35] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[12:01:37] <very_sneaky> yes, i realise that. I think that's a better solution than using docker - not that they're mutually exclusive
[12:02:55] <very_sneaky> I would be annoyed if I wanted to run the tests on a library and had to install docker just to do it for a bunch of use cases i don't care about. it may make sense to do on a CI though
[12:04:38] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[12:05:41] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[12:06:08] *** Quits: Anom (~Anom@2804:d4b:803d:5d00:c3cb:4ddc:ef2:c6f3) (Ping timeout: 256 seconds)
[12:06:25] *** Joins: tobybl (~tobybl@213.31.135.91)
[12:08:06] <Mulugruntz> yes I agree about the CI stuff. Would make more sense. Can still run `poetry run pytest` on your local, no need for docker.
[12:08:57] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:09:02] *** greenbagels_ is now known as greenbagels
[12:09:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:11:57] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Quit: subho)
[12:13:01] *** Quits: jay-m1263 (~jay-m@154.72.163.165) (Ping timeout: 245 seconds)
[12:13:01] *** Quits: jay-m1262 (~jay-m@154.72.163.165) (Ping timeout: 245 seconds)
[12:14:23] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[12:15:09] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:46] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:18:00] <Mulugruntz> What I'm going for, right now:
[12:18:13] <Mulugruntz> In my Dockerfile
[12:18:14] <Mulugruntz> ARG PY_VERSION=latest
[12:18:14] <Mulugruntz> FROM python:${PY_VERSION}-alpine
[12:18:36] <Mulugruntz> then I can run : docker run -it $(docker build --build-arg PY_VERSION=3.9 -q .)
[12:18:51] <Mulugruntz> and I'll make a Makefile
[12:19:16] <Mulugruntz> to run all 4 versions
[12:19:30] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Quit: subho)
[12:20:04] *** Joins: jay-m1262 (~jay-m@129.0.204.211)
[12:20:13] *** Joins: jay-m1263 (~jay-m@129.0.204.211)
[12:21:24] <very_sneaky> the alternative to running 4 different docker containers might be to run 1 docker container with pyenv installed internally
[12:21:37] <Mulugruntz> true also
[12:22:14] <ChrisWarrick> I’d prefer a well-configured install from the official containers
[12:23:03] *** Joins: mokulus (~mokulus@user/mokulus)
[12:24:58] *** Joins: parv (~quass@user/parv)
[12:25:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[12:27:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[12:28:51] <Mulugruntz> ChrisWarrick of course, ideally, I'd use GitHub Actions or Bitbucket pipeline, etc...
[12:29:27] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[12:30:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:31:15] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[12:32:45] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:34:29] *** Joins: han-solo (~han-solo@user/han-solo)
[12:36:22] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Quit: subho)
[12:37:09] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[12:39:18] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.3)
[12:42:55] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[12:43:21] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[12:44:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[12:44:41] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[12:45:09] *** Joins: rendar (~rendar@user/rendar)
[12:45:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:45:57] *** Joins: frost (~frost@user/frost)
[12:46:09] *** Joins: rsx (~dummy@ppp-188-174-133-43.dynamic.mnet-online.de)
[12:46:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:46:40] *** Joins: palasso (~palasso@user/palasso)
[12:47:31] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[12:48:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[12:48:55] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:50:27] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[12:51:03] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[12:52:17] *** Joins: kindablue_ (znc@irc.tpurist.com)
[12:52:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[12:53:37] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:54:09] *** Joins: ravan (~ravan@user/ravan)
[12:54:14] *** Quits: kindablue (~kindablue@irc.tpurist.com) (Ping timeout: 268 seconds)
[12:54:27] *** Joins: binary01 (~binary01@192.110.171.216)
[12:55:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:56:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:57:42] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[12:59:44] *** Joins: vit (~vit@chello085216193138.chello.sk)
[13:00:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[13:01:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:03:22] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:03:27] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Quit: subho)
[13:03:56] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[13:04:23] *** Joins: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76)
[13:05:32] *** Joins: vlm (~vlm@user/vlm)
[13:06:35] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[13:13:01] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 245 seconds)
[13:14:58] *** Joins: debayer24 (~debayer@2603-8000-cf00-4c0a-5c44-4716-2944-a53c.res6.spectrum.com)
[13:15:39] *** Joins: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[13:16:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[13:17:20] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:17:29] *** Quits: jay-m1262 (~jay-m@129.0.204.211) (Ping timeout: 256 seconds)
[13:17:47] *** Quits: jay-m1263 (~jay-m@129.0.204.211) (Ping timeout: 264 seconds)
[13:18:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:19:42] *** Quits: DeaDSouL (~DeaDSouL@45.130.136.28) (Quit: leaving)
[13:19:56] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[13:20:23] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:21:22] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[13:22:36] *** Joins: spinningcat (~spinningC@about/web/muscles)
[13:22:52] *** Joins: ykska (~ykska@182.226.37.172)
[13:24:17] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[13:24:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:27:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f)
[13:27:38] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:29:09] *** Parts: emanuele6 (~emanuele6@user/emanuele6) (WeeChat 3.3)
[13:29:56] *** Quits: debayer24 (~debayer@2603-8000-cf00-4c0a-5c44-4716-2944-a53c.res6.spectrum.com) (Quit: debayer24)
[13:30:17] *** Quits: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[13:30:21] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[13:31:43] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[13:32:29] *** Joins: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[13:32:56] *** Quits: driib (~driib@185.65.135.238) (Quit: Ping timeout (120 seconds))
[13:33:05] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c9dc:bbab:aca1:5383) (Remote host closed the connection)
[13:33:51] *** Joins: driib (~driib@185.195.233.146)
[13:34:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[13:36:57] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:37:54] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:39:42] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:39:43] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:41:10] *** Joins: ravan_ (~ravan@user/ravan)
[13:42:26] *** Joins: hideaway (~hideaway@user/hideaway)
[13:43:30] *** Joins: computeiro (~Wender@189.37.68.75)
[13:45:06] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 245 seconds)
[13:45:37] *** Quits: hideaway (~hideaway@user/hideaway) (Quit: WeeChat 2.8)
[13:47:25] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52) (Read error: Connection reset by peer)
[13:47:33] *** Joins: p-i-_ (~Ohmu@223.206.64.253)
[13:48:01] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52)
[13:48:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:49:23] *** Joins: Swayze (~gryster@user/swayze)
[13:50:54] *** Quits: p-i- (~Ohmu@223.206.64.253) (Ping timeout: 260 seconds)
[13:51:16] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:51:40] *** Joins: TJ- (~root@user/tj-)
[13:52:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:52:46] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:53:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[13:54:21] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[13:55:33] *** Joins: spuz (~spuz@95.148.229.105)
[13:57:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:58:11] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:00:41] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[14:01:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f) (Quit: Leaving)
[14:04:24] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[14:05:32] *** Joins: darksun (~darksun@user/darksun)
[14:08:23] *** Quits: subho (~subho@2405:201:9001:a0fc:35c6:acea:5c67:cb76) (Quit: subho)
[14:08:37] *** Joins: frost (~frost@user/frost)
[14:09:49] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:09:58] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[14:10:23] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Client Quit)
[14:10:31] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:11:54] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:13:52] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52) (Read error: Connection reset by peer)
[14:14:09] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[14:14:30] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52)
[14:14:56] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:17:05] *** Quits: whatsupdoc (uid509081@2a03:5180:f:4::7:c499) (Quit: Connection closed for inactivity)
[14:17:19] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[14:19:49] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:22:27] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[14:24:16] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[14:28:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:29:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:33:22] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[14:34:52] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[14:35:30] *** Joins: Pickchea (~private@user/pickchea)
[14:36:11] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[14:36:35] *** Quits: Sario (sid356235@miraheze/Sario528) (Quit: Connection closed for inactivity)
[14:37:19] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:37:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:f453:84d1:9e20:fd44)
[14:39:05] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[14:41:00] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[14:43:09] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[14:43:26] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 245 seconds)
[14:43:41] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com)
[14:43:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:44:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[14:44:12] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[14:44:27] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[14:45:22] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[14:46:22] *** Quits: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[14:46:58] *** Joins: jug (~jug@user/jug)
[14:47:02] *** Joins: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[14:48:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[14:49:04] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[14:49:51] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[14:50:26] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[14:52:52] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[14:57:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:58:21] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[14:59:51] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:00:15] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[15:00:51] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:00:56] *** Quits: ykska (~ykska@182.226.37.172) (Ping timeout: 245 seconds)
[15:00:58] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:02:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:02:21] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:03:47] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:04:46] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:05:43] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:06:08] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:07:07] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:07:15] *** Joins: antisaint (~Guest95@161.97.211.215)
[15:07:17] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:07:34] <antisaint> Hey, I was a nest cam subscriber, but its become too expensive, and I have the resources to host locally, and with that, is there any predefined python libs or scripts to pull a live image from nest cams?
[15:08:15] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:08:25] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:09:22] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:10:13] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 268 seconds)
[15:10:51] *** Quits: debayer (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[15:10:53] <antisaint> seems like the api is being phased out?
[15:11:18] *** Joins: sharperguy (~sharpergu@88.130.220.29)
[15:12:40] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:14:25] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:15:13] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:16:05] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[15:17:38] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 260 seconds)
[15:17:59] *** Joins: Throgkt (~Throgkt@user/throgkt)
[15:18:58] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[15:20:20] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[15:20:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[15:20:47] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:f1f6:be76:8d28:3e52) (Read error: Connection reset by peer)
[15:21:01] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:25:37] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[15:29:08] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[15:29:11] *** Joins: yotsuba (~yotsuba@176.12.204.8)
[15:29:14] <[-_-]> Hello
[15:29:16] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[15:29:47] <[-_-]> sorry
[15:29:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:30:23] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:30:47] <[-_-]> http://0x0.st/-5BD.txt
[15:31:00] <[-_-]> How can I ignore one of the paws?
[15:31:23] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:32:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:32:45] <han-solo> `pqw1, _ = meow()` # ?
[15:33:07] <han-solo> s/pqw1/paw1/
[15:33:59] <han-solo> or `x = meow()[0]` # if you want, i guess
[15:34:37] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[15:34:54] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:35:13] <[-_-]> hmmm...
[15:35:26] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:35:27] *** Joins: cosimone (~user@93-47-229-157.ip115.fastwebnet.it)
[15:35:49] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:01] *** Joins: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4)
[15:38:01] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:38:22] <[-_-]> thanks han-solo
[15:40:04] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[15:40:24] *** Quits: p-i-_ (~Ohmu@223.206.64.253) (Remote host closed the connection)
[15:41:39] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[15:41:42] *** Joins: tobybl (~tobybl@213.31.135.91)
[15:43:07] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[15:43:11] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:43:40] *** Joins: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs)
[15:43:41] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[15:43:52] *** Joins: shokohsc89 (~shokohsc@161.88.195.77.rev.sfr.net)
[15:43:53] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[15:44:15] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 256 seconds)
[15:44:15] *** Quits: upsala (~zcb@185.213.155.252) (Ping timeout: 256 seconds)
[15:44:15] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 256 seconds)
[15:44:15] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 256 seconds)
[15:44:15] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 256 seconds)
[15:44:15] *** Quits: krisd (krisd@s0.mydevil.net) (Ping timeout: 256 seconds)
[15:44:15] *** shokohsc89 is now known as shokohsc8
[15:44:41] *** Joins: davor (~davor@user/davor)
[15:45:09] *** Joins: krisd (krisd@s0.mydevil.net)
[15:45:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:45:37] *** Joins: yotsuba-chan (~yotsuba@2a0d:6fc0:308:1600:1771:3b52:86bb:6218)
[15:45:42] *** Joins: upsala (~zcb@185.213.155.252)
[15:45:48] *** Joins: plastico (~plastico@neomutt/plastico)
[15:45:51] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[15:46:09] *** Joins: anddam (~anddam@user/anddam)
[15:46:38] *** Quits: yotsuba (~yotsuba@176.12.204.8) (Ping timeout: 260 seconds)
[15:49:21] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[15:51:03] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:52:15] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[15:53:11] *** Joins: cadmio (~cadmio@151.35.128.228)
[15:53:13] <cadmio> Hello
[15:53:22] <cadmio> Is there anyone familiar with GTK?
[15:54:24] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:55:01] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[15:56:51] <nedbat> cadmio: it works better here to ask your question directly. People don't often volunteer as experts, and sometimes non-experts can help.
[15:58:00] <cadmio> here https://paste.gnome.org/pwju4xvux#line-54 I don't know how to scroll down to the first occurence it should be the same in rust it's just a matter of functions
[15:58:08] <cadmio> *in python
[15:59:27] *** Joins: jess (~jess@libera/staff/jess)
[16:03:38] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:03:51] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 245 seconds)
[16:04:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:05:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:08:45] <nedbat> cadmio: and sometimes it doesn't work... :(  sorry
[16:09:10] <cadmio> np
[16:09:22] <supakeen> Probably doesn't help much that it isn't Python :)
[16:10:47] <supakeen> Anyways, it seems Gtk.TextView has a scroll_to_mark method?
[16:11:43] <cadmio> supakeen: yes but it's much the same I tried either ways
[16:12:05] <cadmio> all I've it's scrolling to the end of page instead of the 1st occurence of the searched word
[16:12:40] *** Joins: oriba (~oriba@x4dbf7373.dyn.telefonica.de)
[16:12:55] *** Joins: rickybob (uid410295@id-410295.helmsley.irccloud.com)
[16:14:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:14:23] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[16:16:02] <supakeen> My GTK is super rusty, but the TextView has a TextBuffer which has a get_iter_at_line which you can then set_mark and scroll_to_mark for that mark.
[16:16:36] <cadmio> yes but how do you set the mark to correspond to the 1st occurence?
[16:17:19] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:17:27] <supakeen> You get the content of the TextBuffer, find which line the first occurence is on and then do the above.
[16:17:55] <supakeen> And perhaps TextBuffer has a one-stop method for that.
[16:17:56] *** Quits: oriba (~oriba@x4dbf7373.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:18:21] *** Joins: oriba (~oriba@x4dbf7373.dyn.telefonica.de)
[16:18:51] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[16:18:53] <cadmio> It's the "find whic line the first occurence is" which I don't know how to do it
[16:20:25] *** Joins: Klinda (~superleag@user/klinda)
[16:20:32] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[16:20:57] <gloomy> Hey, I'm using a library that relies on numba for speeding up processing. It currently compiles for CPU. Is there a reasonable chance that I can easily modify it to use GPU instead (with performance benefits) or does that typically involve major rewrites of the logic?
[16:21:10] <supakeen> `for lineno, line in yourtextbuffer.serialize(...).splitlines(): if whatiwant in line: break; mark = yourtextbuffer.set_line_mark(lineno); yourtextbuffer.scroll_to_mark(mark)`
[16:21:14] <supakeen> Something akin to that probably.
[16:21:30] <supakeen> But like I said, it's been almost a decade since I touched GTK and especially pyGTK.
[16:21:46] <gloomy> (Have very little experience with numba and cuda so I don't want to spend hours figuring it out to come to the conclusion "it's way too complicated" :D )
[16:21:51] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:21:51] *** Joins: Core7357 (~FurCoatSt@45.133.6.54)
[16:21:52] *** Joins: oz4ga (~tim@93.90.4.233)
[16:22:06] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[16:24:05] <gloomy> (for reference, this is the code I'm hoping to speed up: https://github.com/VHRanger/CSRGraph/blob/master/csrgraph/random_walks.py specifically the function _node2vec_walks)
[16:24:59] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[16:31:56] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[16:33:18] *** Quits: Core7357 (~FurCoatSt@45.133.6.54) (Ping timeout: 260 seconds)
[16:33:48] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[16:34:03] *** Joins: binary01 (~binary01@192.110.171.216)
[16:34:25] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:37:13] *** Quits: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Remote host closed the connection)
[16:37:14] *** Joins: Auron (Auron956@user/auron)
[16:39:01] *** Quits: yotsuba-chan (~yotsuba@2a0d:6fc0:308:1600:1771:3b52:86bb:6218) (Ping timeout: 268 seconds)
[16:39:02] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[16:39:11] *** Quits: cadmio (~cadmio@151.35.128.228) (Quit: WeeChat 3.0)
[16:40:08] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[16:40:23] <kosh> gloomy, it looks like the cuda stuff takes a fair bit of work, in general if you want to make effective use of a gpu it is not that easy and making it fast is hard
[16:40:34] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (Quit: Leaving)
[16:40:35] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:40:39] <kosh> gloomy, and you need a large enough block of vectorized work to make it worth it to transmit it
[16:41:25] <kosh> gloomy, and it may be easier to use torch or tensorflow (they are not just for machine learning)
[16:41:35] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[16:41:40] <gloomy> Yeah, been reading since asking here and that seems to be the general consensus :-)
[16:42:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[16:42:06] <gloomy> Pity. And yes but that involves a full rewrite of the library, not exactly quick and easy :D
[16:42:09] *** Joins: subho (~subho@49.37.52.71)
[16:42:31] <kosh> can you make just that one function for torch/tensorflow?
[16:42:40] <kosh> admittadly performance is better if you can push more work over
[16:43:49] <nedbat> speaking of tensorflow, anyone want to help with this coverage.py bug? https://github.com/nedbat/coveragepy/issues/856
[16:43:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:44:52] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:44:53] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[16:47:13] <antisaint> side request, there used to be a AI app (alien in play store) they used to share the code, since stopped... it used a ngram predictor based off of Recurrent feed forward networks in pure python, no nltk or tf or keras, it was a slick lil code (100 lines or less..) that allowed you to edit the depth of the ngram which wasn't based off of words but
[16:47:14] <antisaint> rather character. Anybody familiar with this approach for generative models? If i recall Bag of words was involved as well....
[16:47:32] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[16:47:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f)
[16:49:16] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[16:51:23] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:52:03] *** Joins: jinsun (~quassel@user/jinsun)
[16:52:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[16:52:29] *** Quits: dld (~dld@2601:197:600:1210:4005:8d20:87b1:8dd5) (Ping timeout: 265 seconds)
[16:54:16] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[16:54:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:54:30] *** Joins: binary01 (~binary01@192.110.171.216)
[16:55:52] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Ping timeout: 260 seconds)
[16:59:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:59:34] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[17:00:45] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[17:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:04:35] *** Joins: gggp_ (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[17:06:02] *** Quits: gggp_ (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:06:26] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[17:06:40] *** Joins: gggp_ (~gggp@111-251-128-35.dynamic-ip.hinet.net)
[17:10:21] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[17:11:20] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:12:12] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:12:30] *** Joins: pycurious (~Adium@user/pycurious)
[17:13:31] <bjs> nedbat: that's funky
[17:13:35] *** Quits: gggp_ (~gggp@111-251-128-35.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[17:14:50] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[17:15:16] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:16:01] *** Joins: Elodin (~weechat@user/elodin)
[17:16:03] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[17:17:20] *** Quits: nicode (~nic@216.154.33.88) (Read error: No route to host)
[17:20:22] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[17:21:49] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[17:24:51] *** Joins: nyah (~nyah@94.6.71.219)
[17:25:56] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 245 seconds)
[17:28:23] *** Joins: sandb0y (~pirate@user/sandb0y)
[17:31:15] <grym> bjs: yeah, it says "tensorflow" :)
[17:31:40] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: next time guys)
[17:32:09] *** Quits: manuels (~manuel@80.211.205.88) (Quit: Ping timeout (120 seconds))
[17:32:17] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:33:00] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[17:35:36] *** Joins: manuels (~manuel@80.211.205.88)
[17:35:40] <queue[m]> i love bjs
[17:36:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:36:31] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[17:36:32] <queue[m]> i wish i could write a script to do them for me
[17:38:12] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[17:38:14] <nedbat> queue[m]: don't do that please
[17:41:18] <queue[m]> sorry, its just a really good nick to have all the time
[17:41:26] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[17:41:32] <queue[m]> im done
[17:41:53] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[17:42:15] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:42:51] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:43:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:43:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:43:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-41ea-e7b0-8e8f-bea4.res6.spectrum.com)
[17:44:08] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[17:44:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:44:44] <nedbat> thanks :)
[17:47:13] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[17:47:31] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[17:48:23] <grym> gloomy: low-level is pycuda; highlevel is "figure out how to make torch do it"
[17:48:55] <grym> gloomy: both lock you to nvidia GPUs, there are fewer reasonable openCL toolsets
[17:49:44] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[17:50:57] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:51:08] <antisaint> wish intel hd could partake in this cuda.. i cant seem to make it, tho paravirtualised gpu prolly not on par with a dedicated module. :P  anything to help some 8hr epoc times :/
[17:51:41] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[17:51:44] <queue[m]> cuda can be annoying with gpu passthrough
[17:51:51] <queue[m]> i have it working with docker containers but it wasnt ez
[17:51:54] <grym> antisaint: https://developer.nvidia.com/cuda-gpus  is the master list, and check compute level minimum requirements
[17:52:09] <grym> queue[m]: there are a few pitfalls, but we do it pretty fluently now
[17:52:45] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.3)
[17:53:20] <grym> antisaint: modern torch requires a compute capability of >=6, which rules out a lot of older cards
[17:56:01] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[17:56:34] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[17:57:42] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[17:58:54] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:59:10] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f) (Ping timeout: 268 seconds)
[17:59:18] *** Joins: nomic2 (~nomic@185.192.69.211)
[18:01:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:01:35] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 260 seconds)
[18:01:55] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[18:02:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:02:43] *** Quits: antisaint (~Guest95@161.97.211.215) (Quit: Client closed)
[18:03:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:03:07] *** Joins: jiffe (~jiffe@mail.nsab.us)
[18:04:17] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[18:05:02] *** nomic2 is now known as nomic
[18:06:12] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:06:46] *** Joins: erb_c137 (~erb_c137@user/erb-c137/x-4672984)
[18:06:58] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:d0c1:b0a2:c068:466a)
[18:07:26] *** Joins: soozie (~soozie@146.196.39.40)
[18:07:29] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[18:07:45] *** Quits: vishwin (~brioux@pool-108-36-200-79.phlapa.fios.verizon.net) (Quit: < debdrup> What is this /quit thing?)
[18:08:01] <soozie> Hey Everyone
[18:08:01] <soozie> I need help with a small problem. I'm using a third party package that contains a function that i want to use. But the function uses input from a directory but i have to pass the input from S3 which will be in form of binary.
[18:08:01] <soozie> Can I in some way intercept that particular line of code and let the whole function run in a normal way. The function uses other functions and variables mentioned in the package.
[18:08:04] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[18:08:13] <soozie> I looked into some monkey patching codes but only got solution where I can replace the whole function. But for me replacing whole function will be issue as I will have to manage multiple imports within the package.
[18:11:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:13:38] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:14:16] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 245 seconds)
[18:15:13] *** Quits: oriba (~oriba@x4dbf7373.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:15:54] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[18:16:30] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[18:16:36] *** Joins: mickey8 (~user@user/mickey)
[18:16:42] <mickey8> what could be causing this issue?
[18:16:43] <mickey8> ImportError: cannot import name 'TextBlob' from partially initialized module 'textblob' (most likely due to a circular import)
[18:16:56] <mickey8>  i swear the file is literlaly just the import
[18:19:03] <erb_c137> there is something about it on Stackoverflow
[18:20:47] <mickey8> ah. i can't name the file what i want. ew.
[18:20:51] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[18:21:31] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[18:21:50] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:22:11] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:23:37] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[18:23:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[18:23:47] *** Joins: orange (~orangeext@user/orangeextract)
[18:24:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:24:33] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:25:26] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:25:46] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[18:25:59] *** yotsuba-chan is now known as yotsuba
[18:26:33] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:26:56] *** Quits: parv (~quass@user/parv) (Quit: parv)
[18:27:51] *** Joins: hel0 (~hel0@user/redrum88)
[18:29:07] <rindolf> soozie: hi! you can resort to writing a source->source filter
[18:29:58] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 260 seconds)
[18:31:34] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:32:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[18:32:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:32:53] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: brb)
[18:34:08] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:34:14] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:d0c1:b0a2:c068:466a) (Remote host closed the connection)
[18:35:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[18:35:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:36:49] <nedbat> soozie: can you share details of what function in what library you need to change?
[18:37:36] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[18:38:19] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[18:38:39] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:8156:f1db:b01:ac73)
[18:40:29] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 268 seconds)
[18:40:38] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 260 seconds)
[18:41:00] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[18:41:40] *** Joins: enyc (~enyc@user/enyc)
[18:43:16] *** Joins: janemba (~janemba@185.107.80.152)
[18:43:50] *** nosoul is now known as flea
[18:43:57] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:44:17] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:46:07] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:46:35] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:46:41] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[18:46:52] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:47:22] *** Joins: shla (~root@user/shla)
[18:47:36] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[18:47:43] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.2)
[18:48:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:48:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:49:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:49:20] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[18:50:16] *** Joins: sedeki (~textual@user/sedeki)
[18:51:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:53:19] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:54:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:55:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[18:55:43] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:55:56] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:56:17] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[18:58:26] *** Joins: dohtem (uid524096@user/dohtem)
[18:58:38] <soozie> nedbat: load_predictor from https://github.com/amaiya/ktrain/blob/master/ktrain/core.py
[18:58:40] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[18:58:59] *** Joins: binary01 (~binary01@192.110.171.216)
[18:59:50] *** Joins: greedom (~greedom@x59cc99b1.dyn.telefonica.de)
[19:00:19] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[19:01:26] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[19:01:40] *** Joins: binary01 (~binary01@192.110.171.216)
[19:01:48] <han-solo> perhaps you could download the file from s3 to a tempdir and give this func that filename ?...
[19:03:00] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[19:03:05] <Pi-sistance> can I start a line with for i in list1 and for j in list 2:
[19:03:32] <Pi-sistance> or am I not able to specify both in one command?
[19:04:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:04:56] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.2)
[19:05:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:05:38] <han-solo> Pi-sistance: you want to shorten `for i in list1:..for j in list2:..` as one line ?
[19:06:12] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:06:21] <Pi-sistance> yeah am I able to do that? I need to use elements in both the lists
[19:06:26] <han-solo> `itertools.product(list1, list2)` # maybe
[19:06:28] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:06:52] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:07:42] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[19:07:44] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[19:07:59] *** Joins: nomic (~nomic@185.192.69.211)
[19:09:56] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[19:10:30] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[19:10:33] *** Joins: Naan (~naan@user/naan)
[19:10:41] <han-solo> Pi-sistance: or maybe i'm confused
[19:10:47] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:10:52] <han-solo> you want the items from each list at the same time ?
[19:11:30] *** Joins: complexnumber (~brett@194-223-26-191.tpgi.com.au)
[19:12:03] <han-solo> l1 = [1,2,3]; l2 = [4,5,6]; and you want `(1,4),(2,4)..` or `(1,4), (1,5)..` # ?
[19:12:26] <han-solo> `(1,4),(2,5)...`* the first one
[19:12:35] *** Joins: Sario (uid356235@miraheze/Sario528)
[19:12:53] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[19:13:07] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[19:14:27] <Pi-sistance> han-solo: I want to add to a new list. I dont know how to do it. Was thinking for I in list 3, for j in list 2, for k in list 1: i+j+k
[19:14:56] <Pi-sistance> list 3 is the empty list filled with 0 of length list 1 and list 2
[19:15:52] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:16:13] <han-solo> are those nested ?
[19:17:18] <Pi-sistance> nope, I guess I have to, it can't cnsider more than 1 loop at once then
[19:17:38] <Pi-sistance> I assumed so, but was never explicitly told'
[19:19:16] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[19:20:42] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:21:23] *** Joins: bluap (~bluap@cpc156931-stav19-2-0-cust147.17-3.cable.virginm.net)
[19:22:05] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[19:22:46] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[19:23:24] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[19:23:34] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[19:24:10] *** Joins: Guest88 (~Guest88@dyx0pyyycs461628mb4-t-3.rev.dnainternet.fi)
[19:24:31] <Guest88> is there a cool way to do number 4s multiplication table? I tried (print("4 multiplied by {num} is {ans}") for num in num1 if ans = 4*num)
[19:24:38] <Guest88> but i am doing something wrong
[19:24:47] *** Joins: Trieste (T@user/pilgrim)
[19:24:48] <Guest88> I think: if - thing doesnt work
[19:24:50] <Pi-sistance> I cant figure out how to do it only taught the very basics, we havnt started functions yet even.
[19:24:54] <Guest88> because i dont have any clause
[19:25:15] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 256 seconds)
[19:25:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[19:25:59] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:26:19] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:26:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:26:25] *** Quits: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4) (Read error: Connection reset by peer)
[19:26:48] *** Joins: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4)
[19:26:57] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[19:27:20] *** Joins: monkey_ (~user@190.104.116.153)
[19:27:21] <han-solo> Guest88: not sure if it's cool but `print(*(f'{i} * 4 = {i*4}' for i in range(1,11)), sep='\n')`
[19:27:22] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 260 seconds)
[19:29:14] <Guest88> ye got it with: [print(f"4 multiplied by {num} is {4*num}") for num in range(0,11)]
[19:29:54] <Guest88> han-solo what does print(* do ?
[19:29:58] <Guest88> the star
[19:30:17] <han-solo> well, you don't need to print inside the list comprehension, you only need to print once, after collecting the results
[19:30:36] <han-solo> iterable unpacking ?
[19:30:40] <Guest88> ah ye
[19:31:00] <Guest88> is there any difference print list by unpacking or inside the list?
[19:31:09] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[19:31:09] <Guest88> speed wise
[19:31:10] *** Joins: vats (~vats@180.149.226.109)
[19:31:13] <Guest88> just curious
[19:31:23] <han-solo> speed wise, i don't know, memorywise maybe
[19:31:32] <han-solo> like imagine if you have a large list
[19:32:00] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:32:09] <Guest88> your way is faster with unpacking?
[19:32:09] <han-solo> well, the one i had also unpacks into something, so that's not great either
[19:32:16] <Guest88> ye
[19:33:25] <han-solo> maybe `for text in (f'{i} * 4 = {i*4}' for i in range(start, stop)):..print(text)` would be efficient though, memory wise
[19:33:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:13] <Guest88> for big numbers that would get slow with due to double for loop right?
[19:34:27] <Guest88> o(n^2)
[19:34:47] <han-solo> doube loop ?
[19:35:05] <han-solo> doublt*
[19:35:06] <Guest88> i guess not, i was just thinking u do for loop once then another time
[19:35:16] <han-solo> double* argh
[19:36:24] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[19:36:52] <han-solo> the point i was going for was, list comprehension vs generator expression(generator comprehension?)
[19:38:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:39:26] *** Quits: soozie (~soozie@146.196.39.40) (Ping timeout: 260 seconds)
[19:41:15] *** Joins: Akuli (~Akuli@82-203-166-207.bb.dnainternet.fi)
[19:41:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:42:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[19:42:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:44:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:44:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:45:31] *** Joins: soozie (~soozie@146.196.39.40)
[19:45:35] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[19:45:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:46:10] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[19:46:21] <soozie> han-solo: not sure its possible to store it in a temp dir. We have to deploy in a docker. And want to load that function in memory, so that whenever the api hits it doesn't load evertime
[19:47:02] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:48:54] *** Joins: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com)
[19:49:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:49:46] *** Quits: vats (~vats@180.149.226.109) (Ping timeout: 260 seconds)
[19:49:58] *** Parts: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com) ()
[19:50:12] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[19:50:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com)
[19:50:54] <erb_c137> can you unpack a range_iterator with "*" ?
[19:51:02] <erb_c137> or there are other ways to do that?
[19:51:21] <nedbat> erb_c137: you want something like:   x = [99, 98, *range(10)]    ?
[19:51:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[19:51:43] <nedbat> (which works, btw)
[19:51:58] <erb_c137> I was trying to unpack print(*reversed(range(100,1)))
[19:52:10] <erb_c137> oh wait
[19:52:16] <erb_c137> print(*reversed(range(1,100)))
[19:52:48] <nedbat> erb_c137: or: print(*range(100,1,-1))
[19:52:59] <erb_c137> my bad, it works :)
[19:53:05] <nedbat> (mine is different by 1)
[19:53:09] <erb_c137> thanks for your help :)
[19:54:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[19:56:39] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[19:57:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[19:58:30] *** Joins: goldfish (~goldfish@user/goldfish)
[19:59:20] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[20:00:25] <han-solo> soozie: Yeah, i said tempdir because the `load_predictor` seems to take a filepath and i was assuming you didn't want to update the implementation of that function
[20:01:35] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 264 seconds)
[20:02:02] <soozie> han-solo: yeah don't want to change the whole implementation. Just the portion that takes in filepath. Instead i can pass the binaries from the filepath
[20:02:20] <han-solo> oh, Okay
[20:02:37] *** Quits: Guest88 (~Guest88@dyx0pyyycs461628mb4-t-3.rev.dnainternet.fi) (Quit: Client closed)
[20:06:32] *** Joins: Rockwood (~Rocky@user/rocky)
[20:06:35] <Rockwood> hi
[20:07:50] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:07:59] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:10:56] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[20:11:08] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[20:11:10] *** Joins: binary01 (~binary01@192.110.171.216)
[20:11:49] <Pi-sistance> oh-ho I can use i as the list element designation! Yeah dafuq am I going to know that without being told, best make a revision note for it.
[20:12:47] <Rockwood> how to run loop in python
[20:12:49] <Rockwood> ?
[20:12:56] <Rockwood> like PHP foreach
[20:13:18] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:13:49] <han-solo> bit.ly/pyiter
[20:14:19] <han-solo> `for item in items:..` # where `items` is an iterable
[20:14:41] *** Quits: rsx (~dummy@ppp-188-174-133-43.dynamic.mnet-online.de) (Quit: rsx)
[20:14:46] <Rockwood> https://www.w3schools.com/python/trypython.asp?filename=demo_for_break2
[20:15:12] <Rockwood> this is === not valid in pythin?
[20:15:15] <Rockwood> python
[20:15:22] <han-solo> no, that's js i guess ?
[20:15:30] <Rockwood> in PHP too
[20:15:36] <han-solo> oh, Okay
[20:15:57] <Rockwood> i wanna match type and value together
[20:16:08] <Rockwood> == is enough?
[20:16:12] <han-solo> python is already strongly typed. So == is enough
[20:16:47] <Rockwood> anything like isset in python?
[20:17:02] <han-solo> what does isset do ?
[20:17:28] <Rockwood> https://www.php.net/manual/en/function.isset.php
[20:17:36] <mefistofeles> I guess x is None
[20:17:48] <mefistofeles> but different
[20:17:50] <mefistofeles> nvm
[20:17:54] <Rockwood> means?
[20:18:23] <Rockwood> i am confuse now totally :(
[20:18:31] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[20:18:53] <Swayze> if 'myVar' in locals():
[20:18:57] <Swayze> if 'myVar' in globals():
[20:19:15] <Rockwood> globals does what?
[20:19:48] <Swayze> checks if the variable exists in the local scope, or the global scope
[20:19:53] <Rockwood> local means local script and global means belongs to entire project
[20:21:21] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[20:21:34] <han-solo> no, they are different scopes
[20:21:43] <jinsun> instead of doing all those checks it is better to try except in python
[20:21:55] <Swayze> yeah you can use exception handling
[20:22:09] <Swayze> except NameError: (After your try block)
[20:22:13] <han-solo> also, there's no undefined in python, you usually know if the thing you want to use already exists
[20:22:20] <Rockwood> python having any formal documentation?
[20:22:32] <Swayze> err
[20:22:38] <jinsun> https://docs.python.org/3/
[20:22:42] *** Joins: bloody (~bloody@user/bloody)
[20:22:50] <jinsun> it became "official" recently :D
[20:22:54] *** Quits: gitly (~gitly@185.69.145.2) (Ping timeout: 260 seconds)
[20:23:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[20:23:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 260 seconds)
[20:24:36] *** Joins: gitly (~gitly@85.255.233.228)
[20:24:42] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:24:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:25:46] *** Joins: zaquest (~notzaques@5.128.210.178)
[20:27:36] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 245 seconds)
[20:28:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:29:59] <nedbat> Rockwood: what do you mean by formal?
[20:30:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[20:31:26] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[20:34:39] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:35:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[20:36:53] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:37:35] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 264 seconds)
[20:37:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:38:22] *** Joins: jazzy2 (~jaziz@user/jaziz)
[20:40:31] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:40:52] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[20:40:56] *** Joins: luva3 (~luva@45.141.152.62)
[20:41:17] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Read error: Connection reset by peer)
[20:41:22] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 268 seconds)
[20:41:22] *** luva3 is now known as luva
[20:41:45] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:42:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:42:34] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[20:42:37] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[20:42:50] *** Quits: jazzy2 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[20:43:14] *** Joins: jazzy2 (~jaziz@user/jaziz)
[20:43:41] *** Joins: jay-m1263 (~jay-m@154.72.160.180)
[20:43:44] *** Joins: jay-m1262 (~jay-m@154.72.160.180)
[20:43:55] *** Joins: DrBrownBear (~DrBrownbe@70.224.22.2)
[20:43:56] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[20:44:15] *** Quits: DrBrownBear (~DrBrownbe@70.224.22.2) (Client Quit)
[20:45:08] *** Joins: ano (~ano@user/ano)
[20:45:43] *** Joins: jazzy3 (~jaziz@user/jaziz)
[20:48:46] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[20:48:47] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[20:49:11] *** Joins: jazzy3 (~jaziz@user/jaziz)
[20:49:16] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[20:49:16] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 245 seconds)
[20:49:53] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:50:49] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:51:33] *** Joins: ano (~ano@user/ano)
[20:53:48] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:53:51] *** Quits: jay-m1263 (~jay-m@154.72.160.180) (Ping timeout: 245 seconds)
[20:54:16] *** Quits: jay-m1262 (~jay-m@154.72.160.180) (Ping timeout: 245 seconds)
[20:54:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[20:56:08] *** Joins: jay-m1262 (~jay-m@129.0.204.217)
[20:56:12] *** Joins: jay-m1263 (~jay-m@129.0.204.217)
[20:56:50] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[20:57:16] *** Joins: jazzy3 (~jaziz@user/jaziz)
[20:58:44] *** Quits: soozie (~soozie@146.196.39.40) (Read error: Connection reset by peer)
[20:59:35] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[21:01:48] *** Joins: aphysically (~aphysical@user/aphysically)
[21:01:48] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:02:20] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[21:02:44] *** Joins: jazzy3 (~jaziz@user/jaziz)
[21:03:15] *** Quits: rsrx (~rsrx@178-222-105-178.dynamic.isp.telekom.rs) (Quit: Leaving)
[21:03:28] *** Joins: soozie (~soozie@146.196.39.40)
[21:05:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:06:45] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[21:06:51] *** Joins: jazzy2 (~jaziz@user/jaziz)
[21:07:21] *** Quits: soozie (~soozie@146.196.39.40) (Read error: Connection reset by peer)
[21:07:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[21:08:19] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[21:08:33] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c9dc:bbab:aca1:5383)
[21:09:11] *** Joins: ravan__ (~ravan@user/ravan)
[21:09:35] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:10:06] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[21:10:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:11:54] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 260 seconds)
[21:12:27] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:12:28] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[21:12:32] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[21:13:36] *** Joins: Pickchea (~private@user/pickchea)
[21:16:39] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:16:58] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[21:20:09] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[21:20:25] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:21:11] *** Quits: Sario (uid356235@miraheze/Sario528) (Quit: Connection closed for inactivity)
[21:21:24] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:28:57] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[21:31:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:32:30] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:40a:9f91:8f3e:4f02)
[21:32:34] *** Quits: ravan__ (~ravan@user/ravan) (Quit: Leaving)
[21:33:09] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:35:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:f453:84d1:9e20:fd44) (Ping timeout: 245 seconds)
[21:35:40] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[21:35:57] <energizer> how much would you say that language decisions were made by guido versus a distributed group of decision-makers after, say, 2.0?
[21:36:16] *** Joins: menace (~someone@user/menace)
[21:36:27] *** Quits: jess (~jess@libera/staff/jess) ()
[21:37:23] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:37:56] <energizer> (cc nedbat and others who've been around a while)
[21:38:46] *** Quits: gitly (~gitly@85.255.233.228) (Quit: WeeChat 3.3)
[21:38:53] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:39:39] <Klinda> is there a faster way to do this with numpy? https://dpaste.org/pEsR
[21:40:03] *** Parts: Rockwood_ (~Rocky@user/rocky) (I am coming back in few)
[21:40:47] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[21:41:28] *** Joins: Narrat (~omnius@p5dcc6c76.dip0.t-ipconnect.de)
[21:41:49] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[21:43:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:43:39] *** Joins: gitly (~gitly@85.255.233.228)
[21:43:44] *** Joins: elgraz (~elgraz@151.65.9.160)
[21:43:53] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[21:44:11] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:44:21] *** Joins: ravan (~ravan@user/ravan)
[21:44:35] <hexology> Klinda: is X a 2-d numpy array? wouldn't `X[i_document]` just be `document`?
[21:44:47] *** Joins: Inline (~Inline@2a02:908:1252:7a80:da94:668f:b78c:97b1)
[21:44:51] <hexology> before i try to rewrite your code, i want to understand the intended logic first
[21:46:10] <Klinda> N_yi = np.zeros((n_classes, n_features)) # feature count     N_y = np.zeros((n_classes)) # total count
[21:46:28] <Klinda> y is a 1d vector
[21:46:43] <hexology> and y contains class numbers? 0..n_classes?
[21:46:54] <Klinda> yes
[21:47:01] <Klinda> but
[21:47:09] <Klinda> you have the labels in the samples ahaha
[21:47:15] <hexology> what do you mean by that
[21:47:17] <Klinda> I mean you have a feature vectore with y attachte
[21:47:27] <hexology> this is easier if you provide example data
[21:47:58] <hexology> that way i can just look at the data you gave, much faster to "show" than to "tell", for something like this
[21:48:07] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[21:48:48] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[21:49:33] <Klinda> hexology: https://dpaste.org/
[21:50:30] *** Joins: soozie (~soozie@146.196.39.40)
[21:50:50] *** Quits: soozie (~soozie@146.196.39.40) (Client Quit)
[21:51:03] <han-solo> Klinda: the link was not complete, maybe ':)
[21:51:06] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[21:51:26] <Klinda> yes ahah
[21:51:27] <Klinda> sorry
[21:52:03] <hexology> so X is what, a list of feature id's for each document?
[21:52:04] <Klinda> https://dpaste.org/o5vT
[21:52:13] <hexology> ok i see, thanks
[21:53:17] <Klinda> y[0] is attached to X[0]
[21:53:23] <Klinda> and so on..
[21:53:25] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[21:53:46] <hexology> yes, that makes sense
[21:53:50] <hexology> thanks for the example data
[21:54:56] <hexology> oh, so X is the _count_ of features in each document?
[21:55:16] <hexology> so if there are 3 features total, the first document might be [3, 0, 2] and the second document might be [1, 1, 0]
[21:55:31] <Klinda> yes
[21:55:46] <Klinda> in that case there are 7
[21:56:14] <peteyboy1> I'm trying to make a GET request in my Django REST framework application, and I get `detail": "Authentication credentials were not provided.`. This is supposed to be request for registering form and I'm using SessionAuthentication instead of tokens. How do I solve it?
[21:57:22] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:58:15] <Klinda> is possibile to make this algo in a faster way?
[21:59:04] *** Joins: ano (~ano@user/ano)
[21:59:49] *** Quits: greedom (~greedom@x59cc99b1.dyn.telefonica.de) (Remote host closed the connection)
[22:01:53] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[22:01:57] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:02:14] <hexology> Klinda: it's not fully vectorized (still looping over rows), but here is a starting point that doesn't involve so much unnecessary indexing: https://bpa.st/V6IA
[22:02:45] <hexology> there's probably some efficient idiomatic way to do this that my slow brain is forgetting
[22:03:30] *** Joins: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com)
[22:03:37] *** Joins: glazed (~glazed@2603-8001-6902-f659-f84f-0178-3e06-897e.res6.spectrum.com)
[22:04:31] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[22:05:17] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:07:05] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 268 seconds)
[22:08:14] <glazed> hi all - i'm trying to scrape some tabular data from a site. the data isn't perfect so sometimes the code fails. I'm using lxml and xpath to fetch the data I care about. For any given column in a row, I want it to return None if the parse fails. I figure I could wrap each attribute check in a try/except, but is there a non-boilerplate way to write
[22:08:14] <glazed> this? Here's an example of the scraping code I have: https://bpa.st/7F4A
[22:10:12] *** Joins: alkino (~quassel@user/alkino)
[22:10:32] <hexnewbie> glazed: What fails, with what error?
[22:10:59] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:11:44] <hexnewbie> glazed: for element in industry_col.xpath('.//span'): industry = element.text.strip(); break
[22:11:45] *** Joins: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:11:51] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[22:12:22] <hexnewbie> You can also provide the for with an: else: industry = None
[22:12:59] <glazed> hexnewbie: thanks, yeah I'm getting an IndexError when there aren't any "span" tags inside (presumably b/c the data in that row's column is empty)
[22:13:12] <hexology> Klinda: if you just need this to "go fast", you can probably write it with numba and not worry about finding an elegant numpy-oriented solution. you can also use pandas and solve this with groupby + sum
[22:13:58] <hexnewbie> glazed: Yeah, this would avoid the IndexError: https://bpa.st/AMVQ
[22:14:11] *** Joins: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca)
[22:15:01] <Klinda> I see hexology, thanks
[22:15:06] <Klinda> I will think about a solution
[22:15:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:16:00] <hexology> Klinda: https://stackoverflow.com/q/69866909/2954547
[22:16:13] <glazed> hexnewbie: that did the trick, thank you!
[22:16:25] <hexology> personally i would do it with pandas. then you get row and column labels and a bunch of other niceties
[22:16:37] *** Joins: newpy (~newpy@206.168.231.90)
[22:17:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:17:37] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[22:17:47] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Ping timeout: 264 seconds)
[22:18:13] *** Joins: NeoCore (~neocore@37.120.204.164)
[22:19:01] <p-i-> I have a set of points [[t0, y0], [t1, y1], ..] and I'm trying to plot a sliding-window sum (window width = 0.2s). But t_i are not linearly spaced.
[22:19:06] <p-i-> What's a good way to do this?
[22:19:12] <p-i-> numpy? pandas? scikit?
[22:19:40] <Klinda> hexology: oh you have opened a stackoverflow question for me *-*
[22:19:42] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[22:19:49] <hexology> Klinda: i was curious myself
[22:20:03] <hexology> i recall having an elegant solution for this in the past
[22:20:22] <Klinda> what about the Ny solution?
[22:20:28] <newpy> p-i-, maybe create a new numpy array A with numpy.linspace, and then set the t_i values to y_i?
[22:20:34] <hexology> p-i-: pandas .resample() computes sliding time windows, regardless of the actual spacing of the points
[22:20:42] <newpy> oh, or that
[22:21:09] <p-i-> hexology: wow
[22:21:28] <hexology> pandas has accumulated a lot of nice time series functionality
[22:21:44] <hexology> you can even define custom window types if you want (although it's tricky and under-documented)
[22:21:55] <newpy> I want to get into pandas, but the whole view vs copy thing always throws me off
[22:22:36] <hexology> what, like how you get a view with `.loc`?
[22:22:58] <newpy> hexology, yea, I always have to test on a dummy dataframe to make sure the operation actually changes the underlying, etc
[22:23:05] <hexology> it'd be nice if they made it easier to see when you get a copy vs a view, but in 99% of code it doesn't matter, and the times it does matter you'll probably be evaluating other tools like dask anyway
[22:23:10] <newpy> not sure if there is a good text somewhere that explains it
[22:23:20] <hexology> it's safe to assume that slicing operations always return a view
[22:23:21] <newpy> hmm, never heard of dask
[22:23:54] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.2)
[22:23:56] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[22:24:22] <newpy> so if I want to edit the underlying using a slice, can I do .loc[idx_vals, cols] = ... ?
[22:24:32] <newpy> or does that only edit the view
[22:24:42] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 260 seconds)
[22:24:42] *** rexbinary_ is now known as rexbinary
[22:24:44] <hexology> `df.loc[idx, cols] = ...` mutates `df`, just like it would in numpy
[22:24:54] <newpy> ah ok, I forget what I was doing wrong
[22:25:03] <newpy> maybe .iloc works differently?
[22:25:14] <hexology> no, it's the same. but if `df` is already a slice of something else, you will get the infamous "setting a copy on a slice" warning.
[22:25:50] <newpy> oh ok, maybe I was setting df = df.pivot_table(...) and getting a view
[22:25:59] <hexology> pivot table definitely shouldn't return a view
[22:26:11] <newpy> hmm, it's been a while, can't recall exactly what I did
[22:26:32] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[22:26:36] <hexology> pandas has also gotten better and more consistent in the last 3 or so years
[22:26:50] *** Joins: nomic (~nomic@185.192.69.211)
[22:27:55] <newpy> oh, df[idx] is a view right?
[22:28:02] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c9dc:bbab:aca1:5383) (Quit: Textual IRC Client: www.textualapp.com)
[22:28:02] <p-i-> hexology: could you give me an overview of what I need to do? My source data is JSON and I'm converting the datetime into a unix timestamp and creating a Nx2 numpy array.
[22:28:42] <newpy> pandas lets you interpret one of the columns as a date
[22:28:56] <newpy> https://pandas.pydata.org/docs/reference/api/pandas.io.json.read_json.html
[22:28:59] <hexology> Klinda, you can do it in one line with pandas: pd.DataFrame(x).assign(y=y).set_index('y').groupby(level='y').sum()
[22:29:38] <hexology> p-i-: sample data helps a lot with these questions, if you can provide a small sample or construct one
[22:29:57] <p-i-> hexology: Yes, let me grab some!
[22:30:24] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[22:31:32] <hexology> i wonder what the solution to this task would look like in an array language like j
[22:33:02] <hexology> oh and Klinda: `y_uniq, N_y = np.unique(y, return_counts=True) ; n_classes = len(y_uniq)`
[22:33:28] *** Joins: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0)
[22:34:03] <hexology> because you need n_classes to construct N_yi anyway, you might as well compute the feature counts while you're doing it
[22:34:23] <hexology> unless you already have the feature count statically. then you can just do `N_y[label_id] += 1` inside the for loop
[22:34:58] <gitesh> What book do you recommend to learn python? I don't know any other programming language, I'm new to programming.
[22:35:35] <han-solo> the tutorial in the topic is good
[22:35:40] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[22:35:53] <hexology> think python does seem like a good book
[22:35:55] <p-i-> hexology: https://bpa.st/BQZQ
[22:36:01] <han-solo> https://j.mp/23X7emF
[22:37:07] <hexology> p-i-: and that's stored in a json file with the same format [["...", x.x], ["...", y.y], ...] ? or do you already have it loaded as a list of lists? or can you do it either way?
[22:37:16] <p-i-> (and suppose my sliding window is 2 seconds -- actually I'm only taking every 100 data samples and the real window will be 0.1s)
[22:37:17] *** Quits: jay-m1263 (~jay-m@129.0.204.217) (Ping timeout: 268 seconds)
[22:37:17] *** Quits: jay-m1262 (~jay-m@129.0.204.217) (Ping timeout: 268 seconds)
[22:37:42] <p-i-> hexology: Either way works. I've unpacked a more messy JSON structure into that format.
[22:38:10] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[22:38:13] *** Joins: nergar (~Nergar@177.225.129.22)
[22:38:26] *** Joins: llh (~llh@user/llh)
[22:38:40] *** Joins: mickey8 (~user@user/mickey)
[22:39:10] *** Quits: khrbt (~znc@user/khrbt) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[22:40:05] *** Quits: menace (~someone@user/menace) (Quit: menace)
[22:40:16] <p-i-> Original data looked like this: https://bpa.st/3SQA
[22:40:46] <hexology> you could load that data directly into pandas if you wanted
[22:40:51] <hexology> right from the json file
[22:40:53] <p-i-> So probably cleaner to immediately convert it to a pd.DataFrame
[22:40:54] <p-i-> yeah
[22:41:15] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[22:41:24] <p-i-> I just don't know how to process it, I'm new to pandas
[22:41:43] *** Joins: chatcat__ (~chatcat@ip-24-53-119-61.user.start.ca)
[22:42:06] <p-i-> Also I want to create volume = price * size, and operate over (time, volume)
[22:44:23] *** Joins: reset (~reset@user/reset)
[22:44:48] <hexology> p-i-: data = pd.read_json('data.json', orient='records') ; data['time_exchange'] = pd.to_datetime(data['time_exchange'])
[22:45:10] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:45:18] <hexology> then you probably also want to do: `data.set_index('time_exchange', inplace=True)`
[22:45:23] *** Quits: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca) (Ping timeout: 264 seconds)
[22:45:26] <hexology> that sets the timestamp as the row label
[22:46:02] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[22:46:12] <newpy> I think convert_dates=True by default, so you don't need to_datetime
[22:46:16] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[22:46:35] <hexology> i tried it, it didn't convert. maybe it doesn't understand iso 8601 format?
[22:46:44] <newpy> oh, don't mind me then
[22:46:45] <hexology> i had to use to_datetime for some reason, idk why it didn't recognize
[22:46:56] <hexology> no, i thought it would work too and i'm tempted to file a bug report
[22:47:33] <hexology> p-i-: to get volume after the data is loaded + the time index is set, you can just do: data['volume'] = data['price'] * data['size']
[22:48:03] <hexology> it's that easy - that's called "vectorization", where it applies the `*` operation to every pair of elements in the two columns
[22:48:24] <p-i-> ok great, now I see why `pip install pandas` installs numpy
[22:48:29] <p-i-> I have some numpyfu
[22:48:31] <hexology> yeah, pandas uses numpy internally
[22:48:50] <hexology> and a lot of pandas-isms are analogous to numpy-isms
[22:48:55] <hexology> (as well as matlab-isms and r-isms)
[22:48:58] <p-i-> ok great! Now the hard part... how to get a sliding sum...?
[22:50:00] *** Quits: spuz (~spuz@95.148.229.105) (Quit: Client closed)
[22:50:07] <hexology> let me see how to specify 0.1s intervals
[22:50:15] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[22:50:23] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[22:50:35] <hexology> it's something like `data.resample(..., level='time_exchange')['volume'].sum()`
[22:50:44] <hexology> i'm not sure what goes in the ... for 0.1s specifically
[22:51:04] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:51:15] <p-i-> yeah I looked at the doc when you mentioned pandas.resample and couldn't figure that out
[22:52:31] *** Joins: tmus (~tmus@88.83.26.67)
[22:52:49] <hexology> try "100L"
[22:53:20] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:53:36] <hexology> https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#timeseries-offset-aliases
[22:53:43] <hexology> "100L" or "100ms" should work
[22:54:15] <tmus> When doing "if a in mylist:" (where a is a custom class instance and mylist is a list of same custom class instances), which property is used to search the list? __repr__?
[22:54:36] <tmus> i appears to be working, just can't figure out exactly why :)
[22:54:53] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[22:54:55] *** Quits: chatcat__ (~chatcat@ip-24-53-119-61.user.start.ca) (Ping timeout: 256 seconds)
[22:55:53] <hexology> tmus: i believe it uses `==`, which is the `__eq__` method on the custom class. i'm not sure what it falls back to if there is no `__eq__` method, maybe it checks for object identity with `is`
[22:56:01] *** Joins: ano (~ano@user/ano)
[22:56:20] <hexology> i highly doubt it checks repr(a)
[22:56:41] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[22:56:51] <tmus> hexology, __eq__ makes sense... let me test
[22:56:57] <han-solo> __contains__ ?
[22:57:07] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255) (Quit: Textual IRC Client: www.textualapp.com)
[22:57:08] <han-solo> it's a membership check right ?
[22:58:06] <han-solo> https://docs.python.org/3/reference/datamodel.html#object.__contains__ # maybe
[22:58:52] *** Joins: DrBrownBear (~DrBrownbe@70.224.22.2)
[22:58:59] *** Quits: subho (~subho@2405:201:9001:a0fc:91a5:fffe:e3d7:6fb0) (Quit: subho)
[22:59:00] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[22:59:04] *** Quits: DrBrownBear (~DrBrownbe@70.224.22.2) (Remote host closed the connection)
[22:59:28] <tmus> han-solo, cool thanks... Let me see if I can trick this code to fail - so I can make sure it never fails in production
[23:01:35] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[23:02:09] <p-i-> hexology: So clean! Thankyou! (I sent you a PM, hope that's ok)
[23:02:39] <han-solo> tmus: uh, but the other is a list...
[23:02:45] <han-solo> let me check
[23:02:58] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:03:45] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:03:57] <tmus> han-solo, __contains__ appear to be for objects that can contain other objects (such as a list). In this case i have a standard list of custom objects.
[23:04:23] <han-solo> yeah
[23:04:33] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[23:05:30] <han-solo> tmus: hexology was right, you could try __eq__
[23:05:31] <han-solo> my bad
[23:06:23] <tmus> i just tried always returning False from __eq__ and it still works
[23:06:39] *** Quits: voidcat (~voidcat@user/voidcat) (Quit: nyaa~)
[23:06:40] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Quit: bye)
[23:08:17] <han-solo> tmus: what all other special methods are there ?
[23:09:06] *** Joins: voidcat (~voidcat@user/voidcat)
[23:09:23] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[23:09:36] <han-solo> tmus: https://bpa.st/SHSQ
[23:10:37] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[23:10:43] <tmus> han-solo, __hash__ maybe
[23:11:12] <tmus> han-solo, thanks... let me try again
[23:12:22] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:13:45] *** Quits: voidcat (~voidcat@user/voidcat) (Client Quit)
[23:13:45] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Remote host closed the connection)
[23:14:10] *** Quits: gitly (~gitly@85.255.233.228) (Ping timeout: 260 seconds)
[23:14:11] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 256 seconds)
[23:14:15] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:14:30] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (Quit: Offline.)
[23:14:46] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[23:15:01] *** Joins: gitly (~gitly@148.252.132.132)
[23:15:13] <Pi-sistance> using range(x+1) doesnt increase the minimum of 0?
[23:15:28] *** Joins: vaio (~gary@user/ghost)
[23:15:31] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[23:15:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8122-1e99-d814-56b4.res6.spectrum.com)
[23:16:09] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[23:16:33] <han-solo> try `range(start, stop)`
[23:16:37] <vaio> Hello, I was wondering if, by any chance, anyone here runs "cobe" on py3 ?  It seems to install fine through pip, but when trying to run it, it spawns some "AttributeError: 'Namespace' object has no attribute 'run'" error
[23:17:11] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[23:17:12] <vaio> so i was wondering if that package was definitively broken, or if there's some hack allowing to run it anyway ?
[23:17:13] *** Joins: voidcat (~voidcat@user/voidcat)
[23:17:31] *** Joins: Enitin (~Enitin@82.102.22.86)
[23:17:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:17:56] <tmus> han-solo, https://bpa.st/RQMA (if it's - only - using __eq__ it should fail when looking for itself too?)
[23:18:27] <Pi-sistance> ty
[23:18:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[23:18:45] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[23:19:08] *** Joins: zmt00 (~zmt00@user/zmt00)
[23:22:20] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[23:22:46] *** Joins: Atque_ (~Atque@user/atque)
[23:23:29] <SnoopJ> vaio, can you share the complete error report on https://bpa.st/ ?
[23:23:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:23:45] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[23:23:50] *** Joins: srhm (~srhm@user/srhm)
[23:24:03] <tmus> han-solo, looks like list.__contains__ does something similar to: def __contains__(self, other): return any(other is item or other == item for item in self)
[23:24:39] <vaio> SnoopJ: sure: https://bpa.st/7DPQ
[23:25:31] <han-solo> tmus: oh yes, i wonder which methods it hits, or if maybe some short circuiting is happening
[23:25:46] <vaio> it seems to runs "args.run"  (supposedly from argparse), but there's no such key, it seems
[23:25:53] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[23:26:09] <vaio> args.run()
[23:26:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:26:24] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:27:20] <p-i-> `b = buys.resample('100ms', level='time_exchange')['volume'].sum() ;  s = ...(same for sells)...`. Problem is that if for a particular time-interval there are buys but no sells, rather than getting a pd.Series with a 0 at that location in `s`, I just get a shorter `s` than my `b`.
[23:27:30] <p-i-> Which means that my graphs are misaligned
[23:27:40] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[23:28:19] <p-i-> And that if I attempt to get the buy:sell ratio `ratio = b.to_numpy() / (b.to_numpy() + s.to_numpy())` I get `operands could not be broadcast together with shapes (590,) (581,)`
[23:28:38] *** Quits: pgib (~textual@173.38.117.89) (Ping timeout: 260 seconds)
[23:29:17] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Quit: ZNC 1.8.2 - https://znc.in)
[23:29:41] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[23:30:34] *** Joins: cdown (~cdown@89.32.122.5)
[23:30:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:30:57] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Ping timeout: 268 seconds)
[23:31:19] *** Joins: ano (~ano@user/ano)
[23:32:12] <tmus> han-solo, looks like __eq__ is only part of the equation. What does "is" use?
[23:32:56] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[23:33:07] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[23:33:18] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Ping timeout: 260 seconds)
[23:33:19] *** Joins: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca)
[23:33:25] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:29] <Pi-sistance> never knew that range returned a tuple
[23:33:48] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:35:02] *** Quits: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4) (Read error: Connection reset by peer)
[23:35:04] *** Joins: Chex (~Chex@user/chex)
[23:35:40] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:35:43] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[23:35:44] <SnoopJ> Pi-sistance, it doesn't
[23:35:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[23:36:02] <Pi-sistance> im very confused
[23:36:05] *** Joins: vats (~vats@180.149.226.109)
[23:36:34] <xheimlich> I'd like to use something like generators for the following use case:
[23:36:53] <Pi-sistance> SnoopJ: If I print range(7) it prints the tuple (0,7) If I print n in range(7) it prints the sequence I expected
[23:37:27] <xheimlich> There are some very long calculations. They happen in steps so I can return partial results or even just "i-th part done".
[23:37:35] *** Joins: lethu (~lethu@user/lethu)
[23:38:10] <xheimlich> does it make sense to use a generator for this? So something that's watching the process and pretty-printing can print and call next()?
[23:38:25] <KirkMcDonald> Pi-sistance: If you print(range(7)) it prints "range(0, 7)", which is not a tuple.
[23:38:28] <SnoopJ> Pi-sistance, in Python 3, range() returns a range object.
[23:38:46] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:39:01] <SnoopJ> try: `type(range(42))`
[23:39:08] <KirkMcDonald> xheimlich: Could do.
[23:39:41] <Pi-sistance> it seems weird that when I print(range(x)) it doesnt print the whole sequence
[23:39:46] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[23:39:57] <KirkMcDonald> Pi-sistance: You could print(list(range(x)))
[23:39:59] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 264 seconds)
[23:40:12] <SnoopJ> Pi-sistance, this is because the range object is "lazy"
[23:40:42] <Pi-sistance> that laziness is slightly confusing for a noob, oh wells
[23:40:50] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:40:52] <SnoopJ> the object represents the range with the parameters start,stop,step, which is substantially less information than storing 1 million values (for instance)
[23:41:05] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:41:29] <KirkMcDonald> It's fewer bytes, but arguably the same amount of information.
[23:41:48] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[23:42:29] <SnoopJ> For a suitable definition of information that makes the statement true, sure
[23:42:46] <Pi-sistance> list(range(x))) does not work
[23:42:54] <SnoopJ> Pi-sistance, can you be more specific than "does not work?"
[23:43:01] <KirkMcDonald> In whay way does it fail?
[23:43:06] <KirkMcDonald> what way*
[23:43:15] <Pi-sistance> 'range' object cannot be interpreted as an integer
[23:43:15] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[23:43:16] <p-i-> Suppose I have fig = plt.figure(figsize=(20,4)) and I want to do ax.spines['bottom'].set_position('center')
[23:43:31] <p-i-> How to get ax from fig?
[23:43:35] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 264 seconds)
[23:43:41] *** LiaoTao_ is now known as LiaoTao
[23:43:50] <SnoopJ> Pi-sistance, sounds like `x` is already a range object, and you're trying to pass it to the range() constructor, which isn't allowed, it takes integers.
[23:44:00] <Pi-sistance> ah nvm, i used the wrong variabl, sorry
[23:44:06] <p-i-> matplotlib drives me crazy with figure/axis. Every time. I need to staple some kind of idiots' cheat sheet to my wall.
[23:44:06] <SnoopJ> :)
[23:45:07] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[23:45:09] <p-i-> I want y=0 to be in the center of my plot.
[23:45:13] <Pi-sistance> well cool, now I know I can turn the sequenc easily into a list to.
[23:45:21] <SnoopJ> p-i-, fig.get_axes()
[23:45:22] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:45:22] <Pi-sistance> too*
[23:45:47] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[23:46:16] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:46:45] <SnoopJ> p-i-, if you're using the pyplot interface a lot, you can also use plt.gca() to get the current Axes, but this can be a little scary if you switch between figures/subplots because pyplot is very stateful.
[23:46:57] *** Joins: sedeki (~textual@user/sedeki)
[23:47:26] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:48:24] <kosh> in most projects I end up dropping the stateful interface for matplotlib and using the OO interface instead
[23:48:44] <kosh> pyplot is nice if you are only doing simple stuff but quickly becomes complicated
[23:48:59] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 264 seconds)
[23:49:14] <han-solo> tmus: yeah, i don't think you will be able to override that `is` check
[23:49:17] <SnoopJ> I mostly use that one because the semantics of Axes are kind of annoying, but whenever I'm doing subplots or multiple simultaneous figures I use the OO API
[23:49:23] <p-i-> https://gcdn.pbrd.co/images/e5FNU7n7POb6.png
[23:49:43] <SnoopJ> this is a very helpful reference for the structure of a Figure: https://matplotlib.org/stable/gallery/showcase/anatomy.html
[23:49:53] <p-i-> 0 is still not in the center
[23:49:53] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[23:50:11] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8122-1e99-d814-56b4.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:50:11] <SnoopJ> indeed it is not
[23:51:05] <p-i-> Do I have to get max(abs(all y values)) and manually set ylim?
[23:51:16] <p-i-> Thanks, bookmarked!
[23:52:37] *** Joins: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4)
[23:52:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:53:00] <Pi-sistance> also apparently range(x)==range(y) compares super fast compared to list(range(x))==list(range(y))
[23:53:46] <p-i-> https://stackoverflow.com/questions/61050767/how-to-force-zero-0-to-the-center-of-an-axis-in-matplotlib w00t
[23:53:49] <p-i-> gottit
[23:53:53] *** Joins: JordiGH (~jordi@user/jordigh)
[23:54:14] <nedbat> Pi-sistance: because comparing ranges only has to compare three numbers (O(1)), and comparing lists is O(N)
[23:54:18] <SnoopJ> p-i-, I *think* you can call Axes.set_position() on the xaxis there, but it takes its arguments in Figure coordinates, so you'll need to convert from data to figure
[23:55:01] <SnoopJ> or yea, using ylim works too if you center your limits (but this doesn't cover cases where your plot limits are asymmetric about zero)
[23:55:09] <JordiGH> SQLAlchemy is doing some thing that isn't working for me right, because it's an old version. Upgrading all of SQL Alchemy would be a pain because then I'd have to upgrade all of my client code as well. Is there a way to monkeypatch just one function somewhere deep inside the SQLAlchemy call stack?
[23:55:23] <Pi-sistance> yeah, I guess it's obvious really lol
[23:55:25] <JordiGH> lol
[23:55:56] <SnoopJ> it's not exactly obvious, but it *is* true
[23:56:45] <SnoopJ> range() used to return a list in Python 2 and you had to ask for laziness with xrange(), but Python 3 reverses that, you get laziness by default and have to ask for fleshed-out lists :)
[23:58:04] <KirkMcDonald> And of course an xrange object in Python 2 was not as much of a full-fledged sequence as a range object in Python 3.
[23:59:14] *** Joins: jay-m1262 (~jay-m@154.72.160.180)
[23:59:18] *** Joins: jay-m1263 (~jay-m@154.72.160.180)
[23:59:27] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[23:59:56] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
