[00:03:10] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[00:04:31] <Xliff> m: my $a; without $a { say 'Unset' } else { 'Set' 
[00:04:31] <camelia> rakudo-moar 505ffbfa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§"without" does not take "else", please rewrite using "with"‚ê§at <tmp>:1‚ê§------> 3my $a; without $a { say 'Unset' } else7‚èè5 { 'Set'‚ê§¬ª
[00:11:11] <codesections> m: say "\t$?TABSTOP"
[00:11:12] <camelia> rakudo-moar 505ffbfa1: OUTPUT: ¬´        8‚ê§¬ª
[00:12:26] <codesections> since $?TABSTOP is marked as compile-time, does that mean that expressions like ^^^ might print with a different number of spaces?
[00:12:55] <codesections> or is it "compile time" in some sort of nested way that means it still has the correct value?
[00:13:46] <lizmat> good question
[00:13:58] <lizmat> the current implementation is pretty straightforward in the setting:
[00:13:59] <lizmat> my constant $?TABSTOP = 8;
[00:14:14] <lizmat> m: my constant $?TABSTOP = 4;
[00:14:14] <camelia> rakudo-moar 505ffbfa1: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Constants with a '?' twigil not yet implemented. Sorry.‚ê§at <tmp>:1‚ê§------> 3my constant $?TABSTOP = 47‚èè5;‚ê§¬ª
[00:14:24] <lizmat> and there's no way to override that at
[00:14:26] <lizmat> m
[00:14:39] <codesections> interesting, thanks. 
[00:15:00] <[Coke]> m: $?TABSTOP=4; #BOOM
[00:15:00] <camelia> rakudo-moar 505ffbfa1: OUTPUT: ¬´Cannot assign to an immutable value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[00:15:31] <[Coke]> (showing the other end)
[00:15:42] <lizmat> I'm not sure what the speculation says about that
[00:16:48] <[Coke]> also: who picked 8, you monster.
[00:17:26] <codesections> :) agreed 
[00:17:42] <[Coke]> https://www.emser.com/products/raku?variant=39331898458225
[00:19:04] *** Joins: ajr (~andrew@47.151.137.150)
[00:19:33] <lizmat> Looks like it was moritz_ in https://github.com/rakudo/rakudo/commit/fa2d53c30c
[00:19:44] <lizmat> :-)
[00:19:57] <lizmat> almost 10 years ago now  :-)
[00:23:59] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 250 seconds)
[00:33:39] <Xliff> So... why not $*TABSTOP?
[00:33:49] <Xliff> So it can be modified, accordingly.
[00:34:05] <Xliff> I mean... the wrong value could start a centuries long flame-war.
[00:34:07] <Xliff> :)
[00:35:39] <lizmat> m: my $*TABSTOP = 4;  # there you go
[00:35:39] <camelia> rakudo-moar 505ffbfa1: ( no output )
[00:35:55] *** Quits: notna (~Thunderbi@2a02:2455:1761:6e00:1865:6503:fdbc:5a51) (Quit: notna)
[00:36:10] <Xliff> LOL...
[00:36:36] <Xliff>  That doesn't affect $?TABSTOP though, which I am assuming is the default expansion for '\t'?
[00:37:04] <lizmat> I don't think we have tab expansion other than with .indent ?
[00:37:14] <Xliff> Ah!
[00:41:14] *** Joins: ajr (~andrew@47.151.137.150)
[00:42:41] <moon-child> should be @*TABSTOPS
[00:48:02] <[Coke]> lizmat: "\t" ?
[00:48:15] <[Coke]> *whoops*
[01:11:04] <moritz_> 9.5 years ago, aw man
[01:39:37] *** Quits: A26F64 (~A26F64@cpe-74-69-167-143.stny.res.rr.com) (Quit: Connection closed)
[01:41:02] *** Joins: sm2 (~sm1@2601:44:8701:9420::76d)
[02:05:49] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 250 seconds)
[02:13:27] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[02:17:27] *** Joins: ajr (~andrew@47.151.137.150)
[02:28:45] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[02:31:02] *** Quits: vrurg (~vrurg@45.74.95.181) (Ping timeout: 240 seconds)
[02:54:27] <discord-raku-bot> <Nemokosch#9980> yesterday I posted something in the <#538420565980086273> channel on discord, long story short, there is something weird when using junctions to construct paths
[02:55:23] <discord-raku-bot> <Nemokosch#9980> I did a check essentially like $object-path.extension('cpp'|'c'|'pcc') ~~ :f
[02:56:53] <discord-raku-bot> <Nemokosch#9980> and sometimes, under pretty random conditions (e.g this code has run for many files, I ran `git commit` from the script), it threw a warning that during the DESTROY phase, an unhandled exception happened for a .f method call
[02:56:58] <MasterDuke> Nemokosch: there's currently some debate about whether to disallow junctions on the left-hand side of a smartmatch. i'd suggest trying to rework it so the junction is on the right if possible and see if that's better
[02:57:40] <MasterDuke> ah, though the unhandled exception business is probably a bug
[02:57:52] <discord-raku-bot> <Nemokosch#9980> and it would tell me about paths that actually don't exist but could have been tested
[02:58:15] <discord-raku-bot> <Nemokosch#9980> but yeah I didn't even call .f so I couldn't even catch it üòÑ
[02:58:21] *** Quits: vrurg_ (~vrurg@45.74.95.181) (Read error: Connection reset by peer)
[02:58:39] *** Joins: vrurg (~vrurg@45.74.95.181)
[02:59:04] <MasterDuke> well, `~~ :f` is actually calling .f under the hood
[02:59:13] <discord-raku-bot> <Nemokosch#9980> so are left-hand side junctions known to be troublesome already?
[03:00:05] <MasterDuke> how much do you want to read? https://github.com/Raku/problem-solving/issues/297
[03:00:24] <discord-raku-bot> <Nemokosch#9980> uh-oh
[03:00:29] <discord-raku-bot> <Nemokosch#9980> I mean the syntax itself looks neat but today I surely suspected the problem was related to it...
[03:00:52] <discord-raku-bot> <Nemokosch#9980> because I had to extend the code in a way that uses nested loops anyway
[03:00:58] <discord-raku-bot> <Nemokosch#9980> and bang, no more suspicious warnings
[03:01:57] <MasterDuke> i would guess that the problem you're running into is not necessarily because a junction is on the left, but probably just junction-related in general, but that's just a guess
[03:02:14] <MasterDuke> do you have a golf so i can try to repro it?
[03:07:33] *** Quits: sm2 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 265 seconds)
[03:10:31] <discord-raku-bot> <Nemokosch#9980> what is a golf when not that Tiger Woods sport?
[03:11:00] *** Joins: Sgeo (~Sgeo@user/sgeo)
[03:11:49] <MasterDuke> short(est) code that demonstrates the problem
[03:12:12] <MasterDuke> from code golf, solving a problem in the fewest characters
[03:12:58] <MasterDuke> but no worries, i have something that does get those unhandled failures
[03:13:51] <discord-raku-bot> <Nemokosch#9980> oh nice üòÑ
[03:18:32] <MasterDuke> so yeah, the fact that you're using a junction is what's causing them, though not necessarily because it's on the left (i think)
[03:19:11] <MasterDuke> .f creates a Failure if the file doesn't exist
[03:19:51] <discord-raku-bot> <Nemokosch#9980> I was just wondering whether this is known/expected behavior as I got more suspicious about the fundamental cause
[03:20:28] <MasterDuke> which is normally handled by something like `if $file.f`, i.e., the if puts it in boolean "context" and the Failure evaluates to False
[03:20:29] <discord-raku-bot> <Nemokosch#9980> I can very much sympathise with vrurg's takes under that issue fwiw
[03:22:06] <MasterDuke> but the junction means you get multiple Failures, (at least some of) which aren't being handled
[03:22:08] <discord-raku-bot> <Nemokosch#9980> especially with the point that if one wants faster `switch`, maybe it shouldn't be based on a flexible but slow operation - rather than making that operation less flexible and faster universally...
[03:22:33] <MasterDuke> i go back and forth with each new comment
[03:22:39] <discord-raku-bot> <Nemokosch#9980> oh okay, it makes some sense
[03:23:14] <discord-raku-bot> <Nemokosch#9980> the funny thing about this junction smartmatching is that it doesn't seem very deterministic
[03:23:32] <discord-raku-bot> <Nemokosch#9980> so for example when I made the git commit call in the meantime, it always threw failures
[03:23:39] <discord-raku-bot> <Nemokosch#9980> but sometimes it also threw without
[03:31:49] <discord-raku-bot> <Nemokosch#9980> Not like I'm any authority here but I do feel strongly about the ideal itself: Raku should be one of the VERY FEW languages that doesn't remove meaningful features just because the underlying implementation makes them slow. I'm not aware of any "killer feature" of Raku that would justify that - actually the killer feature of Raku is the freedom it grants itself.
[03:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:33:03] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:33:45] <discord-raku-bot> <Nemokosch#9980> and the huge monster Raku is syntax-wise, it seems so banally simple to add some extra pragma if someone wants effective `switch` rather than multi-smartmatching...
[03:34:07] *** Quits: sftp (~sftp@79.174.36.182) (Read error: Connection reset by peer)
[03:34:31] *** Joins: sftp (~sftp@79.174.36.182)
[03:49:19] <MasterDuke> not disagreeing with you, but we do also have to be careful that the language doesn't get too big to maintain. if we have switch semantics *and* smartmatching, that's just that much more code to get correct
[03:50:40] <discord-raku-bot> <Nemokosch#9980> I mean if someone really just wants a C or even Javascript kind of `switch`, that shouldn't cause much headache, right?
[03:51:05] <discord-raku-bot> <Nemokosch#9980> implementation-wise
[03:51:14] <MasterDuke> but raku definitely isn't a minimalist scheme, so i don't think we should reflexively veto any addition
[03:51:50] <MasterDuke> well, it might actually be "relatively" easy to implement as a macro after rakuast lands
[03:55:31] <MasterDuke> backing up to your example, i only see the unhandled failures if the last extension isn't found
[03:55:55] *** Joins: Colt (~Colt@user/colt)
[03:57:22] <MasterDuke> e.g., i have a bunch of .cpp files in a directory. `my $a; for ".".IO.dir -> $p { $a = $p.extension("c"|"pcc"|"cpp") ~~ :f }; say $a` just prints `True`. but if i put one of the other extensions last in the junction, i get a ton of the unhandled Failures 
[04:05:57] <MasterDuke> huh, but i get them regardless of position if i just call .f instead of smartmatching against :f
[04:06:13] <MasterDuke> anyway, off to sleep
[04:06:35] <discord-raku-bot> <Nemokosch#9980> same
[04:06:53] <discord-raku-bot> <Nemokosch#9980> buonanotte üòÑ
[04:08:03] *** Quits: Oshawott (~archenoth@2604:3d09:681:f00:987d:f829:9742:5ed4) (Read error: Connection reset by peer)
[04:11:37] *** Quits: ajr (~andrew@47.151.137.150) (Quit: leaving)
[04:14:24] *** Quits: _________ (~nobody@user/noodly) (Ping timeout: 268 seconds)
[04:14:47] *** Quits: patrickb (~quassel@55d448d0.access.ecotel.net) (Ping timeout: 264 seconds)
[04:15:07] *** Joins: patrickb (~quassel@55d4530d.access.ecotel.net)
[04:15:25] *** Joins: _________ (~nobody@user/noodly)
[04:15:50] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:16:19] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[04:24:13] *** Joins: archenoth (~archenoth@2604:3d09:681:f00:744c:3b3e:78c:3869)
[04:26:57] *** Quits: patrickb (~quassel@55d4530d.access.ecotel.net) (Quit: Quit.)
[04:58:17] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[05:38:55] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[05:39:04] <melezhik> .
[05:48:05] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[05:48:28] *** Joins: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net)
[06:03:29] *** Quits: melezhik (~melezhik@c-73-32-143-85.hsd1.tx.comcast.net) (Quit: Ping timeout (120 seconds))
[06:55:42] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[07:04:58] *** Quits: [Coke] (~coke@172.58.238.187) (Ping timeout: 260 seconds)
[07:22:54] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[07:23:20] *** Joins: Colt (~Colt@user/colt)
[07:25:52] *** Joins: [Coke] (~coke@172.58.238.187)
[08:21:05] *** Quits: MoC_ (~moc@user/moc) (Ping timeout: 250 seconds)
[08:21:13] *** Joins: MoC (~moc@user/moc)
[09:21:13] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:21:13] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:21:13] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:21:13] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:21:13] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:13] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:21:14] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:21:14] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:22:17] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:22:24] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:22:25] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:22:33] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:22:53] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:23:03] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:23:10] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:23:16] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:23:45] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:23:51] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:23:54] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[09:23:59] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:41:26] *** Joins: frost (~frost@user/frost)
[09:42:45] *** Quits: frost (~frost@user/frost) (Client Quit)
[10:00:50] *** Joins: frost (~frost@user/frost)
[10:19:02] *** Quits: leont (sid489095@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[10:19:27] *** Quits: kawaii_ (sid345572@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[10:20:35] *** Joins: kawaii_ (sid345572@hampstead.irccloud.com)
[10:22:15] *** Joins: leont (sid489095@uxbridge.irccloud.com)
[10:22:21] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:22:50] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:23:19] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[10:35:23] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:46:58] *** Quits: avar (avar@vm.nix.is) (Quit: Lost terminal)
[10:47:31] *** Joins: avar (avar@vm.nix.is)
[10:55:09] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:56:00] *** Joins: seednode (~seednode@user/seednode)
[11:22:04] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[11:22:58] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[11:44:38] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:46:08] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:49:08] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 256 seconds)
[11:49:55] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[12:24:10] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[12:36:03] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[12:45:10] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[12:45:28] *** Joins: Colt (~Colt@user/colt)
[13:25:45] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[13:25:49] <andrzejku> hello
[13:27:46] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[13:27:51] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[13:27:59] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[13:28:07] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[13:32:49] <discord-raku-bot> <Nemokosch#9980> suppers
[14:09:39] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:12:19] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:14:07] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:57:50] *** Quits: ecocode__ (sid500572@lymington.irccloud.com) (Ping timeout: 256 seconds)
[14:58:11] *** Quits: rjbs (sid498898@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[15:00:24] *** Joins: ecocode__ (sid500572@lymington.irccloud.com)
[15:01:21] *** Joins: rjbs (sid498898@uxbridge.irccloud.com)
[15:01:45] <Xliff> \o
[15:02:02] <Xliff> I'm getting segfaults with latest Raku. One sec.
[15:03:54] <Xliff> *sigh* -- it's a flapper.
[15:04:24] <Xliff> Only appears when precompiling a compunit. Not enough for a bug report.
[15:05:31] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:06:26] <lizmat> Xliff: ther
[15:06:33] <lizmat> there are several issues atm
[15:06:49] *** Quits: patterner_ (sid212303@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[15:09:20] *** Joins: patterner_ (sid212303@ilkley.irccloud.com)
[15:09:58] <Xliff> lizmat: I am aware. I tried to report one other, but that one too was a flapper. Not a segfault, though.
[15:16:09] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:32:44] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:33:38] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:38:14] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:19:07] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:35:36] *** Joins: frost (~frost@user/frost)
[16:38:30] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[16:56:45] *** Joins: sm2 (~sm1@2601:44:8701:9420::76d)
[17:27:06] <tbrowder> lizmat: how do you feel about adding a method for Date.new with input of year and day-of-year?
[17:27:34] <tbrowder> kind of an inverse method
[17:31:43] <lizmat> I guess  a :year / :year-day candidate could work
[17:33:03] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:33:05] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Remote host closed the connection)
[17:51:08] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:49:42] *** Quits: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net) (Quit: Ping timeout (120 seconds))
[18:52:41] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[19:28:18] <andinus> does "is copy" do nothing when passing lists?
[19:30:05] <[Coke]> is the complaint that you still get the immutable error?
[19:30:35] <[Coke]> I would expect that a copy of an immutable list is immutable itself.
[19:30:36] <andinus> no, the changes are not localised, 
[19:31:04] <andinus> so this is a recursive function, i'm trying to trace back all the points that got it to this point
[19:31:05] <[Coke]> Do you mean Array and not List?
[19:31:34] <andinus> yes, i'm changing it, so array i believe
[19:31:49] <andinus> @maze, Int $y, Int $x, @visited?, @cur-path? --> List
[19:31:56] <[Coke]> m: my @a=1,2,4; sub a(@a is copy) { @a[2]=4}; a(@a); dd @a;
[19:31:56] <camelia> rakudo-moar 0aba016ce: OUTPUT: ¬´Array @a = [1, 2, 4]‚ê§¬ª
[19:32:00] <moritz_> Array is a reference type, "is copy" just copies the refernece to the array
[19:32:26] <andinus> ah i see, can i make it "deepcopy" the array for every call?
[19:33:21] <moritz_> if you have a deepcopy function, sure
[19:33:30] <moritz_> @a = deepcopy(@a) as the first line in your sub
[19:35:33] <andinus> is hash a "reference type" too?
[19:35:52] <andinus> so does is copy on hash copies the refrence or deep copies the hash?
[19:36:02] *** Joins: ufobat (~martin@dynamic-095-115-005-036.95.115.pool.telefonica.de)
[19:36:06] <[Coke]> could also have the sub do a clone when you enter.
[19:36:42] <andinus> i see, yes that'll work
[19:39:53] <tbrowder> lizmat: ok, i'll work on it when i get a chance. imho, the power of Date and DateTime is not heralded enough compared to some other nuggets of raku :)
[19:40:52] <tbrowder> just look at all the cal modules in Perl needed to do the same thing
[20:39:30] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:39:30] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:42:20] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[21:13:58] *** Joins: zjmarlow (~zjmarlow@071-084-181-214.res.spectrum.com)
[21:16:46] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[21:28:52] *** Quits: zjmarlow (~zjmarlow@071-084-181-214.res.spectrum.com) (Ping timeout: 256 seconds)
[21:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:37:20] *** Quits: ufobat (~martin@dynamic-095-115-005-036.95.115.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:18:20] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[23:18:20] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:20:02] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:34:03] *** Joins: zjmarlow (~zjmarlow@071-084-181-214.res.spectrum.com)
[23:35:57] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[23:39:12] <zjmarlow> Hi. ¬†Has anyone successfully compiled Rakudo on macOS Monterey? ¬†I'm having trouble after the make install step for nqp. ¬†nqp can't find nqp.moarvm even though it is in install/share/nqp/lib/
[23:47:10] <[Coke]> I don't think anyone has 12.0 yet
[23:47:34] <[Coke]> anyone *here*, obv. you do. :)
[23:48:56] <[Coke]> Any errors/warnings prior to this point in the build?
[23:49:57] <lizmat> feels to me Apple got even more suspicious of native libs  :-(
[23:54:49] <zjmarlow> No errors / warnings that I can see. ¬†MoarVM compiled fine. ¬†Configure for nqp also completed fine.
[23:58:19] <zjmarlow> fwiw, ./nqp --version runs okay if nqp.moarvm is placed in the same directory but nqp has trouble finding it again if run from another directory.
