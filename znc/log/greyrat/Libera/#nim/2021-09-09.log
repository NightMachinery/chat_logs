[00:13:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:37:44] *** Joins: rockcavera (~rc@192.12.112.227)
[00:37:44] *** Quits: rockcavera (~rc@192.12.112.227) (Changing host)
[00:37:44] *** Joins: rockcavera (~rc@user/rockcavera)
[00:56:07] <FromDiscord> <Skaruts> is it expensive to cast a C array to `ptr UncheckedArray` so I can access its elements?
[00:56:44] <FromDiscord> <Elegantbeef> it's free
[00:57:05] <FromDiscord> <Elegantbeef> `cast[T](someVar)` is free since it's just converting it in the type system
[00:58:43] <FromDiscord> <Skaruts> ah, thanks
[01:02:36] <FromDiscord> <Skaruts> so then I'm confused... but issue is not related to nim, I think -- I'm binding libtcod to my lua/love2d code, but its FOV algorithm isn't going any faster than my original lua algorithm... (in a release build)
[01:03:23] <FromDiscord> <Skaruts> maybe luaJIT is doing it's magic really well or something
[01:03:56] <FromDiscord> <Elegantbeef> have you enabled `lto`?
[01:04:48] <FromDiscord> <Skaruts> I don't know what that is
[01:05:01] <FromDiscord> <Yardanico> In reply to @Skaruts "so then I'm confused...": you can also try with -d:danger - that disables _all_ runtime checks that Nim does
[01:05:07] <FromDiscord> <Yardanico> also what's your nim version?
[01:05:14] <FromDiscord> <Elegantbeef> link time optimization
[01:05:20] <FromDiscord> <Skaruts> 1.4.2 iirc
[01:05:33] <FromDiscord> <Yardanico> In reply to @Skaruts "maybe luaJIT is doing": for some code (especially dealing with math and numbers) that is called really often JITs can perform really well, yes
[01:05:35] <FromDiscord> <Elegantbeef> Might make the output binary a bit more efficient
[01:06:13] <FromDiscord> <Skaruts> 1.4.8 actually
[01:06:17] <FromDiscord> <Yardanico> yeah, that's ok then
[01:06:22] <FromDiscord> <Yardanico> try with -d:danger -d:lto
[01:06:46] <FromDiscord> <Skaruts> gonna try that then
[01:08:12] <FromDiscord> <Elegantbeef> if you're on mac or using clang the `-d:lto` will not work
[01:08:22] <FromDiscord> <Yardanico> why so?
[01:08:24] <FromDiscord> <Yardanico> it'll work just with with clang
[01:08:31] <FromDiscord> <Yardanico> also @Skaruts you can try --gc:orc too
[01:08:36] <FromDiscord> <Yardanico> as an additional option
[01:08:42] <FromDiscord> <Elegantbeef> I thought it didnt work on mac due to using clang
[01:08:49] <FromDiscord> <Elegantbeef> I know it doesnt work on mac for a certainty
[01:09:08] <FromDiscord> <Yardanico> but it works with clang since clang generally has the same CLI as GCC
[01:09:17] <FromDiscord> <Yardanico> on linux clang compiles just with with -d:lto
[01:10:02] <FromDiscord> <Yardanico> ah actually you're right, yeah, it's because -d:lto is forcing a specific linker for some weird reason
[01:10:49] <FromDiscord> <Yardanico> --gc:orc -d:danger --passC:"-flto -march=native" --passL:"-flto"
[01:10:49] <FromDiscord> <Yardanico> :P
[01:11:08] <FromDiscord> <Elegantbeef> there you go
[01:11:19] <FromDiscord> <Skaruts> In reply to @Yardanico "also <@!338653900779421697> you can": yup
[01:11:24] <FromDiscord> <Yardanico> so how's the performance?
[01:11:46] <FromDiscord> <Skaruts> 1 sec
[01:12:15] <FromDiscord> <Elegantbeef> That's slow! \:P
[01:12:32] <FromDiscord> <Yardanico> maybe he calculated the answer to the universe in that 1 sec!
[01:12:43] <FromDiscord> <Skaruts> lol
[01:12:53] <FromDiscord> <Skaruts> just some distractions around me
[01:12:56] <FromDiscord> <Skaruts> dogs...
[01:13:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:13:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:14:01] <FromDiscord> <Gumber aka Zachary Carter> don't blame dogs for your program's poor performance
[01:14:06] <FromDiscord> <Gumber aka Zachary Carter> it's not their fault
[01:14:39] <FromDiscord> <Gumber aka Zachary Carter> poor good bois getting blamed for things they have no control over
[01:15:39] <FromDiscord> <Skaruts> no difference, so the bottleneck is probably elsewhere
[01:15:46] <FromDiscord> <Skaruts> gonna have to do some profiling
[01:15:57] <FromDiscord> <Yardanico> yeah, it's pretty easy with tools that do C/C++ profiling
[01:16:06] <FromDiscord> <Yardanico> just compile your nim project with --debugger:native and you're all set
[01:16:19] <FromDiscord> <Elegantbeef> Or just hit your dogs until the program runs faster
[01:16:22] <FromDiscord> <Skaruts> it's probably in the lua side though
[01:16:34] <FromDiscord> <Yardanico> also potentially -d:useMalloc if you're using arc/orc and want to profile memory
[01:17:48] <FromDiscord> <Skaruts> thanks for the tips
[01:21:17] <nixfreak_nim[m]> nimble.directory cert is expired 
[01:21:17] <nixfreak_nim[m]> https://nimble.directory/
[01:22:09] <nixfreak_nim[m]> and its setup for HTS so most people will be blocked out by their browsers 
[01:24:08] <FromDiscord> <Gumber aka Zachary Carter> I don't remember who made / owns that site
[01:24:47] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:38:06] <FromDiscord> <Elegantbeef> Believe it's fedrico
[01:47:19] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:59:42] *** Joins: tiorock (~rc@192.12.112.227)
[01:59:42] *** Quits: tiorock (~rc@192.12.112.227) (Changing host)
[01:59:43] *** Joins: tiorock (~rc@user/rockcavera)
[01:59:43] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (erbium.libera.chat (Nickname regained by services)))
[01:59:43] *** tiorock is now known as rockcavera
[02:04:53] <FromDiscord> <Gumber aka Zachary Carter> ah
[02:05:13] <FromDiscord> <Gumber aka Zachary Carter> man that union mixing GC'd memory limitation really needs some type of compiler error handling / warning
[02:05:17] <FromDiscord> <Gumber aka Zachary Carter> right now it just results in a sigsev
[02:05:23] <FromDiscord> <Gumber aka Zachary Carter> took me a while to realize what was happening
[02:06:05] <FromDiscord> <Gumber aka Zachary Carter> (edit) "man that union ... mixing" 03added "pragma and"
[02:12:07] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[02:12:07] *** Joins: greaser|q (greaser@user/greasemonkey)
[02:12:12] *** greaser|q is now known as GreaseMonkey
[02:13:48] *** Quits: mdbauman (~mdbauman@99-184-99-19.lightspeed.gnvlsc.sbcglobal.net) (Remote host closed the connection)
[02:14:05] *** Joins: mdbauman (~mdbauman@2600:1700:7e60:f7c0:8c5a:a89b:b1ff:acd4)
[02:26:57] *** Quits: max22- (~maxime@2a01cb0883359800fdb5051cdabc89f4.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:28:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[02:28:48] <FromDiscord> <Elegantbeef> Yea probably should have a warning which can be turned into an error if using gc'd memory in a union
[02:29:19] <FromDiscord> <Elegantbeef> Hmm or should it just be an error...
[02:48:13] *** Joins: tiorock (~rc@192.12.112.227)
[02:48:13] *** Quits: tiorock (~rc@192.12.112.227) (Changing host)
[02:48:13] *** Joins: tiorock (~rc@user/rockcavera)
[02:48:13] *** rockcavera is now known as Guest2543
[02:48:13] *** Quits: Guest2543 (~rc@user/rockcavera) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[02:48:13] *** tiorock is now known as rockcavera
[03:06:10] <FromDiscord> <Gumber aka Zachary Carter> probably an error if it's going to crash the compiler like that
[03:37:56] <FromDiscord> <Skaruts> if I do `let array = cast[ptr UncheckedArray[MyType]](c_array)`, do I need to destroy this pointer later?
[03:41:13] <FromDiscord> <Elegantbeef> no pointers are stack allocated, if you dont want the Carray anymore you do need to dealloc it
[03:42:05] <FromDiscord> <Skaruts> ah I see
[03:42:11] <FromDiscord> <Skaruts> thx
[03:47:46] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:54:39] <FromDiscord> <gogolxdong (liuxiaodong)> How to make a ref from seq[string] ?
[04:55:41] <FromDiscord> <impbox [ftsf]> what are you trying to do?
[04:55:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:57:44] <FromDiscord> <impbox [ftsf]> `var s = new seq[string]()`
[04:59:10] <FromDiscord> <impbox [ftsf]> (edit) "seq[string]()`" => "seq[string]`"
[05:01:45] <FromDiscord> <gogolxdong (liuxiaodong)> that's nice, how about making a ref from a literal seq[string] , like `@["width:100%;height:100%;"]`
[05:03:24] <FromDiscord> <Elegantbeef> follow it with `s[] = @["width:100%;height:100%;"]` or make a template to do it for you
[05:03:57] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3ykb
[05:05:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3ykd
[05:05:31] <FromDiscord> <Elegantbeef> of course as `makeRef` is a template you also can do `makeRef:` style syntax
[05:07:46] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:08:09] <FromDiscord> <Elegantbeef> Clearly should be named `newRef` but i'm a big dumb dumb
[05:15:53] <FromDiscord> <gogolxdong (liuxiaodong)> is there something like `new @["width:100%;height:100%;"]`
[05:17:36] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3yke
[05:40:45] *** Joins: neurocyte6 (~neurocyte@user/neurocyte)
[05:43:10] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:43:11] *** neurocyte6 is now known as neurocyte
[06:29:18] <FromDiscord> <techno3d> whats the difference between procedure and function?
[06:30:18] <FromDiscord> <Elegantbeef> Functions cannot have any side effects, so they cannot access any globalstate or mutate variables that were not passed as mutable
[06:30:39] <FromDiscord> <Elegantbeef> with `strictFuncs` on they cannot even mutate reference parameters without the `var` annotation
[06:30:40] <FromDiscord> <auxym> see https://nim-lang.org/docs/manual.html#pragmas-nosideeffect-pragma
[07:41:26] <FromDiscord> <Alea> In reply to @Yardanico "yeah, it's pretty easy": what profilers would you recommend?
[07:41:32] <FromDiscord> <Hoober> sent a code paste, see https://play.nim-lang.org/#ix=3ykx
[07:42:03] <FromDiscord> <Elegantbeef> depends on the os @Alea i use callgrind/hottie
[07:42:17] <FromDiscord> <Alea> In reply to @Hoober "Very new to nim": the let probably does type inference that return doesn't
[07:44:45] <FromDiscord> <Elegantbeef> you can use `auto` as a return type for when the type annotation doesnt play nicely
[07:45:19] <FromDiscord> <Rika> In reply to @Hoober "Very new to nim": The space and the parentheses make a tuple instead of a function call
[07:45:25] <FromDiscord> <Rika> So you’re passing a tuple to a function
[07:46:15] <FromDiscord> <Elegantbeef> Rika what are you talking about?
[07:47:33] <FromDiscord> <Rika> Did you not see Hoober’s message
[07:47:42] <FromDiscord> <Rika> Ah
[07:47:44] <FromDiscord> <Rika> I misread
[07:47:45] <FromDiscord> <Hoober> In reply to @Elegantbeef "you can use `auto`": That does help, thanks! Still curious if there's a way to get it to work with a tuple return type
[07:47:46] <FromDiscord> <Rika> Really bad
[07:47:58] <FromDiscord> <Rika> I don’t know how I misread that, but whatever
[07:48:09] <FromDiscord> <Elegantbeef> Well i think it's a compiler bug so i'm looking at it right now
[07:48:28] <FromDiscord> <Rika> I feel like it’s to do with implicit genetics
[07:48:37] <FromDiscord> <Elegantbeef> Nah i see the issue right now
[07:50:08] <FromDiscord> <Rika> Did you read the compiler code
[07:50:11] <FromDiscord> <Rika> Because I cannot
[07:50:27] <FromDiscord> <Elegantbeef> Yea i'm trying to fix it right now
[07:50:36] <FromDiscord> <Hoober> Haha, excellent!
[07:50:45] <FromDiscord> <Hoober> Okay, I don't feel so silly for asking now.
[07:51:13] <FromDiscord> <Rika> In reply to @Elegantbeef "Yea i'm trying to": Well what is the issue
[07:51:49] <FromDiscord> <Elegantbeef> It wants to change the type to a builtin typeclass  and cannot for obvious reasons
[07:52:21] <FromDiscord> <impbox [ftsf]> is nim likely to ever support serializing a seq of inherited objects?
[07:53:50] <FromDiscord> <Elegantbeef> Shouldnt be unfeasible assuming we can eventually do `getAllThatInherit(X)`
[07:54:16] <FromDiscord> <Elegantbeef> Which honestly i think it kinda needs it to make it less tedious to do stuff
[07:54:36] <FromDiscord> <Elegantbeef> Might be possible with lazy sem being on the way
[07:56:44] <FromDiscord> <Rika> Why ya gotta use a double negative
[07:57:05] <FromDiscord> <Elegantbeef> Cause i think doubly bad
[07:57:33] <FromDiscord> <impbox [ftsf]> I guess until we get a fields iterator that works with rtti it won't be possible
[08:01:24] <FromDiscord> <Hoober> In reply to @Elegantbeef "It wants to change": Let me know if you get a fix up for this! Very curious to follow along.↵↵Should I report it on github, you think?
[08:01:35] <FromDiscord> <Elegantbeef> Yea you should make an issue
[08:01:55] <FromDiscord> <Elegantbeef> I'm only a numpty that can fix basic stuff, if it's more complex than i think it's not going to be fixed by me 😀
[08:23:12] <FromDiscord> <Rika> Get it fixed or your reputation will drop smh
[08:23:37] <FromDiscord> <Elegantbeef> Aw shit not my reputation, i'm already only slightly above an ant
[08:30:28] <FromDiscord> <Archion> Hi
[08:30:42] <FromDiscord> <Elegantbeef> Hello
[08:31:43] <FromDiscord> <Rika> Hello
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:02] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:41:43] <FromDiscord> <Elegantbeef> Well i've "fixed" it , so heres seeing what CI says 😀
[08:42:16] <FromDiscord> <Rika> Then you didn’t actually fix it and instead caused more bugs
[08:42:31] <FromDiscord> <Elegantbeef> What?
[08:55:59] <FromDiscord> <Elegantbeef> Well you also made me fine another compiler bug so good job! 😛
[08:58:01] <FromDiscord> <Elegantbeef> Fun semi related bug https://play.nim-lang.org/#ix=3ykH
[08:58:21] <FromDiscord> <JSONBash> is the result of (100.13 - 100.12) a floating point arithmetic (IEEE) artifact in nim? becuase in C it is not the same value. I see other languages match nims result
[08:59:49] <FromDiscord> <Rika> I mean like “and then you accidentally break everything”
[08:59:56] <FromDiscord> <Rika> I’m surprised you didn’t understand what I meant
[08:59:57] <FromDiscord> <Elegantbeef> Ah
[09:00:18] <FromDiscord> <Rika> In reply to @JSONBash "is the result of": Are you subtracting doubles in C?
[09:00:24] <FromDiscord> <Elegantbeef> I'm very very scared of accidently breaking stuff, but my PRs still get accepted so wild 😛
[09:00:34] <FromDiscord> <Rika> Because float in Nim is double in C
[09:00:35] <FromDiscord> <impbox [ftsf]> nim's float = double in c
[09:00:45] <FromDiscord> <Rika> Hey what the fuck don’t cut me smhhhh
[09:00:54] <FromDiscord> <JSONBash> In reply to @Rika "Are you subtracting doubles": yeah I am
[09:00:57] <FromDiscord> <Elegantbeef> hey imp loses to me often give him this one!
[09:01:07] <FromDiscord> <Rika> But that’s YOU
[09:01:32] <FromDiscord> <Rika> In reply to @JSONBash "yeah I am": Sounds strange then, how are you printing these numbers
[09:01:34] <FromDiscord> <Rika> On C
[09:01:51] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3ykJ weird!
[09:01:56] <FromDiscord> <JSONBash> ``
[09:02:02] <FromDiscord> <Elegantbeef> It could just be nim's stringication
[09:02:08] <FromDiscord> <JSONBash> sent a code paste, see https://play.nim-lang.org/#ix=3ykK
[09:02:26] <FromDiscord> <Rika> In reply to @Elegantbeef "It could just be": I doubt it
[09:02:41] <FromDiscord> <Rika> I’m thinking it’s something to do with literals and compiler optimisation on C
[09:03:06] <FromDiscord> <impbox [ftsf]> sense... it makes none to me
[09:03:08] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3ykL
[09:03:34] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/885382399255523388/image.png
[09:03:35] <FromDiscord> <Elegantbeef> Shame
[09:03:42] <FromDiscord> <JSONBash> I tried that same in clojure, JS, scala and they all printed what nim did
[09:03:50] <FromDiscord> <JSONBash> C was the only one that didn't
[09:04:55] <FromDiscord> <xflywind> I got
[09:04:57] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3ykM
[09:05:08] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3ykN
[09:05:42] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3ykO
[09:06:04] <FromDiscord> <Rika> You used f
[09:06:06] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3ykP
[09:06:11] <FromDiscord> <Rika> That prints in float I believe
[09:06:14] <FromDiscord> <impbox [ftsf]> to pay respects
[09:06:20] <FromDiscord> <Rika> I think you use d if you want to print a double
[09:06:25] <FromDiscord> <Rika> I forget
[09:07:45] <FromDiscord> <JSONBash> In reply to @Rika "I think you use": I think %d is for ints
[09:07:58] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3ykQ
[09:08:06] <FromDiscord> <Rika> Hmm
[09:08:10] <FromDiscord> <Rika> F is indeed double
[09:08:13] <FromDiscord> <Rika> But that’s strange
[09:08:36] <FromDiscord> <Rika> Try compiling with all warnings and extra warnings, might show something
[09:09:01] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3ykR
[09:09:21] <FromDiscord> <xflywind> sent a code paste, see https://play.nim-lang.org/#ix=3ykS
[09:10:09] <FromDiscord> <xflywind> > g option: Use the shortest representation: %e or %f
[09:10:20] <FromDiscord> <JSONBash> sent a code paste, see https://play.nim-lang.org/#ix=3ykT
[09:10:35] <FromDiscord> <JSONBash> i only have ever used %d and %f to orint really
[09:11:34] <FromDiscord> <Rika> I believe the important part here is the .16 and not the g
[09:11:44] <FromDiscord> <xflywind> yeah
[09:12:20] <FromDiscord> <JSONBash> I also have never printed with .16 lol
[09:12:30] <FromDiscord> <JSONBash> thanks for the answer all
[09:54:45] <FromDiscord> <Elegantbeef> Well rika i'm passing CI now, so put that in your pipe... and i caught the compiler on fire
[09:56:07] <FromDiscord> <Rika> Nice
[10:26:47] <FromDiscord> <cabboose> Hey guys, with the GC_ref and GC_unref call, is that specific to the thread calling it?
[10:27:01] <FromDiscord> <cabboose> so if I pass an object to an intermediary and call GC_ref on the thread sending it
[10:27:15] <FromDiscord> <cabboose> can I then call GC_unref on the thread receiving it and it'll be managed by that thread?
[10:27:18] <FromDiscord> <cabboose> i'm guessing not
[10:27:27] <FromDiscord> <cabboose> doesn't really make sense with how ref objects work
[10:27:35] <FromDiscord> <Elegantbeef> Well depending on your GC it'd be copied over
[10:27:43] <FromDiscord> <cabboose> using refc
[10:27:54] <FromDiscord> <Elegantbeef> Then no, refc doesnt have shared heaps
[10:28:15] <FromDiscord> <cabboose> hmm
[10:32:40] <FromDiscord> <cabboose> does owned function by registering the ref with the GC?
[10:32:50] <FromDiscord> <cabboose> so could move semantics be used to transfer the ref to another GC?
[10:33:05] <FromDiscord> <cabboose> and using allocshared in the intermediary
[10:33:19] <FromDiscord> <cabboose> que nah that seems stupid
[10:33:58] <FromDiscord> <Elegantbeef> There is `std/isolation` but idk how supported it is 😀
[10:37:13] <FromDiscord> <cabboose> Looks good
[10:37:57] <FromDiscord> <cabboose> The ownership of the refs isn't hard to reason with on my side
[10:38:01] <FromDiscord> <cabboose> so hopefully can get that working
[11:36:43] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[12:19:36] *** Joins: max22- (~maxime@2a01cb08833598007f934d16e3231d2d.ipv6.abo.wanadoo.fr)
[12:22:22] *** Joins: NeoCron (~NeoCron@p200300c4cf1c95007f0aa1e4d57a6222.dip0.t-ipconnect.de)
[12:26:02] <FromDiscord> <cabboose> So strings that get converted to cstring are truncated to 128 len?
[12:27:29] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3ylx
[12:27:33] <FromDiscord> <Elegantbeef> They really cant since the cstring is the string
[12:27:52] <FromDiscord> <cabboose> I'm having a json truncated when converted to cstring
[12:27:57] <FromDiscord> <Elegantbeef> Nim puts a `\0` at the end of the string as a hidden element
[12:28:06] <FromDiscord> <Rika> Show code
[12:28:12] <FromDiscord> <Elegantbeef> You sure it just doesnt have a `\0` somewhere?
[12:28:24] <FromDiscord> <cabboose> hmm maybe; i'm using jsony
[12:28:26] <FromDiscord> <cabboose> {"dob":"2021-09-09 03:57:20","entit":{"kind":"Non","mcare":"","conc":"","snet":"","rpat":"","ndss":"","ctg_stat":false},"gndr":"","sx":"","deceased":false,"facility":0,"name":{0:""},"contact":{"p":"","h":"","m":"","f":"","e":""},"status":false,"address":{0:" ",1:" ",2:" "},"did":0,"wid":0,"uids":[],"pid":5}
[12:28:31] <FromDiscord> <cabboose> that's the json i'm trying to convert
[12:28:41] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=
[12:28:44] <FromDiscord> <cabboose> gets truncated to that
[12:28:55] <FromDiscord> <cabboose> (edit) "{"dob":"2021-09-09 03:57:20","entit":{"kind":"Non","mcare":"","conc":"","snet":"","rpat":"","ndss":"","ctg_stat":false},"gndr":"","sx":"","deceased":false,"facility":0,"name":{0:""},"contact":{"p":"","h":"","m":"","f":"","e":""},"status":false,"address":{0:" ",1:" ",2:" "},"did":0,"wid":0,"uids":[],"pid":5}" => "sent a code paste, see https://play.nim-lang.org/#ix="
[12:29:13] <FromDiscord> <Elegantbeef> `assert '\0' notin yourStringdJson`
[12:29:24] <FromDiscord> <cabboose> oki gimme a sec
[12:29:26] <FromDiscord> <Rika> Don’t run in danger
[12:29:30] <FromDiscord> <Rika> Use release
[12:31:10] <FromDiscord> <cabboose> Oh right I'm stupid
[12:31:19] <FromDiscord> <cabboose> I made default gndr and sx '\0'
[12:31:21] <FromDiscord> <cabboose> jesus
[12:31:23] <FromDiscord> <cabboose> kill me
[12:31:26] <FromDiscord> <Elegantbeef> I dont imagine a `\0` got encoded into the json
[12:31:31] <FromDiscord> <Elegantbeef> Lol
[12:31:35] <FromDiscord> <Elegantbeef> Cstrings are lovely eh
[12:31:36] <FromDiscord> <cabboose> not unless you specifically put it in
[12:31:40] <FromDiscord> <cabboose> 😂
[12:31:42] <FromDiscord> <cabboose> thanks ❤️
[12:54:35] *** Joins: darwillim86d (uid517090@id-517090.ilkley.irccloud.com)
[12:57:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[13:04:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:21:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[13:28:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:36:29] *** Quits: TakinOver (~quassel@47.150.196.72) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:57:58] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Ping timeout: 260 seconds)
[14:43:37] <FromDiscord> <Archion> Sport is bad
[14:44:17] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[14:48:52] <FromDiscord> <Rika> ?
[15:02:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[15:18:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:19:44] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:47:25] *** Quits: max22- (~maxime@2a01cb08833598007f934d16e3231d2d.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:01:08] <FromDiscord> <bolino> Hi! I'd like to have a structure of Tables in Table, equivalent to a dict of dicts in python (mydict = `{"key1":{"key11":"value11", "key12":"value12"},"key2":{"key21":"value21", "key22":"value22"}}`)
[16:01:37] <FromDiscord> <bolino> (edit) ""key22":"value22"}}`)" => ""key22":"value22"}}`)↵↵I wonder why I can't initialize it with `var sp = Table[string, Table[string, string]]`?"
[16:02:02] <PMunch> Try `var sp: Table[string, Table[string, string]]
[16:02:11] <PMunch> `var sp: Table[string, Table[string, string]]`
[16:02:24] <PMunch> Note the colon instead of the equal sign
[16:02:39] <FromDiscord> <greenpete> Are there any Nim lang podcasts?
[16:03:03] <FromDiscord> <bolino> Ah yeah of course! Thanks. Or I can use `newTable` I guess also
[16:03:09] <PMunch> @greenpete, none that I know of. Closest you'll get at the moment is the monthly live chat
[16:03:12] <FromDiscord> <bolino> thank you!!
[16:03:19] <PMunch> No problem :)
[16:05:16] <FromDiscord> <Rika> In reply to @bolino "Ah yeah of course!": Not new, init
[16:05:17] <FromDiscord> <enthus1ast> and there also is the "This Month in Nim"
[16:05:30] <FromDiscord> <enthus1ast> https://nim-lang.org/blog.html
[16:05:45] <FromDiscord> <Yardanico> that's what PMunch talked about :)
[16:06:40] <FromDiscord> <enthus1ast> is this also a live talk?
[16:07:23] <FromDiscord> <Yardanico> oh sorry he mentioned the meeting then I guess
[16:07:44] <PMunch> Yeah I was talking about the meeting :P
[16:08:43] <FromDiscord> <greenpete> Thanks!↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[16:12:23] <FromDiscord> <ant1fact> Hello everyone, I am just picking up nim after python for a small project and I am trying to do things as correctly as possible. I need some simple but important data types which are mostly different sized vectors of floats and ints. When creating these types, should I use object or a tuple instead? I cannot find a straightforward answer about this. Are there pros and cons to them?
[16:12:29] <FromDiscord> <ant1fact> (edit) "Hello everyone, I am just picking up nim after python for a small project and I am trying to do things as correctly as possible. I need some simple but important data types which are mostly different sized vectors of floats and ints. When creating these types, should I use object or a tuple instead? I cannot find a straightforward answer about this. Are there pros and cons to them? ... " 03added "Thanks"
[16:13:02] <FromDiscord> <haxscramper> Use object
[16:13:08] <FromDiscord> <haxscramper> `tuple` is a throwaway anonymous single-use thing
[16:13:19] <FromDiscord> <enthus1ast> tuples have all their fields visible, object fields must be exported
[16:13:48] <FromDiscord> <enthus1ast> (from other modules)
[16:18:05] <FromDiscord> <ant1fact> I am not convinced that you are actual bots : )
[16:20:39] <FromDiscord> <haxscramper> this is a discord \<-\> matrix bridge
[16:20:47] <PMunch> I'd say use objects, they both look the same in memory on runtime, but have slightly different semantics on compile-time.
[16:23:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[16:28:14] <FromDiscord> <ant1fact> Thanks for all the info
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:55:41] <FromDiscord> <ant1fact> Are there any best practices for parsing large text files (millions of lines) to increase performance?
[16:57:00] <FromDiscord> <enthus1ast> do it line by line (if you can), do not use split("\\n") but eg. lines iterator, maybe strscan or parseutils are your friends
[16:57:38] <FromDiscord> <enthus1ast> or even do everything yourself
[16:57:56] <FromDiscord> <ant1fact> is readFile(f).splitLines() ok or better to go with readLine() ?
[16:57:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:59:13] <FromDiscord> <Rika> splitlines will process the whole file most likely
[16:59:19] <FromDiscord> <Rika> use iterators
[16:59:31] <FromDiscord> <enthus1ast> there is `lines` https://nim-lang.org/docs/io.html#lines.i%2Cstring
[16:59:47] <FromDiscord> <ant1fact> mostly what I need to do is parse ints and floats out of lines. for floats I can use scanf() because I always expect 3 of them so I can do $f $f $f but for ints the number of ints in the line can change, any best alternative to scanf() in that case?
[17:00:19] <FromDiscord> <Rika> there is parseutils as enthusiast says
[17:00:33] <FromDiscord> <ant1fact> I wrote a proc that uses parseFloat but I also use .split(' ') on the line
[17:00:42] <FromDiscord> <Rika> its ok to split on lines
[17:00:45] <FromDiscord> <Rika> just do not split to get lines
[17:00:50] <FromDiscord> <ant1fact> ahhh
[17:00:51] <FromDiscord> <ant1fact> ok!
[17:00:55] <FromDiscord> <Rika> unless your lines are also long, then split might be slow
[17:01:07] <FromDiscord> <enthus1ast> but for great performance, i would not backtrack
[17:01:27] <FromDiscord> <ant1fact> where does the backtracking happen at the moment?
[17:01:29] <FromDiscord> <enthus1ast> there is no need to split the line first
[17:01:56] <FromDiscord> <enthus1ast> but parseFloat ; skipWhitespace ; parseFloat ; etcc...
[17:02:11] <FromDiscord> <ant1fact> hmmm
[17:02:17] <FromDiscord> <ant1fact> may not even need lines then
[17:02:22] <FromDiscord> <enthus1ast> when you encounter newline yield
[17:02:25] <FromDiscord> <ant1fact> just store floats every 3 floats
[17:03:44] <FromDiscord> <Rika> is it strictly 3 floats?
[17:03:45] <FromDiscord> <ant1fact> for floats yes
[17:03:45] <FromDiscord> <Rika> if it is then you dont need lines
[17:03:45] <FromDiscord> <ant1fact> for ints its variable
[17:03:45] <FromDiscord> <Rika> oh hm
[17:03:45] <FromDiscord> <ant1fact> thats where i am struggling
[17:03:45] <FromDiscord> <ant1fact> ints can be 3
[17:03:45] <FromDiscord> <ant1fact> 4
[17:03:45] <FromDiscord> <ant1fact> 5
[17:03:45] <FromDiscord> <Rika> then lines is still ok
[17:05:18] *** Joins: rockcavera (~rc@192.12.112.227)
[17:05:19] *** Quits: rockcavera (~rc@192.12.112.227) (Changing host)
[17:05:19] *** Joins: rockcavera (~rc@user/rockcavera)
[17:06:29] <FromDiscord> <ant1fact> Really appreciate all the tips, folks
[17:06:33] <FromDiscord> <ant1fact> Having a blast with nim
[17:12:20] <FromDiscord> <bolino> Same here, really appreciate the community, you guys are super helpful! The community is really the most important criteria for a language 🙂
[17:16:01] *** Joins: max22- (~maxime@2a01cb08833598009553b59d4752b14e.ipv6.abo.wanadoo.fr)
[17:16:55] <PMunch> We try our best (for the most part)
[17:25:26] *** Joins: arkurious (~arkurious@user/arkurious)
[17:27:12] <PMunch> Damn, finding a good dithering algorithm that can run on a GPU is hard
[17:28:44] <PMunch> Any ordered/positional algorithm will work, but those typically look pretty bad
[17:28:55] <FromDiscord> <Rika> have you seen about "a dither"?
[17:29:04] *** Quits: max22- (~maxime@2a01cb08833598009553b59d4752b14e.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[17:29:06] <PMunch> Huh?
[17:29:16] <FromDiscord> <Rika> the name oft he algo
[17:29:18] <FromDiscord> <Rika> is "a dither"
[17:29:23] <FromDiscord> <Rika> https://pippin.gimp.org/a_dither/
[17:29:27] <FromDiscord> <Rika> certainly confusing
[17:29:32] <FromDiscord> <Rika> but i think it looks pretty good
[17:29:48] <FromDiscord> <Rika> unless you've implemented void-and-cluster
[17:30:00] <FromDiscord> <Rika> which is kinda hard, its pretty complex
[17:31:37] <PMunch> Void and cluster is also positionally complex..
[17:31:43] <PMunch> computationally*
[17:32:22] <FromDiscord> <Rika> a dither is pretty fast i think
[17:32:25] <FromDiscord> <Rika> still needs floats
[17:32:35] <FromDiscord> <Rika> but you can use 32s and it should be fine
[17:32:37] <FromDiscord> <Rika> maybe even 16s
[17:32:49] <FromDiscord> <Rika> prolly implementable as a shader
[17:33:29] <PMunch> Ooh, a dither seems promising
[17:33:59] <FromDiscord> <Rika> it doesnt help that its name is so generic lmao
[17:34:18] <FromDiscord> <Rika> whats the dithering for btw
[17:35:24] <PMunch> An eInk screen
[17:35:38] <FromDiscord> <Rika> saaaaaame
[17:35:49] <FromDiscord> <Rika> i was planning on using it for my eink screen too
[17:35:56] <FromDiscord> <Rika> but i cant implement it on gpu...
[17:36:24] <FromDiscord> <Rika> since it's not an opengl context (it's a regular android one) and i dont know how to program on gpu for that...
[17:36:30] <PMunch> It's a computer monitor with HDMI input, but the dithering that comes with it appears to be something like Floyd-Steinberg. So when I move the mouse all the pixels to the right and down from the cursor updates which looks terrible when you consider ghosting..
[17:37:09] <FromDiscord> <Rika> how will you disable the internal dithering?
[17:37:51] <PMunch> Either by just setting it to BW mode, or by using another driver board
[17:39:59] <PMunch> You wouldn't happen to have a dither implemented in Nim would you?
[17:42:25] <FromDiscord> <Rika> i do
[17:42:29] <FromDiscord> <Rika> but its cpu ofc
[17:42:36] <PMunch> Of course
[17:42:41] <PMunch> I just wanted to try it out
[17:43:10] <FromDiscord> <Rika> ill just pastebin it okay
[17:44:06] <PMunch> Sure
[17:44:29] <FromDiscord> <Rika> give me a moment then
[17:49:33] *** Joins: max22- (~maxime@2a01cb0883359800c86fdddfb8d9c63e.ipv6.abo.wanadoo.fr)
[17:54:07] <FromDiscord> <Rika> https://cryptpad.fr/code/#/2/code/view/dZ57STcjOOkYfzoGEPt2VLiRur3ezDJrC-mfJLlNk04/embed/
[17:54:08] <FromDiscord> <Rika> i think that works
[17:55:06] <FromDiscord> <Archion> Mhm
[17:55:10] <PMunch> Ah, you have processed it quite a bit :P
[17:55:21] <FromDiscord> <Archion> Why are you do this bot thing when there are tupperbox bot
[17:55:23] <FromDiscord> <Archion> A
[17:55:30] <FromDiscord> <Rika> er is that bad or good
[17:55:37] <FromDiscord> <Rika> i made it when i was still learning nim mind you
[17:55:39] <FromDiscord> <Rika> 😛
[17:56:42] <FromDiscord> <Rika> for per-channel/rgb versions you have to run the same thing per channel
[17:56:52] <FromDiscord> <Rika> so greyscale is 3x faster
[18:01:35] <PMunch> Good thing I'll be doing grayscale then :)
[18:02:14] <FromDiscord> <Rika> i mean, is the input pre-processed into greyscale?
[18:02:36] <FromDiscord> <Rika> i guess you can just add that to the shader actlly
[18:05:12] <PMunch> I would definitely have to do that for the real shader
[18:05:24] <PMunch> Now I'm just testing dithering algorithms on pngs :P
[18:06:36] <FromDiscord> <Rika> i was about to send image examples but i forgot i used an nsfw image
[18:10:22] <FromDiscord> <Yardanico> lol
[18:16:53] <PMunch> Hmm, this is pretty interesting
[18:17:01] <PMunch> But I can't really tell how it actually works :P
[18:18:00] <FromDiscord> <Rika> well it IS just magic numbers
[18:18:37] <PMunch> Sure, but how did he come up with them :P
[18:18:43] <PMunch> And are there better ones out there?
[18:19:00] <FromDiscord> <Rika> probably experimentation
[18:19:06] <FromDiscord> <Rika> better ones? no clue
[18:19:11] <FromDiscord> <Rika> it would probably be on the site
[18:19:12] <FromDiscord> <Rika> if there were
[18:19:19] <FromDiscord> <Rika> it says on the bottom of the site
[18:19:27] <PMunch> I'm kinda tempted to write a error function and just brute force the numbers
[18:19:28] <FromDiscord> <Rika> `If someone comes up with better magic numbers to use on variations of the above formulas, please tell me`
[18:19:37] <FromDiscord> <Rika> call me if you do
[18:19:41] <PMunch> Really only two numbers for the addition algorithm
[18:19:50] <FromDiscord> <Rika> well if you do AND decide it should be either pubdomain or open source
[18:20:04] <FromDiscord> <Rika> for the add one its three
[18:20:11] <FromDiscord> <Rika> ah, no
[18:20:13] <FromDiscord> <Rika> two yeah
[18:20:18] <FromDiscord> <Rika> 237 and 119
[18:20:58] <PMunch> I guess they should be in the range 0..255
[18:21:09] <FromDiscord> <Rika> yes
[18:21:16] <PMunch> Meaning there's about 64k possibilities
[18:21:41] <FromDiscord> <Rika> for those wondering why it's `and 255`, it acts like a "faster" mod operation
[18:22:57] <FromDiscord> <impbox [ftsf]> I made a dither thing recently
[18:23:02] <FromDiscord> <impbox [ftsf]> Interesting stuff
[18:23:55] <FromDiscord> <Rika> an a dither thing or a dither thing
[18:24:10] <FromDiscord> <impbox [ftsf]> Yadither
[18:24:14] <FromDiscord> <Rika> ?
[18:24:21] <FromDiscord> <impbox [ftsf]> Yet another
[18:24:50] <FromDiscord> <impbox [ftsf]> But basically building a lookup table of ascending numbers
[18:25:12] <FromDiscord> <Rika> ah yeah you can do that for a dither as well, i just havent figured that out 🙂
[18:25:15] <FromDiscord> <impbox [ftsf]> Then using that with a per pixel threshold
[18:25:47] <FromDiscord> <Rika> well i figured it out mentally i mean, i just havent coded it
[18:25:55] <FromDiscord> <impbox [ftsf]> Similar to a bayer dither but with a different layout
[18:26:14] <FromDiscord> <impbox [ftsf]> I guess you can experiment with different layouts to see what gives the aesthetic you want
[18:27:08] <FromDiscord> <impbox [ftsf]> If you take a X by Y array and fill it with numbers from 1..XY
[18:27:37] <FromDiscord> <impbox [ftsf]> In a way that adjacent numbers are far apart spatially
[18:27:55] <FromDiscord> <impbox [ftsf]> Taking into account the grid wraps on both axes
[18:28:42] <FromDiscord> <impbox [ftsf]> You can compute an optimal one, but maybe a less optimal solution will look more aesthetically pleasing
[18:29:10] <FromDiscord> <bolino> sent a long message, see http://ix.io/3yn9
[18:31:38] <FromDiscord> <bolino> (edit) "http://ix.io/3yn9" => "http://ix.io/3yna"
[18:31:38] <FromDiscord> <impbox [ftsf]> `for v in variants.mitems:`
[18:31:38] <FromDiscord> <impbox [ftsf]> Will give you a mutable iteration
[18:31:38] <PMunch> I looked at some bayer dithers, but the results are so bad :(
[18:31:39] <FromDiscord> <impbox [ftsf]> They're not the prettiest
[18:31:39] <FromDiscord> <impbox [ftsf]> Did you check the article on Obra Dinns Dithering?
[18:31:39] <PMunch> Oh damn, I didn't even think of that!
[18:31:39] <PMunch> I read it when the game came out, just as a curiosity
[18:31:53] <FromDiscord> <bolino> sent a code paste, see https://play.nim-lang.org/#ix=3ynd
[18:31:57] <PMunch> But I remember them talking about looking for something that would be stable with animations
[18:32:18] <FromDiscord> <Rika> make your table mutable
[18:32:20] <FromDiscord> <Rika> let -> var
[18:32:43] <FromDiscord> <impbox [ftsf]> Blue noise dithering
[18:33:16] <FromDiscord> <Rika> blue noise dithering is similar to void and cluster
[18:33:38] <FromDiscord> <Rika> personally i prefer the look of "a dither add"
[18:34:07] <FromDiscord> <bolino> sent a code paste, see https://play.nim-lang.org/#ix=3yne
[18:34:20] <FromDiscord> <Rika> looks correct
[18:34:35] <FromDiscord> <bolino> can it become immutable when passed to a function?
[18:34:39] <FromDiscord> <Rika> do you call the for loop in a function
[18:34:40] <FromDiscord> <Rika> yes
[18:34:42] <FromDiscord> <Rika> it can
[18:34:46] <FromDiscord> <bolino> it's initailized elsewhere
[18:34:50] <FromDiscord> <Rika> `variants: var seq[...]`
[18:35:02] <FromDiscord> <Rika> instead of what you have on the parameters right now
[18:35:09] <FromDiscord> <bolino> Thanks, ok, let me try
[18:35:25] <FromDiscord> <bolino> (I'm always confused about the initialization in Nim)
[18:37:35] <FromDiscord> <bolino> (you mean `var variants: seq[...]`  right?)
[18:37:41] <PMunch> Hmm, Obra Dinn dithering is unfortunately very much based on having control over the rendering..
[18:38:13] <FromDiscord> <Rika> In reply to @bolino "(you mean `var variants:": no
[18:38:14] <FromDiscord> <Rika> i do not
[18:38:16] <PMunch> I mean I have control over the windows, so I can dither on a window by window basis and exclude the mouse. That by itself will help immensely
[18:38:21] <FromDiscord> <Rika> i mean put that in the fucntion parameters
[18:38:35] <FromDiscord> <Rika> `proc aaaa(variants: var seq[...], ...`
[18:38:48] <FromDiscord> <enthus1ast> var in functions is like "in out" in other langs
[18:39:27] <FromDiscord> <bolino> In reply to @Rika "i mean put that": Oooh ok
[18:39:56] <FromDiscord> <enthus1ast> by default function parameters are not mutable
[18:40:28] <PMunch> Hmm, what would be a good error function? Total error in the image?
[18:42:21] <FromDiscord> <bolino> @Rika Works! Thanks! Learned something.
[18:42:32] <FromDiscord> <Rika> congrats
[18:42:47] <FromDiscord> <Rika> meanwhile im suffering trying to learn android programming xddd
[18:42:50] <FromDiscord> <bolino> Now I have to figure out out to delete a key/value pair from a table from the key - looks like .del() doesn't do the trick
[18:43:01] <FromDiscord> <bolino> In reply to @Rika "meanwhile im suffering trying": Kotlin?
[18:43:19] <FromDiscord> <Rika> kotlin, opengl, trying to do the same thing as pmunch but on a fucking android app
[18:43:34] <FromDiscord> <Rika> In reply to @bolino "Now I have to": del should do the trick
[18:43:41] <FromDiscord> <Rika> as long as you do not have duplicate values for the same key
[18:43:44] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/tables.html#del%2CTable%5BA%2CB%5D%2CA↵(@bolino)
[18:43:47] <PMunch> You know Android has OpenGL right?
[18:43:55] <FromDiscord> <bolino> By the way I remember a few articles from Lucas Pope on forums when he was coding Obra Dinn
[18:43:55] <FromDiscord> <enthus1ast> but be aware that you should not delete stuff while iterating over it
[18:43:59] <FromDiscord> <Rika> i just said that pmunch
[18:44:01] <PMunch> You can use Nim on Android :P
[18:44:02] <FromDiscord> <Rika> look at the start of my msg
[18:44:09] <PMunch> Yeah I just realised :P
[18:44:11] <FromDiscord> <Rika> cpu dithering is still slow
[18:44:53] <FromDiscord> <Rika> im not sure how a slow draw function would affect this tablet but i cant imagine it being ok
[18:45:12] <FromDiscord> <bolino> In reply to @enthus1ast "https://nim-lang.org/docs/tables.html#del%2CTable%5": yup but doesn't work in my case, need to figure out why
[18:45:35] <FromDiscord> <enthus1ast> what means 'doesn't work' ?
[18:45:57] <FromDiscord> <bolino> oh sorry my bad. it's fine
[18:46:00] <FromDiscord> <bolino> thanks guys!
[18:46:01] <FromDiscord> <Rika> he doesnt know
[18:46:01] <FromDiscord> <Rika> ah
[18:46:09] <FromDiscord> <Rika> slow msg sending sorry xd
[18:46:15] <FromDiscord> <bolino> that's ok
[18:46:46] <FromDiscord> <Rika> man im almost tempted trying to make a custom rom for this tablet but then i dont know how i would install it...
[18:46:47] <FromDiscord> <Rika> hmm
[18:46:52] <FromDiscord> <Rika> my options are limited xd
[18:47:49] <FromDiscord> <enthus1ast> closed hardware will be a big problem in the future...
[18:48:23] <FromDiscord> <Rika> in the future??? its already one now
[18:48:49] <FromDiscord> <enthus1ast> at least most notebooks still allow you to install your desired os
[18:49:48] <NimEventer> New thread by DPixie: Passing JsonNode from Nimscript to host proc, see https://forum.nim-lang.org/t/8407
[18:52:01] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:52:08] <FromDiscord> <enthus1ast> yeah, there should be some best practices documented somewhere how to shouvle data back and forth the vm
[18:52:18] <FromDiscord> <enthus1ast> useing json seems like a dirty hack to me
[18:54:12] <FromDiscord> <haxscramper> `const runtimeData = newLit(<compile-time data>)`
[18:54:32] <FromDiscord> <haxscramper> or `let runtimeData = newLit(<CT data>)`
[18:55:20] <FromDiscord> <enthus1ast> is it really so simple?
[18:55:36] <FromDiscord> <enthus1ast> will play with it later
[18:57:04] <FromDiscord> <haxscramper> `newLit()` generates object constructor for your data, so it is the same as writing `MyType(field1: ..., field2: ...)` and so on
[18:57:23] <FromDiscord> <haxscramper> it has some limitations IIRC, but for data that makes sense to be transferred from VM it is good enough
[18:57:51] <FromDiscord> <haxscramper> Like if you have complex cyclic `ref` graph it would probably be weird
[19:13:51] <FromDiscord> <haxscramper> [leorize](https://matrix.to/#/@leorize:envs.net)\:   Is it possible to pin to `1.4.8` specifically in https://github.com/alaviss/setup-nim
[19:13:54] <nrds> <12R2D299> 4GitHub: 7"CI helpers to setup Nim using prebuilt nightlies"
[19:14:35] <FromDiscord> <haxscramper> Now 1.4.9 is available, and it breaks some things in my code, so I need to pin it to specific pathc
[19:15:13] <FromDiscord> <haxscramper> Just doing `        nim: ['version-1-4-8']` results in `Error: Could not find any release named 'latest-version-1-4-8'. The provided branch (version-1-4-8) might not be tracked by nightlies, or is being updated.`
[19:18:46] <FromDiscord> <ynfle (ynfle)> What does "in scope" mean regarding `declaredInScope`?
[19:21:57] <FromDiscord> <haxscramper> I would assume it means "identifier can be accessed from current scope"
[19:22:37] <FromDiscord> <ynfle (ynfle)> and `declared`?
[19:22:43] <FromDiscord> <haxscramper> identifier exists
[19:22:43] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3ynr
[19:23:25] <FromDiscord> <haxscramper> ... this gets tricky when you consider templates/generics etc
[19:24:02] <FromDiscord> <bolino> What would be the best way to remove/delete several items from a sequence?↵If I loop over it to get the indexes to delete, then delete one, it changes the indexes.
[19:24:07] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yns
[19:24:51] <FromDiscord> <Archion> This is
[19:24:59] <FromDiscord> <Archion> Too complicated for me
[19:26:20] <FromDiscord> <enthus1ast> i would return a new sequence
[19:26:45] <FromDiscord> <bolino> In reply to @enthus1ast "i would return a": Yeah I guess no choice...
[19:29:30] <FromDiscord> <enthus1ast> with the items filtered you dont want
[19:29:32] <FromDiscord> <haxscramper> If you only need to filter out the sequence you can do `import std/sequtils; mySeq.filterIt(predicate it)`
[19:29:33] <FromDiscord> <ynfle (ynfle)> is the playground down?
[19:29:39] <FromDiscord> <haxscramper> seems like it
[19:30:30] <FromDiscord> <haxscramper> https://tio.run/##y8vM/f@/oCg/WSE/OzokViOxKN1KIURTwVYhNTkjXyElNTknsSg1RQPK8EksSS3SVODKz9YwNNLkykktUUCWAWozNDIGIpACpZLy1JIiJU2o4v//AQ
[19:30:44] <FromDiscord> <haxscramper> god, this link is like
[19:31:29] <FromDiscord> <haxscramper> Absolutely insane, especially compared to ix.io or wandbox
[19:31:31] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3ynD
[19:31:35] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/eZq
[19:32:14] <FromDiscord> <haxscramper> This code outputs true/false invocations after because `declared` seems to check that entry is declared in the scope of the first instantiation
[19:32:33] <FromDiscord> <haxscramper> second `ok(12)` does not instantiate anything new, so it uses old definition
[19:33:05] <FromDiscord> <haxscramper> and old defn. was first instantiated in place where `declaredLater` was `not declared`
[19:33:43] <FromDiscord> <haxscramper> declaredInScope just does false on all, but I'm not sure why
[19:37:46] <FromDiscord> <enthus1ast> mh [haxscramper](https://matrix.to/#/@haxscramper:matrix.org) when i try fromLit real quick i get " `false` not yet supported\: Foo [AssertionDefect]"
[19:38:10] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3ynI
[19:38:16] <FromDiscord> <haxscramper> from Lit?
[19:38:17] <FromDiscord> <enthus1ast> (even withouth the seq)
[19:38:20] <FromDiscord> <enthus1ast> yep
[19:38:26] <FromDiscord> <enthus1ast> i want to get data from the vm
[19:38:29] <FromDiscord> <haxscramper> I've never used from lit
[19:38:48] <FromDiscord> <haxscramper> If you need to get data from vm you need to `newLit()`
[19:38:59] <FromDiscord> <haxscramper> Take VM data and generate literal value
[19:39:11] <FromDiscord> <haxscramper> And then assign literal value to some runtime whatever
[19:39:55] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/compiler/vmconv.html#fromLit%2CPNode%2Ctypedesc
[19:40:59] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3ynJ
[19:41:03] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3ynK
[19:41:05] <FromDiscord> <haxscramper> asdf
[19:41:16] <FromDiscord> <haxscramper> you were talking vm, like nim VM
[19:43:42] <FromDiscord> <haxscramper> Not in context of macros
[19:43:42] <FromDiscord> <enthus1ast> yes
[19:43:42] <FromDiscord> <haxscramper> Well, moving data across VM boundaries is an open question for now, but when 1.6 comes out with `cast(uncheckedAssign)` I think I would be able to make pretty simple deserialization tool
[19:43:42] <FromDiscord> <haxscramper> But VM data is just `PNode`
[19:43:56] <FromDiscord> <haxscramper> https://discord.com/channels/371759389889003530/371759389889003532/866296935077904404
[19:45:30] <FromDiscord> <haxscramper> So it all comes down to `PNode` deserialization, and there is no solution that works reliably for it
[19:45:58] <FromDiscord> <haxscramper> But again, with 1.6 I think I will implement this for hnimast, since I also need to for some things
[19:46:47] <FromDiscord> <haxscramper> PMunch also proposed using json IIRc
[19:47:20] <FromDiscord> <enthus1ast> yes
[19:47:36] <FromDiscord> <enthus1ast> i do this now and it works
[19:47:56] <FromDiscord> <enthus1ast> but it seems a little strange to me to leave nim land while deep in nim land
[19:48:49] <FromDiscord> <haxscramper> Yes. But as I said, my hypotheis is that direct (de)serialization via PNode is the fastests by definition method
[19:49:09] <FromDiscord> <haxscramper> But I need to implement it
[19:49:46] <FromDiscord> <haxscramper> "just"
[19:51:43] <FromDiscord> <enthus1ast> it seems that fromLit was made for this purpose?
[19:52:02] <FromDiscord> <haxscramper> well, does it work?
[19:52:04] <FromDiscord> <enthus1ast> but yeah
[19:52:08] <FromDiscord> <enthus1ast> no \:D
[19:52:41] <FromDiscord> <haxscramper> In cases like this I prefer to just roll my solution, since putting this in compiler/fixing fromLit would divert compiler dev's attention
[19:53:09] <FromDiscord> <haxscramper> and I get faster feedback loop, and can tweak what I need immediately
[19:53:11] <FromDiscord> <enthus1ast> i must admit that i was quite surpirsed that there is no good way to do this
[19:53:26] <FromDiscord> <haxscramper> well, nim vm officially "does not exist"
[19:53:33] <FromDiscord> <haxscramper> like, it is an internal compiler API
[19:53:45] <FromDiscord> <enthus1ast> naaah it is advertised as a scripting language \:)
[19:53:59] <FromDiscord> <haxscramper> And you are one of five? people that actually dived deep enough to hit the bottom
[19:54:10] <FromDiscord> <haxscramper> I"m not saying it takes a lot to do this, but
[19:54:32] <FromDiscord> <haxscramper> well, when yardanico made package graph there were two package group total, that required compier
[19:54:33] <FromDiscord> <haxscramper> My hnimast and godot
[19:55:13] <FromDiscord> <haxscramper> so it is not popular enough yet for official guide to appear. I just sit here/in telegram and answer question like this,
[19:55:48] <FromDiscord> <haxscramper> But I"m considering writing an article about this, at least when I will have somewhat clear(er) picture of what I should put in there
[19:55:57] <FromDiscord> <haxscramper> not vm, but in general
[19:56:07] <FromDiscord> <haxscramper> "getting started with nim comiler API"
[19:56:47] <FromDiscord> <enthus1ast> to me it seems like this question especially "how to use nimvm for my dynamic scripting" comes up more often lately
[19:57:10] <FromDiscord> <haxscramper> yes, once you know about it
[19:57:18] <FromDiscord> <haxscramper> then you want to put it everywhere
[19:57:25] <FromDiscord> <haxscramper> it's like macros
[19:57:52] <FromDiscord> <haxscramper> once you start using it to solve some specific kind of issues it is almost impossible to get back
[19:58:24] <FromDiscord> <enthus1ast> nim has replaced toml in my monitoring system, a LOT less configuration
[19:58:46] <FromDiscord> <enthus1ast> so it was worth it, even if i had to use json for serialisation
[19:59:26] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/885547194114015262): nim(s) has replaced toml in my monitoring system, a LOT less configuration
[20:00:04] <FromDiscord> <enthus1ast> +1
[20:05:36] <FromDiscord> <enthus1ast> when i look at the implementation of fromLit it seems quite doable (for me ;) ) to implement the stuff i need
[20:05:57] <FromDiscord> <enthus1ast> but i guess there are zillions of corner cases
[20:14:05] *** Joins: mdbauman_ (~mdbauman@2600:1700:7e60:f7c0:690a:3d8b:bfbe:84d7)
[20:17:07] *** Quits: mdbauman (~mdbauman@2600:1700:7e60:f7c0:8c5a:a89b:b1ff:acd4) (Ping timeout: 252 seconds)
[20:23:24] <FromDiscord> <haxscramper> `cast(uncheckedAssign)` is single best thing that happened for serialization
[20:23:56] <FromDiscord> <haxscramper> The main issue with pnode deserialization were handling discriminant objects
[20:24:09] <FromDiscord> <haxscramper> Well, not "singel best thing", but it is pretty good
[20:35:30] <arkanoid> can I mix importc and importcpp in same project?
[20:37:09] <FromDiscord> <treeform> yes, as far as I understand it, importcpp is just a different calling convention.
[20:37:53] <FromDiscord> <treeform> it does not have anything to do with cpp, it just says `a.proc(b, c)` instead of `proc(a, b, c)`
[20:39:02] <arkanoid> I've already wrapped the C version of a library and it is working, but the C++ version has handy proxy objects that could improve the nim interface. Unsure about the payoff
[20:50:48] <FromDiscord> <haxscramper> having `importcpp` implicitly promotes file to use `C++` compiler
[20:51:17] <FromDiscord> <haxscramper> `type a {.importcpp.} = object` compiled with `nim c file.nim` fails with `hidden symbol `\_Z13systemInit000v' isn't defined`-`execution of an external program failed\: 'g++   -o /tmp/asdfasdf\`
[20:51:20] <FromDiscord> <haxscramper> g++
[20:55:21] <FromDiscord> <reilly> Does Nim provide a way of typing a proc argument based on whether or not a type implements a particular set of procs?
[20:59:12] <FromDiscord> <reilly> So, say I want a proc to accept any type so long as that type has the procs `proc a(x: T): int` and `proc b(x: T, y: int): string`.
[21:00:29] <FromDiscord> <reilly> You can just use a generic and the compiler will complain when you try and use an invalid type, but nimsuggest unhelpfully points the blame at the proc itself, and not the call that's causing the problem.
[21:00:59] <FromDiscord> <cabboose> wait what
[21:01:05] <arkanoid> I'm getting error with "@[myEnumValue][0].unsafeAddr", but "let foo = @[myEnumValue]\nfoo[0].unsafeAddr" works. I've been trying with parenthesis here and there but still returns error. How's the grammar here?
[21:01:34] <FromDiscord> <reilly> I mean, it does complain about a "generic/template instantiation from here" but that doesn't make it immediately obvious what the problem is.
[21:02:14] <FromDiscord> <cabboose> arkanoid does wrapping the seq in brackets create a tuple or does it still evaluate as a seq?
[21:03:02] <FromDiscord> <cabboose> @reilly I mean I don't event understand what you are asking
[21:03:06] <FromDiscord> <cabboose> I am probably too cooked and tired
[21:03:08] <FromDiscord> <cabboose> I should really study
[21:03:12] <FromDiscord> <cabboose> but medicine is boring
[21:03:41] <FromDiscord> <cabboose> @reilly can you provide code?
[21:03:59] <arkanoid> cabboose: it's still a seq
[21:04:01] <FromDiscord> <cabboose> In reply to @arkanoid "I'm getting error with": hahaha I didn't see you already said you tried with paranthesis; i'm definitely too tired
[21:04:12] <FromDiscord> <reilly> Yeah, it's kind of hard to explain well, I think. I've actually thought about it a little more after I wrote that and realized it's not really necessary, so don't worry about it.
[21:05:09] <arkanoid> the error I'm getting is: Error: expression has no address
[21:05:36] <arkanoid> seems like the address of the seq can't be acquired on same line
[21:05:45] <FromDiscord> <cabboose> Yeah it's not a reference, it doesn't really have a address
[21:05:48] <FromDiscord> <cabboose> because its a enum
[21:05:54] <FromDiscord> <cabboose> right?
[21:06:30] <FromDiscord> <Rika> In reply to @reilly "Does Nim provide a": yes but its experimental
[21:06:41] <FromDiscord> <Rika> concepts i believe will do what you want
[21:07:13] <FromDiscord> <Rika> docs are on `manual_experimental`
[21:09:39] <FromDiscord> <cabboose> In reply to @arkanoid "seems like the address": Yeah I wonder if the building of the seq gets optimised out so you are just left trying to get the ref to a enum value
[21:10:07] <FromDiscord> <cabboose> But if you assign it then it builds the seq and you actually have a address in memory that has that assignment
[21:10:28] <FromDiscord> <cabboose> I am not making sense to myself
[21:11:26] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yo2
[21:13:17] <FromDiscord> <cabboose> or maybe even `@[MyEnumValue][0].unsafeAddr` still wouldn't work because without doing an assignment you aren't reserving any memory that would get referenced to on runtime and the compiler tries to evaluate that on compilation
[21:14:24] <FromDiscord> <reilly> In reply to @Rika "docs are on `manual_experimental`": I had no idea this existed!
[21:14:32] <FromDiscord> <Rika> i mean
[21:14:36] <FromDiscord> <Rika> its experimental
[21:14:58] <FromDiscord> <Rika> so if you're writing library code or prod code its not really something you'd use
[21:16:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[21:17:02] <FromDiscord> <cabboose> Concepts are too much for me. Macros was enough of a hurdle to get (although in hindsight they are much simpler despite their verbosity)
[21:21:57] <arkanoid> cabboose: yeah, probably
[21:22:22] <arkanoid> I still have to find and use for concepts. What would you use it for?
[21:22:54] <arkanoid> I mean, I got the meaning, it's something like typeclasses in haskell
[21:24:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:31:01] <arkanoid> do you know if there's a nim lib proc that splits "http://user:pass@url/path" into @[http,user,pass,url,path] ?
[21:31:35] <FromDiscord> <cabboose> https://github.com/treeform/urlly has really good parsing afaik
[21:31:36] <nrds> <12R2D299> 4GitHub: 7"Uri and Url parsing for Nim for C and JS backend. Similar api to Window.location."
[21:41:43] <arkanoid> yeah! thanks treeform
[21:48:44] <arkanoid> I'm getting "object constructor needs an object type" and I don't know what I'm doing wrong
[21:53:21] <arkanoid> play.nim-lang.org is down?
[21:54:36] <FromDiscord> <Rika> yed
[21:54:36] <FromDiscord> <Rika> yes
[21:54:44] <arkanoid> I'm getting "type expected" and "object constructor needs an object type" on "initOnvif" call here https://termbin.com/l5ek
[21:54:48] <FromDiscord> <cabboose> Does it have something to do with the nim update lol
[21:55:10] <FromDiscord> <Rika> no
[21:56:05] <FromDiscord> <Rika> `host: purl...` -> `host = purl`
[21:56:08] <FromDiscord> <Rika> same with others
[21:56:33] <arkanoid> oh dear
[21:56:43] <arkanoid> shame on me
[21:58:17] <arkanoid> thanks
[21:58:24] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:01:41] <FromDiscord> <aleclarson> any way to tell nim "hey this proc is side-effect free" even though `{.noSideEffect.}` says `'myProc' can have side effects`
[22:01:47] <FromDiscord> <aleclarson> ?
[22:02:03] <FromDiscord> <cabboose> Lying is bad
[22:02:23] <FromDiscord> <aleclarson> i've no choice, the proc calls into node.js so i can't enforce it
[22:02:29] <FromDiscord> <aleclarson> but the library i'm using wants a side-effect free proc
[22:02:47] <FromDiscord> <Rika> what part has side effects?
[22:02:53] <FromDiscord> <Rika> of the proc with side effects
[22:03:05] <FromDiscord> <aleclarson> the part that calls into node.js
[22:03:12] <FromDiscord> <cabboose> You can always use cast
[22:03:43] <FromDiscord> <aleclarson> (edit) "the part that calls into node.js ... " 03added "(but in reality, no side effects will be made)"
[22:03:50] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yop
[22:03:58] <FromDiscord> <aleclarson> oh interesting
[22:04:35] <FromDiscord> <cabboose> But your nose will grow 🤥 (jk)
[22:05:53] <FromDiscord> <aleclarson> i'm fine with a squidward nose tbh
[22:07:50] <FromDiscord> <cabboose>  https://media.discordapp.net/attachments/371759389889003532/885579764549685298/5mexy4.png
[22:08:46] <FromDiscord> <leorize> not at the moment, a proper impl has to be done in nightlies which I haven't found the time to work on
[22:09:43] <FromDiscord> <leorize> I think iffy have a fork of my setup-nim that supports versioning via the current tags system, so you can try that one out.
[22:11:23] <FromDiscord> <Recruit_main707> In reply to @cabboose "": the compiler must obey me, i know whats better, until there is a sentinent compiler, i decide
[22:13:13] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yot
[22:13:35] <FromDiscord> <haxscramper> `{.push: overflowChecks:off.}`
[22:13:40] <FromDiscord> <haxscramper> and 8+ checks
[22:13:47] <FromDiscord> <haxscramper> also `uncheckedAssign`
[22:14:09] <FromDiscord> <haxscramper> how to write a nuclear bomb in nim under 1 minute
[22:14:11] <FromDiscord> <cabboose> Mate we were playing with sticks and you brought a sword
[22:14:21] <FromDiscord> <haxscramper> no, sword is like
[22:14:24] <FromDiscord> <haxscramper> `import compiler`
[22:14:29] <FromDiscord> <haxscramper> road to madness
[22:50:57] <FromDiscord> <aleclarson> In reply to @cabboose "": lol
[23:02:25] *** Joins: rockcavera (~rc@192.12.112.227)
[23:02:25] *** Quits: rockcavera (~rc@192.12.112.227) (Changing host)
[23:02:25] *** Joins: rockcavera (~rc@user/rockcavera)
[23:08:01] *** Joins: vicfred (~vicfred@user/vicfred)
[23:24:16] <FromDiscord> <ynfle (ynfle)> What does the error `Error: expression 'block: ...' has no type (or is ambiguous)` mean?
[23:27:12] *** Quits: max22- (~maxime@2a01cb0883359800c86fdddfb8d9c63e.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[23:28:23] <FromDiscord> <Rika> The block doesn't "return" anything but the left hand side expects something
[23:29:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[23:31:17] <FromDiscord> <Varriount> @Zevv I broke NPeg. Apparently my grammar is too large for the computedGoto
[23:33:38] <FromDiscord> <Varriount> sent a code paste, see https://play.nim-lang.org/#ix=3yoY
[23:34:05] <FromDiscord> <ynfle (ynfle)> @Rika I don't think it should expect something... hmmm... I'm not sure
[23:39:06] <arkanoid> do you know if there's a lib proc to turn an uncheckedArray + int size into a seq?
[23:44:29] <FromDiscord> <Rika> You must copy in such case
[23:45:10] <FromDiscord> <Varriount> arkanoid: `@cast[array[type, N](uncheckedArray)` might work.
[23:45:25] *** Joins: max22- (~maxime@2a01cb08833598004190beef1e8cf3bf.ipv6.abo.wanadoo.fr)
[23:45:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:45:42] <FromDiscord> <Varriount> Or wait, that won't work if `N` isn't static.
[23:47:10] <FromDiscord> <haxscramper> There is no safe way to do this, since internal structure of a `seq` is considered an implementation detail
[23:47:39] <FromDiscord> <haxscramper> Also seqs are subject to garbage collection, so it might be a little more involved than just constructing object
[23:48:51] <FromDiscord> <haxscramper> The safest way would be to copy data ... that is slow, but I don't think stdlib provides anything to deal with this
