[00:43:41] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:50:05] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[00:50:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[00:51:48] *** Joins: aeth (~aeth@user/aeth)
[03:17:01] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[03:17:41] *** Joins: Jing (~hedgehog@2604:a840:3::103b)
[04:47:40] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[05:29:36] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[05:39:45] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Ping timeout: 268 seconds)
[05:40:19] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[05:45:44] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[06:51:32] *** Quits: sts-q (~sts-q@212.53.219.250) (Ping timeout: 240 seconds)
[06:57:51] *** Joins: sts-q (~sts-q@212.53.219.167)
[07:30:56] <beach> Good morning everyone! 
[08:03:46] *** Joins: Oladon (~olad@98.43.81.226)
[08:43:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:49:29] *** Joins: shka (~herr@109.231.0.226)
[10:41:02] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[11:18:29] *** Joins: treflip (~user@user/treflip)
[14:22:57] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 240 seconds)
[14:39:45] *** Joins: random-nick (~random-ni@87.116.167.125)
[14:46:28] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[14:47:05] *** Joins: Jing (~hedgehog@115.207.51.59)
[16:06:56] *** Joins: makomo (~makomo@user/makomo)
[16:46:48] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[17:18:48] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:51:23] *** Joins: speskk (~user@c-71-234-67-119.hsd1.ct.comcast.net)
[18:34:51] <speskk> Hey folks. I have a case where I'd like to setup an abstraction where I can pass a set of function calls to something and it'll abstract an error handler. I think what I need is a macro, but I'm unsure of how to structure it. More details here: https://pastebin.com/MFuqbnNR
[18:35:46] <speskk> I've looked at some macro docuemntation, but I'm a bit out of my depth. If anyone can recommend a decent run down on them, or just point me in the right direction I'd appreciate it.
[18:45:59] <mfiano> minion: tell speskk about pcl
[18:45:59] <minion> speskk: please look at pcl: pcl-book: "Practical Common Lisp", an introduction to Common Lisp by Peter Seibel, available at http://www.gigamonkeys.com/book/ and in dead-tree form from Apress (as of 11 April 2005).
[18:46:38] <speskk> :) thanks folks
[18:47:11] <speskk> I have been reading it but haven't gotten to macro chapter yet, I am jumping the gun, will get to it :)
[18:48:15] <beach> It would appear that a macro is needed here, if you want to "protect" some arbitrary function calls.
[18:49:19] <speskk> Thanks beach, yeah it's on the tip of my tongue so to speak. I just need to read more.
[18:52:10] <beach> speskk: ~% in a format control string will give you a newline.
[18:52:38] <beach> But you probably don't want to just print something anyway.
[18:53:03] <beach> speskk: Macro bodies are greatly simplified using the backquote reader macro.
[18:53:08] <speskk> Ahh handy tip, thanks. Yeah I won't be printing but that is good to know, as my stuff is littered with #\linefeed.
[18:53:57] <beach> `(handler-case ,arb-fn (error...))
[18:54:11] <beach> ... in the macro body.
[18:54:29] <beach> Also, ARB-FN is not a great name for a parameter.
[18:54:36] <White_Flame> your ARB-FN is actually a form/expression
[18:55:08] <speskk> Whats a more idomation name? I have 'function' but that seemed worse
[18:55:12] <beach> Indeed.  FORM would be better.
[18:55:13] <speskk> idomatic*
[18:55:19] <speskk> FORM ok, thanks
[18:55:27] <beach> It is not a function.  It's an arbitrary form.
[18:56:14] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[18:56:23] <White_Flame> it also smells like this is numerically-oriented, as the error case returns 0 as the primary value
[18:56:45] <White_Flame> which might affect a reasonable name for the macro itself
[18:57:34] <speskk> OK so the body posted by beach now works exactly as I expected. Thanks beach. I guess my knowledge gap is around the '`' and ',' syntax
[18:58:10] <beach> speskk: That syntax is not required, but it makes it very much easier to construct code with it.
[18:59:12] <speskk> I looked at the docs and my unenlightened lisp brain went "Ahh ` is power quote!"
[19:00:02] <beach> The Scheme people call it "quasi quote", because you can "unquote" with the comma character.
[19:00:36] <White_Flame> you can consider it as a simple programmatical templating system
[19:00:54] <White_Flame> maybe a bit confusing when ',@',,' stacks up, but still technically simple ;_
[19:00:56] <White_Flame> ;)
[19:01:04] <speskk> It makes sense. Thanks folks. You guys are so nice in here, I appreciate the help despite that fact that I probably should've just done my homework a bit more.
[19:01:21] *** Quits: rotateq (~user@p200300e787097300818cd04b4ea1a4f3.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[19:01:31] <White_Flame> speskk: this is what #clschool is literally for
[19:02:25] <speskk> Of course, but I never know how low the bar is. I figured coming in here and asking this would likely be a little too fundemental, but I'm very grateful for the help.
[19:02:55] <White_Flame> nah, macros & packages/symbols are things that commonly have a bit of a learning curve
[19:03:36] <speskk> I am working my way "backwards" into lisp so to speak, coming mostly from a perl background and with no univeristy CS or anything, so it is slow going but it's slowly sinking in.
[19:04:07] <speskk> White_Flame: Yeah I can imagine. I have only ever done macros in Rust, which as far as I can tell are very different in that it's really just string substritution.
[19:04:08] <White_Flame> many of the best developers are self-taught (and then maybe also had schooling on top)
[19:04:25] <speskk> substituion*
[19:04:44] <beach> speskk: Sounds good.  Don't hesitate to ask when you feel the need.
[19:06:24] <speskk> Thanks again folks.
[19:07:16] <beach> Pleasure.  Good luck!
[19:07:24] <White_Flame> yep, have fun
[19:33:52] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[20:40:56] *** Quits: speskk (~user@c-71-234-67-119.hsd1.ct.comcast.net) (Remote host closed the connection)
[21:12:01] *** Joins: Oladon (~olad@98.43.81.226)
[21:26:26] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[21:56:53] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:09:14] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.3)
[22:09:30] *** Quits: treflip (~user@user/treflip) (Quit: good night âœ¨)
[22:10:03] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:30:53] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[22:31:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[22:36:27] *** Joins: rotateq (~user@dynamic-046-114-160-198.46.114.pool.telefonica.de)
[23:06:20] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:16:38] *** Quits: rotateq (~user@dynamic-046-114-160-198.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
