[00:01:50] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[00:06:40] *** Quits: vats (~vats@103.158.91.123) (Ping timeout: 260 seconds)
[00:12:47] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[00:30:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331)
[00:40:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[00:54:07] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:4035:5952:6d71:fe9f)
[00:54:10] *** Quits: gproto10 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:07:42] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[01:07:49] *** Joins: MiraCat (~MiraCat@c-24-30-27-91.hsd1.ga.comcast.net)
[01:09:01] <MiraCat> If in a hypothetical scenario where I wanted to find out a bottleneck in a gambit scheme or chicken scheme program, what would be the best way to do so? Because I like scheme and don't want to have to be proficient in C as well to use gambit or chicken.
[01:12:51] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 245 seconds)
[01:14:14] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:14:29] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:4035:5952:6d71:fe9f) (Quit: Client closed)
[01:18:46] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:4035:5952:6d71:fe9f)
[01:19:01] *** Quits: MiraCat (~MiraCat@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[01:20:48] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[01:25:12] *** Joins: _hm_ (~h_m@186-149-117-154.bitcointernet.co.za)
[01:26:07] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[01:27:54] *** Quits: h_m (~h_m@186-149-117-154.bitcointernet.co.za) (Ping timeout: 256 seconds)
[01:33:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:35:48] <rgherdt> MiraCat: I'm not familiar with Gambit, but Chicken's compiler has a profiler you can use to find bottlenecks. There is also a page with ideas to improve performance: http://wiki.call-cc.org/programming-for-performance
[01:37:17] <rgherdt> MiraCat: IMO you don't need to know C in order to program using any of these implementations. C knowledge is important if you want to interact with C libraries
[01:37:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80:5266:49bb:7a4e:e331) (Ping timeout: 250 seconds)
[01:37:53] <rgherdt> depending of the interaction, obviously.
[01:39:22] <rgherdt> I always forget to check if people are still online :P Sorry for the noise
[01:45:29] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:55:07] <sham1> It's annoying when people just leave
[02:00:49] *** Quits: _hm_ (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[02:03:01] *** Joins: h_m (~h_m@186-149-117-154.bitcointernet.co.za)
[02:04:06] *** Quits: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:07:55] *** Joins: mononote (~mononote@user/mononote)
[02:08:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:25:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:30:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[02:37:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[02:37:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[02:44:44] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:45:14] *** Joins: badkins (~badkins@136.56.92.199)
[02:50:03] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[02:55:03] *** Quits: hackeryarn (~hackeryar@2600:1700:139c:1410:5176:2144:3f50:4582) (Ping timeout: 264 seconds)
[03:04:41] *** Joins: civodul` (~user@91-160-117-201.subs.proxad.net)
[03:05:21] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 245 seconds)
[03:12:46] *** Joins: badkins (~badkins@136.56.92.199)
[03:12:48] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[03:21:12] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:4035:5952:6d71:fe9f) (Ping timeout: 256 seconds)
[03:22:44] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:25:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b)
[03:26:03] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[03:26:19] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:29:18] *** Quits: Inline (~Inline@2a02:908:1252:7a80:43ab:5253:5a93:ac1b) (Client Quit)
[03:34:48] *** Quits: civodul` (~user@91-160-117-201.subs.proxad.net) (Ping timeout: 260 seconds)
[03:35:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:35:22] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[03:39:37] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[03:41:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668)
[03:44:15] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:50:04] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[03:53:45] *** sm2n_ is now known as sm2n
[03:55:02] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:59:14] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:59:44] *** Joins: badkins (~badkins@136.56.92.199)
[04:04:30] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[04:05:11] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[04:07:14] *** Joins: xgqtd_ (~user@static62133140007.ostnet.pl)
[04:07:31] *** Joins: s-liao (~s-liao@101.86.101.64)
[04:08:02] *** Quits: evdubs (~evdubs@cpe-66-8-236-219.hawaii.res.rr.com) (Changing host)
[04:08:02] *** Joins: evdubs (~evdubs@user/evdubs)
[04:08:32] *** Quits: evdubs (~evdubs@user/evdubs) (Quit: Leaving)
[04:08:58] *** Joins: evdubs (~evdubs@user/evdubs)
[04:11:33] *** xgqtd_ is now known as xgqt
[04:11:39] *** Quits: xgqtd (~user@static62133140007.ostnet.pl) (Ping timeout: 256 seconds)
[04:13:02] *** xgqt is now known as xgqtd
[04:13:13] *** xgqtd is now known as xgqt
[04:14:18] *** Quits: xgqt (~user@static62133140007.ostnet.pl) (Remote host closed the connection)
[04:15:22] *** Joins: xgqt (~user@static62133140007.ostnet.pl)
[04:21:11] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[04:22:53] *** Joins: aeth (~aeth@user/aeth)
[04:24:45] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:28:21] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[04:46:33] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:52:03] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:54:59] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[05:03:47] *** Joins: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au)
[05:14:23] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:16:44] <jcowan> I just type part of the nick and if it won't tab-complete, the person isn't there
[05:20:00] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:24:42] *** Joins: s-liao (~s-liao@101.86.101.64)
[05:57:26] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[06:00:25] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:06:34] <ns12> Not everyone has the luxury of a 24/7 internet connection or an always-on computer for IRC. There could also be some connection problems. In any case, this channel is logged so it's not a waste to reply to those who have left the channel.
[06:21:17] *** Quits: klu (~klu@user/klu) (Quit: .)
[06:23:41] *** Joins: klu (~klu@98.247.231.39)
[06:23:42] *** Quits: klu (~klu@98.247.231.39) (Changing host)
[06:23:42] *** Joins: klu (~klu@user/klu)
[06:31:11] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 250 seconds)
[06:32:10] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[06:35:39] *** Quits: xgqt (~user@static62133140007.ostnet.pl) (Changing host)
[06:35:39] *** Joins: xgqt (~user@gentoo/developer/xgqt)
[06:48:10] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[06:53:24] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[06:53:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[06:59:23] *** Joins: s-liao (~s-liao@101.86.101.64)
[07:01:12] *** Joins: livoreno (~livoreno@user/notzmv)
[07:09:02] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 256 seconds)
[07:18:10] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:20:20] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:24:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:33:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:39:18] *** Quits: vito (sid1962@user/vito) (Read error: Connection reset by peer)
[07:39:28] *** Joins: vito (sid1962@user/vito)
[07:46:38] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:49:27] <mdhughes> You can also ask rudybot to tell someone later
[07:59:42] *** Quits: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[08:02:05] *** Joins: badkins (~badkins@136.56.92.199)
[08:06:49] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[08:41:30] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:50:30] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[08:58:58] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[09:06:20] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[09:06:31] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[09:19:20] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[09:35:13] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:40:20] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[09:41:50] *** Joins: robin (~robin@user/terpri)
[09:51:02] *** Quits: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au) (Read error: No route to host)
[10:23:24] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c3a4:950f:3557:e668) (Quit: Leaving)
[10:23:29] *** Joins: s-liao (~s-liao@101.86.101.64)
[10:24:32] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:24:39] <rgherdt> jcowan: cool, will try to get used to tab-complete.
[10:38:19] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:41:11] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 245 seconds)
[10:42:31] <xaltsc> Hey, are there resources somewhere to learn about concurrency/parallelism (around srfis 18 21 230 maybe ?) ?
[10:42:50] <xaltsc> Besides the docs ofc, which I've found to be a bit arcane
[10:43:18] *** Joins: aeth (~aeth@user/aeth)
[10:44:21] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:44:53] *** Joins: badkins (~badkins@136.56.92.199)
[10:48:31] <sham1> Well SRFI 230 is easier to explain than the others. Basically it just exposes the architecture primitives for, well, atomics. That is, if you're reading from or writing to memory, ay other processors trying to do that at the same time are blocked, until you're done with the transaction
[10:49:27] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[10:49:42] <rgherdt> mdhughes: thx
[10:50:29] <sham1> As for learning about parallelism, hm
[10:53:20] <xaltsc> sham1: My current use case is just to run a function in the background and having it return immediately, I can paste the tiny bit of code if you want
[10:53:45] <sham1> If it returns immediately, why have it be in a different thread
[10:54:05] <xaltsc> sham1: It doesn't right now, I don't know how to do it
[10:54:08] <sham1> What you mean to say probably, is that your function launches the background thread
[10:54:23] <sham1> And then it does stuff in parallel
[10:54:51] *** Quits: evdubs (~evdubs@user/evdubs) (Quit: Leaving)
[10:55:43] <xaltsc> sham1: Here the code http://paste.debian.net/1220736/
[10:57:07] *** Joins: evdubs (~evdubs@user/evdubs)
[10:59:17] <sham1> Perhaps you might want to have libinput:run-events in a separate thread instead, since that's the event loop
[11:03:52] <xaltsc> sham1: Why would I want run-events to run in a separate thread and not react-to-event ? The purpose of this script is to only react at most once per second if there's been at least an event in the passed second.
[11:04:13] <sham1> Because then react-to-event could block
[11:13:01] *** Joins: civodul (~user@guix/contributor/civodul)
[11:13:12] <xaltsc> Even if I don't about what react-to-event returns ?
[11:14:07] <sham1> I don't get what you mean. "don't" what
[11:14:31] <xaltsc> sorry :D don't care
[11:15:13] <sham1> Ah. Well in that case it simply shouldn't matter
[11:15:21] <sham1> You'd do the actual handling within the react-to-event anyway
[11:28:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:30:37] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:56:08] <lockywolf> xaltsc, srfi-18 is quite easy
[11:56:26] <lockywolf> you can have a look at Java.Thread , it's very similar
[11:56:44] <lockywolf> also, SICP has a section on concurrency
[12:00:40] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[12:08:36] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:c348:a284:9c81:b58b)
[12:45:51] *** Joins: badkins (~badkins@136.56.92.199)
[12:50:29] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[12:54:50] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:34:06] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[14:08:33] *** Joins: mononote (~mononote@user/mononote)
[14:49:08] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[14:59:49] *** Joins: s-liao (~s-liao@101.86.101.64)
[15:08:24] *** Joins: NeoCron (~NeoCron@p200300c4cf1ab200146a93e8f94739c9.dip0.t-ipconnect.de)
[15:08:56] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:09:16] *** Joins: madage (~madage@user/madage)
[15:23:56] *** Joins: seninha (~seninha@user/seninha)
[15:24:41] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:24:53] *** Joins: madage (~madage@user/madage)
[15:31:44] *** Joins: civodul` (~user@nat-eduroam-36-gw-01-bso.bordeaux.inria.fr)
[15:32:50] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 260 seconds)
[15:36:16] *** Quits: robin (~robin@user/terpri) (Ping timeout: 260 seconds)
[15:42:24] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:c348:a284:9c81:b58b) (Ping timeout: 256 seconds)
[15:47:01] *** Joins: notzmv (~zmv@user/notzmv)
[15:54:56] *** Joins: badkins (~badkins@136.56.92.199)
[15:58:41] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 245 seconds)
[15:59:54] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[16:14:28] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[16:15:20] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:44:31] *** Quits: civodul` (~user@nat-eduroam-36-gw-01-bso.bordeaux.inria.fr) (Ping timeout: 245 seconds)
[16:49:34] *** Joins: civodul (~user@guix/contributor/civodul)
[16:51:09] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[16:59:50] *** Joins: ManDay (~manday@user/manday)
[17:00:27] *** Quits: zwr (~zwr@2804:d45:b966:fb00:143e:d40:ce1d:b6a4) (Ping timeout: 264 seconds)
[17:15:02] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[17:16:58] *** Joins: badkins (~badkins@136.56.92.199)
[17:21:49] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[17:26:25] *** Joins: hiruji (~hiruji@user/hiruji)
[17:34:57] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[17:46:30] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[17:47:06] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[17:48:24] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[17:50:46] *** Joins: s-liao (~s-liao@101.86.101.64)
[17:52:31] *** Quits: s-liao (~s-liao@101.86.101.64) (Client Quit)
[17:54:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[17:58:01] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[18:21:56] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2cda:53b0:117d:d312)
[18:35:37] *** Joins: badkins (~badkins@136.56.92.199)
[18:40:26] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[18:41:21] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[18:41:24] *** Joins: badkins (~badkins@136.56.92.199)
[18:50:28] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:55:58] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:56:18] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:56:28] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[18:59:05] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:11:31] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6450:3e1f:fbe5:993b)
[19:22:28] *** Joins: mononote (~mononote@user/mononote)
[19:27:52] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[19:28:26] *** Joins: badkins (~badkins@136.56.92.199)
[19:33:47] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[19:38:39] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[19:43:28] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3190:4531:7023:e50c)
[19:43:28] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3190:4531:7023:e50c) (Changing host)
[19:43:29] *** Joins: skapata (~Skapata@user/skapata)
[19:46:32] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[19:50:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[19:54:11] *** Joins: thevishy (~Nishant@2405:201:f005:c007:5098:b179:18b6:5a33)
[19:54:49] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[20:01:02] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[20:01:17] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[20:07:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:19:25] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[20:29:31] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:30:03] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:31:23] *** Joins: badkins (~badkins@136.56.92.199)
[20:34:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[20:35:58] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[20:41:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[20:43:06] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:52:40] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:53:17] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 250 seconds)
[21:02:46] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:26:11] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 245 seconds)
[21:29:58] *** Joins: livoreno (~livoreno@user/notzmv)
[22:17:50] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[22:28:19] *** Quits: X-Scale (~ARM@31.22.167.95) (Ping timeout: 268 seconds)
[22:28:25] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[22:28:48] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 260 seconds)
[22:29:26] *** X-Scale` is now known as X-Scale
[22:49:27] *** Joins: ManDay (~manday@user/manday)
[22:58:59] *** Quits: thevishy (~Nishant@2405:201:f005:c007:5098:b179:18b6:5a33) (Quit: Leaving)
[23:03:45] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[23:03:55] *** Joins: badkins (~badkins@136.56.92.199)
[23:09:00] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[23:22:48] *** Joins: badkins (~badkins@136.56.92.199)
[23:26:41] *** Quits: ASau` (~user@lmpc.drb.insel.de) (Quit: ERC (IRC client for Emacs 25.3.1))
[23:26:42] *** Joins: civodul (~user@guix/contributor/civodul)
[23:27:03] *** Joins: ASau (~user@lmpc.drb.insel.de)
[23:27:26] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 260 seconds)
[23:31:56] <jcowan> sham1: Juggling 2 balls with 2 hands is parallelism.  Juggling 2 balls with 1 hand or 3 balls with 2 hands is concurrency.
[23:43:48] *** Franciman is now known as {Franciman}
[23:47:41] <ecraven> that's a nice analogy ;) thanks
[23:48:04] <sham1> Well clearly concurrency and parallelism are disjoint from each other. One can be parallel without much (structured) concurrency and thus you need locks and such to compensate for race conditions. And of course one can be concurrent without parallelism with both pre-emptive task switching or coÃ¶perating task switching like coroutines
[23:48:24] *** Joins: badkins (~badkins@136.56.92.199)
[23:57:41] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
