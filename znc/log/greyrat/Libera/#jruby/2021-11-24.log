[00:00:29] <headius> All our problems would be solved if there was a way to compile a bash script into a binary
[00:04:26] <nirvdrum[m]> Okay, so I think I've found the problem, but I need to dig into Ansible to be sure. I have some Ansible config that runs `update-alteratives` and sets the value for java. While `update-java-alteratives` takes a directory, `update-alternatives` will change only `/etc/alternatives/java` and setting it to a directory is incorrect. If I try running `update-alternatives` manually, it won't let me set the `java` value to a directory. But, my
[00:04:26] <nirvdrum[m]> Ansible config has never failed, so I'm worried that module is bypassing the Ubuntu supplied binary and just manually reimplemented it in Python.
[00:04:44] <nirvdrum[m]> If that's the case, this has been broken for me for years.
[00:05:53] <nirvdrum[m]> So, my analysis may be incorrect. Or, I broke my Ansible config along the line. Or Ansible changed its implementation. Or jruby-launcher changed its resolution mechanism. Hard to say.
[00:11:04] <headius> It does seem like the Java command provided through alternatives is broken on your system somehow
[00:19:16] <nirvdrum[m]> Deleting /etc/alternatives/java was enough for the PATH search to find the Homebrew one.
[00:35:20] <headius> Does /usr/bin/java even work? I have never seen that resolve to a directory
[00:40:44] <nirvdrum[m]> No. But I never fully qualify invocations anyway. It just got picked up on the PATH later on.
[00:40:57] <nirvdrum[m]> IntelliJ uses fully qualified paths internally.
[00:41:09] <nirvdrum[m]> I guess I don't run a ton of Java applications directly from the command line.
[00:41:27] <headius> So it seems like your alternatives got screwed up somehow, but we also are not doing the search for an executable properly and happily tried to execute a directory
[00:42:48] <nirvdrum[m]> Yeah. A comedy of errors.
[00:42:53] <nirvdrum[m]> Thanks for helping track it down.
[01:08:17] <nirvdrum[m]> Does anyone know if there's a reason that fast_blank has source for a JRuby extension but doesn't have one pushed to rubygems.org?
[01:18:18] <nirvdrum[m]> Answering my own question, the gem ships with a precompiled JAR. But, `gem install fast_blank` still tries to compile the C native extension, causing it to blow up.
[01:22:13] <nirvdrum[m]> There's an issue on fast_blank already: https://github.com/SamSaffron/fast_blank/issues/29
[01:57:55] <headius> Yeah I didn't even know it had a height version
[01:58:08] <headius> Er JRuby version
[02:03:43] <enebo[m]> headius: you wrote it :)
[02:04:04] <enebo[m]> headius: but it looks like there was never any gemspec code added so it never got released
[02:05:46] <headius> Hah must have been a quick flip and I blanked it so to speak
[02:06:16] <headius> Would have been nice of Sam to @ me there
[02:06:31] <headius> Not sure how we are supposed to see the call for help
[02:10:22] <headius> I commented with the basic instructions and pointed him to the digest gem that recently added the JRuby extension
[02:11:41] <headius> Ah yes, I did this back in 2017 and then pushed an update last year spring
[02:11:55] <headius> So this was back when we were trying to get stuff like mastodon and discourse running
[02:59:11] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (Ping timeout: 268 seconds)
[12:30:08] *** Quits: JasonvanZyl[m] (~jasonvanz@2001:470:69fc:105::dbb4) (Quit: You have been kicked for being idle)
[16:01:21] *** Joins: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[18:29:23] <enebo[m]> edipo.federle: I pushed fb35e667761 as a folowup to your PR
[18:30:13] <enebo[m]> Most of it was just what I said I would do about pushing ThreadContext through from aref (so that should give you an idea of how that looks) but I also found two mistakes I missed in the review of the PR.
[18:30:27] <enebo[m]> I mention those two things in the commit message.
[18:31:59] <enebo[m]> The object shaping one I should briefly explain.  For small arrays we will use a subtype which has fields instead of accessing the values array.  If you call through the methods to access elements then it will get the value from the fields instead of accessing those values through a primitive array
[20:46:44] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (*.net *.split)
[20:46:45] *** Quits: siasmj (sid6106@id-6106.lymington.irccloud.com) (*.net *.split)
[20:52:55] *** Joins: siasmj (sid6106@id-6106.lymington.irccloud.com)
[22:30:42] <MateuszFryc[m]> headius:  just a quick follow up, I received a response to bug which I submitted recently, JDK team suggest that version 18. build 15 should fix the issue. https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8277738 right now it is not available, but perhaps it will be in some time, maybe some delay in processing, or it will be not available at all if it was a security issue.
[22:31:06] <MateuszFryc[m]> Thanks for your help.
