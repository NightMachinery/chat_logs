[00:01:30] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[00:10:02] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[00:38:07] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[00:38:56] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[01:10:26] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:13:22] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[01:21:26] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:23:00] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[01:26:08] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Client Quit)
[01:43:59] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[01:50:17] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:03:04] <basshelal[m]> headius:
[02:03:04] <basshelal[m]> https://github.com/jnr/jnr-ffi/pull/291 
[02:03:04] <basshelal[m]> My new year's gift, a massive PR to review and merge üòÅ
[02:03:04] <basshelal[m]> As always, I'm flexible and easy going, let me know if there's anything needing changing or any clarifications etc
[02:09:29] <basshelal[m]> I mentioned this a while back but I want to completely overhaul and improve the tests so that we can feel safer changing the codebase with cleanups or new features etc.
[02:09:29] <basshelal[m]> These new tests will be a specification too showing what we officially support
[02:09:29] <basshelal[m]> Ideally I'll even try to add some kind of benchmarking performance suite or something so that we can find bottlenecks etc as I mentioned here: https://github.com/jnr/jnr-ffi/issues/253
[02:09:29] <basshelal[m]> But that could be a way's away so that's sidelined for now
[02:26:42] <basshelal[m]> headius: 
[02:26:42] <basshelal[m]> Also check out my comment here: https://github.com/jnr/jnr-ffi/issues/244
[02:26:42] <basshelal[m]> I want to fix this but I can't seem to reproduce it from current `master` branch
[02:29:18] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[02:31:17] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Client Quit)
[02:44:36] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[02:51:47] *** Joins: subbu (~subbu@user/subbu)
[02:51:53] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:02:57] *** Quits: subbu (~subbu@user/subbu) (Quit: Leaving)
[12:29:26] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[14:17:09] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[14:21:09] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[15:48:07] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[16:01:03] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[16:54:45] *** Joins: ssaschaa[m] (~ssaschaam@2001:470:69fc:105::1:605e)
[16:55:30] <ssaschaa[m]> Happy New Year to everyone!
[16:57:01] <ssaschaa[m]> I have just submitted a bug report at github about file permissions using jruby on a ARM mac: https://github.com/jruby/jruby/issues/6983
[16:58:02] <ssaschaa[m]> I wounder if I could do any further investigation/debugging. But where to begin...
[17:21:01] *** Quits: TimGitter[m]1 (~gittertir@2001:470:69fc:105::314f) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: basshelal[m] (~basshelal@2001:470:69fc:105::30e7) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: FlorianDoubletGi (~gitterflo@2001:470:69fc:105::310c) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: liamwhiteGitter[ (~gitterlia@2001:470:69fc:105::312d) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: JesseChavezGitte (~gitterjes@2001:470:69fc:105::3122) (Ping timeout: 240 seconds)
[17:21:01] *** Quits: MattWelke[m] (~mattwelke@2001:470:69fc:105::1:34bb) (Ping timeout: 240 seconds)
[17:37:53] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[17:39:49] *** Joins: basshelal[m] (~basshelal@2001:470:69fc:105::30e7)
[17:39:49] <headius> ssaschaa: good morning and happy new year!
[17:40:23] <headius> I will look into that when I start work later this morning but there were some fixes to an upstream dependency that might have helped. Specifically any operation that involved getting file permissions was garbling the data
[17:40:48] <headius> I believe we have some snapshot builds of 9.3 with the fixed library in place
[17:41:26] *** Joins: UweKuboschGitter (~gitterdon@2001:470:69fc:105::3100)
[17:41:26] *** Joins: JesseChavezGitte (~gitterjes@2001:470:69fc:105::3122)
[17:41:39] *** Joins: liamwhiteGitter[ (~gitterlia@2001:470:69fc:105::312d)
[17:41:39] *** Joins: MattWelke[m] (~mattwelke@2001:470:69fc:105::1:34bb)
[17:41:40] *** Joins: TimGitter[m]1 (~gittertir@2001:470:69fc:105::314f)
[17:41:40] *** Joins: FlorianDoubletGi (~gitterflo@2001:470:69fc:105::310c)
[17:47:17] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[17:49:32] <ssaschaa[m]> Thanks for your reply! Just for your info: I had build 9.4-SNAPSHOT from the sources at github. I think there are some ffi patches (file stat bitmask on ARM Apple devices) included already.
[17:49:32] <ssaschaa[m]> It seems to happen only on new files, as File.chmod works as expected.
[17:59:16] <ssaschaa[m]> uups. Mistakenly claimed File.chmod was working, while it doesn‚Äòt.
[18:12:24] <headius> Yeah that snapshot should have all the latest fixes
[18:14:06] <headius> The short-term workaround would be to use an x86 JDK for now but I will look into this shortly and see if we can do a localized fix
[18:16:03] <ssaschaa[m]> Thank you!
[19:07:10] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:15:49] *** Joins: subbu (~subbu@user/subbu)
[19:16:54] *** Quits: subbu (~subbu@user/subbu) (Remote host closed the connection)
[19:35:24] *** Joins: dangerousdave (~dangerous@host-92-16-216-211.as13285.net)
[20:14:08] *** Joins: subbu (~subbu@user/subbu)
[20:55:57] <headius> Ok I'm here now
[20:58:42] <headius> enebo: when you get a chance let
[20:58:52] <headius> let me know anything you did over the break
[20:58:59] <headius> I was pretty much out for two solid weeks plus yesterday
[21:05:10] <headius> hmmm
[21:05:23] <headius> ssaschaa: looking at your case now
[21:06:04] <headius> we do use fcntl here to set FD_CLOEXEC but the file permissions are just set during a call to `open` and I would have expected that to be ok
[21:06:54] <headius> aha no I wouldn't because it is also varargs past the filename and flags
[21:07:10] <ssaschaa[m]> Clarification: File.chmod works
[21:07:14] <headius> anything in varargs are still being passed wrong for M1 so it is likely getting garbled on the stack
[21:09:14] <headius> chmod on the other hand is not varargs
[21:09:45] <headius> int
[21:09:45] <headius> open(const char *path, int oflag, ...);
[21:09:46] <ssaschaa[m]> Sorry that I cannot help, I was already lost in the sysopen chain at RubyIO.java....
[21:10:06] <headius> yeah it bounces through a lot of interfaces but eventually bottoms out in our native call to `open`
[21:10:29] <headius> https://github.com/jruby/jruby/blob/f5dc3db8fbdf085ef0b660d903b5a8ccdb3eb4bb/core/src/main/java/org/jruby/util/RegularFileResource.java#L218
[21:12:08] <ssaschaa[m]> Could be little- vs. big-endian, but that would have crashed earlier at other machines.
[21:13:03] <headius> yeah that should be ok... we did have aarch64 support previously but M1/Darwin structures varargs differently and fixing it has confounded me
[21:13:41] <headius> specifically it uses a combination of stack and heap to pass the arguments and we are only using the heap, so it looks for the varags in the wrong place
[21:14:27] <headius> the proper fix requires reworking how we dispatch in the native code of our FFI backend, so that it uses the standard libffi functions to set up the call args
[21:14:44] <ssaschaa[m]> Is there some debuging I could do?
[21:15:24] <headius> not really... I know the problem, I just haven't had much success fixing it (I did not write this part of the library and it is pretty complicated)
[21:15:53] <ssaschaa[m]> I agree ;-)
[21:34:01] *** Joins: andreimaxim[m] (~andreimax@2001:470:69fc:105::1:6099)
[21:38:47] <andreimaxim[m]> Hello, folks. I'm trying to figure out if JRuby 9.3.0.0 (and later) introduced a change that might change the way JDOM works, especially with `ActiveSupport::XmlMini`. Seems like the following piece of code is crashing:
[21:38:47] <andreimaxim[m]> ActiveSupport::XmlMini.backend = 'JDOM'
[21:38:47] <andreimaxim[m]> with the error "NoMethodError: undefined method `ATTRIBUTE_NODE' for Java::OrgW3cDom::Node:Module".
[21:38:47] <andreimaxim[m]> I was hoping I could get some hints on how to narrow down this issue or how to work around it as it's currently blocking our migration from JRuby 9.2.x.x to JRuby 9.3.x.x. Thanks!
[21:39:04] <andreimaxim[m]>  * Hello, folks. I'm trying to figure out if JRuby 9.3.0.0 (and later) introduced a change that might change the way JDOM works, especially with `ActiveSupport::XmlMini`. Seems like the following piece of code is crashing:
[21:39:04] <andreimaxim[m]> `ActiveSupport::XmlMini.backend = 'JDOM'`
[21:39:04] <andreimaxim[m]> with the error "NoMethodError: undefined method `ATTRIBUTE_NODE' for Java::OrgW3cDom::Node:Module".
[21:39:04] <andreimaxim[m]> I was hoping I could get some hints on how to narrow down this issue or how to work around it as it's currently blocking our migration from JRuby 9.2.x.x to JRuby 9.3.x.x. Thanks!
[21:39:23] <andreimaxim[m]>  * Hello, folks. I'm trying to figure out if JRuby 9.3.0.0 (and later) introduced a change that might change the way JDOM works, especially with `ActiveSupport::XmlMini`. Seems like the following piece of code is crashing:
[21:39:23] <andreimaxim[m]> `ActiveSupport::XmlMini.backend = 'JDOM'`
[21:39:23] <andreimaxim[m]> with the error `NoMethodError: undefined method `ATTRIBUTE_NODE' for Java::OrgW3cDom::Node:Module`.
[21:39:23] <andreimaxim[m]> I was hoping I could get some hints on how to narrow down this issue or how to work around it as it's currently blocking our migration from JRuby 9.2.x.x to JRuby 9.3.x.x. Thanks!
[21:45:49] <headius> andreimaxim: ok first off it would probably be good to file a bug, but I think I know the issue
[21:46:21] <headius> in 9.3 we stopped allowing access to static variables on interfaces because it was inconsistent with how classes work, and then should be accessed by `::` like other constants anyway
[21:47:02] <headius> I would guess that somewhere in that code it is trying to access org.w3c.dom.Node::Module.ATTRIBUTE_NODE when it should be Module::ATTRIBUTE_NODE
[21:47:17] <headius> er nevermind I got the output confused there
[21:47:38] <headius> org.w3c.dom.Node.ATTRIBUTE_NODE should be Node::ATTRIBUTE_NODE
[21:47:53] <andreimaxim[m]> headius: should I create a JRuby bug or an ActiveSupport bug?
[21:48:29] <headius> yeah very likely this is the issue
[21:48:30] <headius> https://docs.oracle.com/en/java/javase/11/docs/api/java.xml/org/w3c/dom/Node.html#ATTRIBUTE_NODE
[21:48:58] <headius> I'm not sure if this is in activesupport or not but you could look in the gems for `Node.ATTRIBUTE_NODE` and probably find the line
[21:49:23] <headius> workaround for you would be to reopen the interface module and add the equivalent method
[21:50:23] <headius> module org::w3c::dom::Node
[21:50:23] <headius>   def self.ATTRIBUTE_NODE; ATTRIBUTE_NODE; end
[21:50:23] <headius> end
[21:50:39] <headius> but there may be other cases doing the same thing
[21:51:24] <headius> andreimaxim: so I would say file the bug against whatever library accesses this code (and your backtrace should show where too)
[21:51:30] <headius> it is not a bug in JRuby but it was a behavior change
[21:53:18] <andreimaxim[m]> headius: thanks, I will create a bug for `ActiveSupport::XmlMini`. I think it makes more sense to have the library access the constants correctly.
[21:54:06] <andreimaxim[m]> This line is the culprit: https://github.com/rails/rails/blob/main/activesupport/lib/active_support/xml_mini/jdom.rb#L28 
[21:54:06] <headius> yeah thank you, feel free to @ me and I can answer any questions
[21:54:12] <headius> the proper syntax will work in any JRuby so it is a pretty clean change
[21:55:33] <andreimaxim[m]> headius: awesome, thank you very much for your help and thank all of you for the hard work you've been putting into JRuby!
[21:56:03] <headius> no problem, we have a good community here that keeps things moving üòÄ
[22:01:26] *** Quits: dangerousdave (~dangerous@host-92-16-216-211.as13285.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
