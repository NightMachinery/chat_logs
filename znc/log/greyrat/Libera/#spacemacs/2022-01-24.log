[00:18:04] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[01:44:13] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:19:00] *** Quits: baldlizard (~Thunderbi@p57985606.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:36:57] <FromGitter> <18fadly-anthony> hello, my org-mode is broken
[08:37:03] <FromGitter> <18fadly-anthony> one sec, I'll get the buffer message
[08:38:33] <FromGitter> <18fadly-anthony> > hello, my org-mode is broken ‚èé  ‚èé after updating .emacs.d by pulling develop
[08:39:21] <FromGitter> <18fadly-anthony> ```Package cl is deprecated```
[10:57:14] <FromGitter> <lebensterben> update you packages
[10:57:25] <FromGitter> <lebensterben> update your Emacs packages
[12:56:55] *** Joins: baldlizard (~Thunderbi@p57985a8f.dip0.t-ipconnect.de)
[12:58:05] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: Ping timeout (120 seconds))
[13:03:55] *** Joins: henry40408 (~henry4040@175.181.155.165)
[14:09:00] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[15:19:04] *** Joins: osfe_ (~lemaire@91-165-185-216.subs.proxad.net)
[15:19:40] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::1e2d:4e60) (Ping timeout: 268 seconds)
[16:13:33] <FromGitter> <kassick> @bernalex take a look here https://github.com/kassick/emacs-tex-mode-templates ‚èé  ‚èé I tried there three options and all of them worked fine in my setup
[16:14:22] <FromGitter> <kassick> (btw, the last snipped I pasted in this thread had an extra pair of parenthesis; so it's wrong)
[16:14:59] <FromGitter> <kassick> With these options, emacs should ask at least once if you're ok with setting the variable TeX-master to that value
[16:15:42] <FromGitter> <kassick> once you answer yes (or yes and remember this choice), the variable should be set correctly on the subsection buffers
[16:20:20] <FromGitter> <kassick> to be clear: the variable is not set *globally* -- it's set as a buffer-local-variable  -- either because there's a file-local definition as in the `file-local-variables` example or because dir-locals instructs emacs to set the variable locally for all files under the current tree (`dir-locals-in-subsection-folder`) or for files under some specific path of the project (`dir-locals-toplevel`)
[16:21:46] <FromGitter> <kassick> Setting TeX-master globally is definitely not the way to go; check the previous thread
[16:43:42] <FromGitter> <bernalex:matrix.org> What are you doing in order to compile? Certainly the file-local-variables isn't working here, building using ', a'. TeX-master remains 't'. I might have to try your other suggestions.
[16:56:41] <FromGitter> <kassick> I'm compiling with `,c` , viewing with `,v` ; in all cases, TeX-master is set to `"../main.tex"` in the section buffers, and `t` in the `main.tex` buffer
[17:00:13] <FromGitter> <bernalex:matrix.org> Isn't ', c' = close environment?
[17:00:42] <FromGitter> <bernalex:matrix.org> It is here. Just checked.
[17:04:08] <FromGitter> <kassick> it seems that the documentation is not up-to-date ..
[17:04:30] <FromGitter> <kassick> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61eeaae5526fb77b3195bc63]
[17:04:45] <FromGitter> <kassick> I have `lsp`, so `,c` is bound to `latex/build`
[17:05:53] <FromGitter> <kassick> (actually, the documentation is up-to-date:  ‚èé  ‚èé ```| ~SPC m b~ or with LSP ~SPC m c~     | build the document (compile)               |``` ‚èé  ‚èé ) [https://gitter.im/syl20bnr/spacemacs?at=61eeab38f5a39478001f1357]
[17:06:33] <FromGitter> <bernalex:matrix.org> I don't know what lsp is, but my backend seems to be 'company-auctex'. Maybe that is relevant to why your option isn't working for me?
[17:08:24] <FromGitter> <bernalex:matrix.org> For me, build is bound/compile to ', b'. Using this, it definitely ignores the local TeX-master variable.
[17:08:33] <FromGitter> <kassick> The backend *should* not affect the file variables mechanism, but let me check
[17:09:24] <FromGitter> <kassick> ... and it didn't
[17:09:43] <FromGitter> <kassick> Just tried with the layer setup ‚èé  ‚èé ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61eeac1fbfe2f54b2e33fa8d]
[17:10:44] <FromGitter> <kassick> variables were set correctly, `,b` and `,v` build and view the `main.pdf` file
[17:11:55] <FromGitter> <kassick> @bernalex
[17:14:14] <FromGitter> <bernalex:matrix.org> Then I'm stumped. Tried removing my dotfile customisation as well, even if it's basically limited to preferring xetex.
[17:16:14] <FromGitter> <kassick> Is your dotfile (or files) public? I can try replicating the issue here
[17:16:28] <FromGitter> <bernalex:matrix.org> I also tried cloning your repository, trying all of your options. No dice.
[17:17:10] <FromGitter> <bernalex:matrix.org> My dotfile isn't public, but it's very bare bones. I just commented out all of my configuration, and it made no difference. Might be cached stuff however.
[17:21:10] <FromGitter> <kassick> try this:  ‚èé  ‚èé ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61eeaecdd143b14f83322751]
[17:21:39] <FromGitter> <kassick> this will run a clean spacemacs clone with your setup, ensuring everything is byte-compiled again
[17:21:59] <FromGitter> <bernalex:matrix.org> Yeah, this is what I'm thinking about doing right now.
[17:22:07] <FromGitter> <kassick> if it still fails, remove the .spacemacs file from /tmp/test-emacs  and try again
[17:22:27] <FromGitter> <bernalex:matrix.org> Thanks for the recipe. Will try this after dinner.
[17:23:15] <FromGitter> <kassick> good luck! let me know
[17:24:31] <FromGitter> <kassick> (btw, I tested here in my barebones emacs setup, had no problem ...)
[17:25:03] <FromGitter> <kassick> (running emacs 29 from git ; but file variables and dir-locals are somewhat old features)
[17:28:23] <FromGitter> <bernalex:matrix.org> I'm on emacs 27.2, so that might matter too.
[17:45:18] <FromGitter> <kassick> just tried with Fedora's emacs 27.3-9 -- worked as expected
[17:48:05] <FromGitter> <kassick> [edit] version is 27.2-9
[17:48:29] <FromGitter> <rappie> hi everone :) i'm new to spacemacs (and emacs) and i'm encountering the following issue: when i scroll a scrollbar appears (which i like), this resizes the window, making it smaller. then when i stop scrolling it disappears again (which is awesome) BUT... it resizes the window again, making it smaller again. this way my spacemacs keeps shrinking. any advice would be greatly appreciated. thanks :)
[17:50:21] <FromGitter> <kassick> ah, and check the contents of `~/.emacs.d/.cache/.custom-settings` ; make sure you did not customize TeX-master
[17:53:40] <FromGitter> <kassick> Probably not what you want, but you can set `   dotspacemacs-scroll-bar-while-scrolling` to `nil` in your .spacemacs -- at least should stop your windows resizing while you look for a fix ;)
[17:54:29] <FromGitter> <rappie> thanks :) any suggestions on where to look for a fix?
[17:55:56] <FromGitter> <rappie> https://www.gnu.org/software/emacs/manual/html_node/elisp/Implied-Frame-Resizing.html
[17:56:09] <FromGitter> <rappie> i found stuff like this, but this is very hard to read/understand for a emacs newbie
[17:57:58] <FromGitter> <kassick> Try this: ‚èé Type `M-:`   (aka `Alt-:`)
[17:58:04] <FromGitter> <kassick> then type `(setq frame-inhibit-implied-resize t)`
[17:59:22] <FromGitter> <kassick> (or, for a more user friendly version, `M-x` `customize-variable` `frame-inhibit-implied-resize` , click `value menu` , select `Always` and the click `Apply`
[18:00:59] <FromGitter> <rappie> awesome, that works! :)
[18:01:09] <FromGitter> <kassick> If that fixes the issue for you, you can either add the `(setq ... )` line to your .spacemacs (inside the `dotspacemacs/user-config` function) or simply click `Apply and Save` in in customize
[18:01:56] <FromGitter> <rappie> cool. if i do Apply and Save, will it add it to my .spacemacs? or store it somewhere else?
[18:03:48] <FromGitter> <kassick> Save and Apply will store in `~/.emacs.d/.cache/.custom-settings`  (unless you changed the value of `custom-file` )
[18:04:29] <FromGitter> <rappie> ok thanks a lot :)
[18:06:05] <FromGitter> <kassick> BTW, I tested the scrollbar behaviour with emacs 27 and emacs 29 -- it did restore the correct frame size when hiding the scrollbar. It's a wild guess, but I'd guess it has something to do with your desktop environment
[18:06:10] <FromGitter> <kassick> (I'm running in gnome 41.3 under fedora )
[18:09:11] <FromGitter> <rappie> ahhh yes that makes sense, i'm using kde plasma and i've set a window rule to set it's position at startup. when i disable the rule it enlarges the window when adding the scrollbar and resizes correctly when removing the scrollbar
[18:09:36] <FromGitter> <rappie> any tips on how to set the default position in spacemacs? :) i used the window rules as a quick fix because i couldnt find much while googling
[18:12:49] <FromGitter> <dalanicolai> How did you set the 'window rule'?
[18:13:04] <FromGitter> <dalanicolai> You can use the `initial-frame-alist`
[18:13:18] <FromGitter> <dalanicolai> See `SPC h d v` `initial-frame-alist`
[18:13:32] <FromGitter> <dalanicolai> Add it to your user-config
[18:14:08] <FromGitter> <rappie> its in the kde settings, you can select a window by its class name and then set its position/size and set "ignore requested geometry" to "force"
[18:14:41] <FromGitter> <dalanicolai> Okay... so then try  the `initial-frame-alist` solution
[18:16:59] <FromGitter> <rappie> nice, this seems to work. thanks :)
[18:18:30] <FromGitter> <dalanicolai> Good... have fun
[18:18:35] <FromGitter> <rappie> so i know this question is hard to answer but how could i have figured these things out by myself? for example a place where i can search the docs of all these variables that are available to set?
[18:49:25] <FromGitter> <dalanicolai> Ah.. got a little distracted
[18:49:36] <FromGitter> <dalanicolai> Anyway... of course there is google
[18:50:40] <FromGitter> <dalanicolai> Then when you know what is a window, frame, buffer etc., I generally often just use `SPC h d f` and see if I can guess some logical name
[18:51:35] <FromGitter> <dalanicolai> But I am not sure if I would have found the `initial-frame-alist` that way... so that I had googled once before already
[18:52:12] <FromGitter> <dalanicolai> If you are looking for a variable then use `SPC h d  v`
[18:52:41] <FromGitter> <dalanicolai> And of course you can use `M-x customize` to see if you can logically find things via customize
[18:53:23] <FromGitter> <dalanicolai> You will quickly get a gain intuition for where/how to search
[18:53:35] <FromGitter> <dalanicolai> But there are really many options
[18:53:43] <FromGitter> <dalanicolai> There are docs also of course
[18:53:53] <FromGitter> <dalanicolai> Emacs AND Spacemacs
[18:53:56] <FromGitter> <dalanicolai> etc.
[18:54:37] <FromGitter> <dalanicolai> And you can always ask here also
[18:55:16] <FromGitter> <dalanicolai> To see if you are lucky
[18:56:34] <FromGitter> <dalanicolai> Anyway, you should become very familiar with all commands under `SPC h` and especially `SPC h d`
[18:58:15] <FromGitter> <dalanicolai> And I would advise any beginner to read a few chapters of https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html
[18:59:01] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[19:00:34] *** Joins: henry40408 (~henry4040@175.181.155.165)
[19:10:16] <FromGitter> <kassick> I second all of Daniel's suggestions ;)
[19:11:47] <FromGitter> <kassick> I personally go with `describe-symbol` (`C-h o`) instead of describe-variable (`SPC h d v`) or describe-function (`SPC h d f`) , as when I'm fishing names I don't care if it's a function or variable
[19:13:00] <FromGitter> <kassick> Then I go to the source code (describe-{symbol,function,variable} will tell you where the thing is defined) and try to see if the original code helps me how to solve my problem
[19:14:08] <FromGitter> <kassick> if that fails, I grep for the symbol (or parts) in `~/.emacs/elpa/<emacs_version>/develop` -- some package probably does something similar to what I want
[19:16:38] <FromGitter> <rappie> thanks a lot guys for the detailed reply, this is extremely helpful :)
[19:18:27] <FromGitter> <kassick> Also, enable the `emacs-lisp`layer and set `   dotspacemacs-new-empty-buffer-major-mode` to  `'lisp-interaction-mode`  ‚èé  ‚èé This way you can test your stuff in the scratch buffer ‚èé e.g. type  ‚èé `(defun my/test-function (some-arg) (message "arg is %S" some-arg))` ... [https://gitter.im/syl20bnr/spacemacs?at=61eeca4abfe2f54b2e343d8a]
[19:20:13] <FromGitter> <kassick> [edit] set `dotspacemacs-scratch-mode` instead of ...-new-empty-buffer-...
[19:21:10] <FromGitter> <dalanicolai> > I personally go with `describe-symbol` (`C-h o`) instead of describe-variable (`SPC h d v`) or describe-function (`SPC h d f`) , as when I'm fishing names I don't care if it's a function or variable ‚èé  ‚èé Haha... I should follow my own advise... I totally forgot about that option... will use it from now on also
[19:23:51] <FromGitter> <dalanicolai> > Also, enable the `emacs-lisp`layer and set `      dotspacemacs-scratch-mode` to  `'lisp-interaction-mode`  ‚èé >  ‚èé > This way you can test your stuff in the scratch buffer ‚èé > e.g. type  ‚èé > `(defun my/test-function (some-arg) (message "arg is %S" some-arg))` ... [https://gitter.im/syl20bnr/spacemacs?at=61eecb8f2a210c38c1e4736e]
[19:26:38] <FromGitter> <rappie> thanks :) this is a lot to explore, so far i'm really liking the spacemacs/emacs way of doing things. it does take a lot more efford than for example VS Code
[19:30:54] <FromGitter> <kassick> there's a joke that says emacs is a fully fledged operating system lacking a good text editor ... so yeah, it does take a while and it can be quite overwhelming ;)
[19:32:25] <FromGitter> <rappie> hehe :)
[20:17:45] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[21:30:40] *** Quits: henry40408 (~henry4040@175.181.155.165) (Read error: Connection reset by peer)
[21:31:23] *** Joins: henry40408 (~henry4040@175.181.155.165)
[22:28:18] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[23:12:20] <FromGitter> <golanv:tchncs.de> When I wrap an expression using "SPC k w", the state changes from normal to...is that motion (purple)?  I'm doubting my perception of colors today...
[23:16:01] <FromGitter> <golanv:tchncs.de> Maybe pink....
