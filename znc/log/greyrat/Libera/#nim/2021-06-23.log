[05:25:56] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:52:14] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[05:52:29] *** Joins: mjsir911 (~bnc@user/mjsir911)
[06:16:46] <FromDiscord> <deech> Are source code filters a pretty stable feature? I don't see too many people using them, I find them convenient for certain things but I'd rather forego that if people think they won't be around long term.
[06:19:35] <FromDiscord> <Elegant Beef> They're a rather old part of the language i believe so and can do somethings nothing else can so they should be stable/supported
[06:33:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[06:34:22] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[06:47:31] <FromDiscord> <Bung> `Error: unhandled exception: Failed to parse '2021-06-11 15:04:29' with format 'HH:mm:ss '. Unexpected character: 2 [TimeParseError]`
[06:47:47] <FromDiscord> <Bung> my format is `YYYY-MM-dd' 'HH:mm:ss`
[06:49:22] <FromDiscord> <Bung> `echo parse("2021-06-11 15:04:29", "YYYY-MM-dd' 'HH:mm:ss")` when I run single line test , it works.
[06:49:47] <FromDiscord> <Bung> `parse(post.date, dtf)` while use variables it fails.
[06:51:17] <FromDiscord> <Elegant Beef> Do you really need that space?
[06:51:26] <FromDiscord> <Elegant Beef> Like i dont think it needs to be quoted
[06:53:21] <FromDiscord> <Bung> I read the times doc , space is not mentioned
[06:54:21] <FromDiscord> <Bung> with or without quote same results
[06:54:24] <FromDiscord> <Zachary Carter> in your format
[06:54:27] <FromDiscord> <Zachary Carter> sent a code paste, see https://play.nim-lang.org/#ix=3qOe
[06:54:31] <FromDiscord> <Zachary Carter> it doesn't work just with whitespace?
[06:54:41] <FromDiscord> <Zachary Carter> (edit) "whitespace?" => "whitespace in the format string?"
[06:55:29] <FromDiscord> <Bung> it works with my single line test quote or not quote.
[06:56:10] <FromDiscord> <Bung> sent a code paste, see https://play.nim-lang.org/#ix=3qOg
[06:56:38] <FromDiscord> <Bung> I can't image what cause my format turned to `'HH:mm:ss '`
[06:57:00] <FromDiscord> <Zachary Carter> maybe you need to escape the whitespace or something
[06:57:05] <FromDiscord> <Zachary Carter> hmm
[07:03:14] <FromDiscord> <Bung> no idea , how escape whitespace, also it is suddenly not works, it works couple days before.
[07:04:21] <FromDiscord> <Elegant Beef> Did you change nim versions?
[07:05:09] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:06:56] <FromDiscord> <Bung> always devel , 1.4.6 and 1.4.8 will throw `ld: symbol(s) not found for architecture x86_64`
[07:09:35] <FromDiscord> <Bung> oh, something might changed when call dll
[07:11:41] <FromDiscord> <Bung> yeah, it's my cached dll
[07:16:05] <FromDiscord> <Bung> it seems I cant really properly give a cache key to dll
[07:19:49] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:02:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I know you can import files in Nim, what about folders?
[08:03:48] <FromDiscord> <Elegant Beef> You mean import the entire folder of modules?
[08:04:04] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yeah
[08:04:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> say you have a folder foo. foo contains bar1.nim and bar2.nim
[08:04:48] <FromDiscord> <Elegant Beef> No standard way of doing that no, but a macro can do it
[08:04:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'd like to do something like import foo
[08:05:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> and then do foo.bar1.some\_func
[08:05:14] <FromDiscord> <@bracketmaster-5a708063d73408ce4> a macro?
[08:05:18] <FromDiscord> <Elegant Beef> https://github.com/GaryM-exkage/GDGW-Maverick-Bot/blob/master/src/nimcordbot/utils.nim#L3 well here is a reference to handle it
[08:05:26] <FromDiscord> <Elegant Beef> Yea a macro
[08:05:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> i see
[08:06:12] <FromDiscord> <Elegant Beef> That imports all folders in the `command` folder of that bot
[08:06:12] <FromDiscord> <Elegant Beef> That imports all files in the `command` folder of that bot
[08:31:13] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Write error: Connection reset by peer)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:40] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:40:15] <FromDiscord> <Rika> Well usually you have a file next to the folder that’s named the same which does exactly that
[08:40:29] <FromDiscord> <Rika> Except sometimes you don’t want exactly that so you change what the file exports
[08:40:46] <FromDiscord> <Rika> Which is why you don’t usually import folders
[08:42:56] <FromDiscord> <Avahe> I'm using the irc module (AsyncIrc) and need to process those events, but I'm also wanting to try reading data from another channel at the same time. Is there a way to process these at the same time? looks like Channel's tryRecv blocks, and so does asyncdispatch.poll()
[08:43:52] <FromDiscord> <Avahe> Can I just wrap tryRecv in an async proc and process it, or something similar?
[08:44:27] <FromDiscord> <Elegant Beef> tryRecv shouldnt block though afaik
[08:45:15] <FromDiscord> <Avahe> I think even if it doesn't, I'd be blocked while calling poll() for irc events to come in
[09:10:35] <FromDiscord> <Valor> trying to download nim again, and my computer wont let me extra nim
[09:10:42] <FromDiscord> <Valor> apparenlty its a secuirty risk???
[09:14:49] <FromDiscord> <Elegant Beef> Yea some AV will mark it as a virus but it's just a false positive
[09:15:55] <FromDiscord> <Valor> how do i turn it off
[09:16:43] <FromDiscord> <Elegant Beef> Should be a "keep file" or "ignore warning"
[09:18:27] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[10:42:35] <FromDiscord> <Avahe> Example here of something I'm hung up on https://play.nim-lang.org/#ix=3qOQ↵Trying to pass a callback to the irc module, but also include the object in the callback. Is there a better paradigm?
[10:44:33] <FromDiscord> <Avahe> Would be nice if the callback took a generic, then I could just pass it in..
[10:54:55] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[10:56:09] <FromDiscord> <p-i- (Pi)> sent a long message, see http://ix.io/3qOS
[10:56:22] <FromDiscord> <p-i- (Pi)> It doesn't seem to be class-based.
[10:56:59] <FromDiscord> <Elegant Beef> Yea it just uses a global variable
[10:57:34] <FromDiscord> <Elegant Beef> `initClient` sets up that `client` variable so all the procedures can be used
[10:58:32] <FromDiscord> <p-i- (Pi)> sent a code paste, see https://play.nim-lang.org/#ix=3qOU
[10:58:54] <FromDiscord> <Elegant Beef> It probably doesnt reload the library
[10:58:55] <FromDiscord> <p-i- (Pi)> Clumsy meh.
[10:59:06] <FromDiscord> <Elegant Beef> I dont know how python works
[10:59:31] <FromDiscord> <Rika> might be best to open an issue
[11:00:55] <FromDiscord> <p-i- (Pi)> This lib seems to be  a thin wrapper around some `httpClient` object.↵How come I see `import httpclient`  but then `cliente {.inject.} = createU HttpClient`. Different case.
[11:01:00] <FromDiscord> <p-i- (Pi)> Is that some nim convention.
[11:01:27] <FromDiscord> <p-i- (Pi)> And then 'newHttpClient'↵Confusing.
[11:01:54] <FromDiscord> <Rika> httpclient => module↵HttpClient => type↵newHttpClient => initialiser/constructor
[11:02:10] <FromDiscord> <p-i- (Pi)> The lib says it's not supported any more, but yes I'll try and file an issue.
[11:02:21] <FromDiscord> <p-i- (Pi)> Thanks.
[11:02:36] <FromDiscord> <Rika> its convention. i could say the same thing about python conventions like magic methods
[11:02:44] <FromDiscord> <Rika> (that its confusing)
[11:06:53] <FromDiscord> <p-i- (Pi)> No, I got it now. It's the implicit imports that confused me.
[11:06:57] <FromDiscord> <Elegant Beef> it's in a template, so it's being unhygenic
[11:07:03] <FromDiscord> <p-i- ([11:51:01] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:54:45] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:17:57] *** Quits: ozzz (~oz@46.49.41.80) (Ping timeout: 265 seconds)
[12:26:00] <FromDiscord> <mlokis> Is there a way to pass a null as query parameter when using prepared statement? When i pass `"null"` it gets escaped as string literal.
[12:33:26] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[12:39:35] <FromDiscord> <haxscramper> Positional parameters are initialized to null by default IIRC
[12:39:56] <FromDiscord> <haxscramper> So you just need to specify parameters using their number
[12:40:30] <FromDiscord> <haxscramper> `prepared.bindParam(8, "arg"); prepared.bindParam(10, "other arg");`
[12:43:29] *** Joins: max22- (~maxime@2a01cb088335980008e62f2b31365cd0.ipv6.abo.wanadoo.fr)
[12:45:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:56:26] <FromDiscord> <Araq> hmm I think I need a new CPU. are these affordable once again?
[12:57:22] <FromDiscord> <vindaar> last time I checked \~2 weeks ago it seemed to be the case. One could even get a 5950x for MSRP. Might be different depending on model of course
[12:57:51] <FromDiscord> <Rika> cpus didnt really rise i believe
[12:58:35] <FromDiscord> <vindaar> not as bad as GPUs, that's true. But at some point you were also paying a decent premium here in Germany
[12:59:27] <FromDiscord> <Rika> idk the situation in germany sorry xd hell i dont even know the situation in specific countries
[13:11:46] <FromDiscord> <Varriount> Hm, this is interesting: https://blog.adacore.com/going-beyond-ada-2022↵Especially the "Additional `When` constructs"
[13:16:07] <FromDiscord> <Varriount> I'm still skeptical of the pattern-matching craze going on in various languages though. The usefulness of pattern matching seems very dependent on the language.
[13:32:35] <FromDiscord> <haxscramper> It is immediately useful and simple to understand
[13:33:52] <FromDiscord> <haxscramper> But in languages that don't have any kind of sum type this is less useful
[13:43:15] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[13:55:58] *** Joins: asd (~noname@user/asd)
[14:03:18] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:04:22] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:15:44] *** Quits: asd (~noname@user/asd) (Ping timeout: 252 seconds)
[14:17:39] *** Joins: asd (~noname@user/asd)
[14:19:33] <FromDiscord> <Varriount> Hm. Ada syntax is interesting. I like the way parameters are defined. I could do without the Capitals_And_Underscores style though. That just looks painful to type.
[14:23:32] *** Quits: asd (~noname@user/asd) (Ping timeout: 268 seconds)
[14:25:07] *** Joins: asd (~noname@user/asd)
[14:30:10] <FromDiscord> <Rika> im already so lazy that i dont capitalise or underscore and you want me to do BOTH?!? (i am joking)
[14:36:31] <FromDiscord> <Araq> Ada is nice but quite limited. Back then when I used both Delphi was better.
[14:57:30] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[15:33:07] *** Joins: rockcavera (~rc@192.12.113.217)
[15:33:07] *** Quits: rockcavera (~rc@192.12.113.217) (Changing host)
[15:33:07] *** Joins: rockcavera (~rc@user/rockcavera)
[15:42:25] <FromDiscord> <p-i- (Pi)> However if I time it, I see that the second task is waiting upon completion of the first to initiate
[15:42:26] <FromDiscord> <p-i- (Pi)> I'm trying to parallelize HTTP requests using Python  async, over this nim lib https://github.com/juancarlospaco/faster-than-requests/blob/master/faster_than_requests/faster_than_requests.nim
[15:42:29] <FromDiscord> <p-i- (Pi)> Can anyone see why this nim code won't parallelize?
[15:51:34] <FromDiscord> <p-i- (Pi)> I found one relevant issue\: [juancarlospaco/faster-than-requests#167](https://github.com/juancarlospaco/faster-than-requests/issues/167)
[15:54:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:07:47] *** Joins: luis_ (~luis@2804:d47:ad8:8500:8d26:c7ca:ef98:181)
[16:13:32] <FromDiscord> <p-i- (Pi)> To ask more productive question, can anyone see a way to make it play with async python?
[16:19:50] *** Quits: max22- (~maxime@2a01cb088335980008e62f2b31365cd0.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:24:24] *** Joins: SebastianM (~seba@user/sebastianm)
[16:24:26] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[16:25:21] *** Joins: Torro (Torro@gateway/vpn/protonvpn/torro)
[16:27:20] <FromDiscord> <Rika> async in nim and async in python are two different systems that would need a tonne of work to make work together
[16:27:45] <FromDiscord> <Rika> ...is my guess
[16:28:14] <FromDiscord> <Rika> in truth i do not know how easy it is to work with async python externally
[16:28:36] <FromDiscord> <Rika> but i assume it would be difficult because it is difficult for other languages to do
[16:30:43] <FromDiscord> <p-i- (Pi)> I'm getting segfaults trying to make http requests on 2 simultaneous threads
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:41:01] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[16:43:05] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:55:32] *** Joins: arkurious (~arkurious@user/arkurious)
[17:00:13] <FromDiscord> <dom96> In reply to @Avahe "I'm using the irc": What are you using channels for here? Async only should be all you need
[17:01:03] <FromDiscord> <dom96> In reply to @p-i- (Pi) "I'm getting segfaults trying": @p-i- (Pi) what is your goal? Using Python async and Nim’s in the same process?
[17:07:29] *** Quits: luis_ (~luis@2804:d47:ad8:8500:8d26:c7ca:ef98:181) (Quit: luis_)
[17:07:49] *** Joins: luis_ (~luis@2804:d47:ad8:8500:8d26:c7ca:ef98:181)
[17:09:09] *** Joins: ozzz (~oz@46.49.41.80)
[17:11:14] <ozzz> Hello all! Is here anybody who uses nigui? I want to integrate image in binary, but seems nigui only can load it from file
[17:12:26] <FromDiscord> <Araq> use your platforms "resource file" mechanism please
[17:14:23] <ozzz> Araq, thanks, possible solution. 
[17:26:18] <FromDiscord> <dom96> You can also staticRead the file. You might need to patch nigui to accept image data from memory rather than file.
[17:33:14] <PMunch> Or write the image into temporary storage when your program runs and let nigui read it from there
[17:33:21] <PMunch> Which is slightly hacky, but should work
[17:56:47] *** Joins: fputs (~fputs@67.59.83.166)
[17:58:00] <FromDiscord> <Avahe> @dom96 I was planning on having each client run on a different thread but I could just use async
[18:04:26] <PMunch> Woohoo, schedule for NimConf is live: https://conf.nim-lang.org/
[18:07:36] *** Quits: luis_ (~luis@2804:d47:ad8:8500:8d26:c7ca:ef98:181) (Quit: luis_)
[18:11:26] <FromDiscord> <zetashift> and they are all amazing subjects
[18:12:01] <PMunch> Curious about the "Zen of Nim" talk by Araq, all the others are pretty easy to guess what are about
[18:12:36] <FromDiscord> <zetashift> yeah same
[18:13:00] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Read error: Connection reset by peer)
[18:14:02] <FromDiscord> <zetashift> Zen of Nim: Or how I stopped worrying about style insensitivity
[18:14:29] <FromDiscord> <dom96> In reply to @Avahe "<@132595483838251008> I was planning": Why? Async already essentially gives you lightweight threads. Using system threads is just asking for pain 🙂
[18:14:33] <FromDiscord> <Araq> it's an introduction into Nim as much as it's about the philosophy of the language's design
[18:15:54] <FromDiscord> <zetashift> exciting!
[18:16:03] <FromDiscord> <dom96> So many talks 😮
[18:16:43] <FromDiscord> <zetashift> Next year maybe a 2 day conf 😉
[18:17:03] <FromDiscord> <Araq> we thought about that, yes
[18:17:14] <FromDiscord> <dom96> Yay. Norm talk
[18:17:19] <FromDiscord> <dom96> I love that library 🙂
[18:27:53] <PMunch> That's kinda what I expected, looking forward to it :)
[18:29:00] <FromDiscord> <konsumlamm> i feel like case insensitivity doesn't even make a difference, people just use camelCase all the time
[18:29:05] <FromDiscord> <p-i- (Pi)> @\_discord\_132595483838251008\:t2bot.io I'm trying to get the fastest possible http POST, as measured by packet arrival time.
[18:29:06] <FromDiscord> <p-i- (Pi)> [juancarlospaco/faster-than-requests#164](https://github.com/juancarlospaco/faster-than-requests/issues/164)↵^ This issue suggests ther e may be a fault within nim's httpClient implementation that procludes multithreading.
[18:29:07] <FromDiscord> <planetis> nice cant wait
[18:29:07] <FromDiscord> <p-i- (Pi)> [juancarlospaco/faster-than-requests#164](https://github.com/juancarlospaco/faster-than-requests/issues/164)↵^ This issue suggests there may be a fault within nim's httpClient implementation that procludes multithreading.
[18:32:18] <FromDiscord> <zetashift> In reply to @konsumlamm "i feel like case": It doesn't make a difference, but reddit/HN/lobster sure like to bring it up  every damn time Nim is being discussed
[18:33:09] <FromDiscord> <konsumlamm> ye, but nim people also like to advertise it as "everyone can use their own style", but i don't think that's really the case in practice either
[18:33:20] <FromDiscord> <konsumlamm> it would have been easier to just leave it out
[18:39:43] <FromDiscord> <dom96> I think it is the case in practice more than people think
[18:39:56] <FromDiscord> <dom96> in particular when it comes to C wrappers
[18:41:41] <PMunch> konsumlamm, some people use snake case, I tend to when I'm wrapping C code
[18:41:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:42:00] <PMunch> So the names are 1:1 with the C sources, and then I can use camelCase when I write Nim code
[18:42:45] <FromDiscord> <Rika> In reply to @konsumlamm "ye, but nim people": a lot of the libraries ive seen use snake or camel so im p sure its the case in practice
[18:43:34] <PMunch> Oh well, gotta go
[18:43:35] *** Quits: PMunch (~PMunch@178.74.36.198) (Quit: leaving)
[19:03:37] <FromDiscord> <planetis> i import a wrapped C lib and use camel case
[19:05:48] <FromDiscord> <planetis> what breaks it is when people use MyFoo for function names
[19:08:04] <FromDiscord> <zetashift> Raylibbbbbb
[19:08:25] <FromDiscord> <Avahe> In reply to @dom96 "Why? Async already essentially": Okay you've convinced me :P
[19:11:12] <FromDiscord> <planetis> i mean it breaks my editor, but you can use .importc\: "MyFoo" and be done with it
[19:12:55] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[19:21:59] *** Joins: max22- (~maxime@2a01cb0883359800ebab76f52a3733c3.ipv6.abo.wanadoo.fr)
[19:26:21] *** Quits: Torro (Torro@gateway/vpn/protonvpn/torro) (Quit: leaving)
[19:43:13] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[19:48:56] <ozzz> dom96: yeah, I used tmp file variant, thanks.
[19:51:38] <ozzz> patching nigui might be tricky, I need binary for linux and win, and not experienced enough with gdiplus to go deep there
[19:53:54] *** Joins: mib_y6ixso (~97f9adbd@ircip2.mibbit.com)
[20:02:55] *** Quits: mib_y6ixso (~97f9adbd@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[20:09:57] <FromDiscord> <p-i- (Pi)> sent a code paste, see https://play.nim-lang.org/#ix=3qT6
[20:11:38] <FromDiscord> <Alea> can anyone tell me what the default state of this block in nim.cfg is? I think I edited it and broke the compiler
[20:11:41] <FromDiscord> <Alea>  https://media.discordapp.net/attachments/371759389889003532/857284278907043870/unknown.png
[20:15:02] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/3b1aabdcffafbbf37ad02f013f754f67dfe2461c/config/nim.cfg#L46
[20:15:12] <FromDiscord> <haxscramper> Exactly as you linked
[20:15:17] <FromDiscord> <Alea> thanks
[20:15:48] <FromDiscord> <Alea> sent a code paste, see https://play.nim-lang.org/#ix=3qT7
[20:28:17] <FromDiscord> <dom96> In reply to @Avahe "Okay you've convinced me": Great 🙂↵Happy to help if you get into any problems 🙂
[20:34:13] <FromDiscord> <j.dupaon> hi all, will the conf be available on replay after ?
[20:36:37] <FromDiscord> <dom96> Yep
[20:37:16] <FromDiscord> <dom96> Do join if you can though. The live chat is fun
[20:46:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:50:46] <FromDiscord> <j.dupaon> I imagine. 🙂
[20:51:00] <FromDiscord> <j.dupaon> 11 UTC is 1 in the morning here
[21:04:14] <FromDiscord> <dom96> Ouch. Maybe you can wake up early or sleep late 🙂
[21:14:14] <FromDiscord> <j.dupaon> I'll probably be able to see the beginning but I'm not sure to be back after ... "lunch"
[21:24:47] <FromDiscord> <Alea> sent a code paste, see https://play.nim-lang.org/#ix=3qTD
[21:25:04] <FromDiscord> <Alea> I have no idea why only those 3 are unquotted
[21:26:03] <FromDiscord> <Alea> (edit) "https://play.nim-lang.org/#ix=3qTD" => "https://paste.rs/GdB"
[21:29:19] <Clonkk[m]> How the fuck can getAst be ambigous oO ?
[21:31:33] <FromDiscord> <zetashift> you define getAst somewhere in the same scope? 😮
[21:31:57] <Clonkk[m]> Well no
[21:31:59] <Clonkk[m]> I'm not an animal
[21:32:24] <Clonkk[m]> Ah got it
[21:32:34] <Clonkk[m]> It's the proc getAST is called on
[21:41:29] *** Joins: fputs (~fputs@67.59.83.166)
[21:43:33] <FromDiscord> <Avahe> In reply to @dom96 "Great 🙂 Happy to": Thanks 🙂 will be a few hours before I can work on it again
[21:49:49] <FromDiscord> <zetashift> Is there a way to get the `Windows` folder no matter what the drive letter is?
[21:50:19] *** Joins: springb0k (~springb0k@96.77.120.193)
[21:52:43] <FromDiscord> <dom96> sounds like a question for stackoverflow
[21:55:23] <FromDiscord> <zetashift> it really does
[21:55:47] <FromDiscord> <zetashift> or I could be a baller and just hardcode it with "C" and move on with my life
[22:03:36] <FromDiscord> <dom96> or you could ask the user: "Hey, where is your Windows folder?" 😄
[22:09:42] <FromDiscord> <pietroppeter> informed by a stackoverflow answer I made a search in winim and this looks promising (although no clue on how you use it :)): https://github.com/khchen/winim/blob/b7b32603f4ef672bc34405bc6200e8aab2c366b1/winim/inc/winbase.nim#L2179
[22:18:20] <FromDiscord> <zetashift> My google search didn't even get me close to such an answer :(, all I got was Nim installation stuff
[22:18:23] <FromDiscord> <zetashift> thanks!
[22:25:50] *** Joins: Ashu (~ashwin@45.116.231.3)
[22:32:33] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:32:56] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:35:11] <FromDiscord> <deech> Shouldn't line 12 here be a compile error? I compile it with `--gc:orc`: https://play.nim-lang.org/#ix=3qU8
[22:41:05] <FromDiscord> <pietroppeter> In reply to @zetashift "My google search didn't": Yeah Google did not give me results so I searched in SO where I found a lowly ranked result which mentioned the fact that there is a windows api for that so I had the idea to search in winim
[22:42:13] <FromDiscord> <zetashift> I'll remember that tactic, good one
[22:53:52] <FromDiscord> <clyybber> In reply to @deech "Shouldn't line 12 here": No, it's defined behaviour, move will zero out it's argument
[22:57:07] *** Quits: fputs (~fputs@67.59.83.166) (Remote host closed the connection)
[22:57:46] <FromDiscord> <deech> In reply to @Clyybber "No, it's defined behaviour,": I see. Aside from `destructors.rst` is there any documentation on how `arc` works?
[22:59:55] <FromDiscord> <clyybber> That's pretty much all of it
[23:01:20] <FromDiscord> <deech> For example, why is a value that has been `move`ed still accessible after the move?
[23:05:05] *** Joins: SebastianM (~seba@user/sebastianm)
[23:08:34] <FromDiscord> <clyybber> sent a code paste, see https://play.nim-lang.org/#ix=3qUl
[23:09:16] <FromDiscord> <clyybber> now if the i in the second line can be proven to be the same i as in the third line, then the compiler could in theory optimize it to a move automatically
[23:09:32] <FromDiscord> <clyybber> but are situations where only the developer knows about that
[23:11:03] *** Joins: fputs (~fputs@67.59.83.166)
[23:12:38] <FromDiscord> <deech> In reply to @Clyybber "but are situations where": Ah interesting. A nice feature might be to turn off auto defaulting, eg. an object can't be accessed unless it is explicitly initialized. Then reading from a zero'ed out value would be an error.
[23:13:23] <FromDiscord> <clyybber> Yeah, but this couldn't generally catch that
[23:14:34] <FromDiscord> <clyybber> sent a code paste, see https://paste.rs/nDW
[23:14:52] <FromDiscord> <clyybber> In the previous example b[i] = c[i] is a kind of explicit "intializtation"
[23:15:06] <FromDiscord> <clyybber> but preventing reads of b[i] if it might have been moved would make sense
[23:15:28] <FromDiscord> <clyybber> but move is explicit and allows you to override the compilers analysis essentially
[23:16:51] <FromDiscord> <clyybber> sent a code paste, see https://play.nim-lang.org/#ix=3qUu
[23:17:10] <FromDiscord> <clyybber> But this should be enforced for {.requiresInit.} types but I believe it isn't currently
[23:17:35] <FromDiscord> <clyybber> But generally I think having `move` have clearing semantics is the best design
[23:19:51] *** Joins: Sebasti32 (~seba@178.159.171.114)
[23:19:52] *** Quits: SebastianM (~seba@user/sebastianm) (Read error: Connection reset by peer)
[23:21:24] <FromDiscord> <deech> In reply to @Clyybber "But generally I think": Makes sense! Thanks for explaining.
[23:21:47] <FromDiscord> <clyybber> np :)
[23:22:24] <FromDiscord> <carpal> how much money did the nim project received in donations?
[23:25:20] <FromDiscord> <haxscramper> https://nim-lang.org/donate.html has links to respective donation pages, some of which show total amount
[23:27:57] *** Quits: Sebasti32 (~seba@178.159.171.114) (Quit: Bye)
[23:28:20] *** Joins: SebastianM (~seba@user/sebastianm)
[23:47:51] <FromDiscord> <Hi02Hi> is a move an optimized copy b/c there is no need to call a destructor afterwards?
[23:51:44] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[23:58:59] <FromDiscord> <clyybber> yep
