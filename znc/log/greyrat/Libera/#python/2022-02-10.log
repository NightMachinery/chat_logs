[00:00:12] <hardwire> Head scratcher.. is there a handy way to check for both Sequence and Iterable with a defined inner type without Union? `Union[Sequence[str], Iterable[str]]`
[00:00:17] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[00:00:36] <toma> SnoopJ: thanks
[00:00:44] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[00:01:02] <hardwire> I suppose Iterable matches sequence via collection.. nm
[00:01:06] <SnoopJ> hardwire, do you need to? Sequence is always Iterable
[00:01:19] <hardwire> yeh.. just caught that.
[00:02:02] <hardwire> python typing is a world unto itself.
[00:02:05] *** Joins: fikran (~fikran@user/fikran)
[00:02:21] *** Quits: Goblins (~mz@12.231.191.170) (Quit: Leaving.)
[00:02:27] <sco1> https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes may be helpful
[00:04:04] <jinsun> toma: the syntax is fine but ints are allowed anywhere floats are allowed, so Uniion[int, float] can be replaced with float
[00:04:28] <jinsun> s/Uniion/Union
[00:04:40] <toma> thanks jinsun.
[00:05:46] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[00:06:11] *** Joins: Goblins (~mz@12.231.191.170)
[00:06:54] <SnoopJ> TIL
[00:07:17] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[00:07:17] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[00:07:17] *** Joins: JordiGH (~jordi@user/jordigh)
[00:08:22] *** Quits: ThePhilgrim (~thephilgr@151.40.115.120) ()
[00:08:51] *** Joins: sidro (~sidro@86.126.115.212)
[00:09:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[00:10:08] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[00:10:23] *** Joins: sdasdasdwqd (~sdasdasdw@2804:d4b:97fe:0:c594:ea08:ac77:8431)
[00:10:44] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:11:36] <cliluw> Where is the PEP that shipped with Python 3 that changed the "int" type to be arbitrarily long instead of just 32-bits?
[00:12:18] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:12:46] <SnoopJ> cliluw, are you looking for PEP 237? https://www.python.org/dev/peps/pep-0237/
[00:13:15] *** Quits: nomic (~nomic@185.217.117.245) (Remote host closed the connection)
[00:13:18] <jfcaron> Yeah I just found 237
[00:13:28] <jfcaron> It talks about bignum
[00:13:40] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[00:13:41] *** Quits: sdasdasdwqd (~sdasdasdw@2804:d4b:97fe:0:c594:ea08:ac77:8431) (Client Quit)
[00:14:01] <SnoopJ> I don't know if there is a PEP for doing away with the either/or behavior that PEP introduces, though. I thought that was just a thing 3.0 introduced
[00:14:38] <jfcaron> 237 says it went with just unifying long & short, it didn't go with the bignum option.
[00:15:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[00:15:36] <cliluw> SnoopJ: Yes, that's exactly what I was looking for. Thanks.
[00:15:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:16:15] *** Joins: sidro (~sidro@86.126.115.212)
[00:16:18] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[00:16:24] <toma> Is having a 'while True:' for an unknown number of inputs a bad idea? Is there a better way?
[00:17:13] *** Joins: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com)
[00:17:19] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f071:8312:202e:2e1e)
[00:17:26] *** Quits: sidro (~sidro@86.126.115.212) (Client Quit)
[00:17:40] <SnoopJ> toma, it depends on the particulars. A `while True:` isn't verboten, but you should be careful to work out whether the loop terminates when it's supposed to.
[00:17:55] <toma> SnoopJ: thanks.
[00:18:12] *** Joins: sidro (~sidro@86.126.115.212)
[00:18:18] <SnoopJ> `for thing in inputs:` might make sense, depending on the context
[00:19:31] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:ada2:d851:435b:28b1) (Ping timeout: 245 seconds)
[00:20:37] *** Joins: matsaman (~matsaman@user/matsaman)
[00:20:59] <jinsun> yeah for loops can do unknown number of inputs too
[00:21:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:21:35] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[00:22:21] *** Joins: dme86 (~dan@user/dan86)
[00:22:35] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[00:23:00] <toma> SnoopJ: I'll try to figure out how to use a for loop. This was the code I was doing. I was also wondering the way I do the break inside the exception, is that okay or should I be taking the input as a string, checking if it's empty, then converting it into a float... I like my way but I'd be happier to know that it's "good"
[00:23:06] <toma> https://bpa.st/SSHA
[00:23:36] *** Joins: Nightelf (~Nightelf@156.213.125.175)
[00:24:37] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[00:25:00] <SnoopJ> toma, breaking from inside the exception handler is fine, and using `while True:` with input() like this is fairly idiomatic (since you don't know how many iterations the user will produce)
[00:25:17] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:25:23] <toma> SnoopJ: thanks. I appreciate the guidance.
[00:25:51] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:26:42] *** Quits: luva (~luva@45.141.152.61) (Quit: Byebye)
[00:27:24] *** Joins: luva (~luva@45.141.152.61)
[00:27:49] *** Joins: vsantana1 (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[00:27:51] *** Quits: blingrang__ (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[00:29:09] *** Quits: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[00:29:09] *** vsantana1 is now known as vsantana
[00:31:04] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[00:31:13] *** Joins: jay-m126_ (~jay-m@154.72.162.191)
[00:31:17] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[00:31:39] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[00:32:25] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[00:32:37] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:185e:847f:16f8:7aa7) (Ping timeout: 250 seconds)
[00:32:51] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[00:32:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[00:33:29] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[00:33:34] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:33:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[00:34:22] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:34:24] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[00:36:04] *** Quits: sidro (~sidro@86.126.115.212) (Remote host closed the connection)
[00:36:19] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[00:36:31] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:36:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[00:37:15] *** Joins: humberto1 (~humbertow@189.191.67.202)
[00:37:16] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[00:37:29] *** Quits: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca) (Quit: Client closed)
[00:37:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:37:41] *** Joins: pycurious (~Adium@user/pycurious)
[00:37:44] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[00:38:14] *** Joins: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451)
[00:38:56] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 250 seconds)
[00:39:49] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[00:40:26] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:40:26] *** Joins: Barones (~Barones@user/Barones)
[00:41:02] <toma> thanks again for the help. have a great evening.
[00:41:04] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487lg3g4utvpjhp.ipv6.telus.net) (Quit: Leaving)
[00:42:03] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:42:18] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:42:26] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Client Quit)
[00:43:19] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:43:57] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 240 seconds)
[00:45:36] *** Nnnavd is now known as Nnavd
[00:46:00] *** Joins: ice99 (~ice9@user/ice9)
[00:46:43] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[00:46:52] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:47:02] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a0fc:a799:c64b:23c5)
[00:47:15] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[00:47:21] *** Quits: magla (~gelignite@55d46452.access.ecotel.net) (Quit: Stay safe!)
[00:47:27] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47)
[00:47:43] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-8c2b-39c2-5b67-a4ff.res6.spectrum.com) (Quit: Client closed)
[00:50:02] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 240 seconds)
[00:50:22] *** humberto1 is now known as humbertowoody
[00:51:02] *** Joins: blei (~blei@209.201.38.106)
[00:51:25] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:a0fc:a799:c64b:23c5) (Ping timeout: 240 seconds)
[00:52:06] *** Joins: SuperLag (~akulbe@user/superlag)
[00:52:10] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[00:52:17] *** Quits: blei (~blei@209.201.38.106) (Client Quit)
[00:52:21] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[00:52:51] *** Joins: vsantana1 (~Thunderbi@fttx-177136148223.usr.predialnet.com.br)
[00:53:06] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:53:13] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[00:53:13] *** vsantana1 is now known as vsantana
[00:53:33] *** Joins: pycurious (~Adium@user/pycurious)
[00:56:05] *** Joins: blingrang__ (~blingrang@user/blingrang)
[00:56:22] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 260 seconds)
[00:57:22] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[00:57:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[00:58:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[00:59:07] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:59:09] *** Joins: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[00:59:49] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[01:01:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[01:01:27] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 250 seconds)
[01:02:25] *** Joins: Guddu (~Guddu@59.95.233.252)
[01:02:57] <Guddu> Why does gunicorn not show up in pip freeze despite it being installed?
[01:03:09] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[01:03:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:18] <SnoopJ> Guddu, are you sure you're invoking the same pip in both cases?
[01:04:23] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:05:16] <SnoopJ> or perhaps you didn't use pip to install it at all, I bet that could happen if you used a system package like the ones Ubuntu provides.
[01:05:33] *** Quits: andreasbuhr (~quassel@p549dbbae.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:05:46] *** Joins: els12 (~els12@192.48.10.226)
[01:06:06] <Guddu> SnoopJ, Its the latter indeed in my case.
[01:06:11] <Guddu> Thanks for the guidance.
[01:06:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[01:07:15] <SnoopJ> Guddu, in that case it'll only show up in the system Python's pip (or pip in a venv that shares that site) but it should still show up in that case
[01:07:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:08:11] <causasui> can subprocess run a command and then give interactive control to the user?
[01:08:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:08:30] *** Quits: blingrang__ (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[01:10:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:11:14] *** Joins: pycurious (~Adium@user/pycurious)
[01:12:00] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:12:39] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:12:42] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[01:12:47] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 256 seconds)
[01:13:08] *** Joins: Bakunin (~maplefing@user/lindis)
[01:13:26] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[01:13:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[01:14:27] *** Joins: cliluw (~cliluw@47.147.73.223)
[01:14:57] *** Joins: Warped (~Warped@user/warped)
[01:15:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[01:16:06] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[01:16:11] *** Quits: davixx (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Ping timeout: 256 seconds)
[01:17:34] *** Joins: zamanf (~dev@213.133.91.246)
[01:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:17:37] *** Joins: qlixed (~qlixed@181.44.129.13)
[01:18:52] <exarkun> causasui: You mean `subprocess` the stdlib module?
[01:18:59] <Forsaken87_> causasui: I assume that is what I am struggling with right now:  result = subprocess.run([executable, "param1", "param2"], shell=True)
[01:19:38] <Forsaken87_> Same exact topic, if i run said command it will start the executable, but the extra parameters are missing. any idea why?
[01:19:55] <exarkun> You accidentally passed `shell=True`
[01:19:58] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[01:20:12] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:20:18] <exarkun> Pass `shell=False` (or just use the default) instead
[01:20:29] <exarkun> not really the same as causasui's question though
[01:21:01] <exarkun> causasui: Pass your pty to the child process and whatever is interacting with the pty can interact with the child process.
[01:21:12] <Forsaken87_> That was no accident. As far as I read it "shell=True" automatically passes through at least stdout, which is what I desire
[01:21:15] <exarkun> Of course, make sure you're not interacting with the pty yourself at the same time or it gets confusing.
[01:21:17] *** Quits: jay-m126 (~jay-m@154.72.162.191) (Ping timeout: 256 seconds)
[01:21:17] *** Quits: jay-m126_ (~jay-m@154.72.162.191) (Ping timeout: 240 seconds)
[01:21:33] <exarkun> Forsaken87_: That is not what `shell=True` controls.
[01:22:19] <exarkun> Forsaken87_: You want the child process's stdout to appear in the parent process's stdout?  That is the default for `subprocess.run`.
[01:22:59] <exarkun> https://gist.github.com/exarkun/9bd8e9f5c59a01c7f7b010318bf74187
[01:23:02] <Forsaken87_> exarkun: yes. ideally I want to connect stdin, stdout and stderr to the parents equivalent until the process has exited
[01:23:22] *** Joins: onichomp (~onichomp@2806:264:4408:870:cd4e:849e:511f:4674)
[01:24:00] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[01:24:34] <exarkun> Did you see that subprocess.run passes most of its arguments on to subprocess.Popen?
[01:24:35] <dante-as> Hi guys, I would need to copy row df.loc[i] to the last column of df.loc[i_list[0]]. How can I do that?
[01:25:07] <dante-as> to the next after last column *
[01:26:21] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:26:22] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[01:26:33] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[01:26:38] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-71.range86-168.btcentralplus.com) (Quit: Leaving.)
[01:27:03] <dante-as> Hi guys, I would need to copy row df.loc[i] to the next after last column of df.loc[i_list[0]]. How can I do that?
[01:27:16] <dante-as> my internet dropped and I don't know if it was posted the question
[01:28:34] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[01:29:14] <SnoopJ> causasui, yes, when the streams are set to None, which is the default behavior (try e.g. `subprocess.run(["cat"])`)
[01:29:37] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 240 seconds)
[01:30:30] *** Joins: zmotaj (~zmotaj@86.61.81.185)
[01:30:30] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[01:30:30] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[01:31:08] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[01:31:12] <SnoopJ> Forsaken87_, if you use shell=True, ^ this default behavior will give the subprocess the handles from the newly-created shell, not your program. You can pass `stdin=sys.stdin, stdout=sys.stdout` though. Not sure what you mean about the extra arguments, it would help to see the code.
[01:31:28] <Forsaken87_> exarkun: Uhm, yes. But I don't get what that is supposed to tell me. Simply calling subprocess.run(...) without the shell=True does what I need, thanks. The defaults "stdin=None", "stdout=None" were just not intuitive to me ;)
[01:32:03] *** Quits: p-i- (~Ohmu@183.89.35.200) (Ping timeout: 256 seconds)
[01:32:14] <exarkun> don't worry, it's not meant to be intuitive, it's meant to be software development
[01:32:37] <Forsaken87_> SnoopJ: It already passes stdout through to the shell I am running the python script from as is, despite the default "stdout=None".
[01:32:58] *** Joins: abf (~abf@user/abf)
[01:33:40] <SnoopJ> hmm, then I have completely lost track of what your question is.
[01:33:45] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[01:34:44] <hogarius> exarkun:
[01:34:57] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[01:35:28] *** Quits: serh (serh@nemern.icu) (Read error: Connection reset by peer)
[01:35:48] <Forsaken87_> SnoopJ: The solution is: result = subprocess.run([executable, "param1", "param2"])   The task was to run an executable with parameters while passing through stdout (and ideally also stderr and stdin)
[01:36:19] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 250 seconds)
[01:36:20] <Forsaken87_> Not sure if stderr and stdin are passed through, but for my case that is not important anyway.
[01:36:28] *** Joins: c4017w (~c4017@209.52.68.8)
[01:36:31] <SnoopJ> That's the default behavior, yea
[01:36:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:36:52] <SnoopJ> I guess it does this for shell=True as well, sounds like you were snagging on one of the quirks of that mode
[01:37:23] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:37:40] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:39:11] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:39:25] <Forsaken87_> I think I get now what shell=True does. Not what I expected at first ;) I'd assume it handles the "args" parameter as if it was typed into the shell (with the advantage of pipes, wildcards etc. working)
[01:40:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:40:30] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[01:41:19] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[01:41:31] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47) (Ping timeout: 250 seconds)
[01:41:34] <exarkun> instead, it actually runs a shell and makes your program vulnerable to all kinds of injection attacks
[01:42:13] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[01:42:30] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47)
[01:42:52] <Lando-SpacePimp> she sells seashells by seashore
[01:44:21] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Quit: = "bye bye")
[01:44:34] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ff:95b4:ed73:4847:2d48:d42e)
[01:46:36] <Guest1778> I can't get WSL to actually work for me at all.
[01:47:24] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Ping timeout: 250 seconds)
[01:47:49] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:8c82:778f:267:bf47) (Ping timeout: 250 seconds)
[01:49:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[01:49:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[01:49:57] *** Joins: hir0masa (~hiro@27-136-121-134.rev.home.ne.jp)
[01:50:33] *** Parts: hir0masa (~hiro@27-136-121-134.rev.home.ne.jp) ()
[01:51:15] *** Joins: hir0masa (~hiro@27-136-121-134.rev.home.ne.jp)
[01:51:40] <kosh> Guest1778, so what is the problem?
[01:52:01] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 245 seconds)
[01:52:08] *** Quits: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br) (Quit: vsantana)
[01:52:27] *** Quits: hir0masa (~hiro@27-136-121-134.rev.home.ne.jp) (Client Quit)
[01:52:28] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.4)
[01:52:50] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[01:52:58] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:53:22] *** Joins: newpy (~newpy@2601:280:4381:1390:f398:df7b:7096:9f5d)
[01:53:41] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[01:54:41] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.3)
[01:55:07] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ff:95b4:ed73:4847:2d48:d42e) (Quit: Leaving)
[01:56:09] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[01:56:30] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[01:56:55] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-c957-9c20-17fd-9646.res6.spectrum.com) (Ping timeout: 250 seconds)
[01:58:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:bb54:f69c:5ce0:5722) (Quit: Leaving)
[01:59:20] *** Quits: cosimone (~user@93-34-133-254.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:59:54] *** Joins: humberto1 (~humbertow@148.204.6.250)
[01:59:57] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[02:00:17] *** Quits: humbertowoody (~humbertow@189.191.67.202) (Ping timeout: 240 seconds)
[02:01:22] *** Joins: chives (~chives@64.130.100.177)
[02:01:41] *** Joins: d1cor (~diego@179.63.242.122)
[02:01:42] <chives> This irc server has everything
[02:01:58] *** Joins: bluedust_ (~bluedust@185.248.85.10)
[02:02:10] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[02:02:25] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-389f-e35a-ca14-7649.res6.spectrum.com)
[02:03:26] *** Quits: els12 (~els12@192.48.10.226) (Remote host closed the connection)
[02:03:45] *** Joins: els12 (~els12@192.48.10.226)
[02:04:07] *** Quits: Goblins (~mz@12.231.191.170) (Ping timeout: 256 seconds)
[02:04:12] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:04:13] *** Quits: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c) (Quit: WeeChat 3.4)
[02:04:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[02:04:31] <Guest1778> kosh after waiting years for trying to have sage install properly via conda, it fails. Then I tried another way and it also failed
[02:04:34] *** Joins: Goblins (~mz@12.231.191.170)
[02:04:42] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:05:29] *** Quits: bluedust (~bluedust@59.89.220.95) (Ping timeout: 256 seconds)
[02:05:58] <grym>  /i
[02:06:23] <Guest1778> this is from within WSL I should note
[02:07:11] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 256 seconds)
[02:07:47] <SnoopJ> Guest1778, post the complete error report
[02:08:19] <SnoopJ> or I guess reports, since you're talking about two separate failures there
[02:08:49] *** Joins: cliluw (~cliluw@47.147.73.223)
[02:09:20] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:09:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:09:29] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 250 seconds)
[02:10:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:11:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Quit: Leaving)
[02:11:14] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[02:11:26] *** Joins: fikran (~fikran@user/fikran)
[02:11:54] <dlam> what's the trick to put a 'pdb.set_trace()' when a print() is called?   I'm trying to find some hidden print producing mega spam!
[02:12:03] <dlam> ...
[02:12:20] <dlam>   
[02:12:57] *** Joins: Pickchea (~private@user/pickchea)
[02:13:00] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:13:08] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[02:13:14] <SnoopJ> dlam, you probably want to replace the `print` function with your own function that does this
[02:13:37] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[02:13:45] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[02:14:14] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:14:15] <Guest1778> SnoopJ I am not sure how to access the error messages. After I tried installing Sage via conda forge it did the Found Conflicts thing for an hour and nothing was resolved
[02:14:28] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[02:14:32] *** Joins: PoliticsUSA (~USAPoliti@4.7.61.70)
[02:14:33] <PoliticsUSA> Here is an interesting oral argument from the North Carolina Supreme Court on criminal calendaring abuses. I cant believe this is happening. https://www.youtube.com/watch?v=4TQOltG7zJc&t=4712s
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:22] <SnoopJ> PoliticsUSA, /join ##politics
[02:15:25] <Bakunin> you might want ##law
[02:15:40] *** Quits: PoliticsUSA (~USAPoliti@4.7.61.70) (K-Lined)
[02:15:55] *** Joins: pycurious (~Adium@user/pycurious)
[02:16:00] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:15] *** Quits: Goblins (~mz@12.231.191.170) (Ping timeout: 256 seconds)
[02:16:40] *** Joins: Goblins (~mz@12.231.191.170)
[02:16:49] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[02:16:49] *** Quits: Goblins (~mz@12.231.191.170) (Max SendQ exceeded)
[02:17:05] *** Joins: Goblins (~mz@12.231.191.170)
[02:17:35] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[02:18:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[02:18:03] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[02:18:05] <Swayze> anywhere but here would be great
[02:18:29] <SnoopJ> they were k-lined
[02:18:30] <mefistofeles> K-lined
[02:18:33] <mefistofeles> yeah
[02:18:53] * SnoopJ assumes they did this in multiple channels
[02:19:40] <voldial> How do I figure out which fd is writing the libgpib errors? It's not stderr/stdout (or I'm using the context managers wrong?) https://bpa.st/WRUQ
[02:20:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[02:20:23] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[02:20:24] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[02:20:47] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:21:17] *** Quits: Goblins (~mz@12.231.191.170) (Ping timeout: 240 seconds)
[02:21:35] *** Joins: pycurious (~Adium@user/pycurious)
[02:21:54] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[02:22:06] <voldial> hm. it is fd2/stderr https://bpa.st/7BOQ
[02:22:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:23:08] <SnoopJ> voldial, strace, maybe?
[02:24:12] *** Quits: Guddu (~Guddu@59.95.233.252) (Quit: Leaving)
[02:24:38] <voldial> SnoopJ: well, my 2nd past shows it's fd2, now I'm scratching my head on why https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stderr "isnt working"
[02:24:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:25:01] *** Joins: Goblins (~mz@12.231.191.170)
[02:25:14] * voldial straces anyway
[02:25:16] * SnoopJ answered the first question because it's the one he had an answer for
[02:25:47] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:25:53] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (Ping timeout: 256 seconds)
[02:25:53] *** Joins: foul_owl (~kerry@71.212.148.11)
[02:25:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[02:26:01] <Guest1778> has anyone here used Anaconda and Sage with each other?
[02:26:08] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:26:24] <voldial> yea, it's fd2. hmph. write(2, "libgpib: invalid descriptor\n", 28libgpib: invalid descriptor)
[02:26:36] <SnoopJ> Guest1778, we can't really offer much help unless we know what the error is
[02:26:41] <Guest1778> https://i.imgur.com/LNbBUaV.png was my third attempt via "sudo apt install sagemath"
[02:26:59] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[02:27:15] *** Joins: pycurious (~Adium@user/pycurious)
[02:27:22] <SnoopJ> Guest1778, do you have the complete output of that command? Looks like you got a partial install of some sort.
[02:27:30] <Guest1778> Its very long
[02:27:42] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[02:27:57] <SnoopJ> `sudo apt install --force-reinstall sagemath &> out.log` and paste the resulting file.
[02:28:29] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[02:28:36] <Guest1778> https://pastebin.com/PDbyYDZL
[02:28:42] <Guest1778> oh, okay i'll try that
[02:28:49] <SnoopJ> what you just shared is fine
[02:28:54] <Guest1778> Okay
[02:29:00] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[02:29:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[02:30:53] <SnoopJ> I don't see any errors, I wonder if the package is broken
[02:31:33] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[02:31:39] *** Quits: Goblins (~mz@12.231.191.170) (Quit: Leaving.)
[02:31:40] <SnoopJ> any errors during installation, that is. The error at invocation time makes enough sense, I just dunno why it's doing that.
[02:32:00] <Guest1778> I thought sagemath actually came with ubuntu anyway
[02:32:15] *** Joins: Goblins (~mz@12.231.191.170)
[02:32:35] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:32:47] *** Joins: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net)
[02:32:55] *** Joins: Goblins1 (~mz@12.231.191.170)
[02:33:09] *** Quits: Goblins (~mz@12.231.191.170) (Client Quit)
[02:33:22] *** Quits: ocnrando (~ocnrando@c-69-140-79-186.hsd1.md.comcast.net) (Client Quit)
[02:33:25] *** Joins: pycurious (~Adium@user/pycurious)
[02:33:49] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[02:34:27] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[02:34:32] <SnoopJ> hmm, I see some open Ubuntu bug tickets about it, but none of them seem to have this error
[02:34:37] <SnoopJ> about the package, I mean
[02:35:04] <Guest1778> wonderful. I'm glad to be a trail blazer here :D  haha
[02:35:12] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[02:35:38] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:35:38] <SnoopJ> I'm also running focal, will see if I can reproduce that
[02:35:40] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[02:35:50] <Guest1778> what is focal?
[02:36:03] <SnoopJ> Ubuntu 20.04
[02:36:21] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 250 seconds)
[02:36:31] <octav1a> don't have nothing on the Disco Dingo~!
[02:36:35] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:37:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:37:13] *** Quits: Goblins1 (~mz@12.231.191.170) (Ping timeout: 250 seconds)
[02:38:02] *** Joins: Guest403 (~bitnoice@cb8815bc1.dhcp.as2116.net)
[02:38:28] *** Quits: chives (~chives@64.130.100.177) (Quit: Leaving)
[02:38:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[02:39:51] *** Joins: dme86 (~dan@user/dan86)
[02:40:52] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:41:05] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[02:41:48] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[02:43:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:43:41] *** Joins: bancroft (~bancroft@user/bancroft)
[02:43:58] *** Joins: ivii (~ivan@user/ivii)
[02:44:01] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[02:44:08] <SnoopJ> Guest1778, I get the same thing on my end, the problem appears to be that my `python3` does not point to the system Python. Try invoking sage as: `/usr/bin/python3 /usr/share/sagemath/bin/sage-ipython` and see if that works.
[02:44:35] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[02:45:03] <bancroft> I think i'm loosing it :p I ran `coverage run -m pytest` and it never made a `excel-preview_html.generated.py` file for me to run the report. What am I missing?
[02:45:11] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[02:45:27] *** Joins: naranja (~orange@user/orangeboxcutter)
[02:46:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[02:48:38] <Guest1778> SnoopJ yes that worked. Why did that work?
[02:48:51] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[02:49:24] <SnoopJ> Guest1778, it's a bug in the package, I am filing a ticket right now.
[02:49:39] *** Joins: esther (~esther@2607:fb90:20da:195c:d19a:e55:b5db:d949)
[02:50:14] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:50:14] <SnoopJ> the `sage` executable is a shell script, if you look in there you'll see `exec python3` which is not correct if `python3` doesn't point to the system Python. Should be an easy fix.
[02:51:05] <SnoopJ> Guest1778, what does `which python3` output on your system?
[02:51:33] *** Joins: foul_owl (~kerry@94.140.8.52)
[02:51:38] <Guest1778> "/home/ozera/anaconda3/envs/Nyx/bin/python3"
[02:51:57] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[02:52:18] <SnoopJ> right, so because you have that conda env active, it's trying to run the sage library using that interpreter (because that's where python3 points), but it's only going to work if you use the system interpreter
[02:52:28] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[02:52:38] <TML> or, alternately, if you use conda instead of apt to install sage
[02:52:49] <Guest1778> good luck with getting conda to work
[02:52:52] <TML> (I have no idea whether that's a thing or not, never used conda)
[02:52:58] <SnoopJ> TML, they tried earlier and got an error, but we haven't seen it
[02:53:32] *** Joins: Barones (~Barones@user/Barones)
[02:53:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:54:09] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[02:55:05] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[02:55:28] <Guest1778> I've got to step away for a little while, but thanks for your help and time SnoopJ
[02:55:33] <whatsupdoc> Can someone explain 2D matrices to me in python?
[02:55:48] <whatsupdoc> When I try doing this: [[0] * 5] * 5
[02:56:19] <whatsupdoc> Why does the inner * 5 make copies, but the outer * 5 make references to the first row?
[02:56:37] <whatsupdoc> What does * 5 even mean?
[02:56:43] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[02:56:49] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[02:56:51] <stewie925> hey guys, am running this code but having issue with line 33 not printing to console - https://bpa.st/5LAQ
[02:57:14] <TML> whatsupdoc: Your question does not accurately describe the behaviour there
[02:57:30] <InPhase> whatsupdoc: It is the same behavior in each, assignment.  But when you assign the list you end up hving something that shares the inner elements.
[02:57:38] <InPhase> whatsupdoc: What you need to watch is nedbat's video.
[02:57:52] <whatsupdoc> [0] * 5 = 5 separate zero entries
[02:57:56] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:58:09] <whatsupdoc> InPhase: which one?
[02:58:28] <whatsupdoc> [[0] * 5 for _ in range(5)]
[02:58:41] <SnoopJ> whatsupdoc, somelist * N makes N copies of the list. Lists hold references to objects, so [0]*5 is 5 references to the same object (0)
[02:58:42] <InPhase> whatsupdoc: https://www.youtube.com/watch?v=_AEJHKGk9ns
[02:58:48] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:59:19] <InPhase> whatsupdoc: That video is a worthwhile time investment, and explains the underlying principles pretty thoroughly.
[02:59:20] <SnoopJ> and in general [obj]*N makes a list that contains the same object N times
[02:59:45] <whatsupdoc> InPhase: I have watched it before lol
[02:59:46] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:00:08] <whatsupdoc> Really, I should just move on and use numpy lol
[03:00:18] <SnoopJ> It would be less of an abuse of the word "matrix" if you did
[03:00:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:00:47] <SnoopJ> (plus, numpy is great!)
[03:01:09] <InPhase> whatsupdoc: I was going to immediately link to numpy until I saw you actually had an assignment confusion.  You should really do both, understanding the assignment issue, and then use numpy for matrices.  :)
[03:01:33] <whatsupdoc> So whatever if in the brackets, it makes a copy of
[03:01:35] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:01:35] <whatsupdoc> Got it
[03:01:40] <whatsupdoc> *is
[03:01:52] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[03:02:07] <whatsupdoc> Because it's a list, you get multiple copies of lists, but they are shallow copied with references to the same values
[03:02:12] <SnoopJ> Guest1778, these are the offending uses of `exec python3` in the sagemath package, by the way: https://github.com/sagemath/sage/blob/c5af19568ca95680a9f58511b6e1920e1438737a/src/bin/sage#L613-L625
[03:02:54] <InPhase> whatsupdoc: They aren't copies.
[03:03:04] <InPhase> whatsupdoc: It's multiple assignments to the list.
[03:03:17] <whatsupdoc> yes
[03:03:21] <whatsupdoc> I understand
[03:03:21] <InPhase> whatsupdoc: The same thing happens at both *5 cases
[03:03:24] <whatsupdoc> I think
[03:03:46] <SnoopJ> [obj]*3 and [obj, obj, obj] are synonyms, basically
[03:03:50] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:04:22] <whatsupdoc> Wait, then why does [0] * 3 produce 3 zeros where modifying one modifies the others?
[03:04:27] <InPhase> [0]*5 is the assignment to the object 0 made 5 times.  [[0]*5]*5] is 5 assignments to the list of 5 assignments to 0.
[03:04:31] <whatsupdoc> doesn't*
[03:04:52] <InPhase> Why you are confused is because you cannot modify 0.
[03:04:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:05:19] <InPhase> (Well, you can with ctypes hackery, but this is bad.)
[03:05:24] <whatsupdoc> So it makes a new entry in memory when you try to overwrite it with a 1?
[03:05:35] <InPhase> It assigns it to 1.
[03:05:40] <InPhase> 1 is a different object.
[03:05:49] <TML> same entry in memory contains a new value
[03:06:11] <InPhase> Even if you do:  x = 0;  x += 1; this does not modify 0, it reassigns x to 1, and is shorthand for x = x + 1
[03:06:14] <whatsupdoc> But it allocates memory for that 1
[03:06:19] *** Joins: BullHorn (~BullHorn@zapdos.randomlab.info)
[03:06:23] <whatsupdoc> ?
[03:06:31] <TML> whatsupdoc: Probably not in any meaningful way
[03:06:39] <whatsupdoc> That seems very inefficient
[03:07:15] <TML> IIRC, there's only one `1`, and all the variables that contain the value `1` just refer to that one instance of it
[03:07:24] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:07:28] <InPhase> whatsupdoc: Well numerical operations are definitely more efficient in numpy.  Python works on objects, and those objects are dealt with by assignments to them.  All integers are objects in Python.
[03:08:10] <InPhase> One advantage of this is that all integers in Python are also bigints, and can take on any value you want to within memory limits.
[03:09:06] <InPhase> i = math.factorial(1000) + 5;  This for example works fine in Python, and the + 5 is actually meaningful.
[03:09:17] <whatsupdoc> I don't get it. So in Python, if you try to do x = 25, does it search for a 25 in memory and if it can find one, it assigns it to point to that value, but if it can't find it in memory, does it allocate space for a 25?
[03:09:22] *** Joins: rhrf (~mr@144.202.95.227)
[03:09:23] <InPhase> It works because they are objects and not, say, 64-bit integers.
[03:09:28] *** em is now known as Em
[03:09:31] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[03:09:56] <InPhase> whatsupdoc: Correct.  Although in practice the small integers seem to pre-exist at startup.
[03:10:09] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:10:19] <TML> whatsupdoc: As I said, IIRC, there is already a table of a bunch of integers, and you're just referring to the existing one
[03:10:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:10:39] <TML> I swear it was one of nedbat's videos that went over that but I can't find it right now
[03:10:41] <SnoopJ> point of clarification: whether or not there is one instance of a given integer is an implementation detail, but all integers are immutable in Python
[03:10:58] <TML> SnoopJ: Fair
[03:11:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:11:53] <InPhase> https://bpa.st/VMFQ  "immutable"
[03:12:12] <SnoopJ> InPhase, yes, you can write not-Python if you are willing to write not-Python
[03:12:24] <InPhase> :)
[03:13:00] <TML> that seems like a terrible dirty trick to play on someone
[03:13:06] <SnoopJ> CPython's default is to use internal copies of -5 to 256: https://github.com/python/cpython/blob/main/Include/internal/pycore_global_objects.h#L15-L16
[03:13:27] <InPhase> I like that pi_is_3 because it's humorous.  But it's also instructive to understand what's happening in a slap-in-the-face way.
[03:13:28] <TML> replace their $PATH/python with a wrapper that uses ctype() to change a bunch of constants
[03:13:30] <SnoopJ> (but you can change it when you build CPython, so there are truly no guarantees)
[03:13:49] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:14:37] <TML> InPhase: Your code gives a segfault here
[03:14:48] <InPhase> TML: You can't run it inside an existing REPL
[03:15:03] *** Joins: ini_blk (~ini_blk@185.165.170.5)
[03:15:05] <TML> ah
[03:15:09] <SnoopJ> one of it's many sharp edges
[03:15:12] <InPhase> TML: Console-friendly only.  The REPLs seem to malfunction when you abuse them.
[03:15:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:15:29] <TML> still
[03:15:40] <TML> I am thinking of ways I can have some fun with my co-workers this April 1st
[03:15:50] <SnoopJ> there's a surprising amount of stuff going on with the REPL
[03:15:51] <TML> (I have control of the system images pushed out to everyone's laptops)
[03:15:58] <InPhase> TML: If you do, let me know.  :)
[03:16:49] <InPhase> TML: In theory you could also bake such a defect into cpython.
[03:17:09] <TML> InPhase: Well, that sounds more evil and less fun :)
[03:17:38] <TML> in theory most of my co-workers should EVENTUALLY be able to work out what I've done, if I'm just wrapping their python
[03:18:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 256 seconds)
[03:18:36] <TML> swap all the integers around, and then sometime before 10am, have it just print out a message explaining the joke
[03:19:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:19:28] *** Joins: Goblins (~mz@99-104-124-13.lightspeed.sntcca.sbcglobal.net)
[03:19:31] *** Quits: ini_blk (~ini_blk@185.165.170.5) (Quit: Leaving)
[03:19:39] *** Quits: Goblins (~mz@99-104-124-13.lightspeed.sntcca.sbcglobal.net) (Max SendQ exceeded)
[03:21:25] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:22:00] <nedbat> whatsupdoc: btw, it doesn't "search in memory" for a 25, there's an array of permanent ints, it can just index into it to get 25
[03:22:50] <whatsupdoc> Yes, I understand, thanks!
[03:23:20] <whatsupdoc> I should watch that video again. Last time I watched it at 3x speed, so it probably didn't stick as well as it should have
[03:23:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[03:24:24] <nedbat> whatsupdoc: i don't think i mention the interned ints in that video...
[03:24:44] <nedbat> whatsupdoc: but there was a follow-on blog post about nested lists: https://nedbatchelder.com/blog/201308/names_and_values_making_a_game_board.html
[03:24:59] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:25:10] <whatsupdoc> oh cool! thanks, i'll read it
[03:25:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:25:52] *** Joins: et_ (~et@user/et)
[03:26:12] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[03:26:20] *** et_ is now known as et
[03:26:51] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[03:26:56] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:27:09] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:27:14] *** Joins: mickey8 (~user@user/mickey)
[03:27:32] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:29:56] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 245 seconds)
[03:30:00] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:30:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:10] <SnoopJ> Guest1778, https://bugs.launchpad.net/ubuntu/+source/sagemath/+bug/1960459
[03:31:24] *** Quits: humberto1 (~humbertow@148.204.6.250) (Ping timeout: 250 seconds)
[03:34:06] *** Quits: d1cor (~diego@179.63.242.122) (Read error: Connection reset by peer)
[03:34:10] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:34:13] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[03:34:42] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:34:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[03:36:09] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[03:37:43] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:39:20] *** Quits: els12 (~els12@192.48.10.226) (Remote host closed the connection)
[03:39:25] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[03:39:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[03:39:54] *** Joins: d1cor (~diego@179.63.242.122)
[03:40:56] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Ping timeout: 250 seconds)
[03:41:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:42:23] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[03:42:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:42:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:43:08] *** Joins: cheater (~Username@user/cheater)
[03:43:53] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:46:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:46:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:46:59] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:47:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:48:10] *** Joins: pycurious (~Adium@user/pycurious)
[03:49:11] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:49:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:52:37] *** Quits: Nightelf (~Nightelf@156.213.125.175) (Ping timeout: 250 seconds)
[03:54:17] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:56:13] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[03:56:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:57:15] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[03:58:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:00:00] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[04:00:12] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 256 seconds)
[04:00:12] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:01:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:05:53] <stewie925> python gurus:Â  for the concurrent.futures (threadpool/processpool) executor -Â  when we run executor.submit() it returns a futures object, but executor.map returns a generator object containing strings?
[04:06:19] *** Joins: blei (~blei@209.201.38.106)
[04:06:51] *** Joins: audiobirb (~audio@user/audio)
[04:07:07] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 250 seconds)
[04:07:42] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:08:08] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 256 seconds)
[04:08:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[04:08:27] *** Quits: Guest403 (~bitnoice@cb8815bc1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[04:08:42] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[04:08:42] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[04:08:57] *** Joins: spithash (~spithash@user/spithash)
[04:09:17] *** Joins: brookesy66 (~will@203.220.123.174)
[04:10:39] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:11:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[04:12:37] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[04:13:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[04:13:52] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-115f-b340-192d-b12b.res6.spectrum.com)
[04:13:54] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:14:03] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:14:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-389f-e35a-ca14-7649.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:14:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:14:45] <SensibleSalmon[m> `executor.map` functions like `functools.map` where it iterates a function over an iterable using the threadpool, and then yields the results as they finish
[04:15:45] <stewie925> SensibleSalmon[m:Â  oh, thank you!Â  Â I didnt see that information in the python docs
[04:15:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[04:16:24] <SensibleSalmon[m> stewie925: np! I've been doing a ton of work with process pools and threadpools and executors and whatnot lately, so the docs are half-inscribed in my brain rn
[04:16:39] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:17:37] <stewie925> SensibleSalmon[m:Â  :)
[04:18:05] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[04:18:05] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[04:18:12] <SensibleSalmon[m> stewie925: here's the relevant docs portion: https://docs.python.org/3.9/library/concurrent.futures.html#concurrent.futures.Executor.map
[04:18:12] <SensibleSalmon[m> note if you call `__next__()` too fast it'll spew timeout errors
[04:18:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:19:03] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[04:19:05] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[04:19:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:19:47] <stewie925> thank you
[04:20:04] *** Joins: crashrep (~crashrep@user/crashrep)
[04:20:24] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:20:48] *** Joins: fikran (~fikran@user/fikran)
[04:21:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:21:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[04:21:59] <stewie925> its nice that the concurrent.futures API for threads and processes are similar
[04:23:39] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[04:23:44] <SensibleSalmon[m> Indeed! Though I ended up writing a derrived class anyway--I wanted to have a bunch of processes that each had a threadpool, which didn't seem outright easy to do with the concurrent APIs
[04:25:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-89e3-b4c9-4809-69ad.res6.spectrum.com)
[04:25:49] <stewie925> youre doing requests.get on url's?
[04:26:09] <stewie925> concurrent APIs
[04:26:57] *** Quits: esther (~esther@2607:fb90:20da:195c:d19a:e55:b5db:d949) (Ping timeout: 240 seconds)
[04:26:58] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[04:27:37] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-115f-b340-192d-b12b.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:27:59] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[04:29:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:30:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:31:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:33:39] *** Joins: vicfred (~vicfred@user/vicfred)
[04:33:53] *** Quits: msk (~Thunderbi@89.205.124.19) (Quit: msk)
[04:34:31] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:34:55] *** Joins: hub (~hub@user/hub)
[04:34:55] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:35:31] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:36:11] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:36:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:38:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:39:24] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[04:39:37] *** Quits: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com) (Remote host closed the connection)
[04:39:52] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[04:40:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:41:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:41:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:42:08] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:43:10] *** Joins: humberto1 (~humbertow@187.202.198.64)
[04:43:25] *** Joins: llh (~llh@user/llh)
[04:43:48] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[04:43:55] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[04:44:19] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[04:44:31] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[04:44:33] *** Joins: MoosieRachel (~Moosadee@136.32.155.193)
[04:44:34] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Remote host closed the connection)
[04:44:34] *** Quits: lyodaom (~user@host31-48-18-141.range31-48.btcentralplus.com) (Quit: WeeChat 3.3)
[04:44:36] *** Joins: CombatVet (~c4@user/combatvet)
[04:44:56] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:44:59] *** Joins: MrCollinsGA (~MrCollins@38.21.140.217)
[04:45:04] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:45:35] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[04:45:41] *** Joins: cybniv (~niv@limbo.cypherpunks.io)
[04:45:44] *** Joins: quasineutral7 (~quaisneut@user/quasineutral)
[04:45:49] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:46:04] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[04:46:04] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Write error: Connection reset by peer)
[04:46:15] *** Joins: de-facto_ (~de-facto@user/de-facto)
[04:46:19] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Read error: Connection reset by peer)
[04:46:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:46:24] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:46:27] *** quasineutral7 is now known as quasineutral
[04:46:35] *** Joins: BUSY (~BUSY@user/busy)
[04:46:37] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Ping timeout: 240 seconds)
[04:46:37] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 240 seconds)
[04:47:01] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Ping timeout: 240 seconds)
[04:47:06] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[04:47:06] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[04:47:14] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[04:47:23] *** Joins: cdown_ (~cdown@188.214.11.14)
[04:47:37] *** Quits: humberto1 (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[04:48:08] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[04:48:40] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[04:48:44] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[04:48:45] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[04:50:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:50:06] *** de-facto_ is now known as de-facto
[04:50:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[04:50:36] *** Joins: hub (~hub@user/hub)
[04:50:49] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[04:51:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[04:51:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[04:52:08] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[04:53:03] *** Joins: novns (~novns@user/novns)
[04:54:07] *** Joins: pycurious (~Adium@user/pycurious)
[04:54:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:54:38] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[04:54:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:54:56] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[04:55:02] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[04:55:19] *** Joins: Barones (~Barones@user/Barones)
[04:55:49] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[04:55:58] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[04:56:34] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[04:58:02] *** Joins: harpia (~harpia@143.208.84.235)
[05:02:01] *** Joins: humberto1 (~humbertow@fixed-189-203-119-110.totalplay.net)
[05:02:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:02:51] *** Joins: Viewday11 (~Viewday@user/viewday)
[05:04:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[05:05:04] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[05:05:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:06:50] *** vinleod is now known as vdamewood
[05:07:10] *** Quits: humberto1 (~humbertow@fixed-189-203-119-110.totalplay.net) (Ping timeout: 250 seconds)
[05:08:04] *** Quits: Socra (~Socra@206.217.216.21) (Read error: Connection reset by peer)
[05:09:05] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:09:19] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:09:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:10:52] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[05:13:38] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[05:13:47] *** Joins: Masterphi (~Masterphi@user/masterphi)
[05:13:59] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:14:41] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:14:57] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:15:17] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[05:17:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:17:14] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[05:17:33] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:17:47] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:17:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:18:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[05:19:04] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[05:19:05] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:24:19] *** Joins: walterwhip (~www@user/walterwhip)
[05:24:40] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:25:33] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[05:25:43] *** Quits: MoosieRachel (~Moosadee@136.32.155.193) (Quit: Leaving)
[05:26:19] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:28:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:28:07] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:28:32] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:28:46] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:28:49] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net)
[05:29:05] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net) (Remote host closed the connection)
[05:29:29] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net)
[05:29:53] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 252 seconds)
[05:29:55] *** Joins: M3troidman_ (~buttler@196.244.191.100)
[05:30:00] *** Quits: abf (~abf@user/abf) (Quit: Leaving)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:33:39] *** Joins: vlm (~vlm@user/vlm)
[05:33:57] *** Joins: cris_ (~cris@177.76.23.60)
[05:34:21] <r3m> all set general powerline 0
[05:34:27] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[05:35:02] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:35:10] *** Joins: jpodivin_ (~jpodivin@cgnat44-pool2-97-72.poda.cz)
[05:36:54] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[05:37:30] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-86.poda.cz) (Ping timeout: 250 seconds)
[05:37:59] *** Quits: M3troidman_ (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[05:38:26] *** Joins: r3m (~launch@user/r3m)
[05:38:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:38:53] *** Quits: cris_ (~cris@177.76.23.60) (Quit: Leaving)
[05:41:23] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[05:41:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:42:21] *** Joins: cliluw (~cliluw@47.147.73.223)
[05:42:57] *** Joins: califax- (~califax@user/califx)
[05:43:05] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:b013:3303:cbfd:b0ad)
[05:44:01] *** Quits: cdown_ (~cdown@188.214.11.14) (Remote host closed the connection)
[05:44:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:45:31] <LordOfLive> ?
[05:45:43] *** Joins: brabrax (~brabrax@user/brabrax)
[05:45:46] <r3m> sorry my mistake
[05:45:48] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:46:02] *** Quits: onichomp (~onichomp@2806:264:4408:870:cd4e:849e:511f:4674) (Read error: Connection reset by peer)
[05:46:09] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:46:25] *** Joins: dme86 (~dan@user/dan86)
[05:46:39] *** Joins: onichomp (~onichomp@2806:264:4408:870:cd4e:849e:511f:4674)
[05:46:41] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:47:02] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:47:33] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:47:33] *** califax- is now known as califax
[05:47:58] *** Quits: onichomp (~onichomp@2806:264:4408:870:cd4e:849e:511f:4674) (Read error: Connection reset by peer)
[05:49:09] <SensibleSalmon[m> stewie925: no, I'm doing mass-SSHing to a fleet of servers
[05:49:26] *** Quits: macros_ (~macros@55d4b767.access.ecotel.net) (Ping timeout: 260 seconds)
[05:49:58] *** Joins: macros_ (~macros@55d4b968.access.ecotel.net)
[05:50:11] *** Joins: jpodivin__ (~jpodivin@cgnat44-pool3-71-36.poda.cz)
[05:51:01] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[05:52:43] *** Quits: jpodivin_ (~jpodivin@cgnat44-pool2-97-72.poda.cz) (Ping timeout: 256 seconds)
[05:53:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[05:54:53] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Read error: Connection reset by peer)
[05:55:01] *** Joins: Celeo (~Celeo@user/celeo)
[05:55:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9)
[05:57:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[05:58:16] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[05:59:54] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:00:05] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[06:01:03] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[06:01:20] *** Quits: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu) (Ping timeout: 250 seconds)
[06:01:20] <Guest1778> SnoopJ so I'm retrying on a remote linux computer from my uni.
[06:01:21] <Guest1778> I've installed Anaconda, but how do I get the terminal to let me use conda commands? Like, get to the Anaconda Prompt
[06:01:36] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 245 seconds)
[06:03:01] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[06:03:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:03:59] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:04:51] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:05:16] *** Quits: waynew (~wayne@user/waynew) (Remote host closed the connection)
[06:07:02] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Read error: Connection reset by peer)
[06:07:39] *** Quits: Z-cat (~Z-cat@user/z-cat) (Quit: Leaving)
[06:07:41] <cliluw> Guest1778: What shell are you using?
[06:08:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:08:11] *** Joins: Z-cat (~Z-cat@user/z-cat)
[06:08:36] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[06:09:43] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[06:09:45] <Guest1778> I connect via powershell if that is what you are asking
[06:10:04] <Guest1778> er, the windows terminal thing
[06:10:05] *** Quits: Z-cat (~Z-cat@user/z-cat) (Client Quit)
[06:10:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:10:24] *** Joins: Z-cat (~Z-cat@user/z-cat)
[06:10:57] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[06:11:24] *** Quits: Z-cat (~Z-cat@user/z-cat) (Client Quit)
[06:11:27] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[06:11:33] <SnoopJ> Guest1778, your shell searches the environment variable PATH when locating commands, so the main thing you need to do is add the path to conda's bin/ to that variable. I'm not sure what else the installer does to provision an environment, it's been a while since I've installed it and they don't document doing it by hand
[06:11:45] *** Joins: Z-cat (~Z-cat@user/z-cat)
[06:14:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:14:12] <SnoopJ> hmm, my local copy has a bin/activate script that does most of the things that need doing. Not sure if that's there in more recent installations, but that might be sufficient if they still include it
[06:14:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:14:49] <Guest1778> when I did on WSL earlier all I did was type "ubuntu" and it brought me the "base" where I was able to do conda commands
[06:15:00] *** Joins: invra[m] (~invramatr@2001:470:69fc:105::1:b441)
[06:15:33] *** Parts: invra[m] (~invramatr@2001:470:69fc:105::1:b441) ()
[06:20:52] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. ðŸ’¤)
[06:21:06] *** Joins: de-facto (~de-facto@user/de-facto)
[06:21:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:22:47] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[06:23:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[06:24:16] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:26:15] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:26:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[06:27:40] *** Quits: parv (~quass@user/parv) (Quit: parv)
[06:28:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:28:12] <stewie925> SensibleSalmon[m: I see
[06:29:00] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:29:36] *** Quits: kts (~kts@103.73.237.104) (Quit: Konversation terminated!)
[06:30:08] *** Joins: fikran (~fikran@user/fikran)
[06:30:13] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Read error: Connection reset by peer)
[06:31:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:31:44] *** Joins: frost (~frost@user/frost)
[06:33:51] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[06:35:55] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[06:36:00] *** Quits: emf_ (~emf@2620:10d:c090:400::5:c6d7) (Ping timeout: 250 seconds)
[06:36:12] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[06:37:20] *** Joins: Barones (~Barones@user/Barones)
[06:38:18] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[06:38:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:38:44] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:39:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:40:56] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[06:41:01] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:41:16] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:42:35] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:43:24] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[06:43:56] *** typoholic is now known as tinystoat
[06:44:42] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:44:54] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[06:46:53] *** Joins: M3troidman (~buttler@196.244.191.100)
[06:46:53] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 256 seconds)
[06:48:48] *** Joins: parv (~quass@user/parv)
[06:49:00] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[06:50:07] *** Joins: KnowledgeShark_ (~Knowledge@50.34.198.222)
[06:50:14] <KnowledgeShark_> hey everyone!
[06:51:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:51:46] *** Joins: cowsay-moo (~cowsay-mo@2001:ac8:29:5e:1016:2a2:85ad:5344)
[06:51:57] <stewie925> guys, is there a way to target multiple functions in threading.Thread?
[06:52:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:52:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[06:52:55] <leduyquang753> What do you mean? Executing two functions at once in a single thread?
[06:53:53] *** Joins: adeliktas8 (~adeliktas@i59F5F407.versanet.de)
[06:55:04] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:55:18] *** Joins: millido (~millido@84.210.150.128)
[06:55:26] <stewie925> leduyquang753: yeah, but I was able to do a workaround - I just created a new function that would execution two methods, and use that new function as the target for now
[06:55:37] *** Quits: adeliktas (~adeliktas@i59F5203E.versanet.de) (Ping timeout: 256 seconds)
[06:55:37] *** adeliktas8 is now known as adeliktas
[06:55:38] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[06:55:49] <NeilRG> Is there a way to narrow the type of a dataclass field in a subclass?
[06:55:51] <stewie925> that would execute, not execution
[06:56:32] *** Quits: faLUKE (~paolo@host-212-171-66-64.retail.telecomitalia.it) (Quit: Konversation terminated!)
[06:56:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:56:45] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 256 seconds)
[06:57:02] *** Joins: DerpGusta (~quassel@user/derpgusta)
[06:58:31] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e)
[06:59:09] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[06:59:29] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[07:00:17] *** Joins: civillian (~nick@118.211.117.130)
[07:02:52] <toma> [lists, splits, zip] I have some ugly code, https://bpa.st/6PGA. Lines 12-13 ain't got no alibi and I'm looking for a better way of doing it. The "exercise" is explained at the top of the posted code.
[07:03:52] <toma> I don't like that I use [0], [1], [2] <- what's the way of getting rid of that?
[07:04:43] <KnowledgeShark_> Any Python Web Scrapers here? I am working on Scraping KJV Holy Bible / KJV 1611 Holy Bible from a website which I have a downloaded copy from WGET. 2 Tags I am successfully passing to MariaDB using BS4+Requests+PyMySQL using a single URL. I am trying to upgrade it to a read from .txt and apply User-Agent Spoofing to it (only way to python request this URL); I think it's mod_security to be honest; no biggie. Here is my dpaste for my current.py:
[07:04:43] <KnowledgeShark_> https://dpaste.com/6MYWB4X2U (Not working) and here is my dpaste: https://dpaste.com/556P25Y2P (Error Traceback); using Python 3.9 on Debian Linux. (Thanks in advance if anyone knows what I am doing wrong).
[07:04:57] <Repiphany> toma: zip(*list_of_lists)
[07:05:24] <toma> Thanks Repiphany
[07:05:48] <toma> ohh that's so much better.
[07:06:33] <KnowledgeShark_> And here is my dpaste for .txt contents (URLs) : https://dpaste.com/FWVJEAW9P | Thank you for this channel + time! - Brandon
[07:06:58] <Repiphany> You probably also want to change `a, b, c` to something that handles arbitrarily many instead of expecting exactly three
[07:07:13] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:17] *** Quits: foul_owl (~kerry@94.140.8.52) (Ping timeout: 256 seconds)
[07:07:25] <Repiphany> and not use `list` as a variable name
[07:07:26] <toma> Repiphany: ohhhh yeah.
[07:07:39] <toma> Repiphany: that too.
[07:08:20] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:09:18] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:11:00] *** Joins: bluedust (~bluedust@86.106.136.217)
[07:11:15] *** Quits: bluedust_ (~bluedust@185.248.85.10) (Ping timeout: 256 seconds)
[07:11:44] *** Joins: matsaman (~matsaman@user/matsaman)
[07:12:10] *** Quits: ixokani (~swinnenb@user/swinnenb) (Remote host closed the connection)
[07:12:37] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:13:01] <cowsay-moo> @KnowledgeShark_, in your for loop, you are passing read_list into the Request() instead of the url
[07:14:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:14:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:14:49] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[07:15:12] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[07:15:25] <toma> Repiphany: https://bpa.st/LSWA any other tips for readability would be appreciated.
[07:15:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:16:14] *** Quits: tristan_ (~tristan@223.62.202.113) (Ping timeout: 260 seconds)
[07:16:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:18:17] <dre> toma, 1. docstring: "transpose a list of strings, seperated by word" 2. "list_of_lists" -> word_components  3. change all single-letter-vars to something more meaningful
[07:19:03] <toma> dre: all valid points. appreciated.
[07:19:37] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[07:19:42] <dre> word_components = [line.split() for line in input_strings ]
[07:19:49] <cowsay-moo> @KnowledgeShark_, you also may wish to check out https://bible-api.com/ .. you can retrieve raw JSON data which is much faster and arguably easier to work with.  Here are some examples to pull the data that you want:  https://bible-api.com/matthew+1:6?translation=kjv   https://bible-api.com/matthew+1:1-25?translation=kjv
[07:20:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:20:45] <dre> transposed = [column for column in zip(*word_components)]
[07:20:47] <toma> dre: yup. that's much more readible.
[07:21:08] <Repiphany> Your function also returns tuples rather than the strings that are being asked for
[07:21:18] <dre> oh yeah that's a good point
[07:21:33] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:21:46] <dre> transposed = [ ' '.join(column) for column in zip(*word_components)]
[07:22:13] <KnowledgeShark_> cowsay-moo: I changed it to "url" : here is my updated dpaste (code): https://dpaste.com/AWCYUG9BZ & dpaste (traceback error #2) : https://dpaste.com/GYC5AK94V | Thank you again! I really need to understand how to make this code work. Appreciate the alternative. *Must* learn Python.
[07:22:14] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:22:29] *** Joins: foul_owl (~kerry@94.140.8.25)
[07:22:48] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:24:15] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[07:24:17] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[07:25:55] <toma> thanks dre, Repiphany. I appreciate it. I still need to master those list comprehensions. Thanks. Have a great night/day.
[07:26:16] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[07:27:03] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489jwj4pqbm7f4c.ipv6.telus.net) (Quit: Leaving)
[07:28:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:29:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:30:11] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:17] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 240 seconds)
[07:31:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:31:51] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:32:13] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:23] <nomic> the command "w" in pdb provides info
[07:32:27] <nomic> stack trace
[07:32:40] <nomic> how can i get that from python otherwise
[07:32:50] <nomic> mebbe traceback
[07:32:55] <SensibleSalmon[m> what do you mean "otherwise"? like, when running normally?
[07:33:02] <nomic> yeah
[07:33:02] <SensibleSalmon[m> `traceback()` will indeed generate a traceback
[07:33:14] <SensibleSalmon[m> I"m curious about the context
[07:33:31] <nomic> m just asking for support
[07:33:34] <nomic> why u ask that
[07:33:37] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[07:33:59] <SensibleSalmon[m> It's just not a very common need to invoke `breakpoint()` manually--as opposed to just tossing an exception
[07:34:10] <cowsay-moo> @KnowledgeShark_, it's working for me when I fix the url ... that's all I did except I stripped out the database and file reading code. This works fine on my end  https://dpaste.com/ANXM83284
[07:34:28] <nomic> im not talking about invoking breakpoint im talking about getting a trace
[07:34:32] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[07:34:36] *** Joins: Sadale (~Sadale@user/sadale)
[07:34:48] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[07:34:57] <SensibleSalmon[m> right, sorry, meant `traceback()`
[07:34:58] <nomic> are you implying  "i don't use exceptions correctly" (or fully)
[07:35:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[07:35:42] *** Parts: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Leaving)
[07:35:53] <SensibleSalmon[m> Not at all? I'm just curious what you're using traceback for
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:38:02] <KnowledgeShark_> cowsay-moo: I am able to successfully do 1 URL also. But once I use my .txt (here in dpaste: https://dpaste.com/FWVJEAW9P) (which I need to be able to run my working script against the .txt list).
[07:38:12] *** Joins: snakeyhiss (~scott@101.100.131.109)
[07:38:19] <cowsay-moo> @KnowledgeShark_, maybe I am misunderstanding your question.  I thought you were having an issue with the user agent/connection.  What exactly is the problem?
[07:39:09] <cowsay-moo> Oh... it sounds like the problem is with reading all of the links from the text file?
[07:39:22] *** Joins: M3troidman (~buttler@196.244.191.100)
[07:39:25] <KnowledgeShark_> cowsay-moo: My apologies if I didn't explain it well. I was able to do 1 URL. Just trying to utilize the same user agent / connection custom setting *against all the url's in the .txt file*.
[07:39:38] <cowsay-moo> Gotcha!
[07:39:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:39:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:40:27] <KnowledgeShark_> cowsay-moo: Yes! I just want to process 1 at a time. So I can add timeout features later if I choose. The traceback error shows that it *does* see all the url's in the .txt ; I just don't understand what is happening that is causing failure.
[07:40:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:40:55] <cowsay-moo> @KnowledgeShark_, okay now I know what to look for :)
[07:41:17] <KnowledgeShark_> cowsay-moo: I appreciate your time Sir.
[07:41:36] *** Joins: jinsun (~quassel@user/jinsun)
[07:41:59] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[07:42:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:42:40] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[07:43:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:43:18] *** Joins: mickey8 (~user@user/mickey)
[07:43:50] *** Quits: M3troidman (~buttler@196.244.191.100) (Client Quit)
[07:43:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:44:34] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:44:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:45:29] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:45:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:45:39] *** Joins: M3troidman (~buttler@196.244.191.100)
[07:48:51] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[07:49:49] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 240 seconds)
[07:50:12] *** Joins: DerpGusta (~quassel@user/derpgusta)
[07:51:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:53:01] *** Joins: audiobirb (~audio@user/audio)
[07:53:56] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Quit: Leaving)
[07:54:37] *** Quits: sreve (~quassel@p549d724b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:54:46] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[07:54:46] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:55:06] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[07:55:06] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[07:55:08] *** Joins: sreve (~quassel@p4ff44e43.dip0.t-ipconnect.de)
[07:56:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:15] <voldial> can I define uncalled function instance attributes?
[07:58:42] <cowsay-moo> @KnowledgeShark_, each time your for loop cycles, it replaces the contents of "html" with the new html code.  So you need to do something to store the HTML each time it loops. Crappy example but maybe it will help you understand the problem https://dpaste.com/BSVH5S6TH
[07:58:54] * voldial guesses the answer is technically yes... but 'use a class'
[07:59:08] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[07:59:14] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[07:59:22] *** Joins: naranja (~orange@user/orangeboxcutter)
[07:59:50] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:01:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:27] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:01:30] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:df3e:ef17:255f:ee78) (Remote host closed the connection)
[08:02:37] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:a63b:e43b:b5f9:588f)
[08:03:49] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[08:04:35] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[08:04:54] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:63be:4b7:5b8:1ce3)
[08:04:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3b4c:a3a0:1c16:653e) (Quit: Leaving)
[08:05:10] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:06:04] *** Joins: cheater (~Username@user/cheater)
[08:07:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:07:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[08:09:45] <KnowledgeShark_> cowsay-moo: Thank you very much for your time and this dpaste! I will read through it and see if I can't get things working on my end fully. 100%
[08:09:48] * KnowledgeShark_ is grateful
[08:09:49] <aphysically> Callable syntax PEP was rejected
[08:12:03] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[08:12:13] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-edbc-4b04-23d8-dcd6.res6.spectrum.com) (Read error: Connection reset by peer)
[08:13:00] <KnowledgeShark_> cowsay-moo: Running it exactly as you dpasted. Resulted in this Traceback: https://dpaste.com/GWHRN7FVV
[08:15:00] *** Joins: mEn (~PaC-mEn@5.29.177.78)
[08:15:35] *** Joins: Masterphi (~Masterphi@user/masterphi)
[08:18:12] *** Quits: Strom (strom@fedora/strom) ()
[08:18:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:18:29] *** Joins: DavidMilestone (~DavidMile@182.64.6.188)
[08:19:44] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:19:50] <cowsay-moo> @KnowledgeShark_, do you have a blank line at the bottom of your .txt file?  If so, delete it
[08:20:17] *** Joins: Strom (strom@fedora/strom)
[08:20:32] <cowsay-moo> unknown url type: '' makes me think that you're passing it an empty url (blank line)
[08:21:13] <KnowledgeShark_> cowsay-moo: No Blank Line that I can determine. I just checked in nano. Tried to delete and save (no changes). I would say, no.
[08:21:27] *** Joins: bluedust_ (~bluedust@59.89.220.95)
[08:21:35] <KnowledgeShark_> cowsay-moo: That's where '' I got confused also. As if the URL isn't specified.
[08:21:58] <cowsay-moo> on line 14, add:  print(url) and see what it spits out in the terminal
[08:22:51] <cowsay-moo> also, you shouldn't put imports inside a for loop.. import at the top of your script
[08:22:58] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:23:27] *** Joins: han-solo (~hanish@user/han-solo)
[08:23:28] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[08:24:02] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:24:12] <KnowledgeShark_> cowsay-moo: That's great debugging practices (Thank you for teaching me this). It spit out all 25 proper URL's and then hit the same error. here is the dpaste for traceback error: https://dpaste.com/CUS2VMT7T
[08:24:39] <KnowledgeShark_> cowsay-moo: 10-4 on import, proper locations.
[08:24:50] *** Quits: bluedust (~bluedust@86.106.136.217) (Ping timeout: 256 seconds)
[08:25:01] *** Parts: snakeyhiss (~scott@101.100.131.109) (WeeChat 2.8)
[08:25:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:25:52] <KnowledgeShark_> cowsay-moo: I commented the line with the duplicate import. Re-ran; same as my latest traceback error.
[08:26:02] <cowsay-moo> @KnowledgeShark_, it's a blank line, I just added a blank line to the end of my .txt file and got the same error as you.   Change print(url) to print("("+url+")) so you can see the blank line.  It should show ()
[08:26:35] <cowsay-moo> oops ... typo.   print("("+url+")")
[08:27:24] <cowsay-moo> I can see the blank line in your dpaste .. it's right before the traceback error, and right after the last URL
[08:27:26] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:27:52] *** mEn is now known as PaC-mEn
[08:28:02] *** Quits: kiran (~kiranostr@78.40.148.178) (Quit: Toodle-oo!)
[08:28:12] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.72)
[08:28:22] *** Joins: kiran (~kiranostr@78.40.148.178)
[08:28:47] *** Quits: visl (visl@user/visl) (Quit: WeeChat 3.2)
[08:29:18] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:29:47] <KnowledgeShark_> cowsay-moo: Very cool! And your right! That's brilliant. Now; what's the best and most efficient way of removing my mysterious blank line that hides from me in nano?
[08:31:02] *** Joins: philomath (~philomath@103.79.168.39)
[08:31:02] *** Quits: philomath (~philomath@103.79.168.39) (Changing host)
[08:31:02] *** Joins: philomath (~philomath@dgplug/philomath)
[08:32:14] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[08:32:57] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[08:33:37] *** Joins: visl (visl@user/visl)
[08:33:43] <cowsay-moo> don't use read_list.split("\n") ... remove that entirely.  remove line 6 and 7 from my code.. and replace it with this:  line_in_list = list_open.read().splitlines()
[08:34:26] <cowsay-moo> splitlines() does the same exact thing but it should hopefully ignore the empty line
[08:34:49] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[08:35:17] *** Quits: philomath (~philomath@dgplug/philomath) (Ping timeout: 240 seconds)
[08:35:34] <KnowledgeShark_> cowsay-moo: I tried "sed -i '/^$/d' urls.txt" to remove the blank line. Didn't work.
[08:35:42] <KnowledgeShark_> cowsay-moo: I will give it a try! Thank you.
[08:36:29] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:36:57] <KnowledgeShark_> cowsay-moo: Holy Crap! It worked! Outputted all the URL's correctly and then printed them all.
[08:37:12] <cowsay-moo> good deal
[08:37:23] <cowsay-moo> using \n can be quirky
[08:37:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:37:48] *** Joins: analoq (~yashi@user/dies)
[08:37:53] <KnowledgeShark_> cowsay-moo: \n was the root of the problem. No kidding. I appreciate the Keys!
[08:38:04] <cowsay-moo> Happy to help
[08:38:21] <KnowledgeShark_> cowsay-moo: Appreciate it! I will try and pass it to MariaDB now :)
[08:38:59] * KnowledgeShark_ gives cowsay-moo a high five and favorite beverage!
[08:39:30] *** Joins: fikran (~fikran@user/fikran)
[08:40:08] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.72) (Ping timeout: 256 seconds)
[08:40:11] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:41:06] <cowsay-moo> If I would have read your traceback to begin with (I didn't), we could have solved this much sooner lol.  I was busy looking for issues in your loop
[08:41:27] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[08:42:23] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[08:42:33] <KnowledgeShark_> cowsay-moo: I will credit you as I Journey across the internet with my Python/Data Science Goals! ^_^
[08:42:45] <cowsay-moo> best of luck friend!
[08:42:45] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:aa06:4f68:1ab3:d9ce)
[08:43:20] <KnowledgeShark_> cowsay-moo: 100% and thank you, friend!
[08:43:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:47:12] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:47:41] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[08:48:14] *** Joins: ice9 (~ice9@user/ice9)
[08:49:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[08:51:19] *** Joins: zamanf (~dev@213.133.91.246)
[08:53:05] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:53:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:54:03] *** Joins: r3m (~launch@user/r3m)
[08:54:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:54:26] *** Joins: qlixed (~qlixed@181.44.129.13)
[08:54:44] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:56:26] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[08:58:18] *** Joins: tristan_ (~tristan@223.62.202.127)
[08:59:28] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[08:59:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:00:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:00:56] *** Joins: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net)
[09:01:06] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 256 seconds)
[09:02:16] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[09:02:26] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[09:02:33] *** Joins: savolla (~quassel@84.44.28.28)
[09:02:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:02:48] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[09:03:09] *** Quits: TFKyle (~kyle@64.201.205.70) (Read error: Connection reset by peer)
[09:04:45] *** Joins: dvx (~dvx@5.181.92.64)
[09:05:05] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[09:05:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:11:05] *** Joins: Oddity (~Oddity@user/oddity)
[09:12:18] <KnowledgeShark_> cowsay-moo: Not sure if you are still around. I updated the PyMySQL and ran it; it ran perfect with print outputs and proper tags. However it only INSERT the 25th URL tags; rather than 1 row after another. Do you know why this might be the case?
[09:14:12] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[09:14:55] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.72)
[09:15:01] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[09:15:58] <KnowledgeShark_> cowsay-moo: I might have figured this out. Looking at it; I may have excluded the PyMySQL from the loop. If it's not intended under the loop like the others; does that officially close the loop and continue writing outside of the loop? *if that makes sense*. Then I believe it's just pulling the last assigned tag variables; which would be the 25th entry on my urls.txt
[09:16:16] <KnowledgeShark_> intended* = indented, rather.
[09:17:25] *** Quits: tristan_ (~tristan@223.62.202.127) (Ping timeout: 240 seconds)
[09:19:22] <KnowledgeShark_> cowsay-moo: YES! That was true and it worked! All 25 Verses of Matthew Chapter 1 (KJV) in MariaDB :)
[09:19:25] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[09:21:21] <octav1a> Knowledge....shark... :o
[09:22:38] *** Joins: dme86 (~dan@user/dan86)
[09:24:15] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:24:19] <mat001> new to flask. When to use a redirect and when the flash message? I need to inform the user that submitting was completed
[09:24:21] <KnowledgeShark_> cowsay-moo: Working dpaste - https://dpaste.com/5W38LGLF3 !!! Thanks again man! :)
[09:24:30] <KnowledgeShark_> octav1a: :)
[09:24:43] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:24:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:24:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:10] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:25:26] <octav1a> :3
[09:25:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[09:26:03] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8)
[09:26:42] <NeilRG> can someone explain some very weird behavior for me?
[09:26:55] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[09:27:01] <NeilRG> when I pip install a package locally, it gives different results than when I install it from PyPi
[09:28:23] <NeilRG> specifically, "pip install flax", and import it, it works.  Now, try pip install "git+git://github.com/google/flax.git", and then "pip install ./flax", and you cannot import it
[09:28:35] <NeilRG> one of the files has its imports wiped
[09:29:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:29:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:30:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:31:10] <jinsun> probably their setup.py expects you to run it from inside the flak folder
[09:31:15] <han-solo> i tried `pip install "git+git://github.com/google/flax.git" && python -c 'import flax'` # seems fine
[09:31:17] <jinsun> s/flak/flax
[09:31:33] <jinsun> because they do things like this https://github.com/google/flax/blob/main/setup.py#L57
[09:32:30] <jinsun> and when they built the wheel they would have done it from inside the flax folder, so it would have built correctly, but you are running pip from the parent folder
[09:32:32] <cowsay-moo> KnowledgeShark_, that will technically work, but it's very inefficient.  you re-create the connection 25 separate times and execute the query 25 times.  there are other ways to do this if you want to improve your code.  if you set "client_flag": CLIENT.MULTI_STATEMENTS in your connection (https://stackoverflow.com/a/58565019), you can add multiple INSERTs in the same sql string .. for example sql="insert into...; insert into...;
[09:32:32] <cowsay-moo> insert into...;"  - you could build that string in your loop and execute your query once.  You can also look into "executemany", but it is a bit more advanced (https://duckduckgo.com/?q=python+sql+executemany)
[09:34:35] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:34:57] *** Quits: emerent (~quassel@p200300cd570443fbba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:35:04] *** Joins: upsala (~zcb@185.213.155.252)
[09:35:09] *** Joins: emerent (~quassel@p200300cd5704436bba27ebfffed28a59.dip0.t-ipconnect.de)
[09:35:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:35:28] <jinsun> hmm, or maybe not, because then it should have errored, and the git+url version should have worked fine
[09:36:24] *** Joins: hams (~hams@73.232.205.0)
[09:36:24] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[09:36:24] *** Joins: hams (~hams@user/hams)
[09:37:30] <NeilRG> jinsun, thanks!!
[09:38:06] <NeilRG> oh I see
[09:38:22] <jinsun> oh did that cd actually work?
[09:38:57] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[09:40:24] <NeilRG> no, I'm trying to build a MWE
[09:40:26] <NeilRG> of the problem
[09:40:33] <NeilRG> I'm installing it into a poetry venv
[09:40:37] <NeilRG> and then it fails
[09:40:42] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:41:25] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9) (Remote host closed the connection)
[09:42:01] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05)
[09:42:42] <NeilRG> wierd now it works
[09:43:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:43:21] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:43:27] <jinsun> I tried the git+url version, works fine here too
[09:43:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:44:46] <jinsun> and I guess even with the folder version pip would probably cd inside anyway, so that wouldn't be an issue
[09:44:59] <KnowledgeShark_> cowsay-moo: 10-4! While learning how to build executemany into my code; Where would you point me to opening an index.html for all subfolders; rather than connecting to a web server as the all_html array? Yes; I truly want to learn to code efficiently, 100%. Thanks for the tips & resources!
[09:45:08] *** Joins: mexen (uid495612@user/mexen)
[09:46:15] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[09:47:34] *** Joins: upsala (~zcb@185.213.155.252)
[09:48:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:50:35] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[09:53:17] *** Quits: macros_ (~macros@55d4b968.access.ecotel.net) (Ping timeout: 240 seconds)
[09:55:19] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[09:55:23] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[09:55:24] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[09:56:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:00:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:00:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:03:25] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:bd9c:4716:f59e:2699)
[10:04:51] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:05:16] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:07:21] *** Quits: t2mkn (~t2mkn@user/t2mkn) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[10:09:27] *** Joins: masoudd (~masoudd@user/masoudd)
[10:10:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[10:10:56] *** Joins: Socra (~Socra@206.217.216.21)
[10:13:07] *** Joins: kts (~kts@103.73.237.62)
[10:16:34] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 250 seconds)
[10:17:20] *** Joins: cheater (~Username@user/cheater)
[10:17:29] *** Joins: tristan_ (~tristan@223.33.164.16)
[10:17:50] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[10:18:16] *** Quits: yitz (~yitz@exercism/yitz) (Quit:  )
[10:18:20] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:28ee:8914:7d0d:6f8) (Quit: Leaving)
[10:19:02] *** Joins: yitz (~yitz@exercism/yitz)
[10:21:16] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:21:57] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:23:27] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:24:57] *** Quits: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e) (Ping timeout: 240 seconds)
[10:27:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[10:27:17] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[10:27:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[10:27:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:29:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:29:37] *** Quits: foul_owl (~kerry@94.140.8.25) (Ping timeout: 240 seconds)
[10:30:37] *** Joins: manti7 (~manti7@176.10.104.94)
[10:32:34] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[10:33:31] <aphysically> jinsun: callable syntax rejected, and I think I might need to slightly relitigate Annotated to get my fixes through
[10:33:38] <aphysically> or maybe not
[10:33:41] <aphysically> we will see
[10:35:17] *** Joins: wei2912 (~wei2912@138.75.71.147)
[10:36:48] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[10:37:05] <jinsun> aphysically: yeah saw that one, so fixing thos one easier for Eric now :D https://github.com/microsoft/pyright/issues/3016
[10:37:48] <jinsun> is would just be disallowed anywhere
[10:40:34] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[10:41:08] *** Joins: thevishy (~Nishant@2405:201:f005:c007:6cf1:7245:a05f:ea21)
[10:41:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:42:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:43:14] *** Joins: tribo (~tribo@p5b0fb115.dip0.t-ipconnect.de)
[10:43:52] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:43:58] <aphysically> jinsun: this is way more of a mess than it looks like https://github.com/microsoft/pyright/issues/3016
[10:44:08] <aphysically> stringifying annotations is not a cheat code to get them supported
[10:44:27] *** Joins: Xardas (~Xardas@149.233.51.127)
[10:44:32] <aphysically> there are multiple ways stringified annotations can get evaluated even more strictly than if they weren't stringified at all
[10:44:34] *** Joins: foul_owl (~kerry@71.212.148.11)
[10:44:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[10:44:40] <aphysically> most notably with type introspection
[10:45:13] <aphysically> and those evaluations use functions in typing.py, *even when using symbols from typing_extensions*, because of the implementation detail in typing_extensions
[10:45:30] <aphysically> so stringifying stuff just works poorly in general if you're trying to get support for new stuff on old python versions.
[10:45:40] <aphysically> Maybe it will work. Some of them work. A lot of them don't.
[10:46:16] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:46:16] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:46:34] <aphysically> I've fixed some of these problems in typing_extensions, but it's really really hacky and complicated
[10:46:36] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:46:36] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:46:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:46:44] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:46:47] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[10:47:02] <aphysically> because typing_extensions is using a mix of its own code and typing.py internals, but typing.py internals vary with versions that you're backporting to
[10:47:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:47:04] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:47:40] <aphysically> right now it avoids monkey patching anything, but I think it's actually the most reasonable solution if we *really* wanted to support the stringification edge cases for some stuff
[10:47:53] *** Joins: frost (~frost@user/frost)
[10:48:00] <aphysically> but it's way too much of a maintenance mess unless somebody actually surfaces using one of those weird edge cases
[10:48:03] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[10:48:03] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:73fd:4a91:570b:78d2)
[10:48:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:48:31] <aphysically> I fixed the weird edge cases in 3.11. And most of them in typing_extensions. The rest were so rare we're waiting if somebody surfaces that really really wants it, and even then I'm not so sure
[10:48:51] *** Joins: fikran (~fikran@user/fikran)
[10:49:38] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:49:55] <p-i-> https://bpa.st/LMBA I'm preparing to submit this issue to https://github.com/mrabarnett/mrab-regex
[10:50:01] <p-i-> Is this a reasonable issue?
[10:50:05] <p-i-> I don't want to annoy the maintainer of the package
[10:50:11] <p-i-> Can anyone answer any of the points?
[10:50:27] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[10:50:44] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:50:52] <jinsun> aphysically: yeah stringified annotations don't work well enough to support typing syntax changes from newer versions if you add runtime introspection too, and weirdly typing.py does too much of it
[10:51:08] <aphysically> syntax changes can never work, obviously
[10:51:21] <aphysically> but I just mean that even looking past that there's still problems
[10:51:25] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[10:51:25] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[10:51:49] <jinsun> well within quotes they could "work"
[10:51:55] <deniska> p-i-: not exactly the answer to your question, but when debugging regexes I find much more useful just writing test snippets in REPL or short scripts, rather than relying on services like regex101
[10:52:00] <jinsun> if there was not so much eval going on
[10:52:12] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:73fd:4a91:570b:78d2) (Remote host closed the connection)
[10:52:36] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:52:54] *** Quits: dre (~dre@2001:8003:c932:c301:3356:3f6e:5d90:d014) (Quit: Leaving)
[10:53:03] <aphysically> half of this stuff didn't even work on Python main 2 weeks ago :)
[10:53:15] <aphysically> now there's only one remaining case I haven't fixed (that I'm currently aware of)
[10:53:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:53:20] <aphysically> (knock on wood)
[10:53:50] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:53:50] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:54:37] <deniska> p-i-: also the saying "stdlib is where packages go to die" refer to the fact that stdlib release cycle is tied to the interpreter release cycle, and not a lot of innovation is going on. You may argue that asyncio got put too early before we knew better abstractions, but when it comes to regex, `re` is good enough for majority of usecases, it's not like there was much innovation in regex space lately :)
[10:55:00] *** Joins: mrwick (~mrwick@user/mrwick)
[10:55:13] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:55:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:55:54] *** Quits: tribo (~tribo@p5b0fb115.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[10:57:27] <deniska> p-i-: reading their current readme, they claim V0 should mimic `re` module behavior, while V1 changes some behavior. And this module doesn't seem like PCRE binding of some sort
[10:57:29] <p-i-> deniska: haha ok that was opinionated. I'll remove it.
[10:57:59] <deniska> p-i-: so V0 should behave like "python" regex and V1 is its own thing
[10:58:12] <p-i-> What's the interplay between PCRE/PCRE2/python:re/python:regex and actual "regex"?
[10:58:35] *** Joins: walterwhip (~www@user/walterwhip)
[10:58:42] <p-i-> So python re isn't actually PCREx compliant anyway
[10:59:07] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[10:59:12] <p-i-> and python:regex v1 "does its own thing"
[10:59:14] <p-i-> ouch
[10:59:22] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5) (Read error: Connection reset by peer)
[10:59:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:59:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130)
[11:00:06] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:00:21] <deniska> The primary usecase I can think of for going for a library implementing a specific syntax is when you already have a big library of regular expressions you want to use
[11:00:47] <deniska> If you are writing them from scratch, you may as well just use whatever is easier to reach for, which in python's case is `re`
[11:00:59] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:59fd:b6e1:4ba0) (Ping timeout: 252 seconds)
[11:01:18] *** Joins: PaC-mEn (~PaC-mEn@5.29.177.78)
[11:01:30] <deniska> Or there might be some features or edge case handling you'd like to have, then you can shop around for whatever library has them covered
[11:02:22] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:02:22] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:04:05] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:04:05] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:04:17] *** Joins: lbalhar (~lbalhar@spsei.osanet.cz)
[11:05:26] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[11:05:45] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[11:06:41] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:06:41] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:07:27] <DavidMilestone> What are the prerequisites for someone who wants to build their own IRC platform like Libera?
[11:07:55] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[11:07:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:09:26] *** Joins: panella32 (~panella32@45.9.251.36)
[11:09:27] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[11:10:26] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[11:10:32] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[11:10:41] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Quit: Leaving)
[11:10:48] <p-i-> DavidMilestone: Better to place that in #libera no?
[11:11:04] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:11:05] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:11:08] <p-i-> I don't see how it's a Python issue
[11:11:33] *** Joins: fanis30 (~anon@adsl-188.176.58.139.tellas.gr)
[11:12:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:13:00] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:3239:3f71:c9c5:a9ff)
[11:14:08] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:14:09] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:16:47] *** Quits: maxzor (~maxzor@2a01cb04054faa00c11e5dc6b0c99ebb.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[11:16:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:17:06] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:18:23] *** Quits: newpy (~newpy@2601:280:4381:1390:f398:df7b:7096:9f5d) (Quit: Leaving)
[11:19:24] *** Quits: raxor2k (~raxor2k@78.158.253.229) (Remote host closed the connection)
[11:20:38] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[11:20:40] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:20:58] *** Joins: rendar (~rendar@user/rendar)
[11:21:49] *** Joins: fef (~thedawn@user/thedawn)
[11:24:26] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[11:24:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:24:57] *** Joins: luigibu (~luigi@93.176.155.54)
[11:25:53] *** Quits: brookesy66 (~will@203.220.123.174) (Ping timeout: 250 seconds)
[11:26:55] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[11:27:10] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9)
[11:27:23] *** Quits: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net) (Quit: leaving)
[11:28:26] *** Joins: dme86 (~dan@user/dan86)
[11:29:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:29:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:29:49] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[11:30:38] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:30:53] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:16] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:28] *** Joins: palasso (~palasso@user/palasso)
[11:32:47] *** Joins: grooverman (~grooverma@189.110.126.17)
[11:34:10] <p-i-> https://stackoverflow.com/questions/71061427/disparity-between-regex101-and-pythons-regex-package funny how 'kneejerck' the people on SO can be sometimes.
[11:34:25] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:34:25] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:34:25] *** Joins: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:34:34] *** Quits: grooverman_ (~grooverma@179.97.162.187) (Ping timeout: 250 seconds)
[11:34:51] <p-i-> They continue to upvote the comment and downvote the question after I adjust the post to observe it does not apply, as I'm not using `re`.
[11:35:20] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:35:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:36:08] *** resmo_ is now known as resmo
[11:36:52] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:37:39] <DavidMilestone> p-i-, I meant to ask that question in the frame of Python--as to how would one build something like that using Python. Sorry for the misunderstanding.
[11:38:19] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:38:37] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 240 seconds)
[11:38:54] *** Joins: mickey8 (~user@user/mickey)
[11:39:01] *** Quits: Trigraph (~Trigraph@user/trigraph) (Read error: Connection reset by peer)
[11:39:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[11:39:47] <p-i-> DavidMilestone: Googling "implement irc in python" suggests paths
[11:39:55] <p-i-> Maybe you need to ask a more specific question.
[11:40:40] <DavidMilestone> Oh ok,Â  I asked about the prerequisites though.
[11:40:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:41:06] <p-i-> I can't parse that question.
[11:41:12] <p-i-> Maybe someone else can...
[11:41:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:42:22] *** Joins: PaC-mEn (~PaC-mEn@5.29.177.78)
[11:44:05] <jinsun> if you want a ircd written in python, here's one https://github.com/abesto/python_ircd
[11:44:06] <DavidMilestone> That's fine. I'll google that question as you suggested.
[11:44:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:44:15] <DavidMilestone> thanks, jinsun
[11:44:51] <jinsun> it is "experimental" though, so goo for learning, you'd probably want to use something else for a serious network
[11:44:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:45:01] <jinsun> s/goo/good
[11:46:08] <DavidMilestone> yep, I want to learn the fundamentals
[11:47:08] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:48:52] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:49:02] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:49:25] *** Joins: frost (~frost@user/frost)
[11:49:35] <jinsun> DavidMilestone: this one is a bit more modern https://github.com/readthedocs-fr/aioircd
[11:50:59] <DavidMilestone> thank you so much
[11:51:09] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:52:56] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:53:00] *** Joins: slav0nic (slav0nic@python.su)
[11:53:37] *** Quits: adham (~adham@37.239.160.47) (Ping timeout: 240 seconds)
[11:54:15] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 256 seconds)
[11:54:17] *** Joins: mdnotg (~mdnotg@78.185.225.213)
[11:55:02] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[11:55:14] *** Joins: PaC-mEn (~PaC-mEn@5.29.177.78)
[11:56:26] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[11:57:01] *** Quits: mdnotg (~mdnotg@78.185.225.213) (Client Quit)
[11:57:56] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:57:59] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:58:45] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[11:58:45] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Remote host closed the connection)
[11:59:18] *** Joins: chele (~chele@user/chele)
[11:59:32] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[12:00:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:40] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[12:00:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:00:59] *** Joins: pepper (~pepper@user/pepper)
[12:01:00] *** Joins: comerijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:01:32] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (Quit: Ping timeout (120 seconds))
[12:01:52] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[12:02:50] *** Joins: Abrax (~Abrax@user/abrax)
[12:03:03] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:03:34] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[12:05:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:06:06] *** jazzy2 is now known as jazzy
[12:06:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[12:08:59] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[12:09:18] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[12:12:41] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[12:13:24] *** Emet-Selch is now known as Azem
[12:14:05] *** Quits: comerijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[12:14:42] *** Quits: fanis30 (~anon@adsl-188.176.58.139.tellas.gr) (Quit: WeeChat 3.3)
[12:14:49] *** Joins: adham (~adham@37.239.160.25)
[12:15:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[12:18:16] <KnowledgeShark_> Does anybody know how I could utilize Python to help me generate redundant SQL Queries? Example: CREATE TABLE OT_18_Job_Chapter_08 AS SELECT * FROM OT_05_Deuteronomy_Chapter_01; (Super Noob here; however I have seen the "lens" of 1:36 [1 starting - 36 ending]). These are tire-some and I know Python is extremely powerful to those who know how to Charm it.
[12:18:19] *** Joins: nomic (~nomic@185.192.69.51)
[12:18:52] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:19:53] *** Joins: kosh (~kosh@user/kosh)
[12:22:52] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[12:23:18] *** Joins: dme86 (~dan@user/dan86)
[12:25:21] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:25:32] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[12:27:13] *** Joins: ubert (~Thunderbi@p200300ecdf0994184cc217ea87d4c264.dip0.t-ipconnect.de)
[12:27:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:27:49] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[12:29:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:29:29] *** Joins: philectro (~quassel@2a02:2788:1024:671:c542:7b5a:453:7217)
[12:29:29] *** Joins: dannysons (~alarm@pool-100-16-31-227.bltmmd.fios.verizon.net)
[12:29:43] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:57] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:30:06] *** Quits: benbois[m] (~benboisma@2001:470:69fc:105::1:66ab) (Quit: You have been kicked for being idle)
[12:30:26] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:30:32] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:32] *** Joins: vanessa (~vanessa@103.160.128.7)
[12:31:11] *** Joins: shad (~shad@user/shad)
[12:31:20] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[12:31:42] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[12:32:25] *** Joins: dme86 (~dan@user/dan86)
[12:32:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:34:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:35:12] *** Joins: widp (~user@124.123.104.227)
[12:35:28] *** Joins: RiFo (~RiFo@user/rifo)
[12:36:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[12:37:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:39:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:40:31] *** Joins: ketiv (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net)
[12:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:41:21] *** Joins: Payam (~Payam@138.106.57.131)
[12:42:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:42:23] *** Joins: pro_z_ (~pro_z@37.214.69.56)
[12:43:37] *** Quits: dannysons (~alarm@pool-100-16-31-227.bltmmd.fios.verizon.net) (Quit: Leaving)
[12:44:36] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[12:45:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:45:54] <KnowledgeShark_> Just ordered a bunch of Python & SQL books from the Library to help in my Journeys here and there (web) :)
[12:46:02] *** Joins: mcope (~matt@user/mcope)
[12:46:03] *** Joins: Thanatos (~Thanatos@197.210.84.55)
[12:47:44] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[12:48:56] *** Joins: zaquest (~notzaques@5.130.79.72)
[12:49:26] <zamanf> I am also thinking of buying few Python books
[12:49:28] *** Quits: foul_owl (~kerry@71.212.148.11) (Ping timeout: 256 seconds)
[12:49:29] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:49:32] <zamanf> any recommendations?
[12:50:05] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:50:44] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[12:50:55] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[12:50:57] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[12:50:57] *** Joins: stoneware (~stoneware@user/stoneware)
[12:50:59] *** Joins: walterwhip (~www@user/walterwhip)
[12:51:02] *** Joins: arinov (~arinov@213.194.126.155)
[12:51:09] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[12:51:09] <dante-as> Hi guys, Does someone know why I could get the following error when I am issuing `python3 -m build`? /usr/bin/python3: No module named build
[12:51:15] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 250 seconds)
[12:51:19] *** Joins: dre (~dre@2001:8003:c932:c301:c29e:700:d5d3:6fcd)
[12:51:30] *** Joins: revolve (~u0_a227@82-132-212-138.dab.02.net)
[12:51:38] <han-solo> are you trying to build a package ?
[12:51:50] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[12:51:52] <dante-as> yes
[12:52:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[12:52:16] <han-solo> where did you find this command ?
[12:52:27] *** Joins: msk (~Thunderbi@89.205.124.59)
[12:52:51] <dante-as> On internet, on some page, don't remember where
[12:53:15] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[12:53:19] <dante-as> On a different machine it works fine so I guess that I am missing some package or so
[12:53:21] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[12:53:43] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[12:55:05] <han-solo> does the other machine had a `build/` package or `build.py`  ?
[12:55:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:55:50] <dante-as> No
[12:56:15] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[12:56:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:57:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[12:58:12] *** Joins: fikran (~fikran@user/fikran)
[12:58:46] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:59:03] <rendar> `@add_command() def my_fn ...`  is that () after the decorator awkward?
[13:00:21] *** Quits: chele (~chele@user/chele) (Ping timeout: 250 seconds)
[13:00:26] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[13:02:11] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: leaving)
[13:02:17] <supakeen> Not really, as long as you understand what it does. It's relatively common to have decorators take arguments.
[13:02:24] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[13:03:07] *** Joins: acresearch (~acresearc@user/acresearch)
[13:03:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:03:49] *** Joins: foul_owl (~kerry@94.140.8.194)
[13:05:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[13:05:01] <FastJack> is there a way to have a timer call a function after a predefined interval but be able to reset the interval? I want to create a kind of watchdog function that is run after a certain period unless something else resets the timer periodically to prevent this function from getting called
[13:05:39] <rendar> i see
[13:07:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:07:29] <rendar> let's say i have `def fn(a:A, ...` and that i have `callback=fn`, now: having 'callback' how to check if its first argument is called 'a' and the annotations says type 'A' ?
[13:08:10] <Payam> I saw a strange thing on Linkedin. `x = 0.0 or 4 and 6 or -12`. what is x?
[13:08:39] <rendar> 6
[13:08:59] <han-solo> dante-as: was that command `python -m pep517.build .` # ?
[13:11:03] <zamba> what is the correct way of maintaining state in a flask app?
[13:11:07] <han-solo> FastJack: there's `signal.alarm` https://docs.python.org/3/library/signal.html#signal.alarm
[13:11:18] <zamba> basically i have one endpoint for adding data and then another for retrieving the modified data
[13:11:20] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[13:12:00] <zamba> so far i've used a global variable for this, but it's potentially not the best way around it
[13:15:15] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[13:15:37] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:16:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:17:22] <FastJack> han-solo: thanks, I'll try that
[13:17:37] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Remote host closed the connection)
[13:17:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:20:55] *** Joins: merrinx (~merrinx@dhcp2894-stud.wifi.uit.no)
[13:23:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:24:37] *** Quits: bluedust_ (~bluedust@59.89.220.95) (Ping timeout: 240 seconds)
[13:24:40] *** Joins: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451)
[13:25:00] *** Joins: biozz (~biozz@109-161-89-104.pppoe.yaroslavl.ru)
[13:25:10] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[13:25:21] *** Joins: onichomp (~onichomp@2806:264:4408:870:816:35e0:8c59:4d08)
[13:26:34] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:3eb6:2526:d971:8214)
[13:26:44] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[13:27:03] *** Quits: onichomp (~onichomp@2806:264:4408:870:816:35e0:8c59:4d08) (Read error: Connection reset by peer)
[13:28:20] *** Joins: onichomp (~onichomp@2806:264:4408:870:816:35e0:8c59:4d08)
[13:30:35] *** Joins: parv (~quass@user/parv)
[13:30:57] <jinsun> dante-as: you need https://github.com/pypa/build
[13:31:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:31:43] <teut> is there anything like fetch in python?
[13:31:50] <teut> fetch/axios
[13:32:13] <jinsun> requests/httpx ?
[13:32:36] <FastJack> mhhh, I might need more than one watchdog. signal.alarm would only work for one watchdog. threading.Timer can't be reset and/or restarted. might have to resort to cancelling old timer and creating a new one. not pretty but it should work
[13:32:44] <teut> ah , right. Thanks
[13:32:51] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 256 seconds)
[13:33:04] *** Quits: biozz (~biozz@109-161-89-104.pppoe.yaroslavl.ru) (Quit: Leaving...)
[13:33:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:33:36] *** Joins: Sadale (~Sadale@user/sadale)
[13:34:17] *** Quits: onichomp (~onichomp@2806:264:4408:870:816:35e0:8c59:4d08) (Ping timeout: 240 seconds)
[13:34:43] <teut> #python-offtopicÂ Â Â Â  Cannot join channel (+b) - you are bannedÂ Â  when did this happen?
[13:35:01] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[13:35:27] <supakeen> teut: That channel is now non-official, and exists in ##python-offtopic.
[13:36:13] *** Quits: foul_owl (~kerry@94.140.8.194) (Ping timeout: 240 seconds)
[13:37:16] <FastJack> hmm, let's see if this works https://gist.github.com/aeroaks/ac4dbed9c184607a330c
[13:38:42] *** Joins: dme86 (~dan@user/dan86)
[13:40:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:41:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:42:41] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:45:38] *** Joins: trycatch (~tc@103-140-203-11.vic.as139284.net.au)
[13:45:49] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:46:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:46:27] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:46:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:46:27] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:47:31] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:49:03] *** Quits: trycatch (~tc@103-140-203-11.vic.as139284.net.au) (Changing host)
[13:49:03] *** Joins: trycatch (~tc@user/trycatch)
[13:49:37] *** Joins: foul_owl (~kerry@71.212.133.174)
[13:50:05] *** Joins: matkor (~matkor@ns0.ant.gliwice.pl)
[13:50:31] *** Joins: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu)
[13:51:21] <widp> I am trying to switch to python from powershell for my scripting.
[13:51:36] <widp> Wondering how I will replace the "shell" tools.
[13:51:40] <widp> Is this a good idea?
[13:52:38] *** Joins: jbooker (~jbooker@212.228.50.201)
[13:53:02] <lericson> not really
[13:53:10] <lericson> sometimes
[13:53:16] *** Quits: revolve (~u0_a227@82-132-212-138.dab.02.net) (Read error: Connection reset by peer)
[13:53:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:53:19] <jbooker> Hello, all. I am hoping that someone can help me with a weird pip problem I encountered yesterday
[13:53:21] <lericson> but for day-to-day stuff i'd use bash
[13:53:35] <jbooker> with pip3, on python 3.6, in RHEL 8.5 specifically
[13:54:03] *** Joins: bluedust (~bluedust@117.204.132.6)
[13:54:31] <jbooker> What happened: Due to our build environment (I know, I know) we have packages that are installed with pip3 running as root. So we run pip3 install <packagename> and it installs it in /usr/local/lib/python3.6/site-packages
[13:55:18] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:55:28] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[13:55:51] <jbooker> But the weird thing is, that `/usr/local/lib/python3.6/site-packages` isn't in the python modules path when python is being run from a Jenkins build script, but is when we manually log in with root and run `python3 -c "import sys; print(sys.path)"`
[13:56:23] <jbooker> Can anyone explain why that specific site-packages include directory is only sometimes included in the python path?
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:56:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:56:28] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[13:56:58] <jbooker> We worked around it by declaring a PYTHONPATH environment variable in our build script directly before the line which calls python, to add that path, but I'd like to get to the bottom of why it happens.
[13:57:02] *** Joins: ApostleInTriumph (~ApostleIn@193.55.176.111)
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:57:29] <jbooker> And also, what makes pip install packages in that directory instead of in `/usr/lib/python3.6/site-packages` like it did in RHEL/CentOS 7.4
[13:57:32] <parv> Check the difference in environment between 2 runs
[13:58:03] <parv> Looks like you already found that $PATH was different
[13:58:03] <jbooker> Thanks parv, we did check and there's no environment variables that are different (there's no PYTHONPATH declared)
[13:58:11] <Repiphany> jbooker: Try `print(sys.executable)` in Jenkins or whatever
[13:58:14] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[13:58:31] <ApostleInTriumph> Hello. I've a list A and a list of tuple B. I want to trim B such that each element in the tuple of B is present in A. An additional information is that size of tuple B is 2.
[13:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:39] <Repiphany> (or just avoid system python in general)
[13:58:43] <jbooker> no $PATH is the same. there was no $PYTHONPATH declared at all, even when we log in manually as root (using `su -`) so we just created one
[13:58:45] <ApostleInTriumph> I could use a dict instead of a list of tuple for B, but there will be repeating keys
[13:58:46] <parv> Sorry, meant PYTHONPATH
[13:58:51] <lericson> ApostleInTriumph: do you like Opeth by any chance
[13:58:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05) (Ping timeout: 240 seconds)
[13:59:17] <jbooker> Repiphany thanks. What will doing print sys.executable tell us?
[13:59:25] <lericson> ApostleInTriumph: B_ = [tup for tup in B if set(B) < A], if you first let A = set(A)
[13:59:43] <Repiphany> Whether you're running the python you think you're running
[13:59:46] <lericson> sorry, set(B) <= A i guess
[13:59:54] <ApostleInTriumph> lericson yes, A can be a set
[13:59:55] <lericson> ah shit, set(tup) <= A
[13:59:59] <jbooker> Repiphany and yes, I'm trying to get my organisation to stop using system python and move everything into venvs. I have convinced the right people it's the right thing to do, but it's not something I can get them to change overnight because it might break our build
[14:00:12] <ApostleInTriumph> lericson absolutely, and thats exactly why I chose this name;)
[14:01:06] <jbooker> Repiphany thank you, I will get him to add it into the makefile and let me know what the answer is. I don't like 'fudging' it, I'd prefer to know what happened. Can you explain, then why pip would install packages to the 'wrong' place?
[14:01:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:01:11] <lericson> another way is to construct all allowed combinations of A, which is the cartesian product A x A, then check if B is in that set
[14:01:16] <jbooker> I guess I should go read the `pip` manual
[14:01:17] *** Joins: [RiFo] (~RiFo@user/rifo)
[14:01:26] *** Joins: Vision-_- (~Vision@097-087-115-181.res.spectrum.com)
[14:01:30] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[14:01:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:01:48] *** Joins: adham_ (~adham@37.239.160.25)
[14:01:56] <lericson> AA = {(a1, a2) for a1 in A for a2 in A}; B_ = [tup for tup in B if tup in AA]
[14:01:57] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[14:02:03] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[14:02:06] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[14:02:07] *** Joins: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com)
[14:02:11] *** Joins: greatgatsby_ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[14:02:13] <Repiphany> `pip3` might not be pointing to the same python executable that you're running other things with
[14:02:20] *** Joins: Sadale (~Sadale@user/sadale)
[14:02:21] <lericson> well in fact if you consider B as a set you can just take an intersection
[14:02:28] *** Joins: Babar_ (~Babar@115.74.184.138)
[14:02:28] *** Quits: Babar (~Babar@115.74.184.138) (Killed (zirconium.libera.chat (Nickname regained by services)))
[14:02:28] *** Babar_ is now known as Babar
[14:02:31] *** Joins: Abrax- (~Abrax@user/abrax)
[14:02:33] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[14:02:37] *** Joins: skyfall9 (~skyfall@user/skyfall)
[14:02:37] <lericson> but i think you said B can have duplicates
[14:02:38] *** Joins: gerty6 (~gerty@user/gerty)
[14:02:38] *** Joins: xakan6 (~xakan@pnmx.zdx.fr)
[14:02:41] *** Joins: sunny934 (~sunny93@wireguard/tunneler/sunny93)
[14:02:42] *** Joins: jjasghar7 (~jjasghar@idlerpg/player/jjasghar)
[14:02:43] *** Joins: Duckle3 (~Duckle@user/duckle)
[14:02:48] *** Joins: amaenli8 (~amaenli@aries.uberspace.de)
[14:02:51] *** Joins: kua (kuahara@072-182-135-032.res.spectrum.com)
[14:02:53] *** Joins: csmiga1 (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[14:03:00] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[14:03:01] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[14:03:01] <widp> lericson: I am on windows, powershell does an ok job of serving my scripting needs
[14:03:04] *** Joins: driib29 (~driib@185.195.233.159)
[14:03:06] *** Joins: voidcat_ (~voidcat@user/voidcat)
[14:03:09] *** Joins: lxdr8 (~lxdr@user/lxdr)
[14:03:12] *** Joins: tofran2 (~tofran@bl15-47-228.dsl.telepac.pt)
[14:03:25] *** Quits: MrC (~Ben@mrbenc.net) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[14:03:25] *** Joins: MrC (Ben@mrbenc.net)
[14:03:27] *** Joins: zmotaj_ (~zmotaj@86.61.81.185)
[14:03:28] *** Joins: purplex_ (~purplex@user/purplex)
[14:03:33] *** Joins: vlm_ (~vlm@user/vlm)
[14:03:34] *** Joins: zoraj_ (~zoraj@209.126.81.159)
[14:03:35] *** Joins: mawk` (mawk@wireguard/contributor/mawk)
[14:03:35] <Repiphany> jbooker: https://snarky.ca/why-you-should-use-python-m-pip/
[14:03:36] *** Joins: nikos_ (~nikos@nikos.dev)
[14:03:37] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[14:03:37] *** Joins: kiska31 (james@user/kiska)
[14:03:38] *** Joins: dodo__ (~dodo@user/dodo)
[14:03:39] *** Joins: samuelb (~samuelber@nata01.lip.pt)
[14:03:41] *** Joins: cursey_ (~cursey@user/cursey)
[14:03:42] *** Joins: BullHorn_ (~BullHorn@zapdos.randomlab.info)
[14:03:42] *** Joins: Noisytoot_ (~noisytoot@sourcehut/user/noisytoot)
[14:03:43] *** Joins: seabre_ (~seabre@user/seabre)
[14:03:43] *** Joins: ghormoon_ (~ghormoon@ghorland.net)
[14:03:52] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[14:03:55] *** Joins: astiak_ (~astiak@ownage.biz)
[14:03:59] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[14:04:06] *** Joins: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net)
[14:04:12] *** Joins: jiggawattz (jiggawatt@runs.on.ubuntu.crapping.cricket)
[14:04:28] <jbooker> Repiphany: reading, thank you
[14:04:29] *** Joins: towel_ (~towel@user/towel)
[14:04:30] *** Joins: ThomasJ_ (~ThomasJ@user/thomasj)
[14:04:36] *** Joins: Roedy- (Roedy@user/roedy)
[14:04:42] *** Joins: JoelJoel (~jjshoe@user/joel)
[14:04:45] *** Joins: Kraus_ (~quassel@075-141-246-250.res.spectrum.com)
[14:04:47] *** Joins: davor (~davor@user/davor)
[14:04:48] *** Joins: wilk_ (~wilk@user/wilk)
[14:04:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:04:59] <BullHorn_> anyone using vscode with jupyter? im having an issue, cant find any leads on it
[14:05:03] *** Joins: han-solo (~hanish@103.104.46.12)
[14:05:22] *** Quits: han-solo (~hanish@103.104.46.12) (Changing host)
[14:05:22] *** Joins: han-solo (~hanish@user/han-solo)
[14:05:23] <BullHorn_> basically debugging a .ipynb file in vscode fails. as soon as i copy-paste the code from the .ipynb file into a .py file, the debug works perfectly
[14:05:26] *** Joins: mossman93_ (~quassel@user/mossman93)
[14:05:31] *** Joins: novns_ (~novns@user/novns)
[14:05:49] <BullHorn_> but theres no way anyone in their right mind would use jupyter in vscode if it meant debugging always requires to copy-paste your code between files lol
[14:05:53] *** Joins: jiffe1 (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[14:05:57] *** Joins: _vanessa_ (~vanessa@103.160.128.7)
[14:05:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:06:04] *** Joins: gjvc_ (~gjvc@user/gjvc)
[14:06:04] *** Joins: thesemic1lons (~thesemico@user/thesemicolons)
[14:06:05] *** Joins: vancz_ (~vancz@user/vancz)
[14:06:05] *** Joins: lumgwada_ (~lumgwada@101.181.27.168)
[14:06:05] *** Joins: m1n10n1 (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[14:06:10] *** Joins: ttys000_ (~ttys000@user/ttys000)
[14:06:11] *** Joins: nickel84481 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[14:06:12] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[14:06:17] *** Joins: moto_ (~moto@user/moto)
[14:06:24] *** Joins: kujo1 (~kujo@188.166.12.52)
[14:06:25] *** Joins: Juhaz_ (juhaz@hilla.kapsi.fi)
[14:06:30] *** Joins: unautre (~unautre@omsk.bandar-log.dev)
[14:06:30] *** Joins: mantiX (~manti7@176.10.104.94)
[14:06:30] *** Joins: sale_ (~sale@ypocit.initech.link)
[14:06:31] *** Joins: _val__ (~valentin@82-169-14-137.biz.kpn.net)
[14:06:33] *** Joins: b10n1k (~iob@nat1.prg.suse.com)
[14:06:33] *** Joins: gnoirzox1 (~gnoirzox@178.170.103.136)
[14:06:47] *** Joins: erry_ (~erry@errietta.me)
[14:06:49] *** Joins: axisys_ (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[14:06:53] *** Joins: Xat`_ (~Xat`@ns300217.ip-91-121-29.eu)
[14:06:53] *** Joins: callq (~callq@2409:4062:2296:71d:c827:aaf6:4fa7:dd61)
[14:06:53] *** Joins: wei2912_ (~wei2912@138.75.71.147)
[14:06:57] *** Joins: infernixx (nix@spirit.infernix.net)
[14:07:22] *** Joins: s98259 (s98259@ip129.ip-51-195-238.eu)
[14:07:37] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[14:08:15] <wyre> jinsun, regarding yesterday question about python builds ... I'm curious about two things ... first one is that sure, python3 -m build creates both, sdist and bdist, but ... as sdist is a tarball ... it's actually also a binary! ðŸ˜†
[14:08:25] <wyre> the second one is ... is not build part at least of the stdlib?
[14:08:39] <wyre> I had to install python3-build with apt ðŸ¤”
[14:08:59] <wyre> so ... I'm not sure why this is not a built-in or part of the stdlib, I see it as a essential module
[14:09:09] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[14:09:23] *** Joins: Sadale (~Sadale@user/sadale)
[14:09:24] *** Joins: Lindrian_ (~Lindrian@about/regex/lindrian)
[14:09:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:10:04] <apollo13> wyre: there are plenty of ways to build a package, build is one of them. And hopefully it never makes it into the stdlib
[14:10:23] <apollo13> being able to install it from pypi has many benefits (like updates outside the release cycle of python)
[14:10:39] <han-solo> from what i read, `build` is one of the couple of tools one can use to build a pep517 compliant package ?
[14:10:42] <han-solo> https://pypa-build.readthedocs.io/en/stable/index.html#python--m-build
[14:11:02] *** Quits: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu) (*.net *.split)
[14:11:02] *** Quits: foul_owl (~kerry@71.212.133.174) (*.net *.split)
[14:11:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[14:11:02] *** Quits: mcope (~matt@user/mcope) (*.net *.split)
[14:11:02] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[14:11:02] *** Quits: vanessa (~vanessa@103.160.128.7) (*.net *.split)
[14:11:02] *** Quits: adham (~adham@37.239.160.25) (*.net *.split)
[14:11:02] *** Quits: Abrax (~Abrax@user/abrax) (*.net *.split)
[14:11:02] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (*.net *.split)
[14:11:02] *** Quits: mrwick (~mrwick@user/mrwick) (*.net *.split)
[14:11:02] *** Quits: wei2912 (~wei2912@138.75.71.147) (*.net *.split)
[14:11:02] *** Quits: manti7 (~manti7@176.10.104.94) (*.net *.split)
[14:11:02] *** Quits: hams (~hams@user/hams) (*.net *.split)
[14:11:02] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (*.net *.split)
[14:11:02] *** Quits: DerpGusta (~quassel@user/derpgusta) (*.net *.split)
[14:11:02] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[14:11:02] *** Quits: novns (~novns@user/novns) (*.net *.split)
[14:11:02] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[14:11:02] *** Quits: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt) (*.net *.split)
[14:11:02] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (*.net *.split)
[14:11:02] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (*.net *.split)
[14:11:02] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[14:11:02] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (*.net *.split)
[14:11:02] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[14:11:02] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[14:11:02] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (*.net *.split)
[14:11:02] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[14:11:02] *** Quits: waveform (~quassel@waveform.plus.com) (*.net *.split)
[14:11:02] *** Quits: yac (~user@user/yac) (*.net *.split)
[14:11:02] *** Quits: ackyshake (~ackyshake@user/ackyshake) (*.net *.split)
[14:11:02] *** Quits: strugee (~strugee@steevie.strugee.net) (*.net *.split)
[14:11:02] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[14:11:02] *** Quits: moose (~moose@user/moose) (*.net *.split)
[14:11:02] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[14:11:02] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[14:11:02] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (*.net *.split)
[14:11:02] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (*.net *.split)
[14:11:02] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[14:11:02] *** Quits: unautre_ (~unautre@omsk.bandar-log.dev) (*.net *.split)
[14:11:02] *** Quits: mrec (~markus@sundtek.de) (*.net *.split)
[14:11:02] *** Quits: Ingvix (~Ingvix@user/ingvix) (*.net *.split)
[14:11:02] *** Quits: kiska3 (james@user/kiska) (*.net *.split)
[14:11:02] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[14:11:02] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[14:11:02] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[14:11:02] *** Quits: skyfall (~skyfall@user/skyfall) (*.net *.split)
[14:11:02] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (*.net *.split)
[14:11:02] *** Quits: odrling (~odrling@korone.aidoru.agency) (*.net *.split)
[14:11:02] *** Quits: driib2 (~driib@185.195.233.159) (*.net *.split)
[14:11:02] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[14:11:02] *** Quits: amaenli (~amaenli@user/amaenli) (*.net *.split)
[14:11:02] *** Quits: Helenah (~s98259@ip129.ip-51-195-238.eu) (*.net *.split)
[14:11:02] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[14:11:02] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[14:11:02] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[14:11:02] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[14:11:02] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[14:11:02] *** Quits: Phineas (~Phineas@user/Phineas) (*.net *.split)
[14:11:02] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[14:11:02] *** Quits: zoraj (~zoraj@209.126.81.159) (*.net *.split)
[14:11:02] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[14:11:02] *** Quits: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[14:11:03] *** Quits: tofran (~tofran@bl15-47-228.dsl.telepac.pt) (*.net *.split)
[14:11:03] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (*.net *.split)
[14:11:03] *** Quits: kujo (~kujo@188.166.12.52) (*.net *.split)
[14:11:03] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (*.net *.split)
[14:11:03] *** Quits: moto (~moto@user/moto) (*.net *.split)
[14:11:03] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[14:11:03] *** Quits: {HD} (~{HD}@86.106.121.213) (*.net *.split)
[14:11:03] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[14:11:03] *** Quits: kr0nk (~kr0nk@user/kr0nk) (*.net *.split)
[14:11:03] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (*.net *.split)
[14:11:03] *** Quits: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket) (*.net *.split)
[14:11:03] *** Quits: kurfen_ (~kurfen@213.152.188.7) (*.net *.split)
[14:11:03] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[14:11:03] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: koopman (sid466269@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (*.net *.split)
[14:11:03] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (*.net *.split)
[14:11:03] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[14:11:03] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[14:11:03] *** Quits: Xat` (~Xat`@ns300217.ip-91-121-29.eu) (*.net *.split)
[14:11:03] *** Quits: Juhaz (~juhaz@hilla.kapsi.fi) (*.net *.split)
[14:11:03] *** Quits: gnoirzox (~gnoirzox@178.170.103.136) (*.net *.split)
[14:11:03] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[14:11:03] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (*.net *.split)
[14:11:03] *** Quits: Phase (~phase@user/phase) (*.net *.split)
[14:11:03] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[14:11:03] *** Quits: w0rp (~w0rp@w0rp.com) (*.net *.split)
[14:11:03] *** Quits: agireud (~agireud@user/agireud) (*.net *.split)
[14:11:03] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[14:11:03] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[14:11:03] *** Quits: towel (~towel@user/towel) (*.net *.split)
[14:11:03] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[14:11:03] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[14:11:03] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[14:11:03] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[14:11:03] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[14:11:03] *** Quits: nikos (~nikos@nikos.dev) (*.net *.split)
[14:11:03] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[14:11:03] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (*.net *.split)
[14:11:03] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[14:11:03] *** Quits: iob (~iob@nat1.prg.suse.com) (*.net *.split)
[14:11:03] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[14:11:03] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[14:11:03] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[14:11:03] *** Quits: crunchy_david (~david@pgguru.net) (*.net *.split)
[14:11:03] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (*.net *.split)
[14:11:03] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[14:11:03] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: ghormoon (~ghormoon@ghorland.net) (*.net *.split)
[14:11:03] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[14:11:03] *** Quits: civillian (~nick@118.211.117.130) (*.net *.split)
[14:11:03] *** Quits: lumgwada (~lumgwada@user/lumgwada) (*.net *.split)
[14:11:03] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (*.net *.split)
[14:11:03] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[14:11:03] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[14:11:03] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (*.net *.split)
[14:11:03] *** Quits: Lindrian (~Lindrian@about/regex/lindrian) (*.net *.split)
[14:11:03] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[14:11:03] *** Quits: voidcat (~voidcat@user/voidcat) (*.net *.split)
[14:11:03] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[14:11:03] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[14:11:03] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[14:11:03] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[14:11:03] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[14:11:03] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[14:11:03] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[14:11:03] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[14:11:03] *** Quits: Neopolitan (~tn5421@45.76.61.24) (*.net *.split)
[14:11:03] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[14:11:03] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[14:11:03] *** Quits: BullHorn (~BullHorn@zapdos.randomlab.info) (*.net *.split)
[14:11:03] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[14:11:03] *** Quits: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[14:11:03] *** Quits: xakan (~xakan@pnmx.zdx.fr) (*.net *.split)
[14:11:03] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[14:11:03] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[14:11:03] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[14:11:03] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[14:11:03] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[14:11:03] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[14:11:03] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[14:11:03] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[14:11:03] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[14:11:03] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[14:11:03] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[14:11:03] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[14:11:03] *** Quits: aoei (~aoei@nethackscoreboard/aoei) (*.net *.split)
[14:11:03] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[14:11:03] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[14:11:03] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[14:11:03] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[14:11:03] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[14:11:03] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[14:11:03] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[14:11:03] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[14:11:03] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[14:11:03] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[14:11:03] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[14:11:03] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[14:11:03] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[14:11:03] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[14:11:03] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[14:11:03] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[14:11:03] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[14:11:03] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[14:11:03] *** ghormoon_ is now known as ghormoon
[14:11:03] *** Lindrian_ is now known as Lindrian
[14:11:04] <apollo13> yes, there is nothing "special" about build that would prompt inclusion into the stdlib
[14:11:04] *** bdeshi- is now known as bdeshi
[14:11:04] *** amaenli8 is now known as amaenli
[14:11:04] *** skyfall9 is now known as skyfall
[14:11:04] *** kiska31 is now known as kiska3
[14:11:04] *** jiggawattz is now known as jiggawatt
[14:11:04] *** mawk` is now known as mawk
[14:11:04] *** zuQe85 is now known as zuQe8
[14:11:04] *** voidcat_ is now known as voidcat
[14:11:04] *** gerty6 is now known as gerty
[14:11:05] *** ThomasJ_ is now known as ThomasJ
[14:11:05] *** xakan6 is now known as xakan
[14:11:06] *** csmiga1 is now known as csmiga
[14:11:06] *** sunny934 is now known as sunny93
[14:11:06] *** lxdr8 is now known as lxdr
[14:11:06] *** dodo__ is now known as dodo
[14:11:09] *** vlm_ is now known as vlm
[14:11:09] *** driib29 is now known as driib2
[14:11:09] *** tofran2 is now known as tofran
[14:11:09] *** wilk_ is now known as wilk
[14:11:09] *** Duckle3 is now known as Duckle
[14:11:09] *** jjasghar7 is now known as jjasghar
[14:11:10] *** purplex_ is now known as purplex
[14:11:20] *** infernixx is now known as infernix
[14:11:31] <apollo13> poor server
[14:11:36] <wyre> apollo13, well, I guess there is also plenty ways to create venvs ... but you have venv in the stdlib, haven't you?
[14:11:57] *** Joins: agireud (~agireud@user/agireud)
[14:12:04] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[14:12:11] <apollo13> wyre: yes but I'd consider that somewhat more essential. Also the bars for adding new stuff to the stdlib have been raised (people learn from past mistakes ;))
[14:12:12] <han-solo> it was convenient to put it in stdlib i guess
[14:12:14] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[14:12:14] <lericson> wtf is going on with the mass renicking
[14:12:24] *** Joins: DavidMilestone69 (~DavidMile@182.64.6.188)
[14:12:31] *** Quits: _vanessa_ (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[14:12:35] *** Quits: shad (~shad@user/shad) (Read error: Connection reset by peer)
[14:12:42] <jinsun> wyre: yes build is not in stdlib, python core devs and the packaging people both don't want the packaging tools to be in stdlib
[14:14:05] <apollo13> I'd say that is good after all; not every python user wants to build things. Creating a venv on the other hand most wanna do
[14:14:13] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 256 seconds)
[14:14:19] <wyre> I see
[14:14:26] *** Joins: _vanessa_ (~vanessa@103.160.128.7)
[14:14:27] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[14:14:37] <wyre> what about the point about sdist is also a binary (tarball)? ðŸ˜†
[14:15:21] *** Quits: lbalhar (~lbalhar@spsei.osanet.cz) (Ping timeout: 256 seconds)
[14:15:24] <apollo13> what else would you call it?
[14:15:35] *** Quits: merrinx (~merrinx@dhcp2894-stud.wifi.uit.no) (Quit: WeeChat 3.4)
[14:15:36] <apollo13> it is a distribution containing the source codes, so sdist is rather fitting
[14:15:43] <jinsun> it doesn't matter how it is compressed, the contents decide whether it is sdist or bdist
[14:16:12] *** Joins: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu)
[14:16:12] *** Joins: mcope (~matt@user/mcope)
[14:16:12] *** Joins: mrwick (~mrwick@user/mrwick)
[14:16:12] *** Joins: hams (~hams@user/hams)
[14:16:12] *** Joins: civillian (~nick@118.211.117.130)
[14:16:12] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[14:16:12] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[14:16:12] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[14:16:12] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[14:16:12] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:16:12] *** Joins: waveform (~quassel@waveform.plus.com)
[14:16:12] *** Joins: yac (~user@user/yac)
[14:16:12] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[14:16:12] *** Joins: strugee (~strugee@steevie.strugee.net)
[14:16:12] *** Joins: moose (~moose@user/moose)
[14:16:12] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[14:16:12] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:16:12] *** Joins: asix (~Anders@user/asix)
[14:16:12] *** Joins: mrec (~markus@sundtek.de)
[14:16:12] *** Joins: Ingvix (~Ingvix@user/ingvix)
[14:16:12] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:16:12] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[14:16:12] *** Joins: odrling (~odrling@korone.aidoru.agency)
[14:16:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:16:12] *** Joins: ecool (~ecool@ecool.dev)
[14:16:12] *** Joins: Phineas (~Phineas@user/Phineas)
[14:16:12] *** Joins: teroshan (~teroshan@static.28.181.130.94.clients.your-server.de)
[14:16:12] *** Joins: overrider (~overrider@user/overrider)
[14:16:12] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[14:16:12] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[14:16:12] *** Joins: {HD} (~{HD}@86.106.121.213)
[14:16:12] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[14:16:12] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:16:12] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[14:16:12] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[14:16:12] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[14:16:12] *** Joins: koopman (sid466269@ilkley.irccloud.com)
[14:16:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:16:12] *** Joins: tinystoat (~squeek@user/tinystoat)
[14:16:12] *** Joins: synic (~squish@li74-118.members.linode.com)
[14:16:12] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[14:16:12] *** Joins: Phase (~phase@user/phase)
[14:16:12] *** Joins: w0rp (~w0rp@w0rp.com)
[14:16:12] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[14:16:12] *** Joins: libussa (~libussa@libussa.net)
[14:16:12] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[14:16:12] *** Joins: crunchy_david (~david@pgguru.net)
[14:16:12] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[14:16:12] *** Joins: Pici (~bnrubin@li1014-36.members.linode.com)
[14:16:12] *** Joins: swistak (~swistak@185.21.216.141)
[14:16:12] *** Joins: justGhost (~justache@user/justache)
[14:16:12] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[14:16:12] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[14:16:12] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[14:16:12] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[14:16:12] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[14:16:12] *** Joins: Dan39 (~dan@user/dan39)
[14:16:12] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[14:16:12] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[14:16:12] *** Joins: queue- (~nerd@user/queue/x-7267619)
[14:16:12] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[14:16:12] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[14:16:12] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[14:16:12] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[14:16:12] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[14:16:12] *** Joins: Spydar007 (~spydar007@user/spydar007)
[14:16:12] *** Joins: simplicity (~yti@user/simplicity)
[14:16:12] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[14:16:12] *** Joins: n1000 (~n1000@user/n1000)
[14:16:12] *** Joins: aoei (~aoei@nethackscoreboard/aoei)
[14:16:12] *** Joins: Helle (~helle@45.83.235.185)
[14:16:12] *** Joins: meejah (~meejah@rutas.meejah.ca)
[14:16:12] *** Joins: dlam (~dlam@dlam.me)
[14:16:12] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[14:16:12] *** Joins: kolcon (~kolcon@v.kolouch.org)
[14:16:12] *** Joins: NOTevil (~notevil@user/notevil)
[14:16:12] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[14:16:12] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[14:16:12] *** Joins: streety (~streety@li761-24.members.linode.com)
[14:16:12] *** Joins: achilleas (~ach@user/achilleas)
[14:16:12] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[14:16:12] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[14:16:12] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[14:16:12] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[14:16:12] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[14:16:12] *** Joins: han-` (~han`@user/han-/x-0887595)
[14:16:12] *** Joins: nickodd (~nickodd@user/nickodd)
[14:16:12] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[14:16:32] <wyre> well, the contents of the whl (carefully structured zip) are also source code, aren't they? ðŸ¤”
[14:16:41] <jinsun> well the comprerssion matters too I guess, the formats are specified
[14:17:00] <apollo13> wyre: only partially
[14:17:04] *** DavidMilestone69 is now known as DavidMilestone-n
[14:17:14] <apollo13> a wheel could solely contain .so files or dlls
[14:17:18] <apollo13> + some metadata
[14:17:34] <apollo13> also a sdist usually contains readme and tests which are not part of a wheel
[14:17:44] <wyre> I see
[14:17:57] <jinsun> wyre: wheel is created after your build tool runs, and it doesn't contains the stuff that is required for building, like your setup.py or pyproject.toml
[14:18:02] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Changing host)
[14:18:02] *** Joins: amaenli (~amaenli@user/amaenli)
[14:18:07] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[14:18:11] <apollo13> for pure python projects the difference between sdist and bdist is less clear, but if you include C code it becomes quite evident
[14:18:25] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:18:27] <apollo13> ie the sdist would have the .c/.h files and the bdist would have .so files for your platform
[14:18:29] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[14:18:31] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[14:18:33] *** Joins: tpr (~tpr@user/tpr)
[14:18:35] <apollo13> that is also why there is just one sdist but many bdist
[14:18:52] *** Joins: foul_owl (~kerry@71.212.133.174)
[14:19:28] <wyre> oh, gotcha ðŸ˜Š
[14:21:00] *** Joins: rsx (~dummy@ppp-188-174-150-145.dynamic.mnet-online.de)
[14:21:11] *** Joins: SR-71 (~user@user/SR-71)
[14:21:21] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[14:21:21] *** Joins: zamanf (~dev@user/zamanf)
[14:21:31] *** Abrax- is now known as Abrax
[14:22:57] *** Joins: darksun (~darksun@user/darksun)
[14:23:07] *** Quits: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451) (Quit: Client closed)
[14:24:45] *** Quits: panella32 (~panella32@45.9.251.36) (Ping timeout: 256 seconds)
[14:24:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:27:40] <jinsun> wyre: so with wheels, pip just has to extract it (and read the metadata for dependcies and stuff), but with sdist pip has to figure out the build tool, then build the package and then install it
[14:28:18] *** Joins: driib23 (~driib@185.65.135.234)
[14:28:26] <apollo13> actually if wheel is installed it will create a wheel and then install that :D full inception
[14:28:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:d293:a95e:b595:a77d:be89)
[14:29:16] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:29:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:29:32] <wyre> jinsun, I cannot identify if you mean 'seutptools' or 'build' module when you say 'build tool' ðŸ¤”
[14:29:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:30:01] *** Joins: frost (~frost@user/frost)
[14:30:05] *** Quits: driib2 (~driib@185.195.233.159) (Ping timeout: 256 seconds)
[14:30:05] *** driib23 is now known as driib2
[14:30:28] <han-solo> build backend i assume
[14:30:36] <han-solo> which can be setuptools or flit or some others
[14:30:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:30:44] <wyre> I see
[14:30:51] <apollo13> wyre: `build` the tool can build with `setuptools` (the build backend)
[14:31:12] <wyre> sure, I understand this :)
[14:31:12] <jinsun> wyre: I meant setuptools or some other backend
[14:31:24] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:31:43] *** Joins: mickey8 (~user@user/mickey)
[14:32:05] <jinsun> build is a frontend like pip, whose job is to find out the backend and fulfill the build-system requirements, then let the backend build the actual package
[14:32:45] <apollo13> and it wouldn't be unheard of if at some point in time pip vendors build and then uses that as "frontend"
[14:32:53] <apollo13> at some point everything will go full circle then :D
[14:33:18] <apollo13> and confusion will be endless
[14:33:29] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:34:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[14:34:37] <SR-71> Well we would still have Rossum
[14:36:44] <callq> Hey, what is this called? `for thing in things:` a type of for-loop, yea?
[14:36:45] *** Joins: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br)
[14:36:57] <callq> Hey, what is this called? `for thing in things:` a type of for-loop, yea?
[14:37:02] <SR-71> a for loop
[14:38:56] *** Joins: Klinda (~superleag@user/klinda)
[14:39:31] <EtherMan> Is it possible for python to identify what init system is being used? Like I could check for files but if I check for /etc/init.d/ then that exists even for systemd.
[14:41:31] *** Joins: XOPK (~OPK@n175-39-90-165.meb4.vic.optusnet.com.au)
[14:41:34] *** Quits: XOPK (~OPK@n175-39-90-165.meb4.vic.optusnet.com.au) (Quit: Textual IRC Client: www.textualapp.com)
[14:42:09] *** Joins: OPK (~OPK@user/opk)
[14:42:32] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[14:44:35] *** Joins: shad (~shad@user/shad)
[14:44:41] <apollo13> EtherMan: if you can talk to the systemd bus it is a rather clear indication that it is running systemd
[14:45:12] *** Joins: chele (~chele@user/chele)
[14:45:47] <grawity> EtherMan: IIRC the official way to check for systemd presence is os.path.exists("/run/systemd/system")
[14:45:48] <EtherMan> Not necessarily since there could be other init systems, now or in the future that simply emulate that.
[14:46:12] <grawity> well if they emulate that, then they better emulate the systemd features that you're trying to use...
[14:46:15] *** Joins: Emet-Selch (~haise01@user/haise01)
[14:46:31] *** Emet-Selch is now known as haise01
[14:47:24] <EtherMan> I'm not trying to use systemd though. I simply gave an example. I'm just trying to identify which init system is being used. No more
[14:47:40] <grawity> ok, so the official way to check for systemd presence is os.path.exists("/run/systemd/system")
[14:47:59] <grawity> well
[14:48:06] <grawity> "/run/systemd/system/" more precisely
[14:48:18] <grawity> that's what sd_booted() does in -lsystemd
[14:48:40] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:48:50] <apollo13> EtherMan: curious, which diff does it make to your app?
[14:49:00] <apollo13> I generally try to go without any weird autodetection
[14:49:49] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[14:51:04] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:51:22] *** Joins: mickey8 (~user@user/mickey)
[14:51:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:52:08] *** haise01 is now known as Azem
[14:52:36] *** Joins: xkuru (~xkuru@user/xkuru)
[14:53:57] <EtherMan> It makes a difference in that OScam has different versions that work slightly differently to interface with depending on certain init systems. As an example, if you start it from systemd or initd, then it suddenly lacks the ability to reload its configs using SIGHUP, and we now instead have to actually make a call towards its API instead to tell it to reload there.
[14:54:27] *** Quits: DavidMilestone-n (~DavidMile@182.64.6.188) (Ping timeout: 256 seconds)
[14:54:42] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[14:54:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:54:50] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[14:55:01] *** Quits: DavidMilestone (~DavidMile@182.64.6.188) (Ping timeout: 256 seconds)
[14:55:02] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:55:07] *** Joins: mickey8 (~user@user/mickey)
[14:55:25] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[14:56:23] *** _vanessa_ is now known as vanessa
[14:57:02] *** Joins: DavidMilestone (~DavidMile@182.64.6.188)
[14:58:53] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:59:49] *** Joins: kts (~kts@103.73.237.62)
[14:59:55] <apollo13> EtherMan: outch that is annoying
[15:00:13] <apollo13> is always using the api an option? :D
[15:00:24] * apollo13 prefers single code paths as might be evident
[15:01:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:02:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:02:58] <EtherMan> No, because the api doesn't even exist in some versions.
[15:03:49] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9) (Ping timeout: 240 seconds)
[15:04:08] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[15:04:13] *** Quits: Socra (~Socra@206.217.216.21) (Ping timeout: 240 seconds)
[15:04:16] <pingpongball> why not use common lisp instead of python?
[15:04:18] <pingpongball> or
[15:04:19] <pingpongball> HY
[15:04:27] <pingpongball> https://github.com/hylang/hy
[15:05:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:05:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[15:05:22] <pingpongball> come join if not *common lisp* gang
[15:05:24] <pingpongball> https://gigamonkeys.com/book/
[15:05:27] <pingpongball> :)
[15:06:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[15:06:34] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9)
[15:06:46] <pingpongball> *But when I tried to do it in Common Lisp, it took me only two days, and I ended up not only with a Java class file parser but with a general-purpose library for taking apart any kind of binary file* so goes for python
[15:07:33] *** Joins: fikran (~fikran@user/fikran)
[15:07:37] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:08:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:08:14] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[15:09:08] *** Joins: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru)
[15:10:25] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Read error: Connection reset by peer)
[15:10:37] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[15:10:55] *** Joins: nomic (~nomic@185.192.69.51)
[15:11:01] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:12:04] *** Quits: jbooker (~jbooker@212.228.50.201) (Quit: jbooker)
[15:13:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:15:55] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:17:40] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:17:49] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:3eb6:2526:d971:8214) (Ping timeout: 240 seconds)
[15:18:37] *** Quits: adham_ (~adham@37.239.160.25) (Ping timeout: 240 seconds)
[15:19:35] *** Joins: adham (~adham@37.239.160.17)
[15:19:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:22:24] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:23:55] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 256 seconds)
[15:24:06] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:24:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:24:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:09] *** Joins: Barones (~Barones@user/Barones)
[15:27:11] *** Quits: foul_owl (~kerry@71.212.133.174) (Ping timeout: 252 seconds)
[15:27:11] *** Quits: pro_z_ (~pro_z@37.214.69.56) (Quit: LINUX is 2 sexy now)
[15:27:19] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[15:27:31] *** Joins: blingrang__ (~blingrang@user/blingrang)
[15:28:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:29:16] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:bd9c:4716:f59e:2699) (Quit: Ping timeout (120 seconds))
[15:29:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:30:08] *** Quits: bluedust (~bluedust@117.204.132.6) (Remote host closed the connection)
[15:30:08] *** Joins: Nightelf (~Nightelf@156.213.125.175)
[15:30:47] *** Joins: blingrang3 (~blingrang@user/blingrang)
[15:31:08] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[15:31:36] *** Quits: blingrang__ (~blingrang@user/blingrang) (Ping timeout: 245 seconds)
[15:31:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:31:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:33:40] *** Joins: onichomp (~onichomp@2806:264:4408:870:c947:19bd:8b58:f6f9)
[15:34:58] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[15:36:01] *** Joins: ejjfunky (~ejjfunky@125.164.23.223)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:21] *** Joins: walterwhip (~www@user/walterwhip)
[15:38:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:40:01] *** Joins: frost (~frost@user/frost)
[15:41:25] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[15:41:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:41:56] *** Joins: vaio (~gary@user/ghost)
[15:43:09] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[15:43:58] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:45:50] *** Joins: maxzor (~maxzor@2a01cb04054faa00de36cc5a8e915128.ipv6.abo.wanadoo.fr)
[15:45:58] <nedbat> pingpongball: hi, welcome
[15:46:12] <pingpongball> !hi
[15:46:13] <pingpongball> :)
[15:46:38] <nedbat> pingpongball: we're happy to help you with Python things.
[15:46:45] <pingpongball> ok
[15:47:20] <pingpongball> what text editor you use for python nedbat
[15:47:30] <nedbat> pingpongball: same as I use for anything: vim
[15:47:44] <pingpongball> try doom emacs :)
[15:47:56] <pingpongball> https://github.com/hlissner/doom-emacs
[15:48:18] <pingpongball> only two things i like about it magit+alot of themes :)
[15:48:49] <rendar> let's say i have `def fn(a:A, ...` and that i have `callback=fn`, now: having 'callback' how to check if its first argument is called 'a' and the annotations says type 'A' ?
[15:48:52] <pingpongball> one thing i hate about python is it is complex
[15:48:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:49:05] <nedbat> pingpongball: seems like you are here to tell people to switch languages and also switch editors?
[15:49:09] *** Joins: mickey8 (~user@user/mickey)
[15:49:19] <rendar> pingpongball, to be honest, python is one of the easiest language ever existed
[15:49:21] <pingpongball> aummm no :)
[15:49:29] <nedbat> pingpongball: let's not debate this please.
[15:49:31] <bjs> rendar: typing has a Callable but it's fairly restricted,  maybe you want a Protocol
[15:49:45] <pingpongball> yes i agree, python is easiest :)
[15:49:49] <bjs> rendar: a Protocol (with __call__) lets you specify the exact signature of the callable including names of arguments
[15:49:52] <rendar> bjs, uhm, i'm not familiar with Protocol, is that a library?
[15:50:08] <bjs> rendar: typing.Protocol  see https://www.python.org/dev/peps/pep-0544/
[15:50:15] <rendar> bjs, thanks
[15:50:24] <bjs> rendar: specifically https://www.python.org/dev/peps/pep-0544/#callback-protocols probably
[15:50:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[15:51:39] <rendar> bjs, ok i got the point of Protocol, but isn't using that to just check a function first argument like trying to kill a fly with a bazooka?
[15:51:48] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:52:07] <bjs> rendar: well there's also Callable which is the type of a Callable thing but it cannot express that the argument is called 'a'
[15:52:28] <rendar> hmm, i see
[15:52:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:53:01] <jinsun> maybe the new callable syntax should have added that option
[15:53:23] <jinsun> got rejected because it doesn't do anything new (well that was one of the reasons)
[15:53:59] <rendar> it seems i have all the info i want into fn.__annotations__
[15:54:08] *** Joins: pro_z (~pro_z@37.214.69.56)
[15:54:36] <bjs> rendar: oh maybe I misunderstood,  you didn't want to *write* an annotation that said that you just wanted to read the annotation from a function?
[15:54:39] <bjs> see inspect.signature(f)
[15:54:45] *** Joins: fef (~thedawn@user/thedawn)
[15:54:52] <rendar> yes, just to read
[15:55:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:56:04] <jinsun> there is https://docs.python.org/3/library/inspect.html#inspect.get_annotations too in 3.10
[15:56:17] <rendar> bjs, yes, that helps a lot, unfortunately signature object is not subscriptable, i can't use [0] to get the first argument
[15:57:02] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[15:57:20] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[15:57:33] *** Joins: mei (~mei@user/mei)
[15:57:41] <bjs> rendar: well the Signature object has a .parameters attribute
[15:58:12] <rendar> which is an OrderedDict
[15:58:19] <rendar> not by args order
[15:58:22] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[15:58:31] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:58:33] <han-solo> `next(iter(that.items())[1]` # if it will have atleast one arg ?
[15:58:35] <bjs> rendar: it should be ordered by parameter
[15:58:48] <rendar> oh
[15:58:49] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Quit: "bye :* ")
[15:59:00] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Client Quit)
[15:59:01] <bjs> as in, in definition order
[15:59:46] <han-solo> `s/.items/.values/;s/[1]//`
[15:59:46] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Ping timeout: 250 seconds)
[16:00:00] <jinsun> rendar: ordered doesn't mean sorted
[16:00:01] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[16:00:16] <rendar> jinsun, ok right
[16:00:32] <rendar> han-solo, cool, that will raise StopIteration if the function hasn't any params, btw
[16:00:39] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[16:00:50] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[16:00:58] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:01:06] <han-solo> can use a default arg None, for next ?
[16:01:23] <rendar> uhm, how?
[16:01:34] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[16:01:50] *** Joins: nfc_ (nfc@tilde.institute)
[16:02:00] <han-solo> `next(..., None)` but i feel like i misdirecting
[16:02:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:03:08] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[16:04:20] <rendar> TypeError: 'NoneType' object is not subscriptable
[16:04:26] <rendar> can't, you have [1]
[16:04:30] <rendar> next(..)[1]
[16:04:51] *** Joins: aniketgm (~aniketgm@49.36.58.36)
[16:04:53] <han-solo> `p = next(iter(params.values()), None)`
[16:05:07] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[16:05:12] <jinsun> next(..., [None]) :D
[16:05:18] <han-solo> :D
[16:06:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[16:07:31] *** Quits: KnowledgeShark_ (~Knowledge@50.34.198.222) (Remote host closed the connection)
[16:08:13] *** Joins: KnowledgeShark_ (~Knowledge@50.34.198.222)
[16:08:53] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[16:09:42] *** Joins: harpia (~harpia@143.208.84.235)
[16:10:48] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:11:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[16:11:06] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:11:31] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[16:11:31] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 256 seconds)
[16:11:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:11:37] *** justm33 is now known as justm3
[16:12:12] *** Joins: M3troidman (~buttler@196.244.191.100)
[16:15:04] *** Quits: savolla (~quassel@84.44.28.28) (Remote host closed the connection)
[16:16:06] <callq> I need to determine if I'm on the last iteration of a for-loop.
[16:16:50] *** zmotaj_ is now known as zmotaj
[16:16:50] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[16:16:50] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[16:17:06] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[16:17:57] <nedbat> callq: there isn't a way to know that in general. can you tell us more about your situation?
[16:18:31] *** Quits: harpia (~harpia@143.208.84.235) (Remote host closed the connection)
[16:18:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[16:18:56] *** Parts: BullHorn_ (~BullHorn@zapdos.randomlab.info) ()
[16:20:44] <InPhase> callq: That's a question that all of us ponder some mornings.
[16:20:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 245 seconds)
[16:20:54] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:26:09] *** Joins: arseru (uid515527@user/arseru)
[16:26:54] *** Parts: arseru (uid515527@user/arseru) ()
[16:29:11] *** Joins: Guest77 (~Guest77@47.54.179.251)
[16:29:54] *** Joins: bluedust (~bluedust@117.204.132.6)
[16:30:12] <Guest77> best module for bitcoin in python? - creating wallet - creating address - checking if payment has been made to address
[16:30:54] <apollo13> eh :/
[16:31:42] <Guest77> I want to accept bitcoin payments on python web app, best library?
[16:33:58] *** Joins: JordiGH (~jordi@user/jordigh)
[16:34:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[16:34:06] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 245 seconds)
[16:34:53] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:35:22] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[16:35:22] *** Joins: M3troidman (~buttler@196.244.191.100)
[16:35:36] *** Quits: Guest77 (~Guest77@47.54.179.251) (Quit: Client closed)
[16:36:23] *** Quits: grooverman (~grooverma@189.110.126.17) (Read error: Connection reset by peer)
[16:36:42] <odinsbane> Probably depends on your provider, they should have an api
[16:36:58] *** Joins: adham_ (~adham@37.239.160.9)
[16:37:02] *** Quits: adham (~adham@37.239.160.17) (Ping timeout: 240 seconds)
[16:38:01] *** Joins: grooverman (~grooverma@179.97.162.187)
[16:38:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:38:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17)
[16:38:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cd96:474c:cc93:ce17) (Changing host)
[16:38:21] *** Joins: skapata (~Skapata@user/skapata)
[16:38:51] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[16:39:44] *** Quits: DavidMilestone (~DavidMile@182.64.6.188) (Quit: Client closed)
[16:41:43] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[16:41:44] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[16:45:50] *** Quits: wei2912_ (~wei2912@138.75.71.147) (Remote host closed the connection)
[16:45:50] *** Quits: adham_ (~adham@37.239.160.9) (Read error: Connection reset by peer)
[16:47:12] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[16:47:13] *** Quits: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[16:47:28] *** Joins: adham (~adham@37.239.160.10)
[16:47:32] *** Joins: spithash (~spithash@user/spithash)
[16:48:44] *** Joins: vn3t (quassel@gateway/vpn/protonvpn/vn3t)
[16:50:02] *** Quits: aniketgm (~aniketgm@49.36.58.36) (Ping timeout: 240 seconds)
[16:50:17] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[16:50:59] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[16:51:48] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[16:53:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:53:28] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[16:54:01] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[16:54:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:56:30] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[16:56:49] *** Joins: pyxal (~pyxal@212.97.250.66)
[16:56:57] <pyxal> Hi everyone
[16:57:04] <ElQelinho> hi
[16:57:29] <pyxal> I have a question about something in a python file, handled by the mintwelcome screen. Can anyone help?
[16:57:45] <pyxal> Linux mint welcome screen, that is.
[16:57:48] *** Joins: DavidMilestone (~DavidMile@182.64.6.188)
[16:57:49] *** Quits: DavidMilestone (~DavidMile@182.64.6.188) (Client Quit)
[16:58:35] <The-Compiler> pyxal: ask the actual question, and people will surely jump in if they can :)
[16:59:18] *** Joins: someuser (~user@62.114.143.5)
[16:59:19] <r4ulrm> !btc
[16:59:30] *** Quits: bluedust (~bluedust@117.204.132.6) (Remote host closed the connection)
[17:00:11] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[17:00:24] <pyxal> Okay. The Linux Mint Welcome Screen is simply a pythonfile, called mintwelcome.py. In the welcome screen, it is possible to turn on Dark mode. What command(s) get executed when turning on dark mode in the welcome screen?
[17:01:51] <grym> pyxal: link the source
[17:02:06] <jinsun> https://github.com/linuxmint/mintwelcome/blob/master/usr/lib/linuxmint/mintwelcome/mintwelcome.py
[17:02:14] <han-solo> good bot
[17:02:19] <jinsun> :D
[17:02:24] <jinsun> it is using Gtk
[17:02:26] *** Joins: pepper (~pepper@user/pepper)
[17:02:40] <pyxal> https://bpa.st/LHZA
[17:02:57] <pyxal> wow you guys are fast!
[17:03:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:03:30] <The-Compiler> pyxal: based on "builder.get_object("switch_dark").connect("state-set", self.on_dark_mode_changed)" I am guessing it will call the on_dark_mode_changed function
[17:03:49] <grym> https://github.com/linuxmint/mintwelcome/blob/master/usr/lib/linuxmint/mintwelcome/mintwelcome.py#L295  looks like this
[17:03:52] <The-Compiler> pyxal: and that in turn sets self.dark_mode to True and calls change_color(): https://github.com/linuxmint/mintwelcome/blob/master/usr/lib/linuxmint/mintwelcome/mintwelcome.py#L269-L293
[17:03:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:04:14] *** Joins: shad (~shad@user/shad)
[17:04:17] <grym> lookign for the envvar gtk-theme, i guess?
[17:04:23] <pyxal> I tried to understand it, with my very limited python understanding. My goal is to actually activate dark mode from the terminal.
[17:04:59] <grawity> not everything that affects the system is necessarily a "command that gets executed"
[17:05:01] *** Joins: yhsiveht (~Nishant@2405:201:f005:c007:51b9:2550:9b70:b031)
[17:05:05] <The-Compiler> pyxal: are you on Cinnamon, Mate or XFCE?
[17:05:09] <pyxal> Cinnamon
[17:05:24] <grawity> though there may be equivalent commands
[17:05:28] <The-Compiler> pyxal: so the relevant part is this here: https://github.com/linuxmint/mintwelcome/blob/master/usr/lib/linuxmint/mintwelcome/mintwelcome.py#L280-L284
[17:05:37] *** Quits: thevishy (~Nishant@2405:201:f005:c007:6cf1:7245:a05f:ea21) (Ping timeout: 240 seconds)
[17:05:38] *** Joins: szymon (~ugh@37.120.156.246)
[17:05:43] <The-Compiler> that uses Gio.Settings from Python
[17:06:03] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (Ping timeout: 250 seconds)
[17:06:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[17:06:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[17:06:42] <pyxal> well yes, after line 274, where theme variable is set to be dark mode, correct?
[17:07:10] <The-Compiler> yep
[17:07:29] <pyxal> and that equals Mint-Y-Dark
[17:07:34] <The-Compiler> so either write a small Python script with those 5 lines, or find an equivalent command line tool which can set gio settings
[17:07:47] *** Quits: pro_z (~pro_z@37.214.69.56) (Ping timeout: 250 seconds)
[17:08:09] <grawity> Gio.Settings.set_string() does a D-Bus call, doesn't actually run anything â€“ but if you want to do it from shell, the equivalent command is `gsettings set`
[17:08:15] <The-Compiler> maybe "gio set", http://manpages.ubuntu.com/manpages/bionic/man1/gio.1.html
[17:08:17] <pyxal> would that work? simple run python script with those 5 lines, and it does that same thing as activating dark mode from the welcome screen?
[17:08:24] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[17:08:34] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:08:40] <The-Compiler> pyxal: try it and see, maybe it needs to be set before the desktop environment is actually inizialized
[17:08:56] <grawity> not `gio set` â€“ that would be closer to Gio.File.set_attribute
[17:09:02] *** Quits: Thanatos (~Thanatos@197.210.84.55) (Read error: Connection reset by peer)
[17:09:30] *** Joins: sabry (~sabry@197.37.49.72)
[17:09:40] *** Joins: Thanatos (~Thanatos@197.210.84.55)
[17:11:36] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[17:12:01] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:12:01] <The-Compiler> ah, makes sense
[17:12:25] *** Joins: kts (~kts@103.73.237.4)
[17:14:15] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[17:14:34] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[17:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:15:06] *** Joins: jsmooth (~quassel@068-186-087-058.res.spectrum.com)
[17:15:06] *** Quits: jsmooth (~quassel@068-186-087-058.res.spectrum.com) (Changing host)
[17:15:06] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:16:33] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:16:54] *** Joins: fikran (~fikran@user/fikran)
[17:17:38] *** Joins: bluedust (~bluedust@117.204.132.6)
[17:18:08] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:18:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[17:19:23] *** Joins: dme86 (~dan@user/dan86)
[17:20:34] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[17:22:42] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Remote host closed the connection)
[17:22:58] *** Joins: aniketgm (~aniketgm@49.36.58.36)
[17:23:34] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[17:24:18] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 260 seconds)
[17:24:23] *** Joins: mcpackey (~pm0001@p57b83e30.dip0.t-ipconnect.de)
[17:24:29] *** Joins: d1cor (~diego@179.63.242.122)
[17:24:42] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:25:30] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[17:25:46] *** Joins: mcope (~matt@user/mcope)
[17:25:48] *** Joins: cosimone (~user@93-47-228-191.ip115.fastwebnet.it)
[17:27:03] *** jiffe1 is now known as jiffe
[17:27:26] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Remote host closed the connection)
[17:27:55] *** Joins: tribo (~tribo@p5b0fb115.dip0.t-ipconnect.de)
[17:28:55] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[17:29:16] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[17:29:31] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[17:29:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[17:30:46] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Ping timeout: 245 seconds)
[17:31:22] <jsmooth> I asked this yesterday, but what (if any) options are there for having Python (including use of STDLIB) code transpiled to JavaScript?
[17:31:47] <grawity> does WASM count?
[17:31:56] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:32:09] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[17:33:24] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:33:25] <pyxal> wow, it worked!
[17:33:30] <pyxal> man, thx!
[17:33:48] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[17:33:51] *** Joins: zeden (~zeden@user/zeden)
[17:34:54] *** Joins: mfao (~mao@187.1.168.150)
[17:35:16] *** Joins: bambams (~bambams@user/bambams)
[17:36:51] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[17:37:10] <CrtxReavr> jsmooth, there's jython. . . a python interpreter written in Java.
[17:37:23] <CrtxReavr> Oh, javascript. ...
[17:37:46] <CrtxReavr> That makes no sense though. . . jscript is an interpreted language.
[17:38:23] <grawity> it isn't any more "interpreted" than python
[17:38:45] <CrtxReavr> Yes. . . but "transpiled?"
[17:38:57] <hodapp> note that JScript is also its own thing
[17:38:59] <grawity> yeah as in "python source converted to javascript source"
[17:39:26] <CrtxReavr> I mean. . . you could write something, but eww. . . why would you?
[17:39:42] *** JoelJoel is now known as Joel
[17:39:44] <hodapp> AFAIK you'd have to have the entire Python interpreter running in JS for this
[17:40:16] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[17:40:30] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[17:41:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[17:41:21] <mfao> Hi, everyone!  how to return the first digit of a regex match? example: the match is match.group(1)  how to check for the first digit?
[17:42:04] <grawity> the match is a string, so you use [0] to access the first character in it
[17:42:44] <mfao> so like: match.group(1)[0
[17:42:47] <mfao> ]
[17:42:48] <mfao> ?
[17:44:55] *** Joins: dme86 (~dan@user/dan86)
[17:45:09] <jinsun> yes, you can test it in the a repl
[17:45:36] *** Quits: adham (~adham@37.239.160.10) (Quit: Leaving)
[17:46:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[17:46:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:47:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:48:08] <jsmooth> I thought Jython was for compiling Python on JVM for Java run-time
[17:48:18] <jsmooth> I'm hoping to transpile to JavaSCript
[17:48:51] <jsmooth> I'm gonna take a hint that there isn't any such good option. Thanks though
[17:48:52] *** Parts: jsmooth (~quassel@user/jsmooth) ()
[17:48:57] <jinsun> jsmooth: there is https://github.com/brython-dev/brython
[17:49:00] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Quit: Leaving)
[17:49:03] *** kua is now known as kuahara
[17:49:47] <jinsun> doesn't even need a compilation step apparently
[17:52:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:52:12] <mfao> thanks guys
[17:54:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:54:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:55:22] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[17:55:39] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[17:58:19] *** Quits: mfao (~mao@187.1.168.150) (Quit: Leaving)
[17:58:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:59:50] *** Joins: macros__ (~macros@p200300dcdf2022001d61816936d7662c.dip0.t-ipconnect.de)
[17:59:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:00:24] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:00:43] *** Joins: Pickchea (~private@user/pickchea)
[18:01:11] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 245 seconds)
[18:01:24] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[18:01:38] *** Joins: JanC (~janc@user/janc)
[18:01:51] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[18:02:01] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:03:12] <Pickchea> Hey, weird question but given a series like `pd.Series(['1', '3'], index=['a', 'b'])` how do I get a list like `['a', 'b', 'b', 'b']`? Yes, I want to create a population from a distribution or histogram.
[18:03:31] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 268 seconds)
[18:03:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:03:54] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:04:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:04:35] *** Joins: dme86 (~dan@user/dan86)
[18:04:47] *** Joins: bloody (~bloody@user/bloody)
[18:05:10] <Pickchea> I could convert the series into a dict, iterate over the key-value-pairs and create the result like that but I'm looking for an applicative-style solution.
[18:05:58] *** Joins: mnabid (uid448607@id-448607.lymington.irccloud.com)
[18:05:59] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[18:05:59] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.72) (Remote host closed the connection)
[18:06:14] *** mnabid is now known as Guest6733
[18:06:18] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Ping timeout: 250 seconds)
[18:06:55] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:07:02] *** Quits: Guest6733 (uid448607@id-448607.lymington.irccloud.com) (Client Quit)
[18:07:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:07:15] *** Quits: pyxal (~pyxal@212.97.250.66) (Quit: leaving)
[18:07:23] *** Joins: fandre1986 (~fandre198@131.228.48.68)
[18:07:30] *** Joins: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net)
[18:07:38] <Repiphany> Pickchea: collections.Counter has an .elements method that does that
[18:07:48] *** Quits: Guest403 (~bitnoice@cB8815BC1.dhcp.as2116.net) (Client Quit)
[18:08:00] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[18:08:35] *** Quits: cosimone (~user@93-47-228-191.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[18:09:03] *** Joins: vanessa (~farawayas@103.160.128.7)
[18:09:27] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:09:35] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:10:03] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:10:33] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[18:11:29] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[18:11:38] <Pickchea> Repiphany, ha, crazy, `list(collections.Counter(ser.to_dict()).elements())` does the job. However, I have to question myself if the import is really worth it.
[18:12:56] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[18:13:13] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[18:13:52] *** Quits: nomic (~nomic@185.192.69.51) (Quit: Leaving)
[18:14:20] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:14:29] *** Joins: damonlynch_ (~ngaio@68.235.43.174)
[18:14:52] *** Joins: pro_z (~pro_z@37.214.50.160)
[18:16:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:32] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[18:17:20] <Pickchea> Repiphany, if you still interested, a list comprehension can do it without import: `[val for (val, count) in series.iteritems() for count in range(count)]`
[18:17:39] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:17:53] *** Quits: damonlynch (~ngaio@static-68-235-44-43.cust.tzulo.com) (Ping timeout: 256 seconds)
[18:18:02] *** Lando-HoloNet is now known as Lando-SpacePimp
[18:18:09] <CrtxReavr> Why are you so afraid of an import?
[18:18:26] *** Joins: valr (~valr@user/valr)
[18:19:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:21:28] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130) (Read error: Connection reset by peer)
[18:21:39] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:21:52] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:22:38] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 268 seconds)
[18:23:14] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[18:23:16] *** Joins: eron (~eron@2804:431:c7c2:c5b6:606b:fc:dbf4:ce91)
[18:23:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:24:16] <SnoopJ> FWIW, `collections` is probably already imported when you start up the interpreter.
[18:25:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:27:03] *** Quits: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br) (Quit: vsantana)
[18:27:07] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[18:27:18] *** Joins: Left_Turn (~Matthew@2a00:23c8:5f92:1801:80f1:f70f:75be:3480)
[18:30:37] *** Joins: bluedust_ (~bluedust@103.160.233.28)
[18:31:13] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:aa06:4f68:1ab3:d9ce) (Quit: pvergain)
[18:33:11] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[18:33:22] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[18:34:18] *** Quits: bluedust (~bluedust@117.204.132.6) (Ping timeout: 260 seconds)
[18:36:01] <Pickchea> CrtxReavr, childhood trauma.
[18:36:30] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19da-a6c6-e719-aa3f.res6.spectrum.com)
[18:37:01] *** Joins: mrwick (~mrwick@user/mrwick)
[18:41:11] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:43:33] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:44:55] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[18:45:32] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[18:47:31] *** Joins: doko (~doko@110-170-76-238.static.asianet.co.th)
[18:48:00] *** Joins: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[18:51:14] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 252 seconds)
[18:51:41] *** Parts: k_sze (~k_sze@mail2.kalunite.net) (Leaving)
[18:52:06] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:52:13] *** Parts: macros__ (~macros@p200300dcdf2022001d61816936d7662c.dip0.t-ipconnect.de) (Konversation terminated!)
[18:52:38] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:53:10] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:54:48] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:54:50] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 260 seconds)
[18:55:41] *** Joins: martums5 (~martums@user/martums)
[18:55:57] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[18:56:07] *** Azem is now known as haise01
[18:56:24] *** Quits: Elzington (~Elzington@static-68-235-44-44.cust.tzulo.com) (Quit: Leaving)
[18:56:58] *** Parts: Left_Turn (~Matthew@2a00:23c8:5f92:1801:80f1:f70f:75be:3480) (Leaving)
[18:57:11] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:00:16] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:02:03] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:02:23] *** Joins: amikrop (~amikrop@2a02:587:545c:b600:9596:7dd:74e8:c7ee)
[19:03:35] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:03:59] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:04:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:04:38] *** Quits: mcpackey (~pm0001@p57b83e30.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:04:53] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[19:05:56] <amikrop> Hello. This https://bpa.st/ZXMQ is part of my tox.ini file. I want to avoid duplicating the py{38, 39, 310, py38} part, but couldn't manage to do it through tox variables/aliases. Is there a way to do it? Thanks in advance.
[19:06:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:07:09] <amikrop> In fact I failed to refer to a "variable" of the same section (as it was defined in).
[19:07:36] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:07:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:08:06] <sveinse> When using "from builtins import str" in order to have dual py2/py3 code, it has a major caveat: a="Some string"; isinstance(a, str) is False. Just wasted a couple of hours before I realized that a literal string is not str...
[19:08:24] <SnoopJ> sveinse, is there a reason you're not using six for that?
[19:09:27] *** Quits: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903) (Ping timeout: 256 seconds)
[19:09:28] *** Joins: crashrep (~crashrep@user/crashrep)
[19:10:24] <exarkun> sveinse: you mean on python 2 a "" literal is not an instance of builtins.str?  it is if you import __future__.unicode_literals
[19:10:34] <callq> I need to do something different on the last iteration of my for loop. How to detect for-loop last iteration?
[19:10:39] <exarkun> sveinse: and of course u"" will be an instance of builtins.str regardless
[19:10:43] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:10:54] *** Joins: esther (~esther@2607:fb90:20de:be25:c0e8:ce98:409e:6e03)
[19:10:56] <exarkun> but yes.  it is quite confusing.  I certainly spent a lot of time on very similar issues during porting.
[19:11:09] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[19:11:11] <exarkun> callq: there is nothing special in python for that, so just do it however you can do it.
[19:11:26] <callq> a seperate counter that increments I suppose
[19:11:31] *** Joins: nfc_ (nfc@tilde.institute)
[19:11:32] <sveinse> Ultimately I'd like to move on from py2 compatibility, but well, there are other reasons where I can't just yet
[19:12:02] <exarkun> sveinse: sure.  for non-trivial projects, having at least one py2/py3 version seems to usually make sense.
[19:12:33] <exarkun> although considering just how abandoned python2 is at this point, you probably want to move from that to py3-only as quick as you can.
[19:13:02] *** Quits: matkor (~matkor@ns0.ant.gliwice.pl) (Quit: Konversation terminated!)
[19:13:26] <sveinse> This pacakge is first of all written by a C++ dev and secondly, it uses a really old pickle-like tool called gnosis, which is doing all kind of intrusive low-level interaction with the py object. TL;DR: Not easy.
[19:13:47] <exarkun> thrilling
[19:13:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[19:14:16] <exarkun> I _do_ find that the CPython/C API is substantially easier to deal with in the py2 to py3 transition than actual Python code, fwiw.
[19:14:33] <exarkun> but of course that doesn't mean there can't be /any/ tricky cases
[19:14:57] *** Quits: esther (~esther@2607:fb90:20de:be25:c0e8:ce98:409e:6e03) (Ping timeout: 240 seconds)
[19:15:11] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Ping timeout: 250 seconds)
[19:15:34] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[19:16:55] <sveinse> The pure py2->3 migration has been pretty straight forward. This intrusive library for serialization/pickle has not. Before my stripdown it had tests that dated back to pre py 2.0, and it made a lot of python capability tests.
[19:17:26] <exarkun> nice
[19:17:31] <exarkun> truely vintage software
[19:17:45] <sveinse> indeed
[19:17:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:18:20] <sveinse> I wonder what the py version were when I started with py. Around 2002-ish
[19:18:31] <sveinse> I can't remember
[19:18:31] <jinsun> callq: why can it  not be done after the loop?
[19:18:39] <exarkun> 2002 was the early 2.x era
[19:18:43] *** Joins: SilverIbex55 (~SilverIbe@16.62.26a9.ip4.static.sl-reverse.com)
[19:18:54] *** Joins: B1GB4LLS (~WH1T3R@37.155.193.14)
[19:18:56] *** Joins: tWqaq_ (~tWqaq@101.93.138.74)
[19:19:05] <SnoopJ> sveinse, is there some constraint that precludes using `six`? The library solves a lot of the problems that require intricate knowledge of 2/3 trivia.
[19:19:07] *** Quits: tribo (~tribo@p5b0fb115.dip0.t-ipconnect.de) (Quit: WeeChat 2.8)
[19:19:23] <SnoopJ> I don't know how far back in the 2.x series it reaches though
[19:19:30] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[19:19:37] <jaggz> I accidentally printed my logfile (from logfile = open()) instead of my "logfilename", and I like its output
[19:19:48] <jaggz> but is it in some way wrong to print that?
[19:19:57] <exarkun> SnoopJ: `builtins` on Python 2 comes from the `future` package which is a lot more complete than `six`
[19:20:08] <jaggz> Logfile @ <_io.TextIOWrapper name='/home/jaggz/var/logs/pulseox-patient/2022-02-10.log' mode='a' encoding='UTF-8'>
[19:20:12] <SnoopJ> exarkun, in what sense?
[19:20:18] <sveinse> SnoopJ: Oh, to be clear: even thou the lib dates back to 2.early, I can assume 2.7 for the py2 stuff. Luckily.
[19:20:23] <exarkun> What senses are available?
[19:20:36] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 268 seconds)
[19:20:37] <SnoopJ> I haven't a clue, that's why I asked you to clarify.
[19:20:46] <jaggz> is that < io.TextIOWrapper ...> thing, with the name= included, a reliable thing?  I want to make sure the logfilename is always printed
[19:20:49] <exarkun> In the sense of "stuff to help with porting to Python 3"
[19:20:51] <SnoopJ> What does builtins offer that six doesn't, to say it another way
[19:21:00] <sveinse> SnoopJ: I found a web page describing how to migrate using future
[19:21:17] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:a63b:e43b:b5f9:588f) (Ping timeout: 240 seconds)
[19:21:33] *** Joins: waynew (~wayne@user/waynew)
[19:21:52] <SnoopJ> sveinse, six is well worth considering if you're doing something polyglot and/or porting (i.e. `modernize` will target `six` when migrating py2 code to 3.x)
[19:21:59] <exarkun> SnoopJ: I dunno.  I guess the API docs are available to both of us.
[19:22:14] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[19:22:17] <SnoopJ> I see. Strong statement to make on the basis of not knowing.
[19:22:28] <exarkun> Okay sorry I meant "I don't feel motivated to explain it"
[19:22:38] <exarkun> Perhaps we could just leave it at that.
[19:22:49] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[19:22:53] <SnoopJ> There is no functional difference between the two, but sure.
[19:23:02] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[19:23:07] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
[19:23:16] *** Joins: stoneware (~stoneware@user/stoneware)
[19:23:48] <SnoopJ> erm, "the two" being "I don't know" and "I don't want to explain." I can believe there are differences between using future and six.
[19:24:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:24:16] <sveinse> The bigger picture is that I started with a really old pure py2 package. I have used future in order to allow it to run on py3, which stripping down the really old py2 stuff that's not needed anymore. I need both py2 and py3 running for verification and validation until feature complete. Once done, I'll retire the py2 variant and live happily ever after.
[19:24:26] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:24:51] <SnoopJ> sveinse, just making sure you know that there's a library out there that targets exactly this use-case and has already reasoned through much of the pain
[19:24:52] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:25:20] <SnoopJ> It sounds like you may be pretty committed to your current approach
[19:25:22] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[19:25:22] <sveinse> SnoopJ: yeah, I haven't used six directly, but I see six is in my venv
[19:25:36] *** Joins: rvalue- (~rvalue@user/rvalue)
[19:25:41] <SnoopJ> it's everywhere, because it's good :)
[19:25:50] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[19:26:10] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[19:26:15] *** Joins: fikran (~fikran@user/fikran)
[19:26:26] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[19:26:32] <SnoopJ> (and because 2.x was kept on life support for so long)
[19:26:34] *** Quits: kostkon (~kostkon@2a02:587:a116:f212:4d86:1980:f91d:1e03) (Ping timeout: 260 seconds)
[19:27:38] *** Joins: kostkon (~kostkon@ppp-94-64-95-31.home.otenet.gr)
[19:28:03] *** rvalue- is now known as rvalue
[19:29:12] *** Joins: Masterphi (~Masterphi@user/masterphi)
[19:29:13] *** Joins: lakrass (~lakrass@user/lakrass)
[19:30:02] *** Quits: amikrop (~amikrop@2a02:587:545c:b600:9596:7dd:74e8:c7ee) (Quit: Client closed)
[19:30:33] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[19:31:45] *** Joins: dme86 (~dan@user/dan86)
[19:32:54] *** Quits: sabry (~sabry@197.37.49.72) (Quit: Client closed)
[19:33:11] <sveinse> If it's of interest: https://python-future.org/faq.html#what-is-the-relationship-between-future-and-six
[19:34:14] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:34:15] <sveinse> I had to look it up now that I got bad conscience for not using six :D
[19:34:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[19:34:57] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[19:35:12] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[19:35:17] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Ping timeout: 256 seconds)
[19:36:57] <SnoopJ> Ah, that's handy indeed
[19:37:32] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[19:37:43] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[19:38:11] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:39:44] *** looah is now known as llua
[19:41:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[19:41:39] *** Joins: Gustavo6046 (~AdminUser@2804:14d:4cd8:96b6:f57:b290:e69a:6832)
[19:41:53] *** Joins: paul424 (~tom@ip-5-172-237-145.multi.internet.cyfrowypolsat.pl)
[19:41:57] *** Quits: Gustavo6046 (~AdminUser@2804:14d:4cd8:96b6:f57:b290:e69a:6832) (Client Quit)
[19:41:58] *** Noisytoot_ is now known as Noisytoot
[19:42:08] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:43:21] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:45:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:46:13] *** Joins: humbertowoody (~humbertow@189.144.109.242)
[19:46:31] *** Joins: mdnotg (~mdnotg@78.185.225.213)
[19:47:02] *** Quits: mdnotg (~mdnotg@78.185.225.213) (Client Quit)
[19:49:26] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[19:49:34] *** Quits: ApostleInTriumph (~ApostleIn@193.55.176.111) (Quit: Client closed)
[19:49:57] <aniketgm> z
[19:49:58] *** Quits: widp (~user@124.123.104.227) (Read error: Connection reset by peer)
[19:51:33] *** Joins: portalrat_ (~portalrat@user/portalrat)
[19:51:43] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[19:52:15] *** Joins: vsantana (~Thunderbi@fttx-177136148223.usr.predialnet.com.br)
[19:53:15] *** Joins: audiophile_ (~audiophil@user/audiophile)
[19:53:35] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[19:58:03] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:58:38] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[19:59:19] *** Joins: pingpongball (~pingpongb@43.228.192.121)
[19:59:33] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[20:00:31] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:01:15] *** Quits: fandre1986 (~fandre198@131.228.48.68) (Quit: Connection closed)
[20:01:16] *** Quits: bluedust_ (~bluedust@103.160.233.28) (Remote host closed the connection)
[20:02:08] <vn3t> hi all. I am looking for a python book where I can learn how to automate a kind of a self service platform
[20:02:39] *** Quits: yhsiveht (~Nishant@2405:201:f005:c007:51b9:2550:9b70:b031) (Quit: Leaving)
[20:02:59] <vn3t> i already google it and I found few books but want to ask in here maybe I can get different references
[20:04:14] <SnoopJ> vn3t, "Automate the Boring Stuff with Python" is free and well-liked, it may fit your needs well
[20:04:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:04:59] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[20:05:35] <aniketgm> SnoopJ: +100 âœŒ
[20:08:02] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[20:08:09] *** Quits: kostkon (~kostkon@ppp-94-64-95-31.home.otenet.gr) (Ping timeout: 256 seconds)
[20:08:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:09:04] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Changing host)
[20:09:04] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[20:09:37] *** Joins: kostkon (~kostkon@2a02:587:a105:6e43:acab:739a:96a:5044)
[20:10:33] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[20:10:40] <vn3t> thx SnoopJ
[20:11:31] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[20:11:32] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:11:47] *** Joins: Barones (~Barones@user/Barones)
[20:12:18] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[20:12:29] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Client Quit)
[20:13:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[20:13:37] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[20:15:01] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:15:43] *** Joins: vitali64 (~vitali64@user/vitali64)
[20:15:49] *** Joins: magla (~gelignite@55d43657.access.ecotel.net)
[20:15:57] *** Joins: thiras (~thiras@user/thiras)
[20:15:58] *** Joins: thiras_ (~thiras@user/thiras)
[20:15:58] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:16:00] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[20:16:01] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[20:16:04] *** Joins: jwoe324 (~jwoe324@2001:470:69fc:105::1:1a67)
[20:16:40] <sveinse> In py2 there is a type called InstanceType. What is the py3 equivalent of that?
[20:17:53] *** Stench is now known as Staunch
[20:18:53] <SnoopJ> sveinse, I wouldn't expect there to be one because Py3 doesn't have old-style classes
[20:19:11] <sveinse> Found my answer: https://bugs.python.org/issue8206
[20:20:41] *** Quits: B1GB4LLS (~WH1T3R@37.155.193.14) (Remote host closed the connection)
[20:20:59] <sveinse> My library has code like this: `isInstance = lambda o: type(o) is InstanceType` and `isInstanceLike = lazy_any(isInstance, hasDictAttrs, hasSlots)`
[20:21:54] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:21:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[20:22:37] <sveinse> So essentially this would be true always on recent py2 and py3? `isinstance(o, InstanceType)` (if such type existed)
[20:22:45] <SnoopJ> `type(obj) is ...` seems suspicious to me
[20:22:47] *** Quits: vn3t (quassel@gateway/vpn/protonvpn/vn3t) (Ping timeout: 250 seconds)
[20:23:40] *** Quits: aniketgm (~aniketgm@49.36.58.36) (Quit: leaving)
[20:23:44] <sveinse> SnoopJ: you won't believe how much suspicious things there is in this code.. How to read an xml file? By use of eval() ;) - working on it to put it that way
[20:24:14] <sveinse> I showed it to another py dev the other day. He simply said: "Take their keyboards away"
[20:25:11] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:25:11] <SnoopJ> sveinse, I'm not super familiar with the details of InstanceType but it seems to me that type(o) would generally be not-that
[20:25:19] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[20:25:47] <sveinse> SnoopJ: but using `type(obj) is ...` were the way to do it back in the days, weren't it? I seem to remember using it a bit in the past. isinstance() is fairly recent
[20:26:16] <SnoopJ> sveinse, 2.7 has isinstance()
[20:26:18] <sveinse> There's no excuse for using now thou
[20:26:22] <sveinse> precisely
[20:26:30] <SnoopJ> didn't you say this code is 2.7?
[20:26:56] <SnoopJ> I think isinstance() was introduced in 2.0, even.
[20:27:12] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[20:27:15] <SnoopJ> https://docs.python.org/2.7/whatsnew/2.0.html#extending-embedding-changes
[20:27:20] <sveinse> SnoopJ: The lib is ancient, but the only py2 compatibility it needs to have is 2.7. So I can up what ever ancient is being used. Like this
[20:27:25] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:27:48] <SnoopJ> sveinse, I couldn't say without more context and some time to look at it, but I suspect the author may have written code that is effectively useless
[20:28:20] <sveinse> But I need to understand what the InstanceType test really does in order to either port or erraticate it
[20:28:47] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 256 seconds)
[20:28:52] <SnoopJ> judging by just the lambda, maybe the intent was something like `issubclass(type(o), InstanceType)` ?
[20:29:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[20:29:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:29:28] <SnoopJ> I don't really know enough about the old/new-style divide to have much faith in that guess, though
[20:29:55] *** Joins: dme86 (~dan@user/dan86)
[20:30:28] <TML> isInstanceLike = lazy_any(isInstance, hasDictAttrs, hasSlots) <-- looks to me like they're trying to detect old vs. new-style classes
[20:30:46] <SnoopJ> yea that's what I imagine isInstance is intended to do as well
[20:31:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:31:09] *** Joins: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e)
[20:31:11] <jinsun> so it can be replaced with `lambda obj: False` now I guess?
[20:31:18] <SnoopJ> hmm, this idiom does appear in 2.7.18's pydoc
[20:31:37] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 256 seconds)
[20:31:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Client Quit)
[20:31:50] *** Joins: cgrage (~cgrage@107.175.102.155)
[20:32:11] <SnoopJ> https://github.com/python/cpython/blob/v2.7.18/Lib/pydoc.py#L1509
[20:32:25] <TML> jinsun: <3
[20:32:30] <TML> love that idea :)
[20:32:59] *** Quits: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e) (Remote host closed the connection)
[20:33:09] <SnoopJ> I would probably see what values it takes at runtime from my current state of ignorance about old-style classes
[20:33:37] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:33:40] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:34:03] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:7081:314:1342:7d42)
[20:34:12] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:7081:314:1342:7d42) (Remote host closed the connection)
[20:34:13] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:34:14] *** Joins: fofoni_ (~fofoni@user/fofoni)
[20:34:20] *** Joins: nomic2 (~nomic@185.192.69.51)
[20:34:28] *** Joins: wilk (~wilk@aceu142.neoplus.adsl.tpnet.pl)
[20:34:28] *** Quits: wilk (~wilk@aceu142.neoplus.adsl.tpnet.pl) (Changing host)
[20:34:28] *** Joins: wilk (~wilk@user/wilk)
[20:34:48] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[20:35:08] *** Joins: bluedust (~bluedust@103.160.233.28)
[20:35:57] *** Joins: fofoni_ (~fofoni@user/fofoni)
[20:35:57] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[20:35:57] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[20:36:08] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[20:36:10] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[20:36:19] <sveinse> Ah nice. It is actually only true for old-style classes. Good. Code deleted. Thanks.
[20:36:43] <SnoopJ> yes, InstanceType is explicitly about old-style classes
[20:38:22] <aphysically> huh, I can't (easily) use pass as an argparse argument
[20:38:28] <aphysically> args.pass is a syntax error :D
[20:38:36] <SnoopJ> aphysically, right, because it's a keyword
[20:39:09] *** Joins: fofoni_ (~fofoni@user/fofoni)
[20:39:18] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[20:39:25] <aphysically> I can work around it, there's a dest option
[20:39:34] <SnoopJ> yea, you can do `add_argument("--pass", dest="_pass")` etc.
[20:39:52] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Quit: WeeChat 3.4)
[20:39:53] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[20:40:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:40:29] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:40:51] <aphysically> probably you could also spam your code with getattr and such
[20:40:57] <aphysically> (bad solution)
[20:41:38] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:41:43] <aphysically> SnoopJ: I've almost fixed everywhere that PEP 563 or stringified annotations were broken with typing :^)
[20:42:00] <SnoopJ> I don't recall the breakage you mean, but neat :)
[20:42:13] * SnoopJ has a hard time following the machinations of typing
[20:42:28] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) ()
[20:43:31] *** Joins: someone235 (uid419897@id-419897.ilkley.irccloud.com)
[20:44:20] <aphysically> if PEP 563 is on or annotations were stringified, a lot of valid stuff would throw runtime errors if you called get_type_hints on it
[20:44:27] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ff:95b4:dc44:d8a4:34ea:d5f9) (Quit: Leaving)
[20:44:36] <SnoopJ> huh
[20:44:39] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 250 seconds)
[20:45:22] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[20:45:28] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:45:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[20:46:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:47:50] *** Joins: newpy (~newpy@2601:280:4381:1390:1ae5:162b:eaca:5e92)
[20:47:51] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[20:48:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[20:48:15] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[20:48:35] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:48:48] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[20:49:35] *** nomic2 is now known as nomic
[20:49:38] *** Quits: pingpongball (~pingpongb@43.228.192.121) (Quit: Client closed)
[20:49:45] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[20:49:55] <aphysically> and for the same underlying code reason Annotated[] just straight up didn't work in a lot of places
[20:50:09] *** Joins: cliluw (~cliluw@47.147.73.223)
[20:50:26] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[20:51:26] <sveinse> Just to show an example of my journey: https://bpa.st/X4BA <- Everything's so... convoluted that I'm struggeling to see the end of the string :P
[20:53:06] *** Joins: wac (~wac@user/wac)
[20:53:10] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[20:53:12] *** Joins: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[20:53:28] *** Joins: fofoni_ (~fofoni@user/fofoni)
[20:54:10] <SnoopJ> that looks pretty cursed
[20:54:13] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:55:17] *** Quits: NealRame (~a@125-253-107-134.ip4.superloop.com) (Ping timeout: 240 seconds)
[20:55:22] *** Joins: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de)
[20:57:41] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[20:59:02] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[20:59:12] *** Joins: NealRame (~a@114.129.191.99)
[21:00:08] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[21:00:50] *** Quits: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:02:31] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[21:02:41] *** Joins: kickingvegas (~cchoi@c-69-181-182-237.hsd1.ca.comcast.net)
[21:03:41] *** Quits: Thanatos (~Thanatos@197.210.84.55) (Ping timeout: 245 seconds)
[21:03:42] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[21:04:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:04:11] *** Quits: tristan_ (~tristan@223.33.164.16) (Remote host closed the connection)
[21:04:30] *** Joins: tristan_ (~tristan@223.33.164.16)
[21:04:37] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:04:43] <rendar> if i have `x,y = next(iter(inspect.signature(fn3).parameters.items()))`, y is a class like: <Parameter "b: __main__.A">, but given 'y' how can i check if its of type(A) ?
[21:05:06] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:05:11] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:05:41] *** Joins: Masterphi (~Masterphi@user/masterphi)
[21:06:12] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:06:33] *** Quits: tWqaq_ (~tWqaq@101.93.138.74) (Quit: Leaving)
[21:06:40] *** Joins: Everything (~Everythin@37.115.210.35)
[21:07:15] <jinsun> y.annotation == A ?
[21:07:19] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[21:07:27] <dirtwash> anyone got experience with seaborn?
[21:07:35] <rendar> jinsun, yes, thanks
[21:07:46] <SnoopJ> dirtwash, I've used it. It's generally best to just ask your real question
[21:08:47] <dirtwash> I want to do a heatmap but it'd have about 4 billion tiles/squares. Ijust wonder if python can even handle that
[21:09:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:09:08] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[21:09:15] <SnoopJ> Technically, yes, but it sounds like that might be abysmally slow.
[21:09:27] <SnoopJ> (and would likely consume lots of memory)
[21:09:28] <teut> what in seaborn?
[21:09:40] <dirtwash> teut: https://seaborn.pydata.org/
[21:09:44] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[21:09:51] <SnoopJ> There's a plotting library that lets you do heatmaps with massive data using some GPU trickery, let me see if I can remember the name...
[21:10:11] <dirtwash> SnoopJ: yes maybe you also have a good idea for another issue that being that 'hot' tiles would be only a few million, so im not even sure it lights up much
[21:10:16] <teut> what do you need help with there?
[21:10:21] <dirtwash> but I dont know how to transofrm this either :/
[21:10:30] <dirtwash> teut: was a question of feasability
[21:10:44] <dirtwash> but also now the question of how to maybe downscale the thing
[21:10:58] <teut> oh the heapmap one
[21:11:22] *** Quits: paul424 (~tom@ip-5-172-237-145.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[21:11:45] *** Joins: goldfish (~goldfish@user/goldfish)
[21:11:51] <teut> run multiple python scripts using powershell
[21:12:07] <teut> in different processes
[21:12:11] <SnoopJ> dirtwash, datashader is what I was thinking of: https://datashader.org/
[21:12:30] <teut> pass an arg and save the image
[21:12:33] <dirtwash> SnoopJ: ;o sexy
[21:12:41] <dirtwash> buti have no gpu haha
[21:12:45] <SnoopJ> I've never had a reason to use it, but it's very cool
[21:12:46] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[21:12:48] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6)
[21:12:52] <SnoopJ> but ah, that does away with that idea, then.
[21:13:13] <SnoopJ> dirtwash, do you necessarily need to render every one of these tiles, or can you reduce the data before plotting?
[21:13:17] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:13:29] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[21:13:29] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[21:13:29] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[21:13:34] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:13:40] <dirtwash> SnoopJ: yes I wonder if I can reduce it, the issue is...so its 4 billion tiles but only about 50mio are 'hot' which is very little
[21:13:49] <dirtwash> but I still want accurate representation if I scale
[21:14:29] * SnoopJ isn't sure what "accurate" means re: amount of data plotted
[21:14:40] <escherial> hey, for any of you who've used click, is there a way to import an existing click command, but just add something to the beginning of the command? for example, i'd like to not have to copy all of these click decorators when i just want to preload some stuff and effectively invoke this worker() command with the same stuff it normally takes:
[21:14:40] <escherial> https://github.com/rq/rq/blob/master/rq/cli/cli.py#L222
[21:14:54] <dirtwash> SnoopJ: if I reduce it, it needs to be properly scaled
[21:14:59] <escherial> (i'm trying to write a custom worker script for rq, since i need to load a bunch of stuff into memory before it can serve any tasks)
[21:15:05] <dirtwash> SnoopJ: so the visual impression is the same as with the full set
[21:15:11] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:15:47] <escherial> there's a basic worker script definition in the rq docs, but it doesn't handle all these command line args that i think would be useful: https://python-rq.org/docs/workers/#performance-notes
[21:16:53] *** Quits: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:17:30] <SnoopJ> escherial, sounds a bit like Context.invoke() might be useful to you. https://click.palletsprojects.com/en/8.0.x/advanced/#invoking-other-commands
[21:17:31] *** Joins: mat001 (~mat001@72.28.108.216)
[21:17:40] <dirtwash> hm this is not simple, i can easily imagine it animated , the brain is indeed superior
[21:17:41] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[21:17:54] <SnoopJ> I vaguely remember there being a more direct way to invoke one click application from another, but I can't seem to find it in the docs
[21:17:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:18:10] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Client Quit)
[21:18:28] <escherial> SnoopJ: interesting, thanks. the bit about it being discouraged is off-putting, but that's a good start
[21:18:34] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[21:18:51] <escherial> frankly, i don't even know if i need all those options on the 'rq worker' command...it just seemed prudent to not get rid of them if i could avoid it
[21:19:19] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: Textual IRC Client: www.textualapp.com)
[21:19:26] <SnoopJ> I think the "discouraged" applies to doing this inside of an application, rather than one application using the Click interface defined by another
[21:19:33] <escherial> aha
[21:20:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[21:20:26] *** Quits: humbertowoody (~humbertow@189.144.109.242) (Ping timeout: 250 seconds)
[21:20:32] *** Joins: Moosadee (~Moosadee@198.248.96.42)
[21:20:57] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[21:21:06] *** Joins: exocom (~exocom4@217-180-232-30.sycmilaa.metronetinc.net)
[21:21:11] *** Joins: CombatVet (~c4@user/combatvet)
[21:21:13] <stewie925> a very quick question on global variables - https://bpa.st/D72A (cannot access a global variable from a function)
[21:22:27] <jinsun> stewie925: when you do `global_value = value_copy` it becomes local
[21:22:43] <teut> https://bpa.st/BRKA
[21:22:46] <teut> use this
[21:22:55] <stewie925> ohhhhh.... thank you jinsun!
[21:22:59] <teut> but using globals like this , its bad
[21:23:12] <sveinse> Is there a reliable way to detect if an object is an instance of a class? Or is this moot? Not any specific class, but generally. Everything seems to be an instance of `object` in py3
[21:23:25] <jinsun> stewie925: if you want to keep it global you have to write `global global_value` in the beginning of your function body (like teut's paste shows)
[21:23:50] <SnoopJ> sveinse, it's moot
[21:23:54] <teut> use of classes is the way to do things like these
[21:23:55] <jinsun> sveinse: yeah everything is instance of object
[21:24:06] <stewie925> teut and jinsun, thank you
[21:24:19] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:24:23] <jinsun> s/teut/SnoopJ i guess :D
[21:24:24] *** Joins: anddam (~anddam@user/anddam)
[21:24:37] <sveinse> ok, thanks. Refactoring time again then
[21:24:55] <SnoopJ> jinsun, I'm not sure exactly how this works with old-style classes but it's definitely moot in 3.x
[21:25:10] <sveinse> I'm ignoring old-style classes
[21:25:10] *** Joins: emf (~emf@2620:10d:c090:400::5:21fc)
[21:25:28] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[21:25:32] <SnoopJ> well, the distinction just does not exist in 3.x
[21:25:40] <teut> whats old style classes?
[21:25:43] <sveinse> yep, thanks
[21:25:47] *** Quits: exocom (~exocom4@217-180-232-30.sycmilaa.metronetinc.net) (Quit: Leaving)
[21:25:50] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Remote host closed the connection)
[21:25:59] <SnoopJ> teut, it refers to how classes were defined before 2.2
[21:26:06] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Excess Flood)
[21:26:09] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[21:26:14] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[21:26:20] <teut> thats quite old since I started from 3.6
[21:26:29] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[21:26:45] <SnoopJ> yes, it was an archaic distinction even when the code sveinse is reasoning about was written, I can't imagine why the author cared
[21:26:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:27:05] <stewie925> in python3 we can declare classes like `class ClassName:` no need for `class ClassName(object):` I believe
[21:27:06] *** Joins: mickey8 (~user@user/mickey)
[21:27:16] <SnoopJ> yea, that's the short version
[21:27:28] <SnoopJ> the long version: https://wiki.python.org/moin/NewClassVsClassicClass?action=recall&rev=20
[21:28:03] <anddam> hi, on ubuntu 18.04 using pyenv and Python 3.8, I create a venv using "python3 -m venv myenv" then activate and import setuptools, I get    ModuleNotFoundError: No module named '_ctypes'
[21:28:42] <SnoopJ> anddam, did you build this Python yourself? This usually means libffi-dev wasn't installed at build time.
[21:28:56] <jinsun> anddam: did you install all the build dependencies? https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[21:29:02] <sveinse> SnoopJ: heh, I have code that first tests for isNewStyleClass(thing) and then later tests for isInstanceLike(thing) and then tests for the regular int, float, str and so on. Every finnicky object thing seems to be captured :(
[21:29:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:29:34] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:29:43] <anddam> jinsun: ho ho ho, merry apt-ismas
[21:29:45] <anddam> no I have not
[21:29:56] <anddam> SnoopJ: I did build myself, with pyenv
[21:30:02] <SnoopJ> ah, sorry, you did mention that
[21:30:17] <jinsun> anddam: remove the version, and rebuild it after installing all the build deps
[21:30:18] <anddam> I was in fact looking into build output and adding stuff, I did not remember there was a whole list of deps
[21:30:18] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Client Quit)
[21:30:19] <anddam> thanks
[21:30:25] <SnoopJ> anddam, your build log probably contains an error about not being able to find libffi, install the libffi-dev package and rebuild
[21:30:34] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[21:30:48] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[21:30:54] <mat001> Question about flask gettin data from the form (it's rely "quart", the asycnc ver of flask, but it's similar). How do I get the form data, specifically the text of the selected checkboxes in the submit form. Right now I have request.form.. before I render_template. Will this get me the data after I submit?
[21:30:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Client Quit)
[21:30:56] <anddam> SnoopJ: it just had _errors_ apropos zlib and bzip2
[21:31:04] <anddam> s/errors/warnings/
[21:31:47] <SnoopJ> hmm, it should complain about ffi AFAIK but anyway, that's likely your culprit
[21:32:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[21:32:57] <anddam> I figure
[21:32:58] <SnoopJ> the dev guide has a handy list of dependencies for optional modules: https://devguide.python.org/setup/#build-dependencies
[21:32:58] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-116.range86-160.btcentralplus.com)
[21:33:01] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:33:24] *** Joins: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net)
[21:33:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:33:37] *** Quits: ejjfunky (~ejjfunky@125.164.23.223) (Quit: Leaving)
[21:33:49] *** Quits: Phase (~phase@user/phase) (Remote host closed the connection)
[21:34:17] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 256 seconds)
[21:34:19] <anddam> SnoopJ: it complains, but with a meager    :INFO: Could not locate ffi libs and/or headers
[21:34:51] <SnoopJ> right
[21:35:00] <anddam> yep, working
[21:35:01] <anddam> thanks again
[21:35:03] <SnoopJ> it's non-fatal, it just doesn't give you ctypes
[21:35:36] *** Joins: fikran (~fikran@user/fikran)
[21:35:52] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[21:36:10] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[21:37:41] *** Joins: unyu (~pyon@user/pyon)
[21:37:57] *** Joins: Betal (~Betal@user/betal)
[21:38:48] *** Quits: Harlin (~DonQixote@75-163-202-34.clsp.qwest.net) (Quit: Leaving)
[21:39:00] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net)
[21:39:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:39:15] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net) (Remote host closed the connection)
[21:39:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:39:40] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net)
[21:39:41] *** Joins: grooverman_ (~grooverma@179.97.133.197)
[21:41:26] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b013:3303:cbfd:b0ad) (Quit: Textual IRC Client: www.textualapp.com)
[21:41:44] *** Quits: grooverman (~grooverma@179.97.162.187) (Ping timeout: 252 seconds)
[21:43:00] *** Joins: l4yer (~l4yer@2001:ac8:31:8900:1012:8fa1:422e:5368)
[21:43:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:43:47] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[21:43:47] *** Joins: kosh (~kosh@user/kosh)
[21:44:14] *** Joins: curious_user (~curious_u@2a01:e0a:41c:b7d0:c67:80a3:9f54:260e)
[21:44:16] *** Parts: curious_user (~curious_u@2a01:e0a:41c:b7d0:c67:80a3:9f54:260e) ()
[21:44:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:45:11] *** Joins: vicfred (~vicfred@user/vicfred)
[21:45:40] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[21:45:57] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:45:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[21:47:56] *** erry_ is now known as erry
[21:48:23] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[21:49:00] <anddam> different topic, I am seeing these while building a package from that environment https://termbin.com/an2c
[21:49:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[21:49:10] *** Joins: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de)
[21:49:13] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:49:20] <anddam> a few of those smell of missing libm
[21:50:14] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:50:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[21:50:38] <anddam> but that's libc, so I very much doubt that
[21:51:31] *** Joins: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de)
[21:51:42] <sveinse> This is certainly NOT how to write python: https://bpa.st/BVHQ - I collected the call chain into the same function. Been working on this for some hours and I still can't really tell what it does :P haha. Away it goes.
[21:51:57] *** Quits: Moosadee (~Moosadee@198.248.96.42) (Ping timeout: 240 seconds)
[21:52:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:52:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[21:53:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[21:53:45] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Quit: Leaving)
[21:53:59] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[21:54:22] *** Joins: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf)
[21:55:34] *** Quits: SilverIbex55 (~SilverIbe@16.62.26a9.ip4.static.sl-reverse.com) (Quit: Connection closed)
[21:55:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[21:55:56] <sveinse> Next on list: Something called "mutators"
[21:56:05] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:57:08] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[21:57:48] <toma> aren't mutators just setter methods in a class?
[21:58:03] <xcombelle> sveinse: it is your code ?
[21:58:58] <xcombelle> sveinse: str,unicode is replaced by bytes,str in python3
[21:59:03] *** Quits: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[21:59:16] *** Joins: Roey (~Roey@user/Roey)
[21:59:23] <SnoopJ> xcombelle, they're porting 2.7 code
[21:59:42] <sveinse> xcombelle: definitely not. I'm porting a package to py3 via py2.7 and discovered it had a sub-package with an extremely ancient and intrusive object manipulation library
[21:59:51] *** Joins: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de)
[22:00:25] *** Quits: greedom (~greedom@p200300de670d1a00fd920fdb9d0565d7.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:00:46] <SnoopJ> sveinse, your earlier paste re: InstanceType etc. brought to mind the notion that the author was writing an older version of Python on top of Python
[22:01:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:02:00] *** Quits: newpy (~newpy@2601:280:4381:1390:1ae5:162b:eaca:5e92) (Quit: Leaving)
[22:02:03] *** Joins: ASUS (~ASUS@user/ASUS)
[22:02:11] <sveinse> SnoopJ: yes, it could seem so. And as I pointed out, clearly written by a C++ dev, so there are much what is considered unpythonic
[22:02:15] <ASUS> Are dynamically typed languages inherently evil?
[22:02:24] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:02:28] <ASUS> I tried a C# job and found it terrible
[22:02:39] <SnoopJ> ASUS, what does evil mean?
[22:02:45] <sveinse> ASUS: that sounds like an opiniated statement
[22:02:46] *** Quits: mei (~mei@user/mei) (Quit: mei)
[22:02:56] <ASUS> which statement
[22:03:21] <anddam> SnoopJ: equipped with tail, hooves, sulfur smell. The usual
[22:03:35] <sveinse> That typed languages are evil. Or typeless for that matter.
[22:03:41] <SnoopJ> hmm, snakes are basically all tail...
[22:04:53] <bjs> SnoopJ: not really
[22:05:20] <SnoopJ> I thought about adding a "(this is a biologically-nonsensical joke)" addendum
[22:05:23] *** Joins: thiras (~thiras@user/thiras)
[22:05:29] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 250 seconds)
[22:05:40] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:05:44] <bjs> SnoopJ: if you look at a snake skeleton it's much more obvious where the tail starts and how much of the snake is Â¬tail
[22:06:24] <SnoopJ> I'm unsure how to evaluate the question, at any rate. It sounds like you're asking us about your own aesthetic preferences
[22:06:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:07:20] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:07:25] <sveinse> I didn't see that one coming on the flamewar-esque question of dynamically typed languages :D :P
[22:07:32] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[22:08:08] *** Quits: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[22:08:24] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[22:08:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:08:36] *** Quits: fofoni_ (~fofoni@user/fofoni) (Quit: Leaving)
[22:09:00] <SensibleSalmon[m> ASUS: I thought C# was statically typed? Am I crazy?
[22:09:09] <ASUS> it's both
[22:09:24] <grym> ASUS:  `var` does not a dynamic language make.
[22:09:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:09:32] <jinsun> TIL snakes have sketon :D
[22:09:36] <ASUS> you can have char c = 'c'; or var c = 'c';
[22:09:40] <grym> it just means roslyn gets to DTRT at compile time
[22:09:42] <jinsun> s/sketon/skeleton
[22:09:54] <SensibleSalmon[m> `var` just infers the type
[22:10:03] <SensibleSalmon[m> it's still a `char`, it's just not explicitly stated
[22:10:06] <jinsun> but you can do dynamic stuff too https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/using-type-dynamic
[22:10:17] <SensibleSalmon[m> if you do `var c = 'c'; c = 2;` the compiler should yell at you
[22:10:42] <jinsun> ASUS: and you can do static typing with python too https://docs.python.org/3/library/typing.html
[22:11:01] <ASUS>  The Python runtime does not enforce function and variable type annotations. They can be used by third party tools such as type checkers, IDEs, linters, etc.
[22:11:12] <ASUS> it's basically just documentation
[22:11:37] <bjs> ASUS: well it's "just documentation" aside from the static type checking tools you can run to do the type check
[22:11:40] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[22:11:43] <bjs> But yes
[22:12:01] <ASUS> what if I use ed
[22:12:14] <bjs> ed is a text editor? so I don't see the relevance
[22:12:29] <ASUS> I mean a non checking editor
[22:12:41] <jinsun> ASUS: the type checker can be run outside of IDEs and editors
[22:12:41] <bjs> ASUS: type checkers != editors
[22:12:56] <ASUS> I see
[22:13:05] <bjs> ASUS: https://github.com/python/mypy/
[22:13:08] <SensibleSalmon[m> what if you use `ed` with rust? `ed` won't typecheck but rust is still strongly/statically typed
[22:13:08] <jinsun> and you can set up your project such that it doesn't build unless mypy passes
[22:13:50] <ASUS> rpight
[22:14:02] *** Quits: eron (~eron@2804:431:c7c2:c5b6:606b:fc:dbf4:ce91) (Quit: Client closed)
[22:14:41] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[22:14:55] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:14:58] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[22:15:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2895-9d6c-4909-5f81.res6.spectrum.com)
[22:15:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[22:16:06] <bjs> ASUS: Some languages automatically run a type checker when you compile your program. Python was a dynamically typed language and type annotations and a type checker were added later, and the type checker(s) are separate programs.  There's nothing wrong with a dynamic language nor a static one.
[22:16:24] <bjs> and there is no plan to force people to use a static typechecker for Python code
[22:16:56] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1a6mr4fc6eyr.ipv6.telus.net) (Quit: Leaving)
[22:17:01] <deniska> I, personally, switched to python many many years ago because it didn't make me specify types
[22:17:04] <SnoopJ> some people have a very strong preference for optimizations that make use of static analysis, but even this is not entirely off the table with Python (cf. numba and other things that compile Python source)
[22:19:03] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[22:19:12] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:20:10] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[22:21:09] <SensibleSalmon[m> Personally I love the ability to add type checking in as people become more adept with Python--you can ignore the complexity of 'compiler' like type errors for a while until you have enough understanding of programming to realize their value.
[22:21:16] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:22:09] <SnoopJ> Something about having the static analysis "outside" of the compiler appeals to me conceptually, easier to go "a la carte" I guess :)
[22:23:48] <sveinse> My biggest use of type checking is for the development experience: A linter that provides syntactical feedback during writing and a type checker that helps with code navigation and code syntax checks.
[22:23:55] <SensibleSalmon[m> It definitely is nice from a teaching-and-understanding perspective. Alternatively, I adore how Rust packages everything into Cargo. Typechecking, package management, test/command runner--it's really nice to not have to make a whole bunch of decisions, or separately install a bunch of tools, to get what feel like 'basic' features
[22:24:34] *** Joins: kostkon_ (~kostkon@athedsl-393783.home.otenet.gr)
[22:24:37] *** Quits: kostkon (~kostkon@2a02:587:a105:6e43:acab:739a:96a:5044) (Ping timeout: 240 seconds)
[22:25:20] *** Quits: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676) (Quit: Leaving)
[22:25:31] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[22:26:11] *** Quits: jrabbit (~jack@user/jrabbit) (Ping timeout: 245 seconds)
[22:26:20] *** Joins: anotheruser (~user@217.54.24.251)
[22:26:51] *** Joins: jrabbit (~jack@user/jrabbit)
[22:26:56] <aphysically> SnoopJ: there's mypyc that compiles code based on the static types
[22:27:13] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Quit: The Lounge - https://thelounge.chat)
[22:27:30] <aphysically> you have to restrict yourself to a subset of typed things in practice right now, though
[22:27:36] <aphysically> but mypy itself is compiled with it
[22:27:46] <aphysically> and maybe black now too (not sure, they were talking about it but I don't know if it happened)
[22:28:07] <sveinse> I find it facinating that black has become so widely spread, almost the norm. It leaves no debate on formatting. In my experience many devs like their own thing.
[22:28:10] <SnoopJ> aphysically, right
[22:28:33] <SnoopJ> sveinse, sometimes fewer options is better, because there's less room for advocacy debates
[22:28:42] <sveinse> agreed
[22:28:42] *** Joins: drbeco (~beco@2804:351c:dd00:9600:7e60:24d6:7e4a:7676)
[22:29:29] *** Quits: someuser (~user@62.114.143.5) (Ping timeout: 256 seconds)
[22:29:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:30:32] <sveinse> black forced me to deal with my own bad habits and stubborn syntax opinions (which I to this day have problems letting go of)
[22:31:00] <SnoopJ> Python itself does this to some extent, semantic whitespace in particular
[22:31:35] <SnoopJ> I hated it at first but came to love it when I realized the equivalent of brace style arguments is effectively not possible
[22:31:45] *** Quits: wac (~wac@user/wac) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:32:17] *** Joins: semeion (~semeion@user/semeion)
[22:33:58] <sveinse> The whitespace I suppose is the most "hated" thing about python for non-devs. Especially if you're coming from C/C++/JS. On the contrary I get twisted up inside when I see C-code where they haphazardly just declare a {} block without any visual consideration and indentation.
[22:34:04] *** Joins: kostkon (~kostkon@athedsl-394748.home.otenet.gr)
[22:34:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[22:34:57] *** Quits: kostkon_ (~kostkon@athedsl-393783.home.otenet.gr) (Ping timeout: 250 seconds)
[22:35:07] <grym> i tried reading some of my old C# last night, doing some autoarchaeology, and it took a while to get over all the braces again that were once so invisible to me
[22:35:17] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[22:35:30] <grym> we adapt.
[22:35:43] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:35:53] *** portalrat_ is now known as portalrat
[22:37:34] <sveinse> Once you've learned a few languages as a programmer, you'll realize that languages are mostly semantics. The alogs and methods mostly remains the same. The language used is lesser of importance, more a matter of convenience and comfort.
[22:37:44] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[22:37:49] <dirtwash> SnoopJ: i found a simple way
[22:37:58] * dirtwash knew there was a simple solution
[22:37:59] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[22:38:01] <SnoopJ> oh?
[22:38:14] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:38:32] <dirtwash> SnoopJ:just calculate the mean within each grid box and plot those means as fill colors
[22:38:38] *** Joins: jazzy (~jaziz@user/jaziz)
[22:38:40] <dirtwash> so i can downscale the 'resolution'
[22:38:51] <dirtwash> stupid simple
[22:39:07] <grym> ah, a  mean pooling layer >:)
[22:40:12] <jinsun> SnoopJ: well the brace style arguments are not possible with a opinionated auto-formatter also, the language doesn't need to enforce it
[22:41:01] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[22:41:09] <jinsun> indentation being meaningful backfires when auto-formatters can't auto-fix mixed indentation
[22:41:35] <ASUS> mixing spaces and tabs is a pain
[22:41:36] <ASUS> also
[22:41:45] <ASUS> if you accidentally misindent
[22:41:54] <ASUS> the code will run
[22:41:55] <dirtwash> use black **cough**
[22:41:59] <ASUS> black?
[22:42:09] <dirtwash> https://pypi.org/project/black/
[22:42:12] <anddam> that's odd I am stumbling on those undefined reference in the pyenv installation on Ubuntu 18 and 20, but a Debian 9 (older-ish) builds fine
[22:42:14] <ASUS> you can accidentally have the wrong indentation
[22:42:20] <ASUS> and the code will be formally wrong
[22:42:27] <ASUS> wrong logic
[22:42:37] <jinsun> yeah black cant fix mixed indentation
[22:42:42] <sveinse> ASUS: IMHO I'm not seeing that many using tabs any more, tbh
[22:42:43] <dirtwash> that is true
[22:42:57] <anddam> oh, still arguing on odd angles?
[22:43:16] <Anis[m]> I am doing a project where I crop eyes and mouth from every frame of video but it needs too much memory. I can not give more than 5 videos which are 5 minutes video.
[22:43:30] <dirtwash> every time there is a tabs vs spaces argument someone oughta paste the silicon valley scene no?
[22:43:47] <ASUS> TABS OR SPACES GUISE
[22:43:49] <SnoopJ> jinsun, assuming that everybody uses the same auto-formatting. In my experience it just shifts the argument to arguing about formatter config
[22:44:25] <dirtwash> ASUS: this is why we cant have nice things
[22:44:26] <vaio> ASUS: i heard using tabs made the file smaller
[22:44:26] <anddam> tabs posse, assemble
[22:44:57] *** Joins: teut79 (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903)
[22:45:13] <jiffe> h yeah, def tabs over spaces
[22:45:33] *** Joins: hams (~hams@2607:fb90:5f74:5953:51ef:805d:f668:7c2e)
[22:45:33] *** Quits: hams (~hams@2607:fb90:5f74:5953:51ef:805d:f668:7c2e) (Changing host)
[22:45:33] *** Joins: hams (~hams@user/hams)
[22:45:41] <SnoopJ> clearly advocacy debates are still possible...
[22:46:03] <sveinse> vaio: A megabyte of source is quite a bit of coding :D
[22:46:05] *** Joins: matsaman (~matsaman@user/matsaman)
[22:46:19] <sveinse> but a megabyte is nothing these days
[22:46:23] <vaio> (but you'd want to configure your editor to show tabs as the size of two spaces (not sure if there's a name for that))
[22:46:56] <vaio> sveinse: sure =)
[22:47:17] <vaio> but over multiple files, while using git, etc, it seems it might save space, over time
[22:47:37] <vaio> (but heh, i've been *told* that; and it somewhat made sense, but i'm not a pro coder)
[22:47:51] <sveinse> vaio: unlikely. git use efficient compressors, and they are extremely efficient on subsequent spaces
[22:47:54] <grym> text is _really_ compressible.
[22:48:01] <vaio> mh okay
[22:48:36] <SnoopJ> well a tab is a single byte, N spaces is N bytes, so the actual source size will be larger by something on the order of (#LoC)*(N-1) bytes
[22:49:01] * SnoopJ can think of only one or two times he has ever cared about the size of a source file, none of them in Python
[22:49:11] <jiffe> I don't think anyone uses tabs to conserve space
[22:49:19] *** Quits: teut (~teut@2401:4900:1c68:dbe1:f0f6:7833:462e:d903) (Ping timeout: 256 seconds)
[22:49:38] <grym> i find the argument being made sometimes, but ususally it's a usenet post from 1985 or something
[22:50:14] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:1830:3c81:c914:8ce4)
[22:50:26] <sveinse> I think the data scientists do when they write `import numpy as np` and so on :P hahaha
[22:50:27] *** Joins: Thanatos (~Thanatos@197.210.84.73)
[22:50:41] <Guest19> hello. If I've a string like "some random text {"ID":"bsds-232-asda"} how can I extract the ID part using regex?
[22:50:43] <grym> sveinse: that's more about line length, if anything, on that axis
[22:50:57] <sveinse> grym: yeah, I know. I was kidding
[22:51:14] <grym> sveinse: (i just found some very, uh, fortran-y code last night)
[22:51:17] <phy1729> Guest19: is it always valid JSON?
[22:51:24] <noord> Guest19: regex is not good at parsing nested blocks, you need real parser
[22:51:25] <SnoopJ> phy1729, the example string isn't
[22:51:44] <Guest19> phy1729 it's a string which prints serialized json
[22:51:54] <Guest19> naively, I would just do index("Id") and then add some offset
[22:51:55] <phy1729> SnoopJ: are those unicode quotes?
[22:52:05] *** Joins: somlis (~somlis@user/somlis)
[22:52:07] <Guest1778> can anyone help me with install Anaconda on a remote CentOS machine?
[22:52:08] <Guest1778> Yesterday I thought I installed Anaconda and do see the anaconda directory: https://i.imgur.com/IfSm7Bw.png
[22:52:08] <Guest1778> But now how do I use the Conda commands? The terminal says conda is not recognized
[22:52:09] <SnoopJ> phy1729, I am assuming "some random text" is part of the string that contains a valid JSON document
[22:52:34] <SnoopJ> Guest1778, the answer hasn't changed in the last 12 hours: conda needs to be on your PATH
[22:52:40] <Guest19> yes that's right SnoopJ
[22:52:46] <cowsay-moo> Question about properties.. my property is an array..  I have a normal getter and setter decorated with @property/@property.setter to get/set the value of the property.  I also want the ability to append to the array property, as well as getting just one item from the array.  What's the proper way to do this.. just normal functions like myproperty_append() without any @decorations?
[22:53:15] *** Joins: raxor2k (~raxor2k@78.158.253.229)
[22:53:51] <Guest1778> Oh sorry Snoop, I didn't recall.
[22:53:51] <raxor2k> Im getting an exception telling me there is an error in this "file".. im trying to dig it around everywhere but i cant seem to find it. Is there a way i can make the exception tell me at which line the error happens or something?
[22:53:51] <Guest1778> What is PATH?
[22:54:01] <SnoopJ> An environment variable the shell uses to locate commands
[22:54:38] <SensibleSalmon[m> raxor2k: normally exceptions include a traceback. Does yours not?
[22:54:41] <SnoopJ> Guest1778, if anaconda3/bin/activate exists, try: `source anaconda3/bin/activate`, which should configure your environment for you
[22:55:05] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[22:55:15] <Guest1778> That worked. Can you tell me how that command works and how you knew that?
[22:56:08] <SnoopJ> `source somefile` reads and executes commands from the given file (see your shell's documentation if you want to know more). I knew that because I looked in my local copy. It's unfortunately not documented well in the conda user guide, but my understanding is that most installation techniques should do this automatically anyway.
[22:56:21] <SensibleSalmon[m> Guest1778: generally speaking, that's a virtual environment--a way to segment a pile of specific packages and python tools/executables from what else is present on the system. Very common in most python ecosystems. Highly reccomend reading the virtual env docs: https://docs.python.org/3/tutorial/venv.html
[22:56:28] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[22:56:29] <SnoopJ> SensibleSalmon[m, it's not a virtual environment, they're asking about conda
[22:56:33] *** Joins: palasso (~palasso@user/palasso)
[22:56:52] <Guest1778> actually I had been trying to figure out the difference in a conda environment and a vm
[22:56:56] <SensibleSalmon[m> SnoopJ: ah, my bad, that just looked exactly like a virtual env sourcing: env/bin/activate
[22:56:57] <SnoopJ> the general idea is approximately the same
[22:57:07] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.4)
[22:57:12] <SnoopJ> but there's more stuff to do for conda
[22:57:16] <Guest1778> gotcha
[22:57:45] <Guest1778> hm, weird. Does conda come with Python 3.9.7 ? I don't recall installing Python yet
[22:57:54] <Guest1778> I haven't even made an environment yet
[22:58:18] *** Joins: funhouse (~funhouse@user/funhouse)
[22:58:30] <SnoopJ> it might. conda is written in Python, so it definitely needs an interpreter to run
[22:58:38] <Guest1778> makes sense
[22:58:45] *** Joins: anddam (~anddam@user/anddam)
[22:59:11] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[22:59:14] *** Joins: unyu (~pyon@user/pyon)
[22:59:19] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Remote host closed the connection)
[22:59:21] <raxor2k> SensibleSalmon: Yes, the exception says: "Class x" object has no attribute 'set'
[22:59:23] *** Joins: jcarl43 (~jcarl@node-1w7jr9qurds5wu7axpw4oc32k.ipv6.telus.net)
[22:59:31] <SensibleSalmon[m> (not to belabor the point, but exactly this is why I like rust: no faffing about with envs or conda/anaconda/pip: one stop shop for everything you need in `cargo`)
[22:59:31] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6) (Quit: Client closed)
[22:59:33] <raxor2k> and then i try looking for that word but cant find it no where in the file
[22:59:37] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[22:59:45] <SensibleSalmon[m> raxor2k: is this your code, or a library you're using?
[22:59:56] <SnoopJ> SensibleSalmon[m, it makes a lot of room for faffing with rust-specific things ;)
[23:00:17] <SensibleSalmon[m> SnoopJ: Indeed!
[23:00:30] <jinsun> raxor2k: instead of catching exceptions and printing the exception object, you should really just let it fail and see the traceback that is printed
[23:00:41] <anddam> ohhh I solved my "issue" with libs
[23:01:02] <raxor2k> SensibleSalmon: my code
[23:01:08] <anddam> on the failing machines I was checked out at a very old commit with a broken setup.py
[23:01:28] <anddam> lot of facepalms today
[23:02:19] <Guest19> easeir qeusiton - if I've 2 strings '2022-02-09T17:31:31.250Z" in this format, how can I substract them in python?
[23:02:23] <Guest19> esaier*
[23:02:49] *** Joins: DavidMilestone (~DavidMile@182.64.6.188)
[23:02:55] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Ping timeout: 256 seconds)
[23:02:56] <Guest1778> is there any security risk for ssh'ing into this remote machine from a public network? eg, cafe
[23:03:15] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[23:03:19] <anddam> Guest19: convert to timestamp object, use '-' operator
[23:03:31] <Guest19> anddam how?
[23:03:33] <xheimlich> remember in the olympics when gymnastic Simone Biles stepped aside because of a case of the "twisties"?
[23:03:38] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[23:03:39] <anddam> Guest1778: "this format" is ISO8601 and the only sane way to write dates
[23:03:51] <raxor2k> nvm i found the error
[23:03:58] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[23:04:02] <raxor2k> a variable wasnt stringyfied inside a json. Got it
[23:04:33] <anddam> and I spoke too soon, I still have the undefined reference in libpython from pyenv
[23:04:47] <sveinse> I have a code that does `from .pickle import __dict__ as pickle`. Will globals() return the same thing from within .pickle?
[23:04:53] <jinsun> Guest19: if you have dateuti.parserl, you can convert that to a datetime by simply doing `dateutil.parser.parse("2022-02-09T17:31:31.250Z")`
[23:04:58] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[23:05:04] *** Parts: ASUS (~ASUS@user/ASUS) (Leaving)
[23:05:07] <jinsun> s/dateuti.parserl/dateutil.parser
[23:05:18] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[23:05:32] <jinsun> Guest19: then you can subtract two datetimes by just using the minus operator
[23:05:39] <anddam> jinsun: doesn't strptime in datetime does it as well?
[23:05:41] <Guest19> awesome jinsun
[23:05:43] <Guest19> that works
[23:05:50] *** Joins: arinov_ (~arinov@213.194.126.155)
[23:06:12] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:06:21] <jinsun> anddam: it does but you have to specify the format, unfortunately .fromisoformat doesn't work
[23:06:38] <jinsun> it needs a specific format returned by .toisoformat
[23:07:24] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:08:12] <jinsun> and I didn't want to figure out the format for this specific string now when I could just offer the magic solution :D
[23:08:13] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[23:09:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:10:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:10:35] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[23:11:03] <sveinse> Got to love code like this: `def get_class_from_vapor(clsname): exec('class %s: pass' % clsname); return locals()[clsname]` (I'm sarcastic for the newbies in here. This NOT best pratices.)
[23:12:14] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 250 seconds)
[23:12:16] *** Joins: Spiney_ (~Spiney@2604:a880:400:d0::1d82:b001)
[23:13:05] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[23:13:50] *** Quits: pro_z (~pro_z@37.214.50.160) (Ping timeout: 260 seconds)
[23:14:31] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:14:39] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6)
[23:15:32] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 240 seconds)
[23:15:37] *** Quits: dld (~davidlowr@2601:197:600:1210:3c77:90a4:f938:18fe) (Ping timeout: 240 seconds)
[23:16:25] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[23:16:38] *** Quits: philectro (~quassel@2a02:2788:1024:671:c542:7b5a:453:7217) (Ping timeout: 260 seconds)
[23:16:50] *** Joins: dld (~davidlowr@2601:197:600:1210:5c9e:f676:ddc7:b9f7)
[23:18:29] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[23:18:38] <jinsun> sveinse: better way would be `def get_class_from_vapor(clsname): return type(clsname, (), {})`
[23:19:50] <sveinse> jinsun: indeed
[23:20:15] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:20:27] *** Quits: Spiney_ (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[23:21:28] *** Joins: philectro (~quassel@2a02:2788:1024:671:9e2b:dbdf:9fd4:44c6)
[23:21:43] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:22:15] *** Joins: sy (~sy@zm.is)
[23:22:22] <anddam> jinsun: magic is just great
[23:22:35] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[23:22:49] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[23:22:53] <anddam> any sprinkle of python-fairy dust for me?
[23:22:54] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[23:22:59] <sy> Hey everyone, I've got this recursive function which only seems to run twice. Could I get any pointers please? https://0x0.st/oXwx.txt
[23:22:59] <sy>  - there's one branch for the first iteration and then one for when a message contains next
[23:23:16] *** Joins: tomg (~tomg@user/tomg)
[23:23:24] <sy> I feel like it will always only run exactly twice, but I'd like to fix it properly
[23:23:28] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:dc3f:455b:3e34:63a6) (Quit: Client closed)
[23:24:02] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[23:25:04] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:25:05] *** Quits: damonlynch_ (~ngaio@68.235.43.174) (Quit: Leaving)
[23:25:22] *** Joins: mickey8 (~user@user/mickey)
[23:25:35] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[23:26:41] *** Joins: dme86 (~dan@user/dan86)
[23:26:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:26:54] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:27:42] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[23:27:42] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:27:49] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (Remote host closed the connection)
[23:28:23] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[23:28:44] *** Joins: brabrax (~brabrax@user/brabrax)
[23:28:48] <anddam> how's anyone going to run that?
[23:28:54] *** Joins: califax (~califax@user/califx)
[23:29:20] <anddam> sy: ^
[23:29:44] <anddam> anyway, place a pdb.set_trace() and see why it stops recursion on the second pass
[23:29:49] *** Joins: vfbsilva (~manjaro-u@179.181.71.226)
[23:29:58] <anddam> or, just print that out in this case
[23:30:07] <vfbsilva> folks how do I continue a script execution which is waiting for cv2.waitkey()?
[23:30:34] <anddam> sy: oh wait, you already have print before each return, you should have the flow already
[23:31:00] *** Quits: DavidMilestone (~DavidMile@182.64.6.188) (Quit: Client closed)
[23:31:32] <anddam> vfbsilva: doesn't waitkey() documentation say how make it non-blocking?
[23:31:44] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[23:32:11] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[23:32:26] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 245 seconds)
[23:33:23] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[23:33:42] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:33:58] *** Quits: rsx (~dummy@ppp-188-174-150-145.dynamic.mnet-online.de) (Quit: rsx)
[23:34:02] <SnoopJ> no, waitKey() is blocking by design
[23:34:03] *** Quits: NealRame (~a@114.129.191.99) (Ping timeout: 268 seconds)
[23:34:25] *** Joins: x_kuru (~xkuru@user/xkuru)
[23:34:40] <SnoopJ> vfbsilva, ^ possibly the wait should be running on a separate thread to not block whatever else you want to run
[23:34:52] <xheimlich> anyway, I have some code that used dataframes.
[23:35:14] *** Joins: Auron (Auron956@user/auron)
[23:35:17] <xheimlich> I'm going to be replacing them with a wrapping class, but would like code that uses df[col] syntax to remain working.
[23:35:37] <xheimlich> I'm sure there's a dunder method for that, but I'm thoroughly confsed between __get__, __getitem__ etc.
[23:35:44] <SnoopJ> __getitem__
[23:35:49] <xheimlich> thanks.
[23:35:54] <SnoopJ> are you sure you don't want to just subclass DataFrame, though?
[23:36:26] <xheimlich> SnoopJ: uhh. maybe.
[23:36:29] <xheimlich> wow.
[23:36:40] <SnoopJ> doing that will give you all the existing functionality "for free"
[23:37:07] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[23:37:31] *** Joins: NealRame (~a@114.129.191.99)
[23:37:52] <xheimlich> https://dpaste.org/xdj3  that's a snippet. is it as easy as not saying self.data = data at __init__?
[23:38:03] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[23:38:30] <jinsun> see also https://pandas.pydata.org/pandas-docs/stable/development/extending.html
[23:38:37] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:38:43] <xheimlich> also, um. how do I initialize a MyDataFrame from a DataFrame?
[23:38:50] <xheimlich> I know Geopandas does something of the sort.
[23:38:57] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[23:39:04] *** Joins: dme86 (~dan@user/dan86)
[23:42:00] *** Quits: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:04] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:11] <xheimlich> the latter extending pandas itself option is interesting, but I'd like to have my own classes/types for annotations and generally not going nuts.
[23:42:14] *** Joins: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[23:42:14] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[23:42:35] <xheimlich> I think I'm just implementing __getitem__ for the time being.
[23:43:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:43:14] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[23:43:53] *** Joins: blei (~blei@209.201.38.106)
[23:44:57] *** Joins: fikran (~fikran@user/fikran)
[23:45:12] <SnoopJ> xheimlich, `class MyDataFrame(pandas.DataFrame): ...;  MyDataFrame()` is how you would construct such an instance. If you need to write your own __init__(), you can call the base class's initializer with `super().__init__(...)` where that `...` is usually `*args, **kwargs`
[23:45:40] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19da-a6c6-e719-aa3f.res6.spectrum.com) (Read error: Connection reset by peer)
[23:45:50] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[23:46:01] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[23:46:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:47:07] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[23:47:26] <dirtwash> anyone know ipaddress module? if I get the hosts list they all look like IPv4Address('192.0.2.2'), is there a way to just return the IPs?
[23:47:31] <dirtwash> not sure why they did it like that
[23:47:53] <SnoopJ> dirtwash, you want the string "192.0.2.2", or...?
[23:48:06] <dirtwash> yes
[23:48:10] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[23:48:27] <dirtwash> i assumed .hosts() gives me just the IPs but they're all warpped in that string
[23:48:31] <SnoopJ> str(ipaddr_object)
[23:48:56] <dirtwash> SnoopJ: gracias
[23:49:03] <dirtwash> could have thought of that
[23:49:29] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[23:49:50] <anddam> SnoopJ: it depends on their actual request of "continuing" execution, one could set a 1ms timeout there from what I can see
[23:49:52] <xheimlich> SnoopJ: I'm used to subclassing my own classes, yes. I never subclassed a third party library.
[23:50:16] <SnoopJ> anddam, that wouldn't resume execution of the waiting thread, it would just make it wait for the specified amount of time.
[23:51:28] <anddam> SnoopJ: I agree, but after the timeout the thread would resume execution
[23:51:35] <SnoopJ> anddam, which is a fine solution to a different problem
[23:52:06] <anddam> given the abundance of details provided, anything's on the table
[23:52:28] <SnoopJ> I can't say I agree
[23:53:02] <anddam> this things bothers me, I am not sure how to track this, I have three debian-like machines, pyenv building the same python version, and same source code (that I cannot share)
[23:53:21] *** Quits: MercilessDeth (~brad@136.49.59.177) (Ping timeout: 256 seconds)
[23:53:32] <anddam> on one (the oldest) package gets through pip install, on the other fails with undef symbols in libpython
[23:53:58] <anddam> I figure this means my pyenv build is missing something
[23:54:13] <xheimlich> I guess the one thing I don't know is how to initialize a dataframe from another dataframe. but it seems pd.DataFrame(already_a_dataframe) works
[23:54:31] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[23:54:53] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[23:55:12] <SnoopJ> the DataFrame documentation lists the possible invocations: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html
[23:55:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:56:37] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:56:56] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:56:57] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[23:57:51] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:58:16] *** Joins: noarb (~noarb@user/noarb)
[23:58:22] <jinsun> the extending docs mention how to subclass too (and recommend against it) https://pandas.pydata.org/pandas-docs/stable/development/extending.html#subclassing-pandas-data-structures
[23:58:35] *** Quits: duds- (~duds-@user/duds) (Read error: Connection reset by peer)
[23:59:28] <jinsun> apparently you need some magic properties, otherwise some operation would give you a base dataframe back instead of your subclass
[23:59:29] <SnoopJ> do they recommend against it, or just offer some alternatives?
