[00:00:47] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:14] *** Joins: mahmutov (~mahmutov@37.155.38.202)
[00:03:41] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[00:06:39] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:ecbc:c4db:21c9:a46)
[00:07:08] <oscurochu> line 17, 21, etc doesnt do as i expect. is there another way ? https://dpaste.com/BR59RST5U
[00:07:42] <ioxzev1z> oscurochu, that's a lot of repetition
[00:08:03] <oscurochu> i know... i had a feeling someone would point me in the right direction once they seen how bad that is
[00:08:07] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899)
[00:08:12] <ChoHag> oscurochu: Make is weird about variables.
[00:08:16] <ChoHag> Name them each differently.
[00:08:29] <fizzie> Assuming you want the same rule for all, you don't want the repetition anyway.
[00:08:31] <ChoHag> Or don't give them symbols.
[00:08:45] <ChoHag> They're only adding noise anyway.
[00:08:48] <oscurochu> is there a way to make a function inside of the makefile or a way to reduce the repetition?
[00:09:01] <fizzie> You probably want a pattern rule.
[00:09:03] <ChoHag> Yeah just get rid of the FILE variable completely.
[00:09:05] <oscurochu> oh
[00:09:07] <oscurochu> true
[00:09:11] <ChoHag> Then do that.
[00:09:25] <ChoHag> But first get rid of FILE and get a better feel for make.
[00:09:35] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:09:57] <ChoHag> Sometimes copy pasta is better than learning 50 years of unix history.
[00:10:12] <ChoHag> "Why does make do it that way? Because it does."
[00:10:20] <fizzie> Possibly a static pattern rule, if you're targeting GNU make (I don't know how portable it is).
[00:10:29] *** Quits: anton_ (~anton@ptr-fiic7wgdk2o5jsph01e.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[00:10:35] <ChoHag> It's portable to other systems which support GNU make.
[00:10:43] <sham1> Which is... basically all of them
[00:10:46] <ioxzev1z> oscurochu, look into SCons
[00:11:01] <ChoHag> GNU's notion of portability is "our way or we'll turn your way into our way".
[00:11:17] <ChoHag> sham1: This is true.
[00:11:43] <ChoHag> I have never had much truck with scons.
[00:11:56] <sham1> I like meson, although it's somewhat heavy
[00:12:35] <ChoHag> dest: sources\n\tbuild-command
[00:12:36] <fizzie> oscurochu: https://0x0.st/oKjf.txt is roughly how it would look like with a static pattern rule (probably).
[00:12:42] <ChoHag> What's not to like?
[00:13:16] <sham1> The default probably should be named all because that's the standard
[00:14:05] <fizzie> Heh, if Meson is heavy, I wonder what adjective Bazel qualifies for.
[00:14:29] <sham1> Well, python as a dependency is a lot
[00:14:55] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:15:10] <sham1> And then there is cmake
[00:16:58] *** Joins: strajder (~strajder@user/strajder)
[00:20:09] *** Joins: Akuli (~Akuli@213.216.211.144)
[00:22:27] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[00:24:13] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (Read error: Connection reset by peer)
[00:26:15] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[00:27:38] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7ec2:63d4:2a51:9219) (Ping timeout: 250 seconds)
[00:32:20] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[00:33:15] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[00:34:17] *** Joins: hiroshi_ (~freedom@an-19-170-137.service.infuturo.it)
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:25] *** Quits: kish`` (~aqua@user/aqua) (Remote host closed the connection)
[00:35:55] *** Joins: kish` (~aqua@user/aqua)
[00:36:09] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[00:36:28] *** Joins: kish` (~aqua@user/aqua)
[00:36:56] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:52] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[00:38:19] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[00:38:53] *** Joins: gce108 (~gce@user/gce108)
[00:39:11] *** Quits: goodfella (~archer@user/tessio) (Quit: WeeChat 3.4)
[00:39:44] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899)
[00:41:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[00:43:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:44:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:44:51] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:45:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:49:19] *** Quits: heineken (~i.am@user/heineken) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[00:50:33] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[00:53:27] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:53:54] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[00:54:36] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[00:54:42] *** Quits: magla (~gelignite@d5360aa7.access.ecotel.net) (Quit: Stay safe!)
[00:55:06] *** Joins: polyrob (~rob@user/polyrob)
[00:58:49] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:58:54] <pragma-> ,cc char *s = "Я"; while (*s) { putchar(*s); s++;} // test
[00:58:56] <candide> pragma-: Я
[00:59:01] * pragma- nods approvingly.
[00:59:28] <ChoHag> Ti sho?
[01:00:22] <sham1> Yay
[01:00:24] <ChoHag> Blyat.
[01:01:20] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899)
[01:04:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:08:25] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[01:08:59] *** Joins: john99 (~johnny@138.62.221.87.dynamic.jazztel.es)
[01:10:09] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[01:10:58] *** Joins: triv (e655av59ft@morgulis.trivcraft.com)
[01:14:07] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:17:37] *** Quits: Livio (~livio@user/livio) (Ping timeout: 240 seconds)
[01:18:17] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:1425:fb3a:f0dc:6899) (Ping timeout: 240 seconds)
[01:19:09] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:20:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[01:20:36] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 240 seconds)
[01:22:03] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[01:25:16] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 256 seconds)
[01:27:52] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:fb55:f4b:9349:d06d) (Ping timeout: 250 seconds)
[01:33:15] *** Quits: hiroshi_ (~freedom@an-19-170-137.service.infuturo.it) (Quit: hiroshi_)
[01:34:56] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4a7:dec3:a543:4b87) (Ping timeout: 245 seconds)
[01:35:11] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[01:35:36] *** Joins: Klinda (~superleag@user/klinda)
[01:36:36] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[01:36:59] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[01:37:45] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[01:38:59] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:41:08] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[01:46:11] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:46:28] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[01:49:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[01:49:21] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 256 seconds)
[01:51:37] *** Joins: zuplex (~zuplex@202.51.76.42)
[01:52:39] *** Quits: zuplex (~zuplex@202.51.76.42) (Max SendQ exceeded)
[01:53:08] *** Joins: zuplex (~zuplex@202.51.76.42)
[01:53:47] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[01:57:47] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[02:00:37] <Dean> caze not yet. i was struggling because i thought i was not suppposed to make additional functions. but ive come to realise that i will need to make a function to handle the input. there seems to be no other way.
[02:00:41] <Dean> NRK thank you very much!
[02:00:59] *** Joins: Torr (~Torr@user/torr)
[02:01:02] <Dean> see you all tomorrow.
[02:01:07] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[02:01:25] *** Quits: mahmutov (~mahmutov@37.155.38.202) (Ping timeout: 250 seconds)
[02:03:47] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:04:12] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:05:01] *** Quits: gry (~quassel@botters/gry) (Read error: Connection reset by peer)
[02:08:30] *** Joins: Thedarkb (~Thedarkb@80.233.39.65)
[02:11:01] *** Joins: Atque (~Atque@user/atque)
[02:11:19] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:11:19] *** Joins: seninha (~chatzilla@user/seninha)
[02:12:26] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 260 seconds)
[02:13:45] *** Joins: gry (~quassel@botters/gry)
[02:14:08] *** Joins: Alhazred (~Alhazred@89.46.114.69)
[02:14:18] *** Joins: zwr (~zwr@200-97-242-107.user3p.veloxzone.com.br)
[02:14:20] *** Quits: Alhazred (~Alhazred@89.46.114.69) (Client Quit)
[02:14:58] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[02:15:46] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:17:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:18:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[02:18:45] *** Quits: doorzan (~doorzan@user/doorzan) (Quit: Leaving)
[02:19:21] *** Quits: AmR (~AmREiSa@156.199.47.115) (Quit: Konversation terminated!)
[02:20:18] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[02:23:31] <nitrix> pragma-, Yippidie yay!
[02:24:44] *** Joins: Charadon (~Charadon@155.138.164.183)
[02:27:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:28:08] *** Quits: cul8r (~cul8r@76.113.95.199) (Remote host closed the connection)
[02:29:51] *** Quits: Akuli (~Akuli@213.216.211.144) (Quit: Akuli)
[02:30:29] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[02:31:54] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[02:32:44] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:05] *** Joins: pizdets_ (~pizdets@183.182.111.116)
[02:34:16] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:e806:c1f9:7fcc:ee25)
[02:34:58] *** Quits: pizdets (~pizdets@183.182.115.20) (Ping timeout: 272 seconds)
[02:36:12] *** Quits: X-Scale (~ARM@31.22.144.44) (Quit:  HydraIRC -> http://www.hydrairc.com <- It'll be on slashdot one day...)
[02:37:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:38:34] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[02:40:48] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[02:41:59] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[02:42:55] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:e806:c1f9:7fcc:ee25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:45:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:59] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[02:46:53] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[02:48:30] *** Joins: hashfunc1818 (~user@2601:5c0:c280:7a9e:8c1e:afa3:b36b:39be)
[02:48:35] *** Joins: ferdna (~ferdna@user/ferdna)
[02:52:01] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 256 seconds)
[02:52:28] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[02:53:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f50c-7cae-60f9-8617.res6.spectrum.com)
[02:57:36] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[03:01:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[03:01:48] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-f50c-7cae-60f9-8617.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:02:06] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[03:05:37] *** Quits: jrm (~jrm@156.34.173.250) (Ping timeout: 240 seconds)
[03:05:41] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:07:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:08:09] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:08:46] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[03:11:46] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Quit: ZNC 1.8.2 - https://znc.in)
[03:13:36] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:13:52] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[03:15:19] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[03:20:35] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:20:35] *** Quits: lichliu (~lichliu@219.142.145.152) (Read error: Connection reset by peer)
[03:21:41] *** Joins: lichliu (~lichliu@219.142.145.152)
[03:25:04] *** Quits: john99 (~johnny@138.62.221.87.dynamic.jazztel.es) (Remote host closed the connection)
[03:25:37] *** Quits: Thedarkb (~Thedarkb@80.233.39.65) (Quit: o/)
[03:30:48] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:75d6:9a85:fe86:684b)
[03:30:48] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:75d6:9a85:fe86:684b) (Changing host)
[03:30:48] *** Joins: skapata (~Skapata@user/skapata)
[03:34:06] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 260 seconds)
[03:34:40] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[03:34:55] *** Joins: seninha (~chatzilla@user/seninha)
[03:37:51] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[03:43:49] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:45:16] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:45:41] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[03:46:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:46:38] *** Joins: Wulf (~Wulf@user/wulf)
[03:48:56] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:48:57] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[03:49:39] *** Quits: xel (~xel@user/xel) (Read error: Connection reset by peer)
[03:54:35] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:54:52] *** Joins: slidercrank (~slidercra@user/slidercrank)
[03:54:55] *** suss` is now known as suss
[03:56:51] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 256 seconds)
[03:57:28] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[03:57:53] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:58:36] *** Quits: hashfunc1818 (~user@2601:5c0:c280:7a9e:8c1e:afa3:b36b:39be) (Ping timeout: 240 seconds)
[04:00:17] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[04:01:22] *** Joins: pendarsoheil (~pendarsoh@63.238.189.98)
[04:02:16] <pendarsoheil> I have a C array `int a[] = {1,2,3,4}` and I am wondering how *(&a + 1) points to the next byte after the array
[04:02:26] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:02:32] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[04:02:41] <pendarsoheil> Shouldn't &a point to the address of the a[0]?
[04:02:59] <fizzie> No, &a should point to the address of the array, and be of type `int (*)[4]`.
[04:03:07] <fizzie> &a[0] would be the address of element a[0].
[04:03:24] <fizzie> (And `&a[0] + 1` the next element.)
[04:03:48] <fizzie> Sure, the array and its first element are at the same address, but the types are different.
[04:04:06] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[04:04:18] <pendarsoheil> fizzie, type is specific to how the compiler reads the code, right?
[04:04:20] <fizzie> ,cc int a[4]; printf("%zu vs. %zu", sizeof *&a, sizeof *&a[0]);
[04:04:22] <candide> fizzie: 16 vs. 4
[04:05:17] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 240 seconds)
[04:06:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:06:27] <fizzie> ,cc int a[4]; ptype(&a); ptype(&a[0]); // or with candide magic, even more directly
[04:06:29] <candide> fizzie:  &a = int (*)[4]   &a[0] = int *
[04:07:20] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[04:07:24] *** Joins: andi__ (~andi@2a02:908:4b26:5a40:8515:c51f:5955:cdae)
[04:07:24] *** Quits: LuKaRo_ (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:07:47] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[04:08:12] <pendarsoheil> cool, thanks
[04:10:06] *** Quits: Tangent-Man (~Tang3nt-M@138.199.21.36) (Remote host closed the connection)
[04:10:47] *** Joins: tdwybrv^ (~tdwybrv@50-202-219-146-static.hfc.comcastbusiness.net)
[04:13:41] *** Quits: andi__ (~andi@2a02:908:4b26:5a40:8515:c51f:5955:cdae) (Quit: Leaving)
[04:16:58] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[04:18:31] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:e806:c1f9:7fcc:ee25)
[04:21:00] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:22:12] *** Joins: xel (~xel@user/xel)
[04:24:23] *** Joins: six666 (~six666@117.177.23.164)
[04:25:46] *** Quits: pendarsoheil (~pendarsoh@63.238.189.98) (Quit: Leaving)
[04:26:37] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[04:27:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:27:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:27:42] *** Joins: wroathe (~wroathe@user/wroathe)
[04:28:49] *** Joins: LuKaRo (~LuKaRo@p5deda68b.dip0.t-ipconnect.de)
[04:30:43] *** Joins: gco (~gco@2601:647:4c00:50e0:7dfe:b7a3:3c0b:5aa5)
[04:33:17] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com)
[04:36:50] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[04:38:34] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:45:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:45:22] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[04:47:53] *** Joins: crashrep (~crashrep@user/crashrep)
[04:50:31] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:50:58] *** Joins: hub (~hub@user/hub)
[04:56:23] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[05:01:24] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-4d3a-5004-9503-0c7b.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:03:39] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-4d3a-5004-9503-0c7b.res6.spectrum.com)
[05:05:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:06:16] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 250 seconds)
[05:06:27] *** Quits: arinov_ (~arinov@5.24.108.1) (Ping timeout: 250 seconds)
[05:06:33] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[05:06:42] *** Joins: m4v (~znc@ubuntu/member/m4v)
[05:07:28] *** Joins: crashrep (~crashrep@user/crashrep)
[05:08:12] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[05:08:47] *** Joins: MsPooh (~MsPooh@S01069050ca4e3573.cg.shawcable.net)
[05:08:56] *** Joins: jrm (~jrm@156.34.173.250)
[05:10:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:10:39] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[05:11:22] *** Joins: FragByte_ (~christian@user/fragbyte)
[05:11:30] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[05:11:31] *** Quits: xel (~xel@user/xel) (Remote host closed the connection)
[05:11:42] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[05:11:51] *** FragByte_ is now known as FragByte
[05:13:25] *** Joins: xel (~xel@user/xel)
[05:16:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:18:25] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[05:20:58] *** Quits: tdwybrv^ (~tdwybrv@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[05:21:51] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:23:26] *** Quits: Praise (~Fat@user/praise) (Remote host closed the connection)
[05:24:35] *** Joins: Praise (~Fat@user/praise)
[05:24:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[05:25:44] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[05:29:56] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 245 seconds)
[05:30:02] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Quit: ZNC - http://znc.in)
[05:31:12] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[05:32:05] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[05:32:59] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:24] *** Quits: random-nick (~random-ni@87.116.179.129) (Ping timeout: 240 seconds)
[05:34:04] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[05:34:06] *** Joins: crashrep (~crashrep@user/crashrep)
[05:34:24] *** Joins: zer0x (~zer0x@42.113.143.168)
[05:37:38] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[05:38:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:39:55] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[05:40:10] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:41:00] *** Joins: vysn (~vysn@user/vysn)
[05:42:29] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:46:27] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:46:28] *** Joins: crashrep (~crashrep@user/crashrep)
[05:47:04] *** Quits: LuKaRo (~LuKaRo@p5deda68b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:48:26] *** Joins: fstd_ (~fstd@xdsl-78-34-125-135.nc.de)
[05:48:51] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[05:49:01] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[05:49:27] *** Joins: joev (~joev@user/joev)
[05:49:51] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[05:50:02] *** Quits: meandrain (~meandrain@2a02:2f0e:f70f:6e00:a999:e931:80a4:18ae) (Read error: Connection reset by peer)
[05:50:17] *** Quits: moog (~moog@107.126.53.146) (Remote host closed the connection)
[05:50:38] *** Joins: moog (~moog@107.126.53.146)
[05:51:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[05:51:28] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[05:51:57] *** Quits: fstd (~fstd@xdsl-81-173-174-103.nc.de) (Ping timeout: 272 seconds)
[05:52:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[05:55:36] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Remote host closed the connection)
[05:58:55] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:59:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:02:08] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[06:02:30] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[06:02:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-a068-f96d-6ad8-5504.res6.spectrum.com)
[06:02:57] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 240 seconds)
[06:04:57] *** Joins: crashrep (~crashrep@user/crashrep)
[06:09:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[06:12:45] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:14:08] *** Joins: Guest8647 (~Guest@host38.181-14-187.telecom.net.ar)
[06:14:53] *** Quits: zuplex (~zuplex@202.51.76.42) (Remote host closed the connection)
[06:16:04] *** Quits: ravella (~ravella@user/ryanavella) (Remote host closed the connection)
[06:16:07] *** Joins: Atque (~Atque@user/atque)
[06:16:29] *** Joins: ravella (~ravella@user/ryanavella)
[06:16:58] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[06:25:19] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 256 seconds)
[06:25:55] *** Joins: ski (~ski@remote12.chalmers.se)
[06:30:01] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[06:32:30] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[06:32:41] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:33:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[06:34:41] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:36:35] *** Joins: frost (~frost@user/frost)
[06:37:36] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com)
[06:38:46] *** Joins: skapata (~Skapata@user/skapata)
[06:40:55] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[06:41:53] *** Joins: smeso (~smeso@user/smeso)
[06:41:54] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:ec8a:21a7:a298:972c)
[06:42:36] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 256 seconds)
[06:43:55] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:44:46] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[06:46:10] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:46:17] *** Joins: seninha (~chatzilla@user/seninha)
[06:47:15] *** Quits: xel (~xel@user/xel) (Quit: Leaving)
[06:48:18] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[06:49:38] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[06:49:58] *** Quits: gco (~gco@2601:647:4c00:50e0:7dfe:b7a3:3c0b:5aa5) (Quit: ZZZzzz…)
[06:50:44] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Client Quit)
[06:51:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:51:18] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:51:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:55:06] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[06:55:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:56:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:56:15] *** Quits: sebag (~guest@91.245.82.2) (Quit: WeeChat 3.1)
[06:57:45] *** Joins: xel (~xel@user/xel)
[07:00:53] *** Joins: crashrep (~crashrep@user/crashrep)
[07:02:44] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[07:03:30] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 272 seconds)
[07:03:45] *** Joins: Praise (~Fat@user/praise)
[07:04:06] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[07:05:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[07:07:35] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:49] *** Quits: pulse (~pulse@user/pulse) (Quit: Look behind you, a three headed monkey!)
[07:10:37] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[07:10:58] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:10:58] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:10:58] *** Joins: wroathe (~wroathe@user/wroathe)
[07:12:50] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:13:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:16:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[07:16:49] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com)
[07:17:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:17:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:17:40] *** Joins: wroathe (~wroathe@user/wroathe)
[07:17:41] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:20:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:21:43] *** Quits: kts (~kts@103.73.237.67) (Quit: Konversation terminated!)
[07:21:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:25:46] *** Joins: masoudd (~masoudd@user/masoudd)
[07:29:28] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[07:31:22] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-90ce-ca8d-49d4-5de5.fixed6.kpn.net)
[07:33:32] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[07:34:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:35:46] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-90ce-ca8d-49d4-5de5.fixed6.kpn.net) (Ping timeout: 250 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:13] *** Joins: crashrep (~crashrep@user/crashrep)
[07:39:57] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-101-189.pa.qld.optusnet.com.au)
[07:42:23] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 256 seconds)
[07:42:54] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[07:42:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[07:43:15] *** Joins: g2anj (~v@58.228.230.4)
[07:43:48] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[07:44:11] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[07:44:20] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[07:44:37] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 240 seconds)
[07:46:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:49:27] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[07:49:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:58:12] *** Joins: tusko (~yeurt@user/tusko)
[07:59:31] *** Joins: hinata (~hinata@2409:4042:2d11:cfb3:d501:7576:7f1c:194e)
[08:00:18] *** Joins: uniquepointer (~uniquepoi@190.218.240.164)
[08:03:18] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[08:03:33] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[08:04:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com)
[08:05:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2466-8385-a999-851a.res6.spectrum.com) (Client Quit)
[08:07:38] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[08:19:44] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:20:24] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:21:27] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:25:00] *** Quits: kurahaupo_ (~kurahaupo@pa49-197-101-189.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[08:27:16] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:30:17] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[08:37:44] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[08:37:55] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 256 seconds)
[08:39:01] *** Joins: crashrep (~crashrep@user/crashrep)
[08:40:41] *** Joins: gry (~quassel@botters/gry)
[08:40:42] *** Joins: Inline__ (~Inline@2a02:908:1252:7a80::175)
[08:42:12] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[08:43:11] *** Joins: Atque (~Atque@user/atque)
[08:43:21] *** Quits: Inline (~Inline@2a02:908:1252:7a80::175) (Ping timeout: 256 seconds)
[08:43:30] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 260 seconds)
[08:43:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[08:44:02] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[08:44:28] *** vinleod is now known as vdamewood
[08:44:53] *** Joins: hashfunc1353 (~user@2601:5c0:c280:7a9e:78e9:5f82:1899:8c96)
[08:45:09] *** Joins: wroathe (~wroathe@user/wroathe)
[08:45:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:46:31] *** Joins: minto (~mintograd@47.201.5.61)
[08:46:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:47:25] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[08:49:35] *** Quits: mintograde (~mintograd@47.201.5.61) (Ping timeout: 256 seconds)
[08:49:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:55:31] *** Quits: MsPooh (~MsPooh@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[08:56:12] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 265 seconds)
[08:56:39] *** Joins: malloy (~jimery@116.30.220.175)
[08:56:44] <trn> Greetings C people ... so, on GCC, (void)function isn't enough to suppress a warning from FORTIFY_SOURCE
[08:57:39] <trn> So, assuming I really don't care if write fails and I don't need to check the return value, is (void)!write(...) fully portable?
[08:58:46] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[09:01:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:08:31] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[09:09:31] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 245 seconds)
[09:09:48] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:10:51] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 250 seconds)
[09:14:22] *** Joins: gce108 (~gce@user/gce108)
[09:14:26] *** Joins: luca0N (~luca0N@nautilus.luca0n.com)
[09:14:50] *** luca0N is now known as Guest8439
[09:15:24] *** Quits: analognoise1 (~analognoi@192.145.80.4) (Read error: Connection reset by peer)
[09:15:35] *** Guest8439 is now known as luca0N
[09:17:19] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[09:20:12] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[09:21:08] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[09:22:20] *** Joins: raym (~raym@user/raym)
[09:23:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:27:54] *** Quits: zer0x (~zer0x@42.113.143.168) (Ping timeout: 272 seconds)
[09:28:59] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:33:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[09:35:25] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[09:36:28] *** Joins: joev (~joev@user/joev)
[09:38:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:40:07] <dave0> it looks like valid code
[09:40:25] <dave0> trn: what warning does it give?
[09:41:45] <trn> https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25509
[09:41:47] <candide> Title of trn's link: 25509 – can't disable __attribute__((warn_unused_result))
[09:42:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:42:25] <trn> If you do a (void)write(...) with FORTIFY_SOURCE=2, you'll get warning: ignoring return value ...
[09:42:38] *** Quits: hinata (~hinata@2409:4042:2d11:cfb3:d501:7576:7f1c:194e) (Quit: Leaving)
[09:43:04] <trn> In this case, the writes I'm ignoring are in error/debugging messages.
[09:43:28] <trn> So, (void)!write(...) works and is less gross than an empty if.
[09:43:46] <trn> It just looks 'weird' to me. !write(...) that is.
[09:45:22] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.29)
[09:47:26] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:50:33] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[09:50:52] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[09:52:09] *** Quits: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[09:52:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Remote host closed the connection)
[09:52:54] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:54:27] *** Quits: Guest8647 (~Guest@host38.181-14-187.telecom.net.ar) (Remote host closed the connection)
[09:54:42] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.29) (Ping timeout: 256 seconds)
[09:55:33] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:04:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[10:05:06] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:05:49] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:05:54] *** Joins: Lyude (~lyudess@pool-96-230-100-15.bstnma.fios.verizon.net)
[10:08:29] *** Joins: crashrep (~crashrep@user/crashrep)
[10:12:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[10:13:42] *** Joins: Satin (uid193953@user/Seten)
[10:24:54] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 272 seconds)
[10:25:38] <dave0> if you have a reason why you can ignore the result from write(), the warning is a false positive... it doesn't mean the code is wrong
[10:26:36] <dave0> i think you shouldn't work around warnings for the sake of it, but it does make the compiler output more verbose
[10:27:30] *** Joins: Trashlord__ (~trash@user/trashlord)
[10:28:03] <dave0> how much extra noise does the compiler make? can you just ignore the warning?
[10:28:49] *** Quits: Trashlord (~trash@user/trashlord) (Killed (NickServ (GHOST command used by Trashlord__)))
[10:28:59] *** Trashlord__ is now known as Trashlord
[10:31:41] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.14)
[10:32:18] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:e806:c1f9:7fcc:ee25) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:40:15] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[10:45:15] *** Joins: gce108 (~gce@user/gce108)
[10:48:34] *** Joins: kts (~kts@103.73.237.62)
[10:49:48] *** Quits: hashfunc1353 (~user@2601:5c0:c280:7a9e:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[10:55:14] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[10:55:20] *** Joins: jjido (~Denis@94.4.149.217)
[10:55:57] *** Quits: Pentode (~Pentode@mobile-166-170-29-174.mycingular.net) (Ping timeout: 240 seconds)
[10:56:27] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[10:57:46] *** Joins: mrig (~mrig@user/mrig)
[10:58:01] <gtlsgamr> Hi there
[10:58:02] <gtlsgamr> http://0x0.st/oK_p.c
[10:58:14] <gtlsgamr> Somehow this is giving segmentation fault and I would like to know why
[10:58:31] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[10:58:47] <gtlsgamr> nevermind
[10:58:49] <gtlsgamr> pls ignore
[10:59:05] <dave0> too late i already looked!
[11:01:19] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:05:01] <gtlsgamr> ;(
[11:07:21] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 272 seconds)
[11:08:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:08:21] <dave0> gtlsgamr: the way i'd do it is for each character in s, if it /doesn't/ appear in t, copy the character to a new string, and repeat until the end of s
[11:08:54] <dave0> the trick is that you can use s for input and output, so you don't need extra memory
[11:09:15] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:09:37] <gtlsgamr> okay but how do i copy the new string to S?
[11:09:48] <dave0> you could just use strcpy
[11:10:41] <dave0> you know that the output is always the same size or smaller than the input, becuase you never add characters, only remove them
[11:11:44] <dave0> make sure you nil terminate the new string
[11:11:49] <dave0> before you strcpy
[11:13:04] <gtlsgamr> Does this make sense ? http://0x0.st/oK_4.c
[11:13:22] <gtlsgamr> it says stack smashing detected. Sorry I am new to C.. strings are a bit confusing
[11:15:12] <dave0> gtlsgamr: char res[strlen(s)+1];   note the +1 for the trailing nil
[11:15:44] <dave0> oh res[k++]=s[i] is in the wrong place
[11:15:47] *** Joins: aradesh (~aradesh@user/aradesh)
[11:16:45] <gtlsgamr> Where should it be?
[11:16:50] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 272 seconds)
[11:17:36] <dave0> gtlsgamr: you need a flag ...    for(i=0;s[i]!='\0';++i) { int flag=1; for(j=0;t[j]!='\0';++j) { if(s[i]==t[j]) { flag=0; break; } } if(flag) res[k++]=s[i]; } res[k]='\0';
[11:18:06] <dave0> so if s[i] is found in t, clear the flag and stop ... then if(flag) won't copy the character
[11:19:21] <gtlsgamr> Thanks!
[11:19:24] <gtlsgamr> it works!
[11:19:28] <dave0> cool :-)
[11:19:37] <dave0> do you understand how it works?
[11:19:42] <gtlsgamr> yes I do!
[11:19:45] <dave0> nice
[11:19:56] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[11:20:20] <gtlsgamr> To be honest I did find a solution online long ago, but it didn;t make sense to me, so I was trying to write my own solution. Could take a look at the online solution and see how it works?
[11:20:37] <dave0> sure
[11:20:47] <gtlsgamr> http://0x0.st/oK_y.c
[11:20:50] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 256 seconds)
[11:21:26] <gtlsgamr> They didn;t even need to get a new string
[11:22:13] <dave0> first they used a different test than with a flag
[11:22:28] *** Joins: Alhazred (~Alhazred@86.106.74.42)
[11:22:45] <dave0> but it does the same ... search for a character in t
[11:22:56] <jamesmartinez> dave0: maw
[11:23:01] <dave0> maw jamesmartinez
[11:23:16] <dave0> gtlsgamr: they re-used s for both the input and output
[11:23:27] <gtlsgamr> yep
[11:23:44] <dave0> gtlsgamr: because    k<=i    you can overwrite s in place
[11:24:32] <dave0> gtlsgamr: you are always moving a character from position i to position k, but because i is always >= k   you will never write over a character you haven't already read
[11:25:00] <gtlsgamr> okay
[11:25:03] <gtlsgamr> i understand now
[11:25:10] <dave0> cool
[11:25:49] <dave0> there's a couple of algorithms that can work like that... ie. reuse the input buffer as output
[11:26:20] <dave0> reversing a string is like that ... if you swap the 1st and last character, then the 2nd and 2nd-last character, 3rd and 3rd-last character ... you reverse the string in-place
[11:26:41] <dave0> the inner loop of quicksort does something similar
[11:26:44] <gtlsgamr> true.. no need for another string then
[11:26:48] <dave0> true
[11:26:54] <gtlsgamr> I am currently going through K & R
[11:27:04] <gtlsgamr> then will move on to implementing data structures and algorithms
[11:27:07] <dave0> yes i guessed that :-)
[11:27:27] <dave0> do you already know another computer language?
[11:27:38] <gtlsgamr> yes. python, mostly.
[11:27:43] <gtlsgamr> bash
[11:27:55] *** Quits: Alhazred (~Alhazred@86.106.74.42) (Ping timeout: 256 seconds)
[11:27:59] <dave0> that should make it a bit easier
[11:28:19] <gtlsgamr> never done actual "programming" and learning C out of pure interest. My job does not involve actual programming. I am a sysadmin.
[11:28:36] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[11:28:45] <dave0> sometimes sysadmins have to write a quick script to do something :-)
[11:28:48] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:28:52] <gtlsgamr> yes i know scripting
[11:29:01] <gtlsgamr> but never had to mess with memories
[11:29:28] <gtlsgamr> I am pretty proud of this one https://gitlab.com/gtlsgamr/ti-tty
[11:30:09] <Amun-Ra> nice name
[11:31:32] *** Joins: arinov_ (~arinov@5.24.108.1)
[11:31:53] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[11:32:45] *** Joins: AmR (~AmREiSa@156.199.47.115)
[11:34:15] *** Joins: defiant (~defiant@user/defiant)
[11:35:11] <caze> gtlsgamr: Did you do the chapter 1 exercises?
[11:36:56] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:37:33] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[11:38:20] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[11:38:27] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 256 seconds)
[11:39:35] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Ping timeout: 256 seconds)
[11:39:59] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[11:42:22] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:43:37] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[11:47:55] *** Joins: Rounin (~david@84.212.130.215)
[11:55:20] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[11:55:28] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[11:59:14] *** Joins: hashfuncc47 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[11:59:43] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:01:42] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:02:09] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[12:02:58] *** Joins: zer0x (~zer0x@42.113.143.168)
[12:05:19] *** Joins: zer0x_ (~zer0x@42.113.143.168)
[12:05:29] *** Quits: zer0x (~zer0x@42.113.143.168) (Read error: Connection reset by peer)
[12:09:00] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 240 seconds)
[12:09:18] *** Joins: crashrep (~crashrep@user/crashrep)
[12:10:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:11:47] *** tc__ is now known as trycatch
[12:12:16] *** Quits: trycatch (~tc@103-140-203-11.vic.as139284.net.au) (Changing host)
[12:12:16] *** Joins: trycatch (~tc@user/trycatch)
[12:13:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[12:15:48] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:ec8a:21a7:a298:972c) (Ping timeout: 240 seconds)
[12:16:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[12:22:01] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:ecbc:c4db:21c9:a46) (Ping timeout: 245 seconds)
[12:25:03] *** Joins: Klinda (~superleag@user/klinda)
[12:25:09] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[12:25:22] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:25:25] <Dean> hello
[12:26:25] *** Joins: joev (~joev@user/joev)
[12:27:00] *** Quits: arinov_ (~arinov@5.24.108.1) (Ping timeout: 240 seconds)
[12:27:25] *** Joins: eroux (~eroux@102-65-85-242.ftth.web.africa)
[12:30:06] *** Quits: aura[m] (~aurabindo@2001:470:69fc:105::4204) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: explosion-mental (~explosion@2001:470:69fc:105::dac2) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: hashfuncc47 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[12:30:37] *** Joins: arinov_ (~arinov@5.24.108.1)
[12:30:52] *** Joins: msk (~Thunderbi@89.205.124.19)
[12:33:04] *** Joins: aqua (~aqua@user/aqua)
[12:34:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Ping timeout: 240 seconds)
[12:35:55] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[12:38:17] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:45:51] *** aqua is now known as kish`
[12:49:17] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[12:49:46] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:50:54] <caze> Hello Dean.
[12:51:21] <caze> Dean: You don't need to write additional functions.
[12:55:45] *** Joins: aqua (~aqua@user/aqua)
[12:56:09] *** aqua is now known as kish`2
[12:57:54] *** Quits: rkta (~rkta@2001:4ba0:cafe:eaf::1) (Quit: nyaa~)
[12:58:55] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[12:59:35] *** Joins: rkta_ (~rkta@2001:4ba0:cafe:eaf::1)
[12:59:43] *** rkta_ is now known as rkta
[12:59:59] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[13:00:20] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:00:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:01:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:38] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:05:01] *** Joins: jellie (~luv_panda@user/jellie)
[13:07:04] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[13:07:48] *** Joins: cosimone (~user@93-34-132-33.ip49.fastwebnet.it)
[13:09:41] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[13:11:00] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:16:25] *** Joins: crashrep (~crashrep@user/crashrep)
[13:18:20] *** Quits: cosimone (~user@93-34-132-33.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[13:20:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[13:23:41] *** Joins: sebag (~guest@91.245.82.2)
[13:27:00] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 252 seconds)
[13:29:48] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.14) (Ping timeout: 240 seconds)
[13:30:56] *** Joins: joilerv (~joilerv@145.224.65.230)
[13:31:08] *** Joins: crashrep (~crashrep@user/crashrep)
[13:34:43] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:35:08] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[13:35:23] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[13:40:10] *** Quits: arinov_ (~arinov@5.24.108.1) (Quit: Konversation terminated!)
[13:40:19] *** Joins: arinov (~arinov@5.24.108.1)
[13:45:01] *** Quits: clamiax (~clamiax@net-93-147-243-230.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[13:45:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[13:46:00] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[13:46:32] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[13:47:36] *** Quits: joilerv (~joilerv@145.224.65.230) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:47:44] *** Joins: joev (~joev@user/joev)
[13:48:08] *** Quits: sebag (~guest@91.245.82.2) (Quit: WeeChat 3.1)
[13:52:20] *** Joins: Burgundy (~NA@86.121.143.206)
[13:58:35] *** Joins: clamiax (~clamiax@net-93-147-242-222.cust.vodafonedsl.it)
[14:00:53] *** Joins: seninha (~chatzilla@user/seninha)
[14:01:13] *** Quits: Jong (~Jong@2620:10d:c090:400::5:b24b) (Quit: Textual IRC Client: www.textualapp.com)
[14:04:21] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[14:05:40] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[14:10:33] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:ec8a:21a7:a298:972c)
[14:11:38] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 272 seconds)
[14:13:10] *** Joins: heineken (~i.am@user/heineken)
[14:16:05] *** Joins: kts (~kts@103.73.237.62)
[14:26:43] *** Joins: shivesh (~shivesh@user/shivesh)
[14:27:06] <gtlsgamr> 13:35         caze │  gtlsgamr: Did you do the chapter 1 exercises? )) <--- Yes I Did!
[14:27:12] <gtlsgamr> caze: ^^
[14:28:03] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[14:31:31] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:32:34] <shiroyasha> gtlsgamr: If you're using weechat, Alt+L toggles the "bare display" mode. Better for copying.
[14:33:05] <kurahaupo> gtlsgamr: the test in line 40 could be simply [ -s "$masterlist" ] or if you need to check that it's actually text, « if read dummy <"$matterlist" ; then »
[14:33:27] <kurahaupo> gtlsgamr: the test in line 40 could be simply « if [ -s "$masterlist" ] ; then » or if you need to check that it's actually text, « if read dummy <"$matterlist" ; then »
[14:36:15] <kurahaupo> (if you can read the first line from the file, then you have the answer to "does it have more than 0 lines?"  without needing to read the rest of the file, which could be very costly if it's a very large file.)
[14:38:27] *** Joins: zuplex (~zuplex@202.51.76.58)
[14:38:48] *** Quits: zuplex (~zuplex@202.51.76.58) (Client Quit)
[14:44:13] *** Joins: cart_ (~cart@185.191.86.4)
[14:45:11] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[14:47:31] *** Joins: forxedtec (~disgrunt@207.138.206.175)
[14:47:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[14:47:57] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[14:48:50] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[14:48:54] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[14:50:50] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[14:51:39] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:ed63:33e5:399:571)
[14:51:48] <Dean> caze: getting a function to read the input would be good though, no? additionally building an array to take the characters with some preset limit to the size?
[14:52:03] *** Joins: jellie (~luv_panda@user/jellie)
[14:52:05] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:52:44] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:ed63:33e5:399:571) (Client Quit)
[14:54:05] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:56:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[14:58:30] *** Quits: arinov (~arinov@5.24.108.1) (Ping timeout: 272 seconds)
[15:06:40] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:11:26] *** Joins: sebag (~guest@91.245.82.2)
[15:11:34] <gtlsgamr> 16:33    kurahaupo │  gtlsgamr: the test in line 40 could be simply « if [ -s "$masterlist" ] ; then » or if you need to check that it's actually text, « if read dummy <"$matterlist" ; then » )) <-------------- Thanks Kurahaupo
[15:11:39] <gtlsgamr> i have updated it
[15:14:29] *** Quits: xel (~xel@user/xel) (Quit: Leaving)
[15:14:41] <Dean> caze: https://paste.debian.net/1232106/
[15:16:24] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 250 seconds)
[15:17:48] *** Quits: six666 (~six666@117.177.23.164) (Quit: Client closed)
[15:18:04] <kurahaupo> gtlsgamr: I've used many time recording systems like that, and I hated most of them because they required me to specify the id of a job when starting with on it to. The time taken to find the job ID should be accounted to the job itself, not silently added to whichever job you happened to be working on previously, especially when creating a new job.
[15:18:30] <kurahaupo> …starting *work on it
[15:18:31] *** Joins: mrig (~mrig@user/mrig)
[15:18:56] <gtlsgamr> I creatd titty because all the other systems were too complex. I wanted something simple
[15:19:01] <gtlsgamr> I dont need IDs or something
[15:20:49] <kurahaupo> gtlsgamr: I called mine "tl" (time log) so it would be quick to type
[15:21:38] <gtlsgamr> I honestly called it titty because i really loved the name! I have aliased it to tt though
[15:25:43] <kurahaupo> titty is time-in-terminal?
[15:27:04] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:29:57] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: Lost terminal)
[15:30:05] *** Quits: Elladan (~elladan@user/elladan) (Quit: ZNC - http://znc.in)
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:03] *** Joins: csrf (~csrf@user/csrf)
[15:31:23] *** Joins: Elladan (~elladan@user/elladan)
[15:34:18] *** Joins: xel (~xel@user/xel)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:11] <ChoHag> Tty is already pronounced titty.
[15:38:23] *** Quits: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[15:39:56] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:40:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:41:19] *** Joins: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl)
[15:44:12] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[15:45:03] *** Quits: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl) (Client Quit)
[15:45:24] *** Joins: Thymo (~Thymo@82-74-137-251.cable.dynamic.v4.ziggo.nl)
[15:45:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:47:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[15:49:18] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[15:54:49] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[15:55:18] *** Joins: Torr (~Torr@user/torr)
[15:55:53] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b579:336d:9a22:79d7)
[15:56:33] *** Joins: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net)
[15:56:56] *** Joins: oscurochu (~oscurochu@2603-9000-c202-1034-ecbc-c4db-21c9-0a46.inf6.spectrum.com)
[16:00:15] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:00:40] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[16:03:28] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:04:28] *** Joins: hinata (~hinata@2409:4042:2d11:cfb3:d501:7576:7f1c:194e)
[16:05:57] *** Joins: random-nick (~random-ni@87.116.179.129)
[16:06:40] <gtlsgamr> kurahaupo: Time In TTY
[16:11:55] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[16:13:52] *** Quits: ncrowl (~ncrowl@94-255-226-49.cust.bredband2.com) (Ping timeout: 272 seconds)
[16:14:31] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:15:03] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[16:19:20] *** Joins: kts (~kts@103.73.237.62)
[16:20:17] *** Joins: ncrowl (~ncrowl@89-160-77-219.cust.bredband2.com)
[16:21:23] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[16:22:27] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[16:22:37] *** Joins: goodfella (~archer@user/tessio)
[16:25:14] *** Joins: arinov (~arinov@176.232.58.20)
[16:27:54] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.14)
[16:29:40] *** Quits: adip_ (~adip@dil253.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[16:30:20] *** Quits: adip (~adip@dil253.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[16:31:22] *** Joins: pulse (~pulse@user/pulse)
[16:31:29] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[16:31:50] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[16:36:45] *** Quits: Haxxa (~Haxxa@122-199-59-132.ip4.superloop.com) (Ping timeout: 256 seconds)
[16:38:30] *** Joins: DSee (~DSee@198.147.22.136)
[16:40:17] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[16:42:53] *** Joins: gce108 (~gce@user/gce108)
[16:49:15] *** Quits: kish`2 (~aqua@user/aqua) (Ping timeout: 240 seconds)
[16:50:27] *** Joins: kish`2 (~aqua@user/aqua)
[16:53:02] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Ping timeout: 260 seconds)
[16:55:28] *** Quits: kts (~kts@103.73.237.62) (Quit: Konversation terminated!)
[17:01:24] *** Quits: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[17:01:42] *** Joins: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net)
[17:03:07] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[17:05:28] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:06:10] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[17:08:08] *** Joins: sh0ne (~sh0ne@178.237.217.167)
[17:09:24] *** Joins: gce108_ (~gce@70.40.27.222)
[17:10:36] *** Quits: hinata (~hinata@2409:4042:2d11:cfb3:d501:7576:7f1c:194e) (Quit: Leaving)
[17:11:00] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 240 seconds)
[17:12:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:13:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:16:49] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[17:18:07] *** Quits: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[17:22:16] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[17:23:20] *** Joins: meator (~meator@user/meator)
[17:24:22] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[17:26:55] *** Quits: sh0ne (~sh0ne@178.237.217.167) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:31:55] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:c8c1:792e:d629:387f)
[17:31:59] <goodfella> caze: interesting innocent looking exercise
[17:33:27] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:4d2e:385:779a:d7c4)
[17:33:42] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 256 seconds)
[17:33:50] *** Joins: Rynn (~rynn@216.30.158.198)
[17:38:34] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[17:42:00] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[17:44:17] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:c8c1:792e:d629:387f) (Ping timeout: 240 seconds)
[17:46:14] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:47:20] *** Quits: Myth (~pi@173.233.125.203) (Quit: WeeChat 3.0)
[17:48:22] <goodfella> caze: but th solution is easy as defining MINLINE 80 and print only if max > MINLINE
[17:48:42] <goodfella> http://ix.io/3QCq
[17:49:32] <goodfella> that's KnR 1.17 if my solution is ont good id like to hear advices
[17:49:41] <goodfella> s/ont/not
[17:49:49] *** Joins: Myth (~pi@173.233.125.203)
[17:49:51] <fizzie> Really the *interesting* part of that exercise is that it's quite possible to have a solution that doesn't have any MAXLINE constant, or a bound on the maximum line length, yet still uses only a constant amount of memory.
[17:49:56] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[17:50:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:50:43] *** Joins: coruja (~coruja@user/coruja)
[17:51:42] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:52:51] <goodfella> fizzie: are you talking about dynamic allocation ?
[17:52:54] <fizzie> No.
[17:53:04] <fizzie> I did say "constant", after all.
[17:53:29] <goodfella> we can ask the user what line he would like to print
[17:53:55] <goodfella> other than that i don't see what you mean
[17:54:35] *** Quits: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu) (Ping timeout: 272 seconds)
[17:55:33] <fizzie> Well, I'm talking about printing lines with no particular upper bound on the length. Like, your solution will only be able to handle lines of length up to 1000 (reliably). If there's a line with 1010 characters, only the first 999 will be printed, and the remainder will be treated as if it was a 11-character line and skipped.
[17:55:41] <fizzie> (With no dynamic allocation or asking the user or anything.)
[17:56:02] *** Joins: baltazar (~baltazar@178-164-190-49.pool.digikabel.hu)
[17:56:49] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[17:58:21] <goodfella> fizzie: ill try to do this now
[17:58:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:58:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:58:27] *** Joins: wroathe (~wroathe@user/wroathe)
[17:58:33] <fizzie> The task is by the way to print *all* lines of more than 80 characters, not just the longest.
[17:58:40] <fizzie> Assuming this is 1-17.
[17:58:47] <fizzie> ,kr1-17
[17:58:47] <candide> Chapter 1: A Tutorial Introduction; Exercise 1-17. Write a program to print all input lines that are longer than 80 characters.
[17:59:25] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[18:00:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:00:23] <fizzie> If it was to print only the longest line, then I agree it wouldn't be possible to handle arbitrarily long lines without some sort of dynamic allocation.
[18:00:43] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:01:00] <sham1> Well you still need a maxline constant so you know how much to allocate and so you can tell if your line is long enough to deserve printing
[18:01:31] <fizzie> That's MINLINE (in this case), not MAXLINE.
[18:01:31] *** Joins: MarderIII (~MarderIII@enneman.demon.nl)
[18:01:32] <goodfella> fizzie: http://ix.io/3QCu
[18:01:40] <sham1> I guess
[18:01:42] <goodfella> all lines
[18:01:50] <goodfella> but im going to do what you mentioned
[18:02:22] <sham1> I do also consider the K&R exercise somewhat ambiguous in its wording
[18:02:41] <goodfella> sham1: yep, they just stated print longer than 80 lines ...
[18:02:55] <sham1> Unless it specifies what notion it uses for determining how many characters a line has
[18:03:38] <sham1> Is an 80-character line 80 chars and then a newline, or 79 chars and where one counts the subsequent newline or ehat
[18:03:40] *** Joins: kts (~kts@103.73.237.234)
[18:04:00] <sham1> Err, 79 regular chars and one newline
[18:04:48] <goodfella> fizzie: can you confirm my solution ? i just curious
[18:04:56] <goodfella> the all lines above
[18:05:09] <fizzie> Yes, it looks reasonable.
[18:05:19] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:05:20] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[18:05:38] <fizzie> And to be clear, 1-17 also doesn't explicitly request you to handle lines of arbitrary length, it's just a thing you can do.
[18:06:42] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[18:07:59] <fizzie> And yeah, I don't think it's explicit about whether the "length" of 80 should include or exclude the newline. The sample program (for printing the longest line) / the getline return value (which is called "length") does include the '\n', but of course for that task it makes less of a difference.
[18:09:31] <fizzie> And on the other hand, most 80-column limits tend to be about 80 visible columns (not including the line terminator), not 80 bytes, since they're about standard terminal sizes.
[18:10:45] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:10:46] <goodfella> fizzie is it matter ? i mean it's just changing MAXLINE to MAXLINE+1 isn't it ?
[18:10:59] <sham1> That's true, and it's a valid interpretation but I do still find it a bit ambiguous is all
[18:11:26] <fizzie> Well, it matters in terms of if you're submitting your solution to some sort of a system to be judged. ;) Other than that, I think you can just make your own decision on which way to interpret it.
[18:12:57] <goodfella> i mean the mentality of not counting the terminating new line is just a matter of adding another byte for it after the MAXLINE characters
[18:13:51] <fizzie> Well, not quite. If the task is to "print all input lines that are longer than 80 characters", whether the '\n' counts in line length affects that decision.
[18:14:52] <fizzie> "0123455678901234556789012345567890123455678901234556789012345567890123455678901234556789\n" would be exactly 80 characters (and not printed) in one interpretation, but 81 characters (and therefore printed) in the other. Again, this'd really only matter if you're being scored on passing test cases or something.
[18:16:51] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:45e9:3822:8cbb:4b60)
[18:16:51] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:45e9:3822:8cbb:4b60) (Changing host)
[18:16:51] *** Joins: skapata (~Skapata@user/skapata)
[18:18:58] *** Joins: oxfuxxx (~oxfuxxx@217.138.213.30)
[18:22:47] <kurahaupo> If the input isn't a valid POSIX text file, should the bytes after the last newline be considered for printing?
[18:23:52] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:25:20] *** Quits: zer0x_ (~zer0x@42.113.143.168) (Ping timeout: 250 seconds)
[18:25:48] *** Quits: joev (~joev@user/joev) (Ping timeout: 240 seconds)
[18:26:12] *** kish`2 is now known as kish`
[18:26:13] *** Quits: gce108_ (~gce@70.40.27.222) (Quit: Leaving)
[18:26:35] *** Joins: Symbioti1Female (~Symbiotic@user/SymbioticFemale)
[18:26:50] *** Joins: joev (~joev@user/joev)
[18:26:50] <kurahaupo> One could argue that "character" has the English meaning, not "char", and therefore it's only printable char values that count
[18:26:55] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[18:27:24] *** Joins: gce108 (~gce@user/gce108)
[18:27:25] <sham1> And I suppose spaces and tabs should also count
[18:27:47] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:b579:336d:9a22:79d7)
[18:27:51] <fizzie> (And if the answer to that is yes, *and* you're counting the '\n' in the line length, should the final non-terminated "line" have an imaginary line terminator added to it for consistency, or not?)
[18:27:51] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[18:27:58] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[18:27:58] <sham1> Of course, it's a problem solved quite nicely in awk or sed, although it's valuable that it's covered in the C book
[18:28:00] *** Quits: fstd_ (~fstd@xdsl-78-34-125-135.nc.de) (Remote host closed the connection)
[18:28:06] *** Joins: fstd (~fstd@xdsl-78-34-125-135.nc.de)
[18:28:07] <kurahaupo> yeah, the "techie English" meaning
[18:28:37] *** Quits: arinov (~arinov@176.232.58.20) (Ping timeout: 240 seconds)
[18:29:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.16)
[18:30:00] <kurahaupo> fizzie: … aaaargh … 😫
[18:30:46] <sham1> And if we're going with an English definition of a character, would one need to worry about multibyte characters? What about ones that are wider than a column
[18:31:01] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.14) (Ping timeout: 240 seconds)
[18:31:02] <sham1> So many edge cases if one really starts drilling deep into this exercise
[18:31:08] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b579:336d:9a22:79d7) (Ping timeout: 252 seconds)
[18:31:29] <kurahaupo> fizzie: I'm inclined to say, do whatever works most efficiently for proper files, and let the cards fall wherever for improper files
[18:32:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:34:25] *** Quits: oxfuxxx (~oxfuxxx@217.138.213.30) (Ping timeout: 268 seconds)
[18:35:19] *** Joins: kts_ (~kts@103.73.237.95)
[18:35:42] *** Joins: stblaha (~stblaha@user/stblaha)
[18:35:45] *** Quits: kts (~kts@103.73.237.234) (Ping timeout: 256 seconds)
[18:36:45] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[18:36:50] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e)
[18:38:35] *** Joins: nf (~n@2001:19f0:7400:8e5a:5400:3ff:fede:4dc0)
[18:38:52] *** Quits: kts_ (~kts@103.73.237.95) (Client Quit)
[18:39:25] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e) (Client Quit)
[18:39:33] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[18:40:34] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[18:40:44] <goodfella> fizzie: you talked about something like that earlier ?
[18:41:14] <goodfella> http://ix.io/3QCV
[18:41:26] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e)
[18:41:45] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e) (Client Quit)
[18:41:50] <goodfella> that it's possbile without MAXLINE
[18:44:19] <goodfella> if not i don't know what you meant by:
[18:44:21] <goodfella> fizzie | Well, I'm talking about printing lines with no particular upper bound on the length. Like, your solution will only
[18:44:24] <goodfella>        | be able to handle lines of length up to 1000 (reliably). If there's a line with 1010 characters, only the first 999
[18:44:26] <goodfella>        | will be printed, and the remainder will be treated as if it was a 11-character line and skipped.
[18:44:35] <gnoo> goodfella: you'll need to store the 80 chars in a buffer and then print it if line exceeds 80 chars
[18:45:00] *** Quits: synbiose (~synbiose@user/synbiose) (Quit: synbiose)
[18:45:13] <fizzie> Yeah, the usual structure (assuming '\n' does count) is, you use a buffer of 80 (or 81 if you want to keep it a string) bytes to read in the first 80 characters of each line. If there's a '\n' anywhere in the buffer, you've just read a complete line of length <= 80, and should just discard it and move on. Otherwise, what you've just read represents the beginning of a line longer than 80 characters, so
[18:45:15] <fizzie> you should print it out, and then proceed to print everything up to and including the next '\n' in the input. Crucially, doing the latter doesn't involve buffering the entire line, so there's no need for dynamic allocation even when handling lines of arbitrary length.
[18:45:42] *** Joins: Impulsif (impulsif@impulsif.us2.ircnow.org)
[18:46:33] <goodfella> fizzie: oh i thought the whole point is not having something like char line[MAXLINE]
[18:47:46] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[18:48:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com)
[18:49:20] <fizzie> Well, it *is*. Instead, you have a `char line[MINLINE]`. As in, the size of the buffer is unrelated to the maximum length of the line you can handle correctly.
[18:49:24] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[18:50:37] *** Quits: marcj (~marc@205.175.215.11) (Ping timeout: 240 seconds)
[18:51:23] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[18:51:49] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[18:52:02] *** Joins: mrig (~mrig@user/mrig)
[18:52:46] <fizzie> You do still need a buffer of some sort because when you're reading the first 80 characters of the line, there's no way you can know whether they're going to end up printed or not. It's just that the buffer size doesn't impose a line length limit, the way it does if you just do "read a full line, test if its length is >80, print if so".
[18:53:27] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e)
[18:53:30] <ioxzev1z> fizzie, wrt upper bound, it's reasonable to set a high limit (some editors use 4096) rather than expecting unknown lengths
[18:54:27] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[18:54:55] *** Joins: jjido (~Denis@94.4.149.217)
[18:55:09] *** Joins: marcj (~marc@205.175.215.11)
[18:55:12] *** Joins: alicef (~none@gentoo/developer/alicef)
[18:57:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:57:45] *** Joins: alicef_ (~none@gentoo/developer/alicef)
[18:58:10] <kurahaupo> fizzie: Are we allowed to use fseek / ftell?
[18:59:24] <fizzie> I feel like assuming stdin is seekable is a bigger sin than having a (reasonable) maximum line length limitation.
[18:59:37] <fizzie> Because it's always annoying when you can't stick a thing in a pipeline.
[18:59:53] *** Quits: alicef (~none@gentoo/developer/alicef) (Ping timeout: 256 seconds)
[19:04:07] *** Quits: DSee (~DSee@198.147.22.136) (Quit: Quit)
[19:04:30] <kurahaupo> fizzie: I agree with the sentiment, but I wondered if it was allowed by the exercise
[19:05:31] *** Joins: Dsee4 (~DSee@198.147.22.136)
[19:06:09] <goodfella> so fizzie in short what you didn't liked it's MINLINE .. instead i should have assigned 80 to MAXLINE ?
[19:06:52] *** Joins: alicef (~none@gentoo/developer/alicef)
[19:06:56] *** Quits: alicef_ (~none@gentoo/developer/alicef) (Read error: Connection reset by peer)
[19:07:01] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[19:07:19] *** Quits: Dsee4 (~DSee@198.147.22.136) (Client Quit)
[19:08:10] <goodfella> and if there were any
[19:08:13] <fizzie> What? No, what I didn't like was any fixed upper bound for the length of the lines your solution can handle. The name of the constant doesn't really matter.
[19:09:14] *** Quits: alicef (~none@gentoo/developer/alicef) (Client Quit)
[19:09:26] *** Joins: kts (~kts@103.73.237.95)
[19:09:49] <goodfella> but there must be some upper bound .. you said it yourself, to assign a buffer of 80
[19:10:44] *** Joins: alicef (~none@gentoo/developer/alicef)
[19:11:44] *** Joins: thevishy (~Nishant@2405:201:f005:c007:e022:4c5f:4bd4:2b64)
[19:11:49] *** Joins: Burger (~textual@user/burger)
[19:12:09] <kurahaupo> goodfella: It's an upper bound on the minimum length, not an upper bound on the length of line that will be printed
[19:12:24] *** Joins: malina (~malina@user/malina)
[19:12:37] <gnoo> goodfella: in your last program, it didn't matter how large the line was (assuming no overflow, that's easy to fix). that solution just didn't preserve the 80 chars that were at the beginning. now, if you make a buffer of 80 chars and then store in it instead of throwing the input away, you're golden
[19:13:31] <fizzie> I don't know how to rephrase this any more. The point is that if the question asks you to print "all lines of 80 characters or more", you can have a solution that uses a buffer of 80 (or 81) bytes and correctly print lines of arbitrary length, including lines of length 1000000.
[19:14:13] <fizzie> Instead of having a buffer of length (say) 1000, and correctly printing all lines of length 81..999, and doing something less defined for lines of length >= 1000.
[19:16:12] *** Quits: Burgundy (~NA@86.121.143.206) (Remote host closed the connection)
[19:16:21] <kurahaupo> mumble grep -E .{81}
[19:17:48] *** Joins: gce108 (~gce@user/gce108)
[19:19:14] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[19:19:50] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[19:20:14] <sham1> awk 'length($0) > 80 { print }'
[19:21:56] <twkm> not that it is c, but {print} is redundant.
[19:22:04] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a375:4df:5846:3a7f) (Remote host closed the connection)
[19:22:19] <sham1> Sure, but I do tend to be somewhat explicit about this stuff when writing awk. But good catch
[19:24:51] *** Joins: arinov (~arinov@176.236.130.138)
[19:26:38] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:27:44] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:27:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:30:15] *** Joins: DSee (~DSee@198.147.22.136)
[19:32:02] *** Quits: DSee (~DSee@198.147.22.136) (Client Quit)
[19:32:12] <goodfella> ok that makes sense thanks ... for printing lines longer than let's say 50 i need a buffer of at least 50 and whenever i have '\n somwhere before 50 i ignore it, and continue reading characters until i fill my buffer of 50
[19:32:54] <goodfella> and after filling it, i print the buffer and everything up until the next line
[19:32:56] *** Quits: joev (~joev@user/joev) (Ping timeout: 250 seconds)
[19:33:00] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 240 seconds)
[19:34:09] *** Joins: joev (~joev@user/joev)
[19:34:21] <kurahaupo> goodfella: spot on!
[19:37:18] <goodfella> fizzie: thanks for not giving up .. i just want to make sure i understand fully my mistakes
[19:37:28] <goodfella> wanted to make sure
[19:38:42] *** rcf is now known as nh
[19:38:58] *** nh is now known as rcf
[19:46:32] *** Quits: kts (~kts@103.73.237.95) (Quit: Konversation terminated!)
[19:46:50] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[19:47:00] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 240 seconds)
[19:54:34] *** Joins: pulse (~pulse@user/pulse)
[19:59:37] <kurahaupo> # echo hi > a ; tee -a a a a < a >>a ; tr \\n X < a
[20:00:03] <kurahaupo> sorry wrong channel
[20:00:21] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:01:09] *** Quits: thevishy (~Nishant@2405:201:f005:c007:e022:4c5f:4bd4:2b64) (Quit: Leaving)
[20:01:55] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[20:03:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[20:05:01] *** Quits: nf (~n@2001:19f0:7400:8e5a:5400:3ff:fede:4dc0) (Quit: Fairfarren.)
[20:05:12] *** Joins: nf (~n@monade.li)
[20:06:02] *** Joins: kts (~kts@103.73.237.95)
[20:06:35] *** Quits: Symbioti1Female (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[20:14:48] *** Joins: Atque (~Atque@user/atque)
[20:15:01] *** Joins: angelacrust (~angelacru@171.50.165.251)
[20:16:20] <angelacrust> Hi, while I do have some experience in writing the compare function for normal lists, I am not able to understand this piece of code.
[20:16:22] <angelacrust> https://bpa.st/IUYQ
[20:17:37] *** Joins: DepthDeluxe (~DepthDelu@2601:647:4700:1e3c:ecf9:7ef4:b130:16ca)
[20:17:50] <angelacrust> I write my compare functions like: https://bpa.st/F3FQ
[20:18:04] <goodfella> a and b are casted into ints and dereferenced
[20:18:12] <goodfella> and you get the result of the subtraction
[20:18:25] <angelacrust> Yep, are the two programs similar?
[20:18:49] <goodfella> yes
[20:18:53] <angelacrust> oh
[20:19:02] <goodfella> im not sure about the const part but other than that yes
[20:19:16] <sham1> Don't do comparisons by subtraction
[20:19:19] <sham1> Please
[20:19:29] <angelacrust> what if I pass `56` and `65` as params?
[20:19:31] <kurahaupo> isn't "cast" one of the irregular verbs where the past tense is the same as the same as the present tense, like "set" or "fit"?
[20:19:56] * goodfella shurgs
[20:20:01] *** Joins: meator (~meator@user/meator)
[20:20:02] <sham1> I think cast is like that, although I tend to find it that nowadays people might say that something was "casted"
[20:20:12] <angelacrust> sham1 what should I do then?
[20:21:35] <sham1> angelacrust: explicit comparison, so `if (*a < *b) { return -1; } else if (*a > *b) { return 1; } else { return 0; }` type of stuff, adapted to whatever criterion you're using for sorting
[20:21:52] <angelacrust> oh
[20:22:06] <angelacrust> what's the problem with subtraction?
[20:22:15] <sham1> It can lead to undefined behaviour
[20:22:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:22:19] <kurahaupo> cast like a spell, or a net, or a knitting stitch, or a sheep, or a computing expression?
[20:22:19] <kurahaupo> if (*a < *b) return -1; return *a > *b;
[20:22:25] <sham1> It's a corner case, but it can happen
[20:22:37] <angelacrust> well I didn't know that
[20:22:43] <angelacrust> thanks for teaching me that
[20:22:50] <sham1> ,cc 0 - INT_MAX
[20:22:52] <candide> sham1: no output: 0 - INT_MAX = -2147483647
[20:23:07] <sham1> Err, that's not the correct example
[20:23:08] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[20:23:12] <kurahaupo> ,cc 0 - INT_MIN
[20:23:15] <candide> kurahaupo: [warning: integer overflow in expression of type 'int' results in '-2147483648' [-Woverflow]] no output: 0 - INT_MIN = -2147483648
[20:23:20] <sham1> Ah yes, that's the one
[20:23:46] <angelacrust> can you please `r/explainlikeimfive` those pointer casts? thank you
[20:23:50] *** Joins: nitrix (~nitrix@user/nitrix)
[20:24:39] <sham1> They're casted for some reason. The real way of doing that would be the following: `int const *x = a; int const *y = b;`
[20:25:00] *** Quits: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[20:25:03] <angelacrust> oh
[20:25:04] <sham1> Basically you need to go from a pointer to a void to an actual pointer to an actual object, in this case an int
[20:25:17] <sham1> And with your cast, you're losing the consts
[20:25:49] <angelacrust> hm
[20:25:52] *** Joins: Akuli (~Akuli@82-203-167-218.bb.dnainternet.fi)
[20:26:13] *** Joins: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net)
[20:26:30] *** Quits: stblaha (~stblaha@user/stblaha) (Quit: leaving)
[20:27:24] <Dean> angelacrust: sorry i didn't see your message yesterday until you were offline
[20:27:31] <kurahaupo> ,cc INTMAX - INTMIN /* one might naïvely intend this to be positive */
[20:27:32] <candide> kurahaupo: error: 'INTMAX' undeclared; did you mean 'INT_MAX'?
[20:27:43] <kurahaupo> ,cc INT_MAX - INT_MIN /* one might naïvely intend this to be positive */
[20:27:45] <candide> kurahaupo: [warning: integer overflow in expression of type 'int' results in '-1' [-Woverflow]]
[20:27:46] <angelacrust> if I pass `56` and `65` how would it work? are you comparing the memory addresses since an int is always 4 bytes ahead of the previous int in an array?
[20:27:49] <angelacrust> Dean that's fine
[20:28:04] <angelacrust> kurahaupo interesting...
[20:28:31] <sham1> angelacrust: you wouldn't pass 56 and 65, what you'd do is something like `int a = 56; int b = 65; cmp(&a, &b);`
[20:28:39] *** Joins: singularity00 (~singulari@236.lan-hi1-2.static.rozabg.com)
[20:29:10] <gtlsgamr> Hello. I am studying K&R and I am in section Bitwise operators.. but I feel I need some more info on it before I can actually understand that section. What should I read to get a basic understanding of bits/bit level manipulation?
[20:29:16] <angelacrust> Ah, yes. I've been passing that compare function in `qsort()`
[20:29:23] *** Quits: arinov (~arinov@176.236.130.138) (Ping timeout: 252 seconds)
[20:29:28] <gtlsgamr> Section 2.9
[20:30:29] <kurahaupo> As long as the absolute values of all the numbers are ≤ INT_MAX/2, subtraction will return a value with a useful sign.
[20:30:32] <clarity> gtlsgamr: https://en.wikipedia.org/wiki/Bit https://en.wikipedia.org/wiki/Binary_number
[20:31:20] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:31:52] <kurahaupo> A better way to handle this is to specify that the comparison need only compute *a > *b; if the caller needs to know *a < *b, it simply calls again with the parameters swapped
[20:31:56] *** Joins: arinov (~arinov@176.236.130.138)
[20:32:01] <angelacrust> hmm
[20:32:52] <angelacrust> ok btw, why are we casting on the LHS of the expression? `int *x = (int*) a`
[20:33:16] <sham1> You shouldn't
[20:33:19] <sham1> And you don't need to
[20:33:32] <angelacrust>  I see
[20:33:43] <kurahaupo> angelacrust: force of habit from code so old that void* didn't exist
[20:33:48] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:34:02] <angelacrust> So `return (int*) a - (int*) b` would also work?
[20:34:20] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:34:39] <sham1> Yes, but you'd want to do `return (int const *) a - (int const *) b;` and even then you might want to consider what I said about
[20:34:42] <sham1> above*
[20:34:48] *** Joins: pretty_d1 (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:34:56] <angelacrust> kurahaupo, is there a practical application of `void *` in real-world scenarios?
[20:35:03] <angelacrust> why const?
[20:35:08] <kurahaupo> angelacrust: That would only tell you their relative positions within the same array. Or give undefined behaviour if they're not in the same object
[20:35:29] *** Quits: MarderIII (~MarderIII@enneman.demon.nl) (Remote host closed the connection)
[20:35:49] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:900:7185:187d:5b4e)
[20:36:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 245 seconds)
[20:36:18] <sham1> And yeah, you actually do want to dereference
[20:36:30] <angelacrust> hm
[20:36:46] <sham1> So `return *(int const *) a - *(int const *) b;` because without the dereference, that'd be useless
[20:36:54] <kurahaupo> angelacrust: void* is useful where you don't need to know the types of pointers you're dealing with. eg the malloc library uses it
[20:37:33] <angelacrust> correct
[20:38:35] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:39:14] <gtlsgamr> clarity: Thank you.. I will take a look.
[20:39:58] <angelacrust> `int a = 51; int b = 14;` `// &a = 314 and &b = 318
[20:39:59] <angelacrust> Now, on passing `cmp(&a,  &b)`  `// we are passing 314 and 318`
[20:40:04] <angelacrust> So my question is
[20:40:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:40:35] <angelacrust> `(int const*)  a)` -- is it equal to 51?
[20:40:35] *** Joins: wyfnt (~wyfnt1232@113.21.73.126)
[20:40:41] *** Joins: mahmutov (~mahmutov@37.155.87.240)
[20:40:48] <sham1> No
[20:40:58] <sham1> `*(int const *)a` however is
[20:41:01] *** Joins: vicfred (~vicfred@user/vicfred)
[20:41:09] *** Quits: kts (~kts@103.73.237.95) (Ping timeout: 272 seconds)
[20:41:12] *** Joins: arinov_ (~arinov@5.24.108.1)
[20:41:31] <fizzie> The other one, `(int const *) a`, just converts the address ("314") from a `void *` to `int const *`. It still remains just a pointer pointing at the same place.
[20:41:49] <angelacrust> so the inner part is typecasting while the outer part is dereferencing
[20:41:54] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[20:42:21] *** ChanServ sets mode: +o candide
[20:42:28] <sham1> Yeah. So `*(int const *)a` is equivalent to `*((int const *)a)` so with added parentheses
[20:42:35] *** Quits: candide (~pbot3@about/c/bot/candide) (Read error: Connection reset by peer)
[20:42:41] <angelacrust> Gotcha
[20:42:58] <angelacrust> Why is there a need to cast the `void *` to `int const *`?
[20:43:40] *** Joins: candide (~pbot3@about/c/bot/candide)
[20:43:41] <fizzie> Because you can't dereference a `void *`. It's a pointer to an incomplete type.
[20:44:00] <fizzie> You have to somehow tell the compiler that hey, this pointer points at an `int`, fetch one of those from it.
[20:44:14] *** Quits: arinov (~arinov@176.236.130.138) (Ping timeout: 252 seconds)
[20:44:23] <fizzie> Either by casting it to an `int *`, or assigning it to a variable of type `int *` (which doesn't need a cast).
[20:44:56] *** Quits: cart_ (~cart@185.191.86.4) (Ping timeout: 272 seconds)
[20:45:03] <angelacrust> Oh
[20:45:15] <angelacrust> Nice. That's something new I learned today
[20:45:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Ping timeout: 250 seconds)
[20:45:58] <fizzie> Also, there's more than just the one corner case that goes wrong if you try to compare by subtraction. For example, with the standard integer sizes, trying to compare 2000000000 and -2000000000 will also invoke undefined behavior, and likely also return the wrong result. Because 2000000000 - (-2000000000) equals 4000000000, which isn't representable as an `int`.
[20:46:27] <fizzie> The result is undefined, and most likely -294967296 (a negative value), so the comparison function will consider 2000000000 to be less than -2000000000.
[20:46:33] <angelacrust> Yeah, I do have a different compare functions for the type `long long`
[20:46:36] <angelacrust> *function
[20:47:02] <fizzie> Not the point. The point is, even when the input values are `int`s, their difference can't always be represented in an `int`.
[20:47:09] <angelacrust> oh
[20:47:37] <angelacrust> Yes. I never thought about that corner case
[20:47:46] <fizzie> ,cc int a = 2000000000, b = -2000000000; printf("a: %d, b: %d, a - b: %d", a, b, a - b);
[20:47:49] <candide> fizzie:  runtime error: signed integer overflow: 2000000000 - -2000000000 cannot be represented in type 'int'  a: 2000000000, b: -2000000000, a - b: -294967296
[20:48:02] <sham1> And thus the code sample of `int const *x = a; int const *y = b; if (*x < *y) {return -1;} else if (*x > *y) {return 1;} else {return 0;}`
[20:48:26] <angelacrust> This is brilliantly explained
[20:48:30] <angelacrust> Wow
[20:49:22] <nitrix> Imagine understanding a language instead of randomly guessing.
[20:49:25] <fizzie> Now, if only C would add the <=> operator.
[20:49:31] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-817d-d28d-b455-4309.fixed6.kpn.net)
[20:50:00] <sham1> That'd be useful for only primitive types
[20:50:16] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:489b:ff0a:dcf5:4c60)
[20:50:20] <sham1> Unless we also co-opted operator<=> from C++ and allowed those to be defined for structs
[20:50:56] *** Quits: candide (~pbot3@about/c/bot/candide) (Quit: Departure requested.)
[20:51:08] *** Joins: candide (~pbot3@about/c/bot/candide)
[20:51:55] *** Joins: FrostKiwi (~user@user/frostkiwi)
[20:52:06] <angelacrust> thank you #c for helping me out. You guys are amazing.
[20:53:37] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-817d-d28d-b455-4309.fixed6.kpn.net) (Ping timeout: 240 seconds)
[20:53:49] <fizzie> Everything's *eventually* made out of some number of primitive types. You could still do `d = a->x <=> b->x; if (d) return d; return a->y <=> b->y;` instead of `if (a->x < b->x) return -1; if (a->x > b->x) return 1; if (a->y < b->y) return -1; if (a->y > b->y) return 1; return 0;`.
[20:54:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[20:54:37] <fizzie> Or perhaps `if (int d = a->x <=> b->x; d) return d; return a->y <=> b->y;` if they added that other thing too. Or `return a->x <=> b->x ?: a->y <=> b->y;` if they added the other other thing. Although I'm kind of hating it now.
[20:55:23] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 265 seconds)
[20:56:07] *** Joins: Livio (~livio@user/livio)
[20:57:14] *** Joins: malloy (~jimery@116.30.220.175)
[20:57:49] *** Joins: analognoise (~analognoi@212.102.45.103)
[20:58:34] *** Joins: kuber (~kuber@75-172-87-88.tukw.qwest.net)
[20:59:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:59:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:59:12] *** Joins: wroathe (~wroathe@user/wroathe)
[20:59:28] *** Joins: dp1021 (~Srain@host86-136-133-7.range86-136.btcentralplus.com)
[21:00:07] <nitrix> 3 symbols wide operators reminds me of my Haskell days.
[21:00:32] <nitrix> I was very fond of my cat operator though, =^.^=
[21:01:54] *** Joins: strajder (~strajder@user/strajder)
[21:02:01] <angelacrust> Is C still used by companies like Google?
[21:05:12] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[21:05:16] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[21:05:18] <pragma-> ,cc puts("ȯ Я 😀")
[21:05:20] <candide> pragma-: ȯ Я 😀
[21:05:31] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[21:05:31] <pragma-> Finally. Fuck you gdb.
[21:05:34] <sham1> Yay, UTF-8 works
[21:06:03] <pragma-> gdb can't seem to keep its charsets straight when using gdb commands
[21:07:31] <pragma-> no amount of fidding with host-charset and target-charset would make gdb display the characters correctly
[21:07:41] <FrostKiwi> Cyrillic characters invading your GDB?
[21:08:20] <pragma-> had to go back to turning print sevenbit-strings on again and wrote a thing to manually convert \321 escaped characters to the actual bytes.
[21:08:38] *** Quits: DepthDeluxe (~DepthDelu@2601:647:4700:1e3c:ecf9:7ef4:b130:16ca) (Quit: Leaving)
[21:09:03] <pragma-> and that's only if you use `-i mi` with gdb. otherwise it's fine.
[21:09:11] * pragma- bangs head against desk at the wasted 2 hours
[21:09:54] <nitrix> angelacrust, No. No one at one of the largest technological company with billion of users, thousands of products, massive infrastructure, open-source projects and programmers of various backgrounds and different expertises uses the most foundationally significantly important programming language of our time.
[21:10:27] <sham1> Lisp?
[21:11:19] <FrostKiwi> sham1: Does using Emacs count? Then that's a bunch.
[21:11:31] <sham1> I'd say so
[21:11:48] <nitrix> Close contender, but history still ended up having C win over Lisp machines in the end, as nice as that would've been.
[21:16:13] *** Quits: andi_ (~andi@user/andi/x-3467420) (Ping timeout: 240 seconds)
[21:16:29] *** Joins: andi_ (~andi@2a01:4f8:c0c:a014::2)
[21:16:29] *** Quits: andi_ (~andi@2a01:4f8:c0c:a014::2) (Changing host)
[21:16:29] *** Joins: andi_ (~andi@user/andi/x-3467420)
[21:16:33] *** Quits: FrostKiwi (~user@user/frostkiwi) (Remote host closed the connection)
[21:17:10] <nitrix> angelacrust, Their servers runs on HTML operating systems so the websites are prettier, their machine learning are training models in PHP to be fast, their internet-of-things devices are written with Rust to be secure, there is no place for C.
[21:17:31] <pragma-> html operating systems
[21:18:36] <nitrix> <Ring3><open path="/proc/cpu" mode="0600"/></Ring3>
[21:19:01] *** Joins: Akiva (~Akiva@user/Akiva)
[21:23:11] <angelacrust> Oh wow nitrix
[21:24:09] *** Joins: diamondbond (~diamondbo@175.157.92.206)
[21:24:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:24:50] <angelacrust> I didn't know you could write ML code in PHP lol
[21:25:01] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Ping timeout: 240 seconds)
[21:25:33] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:26:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:26:22] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[21:26:53] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:28:48] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[21:31:28] <nitrix> Most of the ML research is done with Python and nearly all of those frameworks relies on C libraries.
[21:31:46] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[21:32:17] <nitrix> The cute websites with their websockets, css, canvas and javascript, the networking for that is in C, the rendering is in C, the VM to run the JavaScript is in C.
[21:32:38] <nitrix> The backend the site talks to that's in Go probably talks to some database that's in C.
[21:33:01] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:33:50] <nitrix> The whole thing surely runs on an operating system written in C. Your mouse, your keyboard, your webcam driver for your Zoom call, your audio/video processing on that call...
[21:34:00] <angelacrust> I C
[21:34:23] <nitrix> Literally all of the harder problems that simply cannot be glued together is written by a handful of people, in C, and usually for free too.
[21:34:36] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[21:34:50] <angelacrust> I should learn C more diligently then
[21:35:21] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:35:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:35:24] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:35:44] <ChoHag> Learning C will put hair on your chest.
[21:36:01] <angelacrust> :O
[21:36:09] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[21:36:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[21:36:18] <NRK> and neck
[21:36:55] <nitrix> ,grab ChoHag NRK
[21:36:56] <candide> Quote grabbed: 2147: <C﻿hoHag> NRK: It's for c﻿larity, see...
[21:37:05] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[21:37:10] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:ec8a:21a7:a298:972c) (Quit: fe23)
[21:37:12] *** Joins: crashrep (~crashrep@user/crashrep)
[21:37:19] <nitrix> ,delq 2147:
[21:37:22] <nitrix> ,delq 2147
[21:37:22] <candide> Deleted 2147: <C﻿hoHag> NRK: It's for c﻿larity, see...
[21:37:39] <nitrix> No idea how to join two grabs.
[21:38:36] *** Joins: smoke (~smoke@user/smoke)
[21:38:48] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com)
[21:39:24] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (Quit: ZNC 1.8.2 - https://znc.in)
[21:39:40] <nitrix> ,grab ChoHag + NRK
[21:39:41] <candide> Quote grabbed: 2147: <C﻿hoHag> Learning C will put hair on your chest. <N﻿RK> and neck
[21:39:44] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[21:39:48] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[21:40:08] <angelacrust> Speaking of Operating Systems-- I'm taking a course in OS this semester and I was planning to submit a simple lightweight OS for the final project. What should I learn, and possibly do? Or is it a very baseless plan?
[21:40:31] *** Quits: wyfnt (~wyfnt1232@113.21.73.126) (Quit: Leaving)
[21:40:47] <nitrix> A unikernel is a decent place to start.
[21:41:04] *** Joins: wyfnt (~wyfnt1232@113.21.73.126)
[21:41:21] <angelacrust> Okay
[21:41:27] <fizzie> The fact that protobuf has no official C distribution possibly says something about how much C is used at Google specifically. (Not saying there isn't any. But there's maybe less than one might expect.)
[21:41:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[21:41:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:41:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:41:36] *** Joins: wroathe (~wroathe@user/wroathe)
[21:42:02] <angelacrust> hmm...
[21:42:11] <nitrix> It's mostly C++. They've been replacing what they can with Go.
[21:42:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:43:47] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:45:06] <nitrix> By not insisting as much with the separation between kernel-space and user-space, you get cool performance improvements. No priviledge switching, avoiding copies, direct hardware I/O (something Linux is just adding recently), etc.
[21:45:59] <nitrix> The downside of the simplicity is that the kernel doesn't isolate the processes that are running.
[21:46:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:46:21] *** Joins: diamondbond_ (~diamondbo@175.157.92.206)
[21:46:29] *** Quits: diamondbond (~diamondbo@175.157.92.206) (Ping timeout: 256 seconds)
[21:48:47] <nitrix> It's relatively simple. Setup the GDT table, write a simple VGA driver, re-use a bootloader like grub, throw that into qemu, bam, you have an OS.
[21:49:32] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 272 seconds)
[21:49:58] <angelacrust> Where can I learn more about Unikernels in C?
[21:51:20] <nitrix> If only there was a large technological company with billion of users, thousands of products, massive infrastructure, open-source projects and programmers of various backgrounds and different expertises that built a search engine.
[21:51:41] <angelacrust> =# (y)
[21:52:06] <nitrix> angelacrust, https://wiki.osdev.org and #osdev are good resources.
[21:52:11] *** Joins: xa0s (~xa0s@mab.sdf.org)
[21:52:21] <angelacrust> thank you
[21:56:22] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.16) (Ping timeout: 250 seconds)
[21:56:42] <nitrix> pragma-, The ability to find what I'm looking for in PBot's source code is really impressive. I don't know if it's the improved documentation, the file structure or just Perl text operations, but it's very nice.
[21:56:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[21:57:17] <pragma-> :)
[21:57:25] <pragma-> Been working on cleaning it up.
[21:57:47] <nitrix> Had many times over the difficulty today at work for something else, it's refreshing.
[21:58:17] *** Joins: crashrep (~crashrep@user/crashrep)
[21:58:36] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[21:59:10] *** Quits: plastico (~plastico@neomutt/plastico) (Remote host closed the connection)
[21:59:29] <meator> Hi. Why is mixing FILE * functions (fopen(), fgetc()...) and syscalls (open(), read()...) bad?
[21:59:56] *** Joins: plastico (~plastico@neomutt/plastico)
[22:00:06] <meator> Apart from open(), read()... being non-portable.
[22:00:10] *** Joins: pulse (~pulse@user/pulse)
[22:00:36] <fizzie> Because it can be unpredictable how much the stdio functions have read from/ written to the file descriptor, due to buffering.
[22:00:37] <nitrix> The FILE * functions belongs to the C standard library and are portable. The syscalls works with file descriptors, dependent on / and provided by / your operating system, so not very portable.
[22:02:04] *** Joins: kamarat (~kamarat@81.161.60.198)
[22:02:21] <fizzie> POSIX does have a set of rules about mixing them in a way that avoids surprises, but they're not terribly simple.
[22:02:27] <nitrix> I would say it's bad to mix them because they aren't aware of one another. If fgets has buffered something, the next read might be unaware of that.
[22:02:35] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[22:02:55] <meator> Is working with stderr (STDERR_FILENO) safe (because it isn't buffered)?
[22:03:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[22:05:21] <nitrix> You use "bad" and "safe" like we're supposed to know what that implies and what it means for the design of your project.
[22:05:42] *** Quits: BGL (sixty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[22:06:00] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 272 seconds)
[22:06:31] <fizzie> If you want the POSIX rules, https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/functions/V2_chap02.html "2.5.1 Interaction of File Descriptors and Standard I/O Streams". An unbuffered stream is a little simpler.
[22:06:34] <candide> Title of fizzie's link: General Information
[22:07:29] *** Quits: angelacrust (~angelacru@171.50.165.251) (Quit: Client closed)
[22:11:23] *** Joins: Alhazred (~Alhazred@86.106.74.40)
[22:15:27] <meator> fizzie: Thanks! I'll read it.
[22:18:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[22:21:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[22:22:50] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[22:23:24] *** Joins: smoke (~smoke@user/smoke)
[22:23:47] *** Quits: arinov_ (~arinov@5.24.108.1) (Ping timeout: 252 seconds)
[22:25:00] *** Quits: diamondbond_ (~diamondbo@175.157.92.206) (Ping timeout: 272 seconds)
[22:27:30] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[22:27:51] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 256 seconds)
[22:29:34] *** Joins: tiotags (~tiotags@user/tiotags)
[22:30:01] *** Joins: arinov_ (~arinov@5.24.108.1)
[22:33:46] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[22:38:24] *** Joins: kish` (~aqua@user/aqua)
[22:39:25] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 256 seconds)
[22:41:19] *** Joins: Rynn (~rynn@216.30.158.198)
[22:42:29] *** Quits: mahmutov (~mahmutov@37.155.87.240) (Ping timeout: 252 seconds)
[22:44:55] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[22:45:10] *** Joins: Jong (~Jong@184-99-74-148.boid.qwest.net)
[22:45:44] *** Guest402 is now known as sudden
[22:47:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:47:24] *** Quits: wyfnt (~wyfnt1232@113.21.73.126) (Ping timeout: 240 seconds)
[22:49:48] *** Joins: mike[m]1 (~miker2049@2001:470:69fc:105::1:c9d5)
[22:50:21] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:50:26] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[22:50:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:52:18] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[22:54:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:55:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:55:48] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 240 seconds)
[22:55:50] *** Quits: dsrt^ (~dsrt@50-202-219-146-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[22:56:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:59:09] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[22:59:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:01:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:01:34] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:9473:c92c:b844:1b59)
[23:01:34] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:9473:c92c:b844:1b59) (Changing host)
[23:01:34] *** Joins: skapate (~Skapata@user/skapata)
[23:02:30] *** Joins: BGL (ninety@75-149-171-58-Washington.hfc.comcastbusiness.net)
[23:03:17] *** skapata is now known as Guest4571
[23:03:17] *** Quits: Guest4571 (~Skapata@user/skapata) (Killed (osmium.libera.chat (Nickname regained by services)))
[23:03:17] *** skapate is now known as skapata
[23:04:42] *** mike[m]1 is now known as beepbooptheory
[23:07:02] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.16)
[23:07:09] *** Joins: Maxxed (~Maxxed@nrgt.net)
[23:07:50] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[23:09:50] *** Joins: smoke (~smoke@user/smoke)
[23:11:45] *** Joins: gry (~quassel@botters/gry)
[23:12:43] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[23:14:46] *** Joins: diamondbond_ (~diamondbo@175.157.92.206)
[23:14:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:15:24] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 240 seconds)
[23:16:51] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:17:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:18:09] *** Lord_of_Life_ is now known as Lord_of_Life
[23:19:38] *** Quits: dp1021 (~Srain@host86-136-133-7.range86-136.btcentralplus.com) (Remote host closed the connection)
[23:20:41] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:49aa:ca07:3aa6:4b6e) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:21:00] *** Quits: diamondbond_ (~diamondbo@175.157.92.206) (Ping timeout: 240 seconds)
[23:21:04] *** Quits: Alhazred (~Alhazred@86.106.74.40) (Ping timeout: 256 seconds)
[23:21:06] *** Joins: Betal (~Betal@user/betal)
[23:24:10] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:24:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[23:24:37] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 240 seconds)
[23:24:37] *** Quits: gry (~quassel@botters/gry) (Quit: пока)
[23:25:09] <pragma-> 2021-06-04 02:48:35     <Wulf>  ,cc puts("HÃ«llÃ¸");
[23:25:10] <pragma-> 2021-06-04 02:48:37     <candide>       Wulf: Hëllø
[23:25:15] <pragma-> Wulf: this is fixed now, btw :)
[23:25:34] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[23:25:36] *** Joins: smoke (~smoke@user/smoke)
[23:26:35] <Rounin> ,cc puts æøå阿
[23:26:36] <candide> Rounin: error: expected ';' before 'æøå阿'
[23:26:44] <Rounin> Oh... I forgot this wasn't Ruby
[23:26:52] <Rounin> ,cc puts("æøå阿");
[23:26:54] <candide> Rounin: æøå阿
[23:27:09] <Rounin> Too much JavaScript lately
[23:28:00] *** Joins: enhwohrom^ (~enhwohrom@50-202-219-146-static.hfc.comcastbusiness.net)
[23:29:57] *** Quits: smoke (~smoke@user/smoke) (Ping timeout: 240 seconds)
[23:32:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:37:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:37:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:37:54] *** Joins: wroathe (~wroathe@user/wroathe)
[23:38:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:38:16] <NRK> ,cc int n; char c; for (n = 0; (c = n["( ´-ω･)︻┻┳══━一"]); ++n) putchar(c);
[23:38:18] <candide> NRK: illegal backslash escape sequence in string, at character offset 17 (before "\\\x{0}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 119.
[23:38:33] *** Joins: Viewday116 (~Viewday@user/viewday)
[23:38:46] *** Quits: eroux (~eroux@102-65-85-242.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:38:56] <NRK> pragma-: bro... help
[23:39:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[23:40:07] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[23:40:28] *** Joins: kaph (~kaph@net-109-116-117-37.cust.vodafonedsl.it)
[23:40:31] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:9d17:3f5c:3c5f:d569)
[23:40:31] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:9d17:3f5c:3c5f:d569) (Changing host)
[23:40:31] *** Joins: skapate (~Skapata@user/skapata)
[23:41:54] * pragma- gestures and mutters.
[23:42:16] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 272 seconds)
[23:42:17] *** Viewday116 is now known as Viewday11
[23:42:21] <pragma-> looks like a null byte
[23:42:26] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[23:43:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:43:07] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[23:43:18] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:43:34] <caze> goodfella: See my solution.
[23:44:12] <caze> goodfella: https://ideone.com/UFAqo1
[23:44:25] <caze> goodfella: This solution can print an infinitely long line.
[23:44:51] *** Joins: smoke (~smoke@user/smoke)
[23:44:53] <NRK> ,cc int n; char c; for (n = 0; (c = n["(∩｀-´)⊃━☆ﾟ.*･｡ﾟ"]); ++n) putchar(c);
[23:44:55] <candide> NRK: illegal backslash escape sequence in string, at character offset 17 (before "\\\x{0}'\\n"}") at /usr/local/bin/guest-gdb line 148, <GEN1> line 119.
[23:45:10] *** Joins: crashrep (~crashrep@user/crashrep)
[23:45:45] <NRK> 🔫
[23:48:29] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[23:49:03] <goodfella> caze: saved the link.. im working on my own solution, fizzie helped me understand the problem with my older solution
[23:49:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:49:30] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:49:46] <caze> goodfella: Also are you sure you understand what the problem asks you to do?
[23:49:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:49:49] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:49:49] *** Joins: wroathe (~wroathe@user/wroathe)
[23:50:09] <goodfella> print lines longer than 80 characters ?
[23:50:39] <caze> Yes, although for my solution, I made it 3 characters, for easy of testing and verification.
[23:51:20] <goodfella> i made my now 5 so i can compare
[23:51:36] <goodfella> im just finishing ..
[23:52:01] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[23:52:03] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2509-567d-d519-decb.res6.spectrum.com)
[23:52:03] *** Joins: crashrep (~crashrep@user/crashrep)
[23:54:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:55:10] *** Quits: kamarat (~kamarat@81.161.60.198) (Quit: Leaving)
[23:56:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:57:02] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[23:57:10] <NRK> didn't realize that `?:` operator has lower precedence than `+-`
[23:57:46] <NRK> just wasted 5 mins figuring out why hardcoding `x + y` worked but not `cond ? x : z + y`
