[00:12:59] *** Joins: roarde (~roarde@user/roarde)
[00:22:52] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 265 seconds)
[00:29:59] *** Quits: donofrio (~donofrio@165.225.60.54) (Remote host closed the connection)
[00:46:46] *** Joins: Torr (~Torr@user/torr)
[01:36:58] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[01:47:38] *** Joins: seninha (~seninha@user/seninha)
[01:48:22] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[01:57:42] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[02:11:53] *** Joins: seninha (~seninha@user/seninha)
[02:33:01] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[02:35:00] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[02:39:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:53:54] *** Joins: seninha (~seninha@user/seninha)
[03:15:52] *** Joins: Torr (~Torr@user/torr)
[04:09:04] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 265 seconds)
[04:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:37:40] *** Joins: seninha (~seninha@user/seninha)
[04:43:20] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[04:47:07] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[04:47:31] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[04:47:32] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[04:47:32] *** Joins: wuseman (~wuseman@user/wuseman)
[05:55:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:26:39] *** Joins: tangyQED (~tangy@user/tangy)
[06:29:43] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 265 seconds)
[06:52:08] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[07:06:49] *** Quits: yetoo (~yetoo@user/yetoo) (Ping timeout: 268 seconds)
[07:08:36] *** Joins: yetoo (~yetoo@user/yetoo)
[07:27:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[07:34:26] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:56:23] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[09:01:58] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 265 seconds)
[09:26:44] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[10:02:41] *** Joins: harleypig0 (thelounge@harleypig.com)
[10:04:54] *** Quits: yeti (~username@user/yeti) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 245 seconds)
[10:04:56] *** harleypig0 is now known as harleypig
[10:05:05] *** Joins: yeti (~username@user/yeti)
[10:22:47] *** Joins: lavaball (felix@31.204.155.215)
[10:35:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:35:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:53:26] *** Joins: earnestly (~earnest@user/earnestly)
[11:34:13] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 265 seconds)
[13:01:35] <Meli> I am looking for a way to delete sections, or values in a specific section of a ini file
[13:01:53] <Meli> in a ini like this: http://ix.io/3BNs
[13:03:25] <Meli> for example delete `hello` section, or delete `hello` parameter in `foo/bar` section
[13:05:36] <geirha> awk '/^\[.*\]$/{ f = 0 } $0 == "[hello]" { f = 1 } !f'
[13:05:39] <Meli> s/values/parameters/
[13:05:45] <geirha> that should remove the [hello] section
[13:06:31] <Meli> omg that's awesome! Thank you!
[13:07:00] <Meli> it works!
[13:08:51] <geirha> awk -F' *= *' '/^\[.*\]$/{ section = substr($0, 2, length - 2) } section == "foo/bar" && $1 == "hello" { next } {print}'
[13:09:05] <geirha> that should remove the hello = line if it's under section [foo/bar]
[13:10:36] <geirha> awk -F' *= *' '/^\[.*\]$/{ section = substr($0, 2, length - 2) } section == "hello" || section == "foo/bar" && $1 == "hello" { next } {print}'
[13:10:41] <geirha> should do both of the above
[13:27:40] <Meli> also this works very well!
[13:42:07] <Meli> oh.. a last thing that I've forgot, for the deletion of empty sections?
[14:13:09] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:53:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[15:31:31] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[15:41:59] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[15:41:59] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[15:41:59] *** Joins: wuseman (~wuseman@user/wuseman)
[15:51:47] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[16:02:57] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[16:17:21] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[17:08:15] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[17:14:18] *** Joins: ravan (~ravan@user/ravan)
[17:24:38] *** Joins: seninha (~seninha@user/seninha)
[17:35:11] *** Joins: vlm (~vlm@user/vlm)
[19:00:11] <nmz1> that would require preprocessing
[19:01:33] *** Quits: Torr (~Torr@user/torr) (Read error: Connection reset by peer)
[19:02:43] *** Joins: Torr (~Torr@user/torr)
[19:27:49] <nmz1> Meli: awk -F' *= *' '/^\[.*\]$/{ n=1; section = substr($0, 2, length - 2);next } section == "hello" || section == "foo/bar" && $1== "hello" { next } n {print section;n=0} {print}'
[19:27:57] <nmz1> next is so handy
[19:28:08] <nmz1> don't even need to save the section
[19:32:53] <nmz1> you can gawk -i inplace to save your changes Meli
[19:36:19] <emanuele6> nmz1: `n {print "["section"]";n=0}' or `n {printf "[%s]\n", section;n=0}'
[19:36:39] <nmz1> righto
[19:37:24] <nmz1> former is better
[19:37:41] <nmz1> in case you wanna set ORS to \r\n
[19:38:16] <emanuele6> oh, right, never thought of that
[19:39:29] <nmz1> awk is on mac by default no?
[19:40:50] <emanuele6> https://developer.apple.com/library/archive/documentation/OpenSource/Conceptual/ShellScripting/Howawk-ward/Howawk-ward.html
[19:40:58] <emanuele6> i found this page, so probably
[19:41:03] <nmz1> I think they use \r
[19:41:37] <nmz1> nice, guess it is
[19:41:38] <emanuele6> it says they use gawk
[19:41:58] <emanuele6> oh, nevermind
[19:42:54] <emanuele6> they reference the gnu awk manual for some reason, but they actually use a modified version of oawk
[19:44:48] <emanuele6> https://developer.apple.com/library/archive/documentation/OpenSource/Conceptual/ShellScripting/PortingScriptstoMacOSX/PortingScriptstoMacOSX.html#//apple_ref/doc/uid/TP40004268-TP40003517-SW37
[19:44:52] <nmz1> I guess its because the gawk book is by far the best thing around.
[19:44:55] <emanuele6> > Command-line tools in OS X (and other UNIX or Linux variants) use UNIX-style line endings. This means that each line in a text file ends with a newline character (character 10/0xA, often abbreviated LF).
[19:45:34] <emanuele6> why do they even have this weird inconsistency?
[19:46:37] <emanuele6> surely they only use "Mac-style" line endings for legacy stuff
[20:16:53] <Patsie> and what, pray tell, would be a "Mac-Style line ending" ?
[20:20:08] <Patsie> because OSX is BSD based, so I would assume that it's all Unix-style
[20:38:39] <nmz1> https://superuser.com/questions/439440/did-mac-os-lion-switch-to-using-line-feeds-lf-n-for-line-breaks-instead-of#439443 it seems they switched to \n (LF)
[20:38:41] <nmz1> woops
[20:39:11] <nmz1> I thought they used \r because some mac person asked here one day about it
[21:09:59] <ljharb> macs haven't used \r since before OS X, so like, before 2002?
[21:14:54] <nmz1> I think we were trying to incorporate all the line endings into RS
[21:41:27] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:05:07] *** Joins: tangy (~tangy@user/tangy)
