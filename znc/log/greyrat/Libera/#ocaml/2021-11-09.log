[00:32:32] *** Joins: rgrinberg (~textual@190.113.102.153)
[01:04:31] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[01:08:54] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:316:44af:1ca2:c2c5)
[01:24:16] <d_bot> <let Butanium = raise Not_found;;> Does anyone know a french source which would explain the math theory beyond the ucb1 algorithm?
[01:24:37] <d_bot> <let Butanium = raise Not_found;;> Found this one in English
[01:24:46] <d_bot> <let Butanium = raise Not_found;;> https://lilianweng.github.io/lil-log/2018/01/23/the-multi-armed-bandit-problem-and-its-solutions.html#hoeffdings-inequality
[01:24:58] <d_bot> <let Butanium = raise Not_found;;> But sometimes it's hard for me to understand
[01:46:15] <d_bot> <EduardoRFS> does anyone know if a grammar where a lambda is `pat -> expr` where pat may be `(((x: int)))` is possible to be described in menhir? I can probably implement it by doing lookahead in the lexer, but trying to avoid lexer hacks
[01:58:29] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[02:02:49] *** Quits: olle (~olle@i5e866d8f.versanet.de) (Ping timeout: 244 seconds)
[02:11:41] *** Quits: quernd (~quernd@boethin.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:11:55] *** Joins: quernd (~quernd@boethin.uberspace.de)
[02:30:07] *** Quits: jlrnick (~josephler@2a01cb040a159400e928261421e00c3c.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[02:31:29] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:316:44af:1ca2:c2c5) (Quit: Konversation terminated!)
[02:33:39] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:26:00] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 244 seconds)
[03:59:07] <dh`> you'll have to be a lot more specific about the grammar than that
[04:00:25] <dh`> as long as -> doesn't itself appear in patterns (outside of parens or other containment) it shouldn't matter what's in the patterns
[04:02:02] <dh`> or are you trying to make "pat -> expr" with no further decoration be an expression?
[04:02:16] <dh`> the latter is going to require being very careful with your pattern syntax so it doesn't overlap the expression syntax.
[04:03:05] *** Joins: spip (~bobo@37.166.19.11)
[04:03:11] <dh`> and then even if you can make it go it'll likely be an unmaintainable mess
[04:03:12] *** Quits: bobo (~bobo@37.166.190.0) (Ping timeout: 244 seconds)
[04:07:35] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:19:33] <hornhack> I have a type x: T of int, so to extract the int, I have to "match v with | T i ->" is it okay to write a oneliner like that and pretend they are like another let.. in
[04:21:17] <dh`> what do you mean by okay in this context?
[04:21:40] <dh`> also in ocaml you can write "let T i = v in ..."
[04:21:58] <hornhack> dh`, ehehe, correct, I forgot that, thankss
[04:22:58] <hornhack> arghh, but I need both
[04:24:08] <hornhack> dh`, like, does it work? and does it violate the normal match format in coding convention and is frowned upon?
[04:25:00] <dh`> it works fine, whitespace isn't significant (this isn't haskell)
[04:25:07] <dh`> as for ugly, that's up to you
[04:25:50] <hornhack> ahh, very fair
[04:46:38] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[04:52:10] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[05:08:07] <hornhack> is Poly.compare greater_than or less_than
[05:08:28] <hornhack> so Poly.compare x y is 1 if x>y ?
[05:08:41] <hornhack> -1 if x<y and 0 if equals?
[05:09:17] <companion_cube> not necessarily 1 or -1, just >0 and <0
[05:10:38] <hornhack> ah, I see, thx
[06:08:51] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[06:12:05] *** Joins: zebrag (~chris@user/zebrag)
[07:21:02] *** Quits: chrisz (cezhmaz3nt@55d4bae3.access.ecotel.net) (Ping timeout: 240 seconds)
[07:22:47] *** Joins: chrisz (iugm8s0drt@55d49197.access.ecotel.net)
[07:34:51] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:36:15] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[07:41:17] *** Joins: rgrinberg (~textual@190.113.102.153)
[08:01:18] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 260 seconds)
[08:14:24] *** Quits: zebrag (~chris@user/zebrag) (*.net *.split)
[08:14:24] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (*.net *.split)
[08:14:24] *** Quits: kurfen (~kurfen@45.152.181.20) (*.net *.split)
[08:14:24] *** Quits: Drup (~Drup@212.83.144.58) (*.net *.split)
[08:14:24] *** Quits: klu (~klu@user/klu) (*.net *.split)
[08:14:24] *** Quits: Cypi (~Cypi@cypi.fr) (*.net *.split)
[08:14:24] *** Quits: nyuhu (~nyuhu@eri.moe) (*.net *.split)
[08:14:24] *** Quits: jyc (sid40911@ilkley.irccloud.com) (*.net *.split)
[08:15:12] *** Joins: mbuf (~Shakthi@136.185.69.244)
[08:15:12] *** Joins: zebrag (~chris@user/zebrag)
[08:15:12] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[08:15:12] *** Joins: kurfen (~kurfen@45.152.181.20)
[08:15:12] *** Joins: Drup (~Drup@212.83.144.58)
[08:15:12] *** Joins: klu (~klu@user/klu)
[08:15:12] *** Joins: Cypi (~Cypi@cypi.fr)
[08:15:12] *** Joins: nyuhu (~nyuhu@eri.moe)
[08:15:12] *** Joins: jyc (sid40911@ilkley.irccloud.com)
[08:23:07] *** Joins: xd1le (~xd1le@user/xd1le)
[08:34:53] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[09:42:24] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:47:27] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 268 seconds)
[09:55:58] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:33] *** Joins: rgrinberg (~textual@190.113.102.153)
[10:28:42] *** Joins: recherche (~recherche@bb119-74-93-26.singnet.com.sg)
[10:47:05] *** Quits: recherche (~recherche@bb119-74-93-26.singnet.com.sg) (Quit: Client closed)
[10:49:06] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[11:28:46] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:40:20] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[11:47:23] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[11:52:19] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:31:06] *** Joins: olle (~olle@i5E866D87.versanet.de)
[12:46:06] <d_bot> <smorimoto> https://discuss.ocaml.org/t/ann-first-release-of-ts2ocaml-generates-ocaml-bindings-from-d-ts-files/8772
[13:38:04] *** Joins: bartholin (~bartholin@158.110.155.0)
[13:40:24] *** Joins: jlrnick (~josephler@gw.lipn.univ-paris13.fr)
[13:41:56] <Franciman> Hi, can I disable the garbage collector in ocaml and manually handle memory?
[13:42:14] <olle> yes to first, no to second
[13:42:19] <olle> (I think)
[13:42:33] <Franciman> first is a great first step :D
[13:44:35] <olle> You'd have to configure gc to never collect
[13:44:52] <olle> Obviously you'll go OOM quick
[13:44:58] <Franciman> thanks olle
[13:45:08] <Franciman> yes, I was planning to write my garbage collector, to learn
[13:45:15] <Franciman> so it's stupid nonsense
[13:45:19] <olle> Eh? In OCaml?
[13:45:35] <Franciman> yes
[13:46:41] <olle> Why? :)
[13:46:58] <Franciman> I wanted to write an interpreter for my language
[13:47:25] *** Joins: wonko (~wjc@user/wonko)
[13:47:36] *** Quits: wonko (~wjc@user/wonko) (Remote host closed the connection)
[13:50:53] <olle> Oh, so you're writing a VM in OCaml?
[13:51:08] <Franciman> yup!
[13:51:10] <olle> Ah
[13:51:19] <olle> OK, well, you have to wait until the smart people arrives :D
[13:51:19] <Franciman> but for now I rely on the garbage collector of OCaml
[13:51:22] <olle> Just me here now, it seems
[13:51:39] <Franciman> but I wanted to write one by myself, to get the full awful experience :D
[13:51:42] <olle> The OCaml GC is available in C if you want to read it
[13:51:48] <Franciman> awesome!
[13:51:55] <olle> Part of the OCaml runtime lib
[13:53:52] <dmbaturin> The reference implementation of WASM is in OCaml. I haven't looked into its source though.
[13:55:44] *** Joins: wonko (~wjc@user/wonko)
[14:59:01] *** Joins: tomku (~tomku@user/tomku)
[15:02:19] *** Joins: kakadu (~kakadu@195.19.236.234)
[15:22:15] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Read error: Connection reset by peer)
[15:29:01] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[15:34:35] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[15:38:53] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[15:54:30] *** Quits: rak (~rak@debian/rak) (Quit: Segmentation fault (core recycled))
[15:54:46] *** Joins: rak (~rak@debian/rak)
[15:55:28] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[15:56:04] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[16:02:30] *** Joins: bobo (~bobo@37.164.102.95)
[16:02:32] *** Quits: spip (~bobo@37.166.19.11) (Ping timeout: 240 seconds)
[16:17:23] *** Quits: jlrnick (~josephler@gw.lipn.univ-paris13.fr) (Ping timeout: 256 seconds)
[16:24:12] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:26:36] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[16:54:24] *** Joins: favonia (~favonia@user/favonia)
[17:00:05] *** Quits: favonia (~favonia@user/favonia) (Ping timeout: 264 seconds)
[17:01:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:04:48] *** Joins: wwilly (~wwilly@fw-tnat-cam1.arm.com)
[17:05:48] *** Joins: mro (~mro@2002:5cc3:e239:0:7c3b:2c4f:b968:9471)
[17:21:17] *** Joins: mro_ (~mro@port-92-195-226-57.dynamic.as20676.net)
[17:24:41] *** Quits: mro (~mro@2002:5cc3:e239:0:7c3b:2c4f:b968:9471) (Ping timeout: 264 seconds)
[17:27:32] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:35:21] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[17:37:10] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[17:53:33] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[18:14:41] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[18:17:38] *** Joins: favonia (~favonia@user/favonia)
[18:25:22] *** Quits: xd1le (~xd1le@user/xd1le) (Quit: xd1le)
[18:28:46] *** Quits: favonia (~favonia@user/favonia) (Quit: Leaving)
[18:35:36] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[18:38:03] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:52:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 264 seconds)
[18:54:19] *** Quits: mro_ (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[18:56:46] *** Joins: jlrnick (~josephler@pop.92-184-123-85.mobile.abo.orange.fr)
[18:59:13] *** Quits: jlrnick (~josephler@pop.92-184-123-85.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[19:04:20] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:16:12] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[19:20:32] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Ping timeout: 240 seconds)
[19:40:39] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[19:42:37] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:51] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:52:58] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[19:57:56] *** Quits: mbuf (~Shakthi@136.185.69.244) (Quit: Leaving)
[20:02:29] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[20:03:07] *** Joins: gwizon (~gwizon@ool-45798c94.dyn.optonline.net)
[20:04:53] *** Quits: bartholin (~bartholin@158.110.155.0) (Quit: Leaving)
[20:24:31] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:31:54] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:46:25] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:59:04] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[20:59:05] *** Joins: waleee (~waleee@192.165.44.49)
[20:59:17] *** Joins: Skyfire (~pyon@user/pyon)
[21:06:44] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Ping timeout: 246 seconds)
[21:17:54] <d_bot> <TIDJK94> hello
[21:17:54] <d_bot> <TIDJK94> im looking for help
[21:17:55] <d_bot> <TIDJK94> i want to use ocaml graphics library for a project. I downloaded it but it doesn't work
[21:17:57] <d_bot> <TIDJK94> it shows me, when I type #load "graphics.cma"
[21:17:58] <d_bot> <TIDJK94> # #load "graphics.cma";;
[21:17:59] <d_bot> <TIDJK94> Cannot find file graphics.cma.
[21:18:01] <d_bot> <TIDJK94> please
[21:20:24] <companion_cube> you may have to `#use "topfind";;` and then `#require "graphics"`
[21:20:43] <d_bot> <NULL> Are you in a top-level? If so #require "graphics" is the easiest way to load them. If not, this is not the way to link libraries
[21:43:46] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:52:11] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:53:41] <d_bot> <TIDJK94> i'm using ocaml extension from vscode
[21:55:50] <d_bot> <NULL> How do you build / execute your code currently ?
[21:56:35] <d_bot> <TIDJK94> doing shift + tab key combination
[21:58:51] <d_bot> <NULL> Then on the console toplevel that gets launched, enter `#require "graphics";;` and it should work
[21:58:54] <d_bot> <TIDJK94> shift + enter
[21:58:55] <d_bot> <TIDJK94> https://cdn.discordapp.com/attachments/436568060288172044/907698279402323998/Capture_decran_2021-11-09_a_19.27.57.png
[21:59:13] <d_bot> <TIDJK94> https://cdn.discordapp.com/attachments/436568060288172044/907698358121033728/Capture_decran_2021-11-09_a_19.29.08.png
[21:59:18] <d_bot> <TIDJK94> the error
[21:59:51] <d_bot> <TIDJK94> @NULL i tried
[21:59:52] <d_bot> <TIDJK94> https://cdn.discordapp.com/attachments/436568060288172044/907698519341686854/Capture_decran_2021-11-09_a_19.29.40.png
[22:02:30] <d_bot> <NULL> Enter `#use "topfind"` first, then re-enter `#require "graphics"`
[22:03:24] <d_bot> <TIDJK94> bruhh
[22:03:24] <d_bot> <TIDJK94> https://cdn.discordapp.com/attachments/436568060288172044/907699410115375154/Capture_decran_2021-11-09_a_19.33.15.png
[22:03:28] <d_bot> <NULL> To people that know better than me: what is the thing that writes `#use "topfind";;` in .ocamlinit automatically ?
[22:03:52] <d_bot> <NULL> How did you install ocaml ?
[22:04:06] <d_bot> <TIDJK94> with opam
[22:04:19] <d_bot> <TIDJK94> with command line
[22:04:28] <d_bot> <TIDJK94> in fact
[22:04:45] *** Quits: olle (~olle@i5E866D87.versanet.de) (Ping timeout: 256 seconds)
[22:05:18] <d_bot> <NULL> That was probably `user-setup`, but it seems outdated now
[22:07:43] <d_bot> <NULL> Is there no file `topfind` in `~/.opam/[switch]/lib/ocaml` ?
[22:11:49] *** Quits: wwilly (~wwilly@fw-tnat-cam1.arm.com) (Ping timeout: 250 seconds)
[22:13:10] <d_bot> <TIDJK94> https://cdn.discordapp.com/attachments/436568060288172044/907701869579731064/Capture_decran_2021-11-09_a_19.42.17.png
[22:13:44] <d_bot> <NULL> Which one's your active switch ?
[22:21:11] <d_bot> <NULL> I'm really not sure this is the best way to install topfind (I checked and it does not come by default), but you can install user-setup
[22:23:33] *** Joins: mro (~mro@port-92-195-226-57.dynamic.as20676.net)
[22:50:56] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[22:55:35] *** Quits: waleee (~waleee@192.165.44.49) (Ping timeout: 246 seconds)
[22:57:38] *** Quits: mro (~mro@port-92-195-226-57.dynamic.as20676.net) (Remote host closed the connection)
[23:08:39] *** Joins: rgrinberg (~textual@190.113.102.153)
[23:09:02] <hornhack> why do functions sometimes have ;; at the end?
[23:09:17] *** Joins: mro (~mro@2002:5cc3:e239:0:45d5:d1e9:364b:84)
[23:09:18] <hornhack> is it like a good coding practice?
[23:15:40] <hannes> hornhack: it is needed in the toplevel (REPL).
[23:16:29] <hornhack> I'm seeing it in .ml files
[23:16:57] <hornhack> so my senior guy just added it to all his functions
[23:17:17] <hornhack> I'm not sure why
[23:18:09] <hornhack> maybe its good practice or used the ocamlformat for clearer end of function
[23:18:30] <hornhack> actually smart, I can see in the code where the function ends
[23:21:18] *** Joins: olle (~olle@i5E866D87.versanet.de)
[23:23:58] *** Joins: np (~nerdypepp@user/nerdypepper)
[23:24:08] *** Joins: spip (~bobo@37.164.102.95)
[23:24:24] <octachron> Using `;;` outside of the toplevel is generally considered bad practice.
[23:25:15] *** Joins: ski_ (~ski@remote12.chalmers.se)
[23:25:24] *** Joins: tomku|two (~tomku@user/tomku)
[23:25:32] *** Joins: vb_ (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr)
[23:25:40] *** Joins: johnel_ (~johnel@185.157.234.34)
[23:25:55] *** Joins: dmbaturin_ (~dmbaturin@vyos/developer/dmbaturin)
[23:28:29] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:30:46] *** Quits: rgrinberg (~textual@190.113.102.153) (*.net *.split)
[23:30:46] *** Quits: bobo (~bobo@37.164.102.95) (*.net *.split)
[23:30:46] *** Quits: tomku (~tomku@user/tomku) (*.net *.split)
[23:30:46] *** Quits: nerdypepper (~nerdypepp@user/nerdypepper) (*.net *.split)
[23:30:46] *** Quits: Putonlalla (~sapekiis@it-cyan.it.jyu.fi) (*.net *.split)
[23:30:46] *** Quits: dmbaturin (~dmbaturin@vyos/developer/dmbaturin) (*.net *.split)
[23:30:46] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[23:30:47] *** Quits: vb (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr) (*.net *.split)
[23:30:47] *** Quits: ski (~ski@remote12.chalmers.se) (*.net *.split)
[23:30:47] *** Quits: johnel (~johnel@185.157.234.34) (*.net *.split)
[23:31:02] *** Quits: gwizon (~gwizon@ool-45798c94.dyn.optonline.net) (Ping timeout: 240 seconds)
[23:31:28] *** Joins: zebrag (~chris@user/zebrag)
[23:37:06] *** Joins: greenbagels (~gb@user/greenbagels)
[23:39:16] *** Joins: Putonlalla (~sapekiis@it-cyan.it.jyu.fi)
[23:50:25] <d_bot> <leviroth> I wouldn't go that far.
[23:50:59] <d_bot> <leviroth> One benefit of ;; is that it restricts the scope of syntax errors.
[23:51:44] <d_bot> <leviroth> And some people find that the visual separation between functions is helpful, even if it isn't strictly necessary.
[23:52:08] <octachron> ? Well, you can use it for debugging syntactic purpose, but syntax errors are not really a concern once the code is written.
[23:52:34] <Corbin> I have a third opinion: ;; is a hint to ocamlformat that says "I want these separated but I didn't do a great job with my parens in the prior definition".
[23:52:57] <Corbin> You can type ;; just fine, and save it, but ocamlformat will remove it.
[23:53:40] <octachron> Let's settle on "some OCaml idioms consider that uses of `;;` are bad practice".
