[00:00:02] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[00:00:11] <jinsun> ya it is an open mypy issue, https://github.com/python/mypy/issues/9404
[00:01:38] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:788e:bf46:ba6a:9e8a)
[00:01:56] <gitesh> when function is/means data, why is it taught like a programming construct?
[00:02:35] <hodapp> hrm. Altair looks awesome but it doesn't look like it wants to do much with images, at least unless I've a quick way to host them at URLs
[00:02:42] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[00:02:46] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[00:02:58] <grym> gitesh: what's the difference? :D
[00:03:35] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[00:04:12] <grym> (a pretty traditional view is that a function is a sequence of operations to perform _on_ data; this does not preclude it from also being an object you can pass into other functions!)
[00:04:28] <grym> just like mathematical functions you've played with since middle school
[00:05:06] <grym> gitesh: you may be implicitly thinking about data as "something i pass to a function"; i'm not sure that's the most useful mental model
[00:05:09] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:05:16] *** Joins: iiz (~iiz@c-67-172-73-103.hsd1.fl.comcast.net)
[00:05:33] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 252 seconds)
[00:05:41] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[00:05:47] *** Quits: Cyp (~cyp@192038129116.mbb.telenor.dk) (Excess Flood)
[00:06:09] *** Joins: P1ro (~quassel@user/p1ro)
[00:06:18] *** Joins: Cyp (~cyp@192038129116.mbb.telenor.dk)
[00:06:23] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[00:06:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:07:06] *** Parts: nickodd (~nickodd@user/nickodd) ()
[00:07:08] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 258 seconds)
[00:07:55] <bjs> gitesh: well it's a programming construct, which is also a Python object,  which is also data but also code
[00:08:27] <grym> it's a blurrier line than sometimes one really likes to think about, really
[00:08:40] <bjs> gitesh: look at something like a von Neumann architecture, where you can choose to "read" some memory or "run" some memory:  it doesn't make a distinction between "code" and "data" -at all-.  all code is data and all data is code.
[00:08:45] <bjs> it's just how you look at it.
[00:09:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[00:09:56] *** lukedashjr is now known as luke-jr
[00:12:51] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[00:12:56] *** Joins: GalaxyNova (~GalaxyNov@S01069050ca3475d3.vc.shawcable.net)
[00:13:14] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:14:10] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[00:14:14] *** lukedashjr is now known as luke-jr
[00:15:59] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[00:20:10] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[00:22:40] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:22:50] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:24:34] *** Quits: {HD} (~{HD}@37.19.197.241) (Ping timeout: 240 seconds)
[00:27:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 258 seconds)
[00:28:10] <LordKalma> Hello, has anybody happen to have used cffi.FFI() in conjunction with C libraries from the Conan package manager? I was wondering about that
[00:28:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:29:41] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[00:30:32] *** Joins: r3m (~launch@user/r3m)
[00:31:57] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Ping timeout: 252 seconds)
[00:33:19] *** Joins: Auron (Auron956@user/auron)
[00:33:48] *** Quits: Elzington_ (~Elzington@68.235.43.38) (Quit: Leaving)
[00:33:58] *** Quits: infi (~infi@user/infi) (Read error: Connection reset by peer)
[00:34:02] *** Joins: agrest (~user@almyra.daemonized.org)
[00:34:09] <SnoopJ> LordKalma, I don't think there's any fundamental reason you couldn't do that, if that's what you're asking about.
[00:34:16] *** Joins: infi (~infi@user/infi)
[00:34:24] *** Joins: Jefren2 (~Jefren@70.35.66.185)
[00:34:31] <LordKalma> well, true, I was wondering how *hard* would it be :)
[00:34:54] <LordKalma> https://github.com/ruilvo/liquidcffi
[00:35:00] <LordKalma> this is the dirty thing I'm using right now
[00:35:11] <LordKalma> with dlls under VCS :D
[00:35:20] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[00:35:25] *** Joins: securethemews (~securethe@5.80.55.13)
[00:36:55] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[00:37:02] *** Joins: nickodd (~nickodd@user/nickodd)
[00:39:20] *** Quits: Jefren2 (~Jefren@70.35.66.185) (Ping timeout: 256 seconds)
[00:39:27] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[00:42:01] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:20] *** Quits: TFKyle (~kyle@64.201.205.70) (Quit: :q!)
[00:42:28] *** Joins: fdse (~fdse@178.49.152.42)
[00:43:08] *** Joins: {HD} (~{HD}@37.19.197.231)
[00:43:17] <fdse> pyhton is quite stupid - I was having bug because I wrote i+2 instead of i+=2
[00:43:46] <bjs> fdse: Python being stupid is just one interpretation of that situation ;)
[00:43:59] <bjs> Probably your editor/IDE should've noticed and told you
[00:44:38] *** Joins: BlessJah (~BlessJah@user/blessjah)
[00:44:56] <fdse> warnings belong in the complier territry, are they not?
[00:45:51] <bjs> fdse: surely compiling is the compilers job
[00:46:15] <bjs> it may also give warnings, but giving warnings is also the job of the linter (that your IDE/editor uses)
[00:46:25] *** Joins: georgios (~georgios@user/georgios)
[00:46:26] <caveman> how good of an idea is it to type ``if ..: ...'' in 1 line?
[00:46:56] <bjs> caveman: well nothing "bad" happens if you do that.  Might look weird to people who are used to reading lots of Python code (it's very easy to miss the body)
[00:47:09] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[00:47:13] <caveman> how moral is this code?  https://gist.github.com/3f8109c82bb0db96f6afafae0f6c6ee7
[00:47:33] <bjs> caveman: I certainly wouldn't _mix_ single-line and multi-line if/else
[00:47:58] *** Joins: Adois (~Adoi@user/adoi)
[00:52:30] <sharperguy__> I'm a bit confused why this command returns an empty string: str(gpg.encrypt("hello", "user@domain.com", armor = True))
[00:52:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:53:27] <SnoopJ> fdse, this is part of why PEP 8 recommends putting space between identifiers and operators in most cases
[00:53:39] <bjs> sharperguy__: well the obvious question is what did the stuff inside the str return (the `gpg.encrypt("hello", "user@domain.com", armor = True)` part)
[00:54:57] <sharperguy__> a gnupg.Crypt object
[00:55:06] <InPhase> caveman: "for frmt, key in FRMT2KEY.keys()"  Questionable...
[00:55:54] <caveman> InPhase: yeah.  meant items().
[00:57:34] <sharperguy__> turns out there are two pip packages, gnupg and python-gnupg, i should have been using the latter but i was using the former
[00:58:00] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[00:58:01] *** Quits: akk (~akk@75.161.157.26) (Quit: +++)
[00:58:21] *** Joins: odrling (~odrling@korone.aidoru.agency)
[00:59:17] *** Quits: odrling (~odrling@korone.aidoru.agency) (Client Quit)
[00:59:33] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[00:59:36] *** Joins: odrling (~odrling@korone.aidoru.agency)
[01:00:45] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:01:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:01:10] <Tashtari> caveman: I think I'm in the minority on this one, but I like single-line blocks when the body is short
[01:01:25] <Tashtari> PEP-8 recommends against it, however.
[01:02:21] <Tashtari> However, as part of an if-elif-else set of blocks, I would not make any of them single-line.
[01:02:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[01:02:29] * Tashtari howevers twice.
[01:02:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[01:02:54] *** Gustavo6046_ is now known as Gustavo6046
[01:03:39] *** Quits: KevinX (~KevinX@185.245.86.84) (Read error: Connection reset by peer)
[01:03:51] *** Joins: KevinX (~KevinX@185.245.86.84)
[01:04:15] *** Joins: Pickchea (~private@user/pickchea)
[01:04:29] *** Quits: BlessJah (~BlessJah@user/blessjah) (Quit: leaving)
[01:04:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[01:06:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:07:19] *** Joins: janemba (~janemba@94.204.254.193)
[01:07:33] <janemba> hi
[01:07:33] *** Quits: akmod (~akmod@c-24-10-154-68.hsd1.ut.comcast.net) (Remote host closed the connection)
[01:08:25] *** Quits: infi (~infi@user/infi) (Remote host closed the connection)
[01:08:39] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:08:44] *** Joins: infi (~infi@user/infi)
[01:08:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[01:09:23] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:09:54] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[01:10:16] *** Joins: bam32_ (~bambams@user/bambams)
[01:11:02] *** lukedashjr is now known as luke-jr
[01:13:04] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[01:13:22] *** Quits: bam32 (~bambams@user/bambams) (Ping timeout: 240 seconds)
[01:15:34] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:15:46] <AhmedAmerican> janemba: `print("Hello")` \o
[01:16:22] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:16:24] *** Quits: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282) (Quit: Reconnecting)
[01:16:41] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[01:16:42] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[01:18:26] <caveman> Tashtari: are you against this?  https://git.io/JRsFu
[01:18:52] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[01:19:48] <grym> caveman: that's more naturally a dispatch dict
[01:19:57] <Tashtari> Yeah.  A single if on its own, fine, but any compound block like that (if-elif-else, try-except, etc.), I would put the block contents on their own line.
[01:20:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[01:20:14] <grym> black would reformat it anyway, so idc :)
[01:20:20] <cul8r> I dont like that
[01:20:39] <cul8r> it makes my eyes sad :(
[01:20:47] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Excess Flood)
[01:20:55] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:51c5:1e5d:5111:f0dd) (Quit: Textual IRC Client: www.textualapp.com)
[01:21:14] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:22:12] *** Joins: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282)
[01:22:31] <jinsun> the "correct" answer is, write however you like, but let black fix it before it reaches git (and black will turn that into 2 lines each)
[01:23:38] <Tashtari> Wouldn't black do the same to a single-line `if condition: break` or something along those lines?
[01:23:40] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[01:23:59] <grym> Tashtari: yes
[01:24:24] <grym> (as is right and proper and soon enough you'll cease to really care)
[01:24:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:24:54] <Tashtari> I doubt it.  :)  I don't claim to know it all, but I'm not exactly -new- to Python...
[01:25:43] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[01:26:33] <jinsun> once more than one people start working on the code, you will be glad you let black handle it
[01:26:35] <grym> i find my predominant thought when i encounter blackified code in our codebase to be "oh, i've been in this file before! i should check git blame to remember what i did last time"
[01:26:40] *** Joins: newpy (~newpy@2601:280:4381:1390:61f7:6771:7362:8153)
[01:26:40] *** Joins: Jefren2 (~Jefren@206.253.157.229)
[01:26:48] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 258 seconds)
[01:26:52] *** Quits: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282) (Ping timeout: 258 seconds)
[01:27:09] *** Quits: infi (~infi@user/infi) (Quit: Leaving)
[01:28:38] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[01:29:12] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:31:28] *** Quits: Jefren2 (~Jefren@206.253.157.229) (Ping timeout: 258 seconds)
[01:31:29] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[01:31:33] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:481e:5930:702e:cb32) (Read error: Connection reset by peer)
[01:31:39] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[01:31:53] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:31:54] *** lukedashjr is now known as luke-jr
[01:32:11] *** Joins: Jefren2 (~Jefren@208.104.190.57)
[01:32:12] <Tashtari> Don't get me wrong, I'll follow outside coding standards, but when I'm in charge, single-line blocks are okay in certain circumstances.
[01:32:15] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:45c5:5a55:5969:ce1e)
[01:32:34] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:33:03] *** Joins: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282)
[01:33:04] <grym> yeah; it doesn't bother me, it's just also very unlikely to ever be comitted into my code
[01:33:06] *** Quits: dld (~davidlowr@73.61.9.67) (Ping timeout: 240 seconds)
[01:33:19] <grym> (i wired black into my editor/IDE)
[01:33:26] *** Joins: kill (~killown@user/killown)
[01:33:39] <grym> so unless i specifically turn it off, black runs before every save
[01:33:55] <kill> how can I decode this str '%C3%A3' which is Ã£?
[01:34:58] <SnoopJ> kill, `urllib.parse.unquote("%C3%A3")`
[01:35:12] *** Joins: dld (~davidlowr@73.61.8.101)
[01:35:23] <kill> SnoopJ, python3?
[01:35:33] <kill> thanks a lot
[01:35:37] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[01:36:02] <SnoopJ> kill, it's urllib.unquote() in ancient Python
[01:36:02] <grym> kill: py3 should be what you assume code to be given in, now
[01:36:27] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 276 seconds)
[01:36:32] <kill> thank you that unquot e worked
[01:36:42] *** Quits: Jefren2 (~Jefren@208.104.190.57) (Ping timeout: 240 seconds)
[01:37:38] *** Quits: kostkon (~androirc@2a02:587:a10c:9c2c:c966:80f7:658a:9689) (Remote host closed the connection)
[01:37:49] *** Joins: twobitsprite (~twobitspr@195.181.171.244)
[01:37:57] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:38:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:39:31] *** Joins: Jefren2 (~Jefren@70.35.67.60)
[01:39:42] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[01:40:09] *** Joins: sartan (~sartan@user/sartan)
[01:41:26] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[01:41:34] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[01:41:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:41:54] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[01:42:07] *** Joins: Jefren3 (~Jefren@70.35.66.161)
[01:42:28] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[01:42:46] *** lukedashjr is now known as luke-jr
[01:42:57] *** Joins: kenwoodfox_ (~quassel@user/kenwoodfox)
[01:43:42] *** Quits: pgib (~textual@173.38.117.81) (Quit: 00 PC LOAD LETTER)
[01:44:15] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[01:44:18] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[01:44:30] *** Quits: Jefren2 (~Jefren@70.35.67.60) (Ping timeout: 256 seconds)
[01:45:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[01:49:00] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[01:49:23] *** Joins: BlessJah (~BlessJah@user/blessjah)
[01:49:28] *** Quits: BlessJah (~BlessJah@user/blessjah) (Client Quit)
[01:49:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Quit: Leaving)
[01:50:09] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:51:59] *** Joins: node1 (~node1@user/node1)
[01:53:37] *** Joins: Jefren4 (~Jefren@208.104.190.45)
[01:54:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:55:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[01:55:07] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:55:28] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: bye)
[01:55:37] *** Quits: Jefren3 (~Jefren@70.35.66.161) (Ping timeout: 258 seconds)
[01:56:04] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[01:56:16] *** Joins: mokulus (~mokulus@user/mokulus)
[01:56:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 272 seconds)
[01:56:57] *** Gustavo6046_ is now known as Gustavo6046
[01:58:31] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Client Quit)
[01:58:34] *** Quits: Jefren4 (~Jefren@208.104.190.45) (Ping timeout: 240 seconds)
[01:58:35] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[01:59:15] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[02:01:30] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[02:02:07] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:05:06] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:05:46] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.1)
[02:05:47] <CrtxReavr> unquote. .. that gives me flashbacks to writing QA tests for RESTful APIs accessed via multiple buggy API gateways.
[02:05:50] *** Quits: PocketKiller (PocketKill@user/packetiv) (Quit: *evaporates*)
[02:07:18] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[02:07:22] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[02:07:30] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 258 seconds)
[02:07:51] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:09:48] *** Quits: dld (~davidlowr@73.61.8.101) (Ping timeout: 258 seconds)
[02:10:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[02:11:32] *** Joins: dld (~davidlowr@2601:197:600:1210:90d2:efa1:6a80:6389)
[02:12:52] *** Quits: kill (~killown@user/killown) (Ping timeout: 258 seconds)
[02:13:09] *** Quits: emika (~emika@83.136.182.35) (Ping timeout: 252 seconds)
[02:14:41] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df)
[02:16:02] <CrtxReavr> https://bpa.st/JRSQ
[02:18:33] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:3d57:8dcb:d415:6f52) (Quit: Leaving)
[02:18:50] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:19:40] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:20:33] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:22:04] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[02:24:48] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[02:26:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:27:06] *** Joins: rany (~rany@user/rany)
[02:27:27] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[02:27:47] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[02:28:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[02:28:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:28:58] *** Joins: P1ro_ (~quassel@user/p1ro)
[02:29:12] *** Quits: P1ro_ (~quassel@user/p1ro) (Client Quit)
[02:29:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:30:24] *** Quits: CodenameTim (~CodenameT@212.102.58.178) (Quit: Client closed)
[02:30:41] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[02:31:08] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[02:31:32] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[02:31:32] *** Quits: MaximB (~MaximB@87.68.164.32) (Quit: Client closed)
[02:32:10] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:32:36] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:34:17] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 245 seconds)
[02:35:32] *** Quits: fdse (~fdse@178.49.152.42) (Quit: Client closed)
[02:36:09] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[02:36:35] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[02:36:43] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[02:37:28] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:38:12] *** Quits: mike18_ (~geri@217-149-162-237.nat.highway.telekom.at) (Remote host closed the connection)
[02:42:23] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[02:43:24] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[02:45:03] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:45:50] *** Quits: jay-m126_ (~jay-m@129.0.205.223) (Ping timeout: 258 seconds)
[02:47:35] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:50:17] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:52:18] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Client Quit)
[02:52:20] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[02:53:03] *** Joins: lmmx (~louis@host-92-0-187-35.as13285.net)
[02:53:36] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:53:54] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:54:03] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[02:54:35] <lmmx> I've got a function for duration of logging events, but if the event doesn't have a duration that function returns None, so my type is `float | None`
[02:54:52] <lmmx> mypy is really strict to the point of preventing me doing this
[02:55:06] *** Joins: BernieMont (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab)
[02:55:09] <lmmx> I can't call `min(durations)` on this list and can't assert my way out of it :/
[02:55:54] <lmmx> do I need to rethink my use of optionals in python or am I missing something about keeping mypy happy (other than just muting it)
[02:56:05] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[02:56:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:56:47] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[02:56:53] <jinsun> lmmx: make an example on https://mypy-play.net/
[02:57:02] <lmmx> ooh thanks jinsun
[02:57:07] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:57:34] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:58:40] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[03:00:00] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[03:01:00] *** Quits: luke-jr- (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[03:01:48] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:2942:2e14:6be2:d1df) (Quit: Client closed)
[03:02:21] *** Joins: ice9 (~ice9@user/ice9)
[03:02:42] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Ping timeout: 240 seconds)
[03:02:42] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[03:02:42] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 256 seconds)
[03:03:30] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[03:04:30] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:04:48] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[03:05:00] <lmmx> https://mypy-play.net/?mypy=latest&python=3.10&gist=53aabc38dc2cec080cf2cff5d20d1035
[03:06:24] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[03:07:21] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:08:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:09:05] <jinsun> lmmx: when you redefine durations, the type doesn't change from list[float | None] to list[float]
[03:09:17] *** Quits: magla (~gelignite@55d4c44d.access.ecotel.net) (Quit: Stay safe!)
[03:09:25] <lmmx> jinsun yes I'm aware
[03:09:45] <lmmx> I wasn't doing it for that reason in my code, I was just accessing it on an object like: durations = [e.duration for e in events]
[03:09:49] <jinsun> lmmx: it would be better to make the first thing _durations, and then define durations with the None filter
[03:10:11] <lmmx> jinsun no that doesn't work either, that's what I started with
[03:11:41] <lmmx> https://mypy-play.net/?mypy=latest&python=3.10&gist=b60a94115f02840497e597d5d1ec8bc1
[03:11:55] <lmmx> ^ no change
[03:11:59] <lmmx> I just simplified it for the example
[03:12:06] <jinsun> lmmx: seems to work https://mypy-play.net/?mypy=latest&python=3.10&gist=c64b6b6f65108d5dea8e1046ad0cde1b&flags=strict
[03:12:22] <lmmx> woops!
[03:12:37] <lmmx> I checked the wrong thing as None, apologies
[03:12:42] *** Quits: GalaxyNova (~GalaxyNov@S01069050ca3475d3.vc.shawcable.net) (Quit: Whoooooshh)
[03:12:54] <lmmx> thanks jinsun, that's a neat little site thank you for sharing
[03:13:26] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[03:14:25] *** Quits: gry (~quassel@botters/gry) (Quit: No Ping reply in 180 seconds.)
[03:15:00] *** Joins: gry (~quassel@botters/gry)
[03:15:23] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[03:16:25] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:16:39] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:18:42] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[03:19:27] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:23:38] <lmmx> I think something I've kept assuming is that mypy is working against you when trying to do things like pass in I think they're called 'sentinel' (?) values of None
[03:24:20] <lmmx> but really the point is that those 'sentinels' (or whatever they're called) should get converted to a non-optional type ASAP and then you don't need to let that optional propagate
[03:25:18] <lmmx> don't think it is sentinel but I mean when you pass in a None to avoid the bug where an empty list gets reused in repeated function calls etc
[03:26:13] *** Roey is now known as Ragecandy
[03:27:20] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[03:27:29] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[03:29:45] <Yhg1s> lmmx: it's still Optional, since you can leave it out.
[03:30:47] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[03:32:50] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:33:34] *** Joins: jazzy (~jaziz@2600:380:8600:750f:70fc:eff9:dc76:a5fc)
[03:34:14] <jinsun> lmmx: you could also use walrus to avoid making 2 lists `durations = [x for i in range(10,20) if (x:=get_duration(i)) is not None]`
[03:34:23] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[03:34:39] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[03:35:04] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[03:35:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:36:47] *** Ragecandy is now known as BoxOfFakeGlory
[03:39:26] *** Quits: Melantha (~pyon@user/pyon) (Quit: WeeChat 3.2)
[03:40:30] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:42:13] <newdimension> How come the key argument of sorted() can access items of dict_items but we can't do  a.items()[0]? https://dpaste.org/qOkg
[03:43:40] *** Joins: heco (~redrum@user/redrum88)
[03:43:42] <yitz> newdimension: because .items() doesn't return a list
[03:43:53] <yitz> list(a.items())[0] works
[03:43:55] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:44:07] <yitz> Or, rather,  next(a.items())
[03:44:37] <newdimension> yitz: So sorted is doing next(a.items()) before passing it to the lambda function?
[03:44:42] <sartan> -^  will raise StopIteration if dict is empty, next(a.items(), None) is nice.
[03:44:51] <Yhg1s> newdimension: sorted() is turning it into a list before calling list.sort().
[03:45:14] <yitz> newdimension: I don't know what sorted() does; you can find the code, though!
[03:46:57] <Yhg1s> it's really just 'def sorted(it, *args, **kwargs): L = list(it); L.sort(*args, **kwargs); return L'
[03:48:07] *** Quits: Akuli (~Akuli@82-203-162-28.bb.dnainternet.fi) (Quit: Leaving)
[03:48:52] <newdimension> Got it, thank you
[03:49:58] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:50:16] *** Joins: rany (~rany@user/rany)
[03:50:45] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:50:56] *** Joins: lethu (~lethu@196.117.150.245)
[03:53:18] *** Quits: lntl (~joey@ool-44c539e6.dyn.optonline.net) (Remote host closed the connection)
[03:53:27] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 245 seconds)
[03:57:10] <sybariten> hey hey!
[03:58:26] <sybariten> I'm using the input() function to take in a short string from the user. Or actually, they're writing a year. But they could also add a second argument, and if so i will use that. Any suggestions on how to distinguish between these two inputs from the user, and storing it appropiately?
[03:58:51] <grym> sybariten: write a hacky little parser function
[03:58:59] <bjs> sybariten: what is the second argument?
[03:59:06] <bjs>  and when might they type it?
[03:59:15] <sybariten> For instance, they could answer "2005" and i will use that 2005 to check against an if/else thing, but they could also answer "2005 12" and then i want to use both the 2005 and the 12
[03:59:34] <grym> sybariten: always integers?
[03:59:48] <sartan> this arbitrary format seems like a good use case for https://dateparser.readthedocs.io/en/latest/
[03:59:56] <sybariten> actually, for anything that isn't argumen1 = one out of three years, i need to complain, also  (was that understandable?)
[04:00:28] <sartan> it will be able to generate an actual datetime object from all sorts of wacky ways humans type dates in
[04:00:31] <sybariten> basically the user is only allowed to choose between three different years, but he/she may also add an extra integer, to limit the result coming back from a list. More understandable?
[04:01:03] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:01:22] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Ping timeout: 272 seconds)
[04:01:23] <sybariten> sartan: thanks, probably a killer module, but i forgot to say: this is a school thing where i want to keep the external components to a minimum
[04:01:39] <sybariten> so maybe i should write my own "input()" ?
[04:01:56] <sartan> That's fair!  So given that there are only 3 valid dates, why not expose a menu of the years and let them pick it by index? "1. 2014 2. 2015 3. 2016" Choose a date: (1)
[04:02:00] <sybariten> grym: always integers, that are legal anyhow. Anything else i can complain about
[04:02:32] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[04:02:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[04:02:38] *** Quits: newpy (~newpy@2601:280:4381:1390:61f7:6771:7362:8153) (Ping timeout: 272 seconds)
[04:02:45] <sartan> str.isdigit(), as an integer, in a given range
[04:02:49] <grym> sybariten: https://bpa.st/T5OA is kind of the uber-hacky way
[04:02:52] <sybariten> sartan: uhm, those dates are definitely sort of given in a text-only menu, but hte way i'm supposed to formulate the user interaction is that they should be able to write somthing like 1990 14, or 2005 11 , etc
[04:03:03] <sartan> right. got it
[04:03:12] *** Joins: skreech (~skreech@user/skreech)
[04:03:15] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[04:04:35] <grym> there was a neat little prompt assistant library i found a while ago
[04:04:40] <grym> that would be good here
[04:04:43] <sybariten> grym: well that was incredibly rapid
[04:06:09] <grym> it's a hack, though :)
[04:06:30] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:06:37] <sybariten> sooo lets see...  you take a given string, and .split it  ... on the space char ... then you run a for loop, in that compact way that i'm still not so confident with, to create a list? then you make an if clause to catch any cases where the index 0 of that list is not the three legal years
[04:06:55] <grym> sybariten: here's the less shit version: https://github.com/magmax/python-inquirer
[04:07:06] <sybariten> in a case where such an exception is not caught, you jsut return the list "values"
[04:07:09] <grym> yep
[04:07:31] <grym> inquirer is a lot less crappy
[04:08:06] <grym> (note that using things like this -- or like input() -- make your code very annoying to script around)
[04:08:23] <grym> (that's neither bad nor good, just a decision you should know that you're making)
[04:09:22] <sybariten> grym: ooh i love the "list" example, but, what, is it cursor-key-connected? Like curses ?
[04:09:44] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:09:47] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[04:09:48] *** Wulf4 is now known as Wulf
[04:11:00] <sybariten> looks hella practical anyhow, but unfortunately i cant really use external stuff for this little routine....    but going back to your paste example there.
[04:11:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:11:45] <sybariten> If i want to protect myself from the user typing for instance more arguments thatn these two ... should i do that at a later stage, when using your function, or should i preferably build that into your function?
[04:11:49] <sartan> year, *month = '2015 15'.split() ?
[04:11:52] *** Quits: skreech (~skreech@user/skreech) (Quit: skreech)
[04:12:06] <sartan> if len(month) > 1: raise ValueError('invalid format')
[04:12:22] <sartan> month = month[0]
[04:12:54] <jinsun> that 15 shouldn't be called month I think
[04:12:55] <grym> just check the length of the split
[04:13:16] *** Joins: skreech (~skreech@user/skreech)
[04:13:22] <sartan> uh yeah, 15 isn't a month :P
[04:13:43] <grym> consider also, what if i enter '2005  12'
[04:14:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[04:14:16] <grym> you might want re, or split on something not whitespace...
[04:14:24] <grym> and retry logic, etc
[04:14:58] *** Quits: lethu (~lethu@196.117.150.245) (Quit: Quit())
[04:15:02] <grym> letting some weirdo type stuff into your code is always fussy :)
[04:15:23] <sybariten> so... manifesting that i never know any syntax at all by heart ... should i do something like this, in pseudo: if not values[0] in {2005, 2006, 2007} OR if length(values) > 2 OR if not isint values[0] OR if not isint values[1] :
[04:15:48] *** Quits: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com) (Quit: leaving)
[04:16:07] *** Joins: rany (~rany@user/rany)
[04:17:07] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[04:17:31] <grym> you'll have an int or an unhandled exception anyway
[04:18:02] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[04:18:29] <sybariten> to me that seems to catch all illegal input. But maybe its better to inverse the test. In fact the allowed input is very slim. Its just three possible integers/strings for the first argument, and a number from 1 to like 200, for the second argument
[04:19:28] <grym> so check that, sure
[04:19:45] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 258 seconds)
[04:20:02] <KombuchaKip> Is there any way I can get the originating line an Exception was thrown when I handle it in an except block?
[04:20:16] <sybariten> Oh and another thing .... is it good to raise an error like that, when in fact you want to _tell_ the user what they could input? I mean, raising ValueError will break the script execution right
[04:20:45] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[04:21:07] <nedbat> KombuchaKip: there is probably a way.  what will you use it for?
[04:21:31] <KombuchaKip> nedbat: I'd like to know where the exception is actually arising.
[04:21:48] <nedbat> KombuchaKip: sure, but to print to the user, or to make a decision, or?
[04:22:01] <KombuchaKip> nedbat: Because something is broken right now. With C++ I tell gdb to break on an exception being thrown, but I can't do that with Python.
[04:22:07] <KombuchaKip> nedbat: Just to log.
[04:22:14] <sartan> a crash course in input validation brought to you by a school exercise =)
[04:22:16] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[04:22:44] <nedbat> KombuchaKip: the traceback module should help
[04:23:06] <KombuchaKip> nedbat: Ok. That's standard library, I take it?
[04:23:11] <nedbat> yes
[04:23:37] *** Quits: ice9 (~ice9@user/ice9) (Quit: Leaving)
[04:24:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:25:05] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:25:09] *** Quits: nac (~nac@user/nac) (Ping timeout: 252 seconds)
[04:26:55] <jinsun> KombuchaKip: `sys.exc_info()[2].tb_lineno` ?
[04:27:08] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[04:27:22] <KombuchaKip> jinsun & nedbat: I saw that on stackoverflow, but wasn't sure whether traceback module is the best practise these days?
[04:27:37] <sartan> KombuchaKip: that sounds like a use case for subclassing exceptions if you are throwing them yourself
[04:27:49] <sartan> inspecting the traceback dynamically is a pretty ugly solution
[04:27:56] *** Joins: nac (~nac@user/nac)
[04:28:01] <KombuchaKip> sartan: I actually don't know who, what, or where they're being thrown from.
[04:28:03] <nedbat> KombuchaKip: traceback is the best module for doing what it does.
[04:28:03] <sartan> subclass the exception or do some special parsing based on its msg
[04:28:14] <sartan> Is this for debugging, or for exception handling in general?>
[04:28:17] <KombuchaKip> sartan: I just want to know line and file, and I can probably figure it out from there.
[04:28:18] *** Joins: BUSY (~BUSY@user/busy)
[04:28:22] <KombuchaKip> sartan: Debugging
[04:28:46] <sartan> the traceback should have included the line number in the stderr though
[04:29:22] <jinsun> ya, the traceback that is printed on the screen usually shows where it came from
[04:29:43] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:30:02] <KombuchaKip> Looks like traceback needs sys.exc_info() anyways?
[04:30:24] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[04:30:54] <sartan> are you comfortable withs haring us the traceback you see right now?
[04:31:20] *** Quits: fassl (~fassl@2a02:8388:1987:9380:b8c4:7547:c3fd:9098) (Quit: Leaving)
[04:31:47] <KombuchaKip> sartan: I actually don't have it. Hence why I'm trying to find it.
[04:32:17] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:481e:5930:702e:cb32)
[04:32:22] <jinsun> if you just want to break on all raised exceptions, the vscode debugger has a checkbox for that, probably most IDEs do
[04:32:54] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:32:55] <KombuchaKip> jinsun: I'm on Ubuntu and using gedit. Not likely to be installing vscode any time soon =)
[04:35:52] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:45c5:5a55:5969:ce1e) (Ping timeout: 258 seconds)
[04:40:01] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[04:42:05] <KombuchaKip> Ok I found the problem. I've got a bunch of rows of code parsing a CSV like so: my_dict = { 'foo' : csv_row['foo'] if csv_row['foo'] else None, ... }. If 'foo' isn't in the csv_row, I'm getting a KeyError. Is there some syntactic sugar to keep that compact so it doesn't do that? I thought I was already checking to see if it was defined in csv_row, but it wasn't. Assume at least csv_row isn't None.
[04:42:18] <KombuchaKip> Can I use the `in` keyword some how?
[04:42:39] <nedbat> KombuchaKip: you want csv_row.get("foo")
[04:42:47] *** Joins: lethu (~lethu@196.117.150.245)
[04:43:23] <KombuchaKip> nedbat: Thanks a lot.
[04:45:11] <lethu> Hello, I got something wrong on line 6 which it seems I can't get, any idea? https://bpa.st/UMMQ
[04:45:43] *** Quits: MercilessDeth (~brad@136.49.61.2) (Read error: Connection reset by peer)
[04:45:45] <KombuchaKip> nedbat: Could I not write my_dict = { 'foo' : csv_row['foo'] if 'foo' in csv_row else None, ... } ?
[04:46:11] <nedbat> KombuchaKip: you could, but isn;t .get better?
[04:46:39] <lethu> I want that code block to break in case menu is equal to the choices available
[04:47:51] <nedbat> lethu: why did you use one != and two == ?
[04:48:08] <KombuchaKip> nedbat: Hmm, I suppose it's a personal preference. But I'll use yours because it looks a little less syntactically heavy.
[04:48:16] <KombuchaKip> Easier to read.
[04:48:26] <nedbat> KombuchaKip: it does the same thing as your code
[04:48:28] <lethu> just a typo, even when the three are the same it just doesn't work as intended
[04:48:33] <lethu> nedbat,
[04:48:40] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:48:46] <nedbat> lethu: fix the typo and paste it again
[04:48:57] <lethu> nedbat, sure
[04:49:03] <KombuchaKip> nedbat: But not KeyError on the key not being in the dict.
[04:49:25] <nedbat> KombuchaKip: sorry, "but not"?  I don't understand
[04:49:44] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[04:49:45] <KombuchaKip> nedbat: As in your solution fixes the KeyError.
[04:50:04] <nedbat> KombuchaKip: csv_row.get("foo")   is the same as    csv_row["foo"] if "foo" in csv_row else None
[04:50:19] <lethu> nedbat, here you go: https://bpa.st/N4AQ
[04:50:31] <KombuchaKip> nedbat: Yes, I get that.
[04:50:49] <nedbat> lethu: the or's aren't doing what you want.
[04:51:05] <lethu> nedbat, what shall do?
[04:51:05] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:51:14] <nedbat> lethu: no matter what the choice is, one of those or-clauses will be true.
[04:51:37] <lethu> nedbat, I see thanks, any suggestion?
[04:52:13] <nedbat> lethu:  if not (choice == menu[0] or choice == menu[1] or choice == menu[2]):
[04:52:48] <lethu> nedbat, thanks a lot, been scrathing my head for a while on this one
[04:53:04] <nedbat> lethu: or, rearrange it so that you don't have "if not"
[04:53:41] *** Joins: rany_ (~rany@user/rany)
[04:54:27] <lethu> nedbat, sure will look into it, thanks again and cheers
[04:54:54] *** Joins: zebrag (~chris@user/zebrag)
[04:55:01] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[04:55:16] <KombuchaKip> If I want to change the ith tuple in a list, but only a specific field in it, how can I do that?
[04:55:24] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[04:55:57] <KombuchaKip> I'm doing this from within the body of a: for index, (some, tuple, elements) in enumerate(my_list).
[04:57:34] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[04:58:50] *** Joins: Naan (~naan@user/naan)
[04:59:14] *** Quits: rndm (~arossi@143.59.164.79) (Ping timeout: 258 seconds)
[04:59:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:59:33] <grym> sybariten: certainly you'll want to handle exceptions sometime; where, and how, is application dependent
[04:59:48] <sybariten> grym: aha ok
[05:00:06] <grym> (say, with a while True loop that never exits until you either kill the process or give a correct input)
[05:02:15] *** Joins: korg815 (~korg815@user/korg815)
[05:02:18] *** Joins: MercilessDeth (~brad@136.49.61.2)
[05:03:07] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[05:04:34] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[05:06:17] *** Quits: lethu (~lethu@196.117.150.245) (Quit: Quit())
[05:06:47] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[05:07:33] *** Quits: omegatron (~some@p54849842.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:10:24] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:11:49] <sybariten> yeah i actually have a while true loop in a main menu, i could probably use that....
[05:11:51] *** Quits: MikZyth (~MikZyth@188.65.242.223) (Quit: WeeChat 3.1)
[05:12:21] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[05:12:44] <sybariten> but for the actual parsing in this menu choice, is there anything obviously horrendous with how i added to your structure like this?    https://bpa.st/3C7A
[05:13:00] <sybariten> Granted the error messages are not really correct cause they always say bad year
[05:13:25] <grym> sybariten: yeah, fix that; and consider revisiting how you split
[05:14:18] <sybariten> what about the split?
[05:14:48] <grym> either .split()  or `values = re.split(
[05:15:06] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 240 seconds)
[05:15:13] *** Joins: rany (~rany@user/rany)
[05:15:15] <grym> either .split()  or `values = re.split('\s+',user_input)` are less brittle than .split(' ')
[05:15:32] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 265 seconds)
[05:15:36] <sybariten> You mean if they suddenly type double spaces or something?
[05:15:50] <grym> or tabs
[05:15:56] <sybariten> okay
[05:16:02] <grym> or anything other than exactly one space
[05:16:02] <grym> :)
[05:16:22] <grym> consider the result of "foo  bar".split(' '), which is ['foo',' ','bar']
[05:17:55] *** Joins: BlessJah (~BlessJah@user/blessjah)
[05:18:59] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[05:19:16] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[05:20:58] *** Quits: Barones (~Barones@2804:7f3:8986:c347:a0a7:cf77:2eec:3619) (Quit: Leaving)
[05:22:25] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e5f6-214e-ac91-0ad3.res6.spectrum.com) (Read error: Connection reset by peer)
[05:22:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[05:23:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[05:24:32] *** Quits: hyper_dave (~hyper_dav@197.156.86.105) (Ping timeout: 258 seconds)
[05:25:44] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[05:25:55] *** Quits: jess (~jess@libera/staff/jess) ()
[05:26:22] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[05:26:27] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[05:27:00] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[05:28:22] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:31] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[05:32:45] *** Joins: ST47 (~ST47@wikimedia/st47)
[05:34:11] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:34:35] *** Joins: vlm (~vlm@user/vlm)
[05:35:06] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:37:14] *** Joins: rany_ (~rany@user/rany)
[05:37:21] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[05:38:54] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:3df3:6b44:b93c:faef) (Ping timeout: 276 seconds)
[05:39:46] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[05:40:41] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:41:17] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:41:18] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[05:41:47] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[05:41:47] *** brabrax_ is now known as brabrax
[05:42:27] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[05:43:19] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Client Quit)
[05:43:19] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[05:44:05] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[05:44:26] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Client Quit)
[05:45:35] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[05:47:19] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[05:47:37] <sybariten> ughh so no my output from my little parser, when printed, looks like this   ['1990', '5']   a list with two (sometimes one) strings, i guess. But the function i am feeding it into , is expecting input like this      def getSortedEmissionList(theYear, numberOfCountries = 55):
[05:47:46] *** Quits: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282) (Ping timeout: 272 seconds)
[05:48:19] <sybariten> so how do i manipulate the object i have to go into that function?
[05:49:22] *** Joins: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282)
[05:49:51] <sybariten> maybe some .join method?
[05:50:00] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[05:51:12] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[05:51:13] <grym> sybariten: well, make them ints first
[05:51:59] <grym> but then `the_year, the_num = parse_input(user_input); getSortedEmissionList(the_year, the_num)`, right?
[05:52:19] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[05:52:29] <InPhase> sybariten: getSortedEmissionList(*[int(s) for s in yourpastedlist])
[05:52:44] <sartan> under defGetSortedEmissions(TheYear, memberOfCountries=None); memberofCountries = memberOfCountries or get_max_countries()
[05:52:58] <sartan> then you can pass None safely, or pass 15 safely.
[05:53:04] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[05:54:22] <sartan> '55' is kind of a 'magic variable', try not to hard-code integeres like that. use constants instead or functions to do it. NUMBER_OF_COUNTRIES=55; so it's more clear in code what that number means.. where did 55 come from?
[05:55:11] <sartan> def complexFunction(a=556, b=423, c='banana'), what do these mean? complexFunction(a=X_AXIS, b=Y_AXIS, c=DEFAULT_FRUIT) is more readable code
[05:55:54] <InPhase> lol.  I don't know, I'd face palm hard if I saw DEFAULT_FRUIT in code.  :)
[05:56:14] <sybariten> sartan 55 was just a temporary placeholder, it's gonna be the full number of countries later yes, so a constant like that is a good idea!
[05:56:35] <sartan> Yeah not trying to be nitpicky =) Just good code practice, you seem really interested in this =)
[05:56:54] <sartan> if i was reviewing a pull request at work i would comment the same thing
[05:57:04] <sybariten> Well i'm just a very slow learner.... but it's moving forward , i hope
[05:57:31] <sybariten> yeah no thats not nitpicky, a hardcoded value like that there looks a bit odd, i agree
[05:57:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:57:58] <InPhase> sybariten: Full number of countries is probably not a property of the function, it's a state of the system.  The syntax you're looking for is probably getSortedEmissionList(theYear, numberOfCountries=None):  then inside the function, obtain the total number of countries from somewhere if it is set as None.
[05:58:42] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[05:59:00] <sybariten> grym:hmmm but should they really be ints? the three years are basically just used to check something in an if/elif clause, to know which dict to look in. If i'm not doing any number manipulation here, isnt 1990 in fact a string just as if i'd have answered "yearA" ?
[05:59:45] *** Joins: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67)
[06:00:03] <sybariten> InPhase: aha. I will look at that later, thanks. right now i broke the functionality anyhow by trying to introduce an input parser...
[06:00:08] <grym> sybariten: depends on what you want and what you have
[06:00:13] *** Joins: nac6 (~nac@user/nac)
[06:00:20] <grym> personally, i dislike strings :)
[06:00:25] <grym> just kind of in general
[06:00:56] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[06:01:19] <sartan> InPhase: I think i mentioned that
[06:01:20] <sybariten> yeah i can see that, in a way. And i'm probably dealing with a type error somewhere right now. But i'll let them be strings for now i think
[06:01:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:01:46] *** Quits: nac (~nac@user/nac) (Ping timeout: 240 seconds)
[06:01:46] *** nac6 is now known as nac
[06:02:37] *** Quits: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67) (Quit: Client closed)
[06:03:17] *** Joins: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67)
[06:06:22] *** Quits: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67) (Client Quit)
[06:06:52] *** Quits: emerent (~quassel@p200300cd57058cc9ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:07:12] *** Joins: emerent (~quassel@p200300cd57058cd1ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:07:52] <sybariten> OK yuck i gotta drop this now before i fall asleep over the keyboard, back at it again tomorrow i suppose, thanks everyone for the help!
[06:08:06] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[06:08:10] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[06:09:29] <gry> ok
[06:10:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:10:14] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[06:10:34] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[06:12:29] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[06:13:25] *** Joins: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67)
[06:14:13] *** Joins: jtck (~jtck@222.164.13.173)
[06:14:27] *** Joins: busybusybusy (~BUSY@user/busy)
[06:15:18] *** Quits: BUSY (~BUSY@user/busy) (Killed (NickServ (GHOST command used by busybusybusy)))
[06:15:20] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[06:15:24] *** busybusybusy is now known as BUSY
[06:16:49] *** Joins: fstd (~fstd@xdsl-78-35-72-109.nc.de)
[06:16:54] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[06:17:04] *** Quits: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67) (Client Quit)
[06:19:09] *** Joins: stpz (~stpz@27.190.250.157)
[06:19:20] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[06:20:07] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[06:20:20] *** Quits: stpz (~stpz@27.190.250.157) (Client Quit)
[06:20:31] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[06:22:25] *** Quits: kmh (~kmh@p200300df5f07d8002475c02177381b69.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[06:25:09] *** Joins: death916 (~death916@user/death916)
[06:30:41] *** Quits: driib (~driib@185.195.233.163) (Read error: Connection reset by peer)
[06:30:57] *** Joins: driib (~driib@185.195.233.163)
[06:31:41] *** Joins: trace987 (~trace@95.90.106.112)
[06:33:05] *** Joins: foozle (~foozle@2001-b011-c001-1a6c-a6ff-6445-511e-8619.dynamic-ip6.hinet.net)
[06:33:09] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[06:33:56] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 244 seconds)
[06:34:06] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[06:36:53] *** Quits: Elon_Satoshi (~elonsatos@user/elon-satoshi/x-4242282) (Quit: mun pona)
[06:37:17] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:40:07] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 268 seconds)
[06:40:36] *** Joins: rany (~rany@user/rany)
[06:41:55] *** Joins: Fiji (~Fiji@user/fiji)
[06:46:38] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:46:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:46:38] *** finn_elija is now known as FinnElija
[06:47:56] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[06:50:31] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[06:52:12] *** Joins: derelict (~derelict@user/derelict)
[06:53:30] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:55:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:56:35] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[06:57:25] *** Joins: jtck (~jtck@222.164.13.173)
[06:57:37] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[07:02:41] *** Joins: Somni (insomnia@77-88-237-24.gci.net)
[07:03:09] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[07:04:15] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:ed31:59a0:8121:103e)
[07:04:25] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[07:04:26] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:ed31:59a0:8121:103e) (Read error: Connection reset by peer)
[07:04:31] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-e8e0-40c9-c788-8ef8.res6.spectrum.com) (Quit: Konversation terminated!)
[07:07:19] *** Joins: jtck (~jtck@222.164.13.173)
[07:11:39] *** Joins: qk2z (~qk1z@193-82-226-146.tpgi.com.au)
[07:14:10] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Ping timeout: 258 seconds)
[07:15:35] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:17:48] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[07:18:03] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[07:21:47] *** Joins: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67)
[07:22:35] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Read error: No route to host)
[07:22:45] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[07:24:45] *** Quits: Guddu (~Guddu@67.73.237.27) (Read error: Connection reset by peer)
[07:26:17] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:29:29] *** Quits: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67) (Quit: Client closed)
[07:29:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[07:29:59] *** Joins: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67)
[07:31:39] *** Joins: Elzington (~Elzington@68.235.43.22)
[07:32:09] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:32:52] *** Quits: stpz (~stpz@240e:341:2298:ea00:9101:3fd9:a495:aa67) (Client Quit)
[07:32:57] *** Joins: rany (~rany@user/rany)
[07:35:13] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:36:39] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[07:36:40] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[07:37:42] *** Joins: Maikel (~Maikel@130.61.63.136)
[07:38:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:46:42] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[07:48:40] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Ping timeout: 258 seconds)
[07:50:22] *** Joins: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de)
[07:50:53] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[07:52:11] *** Quits: qk2z (~qk1z@193-82-226-146.tpgi.com.au) (Remote host closed the connection)
[07:52:50] *** Quits: nyash (~nyash@185.80.58.10) (Read error: Connection reset by peer)
[07:55:58] *** Joins: rany_ (~rany@user/rany)
[07:56:47] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[07:58:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[07:58:19] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[08:05:08] *** BoxOfFakeGlory is now known as HolyStuffdGlory
[08:08:10] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[08:10:16] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[08:10:35] *** Joins: rany (~rany@user/rany)
[08:11:17] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 258 seconds)
[08:11:24] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:12:42] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (Ping timeout: 240 seconds)
[08:12:50] *** Abrax is now known as Garrus
[08:13:02] *** Garrus is now known as Zelda
[08:13:06] *** Zelda is now known as Abrax
[08:15:32] *** Joins: tims (~tims@61.69.131.46)
[08:18:23] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[08:19:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:26:19] *** Joins: Somni (insomnia@77-88-237-24.gci.net)
[08:28:08] *** HolyStuffdGlory is now known as Roey
[08:29:36] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[08:29:57] *** Joins: Abrax (~Abrax@user/abrax)
[08:30:02] *** Joins: rany_ (~rany@user/rany)
[08:30:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[08:30:27] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 258 seconds)
[08:30:38] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[08:31:37] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[08:34:38] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[08:34:54] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[08:35:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:39] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:37:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[08:40:07] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[08:40:40] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[08:43:24] <Roey> fartyfoam: LOL nice nick
[08:43:33] *** Joins: maxtimbo (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[08:44:42] *** Quits: foozle (~foozle@2001-b011-c001-1a6c-a6ff-6445-511e-8619.dynamic-ip6.hinet.net) (Quit: Leaving)
[08:45:24] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[08:45:41] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Quit: Gotta Go -- Peas)
[08:49:52] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:51:45] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[08:54:51] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[08:58:03] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:00:50] *** Quits: chowmein__ (~chowmeine@user/chowmeined) (Ping timeout: 256 seconds)
[09:10:19] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 258 seconds)
[09:13:35] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[09:14:28] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:18:30] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:20:53] *** Quits: d00gy (~d00gy@user/d00gy) (Quit: WeeChat 2.3)
[09:26:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:30:04] *** Quits: emerent (~quassel@p200300cd57058cd1ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:31:17] *** Quits: tijuco (~tijuco@user/tijuco) (Quit: Leaving)
[09:31:55] *** Joins: emerent (~quassel@p200300cd57058cd1ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:32:24] <fartyfoam> Roey thanks ;) Itâ€™s a literal translation of a local dessert
[09:32:58] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[09:34:54] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:41:06] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:41:53] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[09:43:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[09:44:46] *** Joins: vicfred (~vicfred@user/vicfred)
[09:45:58] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 258 seconds)
[09:47:41] *** Joins: upsala (~zcb@185.213.155.160)
[09:48:32] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:50:47] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[09:52:10] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[09:54:14] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:54:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:54:34] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[10:00:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:03:59] *** Joins: CoolerX (~CoolerX@user/coolerx)
[10:04:25] *** Quits: DaNeenjah (~jake@21.sub-72-106-110.myvzw.com) (Quit: WeeChat 3.2)
[10:04:54] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[10:05:30] *** Quits: hyper_dave (~hyper_dav@static.83.88.217.95.clients.your-server.de) (Ping timeout: 240 seconds)
[10:07:53] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[10:11:33] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[10:20:15] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Ping timeout: 255 seconds)
[10:29:48] *** Quits: LiftLeft (~LiftLeft@191.96.227.138) (Ping timeout: 252 seconds)
[10:30:49] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 258 seconds)
[10:32:02] *** Joins: spinoza (~Zarathust@gateway/tor-sasl/spinoza)
[10:34:14] *** Joins: ericswpark (~ericswpar@218.153.157.253)
[10:37:45] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[10:39:15] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[10:40:14] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:41:56] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[10:42:36] *** Quits: spinoza (~Zarathust@gateway/tor-sasl/spinoza) (Quit: spinoza)
[10:45:22] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:46:25] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:55] *** Joins: seednode (~seednode@user/seednode)
[10:47:41] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 258 seconds)
[10:48:27] *** Quits: schumaml3 (~schumaml@dslb-188-104-164-207.188.104.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[10:52:37] *** Joins: schumaml3 (~schumaml@dslb-178-007-192-245.178.007.pools.vodafone-ip.de)
[10:55:46] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:55:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[10:56:59] *** Lord_of_Life_ is now known as Lord_of_Life
[10:58:03] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 276 seconds)
[10:58:38] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[11:01:09] *** Joins: me-sudoer-dentne (~Kundargi@45.112.146.61)
[11:02:22] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[11:03:50] *** Joins: sebastianos (~sebastian@user/sebastianos)
[11:03:55] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:05:23] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:06:59] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:07:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[11:07:45] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[11:09:26] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 272 seconds)
[11:11:13] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[11:11:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:12:15] *** Quits: gry (~quassel@botters/gry) (Quit: No Ping reply in 180 seconds.)
[11:12:52] *** Joins: gry (~quassel@botters/gry)
[11:14:02] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:14:21] *** Joins: mattil (~mattilinn@87-92-57-75.bb.dnainternet.fi)
[11:15:01] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[11:18:30] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:23:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[11:24:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:27:33] *** Joins: palasso (~palasso@user/palasso)
[11:28:06] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[11:28:12] *** Joins: califax (~califax@user/califx)
[11:28:24] *** Quits: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) (Quit: Leaving.)
[11:28:36] *** Joins: pspiagicw1 (~pspiagicw@123.136.198.55)
[11:28:39] *** Joins: kosh (~kosh@user/kosh)
[11:30:40] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[11:33:50] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) (Ping timeout: 256 seconds)
[11:33:50] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[11:35:16] *** Joins: fdan (~fdan@192.146.154.3)
[11:35:24] <fdan> hi there
[11:35:36] <fdan> could someone tell me how to host the flask application from passenger and nginx
[11:40:49] <jochum> fdan: passenger thast ruby?
[11:40:54] <jochum> thats
[11:41:11] <fdan> yes but i have a webapp that runs on 5000 and thats written in flask
[11:41:44] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:43:12] <jochum> fdan: just proxy it?
[11:43:22] <fdan> yes
[11:43:26] *** Joins: magla (~gelignite@55d4004f.access.ecotel.net)
[11:43:42] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:a614:481e:5930:702e:cb32) (Remote host closed the connection)
[11:43:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:43:50] <jochum> fdan: so I'm not sure whats your question?
[11:44:04] *** Joins: califax (~califax@user/califx)
[11:44:11] <fdan> the flask webapp should be served by passenger and nginx
[11:44:17] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:41fd:dc97:9f5c:9adb)
[11:44:24] <fdan> i dont know how to set that up
[11:44:53] <jochum> fdan: am I right, passenger is a component for nginx to run ruby?
[11:45:14] <fdan> i guess it can run any application
[11:45:18] *** Joins: manti7 (~manti7@176.10.104.94)
[11:45:29] <jochum> nginx can with/without passenger
[11:45:44] <fdan> i know how to proxy it with nginx
[11:46:04] <fdan> but i am thinking if i can use nginx+passenger to serve the webapp
[11:46:28] <fdan> this is the repo i have got https://github.com/apolloio/k8s-helloworld
[11:46:38] <deniska> I did host django once using passenger on a shared host
[11:47:06] <jochum> deniska: please explain him howto do so
[11:47:41] <jochum> deniska: I was SURE that passenger is just an addon .... i was.
[11:47:46] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[11:47:48] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[11:48:49] *** Joins: brabrax (~brabrax@user/brabrax)
[11:49:05] <deniska> jochum: it's an application server which supports running wsgi among other stuff
[11:49:17] <fdan> deniska could you help me out please
[11:49:24] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 258 seconds)
[11:49:54] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[11:49:56] *** Joins: rendar (~rendar@user/rendar)
[11:50:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[11:51:13] <deniska> fdan: do you absolutely must to use it? I don't remember the details, but I remember it wasn't a pleasant experience
[11:51:40] <fdan> deniska: unfortunately yes :/   i am trying to dockerize that as well
[11:51:56] <fdan> trying it since 8 hours now :(
[11:52:49] <deniska> fdan: anyway, you have to create passenger_wsgi.py file which imports your flask app object with the name `application`
[11:52:58] <deniska> and put it in www root
[11:53:22] <deniska> (and then also tell your webserver to prohibit access to __pycache__ directory which will be created :\ )
[11:53:28] <fdan> ok i have a file in my repository called as passenger_wsgi.py which has this content 'from app import app as application'
[11:54:02] <fdan> put it in the www root?
[11:54:08] <fdan> could you explain me a bit more
[11:54:39] <deniska> as I said, I used it on the shared hosting, so I'm not sure whether it's passenger or this specific hosting configuration
[11:54:55] <deniska> but I basically had to put this file in /var/www
[11:55:28] <fdan> deniska should i have this file https://dpaste.org/fWmk
[11:55:37] <deniska> Why do you need passenger? Use gunicorn instead, it's much easier to configure
[11:56:01] <fdan> yes that worked for me.. but this is the task that i have got
[11:56:06] <deniska> I only used it because that's what cheapo shared hosting had as a python option :)
[11:56:42] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Ping timeout: 240 seconds)
[11:56:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:57:27] <deniska> so, anyway, passenger_wsgi.py should be able to import your app, so I had to append my venv and my application paths to sys.path :(
[11:57:45] <fdan> what should this directory really have /home/app/webapp/public
[11:58:31] <deniska> passenger_wsgi.py I think? Everything else may (and really should) live outside of the server root
[11:58:58] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[12:00:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[12:00:37] <deniska> if you are constructing a docker image, I'm really not sure why you're bothering with piece of software which is really underdocumented for this usecase, besides non-technical reasons
[12:01:30] <fdan> i know but its a task :(
[12:01:38] <fdan> but first let me try to get this running without docker
[12:01:44] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:02:06] <deniska> my experience with it is really limited, and I'm not sure what was specific to passenger in general, and what was how this specific host was configured
[12:02:11] <fdan> hnn
[12:02:12] <fdan> hmm
[12:04:53] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[12:05:04] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Client Quit)
[12:08:21] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[12:08:34] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Ping timeout: 258 seconds)
[12:09:19] *** Joins: icy (~icy@user/icy)
[12:09:23] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[12:10:02] *** Quits: pspiagicw1 (~pspiagicw@123.136.198.55) (Ping timeout: 268 seconds)
[12:14:17] <hyper_dave> Is there a way to assert if an object is a homogeneous iterable of a type without going through each element?
[12:14:38] *** Parts: ericswpark (~ericswpar@218.153.157.253) (Leaving)
[12:18:19] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[12:19:16] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[12:20:22] *** Joins: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com)
[12:21:06] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:22:13] <Repiphany> What kind of iterable
[12:25:41] <hyper_dave> Anything, List, Tuple..
[12:28:00] *** Joins: jay-m126_ (~jay-m@129.0.77.222)
[12:28:04] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[12:28:19] <Wulf> hyper_dave: what does "homogeneous" mean?
[12:28:39] <Repiphany> Maybe if it's something you track during object creation but I don't see how you magically expect to be able to do that for arbitrary objects
[12:28:55] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:29:34] <Repiphany> `all(type(e) == x for e in whatever)`
[12:30:15] <jochum> so not going wihtout a loop, i thought so
[12:30:25] <Repiphany> Maybe use something like numpy arrays with set dtype
[12:30:34] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[12:30:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:31:11] <Wulf> hyper_dave: you could use static type checking. foo: List[int] = []   foo.append("blah") # error
[12:31:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[12:31:43] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[12:32:18] <jochum> hyper_dave: you could also have classes that only allow operations with that type, its a lot of boilerplate work and I can't recommend that.
[12:32:49] <jochum> better go with static typing by Wulf
[12:33:18] <hyper_dave> It is not to track the object's sanity. It is just a one time check. I might aswell loop through it.
[12:33:22] *** Quits: bam32_ (~bambams@user/bambams) (Read error: Connection reset by peer)
[12:33:39] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Read error: Connection reset by peer)
[12:33:40] *** Quits: tbcr (~tbcr@user/tbcr) (Read error: Connection reset by peer)
[12:33:45] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[12:33:46] *** Joins: bam32_ (~bambams@user/bambams)
[12:34:03] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[12:34:03] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[12:34:14] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[12:34:50] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[12:34:51] *** Quits: oisota (~oisota@user/oisota) (Quit: Ping timeout (120 seconds))
[12:35:12] *** Joins: oisota (~oisota@user/oisota)
[12:35:14] *** Joins: stoneware (~stoneware@user/stoneware)
[12:35:31] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 250 seconds)
[12:35:34] *** Joins: harleypig8 (thelounge@harleypig.com)
[12:35:36] *** Quits: chromis (sid150893@tinside.irccloud.com) (Ping timeout: 256 seconds)
[12:35:42] *** Joins: rf` (~envex@cpe-173-91-189-33.neo.res.rr.com)
[12:35:52] *** Quits: suffer (znc@mutant.penguin.fyi) (Quit: ZNC - https://znc.in seek the truth or pay the price)
[12:35:53] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (Quit: âœ–_âœ–)
[12:35:54] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Remote host closed the connection)
[12:35:55] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[12:35:56] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Remote host closed the connection)
[12:36:06] *** Joins: suffer (znc@mutant.penguin.fyi)
[12:36:08] *** Quits: Novi (~novi@user/novi) (Quit: No Ping reply in 180 seconds.)
[12:36:09] *** Joins: trashcatt_ (~trashcatt@znc.trashcat.xyz)
[12:36:10] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Ping timeout: 256 seconds)
[12:36:10] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Ping timeout: 256 seconds)
[12:36:11] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (Ping timeout: 252 seconds)
[12:36:14] *** Joins: P1ro_ (~quassel@user/p1ro)
[12:36:14] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[12:36:17] *** Joins: N3X15_ (~nexis@mail.nexisonline.net)
[12:36:22] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (Ping timeout: 245 seconds)
[12:36:22] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 245 seconds)
[12:36:25] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:28] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[12:36:32] *** Joins: ElimGarak (dgw@sopel/admin/dgw)
[12:36:39] *** Joins: sebastianos (~sebastian@user/sebastianos)
[12:36:44] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:36:44] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 256 seconds)
[12:36:44] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 256 seconds)
[12:36:44] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 256 seconds)
[12:36:44] *** Quits: AUDaags_ (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[12:36:44] *** Quits: duoi (~duoi@user/duoi) (Ping timeout: 252 seconds)
[12:36:44] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (Ping timeout: 252 seconds)
[12:36:47] *** Joins: a1paca_ (~a1paca@user/a1paca)
[12:36:47] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[12:36:47] *** Quits: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net) (Ping timeout: 245 seconds)
[12:36:47] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 245 seconds)
[12:36:48] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 245 seconds)
[12:36:49] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:37:11] *** Joins: dfch (~dfch@user/dfch)
[12:37:13] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 245 seconds)
[12:37:13] *** Quits: Antibody (~Antibody@107.170.145.30) (Ping timeout: 245 seconds)
[12:37:13] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 245 seconds)
[12:37:15] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 250 seconds)
[12:37:17] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 252 seconds)
[12:37:17] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 252 seconds)
[12:37:17] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[12:37:17] *** N3X15_ is now known as N3X15
[12:37:17] *** harleypig8 is now known as harleypig
[12:37:18] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 256 seconds)
[12:37:18] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[12:37:22] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 240 seconds)
[12:37:41] *** ElimGarak is now known as dgw
[12:37:45] *** Joins: n1000 (~n1000@user/n1000)
[12:37:48] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[12:37:50] *** Quits: byzandula (~byzandula@beerbq.net) (Ping timeout: 252 seconds)
[12:37:52] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[12:37:52] *** Quits: a1paca (~a1paca@user/a1paca) (Ping timeout: 256 seconds)
[12:37:52] *** Joins: AUDaags (~ubuntu@ec2-3-106-166-31.ap-southeast-2.compute.amazonaws.com)
[12:37:54] *** Joins: duoi (~duoi@user/duoi)
[12:37:59] *** Joins: mossman93 (~quassel@user/mossman93)
[12:38:00] *** Joins: BytesAndCoffee (~libera@bytes.coffee)
[12:38:04] *** Joins: ario (~ario@159.65.220.102)
[12:38:08] *** Joins: finsternis (~X@23.226.237.192)
[12:38:16] *** Joins: byzandula (~byzandula@beerbq.net)
[12:38:26] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 256 seconds)
[12:38:28] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[12:38:34] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[12:38:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:42] *** Joins: buhman (sid411355@user/buhman)
[12:38:44] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[12:38:54] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[12:38:59] *** Quits: jay-m126_ (~jay-m@129.0.77.222) (Ping timeout: 250 seconds)
[12:39:31] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[12:39:53] *** Joins: jay-m126_ (~jay-m@129.0.77.222)
[12:41:32] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[12:42:34] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 240 seconds)
[12:43:00] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:44:42] <Wulf> In reStructuredText, how do I create a reference with a custom text? E.g. I want :ref:`foo` but it should display "bar" instead.
[12:45:22] *** Quits: Elzington (~Elzington@68.235.43.22) (Ping timeout: 258 seconds)
[12:45:31] *** Joins: Elzington (~Elzington@68.235.43.22)
[12:45:45] *** Quits: jay-m126_ (~jay-m@129.0.77.222) (Ping timeout: 258 seconds)
[12:51:21] *** Joins: Elzington_ (~Elzington@66.63.167.104)
[12:51:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:53:12] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[12:53:38] *** Joins: MaximB (~MaximB@87.68.164.32)
[12:53:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:54:18] *** Quits: Elzington (~Elzington@68.235.43.22) (Ping timeout: 256 seconds)
[13:01:06] *** Quits: KevinX (~KevinX@185.245.86.84) (Ping timeout: 240 seconds)
[13:04:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[13:04:23] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[13:04:27] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[13:04:39] *** Joins: jiffe (~jiffe@mail.nsab.us)
[13:04:43] *** Joins: Antibody (~Antibody@107.170.145.30)
[13:05:04] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[13:05:38] *** Joins: fdan (~fdan@192.146.154.3)
[13:06:56] *** Joins: Vonter (~Vonter@user/vonter)
[13:08:24] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[13:09:22] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:10:24] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Client Quit)
[13:10:57] *** Joins: cheater (~Username@user/cheater)
[13:12:23] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2851:91a4:af4c:7957)
[13:13:33] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[13:15:21] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:16:54] *** Joins: nyah (~nyah@90.221.186.180)
[13:17:43] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[13:18:05] *** Joins: ice9 (~ice9@user/ice9)
[13:23:33] *** Joins: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net)
[13:27:34] *** Quits: death916 (~death916@user/death916) (Ping timeout: 272 seconds)
[13:28:41] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[13:29:08] *** Joins: acresearch (~acresearc@user/acresearch)
[13:30:26] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:30:48] *** Joins: Moyst (~moyst@user/moyst)
[13:31:05] *** Joins: Nahra (~user@static.161.95.99.88.clients.your-server.de)
[13:31:54] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[13:32:34] *** Quits: bam32_ (~bambams@user/bambams) (Ping timeout: 240 seconds)
[13:34:21] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[13:34:32] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Ping timeout: 272 seconds)
[13:36:04] *** Joins: hyper_dave (~hyper_dav@197.156.86.113)
[13:36:32] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:40:01] *** Joins: Adois (~Adoi@user/adoi)
[13:41:40] <acresearch> people, i have a text file, this text file is made up of line with 2 column, name space value, the names are repeated eg: [A, A, B, A, C, C, A etc...] but each value is unqiue... i am looping through the file but trying to collect the information into a dictionary such that key=a name  and value=list of all values for that name     how can i go about setting this up?
[13:42:38] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[13:43:09] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:43:26] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[13:44:40] <fdan> could someone help me setting up serving flask app through passenger and nginx
[13:44:53] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[13:45:00] *** Joins: Komu (~Komu__@2a02:3034:1:306c:3149:82bb:f887:ba9d)
[13:45:54] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[13:49:51] <Repiphany> acresearch: `d = collections.defaultdict(list); for key, value in (line.strip().split(" ") for line in fd): d[key].append(value)`
[13:50:08] <acresearch> Repiphany: ok let me try it
[13:53:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:53:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[13:54:12] <acresearch> Repiphany: excellent works perfectly :-)   thanls
[13:54:14] <acresearch> thanks
[13:55:39] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[13:55:54] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[13:56:02] *** Joins: Adoi (~Adoi@user/adoi)
[13:56:15] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:56:40] *** Quits: hyper_dave (~hyper_dav@197.156.86.113) (Ping timeout: 258 seconds)
[13:57:21] *** Joins: Elzington (~Elzington@68.235.43.12)
[13:57:46] *** Quits: Non-ICE (~lisse@165.81-167-230.customer.lyse.net) (Ping timeout: 256 seconds)
[13:58:12] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[13:58:27] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[13:58:58] *** Quits: Elzington_ (~Elzington@66.63.167.104) (Ping timeout: 258 seconds)
[14:00:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[14:04:38] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[14:07:30] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[14:07:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:08:21] *** Joins: Auron (Auron956@user/auron)
[14:09:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:09:29] <acresearch> people, i am trying to plot 2  box plots next two each other using matplotlib,,, here is my code: https://paste.debian.net/1206865/      if you run it you can see that the boxes are ontop of each other rather then next to each other, how can i improve my code to solve this?
[14:09:34] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:10:52] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:11:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:16:01] *** Joins: georgios (~georgios@user/georgios)
[14:16:28] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[14:16:40] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[14:18:37] <fdan> hi there
[14:18:45] <fdan> i am trying to follow this document
[14:18:46] <fdan> https://www.phusionpassenger.com/docs/tutorials/quickstart/python/
[14:18:52] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 245 seconds)
[14:19:15] *** Joins: entuland (~entuland@user/entuland)
[14:19:22] <fdan> but i am getting this error https://dpaste.org/Jw3G
[14:19:27] <jinsun> acresearch: you give both sets of values and labels in a single function call
[14:19:56] *** Joins: greedom (~greedom@2001:16b8:32b2:8800:d6a7:9c5:ab94:6a25)
[14:19:57] <jinsun> acresearch: `plt.boxplot(data.values(), labels=[1,2])`
[14:19:58] <acresearch> jinsun: hmmm, you mean i am doing this now?
[14:20:06] <acresearch> jinsun: ah
[14:20:09] <acresearch> ok let me try it
[14:20:34] <acresearch> jinsun: nice that works perfectly   thank :-)
[14:21:28] <jinsun> acresearch: aso labels don't need to be numbers you can do `plt.boxplot(data.values(), labels=data.keys())` as well
[14:21:46] <acresearch> jinsun: ahhhh nice that is even better
[14:22:18] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[14:23:20] *** Joins: frost (~frost@59.71.241.179)
[14:23:44] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[14:24:02] *** Joins: frost (~frost@59.71.241.179)
[14:27:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:27:43] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:28:16] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:28:40] *** Quits: mcglk (~mcglk@131.191.49.120) (Quit: (seeya))
[14:30:41] *** Joins: mcglk (~mcglk@131.191.49.120)
[14:30:46] *** Joins: frostschutz (~frostschu@2a01:c23:7802:d800:5ef9:111:aab:661a)
[14:32:59] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[14:34:15] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[14:36:36] *** Quits: greedom (~greedom@2001:16b8:32b2:8800:d6a7:9c5:ab94:6a25) (Remote host closed the connection)
[14:39:51] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:39:54] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[14:41:57] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[14:42:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:43:00] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:43:02] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:43:30] *** Joins: darksun (~darksun@user/darksun)
[14:46:41] *** Joins: schumaml4 (~schumaml@dslb-178-007-205-189.178.007.pools.vodafone-ip.de)
[14:47:16] *** Quits: audiocat (~audio@2603-8081-1800-00ad-135d-ddd4-f1e4-90ef.res6.spectrum.com) (Ping timeout: 258 seconds)
[14:47:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[14:48:02] *** Quits: schumaml3 (~schumaml@dslb-178-007-192-245.178.007.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[14:48:50] *** Joins: y1n (~y1n@84-115-64-114.wifi.dynamic.surfer.at)
[14:49:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[14:49:38] *** Quits: eat-oats (~adam@cpc96300-lewi18-2-0-cust378.2-4.cable.virginm.net) (Quit: Lost terminal)
[14:50:10] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[14:54:41] *** Joins: SparkyFlary (~Guest90@cpe-172-249-35-229.socal.res.rr.com)
[14:57:10] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[14:57:26] *** Parts: SparkyFlary (~Guest90@cpe-172-249-35-229.socal.res.rr.com) ()
[14:57:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[14:58:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[14:59:44] *** Joins: LiftLeft (~LiftLeft@191.96.150.118)
[15:01:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:02:22] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[15:04:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[15:04:31] *** Joins: dimbag (~dimbag@ppp-62-76-16-3.ppp.kmv.ru)
[15:07:18] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: Lost terminal)
[15:07:32] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:09:20] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:10:40] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:12:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[15:15:38] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[15:16:22] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[15:17:46] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 265 seconds)
[15:17:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:19:12] *** Joins: ShorTie (~ShorTie@130.sub-72-105-241.myvzw.com)
[15:19:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:23:34] *** Joins: Atque (~Atque@user/atque)
[15:26:14] *** Joins: kosh (~kosh@user/kosh)
[15:26:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:29:30] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[15:29:54] <Neoon> fucking hell I am already looking for a gun queue pools are driving me nuts again
[15:30:07] <Neoon> while queue.qsize() > 0: seems to not work always
[15:30:15] <rud0lf> it doesn't
[15:30:21] <Neoon> "Note, qsize() > 0 doesnâ€™t guarantee that a subsequent get() will not block."
[15:30:23] <Neoon> but why?
[15:30:32] <Neoon> when I print the qsize it works
[15:30:35] <Neoon> otherwise it gets stuck
[15:30:49] <Neoon> any solution to this?
[15:31:02] *** Joins: ramblebamble (~ramblebam@37.120.209.205)
[15:31:17] <rud0lf> use locks or other synchronisation objects
[15:31:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[15:32:09] <Neoon> but if the queue is empty and I pull something
[15:32:16] <Neoon> I should get like false or none on it?
[15:32:20] <ramblebamble> I have question, I am running pytorch 1.9 and I am trying my hand on multiprocessing ATM, can s.o. tell me what I am missing in this very very basic example, I always get an exception https://bpa.st/SODA
[15:33:36] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:33:47] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:35:11] <Neoon> it seems like qsize isn't to blame here
[15:35:15] <Neoon> its fucking stuck
[15:35:45] <bjs> Neoon: because concurrency
[15:36:09] <bjs> Neoon: `if qsize() > 0: get()` if in-between the two actions another task did `get()`
[15:36:20] <bjs> then the get would block
[15:36:34] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 240 seconds)
[15:37:31] <bjs> Neoon: there is get_nowait that raises an exception instead of blocking,  you can also use Locks to prevent other threads getting in the way
[15:38:02] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[15:39:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:40:56] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Ping timeout: 258 seconds)
[15:41:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:42:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:42:17] *** Joins: jess (~jess@libera/staff/jess)
[15:42:40] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:43:14] *** Joins: stpz (~stpz@240e:341:2298:ea00:48c0:e693:f16d:8a6f)
[15:44:04] <Neoon> I fill the queues before I dispatch the threads so I guess should be fine using get_nowait
[15:44:52] *** Quits: y1n (~y1n@84-115-64-114.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[15:45:16] *** Quits: stpz (~stpz@240e:341:2298:ea00:48c0:e693:f16d:8a6f) (Client Quit)
[15:45:39] <bjs> Neoon: maybe you just want a collections.deque then
[15:47:42] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[15:48:15] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[15:49:02] *** Joins: hyper_dave (~hyper_dav@197.156.107.207)
[15:50:30] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[15:53:21] *** Joins: coc0nut_ (~coc0nut@user/coc0nut)
[15:54:21] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 258 seconds)
[15:54:58] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 240 seconds)
[15:55:25] <Neoon> bjs, I check that out thanks
[15:55:33] <Neoon> the "fix" seems to work for now
[15:56:37] <ramblebamble> I case anybody is wondering __name__ == '__main__' is missing and that is the rub with the jupyter notebook
[15:57:15] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[15:57:42] *** Joins: y1n (~y1n@84-115-64-232.wifi.dynamic.surfer.at)
[15:58:41] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:00:57] *** Quits: coc0nut_ (~coc0nut@user/coc0nut) (Ping timeout: 245 seconds)
[16:02:30] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:03:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[16:04:12] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[16:06:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:06:22] *** Quits: hyper_dave (~hyper_dav@197.156.107.207) (Ping timeout: 245 seconds)
[16:07:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[16:08:36] *** Joins: hyper_dave (~hyper_dav@197.156.107.207)
[16:11:13] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[16:13:01] <acresearch> stupid question people, is it possible to get the first item as (key:val) in a dictionary? without specifying its key?
[16:14:54] <Repiphany> next(dic.items())
[16:15:08] <Repiphany> Depending on what you mean by "first"
[16:15:58] *** Joins: kmh (~kmh@p200300df5f34a300a53c887b84ee4a87.dip0.t-ipconnect.de)
[16:16:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:17:29] <cluelessperson> acresearch, dictionaries are ordered now, so yes.
[16:19:25] <ShorTie> can anyone help with installing python ??  https://bpa.st/6NDA
[16:19:41] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:21:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[16:21:35] <acresearch> Repiphany: cluelessperson i do not understand, i am getting an error: TypeError: 'dict_items' object is not an iterator
[16:23:23] <bjs> acresearch: Repiphany meant next(iter(d.items()))
[16:23:47] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[16:23:52] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 258 seconds)
[16:23:56] <Repiphany> Oops
[16:24:08] *** Joins: Melantha (~pyon@user/pyon)
[16:27:22] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[16:29:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[16:31:08] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[16:31:22] *** Quits: securethemews (~securethe@5.80.55.13) (Ping timeout: 245 seconds)
[16:32:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:32:42] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9922:e4c:6008:be3d)
[16:33:16] <Liblx> Hello, is there a way to code and run simple python scripts on android? And what about packages?
[16:33:34] <Liblx> Or: What is the best way to use Python on Android?
[16:33:46] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[16:35:30] <me-sudoer-dentne> one is termux
[16:35:43] <me-sudoer-dentne> other is some sketchy ide from play store
[16:35:50] <me-sudoer-dentne> i personally prefer termux
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:14] *** Joins: Bardon (~Bardon@user/Bardon)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[16:37:39] <Liblx> thanks, I'll test it!
[16:38:06] *** Joins: DaNeenjah (~jake@21.sub-72-106-110.myvzw.com)
[16:39:30] <Liblx> me-sudoer-dentne: looks great!
[16:40:13] <Liblx> And is there a possibility to show matplotlib graphs on android?
[16:40:30] <me-sudoer-dentne> umm
[16:40:38] <me-sudoer-dentne> I am afraid there is none
[16:40:56] <me-sudoer-dentne> you can use googles notebooks ig
[16:41:00] <hodapp> you're probably better off just trying to use Jupyter in the browser, and doing your plots there
[16:41:08] <me-sudoer-dentne> exactly
[16:41:21] <Liblx> ok, so, only by coding an app by python using this fesature?
[16:41:36] <Liblx> hodapp: thanks, good hint!
[16:42:17] <hodapp> hm, which I guess you could run inside of Termux if you wanted
[16:42:22] <hodapp> have never tried it
[16:43:25] *** Joins: thiras (~thiras@user/thiras)
[16:43:55] *** Joins: death916 (~death916@user/death916)
[16:43:56] *** Joins: securethemews (~securethe@5.80.55.13)
[16:44:41] *** Quits: y1n (~y1n@84-115-64-232.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[16:45:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:46:24] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[16:46:25] <Liblx> you mean, I should just try matplotlib inside termux? I will.
[16:46:41] <hodapp> I meant: run Jupyter inside of termux, use Jupyter via browser
[16:46:47] <Liblx> Thanks you both for your help, hodapp and me-sudoer-dentne!
[16:46:59] <Liblx> hodapp:ok, I see!
[16:48:34] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 240 seconds)
[16:48:34] *** Quits: Koffa (jkohvakk@user/koffa) (Ping timeout: 240 seconds)
[16:48:44] *** Joins: Koffa (jkohvakk@user/koffa)
[16:48:49] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:49:29] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:49:38] *** Joins: Alexer (~alexer@alexer.net)
[16:49:52] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:56] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:51:23] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[16:54:38] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[16:55:17] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:55:54] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[16:57:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:57:57] *** Joins: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at)
[16:59:11] *** Joins: Naan (~naan@user/naan)
[17:00:00] *** Joins: ziggystardust (~Delta@cpc76514-clyd5-2-0-cust131.14-1.cable.virginm.net)
[17:01:50] *** Joins: asa22 (~asa22@84.125.126.189.dyn.user.ono.com)
[17:02:24] <asa22> https://bpa.st/LQUA
[17:02:33] <asa22> I'm getting:
[17:02:34] <asa22>     max_value = max(numbers_array)
[17:02:35] <asa22> TypeError: 'int' object is not callable
[17:02:48] <grawity> because you re-assigned `max` in line 1
[17:03:06] <grawity> functions are too just variables, so they share the same namespace
[17:03:15] <asa22> oh so if I assign max to a variable then the max() function doesnt work?
[17:03:27] <grawity> yes
[17:03:28] <mawk> same for modules
[17:03:31] <asa22> I see, thx
[17:03:37] <mawk> and classes
[17:03:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:03:43] <mawk> everything except keywords
[17:03:57] <mawk> which you can't easily reassign anyway
[17:04:56] <gordonjcp> heh
[17:05:09] <gordonjcp> you can though
[17:05:13] <gordonjcp> you can do it
[17:05:17] <gordonjcp> you shouldn't but you can
[17:05:45] <mawk> yes I added "easily" to protect against gordonjcp
[17:05:50] <gordonjcp> hahahaha
[17:06:01] <gordonjcp> mawk: but it's fun!
[17:06:11] <gordonjcp> it's always good to keep the other devs on their toes
[17:06:20] <mawk> yeah
[17:06:51] <mawk> once I tried the module forbiddenfruit to be able to subclass int or something like this
[17:06:59] <mawk> I don't remember what for
[17:07:09] <mawk> you can probably use it to modify keywords if it still exists
[17:07:17] *** Quits: ziggystardust (~Delta@cpc76514-clyd5-2-0-cust131.14-1.cable.virginm.net) (Quit: Lost terminal)
[17:08:45] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:11:14] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:11:38] <gordonjcp> I'm very much of the opinion that either everything in the compiler-provided language should be sacred or nothing should be sacred
[17:12:58] <gordonjcp> like in Forth, you can define a word whose name is an integer, and that will work just like you expect
[17:13:04] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:13:12] <gordonjcp> [INTERPRET] will find the word in the dictionary, and compile it in
[17:13:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[17:14:01] <gordonjcp> this is of course a stupid and dangerous idea
[17:14:26] <gordonjcp> you're very much playing with the emergency stop buttons shorted out and the guard covers off
[17:15:02] <flimsypondreed[m> ah come on
[17:15:03] <flimsypondreed[m> just some script will stop working
[17:15:31] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:15:49] *** Joins: ganchan (~thomas_w@user/ganchan)
[17:16:09] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[17:16:58] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[17:17:14] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:18:18] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 276 seconds)
[17:20:36] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 258 seconds)
[17:21:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:23:31] *** Quits: ramblebamble (~ramblebam@37.120.209.205) (Quit: WeeChat 3.2)
[17:26:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:29:24] *** Joins: frost (~frost@59.71.241.179)
[17:29:47] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[17:31:32] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:33:32] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[17:33:41] *** Joins: Elzington_ (~Elzington@68.235.43.14)
[17:34:04] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[17:34:17] *** Quits: Elzington (~Elzington@68.235.43.12) (Ping timeout: 245 seconds)
[17:37:57] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[17:39:13] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Quit: Leaving)
[17:39:35] *** Joins: cdown (~cdown@163.114.131.1)
[17:39:57] *** Joins: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:40:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[17:40:54] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[17:41:19] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[17:42:27] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[17:43:02] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[17:44:51] *** Quits: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[17:45:57] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[17:47:13] *** Joins: cheater (~Username@user/cheater)
[17:48:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:49:06] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[17:49:15] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:51:38] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:53:37] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[17:55:15] *** Joins: vlm (~vlm@user/vlm)
[17:56:10] *** Joins: zeden (~zeden@user/zeden)
[17:58:06] *** Joins: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at)
[18:00:05] *** Joins: monkey_ (~user@190.104.116.134)
[18:01:50] *** Quits: sazawal (~sazawal@122.161.170.192) (Quit: Leaving)
[18:03:18] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[18:03:46] *** Joins: georgios (~georgios@user/georgios)
[18:03:48] *** Joins: akk (~akk@75.161.157.26)
[18:06:22] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[18:07:19] *** Joins: fdan (~fdan@192.146.154.3)
[18:07:44] *** Joins: heco (~redrum@user/redrum88)
[18:08:00] <fdan> could anyone help me serve python application using passenger and nginx
[18:08:17] <fdan> i have a flask application running, i want to server through passenger and nginx
[18:12:11] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (Quit: WeeChat 3.1)
[18:12:43] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[18:15:24] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Read error: Connection reset by peer)
[18:18:06] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:b36e:b615:5c5f:a300)
[18:19:37] <FKAShinobi> What is the best python IDE for Windows?
[18:20:00] <CuriousErnestBro> pycharm FKAShinobi
[18:20:12] <FKAShinobi> Visual studio has a python compiler in it, but it is no longer getting security updates, and that bothers me.
[18:20:59] <FKAShinobi> CuriousErnestBro: I was leaning that way but wasn't sure if PyDev was any better.
[18:22:03] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:22:10] <Yhg1s> FKAShinobi: what "python compiler" do you mean, in Visual Studio?
[18:22:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:22:29] <Yhg1s> VSCode is another well-regarded IDE, by the way.
[18:23:21] <FKAShinobi> Yhgls: There are options to develop in other (non .NET) languages such as Node.js and Python.
[18:25:18] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:25:42] <Yhg1s> FKAShinobi: I'm not sure what you're saying, sorry.
[18:25:43] *** Joins: dawg (dirtydawg@triton.blinkenshell.org)
[18:26:09] *** Joins: dez (uid92154@user/dez)
[18:26:31] <rendar> let's consider asyncio running a cpu-intensive task in another thread (e.g. run_in_executor) or something like that, to not block the main loop, to keep asyncio coroutines always running -- the problem is: pyython can run only ONE thread!! so running something into different threads will still block asyncio coroutines and the main thread where they run, right?
[18:27:10] *** Quits: asa22 (~asa22@84.125.126.189.dyn.user.ono.com) (Ping timeout: 246 seconds)
[18:27:32] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5802-f7e6-bf16-a321.res6.spectrum.com)
[18:28:00] <Yhg1s> rendar: no, Python "can't only run one thread".
[18:28:01] <bjs> rendar: well that's not quite what Python's behaviour is,  only 1 thread will be touching Python data structures at any one time.  But yes, if the other thread is blocking the current thread then it doesn't matter what the current thread is doing, whether it's using asyncio or not
[18:28:20] <Yhg1s> rendar: only one thread can be touching Python objects, asyncio code will probably just be waiting on events anyway.
[18:29:02] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (Quit: WeeChat 3.1)
[18:29:05] <bjs> rendar: note that this isn't "block" in the same way time.sleep() "blocks" asyncio.  Even with the threads, even if both are trying to touch Python objects,  both asyncio and the other thread will get CPU time
[18:29:10] <bjs> and everything will progress forward
[18:29:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[18:29:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:29:42] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[18:29:46] <bjs> even if they don't necessarily get that time *at the same time* (e.g. if they're both trying to touch Python objects at the same time)
[18:30:17] <rendar> yes, right, asyncio main thread will be still scheduled by the kernel
[18:30:30] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:30:36] <Yhg1s> and by Python.
[18:30:58] <rendar> CPython manages python threads, right?
[18:31:10] <Yhg1s> ... Let's say yes.
[18:31:53] <sybariten> hey hey peeps
[18:32:03] <FKAShinobi> Yhgls: Google "vscode vs visual studio". VisualStudio can create projects for Python on Windows, Mac, Linux.
[18:32:08] <rendar> well, it must create them (of course), and it must manage the way they "touch" the python objects, with the GIL i suppose, right? then a thread can exit gracfully and CPython is not responsible for that
[18:32:11] <jochum> rendar: what about creating a stream out of that "cpu-intensive" tasks
[18:32:14] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[18:32:24] <rendar> jochum: a stream out?
[18:32:30] <jochum> rendar: can you split it up?
[18:32:55] <jochum> rendar: stream was wrong word just lots of await yield and stuff
[18:33:07] <sybariten> i have this little thing to parse user input. As you can see it checks values[1] , but i'm not sure that the user will input something that consists of more than one string though. So that check will break then, i take it? Any smart way i could rewrite it, to say somehting like "values[1] if values[1] exists"  ?
[18:33:11] <sybariten> https://bpa.st/Q33A
[18:33:21] <Yhg1s> FKAShinobi: There is no 'l' in my nick. If you want to use Visual Studio, what's stopping you? If you're asking for a different IDE for all those languages at the same time, VSCode is a common answer. It has plenty of support for other languages too, although #python wouldn't be the place to ask about them.
[18:33:36] <jochum> rendar: if you split that "cpu-intensive" task up, you have less blocking, you have more happy customers :)
[18:33:41] <rendar> jochum: you mean in different processes?
[18:33:42] <bjs> sybariten: well you can start by checking len(values), if it's 0 they didn't input anything, if it's 1 they input 1 word, if it's 2 they input 2 words ... etc
[18:33:52] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[18:33:56] <jochum> rendar: no, same, just yield in between
[18:34:16] <bjs> jochum: rendar has threads, so there is no "yield"
[18:34:31] <bjs> Python is already switching between the two.
[18:34:39] <sybariten> bjs: so there's not "batteries included" shortcut, i need an extra if-check somewhere for that?
[18:34:54] <jochum> bjs: ok, but i read asyncio in the original question?
[18:35:11] <bjs> jochum: the original question was about run_in_executor
[18:35:24] <bjs> which is an asyncio function yes, but what it does is runs the code -in another thread-
[18:35:27] *** Joins: zebrag (~chris@user/zebrag)
[18:35:31] <jochum> bjs: am I telling shit? :)
[18:35:52] <bjs> jochum: no what you say is true and fine I think you just missed the thread part
[18:35:57] <jochum> kk
[18:35:57] <sybariten> maybe i could do soemthing like   elif not len(values) == 2 AND not values[1].isdigit():
[18:36:04] <sybariten> uhhh typi
[18:36:05] <bjs> sybariten: well len() is batteries included, and can do exactly what you want
[18:36:09] <rendar> well, let's say that the OS schedules the thread cpu time, and python can "schedule" the thread through the GIL, because manipulating it it chooses whicih thread can touch py data, right?
[18:36:20] <sybariten>   elif len(values) == 2 AND not values[1].isdigit():
[18:36:28] <bjs> rendar: well all the GIL does is says that if two threads try touch Python objects at the same time, one waits.
[18:37:07] <jochum> rendar: what about an event system to externalize the task?
[18:37:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[18:37:21] <rendar> jochum: yes, maybe that will be the final solution
[18:37:23] <jochum> rendar: like celery
[18:37:26] <bjs> sybariten: you can probably make the if/elif chain nicer by just thinking carefully about the order. Start by checking the len(), and then check the words
[18:38:07] <jochum> rendar: cause the GIL is the GIL, no chance around it.
[18:38:38] <bjs> rendar: what kind of "cpu-intensive" work are you doing? are you using any particular libraries?
[18:39:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:40:20] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 258 seconds)
[18:40:34] <rendar> bjs: several, numpy to calc stuff, cairo to draw pngs and so on
[18:40:52] <rendar> bjs: those are all financial calculations
[18:41:14] <bjs> rendar: those don't sound like they'll interact with the GIL at all
[18:41:22] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[18:41:30] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:41:32] <bjs> most of e.g. a numpy calculation is spent doing the calculation and not in touching Python objects
[18:41:39] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[18:43:30] <rendar> bjs: yes! i know that, but it will take time from asyncio thread, hence i want to do those stuff into another thread
[18:43:40] <bjs> rendar: why would it take time from asyncio thread?
[18:43:45] <bjs> if you've put them in their own thread
[18:44:01] <rendar> *if* they were into the same ascynio thread (e.g. main thread)
[18:44:10] *** Quits: jazzy (~jaziz@2600:380:8600:750f:70fc:eff9:dc76:a5fc) (Ping timeout: 258 seconds)
[18:44:14] <bjs> rendar: ah sure,  but if you say run_in_executor it like you said
[18:44:21] <bjs> then there is no issue right?
[18:44:33] *** Quits: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[18:45:17] <rendar> yes, it should
[18:45:46] <rendar> but i'm also interested in having asyncio deferring work in subprocesses, to exploit better the multi-cpu
[18:45:46] <bjs> rendar: yes it should be no issue? or yes it should be an issue?
[18:45:57] <rendar> no issue
[18:46:02] <bjs> rendar: well run_in_executor takes the executor as input, you can give it a ProcessPoolExecutor instead
[18:46:08] <bjs> but if the work is numpy it won't help
[18:46:13] <bjs> infact itll probably make it worse
[18:49:53] *** Joins: Vonter (~Vonter@user/vonter)
[18:49:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:50:36] <rendar> bjs: worse?!? how come?
[18:51:31] * jochum is learning
[18:53:07] <bjs> rendar: they're bigger, they have a lot more overhead, communicating between them is slow
[18:54:43] <rendar> ok
[18:55:09] <rendar> bjs: in linux kernel, the structure of a new process if very close to the structure of a new thread
[18:55:18] <rendar> (if not the same)
[18:55:18] <bjs> rendar: but with a *huge* amount of overhead
[18:55:41] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[18:55:41] <rendar> yeah, linux changes only some _clone() syscall flag
[18:55:53] <bjs> rendar: if you use fork, you have to copy the entire process over. If you use spawn you have to run the entire program again up to that point to do the computation again
[18:55:54] <rendar> but those flags can be fatal, e.g. CopyOnWrite flag
[18:56:04] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[18:56:28] <bjs> and then communicating between them is very expensive,  and so for numpy you'll definitely need to manually allocate some shared memory buffers to use
[18:56:51] <bjs> and all this might be for nothing as there might not be very much to gain over a thread in this case
[18:57:22] *** Joins: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at)
[18:57:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:58:28] <rendar> yes, i see
[19:00:11] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[19:02:29] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[19:05:42] <jochum> thanks bjs
[19:09:19] *** Joins: gan (~thomas_w@user/ganchan)
[19:10:08] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[19:10:23] *** Joins: DerHorst (~derhorst@181.206.208.35.bc.googleusercontent.com)
[19:11:23] *** Quits: me-sudoer-dentne (~Kundargi@45.112.146.61) (Ping timeout: 258 seconds)
[19:12:25] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:12:48] <DerHorst> Coming from other languages: Is there a simple way I can use for dictionary entries that are available most of the time, but if they are not, I get something like a "?" instead? Quick search for "python optional data" showed only optional typehinting and optional arguments
[19:13:45] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:13:53] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:14:39] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0db1-946f-db4b-3b78.res6.spectrum.com)
[19:14:49] *** Joins: Fiji (~Fiji@user/fiji)
[19:15:47] <jinsun> DerHorst: `your_dict.get(key, "?")` ?
[19:16:01] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:16:05] *** Joins: sazawal (~sazawal@122.161.170.192)
[19:16:06] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:20:29] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[19:20:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[19:20:57] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:22:39] <sybariten> OK i know this is all a bit vague information before i show code and errors, but just a quick question. I can do this : getSortedEmissionList(2005, 8)  which works with a fucntion i have,   and i have a variable theYear that looks like this , print(theYear) --> ['2005', '8']    and i can do this    print(", ".join(theYear))   --->  2005, 8    which, to me, looks very much like what i was manually
[19:22:41] <sybariten> feeding into that function before. Yet i can't do   getSortedEmissionList(", ".join(theYear))    cause then i run into some secondary errors related to , im sure, data typing...
[19:23:02] <sybariten> any obvious pitfalls?
[19:23:18] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:24:12] <DerHorst> jinsun: whoopsie, thanks a lot! (I promise to rtfm next time :D)
[19:25:31] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:74b3:aa4d:6481:89d9)
[19:26:16] *** Joins: jdmark (~jdmark@67.8.137.130)
[19:26:43] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 258 seconds)
[19:27:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[19:28:18] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:41fd:dc97:9f5c:9adb) (Ping timeout: 240 seconds)
[19:29:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:29:59] <sazawal> Hi all. How do I join a thread started with a pyqt button. Here is a sample code, https://bpa.st/MZWA . Uncommenting line 25 freezes the gui.
[19:30:01] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[19:31:52] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:32:05] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[19:32:20] *** lukedashjr is now known as luke-jr
[19:32:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 272 seconds)
[19:33:43] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[19:34:54] *** Joins: Auron (~Auron956@user/auron)
[19:35:01] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[19:36:18] *** Joins: Snyp (~rksht@49.207.202.63)
[19:37:24] *** Joins: IgIgOrzoy (~IgIgOrzoy@5.142.207.202)
[19:37:44] *** Quits: pspiagicw (~u0_a428@1.39.30.20) (Ping timeout: 268 seconds)
[19:38:00] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:40:16] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[19:40:23] *** Joins: ice99 (~ice9@user/ice9)
[19:40:30] *** Joins: mantiX (~manti7@176.10.104.94)
[19:40:54] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 258 seconds)
[19:41:40] *** Quits: audiocat (~audio@2603-8081-1800-00ad-0db1-946f-db4b-3b78.res6.spectrum.com) (Ping timeout: 258 seconds)
[19:42:33] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:43:17] <acresearch> people, if i have a dictionry called data,   if i do data.items() i get a list of the key:value pairs,   but i cannot slice them     data.items()[0] gives (TypeError: 'dict_items' object is not subscriptable)   how can i get the first key:value pairs    or loop through them one by one?
[19:43:23] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:43:51] <phy1729> for key, value in data.items():
[19:44:18] *** Quits: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:44:26] <acresearch> phy1729: ah ok good
[19:45:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:47:54] *** Joins: j`ey (~joey@user/jey/x-2681904)
[19:48:12] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:48:30] <j`ey> If I get 'ModuleNotFoundError' for something I installed with pip (installed locally to ~/.local), do I need to update pYTHONPATH?
[19:49:23] *** Joins: elastic_dog (~elastic_d@ary207.neoplus.adsl.tpnet.pl)
[19:49:50] *** Joins: trampel (~trampel@2601:602:9c00:921:30e5:1310:f3d6:2c5f)
[19:50:44] *** Quits: hyper_dave (~hyper_dav@197.156.107.207) (Ping timeout: 272 seconds)
[19:50:49] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[19:51:15] <jinsun> no, pip should install in the site-packages which should already be in sys.path
[19:51:42] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 276 seconds)
[19:52:35] <j`ey> Ok, then i gotta figure out why it doesn't find that module
[19:52:46] <ChrisWarrick> j`ey: how do you run python and how do you run pip?
[19:53:15] <j`ey> python3.9 and pip3, but python3.9 -m pip works too
[19:53:36] <ChrisWarrick> j`ey: what if you try python3.9 -m pip install --user thepackage?
[19:54:15] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[19:54:44] <j`ey> ChrisWarrick: it already said "Defaulting to user installation because normal site-packages is not writeable"
[19:54:58] <ChrisWarrick> j`ey: what if you try python3.9 -m pip install --user thepackage?
[19:55:17] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:55:40] <j`ey> I can already see that it has installed packages to ~/.local, but ok..
[19:55:47] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[19:55:50] <ChrisWarrick> j`ey: the command is imporant too.
[19:56:06] <j`ey> "Requirement already satisfied:"
[19:56:14] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[19:56:17] <ChrisWarrick> j`ey: are you sure you are importing the correct name?
[19:56:35] <j`ey> this is someone elses code, and im sure it works for them :/
[19:56:35] *** Joins: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at)
[19:56:54] <j`ey> it says "No module named 'serial.tools'"
[19:57:03] <ChrisWarrick> and what package are you installing?
[19:57:05] <j`ey> should there be a file named tools.py? (I dont write python..)
[19:57:20] <j`ey> serial construct serial.tool
[19:57:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[19:57:27] <j`ey> the packages ^
[19:57:35] <ChrisWarrick> j`ey: try installing pyserial
[19:57:47] <ChrisWarrick> j`ey: you might need to uninstall serial firs
[19:57:51] <ChrisWarrick> first*
[19:58:55] <j`ey> that worked, thanks!
[19:59:12] <j`ey> looks like the wiki instructions were wrong
[19:59:39] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:02:45] *** Quits: Snyp (~rksht@49.207.202.63) (Quit: WeeChat 3.2)
[20:07:33] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[20:10:58] <j`ey> if I have a package with my distro, and pip, can I make it favour the pip version?
[20:12:05] <j`ey> maybe I need PYTHONPATH for that
[20:12:11] <ChrisWarrick> do not use PYTHONPATH, ever
[20:12:19] <ChrisWarrick> use a venv
[20:12:21] <ChrisWarrick> http://chriswarrick.com/blog/2018/09/04/python-virtual-environments/
[20:12:52] *** Joins: hyper_dave (~hyper_dav@197.156.107.207)
[20:13:00] <j`ey> not even just set PYTHONPATH locally for a shell session?
[20:13:10] <ChrisWarrick> no, PYTHONPATH doesnâ€™t do anything good
[20:13:28] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[20:13:35] <j`ey> venv seems more annoying to use
[20:13:55] <ChrisWarrick> it might seem so at first, but it prevents you from mixing packages and messing up
[20:14:10] *** Quits: Komu (~Komu__@2a02:3034:1:306c:3149:82bb:f887:ba9d) (Quit: Verlassend)
[20:16:03] *** Joins: Akuli (~Akuli@87-94-110-103.bb.dnainternet.fi)
[20:18:07] *** Quits: gan (~thomas_w@user/ganchan) (Quit: Leaving)
[20:18:11] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[20:18:30] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:18:33] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:a614:74b3:aa4d:6481:89d9) (Remote host closed the connection)
[20:19:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:20:00] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 258 seconds)
[20:20:35] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[20:22:56] *** Joins: p-i- (~Ohmu@2403:6200:8870:a614:74b3:aa4d:6481:89d9)
[20:27:04] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:28:22] *** Joins: ano (~weechat@user/ano)
[20:29:34] *** Joins: stdout (~stdout@50.115.255.72)
[20:29:35] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 250 seconds)
[20:30:03] *** Quits: hyper_dave (~hyper_dav@197.156.107.207) (Ping timeout: 276 seconds)
[20:32:10] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 256 seconds)
[20:33:58] <luvalon1> I have a program that creates a html page. First it does all the header stuff and adds it to the file, then comes the variable stuff, and in the end it should add "</body></html> etc. so I have it like this: https://dpaste.com/CBJM6BQJG
[20:34:19] <luvalon1> but somehow the last file.write doesnt work, it stays without the stuff from the variable htmlend... the strange part is, it adds the stuff from html start
[20:34:43] <luvalon1> can someone explain to me why? and how to fix? I even put print(htmlend) before and it prints, yet it doesnt write it to the file...
[20:34:58] <ChrisWarrick> luvalon1: are you sure that htmlend is not blank? Also, you might want to use a templating language, eg. jinja2, instead of constructig html by hand like this
[20:35:20] <luvalon1> yes I am because I did the print before the write
[20:35:35] <luvalon1> and its just for one page that is just for me, but I cant get why it doesnt add it...
[20:36:12] <ChrisWarrick> luvalon1: pastebin full code?
[20:37:15] *** Joins: timkofu (~timkofu@user/timkofu)
[20:37:37] <timkofu> Hi
[20:37:43] <luvalon1> Im sorry for asking the question. Jesus, I even triplechecked, but I had a typo that made it write to a different file and I always read the one where the html end wasnt written to yet.. Thanks ChrisWarrick
[20:40:00] *** Joins: VBreton (~VBreton@82-65-166-34.subs.proxad.net)
[20:41:33] *** Joins: Jefren (~Jefren@208.104.190.55)
[20:43:05] *** Quits: strudl (~strudl@user/strudl) (Quit: got milk?)
[20:43:13] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Quit: ZNC 1.8.2 - https://znc.in)
[20:43:39] *** Joins: strudl (~strudl@user/strudl)
[20:44:08] *** Quits: p-i- (~Ohmu@2403:6200:8870:a614:74b3:aa4d:6481:89d9) (Read error: Connection reset by peer)
[20:44:21] <gloomy> Hey, I'm a bit confused about itertools.tee. Say I have an expensive (slow) iterator that yields stuff and I "split it" using itertools.tee: `i1, i2 = itertools.tee(slow_iterator)`
[20:44:22] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[20:44:38] *** Quits: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[20:44:45] *** Joins: p-i- (~Ohmu@mx-ll-171.6.227-32.dynamic.3bb.co.th)
[20:44:55] <gloomy> Then what happens when I consume the two resulting iterators independently? Is the result cached/copied somehow?
[20:45:41] *** Quits: Isthmusi (~Isthmus@user/isveni) (Quit: leaving)
[20:46:07] *** Quits: ilmais1n (~il@irc.oh1cgn.fi) (Remote host closed the connection)
[20:46:18] <bjs> gloomy: yes, values from one are cached until the other consumes it
[20:46:21] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[20:46:37] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[20:46:48] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[20:47:34] <gloomy> so there's a `copy` or `deepcopy` going on somewhere?
[20:48:00] *** Joins: Isthmusi (~Isthmus@user/isveni)
[20:48:00] <gloomy> Or are the same objects returned in both iterators?
[20:49:12] *** Joins: imp (~imp@186.205.11.214)
[20:49:54] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[20:50:17] *** Quits: Kaya (~KC@static.89.202.216.95.clients.your-server.de) (Quit: <3)
[20:50:34] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Ping timeout: 244 seconds)
[20:50:45] *** Quits: acid (~acid@user/acid) (Ping timeout: 252 seconds)
[20:50:57] <bjs> gloomy: same object
[20:51:28] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:52:54] <gloomy> bjs:  thanks :-)
[20:53:52] <FKAShinobi> What is the normal way to setup a python project with PyCharm? Should it be a virtual environment? The tutorial I'm doing shows a different menu with Django and other project types.
[20:55:04] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[20:55:07] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[20:55:37] *** Joins: acid (~acid@user/acid)
[20:56:33] <mefistofeles> FKAShinobi: virtual environments are always a good idea, imho
[20:57:11] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[20:57:22] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[20:57:28] *** Quits: jtck (~jtck@222.164.13.173) (Remote host closed the connection)
[20:57:56] *** Joins: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at)
[20:58:17] <jochum> j`ey: whats annoying with "python3 -m venv venv; ./venv/bin/pip3 install ipython; ./venv/bin/ipython" ?
[20:58:31] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[20:58:38] <jochum> j`ey: as you see no activate needed
[20:59:00] <j`ey> I just didnt want to learn about it right now, but I'm not actually sure if that's the problem anyway
[20:59:01] *** Quits: thinkofher (~thinkofhe@user/thinkofher) (Excess Flood)
[20:59:09] *** Joins: jtck (~jtck@222.164.13.173)
[20:59:13] *** Quits: strudl (~strudl@user/strudl) (Quit: got milk?)
[20:59:45] <jochum> j`ey: let us/me know when you need someting :)
[21:00:02] *** Joins: strudl (~strudl@user/strudl)
[21:01:28] <j`ey> what's weird is that 'serial' from pip seemed to be about serialisation, whereas the dist-packages serial was related to serial IO like pyserial
[21:02:40] *** Quits: trampel (~trampel@2601:602:9c00:921:30e5:1310:f3d6:2c5f) (Quit: Leaving)
[21:02:44] <az> hi, if I've function called show_value and I create a variable called show_value.price, what is that called? I was using "global" and "return" but I've just learned that I can assign a function a "sub" variable that could be used in other functions, where I can read more about this?
[21:03:19] *** Joins: ldm (~ldm@hacksoc/member)
[21:04:08] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[21:05:07] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[21:05:14] <jochum> j`ey: using debian?
[21:05:24] <j`ey> ubuntu
[21:05:37] <jochum> j`ey: dpkg -S <file> gives the package
[21:05:52] <jochum> point it to one of the dist-packages/ files
[21:06:12] <ldm> Structuring applications in Flask seems to be easier if Flask() is instantiated in a global scope fairly early on; this allows a lot of decorators to be used.
[21:06:12] <ldm> My question is, if the app is instantiated globally, then how could you structure a module so that you could pass parameters to the constructor without using global scope?
[21:06:12] <ldm> If you've got an entry point __main__.py, and __init__.py calls Flask(), then as soon as __main__.py imports the package (__init__.py) then __init__.py will create the app.
[21:07:17] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:07:19] <jochum> ldm: may give an example of what you want to create with that module?
[21:08:48] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[21:08:49] *** Joins: cheater (~Username@user/cheater)
[21:09:44] <jochum> ldm: your last sentence explains waht you want?
[21:09:50] <ldm> so for me it's a static / live site generator, where main does argparse to figure out the templates/ and static/ directory for Flask. Once it's got those, it can pass them to init which creates the app, then imports other submodules (eg .routes) which import the created app, and use (eg) app.route to setup various parts. I'm aware of Blueprints, bu
[21:09:50] <ldm> t the problem remains that the parameters would have to be in the global scope.
[21:11:02] <ldm> jochum: once __main__.py imports __init__.py, there's no scope for __main__ to set a variable in __init__ because it will start executing; since Flask behaves best in the global scope, it will create app = Flask() before the end of `import .`
[21:11:02] *** Quits: timkofu (~timkofu@user/timkofu) (Read error: Connection reset by peer)
[21:11:20] <jochum> ldm: now I see
[21:11:53] <ldm> this could all be avoided by having def setup_flask(temp_dir, stat_dir): app = Flask(), but that's decidedly less neat overall
[21:12:07] <jochum> ldm: you could have a module "myflask.py" there you configure flask either with argparse or the default
[21:12:17] <jochum> ldm: you import myflask.php wherever you want
[21:12:31] <jochum> ldm: but let me lookup my flask code to give you better hints
[21:14:46] <gitesh> whitespace means \n also na?
[21:14:55] <jochum> ldm: I have no example where I have multiple package entries (app.py + ___main___.py)
[21:15:27] <jochum> gitesh: talking to me?
[21:15:38] <gitesh> anyone
[21:15:52] <ldm> \n is considered whitespace generally yes
[21:16:06] <ldm> depends exactly on the context though
[21:16:43] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:17:30] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[21:17:35] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[21:17:46] <jochum> ldm: reading that: https://flask.palletsprojects.com/en/2.0.x/cli/ you might like it
[21:18:49] <ldm> so that would be fine for a live server, but I also want to support a static export (render every template to .html) which wouldn't be able to be started through `flask run` :/
[21:19:29] <greyltc> I can't keep up with packaging D:
[21:19:40] <jochum> ldm: just discussing, why not copycat the cli code from flask for that?
[21:19:56] *** Joins: devcpu (~rusty@ec2-35-183-244-153.ca-central-1.compute.amazonaws.com)
[21:19:56] <greyltc> Is `python -m build` dead in favor of whatever "poetry" is?
[21:20:24] <ldm> oh duh I hadn't read down as far as that, that looks interesting...
[21:20:38] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:21:12] <jochum> ldm: custom_scripts ?
[21:21:49] <jochum> https://flask.palletsprojects.com/en/2.0.x/cli/#custom-scripts
[21:21:57] <gitesh> if `with open(file) as fhand:`
[21:22:07] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[21:22:11] <gitesh> will the file for reading?
[21:22:32] <ldm> I think the custom-commands with flask itself may be what I need, thanks! https://flask.palletsprojects.com/en/2.0.x/cli/#custom-commands
[21:23:00] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[21:23:10] *** Quits: acid (~acid@user/acid) (Ping timeout: 256 seconds)
[21:26:05] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[21:26:13] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[21:26:23] <rendar> would be wise a `import asyncio as aio` ?
[21:27:19] *** Joins: Hax0r (~TP1@87.101.193.195)
[21:28:35] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:28:50] *** Joins: acid (~acid@user/acid)
[21:29:19] <jochum> ldm: good we solve it together :)
[21:29:50] *** Joins: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[21:30:20] <jochum> rendar: wise, if you and others don't mix it up with anyaio and stuff
[21:30:43] <rendar> uhm
[21:31:10] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:31:29] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[21:31:35] <jochum> gitesh: what's the "file for" ?
[21:31:45] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[21:31:53] *** Quits: Isthmusi (~Isthmus@user/isveni) (Quit: leaving)
[21:32:01] <ldm> gitesh: the default mode for `open(file)` is read, yes
[21:32:11] <gitesh> jochum: if that is not specified i think defaul is read ok thatnks
[21:32:25] <ldm> if you want to write to the file, that's when you'd need to set the mode
[21:32:26] *** Joins: Isthmusi (~Isthmus@user/isveni)
[21:32:42] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (Quit: quit)
[21:33:04] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[21:33:09] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[21:35:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[21:36:09] <bjs> gitesh: the docs for open() should say what the default is
[21:37:24] <bjs> gitesh: so there's no need to "think" or guess, you can just read what it is
[21:38:14] <rendar> gedit doesn't highlight 'async' in 'async def' :( how can i fix this? anyone know?
[21:38:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[21:38:42] <ChrisWarrick> rendar: use a better editor
[21:39:54] *** Quits: ilmais1n (~il@irc.oh1cgn.fi) (Ping timeout: 240 seconds)
[21:41:13] *** Joins: ilmais1n (~il@irc.oh1cgn.fi)
[21:43:14] <jochum> rendar: mine is vscode, not starting a war.
[21:43:17] *** Joins: Adoi (~Adoi@user/adoi)
[21:43:57] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:44:18] *** Quits: y1n (~y1n@84-115-64-144.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[21:44:52] *** Joins: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[21:45:05] <ChrisWarrick> async is a thing since python 3.5 - the 3.5.0 release was in late 2015, so any editor not knowing about async/await cannot be a good editor
[21:45:46] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[21:46:40] <grym> https://github.com/CaF2/lspJump  looks like you can bodge a LSP into gedit
[21:47:30] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 240 seconds)
[21:47:35] <grym> i suspect it's a rather large bodge
[21:48:51] <InPhase> gedit is not a common choice for programming.  It's a pretty simplistic editor.
[21:49:20] <gitesh> can somebody help me personally? I want to calculate Net Score
[21:50:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:50:51] <rendar> jochum: i use vscode too, but for little and quick things: gedit
[21:50:57] <InPhase> gitesh: import +
[21:51:01] <grym> what's a net score
[21:53:24] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[21:53:42] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Remote host closed the connection)
[21:53:45] *** Joins: ano (~weechat@user/ano)
[21:54:31] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[21:54:49] *** Joins: soft (~soft-matr@2001:470:69fc:105::c75)
[21:55:50] *** Quits: powerhouse (~Powerhous@24.109.184.150) (Ping timeout: 258 seconds)
[21:58:23] *** Joins: y1n (~y1n@84-115-64-206.wifi.dynamic.surfer.at)
[21:58:38] *** Joins: naitsabes (~naitsabes@user/naitsabes)
[21:58:40] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[21:59:04] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[21:59:18] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[22:01:53] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:03:42] <j00n> Hello! I've a hex byte string '\x41\x41\x41\x41' and I would like to append '\x42\x42\x42\x42' ('BBBB') to it. but the latter is getting done via '\\x00'.join(['\\x' + hex(c)[2:] for c in bs.encode()]). I get b'\x41\x41\x41x41\\x42\\x42\x42' when I try to concat both. How can I get '\x42\x42\x42\x42' appended?
[22:07:03] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:08:00] <ChrisWarrick> j00n: what inputs do you really have?
[22:08:24] <ChrisWarrick> j00n: b'\x41' + b'\x42' = b'\x41\x42'
[22:09:14] <j00n> ChrisWarrick: Some protocol specific non-decodable bytes are inside, tbh.
[22:09:54] <ChrisWarrick> j00n: what is `bs`?
[22:10:09] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 276 seconds)
[22:10:30] <j00n> ChrisWarrick: bs is the only decodable, e.g. some string. 'hello world'.
[22:10:51] <ChrisWarrick> j00n: please show a real complete example of the code you have, what it outputs, and what output you expect
[22:12:20] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:12:38] *** Quits: rendar (~rendar@user/rendar) ()
[22:13:58] *** Quits: frostschutz (~frostschu@2a01:c23:7802:d800:5ef9:111:aab:661a) (Remote host closed the connection)
[22:14:05] <j00n> ChrisWarrick: Ok one sec.
[22:15:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:16:00] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[22:18:19] *** Joins: byanka (~byanka@91.244.10.3)
[22:18:25] *** Quits: Hax0r (~TP1@87.101.193.195) (Read error: Connection reset by peer)
[22:18:58] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 240 seconds)
[22:23:12] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973)
[22:25:34] <j00n> ChrisWarrick: https://bpa.st/CKSQ
[22:25:58] <j00n> ChrisWarrick: Because of the double backslashes the data which I need to send to an HTTP server gets invalid.
[22:27:45] *** Joins: asa22 (~asa22@84.125.126.129.dyn.user.ono.com)
[22:28:21] <asa22> I know this should be simple but I honestly dont understand why it prints 100
[22:28:22] <asa22> https://bpa.st/UTTQ
[22:33:22] <hogarius> j00n: line 8 of your paste is appending double backslashes to p .
[22:34:41] <j00n> hogarius: Yes, I want one backslash like in line 7 but dynamically created.
[22:34:53] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:35:13] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:36:07] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:36:20] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[22:37:02] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:37:31] <hogarius> j00n: you don't have single backslashes in line 7.  you have character number 12, character number 00, ...
[22:38:00] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[22:38:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 276 seconds)
[22:38:35] <hogarius> j00n: \x followed by two hex charaters is a single byte.
[22:39:14] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:39:49] *** Joins: audiocat (~audio@2603-8081-1800-00ad-9156-ebc1-6da9-7c72.res6.spectrum.com)
[22:40:17] <j00n> hogarius: Yes, I know. I want hex byte string like in line 7 for line 8.
[22:40:40] <ChrisWarrick> j00n: b"\x41" == b"A"
[22:40:57] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:41:00] <ChrisWarrick> j00n: so the correct solution is to just do p += s.encode('utf-8')
[22:41:04] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[22:41:19] *** Joins: luke-jr- (~luke-jr@user/luke-jr)
[22:42:18] <j00n> ChrisWarrick: Hm, I tried that and it breaks data. When I use static hex byte string of line 6 it works. I will try again. Thx!
[22:43:00] <bjs> asa22: I guess the question is what did you expect it to print and why?
[22:43:04] *** Joins: Orimendix (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[22:43:31] <asa22> @bjs I expect it to print the lowest int thats evenly divisible by all numbers from 1 to 20
[22:43:42] <asa22> which 100 is not, yet thats whats printed
[22:44:50] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:44:51] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[22:44:54] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[22:44:54] *** Quits: y1n (~y1n@84-115-64-206.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[22:45:04] *** luke-jr- is now known as luke-jr
[22:45:41] <j00n> ChrisWarrick: But then line 7 needs to be b'' instead of '', right?
[22:45:42] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:45:55] <ChrisWarrick> j00n: yes
[22:46:04] <nesoi> in python, when are variables passed by reference and when by value?
[22:46:12] <bjs> nesoi: they're never "passed by value"
[22:46:49] <bjs> asa22: ah okay,  so what is the algorithm here?
[22:46:59] <nesoi> bjs:  so only by reference?
[22:47:01] <j00n> ChrisWarrick: I forgot to mention that I need to add 0-byte after each char for line 6.
[22:47:15] <j00n> ChrisWarrick: 0x00 after each char for line 6 I mean.
[22:47:22] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[22:47:38] <j00n> ChrisWarrick: How can I do this then?
[22:47:53] <bjs> nesoi: I'm not really sure "by-reference" or "by-value" really mean much in Python world because Python variables don't work like other languages variables do. See bit.ly/pynames1 for an explanation
[22:47:54] <ChrisWarrick> j00n: do you really need 0x00 or is it really utf-16?
[22:48:05] <bjs> nesoi: are you seeing some behaviour you are trying to explain?  Perhaps it's easier just to explain it directly
[22:48:14] <j00n> ChrisWarrick: It's a null-byte based on the .pcap I got.
[22:48:23] <j00n> ChrisWarrick: Windows :)
[22:48:24] <asa22> @bjs it divides numbers by 2,3,4,5...20 starting at 20 and increasing by 1 until it finds a number thats evenly divisible by 1,2,3,4...20 then prints it
[22:48:29] <j00n> ChrisWarrick: e.g. wide-char
[22:48:52] <nesoi> bjs: in computer science, passing by reference means that a pointer to the variable is passed. Passing by value means that the contents of the variable are copied.
[22:48:53] <ChrisWarrick> j00n: then use s.encode('utf-16le')
[22:49:07] <bjs> nesoi: I know what that phrase means, I'm saying that variables don't work that way in Python
[22:49:16] <bjs> nesoi: a Python variable isn't like a little chunk of memory like it is in C.
[22:49:22] *** Joins: bidouille (~user_name@trois.potager.org)
[22:49:22] <j00n> ChrisWarrick: Thank you very much!
[22:49:31] <j00n> ChrisWarrick: Will try out and let you know.
[22:49:31] <ChrisWarrick> j00n: youâ€™re welcome!
[22:49:40] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:49:42] <nesoi> still, either it would be copied when passed or a pointer to it would be passed. Not sure what other way there could be
[22:49:51] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:50:07] <nesoi> so if I have a dict containing 100M of data, I want to be sure it's not copied when passed, for example
[22:50:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[22:50:31] <bjs> nesoi: it doesn't really make sense to say that though because you don't do either to the contents of the variable, because a variable isn't a little chunk of memory you can take a reference to.  Instead variables are just tags/names for objects and those objects are what are passed (by reference)
[22:50:37] <bjs> nesoi: it won't be copied
[22:50:48] <j00n> ChrisWarrick: Perfect, works. Although I see some garbage at the end. But it works at least. :) Thanks again
[22:51:34] <nesoi> thanks, that's the answer I need :)
[22:52:22] <nesoi> next question: If I want to load a dozen files of about 15MB each into dicts, what's the fastest way to do that? And if I always need to load the same files into dicts is there a way of saving them in some format that would load them all faster?
[22:52:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:52:49] <bjs> nesoi: take a read of that link I gave, it's a good explanation of what's going on.  But as a quick summary: `d = <big dict>;  d2 = d;  d3 = d;  f(d);  obj.x = d;  etc` then there is no copying going on here
[22:53:01] <bjs> nesoi: probably just `json`, unless it's really slow for you
[22:53:07] *** Quits: IgIgOrzoy (~IgIgOrzoy@5.142.207.202) (Quit: Client closed)
[22:53:10] <nesoi> they're csvs
[22:53:14] <bjs> asa22: hmm, so how many times in your code does the outer loop run?
[22:53:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:53:27] <bjs> nesoi: there is a `csv` module (`import csv`) that can read them
[22:53:43] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[22:53:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:53:54] <bjs> nesoi: namely csv.DictReader which can make dicts out of rows in a csv;  I'd just see if that is fast enough for you before trying to do something custom
[22:55:35] <nesoi> bjs: I think that could be slower than what I'm doing because I actually only need the first column of each row
[22:55:53] <asa22> bjs should run as many times as the variable number is increased by 1
[22:55:56] <bjs> nesoi: csv files aren't very good for reading the "first column" from
[22:56:04] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[22:56:33] *** Joins: y1n (~y1n@84-115-64-206.wifi.dynamic.surfer.at)
[22:56:39] <nesoi> currently I just do:
[22:56:40] <nesoi> for row in reader:
[22:56:40] <nesoi>            dict_from_csv.add(row[1])
[22:56:48] <asa22> oh wait, little lightbulb appeared in my mind
[22:56:56] <bjs> asa22: it looks like your loop starts with i=2,n=20, then since 20 is  divisible by 2 you go to i=3,n=20. but 20 is not divislbe by 3,  so you go to i=3,n=21, which is, then i=4,n=21 up to i=4,n=26 ... is this right?  that's what your code says
[22:57:00] <bjs> but something isn't quite right
[22:57:18] <bjs> up to 24 sorry, I can't count
[22:57:24] <asa22> the i should be resetting but it isnt
[22:57:32] <asa22> thats the issue I think
[22:57:33] <bjs> asa22: ah,  maybe you want a `for` loop?
[22:57:35] <bjs> to count
[22:57:47] <nesoi> actually the 2nd column :)
[22:58:15] <bjs> nesoi: what I mean is that csv files are text files.  Text files aren't structured (even if the contents -look- structured) you just have to loop over them from the first character to the last
[22:58:26] *** Joins: IgIgOrzoy (~IgIgOrzoy@5.142.207.202)
[22:58:44] <bjs> nesoi: so pulling out a particular column is not very efficient and probably csv is the best you're going to get without changing the format (to e.g., some kind of fixed-size record thing, or a proper database)
[22:59:08] <nesoi> these input files could be any format really
[22:59:22] <nesoi> what would be most efficient to get into dicts?
[23:00:26] <nesoi> could put them in a db, but not sure that reading 100M rows from a db is actually going to be faster
[23:00:34] <bjs> nesoi: it's not really about the "into dicts" part, that part is basically irrelevant the part that matters is getting the data (in whatever form) *out* of the file
[23:00:47] <bjs> nesoi: I mean currently a csv file is basically the worst way to format this, so it can't be any worse :P
[23:01:07] *** Quits: stdout (~stdout@50.115.255.72) (Quit: Leaving)
[23:01:51] *** Joins: stdout (~stdout@50.115.255.72)
[23:01:51] *** Quits: IgIgOrzoy (~IgIgOrzoy@5.142.207.202) (Changing host)
[23:01:51] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[23:02:22] <bjs> nesoi: it really depends what the contents are and how much more efficient you need to be. I'm sure the "most" efficient way is some horrible complicated custom format with fixed-width binary format that lets you pull out Row I Column J directly or something.
[23:02:42] <bjs> Obviously it also depends on the length of the row, if the row is short compared to the column then you're not gonna save much by avoiding to read it
[23:02:56] <bjs> but if your rows are each MBs and you only want a few bytes from each... that's a whole different story
[23:03:02] *** Joins: m4v (~znc@ubuntu/member/m4v)
[23:03:09] *** Joins: upsala (~zcb@185.213.155.160)
[23:03:55] <nesoi> ok so I have to read in about 1M rows each containing a string of between 6 and 12 characters, in each of about a dozen files. They have to go into dicts and then I check them against one more input file. The dozen files change only very rarely, but the 1 input file is different every time.
[23:04:07] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:04:48] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Changing host)
[23:04:48] *** Joins: plastico (~plastico@neomutt/plastico)
[23:05:09] <bjs> nesoi: I mean the obvious thing you can do is if you're only reading 1 column is just to process the files into new files that just have the values of that column listed out flat, and what format is best for those items depends on what the values are
[23:05:11] *** Parts: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Leaving)
[23:05:28] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[23:05:33] <nesoi> they're variable length strings of 6 to 12 characters
[23:05:37] <bjs> if the strings are really text then there's not much of a better way than just listing out the strings one by one in a list in the file and just loading them up, loading a str from some text in a file is pretty simple
[23:05:52] <bjs> if it were you know,  numeric data then there are more efficient ways than storing text in a csv
[23:06:12] <nesoi> unfortunately they're strings
[23:06:22] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 258 seconds)
[23:06:34] <bjs> well not unfortunately, text files are a fine and efficient medium to store text in
[23:06:55] <bjs> well efficient to read from :)
[23:07:37] *** Joins: node1 (~node1@user/node1)
[23:07:54] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 258 seconds)
[23:08:47] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:10:47] *** Quits: lukedashjr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[23:11:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:13:22] *** Quits: lmmx (~louis@host-92-0-187-35.as13285.net) (Ping timeout: 240 seconds)
[23:14:49] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[23:17:54] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[23:18:02] *** Joins: mexen (uid495612@user/mexen)
[23:18:12] *** Joins: hifi (hifi@m.vi.fi)
[23:22:08] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:22:47] *** Joins: georgios (~georgios@user/georgios)
[23:24:24] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[23:24:50] *** Quits: jpic (~jpic@82.142.19.50) (Remote host closed the connection)
[23:26:21] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[23:26:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[23:30:13] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:30:50] *** Joins: netsan (~netsan@gateway/tor-sasl/netsan)
[23:32:10] *** Quits: netsan (~netsan@gateway/tor-sasl/netsan) (Changing host)
[23:32:10] *** Joins: netsan (~netsan@user/netsan)
[23:33:06] *** Quits: naitsabes (~naitsabes@user/naitsabes) (Quit: WeeChat 3.2)
[23:34:21] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 258 seconds)
[23:38:51] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:40:07] *** Joins: Atque (~Atque@user/atque)
[23:41:47] *** Quits: VBreton (~VBreton@82-65-166-34.subs.proxad.net) (Quit: Connection closed)
[23:42:34] *** Joins: BernieMont_ (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab)
[23:42:46] *** Joins: Fiji (~Fiji@user/fiji)
[23:43:28] *** Quits: BernieMont_ (~BernieMon@2001:558:6005:3:f8c7:b5aa:4b69:d5ab) (Remote host closed the connection)
[23:44:05] *** Joins: m4v (~znc@ubuntu/member/m4v)
[23:44:17] *** Quits: dulanic (~dulanic@47.187.144.163) (Quit: The Lounge - https://thelounge.chat)
[23:45:04] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[23:45:05] *** Quits: y1n (~y1n@84-115-64-206.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[23:45:06] *** Joins: dulanic (~dulanic@47.187.144.163)
[23:46:02] <ldm> Is there a standard way to add extra environment variables to a virtualenv?
[23:46:13] *** Parts: j`ey (~joey@user/jey/x-2681904) ()
[23:46:21] <ldm> so that activating the virtualenv also sets these variables in your shell?
[23:48:03] *** Joins: dude-x_ (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[23:49:16] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:52:21] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:53:14] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 252 seconds)
[23:53:37] *** Quits: sartan (~sartan@user/sartan) (Quit: WeeChat 1.9.1)
[23:53:49] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:54:32] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[23:55:06] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[23:55:29] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[23:56:04] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:a614:74b3:aa4d:6481:89d9)
[23:56:10] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[23:56:15] <AhmedAmerican> someone used `2captcha` API before?
[23:56:22] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[23:56:34] *** Joins: y1n (~y1n@84-115-65-129.wifi.dynamic.surfer.at)
[23:56:39] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:59:00] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 272 seconds)
[23:59:06] *** Quits: p-i- (~Ohmu@mx-ll-171.6.227-32.dynamic.3bb.co.th) (Ping timeout: 240 seconds)
