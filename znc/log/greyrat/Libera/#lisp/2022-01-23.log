[00:00:08] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[00:00:23] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[00:01:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[00:03:23] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[00:04:27] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:05:25] *** chiselfu1e is now known as chiselfuse
[00:12:27] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[00:12:54] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[00:21:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[00:21:46] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:21:55] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[00:25:48] *** Joins: cyberbanjo (mksybr@tilde.team)
[00:26:57] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 240 seconds)
[00:31:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[00:36:09] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 276 seconds)
[00:38:03] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-33.dsl.bell.ca)
[00:40:04] *** Joins: piotrts (~piotrts@188.146.242.75.nat.umts.dynamic.t-mobile.pl)
[00:43:15] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[00:43:15] *** Quits: specbot (~specbot@common-lisp.net) (Read error: Connection reset by peer)
[00:43:29] *** Joins: specbot (~specbot@common-lisp.net)
[00:44:05] *** Joins: minion (~minion@common-lisp.net)
[00:47:53] <moon-child> any hygienic macro experts in the house?
[00:48:04] <moon-child> I do not understand this macro and usage from the chibi scheme codebase http://ix.io/3NaI/scm
[00:48:19] <moon-child> apparently the correct macroexpansion is (vector (list 10 (+ 21 22)) (list 31 41 51) (list 32 42 52) (list (+ 61 2) 77))
[00:48:24] *** Joins: lispy (~lispy3@84.69.59.93)
[00:48:33] <moon-child> but it seems to me that it should be (vector (list (+ 21 22) (31 32)) (list 41 51) (list 42 52) (list (+ 61 2) 77))
[00:49:57] <lispy> (format t "What's your favourite lisp dialect?")
[00:49:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:54:39] <phoe> lispy: s/t/*query-io*/
[00:58:37] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:58:38] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:8be:4e9f:c4fa:9e8c)
[01:01:10] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Read error: Connection reset by peer)
[01:04:48] <moon-child> nevermind, ignore me, I'm dumb
[01:04:52] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[01:13:54] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:14:31] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ea:da13:60c1:b22:c476:dfef)
[01:18:37] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:8be:4e9f:c4fa:9e8c) (Ping timeout: 268 seconds)
[01:38:13] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[01:53:29] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ea:da13:60c1:b22:c476:dfef) (Read error: Connection reset by peer)
[01:56:18] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[02:05:35] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 256 seconds)
[02:06:12] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[02:10:31] *** Quits: wacki (~wacki@87.122.82.23) (Quit: Leaving.)
[02:11:15] *** Quits: piotrts (~piotrts@188.146.242.75.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 256 seconds)
[02:15:24] <qhong> phoe: whoa, I didn't know that `sed' is a Lisp dialect!
[02:28:10] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[02:28:22] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:28:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[02:31:26] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[02:31:45] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[02:36:53] *** Quits: cosimone (~user@93-47-231-147.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:42:34] *** Joins: xiews (~wxie@101.93.17.62)
[02:44:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[02:46:16] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Quit: ZNC 1.8.2 - https://znc.in)
[02:46:26] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[02:53:32] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[02:58:52] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[02:58:55] *** Joins: johnjaye (~pi@173.209.65.233)
[02:59:23] *** Joins: molson__ (~molson@2001:48f8:704a:123d::75f:1027)
[03:02:06] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1024-static.midco.net) (Ping timeout: 250 seconds)
[03:14:20] *** Joins: monkey_ (~user@190.104.116.153)
[03:32:29] *** Quits: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[03:40:47] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:45:27] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[03:45:48] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[03:49:07] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[03:49:46] *** Joins: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a)
[03:49:58] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[04:01:41] *** Joins: mixfix41 (~homefame@user/mixfix41)
[04:13:17] *** Quits: xiews (~wxie@101.93.17.62) (Ping timeout: 256 seconds)
[04:22:23] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 268 seconds)
[04:24:18] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[04:25:34] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[04:30:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[04:30:13] *** Quits: dra (~dra@2a04:4540:6402:9000:510e:1ea2:84e8:475a) (Remote host closed the connection)
[04:34:02] *** Joins: xiews (~wxie@2409:891e:6940:2880:4ea:27d5:6862:6073)
[04:55:12] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:57:47] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:59:26] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[05:02:57] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[05:03:43] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[05:05:04] *** Joins: mixfix41 (~homefame@user/mixfix41)
[05:08:17] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[05:15:46] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[05:15:47] *** Joins: parjanya (~esb@177.33.154.179)
[05:17:13] *** Joins: livoreno (~livoreno@user/notzmv)
[05:24:22] *** Joins: unyu (~pyon@user/pyon)
[05:27:57] *** Quits: occ (~occ@user/occ) (Remote host closed the connection)
[05:34:26] *** Joins: kiki_lamb (~kiki_lamb@198-91-209-245.cpe.distributel.net)
[05:35:49] <kiki_lamb> I'm curious, are there any lisps around that have tried adding Haskell-style automatic currying, so that expressions like (mapcar (* 8) some-list) would work?
[05:36:36] <aeth> left or right? doesn't matter for *, but matters for /
[05:38:16] <kiki_lamb>  aeth: presumably it'd partially apply the first argument to *, and would do the same for /. 
[05:38:38] <aeth> It often exists as something like (curry #'* 8) or (curry * 8) depending on if Lisp-2 or Lisp-1... not much of a difference if it's a library or core
[05:38:53] <aeth> e.g. in CL, (mapcar (alexandria:curry #'* 8) '(1 2 3)) => (8 16 24)
[05:39:06] *** Joins: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net)
[05:39:10] <aeth> in Racket, (map (curry * 8) '(1 2 3)) => '(8 16 24)
[05:39:13] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[05:39:21] <aeth> Same result, it's just that Racket chooses to display the ' there
[05:39:44] <moon-child> kiki_lamb: auto-currying conflicts with variadics, which are generally considered a greater priority
[05:39:47] <aeth> At that point, it's just an issue of a macro
[05:40:01] <kiki_lamb> Sure, I'm just curious if anyone's experimented with making it a core feature that's done automatically, without a separate call to a helper like #'curry.
[05:40:52] <cyberbanjo> Coalton has curried functions
[05:40:54] <cyberbanjo> https://coalton-lang.github.io/20211010-introducing-coalton/
[05:41:08] <moon-child> cyberbanjo: coalton is an ml, though
[05:41:22] <cyberbanjo> Can't be both a Lisp and ML?
[05:41:55] <moon-child> there is a great idiological divide, lambda-calculus roots notwithstanding
[05:42:00] <cyberbanjo> hmmm
[05:42:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:42:05] <cyberbanjo> Shen Lisp also has ML like curried
[05:42:12] <cyberbanjo> can A lisp stay lisp with curried functions then?
[05:42:40] <moon-child> I dare not answer such categorical questions
[05:42:45] <moon-child> :)
[05:42:50] *** Joins: yoonkn (~user@175.197.208.79)
[05:43:51] <kiki_lamb> cyberbanjo: hm, interesting, i'll take a look.
[05:44:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:44:42] <moon-child> (shen sounds interesting, I should take a look at it.  Logic programming iirc, right?)
[05:45:17] *** Quits: v0|d (~user@ns1.core.gen.tr) (Ping timeout: 240 seconds)
[05:45:32] <aeth> or maybe something like this
[05:45:33] <aeth> (defmacro mapcurry (function list &rest more-lists) (destructuring-bind (f &rest args) function `(mapcar (alexandria:curry (function ,f) ,@args) ,list ,@more-lists)))
[05:46:08] <aeth> (mapcurry (* 8) '(1 2 3)) => (8 16 24)
[05:46:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:46:27] <aeth> (mapcurry (* 8) '(1 2 3) '(4 5 6)) => (32 80 144)
[05:46:50] <moon-child> man, it's a shame lambda lists are so complicated.  But grab an off-the-shelf lambda-list parser and you've got yourself a defcurried
[05:47:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:48:19] <aeth> the caveat being that even automating it would create macros, not functions, even though the person wanting to do this loves functions, not macros
[05:48:32] <aeth> and it kind of has to be a macro because of the repurposing of (* 8)
[05:49:02] <moon-child> 'automating it would create macros, not functions, even though the person wanting to do this loves functions, not macros'  I don't see why
[05:49:02] <aeth> that's just how you get to make things "lazy" without an explicit lambda (which you want to avoid, because that's what directly writing CURRY probably does)
[05:49:46] <aeth> because you're saying that instead of evaluating (* 8) as 8, you're treating it as * and (8) where * becomes (function *) i.e. #' while (8) gets added to the curry
[05:50:02] <moon-child> well, sure, yeah, in that case you would have to make a decision about the valence of *
[05:50:11] <moon-child> but in most cases you would be able to do something reasonable with just a function
[05:54:53] *** Joins: justache (~justache@user/justache)
[05:55:03] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[05:55:17] *** Joins: yoonkn (~user@175.197.208.79)
[06:02:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[06:03:13] *** Joins: Akiva (~Akiva@user/Akiva)
[06:04:17] *** Quits: yoonkn (~user@175.197.208.79) (Ping timeout: 240 seconds)
[06:09:14] *** Joins: cynomys (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net)
[06:09:18] *** Parts: cynomys (~cassaundr@c-71-59-237-188.hsd1.or.comcast.net) ()
[06:10:38] <sm2n> moon-child: actually you can have both auto-currying and variadic functions
[06:10:43] <sm2n> indeed, haskell has both
[06:11:16] <moon-child> sm2n: can you have auto-currying and variadic functions together with dynamic typing and APPLY though?
[06:11:22] <moon-child> cuz I think the latter two are pretty essential to lisp
[06:11:28] <sm2n> but you need types to disambiguate, and (I believe the correct term is) HKTs to express the correct type
[06:11:35] <sm2n> haha I don't think so
[06:19:15] <sm2n> see <https://okmij.org/ftp/Haskell/polyvariadic.html#polyvar-fn> btw
[06:20:35] <moon-child> man, can't get away from oleg
[06:24:19] <sm2n> yup
[06:29:37] *** Quits: MatSharrow (~matthew@169.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[06:29:46] *** Joins: yoonkn (~user@175.197.208.79)
[06:34:18] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Ping timeout: 276 seconds)
[06:36:01] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[06:38:57] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:57:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[06:57:48] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[07:06:18] *** Joins: pagnol (~user@014198154145.ctinets.com)
[07:11:47] *** Quits: vats (~vats@103.216.143.18) (Ping timeout: 256 seconds)
[07:12:32] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:24] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:19:59] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[07:27:20] *** Joins: ouestbillie (~gallup@185.213.154.231)
[07:27:54] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[07:34:30] *** Quits: luis (~luis@lisp/luis) (Quit: The Lounge - https://thelounge.chat)
[07:39:31] *** Joins: luis (~luis@lisp/luis)
[07:39:31] *** ChanServ sets mode: +o luis
[07:42:49] *** Joins: Colt (~Colt@user/colt)
[07:47:39] *** Parts: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[07:50:01] *** Quits: wheelsucker (~user@2600:8801:8c24:d000:25e1:aacc:8c79:dcd3) (Remote host closed the connection)
[07:50:15] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[07:59:44] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:05:25] *** Quits: seabre_ (~seabre@user/seabre) (Ping timeout: 240 seconds)
[08:15:21] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:15:29] *** Joins: radu2424078210 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:15:32] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[08:15:32] *** radu2424078210 is now known as radu242407821
[08:17:37] *** Quits: xiews (~wxie@2409:891e:6940:2880:4ea:27d5:6862:6073) (Ping timeout: 240 seconds)
[08:21:17] *** Joins: Necktwi (~necktwi@49.206.203.103)
[08:27:32] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[08:31:26] *** Quits: Necktwi (~necktwi@49.206.203.103) (Ping timeout: 250 seconds)
[08:38:17] *** Joins: Necktwi (~necktwi@49.206.203.103)
[08:41:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:41:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:41:19] *** Quits: LibreGNU (~gnu@vps-93-95-226-254.1984.is) (Ping timeout: 256 seconds)
[08:41:40] *** Joins: seabre (~seabre@user/seabre)
[08:42:14] *** Joins: LibreGNU (~gnu@vps-93-95-226-254.1984.is)
[08:57:26] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 250 seconds)
[09:00:11] *** Joins: Lumia (~Lumia@208.64.158.255)
[09:04:17] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[09:18:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[09:19:53] *** Joins: vats (~vats@103.216.143.32)
[09:26:59] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5)
[09:32:08] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[09:55:19] *** Joins: wacki (~wacki@87.122.85.169)
[09:55:46] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:59:15] *** Quits: Lumia (~Lumia@208.64.158.255) (Quit: ,-)
[10:02:03] *** Joins: varoun (~varoun@223.226.97.209)
[10:08:16] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[10:08:31] *** Joins: yoonkn (~user@175.197.208.79)
[10:11:10] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[10:11:22] *** Joins: libniwtr (~libniwtr@103.7.29.31)
[10:16:17] *** Quits: varoun (~varoun@223.226.97.209) (Ping timeout: 240 seconds)
[10:17:47] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:c855:f596:5d07:923e) (Remote host closed the connection)
[10:39:00] *** Joins: kotshie (~kotshie@68.72.208.140)
[10:51:43] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[10:53:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[10:54:27] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:58:06] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:04:05] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[11:14:08] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:19:00] *** Quits: kotshie (~kotshie@68.72.208.140) (Quit: Leaving)
[11:57:42] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 250 seconds)
[12:21:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[12:32:56] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[12:36:12] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:36:13] *** Quits: rogersm (~rogersm@90.166.180.250) (Read error: Connection reset by peer)
[12:40:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[12:48:17] *** Joins: shka (~herr@109.231.0.226)
[12:49:28] *** Joins: tboehme (~tboehme@p200300ce1710ed434a9bf556c35070f0.dip0.t-ipconnect.de)
[12:50:02] *** Quits: tboehme (~tboehme@p200300ce1710ed434a9bf556c35070f0.dip0.t-ipconnect.de) (Client Quit)
[13:02:39] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[13:03:49] *** Joins: rogersm (~rogersm@90.166.180.250)
[13:05:45] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[13:18:27] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[13:20:55] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[13:22:51] *** Joins: rain3 (~rain3___@5-12-7-240.residential.rdsnet.ro)
[13:22:57] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[13:27:26] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[13:29:34] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[13:29:46] *** Joins: amb007 (~a_bakic@84.196.204.77.rev.sfr.net)
[13:30:07] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 256 seconds)
[13:44:47] *** Quits: amb007 (~a_bakic@84.196.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[13:45:19] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[13:51:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:53:40] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[14:00:21] *** Quits: libniwtr (~libniwtr@103.7.29.31) (Quit: Client closed)
[14:02:25] *** Quits: vats (~vats@103.216.143.32) (Ping timeout: 256 seconds)
[14:03:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[14:11:09] *** Joins: VincentVega (~user@212.97.0.240)
[14:16:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:17:49] *** Lord_of_Life_ is now known as Lord_of_Life
[14:20:11] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[14:20:53] *** Joins: amb007 (~a_bakic@84.196.204.77.rev.sfr.net)
[14:32:24] *** Quits: molson__ (~molson@2001:48f8:704a:123d::75f:1027) (Ping timeout: 250 seconds)
[15:13:38] *** Joins: bonmlp (~user@dsl-141-182.bl26.telepac.pt)
[15:13:57] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[15:22:01] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:25:05] *** Joins: occ (~occ@user/occ)
[15:26:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[15:31:03] *** Joins: vats (~vats@103.216.143.14)
[15:33:37] *** Quits: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[15:48:44] *** Quits: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net) (Ping timeout: 268 seconds)
[15:58:14] *** Quits: amb007 (~a_bakic@84.196.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[15:58:47] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[16:14:36] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:20:54] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:22:55] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[16:26:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[16:41:57] *** Quits: vats (~vats@103.216.143.14) (Ping timeout: 240 seconds)
[16:44:21] *** Joins: rtypo (~alex@user/rtypo)
[16:51:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[16:53:44] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[16:55:52] *** Joins: notzmv (~zmv@user/notzmv)
[17:01:02] *** Joins: mtreis (~mtreis@ip68-9-89-162.ri.ri.cox.net)
[17:24:31] *** Joins: puke (~puke@user/puke)
[17:26:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[17:31:31] *** Quits: bonmlp (~user@dsl-141-182.bl26.telepac.pt) (Ping timeout: 256 seconds)
[17:39:06] *** Quits: artchad (~user@public-gprs225103.centertel.pl) (Read error: Connection reset by peer)
[17:39:13] *** Joins: lispy (~lispy3@84.69.59.93)
[17:39:30] *** Joins: mtm (~mtm@c-73-27-62-116.hsd1.fl.comcast.net)
[17:39:50] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:41:50] *** Joins: lispy (~lispy3@84.69.59.93)
[17:46:04] *** Quits: shka (~herr@109.231.0.226) (Read error: Connection reset by peer)
[17:47:00] *** Joins: rtypo (~alex@user/rtypo)
[17:49:58] *** Joins: shka (~herr@109.231.0.226)
[17:52:14] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:52:30] *** Joins: lispy (~lispy3@84.69.59.93)
[17:54:24] *** Joins: strajder (~strajder@user/strajder)
[18:00:03] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 256 seconds)
[18:02:51] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[18:03:29] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:03:37] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[18:04:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:04:57] *** Quits: parjanya (~esb@177.33.154.179) (Ping timeout: 256 seconds)
[18:09:41] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[18:16:30] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.4)
[18:18:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6c38:610a:dd57:a9dc)
[18:18:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6c38:610a:dd57:a9dc) (Changing host)
[18:18:20] *** Joins: skapata (~Skapata@user/skapata)
[18:21:02] *** Quits: psf (~pi@206.55.172.18) (Ping timeout: 240 seconds)
[18:22:54] *** Joins: psf (~pi@206.55.172.18)
[18:27:20] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:4913:9722:255a:81e4)
[18:32:33] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:38:05] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:46:20] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:4913:9722:255a:81e4) (Ping timeout: 268 seconds)
[18:47:55] *** Quits: pyook (~pyook@user/puke) ()
[18:51:07] *** Joins: artchad (~user@public-gprs225103.centertel.pl)
[18:52:44] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[18:52:53] *** Joins: vats (~vats@103.216.143.56)
[18:56:26] *** Joins: lisp123 (~lisp123@45.86.201.13)
[18:57:05] *** Joins: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d)
[19:05:35] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:05:51] *** Quits: Necktwi (~necktwi@49.206.203.103) (Quit: Lost terminal)
[19:06:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[19:08:35] *** Joins: Necktwi (~necktwi@49.206.203.103)
[19:13:12] *** Joins: AeroNotix (~xeno@185.107.67.252)
[19:14:08] *** Joins: kevingal (~quassel@176.61.88.240)
[19:14:37] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:19:01] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr)
[19:19:17] *** Quits: Arw| (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:20:08] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 250 seconds)
[19:20:50] <AeroNotix> been a long time since I was on IRC (In the "before times")... what's the latest drama
[19:21:00] <AeroNotix> always loved grabbing some popcorn and idling in here 
[19:23:48] <lisp123> AeroNotix: I *heard* taht AeroNatix guy liks to gossip and talk drama, but he's off IRC for a while
[19:23:55] <ck_> that's what I heard too
[19:23:56] <AeroNotix> yeah pretty much
[19:24:01] <ck_> left popcorn crumbs everywhere that guy
[19:24:06] <AeroNotix> so rude
[19:24:28] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:4913:9722:255a:81e4)
[19:24:30] <AeroNotix> oh I remember there was some asdf butthurt recently right?
[19:24:52] *** Joins: epony (epony@user/epony)
[19:24:54] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ea:da13:e1ef:bc39:bc07:40cb)
[19:26:26] <lisp123> Nah, I think everyone wanted that to become drama but it was resolved pretty quickly
[19:26:44] <lisp123> So there was more talk about it vs. the actual event
[19:27:22] <lisp123> Both sides were civil in the end
[19:27:38] <AeroNotix> well that's a shame
[19:27:46] <johnjaye> if you want 'drama' read the comments in hacker news.
[19:28:09] <johnjaye> or better, submit a story with a clickbaity title. something like "I used to use gambit scheme - but now I know better"
[19:28:27] <johnjaye> or "The 5 things to be a good <platform> programmer"
[19:28:55] <lisp123> johnjaye: and throw in a "better..and now I program in Rust"
[19:29:10] <AeroNotix> There was some juicy drama on HN around a post where someone switched from CL to Racket, so much popcorn
[19:29:30] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:4913:9722:255a:81e4) (Ping timeout: 268 seconds)
[19:29:42] <lisp123> recent?
[19:29:45] <AeroNotix> I don't know
[19:29:49] <AeroNotix> I just came across it the other day
[19:29:58] <johnjaye> maybe because racket has all the libraries these days?
[19:30:38] <AeroNotix> potentially? CL largely just has extremely opinionated libraries made by the same 3-4 people
[19:31:03] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[19:31:12] <cyberbanjo> social toxicity was cited in the departure letter more so than libraries
[19:31:15] <cyberbanjo> https://beautifulracket.com/appendix/why-i-no-longer-contribute-to-racket.html
[19:31:19] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[19:31:21] *** Quits: kevingal (~quassel@176.61.88.240) (Ping timeout: 268 seconds)
[19:31:33] <AeroNotix> CL's social toxicity? 
[19:31:34] <cyberbanjo> wait thats a backwards one
[19:31:36] <johnjaye> the thing is libraries sort of matter. hate to say it but that is the case
[19:31:40] <cyberbanjo> they left racket because toxic
[19:31:41] <AeroNotix> there's like..... 15 people involved mostly :D
[19:31:56] <AeroNotix> oh they left racket ... ok, well no idea personally 
[19:32:00] <johnjaye> that's like half the reason python is popular. you can just 'import muhstrings' or something and get everything you need for strings say
[19:32:25] <johnjaye> lisp tends to not have that in my limited experience
[19:32:54] <AeroNotix> there's a bunch of pretty decent utility libraries, alexandria for example
[19:33:00] <AeroNotix> lots of silly things in those types of things
[19:33:10] <AeroNotix> I like to compare it to Erlang/Elixir
[19:33:38] <AeroNotix> the main draw of Erlang is the beam, but it was super unpopular due to silly reasons
[19:33:56] <AeroNotix> someone slapped some lipstick on that pig and hey presto you have blubbers writing a calendar library
[19:34:11] <AeroNotix> CL is like that
[19:36:46] <johnjaye> according to google BEAM is merely a "register machine"
[19:36:50] <johnjaye> kind of underselling i guess
[19:37:13] <johnjaye> AeroNotix: i mean trendy things like JSON or web things. whatever fancy stuff racket has
[19:37:46] <AeroNotix> johnjaye: I have no real dog in this fight and I'm very unaware of the library ecosystem that Racket has
[19:38:00] <AeroNotix> that said, there are absolutely libraries for parsing json and doing 'web stuff'
[19:38:09] <AeroNotix> you'll have to elaborate on what you mean by 'web stuff' though 
[19:38:13] <AeroNotix> hunchentoot is ok
[19:38:20] <AeroNotix> and the piles of stuff Shinmera keeps trying to foist on people
[19:40:08] <lisp123> CL imo is pretty good except for GUI
[19:40:56] <AeroNotix> lol funnily enough I think shinmera also did a bunch of stuff with Qt and CL? Been a while since I looked
[19:41:18] <lisp123> No idea, he is a game developer now
[19:41:26] <AeroNotix> depends what you class as 'good gui'
[19:41:39] <lisp123> Native GUI
[19:42:40] <AeroNotix> lisp123: what's a native GUI on Linux?
[19:42:49] <AeroNotix> you have to pick a framework 
[19:42:55] <lisp123> GTK perhaps, but I don't use linux lol
[19:43:05] <AeroNotix> a shame
[19:43:27] <AeroNotix> Qt is decently cross-platform and using Qt from CL is relatively nice
[19:43:42] <AeroNotix> it's not native, but it can approach a native look n feel with theming 
[19:43:51] <lisp123> Nice
[19:43:51] <AeroNotix> some rough edges, mind you
[19:46:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:51:01] *** Joins: lisp123_ (~lisp123@5.30.23.247)
[19:51:07] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Read error: Connection reset by peer)
[19:55:05] *** Quits: lisp123 (~lisp123@45.86.201.13) (Ping timeout: 256 seconds)
[19:59:06] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:c16c:1790:8bf6:b4b5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:59:13] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:59:27] *** Joins: yoonkn (~user@175.197.208.79)
[20:02:19] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[20:02:37] *** Joins: mixfix41 (~homefame@user/mixfix41)
[20:12:08] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[20:13:23] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:14:18] *** Joins: parjanya (~esb@177.33.154.179)
[20:46:01] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ee:d77c:e1ef:bc39:bc07:40cb)
[20:49:40] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ea:da13:e1ef:bc39:bc07:40cb) (Ping timeout: 268 seconds)
[20:57:32] *** aku_ is now known as eagleflo
[21:11:40] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:19:01] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:e50a:3c55:78b4:a27d)
[21:23:35] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ee:d77c:e1ef:bc39:bc07:40cb) (Ping timeout: 268 seconds)
[21:26:17] *** Quits: ouestbillie (~gallup@185.213.154.231) (Ping timeout: 240 seconds)
[21:28:20] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[21:37:57] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[21:45:20] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[21:48:53] <qhong> for me native GUI = Emacs, so far
[21:49:11] <qhong> but Emacs sucks. I hope we will have a better operating environment not based on character array
[21:49:18] <cyberbanjo> emacs is not a native gui
[21:49:22] <cyberbanjo> i love emacs but still
[21:49:31] *** Joins: lispy (~lispy3@84.69.59.93)
[21:49:34] <qhong> Emacs is native GUI for me
[21:49:48] <qhong> maybe it's not native GUI for Linux, but Linux is just an Emacs runtime library for me
[21:50:00] <cyberbanjo> i thought native gui mean using gui elements that os used
[21:50:15] <cyberbanjo> or similarly-looking ones at least
[21:50:21] <qhong> cyberbanjo: check
[21:50:27] <qhong> emacs is os
[21:50:33] <cyberbanjo> lmao got me there
[21:50:41] <lispy> lol
[21:51:02] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[21:52:36] *** Quits: vats (~vats@103.216.143.56) (Remote host closed the connection)
[21:52:53] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:e50a:3c55:78b4:a27d) (Read error: Connection reset by peer)
[21:53:15] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:e50a:3c55:78b4:a27d)
[21:55:35] *** Joins: kevingal (~quassel@176.61.88.240)
[21:58:14] *** Joins: treflip (~user@user/treflip)
[22:09:08] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 250 seconds)
[22:13:47] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[22:13:50] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:14:13] *** Joins: kevingal_ (~quassel@176.61.88.240)
[22:16:40] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:17:18] *** Joins: lispy (~lispy3@84.69.59.93)
[22:18:10] *** Joins: rogersm (~rogersm@90.166.180.250)
[22:21:01] *** Joins: Tomte (~Tomte@user/Tomte)
[22:22:03] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:22:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:24:30] *** Joins: mixfix41 (~homefame@user/mixfix41)
[22:27:46] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[22:28:07] *** Joins: amb007 (~a_bakic@107.196.204.77.rev.sfr.net)
[22:29:53] *** Quits: Tomte (~Tomte@user/Tomte) (Read error: Connection reset by peer)
[22:34:46] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[22:34:59] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[22:35:18] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:35:18] *** erbium.libera.chat sets mode: +o ChanServ
[22:37:53] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:41:35] *** Joins: lispy (~lispy3@84.69.59.93)
[22:43:51] <AeroNotix> it's possible to run emacas as pid 1... which is pretty close to EmacsOS
[22:46:14] <cyberbanjo> sheperd as pid 1 and emacs as wm
[22:46:21] <cyberbanjo> just as lisp
[22:46:36] <AeroNotix> looking up what is 'sheperd'
[22:46:45] <cyberbanjo> GNU Sheperd is a init daemon
[22:46:53] <cyberbanjo> for their Hurd kernel
[22:47:01] <AeroNotix> oh ok, unfamiliar
[22:47:09] <cyberbanjo> its used in guix
[22:47:14] <cyberbanjo> thats my exposure at least
[22:47:55] *** Quits: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at) (Ping timeout: 256 seconds)
[22:48:08] <cyberbanjo> its actually shepherd with an extra #\h https://www.gnu.org/software/shepherd/
[22:51:18] <drakonis> it is used in guix too, yes.
[22:53:15] <cyberbanjo> im not super familiar with it really
[22:53:29] <cyberbanjo> but seemed more sutiable for pid 1 than emacs
[22:53:57] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[22:57:10] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[22:57:25] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10ae:adc1:b444:577f:22e3:730a)
[22:58:02] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[23:01:38] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:e50a:3c55:78b4:a27d) (Ping timeout: 268 seconds)
[23:01:51] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[23:03:00] *** Quits: wheelsucker (~user@2600:8801:8c24:d000::8e14) (Read error: Connection reset by peer)
[23:03:16] *** Joins: wheelsucker (~user@2600:8801:8c24:d000::8e14)
[23:04:48] *** Joins: hjudt (~hjudt@62-178-177-178.cable.dynamic.surfer.at)
[23:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[23:24:58] <qhong> cyberbanjo: sucks
[23:25:17] <qhong> imagine having to use several separate Lisp images
[23:25:27] <qhong> one scheme one Elisp one CL, eww
[23:25:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:25:40] <qhong> almost like UNIX Plan 9
[23:25:51] <cyberbanjo> whats the trouble with that whong
[23:25:53] <cyberbanjo> qhong
[23:26:34] <qhong> it's separated images/VMs
[23:26:41] <qhong> the same reason why UNIX sucks
[23:27:05] <cyberbanjo> i live and grew on linux so idk why it sux
[23:27:46] <moon-child> qhong: exactly!!
[23:27:56] <moon-child> cyberbanjo: unix is stratified
[23:28:06] <moon-child> I can write in shell, and I cna write in c, but I can't so easily compose the two
[23:28:24] <cyberbanjo> pipes compose c progs and bash progs?
[23:28:34] <moon-child> no
[23:28:38] <moon-child> c doesn't compose _with_ shell
[23:28:46] <moon-child> I can't write a function in shell and call it from c
[23:28:48] <moon-child> nor vice versa
[23:28:52] *** Parts: il (~il@user/f/x-7830992) (WeeChat 3.2)
[23:29:07] <qhong> it makes shell thingy second class in C, and C thingy second class in shell
[23:29:08] <cyberbanjo> how would you safely call c from bash
[23:29:17] <moon-child> right, exactly
[23:29:22] <moon-child> you can't
[23:29:24] <moon-child> that's the issue
[23:29:27] <cyberbanjo> but lisp solves that?
[23:29:29] <cyberbanjo> where?
[23:29:37] <moon-child> well, right now lisp runs on unix
[23:29:37] <cyberbanjo> lisp on unix feels just like bash on unix to me
[23:29:42] <moon-child> that's the issue qhong points out
[23:29:44] <moon-child> yes
[23:29:54] <qhong> If everything lives in the same image then there's no such arbitrary handicaps
[23:29:55] <moon-child> but supposing you build a system only in lisp.  Then you do not need to stratify
[23:30:00] <moon-child> all parts of the system can compose with each other
[23:30:07] <qhong> cyberbanjo: try lisp machine
[23:30:12] <cyberbanjo> like genera?
[23:30:16] <qhong> yes
[23:30:29] <qhong> and also some smalltalk systems I believe
[23:30:48] <cyberbanjo> ok ill try it out
[23:30:56] <cyberbanjo> unix though has its lisp, its raw text?
[23:31:10] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[23:31:17] <cyberbanjo> i think i dont get the statification
[23:32:03] <qhong> cyberbanjo: but I think the most practical system to try nowadays is just Emacs. It out sources some stuff, but also a relative big portion that runs in itself
[23:32:25] <cyberbanjo> emacs is my closest understanding of a lisp machine and i think of it as a shell 2.0
[23:32:45] <qhong> that's when you out source too many stuff
[23:33:07] <cyberbanjo> interoperability = bad?
[23:33:19] *** Quits: dra (~dra@2a04:4540:6402:9000:d8f9:f30:9793:747d) (Remote host closed the connection)
[23:33:37] <qhong> interoperate between processes << interoperate between first class functions/objects
[23:33:43] <qhong> process = bad
[23:34:11] <cyberbanjo> hmmmmmm whats the diff between a process and an (stateful) object? 
[23:35:01] <qhong> I'm comparing typical UNIX process and typical Lisp datum specifically. I think the diff is self apparent
[23:35:05] <sm2n> cyberbanjo: objects in what context?
[23:35:18] <cyberbanjo> unix objects vs lisp machine objects
[23:35:21] <qhong> (without those quantifiers you can just say process is object, or everything is everything)
[23:35:22] <cyberbanjo> unix process*
[23:35:42] <sm2n> objects typically exist in a rich environment, where they can directly interact with arbitrary data structures etc
[23:35:43] <moon-child> cyberbanjo: object in unix is an fd
[23:35:59] <sm2n> not just octet-vectors/streams with some metadata
[23:36:21] <moon-child> sm2n: hey don't knock ioctl :^)
[23:36:34] <qhong> And if you're comparing CLOS objects vs UNIX process... I don't even know where to start
[23:36:57] <qhong> imagine you can "recompile" a program binary and have all processes running hot upgrade to the new binary
[23:37:15] <qhong> that's called `update-instance-for-redefined-class'
[23:37:40] <moon-child> qhong: closure are still hard functional abstractiosn though
[23:37:44] <moon-child> as you found out recently
[23:38:09] *** Quits: amb007 (~a_bakic@107.196.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[23:38:23] *** Joins: amb007 (~a_bakic@34.144.204.77.rev.sfr.net)
[23:38:26] <sm2n> moon-child: I live to forget; and you have ruined it
[23:38:53] <qhong> moon-child: I think it's rather because of difficulty to retrofit an ideal programming language into CL
[23:39:39] <sm2n> qhong: April exists.
[23:40:00] <cyberbanjo> is april a good way to learn APL
[23:40:11] <moon-child> sm2n: april is clearly cl-ware, not apl-ware.  Ditto coalton
[23:40:13] <qhong> moon-child: I once imagine a language with every first-class environment assigned a sensible name (like URL). In such case the serialization and redefinition problem will be easy and can even retain the "correct" semantics
[23:40:30] <qhong> moon-child: imagine static type
[23:41:12] <moon-child> ain't no serialization in pointergraph-land
[23:41:32] <sm2n> how do you send an object over the wire?
[23:41:53] <qhong> hard to do it in sensible way. I mean serialization not only for transport but also for human consumption
[23:42:11] <sm2n> It comes down to latency
[23:42:24] <sm2n> you can have a global address space for all computers if you wanted
[23:42:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:42:37] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[23:42:46] <sm2n> You could even see your operating system swapping memory as a form of serialization
[23:43:05] <sm2n> and trust/deployment barriers, I guess
[23:43:11] <moon-child> you could, but that is different because there is a central mediator
[23:43:18] <qhong> it's non trivial problem how to organize the global address space. e.g. IPv4/memory-address is a pretty bad way
[23:43:23] <sm2n> it forces you to draw the "this is a different computer" line
[23:43:25] <moon-child> will you have a central mediator of distributed object allocations ?
[23:43:51] <sm2n> random uuids appear to work pretty well in practice
[23:44:12] *** Quits: rain3 (~rain3___@5-12-7-240.residential.rdsnet.ro) (Remote host closed the connection)
[23:44:13] <qhong> it's worse than memory-address for human consumption
[23:44:19] <sm2n> and there are other ideas like yggdrasil for dynamic negotiation
[23:44:25] <moon-child> sm2n: uuid is kinda irrelevant
[23:44:31] *** Joins: rain3 (~rain3___@2a02:2f09:d113:6d00:6f23:fba2:d834:1a7)
[23:44:31] <moon-child> given a uuid, how do you know what it represents?
[23:44:48] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10ae:adc1:b444:577f:22e3:730a) (Ping timeout: 268 seconds)
[23:46:00] *** masinter is now known as Masinterlisp
[23:46:00] <qhong> "it's non trivial problem how to organize the global address space" think about finding a global address space design comparing to uuid just like lisp comparing to asm
[23:46:36] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[23:47:40] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[23:47:43] <sm2n> moon-child: look it up in the dht
[23:48:13] <AeroNotix> this is why lisp isn't mainstream^
[23:48:40] <sm2n> AeroNotix: what is?
[23:49:50] <sm2n> and anyway I'm not saying UUID is an ideal design (it's not) but a large enough random identifier works as a proof of concept
[23:50:07] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:50:33] <qhong> sm2n: transport is easy, naming is hard
[23:50:50] <sm2n> qhong: what do you need to name? I don't follow
[23:51:08] <qhong> sm2n: every datum in the system
[23:51:16] <moon-child> qhong: names are metadata
[23:51:33] <sm2n> Why would I want that?
[23:51:34] <moon-child> in some contexts, a name may be a weak pointer, but it should not be a strong pointer
[23:51:44] <qhong> like, dns names is a better name than ipv4 than raw onion addresses
[23:51:50] <qhong> imagine not having dns
[23:52:00] <sm2n> dns sucks actually
[23:52:22] <sm2n> in a sane world we would be using pet names
[23:52:27] <qhong> or any NS
[23:52:39] <qhong> you're still not using random string to name things in a sane world
[23:52:48] <sm2n> yes, and?
[23:53:07] <qhong> how to name, then
[23:53:13] <qhong> that's the question
[23:53:53] <Masinterlisp> use URLs
[23:54:00] <sm2n> in a pet name system you have globally unique meaningless identifiers, and local meaningful identifiers, and a mapping from the latter to the former
[23:54:17] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 240 seconds)
[23:54:22] <sm2n> this is the best you can do apropos zooko's triangle
[23:54:41] <qhong> how is local identifiers assigned?
[23:54:49] <sm2n> however you want
[23:55:15] <qhong> the question is exactly how. having to manually assign each name doesn't sound ideal
[23:55:33] <qhong> like, as a first approximation, in CL one can use symbol to name things
[23:56:32] *** Joins: johnjaye (~pi@173.209.65.233)
[23:57:27] <Masinterlisp> with package-prefix::
[23:57:36] <sm2n> no, but names serve different purposes i.e I may name a server "my basement computer", and that has some meaning external of the computer system itself, and in general have to be assigned manually. On the other hand, if I have a function (lambda (x) ...) that I am too lazy to name, the system could just say that it's function #12312 on the local machine with code etc which is fine
[23:57:59] <sm2n> What do you actually want in terms of naming?
[23:58:57] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
