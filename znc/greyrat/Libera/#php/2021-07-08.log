[00:00:03] <__adrian> ^ yeah, all above advice assumes you control the target site and can set its policies
[00:00:15] <ash_worksi> I know I shouldn't be wasting anymore time on this, but why does this not print 'aa' in the result set? https://3v4l.org/KLXQN#v8.0.8
[00:01:28] <biberu> for the other end the directive is frame-ancestors: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors
[00:03:36] <biberu> (root page, worthwhile reading: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy)
[00:03:56] <ash_worksi> or a more simple example: https://3v4l.org/EHokQ#v8.0.8
[00:04:00] <ash_worksi> (slightly)
[00:06:35] <__adrian> ash_worksi: because "a" is index 0, not index 1
[00:07:11] <ash_worksi> I figured that was probably the case; in order to prevent this, do I need to pad the range?
[00:07:32] <__adrian> no, just subtract 1   $i = (($i - $r) / 26) -1;
[00:08:01] <__adrian> remember, there are only two hard problems in computer science  ;)
[00:08:15] <ash_worksi> I haven't heard that
[00:08:21] <__adrian> cache invalidation, naming things, and off-by-one errors
[00:10:05] <ash_worksi> oh
[00:10:10] <ash_worksi> I get it
[00:10:16] <ron1w> Thanks a lot !
[00:14:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[00:15:45] <ash_worksi> if i run a script with a defined error handler and a `while (true) {}` loop, does the handler get called when I kill the process?
[00:16:27] <ash_worksi> or am I thinking of something else?
[00:17:42] <AllenJB> No. You need to implement a signal handler for that - see https://www.php.net/manual/en/function.pcntl-signal.php and https://www.php.net/manual/en/pcntl.example.php
[00:20:00] <ash_worksi> oh, I am thinking of `register_shutdown_function`
[00:25:26] <ash_worksi> so would declare(ticks=2) call the tick handler every 2 tickable statements?
[00:26:30] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[00:26:37] <epolanski> hey all, got a question, does php have a module similar to node's http one I can use in production to parse incoming requests and sending responses?
[00:26:52] <AllenJB> I guess so. Note that I don't think that's actually required any more - see user notes regarding async signals, internals recently discussed deprecating declare ticks (but it's used for other purposes by some people)
[00:26:56] <epolanski> I've found this on php's docs but it says to not use it in production
[00:26:58] <epolanski> https://www.php.net/manual/en/features.commandline.webserver.php
[00:27:33] <epolanski> (I don't want to use any framework, just bare php to parse the request and send responses)
[00:27:46] <AllenJB> epolanski: The closest thing in core would be php-fpm. PHP (traditionally) runs differently to long running processes that serve multiple requires like node
[00:28:08] <AllenJB> There are projects which can do that tho - look at stuff based on ReactPHP and Swoole, for example.
[00:29:46] <epolanski> ok ReactPHP might do what I need
[00:30:05] <epolanski> could you explain me tho what did you mean with the previous message?
[00:31:21] <biberu> epolanski: why do you need to parse incoming requests yourself?
[00:31:38] <biberu> this might not be needed at all
[00:32:11] <epolanski> because I want to implement most I can manually?
[00:33:16] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Read error: Connection reset by peer)
[00:34:00] <biberu> epolanski: why? if you just want to generate a regular response PHP will have passed the request for you. if you're using it plain the data will be in the superglobals, a framework will probably have some request object to expose headers and parameters to you
[00:35:11] <biberu> s/passed/parsed/
[00:35:32] <epolanski> because I want to, I have done so on node.js, wrote everything without any framework or library and want to do so on php
[00:35:56] <epolanski> ofc I need some minimal http library
[00:36:12] <biberu> tools work differently, a hammer is not a screwdriver
[00:36:15] <epolanski> but other than that I'm fine parsing everything by hand
[00:36:21] <epolanski> and trying out stuff
[00:37:34] <biberu> this doesn't really map to how php is normally used
[00:37:54] *** Quits: magla (~gelignite@55d42021.access.ecotel.net) (Quit: Stay safe!)
[00:38:50] <biberu> how do you plan on running this? a long running server written in php?
[00:40:25] *** Quits: ron1w (~roni@207.248.198.186) (Quit: Leaving)
[00:41:07] <epolanski> I haven't thought about all of that
[00:41:30] <epolanski> was thinking I could dockerize and just put it on some vm
[00:43:02] <biberu> sure, but normally you'd have something like php-fpm that takes care of handing off incoming requests to scripts / your app
[00:44:05] <biberu> that uses fcgi, and your script wouldn't have to worry about parsing requests (the easy part), buffering, scheduling etc., it'd just respond to the given input when asked
[00:45:34] <biberu> if you want to handle all of that yourself you have a fair bit of work ahead of you, and you might want to consider if php is the right tool / language for writing something like that
[00:45:39] *** Quits: totenkoph (~scythe@gateway/tor-sasl/totenkoph) (Ping timeout: 244 seconds)
[00:49:00] <biberu> epolanski: if your actual objective here is to learn how to use php i'd advice you to work *with* it :)
[00:49:46] <epolanski> ok, let's do it differently
[00:51:31] <__adrian> "epolanski> because I want to" you can do what you want, but what you want is not what anyone here would likely recommend
[00:51:54] <__adrian> in particular,  php -S  **IS NOT AT ALL SUITABLE** for production use.
[00:52:12] <__adrian> that's not it's intent. it's for messing around, and very simple proofs of concept
[00:52:47] <__adrian> where "production" == "exposed to a public network"
[00:53:05] <biberu> meh, docker run your_poc ^^
[00:53:28] <__adrian> yeah, i don't find it useful at all, but that's the valid use case
[00:54:06] <biberu> i don't think i've even used it for that :)
[01:19:04] *** Quits: genom (~g@37.214.48.142) (Remote host closed the connection)
[01:27:12] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[01:53:29] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Ping timeout: 252 seconds)
[01:54:43] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[01:57:42] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[02:00:11] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 252 seconds)
[02:00:12] *** dlundgren_ is now known as dlundgren
[02:01:14] *** entuland_ is now known as entuland
[02:08:40] *** Joins: brickfat (~brickfat@user/brickfat)
[02:37:45] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[02:37:50] <NCS_One> hi
[02:42:50] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[02:43:32] <NCS_One> what is a good way to generate random alpha numeric strings? I need to generate a token, I was using a merhod that some times return '0': https://www.paste.org/118111
[02:51:57] <__adrian> for what purpose
[02:55:11] *** Quits: alcume (~alcume@35.16.60.213.dynamic.reverse-mundo-r.com) (Quit: You... don't have the Net Terminal Gene.)
[02:55:20] <Sammitch> !+random_bytes
[02:56:36] <__adrian> ^  "$token"  implies you don't want a simplistic function like that one
[02:57:21] <__adrian> (though, tip: you don't want that function at all, it's needlessly complex and provides a not-very-random result)
[02:57:40] <Sammitch> run it through an encoding function :P
[02:57:47] <Sammitch> wait what do you mean "not very random"?
[02:57:57] <NCS_One> __adrian: I need a unique token on some product, I send to the user a like like ths to cancel the product: `www.example.com/product/cancel/1-some_token`, 1 beeing the product id and some_token the token
[02:57:58] <__adrian> talking about their paste
[02:58:12] <Sammitch> ah
[02:58:12] <__adrian> NCS_One: "random" â‰  "unique"
[02:58:22] <__adrian> what's the point of your token?
[02:58:30] <__adrian> authentication/authorization?
[02:58:50] <NCS_One> soo that users can't guess how to cancel other products
[02:59:02] <__adrian> so, authentication/authorization?
[02:59:08] <NCS_One> this is done without any auth
[02:59:22] <__adrian> so, your token is a substitute for authentication/authorization?
[03:00:04] <__adrian> what you're describing _is_ auth  ;)
[03:00:19] <__adrian> you *absolutely do NOT* want to use the function you shared.
[03:00:28] <__adrian> use https://php.net/random_bytes
[03:00:32] <__adrian> then encode as desired
[03:01:07] <__adrian> if you choose a large enough token, it will be unlikely to collide. but if you want to be 100% sure, then you'd ened to store them.
[03:01:13] <__adrian> *need
[03:02:27] <NCS_One> not coliding is not a large requirement, since the `id` of the product will make it unique
[03:08:14] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[03:08:28] *** Joins: dibber (~altdev@c-73-14-187-235.hsd1.co.comcast.net)
[03:17:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:58] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:35:22] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[04:00:01] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:01:05] *** Quits: burrows (burrows@user/burrows) (Quit: Quitting)
[04:01:33] *** Joins: burrows (burrows@user/burrows)
[04:05:31] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[04:13:32] *** Quits: genomc (uid245282@id-245282.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:00:50] *** Joins: mtr (~mtr@136-24-229-190.cab.webpass.net)
[05:04:43] *** Joins: WishBoy (~WishBoy@user/wishboy)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:34:00] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:55:44] *** Joins: totenkoph (~scythe@gateway/tor-sasl/totenkoph)
[06:01:17] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[06:34:40] *** Quits: LuKaRo (~LuKaRo@p57b15697.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:37:56] *** Joins: LuKaRo_ (~LuKaRo@p200300dfa714f109fff23dec5b74458c.dip0.t-ipconnect.de)
[06:57:52] *** Quits: mtr (~mtr@136-24-229-190.cab.webpass.net) (Quit: Leaving...)
[07:17:29] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[07:20:02] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[07:35:26] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:46:48] *** Quits: sweb (~sweb@static.187.181.76.144.clients.your-server.de) (Quit: Leaving.)
[07:54:29] *** Joins: dlundgren_ (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[07:56:09] *** Quits: dlundgren (~dlundgren@utm1.ctic-inc.com) (Ping timeout: 265 seconds)
[07:56:09] *** dlundgren_ is now known as dlundgren
[08:01:12] *** Joins: dlundgren_ (~dlundgren@utm1.ctic-inc.com)
[08:03:46] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 240 seconds)
[08:03:46] *** dlundgren_ is now known as dlundgren
[08:22:41] *** Joins: Warped (~Warped@user/warped)
[08:29:39] *** Joins: Rockwood (~Rocky@user/rocky)
[08:40:10] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 240 seconds)
[08:41:05] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[08:48:13] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 246 seconds)
[08:52:42] *** Joins: genomc (uid245282@id-245282.stonehaven.irccloud.com)
[08:54:53] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[08:59:30] *** Joins: Rockwood (~Rocky@user/rocky)
[09:05:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[09:05:20] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:16:47] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[09:17:50] <ericlee> Hi, how to upload a big file in PHP? I'm using PUT method and seems PHP reads all data into memory first then write to the disk, so if I upload 10G data that will take 10G memory, so how can I upload file by chunks? thanks.
[09:40:01] *** Quits: dlundgren (~dlundgren@utm1.ctic-inc.com) (Quit: dlundgren)
[09:51:14] *** Joins: ayrus (~ayrus@user/ayrus)
[10:04:38] *** Joins: WarpedAI (~Warped@user/warped)
[10:07:29] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 252 seconds)
[10:12:55] *** Quits: dibber (~altdev@c-73-14-187-235.hsd1.co.comcast.net) (Ping timeout: 246 seconds)
[10:22:30] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 252 seconds)
[10:35:28] *** Joins: Skywise (~Skywise@user/skywise)
[10:35:36] <Skywise> how can i disable composer?
[10:35:49] <Viper-7> â€¢ericleeâ€¢ for PHP itself, it will only read the request body into a variable on first access. you can read it yourself with eg $fp = fopen('php://input', 'r'); while(!feof($fp)) { $line = fgets($fp); }
[10:36:11] <Viper-7> but usually the issue is getting your webserver to handle it progressively
[10:36:40] <ericlee> I did the same and the file is binary so I don't use fgets, but still it will read whole into memory
[10:37:18] <Skywise> a plugin for a cms i was installing just tried using it and i don't want that happening on my production systems
[10:38:05] <Viper-7> â€¢ericleeâ€¢ only on first use of a variable that needs the request body
[10:38:07] <Viper-7> eg $_POST
[10:38:16] <Viper-7> so, dont do that :P
[10:38:21] <ericlee> uh?
[10:38:49] <Viper-7> PHP defines variables like $HTTP_RAW_POST_DATA at runtime, on first use - not at startup
[10:38:59] <Viper-7> its only then that its forced to interpret the request body
[10:39:28] <Viper-7> so if php is reading the whole request body, you're doing something that needs information from it
[10:43:20] *** silverballz is now known as silverwhitefish
[10:46:11] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 256 seconds)
[10:53:14] <TinoDidriksen> Skywise, just don't have composer installed on the production system.
[10:54:20] <Skywise> thats the plan, but apparently plugins can bring their own copy
[10:55:11] <TinoDidriksen> What plugin is it? I would file a bug if something tries to use composer to install things.
[10:55:41] <Skywise> its the buddy boss platform for wordpress
[10:57:22] <TinoDidriksen> Oh, some silly paid thing. I guess you could just not copy composer when deploying.
[10:58:01] <Skywise> well something expecting it prolly won't work without it, so i can't use that plugin anymore
[11:02:26] <TinoDidriksen> I can't imagine it would expect to be able to execute the composer binary.
[11:02:43] <TinoDidriksen> Please make sure you're not confusing composer with the autoloader.
[11:03:30] *** Quits: seand (~seand@69.54.136.33) (Quit: Leaving)
[11:03:36] <Skywise> PHP Fatal error:  Composer detected issues in your platform:
[11:04:46] <TinoDidriksen> What issues?
[11:05:07] <Skywise> thats not really the issue
[11:06:20] <Skywise> the issue is how do i keep it from running at all
[11:13:41] <TinoDidriksen> Delete it.
[11:14:54] <TinoDidriksen> But that's not a composer tool error - it's an autoloader error.
[11:15:42] <TinoDidriksen> Skywise, that fatal error is usually simply library and version checks, not running the composer binary. It's the autoloader, which is fine.
[11:15:59] <TinoDidriksen> So yes the issue is really what issues?
[11:16:03] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[11:16:18] <TinoDidriksen> If the reported issues pertain to libraries, it's not a Composer problem.
[11:17:32] *** Joins: pycode (~pycode@2001:b07:5d28:551:c78b:bddf:d04e:46cf)
[11:20:48] <Skywise> ok, i see
[11:24:04] *** Joins: stenno (~stenno@user/stenno)
[11:44:22] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[12:06:42] *** Joins: Warped (~Warped@user/warped)
[12:09:13] *** Joins: dimi1947 (~dimi1947@2a02:1388:2089:c0f0:34d8:2d49:b35:66e7)
[12:09:32] *** Quits: WarpedAI (~Warped@user/warped) (Ping timeout: 258 seconds)
[12:14:09] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:14:27] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[12:14:57] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:27:51] <TML> ericlee: Browsers don't do chunked upload on PUT requests.
[12:28:01] <TML> ericlee: So the answer to your question is "stop using PUT"
[12:29:01] <TML> it's probably also worth noting that chunked upload isn't really a thing anymore in HTTP/2
[12:31:13] <TML> Don't get me wrong, I'm as salty about HTTP/2 as anyone on Earth, but the battle is over.
[12:36:08] <BadAdviceCat> TML, xD Why so salty? >.<
[12:36:54] <TML> we basically threw away the core principles of HTTP to satisfy Google, Facebook, and Cloudflare
[12:36:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[12:37:02] <BadAdviceCat> Ah, and HTTP/3 is on the way.
[12:38:03] <BadAdviceCat> Actually, http/3 is already here. I know cloudflare as it up and running.
[12:38:45] <BadAdviceCat> has*
[12:39:27] <TML> at least with HTTP/3 they stopped pretending and just wholesale adopted QUIC
[12:40:10] <TML> but the days of being able to emulate an HTTP user agent with netcat and a strong memory are gone
[12:40:12] <ayrus> Akamai is already using!
[12:45:59] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[12:46:17] <DevAntoine> memory_get_usage() returns an int in bytes. So if I want it in mebagytes I just divide it twice by 1024 right?
[12:46:34] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 240 seconds)
[12:46:49] <TinoDidriksen> Yes
[12:47:09] <TinoDidriksen> mebagytes is a great typo.
[12:49:11] <DevAntoine> ahah right
[12:49:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:54:12] <ayrus> DevAntoine: This function will serve will you in b, kb, mb, gb, tb, pb https://www.php.net/manual/en/function.memory-get-usage.php#96280
[13:04:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[13:14:39] <biberu> units wrong, uses error suppression (unsuccessfully), round instead of number_format, fails on values < 1 ...
[13:18:21] *** Joins: MICROburst1 (~Thunderbi@x4dbf288a.dyn.telefonica.de)
[13:20:46] *** elycin_ is now known as elycin
[13:20:46] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 272 seconds)
[13:20:46] *** Quits: MICROburst (~Thunderbi@x4dbfa479.dyn.telefonica.de) (Ping timeout: 258 seconds)
[13:20:46] *** MICROburst1 is now known as MICROburst
[13:30:51] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:39:54] *** Joins: MrTrick (uid181961@id-181961.highgate.irccloud.com)
[13:42:11] *** Joins: stenno (~stenno@user/stenno)
[13:47:31] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:48:49] *** Joins: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be)
[13:49:33] *** Joins: stenno (~stenno@user/stenno)
[14:05:11] <delboy1978uk> morning
[14:11:01] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[14:11:20] <DevAntoine> biberu: but still does he job for my needs :D
[14:11:27] <DevAntoine> ayrus: thanks
[14:21:47] *** Joins: entuland (~entuland@user/entuland)
[14:30:28] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[15:18:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 272 seconds)
[15:21:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:c78b:bddf:d04e:46cf) (Ping timeout: 252 seconds)
[15:27:40] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:29:37] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 258 seconds)
[15:30:29] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[15:33:48] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:35:24] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[15:36:31] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 258 seconds)
[15:49:38] *** Joins: stenno (~stenno@user/stenno)
[15:59:36] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 272 seconds)
[16:08:17] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:08:40] *** Parts: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) ()
[16:12:34] *** Quits: dimi1947 (~dimi1947@2a02:1388:2089:c0f0:34d8:2d49:b35:66e7) (Ping timeout: 240 seconds)
[16:16:32] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[16:34:11] *** Quits: ayrus (~ayrus@user/ayrus) (Quit: :q!)
[16:40:49] *** Joins: gefd (~gef@user/gefd)
[16:45:31] *** Joins: MCMiiic (~mcmic@63.120.199.77.rev.sfr.net)
[16:46:03] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Ping timeout: 268 seconds)
[16:46:40] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[16:48:18] *** DevAntoi_ is now known as DevAntoine_
[16:50:38] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 252 seconds)
[17:04:58] *** Duality is now known as Guest5276
[17:04:58] *** Quits: Guest5276 (~pi@82-197-207-54.dsl.cambrium.nl) (Killed (copper.libera.chat (Nickname regained by services)))
[17:18:44] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[17:23:24] *** Joins: stenno (~stenno@user/stenno)
[17:24:04] *** Quits: DevAntoine_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[17:24:38] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[17:25:53] *** Quits: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) (Quit: delboy1978uk)
[17:29:29] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:30:46] *** Quits: phlixi (~phlixi@ppp-46-244-173-22.dynamic.mnet-online.de) (Ping timeout: 246 seconds)
[17:30:58] *** Joins: phlixi_ (~phlixi@ppp-46-244-161-94.dynamic.mnet-online.de)
[17:55:18] *** Joins: delboy1978uk (~delboy197@d51a484d1.access.telenet.be)
[17:56:50] *** Joins: pycode (~pycode@2001:b07:5d28:551:6ec3:a669:57be:8f6e)
[18:08:31] *** Joins: phlixi (~phlixi@tmo-082-160.customers.d1-online.com)
[18:08:58] *** Quits: phlixi_ (~phlixi@ppp-46-244-161-94.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[18:18:33] *** Quits: phlixi (~phlixi@tmo-082-160.customers.d1-online.com) (Ping timeout: 268 seconds)
[18:18:39] *** Joins: phlixi_ (~phlixi@ppp-46-244-161-245.dynamic.mnet-online.de)
[18:26:01] *** Joins: brickfat (~brickfat@user/brickfat)
[18:26:10] *** Joins: lall- (~alek@2403:6200:88a2:63d4:39ca:d3f8:46de:e4ec)
[18:40:34] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[18:41:25] *** Quits: phlixi_ (~phlixi@ppp-46-244-161-245.dynamic.mnet-online.de) (Remote host closed the connection)
[18:42:37] *** Joins: stenno (~stenno@user/stenno)
[18:51:00] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[18:51:14] *** Quits: MCMiiic (~mcmic@63.120.199.77.rev.sfr.net) (Ping timeout: 272 seconds)
[18:51:16] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[19:03:32] *** Quits: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com) (Ping timeout: 252 seconds)
[19:05:48] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 272 seconds)
[19:10:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:12:25] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:19:41] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 252 seconds)
[19:22:58] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[19:23:25] *** Joins: magla (~gelignite@55d41815.access.ecotel.net)
[19:31:42] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[19:34:46] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[19:37:37] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[19:37:58] *** Quits: delboy1978uk (~delboy197@d51a484d1.access.telenet.be) (Quit: delboy1978uk)
[19:40:34] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 240 seconds)
[19:41:29] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:42:38] *** Joins: delboy1978uk (~delboy197@d51a484d1.access.telenet.be)
[19:45:30] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:51:29] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 255 seconds)
[19:52:07] *** Joins: Yume7z (~Yume7z@104.248.123.19)
[19:57:22] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[19:57:51] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:02:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[20:09:55] *** Joins: zerobeholder (~zerobehol@cpe-104-231-105-59.neo.res.rr.com)
[20:10:40] *** Joins: stenno (~stenno@user/stenno)
[20:13:11] *** Joins: DevAntoi_ (~DevAntoin@195.101.183.21)
[20:15:34] *** Joins: chao (~stenno@user/stenno)
[20:15:46] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 240 seconds)
[20:16:32] *** Quits: DevAntoi_ (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:17:01] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:17:16] *** stenno is now known as Guest4755
[20:17:16] *** Quits: Guest4755 (~stenno@user/stenno) (Killed (calcium.libera.chat (Nickname regained by services)))
[20:17:16] *** chao is now known as stenno
[20:18:25] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[20:18:46] *** Quits: pycode (~pycode@2001:b07:5d28:551:6ec3:a669:57be:8f6e) (Ping timeout: 246 seconds)
[20:21:38] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 255 seconds)
[20:25:35] *** Quits: magla (~gelignite@55d41815.access.ecotel.net) (Quit: Stay safe!)
[20:27:52] *** Quits: Phil-Work (~phil@62.3.100.20) (Ping timeout: 246 seconds)
[20:28:43] *** Parts: delboy1978uk (~delboy197@d51a484d1.access.telenet.be) ()
[20:32:25] *** Joins: Rockwood (~Rocky@user/rocky)
[20:33:00] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:33:58] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[20:36:56] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 255 seconds)
[20:37:00] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Client Quit)
[20:38:08] *** Rockwood_ is now known as Rockwood
[20:42:29] *** Joins: chao (~stenno@user/stenno)
[20:45:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[20:45:49] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[20:46:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:55:26] *** Joins: genom (~g@37.214.48.142)
[20:59:09] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 265 seconds)
[21:06:07] *** Joins: phlixi (~phlixi@ppp-46-244-162-78.dynamic.mnet-online.de)
[21:06:59] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[21:07:32] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 255 seconds)
[21:07:37] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[21:08:25] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Client Quit)
[21:08:55] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[21:27:34] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[21:29:30] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[21:32:13] *** Joins: chao (~stenno@user/stenno)
[21:41:01] *** Joins: s17 (~nobody@user/s17)
[21:43:07] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 246 seconds)
[21:46:13] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Remote host closed the connection)
[21:46:36] *** Joins: Akimb (~Akimb@78-58-31-17.static.zebra.lt)
[21:49:10] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[21:50:00] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Client Quit)
[21:53:49] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:54:16] *** Quits: Akimb (~Akimb@78-58-31-17.static.zebra.lt) (Ping timeout: 272 seconds)
[22:05:50] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[22:06:01] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[22:18:08] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:22:15] *** Joins: dlundgren_ (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net)
[22:23:10] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[22:24:50] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 252 seconds)
[22:24:50] *** dlundgren_ is now known as dlundgren
[22:34:18] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:35:47] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[22:40:28] *** Quits: phlixi (~phlixi@ppp-46-244-162-78.dynamic.mnet-online.de) (Remote host closed the connection)
[22:43:33] *** Quits: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:59:33] *** chao is now known as stenno
[23:17:55] *** Joins: fulldecent (~textual@2603:301d:2601:700:556a:d5a3:a46a:4bfa)
[23:21:41] *** Quits: dlundgren (~dlundgren@wsip-72-215-185-7.sb.sd.cox.net) (Ping timeout: 252 seconds)
[23:22:32] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[23:23:41] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[23:25:22] <lall-> dolph
[23:32:26] *** Joins: magla (~gelignite@55d41815.access.ecotel.net)
[23:32:58] *** Quits: LuKaRo_ (~LuKaRo@p200300dfa714f109fff23dec5b74458c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:37:01] *** Joins: LuKaRo (~LuKaRo@p200300dfa714f1881c4e96891ae58782.dip0.t-ipconnect.de)
[23:44:44] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[23:44:50] <NCS_One> hi
[23:45:56] <lall-> helo bud
[23:45:59] <NCS_One> any good articles you recommend about when to use/not use SPAs?
[23:46:44] <lall-> what's an SPA
[23:47:04] <NCS_One> Single Page App
[23:47:19] <lall-> what's that
[23:48:03] <ss23> This channel more focuses on PHP, so I don't think anyone here is going to have any insight into that kind of topic sorry, NCS_One
[23:48:45] <lall-> what's single page app
[23:49:00] <NCS_One> ss23: SPAs can have a PHP backend
[23:49:53] <lall-> can't they have bash backend too? :/
[23:50:33] <ss23> NCS_One: I know
[23:50:38] <ss23> My statement still stands :P
[23:51:02] <lall-> if i google spa i get top 10 massage parlors.
[23:51:36] <NCS_One> lall-: https://www.netsolutions.com/insights/single-page-application/
[23:53:59] <lall-> landing page?
[23:54:45] <lall-> "A SPA application is a single page that continuously interacts with the user by dynamically rewriting the current page rather than loading entire new pages from a server. Trello, Facebook, Gmail, and Twitter are a few single page app examples." they mean websocket eh?
[23:55:23] <NCS_One> no
[23:55:38] <NCS_One> can be ajax requests
[23:56:32] <lall-> there's no pros and cons of any method inherently. the pros and cons depend on your use case
[23:57:43] <lall-> are there cons to ajax requests? sure. the zealots that run around cursing JS
[23:58:28] <__adrian> NCS_One: if you have an spa with a php backend and you have a question about the php part of it, that's fine
[23:58:48] <__adrian> but the "spa" part of it, like ss23 says, is not on topic here
[23:59:23] <__adrian> i will compare a "traditional" php website with one that's just a nice api, though. that's nice.
[23:59:58] <lall-> i heard good things are happening in the spa.
