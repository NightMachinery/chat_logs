[00:01:05] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[00:02:29] <nomagno> Linux kernel guidelines... I probably messed it up didn't I
[00:02:50] <Kit> constxd: you havent seen nothing yet, wait until you cee libqb
[00:04:31] <CoderCharmander> nomagno: You forgot to indent the body of the functions
[00:04:54] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:06:16] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
[00:06:31] *** Joins: puke (~puke@user/puke)
[00:06:41] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[00:06:50] <nomagno> Fair
[00:07:51] *** Quits: g2anj_ (~v@39.112.227.198) (Ping timeout: 268 seconds)
[00:09:39] *** Joins: g2anj_ (~v@58.228.230.4)
[00:11:13] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:12:12] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:14:13] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[00:20:21] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[00:21:05] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 250 seconds)
[00:25:32] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[00:27:01] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[00:28:02] *** Quits: inomoz (~inomoz@85.26.235.86) (Ping timeout: 240 seconds)
[00:28:41] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[00:28:53] *** Quits: rahl (~rahl@102.114.178.137) (Quit: leaving)
[00:29:49] *** Joins: rahl (~rahl@102.114.178.137)
[00:34:07] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 265 seconds)
[00:34:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:35:26] *** Quits: Akuli (~Akuli@82-203-166-217.bb.dnainternet.fi) (Quit: Akuli)
[00:35:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:35:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[00:37:45] *** Joins: Viewday11 (~Viewday@user/viewday)
[00:38:42] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:41:09] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[00:41:46] *** Joins: rgrinberg (~textual@187.223.209.106)
[00:41:51] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:42:16] *** Joins: inomoz (~inomoz@85.26.235.152)
[00:42:21] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:45:24] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:46:02] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:46:20] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:48:02] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:53:01] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[00:53:15] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[00:53:23] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f0cf:5664:8ee5:8e87) (Ping timeout: 250 seconds)
[00:53:26] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:54:37] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[00:55:59] *** Quits: mahmutov (~mahmutov@37.155.36.178) (Ping timeout: 250 seconds)
[00:58:31] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[00:58:50] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Client Quit)
[01:03:48] *** Joins: PortableDave (~portabled@118.210.56.9)
[01:08:09] *** Joins: alien_lappy (~alien@user/alien)
[01:08:17] <alien_lappy> so, i have a simple xor.c file, but, given 2 files of 4096 bytes, the end result is 4097 bytes...?
[01:08:27] *** Quits: Guest57 (~Guest57@2001:8f8:1363:3fe5:6570:ff2d:302d:6c29) (Quit: Client closed)
[01:08:31] <alien_lappy> can anyone take a look as to why this would be?: https://pastebin.com/ZdKM9va7
[01:08:45] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 250 seconds)
[01:08:59] *** Quits: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[01:10:58] *** Joins: hiroshi_ (~freedom@151.43.61.106)
[01:12:11] <supakeen> How are you counting the end result since you're writing to stdout.
[01:12:48] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[01:13:02] <twkm> the length issue is due to misuse of feof.
[01:13:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:16:57] <twkm> coupled with the lack of error checking means the last text and key bytes are reused.
[01:17:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:17:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:17:07] *** Joins: wroathe (~wroathe@user/wroathe)
[01:20:38] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[01:20:41] *** nun- is now known as nun
[01:20:52] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[01:22:29] *** Joins: pulse (~pulse@user/pulse)
[01:23:49] *** Joins: Lyude (~lyudess@pool-98-118-105-43.bstnma.ftas.verizon.net)
[01:27:04] <kaichiuchu> question
[01:27:05] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 256 seconds)
[01:27:06] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[01:27:11] <kaichiuchu> how safe is it to type pun in ANSI C
[01:27:48] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[01:28:18] *** Quits: hiroshi_ (~freedom@151.43.61.106) (Quit: hiroshi_)
[01:28:22] *** Joins: arinov (~arinov@213.194.126.155)
[01:29:12] *** Joins: AmR (~AmREiSa@156.207.199.106)
[01:31:23] *** Quits: HardWall (~NeckLek@89.137.113.39) (Ping timeout: 252 seconds)
[01:33:30] <nomagno> Very likely to result in an error
[01:33:33] *** Joins: stonkey (~stonkey@user/stonkey)
[01:33:44] <nomagno> Unless you typedef or #define the thing
[01:34:05] <kaichiuchu> sure
[01:34:13] <nomagno> #define pun return -1;
[01:34:14] <nomagno> :)
[01:34:23] <kaichiuchu> :)
[01:34:24] <nomagno> very unsafe
[01:35:07] <twkm> typedef won't "fix" anything.
[01:35:34] <nomagno> twkm: typedef int pun;
[01:35:41] <kaichiuchu> in C11, it's no biggie, anonymous structs/unions make life easy
[01:35:47] <nomagno> then "pun mypun;"
[01:35:52] <nomagno> Would not fail
[01:36:02] <nomagno> Else, it would
[01:36:19] <nomagno> Oh wait, type pun is not typing "pun"?
[01:36:25] <nomagno> OMFG I am very dummy
[01:36:37] <kaichiuchu> um
[01:36:42] <kaichiuchu> I meant `type punning`
[01:36:54] <kaichiuchu> :p
[01:37:01] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[01:38:31] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:38:53] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (Ping timeout: 265 seconds)
[01:39:18] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[01:40:37] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:45:24] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[01:46:37] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[01:47:04] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:47:26] <twkm> can be fine.  can explode.  all depends on the types involved.
[01:49:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[01:49:08] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:50:22] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:983b:b61c:3042:240b) (Quit: This computer has gone to sleep)
[01:50:57] *** Joins: Xatenev (~xatenev@ip4d14bcfc.dynamic.kabel-deutschland.de)
[01:51:49] <kaichiuchu> uint8_t and uint16_t
[01:52:10] <kaichiuchu> which aren't ANSI but basically assume unsigned char and unsigned short
[01:52:25] *** Quits: Xatenev (~xatenev@ip4d14bcfc.dynamic.kabel-deutschland.de) (Client Quit)
[01:53:39] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:53:42] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:54:34] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[01:56:29] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[01:57:44] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[01:58:31] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[01:58:49] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[01:59:04] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:01:21] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[02:04:06] <sham1> Is there any specific reason for you to use ANSI c or is the codebase just not updated
[02:04:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[02:04:48] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[02:06:23] <kaichiuchu> it's more or less an experiment into older ancient compilers
[02:06:53] <kaichiuchu> purely academic in nature, if this were a normal project (e.g. C99) it'd be no problem
[02:06:54] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[02:08:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:09:12] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[02:09:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com)
[02:12:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:14:02] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[02:16:29] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[02:21:22] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[02:21:43] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[02:22:15] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:22:37] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[02:23:11] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[02:23:32] *** Joins: inlight (~inlight@157.35.23.138)
[02:23:32] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[02:23:32] *** Joins: inlight (~inlight@user/inlight)
[02:23:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:24:45] <veltas> I don't understand kaichiuchu, it seems just as safe/unsafe as in other releases of the standard?
[02:25:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:26:26] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[02:26:36] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 245 seconds)
[02:27:13] *** Quits: samir_ (~azureuser@user/samir) (Ping timeout: 268 seconds)
[02:27:22] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[02:28:25] <veltas> If we're talking historically, older C compilers would probably let you type pun with few caveats
[02:28:34] <kaichiuchu> veltas: i understand how silly it seems to ask, but I didn't know if there was any differences between type punning in C99 vs ANSI
[02:28:57] <veltas> Maybe there are, I'm afraid I don't know
[02:29:19] <kaichiuchu> well, fortunately I have a windows 98 VM spun up so we're about to find out :')
[02:30:12] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Remote host closed the connection)
[02:31:22] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:31:34] *** Joins: humky (~humky@user/humky)
[02:31:41] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:33:16] *** Quits: monkey_ (~user@181.114.17.106) (Read error: Connection reset by peer)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.83)
[02:34:01] *** Quits: pizdets (~pizdets@183.182.114.96) (Ping timeout: 268 seconds)
[02:35:43] <NRK[m]> you can just read the standard 
[02:35:47] <NRK[m]> its like 200 pages
[02:35:55] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[02:36:15] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[02:36:38] <NRK[m]> and that's including standard library i think.
[02:41:55] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 250 seconds)
[02:42:34] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[02:43:47] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:44:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:44:19] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:44:42] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:45:35] *** Joins: dutch (~DutchIngr@user/dutch)
[02:46:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:48:01] *** Joins: samir_ (~azureuser@user/samir)
[02:51:48] *** Joins: manjaroi3 (~manjaro-i@125.131.114.50)
[02:53:09] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[02:53:58] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:56:02] *** Quits: samir_ (~azureuser@user/samir) (Ping timeout: 240 seconds)
[02:57:33] *** Joins: wingsorc__ (~wingsorc@user/wingsorc)
[02:57:34] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[02:58:07] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Read error: Connection reset by peer)
[02:59:42] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[03:00:20] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[03:01:02] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:05:07] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[03:05:22] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[03:09:50] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::49) (Quit: Leaving)
[03:12:43] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: later i.a.)
[03:14:05] *** Joins: ferdna (~ferdna@user/ferdna)
[03:14:08] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[03:14:19] <nomagno> Yes very short indeed
[03:16:35] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[03:16:38] *** Joins: samir_ (~azureuser@user/samir)
[03:17:48] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Ping timeout: 268 seconds)
[03:17:53] *** Joins: zat (~zat@191.23.60.220)
[03:20:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:20:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:20:55] *** Quits: Kev_ (~Kev@2a01cb0400149f00417072b907469552.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[03:21:34] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:02] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[03:22:13] *** Quits: alch (~alch@151.36.81.85) (Read error: Connection reset by peer)
[03:24:41] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[03:25:03] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[03:26:39] *** Joins: alch (~alch@151.38.49.212)
[03:28:21] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[03:29:00] *** Joins: AsenMx (~AsenMx@user/asenmx)
[03:32:07] *** Quits: gelignite (~gelignite@55d41c14.access.ecotel.net) (Quit: Stay safe!)
[03:32:19] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[03:32:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[03:33:21] *** Joins: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net)
[03:34:30] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[03:35:48] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[03:36:03] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[03:36:26] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:38:06] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:44:29] *** Quits: inomoz (~inomoz@85.26.235.152) (Ping timeout: 252 seconds)
[03:45:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:47:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:48:45] *** Joins: Wulf (~Wulf@user/wulf)
[03:51:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:52:59] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:53:33] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:6957:2fc:86e5:29f6)
[03:54:29] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:57:29] *** Joins: inomoz (~inomoz@85.26.164.235)
[03:57:49] *** Quits: zat (~zat@191.23.60.220) (Ping timeout: 256 seconds)
[04:00:25] *** Joins: Torr (~Torr@user/torr)
[04:00:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:05:20] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[04:08:09] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[04:09:28] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[04:11:04] *** Joins: emacs_pprentice_ (~wingsorc@user/wingsorc)
[04:11:10] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:297c:42b:53ca:ec88)
[04:12:17] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[04:12:47] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:13:18] *** Quits: emacs_pprentice_ (~wingsorc@user/wingsorc) (Client Quit)
[04:13:32] *** Quits: wingsorc__ (~wingsorc@user/wingsorc) (Ping timeout: 240 seconds)
[04:13:51] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[04:14:47] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:15:39] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:15:58] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[04:16:53] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[04:17:54] *** Quits: random-nick (~random-ni@87.116.181.93) (Ping timeout: 265 seconds)
[04:19:41] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[04:21:20] *** Joins: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97)
[04:22:01] *** Quits: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net) (Ping timeout: 250 seconds)
[04:23:08] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[04:23:42] *** Joins: zat (~zat@191.23.60.220)
[04:25:02] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 240 seconds)
[04:28:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:29:11] *** Quits: manjaroi3 (~manjaro-i@125.131.114.50) (Ping timeout: 250 seconds)
[04:29:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:29:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:30:54] *** Joins: zalt (~zalt@user/zalt)
[04:36:16] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[04:41:23] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[04:42:17] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[04:43:16] *** Joins: constxd (~brad@142.134.38.68)
[04:43:45] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:44:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:44:31] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:6957:2fc:86e5:29f6) (Quit: Leaving)
[04:45:02] *** Quits: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net) (Quit: Leaving)
[04:48:32] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:297c:42b:53ca:ec88) (Ping timeout: 240 seconds)
[04:51:38] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:52:17] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:32] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:55:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:55:32] *** Joins: wroathe (~wroathe@user/wroathe)
[04:58:39] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[05:00:26] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[05:00:58] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[05:02:49] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[05:02:53] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:80ee:faa6:7302:e610)
[05:03:39] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[05:04:11] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[05:04:22] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[05:04:37] *** Quits: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97) (Quit: ZZZzzz…)
[05:05:00] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[05:06:27] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 250 seconds)
[05:06:37] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 252 seconds)
[05:06:40] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Client Quit)
[05:07:12] *** Joins: soul-d (~uknown@user/soul-d)
[05:07:18] *** Quits: Kit (~u0_a391@2600:380:bc45:adef:2d0a:ca53:86:94ce) (Ping timeout: 260 seconds)
[05:08:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:08:32] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[05:08:59] *** Quits: paulo (paulo@user/paulo/x-9032687) (Quit: ZNC 1.8.2 - https://znc.in)
[05:09:31] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-35ba-b7a0-d966-f0ce.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:10:39] *** Quits: inomoz (~inomoz@85.26.164.235) (Ping timeout: 252 seconds)
[05:13:58] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 265 seconds)
[05:15:46] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[05:15:53] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:19:12] *** u0_a391 is now known as Kit
[05:23:48] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[05:29:03] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[05:29:09] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:33:03] *** Joins: zalt (~zalt@user/zalt)
[05:34:19] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[05:35:29] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[05:37:25] *** Quits: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[05:37:38] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[05:38:06] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[05:38:18] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[05:38:24] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[05:42:00] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: ZNC - https://znc.in)
[05:42:26] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[05:43:53] *** Guest9894 is now known as luca0N
[05:44:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-243a-73f6-37f2-3aa4.res6.spectrum.com)
[05:45:46] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[05:47:11] <caze> You only need to read the one or two paragraphs that contain the information.
[05:47:45] *** Quits: elroo (~elroo@45.133.4.112) (Ping timeout: 256 seconds)
[05:48:19] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 256 seconds)
[05:48:44] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[05:50:39] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:51:09] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[05:53:04] *** Joins: paulo (paulo@user/paulo/x-9032687)
[05:53:08] *** Joins: Guest64873 (~bot@172-220-180-248.res.spectrum.com)
[05:54:33] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[05:54:37] *** Quits: Guest64873 (~bot@172-220-180-248.res.spectrum.com) (Read error: Connection reset by peer)
[05:55:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:56:20] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59)
[05:56:29] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-243a-73f6-37f2-3aa4.res6.spectrum.com) (Remote host closed the connection)
[05:57:28] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 265 seconds)
[06:00:34] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:00:42] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:03:07] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:04:11] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 252 seconds)
[06:04:42] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[06:05:22] *** Joins: ferdna (~ferdna@user/ferdna)
[06:05:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:06:42] *** Joins: aliosablack (~chomwitt@94.66.63.187)
[06:07:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:07:53] *** Joins: zalt (~zalt@user/zalt)
[06:08:06] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[06:08:23] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:08:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[06:08:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:12:27] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 265 seconds)
[06:21:19] *** Joins: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97)
[06:23:43] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[06:25:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[06:25:30] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:25:57] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:26:38] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 260 seconds)
[06:26:46] *** scoobydoob is now known as scoobydoo
[06:27:02] *** Joins: peve (~peve@86.106.143.71)
[06:27:12] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:28:56] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Quit: -a- Connection Timed Out)
[06:29:09] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[06:30:22] *** Joins: zalt (~zalt@user/zalt)
[06:30:22] *** Joins: Jong (~Jong@2620:10d:c090:400::5:3f74)
[06:30:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Client Quit)
[06:30:40] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[06:30:49] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:31:32] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:33:39] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:56] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:37:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:39:42] *** Quits: zat (~zat@191.23.60.220) (Ping timeout: 260 seconds)
[06:40:53] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: The Lounge - https://thelounge.chat)
[06:41:38] *** Joins: zat (~zat@191.23.60.220)
[06:43:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[06:45:24] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[06:45:45] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:47:32] *** Joins: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f)
[06:48:41] *** Quits: IsaiahG (~Isaiah6@69.59.80.251) (Ping timeout: 268 seconds)
[06:54:31] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:02] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:56:18] *** Quits: zat (~zat@191.23.60.220) (Remote host closed the connection)
[06:56:40] *** Joins: zat (~zat@191.23.60.220)
[06:59:09] *** Quits: peve (~peve@86.106.143.71) (Ping timeout: 256 seconds)
[07:00:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:01:52] *** Quits: zat (~zat@191.23.60.220) (Remote host closed the connection)
[07:02:10] *** vinleod is now known as vdamewood
[07:02:15] *** Joins: zat (~zat@191.23.60.220)
[07:03:31] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[07:07:24] *** Joins: peve (~peve@193.27.13.214)
[07:07:49] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[07:09:55] *** Quits: newchair (~newchair@d-204-195-168-15.paw.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[07:10:05] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[07:13:46] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[07:14:02] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[07:14:11] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Client Quit)
[07:16:43] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 256 seconds)
[07:18:40] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:21:52] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:21:58] *** Quits: alch (~alch@151.38.49.212) (Read error: Connection reset by peer)
[07:25:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:26:58] *** Joins: alch (~alch@151.38.91.95)
[07:27:07] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[07:27:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:27:43] *** Quits: zat (~zat@191.23.60.220) (Ping timeout: 250 seconds)
[07:28:45] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[07:29:31] *** Joins: coruja (~coruja@user/coruja)
[07:31:41] *** Joins: elf_ (~elf@87.116.176.103)
[07:33:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:34:18] *** Quits: Kit (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com) (Ping timeout: 260 seconds)
[07:35:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[07:36:00] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:22] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:36:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:31] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:38:03] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 252 seconds)
[07:44:51] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:1575:eb22:8f7f:3e9c)
[07:44:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[07:45:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:48:17] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[07:49:54] *** Quits: elf_ (~elf@87.116.176.103) (Quit: mom came to hes room)
[07:52:35] *** Joins: zalt (~zalt@user/zalt)
[07:54:06] *** Joins: paulo (paulo@user/paulo/x-9032687)
[07:57:07] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 252 seconds)
[08:00:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:00:55] *** Quits: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com) (Ping timeout: 256 seconds)
[08:02:46] *** Joins: bliminse (~bliminse@host86-186-4-210.range86-186.btcentralplus.com)
[08:07:18] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:07:57] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[08:08:33] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[08:08:51] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 252 seconds)
[08:08:58] *** scoobydoob is now known as scoobydoo
[08:08:59] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:10:33] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Ping timeout: 256 seconds)
[08:11:02] <randy408[m]> any reason to use c11 threads over posix where both are available?
[08:11:49] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:13:22] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[08:13:26] *** Joins: kdc (~kdc@196.211.197.159)
[08:14:00] <rcf> In practice, no. 
[08:18:27] *** Joins: frost (~frost@user/frost)
[08:22:58] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[08:25:16] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[08:29:40] *** Joins: soapsudsxx (~soapsudsx@141.193.188.130)
[08:32:22] *** Joins: Atque (~Atque@user/atque)
[08:32:41] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[08:38:10] *** Quits: moog (~moog@107.126.53.25) (Remote host closed the connection)
[08:41:30] *** Quits: alicef_ (~none@gentoo/developer/alicef) (Quit: install gentoo)
[08:42:15] *** Joins: alicef (~none@gentoo/developer/alicef)
[08:42:17] <V-T60> Hi. Why should I use declare and define (initialize) extern variable?
[08:42:35] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[08:42:39] * V-T60 is going to check if it will count all statements with this variable from another files
[08:43:25] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[08:44:16] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[08:45:27] <dave0> V-T60: normally if it's used by multiple different files, you declare it extern
[08:45:42] <dave0> and stick it in a header, which each file #include's
[08:47:21] <dave0> the reason is that you must declare something before you use it, but you must only define things once
[08:47:47] <dave0> putting declarations in header files is a way to achieve that, and it's considered good practise
[08:48:42] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[08:48:55] *** Joins: alicef (~none@gentoo/developer/alicef)
[08:52:29] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:52:46] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:53:36] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[08:54:03] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[08:56:28] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[08:56:44] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[08:57:54] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:1575:eb22:8f7f:3e9c) (Quit: Leaving)
[08:59:47] *** Quits: soapsudsxx (~soapsudsx@141.193.188.130) (Ping timeout: 250 seconds)
[08:59:52] <V-T60> https://yewtu.be/watch?v=1Dkfmf4PmvQ 10:44
[08:59:54] <candide> Title of V-T60's link: Variable Modifiers − Auto & Extern - Invidious
[09:00:17] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:01:02] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:01:02] <V-T60> dave0: I will research it. That's where I saw this, just wondering if such initialization has any sense here
[09:01:25] <dave0> auto exists in c but afaik it doesn't do anything
[09:01:34] <dave0> maybe something in c++ uses auto
[09:02:07] <munkis> is if(x>0 &&arr[x-1]) undefined?
[09:02:30] *** Joins: sharkee (~SharkB0lz@82-64-161-82.subs.proxad.net)
[09:02:30] *** Quits: sharkee (~SharkB0lz@82-64-161-82.subs.proxad.net) (Remote host closed the connection)
[09:02:49] <dave0> as long as x-1 is less than the size of arr it's fine
[09:02:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[09:03:16] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:03:51] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:04:02] <munkis> so if x<=0 x>0 will be evaluated before arr[x-1], thanks
[09:05:16] <dave0> yep it's called short circuit evaluation
[09:05:26] <hohohoroutines> ,cc extern size_t a; if (a < 0) abort();
[09:05:29] <candide> hohohoroutines: [warning: comparison of unsigned expression in '< 0' is always false [-Wtype-limits]]  Success (no output).
[09:05:55] <hohohoroutines> checking for a <= 0 is a bit weirder
[09:06:13] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[09:06:38] <dave0> not sure how the robot did that
[09:06:52] <dave0> a was declared but not defined
[09:06:55] *** Joins: X-Scale (~ARM@31.22.202.86)
[09:06:57] <hohohoroutines> but if you use size_t for your array indices then arr[iarr] is well defined if iarr < number_of_yarrs
[09:07:27] <dave0> ,cc extern size_t a; printf("%zu ", a);
[09:07:29] <candide> dave0: /usr/bin/ld:  in function 'main':  undefined reference to 'a'
[09:07:50] <hohohoroutines> dave0: yours is a linker error
[09:08:03] <dave0> ,cc extern size_t a; if(a > 0) printf("something");
[09:08:05] <candide> dave0: Same output.
[09:08:12] <dave0> ,cc extern size_t a; if(a < 0) printf("something else");
[09:08:14] <candide> dave0: [warning: comparison of unsigned expression in '< 0' is always false [-Wtype-limits]]  Success (no output).
[09:08:20] <dave0> bug-o-compiler
[09:08:30] <hohohoroutines> no
[09:08:34] <hohohoroutines> it's doing a good
[09:08:42] <hohohoroutines> ,cc extern size_t a; if(a >= 0) printf("something");
[09:08:45] <candide> hohohoroutines: [warning: comparison of unsigned expression in '>= 0' is always true [-Wtype-limits]] something
[09:09:09] *** Joins: alicef_ (~none@gentoo/developer/alicef)
[09:09:18] <hohohoroutines> the compiler elides the conditional because it's always true, and the linker is like yeah we're all good here because a is never needed
[09:09:28] <hohohoroutines> not a bug
[09:10:05] <dave0> too smart compiler = smart ass compiler
[09:11:01] *** Quits: alicef (~none@gentoo/developer/alicef) (Read error: Connection reset by peer)
[09:11:08] <hohohoroutines> it's like a spider. rather surprising in many circumstances, but not a bug
[09:11:58] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:13:06] <dave0> hides a bug
[09:13:29] <hohohoroutines> what bug
[09:13:45] <hohohoroutines> spiders hide bugs in their tummies as they are eating them
[09:13:48] <hohohoroutines> the bugs aren't there anymore
[09:14:03] <dave0> programmer bug .. programmer forgot to define a
[09:14:24] <hohohoroutines> no they did
[09:14:26] <hohohoroutines> they just didn't link it
[09:15:10] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:15:16] <hohohoroutines> the purpose of using extern in the above example is to show that even if the value of a cannot be known at compile time, it doesn't matter
[09:16:49] *** Joins: alicef (~none@gentoo/developer/alicef)
[09:16:54] <dave0> it should matter, the compiler shouldn't surprise me
[09:17:44] <hohohoroutines> well it would be more surprising if there were values of size_t a for which a < 0
[09:17:50] <dave0> the warning is misleading in that instead of saying a undefined, you get a different and pointless warning
[09:18:50] <hohohoroutines> no, the warning is saying, hey punchclock, did you forget how to even make it look like you were writing useful code
[09:19:05] *** Quits: alicef_ (~none@gentoo/developer/alicef) (Ping timeout: 250 seconds)
[09:19:23] <dave0> if you change a to an int, you get spooky action at a distance
[09:19:24] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[09:19:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:19:37] <dave0> ,cc extern int a; if(a < 0) abort();
[09:19:39] <candide> dave0: /usr/bin/ld:  in function 'main':  undefined reference to 'a'
[09:19:51] <hohohoroutines> there are no surprises here
[09:19:58] <dave0> it's the same bug
[09:20:12] <hohohoroutines> no
[09:21:58] <smallville7123> in the C preprocessor how is a macro function's parameters expanded?
[09:22:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:23:05] <cehteh> what do you mean by 'how'
[09:23:33] <hohohoroutines> little demonds do it
[09:24:07] <cehteh> except for implementation details and some oddities you can almost exactly expect them to be just textual replacement
[09:24:09] *** Joins: pflanze_ (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[09:24:14] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:26:01] <dave0> hohohoroutines: i don't write lines of code for the compiler to throw away.. each line is more important than the last..
[09:26:12] <dave0> no, as important
[09:26:13] *** Quits: alicef (~none@gentoo/developer/alicef) (Ping timeout: 250 seconds)
[09:26:32] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:b247:dfc0:cca:1a0e) (Ping timeout: 240 seconds)
[09:27:00] *** Joins: alicef (~none@gentoo/developer/alicef)
[09:27:02] <smallville7123> hmmm
[09:28:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:30:36] *** Joins: alicef_ (~none@gentoo/developer/alicef)
[09:30:46] *** Quits: alicef_ (~none@gentoo/developer/alicef) (Remote host closed the connection)
[09:31:24] *** Quits: begriffs (~begriffs@user/begriffs) (Quit: Leaving)
[09:32:22] *** Quits: alicef (~none@gentoo/developer/alicef) (Ping timeout: 260 seconds)
[09:32:52] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:35:08] *** Joins: crankslider (~slidercra@user/slidercrank)
[09:40:36] *** Joins: constxd (~brad@142.134.38.68)
[09:51:04] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[09:51:33] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:53:39] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:8dfe:32e5:5846:3aa2)
[09:54:32] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 240 seconds)
[09:57:30] *** Quits: peve (~peve@193.27.13.214) (Quit: Leaving)
[09:58:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[09:59:08] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:59:55] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[10:00:21] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[10:01:40] *** Joins: j-james (~apropos@dhcp-206-87-158-169.ubcsecure.wireless.ubc.ca)
[10:02:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:04:44] *** Quits: j-james (~apropos@dhcp-206-87-158-169.ubcsecure.wireless.ubc.ca) (Client Quit)
[10:06:21] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:08:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[10:08:52] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:09:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:12:35] *** Joins: nicko (~iClass@222.211.30.64)
[10:17:09] *** Joins: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu)
[10:21:38] *** Joins: zalt (~zalt@user/zalt)
[10:21:43] *** Quits: moose (~moose@user/moose) (Quit: System has requested shutdown for maintenance.)
[10:22:51] *** Quits: gco (~gco@2601:647:5a00:223:d43:da93:1361:da97) (Quit: ZZZzzz…)
[10:25:31] *** Joins: Rounin (~david@84.212.130.215)
[10:25:59] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 252 seconds)
[10:28:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:28:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:29:55] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:33:43] *** Joins: moose (~moose@user/moose)
[10:34:12] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:34:55] *** Quits: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net) (Ping timeout: 250 seconds)
[10:38:45] *** Joins: |darc| (darc@23-112-65-16.lightspeed.nworla.sbcglobal.net)
[10:39:07] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: restarting..)
[10:39:13] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:46:02] *** crankslider is now known as slidercrank
[10:46:06] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[10:48:39] *** Quits: et09 (~et09@user/et09) (Ping timeout: 256 seconds)
[10:51:31] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[10:52:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:53:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:53:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[10:55:16] *** Quits: Itaru (~Itaru@ro2.flokinet.is) (Remote host closed the connection)
[10:55:22] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 268 seconds)
[10:59:09] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:59:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[11:00:02] *** Quits: nicko (~iClass@222.211.30.64) (Quit: Konversation terminated!)
[11:00:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[11:00:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:03:48] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:04:29] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[11:04:58] *** Joins: dansan (~daniel@75.81.148.51)
[11:05:07] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[11:05:59] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[11:06:46] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[11:09:15] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:10:03] *** Joins: Ecophobia (~Ecophobia@mobile-access-bcee72-89.dhcp.inet.fi)
[11:10:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:11:24] *** Quits: malloy (~jimery@116.30.222.36) (Read error: Connection reset by peer)
[11:11:35] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[11:11:53] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[11:12:14] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[11:14:07] *** Joins: mrig (~AdiIRC@user/mrig)
[11:14:43] *** Joins: yulung (~yulung@211-21-14-99.hinet-ip.hinet.net)
[11:15:36] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[11:17:16] *** Joins: malloy (~jimery@116.30.221.255)
[11:18:09] *** Joins: majors_ (~majors@user/majors)
[11:19:09] *** Quits: majors (~majors@user/majors) (Ping timeout: 252 seconds)
[11:19:33] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 250 seconds)
[11:19:50] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[11:20:23] *** Quits: logann2019 (~logann201@185.red-88-21-139.staticip.rima-tde.net) (Read error: Connection reset by peer)
[11:20:56] *** Quits: Ecophobia (~Ecophobia@mobile-access-bcee72-89.dhcp.inet.fi) (Quit: WeeChat 2.8)
[11:21:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:22:04] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[11:22:57] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[11:23:36] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[11:23:47] *** Quits: rahl (~rahl@102.114.178.137) (Ping timeout: 256 seconds)
[11:23:51] *** yulung is now known as ppt
[11:24:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:24:21] *** Quits: alch (~alch@151.38.91.95) (Ping timeout: 256 seconds)
[11:25:41] *** Joins: rahl (~rahl@102.114.205.237)
[11:26:20] *** Joins: alch (~alch@151.36.79.173)
[11:27:45] *** houze_ is now known as houze
[11:28:11] *** Joins: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com)
[11:28:45] *** ppt is now known as yulung
[11:29:09] *** Quits: Enitin (~Enitin@82.102.22.85) (Read error: Connection reset by peer)
[11:29:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:30:02] *** Quits: PortableDave (~portabled@118.210.56.9) (Ping timeout: 240 seconds)
[11:30:30] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[11:31:29] *** yulung is now known as ppt
[11:31:42] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[11:32:10] *** ppt is now known as yulung
[11:32:16] *** yulung is now known as ppt
[11:32:30] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[11:33:55] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:36:07] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[11:39:19] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:40:00] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:43:18] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2)
[11:43:18] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b4e0:3e21:5ab4:62c2) (Changing host)
[11:43:18] *** Joins: skapata (~Skapata@user/skapata)
[11:44:19] *** Joins: aradesh (~aradesh@user/aradesh)
[11:44:40] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:45:55] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:8dfe:32e5:5846:3aa2) (Ping timeout: 252 seconds)
[11:46:55] *** Quits: kuoi (~kuoi@109.175.166.59) (Quit: kuoi)
[11:46:56] *** Joins: arinov (~arinov@213.194.126.155)
[11:50:57] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:54:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[11:54:45] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:55:17] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[11:57:10] *** Joins: Klinda (~superleag@user/klinda)
[12:00:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:01:48] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[12:03:47] *** Joins: lleo (~leo@89-200-9-93.mobile.kpn.net)
[12:04:04] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[12:06:46] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:07:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[12:09:39] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[12:09:49] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59) (Read error: Connection reset by peer)
[12:10:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:11:40] *** Quits: rgrinberg (~textual@2806:101e:7:6946:a169:dd6b:ff9a:4d8f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:32] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[12:16:00] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59)
[12:18:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:24:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[12:27:37] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[12:28:22] *** Joins: seninha (~seninha@user/seninha)
[12:31:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:33:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:34:16] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:97e3:fe41:4b9:ac74)
[12:35:11] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[12:35:17] *** Joins: joedoe47_ (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[12:38:28] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[12:41:36] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:43:37] *** Joins: inomoz (~inomoz@85.26.165.145)
[12:47:56] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[12:47:59] *** Joins: Windshield (~Windshiel@120.18.114.81)
[12:48:25] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[12:51:46] <Windshield> HELO
[12:53:10] <Windshield> Can you help me with this codelet : Uint8 *pixline = surface->pixels + y*surface->pitch;    I mean, what is "->" operation?
[12:53:18] <dave0> i spy sdl
[12:53:29] <Windshield> :)
[12:53:56] <dave0> Windshield: a->b is shortcut for (*a).b  ... it refers to an element of a struct, which you have a pointer to
[12:54:08] <Windshield> ok
[12:54:18] <dave0> Windshield: i guess it was so common to have pointer-to-struct that they made an operator for it
[12:54:33] <Windshield> Thankyou. I did look it up, but couldn't see it (under bitwise operators) 
[12:54:44] <Windshield> right
[12:55:03] <dave0> no worries
[12:55:22] *** Joins: AlbertoGP (~AlbertoGP@p57a9a6c8.dip0.t-ipconnect.de)
[12:55:27] <Windshield> I love it, thankyou
[12:55:30] <Windshield> bye
[12:55:31] *** Joins: AlbertoGP2 (~AlbertoGP@p57a9a6c8.dip0.t-ipconnect.de)
[12:55:33] *** Parts: Windshield (~Windshiel@120.18.114.81) (Leaving)
[12:55:35] <dave0> byes wingsorc 
[12:55:38] <dave0> oops
[12:55:50] <dave0> sorry for the ping
[12:55:57] <Red> the wonders of nick autocompletion
[12:57:27] <dave0> they were only here for 4 minutes... how great it would be if everyone did that ;-)
[12:58:42] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:58:54] *** Quits: AlbertoGP (~AlbertoGP@p57a9a6c8.dip0.t-ipconnect.de) (Client Quit)
[12:58:54] *** Quits: AlbertoGP2 (~AlbertoGP@p57a9a6c8.dip0.t-ipconnect.de) (Client Quit)
[12:58:55] *** Joins: mrig (~AdiIRC@user/mrig)
[12:59:12] *** Joins: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net)
[13:00:23] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[13:00:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[13:02:54] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[13:02:57] *** Quits: ppt (~yulung@211-21-14-99.hinet-ip.hinet.net) (Ping timeout: 256 seconds)
[13:04:22] *** Joins: off^ (~off@wsip-98-188-240-142.mc.at.cox.net)
[13:04:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[13:04:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:05:32] *** Joins: stonkey (~stonkey@user/stonkey)
[13:06:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:06:32] *** Joins: inlight (~inlight@157.35.20.222)
[13:06:32] *** Quits: inlight (~inlight@157.35.20.222) (Changing host)
[13:06:32] *** Joins: inlight (~inlight@user/inlight)
[13:06:34] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[13:07:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:11:18] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:45] *** Joins: untitled (untitled@sadistto.net)
[13:15:34] <untitled> Hi. I have a little question about ARM assembly: I am seeing lots of "strb w22 [sp, #xxxx]" lines (60+ lines in a row, w22 register stays the same) and can't understand what they mean. Any ideas?
[13:21:32] <untitled> can it be zeroing of lots of variables or an array?
[13:23:16] *** Joins: Windshield (~Windshiel@120.18.114.81)
[13:23:20] <river> yes the str functions do that kind of thing
[13:23:25] <river> instructions*
[13:23:30] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:24:17] <Windshield> I am t5rying to splice two codes, one which outputs a png to a png file, and one which renders a brief study of the Mandelbrot Set. I've started joining them here https://bpa.st/HDBQ 
[13:24:21] <river> https://www.keil.com/support/man/docs/armasm/armasm_dom1361289906890.htm
[13:24:22] <candide> Title of river's link: Assembler User Guide: STR (immediate offset)
[13:24:35] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 268 seconds)
[13:25:04] <Windshield> You will note that the code does not compile, nor do I expect it to, I need help converting from one pixel format (the png pixel) to the SDL pixel format
[13:26:06] <river> Windshield: not the other way around?
[13:26:49] <Windshield> hehe. I think you're right. I need to print images of the Mandelbrot study in png format
[13:27:09] <Windshield> The object of the exercise is : 
[13:27:32] *** Joins: slavfox (~slavfox@93.158.232.111)
[13:27:48] <Windshield> To write a cgi which produces a background image from Mandelbrot Set algorithm,
[13:28:13] <river> delete lines 168 169
[13:28:24] <river> pixel->red = and pixel->green = 
[13:28:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:28:43] <Windshield> I would like to apply it to a larger project which may be a maze-like html output
[13:29:14] <river> then you can use your mandelbrot code, but set both pixline AND pixel->red,green,blue
[13:29:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:29:45] <river> so just copy 147 to 163 into your mandelbrot main, before the loop
[13:30:03] <river> do pixel_t * pixel = pixel_at (& fruit, x, y); and color the pixel in the loop
[13:30:05] <river> and then save at the end
[13:30:21] <river> at first keep the SDL code around, so you have something that both displays it and saves it
[13:30:26] <river> then you can delete the SDL parts later
[13:30:39] <Windshield> sounds very good 
[13:30:53] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:33:08] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[13:33:54] <Windshield> thankyou very much
[13:34:12] <river> gl
[13:34:27] *** Quits: Jong (~Jong@2620:10d:c090:400::5:3f74) (Ping timeout: 252 seconds)
[13:35:30] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[13:35:41] *** Joins: zalt (~zalt@user/zalt)
[13:35:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:38:40] *** Joins: ppt (~yulung@211-21-14-99.hinet-ip.hinet.net)
[13:40:08] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 252 seconds)
[13:40:51] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:41:21] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[13:41:52] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:42:43] *** Parts: untitled (untitled@sadistto.net) ()
[13:42:44] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:44:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:45:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[13:46:26] *** Joins: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net)
[13:47:07] *** Quits: Bob_Esponja (~Bob_Espon@240.red-176-83-54.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[13:47:09] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:47:30] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[13:47:37] *** Lord_of_Life_ is now known as Lord_of_Life
[13:48:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[13:49:19] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[13:49:32] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:50:33] *** Joins: constxd (~brad@142.134.38.68)
[13:50:36] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[13:55:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[13:57:45] *** Joins: ko (~i.am@user/marlboro)
[13:58:13] *** Joins: earnestly (~earnest@user/earnestly)
[13:58:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:03:54] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:06:02] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[14:06:30] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: No route to host)
[14:07:30] *** Quits: lleo (~leo@89-200-9-93.mobile.kpn.net) (Quit: beyond time space in laws)
[14:10:52] <Windshield> Cool man. The lord of life is in openbsd
[14:13:03] *** Quits: bonbon_ (~bonbon@user/bonbon) (Quit: leaving)
[14:14:47] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:21:33] *** Quits: reset (~reset@user/reset) (Quit: reset)
[14:25:33] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[14:26:29] *** Joins: Zenton (~user@user/zenton)
[14:28:29] * river thinking
[14:30:03] *** Joins: fwg (~fwg@user/fwg)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:36] *** Quits: fwg (~fwg@user/fwg) (Client Quit)
[14:30:57] *** Joins: csrf (~csrf@user/csrf)
[14:31:04] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:39:10] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:44:18] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[14:44:27] *** Joins: random-nick (~random-ni@87.116.167.143)
[14:44:58] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[14:45:16] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:46:39] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:49:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:54:51] *** Joins: graywolf (~wolf@user/graywolf)
[14:57:00] <markand> OpenBSD has clean code but unsuitable for desktop
[14:57:06] *** Joins: pulse (~pulse@user/pulse)
[14:59:25] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[15:00:16] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[15:00:50] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[15:14:43] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[15:16:54] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[15:17:18] *** Joins: Smilex (~ian@D47097B7.rev.sefiber.dk)
[15:17:48] *** Joins: anton (anton@user/anton)
[15:18:16] <Smilex> I think I might need a different set of eyes to look at this - https://pastebin.com/hC1JbynK - the "assert(c->next)" fails sometimes, and looking at this code snippet, is that possible without a memory leak?
[15:20:58] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[15:21:04] *** Quits: highrate (~presonic@111-22-237-24.gci.net) ()
[15:22:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:22:59] *** Quits: alch (~alch@151.36.79.173) (Read error: Connection reset by peer)
[15:26:48] *** Joins: alch (~alch@151.38.4.235)
[15:28:43] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[15:29:37] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[15:29:52] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[15:30:20] <dave0> Smilex: this code is a bit weird... are you malloc'ing a struct client, or whatever type c->next is?
[15:33:05] *** Joins: zat (~zat@191.23.60.220)
[15:33:07] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 265 seconds)
[15:34:16] <Smilex> brb
[15:34:18] *** Quits: Smilex (~ian@D47097B7.rev.sefiber.dk) (Quit: WeeChat 2.3)
[15:34:39] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[15:34:55] *** Joins: Smilex (~ian@D47097B7.rev.sefiber.dk)
[15:35:15] <Smilex> dave0: Yes!
[15:35:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:35:36] <Smilex> I'm making a pet window manager, so a client is a window with a frame
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:50] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[15:37:05] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[15:38:54] <dave0> Smilex: https://termbin.com/alr2
[15:40:50] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[15:41:18] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Read error: Connection reset by peer)
[15:43:05] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[15:43:11] <Smilex> I don't see how this will change anything, but at this point I'm desperate for a solution, so I'll try it
[15:43:31] *** Joins: Jong (~Jong@2620:10d:c090:400::5:3f74)
[15:44:29] <Smilex> thanks
[15:45:00] <Smilex> I'm not able to reliably recreate this issue, so I don't know when I can say it worked
[15:45:05] *** Joins: u0_a391 (~u0_a391@2600:380:bc5f:f68d:f6b0:760b:913:5b12)
[15:48:06] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[15:48:30] *** Quits: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 260 seconds)
[15:48:53] *** Joins: Achylles (~Achylles_@2804:431:d725:5f74:726:267b:60a8:3cf6)
[15:49:36] *** u0_a391 is now known as Kit
[15:50:16] *** Joins: constxd (~brad@142.134.38.68)
[15:50:27] *** Joins: inlight (~inlight@157.35.20.222)
[15:50:27] *** Quits: inlight (~inlight@157.35.20.222) (Changing host)
[15:50:27] *** Joins: inlight (~inlight@user/inlight)
[15:50:42] <dave0> i just changed your code to allocate a struct client and link it to your list
[15:51:02] <dave0> if what you pasted isn't actual code, you're not gonna get much from it
[15:51:27] <Smilex> it was code, and I replaced it with your solution (which is easier to read)
[15:51:35] <Smilex> but now my WM freezes, which makes no sense
[15:51:43] <Smilex> I don't think I changed anything else...
[15:52:40] <dave0> but it wasn't working before either
[15:52:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:53:20] <Smilex> It wasn't freezing, but I think you helped me discover another bug :D
[15:53:36] <dave0> ah i see how  sizeof(*c->next)   could still work
[15:54:33] <Smilex> I need to paste more code, so brb
[15:54:35] *** Quits: Smilex (~ian@D47097B7.rev.sefiber.dk) (Quit: WeeChat 2.3)
[15:55:50] *** Quits: constxd (~brad@142.134.38.68) (Quit: WeeChat 3.0.1)
[15:57:11] *** Joins: Smilex (~ian@D47097B7.rev.sefiber.dk)
[15:59:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:59:50] <Smilex> My head is tired so this might be very stupid, but this is the freeing code, and I've put in a comment that indicates where there's an infinite loop - https://pastebin.com/q9R1EMYY
[16:00:41] <Smilex> the clients are linked in a serial kind of way, so I'm thinking the top of the free client code does the right thing
[16:00:48] <Smilex> but I might not be seeing something obvious
[16:01:15] <Smilex> dave0: this code worked before I made your changes, which is what I meant by you exposing a bug :D
[16:02:57] <tk> Smilex: probably not related to your infinite loop (which sounds like a bug in the part of the code which inserts into your linked list) but you set c->prev->next if c->prev is set but you never set c->next->prev if c->next is set
[16:03:05] *** Joins: zalt (~zalt@user/zalt)
[16:03:29] <tk> and that means you have a use-after-free
[16:03:48] <tk> the next time you call free_client on a client which is right after a client which was just freed
[16:04:41] <tk> in general though, I would suggest for the sake of sanity in maintaining a doubly-linked-list, maybe completely link it and loop over it by checking if you've reached the beginning again
[16:05:11] <tk> although..., no, actually it won't be too hard to fix this, never mind
[16:05:22] <tk> if (c->next) c->next->prev = c->prev;
[16:05:59] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[16:06:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 265 seconds)
[16:06:36] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:06:47] *** Quits: Achylles (~Achylles_@2804:431:d725:5f74:726:267b:60a8:3cf6) (Remote host closed the connection)
[16:07:50] <Smilex> tk: thanks!
[16:08:40] <Smilex> that probably fixes something :D but I don't see how it fixes my infinite loop
[16:09:10] *** Joins: libc (~weechat@user/tessio)
[16:09:38] <Smilex> brb, gonna switch weechat to tty again so I can test the WM
[16:09:41] *** Quits: Smilex (~ian@D47097B7.rev.sefiber.dk) (Quit: WeeChat 2.3)
[16:09:44] <libc> hi im trying to compile with meson but i get an error
[16:09:48] <libc> Run-time dependency girara-gtk3 found: NO (tried pkgconfig and cmake)
[16:10:03] <libc> even though i downloaded teh girara library and compiled it succesfully
[16:10:16] *** Joins: Smilex (~ian@D47097B7.rev.sefiber.dk)
[16:11:03] <libc> however pkgconf --list-all show no girara-gtk3 (even though there is the file in /usr/local/lib64)
[16:11:55] <libc> any idea ?
[16:12:23] *** Quits: Windshield (~Windshiel@120.18.114.81) (Remote host closed the connection)
[16:14:48] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:16:01] <earnestly> libc: PKG_CONFIG_LIBDIR likely needs to include that path
[16:16:26] <earnestly> (Or the SYSROOT one depending on what you're doing)
[16:17:03] <libc> earnestly: according to the location of the other modules its' already there
[16:17:25] <libc> oh, sorry it's not
[16:17:35] <libc> got confused between /usr/lib64 and /usr/local/lib64
[16:17:47] <libc> earnestly: thanks
[16:17:59] *** Joins: mrig (~mrig@user/mrig)
[16:18:01] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:18:06] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[16:19:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:21:01] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[16:22:58] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[16:26:05] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[16:26:15] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:26:27] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[16:27:04] *** Joins: zalt_ (~zalt@user/zalt)
[16:27:32] *** Joins: larry87 (~quassel@c-73-6-106-85.hsd1.tx.comcast.net)
[16:29:35] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 250 seconds)
[16:29:46] *** zalt_ is now known as zalt
[16:29:58] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:31:33] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 250 seconds)
[16:32:15] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Client Quit)
[16:32:30] *** Quits: CoderCharmander (~CoderChar@54032703.catv.pool.telekom.hu) (Quit: Switching clients)
[16:32:49] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:33:09] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:33:18] *** Quits: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Remote host closed the connection)
[16:37:49] *** Joins: pulse (~pulse@user/pulse)
[16:38:36] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[16:38:45] *** Joins: moose` (~moose@user/moose)
[16:39:03] *** Joins: constxd (~brad@192.75.101.164)
[16:39:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:44:34] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[16:46:50] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[16:48:12] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[16:49:18] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[16:50:46] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:50:56] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[16:51:08] *** Joins: nuxil (~nuxil@141.195.51.213)
[16:52:16] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:52:39] *** Joins: nuxil (~nuxil@141.195.51.213)
[16:53:32] *** Quits: iomari891 (~iomari891@197.210.52.156) (Ping timeout: 240 seconds)
[16:53:46] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:54:00] *** Joins: nuxil (~nuxil@141.195.51.213)
[16:55:16] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:55:46] *** Joins: nuxil (~nuxil@141.195.51.213)
[16:56:41] *** Quits: zat (~zat@191.23.60.220) (Ping timeout: 250 seconds)
[16:57:46] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[16:58:03] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:58:42] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:58:57] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[16:59:23] *** Joins: dcreator (~kjell@208.92-221-37.customer.lyse.net)
[17:00:16] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:97e3:fe41:4b9:ac74) (Quit: Leaving)
[17:00:55] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:03:00] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[17:04:28] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[17:05:14] *** Joins: moose`` (~moose@user/moose)
[17:05:22] *** Quits: moose` (~moose@user/moose) (Read error: Connection reset by peer)
[17:05:28] *** Joins: jailop (jailop@gateway/vpn/protonvpn/jailop)
[17:07:30] *** Joins: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it)
[17:07:30] *** Quits: emanuele6 (~emanuele6@net-93-71-98-153.cust.vodafonedsl.it) (Changing host)
[17:07:30] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[17:07:31] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:07:53] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[17:07:53] *** Joins: inlight (~inlight@157.42.246.30)
[17:07:53] *** Quits: inlight (~inlight@157.42.246.30) (Changing host)
[17:07:53] *** Joins: inlight (~inlight@user/inlight)
[17:07:59] *** Joins: zat (~zat@191.23.60.220)
[17:08:02] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:08:02] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:1b9c:d4d6:c8fb:c24f) (Remote host closed the connection)
[17:09:31] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[17:11:48] *** Joins: superboot (~agentgasm@user/superboot)
[17:12:30] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[17:14:53] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:16:15] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[17:18:54] *** Joins: dutch (~DutchIngr@user/dutch)
[17:23:33] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[17:24:26] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[17:25:14] *** Joins: zalt (~zalt@user/zalt)
[17:25:32] *** Quits: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[17:26:06] *** Joins: pulsar12 (~pulsar12@95.172.181.187)
[17:26:48] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:27:41] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[17:30:59] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:31:37] *** Joins: kurahaupo_ (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[17:31:48] *** Quits: kurahaupo (~kurahaupo@pa49-195-67-63.pa.nsw.optusnet.com.au) (Killed (NickServ (GHOST command used by kurahaupo_!~kurahaupo@203-194-51-46.static.tpgi.com.au)))
[17:31:54] *** kurahaupo_ is now known as kurahaupo
[17:32:58] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:33:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:34:49] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:34:54] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[17:34:57] *** Quits: jailop (jailop@gateway/vpn/protonvpn/jailop) (Ping timeout: 256 seconds)
[17:36:34] *** Joins: jailop (jailop@gateway/vpn/protonvpn/jailop)
[17:36:36] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[17:37:18] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[17:38:02] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[17:39:15] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[17:40:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[17:41:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:41:30] <pulsar12> im trying to compile file that includes some kernel libs, but have lots of errors even by just having a empty main(). https://pastebin.com/3BNHQmtK. Can you help me in right direction? I suspect I need also to tell gcc about libraries or the implementation of some kernel libs, but not sure the easiest way.
[17:42:41] <trenka> pulsar12: they are not supposed to be included from userspace
[17:43:53] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:44:35] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:46:31] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[17:46:41] <pingpongball> so here are some old developers, expreience c++ , c developers
[17:46:56] <pingpongball> have you made any software for linux that is very popular?
[17:47:23] *** Quits: jailop (jailop@gateway/vpn/protonvpn/jailop) (Ping timeout: 250 seconds)
[17:47:41] <CoderCharmander> pulsar12: What are you trying to achieve? For a kernel module, you should use a completely different build process, for a user mode program you have to include user mode headers.
[17:48:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:48:29] <pingpongball> Give me a good tutorial where i can master building gtk linux apps?
[17:48:53] <river> https://docs.gtk.org/gtk4/getting_started.html
[17:49:03] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:49:05] <pingpongball> :)
[17:49:13] *** Joins: jailop (~jailop@ool-944bb915.dyn.optonline.net)
[17:51:01] <pingpongball> river   should i use glade or gnome-builder ?
[17:51:10] <pulsar12> CoderCharmander, my objective is to test a behavior of a funcion that's  inside aes.c (aes_expandkey). so i wanted to copy that function and compile it separately to user-space , call it with some input and observe the output. aes_expandkey depends on some definitions and types , I guess I could search for that code and copy to my new file, but
[17:51:10] <pulsar12> though it might be easier if there is a way to resolve the dependencies automatically
[17:51:17] <river> I am not sure pingpongball, I would start with plain C 
[17:51:28] <river> probably glade later
[17:51:45] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:51:49] <pingpongball> ammmm thanks ,
[17:51:49] <pingpongball> do you think i can learn and build things, i'm kind of dumb
[17:51:54] <pingpongball> using gtk
[17:51:56] <pingpongball> 4
[17:52:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:53:22] <river> yes
[17:53:27] <river> you need to be dumb to program in C
[17:53:58] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[17:54:41] <CoderCharmander> pulsar12: You can compile the kernel, then run it with QEMU. That might be a bit overkill but will definitely work.
[17:55:31] <trenka> pulsar12: there is no automatic way
[17:55:35] <CoderCharmander> I don't think there is a way to automatically resolve the dependencies, you can try to do it manually though
[17:56:16] <pulsar12> ok, understood thanks!
[17:57:08] <trenka> pulsar12: you can try to compile .o inside kernel then link it providing all missing symbols
[17:57:45] <pingpongball> pulsar12 what are you trying to do?
[17:57:50] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[17:57:55] <pingpongball> and reason ?
[17:57:56] <trenka> pingpongball: unit testing
[17:58:02] <trenka> pingpongball: above
[17:58:05] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:58:10] <pingpongball> on kernel , linux kernel
[18:00:02] <pulsar12> gtg now, i may come back later with more questions
[18:00:19] *** Quits: pulsar12 (~pulsar12@95.172.181.187) (Quit: Client closed)
[18:00:27] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[18:00:58] <trenka> in the kernel there is selftesting framework. Sort of
[18:01:16] *** Joins: gonogo (~gonogo@167.88.62.87)
[18:01:32] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:04:21] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[18:05:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:05:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:05:01] *** Joins: wroathe (~wroathe@user/wroathe)
[18:07:37] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 252 seconds)
[18:08:01] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[18:10:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:10:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:11:07] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:11:29] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[18:11:34] *** Joins: zalt (~zalt@user/zalt)
[18:12:01] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:15:14] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[18:15:21] <pingpongball> ok guys tell me
[18:15:38] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[18:15:45] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:16:03] <pingpongball> what is most cflag that is heavily important if i want to make strict optimization for strict high performance
[18:16:12] <pingpongball> like that -0fast and other
[18:16:13] <pingpongball> tell me
[18:16:14] <Kit> -Ofast -native
[18:16:27] *** Joins: shivesh (~shivesh@user/shivesh)
[18:16:51] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 250 seconds)
[18:17:14] <Kit> you could also do unroll loops but i forgot which flag that was
[18:17:16] <GyrosGeier> wasn't that -march=native ?
[18:17:23] <pingpongball> Thank you any more,
[18:17:26] <GyrosGeier> -funroll-loops
[18:17:31] <pingpongball> like what is --fomit-frame-pointer
[18:17:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:17:53] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[18:17:57] <GyrosGeier> there is also -ffast-math, which drops IEEE754 compliance and instead uses whatever the CPU has to offer
[18:18:08] <pingpongball> yes yes :)
[18:18:09] <pingpongball> :)
[18:18:11] <pingpongball> tell me more
[18:18:23] <GyrosGeier> -fomit-frame-pointer makes debugging harder, but saves a few cycles on function entry/exit
[18:18:28] *** Joins: et09 (~et09@user/et09)
[18:18:38] <pingpongball> I'm compiling emacs , i want to make optimize as much as possible for fastness
[18:18:43] <GyrosGeier> not worth it unless you nest non-inline functions deeply
[18:18:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:18:56] *** Joins: magla (~gelignite@55d4970c.access.ecotel.net)
[18:19:14] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[18:19:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:20:31] <pragma-> imagine forgetting -funroll-loops
[18:20:45] <pragma-> only one of the most entertainingly named flags
[18:21:37] *** Quits: fputs (~fputs@67.59.83.166) (Quit: The Lounge - https://thelounge.chat)
[18:22:34] <pingpongball> guys
[18:22:39] <pingpongball> please tell me more
[18:22:46] <pingpongball> I dont care breaking, i just need fastness
[18:22:56] <pingpongball> `CFLAGS="-Ofast pipe -march=native -fomit-frame-pointer"`
[18:23:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:23:07] <pingpongball> any other flag recommendation, i can put anything please
[18:23:08] <pingpongball> :)
[18:23:17] <pragma-> It's not going to go very fast if it's broken.
[18:23:34] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[18:23:37] *** Joins: fputs (~fputs@67.59.83.166)
[18:23:43] <pingpongball> i'll try again, but at first i want fast,
[18:23:45] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 252 seconds)
[18:23:52] <pingpongball> any other
[18:23:54] <pingpongball> thank you
[18:24:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:25:35] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[18:25:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:26:09] <hohohoroutines> don't compile other peoples' code with -Ofast / -ffast-math unless they are ok with it (if they're not, they should refactor their floating point math so that they are, but don't assume they have)
[18:27:33] <pingpongball> why hohohoroutines
[18:27:57] <pingpongball> i wantt fast , more optimization so
[18:28:01] <pragma-> Because broken code does not work.
[18:28:04] *** Joins: System_Error (~SystemErr@user/systemerror)
[18:28:20] <pingpongball> i'll not include it if in next time doesnt works
[18:28:26] <pingpongball> tell me more pleaseeee
[18:28:33] *** Quits: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (Ping timeout: 250 seconds)
[18:28:36] *** Quits: hpyc9 (~yc9@2600:3c03:e000:297:af:af:af:3) (Ping timeout: 268 seconds)
[18:29:03] *** Joins: meator (~meator@user/meator)
[18:29:11] <hohohoroutines> pingpongball: it relaxes the requirement that floating point math follow strict ieee 754 behaviour
[18:29:36] <hohohoroutines> this can make it go MUCH faster but can also break code that expects strict ieee
[18:29:54] <pingpongball> yes yes , i'm fine if break code, if it breaks i'll not use it next time
[18:30:09] <hohohoroutines> for an editor, speeding up fp math is not likely to be noticeable or worth it
[18:30:31] *** Joins: nvmd (~nvmd@user/nvmd)
[18:30:39] <hohohoroutines> pingpongball: the point is YOU won't know if you broke it by using those options
[18:31:07] <pingpongball> does it broke entire system or just only emacs
[18:31:12] <pingpongball> if just emacs, i'm fine i'll recompile it
[18:31:13] <pingpongball> :)
[18:31:26] <pingpongball> I've gathered this
[18:31:29] <GyrosGeier> writing floating point code that can deal with a broken environment is annoying
[18:31:31] <pingpongball> `CFLAGS="-Ofast pipe -funroll-all-loops  -march=native -fomit-frame-pointer"`
[18:31:36] <GyrosGeier> and Intel is broken
[18:31:39] *** Joins: moog (~moog@107.126.53.121)
[18:31:43] <pingpongball> i want more   ;(
[18:31:59] <pragma-> pingpongball: -W -Wall
[18:32:14] <pingpongball> :]  wall is it
[18:32:19] *** Joins: Teckla (~Teckla@user/teckla)
[18:32:22] <pingpongball> i cant find on https://wiki.gentoo.org/wiki/GCC_optimization
[18:32:53] <pingpongball> funswitch-loops vs funroll
[18:33:04] <pingpongball> which makes code more optimized? guys
[18:33:21] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:33:21] <GyrosGeier> depends on the code
[18:33:29] <NRK[m]> more optimizations enabled doesn't always mean faster binary
[18:33:33] <pingpongball> can i use both
[18:33:54] <GyrosGeier> this is an optimization problem -- we're moving towards the nearest optimum, which is likely to be a local optimum
[18:34:23] <pingpongball> i think i'll compile now , is it ok guys
[18:34:36] <pingpongball> `CFLAGS="-Ofast pipe -funroll-all-loops -funswitch-loops  -march=native -fomit-frame-pointer"`
[18:34:41] <pingpongball> :)
[18:34:43] <NRK[m]> if you want to play around with aggressive compiler flags then take a look into the GentooLTO repo
[18:34:49] <hohohoroutines> oh for fucks sake
[18:34:57] <pragma-> for the fastest code, you should compile when your system clock is a power of 2
[18:35:11] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:35:11] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:35:11] *** Joins: wroathe (~wroathe@user/wroathe)
[18:35:12] <hohohoroutines> you can't go around compiling other peoples' code with whatever cflags you want
[18:35:22] <NRK[m]> u can :)
[18:35:39] <NRK[m]> that's the power of open sores
[18:35:47] <constxd> make sure you use -fwhole-program -flto -fprofile-generate
[18:35:49] *** Quits: jailop (~jailop@ool-944bb915.dyn.optonline.net) (Ping timeout: 265 seconds)
[18:35:59] <pingpongball> pragma-  "clock is a power of 2" tell me more about it?
[18:36:03] <pingpongball> How can i put it in gcc flag
[18:36:04] <hohohoroutines> if you attempt to compile your libc itself with -Ofast it should either detect that and error out during compilation, or it and every application will be horribly brolen
[18:36:26] <NRK[m]> pingpongball https://github.com/InBetweenNames/gentooLTO
[18:36:40] <pingpongball> constxd  "fwhole-program -flto -fprofile-generate" what does these does
[18:36:55] <constxd> they instruct the compiler to produce a based binary
[18:36:58] <hohohoroutines> is gentoo still encouraging this sort of thing? this was already a bad joke ten years ago
[18:37:11] <pragma-> ,sh date
[18:37:12] <candide> pragma-: Wed Dec 15 07:07:11 AM PST 2021
[18:37:16] <pragma-> ,sh date +%s
[18:37:17] <candide> pragma-: 1639580836
[18:37:18] <NRK[m]> no, they don't
[18:37:18] <hohohoroutines> fifteen years ago
[18:37:26] <constxd> ,sh sdate
[18:37:27] <candide> constxd: prog.sh: line 1: sdate: command not found
[18:37:30] <NRK[m]> but ppl still do it anyways
[18:37:30] <constxd> sad!
[18:37:37] <constxd> many such cases!
[18:37:56] <pingpongball> constxd  , thanks i added "-fwhole-program -flto -fprofile-generate"
[18:38:00] <pragma-> pingpongball: when date +%s is a power of 2 the universe is perfectly aligned to generate the perfect codes
[18:38:01] <NRK[m]> the wiki explicitly tells you not to do this type of shit hohohoroutines
[18:38:04] <constxd> pingpongball: based
[18:38:20] <constxd> make sure you run it, and then recompile with -fprofile-use
[18:38:38] <hohohoroutines> i'm all for having more code be ok with -ffast-math but you can't just assume it is and wait to find out what's broken
[18:38:39] <constxd> profile-guided optimization is how you really redpill your applications
[18:38:47] <pingpongball> guys if something break does it only break only emacs , i mean it doesnt do anyharm on my linux
[18:38:52] <NRK[m]> are u for real? pingpongball
[18:38:55] <hohohoroutines> pingpongball: it breaks everything
[18:39:03] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[18:39:06] <pingpongball> yes i'm real i want fasssssssssssttt
[18:39:08] <pragma-> lol emacs
[18:39:27] <NRK[m]> then stop putting random flags into your CFLAGS
[18:39:36] <constxd> why are you guys telling him it's going to break everything
[18:39:39] <pingpongball> =L  it breaks everything hohohoroutines  is it?
[18:39:43] <constxd> he's not compiling libc he's compiling emacs
[18:39:51] <pingpongball> comon guys, people are greedy they want gold, they kill eachother for money ,
[18:39:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[18:39:57] <pingpongball> i just wanted my program to be fast
[18:39:59] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[18:40:00] <pingpongball> using cflags
[18:40:03] <pingpongball> i  want more
[18:40:07] <NRK[m]> then use fast program
[18:40:09] <hohohoroutines> use -O3 then
[18:40:12] <pragma-> you can't have it all!
[18:40:16] *** Joins: skipper (~whatsupbo@user/scobydoo)
[18:40:42] <GyrosGeier> LTO over the entire program is a good idea for optimization
[18:41:07] <pingpongball> ok guys
[18:41:10] <pingpongball> fine
[18:41:11] <GyrosGeier> I should try whether I can compile emacs with just 64 GB of RAM that way
[18:41:16] <pingpongball> this is my last flag
[18:41:25] <pingpongball> `CFLAGS="-Ofast pipe -funroll-all-loops -funswitch-loops -^Chole-program -flto -fprofile-generate -march=native -fomit-frame-pointer"`
[18:41:41] <constxd> based
[18:41:48] <pragma-> just profile the code and convert the hot spots to hand-crafted assembly for the systems you care about
[18:41:50] * pragma- taps brain
[18:41:52] <GyrosGeier> the ^C should be "fw"
[18:42:12] <NRK[m]> why are u generating a profile??
[18:42:14] <GyrosGeier> pragma-, I did that once
[18:42:15] <pingpongball> thanks fwhole-program
[18:42:32] *** Parts: hohohoroutines (~floatcomp@wireguard/tunneler/floatcomplex) ()
[18:42:36] <pingpongball> NRK[m] , constxt told me to do so, to make fast optimization
[18:42:48] <GyrosGeier> pragma-, then submitted a patch allowing Wine to work on NetBSD/sparc
[18:42:52] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[18:42:53] <NRK[m]> ur getting trolled
[18:43:00] <GyrosGeier> wine maintainers were like "thanks... I guess."
[18:43:28] <pingpongball> i think gentoo people may know more
[18:43:30] <pingpongball> i'll go there
[18:43:47] <GyrosGeier> but it did get merged and IIRC even mentioned in the release notes that fibers on sparc were now efficient
[18:43:55] <GyrosGeier> Gentoo is for ricers
[18:43:58] <pragma-> pingpongball: -frice
[18:44:01] <pragma-> -friedrice
[18:44:31] <GyrosGeier> https://www.shlomifish.org/humour/by-others/funroll-loops/Gentoo-is-Rice.html
[18:44:39] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[18:45:15] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[18:45:32] <GyrosGeier> this used to be hosted at funroll-loops.org or so
[18:46:12] <pingpongball> gentoo guys recommended to use
[18:46:13] <pingpongball> -march=znver3
[18:46:28] <NRK[m]> why yes, i fun roll my loops. how could you tell?
[18:47:22] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[18:47:31] <libc> constxd: you called me ?
[18:47:40] <NRK[m]> lol
[18:48:13] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Quit: Konversation terminated!)
[18:48:36] <river> hehe
[18:48:46] <GyrosGeier> dang
[18:49:01] <GyrosGeier> I feel nerdsniped into running LTO on emacs now
[18:50:26] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[18:50:31] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[18:50:36] <libc> GyrosGeier: i didn't belive someone will actually read :)
[18:51:17] <libc> GyrosGeier: he's the genious behind it --> rindolf 
[18:55:39] *** Joins: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e)
[18:55:45] *** Quits: mcinglis_ (~mcinglis@user/mcinglis) (Ping timeout: 268 seconds)
[18:55:50] *** Joins: zalt (~zalt@user/zalt)
[18:56:05] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[18:56:24] *** Quits: bsdbandit01 (~bsdbandit@2607:fb91:1492:eb5c:8136:9529:69d1:919e) (Read error: Connection reset by peer)
[18:57:06] <pingpongball> guys people told -funroll-all-loops slowdown,
[18:57:21] <pingpongball> what slowdown, does it slow down while compiling or when running emacs
[18:58:46] <pingpongball> hello why everybody silent
[18:59:02] <constxd> hello
[18:59:16] <pingpongball> yes tell me
[18:59:19] <constxd> almost certainly slows down compiling
[18:59:25] <kurahaupo> pingpongball: it's a trade-off. Unrolling loops makes the code bigger. If buffer code doesn't fit in the CPU Cache then it may take longer to load than you save by having it unrolled
[18:59:26] <constxd> could POSSIBLY slow down emacs
[18:59:46] <kurahaupo> s/buffer//
[19:00:02] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 240 seconds)
[19:00:04] <pingpongball> really then why you recommended me to use , if it will make emacs slower,
[19:00:08] <pingpongball> but i'm fine compilation slower , but i'm not fine runtime slower
[19:00:23] <constxd> some parts of the code may be faster, some may be slower
[19:00:24] <kurahaupo> pingpongball: Because usually it makes things faster
[19:00:40] <constxd> this is why you need -fprofile-generate
[19:01:08] <constxd> gather some data and then recompile using -fprofile-use and the compiler can make intelligent decisions about when to apply certain optimizations
[19:01:14] <pingpongball> guys recommended https://ddmler.github.io/compiler/2018/06/29/profile-guided-optimization.html
[19:01:19] <constxd> based
[19:01:21] <pingpongball> using autofdo
[19:01:37] <constxd> based
[19:02:47] <pingpongball> i get
[19:02:52] <pingpongball> "configure: error: C compiler cannot create executables"
[19:03:22] <pingpongball> is it all correct guys
[19:03:33] <constxd> that's cringe
[19:03:39] <pingpongball> `CFLAGS="-Ofast pipe -funroll-all-loops autofdo -funswitch-loops fwhole-program -flto -fprofile-generate -march=native -fomit-frame-pointer"`
[19:03:48] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[19:03:53] <pingpongball> i've already installed autofdo
[19:04:08] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[19:04:16] <constxd> bro what
[19:04:39] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[19:04:46] <pingpongball> i've removed fwhole-program and -flto
[19:04:57] <CoderCharmander> What is the "autofdo" flag supposed to do?
[19:05:14] <CoderCharmander> That will probably cause a compilation error
[19:05:30] <constxd> CFLAGS="-Ofast -pipe -funroll-all-loops -funswitch-loops -fwhole-program -flto -fprofile-generate -march=native -fomit-frame-pointer -fprofile-generate"
[19:05:37] <constxd> copy that king!
[19:06:00] <constxd> oops i included -fprofile-generate twice
[19:06:03] <constxd> should be harmless though
[19:06:18] <pingpongball> :)
[19:06:28] <pingpongball> Thank you i've ran compilation
[19:06:40] <pingpongball> Thank you for your information guys i love you
[19:06:56] <pingpongball> i hope you guys have awesome life
[19:07:00] *** Parts: pingpongball (~pingpongb@user/pingpongball) ()
[19:07:10] <constxd> unfathomably based
[19:07:14] *** Quits: mcinglis (~mcinglis@user/mcinglis) (Ping timeout: 265 seconds)
[19:07:20] *** Joins: moog_ (~moog@107.126.48.93)
[19:07:35] <constxd> fastest emacs build on the planet. king shit
[19:08:17] <river> cringe and based in #C?
[19:08:49] *** Joins: GDiaX (~medic@186.99.62.94.rev.vodafone.pt)
[19:09:49] <constxd> yes i'm bringing zoomer vernacular to the unwashed masses
[19:09:55] *** Quits: moog (~moog@107.126.53.121) (Ping timeout: 250 seconds)
[19:11:40] *** Joins: strajder (~strajder@user/strajder)
[19:12:33] *** Joins: zalt (~zalt@user/zalt)
[19:13:57] <pragma-> hmm, major internet outage going on in us again
[19:14:06] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[19:14:06] *** Joins: hpyc9 (~yc9@2600:3c03:e000:297:af:af:af:3)
[19:14:47] <NRK[m]> they're probably erasing something
[19:14:54] <pragma-> level 3/centurylink down
[19:16:27] <river> unwashed?
[19:16:31] <river> excuse me
[19:16:43] <pragma-> he also called you fat
[19:16:47] <river> i didn't know you have CTCP smell set up
[19:16:57] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[19:17:06] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 260 seconds)
[19:17:09] <pragma-> anybody pro has a ctcp sniffer
[19:19:12] <constxd> NRK[m]: what are you implying
[19:19:12] *** Joins: iomari891 (~iomari891@197.210.70.46)
[19:19:46] *** Joins: zalt (~zalt@user/zalt)
[19:19:52] *** Quits: cengiz_io (sid223191@id-223191.ilkley.irccloud.com) ()
[19:19:57] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[19:20:15] *** Joins: meator (~meator@user/meator)
[19:20:18] <constxd> you think sandy hook was a false flag?
[19:20:21] *** Quits: inlight (~inlight@user/inlight) (Read error: Connection reset by peer)
[19:20:55] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[19:20:56] *** Joins: cengiz_io (sid223191@id-223191.ilkley.irccloud.com)
[19:23:12] *** Quits: alch (~alch@151.38.4.235) (Read error: Connection reset by peer)
[19:23:40] *** Joins: inlight (~inlight@157.42.246.30)
[19:23:40] *** Quits: inlight (~inlight@157.42.246.30) (Changing host)
[19:23:40] *** Joins: inlight (~inlight@user/inlight)
[19:24:43] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:619c:d1db:5920:bb54)
[19:24:53] *** Joins: masterbuilder (~user@user/masterbuilder)
[19:25:17] *** Joins: zalt_ (~zalt@user/zalt)
[19:27:13] *** Joins: alch (~alch@151.36.14.33)
[19:27:26] *** Quits: zalt_ (~zalt@user/zalt) (Client Quit)
[19:28:46] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Ping timeout: 260 seconds)
[19:29:18] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:29:54] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[19:30:04] *** Joins: minto_ (~mintograd@47.201.5.61)
[19:31:55] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[19:32:06] *** Joins: mahmutov (~mahmutov@37.155.5.146)
[19:32:45] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[19:33:03] *** Quits: minto (~mintograd@47.201.5.61) (Ping timeout: 252 seconds)
[19:33:21] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:33:52] *** Quits: zalt (~zalt@user/zalt) (Quit: WeeChat 3.3)
[19:34:13] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[19:34:30] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:38:14] *** Joins: stonkey (~stonkey@user/stonkey)
[19:38:54] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[19:40:42] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[19:41:23] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[19:41:32] *** Joins: shivesh (~shivesh@user/shivesh)
[19:41:44] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[19:42:26] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:619c:d1db:5920:bb54) (Ping timeout: 245 seconds)
[19:43:05] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[19:43:19] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Ping timeout: 252 seconds)
[19:43:44] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[19:44:09] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[19:45:28] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[19:46:00] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:46:05] *** Joins: Akuli (~Akuli@82-203-161-29.bb.dnainternet.fi)
[19:46:28] *** Joins: zat_ (~zat@191.23.60.220)
[19:46:33] *** Quits: zat (~zat@191.23.60.220) (Remote host closed the connection)
[19:46:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:50:49] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:51:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:52:07] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Quit: This computer has gone to sleep)
[19:53:09] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:55:36] *** Joins: listen_ers (~listen_er@c-98-240-233-64.hsd1.mn.comcast.net)
[19:55:53] *** Joins: soapsudsxx (~soapsudsx@141.193.188.143)
[19:56:44] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[19:57:57] *** Joins: SpikeHeron (~DutchIngr@user/dutch)
[20:00:26] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[20:00:33] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[20:01:05] *** Joins: System_Error (~SystemErr@user/systemerror)
[20:01:57] *** Joins: Atque (~Atque@user/atque)
[20:03:31] *** Quits: hsdjkfhfshfsi (~SomeAdmin@104-181-157-226.lightspeed.austtx.sbcglobal.net) (Quit: Leaving)
[20:04:19] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[20:04:31] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:04:45] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59) (Quit: fe23)
[20:04:58] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:05:06] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:05:10] *** Joins: Kev_ (~Kev@2a01cb0400149f001dcf40039f95c655.ipv6.abo.wanadoo.fr)
[20:05:46] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:05:50] *** Quits: off^ (~off@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[20:05:54] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:06:16] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:06:24] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:06:54] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:11:34] *** Joins: Zenton (~user@user/zenton)
[20:13:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[20:13:56] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:619c:d1db:5920:bb54)
[20:15:48] *** Joins: fputs7 (~fputs@67.59.83.166)
[20:15:56] *** Joins: sonny (~sonny@8.6.144.252)
[20:15:59] <sonny> join #scheme
[20:16:02] <sonny> oops
[20:17:02] *** Quits: zat_ (~zat@191.23.60.220) (Ping timeout: 240 seconds)
[20:17:45] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 250 seconds)
[20:17:45] *** fputs7 is now known as fputs
[20:18:38] *** Joins: zat_ (~zat@191.23.60.220)
[20:18:46] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:619c:d1db:5920:bb54) (Ping timeout: 265 seconds)
[20:22:46] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[20:24:12] *** Quits: mdw (~root@159.65.86.163) (Ping timeout: 240 seconds)
[20:24:56] *** Joins: liiix (~liiix@user/liiix)
[20:25:42] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 260 seconds)
[20:26:09] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:619c:d1db:5920:bb54)
[20:26:38] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[20:26:43] *** Joins: u0_a391 (~u0_a391@2603-6010-a141-6fa3-88f4-4cc9-a7b6-7571.res6.spectrum.com)
[20:29:36] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[20:29:49] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[20:30:15] *** Quits: Kit (~u0_a391@2600:380:bc5f:f68d:f6b0:760b:913:5b12) (Ping timeout: 252 seconds)
[20:30:18] *** Joins: sonny (~sonny@8.6.144.252)
[20:30:28] *** Joins: Akiva (~Akiva@user/Akiva)
[20:31:43] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 252 seconds)
[20:32:20] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[20:32:47] *** Quits: liiix (~liiix@user/liiix) (Ping timeout: 256 seconds)
[20:34:00] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[20:34:26] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:37:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[20:38:04] *** Joins: BadWolf (~azerty@user/badwolf)
[20:38:49] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:39:06] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[20:49:02] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[20:50:24] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[20:51:04] *** Parts: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com) ()
[20:51:12] *** Joins: pulse (~pulse@user/pulse)
[20:52:18] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[20:54:53] <nomagno> I'm thinking the standard could perhaps make a bigger effort to offer macros/constants that give information about unspecified behaviour.
[20:55:41] <nomagno> Like how with floats you have macros to check against that contain explicit values for the most common impentations of certain features
[20:56:00] <nomagno> This would be very useful to extend to... Well, everything that is unspecified
[20:56:30] *** Quits: lupulo (~lupulo_@128.red-83-35-42.dynamicip.rima-tde.net) (Ping timeout: 260 seconds)
[20:58:15] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 250 seconds)
[20:58:24] *** Quits: BadWolf (~azerty@user/badwolf) (Quit: *)
[20:59:33] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[21:01:03] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[21:03:06] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[21:03:29] <twkm> feel free to work out what you mean.  if it is clear enough there's some chance the wg will consider it.
[21:03:45] *** u0_a391 is now known as Kit
[21:08:38] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:09:06] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[21:09:09] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[21:11:50] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:12:51] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[21:12:57] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[21:13:45] *** Quits: puke (~puke@user/puke) (Remote host closed the connection)
[21:14:00] *** Joins: puke (~puke@user/puke)
[21:14:37] *** Quits: zat_ (~zat@191.23.60.220) (Ping timeout: 252 seconds)
[21:14:39] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Client Quit)
[21:14:42] *** Quits: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au) (Ping timeout: 260 seconds)
[21:15:02] *** Joins: BSaboia (~bsaboia@177.37.198.227)
[21:15:11] *** Quits: BSaboia (~bsaboia@177.37.198.227) (Read error: Connection reset by peer)
[21:17:29] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:18:46] *** Joins: kurahaupo (~kurahaupo@203-194-51-46.static.tpgi.com.au)
[21:22:26] *** Quits: aliosablack (~chomwitt@94.66.63.187) (Quit: Leaving)
[21:22:40] *** Joins: aliosablack (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[21:22:40] *** Quits: aliosablack (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[21:22:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[21:25:47] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[21:25:50] *** Joins: Betal (~Betal@user/betal)
[21:27:57] *** Joins: V-T60 (~v@gateway/tor-sasl/v-t60)
[21:28:29] *** Joins: Colt (~Colt@user/colt)
[21:29:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:29:21] *** Joins: Klinda (~superleag@user/klinda)
[21:29:36] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[21:30:00] *** Joins: echoSMILE (uid504326@user/echosmile)
[21:31:42] *** Joins: cousteau_ (~cousteau@user/cousteau)
[21:32:19] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[21:32:34] *** cousteau_ is now known as cousteau
[21:35:52] *** Joins: jinsun (~quassel@user/jinsun)
[21:37:51] *** Joins: kuber (~kuber@97-113-156-194.tukw.qwest.net)
[21:42:32] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[21:43:38] *** Joins: lleo (~leo@31-161-137-111.mobile.kpn.net)
[21:43:44] *** Joins: leo__ (~leo@31-161-137-111.mobile.kpn.net)
[21:44:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[21:48:15] *** Quits: leo__ (~leo@31-161-137-111.mobile.kpn.net) (Ping timeout: 256 seconds)
[21:48:15] *** Quits: lleo (~leo@31-161-137-111.mobile.kpn.net) (Ping timeout: 256 seconds)
[21:48:26] *** Joins: lleo (~leo@31-161-137-111.mobile.kpn.net)
[21:49:56] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[21:50:54] *** Joins: zat_ (~zat@191.23.60.220)
[21:51:31] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[21:54:39] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[21:55:13] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[21:55:19] *** Joins: teepee (~teepee@openscad/teepee)
[21:56:36] *** Joins: reset (~reset@user/reset)
[21:56:45] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:58:27] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:00:11] *** Joins: blakesmith[m] (~blakesmit@2001:470:69fc:105::1:4093)
[22:02:02] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:02:39] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[22:03:38] *** Joins: sonny (~sonny@8.6.144.252)
[22:05:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:06:42] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:08:45] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 268 seconds)
[22:09:59] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[22:10:43] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:10:55] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:11:09] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[22:14:51] *** Quits: V-T60 (~v@gateway/tor-sasl/v-t60) (Ping timeout: 276 seconds)
[22:18:24] <rindolf> cousteau: hi, ltns
[22:20:14] <cousteau> sup
[22:20:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:22:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:22:57] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[22:23:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:23:43] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[22:23:59] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[22:24:49] <rindolf> cousteau: i released fortune-mod-v3.10.0
[22:26:31] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.3)
[22:26:35] <rindolf> cousteau: gcc gives a dubious snprintf warning...
[22:26:57] *** Joins: xata (~xata@46.98.129.9)
[22:27:31] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[22:27:44] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[22:35:58] *** Joins: bsdbandit01 (~bsdbandit@172.58.191.152)
[22:36:05] *** Joins: Satin (uid193953@user/Seten)
[22:37:31] *** Quits: bsdbandit01 (~bsdbandit@172.58.191.152) (Read error: Connection reset by peer)
[22:39:38] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[22:42:26] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[22:43:32] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 252 seconds)
[22:45:03] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:58] *** Joins: meator (~meator@user/meator)
[22:48:45] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:b1ed:1724:4f50:ba82)
[22:49:29] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:49:44] <cousteau> rindolf: which warning?
[22:50:27] <cousteau> (also, which GCC?  This isn't Windows, right?)
[22:51:50] <rindolf> cousteau: "truncation". fixed by https://github.com/shlomif/fortune-mod/commit/e77236c746bd8a402c6441038eb39218c1624a52
[22:51:51] <candide> Title of rindolf's link: Silence compile-time or run-time warnings. · shlomif/fortune-mod@e77236c · GitHub
[22:52:32] <rindolf> cousteau: fedora 35's gcc
[22:53:15] <cousteau> hm... not sure if you can (or should) use strlen() to initialize const variables... or can you?
[22:53:54] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:54:06] <cousteau> Oh wait nvm, you can't use that to initialize STATIC variables, but const should be fine.
[22:56:37] <NRK[m]> not static variables, objects with static storage duration
[22:57:41] <NRK[m]> tho, u can probably use strlen on a string literal to initilize a static storage duration object as well. since implementations are free to pick their own form of constant expression.
[22:57:58] <NRK[m]> ,cc static int x = strlen("okay");
[22:58:04] <candide> NRK[m]: [warning: initializer element is not a constant expression [-Wpedantic]] no output: x = 4
[22:58:36] <NRK[m]> yeah, so it works. but implementation defined. so probably will break on other not so permissive compilers.
[22:58:45] *** Quits: kuber (~kuber@97-113-156-194.tukw.qwest.net) (Quit: leaving)
[22:59:07] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[22:59:17] <constxd> no point
[22:59:20] <constxd> when you can use sizeof
[22:59:35] <cousteau> ,cc -Wall -Wextra -Wno-unused-parameter  const char *dir = "abc"; const char *file = "def"; const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[22:59:38] <candide> cousteau: no output: file = 0x402019 "def"; path = "abc/def"; do_len = 8; dir = 0x402015 "abc"
[22:59:43] <cousteau> no warnings here...
[23:00:09] <cousteau> NRK[m]: "static variables" and "objects with static duration" are the same thing
[23:00:09] <NRK[m]> because u overrode -Wpedantic
[23:00:26] <NRK[m]> you can have a non-static global
[23:00:40] <cousteau> I don't consider file-scope variables declared using `static` the same as "static variables"
[23:00:43] <NRK[m]> which will be object with static storage duration, but not a "static variable"
[23:01:10] <NRK[m]> ,cc const char *dir = "abc"; const char *file = "def"; const size_t do_len = strlen(dir) + strlen(file) + 2; char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:01:15] <candide> NRK[m]: no output: path = "abc/def"; do_len = 8; dir = 0x403033 "abc"; file = 0x403037 "def"
[23:01:15] <cousteau> that's an ugly misuse of the keyword `static` which isn't really what "static" means
[23:01:39] <NRK[m]> yeah, it has a double meaning.
[23:01:42] <cousteau> NRK[m]: it will be a static variable though, right?
[23:01:52] <cousteau> because it's a variable and it has static duration
[23:02:05] <cousteau> maybe I should have used "object" rather than "variable", although I'm not sure there's a difference
[23:02:07] <cousteau> is there?
[23:02:35] <cousteau> (maybe "variable" can be a bit misleading when there is a `const` qualifier)
[23:02:41] <NRK[m]> which one? a global? if so then yes, gloabls are static storage duration.
[23:03:16] <NRK[m]> i've used the term "object" because the same thing applies to structs and arrays afaik.
[23:03:28] <cousteau> file-scope objects declared with and without `static`, as well as block-scope objects declared with `static`, have static storage duration
[23:03:53] <cousteau> (...and I think it's recommended to use "file-scope" rather than "global", or at least I got yelled at the last time I used "global")
[23:03:55] <cousteau> ,global
[23:03:55] <candide> There is no "global" scope in C. There are four kinds of scopes: function, file, block, and function prototype. A variable that appears outside of any block or list of parameters has file scope, which terminates at the end of the translation unit.
[23:04:06] <cousteau> see?  yelling
[23:04:57] <NRK[m]> candide is mean :c
[23:05:02] <candide> N​RK[m], Absolutely!
[23:05:09] <cousteau> ,cc -Wall -Wextra -Wpedantic -Wno-unused-parameter  const char *dir = "abc"; const char *file = "def"; const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:05:12] <candide> cousteau: no output: path = "abc/def"; do_len = 8; dir = 0x402015 "abc"; file = 0x402019 "def"
[23:05:46] <cousteau> NRK[m]: to clarify, when I said "no warnings here" I was talking to rindolf, not contradicting your comment about static, which I wasn't using
[23:06:03] <NRK[m]> oh, u didn't have static qualifier on `do_len`
[23:06:11] <NRK[m]> yeah, i missed that. i thinking do_len was static.
[23:06:12] <cousteau> (keep in mind that ,cc puts stuff inside main(), so those const vars I declared have automatic storage)
[23:06:36] <cousteau> ,cc -Wall -Wextra -Wpedantic -Wno-unused-parameter  const char *dir = "abc"; const char *file = "def"; static const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:06:38] <candide> cousteau: error: initializer element is not constant
[23:06:42] <cousteau> boom, everything explodes
[23:06:56] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[23:07:19] * cousteau doesn't think that's allowed even without -W's
[23:07:35] <cousteau> ,cc -w  const char *dir = "abc"; const char *file = "def"; static const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:07:36] <candide> cousteau: Same output.
[23:07:45] <cousteau> ,cc -w -std=gnu11  const char *dir = "abc"; const char *file = "def"; static const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:07:47] <candide> cousteau: Same output.
[23:07:51] <NRK[m]> it depends on what the compiler wants to accept as "constant expression"
[23:07:57] <cousteau> wow, not even with gnu extensions
[23:08:04] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[23:08:35] <cousteau> ,cc -w -std=gnu11  static const char *dir = "abc"; static const char *file = "def"; static const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:08:36] <candide> cousteau: Same output.
[23:09:22] <cousteau> ,cc -w -std=gnu11  #define dir "abc" \n #define file "def" \n static const size_t do_len = strlen(dir) + strlen(file) + 2;  char path[do_len]; snprintf(path, do_len, "%s/%s", dir, file);
[23:09:26] <candide> cousteau: no output: path = "abc/def"
[23:09:30] <cousteau> finally
[23:09:32] <cousteau> thanks bot
[23:09:40] <cousteau> now I wonder if...
[23:09:46] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[23:09:48] <Kit> ,cc  puts ("hi");
[23:09:51] <candide> Kit: hi
[23:09:57] <Kit> :D
[23:10:08] <NRK[m]> you probably should avoid doing this stuff tho
[23:10:19] <NRK[m]> that won't compile on tcc or sometimes even clang
[23:10:33] <cousteau> ,cc static size_t do_len = strlen("abc");
[23:10:36] <candide> cousteau: [warning: initializer element is not a constant expression [-Wpedantic]] no output: do_len = 3
[23:10:58] <cousteau> ok well at least it does warn you with -Wpedantic, probably also -Wall or -Wextra
[23:11:28] <cousteau> NRK[m]: yeah it's dirty and probably nonstandard.  I don't think C has a concept of "constant functions"
[23:11:56] <NRK[m]> ,gcc static const int arr[] = { 0, 1, 2, 3 }; static const int arr_last_element = arr[sizeof(arr)/sizeof(*arr)]; printf("%d\n", arr_last_element);
[23:11:57] <candide> NRK[m]: error: initializer element is not constant
[23:12:03] <cousteau> as in "this function can be executed at compile time, and it is ensured that its result will only depend on the provided variables; it is thus a "pure" function"
[23:12:34] <cousteau> and even if it were, uh... strlen takes a pointer to char, and reads the data pointed to by that pointer, so I'm not sure it'd qualify
[23:12:46] *** Joins: arinov (~arinov@176.89.29.127)
[23:13:03] <NRK[m]> cousteau i had experience where gcc didn't generate a warning
[23:13:13] <NRK[m]> but then that code failed to compile on clang, kek
[23:13:22] <cousteau> NRK[m]: ok so `static const` is no guarantee of constness either, I get it
[23:13:35] <cousteau> yeah warnings are not reliable
[23:14:05] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[23:14:38] <Kit> ,cc  main ();
[23:14:39] <candide> Kit: error: too few arguments to function 'main'
[23:14:47] <Kit> ,cc  main (NULL, NULL);
[23:14:49] *** Joins: teepee (~teepee@openscad/teepee)
[23:14:57] <candide> Kit: [warning: passing argument 1 of 'main' makes integer from pointer without a cast [-Wint-conversion]  note: expected 'i​nt' but argument is of type 'void *']
[23:15:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:15:37] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 252 seconds)
[23:15:38] <cousteau> For random testing you can open a private conversation with candide
[23:15:47] <Kit> oh
[23:15:48] <Kit> okay
[23:15:49] <cousteau> (like I should have done maybe, but I wanted to show the result)
[23:15:50] <Kit> thx
[23:15:50] <candide> c​ousteau, No.
[23:16:03] <Kit> wait what
[23:16:04] <cousteau> oh wait nvm, candide says go ahead :)
[23:16:16] <Kit> how
[23:16:20] *** Joins: EdFletcher (~PKD@user/edfletcher)
[23:16:27] <Kit> how does it knoe when and what to say
[23:16:34] <cousteau> just kidding, the bot just replies randomly when you say anything ending in candide
[23:16:41] <Kit> is the source available somewhere
[23:16:48] <cousteau> yes, let me see
[23:16:49] <candide> Bot? Where?
[23:16:56] <Kit> lmfao
[23:16:58] <NRK[m]> ,factshow source
[23:16:58] <candide> [global] source: /say My guts can be browsed at https://github.com/pragma-/pbot
[23:17:07] *** Joins: rany (~rany@user/rany)
[23:17:16] <cousteau> oh it also answers something like that when it sees "bot" and "candide" together in a sentence
[23:17:18] *** Joins: mdw (~root@159.65.86.163)
[23:17:27] <cousteau> with a random delay to beat the Turing test
[23:17:38] <cousteau> ,source
[23:17:38] <candide> My guts can be browsed at https://github.com/pragma-/pbot
[23:17:44] <cousteau> (no need to use ,factshow)
[23:17:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:18:05] <NRK[m]> https://godbolt.org/z/xv4Y6T3oq here's an example, where gcc fails to warn, and clang fails to compile.
[23:18:11] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[23:18:19] <NRK[m]> the `comptime` feature in zig looks kinda nice
[23:19:08] <NRK[m]> i think c++ has something similar
[23:19:18] <cousteau> I think so, yes
[23:19:31] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Quit: Leaving)
[23:19:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:20:27] <cousteau> ,cc static const int i = 1; static const int j = 2;
[23:20:30] <candide> cousteau: no output: j = 2; i = 1
[23:20:33] <cousteau> hm
[23:20:42] <cousteau> no warning either?  Does clang compile that?
[23:21:01] <cousteau> er, wait
[23:21:05] <cousteau> I'm an idiot
[23:21:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:21:28] <cousteau> nvm it doesn't warn you with j=i either
[23:21:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:22:23] *** Quits: alch (~alch@151.36.14.33) (Read error: Connection reset by peer)
[23:22:45] <cousteau> NRK[m]: https://godbolt.org/z/7Tqb5h97T works in both.  Are you sure this is actually wrong?  I don't know at all
[23:23:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:23:51] *** Joins: EdFletcher (~PKD@user/edfletcher)
[23:24:20] <cousteau> it fails if I make i={1,2,3} and j=i[0] though.  So the sizeof is not the issue.  sizeof should be safe to use for static variables or any variable with a fixed type anyway.
[23:26:34] *** Joins: alch (~alch@151.38.110.87)
[23:26:59] *** Quits: lleo (~leo@31-161-137-111.mobile.kpn.net) (Ping timeout: 252 seconds)
[23:27:34] <cousteau> NRK[m]: here, I fixed your code for clang: https://godbolt.org/z/r1sofMojW
[23:28:28] *** Joins: hohohoroutines (~floatcomp@wireguard/tunneler/floatcomplex)
[23:29:48] <cousteau> but I somehow broke it for gcc though :/
[23:30:07] *** Quits: zat_ (~zat@191.23.60.220) (Remote host closed the connection)
[23:30:32] *** Joins: zat_ (~zat@191.23.60.220)
[23:32:30] *** Joins: Akiva (~Akiva@user/Akiva)
[23:33:01] <cousteau> rindolf: why fprintf(stderr, "%s", "fortune [-a"); and not just fprintf(stderr, "fortune [-a"); though?
[23:33:30] <cousteau> just don't use % on the format string (replace it with %% if needed), problem solved
[23:33:59] <cousteau> fprintf(stderr, " [-n number] [ [#%%] file/directory/all]\n");
[23:34:33] <cousteau> what you should never do is use variables you don't know what may contain as format strings
[23:34:51] <cousteau> fprintf(stderr, message); // Bad/discouraged
[23:35:14] <cousteau> (unless you KNOW message is a valid format string)
[23:35:28] <rindolf> cousteau: https://bikeshed.com/
[23:35:29] <candide> Title of rindolf's link: Why Should I Care What Color the Bikeshed Is?
[23:35:32] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[23:35:40] <rcf> I for one have enjoyed the recent logging vulnerability shitshow and want to see more of them 
[23:35:58] <cousteau> god
[23:36:03] <cousteau> nice MS Paint job
[23:36:10] <apotheon> rcf: Which logging vulnerability thing was this?
[23:36:19] <apotheon> Is this somehow Microsoft or systemd related?
[23:36:21] <cousteau> also, as I suspected, the page changes the color when you reload it
[23:36:21] <rcf> apotheon: log4j. Not C related, but the same general idea. 
[23:36:41] <cousteau> apotheon: someone on another channel mentioned something about iOS
[23:36:55] <cousteau> not sure if related
[23:37:05] <apotheon> hmm
[23:37:05] <rcf> Apple's servers were vulnerable. 
[23:37:14] <hohohoroutines> apotheon: the java equivalent of using an unsanitized format string basically, but if format strings were allowed to dlopen remote urls
[23:37:27] <apotheon> oh lovely
[23:37:29] <rcf> It was ludicrously horrible. 
[23:37:31] <hohohoroutines> everyone's servers were vulnerable. the problem was originally discovered in a minecraft server apparently
[23:37:31] <cousteau> rindolf: well, you're probably here to learn, we're here to recommend
[23:37:41] <apotheon> Just avoid Java as much as you can.
[23:37:43] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[23:37:55] <cousteau> of course that piece of code you wrote is valid; it's just ...not particularly useful
[23:38:21] <rindolf> cousteau: good night
[23:38:23] <cousteau> and potentially slightly less efficient, although probably not to a point where you should care
[23:38:38] <hohohoroutines> there are still people who believe apple is going overboard by issuing SIGILL to processes that try to use %n in a format string that's not a string literal
[23:38:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:38:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:38:50] *** Joins: kish` (~sid742412@user/aqua)
[23:38:52] *** Joins: tejr (~tejr@user/tejr)
[23:39:07] <hohohoroutines> i think it's perfectly reasonable even though mutable format strings are technically valid c
[23:39:23] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:39:31] <rcf> Some people complained about runtime gets() warnings as well 
[23:39:56] <cousteau> rindolf: re: the issue you mentioned, I have exactly 0 idea why gcc would need to warn you.  Pretty sure it shouldn't.  I'm with you in this one.
[23:40:41] *** Quits: kish` (~sid742412@user/aqua) (Client Quit)
[23:41:29] <rindolf> cousteau: i added many -W flags though...
[23:43:00] <cousteau> oh then I think I'd blame the excess of -W flags and the inability of gcc to deal with some corner cases, being too much or too little paranoid, as NRK[m] demonstrated
[23:43:51] <cousteau> Should be fine as long as you don't add -Werror.  I hate projects that use -Werror because they suddenly stop working at certain compiler versions for no reason at all; just because the compiler got more paranoid or smarter or smarter AND more paranoid.
[23:43:54] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[23:44:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[23:44:35] <hohohoroutines> "-Wall -Wextra -Wshadow" should be good enough for everybody
[23:44:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[23:44:59] *** Quits: arinov (~arinov@176.89.29.127) (Ping timeout: 256 seconds)
[23:45:03] <cousteau> ...and please don't take my advice on the use of fprintf negatively; it was a mere suggestion :)
[23:45:05] *** Joins: Klinda (~superleag@user/klinda)
[23:45:12] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:45:33] *** Quits: zat_ (~zat@191.23.60.220) (Ping timeout: 256 seconds)
[23:46:05] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:b1ed:1724:4f50:ba82) (Remote host closed the connection)
[23:46:59] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[23:48:47] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 250 seconds)
[23:50:28] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[23:50:42] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:50:53] *** Joins: zmt01 (~zmt00@user/zmt00)
[23:54:22] *** Joins: Macuser (~Macuser@2600:1003:b443:b5e5:451b:6eac:6d38:7fec)
[23:54:49] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 265 seconds)
[23:54:58] <System_Error> Do you mean log4j? Its apache-related.
[23:55:09] <cousteau> yeah I just saw that
[23:55:20] <System_Error> And java-related, fortunately.
[23:55:24] <cousteau> apparently nothing to do with what I heard about back at #riscv
[23:56:01] <cousteau> which was iOS-related, and written in what looks like C++
[23:57:07] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Quit: Ping timeout (120 seconds))
[23:57:35] <NRK[m]> cousteau: https://en.cppreference.com/w/c/language/constant_expression there are "constant expressions" explicitly defined in the standard. anything outside of it depends on the implementation.
[23:57:43] <cousteau> ah, that was it
[23:57:50] <NRK[m]> "Implementations may accept other forms of constant expressions"
[23:58:23] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:58:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[23:58:51] <NRK[m]> the i=j thing doesn't work on tcc for example
[23:58:58] * cousteau was thinking on having something like `T foo(...) const;` or `const T foo(...);` in C that specified that the function return value is constant when the input parameters are fixed constants
[23:59:38] <hohohoroutines> https://log4jmemes.com
[23:59:40] *** Joins: tejr (~tejr@user/tejr)
