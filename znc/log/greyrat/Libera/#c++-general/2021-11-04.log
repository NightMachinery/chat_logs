[00:13:45] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b)
[00:17:28] <LordKalma> !rq
[00:17:28] <nolyc> LordKalma: <fiesh> const and volatile should be renamed to curriculum and vitae
[00:21:39] <rpav> heh
[00:22:21] <LordKalma> C++ programmers wanted. Must be CV-qualified
[00:22:45] <rpav> pfft, they'd just remove_cvref
[00:24:30] <PJBoy> !grab LordKalma
[00:24:30] <nolyc> PJBoy: The operation succeeded.
[00:24:43] <LordKalma> that was so clearly grab baiting
[00:24:55] <PJBoy> it was good though
[00:25:13] <LordKalma> anyway
[00:25:36] <LordKalma> PJBoy, today Bill Hoffman and Craig Scott both talked at Qt World Summit
[00:25:42] <LordKalma> it was more like cmake world summit haha
[00:30:24] <PJBoy> I'm surprised that cmake would be one of the more major things going on in the Qt world
[00:31:33] <LordKalma> the 6.2 cmake API is really dramatic news honestly
[00:31:45] <LordKalma> well, that, and of course the fact that qt 6 builds with cmake, not qmake
[00:31:58] <LordKalma> and everybody loved that because ninja is fast as fuck
[00:32:19] <LordKalma> but 6.2 introduced a cmake api specific to qt that does a lot of boilerplate reduction
[00:32:32] <LordKalma> basically made RCC files useless, for example
[00:32:33] *** Quits: Deneb (~johnch@117.111.189.80.dyn.plus.net) (Quit: Leaving)
[00:32:37] <LordKalma> helps a lot with qml crap
[00:32:41] <PJBoy> ah I see
[00:32:51] <PJBoy> that'll explain why there's a Qt chapter in this book too
[00:32:58] <LordKalma> professional cmake?
[00:33:04] <PJBoy> yeah
[00:33:09] <LordKalma> Scott works a lot on Qt projects
[00:33:19] <LordKalma> and he was a consultant for Qt in the build system migration
[00:33:27] <LordKalma> he even has approving rights at the gerrit
[00:33:54] <PJBoy> makes sense
[00:33:59] <johnny> so they made the cmake api, but what does that do for other build systems?
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:34:06] <johnny> is there a reusable tool there?
[00:34:21] <LordKalma> Professional cmake v10 will probably include the new API i'd guess
[00:34:27] <LordKalma> at leasdt the book updates are free :D
[00:34:33] <LordKalma> johnny, you do what you always did haha
[00:34:43] <PJBoy> you can transpile neoGFX to Qt and then use the Qt CMake API
[00:34:50] <LordKalma> but yeah, if you want a good qt experience, use cmake
[00:35:07] <LordKalma> at least as of qt 6.2 that's what i'd totally recomend
[00:35:08] <johnny> that seems like a bad idea whe you make a callable tool that also does it
[00:35:31] <LordKalma> qmake will be "supported" for the lifetime of qt6
[00:35:36] <LordKalma> but don't expect it to evolve
[00:35:37] <johnny> not saying they shouldn't be able to choose a premiere build system
[00:35:52] <johnny> eh.. i don't use qmake, but there are other build systems out there
[00:36:03] <johnny> well qmake is used, but not by me.. and we don't even use any of the fancy stuff
[00:36:09] <LordKalma> well
[00:36:15] <johnny> there's one moc file generated by some library we use
[00:36:17] <LordKalma> cmake supported a LOT of stuff themselves
[00:36:23] <LordKalma> from qt to boost
[00:36:28] <LordKalma> other build systems ought to do the same
[00:36:51] <LordKalma> boost didn't have cmake config files. cmake shipped them
[00:36:52] <johnny> sure, but what i'm saying is that people who build mega libraries that need custom stuff shouldn't on purpose tie themselves to one build system
[00:37:03] <LordKalma> sure
[00:37:05] <LordKalma> and they don't have to
[00:37:17] <LiaoTao> qt without qmake? sign me up
[00:37:21] <LordKalma> the API doesn't do anything you can't write "mnaually"
[00:37:26] <rpav> qt's been without qmake for awhile
[00:37:37] <rpav> like qt _was_ tied to one build system .. qmake
[00:37:39] <rpav> now it's not
[00:37:42] <johnny> i'm using qt without qmake via meson.. but i'm not doing aything fancy. i wonder what happens with build2 or xmake
[00:38:02] <LordKalma> that depends on meson developers willingness to do the heavy lifing
[00:38:06] <LordKalma> again, as kitware did
[00:38:18] <johnny> yeah stuff kitware did is stuff other build systems should do, that's fine
[00:38:47] <LordKalma> yeah, and as I said, the new API doesn't introduce stuff you can't write otherwise
[00:39:01] <LordKalma> it's convenient, not necessary
[00:39:04] <rpav> people should write libraries that require less magical heavy lifting
[00:39:05] <johnny> now stuff that qt does, they should try to be more helpful and not tie themselves too closely to aspecific one
[00:39:19] <rpav> target_link_libraries(myexe PRIVATE qt)
[00:39:20] <rpav> imagine
[00:39:22] <johnny> rpav, well for a lot one shouild blame C++ right ?
[00:39:28] <rpav> johnny: eh
[00:39:33] <LordKalma> rpav, haaha I totally agree with that in theory
[00:39:40] <johnny> some of those things that Qt does are things that need to be done, because it's C++
[00:39:44] <LordKalma> but Qt does a LOT of stuff to make c++, let's say, usable
[00:39:53] <rpav> i mean there are a lot of libs that dont' require much more than the above, along with a fairly modular "also here are the include you need"
[00:40:08] <johnny> although that's not necessarily the case for say qml or whatnot.. i don't know enough to say
[00:40:22] <rpav> qt is mostly their moc bullshit coupled with their ancient ass windows-style generated help/resource/etc file bullshit
[00:40:36] <rpav> and to be fair moc was sortof a decent solution for awhile
[00:40:39] <johnny> are theyr eally like windows resource files? i never lookd
[00:40:52] <LordKalma> moc, resources, qmlcachegen, qmlsc, qmllint, what else?
[00:40:55] <LordKalma> ah, .ui files
[00:41:00] <johnny> i think that's an interesting thing if that's true
[00:41:02] <rpav> uic
[00:41:21] <johnny> especially since qtgot its major start NOT on windows
[00:41:49] <rpav> moc, uic, rcc
[00:41:50] <LordKalma> for good or for worse Qt is a massive framework tat requires custom tooling
[00:41:55] <rpav> well windows ones weren't xml ;)
[00:42:44] <rpav> tooling isn't really a bad thing.. i mean sortof regardless of language or anything, for a big project you're going to have various pipelines for your content external to your code
[00:43:02] <johnny> LordKalma, i just don't have a good feeling for the parts that require which custom tool vs others.  like let's take a qtcore application that uses the cli parser, and settings.  i shouldn't really need much there right?
[00:43:16] <rpav> qt relies a bit too much on magic though
[00:43:23] <johnny> and of course the gui stuff requires PLENTY .. which is fair enough
[00:43:29] <LordKalma> you'll need the moc if you have any custom QObject, johnny, I guess
[00:43:31] <LordKalma> other than that, sure, no
[00:43:49] <johnny> aha!
[00:44:02] *** Quits: AmR (~AmREiSa@41.232.235.167) (Read error: Connection reset by peer)
[00:44:09] <johnny> there is one moc file that's generated by a lib we use.
[00:44:20] <rpav> i think .ui files generate .moc stuff but not entirely sure
[00:44:28] <LordKalma> rpav, well, there are subtle things. Even when you go on cmake and write add_executable(myapp WIN32), WIN32 changed the entry point to WinMain instead of main(). But with Qt you only write main(). How does it do?
[00:44:33] <imMute> [11/03 14:32:07] < chiselfuse> right?
[00:44:45] <LordKalma> linking with Qt::Core on WIndows actually gives you a file with a WinMain()
[00:44:49] <LordKalma> that calls your main() ;)
[00:44:49] <johnny> well what LordKalma said about QObject was exactly what i'm seeing, so i appreciate that
[00:44:58] <rpav> LordKalma: well it could do it like SDL2 and #define main, but ;)
[00:44:59] <imMute> oops.  damn right click to paste.
[00:45:11] <rpav> (and actually it might)
[00:45:17] <LordKalma> rpav, wxwidgets uses WX_IMPLEMENT_APP(SomeClass)
[00:45:31] <rpav> i don't think anyone thinks that's good
[00:45:32] <johnny> is imgui getting super popular these days or what?
[00:45:33] <LordKalma> it's not a #define, it's a real function that calls your main() but yeah
[00:45:39] <rpav> johnny: maybe a few years back
[00:45:52] <rpav> imgui is kinda crap for anything except injecting UI, which it's pretty good at
[00:46:04] <LordKalma> I know some real projects with imgui
[00:46:08] <LordKalma> but god it looks like shit
[00:46:11] <rpav> otoh it's sometimes the only tool period, as the desktop ui scene is terrible
[00:46:18] *** Joins: AmR (~AmREiSa@156.199.92.40)
[00:46:27] <LordKalma> https://www.rtl-sdr.com/wp-content/uploads/2021/08/sdrv1p0.png
[00:46:30] <LordKalma> it looks like this
[00:46:43] <LordKalma> as you may be aware, I want to write something like that
[00:46:43] <johnny> https://user-images.githubusercontent.com/10835354/139717326-8044769d-527b-4d88-8adf-2d4ecafdca1f.png
[00:46:44] <rpav> sure i mean it can be pretty crappy but
[00:46:50] <LordKalma> but NOT looking like that, ffs
[00:47:02] <kalven> ah, is it gui wednesday?
[00:47:04] <johnny> i bet there's no accessibility tooling really
[00:47:09] <PJBoy> bahahaha
[00:47:22] <PJBoy> gui wednesday has a ring to it
[00:47:26] <LordKalma> hahahah johnny.. Imgui is a renderer with widget classes
[00:47:28] <johnny> LordKalma, click that link tosee a hex editor that i was pretty sure used imgui, :)
[00:47:29] <LordKalma> it has nothing
[00:47:39] <rpav> johnny: yeah it's pretty rudimentary .. but otoh it has some nice 3rd party widgets, graphing/node/display/etc
[00:47:55] <LordKalma> kalven, Qt World Summit was today
[00:48:04] <johnny> that explains the graph i the lower right corner rpav
[00:48:28] <LordKalma> line plots are pretty trivial to write with a decent graphics API
[00:48:33] <johnny> how can one say that desktop ui scene is terrible though? that can only really mean it's always been terrible
[00:48:35] <rpav> the root of all the problems is there's not a good generalized non-(L?)GPL text renderer that's point and shoot
[00:48:46] <PJBoy> so what you're saying is line plots are anything but trivial to write
[00:48:58] <rpav> johnny: kinda, i mean back when gtk/qt were first good it was still pretty good
[00:49:05] <LordKalma> johnny, it has always been shit, but yeah, it's pretty bad rn
[00:49:08] <johnny> so how has it gotten worst?
[00:49:12] <LordKalma> maybe the best is on Windows-only C# stuff
[00:49:19] <LordKalma> C++ for GUI is... pick your poison
[00:49:29] <rpav> PJBoy: line plots are easy; node+graph layouts are less trivial
[00:49:34] <LordKalma> PJBoy, ffs, every single graphics abstraction has a line painter API somewhere
[00:49:46] <PJBoy> not cairo
[00:49:49] <johnny> that stuff always existed before , so what's the differene now between back then?
[00:49:54] <rpav> https://github.com/thedmd/imgui-node-editor
[00:49:59] <johnny> why is it worse now?
[00:50:01] <LordKalma> whaaaat?! cairo doesn't have a line painter?
[00:50:18] <rpav> what do you mean by line painter
[00:50:18] <johnny> is cairo even updated anymore?
[00:50:26] <PJBoy> nah it does
[00:50:27] <rpav> not much last i checked
[00:50:31] <PJBoy> I'm just messing with you
[00:50:45] <LordKalma> rpav, a "pen" API
[00:50:58] <johnny> i only do stuff that can be reasonable done on the web, so none is this is usually relevant to me
[00:51:00] <rpav> i think that's pretty much all it is
[00:51:18] <rpav> everything does the graphics context + operations thing because it's a really nice abstraction
[00:51:30] <johnny> i've avoided desktop tooling for so long
[00:52:30] <LordKalma> adding custom stuff to QML with decent performance does involve editing the node graph
[00:52:36] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 268 seconds)
[00:52:38] <LordKalma> which is a daunting API when reading the docs
[00:52:41] <LordKalma> I'm yet to try it
[00:53:00] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[00:53:16] <johnny> i'm glad you folks are around to bang your head on that stuff rather than I
[00:53:19] <johnny> <3
[00:53:22] <LordKalma> hahah
[00:53:24] <LordKalma> I hate web crap
[00:53:44] <johnny> i'm a big fan.. have been for a really long time.
[00:53:49] <LordKalma> spend the weekend writing a django app, and can't bring myself to finish it...
[00:53:50] <ARoxdale> Was there ever an attempt to run website on C++?
[00:53:58] <ARoxdale> I mean cgi in C++
[00:54:01] <johnny> sure
[00:54:04] <rpav> plenty of websites run on C++
[00:54:07] <PJBoy> many
[00:54:12] <johnny> it wouldn't be cgi these days tho
[00:54:13] <rpav> and yeah even age old
[00:54:18] <johnny> cgi dead
[00:54:55] <LordKalma> ARoxdale, you can even use Emscripten to write client-side web crap
[00:54:57] <ARoxdale> Web pages can be generated in c++? I've never seen this done. Is it an ad hoc thing, or are there actual 'frameworks' for want of a better word
[00:54:59] <LordKalma> (in C++)
[00:55:05] <johnny> ARoxdale, you're mixing up two parts
[00:55:14] <LordKalma> I've seen it work with both Qt and NanoGui
[00:55:28] <rpav> ARoxdale: maybe you've heard of this one little company, they developed some stuff https://github.com/facebook/folly
[00:55:36] <johnny> you can generate html from C++ in the same way you do it via php or python or what have you
[00:55:45] <johnny> it's just less conveient
[00:55:50] <rpav> also that other one, what was the name .. ah, google
[00:55:51] <rpav> ;)
[00:55:51] <johnny> butthen, recently you ca do what LordKalma said
[00:56:14] <LordKalma> wasm+webgl is amazing: https://beta.unity3d.com/jonas/AngryBots/
[00:56:22] <johnny> i do not want the web to be like that at all
[00:56:26] <johnny> i hope it doesn't happen
[00:56:34] <PJBoy> not enough people write their websites in unreal engine
[00:56:39] <LordKalma> hahaha
[00:56:55] <johnny> the accessibility isn't there for that, and it'll ruin stuff for lots of folks who need it
[00:57:00] <rpav> you should though, we should push for total native compilation to the web to the point where your web browser is simply a terminal for rendering an app
[00:57:10] <johnny> nononono
[00:57:23] <LiaoTao> PJBoy,  Wasn't that the next big thing with godot?
[00:57:25] <rpav> yes, because you need to consider the next step
[00:57:35] <rpav> and the next step is "so why do we need a browser again"
[00:57:38] <PJBoy> I don't even know what godot is
[00:57:39] <LordKalma> anyway, I just wanted GUI to not suck
[00:57:41] <rpav> and then there's no more web
[00:57:43] <johnny> it's a game engine
[00:57:46] <LordKalma> godot is a c++ game engine
[00:58:13] <ARoxdale> The web completely sucks now, and it won't be a surprise if a new 'browser'/client comes along with a new interface and replaces it.
[00:58:35] <rpav> ARoxdale: pfft, the web is actually better now than ever, but still fatally flawed in its way
[00:58:37] <johnny> huh? the problem is not there ARoxdale .. it's the stuff that gets published, the tech i fine
[00:58:45] <kalven> it would be a huge surprise
[00:58:55] <LordKalma> oh look, while you said that, 3 new JS frameworks popped up
[00:58:55] <rpav> no, the tech is pretty shit; the middleware is decent but mostly hampered by the frontend
[00:59:01] <johnny> the only new browser that gets popular will be basically like what you get with a smart tv.. totally locked down
[00:59:10] <ARoxdale> Many have tried with apps and crap but no-one has succeeded because they are all greedy companies with corporate agendas and incompetence and you can't build momentum online like that. Unless you are Apple and even then not really.
[00:59:24] <johnny> ARoxdale, google spreadsheets works pretty nice, and so did gmail back in the day
[00:59:33] <johnny> i think folks are doing a pretty good job
[00:59:39] *** Joins: Praise- (~Fat@user/praise)
[00:59:42] <johnny> and then of course local stuff like vscode is ridiculously fast for what its
[00:59:44] <rpav> yeah .. apple, not greedy or harboring "corporate agendas" ;)
[00:59:55] <rpav> if you think vscode is ridiculously fast D:
[01:00:00] <LordKalma> ^
[01:00:01] <johnny> i said "for what it is"
[01:00:07] <LordKalma> I love vscode, it's my main workhorse
[01:00:09] <LordKalma> but it's not fast
[01:00:13] <rpav> an editor that's a fairly slow turd
[01:00:17] <ARoxdale> rpav: The web is a disaster right now. Every second website has a cookie wall, login wall, etc, and most of the rest need 4 core CPUs to load in reasonable time. It's a disaster waiting for a replacement.
[01:00:33] <johnny> ARoxdale, the only replacement fom those folks will be ten times worse
[01:00:33] <rpav> ARoxdale: what does that have to do with the web
[01:00:38] <LordKalma> when I happen to be on like Qt Creator debugging or something, you can really *feel* the difference in responsiveness
[01:00:51] <rpav> like if i log into a remote server, guess what .. i have an auth token and a "login wall"
[01:00:54] <johnny> LordKalma, qtcreator doesn't feel that much faster to me except in the actual typing
[01:00:58] <LordKalma> ARoxdale, this weekend I had a website memory leak and BSOD my pc
[01:01:04] <LordKalma> and I mean the actual typing ;)
[01:01:05] <ARoxdale> johnny: Come on. Google office online stuff is terrible. It's free and 'sharable', but beyond that it pales next to native clients. Try moving a file in google drive.
[01:01:21] <johnny> that's only temporary
[01:01:23] <rpav> LordKalma: memory overallocation causes a bsod?
[01:01:23] <johnny> it's fine for most people
[01:01:29] <johnny> i just did it last week.. easy
[01:01:38] <LordKalma> yeah, web UIs are shit compared to native clients
[01:01:53] <johnny> if your job is doing spreadhseets then for now , you need a native clint
[01:01:59] <kalven> yeah, that's why so many native UIs are written in web tech
[01:02:04] *** Praise- is now known as Praise
[01:02:18] <johnny> of course most people don't do spreadsheets, they just want what google sheets does, including myself :)
[01:02:30] <LordKalma> web tech outside the browser is vastly different
[01:02:41] <ARoxdale> rpav: By web I mean proper websites; www. The rest is the internet, like this irc. By web I strictly mean http sites you surf in a browser. And I honestly believe it is a dying medium, right before our eyes. In part because the technology stack behind it is so bloated and dysfunctional.
[01:02:41] <LordKalma> I'm using vscode, but I'm not using the vscode available from github
[01:03:08] <LordKalma> rpav, not sure what happened. I noticed that that exact webpage would start eating up ram FAST (I could reproduce it after) and in the first time it ended up BSODing my pc with an "IRQN not less or equal"-type error
[01:03:08] <johnny> but yes ARoxdale you're muddling things by talking about what's possible with web associated tech, and what comes from remote resources over http. they are two different problems
[01:03:11] <rpav> ARoxdale: i don't think you have much idea what the web stack consists of :P
[01:03:29] <LordKalma> maybe the BSOD was secondary, and caused by something else that found itself out of ram
[01:03:30] <LordKalma> but yeah
[01:03:33] <ARoxdale> So if someone codes up a fast c++/wasm/unity client that serves a different kind of "website", I wouldn't be surprised to see it take over from web-browsers.
[01:03:40] <rpav> like, 10-15 years ago sure
[01:03:44] <johnny> it'll just be over hte same web tech ARoxdale
[01:04:00] <johnny> ARoxdale, what you're talking about is already almost what steam is now
[01:04:07] <johnny> and any smart tv interface
[01:04:12] <ARoxdale> johnny: I'm old so "web" for me means http, not other protocols.
[01:04:19] <rpav> the main problem is everything is still DOM reliant, but that's because it more or less solves the one hard problem: easy generalized text
[01:04:31] <johnny> ARoxdale, how old are you?
[01:04:43] <johnny> i might be older than you
[01:04:56] <rpav> probably heh
[01:05:03] <ARoxdale> Old enough to remember when people learned c++ from questionable textbooks written by overconfident californians
[01:05:09] <sprout> at my age you don't even ask that question anymore
[01:05:11] <johnny> uhmm.. i'm certainly that old
[01:05:22] <johnny> whenever people pull the age card i am often older than them
[01:05:29] <LordKalma> I'm 26 :D
[01:05:36] <johnny> i'm definitely older than that...
[01:05:42] <rpav> LordKalma: really?
[01:05:46] <LordKalma> yes, why?
[01:06:13] <rpav> would have put at least a few more on a guess i guess but cool, enjoy those years
[01:06:19] <ARoxdale> johnny: You remember gopher, and bbs, and irc, and newsgroups? Those were the internet, but not the "web".
[01:06:22] <johnny> rpav has it right in regards to the DOM. i don't wanna lose the DOM though .. i'd just lke to see a slimmer one
[01:06:44] <rpav> there's no good reason for the DOM though, you can do all the things better ways
[01:06:45] <johnny> ARoxdale, i was old enough for them, but didn't have a computer that could access them until the end of their life
[01:06:53] <ARoxdale> DOM is a tech which I think is well past its sell by date.
[01:07:08] <rpav> you don't really need it for text, but the key thing here is really nailing text so that everyone can use it, without being tied to 'write html'
[01:07:09] <johnny> we were too poor for that
[01:07:10] <ARoxdale> Nobody else organises data like that
[01:07:10] <rpav> +css
[01:07:14] <LordKalma> don't all JS frameworks basically use DOM manipulation?
[01:07:23] <rpav> kinda
[01:07:24] *** Quits: proller (~p@2a02:6b8:0:40c:8496:b686:e6ec:b8e8) (Ping timeout: 268 seconds)
[01:07:27] <ARoxdale> LordKalma: They have to. That's how html pages work
[01:07:32] <rpav> it's not exactly like it used to be though
[01:07:34] <johnny> i think you can say yes rpav
[01:07:51] <johnny> even if you're talking about virtual doms, shadow doms and all that fancy stuff
[01:08:16] <rpav> well there's probably misunderstanding in that you aren't just going around doing everything by fiddling attributes and .innerHTML or whatever
[01:08:42] <kalven> This idea that some new stuff is gonna wipe everything away (and this time it's gonna be lightweight, and clean, and and and) is so damn naive
[01:08:48] <johnny> indeed
[01:08:57] <johnny> all of computer history shows it doesn't work like that
[01:08:59] <rpav> like animation and shit isn't even JS for the most part etc etc
[01:09:06] <ARoxdale> If you want to make something faster, leaner, more responsive, you could code a faster GUI in unreal or whatever, but you can't run it in a browser without falling back on a html/js/css foundation that fundamentally won't be able to support something that wants native client responsiveness. I don't know if wasm is going to fix this or not. I'm skeptical.
[01:09:06] <PJBoy> HTML5 got rid of flash
[01:09:15] <PJBoy> Windows got rid of DOS
[01:09:24] <PJBoy> chrome got rid of internet explorer
[01:09:25] <rpav> PJBoy: eh
[01:09:33] <rpav> those things did not happen that way
[01:09:33] <LordKalma> WASM involves downloading a 5mb webpage
[01:09:39] <kalven> LordKalma: nope
[01:09:48] <ARoxdale> Stuff gets wiped away all the time. Often by things which are not faster, or cleaner, or better.
[01:10:06] <PJBoy> smartphones got rid of mobile phones
[01:10:13] <rpav> windows was dos for decades; flash was around til recently; IE was around til microsoft finally invented edge and decided IE was going to kill the userbase of their new shiny
[01:10:15] <johnny> i wouldn't call it cleaner..
[01:10:24] <ARoxdale> smartphones got rid of PCs!!
[01:10:25] <rpav> mobile phones still exist, etc :p
[01:10:39] <PJBoy> not that I disagree with any of those points
[01:10:43] <sprout> windmills are still the best for sawing wood
[01:10:52] *** Joins: RazielZ (~Raziel@user/raziel)
[01:10:55] <johnny> LordKalma, wasm involves donwnloading some sort of precompiled bytecode.. the size is relevant to what's encoded, just like anything else
[01:10:57] <PJBoy> LCD TVs got rid of CRTs
[01:11:00] *** Quits: Raziel (~Raziel@user/raziel) (Killed (NickServ (GHOST command used by RazielZ)))
[01:11:04] *** RazielZ is now known as Raziel
[01:11:05] <johnny> and we lost something from that
[01:11:17] <rpav> PJBoy: ok that kinda happened actually i think but maybe i just don't know the details
[01:11:17] <LordKalma> girth, mostly
[01:11:26] <sprout> wasn't anything wrong with horses either
[01:11:39] <sprout> (me showing off his age)
[01:11:40] <rpav> finding a crt these days is hard :(
[01:11:46] <LordKalma> you had to stop and change horses every 100km
[01:11:48] <ARoxdale> We lost a LOT, when development as a whole moved away from rich clients. It made deployment easier sure, but the quality of 'application' software has nosedived.
[01:11:51] <LordKalma> you know, like an electric car
[01:11:53] * LordKalma runs
[01:11:53] <LordKalma> hahah
[01:11:58] <PJBoy> even finding a non-smart TV is tricky
[01:11:59] <rpav> heheh
[01:12:10] <rpav> PJBoy: yeah and it probably will be crap if you do ;/
[01:12:22] <kalven> The idea that new tech is coming isn't naive. What is naive is thinking that whatever supplants what we have now won't end up bloated and messy as well.
[01:12:22] <LordKalma> well, most smart tvs are crap too
[01:12:22] <rpav> like no one puts the best panels on non-smart tvs
[01:12:26] <sprout> ah well,  I should refactor.  o/
[01:12:31] <LordKalma> like samsung TVs WITH FUCKING ADS
[01:12:38] <rpav> sprout: did you factor a first time?
[01:12:38] <LordKalma> AS IF YOU HADN'T PAID ENOUGH FOR THE THING
[01:12:44] <ARoxdale> This is why I think the web and related technologies -- DOM, js, frameworks, etc -- have hit a dead end and will end up basically dying the moment something better comes along.
[01:12:45] <PJBoy> ikr
[01:12:49] <rpav> LordKalma: right
[01:13:02] <ARoxdale> And the better thing will probably be written in .... C
[01:13:02] <rpav> LordKalma: i finally got our sony thing to stop pushing random channels i think
[01:13:07] <rpav> they're buggy as fuck too
[01:13:11] <kalven> there's no evidence that it's a dead end.. it's constantly evolving
[01:13:14] <rpav> android bullshit
[01:13:14] <LordKalma> We gotta start jailbreaking TVs and install custom firmwares
[01:13:44] <rpav> LG (?) uses this linux-based OS that actually behaved pretty well whne i played with it
[01:13:51] <rpav> like, more linuxy than android
[01:13:56] <rpav> not that you can get a terminal but ;P
[01:14:12] <LordKalma> webOS.. yeah, it's "fine"
[01:14:23] <LordKalma> It uses Qt ;)
[01:14:43] <rpav> hah really?
[01:15:01] <LordKalma> haha yes
[01:15:04] <rpav> all i can say is it was far better-designed and better-behaved than android's stuff
[01:15:09] <rpav> also, wasn't webOS an MS thing
[01:15:22] <LordKalma> https://en.wikipedia.org/wiki/WebOS
[01:15:24] <ARoxdale> Qt is a good example of a movement back towards native clients. I still cannot fathom why Qt came back to life, but some people did move back into C++ land for the speed.
[01:15:46] <rpav> "came back to life"
[01:15:53] *** Joins: John99 (~johnny@87.200.94.90.dynamic.jazztel.es)
[01:16:19] <LordKalma> I was going to question that also
[01:16:25] <ARoxdale> rpav: Come on. Who was using Qt 10 years ago?
[01:16:37] <LordKalma> Well, Qt pushed HARD onto embedded and auto
[01:16:43] <LordKalma> maybe that was their reboot
[01:16:43] <ARoxdale> People were hardly using C++ anymore
[01:16:54] <LiaoTao> Industrial machinery, medical devices, auto
[01:16:57] <ARoxdale> LordKalma: I think that was it.
[01:17:26] <ARoxdale> But before that, the trend was ever towards "web-style" GUIs. Remember XUL?
[01:18:16] <ARoxdale> Web-"apps" everywhere. Apps on phones with non-native code. But it failed, hard, because the speed wasn't there.
[01:18:42] <ARoxdale> In people's defence, GUI coding in C/C++/native was and probably still is a hellscape
[01:18:56] <kalven> https://trends.google.com/trends/explore?date=all&q=%2Fm%2F069fr
[01:19:12] <ARoxdale> If you just want pictures and buttons on screen with minimal effort, HTML is the simplest solution.
[01:19:17] <LordKalma> pretty downwards trend there
[01:19:31] <rpav> ARoxdale: a lot of industry :p
[01:19:42] <PJBoy> <Qt> Whilst you were still writing proposals and debating committee time, *I* was busy writing countless utilities, *my* standard library runs circles around your pitiful effort
[01:19:45] <rpav> think less "i dont' remember using qt in 2010 so it didn't happen"
[01:19:46] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:20:15] <PJBoy> <C++03> Our response is EWG issue #311, pending resolution
[01:20:19] <LordKalma> PJBoy, Qt really has the dauting task of trying to give C++ a library compared with a java or C# standard lib
[01:20:34] <ARoxdale> I thought it was dead in 2010. Along with COM and Win32 dialogs.
[01:21:44] <johnny> well it'd be nice if they would split out their utilities to make it useful for other folks :(
[01:21:54] <johnny> and not licensed LGPL
[01:22:05] <PJBoy> there's boost
[01:22:23] *** Quits: magla (~gelignite@55d4ce3b.access.ecotel.net) (Quit: Stay safe!)
[01:22:26] <LordKalma> boost is more stdlib than the stdlib itself
[01:22:33] <LordKalma> apart from like ASIO it's low-level crap
[01:22:42] <LordKalma> like more containers and a lambda engine nobody asked for
[01:22:44] <johnny> sure, but boost isn't as easy to use as say QObject with QVariant
[01:22:50] *** Joins: chozorho (~chozorho@2601:146:300:c30::9183)
[01:23:00] <PJBoy> what makes QVariant so great?
[01:23:08] <LordKalma> not QVariant
[01:23:08] <ARoxdale> People don't want boost. They want QVideoPlayerWindowWithVRInterface
[01:23:17] <johnny> it makes it possible to code C++ like python in a lot of ways
[01:23:18] <LordKalma> it's any Q-thing with QObject
[01:23:21] <PJBoy> oh right
[01:23:21] *** Joins: letto (~letto@86.120.85.133)
[01:23:31] <LordKalma> the QObject metadata makes things be magic
[01:23:42] <LordKalma> for example, QPointer is a non-owing pointer that looks like a raw pointer
[01:23:48] <LordKalma> but knows if the object was destroyed
[01:25:10] <PJBoy> sounds very non zero overhead >:(
[01:25:22] <LordKalma> it's actually pretty much overheadless
[01:25:30] <ARoxdale> It sounds nice, but are you really going to trust Qt with your codebase.
[01:25:30] <LordKalma> you have to check if the object was destroyed
[01:25:37] <LordKalma> so you don't pay for it if you don't want
[01:25:55] <johnny> not everything needs to be that low overhead though imo
[01:26:03] <LordKalma> and it knows the object was destroyed or not by subscribing to a QObject signal they emit on destruction
[01:26:14] <PJBoy> it sounds like a std::optional<T>*
[01:26:18] <LordKalma> so it's literally a function call when you create the pointer to subscribe the signal
[01:26:26] <LordKalma> and a callback call when the signal is emited
[01:26:48] <LordKalma> pretty slim if you ask me
[01:27:12] <johnny> ARoxdale, it's not like you have a lot of choice if you want a gui written in C++ that can do everything qt does
[01:27:13] <PJBoy> idk
[01:27:23] <PJBoy> it makes destoying a vector of pointers take linear time instead of constant
[01:27:58] <johnny> a cross platform gui especially
[01:28:15] <LordKalma> well, PJBoy, it's a vector of objects, not raw pointers, of course
[01:28:23] <LordKalma> trade-offs I guess
[01:28:38] <LordKalma> https://doc.qt.io/qt-6/qpointer.html#details
[01:28:44] <PJBoy> tradeoff for sure
[01:28:49] <ARoxdale> You have to trust Trolltech. People did that before and got fried. There were huge rows over this. 20 years ago. Again I am aghast that Qt is still around.
[01:29:09] <LordKalma> Trolltech isn't a thing for 20 years
[01:29:30] <johnny> kde made an agreement with the qt company such that the code for the core stuff will stay FOSS
[01:29:35] <PJBoy> but I'm actually thinking an std::optional<T>* might be cheaper
[01:29:41] *** Joins: markong (~kvirc@213.146.188.203)
[01:29:50] <LordKalma> PJBoy, an optional doesn't know the object was cleared *elsewhere*
[01:29:54] <LordKalma> that's the thing with QPointer
[01:30:06] <LordKalma> it's a non-owing raw pointer-ish that knows the object was deleted
[01:30:20] <PJBoy> nah I have a pointer to optional
[01:30:28] <LordKalma> ahh pointer to optional
[01:30:36] <LordKalma> fair, but weird
[01:31:01] <PJBoy> that would still be trivially destructible, so my vector of pointers destruction is still constant time
[01:31:10] <LordKalma> Qt has been fucked again and again. Including by the LGPL and by Nokia
[01:31:27] <PJBoy> and you wouldn't pay for construction or destruction of the pointer
[01:31:36] <LordKalma> It's amazing they are still a company. And growing, and with a couple good last quartely reports
[01:31:59] <PJBoy> what happened with LGPL?
[01:32:11] <LordKalma> PJBoy, I don't see a good use case for vectors of qobjects though haha
[01:32:22] <LordKalma> LPGL allows companies to leech on Qt
[01:32:25] <PJBoy> fair
[01:32:38] <PJBoy> (at the vector of qobject comment)
[01:32:47] <johnny> if it wasn't LGPL though would Qt even have gotten popular? i doubt it
[01:32:50] <PJBoy> I mean on LGPL ofc
[01:32:51] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[01:32:56] <johnny> without KDE where is Qt ?
[01:33:02] <PJBoy> *on LGPL too
[01:33:08] <LordKalma> the ideal license would be LGPL without commercial
[01:33:13] <LordKalma> or even straight up GPL
[01:33:20] <ARoxdale> You know the Gnome/KDE split. That was Qt.
[01:33:21] <johnny> if twas GPL nobody would use it
[01:33:35] <PJBoy> LGPL without commercial is entrapment :p
[01:33:36] <LordKalma>  LGPL without commercial usage of LGPL allowed, that's what I mean
[01:33:53] <johnny> what would be ideal about that?
[01:33:56] <LordKalma> want to build a closed app, pay
[01:34:15] <johnny> that's pretty impossible for them to do without getting forked
[01:34:18] <LordKalma> would be ideal in the sense that the Qt company would have companies not leeching and paying instead
[01:34:20] *** Joins: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it)
[01:34:26] <johnny> and i think breaking the KDE agreement
[01:34:35] <LordKalma> and maybe they wouldn't fuck the FOSS community
[01:34:44] <LordKalma> johnny, I'm imagining. It's of course impossible atm
[01:35:06] <johnny> KDE wants the LGPL Qt
[01:35:07] <kalven> ARoxdale: what do you mean?
[01:35:25] <LordKalma> KDE would love a GPL Qt
[01:35:36] <LordKalma> GPL isn't a problem for KDE
[01:35:43] <LordKalma> LGPL is a problem for Qt though
[01:35:51] <LordKalma> again, allows for leeching
[01:35:55] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[01:35:55] <johnny> that's not what the agreement specifies though is it?
[01:36:04] <ARoxdale> It's very possible. Remember SCO vs Linux? Oracle vs Google. This stuff can resurface at any time. Lawyers are always smelling rot in the water.
[01:36:10] <johnny> iirc it says LGPL, not GPL
[01:36:14] <LordKalma> I don't know, ad honestly not much interesting in the agreement,. I'm just making general remarks
[01:36:25] <johnny> the agreement says what KDE wants
[01:36:27] <ARoxdale> kalven: Gnome was created because KDE was using Qt and people didn't trust it. For good reason.
[01:36:37] <johnny> no, it was about licensing specifically
[01:36:42] <LordKalma> johnny, wrong. The agreement says what the parties *agreed* to
[01:36:46] <LordKalma> not what they wanted
[01:36:57] <ARoxdale> If KDE was still the only Linux desktop, every distro could be torpedoed at once.
[01:37:07] <johnny> ah true, so where's indiciation that KDE wants the GPLed Qt ?
[01:37:21] <LordKalma> I feel you're not reading what I'm writing
[01:37:37] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[01:37:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:37:40] *** ChanServ sets mode: +v npaperbot
[01:37:51] <johnny> hmm? i agreed with what you just said. now i just want to know the other part
[01:38:02] <LordKalma> I said that KDE would be fine and happy if Qt was GPL, because that's the FOSS culture in the linux world anyway
[01:38:03] <kalven> ARoxdale: are you saying they could retroactively revoke an open source license?
[01:38:29] <johnny> LordKalma, and yet Gtk is LGPL.. if that was true it would have been GPL instead
[01:39:01] <LordKalma> well, then you have the adoption argument
[01:39:13] <LordKalma> GTK GPL only wouldn't be attractive of course
[01:39:15] <johnny> well they care more about adoption than license purity
[01:39:26] <LordKalma> yes, of course
[01:39:37] <LordKalma> that's why GCC doesn0t make compiled binaries be GPL hahah
[01:39:39] <johnny> and i want an indication that KDE would prefer license purity over adoption
[01:40:01] <LordKalma> I'm not saying they *want* I was arguing they would be fine with it (probably)
[01:40:05] <ARoxdale> kalven: Qt isn't open source.
[01:40:15] <johnny> it's LGPL.. so yeah it is..
[01:40:40] <LordKalma> did I dream up https://code.qt.io/cgit/ ? hahah
[01:41:06] <johnny> well code drops don't make things open source for some people.. just pure access to the code doesn't count to a lot of folks
[01:41:30] <johnny> some folks have now pulled in an open development process as what it takes to be considered open source
[01:41:34] <LordKalma> well, I've seen licenses in the likes of "you can look but you can't use"
[01:41:48] <johnny> those definitely don't count
[01:41:57] <kalven> ARoxdale: I know it wasn't using a FOSS license waaay back in the day, but that's like 20 years ago
[01:42:04] *** Quits: AmR (~AmREiSa@156.199.92.40) (Quit: Konversation terminated!)
[01:42:21] <johnny> but Qt seems open source to me.. and people consider gitlab community edition open source even though it has commercial parts..
[01:42:34] <johnny> i mean even though the community edition isn't the whole thing
[01:42:39] <LordKalma> johnny, and btw, you might want to know that KDE if very much willing for license compromises
[01:42:57] <LordKalma> they made KDE syntax highlight BSD as a favor to the Qt company
[01:43:00] <LordKalma> because Qt creator uses it
[01:43:45] <johnny> that doesn't really change anything  i think
[01:43:56] <johnny> i still think they do not want a GPLed Qt
[01:44:15] <ARoxdale> johnny: Can I download the Qt source, for all platforms, fork it and change all the Q's to P's and call it the Pt library and have all the distros use that instead of Qt? I believe the answer is still no, but to be open source it needs to be yes. Not because of some socialist conspiracy, but to prevent a oligarchical one.
[01:44:17] <LordKalma> if anything, I'm supporting your arguments
[01:44:35] <kalven> ARoxdale: so.. copperspice?
[01:44:36] <johnny> ARoxdale, wh'ats stoppingyou?
[01:44:48] <johnny> as far as i know you can do exactly that
[01:44:58] <ARoxdale> I don't know. The last time I checked you couldn't. I presume you still can't.
[01:44:59] <LordKalma> yeah, ARoxdale, I don't think you're very much up to date with Qt's licensing
[01:45:10] <kalven> https://www.copperspice.com/
[01:45:13] <johnny> LordKalma, but it's been like that for like 15 years
[01:45:35] <LordKalma> 15 years ago I didnt' know what a line of code was
[01:45:48] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[01:46:08] <LordKalma> copperspice is a Qt fork with a moc-sectomy, for context
[01:46:11] <johnny> ARoxdale, please show me a time after 2003 in which you couldn't, just so i can understand why you think that
[01:46:53] <ARoxdale> Nokia definitely tried something on after the buyout.
[01:47:15] <LordKalma> Nokia, if anything, was itnerested in Qt being as free as possible
[01:47:22] <johnny> and what was the problem?
[01:47:22] <LordKalma> LPGL was the only viable option for Qt under Nokia
[01:47:33] <LordKalma> they wanted to make Qt the de-facto framework for Symbian
[01:47:43] <johnny> ARoxdale, i *think* you're just misremembering what the problem was
[01:47:45] <LordKalma> so you needed permissive usage licensing
[01:48:13] <LordKalma> so no, it wasn't in Nokia's interest to close down qt
[01:48:16] <LordKalma> on the contraire
[01:48:52] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[01:49:53] <kalven> ARoxdale: so are we ok with calling Qt open source now?
[01:49:54] <johnny> i'd be willing to be proven wrong though. alhtough copperspice definitely shows that it's possible now
[01:50:16] <johnny> but i don't quite remembera time when copperspice wasn't possible
[01:50:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:50:59] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:51:47] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 268 seconds)
[01:53:41] <LordKalma> KDE even has a "fork" of Qt 5
[01:53:50] <LordKalma> https://community.kde.org/Qt5PatchCollection
[01:54:19] <LordKalma> it's basically them trying to mirror the commercial only releases of 5.15.x, x>2
[01:54:48] <johnny> that's the thing i don't like most about what Qt is currently doing
[01:54:57] <ARoxdale> kalven: I cannot trust Trolltech. It might be open source, but I don't trust it.
[01:55:09] <johnny> they aren't trolltech anymore.. please stop calling it that
[01:55:13] <LordKalma> Good thing Trolltech isn't a company since like 15 years
[01:55:26] <kalven> ARoxdale: okay, but can we separate facts from opinion at least?
[01:55:29] <johnny> indeed
[01:55:44] <LordKalma> I'm with kalven
[01:55:55] <LordKalma> I'm very much known for being opinionated on Qt around here
[01:56:13] <PJBoy> really?
[01:56:15] <LordKalma> but facts are facts, and I've had changed my mind about many topics when presented with some info. Qt included
[01:56:17] <johnny> the fact is.. qt has changed what code they distribute to make it harder to keep up with, thus requring that kde patch repo
[01:56:23] <PJBoy> I thought your were affactuated
[01:56:26] <johnny> and i don't like that
[01:56:35] <ARoxdale> The facts are that there is more to open source than just the licence. What happens if Qt come along with juicy propriatary components or library addons, and developers nromalize their use in a way that's hard for distro maintainers to exclude?
[01:56:47] <LordKalma> wtf is affactuated, PJBoy ?
[01:56:53] <johnny> distro maintainers literally won't include it
[01:57:03] <johnny> ARoxdale, again.. KDE's agreement with Qt.. read it
[01:57:20] <LordKalma> Qt has GPL/commercial addons
[01:57:21] <johnny> and there's nothing wrong with qt making proprietary components
[01:57:23] *** Quits: x11ff (~x11ff@151.250.201.160) (Ping timeout: 264 seconds)
[01:57:31] <LordKalma> and even proprietary components
[01:57:37] <LordKalma> but the core libs are very much protected
[01:57:41] <johnny> just like propreitary components can be used with Gtk or any other lib
[01:57:44] <LordKalma> by said agreement
[01:57:58] <kalven> ARoxdale: but then you're changing the definition of "open source" to be something that you feel suits your argument
[01:58:08] <kalven> and to no longer be the established meaning
[01:58:12] <LordKalma> LGPL is an OSI-approved license
[01:58:17] <LordKalma> that's very Open source if you ask me
[01:58:18] <PJBoy> it was a wordplay on "affectuate" meaning to show your love for something, and "fact" the opposite of opinion
[01:58:41] <LordKalma> I'm not a Qt fanboy
[01:58:44] <LordKalma> far from it
[01:58:50] <PJBoy> oh I know
[01:59:10] <johnny> i'm not a qt fanboy at all, but i do wanna keep it factual
[01:59:11] <ARoxdale> kalven: I don't know what this agreement is, but this type of thing does NOT happen with most free software. Or need to happen. Why does this exist? https://kde.org/community/whatiskde/kdefreeqtfoundation/
[01:59:29] <johnny> that's what keeps qt free
[01:59:40] <LordKalma> the KDE Free Qt Foundation is literally the signatory of the agreement...
[01:59:40] <johnny> what's wrong with it?
[01:59:59] <ARoxdale> What? Why would FOSS software need an agreement? I don't understand that.
[02:00:00] <LordKalma> you know that you can't just have a random person sign something on behalf of an "abstract" project
[02:00:05] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:00:23] <johnny> all of apache stuff is under the apache foundation which also provides such an agreement
[02:00:40] <LordKalma> Licenses themselves are agreements
[02:00:40] <johnny> to make sure the code stays available under nothing less free than the apache license
[02:00:47] <ARoxdale> This just seems shady as all hell.
[02:00:49] <johnny> and heck.. it's the same thing with the FSF
[02:00:57] <kalven> dude.. emotion driven arguments
[02:01:15] <LordKalma> hahaha indeed
[02:01:15] <johnny> kalven, it's not an emotion driven argument.. it's just not the argument that's been made specifically
[02:01:23] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[02:01:27] <LordKalma> kalven was refering to "shady as hell"
[02:01:29] <johnny> the argument is.. the fact that such an agreement is necessary shows bad faith
[02:01:34] <LordKalma> which is just... not how law works
[02:01:40] <ARoxdale> OK. If the FSF, or KDE, or Qt or any of the signatories of thee agreements disappear/become unicorporate or whatever, what then happens to the code? Is it still open source?
[02:01:41] <johnny> it's not about the law, it's about trust
[02:01:42] *** Joins: great_taste (~great_tas@190.32.235.20)
[02:01:51] <kalven> johnny: I'm talking about ARoxdale's "arguments"
[02:02:02] <LordKalma> Any code already open source will be open source
[02:02:03] <johnny> i'm saying the argument that's beeing made is the one ijust said
[02:02:04] <ARoxdale> johnny: I don't need ot trust anyone with open source software. I have the licence.
[02:02:16] <johnny> dude.. i'm trying to help you here
[02:02:19] <LordKalma> if Qt closed TODAY the code written yesterday is under the LGPL
[02:02:25] <johnny> you didn't express your concerns properly
[02:02:26] <LordKalma> period
[02:02:37] <LordKalma> the agreement just assures it'll keep being so
[02:02:40] <LordKalma> so that "TODAY" doesn't come
[02:03:01] <johnny> ARoxdale has a problem with the agreement even needing to exist
[02:03:05] <ARoxdale> I do!
[02:03:27] <LordKalma> the agreement exists probably to assure said trust in the Qt project
[02:03:28] <johnny> but it's really that that different than what happens with the apache foundation
[02:03:35] <LordKalma> but now you cant trust it because the agreement
[02:03:38] <LordKalma> impossible to win
[02:03:44] <kalven> ARoxdale: what's your most favorable interpretation of that agreement?
[02:03:45] <johnny> it is.. so we should probably stop bothering
[02:04:05] <LordKalma> kalven, they don't have one because they are judging it in abstract
[02:04:17] <LordKalma> without knowing motivation of clauses
[02:04:24] <johnny> they haven't even read the agreement
[02:04:33] <LordKalma> *or clauses
[02:04:41] <johnny> i didn't read the agreement either.. but i trust kde's interpreation of it :)
[02:04:48] <ARoxdale> kalven: That there is an implied threat of the agreement being withdrawn and Qt or their owners attempting some kind of hostile takeover of the code, or tools, or support software, or whatever. Which for me personally, makes Qt a risky library to take into a codebase.
[02:05:07] <ARoxdale> It's like a peace treaty between great powers.
[02:05:20] <ARoxdale> They wouldn't need one unless they could actually go to war with one another.
[02:05:30] <LordKalma> violating the agreement means Qt would become BSD
[02:05:34] <LordKalma> so, there's that...
[02:05:43] <johnny> again, the point is the agreement is necessary at all
[02:06:05] <johnny> i don't find that point interesting myself, but at least that's the point that's being made
[02:06:31] <LordKalma> and my argument is: you don't trust the Qt company to keep code free. Then someone makes an agreement to keep code free and you distrust it also.
[02:06:35] <PJBoy> the more agreements you have, the more leverage
[02:06:39] <LordKalma> What options does that leave?
[02:06:48] <PJBoy> is what I got out of that
[02:06:49] <ARoxdale> LordKalma: Not using Qt.
[02:06:55] <LordKalma> sure
[02:06:59] <LordKalma> be my guest
[02:07:01] <kalven> ARoxdale: so, without the agreement, if whoever currently owns the copyright decides to close up shop, you would at least have the last released gpl version. Do you agree that they can't take that away?
[02:07:04] <johnny> nobody is trying to force you
[02:07:26] <johnny> i don't even like Qt.. and honestly wish it didn't exist btw.. but at least i know what we're talking about here :)
[02:07:36] <PJBoy> you wish it didn't exist?!
[02:07:37] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:07:39] <johnny> yes
[02:07:41] <PJBoy> that's pretty harsh
[02:07:50] <ARoxdale> kalven: You've got the license. But remember in most cases you don't have the trademark rights or things like that. e.g. Firefox/Iceweasel
[02:07:55] <johnny> because it drove the greatest problem with the linux desktop
[02:07:56] <LordKalma> Qt is one of those great examples of "there's two kinds of software: the one you hate and the one you don't use"
[02:08:04] <johnny> LordKalma, no.. i hate what it did to linux
[02:08:14] <LordKalma> what did it do to linux?
[02:08:14] <johnny> not because of some technical problem with qt itself
[02:08:15] <PJBoy> what is that great problem?
[02:08:16] <LordKalma> genuine question
[02:08:23] <kalven> ARoxdale: of course.. so you agree that whatever source is open source right now wouldn't go away.
[02:08:23] <LordKalma> I'm nor versed in the history
[02:08:25] <johnny> the DE splits that made too much fragmentation
[02:08:36] <ARoxdale> So maybe the agreement is about that. But to me, it just looks like there's been a peace treaty by parties who could go to war in the future, so why would I adopt Qt and risk getting pulled in?
[02:08:36] <LordKalma> hahah you think that's due to Qt
[02:08:42] <johnny> it is due to Qt
[02:08:47] <LordKalma> Linux folks LOVE to re-invent the wheel
[02:08:49] <johnny> i don't think.. i watched it happen
[02:08:54] <LordKalma> don't blame it on Qt
[02:09:00] <johnny> i will blame on it on Qt :)
[02:09:00] <PJBoy> DE splits?
[02:09:04] <PJBoy> desktop environment?
[02:09:06] <johnny> syes
[02:09:11] <LordKalma> every single thing in Linux has been re-written 523 times
[02:09:20] <PJBoy> systemd hasn't been
[02:09:23] <johnny> sure.. but at least it'd all have been rewritten in Gtk instead
[02:09:29] <ARoxdale> Well, there ahve been more of those since. Over issues that had nothing to do with licencing.
[02:09:29] <LordKalma> was alsa/pulse-audio/etc also Qt's fault'
[02:09:45] <johnny> LordKalma, this is before pulse...  and it was the kde soundserver!
[02:09:50] <johnny> before alsa even
[02:09:58] <pulse> Before my time
[02:09:59] <johnny> vs gnome's esound
[02:10:00] <LordKalma> PJBoy, but there are systemd-less systems
[02:10:16] <ARoxdale> For now....
[02:10:17] <PJBoy> wow systemd even provides `less` now
[02:10:26] <LordKalma> hahaha
[02:10:40] <johnny> LordKalma, i watched it all happen, and it sucked..  :(
[02:10:55] <LordKalma> I mean, I can totally agree that people make splits out of disagreements
[02:10:56] <LordKalma> for sure
[02:11:08] <johnny> if kde had written those components in plain C and standarized them rather than forcing C++.. we'd probably have a more unified desktop experience
[02:11:12] <LordKalma> but ecosystem fragmentation is much greater than that, I'd say
[02:11:16] <johnny> an i'm referring to gioslaves and whatnot
[02:11:22] <LordKalma> yeah, doubt that logical jump
[02:11:23] <johnny> qioslaves* and uhmm
[02:11:33] <johnny> i can't remember the name of the kde vfs
[02:11:52] <LordKalma> many DEs was unavoidable
[02:11:57] <LordKalma> with Qt hate fueld or not
[02:12:14] <johnny> it's not about hating Qt at all.. it was about licensing concerns, and C++
[02:12:39] <LordKalma> well, if it was plain C, someone would have said "oh let's do a C++ DE, it'll nbe much better"
[02:12:43] <LordKalma> see how it goes both ways?
[02:12:49] <LordKalma> it's just how it is
[02:12:56] <johnny> but it never would have gotten off the ground without the whole gui toolkit part
[02:13:01] <LordKalma> you can't avoid fragmentation
[02:13:04] <johnny> just like how almost no other DE has gotten off the ground
[02:13:17] <johnny> i'm not interested in avoiding all fragmentation.. plenty of people use different WMs
[02:13:31] <LordKalma> XFCE, Cinnamon?
[02:13:34] <johnny> i was interesting in avoiding two great power fragmentation
[02:13:54] <johnny> boht still reuse many common gnome components and libraries
[02:14:02] <LordKalma> I get where you coming from, but I have to say I don't buy the logic jump
[02:14:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[02:14:53] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[02:15:04] <LordKalma> I see fragmentation everywhere else
[02:15:11] <LordKalma> even I want to reinvent some wheels
[02:15:15] <johnny> LordKalma, alternatively.. if Qt had been LGPL from the start, it'd probably have solved he problem too
[02:15:44] <johnny> that'd be fine as well :)
[02:16:08] <LordKalma> well, this is politics, more than anything else
[02:16:19] <LordKalma> and I think that breaks are inevitable
[02:16:20] <LordKalma> just that
[02:16:20] <johnny> eh.. there were real technical and licensing concerns
[02:16:25] *** Quits: engest (~engest@50.39.227.149) (Read error: Connection reset by peer)
[02:16:34] <LordKalma> I bet
[02:17:04] <johnny> so really i'm not saying i wish specifically Qt didn't exist, but rather i wish it was one or the other
[02:17:55] <johnny> and now... dinner time
[02:18:03] <LordKalma> and I have to get some sleep
[02:18:05] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[02:19:02] <kalven> and then ap project like systemd comes along and everyone loses their mind
[02:20:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:25:58] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:29:57] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Remote host closed the connection)
[02:30:29] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[02:33:16] *** Joins: engest (~engest@50.39.227.149)
[02:33:19] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:35:37] *** Joins: Tokamak (~Tokamak@172.58.188.46)
[02:40:26] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[02:40:54] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[02:46:39] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:48:32] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:53:57] *** Joins: markong (~kvirc@213.146.188.203)
[02:56:49] *** Quits: engest (~engest@50.39.227.149) (Read error: Connection reset by peer)
[02:56:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:57:06] *** Joins: engest (~engest@50.39.227.149)
[03:05:03] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[03:05:03] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:05:27] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:19:18] *** Quits: engest (~engest@50.39.227.149) (Read error: Connection reset by peer)
[03:20:34] *** Quits: Tokamak (~Tokamak@172.58.188.46) (Read error: Connection reset by peer)
[03:22:49] *** Joins: Tokamak (~Tokamak@172.58.188.46)
[03:26:04] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:31:20] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[03:31:33] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6919:49ab:83b4:dae6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:39] *** Joins: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[03:35:43] *** Joins: engest (~engest@50.39.227.149)
[03:38:28] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[03:41:05] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Ping timeout: 265 seconds)
[03:51:23] *** Quits: Tokamak (~Tokamak@172.58.188.46) (Ping timeout: 264 seconds)
[03:53:01] *** Joins: Tokamak (~Tokamak@172.58.188.46)
[03:54:05] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Quit: varioust)
[03:54:30] *** Quits: John99 (~johnny@87.200.94.90.dynamic.jazztel.es) (Quit: Leaving.)
[04:03:10] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[04:04:26] *** Joins: imi (~imi@catv-89-132-115-236.catv.broadband.hu)
[04:04:29] <computerquip> systemd more like universed hehe
[04:04:48] <computerquip> Get it? Because... it's too big or something? I'll see myself out...
[04:07:22] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Client Quit)
[04:08:31] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:15:07] *** Joins: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net)
[04:29:22] <InPhase> systemctl is-failed humor.service && systemctl restart humor.service
[04:32:45] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 268 seconds)
[04:32:51] *** Quits: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it) (Quit: The_Jag)
[04:34:57] *** Quits: varioust (~varioust@72-46-56-102.lnk.ne.static.allophone.net) (Quit: varioust)
[04:37:03] *** Quits: Tokamak (~Tokamak@172.58.188.46) (Read error: Connection reset by peer)
[04:37:32] *** Quits: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[04:37:50] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:38:32] *** Joins: frost (~frost@user/frost)
[04:38:44] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[04:42:06] *** Joins: Tokamak (~Tokamak@172.58.191.92)
[04:46:51] *** Quits: engest (~engest@50.39.227.149) (Read error: Connection reset by peer)
[04:47:17] *** Joins: engest (~engest@50.39.227.149)
[04:49:59] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:51:52] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[04:54:48] <KombuchaKip> kalven: I'm still having an issue. I'm trying to have a class constructor spawn a background thread, blocks via condition_variable::wait() until the thread signals its initialized the object state, and then continue doing some work periodically updating the object state in the background until the object goes out of scope and the thread politely exits. Right now it is deadlocking on the wait(), despite the call in the thread to noti
[04:54:49] <KombuchaKip> fy_one(). What am I doing wrong? https://godbolt.org/z/e5jr3EMha
[04:55:00] <KombuchaKip> RandomReader: Feel free to chime in again too.
[04:57:18] *** Joins: pulse (~pulse@user/pulse)
[04:58:36] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6bff) (Quit: Leaving)
[05:02:23] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[05:02:49] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[05:19:00] <kalven> KombuchaKip: I think your loop after doing notify is starving out the main thread.. it's hogging the mutex. if you (for demo purposes) insert a short sleep at the top of the loop before grabbing the mutex, it works
[05:21:21] <KombuchaKip> kalven: Yup. That sounds about right. I'll add a short 10ms delay at the start of the loop. So I annotate my code correctly, is there a name or term of art for this kind of problem?
[05:21:44] <kalven> starvation
[05:22:22] <kalven> btw, if you're on c++20 there's std::latch
[05:23:04] * KombuchaKip looks up std::latch
[05:23:19] <KombuchaKip> kalven: I'm on C++17, but still interested to learn about that.
[05:24:33] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:28:48] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[05:34:27] <lru> KombuchaKip: your destructor claims the lock and doesn't give it up
[05:34:49] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[05:35:04] <lru> the while loop probably hangs waiting for the destructor's lock to free
[05:35:49] <KombuchaKip> lru: It didn't get past the wait() call in the constructor. The destructor, since giving the BackgroundThread() loop a breather, seems to exit cleanly.
[05:35:49] <lru> I don't think you need a lock in the destructor either... join does the work you want for you
[05:35:54] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[05:36:04] <KombuchaKip> lru: Yeah, that's actually a good point that no lock is needed.
[05:36:16] *** Quits: X-Scale (~ARM@46.50.0.1) (Ping timeout: 268 seconds)
[05:36:57] <lru> also, you don't lock before your notify_one()... I'm not sure, but I suspect that is needed
[05:37:24] *** X-Scale` is now known as X-Scale
[05:37:29] <lru> one side does lock/wait and the other does lock/notify
[05:37:31] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:37:32] <KombuchaKip> lru: No, I think the mutex has to be unlocked before you notify_one() IIRC.
[05:37:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:37:40] *** ChanServ sets mode: +v npaperbot
[05:37:41] <KombuchaKip> lru: The wait() call already unlocks it.
[05:37:54] <lru> but that's in the main thread
[05:38:01] <lru> the new thread doesn't lock fresh
[05:38:51] <lru> reading https://en.cppreference.com/w/cpp/thread/condition_variable suggests the notify side can do lock/notify/unlock or lock/unlock/notify but not just notify
[05:39:12] <KombuchaKip> lru: Right, but does notify thread _need_ to lock it?
[05:39:35] <lru> according to my understanding of that page
[05:39:43] <KombuchaKip> kalven: ?
[05:39:46] <lru> but experimentation will prove it one way or the other :-)
[05:41:10] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[05:41:12] <lru> quoting: "Even if the shared variable is atomic, it must be modified under the mutex in order to correctly publish the modification to the waiting thread."
[05:43:14] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[05:43:33] *** Joins: biberu (~biberu@user/biberu)
[05:44:19] *** Quits: engest (~engest@50.39.227.149) (Quit: Leaving)
[05:44:30] <KombuchaKip> lru: As far as I know wait() starts by locking it, then unlocks, notify thread can lock or not, but has to be unlocked before notifying.
[05:45:39] <lru> true.. in the main thread it locks, then wait unlocks it, and the main thread blocks.... in the new thread, I suspect there needs to be a lock before the notify
[05:46:05] <lru> do you have it working without the lock?
[05:46:09] * KombuchaKip nods
[05:49:12] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[05:53:45] <lru> ok, maybe I'm wrong... if I remove the lock from the destructor and remove it from the while loop, it works fine
[06:00:12] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[06:03:23] <KombuchaKip> lru: Removing the lock in the destructor won't fix the old problem, but it's true that it's not necessary because the m_Finish being toggled followed by the join accomplishes the same thing.
[06:05:52] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 268 seconds)
[06:11:57] <kalven> the notifying thread doesn't have to lock
[06:13:16] <lru> kalven: how do you interpret the quote from cppreference?  I'm curious what I'm misreading
[06:14:10] *** Joins: great_taste (~great_tas@190.32.235.20)
[06:15:12] <kalven> oh, hmm.. well that quote is fairly unambigious. I wasn't aware of that, but I guess it makes sense from some atomic release semantics bool-sheet that is above my paygrade
[06:17:57] <lru> lol
[06:19:00] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[06:36:28] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[06:37:01] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[06:44:34] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:48:13] *** Joins: paule32_ (~paule32@user/paule32)
[06:49:43] *** Joins: paule32__ (~paule32@user/paule32)
[06:51:02] *** Joins: engest (~engest@50.39.227.149)
[06:52:06] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 268 seconds)
[06:53:21] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 268 seconds)
[06:54:21] *** Joins: paule32 (~paule32@user/paule32)
[06:56:26] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 268 seconds)
[07:48:22] *** Joins: nightstrike (uid487@id-487.uxbridge.irccloud.com)
[07:48:41] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[07:49:22] <nightstrike> when making a cuda kernel, for xxx<<< a, b >>>();  What are the types of a and b?  I see that most people use int, but is unsigned int ok?
[07:56:22] *** Joins: x11ff (~x11ff@151.250.201.160)
[08:17:15] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Read error: Connection reset by peer)
[08:26:19] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[08:32:38] *** Quits: x11ff (~x11ff@151.250.201.160) (Ping timeout: 268 seconds)
[08:34:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[08:38:45] *** Quits: chozorho (~chozorho@2601:146:300:c30::9183) (Remote host closed the connection)
[08:39:04] *** Quits: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[08:39:07] *** Joins: chozorho (~chozorho@2601:146:300:c30::8489)
[08:40:42] *** Quits: engest (~engest@50.39.227.149) (Ping timeout: 260 seconds)
[08:43:26] *** Joins: x11ff (~x11ff@151.250.201.160)
[08:46:16] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[08:48:12] *** Joins: malloy (~jimery@116.30.220.108)
[08:50:48] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[08:50:48] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[09:06:33] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[09:06:48] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:14:00] *** Quits: x11ff (~x11ff@151.250.201.160) (Ping timeout: 256 seconds)
[09:17:11] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 264 seconds)
[09:17:37] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:23:14] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Ping timeout: 260 seconds)
[09:25:39] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 268 seconds)
[09:36:17] *** Quits: chozorho (~chozorho@2601:146:300:c30::8489) (Quit: good night)
[09:37:32] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:37:41] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:37:41] *** ChanServ sets mode: +v npaperbot
[09:46:30] *** Joins: chozorho (~chozorho@2601:146:300:c30::8489)
[09:50:32] *** Joins: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com)
[09:52:37] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[10:01:39] *** Quits: ville (~ville@178-75-128-81.bb.dnainternet.fi) (Quit: leaving)
[10:04:15] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[10:04:55] *** Joins: CaCode_ (~CaCode@user/cacode)
[10:06:02] *** Joins: ville (~ville@178-75-128-81.bb.dnainternet.fi)
[10:06:42] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:21:07] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[10:28:32] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[10:29:12] *** Joins: CaCode (~CaCode@user/cacode)
[10:32:13] *** Joins: supernova (~quassel@2405:9800:ba11:6207:4b53:4575:18d8:faa9)
[10:32:15] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 268 seconds)
[10:36:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:44:45] <smallville7123> how do i get this to work :(   https://wandbox.org/permlink/HTfx5CAJQMDgjIjy
[10:48:54] *** Joins: CarloWood (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[10:49:58] <kalven> smallville7123: start by getting rid of Int:: on line 28
[10:50:56] <smallville7123> prog.cc:28:7: note: candidate function not viable: expects an l-value for 1st argument
[10:50:56] <smallville7123> Log & operator<<(Log & log, Int & i) {
[10:52:03] <kalven> Log l; l << i;
[10:52:32] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[10:52:36] <smallville7123> prog.cc:28:7: error: overloaded 'operator<<' must be a binary operator (has 1 parameter)
[10:52:36] <smallville7123> Log & operator<<(Int & i) {
[10:52:51] *** Joins: CaCode (~CaCode@user/cacode)
[10:53:22] <kalven> I was talking about the call site, don't change the operator<<
[10:53:41] <kalven> https://wandbox.org/permlink/XFKXucv4kOVUvScO
[10:55:55] <smallville7123> how do i make it be able to do Log() << i; like other libraries can
[10:58:04] <kalven> make it a function that returns an lvalue reference to the log
[10:58:12] <kalven> or hey, look at how they're doing it
[10:58:13] <smallville7123> as this works https://wandbox.org/permlink/PZ8XdqxnkQ04o3F0 but i dont want to hardcode it inside Log
[10:58:20] <kalven> or hey, just use the lib
[10:58:48] <smallville7123> nor rely on public values/functions
[11:04:48] * smallville7123 gives up
[11:14:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:748a:7e70:37c6:8b18)
[11:15:36] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[11:17:03] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:19:50] *** Joins: AmR (~AmREiSa@156.199.92.40)
[11:27:26] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[11:36:09] *** pah_ is now known as pa
[11:36:09] *** Quits: pa (~pah@host-79-12-185-170.retail.telecomitalia.it) (Changing host)
[11:36:10] *** Joins: pa (~pah@user/pah)
[11:44:56] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:46:04] <LordKalma> !rq
[11:46:05] <nolyc> LordKalma: <PJBoy> aka 0DR violatio :D
[11:52:36] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[11:55:03] *** Joins: Haohmaru (~wub@195.24.53.110)
[11:59:02] *** Quits: supernova (~quassel@2405:9800:ba11:6207:4b53:4575:18d8:faa9) (Ping timeout: 260 seconds)
[12:03:06] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[12:03:40] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:14:46] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[12:23:59] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:37:21] *** Quits: Haohmaru (~wub@195.24.53.110) (Remote host closed the connection)
[12:40:06] *** Joins: Haohmaru (~wub@195.24.53.110)
[12:56:09] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[12:56:15] *** Joins: plastico (~plastico@neomutt/plastico)
[12:58:19] <LordKalma> Finally I have github copilot :D
[12:59:19] <Haohmaru> did you fly the gitcraft by yourself?
[13:02:24] *** Joins: barix (~barix@user/barix)
[13:02:45] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:02:56] <LordKalma> it genuinely does make good suggestions
[13:03:13] <Haohmaru> why github tho
[13:03:17] <LordKalma> you can pretty much just "tab" away lots of boilerplate
[13:03:29] <LordKalma> https://copilot.github.com/
[13:04:02] <Haohmaru> what's this even?
[13:04:56] <LordKalma> autocompletion of code, but with AI
[13:05:09] <LiaoTao> It spits out code from some random person's repo whenever you type a keyword that it recognizes
[13:05:19] <LordKalma> there was "tabnine", but the damn bastards made it freemium
[13:05:23] <LordKalma> LiaoTao, it's beetter than that, common
[13:05:27] <Haohmaru> <skepticism_intensifies.jpg>
[13:05:27] <LordKalma> come'on* haha
[13:05:45] <LiaoTao> No, that's basically it. It just does fancy "AI" on the search part
[13:06:10] <LordKalma> https://i.gyazo.com/7f65df0dc8eb0554de54c736b3a65b19.png
[13:06:13] <Haohmaru> so it constantly om-noms github.com ?
[13:06:13] <LordKalma> see this for example
[13:06:27] <LordKalma> it picks up the pattern I was making
[13:06:32] <LordKalma> and suggests the correct line
[13:06:56] <Haohmaru> what language is this?
[13:06:59] <LordKalma> python
[13:07:01] <Haohmaru> eww
[13:08:23] <LiaoTao> Haohmaru, They have been running the training on github repos, yes
[13:08:35] <LiaoTao> Which is very questionable when it comes to licensing
[13:08:41] <Haohmaru> because github contains 100% quality code
[13:08:50] <LiaoTao> Exactly
[13:09:04] <Haohmaru> i'll skip
[13:09:31] <Haohmaru> oh, actually, you know what? i do have some of my code on github
[13:09:34] <Haohmaru> BEWARE >:)
[13:14:46] <AmR> Any one work to get SQL Queries for file with regexp ?
[13:15:26] <AmR> regex*
[13:16:58] *** Quits: chozorho (~chozorho@2601:146:300:c30::8489) (Ping timeout: 260 seconds)
[13:19:57] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[13:20:21] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:30:54] *** Joins: x11ff (~x11ff@151.250.201.160)
[13:37:32] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:37:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:37:40] *** ChanServ sets mode: +v npaperbot
[13:41:38] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:101e:77bb:fa95:f750)
[13:42:59] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[13:43:32] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[13:44:07] *** Joins: The_Jag (~The_Jag@host-82-54-168-243.retail.telecomitalia.it)
[13:54:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[13:54:49] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[13:56:10] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:02:33] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Ping timeout: 268 seconds)
[14:03:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[14:17:58] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[14:19:50] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:23:46] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[14:32:30] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[14:32:38] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:32:44] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[14:40:48] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:45:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:01:48] *** Joins: johnny (~johnny@user/johnny)
[15:03:05] *** Joins: markong (~kvirc@213.146.188.203)
[15:10:59] *** Joins: cart_man (~rynot@host-78-144-127-199.as13285.net)
[15:17:09] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[15:17:34] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:17:55] <mort> do y'all usually use *mm wrapper libraries? Like gtkmm, cairomm, sdlmm, etc
[15:18:02] <mort> or do you just use the C interfaces directly
[15:23:02] <PJBoy> I used cairomm in my project
[15:23:25] <PJBoy> and in spite of it over-using shared_ptr in its interface, I'd still claim it's much better than the C API
[15:27:41] <TinoDidriksen> https://wiki.gnome.org/Projects/gtkmm/FAQ#Why_is_it_named_gtkmm.3F - and that then spread to other libs for no good reason.
[15:29:32] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[15:29:33] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[15:31:46] <Raziel> is there a ffmpegmm?
[15:32:26] <PJBoy> bahaha, that's a hilarious origin
[15:32:35] *** Quits: x11ff (~x11ff@151.250.201.160) (Ping timeout: 268 seconds)
[15:33:35] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:33:47] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:39:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:49:07] *** Joins: artok (~azo@mobile-access-567375-182.dhcp.inet.fi)
[15:59:56] *** Joins: x11ff (~x11ff@151.250.201.160)
[16:07:05] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:07:12] <rpav> generally C api wrappers are better than using the C api directly, but gtk/etc stuff are pretty good _in C_
[16:07:42] <rpav> probably no one expects them to be better than language wrappers in another language
[16:09:35] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[16:11:53] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[16:13:04] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[16:13:44] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Client Quit)
[16:17:52] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[16:18:18] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[16:32:12] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[16:33:47] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:40:20] *** Quits: Haohmaru (~wub@195.24.53.110) (Remote host closed the connection)
[17:00:14] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[17:00:34] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[17:01:06] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:05:02] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[17:06:48] *** Joins: engest (~engest@50.39.177.170)
[17:06:51] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[17:15:48] *** Joins: supernova (~quassel@2405:9800:ba11:6207:7337:2116:cd8d:51d9)
[17:20:13] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[17:20:52] *** Joins: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[17:23:26] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 260 seconds)
[17:23:48] *** Joins: X-Scale` (~ARM@83.223.227.196)
[17:26:04] *** X-Scale` is now known as X-Scale
[17:33:11] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[17:37:33] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:37:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:37:42] *** ChanServ sets mode: +v npaperbot
[17:38:21] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 256 seconds)
[17:41:41] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[17:41:55] *** Joins: wyre (~wyre@user/wyre)
[17:41:58] *** Quits: wyre (~wyre@user/wyre) (Remote host closed the connection)
[17:49:42] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[17:51:51] <Alipha> Quiet today
[17:53:51] <PJBoy> did you know
[17:53:55] <PJBoy> that we have this factoid
[17:54:01] <PJBoy> !specializations
[17:54:02] <nolyc> template<typename T> struct A { }; /* <- primary template */ template<> struct A<int> { }; /* <- explicit specialization. provides type A<int> */ template struct A<bool>; /* explicit instantiaton => generates specialization A<bool> */. struct A<long> a; /* <- implicit instantiation => generates specialization A<long> */ template<typename T> struct A<T*> { }; /* <- partial specialization. */
[17:54:23] <PJBoy> 'cause that would have been pretty useful for some of the discussions of the last week
[17:54:57] <PJBoy> also
[17:55:00] <PJBoy> according to cppreference
[17:55:07] <PJBoy> value initialisation got DR'd into C++98
[17:55:18] <PJBoy> meaning C++03 literally adds nothing to the standard
[17:56:11] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[17:57:14] *** Joins: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4)
[17:57:56] <Alipha> What about the contiguous requirement of std::string?
[18:02:46] <rpav> null-termination didn't happen to 11? sheesh
[18:06:23] *** Joins: pulse (~pulse@user/pulse)
[18:06:37] *** Joins: pepperoni (~pepperoni@gateway/vpn/pia/pepperoni)
[18:07:36] <pepperoni> what's the syntax for explicitly returning a std::variant? auto myfunc() -> std::variant<Typ1, Typ2> ... but I know thats not right.
[18:10:27] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[18:11:23] *** Joins: wyre (~wyre@user/wyre)
[18:12:15] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[18:15:23] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[18:15:38] <PJBoy> what's wrong with that?
[18:15:54] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[18:16:07] <PJBoy> also yeah I'm not aware of C++03 adding contiguousness to string
[18:16:34] <pepperoni> PJBoy: i'm not sure what "..." is. I'm just trying to declare the function.
[18:17:19] <PJBoy> << f(); auto f() -> variant<int, float> { return rand() ? 0 : 1.f; }
[18:17:20] <geordi> 0
[18:17:59] <PJBoy> << f(); auto f() -> variant<int, float> { return !rand() ? 0 : 1.f; }
[18:18:00] <geordi> 1
[18:18:04] <PJBoy> literally what you wrote
[18:25:04] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:27:42] *** Quits: artok (~azo@mobile-access-567375-182.dhcp.inet.fi) (Ping timeout: 268 seconds)
[18:27:51] <rpav> i wonder how much of a system fingerprint you can get just by doing float operations
[18:28:42] *** Joins: meator (~meator@user/meator)
[18:34:04] <LordKalma> << f(); variant<int, float>  f() { return !rand() ? 0 : 1.f; }
[18:34:05] <geordi> 1
[18:34:30] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:34:50] *** Quits: x11ff (~x11ff@151.250.201.160) (Ping timeout: 260 seconds)
[18:36:21] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 268 seconds)
[18:41:58] *** Joins: ravan (~ravan@user/ravan)
[18:42:49] *** Quits: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:02:01] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[19:05:56] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[19:07:20] *** Quits: supernova (~quassel@2405:9800:ba11:6207:7337:2116:cd8d:51d9) (Quit: No Ping reply in 180 seconds.)
[19:07:22] *** Quits: canxiu (uid524910@id-524910.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:08:29] *** Joins: supernova (~quassel@2405:9800:ba11:6207:3dac:6101:b44d:85fe)
[19:09:15] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9dd0:d32d:1cd6:8dc6)
[19:09:15] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9dd0:d32d:1cd6:8dc6) (Changing host)
[19:09:15] *** Joins: skapata (~Skapata@user/skapata)
[19:16:08] *** Joins: artok (~azo@mobile-access-6df0eb-62.dhcp.inet.fi)
[19:16:22] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:104c:2a6f:a79d:73c)
[19:17:41] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[19:19:50] <zen_coder> how can I get the thread id of the main thread?
[19:20:40] <zen_coder> is this example correct: https://www.cplusplus.com/reference/thread/thread/get_id/ ?
[19:20:57] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:21:45] <rpav> that should get you the id, but i'm not sure what guarantees you the "main thread" or if that's even conceptually useful in a portable way
[19:24:36] *** Joins: chozorho (~chozorho@2601:146:300:c30::3ee9)
[19:24:43] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[19:24:51] <rpav> like trivially if you don't make any threads and std::this_thread::get_id() you'll get something, but
[19:36:10] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[19:38:35] *** Joins: artok_ (~azo@2.69.44.142.mobile.tre.se)
[19:38:59] *** Quits: artok_ (~azo@2.69.44.142.mobile.tre.se) (Client Quit)
[19:39:07] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:41:05] *** Quits: artok (~azo@mobile-access-6df0eb-62.dhcp.inet.fi) (Ping timeout: 268 seconds)
[19:42:59] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 264 seconds)
[19:46:29] <ashafq> Why does GCC give me link errors when I enable -fsanitize=address?
[19:46:47] <ashafq> Using version gcc 11.1.0
[19:47:44] <rpav> you're probably referring to an old version of the gcc libraries
[19:48:21] <ashafq> Can that happen with a distro installation? :\
[19:48:26] <rpav> you'll see asan symbols missing or similar if you're not pointing at reasonably recent (preferably, same-version) stuff
[19:48:28] *** Joins: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[19:48:37] <rpav> i mean i guess
[19:48:55] <rpav> even without dist error, some dists let you install multiple gccs, and you may for some reason be picking up parts of the wrong one
[19:49:24] <rpav> some dists let you select a "current" compiler ("gcc = 8.2") but you may use g++-11 directly and that could be an issue
[19:49:45] <rpav> i don't know that that's _your_ issue, but maybe check along those lines
[19:50:36] *** Joins: meicceli (meicceli@kapsi.fi)
[19:50:37] <ashafq> rpav: core/gcc-libs 11.1.0-1 [installed]
[19:50:39] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:50:42] <ashafq> That's what's installed
[19:51:44] <rpav> is this arch?
[19:52:18] <rpav> what's your actual link line that's producing the error
[19:52:34] *** Joins: magla (~gelignite@55d4c66c.access.ecotel.net)
[19:53:08] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[19:56:25] <ashafq> rpav: It's manjaro. This is one of the line that's producing the error: undefined reference to `__asan_option_detect_stack_use_after_return
[19:57:08] <rpav> oh, i mean, what is the command that's doing the linking
[19:58:21] *** Quits: Tokamak (~Tokamak@172.58.191.92) (Ping timeout: 268 seconds)
[19:58:23] <ashafq> rpav: /usr/bin/cc   CMakeFiles/c-sort-str.dir/src/c-sort-str.c.o -o bin/c-sort-str -L/home/ashafq/.conan/data/gmp/6.2.1/_/_/package/f7d295909e4a77ea9afe0e22daa8e7d48da26066/lib   -L/home/ashafq/.conan/data/libsndfile/1.0.31/_/_/package/83624d15014338f25d287bddee684b524fd7af79/lib   -L/home/ashafq/.conan/data/vorbis/1.3.7/_/_/package/6dc8cd39c5b0e3955526ea49034a31dbe9d01a47/lib   -L/home/ashafq/.conan/data/flac/1.3.3/_/_/pa
[19:58:23] <ashafq> ckage/4dcc91d5acb6cba12dcc413607cfda5778f7632d/lib   -L/home/ashafq/.conan/data/opus/1.3.1/_/_/package/dfbe50feef7f3c6223a476cd5aeadb687084a646/lib   -L/home/ashafq/.conan/data/ogg/1.3.4/_/_/package/dfbe50feef7f3c6223a476cd5aeadb687084a646/lib -Wl,-rpath,/home/ashafq/.conan/data/gmp/6.2.1/_/_/package/f7d295909e4a77ea9afe0e22daa8e7d48da26066/lib:/home/ashafq/.conan/data/libsndfile/1.0.31/_/_/package/83624d15014338f25d287bdd
[19:58:24] <ashafq> ee684b524fd7af79/lib:/home/ashafq/.conan/data/vorbis/1.3.7/_/_/package/6dc8cd39c5b0e3955526ea49034a31dbe9d01a47/lib:/home/ashafq/.conan/data/flac/1.3.3/_/_/package/4dcc91d5acb6cba12dcc413607cfda5778f7632d/lib:/home/ashafq/.conan/data/opus/1.3.1/_/_/package/dfbe50feef7f3c6223a476cd5aeadb687084a646/lib:/home/ashafq/.conan/data/ogg/1.3.4/_/_/package/dfbe50feef7f3c6223a476cd5aeadb687084a646/lib:/home/ashafq/src/doodle/intervie
[19:58:29] <ashafq> w/build/lib  -lgmpxx  -lgmp  -lsndfile  -lvorbisenc  -lvorbisfile  -lvorbis  -lFLAC++  -lFLAC  -lopus  -logg  -ldl  -lpthread  -lrt  -lm  lib/libcdata.so.1.0  -lm
[19:58:32] <ashafq> sorry... didn't mean to flood
[19:58:41] * Haohmaru slaps ashafq with a pastebin
[19:59:48] <rpav> ^
[19:59:50] <ashafq> rpav: Could it be cmake?
[20:00:08] <rpav> what is /usr/bin/cc a link to
[20:00:10] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[20:00:51] <ashafq> rpav && Haohmaru: Sorry, it looked like one line in the terminal  /usr/bin/cc -> gcc
[20:00:53] <rpav> er
[20:01:01] <rpav> i don't see -fsanitize=address in that line either
[20:01:17] <rpav> am i blind or is it missing cuz you need it there
[20:01:34] <rpav> like don't you, let me double check
[20:01:50] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:02:00] <rpav> hrm i don't explicitly specify it i think but
[20:02:12] <ashafq> In build.ninja file: FLAGS = -Wall -Wextra -Werror -ggdb3 -fsanitize=address,pointer-compare,leak,undefined -DFLAC__NO_DLL -std=gnu11
[20:03:01] *** Joins: Tokamak (~Tokamak@172.58.191.92)
[20:03:17] <LordKalma> nice, now docker uses WSL2 on windows
[20:03:18] <LordKalma> interesting
[20:03:44] <ashafq> LordKalma: soon... windows will be a program on WSL ;)
[20:04:08] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Client Quit)
[20:04:16] <Haohmaru> a spyware module in a linux kernel
[20:04:19] <LordKalma> windows 11 already has 3 kernels.. so yeah.. hahah
[20:04:21] <rpav> ashafq: but i don't see it in the link line; i definitely am linking with it and i'm pretty sure it's critical
[20:04:41] <ashafq> rpav: let's just share the CMAKE file:   add_compile_options(-Wall -Wextra -Werror -ggdb3 -fsanitize=address,pointer-compare,leak,undefined)
[20:04:53] <rpav> dont' use that :p
[20:05:14] <rpav> set(CMAKE_CXX_FLAGS "...") for that kind of stuff at least
[20:05:27] <rpav> that will carry it into your linker
[20:05:37] <ashafq> OOOOOOOOhhh
[20:05:42] <rpav> at a minimum use target_compile_options(myexe PUBLIC ...) for those though
[20:06:10] <rpav> (but generally avoid target-specific compile options because it can easily break things)
[20:06:11] <LordKalma> don't use set(CMAKE_CXX_FLAGS "...") !
[20:06:15] <LordKalma> use functions
[20:06:18] <rpav> no
[20:06:22] <rpav> not for CXX flags
[20:06:34] <rpav> if you don't build with the same flags down the line you're asking for trouble
[20:06:48] <LordKalma> yes
[20:06:52] <LordKalma> and cmake handles that
[20:07:06] <rpav> must be a recent change then
[20:07:14] <rpav> because "poorly" was how it handled it before
[20:07:16] <LordKalma> PUBLIC flags carry around
[20:07:27] <LordKalma> "poorly" is how most people write cmake
[20:07:30] <LordKalma> and then complain
[20:07:41] <LordKalma> not an attack on your personally, but a general statement
[20:07:58] <ashafq> rpav: If you have C and C++ files, do you set both CXX and C flags?
[20:08:00] <rpav> in generally you want a preset setup of CMAKE_CXX_FLAGS for a particular build type, there's not otherwise a decent way to preconfigure some build setup
[20:08:13] <LordKalma> presets are a good idea yeah
[20:08:18] <rpav> like, this is _before you get to any target definitions_, we want this build for x86_64/Debug+Sanitize/...
[20:08:34] *** Joins: x11ff (~x11ff@151.250.201.160)
[20:08:49] <rpav> ashafq: errr depends but if you want sanitize for both then probably
[20:09:04] <rpav> if you have "just a C library" then you might not need it
[20:09:04] <ashafq> Thanks! :)
[20:09:40] <rpav> (also probably globally managing warnings, with target-specific options)
[20:11:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:11:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:13:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:13:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:13:54] <ashafq> rpav: Thanks for your help. That helped a lot.
[20:14:49] <ashafq> rpav: Cmake made my 500 line makefile down to 50 line cmake. I love it.
[20:15:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:20:35] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[20:21:19] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[20:24:35] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) (Remote host closed the connection)
[20:25:26] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:27:04] *** Joins: Skyfire (~pyon@user/pyon)
[20:45:55] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:50:05] *** Joins: pulse (~pulse@user/pulse)
[20:51:31] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4957:1fad:d24a:4121)
[20:51:31] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4957:1fad:d24a:4121) (Changing host)
[20:51:31] *** Joins: skapata (~Skapata@user/skapata)
[20:51:32] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:51:36] *** Joins: RoKenn (~RoKenn@2001:a61:3505:d101:ec6e:632d:e7b5:a70b)
[20:51:36] *** Joins: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com)
[20:51:37] *** Quits: RoKenn (~RoKenn@2001:a61:3505:d101:ec6e:632d:e7b5:a70b) (Changing host)
[20:51:37] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:53:08] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[20:56:09] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Quit: "Rebooting new kernel")
[20:57:34] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[21:03:43] *** Quits: emerent (~quassel@p200300cd57485589ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:04:09] *** Joins: emerent (~quassel@p200300cd57485527ba27ebfffed28a59.dip0.t-ipconnect.de)
[21:16:41] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[21:23:55] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[21:26:51] *** Quits: letto (~letto@86.120.85.133) (Quit: Konversation terminated!)
[21:27:34] *** Joins: letto (~letto@86.120.85.133)
[21:37:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:37:42] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:37:42] *** ChanServ sets mode: +v npaperbot
[21:42:47] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:44:01] <yolo_> i have quite some small x.hpp x.cpp files, x.hpp contains the class x.cpp contains the methods, I would like to 'merge' them into one for easy maintenance and code reading(reading both at one place), I guess x.hpp is preferred as  I need `#include "x.hpp"` in other files, it will be odd if I `#include "x.cpp"` though both contains the same content
[21:44:57] <kalven> yes
[21:45:24] *** Joins: great_taste (~great_tas@190.32.235.20)
[21:46:01] <yolo_> ok thanks
[21:56:02] <kalven> https://www.youtube.com/watch?v=8KwD1Sz6um4 anyone watch this and can summarize the point?
[21:59:07] *** Joins: Deneb (~johnch@117.111.189.80.dyn.plus.net)
[22:20:37] <yolo_> kalven: put methods into hpp implies 'inline' them? but it will be g++/clang++ to decide if that inline happens or not, correct? I don't want to force all functions inline just because I used header file for my methods
[22:21:31] <imMute> yolo_: putting "inline" on the function doesn't really have any effect on whether the compiler inlines the function call or not.  that optimization happens entirely separately
[22:22:17] <yolo_> ok, cool, I recall in c inline does mean inline the fuction, but I'm not 100% sure either
[22:23:07] *** Joins: paul424 (~tom@ip-31-0-127-157.multi.internet.cyfrowypolsat.pl)
[22:23:24] <imMute> I don't think it means that in C either, but I honestly don't know for sure.
[22:25:48] <yolo_> "As required by ISO C++, GCC considers member functions defined within the body of a class to be marked inline even if they are not explicitly declared with the inline keyword. You can override this with -fno-default-inline"
[22:26:10] <yolo_> "GCC does not inline any functions when not optimizing unless you specify the ‘always_inline’ attribute for the function"
[22:26:51] <yolo_> https://gcc.gnu.org/onlinedocs/gcc/Inline.html
[22:30:04] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[22:52:54] *** Joins: causative (~halberd@user/causative)
[22:58:49] *** Joins: Burgundy (~yomon@86.127.194.72)
[23:04:58] *** Joins: gehn (~gehn@user/gehn)
[23:05:15] *** Quits: gehn (~gehn@user/gehn) (Remote host closed the connection)
[23:05:27] *** Joins: gehn (~gehn@user/gehn)
[23:08:35] *** Quits: gehn (~gehn@user/gehn) (Read error: Connection reset by peer)
[23:08:41] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:08:54] *** Joins: gehn (~gehn@user/gehn)
[23:09:01] *** Joins: varioust (~varioust@rrcs-76-79-31-136.west.biz.rr.com)
[23:10:07] <cbreak> yolo_: inline is a keyword that allows you to define the same object / function / ... in multiple TUs without violation of the one-definition rule
[23:14:07] *** Quits: x11ff (~x11ff@151.250.201.160) (Remote host closed the connection)
[23:14:33] *** Joins: x11ff (~x11ff@151.250.201.160)
[23:19:02] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[23:19:30] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:f161:c9c3:b403:49f6)
[23:22:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b) (Ping timeout: 268 seconds)
[23:22:44] *** Quits: varioust (~varioust@rrcs-76-79-31-136.west.biz.rr.com) (Quit: varioust)
[23:25:23] <yolo_> put class and methods into one hpp gave me new problems, it compiles to huge pch files, I do use pch when needed but not in this case, I just need a .o file from it, g++ -c offers no help
[23:25:43] <yolo_> i mean gch
[23:27:19] <yolo_> looks like the old *.hpp + *.cpp pair are still the way to go, sigh
[23:28:39] <imMute> yolo_: well, yeah, you put more in the header, the bigger the precompiled headers will be...
[23:29:53] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:104c:2a6f:a79d:73c) (Ping timeout: 268 seconds)
[23:33:22] <LordKalma> urghhhh
[23:33:34] <LordKalma> who'd have guessed deploying a django app is so god damn hard
[23:33:55] <yolo_> i just merge header and cpp, modified my makefile, now throwing all them away and back to original place, one hour wasted
[23:34:31] <yolo_> LordKalma: how?
[23:34:39] <LordKalma> it's a mess
[23:34:48] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 268 seconds)
[23:35:32] <yolo_> you only need a database, a nginx proxy, an application gateway, a gunicorn, etc...
[23:35:35] <yolo_> :)
[23:35:39] <LordKalma> "only" :D
[23:36:01] <yolo_> welcome to golang, all you need is: my-single-merry-binary-that-has-it-all
[23:36:37] <imMute> and an internet connection.
[23:36:54] *** Joins: Terminus (~null@user/terminus)
[23:37:53] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[23:38:29] <yolo_> i use gitea for a few years, the upgrade can not be more simple, stop the process, copy the new binary over, start it again, always worked
[23:39:29] <yolo_> it probably should just add a button: upgrade&restart to be totally automatic
[23:40:23] *** Joins: Khoyo (~khoyo@user/khoyo)
[23:43:26] *** Quits: AmR (~AmREiSa@156.199.92.40) (Ping timeout: 268 seconds)
[23:45:53] *** Quits: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[23:47:27] *** Joins: varioust (~varioust@rrcs-76-79-31-136.west.biz.rr.com)
[23:50:13] *** Quits: meicceli (meicceli@kapsi.fi) (Ping timeout: 268 seconds)
[23:51:26] *** Quits: engest (~engest@50.39.177.170) (Read error: Connection reset by peer)
[23:52:25] *** Joins: engest (~engest@50.39.177.170)
[23:52:31] *** Joins: meicceli (meicceli@kapsi.fi)
[23:54:57] *** Quits: varioust (~varioust@rrcs-76-79-31-136.west.biz.rr.com) (Quit: varioust)
