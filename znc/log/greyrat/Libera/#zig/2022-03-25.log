[00:02:53] <cr1901> I prefer when Zig Twitter/social media acknowledges the Zero Wing references :P
[00:02:58] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[00:03:37] <jemius> haze, talk about the Matrix chat system mate. Every time I have to search something... and to make it even better, they called their software Element, Synapse and Dendride....
[00:04:13] <haze> im sorry im not following
[00:04:21] <haze> oh
[00:04:24] <haze> lol yeah
[00:04:25] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[00:04:27] <jemius> "easily googlable"
[00:07:47] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[00:19:27] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:35:43] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[00:35:57] *** Quits: frmdstryr (~jrm@172.58.206.226) (Ping timeout: 240 seconds)
[00:37:03] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[00:41:01] *** Joins: skipwich_ (~skipwich@user/skipwich)
[00:41:47] *** Quits: skipwich (~skipwich@user/skipwich) (Quit: DISCONNECT)
[00:42:10] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[00:43:20] *** Joins: leah2_ (~leah@vuxu.org)
[00:46:28] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 260 seconds)
[00:48:35] *** Joins: LanceThepants (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[00:48:35] *** Quits: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[01:11:34] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[01:14:19] *** leah2_ is now known as leah2
[01:15:55] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.4.1)
[01:17:03] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 252 seconds)
[01:22:24] *** Quits: Graham31415 (~Graham@5.33.52.156) (Read error: Connection reset by peer)
[01:28:48] *** Joins: kdp (~kp@ppp-94-65-13-188.home.otenet.gr)
[01:31:09] <andrea> I just discovered that ncdu has been rewritten in zig
[01:31:11] <andrea> https://dev.yorhel.nl/doc/ncdu2
[01:32:47] <andrea> Shall I add it to the wiki under "Community Projects"?
[01:33:51] *** Quits: kdp (~kp@ppp-94-65-13-188.home.otenet.gr) (Quit: WeeChat 3.4.1)
[01:34:09] *** Joins: kp1 (~kdp@ppp-94-65-13-188.home.otenet.gr)
[01:34:33] *** Quits: kp1 (~kdp@ppp-94-65-13-188.home.otenet.gr) (Client Quit)
[01:36:18] *** Joins: kdp (~kdp@ppp-94-65-13-188.home.otenet.gr)
[01:37:31] <Earnestly> Ayo: ^
[01:48:53] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[01:53:21] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 252 seconds)
[01:55:34] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[02:23:34] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[02:28:19] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[02:29:43] *** Quits: boardwalk (~boardwalk@2605:a601:aac3:100:8a2c:8f92:b935:d47a) (Quit: Ping timeout (120 seconds))
[02:29:58] *** Joins: boardwalk (~boardwalk@2605:a601:aac3:100:592a:6f22:1431:b5d9)
[02:41:40] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:50:57] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[02:59:59] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[03:01:45] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[03:04:12] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[03:05:52] *** Joins: cabal704 (~cabal704@user/cabal704)
[03:05:52] *** Quits: cabal704 (~cabal704@user/cabal704) (Client Quit)
[03:07:25] *** Quits: jemius (~imperator@200116b82dfbcc0058b00c06a6ec956c.dip.versatel-1u1.de) (Quit: Leaving)
[03:10:26] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[03:10:27] *** Quits: simontime_ (~simontime@irc.simonti.me) (Quit: ZNC 1.8.0 - https://znc.in)
[03:13:54] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:18:10] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[03:22:43] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[03:45:32] *** Quits: Arw (~Arwalk@lfbn-dij-1-1282-83.w92-141.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:46:31] *** Joins: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr)
[03:51:32] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[03:53:19] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[03:57:39] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 252 seconds)
[04:14:31] *** Quits: NickH (~hastings@m028070.dynamic.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[04:26:29] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[04:31:17] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[04:33:24] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[05:02:34] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[05:06:59] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[05:25:38] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[05:27:51] *** Joins: Techcable (~Techcable@user/Techcable)
[05:36:10] *** Joins: NickH (~hastings@p22045-ipngnfx01akatuka.ibaraki.ocn.ne.jp)
[05:38:39] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[05:43:15] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[05:52:31] *** Joins: trainraider__ (~trainraid@107-199-92-151.lightspeed.iplsin.sbcglobal.net)
[05:55:20] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 252 seconds)
[05:57:34] *** Quits: trainraider__ (~trainraid@107-199-92-151.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 272 seconds)
[06:08:04] <andrewrk> jemius: https://gist.github.com/andrewrk/73742bf4b8ed795c85ce
[06:08:59] *** Joins: ur5us (~ur5us@122-56-198-145.mobile.spark.co.nz)
[06:12:30] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[06:17:15] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[06:32:56] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Remote host closed the connection)
[06:33:47] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[06:37:55] *** Quits: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles) (Ping timeout: 240 seconds)
[06:41:09] *** Quits: qbit (~qbit@h.suah.dev) (Quit: WeeChat 3.3)
[06:45:17] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[06:50:08] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[06:52:12] *** Joins: notzmv (~zmv@user/notzmv)
[06:58:57] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[07:05:47] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[07:19:59] *** Quits: marler8997 (~marler899@96-19-96-19-162-162.cpe.sparklight.net) (Remote host closed the connection)
[07:20:18] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[07:22:31] *** Quits: ur5us (~ur5us@122-56-198-145.mobile.spark.co.nz) (Read error: Connection reset by peer)
[07:24:58] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[07:35:58] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:37:24] <plumeus> that's amazing
[07:54:59] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[07:59:49] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[08:07:46] *** Quits: haze (~haze@user/haze) (Read error: Connection reset by peer)
[08:16:43] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[08:22:18] *** Joins: haze (~haze@user/haze)
[08:29:11] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[08:31:05] *** Joins: ltriant (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com)
[08:32:07] *** Quits: ltriant_ (~ltriant@ec2-13-211-134-196.ap-southeast-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[08:32:41] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 256 seconds)
[08:33:59] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 260 seconds)
[08:46:40] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[08:51:44] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[08:54:59] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 268 seconds)
[08:57:34] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:58:24] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[09:17:40] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[09:24:54] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 252 seconds)
[09:30:11] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[10:09:05] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:13:54] *** Quits: NickH (~hastings@p22045-ipngnfx01akatuka.ibaraki.ocn.ne.jp) (Quit: leaving)
[10:16:04] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[10:17:00] *** Joins: NickH (~hastings@m028070.dynamic.ppp.asahi-net.or.jp)
[10:17:33] *** Quits: NickH (~hastings@m028070.dynamic.ppp.asahi-net.or.jp) (Client Quit)
[10:19:14] *** Joins: NickH (~hastings@m028070.dynamic.ppp.asahi-net.or.jp)
[10:27:15] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[10:30:09] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[10:31:17] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[10:31:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:32:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:34:08] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:34:17] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 240 seconds)
[10:34:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:38:05] *** Joins: phaleth (~user@user/phaleth)
[10:44:13] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[10:48:17] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[10:59:06] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Read error: Connection reset by peer)
[11:01:33] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[11:02:10] *** Joins: Graham31415 (~Graham@5.33.52.156)
[11:06:38] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[11:06:42] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[11:14:27] *** Quits: phaleth (~user@user/phaleth) (Quit: WeeChat 2.8)
[11:15:27] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 260 seconds)
[11:22:22] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:27:26] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[11:34:08] *** Quits: BratishkaErik (~Bratishka@37.99.44.180) (Ping timeout: 252 seconds)
[11:36:17] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[11:37:43] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:40:11] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[11:40:39] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 260 seconds)
[11:45:16] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Ping timeout: 272 seconds)
[11:47:48] *** Joins: BratishkaErik (~Bratishka@37.99.45.106)
[12:12:09] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[12:16:35] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 260 seconds)
[12:18:32] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[12:19:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[12:19:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[12:22:23] <cnx> andrewrk, shouldn't that produce 4 characters?
[12:23:37] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 240 seconds)
[12:33:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[12:46:42] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[12:51:21] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[12:51:46] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[12:53:14] *** Quits: km (znc@user/km) (Quit: ZNC - https://znc.in)
[12:59:08] *** Joins: km (znc@user/km)
[12:59:40] *** Quits: km (znc@user/km) (Remote host closed the connection)
[13:06:56] *** Joins: km (znc@user/km)
[13:11:55] *** Joins: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de)
[13:13:24] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 240 seconds)
[13:16:03] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[13:16:20] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[13:22:43] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[13:25:46] *** Joins: moog_ (~moog@107.77.244.51)
[13:27:21] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[13:28:13] *** Quits: moog__ (~moog@98.97.84.79) (Ping timeout: 240 seconds)
[13:30:02] *** Quits: km (znc@user/km) (Remote host closed the connection)
[13:31:48] *** Joins: km (znc@user/km)
[13:32:08] *** Quits: kdp (~kdp@ppp-94-65-13-188.home.otenet.gr) (Quit: WeeChat 3.4.1)
[13:59:29] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[14:03:49] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[14:20:04] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[14:20:41] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[14:25:35] *** Joins: jleahy (~jleahy@212.118.224.200)
[14:35:13] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[14:36:13] *** Quits: jleahy (~jleahy@212.118.224.200) (Quit: Client closed)
[14:39:25] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 250 seconds)
[14:43:59] <motiejus> hopefully a quick one: assume `var x = allocator.alloc(T, 1); then use y = &x[0]` and use it; now I want to free it. How can I convert `y` back to `x`, so I can pass it to `allocator.free()`?
[14:44:52] <motiejus> i.e. I am allocating one element-slice and using it, and storing the pointer of that single element. What is the correct way to get back the `[]T`, to pass it back to the allocator?
[14:48:29] *** Joins: notzmv (~zmv@user/notzmv)
[14:50:12] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[14:55:16] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 272 seconds)
[14:59:48] *** Joins: jleahy (~jleahy@212.118.224.200)
[15:03:38] <dutchie> if you really just want one you should use `allocator.create(T)` and `allocator.destroy` instead. otherwise i guess you'd have to use @ptrCast, not sure though
[15:09:12] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[15:09:39] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[15:14:01] *** Quits: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de) (Quit: Leaving)
[15:17:58] *** Joins: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:24:24] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 272 seconds)
[15:26:20] <motiejus> I didn't find `create` when I looked, thanks!
[15:31:22] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 272 seconds)
[15:31:38] *** Joins: toulene (~toulene@user/toulene)
[15:42:46] *** Quits: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 272 seconds)
[15:46:01] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[15:47:57] *** Joins: qbit (~qbit@h.suah.dev)
[15:54:42] *** Quits: Graham31415 (~Graham@5.33.52.156) (Quit: Lost terminal)
[16:13:37] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[16:18:32] *** Joins: mitchyg (~mitchygt_@61.69.254.102)
[16:23:25] *** Joins: Graham31415 (~Graham@5.33.52.156)
[16:28:49] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[16:30:08] *** Quits: jleahy (~jleahy@212.118.224.200) (Quit: Client closed)
[16:33:33] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[16:47:44] *** Joins: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[17:03:50] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[17:07:42] *** Quits: mitchyg (~mitchygt_@61.69.254.102) (Ping timeout: 268 seconds)
[17:08:54] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[17:22:27] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[17:27:03] *** Quits: fgenesis (~fgenesis@inferno.barfooze.de) (Ping timeout: 256 seconds)
[17:35:10] *** Joins: fgenesis (~fgenesis@inferno.barfooze.de)
[17:38:53] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[17:43:01] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[17:43:26] <motiejus> I am getting a segfault when I pack/unpack a struct to bytes and then put it to an anonymous tuple of anonymous tuples: https://paste.sr.ht/~motiejus/2830736e796801517c1fa8639be6615cd56ada27
[17:49:43] <motiejus> found a bunch equivalent reports on github :)
[18:02:57] *** Quits: moog_ (~moog@107.77.244.51) (Ping timeout: 240 seconds)
[18:14:07] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[18:15:23] *** Joins: rLapz (~rLapz@103.92.225.142)
[18:18:43] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 260 seconds)
[18:20:53] *** Quits: andrzejku_ (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 256 seconds)
[18:23:58] *** Quits: ncon (~ncon@wireguard/developer/ncon) (Ping timeout: 260 seconds)
[18:25:48] *** Joins: ncon (~ncon@wireguard/developer/ncon)
[18:30:57] *** Quits: ncon (~ncon@wireguard/developer/ncon) (Ping timeout: 240 seconds)
[18:33:07] *** Joins: ncon (~ncon@wireguard/developer/ncon)
[18:37:26] *** Parts: Graham31415 (~Graham@5.33.52.156) ()
[18:41:26] *** Joins: rLapz68 (~rLapz@103.92.225.142)
[18:43:17] *** Joins: jleahy (~jleahy@212.118.224.200)
[18:45:04] *** Quits: rLapz68 (~rLapz@103.92.225.142) (Client Quit)
[18:47:36] *** Quits: rLapz (~rLapz@103.92.225.142) (Quit: Client closed)
[18:48:51] *** Joins: moog (~moog@107.126.53.243)
[18:49:05] *** Joins: rLapz (~rLapz@103.92.225.142)
[18:50:28] *** Joins: moog_ (~moog@98.97.84.79)
[18:52:34] *** Joins: Graham31415 (~Graham@5.33.52.156)
[18:52:39] *** Quits: Graham31415 (~Graham@5.33.52.156) (Client Quit)
[18:53:15] *** Quits: moog (~moog@107.126.53.243) (Ping timeout: 260 seconds)
[18:53:45] *** Joins: Graham31415 (~Graham@5.33.52.156)
[18:54:32] *** Quits: rLapz (~rLapz@103.92.225.142) (Quit: Client closed)
[18:57:04] *** Quits: Graham31415 (~Graham@5.33.52.156) (Changing host)
[18:57:04] *** Joins: Graham31415 (~Graham@user/Graham31415)
[18:57:31] *** Joins: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de)
[19:00:55] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[19:01:06] *** Joins: m5zs7k_ (~m5zs7k@web10.mydevil.net)
[19:01:34] *** m5zs7k_ is now known as m5zs7k
[19:10:50] <Graham31415> What is the prupose of the block in a suspend block? Is it just to get hold of a @frame?
[19:13:15] <Graham31415> What can one do with code inside the suspend block that can't be done outside that block? I.e, why would I ever want a non-empty block?
[19:15:19] <Graham31415> PS, I never used async/await in any language, and just wondered about the suspend block because its purpose wasn't obvious to me from reading the docs.
[19:20:15] *** Joins: rLapz (~rLapz@103.92.225.142)
[19:20:43] *** Quits: jleahy (~jleahy@212.118.224.200) (Quit: Client closed)
[19:20:54] *** Joins: jleahyfeefefqfef (~jleahyfee@212.118.224.200)
[19:21:32] *** Quits: jleahyfeefefqfef (~jleahyfee@212.118.224.200) (Client Quit)
[19:21:49] *** Joins: jleahy (~jleahy@212.118.224.200)
[19:23:55] <jleahy> one example would be deallocating the frame
[19:24:08] <jleahy> during the suspend block the function has already been suspended, so it's safe to do things like that
[19:25:17] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[19:28:19] *** Quits: LanceThepants (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net) (Quit: Leaving)
[19:28:36] *** Joins: Sawzall (~Sawzall@96-82-249-149-static.hfc.comcastbusiness.net)
[19:28:42] <Graham31415> wouldn't that just crash when resumed?
[19:29:05] *** Quits: rLapz (~rLapz@103.92.225.142) (Quit: Client closed)
[19:30:01] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[19:30:32] *** Quits: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de) (Quit: Leaving)
[19:31:18] <jleahy> this is if you know it is never going to be resumed again
[19:31:28] <jleahy> you'll see this happen in the zig event loop in std
[19:31:50] <jleahy> it allocates a frame on the heap, does the async call into it, then eventually it will get deallocated inside a suspend block
[19:32:01] <jleahy> it's not clear where else you could deallocate it tbh
[19:51:15] <Graham31415> So there's a big bundle of runtime that isn't mentioned in the main ziglang.org docs about the language? And this needs to be understood to write code for async/await/suspend/etc?
[19:52:07] <Graham31415> its hard to see how this fits together from the lib/std/event/*.zig files
[19:57:07] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[19:59:53] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[20:03:26] *** Joins: mikezackles_ (~mikezackl@gateway/tor-sasl/mikezackles)
[20:04:35] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[20:05:05] *** Quits: poqomchi8 (~poqomchi@user/poqomchi) (Quit: The Lounge - https://thelounge.chat)
[20:05:32] *** Joins: poqomchi8 (~poqomchi@user/poqomchi)
[20:10:46] <jleahy> yeah there's a whole standard library with no documentation yet
[20:11:00] <jleahy> but you don't have to use it, you can use async/await/suspend/resume your own way
[20:16:04] <Graham31415> but i cant, because i don't know how the parts fit together. E.g. a suspend block.
[20:16:25] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Read error: Connection reset by peer)
[20:16:55] <Graham31415> i'll just ignore async util there's some docs
[20:17:41] <jleahy> the docs are fully sufficient for async
[20:17:48] <jleahy> i figured out how it worked just from them myself
[20:17:56] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:18:16] <jleahy> but if you are unwilling to read the code for std you will have to write your own executor
[20:19:12] <Graham31415> its not that I'm unwilling to read the stdlib code, its more a matter of not know the entry points and thus not knowing what to look at
[20:20:23] <jleahy> there are more people on discord, if you ask in zig-help i bet someone could point you at some example code for async
[20:20:27] <jleahy> if you explain what you want to do
[20:27:51] *** Joins: rLapz (~kh@103.92.225.142)
[20:35:00] *** Quits: rLapz (~kh@103.92.225.142) (Quit: rLapz)
[20:35:41] *** Joins: rLapz (~rLapz@103.92.225.142)
[20:35:48] *** Quits: rLapz (~rLapz@103.92.225.142) (Client Quit)
[20:35:57] <Levy[m]> Graham31415: You register the frame by attaching it to a queue/other structure as done here https://gist.github.com/MasterQ32/ff534f912c5faedbbb57974317e79778#file-async_await-zig-L29
[20:37:02] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[20:37:06] <Levy[m]> I do the same for delays, registering one-shot handlers for requests that expect a response some time in the future, etc
[20:37:19] *** Joins: rLapz (~rLapz@103.92.225.142)
[20:37:40] *** Quits: rLapz (~rLapz@103.92.225.142) (Client Quit)
[20:38:47] <Levy[m]> have a look at https://github.com/ziglang/zig/blob/master/lib/std/event/loop.zig#L845 for an example within std
[20:40:55] <Levy[m]> also https://github.com/ziglang/zig/blob/master/lib/std/event/loop.zig#L827 which uses it
[20:41:26] *** Joins: rLapz (~rLapz@103.92.225.142)
[20:41:42] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 272 seconds)
[20:42:18] *** Quits: rLapz (~rLapz@103.92.225.142) (Client Quit)
[20:43:39] *** Joins: rLapz (~rLapz@103.92.225.142)
[20:45:22] *** Quits: rLapz (~rLapz@103.92.225.142) (Client Quit)
[20:58:44] <jleahy> while we're talking about coroutines - originally there was code that implemented them via function splitting, then it was changed by to the 'giant switch' approach (which seems much less efficient) - does anybody know why that happened? it might be one of these things that only andrew knows
[21:05:36] *** Joins: rLapz (~rLapz@103.92.225.142)
[21:11:17] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[21:12:45] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:24] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[21:25:07] *** Joins: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net)
[21:27:58] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[21:28:32] <Graham31415> Levy[m]: thanks, that's a nice simple example. But why must the code be inside the suspend block, instead of just being immediately before the suspend call?
[21:30:30] <Graham31415> what property of "inside the suspend block" is important here?
[21:30:49] <Levy[m]> can you catch the frame of a function that's currently running?
[21:31:11] <Graham31415> So, @frame() doesn't work ouside a suspend block?
[21:32:12] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[21:32:45] <jleahy>  linuxWaitFd in loop.zig uses @frame() outside of suspend, so apparently it's not that simple
[21:32:48] *** Quits: rLapz (~rLapz@103.92.225.142) (Changing host)
[21:32:48] *** Joins: rLapz (~rLapz@user/rLapz)
[21:33:32] *** Joins: xackus (~xackus@185.15.0.3)
[21:37:45] *** Quits: rLapz (~rLapz@user/rLapz) (Quit: Client closed)
[21:39:13] <Graham31415> Does the frame get modified by a "suspend" keyword? Or is a frame effectively const throughout the life of a function's execution (regardless of suspend, etc)?
[21:39:38] <Graham31415> I mean, does the frame get modified during execution when "suspend" is triggered.
[21:41:40] *** Joins: rLapz (~rLapz@user/rLapz)
[21:42:09] *** Quits: rLapz (~rLapz@user/rLapz) (Remote host closed the connection)
[21:42:40] *** Joins: rLapz (~rLapz@user/rLapz)
[21:43:17] *** Joins: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322)
[21:43:59] <Graham31415> I guess things like `defer` must modify the frame.
[21:44:57] *** Quits: coleman (~coleman@108-92-161-239.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:45:05] *** Quits: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322) (Client Quit)
[21:45:26] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[21:49:59] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[21:50:00] *** Joins: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322)
[21:53:23] *** Quits: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322) (Client Quit)
[21:55:19] *** Joins: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322)
[21:55:31] <dknite> Hi! In the source for HashMapUnmanaged, there is a line `@alignCast(@alignOf(Header), self.metadata.?)`. What does `self.metadata.?` mean? 
[22:00:13] <Levy[m]> jleahy: `@frame()` is a pointer to the current frame https://ziglang.org/documentation/master/#frame
[22:00:34] <Levy[m]> so ignore my statement about modification
[22:13:04] *** Joins: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de)
[22:14:24] <jemius> wtf is drew really banned in the zig-community? ^^ I just saw that on hackernews
[22:15:41] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[22:15:57] *** Joins: bindu (~bindu@user/bindu)
[22:18:49] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[22:19:12] <cnx> lol which drew
[22:19:55] <jemius> cnx, https://drewdevault.com/ he's apparently writing some sort of Zig-Clone
[22:20:12] <companion_cube> where did you see that?
[22:20:25] <cnx> ah lol that language is not a zig clone, it doesn't even have meteprogramming
[22:20:34] <jemius> companion_cube, https://news.ycombinator.com/item?id=15494222
[22:20:56] <companion_cube> oh :D
[22:21:31] <cnx> drew devault used to aggressively shit on zig's early design
[22:21:39] <cnx> yea that one
[22:21:44] <jemius> People should really not be emotional about their languages. Yet there they are, calling themselves Gophers and Rusteceans
[22:22:06] <cnx> his tempered has drastically improved in the last 12 months or so
[22:22:43] *** Quits: dknite (~dknite@2405:201:800b:481f:e27b:9687:63b0:8322) (Quit: WeeChat 3.4.1)
[22:23:25] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 256 seconds)
[22:23:51] <jemius> I just don't get why one starts his own language over minor disagreements
[22:24:04] <cnx> i don't think that was the reason
[22:24:34] <jemius> the fundamental concepts are the same: memory-cleanup with some sort of of defer, error handling with some sort of magic enums (Rust, Zig, arguably Go)
[22:24:48] <jemius> It seems all the possible mechanisms are known by now
[22:25:46] <companion_cube> he decided that generics are bad™
[22:31:05] <cnx> jemius i don't think defer is unique to memory clean up or go/zig, RAII and python context manager are wildly similar
[22:31:26] <cnx> (and error union is the only sane way imho)
[22:32:12] <cnx> i think what makes zig stands out is comptime, for rust it's ownership (also at compile time), goroutines for go
[22:33:34] <jemius> cnx, for me it is that it's the only possible C-Replacement. What are you going to use on bare metall, Go?
[22:33:57] <jemius> On this question however, ultimately the stability of the toolchain will decide (...Rust...)
[22:33:58] <cnx> i honestly don't even know what's the point of drew devault's new lang, if it's less footgunnny than c, good for him and his team, but i find no reason to use it
[22:34:06] <jemius> *simplicity
[22:34:37] <cnx> yea cargo cult is unsufferable, esp on lower end devices
[22:35:12] <cnx> i seriously wish zig wil have a python-like local package management
[22:35:15] <jemius> cnx, I suspect it has been started to be the one who finally replaces Dennis Ritchie's work
[22:35:42] <jemius> I hope that package manegement will not be part of the language. Those are separate issues
[22:35:48] <cnx> i.e. packages can be found the samd way std is
[22:36:06] <cnx> it should be as @import is a builtin
[22:36:55] <cnx> if @import("std") is built into zig build-* then @import("foo") should also not require build.zig to do special magic
[22:40:11] *** Quits: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa06) (Ping timeout: 252 seconds)
[22:48:25] <jemius> https://github.com/ziglang/zig/issues/234 that was an interesting discussion, though
[22:53:47] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[22:53:58] <luuk> cnx: build.zig is just a frontend to Zig's CLI. i.e. currently using build.zig's `addPackage` will just emit `--pkg begin [name] [path] --pkg end` to the CLI
[22:54:10] *** Joins: coleman (~coleman@2601:c2:4200:29e0::e95c)
[22:57:57] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 240 seconds)
[22:58:51] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[23:09:09] *** Joins: d0p1 (~d0p1@gateway/tor-sasl/d0p1)
[23:14:48] *** Quits: jemius (~jemius@p200300d96705d8006a9edd9011896825.dip0.t-ipconnect.de) (Quit: Leaving)
[23:15:39] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:18:05] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[23:29:30] *** Joins: ismustac2 (~ismustach@136.144.19.251)
[23:34:05] *** Quits: ismustac2 (~ismustach@136.144.19.251) (Ping timeout: 252 seconds)
[23:45:21] *** Joins: wallacer (~quassel@2001:bc8:1824:9a:cafe:babe:b00b:aa03)
[23:54:38] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[23:55:54] *** philtom is now known as philtor
