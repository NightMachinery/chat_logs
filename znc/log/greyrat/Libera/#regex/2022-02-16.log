[00:01:51] *** Joins: re101-bobcat-12 (~re101-bob@cpe-45-48-32-89.socal.res.rr.com)
[00:02:01] *** Quits: re101-bobcat-12 (~re101-bob@cpe-45-48-32-89.socal.res.rr.com) (Client Quit)
[00:05:08] <re101-deer-85> hi
[00:05:36] <OnlineCop> Hi. What's up?
[00:05:54] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[00:06:08] *** Joins: JanC (~janc@user/janc)
[00:06:47] <re101-deer-85> how to match particular strings like  #@    $#    %^  in a line
[00:07:07] <OnlineCop> Anywhere within a line?
[00:07:13] <re101-deer-85> yes
[00:08:22] <re101-deer-85> they can be at the beginning of a word or ending of a word or middle of a word
[00:08:52] <re101-deer-85> may be in the second word of the line or in the third word of the line
[00:08:55] <OnlineCop> Two characters can be together at beginning/middle/end of a word?
[00:09:06] <OnlineCop> Can there be more than a single pair of these characters per line?
[00:09:22] <re101-deer-85> no
[00:10:15] <OnlineCop> Is this in PCRE or Javascript?
[00:10:25] <re101-deer-85> #@   good#@     #@good     g#@ood    goo#@d
[00:10:26] <re101-deer-85> everything should be a match
[00:10:30] <re101-deer-85> java
[00:11:12] <re101-deer-85> he is g#@ood
[00:11:13] <re101-deer-85> even this should be a match in the line
[00:11:16] <OnlineCop> Just use a character class [...] with {2} at the end.
[00:11:42] <re101-deer-85> not working
[00:12:13] <OnlineCop> Give me more feedback than that.
[00:12:41] <re101-deer-85> okay
[00:12:41] <re101-deer-85> please be patient i will give you all conditons of my requirement
[00:13:15] <OnlineCop> Java has a .search() and a .match() method. One only matches if it matches the _entire_ string. The other matches if any _substring_ is found in a string.
[00:13:21] <re101-deer-85> anything that has two consecutive characters should be matched
[00:13:25] <mysticspiral[m]> re101-deer-85: didnt you see my answer?
[00:13:38] <re101-deer-85> No
[00:13:43] <re101-deer-85> can you send it again
[00:13:58] <mysticspiral[m]> https://regex101.com/r/EpKhiT/1
[00:14:43] <re101-deer-85> used it already before few days
[00:14:44] <re101-deer-85> but only first word is getting matched
[00:14:50] <mysticspiral[m]> ah wait, you then replied:
[00:14:50] <mysticspiral[m]> > is it what you want?
[00:14:50] <mysticspiral[m]> > iam writing regex on Salesforce Validation for text area
[00:15:23] <re101-deer-85> for salesforce...yes
[00:15:34] <mysticspiral[m]> i mean 
[00:15:34] <mysticspiral[m]> > No its not working
[00:15:34] <mysticspiral[m]> > iam writing regex on Salesforce Validation for text area
[00:15:52] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[00:16:07] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[00:16:14] <re101-deer-85> in text box when i give
[00:16:14] <re101-deer-85> iam good@#
[00:16:15] <re101-deer-85> it should be a match and not get saved
[00:16:40] <re101-deer-85> but getting saved
[00:17:23] <re101-deer-85> if i give only @#iam
[00:17:24] <re101-deer-85> it is getting matched and not getting saved to salesforce
[00:18:21] <re101-deer-85> what i mean to say is two consecutive characters anywhere in a line should get matched and that data should not be saved
[00:18:29] <mysticspiral[m]> OnlineCop: that literally what i posted in the link ealier
[00:19:03] <re101-deer-85> no its working for second word or third word
[00:19:03] <re101-deer-85> its only working for a single word entry
[00:19:38] <OnlineCop> re101-deer-85: When you say "saved", do you mean the text should not be added to a capture group?
[00:20:26] <re101-deer-85> yes
[00:20:29] <OnlineCop> You can capture text that goes up to those special characters, and the text that starts after those special characters.
[00:20:52] *** Joins: lavaball (felix@31.204.155.215)
[00:22:36] <OnlineCop> https://regex101.com/r/EpKhiT/2
[00:23:00] <OnlineCop> You'll have values in groups $1 and $2, though.
[00:24:44] <re101-deer-85> https://regex101.com/r/EPgk2G/1
[00:25:11] <re101-deer-85> please add these conditions correctly to that regex expression
[00:25:42] *** Joins: ecalogero (~ecalogero@host86-152-71-30.range86-152.btcentralplus.com)
[00:25:55] <OnlineCop> I don't know your conditions. You've got to add them to say "this should match", "this should not match", "this is an odd case which appears like it SHOULD match but shouldn't (or vice-versa)".
[00:32:11] <re101-deer-85> condition1:if the special character is at beginning and followed by a special character then it should be a match
[00:32:11] <re101-deer-85> condition2:if the special character is at ending and preceeded by a special character then it should be a match
[00:32:12] <re101-deer-85> conditon3:if special character is somewhere in middle of a word and it is preceeded or followed by a special character then it should be a match
[00:32:12] <re101-deer-85> #abcd# #abcd#abcd# #abcd#
[00:32:13] <re101-deer-85> above line is best example to understand
[00:32:13] *** rebot sets mode: +q re101-deer-85!*@*
[00:32:14] <rebot> 14re101-deer-85: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[00:32:43] *** rebot sets mode: -q re101-deer-85!*@*
[00:37:24] <re101-deer-85> https://regex101.com/r/NC7PCC/1
[00:54:59] <OnlineCop> Condition 1: /^[!@#$%^&*]{2}/ will match it. Condition 2: /[!@#$%^&*]{2}$/ will match it. Condition 3: /\b[!@#$%^&*]{2}\b/ will match it.
[00:55:20] <OnlineCop> Are you saying that you _don't_ want to match [!@#$%^&*]{2} in specific cases? If so, what are those cases?
[00:56:24] <OnlineCop> But in the line "#abcd# #abcd#abcd# #abcd#" there are spaces between the '#'s so they are not proceeded by, nor followed by, another special character.
[00:56:55] <OnlineCop> Unless you mean that it should take into account spaces, so "#abcd[# #] <-- this should match"
[00:57:24] <OnlineCop> https://regex101.com/r/NC7PCC/2
[00:58:43] <re101-deer-85> if there is space between two special characters that should not be a match unless anyone of them followed or preceeded by a third special character
[01:01:01] <re101-deer-85> space is taken into account and getting matched in that
[01:01:37] <OnlineCop> All 3 of your conditions combined simply equal `[!@#$%^&*]{2}`.
[01:01:56] <OnlineCop> Anywhere within a string that you find `[!@#$%^&*]{2}`, you've got a special character either before or after another one.
[01:02:06] <OnlineCop> Therefore, you have a match.
[01:03:54] <re101-deer-85> length of word can be 15 sometimes as it is address field
[01:04:34] <re101-deer-85> can you make changes to that space condition
[01:07:50] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:12:02] <dandyn> any other way to skip a few words and stuff then ".*" it's to greedy.. .*? didn't work
[01:17:08] <OnlineCop> dandyn: What do you mean?
[01:18:19] <dandyn> I need to pass "Sydlig vind, blåser mot norr"
[01:18:32] <dandyn> but i cant use ".*"
[01:18:44] <dandyn> is there anythging else`I can try?
[01:19:08] <OnlineCop> `.` is equivalent to `[^\n]`. If you want multiline, `[\S\s]*?` or `[\W\w]*?` or `[\D\d]*?` usually works for me.
[01:19:20] <VectorX> dandyn are you using a programming language and what do you need to match?
[01:19:32] <dandyn> tcl
[01:20:13] <OnlineCop> A bunch of HTML using Tcl?
[01:23:11] <dandyn> ah, [^\n] worked better. thnx.
[01:23:20] <dandyn> [^\n]*
[01:23:34] <dandyn> seems less greedy
[01:24:13] <dandyn> is .* exactly the same as [^\n]*   ?
[01:24:21] <dandyn> or any greedy difference?
[01:32:09] <OnlineCop> Yes, the `*` quantifier is greedy and `*?` or `+?` makes the quantifier ungreedy.
[01:34:07] <re101-deer-85> Hi OnlineCop
[01:34:14] <re101-deer-85> please help me
[01:34:16] <OnlineCop> Most quantifiers are greedy by default: `?` for example TRIES to match 1 of the previous tokens, and only if that fails, does it attempt to match 0 (which always succeeds). `{min,max}` will always try to match 'max' but back up as necessary if something later on in the pattern fails to match (it unwinds all the way back to 'min' counts before it fails).
[01:34:30] <re101-deer-85> space shouldnot be taken into account
[01:34:31] <OnlineCop> re101-deer-85: I'm really struggling to understand what you're trying to do.
[01:34:46] <re101-deer-85> only because of that condition is breaking
[01:34:51] <OnlineCop> Feel free to modify the regex101 page. Then click 'update regex' and post the link back here for us to see.
[01:35:03] *** Quits: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:798f:b83d:f33:6a2f) (Quit: Client closed)
[01:35:29] <OnlineCop> You said you want it to match "two special characters" at: the beginning of the line, the middle of a line, or at the end of a line. So... anywhere.
[01:35:33] *** Joins: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:798f:b83d:f33:6a2f)
[01:36:11] <OnlineCop> If your string is "foo# #bar", then it will fail to match because there's a space between them. "foo##bar" or "foo@#bar" would match, though, since you told it to match "two special characters".
[01:37:53] <re101-deer-85> cant we add other conditon to skip that
[01:38:13] <OnlineCop> What do you want to skip?
[01:38:17] <OnlineCop> `foo##bar` ?
[01:39:02] <OnlineCop> > conditon3:if special character is somewhere in middle of a word and it is preceeded or followed by a special character then it should be a match
[01:39:33] *** Joins: cantcountgood124 (~cantcount@rrcs-72-43-62-222.nys.biz.rr.com)
[01:40:27] <OnlineCop> https://regex101.com/r/NC7PCC/3
[01:41:40] <re101-deer-85> https://regex101.com/r/pCFQeY/1
[01:42:54] <re101-deer-85> https://regex101.com/r/HVYFEf/1
[01:43:04] <OnlineCop> The reason it wouldn't be 4 matches is that you're repeating the group.
[01:43:21] <OnlineCop> All of the repeated ones are being combined into a single match.
[01:43:56] <re101-deer-85> but my validation in salesforce is not matching
[01:44:21] <OnlineCop> It sounds like you're trying to match "anything not a special character" or "a single special character as long as there's ANOTHER non-special character after it".
[01:44:24] <re101-deer-85> to overcome this isnt there extension or separate code
[01:45:19] <OnlineCop> https://regex101.com/r/HVYFEf/2
[01:45:44] <OnlineCop> Why aren't you simply match {2} or more special characters and then count the number of matches?
[01:47:04] <re101-deer-85> i tried it but the salesforce on which iam working is not accepting it
[01:47:53] <re101-deer-85> most of the regex is same but
[01:47:53] <re101-deer-85> there are few changes in execution to match and syntaxes
[01:48:49] <OnlineCop> Does salesforce allow (?:...) or only (...) ?
[01:49:31] <OnlineCop> Also: Be sure that you're escaping any  \  characters properly. Since it's going into a string,   \d  has to be escaped as  \\d  and so forth.
[01:50:47] <OnlineCop> https://www.keycdn.com/support/regex-cheatsheet says it should allow (?:...) as well as (?#...comment...) notation (it even links to regex101 <3 )
[01:55:40] <OnlineCop> salesforce may be looking for _matches_ or it may be looking for _captures_. If you want it to look for captured groups, wrap that logic in (parens): https://regex101.com/r/pCFQeY/2
[01:56:27] <cantcountgood124> https://regex101.com/r/ONZfJ3/1 Ok so basically, the intent of the regex that I typed would capture both paragraphs in its entirety (excluding the </tbody>) as two separate matches. For some reason, each match ends at the next <tr><th class etc, and I cannot figure out why. Each paragraph represents a potential form of a paragraph that I am looking
[01:56:28] <cantcountgood124> to match in one single regex. Basically, each paragraph contains the same/similar contents just with a few lines rearranged. Let me know if I need to explain anything in mine
[01:59:41] <dandyn> OnlineCop: It ended with this.. this gives the correct values. https://regex101.com/r/96VW4L/9    But it's so long :P
[02:03:13] <dandyn> the one we worked with before was giving wrong values while using it with eggdrop/tcl. then it went greedy and took the last match values so I had to do it like this.
[02:05:35] <OnlineCop> dandyn: Sounds like Tcl hates something about it. Perhaps you need to use the Code Generator so it escapes the  \  characters for use within strings ( \s becomes \\s for example).
[02:07:52] <OnlineCop> cantcountgood124: You want it to match all of those `<td>...</td>`, correct?
[02:08:54] <cantcountgood124> OnlineCop Correct.\
[02:08:58] <OnlineCop> Or do you want to match as many of the <th...>...</th>... ?
[02:09:12] <cantcountgood124> All of it lol
[02:10:06] <OnlineCop> Commas.
[02:10:28] <OnlineCop> The 2nd set has "mm[comma] kg[comma]..." and your ([\w\s\.\-\(\)...] character group doesn't have commas in it.
[02:13:01] <cantcountgood124> OMG. Simplest solution. That did it. Thank you
[02:13:18] <OnlineCop> I cheated. I switched to PCRE, which has a Regex Debugger.
[02:13:26] <OnlineCop> It shows where all the backtracking occurs.
[02:14:05] <OnlineCop> It shows up under TOOLS on the left.
[02:15:43] <cantcountgood124> Ah, yes, good to know. I think I went with GoLang because it most closely matched how LabVIEW does their regex stuff. Or at least thats how my limited info about all this seemed to track it
[02:16:53] <OnlineCop> Yeah; Golang was a good choice. It looks like it's got a fairly limited feature set.
[02:17:33] <OnlineCop> Oh no, wait. https://zone.ni.com/reference/en-XX/help/371361R-01/glang/match_regular_expression/ says it supports PCRE.
[02:18:16] <OnlineCop> PCRE offers a LOT of bells-and-whistles (especially good with recursion, avoiding unnecessary backtracking, and all that).
[02:19:51] <OnlineCop> That way, if you have <tr>...<table><tr>...</tr></tr>...</tr>  then PCRE is able to handle recursing into something that does that.
[02:21:00] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[02:21:47] <cantcountgood124> Much appreciated. I'll have to go through that
[02:24:00] <OnlineCop> Were you trying to pull any specific data out of there?
[02:24:38] *** Joins: karakedi (~eAC53C340@user/karakedi)
[02:25:33] <OnlineCop> cantcountgood124: https://regex101.com/r/ONZfJ3/2 (just for fun)
[02:30:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com)
[02:42:35] *** Quits: dandyn (~dandyn@user/dandyn) (Quit: Client closed)
[02:51:28] *** Quits: PocketKiller (PacKetIV@user/packetiv) (*.net *.split)
[02:51:28] *** Quits: cloudcell (sid48145@2a03:5180:f::bc11) (*.net *.split)
[02:51:28] *** Quits: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (*.net *.split)
[02:51:28] *** Quits: defjam (~eb0t@90.196.141.185) (*.net *.split)
[02:51:28] *** Quits: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com) (*.net *.split)
[02:51:28] *** Quits: d10n (~d10n@user/d10n) (*.net *.split)
[02:51:28] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[02:51:28] *** Quits: A_Dragon (A_D@libera/staff/dragon) (*.net *.split)
[02:51:28] *** Quits: CRThaze1 (~weechat@188.166.44.58) (*.net *.split)
[02:53:47] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[02:53:47] *** Joins: cloudcell (sid48145@2a03:5180:f::bc11)
[02:53:47] *** Joins: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[02:53:47] *** Joins: defjam (~eb0t@90.196.141.185)
[02:53:47] *** Joins: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[02:53:47] *** Joins: d10n (~d10n@user/d10n)
[02:53:47] *** Joins: sybariten (~jake@157.90.217.120)
[02:53:47] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[02:53:47] *** Joins: CRThaze1 (~weechat@188.166.44.58)
[03:08:15] *** Quits: ecalogero (~ecalogero@host86-152-71-30.range86-152.btcentralplus.com) (Quit: Connection closed)
[03:12:00] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:13:46] <re101-deer-85> hi
[03:13:47] <re101-deer-85> what does it mean
[03:13:47] <re101-deer-85> field__c.replaceAll (' [^a-zA-Z0-9] ' , '  ' )
[03:14:06] <OnlineCop> Is that a space after the opening quote?
[03:14:21] <re101-deer-85> no
[03:14:48] <OnlineCop> Then it means to replace any character that's NOT one of those (letter or number) with a space.
[03:15:18] <re101-deer-85> there is no space in between the last single quotes
[03:15:20] <OnlineCop> If there's a space before or after that [^...] group, then it would first match a space, then anything not a letter/digit, then another space, and replace those 3 with a single space.
[03:15:58] <OnlineCop> `field__c.replaceAll ('::IS_THIS_A_SPACE::[^a-zA-Z0-9]::IS_THIS_ALSO_A_SPACE::' , '  ' )`
[03:16:38] <re101-deer-85> ccLead.Address_Line_1_P__c.replaceAll('[^a-zA-Z0-9,-\\/\\s]','');
[03:16:45] <OnlineCop> Some regex languages/flavors don't see a literal space as a character to match. By default, most regex languages consider spaces as literal \x20 characters to match.
[03:18:24] <re101-deer-85> ' ' there is no space between single quotes
[03:18:40] <OnlineCop> `[^a-zA-Z0-9]` is straight-forward: match anything NOT a letter or digit. However... `[^,-\\]` is going to match all characters from range 44 (a ',' comma) to range 92 (a '\' backslash character). `[^/\\s]` matches a '/' character or a whitespace.
[03:18:41] <re101-deer-85> what it gets replaced by then
[03:19:05] <OnlineCop> That replaces whatever it finds with "nothing".
[03:19:19] <OnlineCop> It's basically removing any of these special characters that it finds from a string.
[03:19:37] <re101-deer-85> okay
[03:20:09] <re101-deer-85> is there any method or formula to replace double strings to single one by this method
[03:20:32] <OnlineCop> https://regex101.com/r/SaV2dQ/1
[03:20:38] <OnlineCop> What do you mean double strings?
[03:20:47] <OnlineCop> A "string \"within\" another 'string' ?"
[03:21:09] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:21:28] <re101-deer-85> sorry... double or repeated or consecutive special characters
[03:22:01] <OnlineCop> If you want to get rid of the double 'e' in "three" so it becomes "thre" ?
[03:22:23] <re101-deer-85> in salesforce
[03:22:23] <re101-deer-85> \s    is written as \\s
[03:22:24] <re101-deer-85> \b    is written as \\b
[03:22:24] <re101-deer-85> doube \ is used
[03:22:25] *** rebot sets mode: +q re101-deer-85!*@*
[03:22:26] <rebot> 14re101-deer-85: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[03:22:55] *** rebot sets mode: -q re101-deer-85!*@*
[03:23:07] <re101-deer-85> how can it be done using replace
[03:23:23] <OnlineCop> On places like regex101, you write \s, \b, \\, etc. However, when you put a regex string into "quotes", you often have to escape them. Regex101 has a "Code Generator" which can actually escape those \\ for you.
[03:23:35] <OnlineCop> Otherwise, match `\\(.)` and replace with $1.
[03:23:41] <re101-deer-85> okay
[03:23:55] <OnlineCop> That will match a literal '\' character and capture the character after it. Then you just replace with that single character.
[03:24:36] <OnlineCop> If you want to match `\\` before a character, you need to escape each of the \ so it looks like `\\(\\.)`  and replace it with $1.
[03:25:02] <OnlineCop> You can see that here: https://regex101.com/r/SaV2dQ/2
[03:25:10] <re101-deer-85> okay
[04:03:48] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 240 seconds)
[04:04:12] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[04:10:36] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 240 seconds)
[04:11:11] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[04:23:21] *** Quits: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:798f:b83d:f33:6a2f) (Quit: Client closed)
[04:35:30] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[05:00:02] *** Joins: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32)
[05:00:56] *** Quits: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32) (Client Quit)
[05:01:25] *** Joins: re101-bobcat-21 (~re101-bob@153.122.173.93)
[05:03:35] *** Joins: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32)
[05:05:38] *** Quits: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32) (Client Quit)
[05:05:52] *** Joins: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32)
[05:09:53] *** Joins: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net)
[05:10:09] <re101-gar-3> regex for first name that allows - using negation
[05:12:07] *** Joins: re101-lemur-83 (~re101-lem@wnpgmb0412w-ds01-45-12-78.dynamic.bellmts.net)
[05:12:23] <re101-lemur-83> hi
[05:12:38] <re101-gar-3> please help me
[05:13:06] <re101-gar-3> regex for first name that allows - using negation
[05:13:11] *** Quits: re101-lemur-83 (~re101-lem@wnpgmb0412w-ds01-45-12-78.dynamic.bellmts.net) (Client Quit)
[05:16:06] *** Quits: re101-fish-0 (~re101-fis@2607:fb90:b274:9f10:b1f1:90bd:9850:f32) (Quit: Client closed)
[05:21:53] *** Quits: re101-gar-3 (~re101-gar@wnpgmb0412w-ds01-160-223.dynamic.bellmts.net) (Quit: Client closed)
[05:30:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:13] *** Joins: vlm (~vlm@user/vlm)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:39:07] *** Joins: jinsun__ (~jinsun@user/jinsun)
[05:41:57] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 252 seconds)
[05:52:53] *** Joins: p-i-_ (~Ohmu@183.89.27.225)
[05:56:40] *** Quits: p-i- (~Ohmu@183.89.27.225) (Ping timeout: 272 seconds)
[05:56:57] *** Quits: re101-tang-55 (~re101-tan@143.202.253.242) (Quit: Client closed)
[06:01:34] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[06:10:53] *** Joins: src (~src@user/src)
[06:10:58] *** Joins: re101-badger-74 (~re101-bad@2600:8805:9a20:3800:1418:986c:f0ed:c15f)
[06:19:04] *** Quits: re101-badger-74 (~re101-bad@2600:8805:9a20:3800:1418:986c:f0ed:c15f) (Quit: Client closed)
[06:47:28] *** Joins: adeliktas6 (~adeliktas@i59F52959.versanet.de)
[06:49:03] *** Quits: adeliktas (~adeliktas@i59F5FF2F.versanet.de) (Ping timeout: 252 seconds)
[06:49:03] *** adeliktas6 is now known as adeliktas
[07:00:07] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Read error: Connection reset by peer)
[07:03:10] *** Quits: re101-bobcat-21 (~re101-bob@153.122.173.93) (Quit: Client closed)
[08:05:35] *** Joins: re101-oyster-37 (~re101-oys@189.216.87.116)
[08:05:40] *** Joins: re101-bird-10 (~re101-bir@189.242.102.143)
[08:06:42] *** Quits: re101-oyster-37 (~re101-oys@189.216.87.116) (Client Quit)
[08:06:49] *** Quits: re101-bird-10 (~re101-bir@189.242.102.143) (Client Quit)
[08:40:25] *** Joins: re101-bird-10 (~re101-bir@189.242.102.143)
[08:42:59] *** Quits: re101-bird-10 (~re101-bir@189.242.102.143) (Client Quit)
[09:17:26] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[09:37:56] *** Joins: stevenm__ (~stevenm@stevenm.keele.netcentral.co.uk)
[09:38:25] *** Joins: src_ (~src@user/src)
[09:38:52] *** Joins: travisghansen6 (~travisgha@192.74.130.86)
[09:39:13] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[09:39:28] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[09:39:28] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[09:39:28] *** Joins: maetthew (~maetthew@user/maetthew)
[09:40:12] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[09:40:36] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 240 seconds)
[09:40:43] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[09:40:45] *** travisghansen6 is now known as travisghansen
[09:41:00] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 240 seconds)
[09:42:56] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[09:44:19] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:49:02] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[10:50:30] *** Quits: cth (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:02:10] *** Joins: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:8486:f60:b5ec:732)
[11:02:10] <re101-deer-85> Hi
[11:02:40] <re101-deer-85> regex to not allow /,#- characters two or more times in a text area
[11:02:51] *** Joins: re101-zebra-27 (~re101-zeb@124.74.24.138)
[11:02:54] *** Quits: re101-zebra-27 (~re101-zeb@124.74.24.138) (Client Quit)
[11:04:03] <mysticspiral[m]> so its about that only one of /,#- may occur in the text and only once?
[11:05:15] <re101-deer-85> should be match
[11:05:19] *** Quits: cantcountgood124 (~cantcount@rrcs-72-43-62-222.nys.biz.rr.com) (Quit: Client closed)
[11:05:21] <re101-deer-85> in text area
[11:05:49] <re101-deer-85> _/
[11:05:53] <re101-deer-85> /
[11:05:53] <mysticspiral[m]> its better if you post some examples
[11:06:02] <re101-deer-85> posting in link
[11:08:30] <re101-deer-85> https://regex101.com/r/syy6qV/1
[11:08:43] <re101-deer-85> please check
[11:10:58] <mysticspiral[m]> every combination that is possible with [/-#,]? also stuff like #,
[11:11:19] <re101-deer-85> yes
[11:11:42] <re101-deer-85> combinations with consecutive two or more should be a match
[11:11:55] <mysticspiral[m]> https://regex101.com/r/syy6qV/2
[11:12:24] <mysticspiral[m]> two or more https://regex101.com/r/syy6qV/3
[11:20:46] <re101-deer-85> if these are all the possible combinations of two special character
[11:20:47] <re101-deer-85> how to match words with these
[11:21:22] <purplex> are you calling "not allow" = match, deer?
[11:21:36] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Quit: *evaporates*)
[11:22:14] <re101-deer-85> https://regex101.com/r/uccXX4/1
[11:22:27] <re101-deer-85> yes not allow= match
[11:23:52] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[11:24:15] <purplex> whats an example of "how to match words with these"?
[11:24:32] <re101-deer-85> i have given in link
[11:25:37] <purplex> "how to match the text area field" you changed 'word' to 'text area field'
[11:26:33] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 250 seconds)
[11:27:01] <purplex> these don't have any 'one' meaning to a regex expert, i mean not specific enough
[11:27:29] *** Joins: re101-lion-71 (~re101-lio@254-146-190-109.dsl.ovh.fr)
[11:29:47] <mysticspiral[m]> probably the same like the previous task, but with only /- as characters
[11:29:48] <mysticspiral[m]> https://regex101.com/r/uccXX4/2
[11:30:08] <mysticspiral[m]> note that i changed delimiter to @
[11:30:24] <mysticspiral[m]> you could also write [\/-]{2,} instead
[11:32:33] *** Joins: palasso (~palasso@user/palasso)
[11:33:41] <re101-deer-85> https://regex101.com/r/jSHEjN/1
[11:36:45] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:36:54] *** Joins: karakedi (~eAC53C340@user/karakedi)
[11:36:56] *** Quits: re101-lion-71 (~re101-lio@254-146-190-109.dsl.ovh.fr) (Quit: Client closed)
[11:39:27] *** Quits: stutz (~stutz@user/stutz) (Ping timeout: 252 seconds)
[11:42:47] *** Joins: re101-booby-6 (~re101-boo@151.192.179.223)
[11:43:14] <re101-booby-6> https://regex101.com/r/UII8dz/1 i need to get the url inside the " "
[11:43:58] <re101-deer-85> https://regex101.com/r/dmWhUL/1
[11:44:17] *** Joins: stutz (~stutz@p200300e88f133100b25adafffe87820c.dip0.t-ipconnect.de)
[11:44:17] *** Quits: stutz (~stutz@p200300e88f133100b25adafffe87820c.dip0.t-ipconnect.de) (Changing host)
[11:44:17] *** Joins: stutz (~stutz@user/stutz)
[11:51:45] <purplex> https://regex101.com/r/jSHEjN/2 ?
[11:52:11] *** Joins: re101-baboon-99 (~re101-bab@c-4b13235c.010-31-6c6b701.bbcust.telenor.se)
[11:52:18] <re101-baboon-99> Hi
[11:52:26] <re101-baboon-99> hello?
[11:52:41] *** Quits: re101-baboon-99 (~re101-bab@c-4b13235c.010-31-6c6b701.bbcust.telenor.se) (Client Quit)
[11:53:05] <purplex> it matches a string like https://regex101.com/r/dmWhUL/2 not sure why you want it
[11:53:53] <mysticspiral[m]> re101-booby-6: https://regex101.com/r/UII8dz/2
[11:54:09] <mysticspiral[m]> note the change of delimiter from " to '
[11:55:51] <purplex> or https://regex101.com/r/UII8dz/3
[12:09:28] *** Joins: re101-walrus-13 (~re101-wal@116.75.112.141)
[12:10:16] <re101-walrus-13> Hello, I want to match a complete word, but that doesn't contain any words before
[12:10:41] <re101-walrus-13> That doesn't contain a particular string before it *
[12:10:43] <re101-walrus-13> https://regex101.com/r/y6kw6G/1
[12:10:58] <re101-walrus-13> If it starts with const, I dont want that word to be matched
[12:13:39] <re101-deer-85> https://regex101.com/r/VW3TKr/1
[12:17:48] <mysticspiral[m]> re101-walrus-13: im not really sure what you want
[12:17:49] <mysticspiral[m]> https://regex101.com/r/y6kw6G/2
[12:17:56] <mysticspiral[m]> like this?
[12:19:09] *** Quits: re101-booby-6 (~re101-boo@151.192.179.223) (Quit: Client closed)
[12:19:55] <re101-walrus-13> Yes, exactly this. But you have given space after 'const' in the regex. Will it not work if I make it any number of whitespace characters?
[12:20:07] <re101-walrus-13> https://regex101.com/r/DLniKu/1
[12:22:59] <mysticspiral[m]> yes, it wont work
[12:42:59] *** Quits: re101-walrus-13 (~re101-wal@116.75.112.141) (Quit: Client closed)
[12:43:04] <mysticspiral[m]> re101-walrus-13: you could try this https://regex101.com/r/DLniKu/3
[12:43:42] <mysticspiral[m]> sorry i mean https://regex101.com/r/DLniKu/4
[12:45:51] <re101-deer-85> https://regex101.com/r/ByUWkv/1
[12:45:51] <re101-deer-85> please look this
[12:47:18] *** Joins: re101-horse-73 (~re101-hor@net-93-144-29-226.cust.vodafonedsl.it)
[12:48:13] *** Quits: re101-horse-73 (~re101-hor@net-93-144-29-226.cust.vodafonedsl.it) (Client Quit)
[12:49:33] *** Joins: lavaball (felix@31.204.155.215)
[13:06:09] <re101-deer-85> Hi
[13:06:34] <re101-deer-85> https://regex101.com/r/ByUWkv/1
[13:06:35] <re101-deer-85> please help with this
[13:14:20] *** Quits: p-i-_ (~Ohmu@183.89.27.225) (Remote host closed the connection)
[13:15:04] *** Joins: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[13:31:03] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:32:41] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 272 seconds)
[13:33:38] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[13:40:28] *** Joins: Firecatmon (~firecatmo@pa49-186-30-228.pa.vic.optusnet.com.au)
[13:52:30] *** Joins: re101-pike-31 (~re101-pik@132.154.117.67)
[13:52:57] <re101-pike-31> need to create regex in javascript
[13:53:40] <re101-pike-31> Event Name: Cluster Monitor Status Change - Node
[13:53:40] <re101-pike-31> URL: https://lsbrbhz7003.anglo.local:2381/
[13:53:41] <re101-pike-31> Event originator: lsbrbhz7003
[13:53:41] <re101-pike-31> Event Severity: Major
[13:53:42] *** rebot sets mode: +q re101-pike-31!*@*
[13:53:43] <rebot> 14re101-pike-31: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[13:54:00] *** Quits: re101-pike-31 (~re101-pik@132.154.117.67) (Client Quit)
[13:54:12] *** rebot sets mode: -q re101-pike-31!*@*
[14:07:32] *** Quits: Firecatmon (~firecatmo@pa49-186-30-228.pa.vic.optusnet.com.au) (Ping timeout: 250 seconds)
[14:08:52] *** Joins: re101-moray-83 (~re101-mor@91.218.89.50)
[14:09:15] *** Quits: re101-moray-83 (~re101-mor@91.218.89.50) (Client Quit)
[14:28:19] *** Quits: re101-deer-85 (~re101-dee@2409:4070:4396:fc34:8486:f60:b5ec:732) (Quit: Client closed)
[14:29:44] *** Quits: lavaball (felix@31.204.155.215) (Quit: lavaball)
[15:21:20] *** Joins: re101-swan-81 (~re101-swa@165.225.17.153)
[15:22:27] <re101-swan-81> https://regex101.com/
[15:25:28] <re101-swan-81> I want to check if my string contains a specific sequence of letters.
[15:25:29] <re101-swan-81> For example, i have this string: S,CC,M,M,M,S,CC,M,M,M,M,S,CC,M,M,S,CC,M,M,M,S,S,M,M,M,M,M,M,M,M,M,C1,C3,C3,C3,H
[15:25:29] <re101-swan-81> I want to check if there is this sequence: S,CC,M(or multiple Ms), S
[15:25:30] <re101-swan-81> In essence my question is how i can check a sequence without taking into consideration cases with consecutively the same letters.
[15:25:30] <re101-swan-81> SQL-Big query
[15:25:30] *** rebot sets mode: +q re101-swan-81!*@*
[15:25:31] <rebot> 14re101-swan-81: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[15:25:34] *** Joins: timm (~timm@user/timm)
[15:26:00] *** rebot sets mode: -q re101-swan-81!*@*
[15:26:31] <re101-swan-81> https://regex101.com/
[15:27:23] <re101-swan-81> i dont seem to be able to share the regex101 link with my string and regexp
[15:29:06] <mysticspiral[m]> did you hit save?
[15:29:41] <re101-swan-81> ahh sorry - here we go:)  https://regex101.com/r/xuyb3J/1
[15:30:48] <re101-swan-81> I want to check if there is this sequence: S,CC,M(or multiple Ms), S
[15:30:49] <re101-swan-81> In essence my question is how i can check a sequence without taking into consideration cases with consecutively the same letters.
[15:30:49] <re101-swan-81> SQL-Big query
[15:32:08] *** Joins: re101-cougar-77 (~re101-cou@165.225.123.63)
[15:32:38] <mysticspiral[m]> https://regex101.com/r/xuyb3J/2
[15:32:38] <mysticspiral[m]> not sure if i get you right
[15:34:23] <re101-swan-81> nice i think you got it working like a charm;)
[15:34:28] <re101-cougar-77> guys regex to match " table"  " table " "table "   " table,"   " ,table,"    ",table"  in either side of table , or spaces will be there i need regex to replace that table alone
[15:34:36] <re101-cougar-77> can anyone help
[15:34:55] <re101-swan-81> thanks a lot mysticspiral
[15:35:45] <timm> \btable\b
[15:35:57] <mysticspiral[m]> this would be a way to also match nested ones https://regex101.com/r/xuyb3J/3
[15:36:11] <timm> \<table\>
[15:36:54] <re101-swan-81> amazing thanks a lot once again:)
[15:37:59] <re101-cougar-77> \btable\b and \<table\> both doesnt work
[15:38:25] <re101-cougar-77> cause some place its like r.table and tab,table
[15:39:07] <re101-cougar-77> i need to regex to ignore ,or spaces in both and take the name table
[15:39:08] <re101-cougar-77> \
[15:40:49] <timm> [[:<:]]table[[:>:]]
[15:40:51] <timm> maybe
[15:41:39] *** Quits: re101-swan-81 (~re101-swa@165.225.17.153) (Quit: Client closed)
[15:42:05] <re101-cougar-77> no its not working tim
[15:53:58] *** Quits: re101-cougar-77 (~re101-cou@165.225.123.63) (Quit: Client closed)
[15:59:33] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[16:06:39] *** Joins: lavaball (felix@31.204.155.215)
[16:31:37] *** Quits: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[16:37:17] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[16:53:47] <mysticspiral[m]> i didnt know https://pypi.org/project/regex/#variable-length-lookbehind
[16:54:11] <mysticspiral[m]> i thought only .net and raku support variable length lookbehind
[16:57:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[16:59:30] <purplex> yes python 3 does, but not re101 python
[16:59:45] *** Joins: re101-seal-68 (~re101-sea@104.234.241.192)
[17:00:03] *** Joins: Tam2k9 (~Tam2k9@14.226.86.246)
[17:00:12] <Tam2k9> help me
[17:00:55] <Tam2k9> i got a bug about minecraft GeyserMC
[17:01:11] *** Quits: Tam2k9 (~Tam2k9@14.226.86.246) (Client Quit)
[17:04:41] *** Joins: re101-tang-55 (~re101-tan@143.202.253.242)
[17:05:19] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:10:59] *** Quits: re101-seal-68 (~re101-sea@104.234.241.192) (Ping timeout: 256 seconds)
[17:21:43] *** Joins: re101-emu-29 (~re101-emu@168.149.166.77)
[17:21:54] <re101-emu-29> generic expression for amount
[17:22:00] <re101-emu-29> ex: 42,100
[17:22:15] <re101-emu-29> without currency symbol
[17:22:34] <JohnDoe1> [\d,.]+ potentially
[17:23:18] <re101-emu-29> only capturing 42,
[17:23:27] <re101-emu-29> not coming after ","
[17:28:04] <JohnDoe1> that's \b\d+(?=[,.]) maybe the . inside [] may not be needed if you don't want to capture 100 in 100.50
[17:48:32] *** Joins: txtsd (~txtsd@user/txtsd)
[17:48:45] <re101-emu-29> getting only 42,
[17:48:48] *** Quits: re101-tang-55 (~re101-tan@143.202.253.242) (Quit: Client closed)
[17:48:48] <re101-emu-29> in 42,100
[17:59:42] <JohnDoe1> re101-emu-29 with the second one?
[18:00:04] <JohnDoe1> re101-emu-29 https://regex101.com/r/hw47SX/1
[18:06:36] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 240 seconds)
[18:07:00] *** Quits: re101-emu-29 (~re101-emu@168.149.166.77) (Quit: Client closed)
[18:07:48] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[18:07:48] *** Quits: stutz (~stutz@user/stutz) (Ping timeout: 240 seconds)
[18:07:58] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:65ff:4881:d497:d20d)
[18:08:07] *** Joins: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[18:08:12] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-3d94-4d23-dc7c-c228.res6.spectrum.com) (Ping timeout: 240 seconds)
[18:08:12] *** Quits: subie (~subie@2601:4c0:4080:bc0:a17c:d079:69d0:6b80) (Ping timeout: 240 seconds)
[18:09:31] *** Joins: re101-hyena-70 (~re101-hye@46.39.55.10)
[18:09:38] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[18:09:59] *** Quits: re101-hyena-70 (~re101-hye@46.39.55.10) (Client Quit)
[18:10:08] *** Joins: txtsd (~txtsd@user/txtsd)
[18:13:30] *** Joins: stutz (~stutz@p200300e88f13310000000000000004cf.dip0.t-ipconnect.de)
[18:13:43] *** Quits: stutz (~stutz@p200300e88f13310000000000000004cf.dip0.t-ipconnect.de) (Changing host)
[18:13:43] *** Joins: stutz (~stutz@user/stutz)
[18:16:23] *** Joins: f00 (~timm@user/timm)
[18:18:00] *** Quits: timm (~timm@user/timm) (Read error: Connection reset by peer)
[18:20:48] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-4424-fc06-167e-bc32.res6.spectrum.com)
[18:29:18] *** Joins: imcdona (imcdona@fsf/member/imcdona)
[19:09:10] *** Joins: MagentaRV (~ShoeMaker@cpe-172-101-11-228.maine.res.rr.com)
[19:25:57] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 240 seconds)
[19:28:07] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[19:28:07] *** Joins: loofy (~loofy@user/loofy)
[19:29:45] *** AI4AI is now known as subie
[19:40:30] *** Joins: dandyn (~dandyn@user/dandyn)
[19:51:09] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[20:25:01] *** Joins: txtsd (~txtsd@user/txtsd)
[20:29:02] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:29:18] *** Joins: txtsd (~txtsd@user/txtsd)
[20:31:53] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:32:12] *** Joins: txtsd (~txtsd@user/txtsd)
[20:35:26] *** Quits: txtsd (~txtsd@user/txtsd) (Client Quit)
[20:35:42] *** Joins: txtsd (~txtsd@user/txtsd)
[20:55:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:08:42] *** Quits: f00 (~timm@user/timm) (Ping timeout: 252 seconds)
[21:10:13] *** Joins: f00 (~timm@user/timm)
[21:44:50] *** Joins: re101-deer-85 (~re101-dee@2406:b400:a9:2090:9906:7120:91b3:63c7)
[21:51:49] *** Joins: re101-saola-44 (~re101-sao@52.95.4.12)
[21:53:39] <re101-saola-44> Hi, https://regex101.com/r/iovDAQ/1 -> I'm trying to add a new string to the List. So I should be able to match till the last element in that List and then insert/replace the new String
[21:55:28] *** Joins: [diablo]0 (~diablo]@user/diablo/x-9068044)
[21:55:43] <OnlineCop> https://regex101.com/r/iovDAQ/2
[21:56:18] <OnlineCop> Or, you wanted to add "Games5" to the end of ListOfActivities instead?
[21:56:27] <OnlineCop> re101-saola-44: Are you using PCRE or something else?
[21:56:55] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 256 seconds)
[21:56:55] *** [diablo]0 is now known as [diablo]
[21:59:46] <OnlineCop> https://regex101.com/r/iovDAQ/3
[22:00:48] <OnlineCop> https://regex101.com/r/iovDAQ/4 would be a more PCRE approach, although not all variants support (?(DEFINE)...)
[22:01:17] <re101-saola-44> OnlineCop Yes, I want to add "Games5" to the end of ListOfActivities
[22:02:24] <re101-saola-44> and I'm using JavaScipt
[22:02:31] <re101-saola-44> JavaScript*
[22:08:21] <OnlineCop> https://regex101.com/r/iovDAQ/5 then (switched flavor to ECMAScript as well).
[22:09:36] <OnlineCop> This will fail if the (...) parens are empty; the regex expects at least one "quoted string".
[22:10:07] <OnlineCop> Then, after it matches the quoted string, it starts a group which looks for a comma, then another string, and repeats that internal group as many times as it can.
[22:14:21] <re101-saola-44> Thanks, got it
[22:14:42] *** Quits: re101-saola-44 (~re101-sao@52.95.4.12) (Quit: Client closed)
[23:20:01] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th)
[23:23:24] *** Quits: p-i- (~Ohmu@mx-ll-183.89.27-225.dynamic.3bb.co.th) (Ping timeout: 240 seconds)
[23:28:23] *** Quits: re101-deer-85 (~re101-dee@2406:b400:a9:2090:9906:7120:91b3:63c7) (Ping timeout: 256 seconds)
