[00:01:56] <Donitz> it's not really calculating
[00:01:58] <Donitz> it's rendering
[00:03:19] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:04:36] *** Trieste_ is now known as Trieste
[00:04:48] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:05:46] *** Joins: srhm (~srhm@user/srhm)
[00:06:08] <Donitz> maybe I could
[00:06:10] <Donitz> pff
[00:06:17] <Donitz> get the canvas axes for the plotting area
[00:06:21] <Donitz> and draw the line manually
[00:06:31] <Donitz> I mean, canvas coordinates
[00:07:04] *** Joins: sargon (~sargon@188.250.185.117)
[00:07:11] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[00:07:23] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[00:08:42] <Donitz> because I'm not in the mood for drawing the axes manually
[00:08:46] <Donitz> that's such a PITA
[00:09:23] *** Joins: Adois (~Adoi@user/adoi)
[00:13:13] *** Joins: Atque (~Atque@user/atque)
[00:15:36] *** Joins: jaggz (~jaggz@user/jaggz)
[00:15:47] *** Quits: pro_z (~pro_z@37.214.45.81) (Ping timeout: 240 seconds)
[00:15:57] <jaggz> [chr(a) for a in range(ord('a'),ord('z')) + range(ord('A'),ord('Z'))]
[00:16:07] <jaggz> I want to make a string 'a-zA-Z0-9'
[00:17:20] <jaggz> meh.. I just typed it out
[00:18:24] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[00:18:39] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[00:18:42] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[00:19:42] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:78dc:c5d0:c569:68ce) (Ping timeout: 250 seconds)
[00:20:48] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:52b4:bd29:6e83:2e46)
[00:21:20] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[00:21:45] *** Joins: srhm (~srhm@user/srhm)
[00:25:03] *** Joins: Enitin (~Enitin@82.102.22.86)
[00:26:08] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:26:11] *** Joins: mago (~mago@87.125.52.230)
[00:27:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:27:46] *** Joins: Atque_ (~Atque@user/atque)
[00:27:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:29:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:30:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[00:30:55] *** Joins: shla (~root@user/shla)
[00:31:01] *** Joins: Enitin (~Enitin@82.102.22.84)
[00:31:07] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:31:47] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:32:23] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 250 seconds)
[00:32:41] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[00:32:50] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:33:47] *** Quits: Atque_ (~Atque@user/atque) (Quit: ...)
[00:34:14] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[00:34:17] *** Joins: Atque (~Atque@user/atque)
[00:34:26] *** Quits: mago (~mago@87.125.52.230) (Quit: Client closed)
[00:34:26] *** Joins: Akuli (~Akuli@87-94-109-18.bb.dnainternet.fi)
[00:35:18] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[00:35:31] *** Joins: Auron956 (Auron956@user/auron)
[00:37:57] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c926:ea6:65e7:2456) (Remote host closed the connection)
[00:38:27] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:b091:3f73:c94:74bf)
[00:38:35] *** Joins: emika8 (~emika@83.136.182.141)
[00:38:46] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 250 seconds)
[00:39:20] <supakeen> jaggz, `string.ascii_letters + string.numbers` is what i usually write/use.
[00:39:27] *** Quits: emika (~emika@185.207.249.229) (Ping timeout: 240 seconds)
[00:39:27] *** emika8 is now known as emika
[00:39:28] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[00:41:29] *** Quits: ngaio__ (~ngaio@2601:245:c700:2c06:2917:ae42:3831:c979) (Quit: Leaving)
[00:42:18] *** Joins: deltab (~deltab@user/deltab)
[00:45:23] *** Quits: Adois (~Adoi@user/adoi) (Read error: Connection reset by peer)
[00:45:33] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:48:07] *** Quits: compufreak (~compufrea@cpe-174-103-101-19.columbus.res.rr.com) (Ping timeout: 240 seconds)
[00:48:10] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[00:48:22] *** Joins: compufreak (~compufrea@cpe-174-103-101-19.columbus.res.rr.com)
[00:49:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[00:51:11] *** Joins: mago (~mago@87.125.52.230)
[00:51:47] <mago> Hello guys. Id like to download all comments from an instagram post.. How could i do that..?
[00:52:13] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[00:52:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:53:07] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[00:53:11] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[00:53:26] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[00:53:42] *** Joins: ice9 (~ice9@user/ice9)
[00:54:32] *** Joins: Naan (~naan@user/naan)
[00:55:24] *** Quits: jellyknight (~gelignite@55d43abc.access.ecotel.net) (Quit: Stay safe!)
[00:55:53] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[00:56:14] <masoudd> mago, Either use instagram public API (if it even exists), or you have to do it the hard way with web scraping
[00:56:37] *** Joins: aiyion (~aiyion@wireguard/tunneler/aiyion)
[00:56:52] <ChrisWarrick> instagram has an API, although AFAIK it requires approval to use
[00:56:55] <mago> masoudd i comment a post but when i refresh it gets los in all the comments and cant find it anymore, thats why i want to download them all and see if it's really there..
[00:57:16] <jaggz> supakeen, oh cool! thanks
[00:57:47] <jaggz> mago, I did some instagram stuff.. was a mess.  Had to use selenium
[00:58:02] <jean-luc> if you cant find your comment, the poster probably cant either
[00:58:06] <jean-luc> :-p
[00:58:14] <jaggz> they go through a bit of effort to make scraping a pain I think
[00:58:22] <masoudd> That's like you posting something and then stealing every postal workers bag to see if they are delivering your letter
[00:58:36] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[00:58:47] <jean-luc> welll its just one post, so stealing 'one bag' essentially
[00:58:57] <jean-luc> and then goign through all the mail :p
[01:01:18] *** Quits: mattil (~mattil@87-92-211-212.rev.dnainternet.fi) (Quit: Leaving)
[01:01:25] *** Quits: xlirate (~xlirate@dhcp-24-53-241-186.cable.user.start.ca) (Ping timeout: 252 seconds)
[01:01:26] *** kevr is now known as deadvr
[01:02:08] <mago> Mmm dont know, i just want to make certain my comment is really possted somwhere..
[01:02:23] *** deadvr is now known as kevr
[01:03:13] <mago> What im getting is that comments are not ordered cronologically but by interaction level..
[01:05:03] *** Joins: Adoi (~Adoi@user/adoi)
[01:05:04] *** Joins: Adois (~Adoi@user/adoi)
[01:06:48] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:7c0e:bc19:7d80:f121) (Read error: Connection reset by peer)
[01:07:44] <mago> And thats why i cant find mine lol.
[01:08:14] *** Joins: besnn (~besnn@user/besnn)
[01:08:15] <mago> Still.. If a tree falls in the forest and no one hears, does it make a sound?
[01:08:39] <mago> Does my post exist if no one can see it? Is it really there?
[01:08:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8973) (Ping timeout: 250 seconds)
[01:09:10] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[01:09:10] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[01:09:43] *** Joins: Adoi (~Adoi@user/adoi)
[01:10:20] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2129:ddfa:934d:5a38)
[01:11:14] *** Joins: Fiji (~Fiji@user/fiji)
[01:11:41] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:12:05] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:12:10] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[01:14:10] <aphysically> okay, done with the core part of implementing that bash script in python ^_^ https://dpaste.com/889M8JKZW
[01:14:51] <aphysically> now I can work on implementing the last edge case to give it feature parity, work on splitting into project, or work on config file support
[01:15:37] <mago> What are you doing aphysically?
[01:15:51] <mago> If you had it in bash why you need it in python? Just asking out of curiosity..
[01:16:57] <aphysically> trying to learn better python coding practices, and also the code in bash is hard to maintain
[01:17:03] <aphysically> and extend
[01:17:06] <aphysically> because, well, bash
[01:17:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:17:21] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:17:56] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:19:40] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[01:21:13] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[01:21:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[01:21:26] *** Joins: parsnip (~parsnip@user/parsnip0)
[01:21:50] <parsnip> i installed python@3.9 via homebrew. how do i access the executables installed by pip
[01:22:10] <parsnip> or what are the "internet search" keywors
[01:22:13] <parsnip> *keywords
[01:22:28] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[01:22:39] <jaggz> i'm probably going to cut this out for now (since I'm not doing colors at the moment), but does anyone know a clever way to sort of evenly distribute these rgb values?
[01:22:40] <mago> Are you in linux parsnip?
[01:22:40] <jaggz> https://paste.debian.net/hidden/e06c385a/
[01:22:48] <parsnip> oops
[01:22:52] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:22:53] <parsnip> macos, i seem to have it now
[01:23:08] <parsnip> something is off on my setup, `source ~/.zshrc` seems to fix paths
[01:23:10] *** Joins: fikran (~fikran@user/fikran)
[01:23:25] <jaggz> i'm just assigning rgb values like (1,1,0), (1,0,1), .. (0, .5, 0)
[01:23:25] <mago> I found them in : /home/mrcoffee/.local/lib/python3.9/site-packages/
[01:23:27] <parsnip> like, i have to do that every time i've just installed something
[01:23:31] <jaggz> to have different colors for each item
[01:24:06] <mago> Ah lol, thorugh homebrew, maybe it puts it in some other directory not sure..
[01:24:23] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:24:35] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:25:31] <grym> parsnip: /the/full/path/to/python3 -m venv somevenv; somevenv/bin/python -m pip <stuff>
[01:25:43] *** Quits: mago (~mago@87.125.52.230) (Quit: Client closed)
[01:25:51] <jaggz> i should probably use hsv
[01:25:58] <jaggz> anyway, will put it off for now
[01:26:00] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:52b4:bd29:6e83:2e46) (Ping timeout: 250 seconds)
[01:26:02] <parsnip> i had tried something like that too, with -m
[01:26:34] <parsnip> i think i need to run an experiment installing things and having to run `source ~/.zshrc`, to troubleshoot
[01:26:42] <parsnip> some day ^TM
[01:26:57] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:26:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:27:08] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:27:43] <grym> parsnip: i have ${HOME}/.local/bin on my path and rather a lot of entry_points get symlinked there
[01:28:09] <parsnip> i'm following https://f-droid.org/docs/Installing_the_Server_and_Repo_Tools/#installing-the-latest-code-any-platform
[01:28:28] *** Joins: juanma (~juanma@200.red-79-157-209.dynamicip.rima-tde.net)
[01:28:40] <parsnip> did they forget "create" argument?
[01:28:55] <grym> random docs are usually horrible :(
[01:28:57] <grym> let's see..
[01:29:17] <grym> oh they're leading you through the activation dance
[01:29:26] <parsnip> i mean, i filed an issue about broken app, and they said, "use bleeding edge fdroidserver", basically
[01:29:35] <parsnip> so here i am
[01:29:57] <grym> aurgh they know about easy_install? what is this, 2006
[01:30:10] <aiyion> Can somebody tell me, how I mock methods that return properties of the mock without the patch syntax?
[01:30:21] <parsnip> i think it should say "pyvenv create fdroidserver-env", not "pyvenv fdroidserver-env"
[01:30:31] <parsnip> grym: yeah i saw that and my intuition went "NO"
[01:30:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Client Quit)
[01:30:41] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:30:55] <grym> parsnip: `git clone https://gitlab.com/fdroid/fdroidserver; python3 -m venv fdroidvenv; fdroidvenv/bin/python -m pip  install ./fdroidserver`
[01:30:58] <grym> that's what i'd do
[01:31:07] <parsnip> oh, so venv is the new hotness, iirc
[01:31:09] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:31:15] <aiyion> Like foo = Mock(); foo.gargoyle={14: "zebra"};
[01:31:16] <parsnip> thank you
[01:31:19] <grym> parsnip: or `git clone https://gitlab.com/fdroid/fdroidserver; python3 -m venv fdroidvenv; fdroidvenv/bin/python -m pip  install -e ./fdroidserver`  if you're going to change fdroidserver's code
[01:31:23] <grym> cheers :)
[01:31:43] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:49] <nedbat> aiyion: i didn't understand the question
[01:32:30] <grym> parsnip: if all you need is the code, you could also make a venv and then fdroidvenv/bin/python -m pip install git+https:.....
[01:32:33] <aiyion> and I look for some sort of sideeffect implementation that returns the property for the name given as argument
[01:32:36] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[01:33:00] *** Joins: hrtk (~hritik@2409:4064:511:b05e:721c:e7ff:feb7:a624)
[01:33:17] <hrtk> Hey, is there a way to quickly get back the object from object.__dict__ data ?
[01:33:53] <nedbat> hrtk: an object's __dict__ doesn't have a reference back to the object. can you say more about the need?
[01:34:10] <aiyion> nedbat: how do I write a side_effect which impements a method "get_attribute" for the mock foo
[01:34:33] <nedbat> aiyion: i'm not sure you can. Sounds like maybe you want a fake object instead of a mock object.
[01:35:00] <hrtk> I'm saving the representation of an object in the database in json by json.dumps(obj.__dict__). I would like to convert it back to the original object when fetching from the database
[01:36:38] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[01:36:47] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[01:36:59] *** Joins: nomic (~nomic@185.217.117.169)
[01:37:06] <parsnip> ERROR: Directory './fdroidserver' is not installable. Neither 'setup.py' nor 'pyproject.toml' found.
[01:37:30] <parsnip> grym: i'd like the simplest approach, really, i just want to git clone a commit, and use the executable
[01:37:33] <aiyion> nedbat: the mock-object is a constraint in the project.
[01:37:46] *** Joins: Hackerpcs (~user@user/hackerpcs)
[01:37:53] <parsnip> grym: i don't even think i need a virtual env, personally
[01:37:55] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:383:cf81:15:d401)
[01:37:56] <nedbat> hrtk: Do you know what class it is?
[01:38:02] <parsnip> i just want the executable
[01:38:10] <parsnip> there's a meme about this...
[01:38:12] <nedbat> aiyion: that's an unusual constraint.
[01:38:34] <parsnip> https://xkcd.com/1987/
[01:38:42] <grym> parsnip: how do you feel about more tools to fix your tools problem? :)
[01:38:44] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[01:39:00] <aiyion> good to know, I suppose.
[01:39:08] <grym> python3 -m pip install pipx; pipx install git+https://gitlab.com/fdroid/fdroidserver@hash
[01:39:11] <parsnip> there's a meme about a wrench too ,tableback
[01:39:15] <hrtk> nedbat: Yes. I'm doing MyClass(**dict) right now but there are nested classes which I converted using json.loads's default paramater into a json representable form. I'm looking to convert back.
[01:39:31] <hrtk> Maybe I'll need to have a different method for it to take out fields and works on them
[01:39:43] <grym> parsnip: pipx is very very convenient for this
[01:40:27] <parsnip> ugh, pip3.9 install . didn't work
[01:40:44] <nedbat> hrtk: there are libraries that can do this for you.
[01:41:04] <nedbat> hrtk: https://pypi.org/project/pydantic/
[01:41:12] <grym> +1 pydantic
[01:41:21] *** Joins: burakcank (burakcank@has.arrived.and.is.ready-to.party)
[01:41:24] <grym> it is epically good for this
[01:41:37] <hrtk> nedbat: Thanks!
[01:41:53] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[01:42:02] <parsnip> what's the simplest way to install this
[01:42:12] <parsnip> why can't i do it without a virtual env
[01:42:14] *** Joins: TingPing (sid2800@id-2800.helmsley.irccloud.com)
[01:42:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[01:43:02] <grym> parsnip: venvs are the simple way
[01:43:12] <grym> parsnip: i'll have a paste for you in a second
[01:43:14] <parsnip> but first try didn't work
[01:43:26] *** Parts: aiyion (~aiyion@wireguard/tunneler/aiyion) ()
[01:44:47] <grym> it's failing for me too , but i think it's fdroid's fault ... `error: can't copy 'locale/bo/LC_MESSAGES/fdroidserver.mo': doesn't exist or not a regular file`  seems like their fault not mine
[01:46:05] <parsnip> i f'ing hate contributing apps to fdroid
[01:46:15] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:37] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[01:47:25] *** Joins: djapo (~archangel@user/djapo)
[01:48:11] <grym> let me see if this is less crap on linux, sec
[01:51:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[01:51:30] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[01:51:36] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Remote host closed the connection)
[01:52:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 248 seconds)
[01:52:49] *** Joins: besnn (~besnn@user/besnn)
[01:54:34] <grym> parsnip: yeah i have no idea
[01:54:37] <grym> tried back to 2.0.3
[01:54:47] <grym> their installer just looks broken
[01:55:04] *** Quits: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1) (Quit: Leaving)
[01:55:29] <parsnip> and they broke my app's .yml file, and instruct me to use bleeding edge. i /hate/ fdroid
[01:55:47] <parsnip> is the CEO an intern?
[01:56:27] <parsnip> reverting the change on the .yml file didn't seem to fix, oddly
[01:57:25] *** Joins: cedric (~cedric@2a01:cb11:867:c200:e896:949c:e82f:78a)
[01:57:35] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:58:00] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:58:28] *** Quits: cedric (~cedric@2a01:cb11:867:c200:e896:949c:e82f:78a) (Client Quit)
[02:00:01] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[02:01:20] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[02:02:43] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[02:03:29] <cloudbender> <<< writes 100 times .... 'canvases belong in frames, canvases belong in frames, ...'
[02:04:00] <rud0lf> what about canvas object on form?
[02:04:27] *** Joins: Samian (~Sami@163.114.130.6)
[02:04:59] <cloudbender> matplotlib     FigureCanvasTkAgg
[02:05:13] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 252 seconds)
[02:05:44] *** Joins: RoyK^ (~roy@user/royk)
[02:05:46] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[02:07:40] *** Quits: gambl0re (~gambl0re@104.247.229.76) (Ping timeout: 240 seconds)
[02:08:51] *** Quits: RoyK (~roy@user/royk) (Ping timeout: 258 seconds)
[02:09:02] <parsnip> in a rage, /me clicks the "Reopen issue" button
[02:09:23] <parsnip> this game is fun. i once got into a "close, reopen, close, reopen" war on fdroid repo
[02:12:35] *** Joins: y1n (~y1n@84-115-65-208.wifi.dynamic.surfer.at)
[02:12:46] *** RoyK^ is now known as RoyK
[02:13:26] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[02:14:34] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:15:07] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[02:15:08] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[02:16:45] *** Quits: Mach (~mach@2a02:2f09:d303:5d00::738) (Quit: q)
[02:18:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:21:10] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[02:23:27] *** Joins: linguist (~brunodOut@170.84.57.174)
[02:24:11] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-185d-46f0-e096-0d5e.res6.spectrum.com) (Ping timeout: 250 seconds)
[02:25:07] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[02:25:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:27:04] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[02:29:01] *** Joins: rinwa (~user@141.226.14.13)
[02:30:12] *** Joins: lowerthansound (~lowerthan@177.191.100.78)
[02:31:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:32:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-dcbe-c82a-f605-352d.res6.spectrum.com)
[02:33:07] *** Quits: hrtk (~hritik@2409:4064:511:b05e:721c:e7ff:feb7:a624) (Ping timeout: 240 seconds)
[02:33:36] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Quit: Peace homie)
[02:33:44] *** Joins: hrtk (~hritik@2409:4064:511:b05e:721c:e7ff:feb7:a624)
[02:34:22] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[02:36:34] *** Joins: srhm (~srhm@user/srhm)
[02:36:50] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[02:37:08] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[02:38:31] *** Joins: khile (cacambo@triton.blinkenshell.org)
[02:39:45] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:41:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-dcbe-c82a-f605-352d.res6.spectrum.com) (Ping timeout: 250 seconds)
[02:43:10] *** Joins: diamondbond (~diamondbo@175.157.53.172)
[02:43:26] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:43:57] *** Quits: diamondbond (~diamondbo@175.157.53.172) (Read error: Connection reset by peer)
[02:44:14] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:44:30] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:45:43] *** Quits: juanma (~juanma@200.red-79-157-209.dynamicip.rima-tde.net) (Quit: Leaving)
[02:48:08] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[02:49:05] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4433) (Quit: Konversation terminated!)
[02:50:54] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:51:09] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:54:03] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) ()
[02:56:47] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:10] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[02:57:18] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[02:59:26] *** Joins: AlanMD (~AlanMD@193.105.139.131)
[03:00:22] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[03:00:39] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:01:10] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:383:cf81:15:d401) (Ping timeout: 240 seconds)
[03:01:15] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[03:02:25] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[03:02:29] <stealth_> does `string.find` make copies of `string` while finding position `.find('x')` ?
[03:02:38] *** Quits: y1n (~y1n@84-115-65-208.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[03:03:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:47] <BtbN> That'd be weird. Why would it?
[03:04:06] *** Joins: driib4 (~driib@185.195.233.162)
[03:04:09] <Akuli> this question seems like an xy problem
[03:04:22] <Akuli> do you actually have some performance thing you're debugging?
[03:04:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[03:04:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:04:33] <stealth_> 'x' in 's', 'x' in 't', ...
[03:04:40] *** Joins: Enitin (~Enitin@82.102.22.84)
[03:04:48] *** Joins: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[03:04:54] <stealth_> err, 'x' == 's', ...
[03:05:05] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[03:05:22] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:05:43] *** Quits: AlanMD (~AlanMD@193.105.139.131) (Ping timeout: 252 seconds)
[03:05:43] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[03:05:43] *** driib4 is now known as driib
[03:05:53] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:05:57] *** Joins: squirrel (~sq@user/squirrel)
[03:06:12] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:08:21] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[03:10:00] <squirrel> i'm running python 3.10.0rc1 from pyenv and it takes more than 2 seconds to start; this ain't normal is it?
[03:10:55] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:11:17] *** Joins: Betal (~Betal@user/betal)
[03:12:19] <InPhase> squirrel: Is it a modern computer, or a pocket calculator?
[03:12:55] <Akuli> stealth_, it can copy
[03:13:14] <stealth_> squirrel, it needs time for the engine oil to warm up
[03:13:27] *** Joins: brunodOut (~brunodOut@170.84.57.174)
[03:13:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[03:13:36] <Akuli> stealth_, apparently there are two kinds of unicode strings internally, and if the kinds differ, it converts one to the other, allocating memory for the string
[03:13:45] <stealth_> Akuli, thinking so, trying to emulate memoryview for unicode
[03:13:45] <squirrel> InPhase: well calling it modern would be a stretch but hopefully it is a computer
[03:15:27] <InPhase> squirrel: I don't have 3.10.0rc1 sitting around, but "time python3 -c 'exit()'" shows me 20 milliseconds.
[03:15:40] <Akuli> squirrel, i don't use pyenv, the one i compiled myself is really quick too
[03:15:53] *** Joins: y1n (~y1n@84-115-65-208.wifi.dynamic.surfer.at)
[03:16:09] <Akuli> (and yes, mine is also very close to 20 milliseconds)
[03:16:17] <stealth_> squirrel, are you using `re` or anything like that? would take time compiling things
[03:17:10] *** Quits: lowerthansound (~lowerthan@177.191.100.78) (Remote host closed the connection)
[03:17:16] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 252 seconds)
[03:17:55] <squirrel> i did the `time` thing as well, shows around 2200 ms, oh well. not importing anything, just exiting
[03:18:48] <stealth_> squirrel, when you installed python did you sent it to not create __pycache__ files?
[03:19:12] <parsnip> grym: from their linked docs, fixing the pyvenv command and using `pip install -e .` works. i think my big mistake was inventing the `pip install .` command and expecting it to work
[03:19:18] <parsnip> not sure
[03:19:31] <parsnip> i missed the pointer to #fdroid being on oftc
[03:19:44] <squirrel> stealth_: i just did install + global so i guess that's a no
[03:19:57] <InPhase> squirrel: Do you have another python version as a reference point?
[03:20:32] <InPhase> It's important to rule out system-level problems.
[03:20:57] <squirrel> only python2; it starts fast
[03:21:08] <squirrel> let me install 3.9 with pyenv
[03:21:22] <grym> parsnip: perhaps i was missing some build deps or something then
[03:21:25] <grym> (almost certainly)
[03:21:40] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[03:22:06] <parsnip> yeah i mean i didn't test in a sterile environment, perhaps
[03:22:31] *** Quits: Samian (~Sami@163.114.130.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:22:38] <parsnip> i'll do just about anything on my PC as long as it isn't sudo. and even then...
[03:23:07] <grym> oh yeah sudo pip ist streng verboten
[03:23:10] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 240 seconds)
[03:23:43] <parsnip> i think installing homebrew, or docker, etc, is where i'm just like, "ok"
[03:23:52] <parsnip> "take my password!"
[03:24:55] *** Quits: schumaml (~schumaml@p200300e2ef1fe90053c1821a43d17d29.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:25:12] *** Joins: schumaml (~schumaml@p200300e2ef1fe90053c1821a43d17d29.dip0.t-ipconnect.de)
[03:26:30] *** Joins: masoudd_ (~masoudd@user/masoudd)
[03:28:59] *** Joins: polyrob_ (~rob@user/polyrob)
[03:29:10] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[03:29:22] *** polyrob_ is now known as polyrob
[03:29:40] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[03:31:21] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 250 seconds)
[03:33:11] <stealth_> squirrel, is this every time you run python?
[03:33:21] *** Quits: asthasr (~asthasr@162.210.28.151) (Remote host closed the connection)
[03:34:40] *** Joins: asthasr (~asthasr@162.210.28.151)
[03:35:34] <squirrel> stealth_: well it was every time. but i switched to 3.9 and it was a reasonable 500ms, and now i switched back to 3.10 and it remains around the same 500ms. guess 3.10 got scared ¯\_(ツ)_/¯
[03:35:41] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 250 seconds)
[03:35:56] *** Quits: Auron956 (Auron956@user/auron) (Remote host closed the connection)
[03:36:33] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[03:36:46] *** Joins: m4v (~znc@ubuntu/member/m4v)
[03:37:00] <stealth_> squirrel, you would have to restart your system and try again with 3.10, might me some kind of caching thing
[03:38:57] <squirrel> i'll do that if it acts up again yeah
[03:39:17] *** Parts: parsnip (~parsnip@user/parsnip0) ()
[03:40:19] <stealth_> when i first run python i noticed it took a bit longer as well with 3.10.rc1 after that it was faster so didn't think much of it.
[03:40:53] *** Joins: masoudd (~masoudd@user/masoudd)
[03:42:46] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[03:44:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:44:22] *** Quits: Akuli (~Akuli@87-94-109-18.bb.dnainternet.fi) (Quit: Leaving)
[03:45:52] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:46:57] *** Quits: y1n (~y1n@84-115-65-208.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[03:48:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:48:37] *** Quits: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[03:51:02] <Payam> when writing docstring they use :param for inputs and :return: for return. what do they use for exceptions?
[03:51:13] <Payam> :throw: or :except?
[03:51:56] <stealth_> Payam, exception doesn't return!
[03:52:07] <Payam> -.-
[03:52:25] <Payam> I meant in docstring. don't they mention anything about exceptions?
[03:52:26] <nedbat> Payam: you don't have to use :param etc, look up the numpy docstring format.
[03:52:53] <Payam> at work we use a strange way. I'm gonna look at it.
[03:54:27] <Payam> nedbat, Ive seen in many packages that they use :param . what format is that?
[03:54:40] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:54:48] <nedbat> Payam: it's the original sphinx format, but it's ugly and hard to read.
[03:54:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[03:55:04] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 250 seconds)
[03:55:20] <KirkMcDonald> Since you have to phrase everything as a riddle.
[03:55:46] *** Quits: hwrd (sid64402@tooting.irccloud.com) (Ping timeout: 252 seconds)
[03:55:46] <Payam> nedbat, and this format is good and compatible with intellisense_
[03:55:47] <Payam> ?
[03:56:22] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 250 seconds)
[03:56:29] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[03:57:04] <grym> yes
[03:57:32] *** Joins: zebrag (~chris@user/zebrag)
[03:57:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[03:57:46] *** Joins: gambl0re (~gambl0re@104.247.229.76)
[03:57:51] *** Joins: hwrd (sid64402@tooting.irccloud.com)
[03:57:53] <stealth_> Payam, are you actually catching the exception something else?
[03:57:58] <stealth_> somewhere*
[03:58:04] <Payam> yes
[03:58:11] *** Joins: Pent (sid313808@tooting.irccloud.com)
[03:58:25] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[03:58:53] *** Joins: y1n (~y1n@84-115-64-220.wifi.dynamic.surfer.at)
[03:59:32] *** brunodOut is now known as linguist
[04:00:09] *** Joins: iflema (~ian@user/iflema)
[04:01:46] *** Joins: Fiji (~Fiji@user/fiji)
[04:02:59] <Payam> I don't think it is ugly
[04:03:08] <Payam> I like it. The numpy one looks messy
[04:06:36] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[04:07:19] *** Quits: emerent (~quassel@p200300cd5701a1c6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:08:00] *** Joins: emerent (~quassel@p200300cd5701a12dba27ebfffed28a59.dip0.t-ipconnect.de)
[04:08:17] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[04:09:12] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:10:27] <stealth_> Payam, I know in stdlib it was common to do stuff like `raise HTTPError(404, 'Not Found')` in a code then catch that exception at a higher level and send error page or something. Not sure its best practice though!
[04:10:49] *** Quits: Pent (sid313808@tooting.irccloud.com) (Ping timeout: 248 seconds)
[04:11:10] *** Quits: ironfroggy (sid495156@id-495156.tooting.irccloud.com) (Ping timeout: 240 seconds)
[04:11:21] <stealth_> https://github.com/python/typing/issues/71#issuecomment-87767297
[04:12:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:12:10] *** Wulf4 is now known as Wulf
[04:13:30] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:13:31] *** Joins: ironfroggy (sid495156@tooting.irccloud.com)
[04:13:42] *** Quits: hsiktas (sid224847@id-224847.tooting.irccloud.com) (Ping timeout: 250 seconds)
[04:13:45] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:d13:1085:8371:b421)
[04:14:32] *** Joins: Pent (sid313808@tooting.irccloud.com)
[04:15:48] <stealth_> also raising and catching exception is slow! it should be used as a last-resort and not a feature of your application.
[04:18:27] *** Joins: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br)
[04:18:29] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[04:18:44] *** Joins: Samian (~Sami@163.114.130.6)
[04:18:47] *** Quits: mindlesstux (sid18072@id-18072.tooting.irccloud.com) (Ping timeout: 240 seconds)
[04:19:04] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c926:ea6:65e7:2456)
[04:19:53] *** Quits: hsiktas (sid224847@tooting.irccloud.com) (Max SendQ exceeded)
[04:22:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[04:22:36] *** Joins: hsiktas (sid224847@tooting.irccloud.com)
[04:22:55] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:b091:3f73:c94:74bf) (Ping timeout: 250 seconds)
[04:24:31] *** Joins: mindlesstux (sid18072@tooting.irccloud.com)
[04:24:42] <grym> stealth_: like, oh, StopIteration?
[04:24:59] <greatgatsby> ^^^^
[04:25:27] <nedbat> "exceptions are slow" sounds like one of those things that is true for one language, but not all
[04:26:00] *** Joins: irreitug (uid23254@tooting.irccloud.com)
[04:26:06] <grym> nedbat: no no i think we've finally figured out why "python is slow"! it's the raises! they've been staring us in the face this whole time
[04:26:20] <stealth_> nedbat, try timing few different type of excepting
[04:26:45] <nedbat> stealth_: the question should be, "slow compared to what?"
[04:26:59] <stealth_> nedbat, returning value
[04:27:06] <nedbat> stealth_: but they mean different things.
[04:27:32] <nedbat> stealth_: anyway, i think we both failed to shift Payam's choices :)
[04:27:44] <stealth_> nedbat, i mean `raise` is slow vs `return` from an exception
[04:28:21] <nedbat> stealth_: that's a micro-optimization view.  the return would need to also have an if statement if you wanted to use the return the way exceptions are used.
[04:28:38] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[04:28:42] *** Quits: hrtk (~hritik@2409:4064:511:b05e:721c:e7ff:feb7:a624) (Quit: Took the red pill)
[04:28:46] <nedbat> stealth_: and if the exception moves up three stack frames, you need three if statements to get the same effect. how long do those take?
[04:28:53] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:29:40] <stealth_> nedbat, lots of things go into play when you call `raise` vs ignoring/return/... thus its slower
[04:30:26] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[04:30:45] *** Joins: portalrat (~portalrat@user/portalrat)
[04:31:49] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[04:32:33] *** Quits: waxfire8 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:32:50] *** Joins: waxfire8 (~waxfire@65.119.2.240)
[04:33:16] <nedbat> stealth_: it doesn't matter that it's slower
[04:33:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[04:33:57] <nedbat> stealth_: this is like saying that multiplication is slower than addition
[04:34:02] <stealth_> grym, greatgatsby catching an exception is ok, though it would have been nice if there was a better way to find end of iteration vs raising StopIteration
[04:34:07] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[04:34:48] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[04:36:26] <stealth_> nedbat, if you are running a server/event-loop exception and make a good chunk of speed difference
[04:36:47] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 250 seconds)
[04:37:34] <nedbat> stealth_: if you time your code and find an except is a slow part, then fine, optimize with a return. But don't avoid exceptions "because they are slow"
[04:39:00] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:39:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[04:39:10] <nedbat> stealth_: how else could you mark the end of an iteration? Any possible "return value" could be a valid value in the iteration.
[04:39:22] *** Joins: Crassus (~Crassus@user/crassus)
[04:39:33] <stealth_> nedbat, i am saying avoid raising and catching exception, not using exception, of course i use exception heavily
[04:39:44] *** Joins: setuid (sid191390@canonical/setuid)
[04:41:33] <nedbat> stealth_: i agree it's better to avoid code that raises just to catch at one particular nearby point. not because of speed, but because of precision of expression
[04:42:50] <stealth_> nedbat, i dono off-hand maybe if it looked more into it.
[04:43:03] <setuid> I don't know why I struggle with parsing nested dicts so much, but Python's errors are VERY misleading when doing so. I have a simple json object, 3 parent keys, and several nested sub-keys below those. I can print object['broadcasts'], which gives me the key _name_ of the various sub-dict's, but I can't go deeper than that.
[04:43:29] *** Joins: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl)
[04:43:52] <setuid> I need the 'status' key's value inside the subkey, which _should_ be object['broadcasts'][0]['status'], but Python tells me it needs integers, so, I remove ['status'], and it gives me a 1-character slice from the front of the sub-dict's key
[04:43:53] <stealth_> nedbat, yes and i also see it in terms of speed cause there is a speed cost to it, extra stdout write cost as well.
[04:44:00] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[04:44:00] <grym> setuid: can you show us? bpa.st/+python+text+pytb
[04:44:13] <setuid> Yes, paste coming
[04:44:53] <setuid> I should also note, that this works: cat out.json | jq -r '.broadcasts[].status'
[04:45:00] <setuid> So it's syntactically correct
[04:45:02] <nedbat> stealth_: it just doesn't pay to micro-optimize every statement.
[04:46:12] <stealth_> nedbat, its a good way to learn (not crazily) to write better code
[04:46:26] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[04:46:39] <nedbat> stealth_: i disagree that micro-optimized code is better code.
[04:46:50] <cloudbender> Am I mistaken in thinking matplotlib is easily embedded into a tkinter window ?
[04:47:03] <nedbat> it can be interesting to include as a consideration, but faster expressions aren't always better expressions
[04:47:22] <setuid> grym: Here you go, sample json, which I'm reading into a dict, and trying to parse: https://paste.debian.net/hidden/d3a17a7c/
[04:47:27] <grym> cloudbender: https://matplotlib.org/3.1.0/gallery/user_interfaces/embedding_in_tk_sgskip.html looks pretty straightforward
[04:49:27] <cloudbender> @grym yes I've been riffing on that example for hours, but I'm confused about which API I'm using
[04:49:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:49:47] *** Quits: y1n (~y1n@84-115-64-220.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[04:49:47] <stealth_> nedbat, i normally weigh in on the cost... like choose readability vs speed.
[04:49:49] <cloudbender> I see no reference to pyplot or plt.figure
[04:50:46] *** Quits: xx (~xx@user/xx) (Ping timeout: 252 seconds)
[04:50:49] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[04:51:02] *** Joins: JanC (~janc@user/janc)
[04:51:06] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[04:53:10] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:53:51] *** [_] is now known as [itchyjunk]
[04:54:46] <grym> setuid: could you paste just the json to bpa.st/+text
[04:55:21] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:55:29] <setuid> grym: https://bpa.st/UOMA
[04:56:42] <grym> setuid: i can't deserialise that: https://bpa.st/GXFA
[04:56:47] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:57:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:57:18] <setuid> grym: Let me mock up a working snippet, one moment
[04:57:28] <setuid> Can't paste the actual json, of course, let me redact enough to make it work
[04:58:26] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:59:01] <cloudbender> maybe lose the trailing comma's also
[04:59:15] <cloudbender> unless I am mistaken and they are ignored
[04:59:19] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 250 seconds)
[05:00:06] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[05:00:07] *** Quits: TML (~tml@user/tml) (Ping timeout: 252 seconds)
[05:02:38] <setuid> grym: Here you go: https://bpa.st/MCAQ
[05:03:59] <grym> setuid: ok! that i can use
[05:04:45] *** Joins: emika1 (~emika@212.102.44.138)
[05:04:57] *** Quits: emika (~emika@83.136.182.141) (Ping timeout: 250 seconds)
[05:04:57] *** emika1 is now known as emika
[05:05:20] <setuid> I don't know why nested json and nested dicts crush me so much, I used to get wrapped around the axle of HoA and AoA in Perl back in the day too
[05:06:40] <setuid> I can get to each parent key of the ['broadcasts'] sub-key, but I can't get any of those sub-key's values
[05:10:45] <salparadise> setuid: seems like you have to know the id and use it as key if after status,  d['playlists']['53be6b58-1073-472e-8352-4828f1669e44']['status'] prints "COMPLETE"
[05:11:26] <setuid> Right, so I'm trying to enumerate through each key (which I won't know in advance) and extract some sub-key's values
[05:11:47] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[05:12:57] <grym> setuid: https://bpa.st/72IQ ?
[05:13:18] *** LXGHTNXNG is now known as lxghtnxng
[05:13:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[05:13:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:14:16] <salparadise> setuid:https://bpa.st/TNMA
[05:14:36] <salparadise> couple of ways to skin this cat I guess.
[05:15:08] <setuid> hrm, wait... something's still not right there
[05:15:11] <setuid> One sec, testing
[05:16:16] *** Joins: linguist (~brunodOut@170.84.57.174)
[05:20:09] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 248 seconds)
[05:20:18] <setuid> salparadise:     status = attrib.get('status')
[05:20:18] <setuid> AttributeError: 'list' object has no attribute 'get'
[05:20:59] <salparadise> works with the data you provided.
[05:21:45] <setuid> Nope, not sure what attrib is supposed to be, but it has no get() method
[05:21:46] <salparadise> adding it to the paste
[05:22:10] <setuid> ah, changing it to broadcasts works however
[05:22:22] <salparadise> added data https://bpa.st/GOIQ
[05:24:34] <setuid> Tuned it down to 3 lines:
[05:24:34] <setuid> https://bpa.st/EYGQ
[05:25:34] *** Joins: jazzy (~jaziz@2600:380:4671:e333:dd61:8951:cd4d:7b7a)
[05:27:03] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 250 seconds)
[05:30:50] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:30:50] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[05:31:40] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:25] *** Joins: aac (~AAC@2001:8a0:6cc5:7e01:e5c6:1685:1121:1261)
[05:33:25] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[05:34:10] <aac> hey. How can i cope with large numbers ? ive tried the line continuation \ , and parentsis on begin and end of definition. My goal is to assign var = 1209812048101809 ...a lot of this...
[05:35:34] *** Joins: vlm (~vlm@user/vlm)
[05:36:20] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[05:36:38] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[05:36:39] *** Joins: markb1 (~markb1@024-240-136-102.res.spectrum.com)
[05:37:40] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[05:38:12] <stealth_> aac hmm how are you getting this numbers?
[05:38:19] <aac> from web
[05:38:22] <aac> its like 500 digits
[05:38:35] <aac> i just copy paste ..its ascii
[05:38:53] <aac> its like 20 rows of 300 numbers
[05:39:12] <stealth_> aac, why convert it to int?
[05:39:14] <grym> aac: store it as json or some other format, read it in when you need it
[05:39:42] <aac> im uisng python3. i dont think i need to specify the type
[05:39:56] <aac> grym, mmm that would increase my source code for a lot
[05:40:07] <aac> like storing, loading, runtime...
[05:40:10] <grym> aac: one file is not a lot
[05:40:15] <aac> i would like a better solution
[05:40:42] <grym> data = json.loads(pathlib.Path('data.json').read_text())  is also not hard to type
[05:40:43] <stealth_> aac, what exactly do you need to "cope" with?
[05:40:51] <aac> well...since the variable is on a cycle, imagine reading..
[05:41:09] <grym> i have no idea what that means, sorry
[05:41:12] <grym> good luck!
[05:41:29] <aac> cope means use the variavel in everywhere
[05:41:43] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[05:41:47] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[05:41:53] <stealth_> what do you get by reading 500 digit numbers!
[05:41:58] <aac> grym, like, if i read once to a variable, and keep it , no need to use the var , that's it?»
[05:42:13] <grym> aac: i am having trouble understanding you
[05:42:58] <aac> ok. So number on website (larger than 500bits) , i need to process it...like while (something) : process the stuff
[05:43:02] <aac> bits=digits
[05:43:04] <aac> sorryu
[05:43:14] <aac> ok i think im accepting youre anwser
[05:43:16] *** Joins: korg815 (~korg815@user/korg815)
[05:43:17] <aac> :)
[05:43:23] <aac> thks
[05:43:54] <aac> but that's a little weird , to use a file to store a variable
[05:44:00] <grym> totally normal in my world
[05:44:04] <aac> okay...
[05:44:05] <aac> :)
[05:44:11] <aac> i only need it once so its ok
[05:44:13] <aac> :)
[05:45:49] <stealth_> good job grym, you are the mvp of the day.
[05:46:23] <aac> anyway, for several variables, i would need several variables on file, or one file per variable?!
[05:46:40] <aac> anyway i need to write the text, to the file
[05:47:01] <grym> aac: json can store lists and dicts
[05:47:10] <aac> ok thks..i just need the variable
[05:47:15] <aac> no lists or dicts
[05:47:18] *** Joins: rany (~rany@user/rany)
[05:47:34] <aac> i only need it to asssign once so its ok :)
[05:47:39] <aac> thks for answer :)
[05:47:48] <grym> {"varname":192923929484} is probably what i'd do
[05:47:52] <aac> hm isee
[05:48:42] *** Quits: sharperguy__ (~sharpergu@89.244.123.72) (Read error: Connection reset by peer)
[05:49:45] *** Quits: linguist (~brunodOut@170.84.57.174) (Killed (NickServ (GHOST command used by brunodOut)))
[05:50:01] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5c5c:7400:4d6c:e1f8:69cf:569b)
[05:50:05] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[05:50:29] *** Joins: linguist (~brunodOut@170.84.57.174)
[05:52:28] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:55:07] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:00:22] *** Joins: Shikadi (~Shikadi@136.27.89.236)
[06:01:01] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[06:01:02] <aac> grym, so for example to use json..i would do { "var1" : "large int here with no format whatever"} ?
[06:01:23] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:01:24] <aac> like i need to put it on a line
[06:01:27] <aac> or several lines?
[06:02:41] <grym> aac: json isn't whitespace sensitive, so you can do this in several ways, but {"var1":12345,"var2":23439843} is fine
[06:02:50] <grym> don't quote the numbers; they're numbers, not strings
[06:02:52] <aac> ok thks
[06:02:56] <aac> i see
[06:03:24] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-fd87-b3ae-f773-e94f.res6.spectrum.com) (Read error: Connection reset by peer)
[06:03:27] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[06:04:20] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[06:04:27] <grym> aac: https://bpa.st/IRSA
[06:04:38] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:04:48] <aac> okay...
[06:04:49] <aac> :)
[06:05:23] <aac> can i copy paste the code :) ?
[06:07:09] *** Joins: 047AADQBL (~brunodOut@170.84.57.174)
[06:08:01] <grym> more or less
[06:09:25] *** Quits: Shikadi (~Shikadi@136.27.89.236) (Ping timeout: 252 seconds)
[06:09:47] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:09:57] *** Quits: markb1 (~markb1@024-240-136-102.res.spectrum.com) (Ping timeout: 250 seconds)
[06:10:10] *** Joins: frost (~frost@59.71.240.119)
[06:10:40] *** Quits: linguist (~brunodOut@170.84.57.174) (Ping timeout: 240 seconds)
[06:11:15] *** Quits: Armen (~Armen@armen138.com) (Quit: The Lounge - https://thelounge.github.io)
[06:12:23] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[06:12:33] <setuid> Hrm, another weird one... when using terminaltables, if there's an emoticon in the text, the terminal renders it like a graphical icon, which breaks the table layouyt
[06:13:05] <setuid> For example: https://usercontent.irccloud-cdn.com/file/YCiwdCx8/Screen%20Shot%202021-08-28%20at%209.42.24%20PM.png
[06:15:10] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:15:14] *** lxghtnxng is now known as AmyMalik
[06:15:23] *** Joins: Armen (~Armen@armen138.com)
[06:15:49] *** Joins: brabrax (~brabrax@user/brabrax)
[06:18:07] *** Quits: shailangsa (~shailangs@host86-185-102-120.range86-185.btcentralplus.com) (Ping timeout: 240 seconds)
[06:18:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:18:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:19:25] <setuid> Seems like all the various padding/alignment/justify options don't work there, maybe I can decode it
[06:21:37] *** Quits: gandalf (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net) (Quit: leaving)
[06:22:27] *** Quits: schumaml (~schumaml@p200300e2ef1fe90053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:22:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[06:24:40] *** Joins: schumaml (~schumaml@p579aa678.dip0.t-ipconnect.de)
[06:26:47] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:29:20] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[06:30:27] *** Quits: jaggz (~jaggz@user/jaggz) (Remote host closed the connection)
[06:31:50] *** Joins: jaggz (~jaggz@user/jaggz)
[06:32:13] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-18bd-59af-0d60-37fe.res6.spectrum.com)
[06:32:47] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 240 seconds)
[06:33:37] *** Joins: shailangsa (~shailangs@host86-186-127-196.range86-186.btcentralplus.com)
[06:35:12] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:36:28] *** Quits: rinwa (~user@141.226.14.13) (Read error: Connection reset by peer)
[06:37:52] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:37:53] *** Joins: rinwa (~user@141.226.14.13)
[06:39:08] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[06:42:27] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[06:42:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:42:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zirconium.libera.chat (Nickname regained by services)))
[06:42:39] *** finn_elija is now known as FinnElija
[06:42:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:42:49] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 248 seconds)
[06:47:57] *** Joins: Fiji_ (~Fiji@user/fiji)
[06:48:09] *** Joins: phillhocking (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com)
[06:48:24] <phillhocking> oh hey everyone
[06:48:27] *** Quits: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[06:48:30] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[06:48:41] <phillhocking> i'm brand new at this whole python thing, and i'm working on my first project
[06:48:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:49:22] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Remote host closed the connection)
[06:49:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:50:36] <phillhocking> my last coroutine here, disp, throws indexing errors from the list that is handed to it from another coroutine... and my question here isn't 'how do i fix this' so much as 'what is broken in my understanding here as to trying to get the desired outcome, and how should i do this in a way that isn't hackneyed and janky' lol
[06:50:41] <phillhocking> https://gist.github.com/phillhocking/2c469b06f19ea67943adfd2796c3a125
[06:51:22] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:51:33] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[06:51:50] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[06:52:29] <cloudbender> I get it now.  MatPlot is engineered to allow for shell scripting ops OR gui ops
[06:52:33] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[06:52:42] <cloudbender> wow
[06:52:51] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:52:54] <cloudbender> lotto work went into that library
[06:52:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[06:53:40] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:56:00] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[06:56:35] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:57:26] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:57:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:58:21] <cloudbender> who was it who was having trouble with rendering times, earlier ?
[06:58:33] <grym> cloudbender: matplotlib does a lot, yep
[06:58:43] <grym> it had to, given its name influence
[07:00:25] <cloudbender> That person who had trouble with rendering times :
[07:01:04] <cloudbender> needs to read up on ... mpl.rcParams['path.simplify_threshold'] = 0.0     where threshold is between 0 and 1
[07:01:18] <phillhocking> also, i know you are supposed to write unit tests before developing something, but what sorts of unit tests would be appropriate for my submission? are there any other style guide things or best practices i can throw in there?
[07:01:29] <cloudbender> yuge difference when =1
[07:02:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:02:38] <phillhocking> i'm using autopep8 and set a ruler at 80 lines to have any of my comments wrapped to a new line, and with great sadness set vscode to use spaces instead of tabs lol
[07:03:13] *** Joins: Enitin (~Enitin@82.102.22.85)
[07:04:02] <phillhocking> is it a best practice to wrap everything that exceeds 80 characters to a new line?
[07:04:07] <grym> phillhocking: https://black.readthedocs.io/en/stable/ is pretty good
[07:04:11] <grym> for this sort of thing
[07:04:14] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[07:04:22] <phillhocking> grym: tyvm, will get right on that
[07:04:33] <grym> phillhocking: "set it and forget it!"
[07:05:13] *** Quits: LiftLeft (~LiftLeft@172.98.80.23) (Ping timeout: 248 seconds)
[07:05:17] <grym> phillhocking: https://pycqa.github.io/isort/  too, and i regularly `black . && isort --profile black . `
[07:05:40] *** Joins: de-facto (~de-facto@user/de-facto)
[07:05:50] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[07:06:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[07:08:53] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[07:09:43] <phillhocking> grym: would you be willing to look at my shiny new bird and probably hella awful first project for pointers about how to work with lists/print and format that output right?
[07:09:51] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[07:10:36] <phillhocking> i spent like two whole days on a manic runner getting the actual main part (fetch) to work, but now i'm stuck not being able to figure out how to iterate through that damn loop and count list members the right way
[07:11:07] *** Quits: rinwa (~user@141.226.14.13) (Ping timeout: 240 seconds)
[07:11:26] <phillhocking> i'm pretty satisfied at all the progress i've made lol, but i still realize i'm in the back seat of the struggle bus :D
[07:11:37] *** Quits: davor (~davor@user/davor) (Ping timeout: 248 seconds)
[07:11:37] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[07:11:55] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:12:07] <desophos> i'm using subprocess.run([sys.executable, "-m", "mymodule", ...], env=os.environ.copy()) to run a cli programmatically inside a virtualenv. however, when i use pyinstaller to bundle my app into an exe, this command fails because sys.executable is no longer python. is there a way to make this work with pyinstaller? thanks!
[07:12:29] *** Joins: davor (~davor@user/davor)
[07:13:55] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[07:14:52] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[07:15:12] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[07:16:03] <aac> grym,  im not able to use the json file...it keeps saying that "json.decoder.JSONDecodeError: Expecting ',' delimiter: line 3 column 14 (char 104)" whatever i do ..here is the json file "https://bpa.st/YUTQ "
[07:16:18] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[07:16:23] <aac> i even went to validators :))
[07:18:05] *** Parts: setuid (sid191390@canonical/setuid) ()
[07:19:02] *** Joins: LiftLeft (~LiftLeft@172.98.92.27)
[07:19:15] <cloudbender> Your json is not valid
[07:19:27] <aac> yes :) what is wrong with it?
[07:19:51] <Guest26_> oh boy, needs quotes
[07:19:52] <cloudbender> Did you intend on omitting the quotes around the number string ?
[07:20:01] *** Guest26_ is now known as aeon_flux
[07:20:10] <aac> that's what grym
[07:20:13] <aac> told me
[07:20:18] <aac> number dont need strings
[07:20:28] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[07:20:30] <cloudbender> and, if it's a number, it's too large
[07:20:52] <aac> yes that was my initial need
[07:20:54] <cloudbender> and the white-space is a problem between the number segments
[07:21:16] <aeon_flux> put quotes and put the numbers on one line
[07:21:21] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:21:23] <aeon_flux> see if that helps
[07:21:26] <aac> ok hold on
[07:21:29] <cloudbender> ^^^
[07:21:46] <aeon_flux> json doesn't have datatypes let the consuming language handle that
[07:21:52] <aac> <grym> don't quote the numbers; they're numbers, not strings
[07:22:19] <aac> ok all in one line..what clumsy :/ but ok, for it to work.. :)
[07:22:23] <aeon_flux> sorry, it DOES have datatypes
[07:22:55] <aeon_flux> "age:30 is okay but ... your number is not an INT or really any consumable number
[07:23:01] <aeon_flux> "age:30"
[07:23:14] <aeon_flux> hope that helps :-(
[07:23:15] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:6466:f525:8f1a:5430)
[07:23:37] <aac> hold yep it works now
[07:23:40] <aac> the one liner worked :)
[07:23:42] <aeon_flux> yay :-)
[07:23:44] <aac> ehheeh
[07:24:05] <aeon_flux> i don't even know python i'm just in here because i stayed at a holiday in express last inght
[07:24:06] <aeon_flux> night
[07:24:14] <cloudbender> lol
[07:24:40] <aac> lol
[07:24:41] <aac> :)
[07:24:50] <aac> you dont know both versions?
[07:25:02] <aeon_flux> OOP confuses me i know very basic python
[07:25:34] *** Joins: hexa- (~hexa-@juno.lossy.network)
[07:26:12] <cloudbender> Well, considering that everything in python is an object, ...
[07:27:38] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:27:41] <aac> ehheeheh
[07:28:02] <cloudbender> Did you drop something on your toe ?
[07:28:08] <aac> i really like python, because a) its fast b) simple c) easy cleraning
[07:28:13] <aac> :P
[07:28:20] *** Joins: r3m (~launch@user/r3m)
[07:30:02] <aac> aeon_flux, what language do you use?
[07:30:16] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[07:30:16] <aac> perl'
[07:30:17] <aac> ?
[07:30:25] <aac> does perl supports json?
[07:31:27] <aeon_flux> i literally know basic python and that's it
[07:31:32] <aeon_flux> i'm just in here to chill and hang out
[07:31:52] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:6466:f525:8f1a:5430) (Quit: Textual IRC Client: www.textualapp.com)
[07:31:55] <aeon_flux> everyone in here is much smarter than me i'm surprised i answered a Q properly lol i'm glad it worked though
[07:32:51] <aac> well...how many questions have you answer ?
[07:33:35] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[07:35:13] <phillhocking> lool i have questions if anyone is game :D
[07:35:28] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[07:35:49] <aac> you should have a euro answer policy
[07:35:57] <Tashtari> One of the commonly understood rules of channels on libera is: don't ask to ask, just ask.
[07:36:14] <phillhocking> Tashtari: they're in the buffer, patiently waiting for someone to take a crack at them :D
[07:36:47] <aeon_flux> this is my first lol
[07:36:49] <phillhocking> i've been doing irc help since before there was a freenode and it was just a bunch of crotchety assholes on efnet that would ddos you if you were an idiot loool
[07:36:59] <aeon_flux> i used to be on irc in 1996
[07:37:04] <aeon_flux> efnet.org
[07:37:06] <phillhocking> lol same <3
[07:37:10] <phillhocking> i'm still on efnet
[07:37:14] <aac> oh damn..the json doesnt work..it doesnt treat the number as number and as text
[07:37:32] <aac> so much for quotes
[07:37:44] <aac> i guess i can just convert it to number right?
[07:37:51] <aeon_flux> put the number in quotes and on one line and convert it in your consuming language
[07:37:58] <aac> okay okay
[07:37:59] <aac> :)
[07:38:00] <aeon_flux> efnet is still around?
[07:38:06] <phillhocking> shit yeah mang
[07:38:09] <aeon_flux> wow i learned coldfusion there
[07:38:16] <phillhocking> world's oldest irc network
[07:38:20] <aeon_flux> only reason i'm still employed
[07:38:34] <phillhocking> hahahahaha i think i'm sorry for you :D
[07:38:45] <aeon_flux> there were amazing people there who somehow taught me the best programming practices i've ever learned wow
[07:38:50] <phillhocking> but also the only reason i'm still employed
[07:39:01] <aeon_flux> we're all just constantly figuring it out, right
[07:39:01] <phillhocking> i cannot even express how much i learned on efnet irc
[07:39:06] <aeon_flux> SAME
[07:39:21] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:39:47] <aeon_flux> i ran a web hosting company for a few years thanks to their advice
[07:39:56] <aeon_flux> sold it, bought a boat, wasted my time
[07:40:06] <phillhocking> shit yeah lol, i'm 20y in and i've just been a systems/network engineer and never even had to do any coding except for one-off bash scripts, and now all of a sudden everything is code and i'm at least a mildly competent devops practitioner... but actual programming in a 'real' language that isn't just saltstack states or hashicorp/terraform... well
[07:40:08] <aeon_flux> i was 16, so, all good
[07:40:11] <phillhocking> i fucking suck at thaqt
[07:40:14] <phillhocking> really bad lol
[07:40:16] <phillhocking> ergo - here i am asking for HALP
[07:40:28] <aeon_flux> haha same
[07:40:33] <aeon_flux> the community was amazing
[07:41:09] <aeon_flux> i miss it a lot. BBSes, efnet, the whole thing
[07:41:17] <phillhocking> there's this devops discord server i'm on where a few guys have held my hand for like 3y taking me from 'i wanna learn devops lol' to actually savvy
[07:41:27] <aeon_flux> that's awesome
[07:41:43] <phillhocking> https://discord.gg/MTzBvSS if that's the sort of thing that interests you
[07:41:45] <aeon_flux> i'm in devops now, (sorta)
[07:41:47] *** Quits: 047AADQBL (~brunodOut@170.84.57.174) (Read error: Connection reset by peer)
[07:41:49] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[07:41:51] <aeon_flux> on the way!
[07:41:54] *** Joins: hexa- (~hexa-@juno.lossy.network)
[07:43:00] <aeon_flux> "must be a member for 10 minutes to send a message"
[07:43:00] <aeon_flux> lol
[07:43:24] <phillhocking> try again
[07:44:41] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 248 seconds)
[07:44:41] <aeon_flux> which channel?
[07:44:48] <phillhocking> oh any of them
[07:45:00] <phillhocking> i just wanna see if the role i added to you gets around that deal
[07:45:11] <aeon_flux> looks like it :-)
[07:45:17] <phillhocking> there were a lot of spam/bots so michael the admin kinda set some stuff to hamper that
[07:45:24] <aeon_flux> makes sense
[07:45:40] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 240 seconds)
[07:49:58] *** Quits: jvh (~jvh@user/jvh) (Quit: Leaving)
[07:52:55] <stealth_> hey nedbat do you have a proper test for that monotonic thing?
[07:53:57] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[07:56:08] *** Joins: hexa- (~hexa-@juno.lossy.network)
[07:56:46] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:57:30] <cloudbender> Yes, I too had a 'WildCat' bbs, with a hefty phone bill each months.
[07:58:47] <phillhocking> i was a punk kid that would take a 286 'laptop' i got at a yard sale and hook up the modem to terminals at pedestals/demarcs surreptitiously as a trespasser to dial up bbses and get the good goods without my parents castrating me over the phone bill! :D
[07:59:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 248 seconds)
[07:59:36] <cloudbender> I ran a city-wide mini on SCO for awhile, just before the internet exploded, when gates still wasn't shipping a TCP stack with windoze.
[08:00:10] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[08:00:24] <cloudbender> YOU PHREAKED THE DEMARCS shame on you.
[08:00:27] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[08:00:47] *** Quits: hafat (~hafat@159.146.55.244) (Ping timeout: 240 seconds)
[08:01:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:01:53] <phillhocking> oh yeah, i was a really maladapted and delinquent little kid lolol
[08:02:26] <cloudbender> i.e., a kid
[08:02:58] <cloudbender> Ah, good times
[08:03:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[08:03:54] <cloudbender> A fella could make a quick $50.00 installing a modem and blasting a few AT commands as an ops-check
[08:04:58] *** Joins: theprophet (~theprophe@85.114.228.184)
[08:05:00] <cloudbender> It's funny, I still use all of those old-school coding schemes quite often
[08:07:22] <cloudbender> PCL,PJL,ESC/POS, ASCII, Netware Scripts, Business Basic, Providex, all within the last year
[08:07:24] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[08:08:15] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[08:08:16] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[08:08:39] <cloudbender> But I never do Java.  I have been spared that fuckery.
[08:08:46] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Client Quit)
[08:09:19] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[08:10:12] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[08:11:48] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[08:13:11] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:13:28] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (Client Quit)
[08:13:54] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[08:15:08] *** Quits: attackthemoon (~attackthe@097-088-068-145.res.spectrum.com) (Read error: Connection reset by peer)
[08:15:47] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[08:18:09] *** Quits: msc386 (msc386@user/msc386) (Quit: Lost terminal)
[08:22:08] <theprophet> guys what is  abstract modifier in abstract class?
[08:22:25] <theprophet> what is meant by abstract modifier?
[08:24:30] <quesker> all those goofy oop principles and the code is still buggy
[08:25:07] <theprophet> wdym?
[08:25:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:25:41] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:26:25] <quesker> sorry, I just think it is pointless to learn that stuff is all.  the whole point of it is to make more bulletproof code suppsoedly yet bugs still exist
[08:27:07] <quesker> just ignore me heh.  I just happened to be on this channel for some reason
[08:27:46] <quesker> I rank arcane oop right up there with strong typing
[08:28:16] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[08:28:37] <theprophet> ignore is a strong word but ok, i mean i was adviced by pro coder, that has been coding for 25 years that dont let bugs scare you just spray them all the time.
[08:29:13] <theprophet> or create auto sprayer xD
[08:30:26] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[08:30:26] <theprophet> quesker if you ask me its great to have bugs no matter what, cause its interesting
[08:30:34] <quesker> :)
[08:31:07] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[08:31:12] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[08:31:33] <theprophet> quesker i think coding without bugs would be very boring , just saying
[08:32:11] <quesker> I really didn't mean to derail your question, I was just blowing off steam.  carry on
[08:32:26] <theprophet> no problem
[08:34:22] *** Joins: hexa- (~hexa-@juno.lossy.network)
[08:34:47] *** Quits: nergar (~Nergar@177.225.152.16) (Read error: Connection reset by peer)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:18] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[08:37:40] *** Quits: squirrel (~sq@user/squirrel) (Quit: Going offline, see ya! (www.adiirc.com))
[08:37:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:39:07] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 240 seconds)
[08:39:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:45:11] <sysRPL> if a consciousness were omniscient, meaning it knows ALL things past present and future ALL the time, is it capable of thinking or does it just know everything without the need to think?
[08:45:47] *** Joins: hexa- (~hexa-@juno.lossy.network)
[08:45:51] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[08:49:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:49:11] *** Joins: vicfred (~vicfred@user/vicfred)
[08:50:07] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 240 seconds)
[08:50:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:51:11] *** Joins: Fiji- (~Fiji@user/fiji)
[08:51:27] *** Quits: Fiji- (~Fiji@user/fiji) (Remote host closed the connection)
[08:52:55] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[08:53:49] *** Joins: hexa- (~hexa-@juno.lossy.network)
[08:54:37] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[08:58:05] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[08:58:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:00:19] *** Joins: hexa- (~hexa-@juno.lossy.network)
[09:00:40] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (Ping timeout: 240 seconds)
[09:02:10] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:02:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[09:03:02] *** Joins: sharperguy_ (~sharpergu@89.244.124.76)
[09:03:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:03:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:05:40] *** Quits: sharperguy__ (~sharpergu@2001:16b8:5c5c:7400:4d6c:e1f8:69cf:569b) (Ping timeout: 240 seconds)
[09:06:12] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[09:06:56] *** Joins: hexa- (~hexa-@juno.lossy.network)
[09:07:36] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[09:08:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[09:09:54] *** Gustavo6046_ is now known as Gustavo6046
[09:11:24] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[09:14:13] *** Joins: seanicus (sean@triton.blinkenshell.org)
[09:15:53] *** Quits: zln (~golluq@c80-217-230-193.bredband.tele2.se) (Ping timeout: 248 seconds)
[09:17:21] <seanicus> Hello, I'm trying to figure out how to create a TUI interface that accepts keypresses without pressing "enter" and will update the visuals in real time.  here is hte simplest code i can show to show what i mean.  If you press a number key between 0-9 it is supposed to turn that character into a blue "@" while not stopping the loop.  https://bpa.st/2TQA
[09:17:27] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[09:17:49] <seanicus> You can see what my problem is when you uncomment line 14
[09:19:55] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[09:20:26] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[09:21:33] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Client Quit)
[09:22:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[09:22:47] *** Quits: knipster5 (~knipster@user/knipster) (Ping timeout: 240 seconds)
[09:24:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:25:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[09:27:27] <Repiphany> seanicus: getch_func isn't changing the global "position", it's only affecting the function scope
[09:29:33] <seanicus> Repiphany: thank you...however, that only half-solves my problem
[09:29:40] *** Quits: emika (~emika@212.102.44.138) (Ping timeout: 240 seconds)
[09:29:45] <seanicus> (I put global statements, which i know is bad practice but this is proof of concept)
[09:30:03] *** Quits: emerent (~quassel@p200300cd5701a12dba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:30:24] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[09:31:07] <Repiphany> I don't see what other problems you're referring to
[09:31:20] <Repiphany> ls
[09:31:25] *** Joins: emika (~emika@185.207.249.3)
[09:31:59] *** Joins: emerent (~quassel@p200300cd5701a12dba27ebfffed28a59.dip0.t-ipconnect.de)
[09:32:48] <seanicus> https://bpa.st/ZKKQ  here is the updated code.  Repiphany: it's not updating the string every 0.01 seconds, and is instead blocking for user input
[09:33:04] <seanicus> Even though getch is running in a different thread
[09:33:15] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:33:34] <Repiphany> I can't see what getch is doing but it works fine with my own hacky "getch" function
[09:34:10] <seanicus> It is the library for getch...what's your getch function?
[09:34:24] <Repiphany> seanicus: https://bpa.st/SSNA
[09:34:27] <seanicus> i.e. im using this: https://pypi.org/project/getch/#history
[09:34:29] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[09:34:39] <Repiphany> (It might mess up your terminal settings if you run it)
[09:35:51] <seanicus> Repiphany: this works perfectly!  thank you.  What ways would it mess up my terminal?
[09:36:22] <seanicus> oh, nevermind, i see.  hmm, there might be a fix for that though, if only with ansi
[09:36:41] <Repiphany> Not displaying input properly if you don't clean up the thread properly
[09:37:51] <seanicus> so presumably if i had a "if ch == "Q": shutdown = True" where both loops are "while not shutdown:", that would probably do it?
[09:38:42] <seanicus> the stuff in the finally is what restores the terminal settings im guessing, so as long as that runs, we'll be fine.
[09:38:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[09:39:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[09:40:35] <Repiphany> Yes, not having a thread running a `while True:` loop
[09:41:21] <seanicus> Thanks for your help!
[09:41:46] <seanicus> I guess getch simply doesn't work the way i expected it to.
[09:41:59] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:42:56] *** Joins: computeiro (~Wender@189.37.64.248)
[09:43:46] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[09:43:55] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c926:ea6:65e7:2456) (Remote host closed the connection)
[09:45:38] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Client Quit)
[09:45:45] *** Quits: wender (~Wender@189.37.68.233) (Ping timeout: 250 seconds)
[09:46:05] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[09:48:57] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Client Quit)
[09:51:27] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 276 seconds)
[09:55:31] *** Joins: hexa- (~hexa-@juno.lossy.network)
[09:56:02] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[09:56:04] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Client Quit)
[10:03:40] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 240 seconds)
[10:04:33] *** Joins: node1 (~node1@user/node1)
[10:04:57] *** Joins: mud (~mud@user/kadoban)
[10:05:01] <desophos> if anyone was curious, i found a solution for my question about running a CLI module from an exe: use runpy instead of subprocess
[10:05:13] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[10:05:47] *** Joins: node1 (~node1@user/node1)
[10:05:50] *** Joins: hexa- (~hexa-@juno.lossy.network)
[10:06:54] *** Quits: seednode (~seednode@user/seednode) (Read error: Connection reset by peer)
[10:07:42] *** Joins: seednode (~seednode@user/seednode)
[10:09:43] *** Joins: upsala (~zcb@185.213.155.160)
[10:10:01] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[10:10:34] *** Joins: hexa- (~hexa-@juno.lossy.network)
[10:12:42] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:e14a:7144:9d2:8669)
[10:12:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 248 seconds)
[10:13:28] *** Joins: mei (~mei@user/mei)
[10:15:23] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:16:29] *** Joins: fdan (~fdan@192.146.154.3)
[10:16:33] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[10:18:01] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 252 seconds)
[10:23:46] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[10:26:11] <cluelessperson> hi
[10:26:57] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:28:45] *** Joins: hexa- (~hexa-@juno.lossy.network)
[10:31:09] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[10:31:59] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[10:32:58] *** Joins: redgloboli (~redglobol@user/redgloboli)
[10:32:59] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:34:51] *** Joins: seednode (~seednode@user/seednode)
[10:34:55] *** ormaaj is now known as jaamro
[10:35:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:35:35] *** Quits: desophos (~desophos@2601:249:1680:a570:b9dc:dd21:8c3e:8765) (Quit: Leaving)
[10:37:07] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 240 seconds)
[10:37:49] *** Joins: bidouille (~user_name@trois.potager.org)
[10:39:07] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 240 seconds)
[10:41:34] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:41:57] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:4c0c:ad11:e107:a821)
[10:43:59] *** Joins: seednode (~seednode@user/seednode)
[10:43:59] *** Quits: seednode (~seednode@user/seednode) (Client Quit)
[10:45:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:45:32] *** Joins: hexa- (~hexa-@juno.lossy.network)
[10:46:04] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[10:48:09] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:4c0c:ad11:e107:a821) (Ping timeout: 250 seconds)
[10:48:40] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 240 seconds)
[10:50:39] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547)
[10:53:21] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[10:53:52] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:00:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[11:01:27] *** Quits: LiftLeft (~LiftLeft@172.98.92.27) (Ping timeout: 240 seconds)
[11:01:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:01:46] *** Joins: hexa- (~hexa-@juno.lossy.network)
[11:02:41] *** Joins: seednode (~seednode@user/seednode)
[11:08:04] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 252 seconds)
[11:09:56] *** Joins: manti7 (~manti7@176.10.104.94)
[11:12:51] *** Joins: ice9 (~ice9@user/ice9)
[11:12:57] *** Joins: dontyouloveshort (~julius@ip5f5bc239.dynamic.kabel-deutschland.de)
[11:15:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:17:01] *** Joins: MaximB (~MaximB@87.68.164.220)
[11:18:59] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547) (Remote host closed the connection)
[11:19:38] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:a5a8:85f0:b3fb:e411)
[11:19:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:22:05] *** Joins: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at)
[11:25:51] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[11:28:02] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898)
[11:32:13] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:32:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:33:49] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Quit: Quit)
[11:35:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:36:07] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:36:41] *** Quits: y1n (~y1n@84-115-64-255.wifi.dynamic.surfer.at) (Ping timeout: 248 seconds)
[11:38:41] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:40:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:41:08] *** Joins: ice99 (~ice9@user/ice9)
[11:42:15] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[11:48:25] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[11:52:05] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[11:52:41] *** Joins: kosh (~kosh@user/kosh)
[11:54:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[11:58:40] *** Quits: dimbag (~Couture@62.76.35.194) (Ping timeout: 250 seconds)
[12:00:20] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:08:42] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[12:10:44] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:11:24] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[12:12:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:13:29] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 248 seconds)
[12:13:46] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[12:14:10] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-18bd-59af-0d60-37fe.res6.spectrum.com) (Ping timeout: 240 seconds)
[12:14:10] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c6d:7f89:7371:5898) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:17:47] *** Joins: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de)
[12:24:30] <trace987> what does typing Mapping
[12:28:53] <theprophet> what?
[12:28:56] *** Joins: EGH (~EGH@185.25.195.104)
[12:29:11] *** Joins: hafat (~hafat@159.146.55.244)
[12:29:15] *** Quits: neltraus (~neltraus@supernova.neltraus.de) (Quit: Zzzzzz...)
[12:29:18] <Wulf> trace987: it does dict and similar
[12:29:20] <theprophet> what are you asking bro?
[12:30:23] *** Joins: neltraus (~neltraus@supernova.neltraus.de)
[12:31:07] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[12:31:48] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:33:35] <trace987> https://docs.python.org/3/library/typing.html
[12:34:09] <trace987> what does the type Mapping
[12:35:21] *** Quits: gambl0re (~gambl0re@104.247.229.76) (Ping timeout: 248 seconds)
[12:35:28] <Wulf> trace987: https://docs.python.org/3/glossary.html#term-mapping  it describes a type of some variable/parameter.
[12:35:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[12:38:31] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:39:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:39:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:47:04] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[12:49:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:49:20] *** Joins: palasso (~palasso@user/palasso)
[12:52:27] *** Joins: darksun (~darksun@user/darksun)
[12:52:29] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[12:52:35] *** Joins: Atrillox (~bigguy@219.137.143.167)
[12:53:22] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[12:54:34] *** Quits: irreitug (uid23254@tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:54:55] *** Joins: canton7 (canton7@about/csharp/canton7)
[12:55:00] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[12:58:51] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:58:52] *** Quits: hendry (~hendry@210.23.22.2) (Quit: WeeChat 3.2)
[12:58:55] <theprophet> i understand what both static and dynamic typings are but does typing also involves the type of classes we're creating? like human animals etc?  or typings means to just determine the incompability of python types?
[13:00:19] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[13:00:40] *** Joins: rendar (~rendar@user/rendar)
[13:02:03] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[13:02:04] <theprophet> i am asking this because if typing  used to indicate to type checkers that the corresponding variable or function parameter has a value equivalent to the provided literal, then why duck typing is also called typing when its only affects the class types like human and animal and etc.?
[13:03:03] *** Quits: [mao] (~void@c-67-160-158-224.hsd1.or.comcast.net) ()
[13:05:54] *** Joins: y1n (~y1n@84-115-65-168.wifi.dynamic.surfer.at)
[13:08:38] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[13:13:23] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547)
[13:14:35] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:14:46] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[13:15:12] *** Joins: mickey (~user@user/mickey)
[13:16:47] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:a5a8:85f0:b3fb:e411) (Ping timeout: 250 seconds)
[13:20:02] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[13:20:21] *** Joins: r3m (~launch@user/r3m)
[13:21:46] *** Joins: akoana (~ah@user/akoana)
[13:21:48] *** Joins: Karatsuba (~jamer05@user/karatsuba)
[13:24:34] *** Quits: Cyp_ (~cyp@192038133070.mbb.telenor.dk) (Quit: Konversation terminated!)
[13:24:36] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:24:43] <cluelessperson> theprophet, yes.
[13:25:25] <cluelessperson> theprophet, when people say "type checking" and "static typing", they mean that this thing can only return or accept specific types of things.
[13:26:07] <cluelessperson> theprophet, python is dynamic in the sense that you can typically pass in *any* type, and it will only error if it is later found to be a type that doesn't support an attribute that is called on it, for example
[13:26:46] <cluelessperson> theprophet, "duck typing" is basically a reference to  "if it walks like a duck, quacks like a duck, then it's a duck"
[13:27:13] <cluelessperson> "if the type you pass in works, then it's the correct class"
[13:27:23] <theprophet> how duck typing is involved with static and dynamic typing?
[13:27:32] <theprophet> ohhh i see isee
[13:28:15] <cluelessperson> theprophet, statically typed languages literally only allow you to pass in the correct class that it expects, period, and the compiler literally will error if you attempt to use the wrong class.
[13:28:31] <theprophet> so bassicaly duck typing is same as dynamic typing but with methods?
[13:28:36] <cluelessperson> theprophet, in duck typing, the compiler doesn't care, and only errors later, perhaps at runtime.
[13:28:43] <cluelessperson>  no but
[13:28:51] <cluelessperson> "duck typing is the same as dynamic typing"
[13:28:58] <cluelessperson> duck is just a joke way of saying dynamic.
[13:29:30] *** Joins: shla (~root@user/shla)
[13:29:52] <theprophet> wait so it is or it is not?
[13:30:02] <cluelessperson> duck typing is dynamic typing, yes.
[13:30:13] <theprophet> u said NO BUT
[13:30:17] <theprophet> and that confused me
[13:30:23] <cluelessperson> ah, I meant as in "there is no but"
[13:30:24] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:30:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[13:30:30] <theprophet> oh ok
[13:30:38] <supakeen> I think the above is a bit confusing.
[13:31:18] <cluelessperson> theprophet, I've heard arguments that static typing might or may help prevent developers from making mistakes if you always know exactly what type a thing returns or expects.
[13:31:27] <cluelessperson> supakeen, please correct me.
[13:31:28] <cluelessperson> :D
[13:32:40] <theprophet> i dont understand the point of static typing , since you will loose so much type adjusting every variable to the correct  value
[13:33:02] <theprophet> why dont u just pass all types and see exactly what you did wrong?
[13:33:20] <supakeen> Static typing and dynamic typing classically means that either all types are known at compile time or they are not and are only known at runtime.
[13:33:49] <theprophet> i see
[13:34:01] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:34:18] <cluelessperson> theprophet, in static typing, you're not "converting" types.  You write the code so that it only takes or returns specific types, period.
[13:34:39] <supakeen> What you are refering to are called type hints or type comments in Python they allow some analysis to make sure you don't try to use certain types the wrong way, information that would normally lead to a runtime bug can be found beforehand.
[13:34:58] <supakeen> Which is one of the advantages of type hints, the other is general documentation :)
[13:35:30] <cluelessperson> theprophet, this is why in C++ or Java you have to write:     Int myFunction(Int x) {};   you are specifying that myFunction only takes in an Int, and only returns an Int.
[13:35:32] <theprophet> but in pycharm you bassicaly never make that mistake
[13:35:52] *** Joins: seednode (~seednode@user/seednode)
[13:36:00] <leduyquang753> theprophet Static typing reduces the need to check types at runtime.
[13:36:18] <theprophet> extra 1 sec more?
[13:36:20] <cluelessperson> which also means it'll error less at runtime
[13:36:45] <leduyquang753> With languages that compile to machine code like C++, it allows knowing exactly how much memory to allocate.
[13:36:48] <supakeen> sigh
[13:36:56] <theprophet> i see
[13:37:56] <theprophet> i gotta follow up question if you dont mind guys so if duck typing and dynamic typing are same why is duck typing even a subject that you need to learn when learning python?
[13:38:22] <supakeen> They are not the same, people are conflating terms a lot.
[13:38:40] <theprophet> what do you mean please? ciulesperson said it was same
[13:39:07] * cluelessperson shuts up.
[13:39:20] <theprophet> lol
[13:39:56] <theprophet> supakeen whats the differenceds between duck typing and dynamic typing?
[13:39:58] <supakeen> You have 'static vs dynamic', 'strong vs weak', duck typing is a form of dynamic typing, you have 'duck vs coercion'.
[13:40:25] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 252 seconds)
[13:40:26] <cluelessperson> water is wet,   duck is dynamic. :P
[13:40:40] * cluelessperson forgot, shuts up again
[13:40:40] <supakeen> In the end it means 'I dont care what type this object is Im going to try call method xyz on it and if it does Im all good'
[13:41:23] <theprophet> it is kind of same but same time its different
[13:42:04] <supakeen> They are not equivalent but you see more duck typing in dynamic systems, you can have duck typing in static systems just as well, it's just verified on compile time.
[13:42:29] <supakeen> https://docs.oracle.com/javase/7/docs/api/java/lang/invoke/MethodHandle.html
[13:42:31] <supakeen> Etc.
[13:43:17] <theprophet> with dynamic typing you are checking for errors in runtime but duck typing does not care what kind of type errors u might make is that correct?
[13:44:07] *** Joins: Inge (~inge@51.15.60.125)
[13:44:50] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:e14a:7144:9d2:8669) (Ping timeout: 250 seconds)
[13:45:04] <theprophet> cluelessperson come back to me supakeen is annoyed by me
[13:45:09] <supakeen> Again, it isn't duck vs dynamic or duck vs static; duck typing means using an object as a duck and if it doesn't work you get an error.
[13:45:17] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[13:45:18] <Inge> Can someone explain why table['transaction_type'].replace(to_replace=[math.nan], value='Unkown', inplace=True) correctly leaves existing values intact, while table['transaction_type'].apply(lambda x: None if math.nan else (str(x)).strip()) changes existing values to None ?
[13:45:29] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[13:45:40] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:45:44] <Repiphany> In python, if you have `a + b`, the "duck" part of duck-typing means that a and b are objects that should have addition defined between them
[13:45:45] <cluelessperson> theprophet,   duck typing is a type of dynamic typing
[13:45:59] <Repiphany> If addition isn't defined, python will throw an error because it is strongly typed
[13:46:01] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:ed38:25f6:b989:e56e)
[13:46:08] <cluelessperson> a.__add__   and  b.__add__  ?
[13:46:12] <theprophet> supakeen ok thanks i get it .. @clue
[13:46:16] <theprophet>  thanks
[13:46:38] <cluelessperson> a. ?? no __add___ and b.__add__   error:   a has no attribute .__add__
[13:46:40] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[13:46:41] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[13:46:59] <Repiphany> If your code never even runs into that line, it won't throw an error because it only dynamically checks whether the objects' types  are suitable
[13:47:05] <cluelessperson> supakeen, is coercion where types are coerced as they're passed?
[13:47:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:47:13] * cluelessperson should google that, respectfully.
[13:47:45] <theprophet> cluelessperson is supakeen bullying you?
[13:48:02] <cluelessperson> theprophet, I bully myself.
[13:48:18] *** Joins: seednode (~seednode@user/seednode)
[13:48:18] *** Quits: seednode (~seednode@user/seednode) (Client Quit)
[13:48:41] <Gurkenglas> To what extent can I manipulate code at runtime? Such as to turn Generator[A]->B into Union[B,A->(Generator[A]->B)]? (which runs the function until the first time it would take an element from the generator or returns)
[13:49:17] *** Joins: seednode (~seednode@user/seednode)
[13:49:29] <supakeen> cluelessperson, yea, when it gets converted (at runtime or compile time) into another type :)
[13:50:05] <cluelessperson> makes sense.
[13:50:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:50:38] <cluelessperson> Gurkenglas, uh,  you can dynamically generate and build classes and run new instructions?
[13:51:20] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[13:52:27] *** Quits: y1n (~y1n@84-115-65-168.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[13:52:31] *** Joins: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl)
[13:52:43] <lambda> Gurkenglas: do you have a concrete example of what you're trying to do?
[13:53:27] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 240 seconds)
[13:54:38] <Gurkenglas> lambda, I would like to do ((a->a)->(s->t)) -> (Applicative f => (a->f a)->(s->f t)) in a single pass, in order to improve the hopelessly abstract python-lenses library. :)
[13:54:53] <Gurkenglas> improve not by making it less abstract, of course.
[13:55:06] <lambda> Gurkenglas: that's hardly a concrete python example
[13:55:20] <Gurkenglas> It's the function I'm writing! Does it get more concrete :D
[13:56:32] *** Joins: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs)
[13:56:40] *** Quits: emika (~emika@185.207.249.3) (Ping timeout: 240 seconds)
[13:56:47] *** Quits: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[13:57:05] <Gurkenglas> lambda, how about: Can I run a function until it calls my callback, then "freeze" it and have a callback in hand that would continue it?
[13:57:31] *** Joins: emika (~emika@83.136.182.103)
[13:57:40] <Gurkenglas> The function that calls my callback isn't my code.
[14:00:05] <lambda> sounds like async to me, but I can't remember how exactly that's implemented in python
[14:00:35] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[14:00:50] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[14:01:08] <Gurkenglas> lambda, and if you'd like all the variables instantiated: "def foo(f): print(1); f(); print(3); def main(): c = bar(foo); print(2); c()" <- is there a bar such that this prints 1,2,3?
[14:02:48] <Gurkenglas> If I owned foo I would use yield, but I don't.
[14:03:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:03:54] *** Quits: hafat (~hafat@159.146.55.244) (Ping timeout: 250 seconds)
[14:04:03] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[14:04:49] *** Joins: y1n (~y1n@84-115-64-187.wifi.dynamic.surfer.at)
[14:07:28] <bjs> Gurkenglas: take a look at greenlets
[14:08:07] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[14:08:09] <Gurkenglas> Nice!
[14:08:10] *** Joins: seednode (~seednode@user/seednode)
[14:09:11] <bjs> Gurkenglas: I can't say whether they do precisely what you want but I imagine something like f == main_greenlet.switch or something
[14:09:15] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:10:10] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[14:10:27] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:10:43] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Read error: Connection reset by peer)
[14:12:20] *** Joins: montxero (~user@149.167.149.74)
[14:12:20] *** Quits: nips_ (~nips@abv84.internetdsl.tpnet.pl) (Remote host closed the connection)
[14:12:27] *** Joins: LSD (~LSD@2.lsd.systems)
[14:12:43] *** Joins: nips_ (~nips@abv84.internetdsl.tpnet.pl)
[14:13:58] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:14:30] *** Joins: Blankspace (~androirc@user/blankspace)
[14:14:38] *** Quits: LSD (~LSD@2.lsd.systems) (Excess Flood)
[14:14:51] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 250 seconds)
[14:15:11] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[14:15:34] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[14:16:47] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[14:18:04] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:18:18] *** Joins: LSD (~LSD@2.lsd.systems)
[14:21:50] <rendar> if i have a lot of sockets open with asyncio, the best way to send an heartbeat to the socket is a `while True: send; await sleep` coroutine?
[14:22:36] *** Joins: plastico (~plastico@neomutt/plastico)
[14:23:52] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[14:24:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:25:50] *** Joins: georgios (~georgios@user/georgios)
[14:26:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[14:26:41] <supakeen> ish, i never quite like that because it means you add an extra coro per socket so i generally have a registry of all open sockets and a single heartbeat sender
[14:26:43] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:26:59] <rendar> i see
[14:27:06] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[14:27:19] <rendar> yeah i think that's better
[14:27:24] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[14:27:26] *** Joins: seednode (~seednode@user/seednode)
[14:27:41] <rendar> what about setting coroutines priority? like the 'nice' value of unix processes? is that possible?
[14:28:02] <cluelessperson> rendar, I'm not sure, but doesn't TCP have overhead that handles that for you anyway?
[14:28:14] <rendar> cluelessperson, huh?
[14:28:24] <rendar> cluelessperson, i'm speaking about coroutines, not TCP
[14:29:23] <cluelessperson> rendar, I mean to say, assuming you're using TCP, I thought there was overhead that would keep it open so that a heartbeat was not needed.
[14:29:37] <rendar> cluelessperson, oh sorry
[14:29:46] <cluelessperson> rendar, anyway, yes, you could just make a timer that sends a heartbeat manually.
[14:30:18] <rendar> if there is this TCP option, why people still use heartbeat? what are the advantages here?
[14:30:38] *** Joins: bidouille (~user_name@trois.potager.org)
[14:31:14] <cluelessperson> rendar, I don't use this often enough that I remember it perfectly, but your program could crash in a way that it doesn't respond, but keeps the connection open.
[14:31:36] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[14:31:43] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Remote host closed the connection)
[14:31:59] <cluelessperson> rendar, and with UDP,  you don't even know if your packet was received, heartbeats are the way to make sure things are still there.
[14:32:01] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:32:08] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[14:32:15] <rendar> yes
[14:32:16] * cluelessperson needs to look up what it means for a TCP connection to be "open"
[14:32:28] *** Joins: kcrk (~kcrk@user/kcrk)
[14:33:26] <grawity> afaik TCP doesn't inherently need heartbeats, it's the firewalls and NATs along the way which do... and yeah, most OSes have a setsockopt() to enable TCP-level "keepalives" but afaik it's not very portable across different systems, the configurability tends to vary
[14:33:36] <cluelessperson> rendar, particularly in the case of servers, where you don't want to hear from clients all the time, you might only have clients sometimes send heartbeats, so the server knows they're there.
[14:33:54] <rendar> yes
[14:34:00] <cluelessperson> rendar, but in other services, you could just have the client ALWAYS respond "yes, done", which acts like a heartbeat.
[14:34:07] <rendar> that's better
[14:34:19] <rendar> indeed
[14:34:41] <cluelessperson> grawity, that's a lot more complex than I was hoping and that's distressing.
[14:35:26] <supakeen> with TCP you always have another protocol on top of it anyways; that can either have heartbeats or a concept of a message
[14:35:36] <cluelessperson> grawity, do firewalls / NATs want a heartbeat?  I don't think I've seen a "keepalive" setting on connections in any of the enterprise firewall stuff I've used.
[14:36:05] *** Quits: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 250 seconds)
[14:36:13] <grawity> they track states, and have a timeout for each state to avoid the table growing forever
[14:36:24] *** Joins: cheater (~Username@user/cheater)
[14:36:33] <grawity> it's not going to be called "keepalive" in the firewall, but more like "conntrack timeout" or something
[14:37:07] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 240 seconds)
[14:37:34] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Quit: philipp64|work)
[14:37:43] <grawity> some of them have really silly short timeouts, e.g. my current ISP uses CGNAT and drops TCP connections after 30 minutes idle
[14:38:21] <supakeen> for some value of short, I've definitely seen shorter and consumer routers + torrents is especially hilarious
[14:38:35] <supakeen> 'help my nat table is full let me throw away all of it all the time'
[14:39:27] <grawity> yeah but that's nevertheless annoyingly short for TCP
[14:39:45] *** Joins: AlanMD (~AlanMD@193.105.139.131)
[14:40:09] <supakeen> isn't the real problem that we try to layer message-based protocols on top of a stream protocol? :)
[14:40:40] * grawity RSTs out of this discussion
[14:41:17] * supakeen briefly mentions SCTP in passing
[14:41:19] *** Quits: rud01f (rud0lf@user/rud0lf) (Quit: FREAKSHELLS - https://www.freakshells.net)
[14:41:40] *** Joins: xx (~xx@user/xx)
[14:41:47] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547) (Remote host closed the connection)
[14:42:34] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:d8ba:8903:64c5:c75b)
[14:44:04] <cluelessperson> grawity, I figured and assumed that TCP connections had an explicit keepalive in the protocol, which is how firewalls, nats, and computers would know to continue listening on that port for data to route.
[14:45:00] <grawity> mainly it's more of the opposite -- they're supposed to always continue listening *unless* they see an RST or FIN that would close the connection
[14:45:37] <hexnewbie> What type of type hint would use for a tuple with int elements, and optional elements that follow? I have tons of types like namedtuple('UnicodeBlock', 'start end name') which differ in anything but the start and end.
[14:45:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:17] <bjs> hexnewbie: the question is a little too vague to answer,  what would you do with this type hint
[14:47:26] <grawity> cluelessperson: that is, TCP doesn't need an explicit keepalive *because* it has explicit setup/teardown instead (the SYN, RST, FIN flagged packets)
[14:47:37] <grawity> but I keep forgetting this is #python and not #networking, sorry
[14:49:10] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:49:57] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[14:50:04] <hexnewbie> bjs: Just inform the one reading the code that a function receives a block of some kind, and a block is a tuple of at least two integers signifying start and stop. I found my code hard to follow upon review, so I want the types to be clearly visible.
[14:50:18] *** LSD is now known as acidsys
[14:50:30] <bjs> hexnewbie: I guess my point wasn't clear enough, I mean these "optional types" that follow,  would the function use them?
[14:50:37] <hexnewbie> No
[14:50:49] <bjs> hexnewbie: why not just use inheritance then? Have a BaseBlock type with start and end
[14:51:01] *** Joins: gggp (~textual@60.10.194.43)
[14:51:08] <bjs> and then your functions `def compute_block_size(block: BaseBlock) -> int: return block.end - block.start` or whatever
[14:51:59] <hexnewbie> OK. I have a module that does operate on blocks, that is, intersects them, lists all the integers inside a block, checks if blocks overlap, does block lookups with bisect. Now, it seems I'm passing a wide variety of such blocks coming from unrelated other modules to the same module (including UnicodeBlock, ScriptBlock, bare tuples like (1, 299), etc.)
[14:52:19] <Kabouik> How should I proceed to print an error for a scrap script if there is no data to scrap at the moment? For instance this is what I get with my script when there is data (AIR) and when BeautifulSoup can't find anything (CBE): https://0x0.st/-tkX.png
[14:52:51] <bjs> hexnewbie: maybe you want Tuple[int, int, ...]
[14:52:59] *** Quits: y1n (~y1n@84-115-64-187.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[14:53:18] <bjs> hexnewbie: although this would mean the function wouldn't know about the names of the namedtuple, only the tuple-ness
[14:53:43] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[14:53:45] <hexnewbie> bjs: I tried that, Python 3.7 throws TypeError: Tuple[t0, t1, ...]: each t must be a type. Got Ellipsis.
[14:54:23] <hexnewbie> Maybe I should just do BlockType = tuple, document what it is in the code, and expand on it later.
[14:54:32] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:54:33] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 248 seconds)
[14:54:39] <bjs> hexnewbie: oh I guess the typing module tries to pretend Tuples are homogenous lists in the ... case
[14:54:41] <bjs> ugly
[14:54:52] *** Joins: mickey (~user@user/mickey)
[14:57:25] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 252 seconds)
[14:57:49] <cluelessperson> grawity, yes, but if something crashes, that explicit teardown might not happen.
[14:58:04] <grawity> yeah, hence the timeout
[14:58:54] <cluelessperson> I'm guessing that timeout is since *any* data.
[14:58:57] <cluelessperson> makes sense I suppose
[14:59:07] <cluelessperson> so a heartbeat doesn't even need to be a ping/pong
[14:59:50] <cluelessperson> well assuming that natting sees ports on both sides (both ways) as a single tunnel/connection
[15:00:23] <Kabouik> Ok I found how to print my custom error with `try:` and `except`
[15:01:49] *** Quits: schumaml (~schumaml@p579aa678.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:03:47] *** Joins: schumaml (~schumaml@p4ff91835.dip0.t-ipconnect.de)
[15:05:26] *** Joins: rud01f (rud0lf@user/rud0lf)
[15:05:45] *** Joins: y1n (~y1n@84-115-64-220.wifi.dynamic.surfer.at)
[15:08:43] <cluelessperson> Kabouik, woo.
[15:08:55] <cluelessperson> I suggest to look at the existing errors and generally try to use those
[15:08:59] <cluelessperson> or just extend one of those
[15:12:55] <Kabouik> The actual python error is not relevant to the user in my case, I just have a bunch of scripts scrapping specific keywords, and keywords are not always available on the website, so I just want to show "No [keyword] data available at the moment." instead of the traceback
[15:17:13] *** Quits: schumaml (~schumaml@p4ff91835.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:17:16] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:19:41] *** Joins: schumaml (~schumaml@p4ff91382.dip0.t-ipconnect.de)
[15:24:39] *** Joins: masoudd (~masoudd@user/masoudd)
[15:25:03] *** Quits: schumaml (~schumaml@p4ff91382.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:26:12] <cluelessperson> Kabouik, perfectly fair. :D
[15:26:55] *** Joins: schumaml (~schumaml@p4ff91c84.dip0.t-ipconnect.de)
[15:27:21] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:27:40] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:27:55] <cluelessperson> Perhaps that'd be a "RuntimeWarning" Exception extension? :P
[15:27:59] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[15:28:05] <cluelessperson> Kabouik, ^
[15:28:14] <thm> https://bpa.st/ABUA what am I doing wrong here? the two iso dates are roughly 2 hours apart, not 1 hour, as expected
[15:29:13] <cluelessperson> thm, is daily savings being taken into account?
[15:29:26] *** Joins: ubert (~Thunderbi@77.119.192.190.wireless.dyn.drei.com)
[15:29:44] <cluelessperson> thm, oh, that's returning two different timezones:   +01:00  +02:00
[15:29:47] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 240 seconds)
[15:29:49] <cluelessperson> thm, they're the same time.
[15:30:07] <thm> no, they are 7206 seconds apart
[15:30:17] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:30:20] <cluelessperson> 2:55 + 2 => 4:55,   3:55 + 1 => 4:55
[15:30:45] <cluelessperson> it seems to me tzlocal is returning a different timezone?
[15:31:21] <thm> you are reading the timezone part in the wrong away. it's the difference to utc.
[15:31:48] <cluelessperson> '2021-10-31T02:55:46.869103+02:00'
[15:31:49] <cluelessperson> '2021-10-31T03:55:52.237946+01:00'
[15:31:56] <cluelessperson> thm,   the timezone is different
[15:32:04] <thm>  I know, that's on purpose.
[15:32:29] <thm> I was thinking that dateutils timezone and relativedelta functions would take care
[15:32:33] <cluelessperson> 2:55 + 2 = 4:55 utc
[15:32:34] <cluelessperson> and
[15:32:44] <cluelessperson> 3:55 + 1 = 4:55 utc
[15:32:44] <thm> no. 2:55 - 2 = 0:55 urc.
[15:32:48] <thm> no. 2:55 - 2 = 0:55 utc.
[15:32:58] <thm> and 3:55 - 1 = 2:55
[15:33:15] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[15:34:08] <cluelessperson> "The UTC offset is appended to the time "
[15:34:19] <cluelessperson> https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC
[15:34:23] <thm> yes. and so, to get UTC, you have to subtract the offset.
[15:35:34] <thm> but that is not my question. how can I, using datetime and dateutil, do timezone-aware calculations?
[15:36:08] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:36:10] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[15:36:45] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[15:37:31] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:38:07] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:ed38:25f6:b989:e56e) (Ping timeout: 240 seconds)
[15:39:07] *** Quits: schumaml (~schumaml@p4ff91c84.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:39:20] *** Joins: nomic (~nomic@185.217.117.169)
[15:40:40] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[15:41:10] *** Joins: schumaml (~schumaml@p4ff9196f.dip0.t-ipconnect.de)
[15:42:21] <Kabouik> What is a RuntimeWarning Exception extension cluelessperson? I'm sorry if that's obvious, I don't know Python :<
[15:42:57] <cluelessperson> Kabouik,    class MyCustomWarning(RuntimeWarning):
[15:44:23] <cluelessperson> thm, I'm looking around
[15:44:25] <cluelessperson> what about
[15:44:31] <cluelessperson> `datetime.datetime.now().astimezone().isoformat()`
[15:44:40] <cluelessperson> '2021-08-29T04:13:53.467191-07:00'
[15:44:55] <Kabouik> I'm not sure how to integrate it in my current script cluelessperson: https://0x0.st/-tk1.py
[15:45:07] <braxas> can I somehow import arbitrary files in python
[15:45:29] <braxas> or do I always have to first convert the file path to a module, and then import it
[15:45:37] *** Joins: magla (~gelignite@55d4cf57.access.ecotel.net)
[15:45:58] <cluelessperson> braxas, uh, not sure what you're asking.   Non-python is just a file to python, and should be operated on as a file
[15:46:26] <braxas> actually nvm, this more or less answers the question: https://stackoverflow.com/questions/67631/how-to-import-a-module-given-the-full-path
[15:46:29] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547)
[15:46:44] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[15:47:05] <cluelessperson> braxas, ah, you want to import a module from an arbitrary path?
[15:47:39] *** Joins: ganchan (~thomas_w@user/ganchan)
[15:48:28] *** Joins: seednode (~seednode@user/seednode)
[15:48:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:48:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:49:01] <thm> cluelessperson: here is the full example, which doesn't depend on the current time or timezone: https://bpa.st/QS5A I think this is clearly wrong.
[15:49:40] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:d8ba:8903:64c5:c75b) (Ping timeout: 240 seconds)
[15:50:04] *** Quits: dontyouloveshort (~julius@ip5f5bc239.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[15:50:19] <thm> (or maybe I am misunderstanding relativedelta)
[15:50:31] *** Joins: Roey (~Roey@user/Roey)
[15:51:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[15:51:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:52:31] <cluelessperson> thm, the difference you're adding to d1 to create d2, is one hour
[15:52:36] <cluelessperson> so d2 - d1 == 1 hour
[15:52:58] *** Quits: y1n (~y1n@84-115-64-220.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:53:10] <thm> yes. but again, these two iso dates are 2 hours apart, not one.
[15:54:04] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 252 seconds)
[15:54:08] *** Quits: Karatsuba (~jamer05@user/karatsuba) (Quit: WeeChat 2.8)
[15:55:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:56:13] <braxas> cluelessperson: yes, my phrasing was a bit mixed up :)
[15:56:23] *** Joins: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl)
[15:59:50] <phillhocking> oh hey friends
[16:00:21] <phillhocking> what is the best way for me to iterate through these list/tuple/whatevertheheck values in my last coroutine at the end here? https://gist.github.com/phillhocking/2c469b06f19ea67943adfd2796c3a125
[16:00:32] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[16:00:35] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[16:01:18] <rendar> is ok to raise asyncio.CancelledError ?
[16:04:56] <graingert[m]> rendar: ?
[16:05:00] <graingert[m]> Depends what for
[16:05:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[16:05:58] *** Joins: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at)
[16:06:01] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[16:06:27] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[16:09:25] *** Joins: sebastianos_ (~sebastian@user/sebastianos)
[16:10:11] *** Quits: sebastianos_ (~sebastian@user/sebastianos) (Remote host closed the connection)
[16:10:50] *** Joins: jinsun (~quassel@user/jinsun)
[16:11:08] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[16:11:58] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:13:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:14:51] *** Joins: reset (~reset@user/reset)
[16:16:03] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[16:16:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:17:37] *** Joins: ODIRF (~ODIRF@dynamic-046-114-138-122.46.114.pool.telefonica.de)
[16:18:56] <rendar> graingert[m], let me show the code
[16:19:21] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 248 seconds)
[16:19:26] <rendar> graingert[m], here we go https://bpa.st/N6BA
[16:20:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:21:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:22:15] <rendar> graingert[m], basically, if i type the "exit" command string, raising a CancelledError will propagate that exception
[16:26:40] *** Quits: schumaml (~schumaml@p4ff9196f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[16:26:49] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 248 seconds)
[16:26:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[16:26:58] *** Joins: schumaml (~schumaml@p200300e2ef41bf002bd7a74ddd029f05.dip0.t-ipconnect.de)
[16:27:37] *** Quits: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[16:27:47] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[16:29:03] *** Quits: ODIRF (~ODIRF@dynamic-046-114-138-122.46.114.pool.telefonica.de) (Remote host closed the connection)
[16:31:36] <rendar> graingert[m], ?
[16:35:01] *** Joins: foozle (~foozle@2001-b011-c001-16ef-7cc4-5c73-6f6a-7978.dynamic-ip6.hinet.net)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:12] *** Joins: stpz (~stpz@240e:341:2201:900:1859:9560:6c56:701e)
[16:38:10] *** Quits: schumaml (~schumaml@p200300e2ef41bf002bd7a74ddd029f05.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:40:12] *** Joins: schumaml (~schumaml@p200300e2ef41cb004a2a261c31a96f19.dip0.t-ipconnect.de)
[16:40:17] *** Joins: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at)
[16:42:33] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:42:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 245 seconds)
[16:43:04] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[16:43:14] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:43:46] *** Joins: maxpowa (~maxpowa@brought.to.you.by.maxpowa.us)
[16:45:42] *** Joins: besnn (~besnn@user/besnn)
[16:46:38] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[16:47:47] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[16:49:54] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[16:50:07] *** Joins: logithack (~logithack@p57b030a6.dip0.t-ipconnect.de)
[16:50:26] *** Joins: jasper_ (~user@styria.daemonized.org)
[16:52:58] *** Joins: Naan (~naan@user/naan)
[16:53:01] *** Quits: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[16:54:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:54:10] *** Quits: logithack (~logithack@p57b030a6.dip0.t-ipconnect.de) (Client Quit)
[16:54:32] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:56:03] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 250 seconds)
[16:56:42] *** Joins: han-solo (~hanish@user/han-solo)
[16:56:50] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[16:57:39] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:57:40] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[16:58:01] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[16:58:50] *** Joins: cutotopo (~cutotopo@151.95.85.46)
[16:59:06] *** Joins: gggp (~textual@60.10.194.43)
[17:01:55] *** Quits: cutotopo (~cutotopo@151.95.85.46) (Client Quit)
[17:02:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 248 seconds)
[17:03:17] *** Joins: jmft2 (~jmft2@185.111.131.198)
[17:04:24] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547) (Remote host closed the connection)
[17:04:57] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:6814:f90c:e967:96)
[17:05:43] *** Quits: ganchan (~thomas_w@user/ganchan) (Quit: Leaving)
[17:05:51] *** Joins: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at)
[17:06:27] *** Quits: schumaml (~schumaml@p200300e2ef41cb004a2a261c31a96f19.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:11:30] <thm> cluelessperson: seems I have to go via utc, so adding hours over DST changes works reliably.
[17:11:56] <jmft2> Is there a way (probably a magic method?) that turns the arguments passed to a function as a dictionary? I want something like this: https://bpa.st/32BQ
[17:12:36] <cluelessperson> jmft2, turns them into what?
[17:12:55] <nedbat> jmft2: you could use  .format(**kwargs),  but that won't account for positional args
[17:13:05] <bjs> jmft2: maybe you’re looking for inspect.signature and it’s bind() method
[17:13:17] <cluelessperson> wut
[17:13:22] <jmft2> nedbat: exactly, I need positional args and I also need keyword args that aren't passed as **kwargs
[17:13:30] <bjs> I want to put on the record the use of the incorrect "it’s" was my phones autocorrect not me.
[17:13:54] <cluelessperson> bjs, I think "it's" should be valid
[17:14:02] <nedbat> jmft2: this will do it: https://docs.python.org/3/library/inspect.html#inspect.getcallargs
[17:14:03] <jmft2> cluelessperson: In my example, I shall want arguments = {"x": 3}
[17:14:35] <bjs> nedbat: neat
[17:14:40] <nedbat> bjs: ten points from hufflepuff
[17:14:46] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[17:14:54] <bjs> also it says it’s deprecated and to do what I said :)
[17:14:58] *** Quits: rajkosto (~rajkosto@178-221-251-243.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:15:25] <jmft2> Thanks both, I'll give bjs' suggestion a go
[17:16:15] <jmft2> (oh and line 19 is a typo of course)
[17:16:53] *** Joins: frost (~frost@59.71.240.119)
[17:18:46] *** Quits: frost (~frost@59.71.240.119) (Client Quit)
[17:18:53] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[17:19:30] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:a4a6:e084:cca:3d91)
[17:22:37] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[17:23:02] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-215.hsi5.kabel-badenwuerttemberg.de)
[17:23:50] <rendar> does this case justify a raise of CancelledError? -> https://bpa.st/N6BA
[17:24:05] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:24:21] <jmft2> bjs: thanks, this seems to work: https://bpa.st/Z76A
[17:24:50] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[17:28:19] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[17:29:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[17:30:13] *** Joins: schumaml (~schumaml@p57b7ed95.dip0.t-ipconnect.de)
[17:30:52] *** cryptomonad is now known as cryptomonad_
[17:32:03] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[17:32:07] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[17:32:32] *** Joins: montxero (~user@149.167.149.74)
[17:33:08] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[17:33:15] *** Joins: zepolen_ (~zepolen@2a02:587:8611:2428:a4a6:e084:cca:3d91)
[17:33:29] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[17:33:37] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:a4a6:e084:cca:3d91) (Quit: Konversation terminated!)
[17:33:53] *** Joins: schumaml1 (~schumaml@p4ff9167a.dip0.t-ipconnect.de)
[17:34:23] *** zepolen_ is now known as zepolen
[17:35:10] *** Quits: schumaml (~schumaml@p57b7ed95.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:37:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 240 seconds)
[17:40:00] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[17:40:04] <rendar> anyone?
[17:40:24] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:40:26] *** Joins: seednode (~seednode@user/seednode)
[17:41:00] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Ping timeout: 250 seconds)
[17:41:24] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[17:43:15] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[17:46:02] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:46:37] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[17:46:44] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[17:47:30] *** Joins: seednode (~seednode@user/seednode)
[17:49:50] *** Joins: digilink (~digilink@user/digilink)
[17:49:54] *** Joins: aman (~aman@user/aman)
[17:52:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:52:27] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[17:52:47] *** Quits: y1n (~y1n@84-115-65-5.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[17:53:11] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:56:21] <ouzel8_> Hi everybody.
[17:56:44] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[17:56:52] <ouzel8_> What are approaches in Python for comparing to lists o f integers, say a, and b
[17:56:57] <ouzel8_> of*
[17:57:38] <jmft2> ouzel8_: a == b?
[17:57:47] <ouzel8_> If the have the same integer elements then they are equal, otherwise if they differ then they are not equal.
[17:58:44] *** Joins: fonsy (~fonsy@84.247.210.222)
[17:59:08] <ouzel8_> jmft2: does this operation compare by value? rather than reference?
[17:59:58] <jmft2> ouzel8_: by value
[18:00:33] <jmft2> https://bpa.st/CZQQ
[18:00:41] <ouzel8_> jmft2: very good.
[18:00:43] <nedbat> ouzel8_: what would it mean to compare by reference?
[18:00:49] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:01:15] *** Joins: mossman93 (~quassel@user/mossman93)
[18:03:02] <ouzel8_> nedbat: Instead the position in memory a, and b refer to would be checked.
[18:03:54] <nedbat> ouzel8_: every class decides what == means.  for ints, lists, floats, strings, etc, it's checking for equal values
[18:04:20] *** Joins: gggp (~textual@60.10.23.160)
[18:04:35] <jmft2> ouzel8_: what ned said, but it's also recursive: so in my example you'd also have [a] == [b] (since a == b, even though a is not b)
[18:05:05] <jmft2> s/but/and/
[18:05:06] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[18:05:42] *** Joins: hendry (~hendry@210.23.22.2)
[18:06:13] <jmft2> so a == b compares elementwise and uses ==, not id, on each of the elements
[18:06:24] *** Joins: y1n (~y1n@84-115-64-132.wifi.dynamic.surfer.at)
[18:06:45] *** Quits: hendry (~hendry@210.23.22.2) (Client Quit)
[18:07:19] *** Joins: hendry (~hendry@210.23.22.2)
[18:09:11] <ouzel8_> ah very helpful, thank you
[18:09:39] *** Quits: foozle (~foozle@2001-b011-c001-16ef-7cc4-5c73-6f6a-7978.dynamic-ip6.hinet.net) (Quit: Leaving)
[18:11:24] <jmft2> What's the correct type hint for a @np.vectorize'd function?
[18:11:45] <jmft2> def f(x: int) -> int, or def(f: np.array) -> np.array ?
[18:13:52] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[18:13:57] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[18:15:40] *** Quits: stpz (~stpz@240e:341:2201:900:1859:9560:6c56:701e) (Quit: Client closed)
[18:15:51] *** Jigsy` is now known as Jigsy
[18:17:25] <jinsun> jmft2: the former, in your function defintion you are going to use the x as int, the decorator has to worry about the signature of what it returns
[18:18:27] *** Quits: jmft2 (~jmft2@185.111.131.198) (Ping timeout: 256 seconds)
[18:19:54] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[18:20:18] <jinsun> and it seems np.vectorize just cheats and annotates as Any -> Any
[18:20:36] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:20:53] <Payam> Hi, I am trying to run a normal function in loop.run_in_executor using asyncio but I get an error saying that Corutin was expected but got none. https://bpa.st/IENA
[18:20:59] *** Quits: twobitsprite (~twobitspr@66.115.166.150) (Ping timeout: 250 seconds)
[18:21:07] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-71d9-8352-a788-43f1.res6.spectrum.com)
[18:21:26] <Payam> https://bpa.st/WQRQ
[18:22:07] *** Quits: emika (~emika@83.136.182.103) (Ping timeout: 240 seconds)
[18:23:02] *** Joins: twobitsprite (~twobitspr@195.181.171.234)
[18:23:24] *** Joins: emika (~emika@185.207.249.195)
[18:23:54] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[18:24:50] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d56c-0dd4-b0ec-7c5a.res6.spectrum.com)
[18:26:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[18:26:27] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 240 seconds)
[18:26:49] *** Joins: gggp (~textual@60.10.194.43)
[18:26:51] *** Joins: pycurious (~Adium@user/pycurious)
[18:26:57] <jinsun> Payam: the error seems not related to run_in_executor, it is because of asyncio.create_task in line 96, you are passing it self.youtube_dl_download_file(...) which is not an async function
[18:27:13] *** A_Dragon is now known as A_Derg
[18:27:31] *** Quits: fonsy (~fonsy@84.247.210.222) (Quit: Leaving)
[18:27:53] *** Quits: cryptomonad_ (~cryptomon@194.191.225.149) (Quit: Quit)
[18:29:23] *** A_Derg is now known as A_Dragon
[18:30:19] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:31:03] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:31:11] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[18:32:47] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:06] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[18:36:50] *** Joins: Pixi (~Pixi@user/pixi)
[18:38:24] *** Quits: lastshell (~lastshell@user/lastshell) (Remote host closed the connection)
[18:39:03] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[18:39:11] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 250 seconds)
[18:41:21] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[18:41:35] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[18:44:49] *** Quits: czuk_cza (~mist@188.147.107.180.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[18:46:42] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[18:47:20] *** Joins: txtsd (~txtsd@user/txtsd)
[18:49:43] *** Joins: Yaser_Amiri (~yaser@5.212.156.229)
[18:51:11] <Yaser_Amiri> Hi, my question is not python specific, it's more a engineering question. Have anyone read/saw something about translating/transforming errors between layers/component/microservices?
[18:51:55] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[18:52:25] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 248 seconds)
[18:52:36] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[18:53:00] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:cdf0:ac10:aa25:a487)
[18:53:10] *** Quits: y1n (~y1n@84-115-64-132.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[18:54:32] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[18:55:54] <ApostleInTriumph> Hello. i've shuffled an array by using random indices. Now, given the shuffled array and indices, I want to get the original array. I have a naive solution i.e, to create a dict using keys as "random indices" values as respective index of array and sort dict by key value. is this optimal?
[18:58:49] <han-solo> ApostleInTriumph: maybe `operator.itemgetter(*indices)(that_thing)` ?
[18:59:25] <han-solo> although, could you show an example
[19:01:15] <ApostleInTriumph> han-solo yes a minute
[19:03:31] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:04:41] <jinsun> han-solo: to me it sounds like ApostleInTriumph did that, and now wants that_thing back from the result and indices
[19:05:46] <ApostleInTriumph> han-solo https://bpa.st/YMUQ
[19:06:01] <ApostleInTriumph> basically what's the clever way to avoid for loop here?
[19:06:07] *** Joins: jmft223 (~jmft2@81.149.115.87.dyn.plus.net)
[19:06:34] *** Joins: y1n (~y1n@84-115-65-176.wifi.dynamic.surfer.at)
[19:07:54] *** Joins: vodkra (~vodkra@user/vodkra)
[19:08:53] <ApostleInTriumph> i see, ar3[rand_ind] = ar2[np.arange(1000)] still works
[19:09:02] <ApostleInTriumph> is there a way to avoid initialising the zero array?
[19:09:06] <han-solo> jinsun: oh, Okay
[19:10:31] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[19:10:48] *** Joins: srhm (~srhm@user/srhm)
[19:11:27] *** jmft223 is now known as jmft2
[19:13:17] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[19:13:41] <grym> aac: working?
[19:18:25] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Remote host closed the connection)
[19:22:31] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:23:51] <Payam> jinsun, yeah I realized it when I went to bring coffe
[19:23:53] <Payam>  :D
[19:25:14] *** Joins: rany (~rany@user/rany)
[19:25:16] *** Joins: kosh (~kosh@user/kosh)
[19:25:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[19:27:31] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[19:28:41] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:29:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:29:35] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[19:29:46] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 250 seconds)
[19:29:51] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[19:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[19:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:32:12] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:33:24] <Payam> Does anyone have problem wiht pylint sometimes not reacting at all in vscode?
[19:33:39] <Payam> I have it enabled in my settings but sometimes it is just asleep
[19:34:29] *** Joins: zebrag (~chris@user/zebrag)
[19:35:27] *** Joins: zisu8 (~textual@p200300eab73b6c00f99c8dec4a359c1a.dip0.t-ipconnect.de)
[19:36:16] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 252 seconds)
[19:39:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:40:27] *** Parts: Yaser_Amiri (~yaser@5.212.156.229) (Konversation terminated!)
[19:41:35] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[19:41:54] <jinsun> pylint is way too slow to be usable while editing, I just put it in the commit hooks and rely only on the type checker and flake8 to complain while editing
[19:42:26] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[19:43:34] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-215.hsi5.kabel-badenwuerttemberg.de) (Quit: Lost terminal)
[19:44:54] <dontyouloveshort> hi
[19:45:34] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[19:45:48] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[19:46:01] *** Joins: montxero (~user@149.167.149.74)
[19:46:30] <dontyouloveshort> on this page: https://mariadb.com/de/resources/blog/how-to-connect-python-programs-to-mariadb/       there are examples for select, insert and so on but not update, this is my "idea" of (python) mariadb's update syntax:  cursor.execute("UPDATE approved_connections SET destination=? where comment=? and source=? and destination=? and protocol=?", (newDest, rule['comment'], rule['source'], rule['destination'],
[19:46:30] <dontyouloveshort> rule['protocol']))      but the data does not change after this, is the syntax wrong?
[19:47:24] <dontyouloveshort> cursor.statement outputs the statement but still with the questions mark is is kinda useless
[19:48:55] *** Joins: rsx (~dummy@ppp-188-174-159-213.dynamic.mnet-online.de)
[19:51:36] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[19:51:55] *** Joins: shangxiao (~davids@124.182.71.141)
[19:53:10] *** Quits: y1n (~y1n@84-115-65-176.wifi.dynamic.surfer.at) (Ping timeout: 240 seconds)
[19:57:30] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:58:14] <p-i-> exit(0) isn't quitting. It's hanging. I've got another thread running, but it's got daemon=True. Shouldn't exit(0) be terminating this thread?
[19:59:06] <p-i-> ohh, I'm executing it from within another daemon thread. I guess it just kills that daemon then.
[19:59:27] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[19:59:45] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[20:01:39] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[20:01:54] *** Joins: montxero (~user@149.167.149.74)
[20:02:48] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[20:04:06] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[20:04:29] *** Joins: CombatVet (~c4@user/combatvet)
[20:06:47] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[20:06:51] *** Joins: y1n (~y1n@84-115-65-176.wifi.dynamic.surfer.at)
[20:07:45] *** Joins: pro_z (~pro_z@37.214.57.50)
[20:08:16] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[20:08:42] *** Joins: srhm (~srhm@user/srhm)
[20:09:10] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[20:09:14] *** Joins: Atque (~Atque@user/atque)
[20:09:39] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[20:10:01] *** Joins: heco (~redrum@user/redrum88)
[20:10:49] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 248 seconds)
[20:11:22] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[20:11:26] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Quit: tata)
[20:11:50] *** PinealGlandOptic is now known as Everyone
[20:12:15] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[20:12:39] *** Everyone is now known as Everything
[20:14:15] *** Quits: Everything (~PinealGla@37.115.210.35) (Quit: leaving)
[20:14:49] *** Joins: philipp64|work (~philipp64@174.27.28.163)
[20:16:25] *** Joins: upsala (~zcb@185.213.155.160)
[20:18:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 252 seconds)
[20:20:26] <han-solo> `ar1 == ar2[np.argsort(rand_ind)]`
[20:20:35] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:20:55] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[20:21:04] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:21:05] *** Quits: vodkra (~vodkra@user/vodkra) (Quit: leaving)
[20:21:23] *** Joins: vodkra (~vodkra@user/vodkra)
[20:21:35] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:21:55] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Quit: Leaving)
[20:23:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:24:15] *** Joins: mokulus (~mokulus@user/mokulus)
[20:24:43] *** Quits: asthasr (~asthasr@162.210.28.151) (Quit: asthasr)
[20:24:46] *** Joins: thiras (~thiras@user/thiras)
[20:25:11] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[20:25:24] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[20:25:46] *** Quits: vodkra (~vodkra@user/vodkra) (Client Quit)
[20:25:50] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[20:25:55] *** Joins: kpiyushlucky (~Guest77@106.223.126.32)
[20:26:21] *** Joins: vodkra (~vodkra@user/vodkra)
[20:26:28] *** Quits: kpiyushlucky (~Guest77@106.223.126.32) (Client Quit)
[20:26:51] *** Joins: kpiyushlucky (~kpiyushlu@106.223.126.32)
[20:30:19] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:31:05] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 248 seconds)
[20:31:57] *** Joins: mokulus (~mokulus@user/mokulus)
[20:32:07] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[20:32:22] *** Joins: georgios (~georgios@user/georgios)
[20:33:17] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[20:33:38] *** Quits: vodkra (~vodkra@user/vodkra) (Quit: leaving)
[20:34:10] *** Quits: flyingchef (~flyingche@user/flyingchef) (Quit: WeeChat 3.2)
[20:34:42] *** Joins: LiftLeft (~LiftLeft@172.83.47.28)
[20:34:47] *** Joins: vodkra (~vodkra@user/vodkra)
[20:35:16] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[20:35:48] *** Joins: arinov (~arinov@178.240.152.159)
[20:36:13] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 252 seconds)
[20:37:53] *** Joins: cedric (~cedric@2a01:cb11:867:c200:6d18:a6ca:25fe:929f)
[20:38:47] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Ping timeout: 250 seconds)
[20:38:54] *** Quits: vodkra (~vodkra@user/vodkra) (Client Quit)
[20:39:05] *** Joins: vodkra (~vodkra@user/vodkra)
[20:39:39] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[20:40:50] *** Quits: jazzy (~jaziz@2600:380:4671:e333:dd61:8951:cd4d:7b7a) (Ping timeout: 250 seconds)
[20:42:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[20:43:09] <p-i-> Is anyone here familiar with pycurl? I'm trying to implement a HTTP DELETE
[20:43:12] <p-i->             c.setopt(c.URL, f'{url}?{data_encoded}' if data_encoded else url)
[20:43:12] <p-i->             c.setopt(c.CUSTOMREQUEST, 'DELETE')
[20:43:18] *** Quits: m4r35n357 (~m4r35n357@host-92-20-125-21.as13285.net) (Quit: Leaving)
[20:43:32] <p-i-> ^ This is giving {'code': -1101, 'msg': "Duplicate values for parameter 'symbol'."} which is a nonhelpful error message
[20:43:40] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[20:43:52] <Wulf> p-i-: curl is great. But why use it with python when there are more comfortable libs?
[20:44:04] *** Quits: cedric (~cedric@2a01:cb11:867:c200:6d18:a6ca:25fe:929f) (Quit: Konversation terminated!)
[20:44:18] <p-i-> ok lemme try with requests.
[20:44:23] <Wulf> or httpx
[20:44:34] <p-i-> I needed one cURL for speed, and just kept using it for my other calls
[20:44:38] <p-i-> but most don't need speed.
[20:44:58] <Wulf> If speed is of importance, don't use python ;-)
[20:45:16] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[20:45:19] *** Joins: han-solo (~hanish@user/han-solo)
[20:46:13] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:46:50] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[20:48:15] *** Joins: zaquest (~notzaques@5.128.210.178)
[20:49:07] <p-i-> Wulf: Awesome, requests kills it
[20:49:25] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Remote host closed the connection)
[20:49:30] *** Quits: y1n (~y1n@84-115-65-176.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[20:49:49] <shla> I have a python service with processes events received from a socket, something like: for event in socket_recv_event(): <...>, each event has a timestamp. I'd like implement simple webservice to expose process status via /health endpoint, that webservice needs to be aware of the last event timestamp that was processed, how would you propose to
[20:49:49] <shla> structure the app and what libraries to use?
[20:50:49] <Wulf> shla: quart-trio + hypercorn?
[20:51:00] *** Quits: zisu8 (~textual@p200300eab73b6c00f99c8dec4a359c1a.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:51:02] <Wulf> well, if that's http. Else trio.
[20:51:30] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Remote host closed the connection)
[20:51:43] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:51:53] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:52:06] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Client Quit)
[20:52:14] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[20:52:31] <shla> that event loop is outside webservice, I need a webservice just for exposing /health endpoint
[20:52:53] <shla> not sure how trio helps in this case.
[20:53:27] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:54:46] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[20:54:58] *** Joins: gggp (~gggp@60.10.23.160)
[20:55:05] *** Joins: mokulus (~mokulus@user/mokulus)
[20:55:43] <han-solo> shla: connect a websocket to the client ?
[20:57:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:57:18] <aphysically> well I'm basically feature complete with that bash script so I can work on nicing the code and splitting it now
[20:58:07] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[20:58:53] <aphysically> my string processing sure is ugly though https://bpa.st/U4QA so I should probably think about a better way to write that
[20:59:40] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[20:59:42] <p-i-> I'm trying to run some code on a remote linux box. I've done my pip installs. But the remote is erroring:
[20:59:46] <p-i-> "AttributeError: module 'websocket' has no attribute 'create_connection'"
[20:59:58] <p-i-> I can't figure out why it isn't finding it on the remote.
[21:00:04] <p-i-> It works perfectly well on my local macbook.
[21:00:11] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[21:00:34] <p-i-> oh it's websocket-client
[21:00:59] *** Joins: JuicyJ (~textual@pool-108-52-85-62.phlapa.fios.verizon.net)
[21:01:19] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:01:43] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:02:35] *** Joins: nomic (~nomic@185.217.117.169)
[21:03:32] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:05:36] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-71d9-8352-a788-43f1.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:06:40] *** Joins: khrbt (~znc@user/khrbt)
[21:08:35] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[21:09:07] *** Joins: montxero (~user@149.167.149.74)
[21:09:51] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[21:10:40] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[21:10:54] <raxor2k> bjs: are you here¨
[21:16:33] <shla> han-solo, no WS involved
[21:17:16] *** Joins: nomic (~nomic@185.217.117.169)
[21:17:33] *** Joins: Akuli (~Akuli@87-94-111-87.bb.dnainternet.fi)
[21:18:09] *** schumaml1 is now known as schumaml
[21:18:58] <han-solo> shla: so the client would poll the api every now and then ?
[21:19:01] *** Joins: zaz (~zaz@poneybl.eu)
[21:20:00] <Donitz> with pyaudio, you get a callback running on another thread with an array of samples from the microphone
[21:20:08] <Donitz> what's the most convenient way to get these samples quickly into the main thread
[21:20:43] <Donitz> keep in mind that it quickly becomes millions of samples
[21:22:07] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:a4a6:e084:cca:3d91) (Quit: Konversation terminated!)
[21:22:22] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:3223:5993:28c4:3167)
[21:23:31] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 252 seconds)
[21:23:31] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:23:52] *** Joins: Auron (Auron956@user/auron)
[21:25:32] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:25:42] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[21:26:14] <Donitz> umm
[21:26:16] <lesshaste> I am using textdistance but textdistance.Levenshtein("abc", "acd")  doesn't return the distance . Instead it returns Levenshtein({'qval': 'abc', 'test_func': 'acd', 'external': True})
[21:26:21] <lesshaste> how do I get the distance?
[21:26:47] <Donitz> it looks like that creates an evalulator
[21:26:49] *** Joins: mago (~mago@46.222.217.188)
[21:26:53] <Donitz> and doesn't actually evalulate the values
[21:27:03] <mago> Hello i need to reexecute a script every time it halts, how can i do that?
[21:27:03] <Donitz> you want to create the Levenshtein model first
[21:27:07] <Donitz> then call it with your data
[21:27:10] <lesshaste> Donitz,  how do you do that?
[21:27:18] <Donitz> you need to know what the qval and test func is
[21:27:28] <Donitz> or use default
[21:27:35] <Donitz> textdistance.Levenshtein()
[21:28:04] <grym> mago: a while loop?
[21:28:10] <lesshaste> ah... levenshtein works but Levenshtein doesn't
[21:28:21] <Donitz> Because Levenshstein is the class
[21:28:22] <Donitz> clearly
[21:28:26] <Donitz> and levenshtein is the func
[21:28:28] <Donitz> for running it
[21:28:28] <lesshaste> thanks
[21:28:33] <lesshaste> you saved me :)
[21:28:57] <Donitz> it's probably just so that if you want to call it a billion times with the same settings, you can create an instance of Levenshtein
[21:29:02] <mago> grym will it not mess with the command already executing before it halts?
[21:29:20] <lesshaste> Donitz, interesting.. I should learn how to do that as that is what I  want to do
[21:29:26] <Donitz> it's the same with scipy
[21:29:35] <Donitz> https://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.RegularGridInterpolator.html
[21:29:49] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:24] <grym> mago: i have no idea
[21:30:57] <Donitz> jesus google, always removing the most important search term
[21:30:59] <Donitz> like "python"
[21:31:20] <mago> grym theres only one way to find out
[21:31:32] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[21:31:41] <Donitz> can I use a Mutex to read-write numpy array in a thread
[21:33:09] *** Quits: JuicyJ (~textual@pool-108-52-85-62.phlapa.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:34:40] <mago> grym testing now, was suggested also in a forum for someone that had my same doubts thats why im risking the magic smoke
[21:35:48] *** Quits: rsx (~dummy@ppp-188-174-159-213.dynamic.mnet-online.de) (Quit: rsx)
[21:37:01] *** colorado is now known as fluiD
[21:37:16] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[21:37:48] <mago> grym works as a charm
[21:38:16] *** Quits: mago (~mago@46.222.217.188) (Quit: Client closed)
[21:41:09] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:41:35] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[21:41:50] *** Joins: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl)
[21:43:19] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 252 seconds)
[21:45:13] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 248 seconds)
[21:45:29] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Remote host closed the connection)
[21:45:45] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[21:46:46] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[21:49:11] *** Joins: korg815 (~korg815@user/korg815)
[21:49:43] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[21:50:02] <cloudbender> Link to the Blackened Playground ?
[21:50:10] <cloudbender> nevermind sorry
[21:50:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:51:20] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[21:52:22] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[21:53:25] *** Quits: montxero (~user@149.167.149.74) (Read error: No route to host)
[21:53:59] *** Joins: montxero (~user@149.167.149.74)
[21:54:15] *** Joins: gambl0re (~gambl0re@104.247.229.76)
[21:54:23] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Client Quit)
[21:54:31] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:54:41] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[21:54:44] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Remote host closed the connection)
[21:55:02] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[21:55:29] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 250 seconds)
[21:55:57] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[21:55:59] *** Joins: fortuno51 (~fortuno51@31.170.22.30)
[21:56:06] *** Quits: fortuno51 (~fortuno51@31.170.22.30) (Remote host closed the connection)
[21:56:32] <deltab> lesshaste: the object you get has methods: https://github.com/life4/textdistance#usage
[21:57:22] <deltab> https://github.com/life4/textdistance#user-content-usage
[21:58:43] *** Quits: aeon_flux (~textual@d-216-189-175-197.fl.cpe.atlanticbb.net) (Ping timeout: 252 seconds)
[21:58:47] *** Quits: kpiyushlucky (~kpiyushlu@106.223.126.32) (Quit: Client closed)
[21:59:00] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:01:09] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[22:01:26] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[22:02:33] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[22:02:44] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[22:06:36] <mjacob> is there a python gui framework using a component model similar to react?
[22:06:55] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[22:07:11] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:3223:5993:28c4:3167) (Read error: Connection reset by peer)
[22:08:10] *** Quits: gggp (~gggp@60.10.23.160) (Ping timeout: 240 seconds)
[22:08:26] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:68dd:47db:570a:ca45)
[22:10:49] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:11:14] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:12:26] *** Joins: zisu8 (~textual@p200300eab73b6c00f99c8dec4a359c1a.dip0.t-ipconnect.de)
[22:12:48] *** Joins: vodkra (~vodkra@user/vodkra)
[22:12:49] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[22:13:17] *** Quits: magla (~gelignite@55d4cf57.access.ecotel.net) (Quit: Stay safe!)
[22:14:26] *** Joins: Bardon (~Bardon@user/Bardon)
[22:15:56] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[22:16:34] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[22:17:10] *** Joins: Bardon_ (~Bardon@user/Bardon)
[22:17:41] *** Joins: kenoba (~kenoba@user/kenoba)
[22:18:56] *** Joins: anddt (~anddt@net-130-25-114-32.cust.vodafonedsl.it)
[22:19:12] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 250 seconds)
[22:20:11] *** Quits: arinov (~arinov@178.240.152.159) (Ping timeout: 250 seconds)
[22:21:47] <Luke> Hi, is there a way to get the values of variables from a [rendered] Jinja template?
[22:21:51] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[22:22:03] *** Joins: Abrax (~Abrax@user/abrax)
[22:22:11] <anddt> Not strictly Python-related: I am about to implement a few data pipelines (using Apache Airflow as the orchestrator). Does anybody have any best practice to ensure the pipelines will be idempotent (e.g running the same pipeline shouldn't generate duplicates)? The only approach I've found is a delete-write approach where data for a given day is deleted before anything gets written in the table - wondering if there's any better approach
[22:22:15] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[22:22:25] <Luke> for example, if during the execution of a template, it sets a variable to indicate what content-type the server should add to the HTTP headers
[22:22:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[22:22:48] <Payam> hi
[22:23:09] <Luke> The route handler would need to render the template and then extract the value of that variable to set the headers
[22:24:17] *** Gustavo6046_ is now known as Gustavo6046
[22:24:29] *** Joins: dontyouloveshort (~julius@ip5f5bc239.dynamic.kabel-deutschland.de)
[22:24:50] <ChrisWarrick> Luke: are you sure you need to get this information from the jinja2 template?
[22:25:20] <Luke> I'm designing a system, I'd like to put this information (or similar) in the template.
[22:25:21] <ChrisWarrick> Luke: the usual course of action would be to set the content-type in your route code, and in my experience, content-type would typically mean a different template or rendering method altogether
[22:25:35] <Luke> okay, ignore the content-type example
[22:25:50] <Luke> say perhaps it's a last-modified header
[22:26:15] <Luke> some value that the template declares or calculates during execution, that the code calling the template needs to access afterwards
[22:26:18] <ChrisWarrick> Luke: I wouldn’t consider templates that have a lot of logic in them to be a good design, templates are meant to build the displayed stuff only
[22:26:32] <Payam> This is my files. From `download_activate` I want to trigger `get_info` in `downloader.py` class. As you see the first file is a row in a list. and there will be other rows as well. So the async.run() should be run from somewhere. I have trouble triggering the async. Where do I start it? https://bpa.st/VTBA
[22:26:51] *** Joins: besnn (~besnn@user/besnn)
[22:27:29] <ChrisWarrick> Luke: and I don’t think jinja2 has a way to output any information other than the rendered html-or-such view
[22:27:37] <Luke> hrm
[22:28:29] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[22:29:03] <ChrisWarrick> Payam: You’ll need to find a thing that lets your GUI framework of choice integrate with asyncio (let asyncio use its own event loop, or use asyncio’s loop as its own)
[22:29:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[22:29:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:29:50] <ChrisWarrick> Payam: google says https://github.com/jhenstridge/asyncio-glib/ - but that last commit in 2019 doesn’t look promising
[22:30:03] <Payam> hmm
[22:30:24] <ChrisWarrick> Payam: if you don’t mind switching gui frameworks — you can use pyside2 and https://github.com/CabbageDevelopment/qasync
[22:30:28] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[22:30:34] <lxer> I have lots of json files that I use for tests. Should I use pytest @fixtures to read these files, or just access the fils directly? I mean, I don't see a difference; does using @fixtures have any advantage?
[22:30:40] <Payam> isn't pyside a qt framework?
[22:31:03] <Payam> I want to use only gtk for this project.
[22:31:14] *** Joins: rinwa (~user@141.226.14.13)
[22:31:39] *** Joins: vicfred (~vicfred@user/vicfred)
[22:31:53] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 250 seconds)
[22:32:23] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[22:33:01] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[22:33:10] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:34:37] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547)
[22:34:58] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:a94d:a4a7:1381:2130)
[22:35:30] <ChrisWarrick> Payam: it is
[22:37:13] *** Quits: dontyouloveshort (~julius@ip5f5bc239.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[22:38:10] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:6814:f90c:e967:96) (Ping timeout: 240 seconds)
[22:38:33] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[22:39:18] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[22:41:05] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[22:41:24] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[22:41:29] *** Joins: lastshell (~lastshell@user/lastshell)
[22:41:36] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[22:41:46] *** Joins: RBEL (~jigubigul@2001:1c06:19c3:7000:6d2b:7ac8:4670:a6fb)
[22:42:18] *** Joins: nomic (~nomic@185.217.117.169)
[22:42:41] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[22:46:09] <aac> hey. Im working with large numbers in python. And on debug says "loading value" and stays a lot of there...what is a good python way to large numbers?? im using a string, and then convert to int
[22:46:19] *** Parts: akoana (~ah@user/akoana) (Leaving)
[22:46:29] *** Quits: fluiD (~fluiD@161.97.231.145) (Remote host closed the connection)
[22:46:48] *** Joins: fluiD (~fluiD@161.97.231.145)
[22:47:13] *** Bardon_ is now known as Bardon
[22:47:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[22:48:10] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[22:49:24] *** Joins: emika7 (~emika@83.136.182.240)
[22:50:25] *** Quits: emika (~emika@185.207.249.195) (Ping timeout: 252 seconds)
[22:50:25] *** emika7 is now known as emika
[22:50:30] <lxer> acc , unclear what you are asking
[22:50:55] *** Quits: zisu8 (~textual@p200300eab73b6c00f99c8dec4a359c1a.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:59] <jinsun> aac: show code? not sure what you want from your question
[22:51:23] <aac> mm ok nevermind...it seemed that pycharm had a long time , assigning values on debug
[22:52:06] <aac> acutally its strange, ebcause with one var it shows the value of the variable. Meanwhile, on runtime, on appending a value to a list always gets "loading value"
[22:52:08] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[22:52:20] <lastshell> aac type(number) could be int or long depends of the size
[22:52:30] <aac> im using python3
[22:52:32] <Payam> ChrisWarrick, do you undrestand how this works: https://github.com/jhenstridge/asyncio-glib/
[22:53:16] <Payam> lastshell, does python3 still have long type?
[22:53:17] *** Joins: zisu8 (~textual@p200300eab73b6c00f99c8dec4a359c1a.dip0.t-ipconnect.de)
[22:53:46] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fd3b:470a:6a67:7e22)
[22:53:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:54:02] *** Joins: Cyp (~cyp@192038133070.mbb.telenor.dk)
[22:54:03] *** Joins: nomic (~nomic@185.217.117.169)
[22:54:13] <Payam> lastshell, never mind I was thinking about that 64bit thing
[22:54:26] <ChrisWarrick> Payam: there seem to be some examples in the issues: https://github.com/jhenstridge/asyncio-glib/issues/1
[22:54:34] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[22:55:55] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 252 seconds)
[22:56:39] *** Joins: greedom (~greedom@2001:16b8:2e23:1a00:d050:da10:3c97:d9cc)
[22:58:06] <stewie925> good morning all, looking for assistance with my issue: https://bpa.st/UALA
[22:58:22] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:00:54] <Payam> thanks ChrisWarrick
[23:01:36] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[23:02:03] <ChrisWarrick> stewie925: you can disable that pylint warning
[23:02:41] <ChrisWarrick> stewie925: and honestly, I wouldn’t pay much attention to pylint warnings raised in test suites
[23:02:44] <stewie925> ChrisWarrick:  Oh i see...
[23:02:52] <stewie925> ChrisWarrick: thank you!
[23:02:59] <ChrisWarrick> stewie925: you’re welcome!
[23:03:52] *** Joins: reset (~reset@user/reset)
[23:04:13] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[23:04:48] <stewie925> another quick question - do classes need to be defined with parameter (object), or it can just be a blank parenthesis like 'class ClassName():' ?
[23:05:07] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Ping timeout: 240 seconds)
[23:05:20] <jinsun> `class ClassName:`
[23:05:35] <jinsun> no parens required at all
[23:06:04] <stewie925> jinsun: oh... thanks!
[23:06:16] *** Joins: SuperLag (~akulbe@user/superlag)
[23:06:23] *** Joins: Celeo (~Celeo@user/celeo)
[23:07:36] <stewie925> jinsun:  so `class ClassName(object):` is pretty much the same as `class ClassName:` ?
[23:08:21] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[23:08:55] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:cdf0:ac10:aa25:a487) (Remote host closed the connection)
[23:09:04] <jinsun> yes, there was some different behavior before python3 I think, but in python3 they are same
[23:09:17] <stewie925> jinsun: thanks again!
[23:09:19] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:1cdc:45ed:1a20:c8f2)
[23:10:20] <ChrisWarrick> (in python 2, inheriting from object was the way to opt-in to new-style classes; old-style classes are gone in python 3 and so the inheriting isn't necessary anymore
[23:10:22] <ChrisWarrick> )
[23:10:51] <stewie925> ChrisWarrick: thank you!
[23:12:02] <nedbat> stewie925: btw, when you do define it with parens, ` class Something(Other):`,  Other isn't a parameter, it's the parent class
[23:12:14] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Client Quit)
[23:12:15] *** Joins: Betal (~Betal@user/betal)
[23:12:31] <stewie925> nedbat: ohhhh yes  geez
[23:12:54] <stewie925> I was out of the workforce for a year so I am brushing up on my python skills again to apply for work
[23:13:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:13:18] <grym> (the parameters are in the parens after __init__(self, ...
[23:14:02] <stewie925> grym: yes you are right - I just forgot about some python basics its humiliating
[23:14:09] <grym> no worries
[23:14:28] <stewie925> I humiliated myself lol - but thank you guys for the valuable notes
[23:14:31] *** Quits: jess (~jess@libera/staff/jess) ()
[23:14:37] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:15:19] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[23:15:54] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[23:16:57] *** Quits: anddt (~anddt@net-130-25-114-32.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[23:19:02] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[23:19:02] *** Quits: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net) (Client Quit)
[23:19:19] *** Joins: carlesso (~carlesso@c-107-3-160-43.hsd1.ca.comcast.net)
[23:19:20] *** Joins: montxero (~user@149.167.149.74)
[23:19:23] *** Joins: nomic (~nomic@185.217.117.169)
[23:19:27] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[23:19:40] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[23:21:06] *** Quits: greedom (~greedom@2001:16b8:2e23:1a00:d050:da10:3c97:d9cc) (Remote host closed the connection)
[23:21:07] *** Quits: nomic (~nomic@185.217.117.169) (Client Quit)
[23:21:37] <ens> hiya. i'm thinking of designing a basic linux gui app in python... but i'm wondering perhaps if there is a framework or such that might be friendly to beginners for this?
[23:22:04] <grym> ens: many!
[23:22:05] <ChrisWarrick> ens: well, GUI apps typically aren’t easy
[23:22:12] *** Joins: greedom (~greedom@2001:16b8:2e23:1a00:d050:da10:3c97:d9cc)
[23:22:18] <ChrisWarrick> ens: PySide would be the best framework to choose
[23:22:30] <lxer> depends on how many features you need
[23:23:23] <lxer> kivy/kivyMD might be useful. but not easy.
[23:23:50] <ens> fairly basic features. nothing fancy other than the usual widgets
[23:24:01] <ens> kivy is one that came up in my search that looked interesting alright.
[23:24:13] *** Joins: nomic (~nomic@185.217.117.169)
[23:24:16] <ens> i'll check pyside aswell. thanks folks.
[23:24:37] *** Joins: Atque (~Atque@user/atque)
[23:24:45] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[23:27:58] <ChrisWarrick> kivy might be better for something fancier than a regular gui app
[23:28:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:28:41] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[23:29:09] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[23:29:13] *** Quits: aman (~aman@user/aman) (Ping timeout: 248 seconds)
[23:29:33] <jinsun> stewie925: that pylint warning was because your method name was `setup` and not `setUp`
[23:29:46] <stewie925> oh crap
[23:29:47] *** Joins: Pickchea (~private@user/pickchea)
[23:30:06] *** Joins: lethu (~lethu@user/lethu)
[23:30:13] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:30:23] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[23:30:40] *** Quits: pro_z (~pro_z@37.214.57.50) (Ping timeout: 240 seconds)
[23:30:51] *** Joins: montxero (~user@149.167.149.74)
[23:30:55] <stewie925> jinsun:  now one issue is fixed lol
[23:31:00] <stewie925> thank youuuu
[23:31:12] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:c521:bb31:1a7f:9547) (Quit: Leaving...)
[23:31:13] <jinsun> I remembered not getting pylint warnings with unittest setUps so I had to check, I literally typed everything like you had and didn't see the setup, had to diff
[23:31:16] <stewie925> program still won't run but I will review the code
[23:31:20] *** Joins: aman (aman@user/aman)
[23:31:30] *** Joins: besnn (~besnn@user/besnn)
[23:33:30] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[23:34:25] <jinsun> I blame the Java naming in unittest here, but too late, can't be changed now
[23:34:32] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[23:34:38] <jinsun> better to just use pytest
[23:35:02] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 250 seconds)
[23:35:22] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:36:37] *** Quits: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[23:38:14] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[23:38:24] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[23:38:45] *** Joins: portalrat (~portalrat@user/portalrat)
[23:39:39] <stewie925> jinsun: hehe
[23:40:06] *** Joins: nomic (~nomic@185.217.117.169)
[23:41:02] *** Joins: y04nn (~y04nn@91.193.4.154)
[23:43:23] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[23:46:10] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fd3b:470a:6a67:7e22) (Quit: Ping timeout (120 seconds))
[23:46:12] *** Joins: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:46:53] *** Joins: ub (~Thunderbi@178.165.168.136.wireless.dyn.drei.com)
[23:48:07] *** Quits: ubert (~Thunderbi@77.119.192.190.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[23:48:07] *** ub is now known as ubert
[23:49:37] <Soni> gonna use python again, not looking forward to it. so pygit2 is much nicer to use than subprocess?
[23:49:45] *** Joins: magla (~gelignite@55d4cf57.access.ecotel.net)
[23:54:36] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[23:54:40] *** Joins: lexx (~scsi@78.157.70.196)
[23:55:08] *** Joins: thiras (~thiras@user/thiras)
[23:55:57] *** Joins: cn80 (~cn80@173.34.80.53)
[23:57:58] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[23:59:00] *** Joins: elgraz (~elgraz@151.65.9.160)
[23:59:27] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
