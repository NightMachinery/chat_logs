[00:00:14] *** Parts: teocle (~t@hex.plasm.in) ()
[00:01:41] <davidkrauser> b0nn: that's a valid point
[00:02:36] <davidkrauser> best not to depend on undefined behavior
[00:02:52] *** Joins: ham5 (iamfive@user/ham5)
[00:05:37] <davidkrauser> Another, but related topic: do you all include the `-race` flag when running automated tests? It seems like a useful thing to have on by default, but there appears to be a large performance penalty
[00:05:44] *** Quits: dr0n (~nabromov@92.40.255.115.threembb.co.uk) (Ping timeout: 256 seconds)
[00:07:59] <b0nn> I don't - but I should; in fact because you have reminded me I think I will look at the ci/cd this morning
[00:09:00] <b0nn> I /should/ because I am taking over a codebase that I know has minor issues (I have been spotting them as I go through)
[00:09:41] <b0nn> hmm, actual, if the perf cost is too onerous, why not have the race test done once / day, or once/n tests?
[00:09:55] <davidkrauser> that's a good idea
[00:09:57] *** Joins: dr0n (~nabromov@176.26.119.61)
[00:14:29] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:15:36] <Tv_> davidkrauser: consider -race like fuzzing: something that you run every now and then
[00:16:11] <Tv_> also, unit tests are probably not the best way to trigger races, stress testing is more likely to notice things
[00:18:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:20:46] *** Joins: fikran (~fikran@user/fikran)
[00:22:19] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[00:25:46] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[00:35:23] *** Joins: Hawker_ (~pi@user/hawker)
[00:36:05] *** Quits: Hawker_ (~pi@user/hawker) (Client Quit)
[00:38:17] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[00:46:17] *** Joins: johnjaye (~pi@173.209.65.233)
[00:46:22] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Quit: Leaving)
[00:48:39] *** Joins: shtirlic_ (~shtirlic@95-55-120-190.dynamic.avangarddsl.ru)
[00:51:34] *** Quits: shtirlic (~shtirlic@95-55-120-190.dynamic.avangarddsl.ru) (Ping timeout: 268 seconds)
[00:52:12] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[00:52:13] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:52:32] *** Joins: califax (~califax@user/califx)
[00:55:36] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 256 seconds)
[00:56:15] *** Quits: sheb (~sheb@31.223.228.71) (Quit: Leaving)
[00:56:22] *** Parts: ham5 (iamfive@user/ham5) ()
[01:00:23] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[01:00:45] *** Joins: axon (~x@tetra.plasm.in)
[01:04:27] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[01:05:37] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 256 seconds)
[01:07:49] <LiENUS> who puts the wiki link above the pkg.go.dev link in README.md
[01:09:33] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[01:12:22] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[01:13:26] *** Joins: Rayke (rayke@user/rayke)
[01:20:15] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d)
[01:20:31] *** Joins: knkay_ (~knkay@213.190.30.120)
[01:21:56] *** knkay_ is now known as KnKay
[01:25:04] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d) (Ping timeout: 250 seconds)
[01:26:29] *** Quits: KnKay (~knkay@213.190.30.120) (Quit: ZNC 1.8.2 - https://znc.in)
[01:26:43] *** Joins: knkay (~knkay@213.190.30.120)
[01:27:45] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[01:27:57] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 240 seconds)
[01:32:36] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[01:41:57] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 240 seconds)
[01:42:46] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[01:47:31] *** Quits: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net) (Quit: -a- Connection Timed Out)
[01:47:46] *** Joins: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net)
[01:55:37] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8c06:33d6:d16:e831) (Quit: Textual IRC Client: www.textualapp.com)
[01:56:47] *** Joins: lilgopher (~textual@2601:241:8000:38f0:95e4:f87c:8b0e:fa8c)
[01:56:58] *** Joins: tomasfarias (~tomasfari@user/tomasfarias)
[02:03:08] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Read error: Connection reset by peer)
[02:03:59] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Quit: ZNC - https://znc.in)
[02:04:04] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[02:04:19] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[02:04:22] *** Quits: lilgopher (~textual@2601:241:8000:38f0:95e4:f87c:8b0e:fa8c) (Quit: Textual IRC Client: www.textualapp.com)
[02:13:41] *** Quits: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net) (Quit: -a- Connection Timed Out)
[02:14:03] *** Joins: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net)
[02:22:32] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[02:23:34] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d)
[02:23:42] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:24:23] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:3569:f3e1:e86a:824d) (Client Quit)
[02:27:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[02:30:07] *** Joins: fikran (~fikran@user/fikran)
[02:31:11] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[02:33:04] *** Joins: smrtz (~smrtz@user/smrtz)
[02:36:03] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:39:45] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Quit: leaving)
[02:40:36] *** Quits: yaraju (~yaraju@user/yaraju) (Remote host closed the connection)
[02:41:14] *** Joins: yaraju (~yaraju@user/yaraju)
[02:44:17] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[02:46:42] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: Textual IRC Client: www.textualapp.com)
[02:46:50] *** Quits: vladoski (~foo@2001:b07:add:d406:61b1:4e8d:1a04:2a29) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:09] *** Joins: leonarth (~leonarth@user/leonarth)
[02:51:47] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Remote host closed the connection)
[02:53:21] *** Joins: sagax (~sagax_nb@user/sagax)
[02:56:45] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[03:25:01] *** Quits: johndoe1 (~John@user/johndoe1) (Ping timeout: 256 seconds)
[03:38:35] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: rebooter)
[03:39:01] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[03:42:45] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[03:48:00] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:56:27] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[04:08:34] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[04:09:18] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[04:09:34] *** Joins: crashrep (~crashrep@user/crashrep)
[04:09:51] *** Quits: defn- (~n0b0dy@user/defn) (Quit: ZNC 1.8.2 - https://znc.in)
[04:10:45] *** Joins: defn (~n0b0dy@user/defn)
[04:14:53] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[04:15:14] <rawtaz> oh man :/
[04:15:34] * rawtaz just realized that go-nuts with a bit of flipping around becomes no-guts :/
[04:15:52] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[04:16:13] <crashrep> golang = cancelled
[04:37:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:37:56] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[04:39:28] *** Joins: fikran (~fikran@user/fikran)
[04:39:41] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:39:41] *** Joins: xse (~xse@user/xse)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:31] *** Joins: jayalane (user@2600:3c01::f03c:92ff:fe7a:ef16)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:44] *** Quits: yaraju (~yaraju@user/yaraju) (Remote host closed the connection)
[04:51:08] <b0nn> rawtaz: wait, this isn't do-nuts? No wonder I haven't got my order yet
[04:51:33] *** Joins: yaraju (~yaraju@user/yaraju)
[04:58:57] *** Quits: yaraju (~yaraju@user/yaraju) (Ping timeout: 240 seconds)
[05:06:52] <jnewt> anyone try to use gopdf before?   I want to create a pdf report without using wkhtml and an intermediate html file, but I am really struggling with layout.   It's like everything is freeform coordinate based.   Are there any helpers that don't require external software installations?   I tried wkhtml which works fine except for the external software install requirement is causing issues when installing on different systems.
[05:07:52] <jnewt> and by issues, i mean it's tedious, requires path variables and downloading / installing the wkhtml software.
[05:10:17] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[05:10:33] *** Joins: yaraju (~yaraju@user/yaraju)
[05:13:11] *** Joins: arcatech (~arcatech@user/arcatech)
[05:14:59] *** Quits: yaraju (~yaraju@user/yaraju) (Client Quit)
[05:18:02] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:24:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:30:04] *** Joins: lilgopher (~textual@2601:241:8000:38f0:9852:2818:9ff9:c2aa)
[05:31:09] *** Joins: shtirlic (~shtirlic@92-100-155-33.dynamic.avangarddsl.ru)
[05:31:23] *** Joins: califax- (~califax@user/califx)
[05:31:42] <lilgopher> I just used this answer to implement a custom unmarshaller and fits perfectly what I wanted to do, but honestly I dont understand what they are doing declaring a type item inside the scope of the function and I dont understand the (*tmp)(i) casting either: https://stackoverflow.com/a/61426260/4604065
[05:34:06] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:34:06] *** califax- is now known as califax
[05:34:47] *** Quits: shtirlic_ (~shtirlic@95-55-120-190.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[05:35:10] <lilgopher> seems to be used so json.Unmarshall doesnt call UnmarshallJSON() again recursively, but I dont see how they achieve it defining the type again
[05:41:04] <LiENUS> @jnewt, i reccomend reading the fpdf documentation fpdf.org I've translated a lot of php fpdf code almost directly to gopdf code
[05:41:23] <LiENUS> but it is fairly tedious
[05:45:27] <LiENUS> is there a way to use fmt.Sprint("%v", somevar) where somevar is an interface and if interface is a boolean it gives me the numeric value instead of true/false?
[05:45:37] <LiENUS> or am i better off just adding an if statement
[05:46:28] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[05:47:17] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[05:47:19] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:48:43] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[05:48:54] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:49:24] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[05:51:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:56:24] *** Joins: Atque (~Atque@user/atque)
[05:57:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:58:40] <jnewt> LiENUS:  looking through it.    Is there a way to center text that you don't know how long / wide it will be ahead of time?
[06:03:02] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:03:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:11:37] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[06:14:37] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[06:17:09] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:20:51] *** Joins: karan (uid537552@id-537552.ilkley.irccloud.com)
[06:21:27] <LiENUS> @jnewt, justification
[06:21:39] <LiENUS> i wanna say you use the Cell functions and use center justification
[06:22:11] <LiENUS> cell functions are where things diverge from the php version btw you'll need to pay attention to the format arguments of the different cell functions vs the php cell function
[06:22:53] <LiENUS> they're as close as they can be to the php one but due to differences in the languages they had to split it into multiple
[06:28:31] *** Joins: Thedarkb1-Work (~Thedarkb@62.232.253.82)
[06:29:12] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Quit: Either rebooting or something broke.)
[06:29:12] *** Joins: califax- (~califax@user/califx)
[06:29:22] *** Quits: thatcher (~thatcher@91.110.109.236) (Ping timeout: 256 seconds)
[06:30:08] *** Joins: thatcher (~thatcher@91.110.109.236)
[06:31:38] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[06:33:54] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:33:54] *** Quits: Thedarkb2-Work (~Thedarkb@62.232.253.82) (Ping timeout: 256 seconds)
[06:33:55] *** califax- is now known as califax
[06:34:58] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Quit: Leaving.)
[06:40:57] *** Quits: jnewt (~jnewt@c-73-185-243-13.hsd1.ks.comcast.net) (Ping timeout: 240 seconds)
[06:44:29] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Ping timeout: 256 seconds)
[06:44:53] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[06:46:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:48:49] *** Joins: fikran (~fikran@user/fikran)
[06:48:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[06:55:34] *** Joins: nitrix (~nitrix@user/nitrix)
[06:55:38] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[06:56:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:59:16] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:59:50] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:07:42] *** Joins: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:07:57] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[07:10:32] *** Quits: williampiv_ (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[07:11:50] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:19:09] *** Quits: Rasline (~Android@d-132-147-23-137.sc.cpe.atlanticbb.net) (Remote host closed the connection)
[07:22:33] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:27:38] *** Joins: wlperdue (~wlperdue@ip24-254-86-223.sb.sd.cox.net)
[07:30:04] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:31:28] *** Quits: greypw254 (~greypw2@grey.pw) (Remote host closed the connection)
[07:31:44] *** Quits: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne) (Quit: No Ping reply in 210 seconds.)
[07:31:53] *** Joins: greypw254 (~greypw2@grey.pw)
[07:32:59] *** Quits: greypw254 (~greypw2@grey.pw) (Remote host closed the connection)
[07:33:15] *** Joins: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne)
[07:33:24] *** Joins: greypw254 (~greypw2@grey.pw)
[07:34:05] *** Quits: greypw254 (~greypw2@grey.pw) (Remote host closed the connection)
[07:34:29] *** Joins: greypw254 (~greypw2@grey.pw)
[07:35:17] *** Quits: greypw254 (~greypw2@grey.pw) (Remote host closed the connection)
[07:35:41] *** Joins: greypw254 (~greypw2@grey.pw)
[07:36:22] *** Quits: greypw254 (~greypw2@grey.pw) (Remote host closed the connection)
[07:40:37] *** Quits: jw4 (~jw4@user/jw4) (Ping timeout: 240 seconds)
[07:40:55] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[07:42:04] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 250 seconds)
[07:45:05] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Quit: Leaving.)
[07:49:23] *** Quits: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org) (Remote host closed the connection)
[07:50:02] *** Joins: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org)
[07:50:42] *** Quits: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org) (Remote host closed the connection)
[07:50:43] *** Quits: nathanael (~nathanael@user/nathanael) (Quit: connection reset by purr)
[07:50:57] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[07:54:31] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[08:16:37] *** Quits: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne) (Quit: No Ping reply in 180 seconds.)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:19:03] *** Joins: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne)
[08:19:38] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[08:19:54] *** Joins: jnewt (~jnewt@136.33.234.96)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:27:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:35:20] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[08:35:30] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[08:44:57] *** Joins: bluedust (~bluedust@103.160.194.145)
[08:50:57] *** Joins: et_ (~et@user/et)
[08:51:36] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[08:51:36] *** et_ is now known as et
[08:56:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:58:10] *** Joins: fikran (~fikran@user/fikran)
[09:00:17] *** Joins: bluedust_ (~bluedust@81.92.205.22)
[09:02:57] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[09:04:56] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[09:05:13] *** Joins: xse (~xse@user/xse)
[09:15:02] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[09:19:22] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[09:21:04] *** Quits: idstam (~idstam@2.68.79.111.mobile.tre.se) (Ping timeout: 256 seconds)
[09:22:59] *** Joins: idstam (~idstam@2.70.151.23.mobile.tre.se)
[09:32:21] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[09:32:49] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:33:26] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 250 seconds)
[09:35:08] *** Quits: grumb2 (~grumb@rint.osaka) (Quit: The Lounge - https://thelounge.chat)
[09:35:19] *** Joins: grumb2 (~grumb@rint.osaka)
[09:36:43] *** Joins: fef (~thedawn@user/thedawn)
[09:37:31] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[09:37:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:38:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:48:15] *** Quits: tesuji (~quassel@2a02:908:180:9500:64dc:7373:6d3:d9e5) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:48:30] *** Joins: tesuji (~quassel@2a02:908:180:9500:ccb5:e540:a362:3cbf)
[09:49:51] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[09:54:05] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[09:54:54] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[09:59:00] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Ping timeout: 250 seconds)
[10:03:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[10:08:28] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[10:08:40] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[10:13:27] *** Joins: _mikey_ (~mikey@user/mikey/x-4335048)
[10:14:54] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:17:56] *** Joins: fef (~thedawn@user/thedawn)
[10:18:56] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Read error: Connection reset by peer)
[10:19:19] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[10:24:35] *** Joins: victori (~victori@cpe-76-174-185-227.socal.res.rr.com)
[10:25:24] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[10:27:15] *** Quits: _mikey_ (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:36:17] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[10:46:29] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[10:54:51] *** Joins: Ox151 (~user@user/ox151)
[10:55:22] <Ox151> hello, i am running into a strange issue where appending to an array overwrights the previous values and just creates duplicates, here is the code https://go.dev/play/p/V2vwwzDhBLy
[10:56:39] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[11:02:17] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[11:05:03] <bpalmer> Ox151: a slice is basically a pointer, thus your [][]int32 is a slice that contains 3 references/pointers to the same slice.
[11:05:13] <Ox151> using a map and explicitly setting the index also gives same results https://go.dev/play/p/-2JuxzTlNfm
[11:05:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:05:59] <Ox151> bpalmer: thank you for the reply, so each addition needs its own address?
[11:06:13] <Ox151> since i am using the same array a, the address is always changing.
[11:06:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[11:06:38] <Ox151> the address is the same*** but the value is changing.
[11:07:05] <bpalmer> Right. You need to make a copy if you want to create new slices that use different backing arrays.
[11:07:31] *** Joins: fikran (~fikran@user/fikran)
[11:07:35] <bpalmer> as a terminology note: you're using the same *slice* a; you don't have any named arrays in your code.
[11:15:04] <Ox151> is there an easier way to make a copy of an array than looping over an appending each value? or am i over thinking it?
[11:17:28] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:18:16] <Ox151> seems b := &a changes the address value, ill try that first
[11:19:51] <bpalmer> Ox151: you could look at the copy() function.
[11:20:16] <bpalmer> I'm not sure what you're doing, but it doesn't seem sound, at first glance.
[11:20:49] <bpalmer> b := make([]int32, len(a)) ; copy(b, a) ;  states = append(states, b)   might be how I go about it.
[11:21:38] <bpalmer> or, just not mutate a at all, but create a new slice in the loop body with the new values from the previous slice
[11:22:23] <kodah-> a slice of slices might also be useful in that context, depending on if the initial slice indexes can mean anything
[11:23:36] <Ox151> i am taking an array and cycling the values to the left. I am trying to use dynamic programming to save each state after one shift so that once it cycles through all the values I have the values saved and can just directly index the cycle index I want for that current state.
[11:23:44] <Ox151> values to the right**
[11:24:15] <Ox151> ill look into copy. I tried to create a copy of a inside the loop and use that and not modify a, but i have to tinker with it some cause i am missing something.
[11:24:36] <Ox151> doing b := a give the same address to b, but doing b := &a gives different addresses
[11:27:05] <kodah-> how are you determining the addresses of each?
[11:28:08] <Ox151> fmt.Println(&a[0]) and fmt.Println(&b)
[11:28:53] <Ox151> but doing it b := &a does not allow me to do anything like *b[0] so that is not a good way, going to try copy function now
[11:29:37] <bpalmer> Ox151: you could also just separate out allocation from initialization, implicitly.
[11:29:43] <Ox151> well.. *b[0] makes sense why it doesnt work since thats two pointers
[11:30:28] <kodah-> maybe i'm misunderstanding something, but isn't the address different because that's the pointer location?
[11:30:41] <bpalmer> Ox151: grid := make([][]int32, 10); for i := 0; i < len(grid); i++ { grid[i] = make([]int32, 5); }   <-- you now have a "10x5" grid to work with; every cell in it is 0
[11:31:22] <bpalmer> Ox151: so now that you have a grid to work with, you can just change values with grid[i][j] = grid[i-1][j-1]+1  or whatever.
[11:32:59] <kodah-> hmm, pointer location is probably a poor word for it. You're now getting the address on the heap.
[11:36:30] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[11:38:56] <Ox151> bpalmer: thank you for the help, i got it to work by making a new slice inside my loop.
[11:39:46] <Ox151> kodah-: i believe pointer and address location mean the same thing, i was running into the issue of modifying one address space so when storing it into another slice, it was storing the same address and every change that happened in that address space
[11:41:09] <kodah-> you were just modifying the same slice though, from the code I saw
[11:42:45] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Read error: Connection reset by peer)
[11:43:02] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[11:43:40] <bpalmer> Ox151: it's important to distinguish between the address of a slice, and the backing array that a slice points at.
[11:43:59] <bpalmer> Ox151: you can have two completely distinct slices that share the same underlying array
[11:45:08] <bpalmer> Ox151: e.g., 'var digits[10] = {0,1,2,3,4,5,6,7,8,9}; a := digits[0:4] ; b := digits[1:4]   . If you write to b[0], and then print a, you'll see that its values have changed.
[11:45:09] *** Joins: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org)
[11:46:11] <bpalmer> Ox151: *that*'s what was tripping you up in your code; you were accessing an underlying array using the a slice, so every slice that used that same array would see the changes.
[11:47:14] <bpalmer> think of a slice like struct { p <some pointer to an underlying array>; len int; cap int }
[11:47:36] <KirkMcDonald> I think some C syntax snuck into that example there.
[11:48:54] <bpalmer> oh, oops.
[11:49:48] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:50:50] *** Joins: Batzy (~quassel@user/batzy)
[11:51:31] *** Quits: bluedust_ (~bluedust@81.92.205.22) (Remote host closed the connection)
[11:58:13] <bpalmer> (it's sad that I had to re-read my own example like 4 times to even notice, after you pointed it out)
[11:58:23] <kodah-> lol
[11:58:24] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:58:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[11:58:54] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:59:03] <kodah-> i disagree. as I've learned more languages, I start to conflate the similar ones on facade levels.
[11:59:24] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[12:00:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[12:05:20] *** Joins: smach (~savio@177.12.44.211)
[12:05:49] *** Quits: smach (~savio@177.12.44.211) (Remote host closed the connection)
[12:16:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:16:57] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[12:20:57] *** Joins: mrig (~mrig@user/mrig)
[12:30:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[12:31:38] *** Joins: rendar (~rendar@user/rendar)
[12:31:51] <b0nn> FTR 18:48 < Ox151> seems b := &a changes the address value, ill try that first  <<-- be is a pointer to the slice meta data
[12:34:07] <b0nn> b, not be
[12:36:26] *** Joins: bluedust (~bluedust@89.238.130.70)
[12:37:32] <ikke> be as it may
[12:47:22] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[12:48:05] *** Joins: dyslexicat (~dyslexica@212.253.55.84)
[12:49:40] *** Joins: shka (~herr@109.231.0.226)
[13:02:56] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 268 seconds)
[13:14:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:16:52] *** Joins: fikran (~fikran@user/fikran)
[13:16:59] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[13:16:59] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[13:16:59] *** Joins: resamvi (~resamvi@user/resamvi)
[13:29:56] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[13:40:20] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:40:40] *** Joins: mickey8 (~user@user/mickey)
[13:43:57] *** Joins: fef (~thedawn@user/thedawn)
[13:48:41] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[13:49:15] *** Joins: ugjka (~ugjka@ugjka.net)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:51:24] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[13:58:13] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[13:59:45] *** Joins: mrig (~mrig@user/mrig)
[14:00:44] *** Joins: Guest7269 (~Guest72@2401:4900:1c3c:e05e:54c0:3ec:6ba:7fac)
[14:04:25] *** Quits: Thedarkb1-Work (~Thedarkb@62.232.253.82) (Remote host closed the connection)
[14:07:39] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[14:11:16] <kodah-> https://pkg.go.dev/os/exec#LookPath The documentation states if the target contains a slash it attempts to execute it directly, but I cannot for the life of me get it to work on linux
[14:11:38] <kodah-> lol nvm
[14:12:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d502:6835:efc4:ea15)
[14:15:47] <albertito> kodah-: it says "it is tried directly", which I read as "try to see if it exists as-is, without $PATH lookup", not "executed directly"
[14:16:14] <kodah-> albertito: i forgot to make my binary executable :)
[14:16:41] <ikke> So it did try, just failed :)
[14:17:56] <albertito> but exec.LookPath it isn't _executing_ it in any case, it's just resolving the path
[14:20:05] <kodah-> it seems the binary needs executable bits set to be found by LookPath on linux
[14:20:29] <ikke> 'tried directly' sounds confusing in this case
[14:21:02] <albertito> kodah-: yeah, the permissions are what makes a file executable in linux/unix systems
[14:21:38] <albertito> https://cs.opensource.google/go/go/+/refs/tags/go1.17.6:src/os/exec/lp_unix.go;l=36  should help understand what it does/does not
[14:29:24] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[14:32:35] *** Joins: xsteadfastx (~marv@94.31.106.190)
[14:33:31] *** Quits: bluedust (~bluedust@89.238.130.70) (Remote host closed the connection)
[14:34:35] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:37:03] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[14:37:03] *** Quits: dyslexicat (~dyslexica@212.253.55.84) (Quit: leaving)
[14:40:04] *** Quits: j416 (~j416@user/j416) (Quit: o/)
[14:42:14] *** evilop is now known as pantsu
[14:44:19] *** Joins: leonarth_ (~leonarth@user/leonarth)
[14:46:43] *** Quits: leonarth (~leonarth@user/leonarth) (Ping timeout: 256 seconds)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:52:55] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:53:34] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[14:53:41] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[14:57:57] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[15:00:19] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[15:06:32] *** Quits: xsteadfastx (~marv@94.31.106.190) (Ping timeout: 240 seconds)
[15:07:41] *** Joins: j416 (~j416@user/j416)
[15:11:08] *** leonarth_ is now known as leonarth
[15:24:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:26:13] *** Joins: fikran (~fikran@user/fikran)
[15:27:34] *** Joins: mgd (~mgd@85.210.231.115)
[15:29:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d502:6835:efc4:ea15) (Ping timeout: 268 seconds)
[15:31:49] *** Quits: mgd (~mgd@85.210.231.115) (Remote host closed the connection)
[15:32:51] *** Joins: w8x0 (~w8x0@user/w8x0)
[15:33:11] *** Joins: yoonkn (~user@175.197.208.79)
[15:33:32] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:46:02] *** Quits: shtirlic (~shtirlic@92-100-155-33.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[16:03:13] *** Quits: Guest7269 (~Guest72@2401:4900:1c3c:e05e:54c0:3ec:6ba:7fac) (Ping timeout: 256 seconds)
[16:07:24] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:19:33] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[16:24:00] *** Quits: w8x0 (~w8x0@user/w8x0) (Quit: Client closed)
[16:25:18] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 260 seconds)
[16:27:31] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[16:34:17] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[16:51:39] <rawtaz> b0nn: xD
[16:53:17] *** Joins: Atque (~Atque@user/atque)
[17:21:16] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[17:26:01] *** Quits: d42 (~root@user/d42) (Quit: ZNC - http://znc.in)
[17:27:55] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[17:32:45] *** Joins: bluedust (~bluedust@103.160.194.145)
[17:33:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[17:34:36] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[17:35:35] *** Joins: fikran (~fikran@user/fikran)
[17:36:18] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:40:15] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[17:41:38] *** Joins: analogsalad (~analogsal@user/analogsalad)
[17:44:56] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[17:57:41] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[17:57:47] *** Joins: shtirlic (~shtirlic@host-63-154-66-217.spbmts.ru)
[17:59:08] *** Quits: frebib (~frebibcha@nerdhouse.io) (Quit: Bridge terminating on SIGTERM)
[18:00:05] *** Joins: frebib (~frebibcha@nerdhouse.io)
[18:02:46] *** Quits: shtirlic (~shtirlic@host-63-154-66-217.spbmts.ru) (Read error: Connection reset by peer)
[18:02:50] *** Joins: shtirlic_ (~shtirlic@host-63-154-66-217.spbmts.ru)
[18:03:20] *** Joins: d42 (~root@user/d42)
[18:19:35] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:24:18] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[18:25:10] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[18:25:27] *** Quits: moto (~moto@user/moto) (Ping timeout: 268 seconds)
[18:29:23] *** Joins: johnjaye (~pi@173.209.65.233)
[18:30:01] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:30:52] *** Joins: arkurious (~arkurious@user/arkurious)
[18:32:04] *** Joins: moto (~moto@user/moto)
[18:32:32] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[18:33:33] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:34:07] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:34:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[18:37:10] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[18:39:55] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[18:41:04] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Quit: Leaving)
[18:42:11] *** Joins: henry40408 (~henry4040@175.181.155.165)
[18:42:48] *** Quits: shtirlic_ (~shtirlic@host-63-154-66-217.spbmts.ru) (Read error: Connection reset by peer)
[18:42:53] *** Joins: shtirlic (~shtirlic@95-55-121-107.dynamic.avangarddsl.ru)
[18:45:12] *** Parts: fef (~thedawn@user/thedawn) (Leaving)
[18:45:18] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[18:49:50] *** Joins: goldfish (~goldfish@user/goldfish)
[19:02:28] *** Joins: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net)
[19:03:12] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:04:01] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[19:16:56] *** Joins: jinks (~jinks@2001:470:1f18:3aa:1d8:0:1c:34ac)
[19:17:18] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[19:19:20] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:25:00] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Quit: baakeydow)
[19:25:20] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[19:40:54] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Quit: Leaving.)
[19:43:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:44:55] *** Joins: fikran (~fikran@user/fikran)
[19:54:25] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[19:57:07] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[19:59:10] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Ping timeout: 250 seconds)
[20:13:46] *** Quits: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp) (Remote host closed the connection)
[20:20:13] <pjs> is there a good tutorial for go.work? I've got it working from the main project but in external modules (also local) when I do any build it tries to actually fetch them. So in each module I had to add a replace to the go.mod file (and I keep accidentally committing it). So I feel like I'm doing something wrong here with my workspace setup
[20:25:38] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[20:27:46] <Midjak> Hello here start learning go
[20:27:50] <fizzie> Assuming all your directories are subdirectories of the one that contains the go.work file and you have `use` directives in the go.work file for each of the modules, I _think_ the build list determined by the workspace should be used for any build. So that sounds wrong. But I don't know of a tutorial. It's so new.
[20:32:24] *** Joins: rogersm (~rogersm@90.166.180.250)
[20:32:38] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[20:43:09] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 256 seconds)
[20:44:34] <pjs> fizzie: they are not subdirs. Maybe I should be using just replace?
[20:44:36] <pjs> in go.work
[20:44:50] <pjs> I currently have use directives for the modules in question
[20:46:41] <pjs> No, similar issue. So weird
[20:48:17] *** Quits: lilgopher (~textual@2601:241:8000:38f0:9852:2818:9ff9:c2aa) (Ping timeout: 240 seconds)
[20:49:02] *** Joins: Jigsy (~Jigsy@user/jigsy)
[20:53:42] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
[20:58:13] <mickey8> hello. i have some gorilla/mux routes for api requests, and then http.FileServer(http.Dir("/dist")).ServeHTTP(w, r) to serve the static files of the system
[20:58:49] <mickey8> im trying to add a NotFoundHandler to use a custom 404 function, but the fileserver() ends up catching all the requests and the notfoundhandler is never reached
[20:59:11] <mickey8> whats killing me is that fileserver() itself will return a 404 error when it cant find the file
[20:59:17] <j416> doesn't the fileserver handler return 404 if the file is not found?
[20:59:22] <j416> right
[20:59:42] <mickey8> how do i make that setup use my own 404 handler?
[21:01:14] <j416> I'm not sure that's easily done, http.FileServer doesn't seem to expose anything to help with that.
[21:01:43] <j416> you could maybe wrap it in your own handler that checks if the path exists, and only if it does passes it on
[21:07:36] <fizzie> pjs: The way Go locates the relevant go.work file is similar to how it locates a go.mod file, by walking up the directory tree. If you're doing a build somewhere that's *not* a subdirectory of the directory go.work is in, the go.work file is ignored. And it's kind of natural: how could the tool know there's a workspace file *somewhere* on disk?
[21:09:37] <pjs> fizzie: I am doing the build in the same location where the go.work file is, but, I am building a file in ./cmd/app/main.go, but calling it from ./ (where go.work is). I know the go.work is being read because I get warning on errors in it (ie, using use and replace for the same module)
[21:10:50] <fizzie> Oh, well, by "subdirectory" I did mean to include the one with the go.work file itself as well. Where are the go.mod files in this scenario?
[21:11:40] <pjs> the main project has go.mod in the same location as go.work, then there are 3 external modules that are on the local disk, they each have a go.mod in their root folder
[21:12:32] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[21:12:53] <mickey8> j416 i found a an example online that seems like its wrapping it, so i'll try that as well
[21:13:18] <pjs> fizzie: here are the variations I've tried: https://paste.sr.ht/~petersanchez/4f72457ed5e4f1e515999600c32d8d556c9a8b80
[21:13:56] *** Joins: Thedarkb-Work (~Thedarkb@62.232.253.82)
[21:14:37] <j416> mickey8: o/
[21:17:10] <fizzie> pjs: From "I've got it working from the main project" I assumed building from the directory where the go.work file was *was* working, and the problem was when doing builds in ../carrier or somewhere not respecting the workspace file (which would be natural).
[21:17:52] <pjs> fizzie: well, it works from the main directory if I put replace in go.mod for carrier, etc.
[21:18:13] <pjs> otherwise I get errors that it can't fetch it (true, I haven't published it yet)
[21:21:03] <fizzie> Hmm, well, that's a little weird. By all logic, when you're building in ./ it should be resolving `petersanchez.com/carrier` to ../carrier as long as ../carrier/go.mod exists and specifies `module petersanchez.com/carrier` in it.
[21:23:19] <fizzie> Maybe worth noting than when building in workspace mode, `replace` directives from _all_ the go.mod files mentioned in `use` directives are supposed to be unified together and taken into account (since they all count as main modules), as well as `replace` directives from the go.work file. So optimally you wouldn't have any.
[21:25:05] *** Joins: crashrep (~crashrep@user/crashrep)
[21:26:57] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 240 seconds)
[21:28:53] *** Joins: jespada (~jespada@87.74.36.188)
[21:29:27] <pjs> Yea, that's what I thought
[21:29:52] <pjs> maybe some kinks are still being worked out in it? I updated to gotip latest on Thursday so it's pretty recent
[21:30:06] <crashrep> How should I handle compiling an old go package that doesn't have a mod initialized?
[21:30:23] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[21:30:26] <fizzie> pjs: Maybe it could have something to do with versions though. Try giving `go work sync` a go (with no replace directives anywhere, and go.work `use` directives for all the modules), it's supposed to ensure that in the `use`d modules all the go.mod dependencies depend on the right versions to use the ones that are part of the workspace.
[21:30:59] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:05] <pjs> ahhh ok, let me try
[21:31:30] <fizzie> I don't really grok the details of how versions are treated, but that's the one reason I can think of why it might be trying to fetch something even though a version exists in the workspace.
[21:31:35] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:34:29] <fizzie> crashrep: I think the reasonable options are either trying to build it in non-module-aware mode by setting the `GO111MODULE` environment variable to "off" or "auto", or doing a `go mod init the.expected/import/path` and hoping that's all you need to modularize it.
[21:34:58] <fizzie> If it has external dependencies, though, the former would involve having them in GOPATH.
[21:36:21] <crashrep> fizzie: i cloned a git repo that was a few years ago, i ran go mod init, go mod tidy, then when it ran it said i should run "go mod vendor" so I ran that, we'll see how it goes
[21:42:34] <pjs> fizzie: similar, https://paste.sr.ht/~petersanchez/05a2c542240945f276a4891d68292ba7cf0962e9
[21:42:50] <pjs> I wonder of carrier/go.mod saying "go 1.17" is the issue?
[21:42:56] * pjs tries
[21:43:44] <pjs> same.
[21:45:20] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Ping timeout: 250 seconds)
[21:46:06] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[21:46:21] <fizzie> Odd. I'd give it a try but need to look into dinner instead. It's definitely not impossible there's still bugs to be worked out though.
[21:47:05] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:50:59] <pjs> fizzie: no worries.. bien provecho (bon apetit, enjoy your meal, etc. )
[21:51:06] <pjs> thanks for the help
[21:52:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:52:27] *** Joins: bluedust_ (~bluedust@185.248.85.22)
[21:54:16] *** Joins: fikran (~fikran@user/fikran)
[21:55:57] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[21:57:08] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7343:4b4d:81a6:38d9) (Remote host closed the connection)
[21:57:19] *** Joins: zwr (~zwr@2804:d45:b966:fb00:53d8:218c:4a2e:e687)
[22:00:04] *** Joins: bluedust (~bluedust@103.160.194.145)
[22:03:15] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Ping timeout: 256 seconds)
[22:03:49] *** Quits: bluedust_ (~bluedust@185.248.85.22) (Ping timeout: 256 seconds)
[22:07:50] *** Joins: bluedust_ (~bluedust@103.160.194.145)
[22:08:02] *** Quits: bluedust (~bluedust@103.160.194.145) (Read error: Connection reset by peer)
[22:10:06] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[22:11:46] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[22:20:00] *** Quits: jnewt (~jnewt@136.33.234.96) (Ping timeout: 250 seconds)
[22:21:09] <DogHackit> Does anyone here use GoLand for an IDE and know if Air is required for live reloading in the IDE?
[22:23:43] <DogHackit> It seems that everytime I update a file, I get a mesage that "bind: address", which is the port, is already in use. I instead have to restart the container via the IDE to get it to start correctly again.
[22:32:39] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[22:35:39] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[22:36:15] <DogHackit> Hmmm... Must be just an Air/Docker/docker-compose thing, since it is happening even just in Vim.
[22:38:15] *** Joins: smrtz (~smrtz@user/smrtz)
[22:38:25] <pinky_> Cannot use 'upp.MessageDataID' (type MessageDataID) as the type byte
[22:38:45] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:48] <pinky_> it's a type alias of uint8 though .. or is it an alias?
[22:38:55] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:39:01] <pinky_> type MessageDataID uint8
[22:40:21] <pinky_> i guess where i use it i can just put byte() around it
[22:40:25] <foobaz> go has a very strict typing system, you need an explicit type conversion
[22:40:51] <foobaz> it will do implicit conversions for constants but not variables
[22:41:19] <pinky_> ah, these are constants though
[22:41:31] <pinky_> const (
[22:41:32] <pinky_> 	MDIDNull                MessageDataID = iota // Null
[22:41:34] <pinky_> etc ..
[22:41:40] <fizzie> Well, specifically untyped constants.
[22:41:45] <pinky_> ahh :)
[22:42:06] <pinky_> i guess thats why i assumed it would work
[22:42:15] <pinky_> but maybe last time i did this i just used int or something
[22:42:30] <foobaz> would it be possible to change the function expecting byte to expect a MessageDataID instead?
[22:42:38] <fizzie> And yeah, `type MessageDataID uint8` is a type *definition*, not a type *alias*. There are actual type aliases as well (that don't define a new type, just a new name; `type foo = bar`), but they're generally not used.
[22:43:10] <pinky_> thats what i did but the MessageDataID gets appended to another []byte where things that are not the MessageDataID get added
[22:43:44] <pinky_> anyway the type conversion where i use it is fine
[22:44:03] <pinky_> in the struct that it gets assigned to, that is a MessageDataID
[22:44:11] <pinky_> so i guess that all makes perfect sense and is as it should be
[22:44:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:44:41] <pinky_> i.e.,
[22:44:42] <pinky_> 	msgData = append(msgData, byte(upp.MessageDataID))
[22:44:42] <pinky_> 	msgData = append(msgData, upp.MessageData...)
[22:44:43] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[22:44:49] *** Joins: crashrep (~crashrep@user/crashrep)
[22:44:51] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[22:45:40] <pinky_> fizzie: why would you use the alias over the definition?
[22:46:10] *** Joins: jnewt (~jnewt@c-73-185-243-13.hsd1.ks.comcast.net)
[22:46:12] <fizzie> They're canonically intended for making it easier to refactor code when moving things around.
[22:46:38] <pinky_> ahh
[22:46:39] <fizzie> Or at least that was the motivation for the proposal: https://go.googlesource.com/proposal/+/master/design/18130-type-alias.md
[22:47:32] <fizzie> (So you can move a type, but leave an alias behind so that usages can be migrated in smaller chunks.)
[22:47:49] *** Quits: analogsalad (~analogsal@user/analogsalad) (Quit: bye)
[22:48:11] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[22:54:42] <pinky_> argh, i guess i have to use a pointer to a uint8 so i can differentiate nil from 0
[22:55:19] <pinky_> i wish there was a way to write a literal that makes an int pointer
[22:55:39] <pinky_> i guess a function :(
[22:56:28] <fizzie> There is/was a proposal to extend `new` to allow something like `new(int, 123)` to get a pointer at an int with the value 123.
[22:56:33] <fizzie> Haven't checked what's up with that.
[22:56:44] <pinky_> that'd be nice
[22:56:47] <fizzie> (Also, there *are* expressions that you could write, they're just pretty ridiculous.)
[22:57:24] <pinky_> i already have this in my code :D upp.ControlWord.Unpack(*(*[2]byte)(v[0:2]))
[22:57:28] <pinky_> go is going to become perl :(
[22:58:04] <fizzie> Yeah, well, `&(&[1]int{123})[0]` would be even worse.
[22:58:17] <pinky_> yeah 😱
[23:00:20] <jnewt> https://go.dev/play/p/tnBoTV9GnSn  trying to put a block of text which has line breaks in the top right corner of the pdf with the start of each line.   css would be something like display:block; float:right; text-align:left;  but it doesn't seem to translate.
[23:00:31] <fizzie> The Go protobuf API involves a lot of *int32, *int64, *uint32, *uint64 and *string values as struct fields, so it provides functions for all of those of the form `func String(v string) *string` and so on. Using them outside the scope of protos would be pretty weird though. And it's not all the types.
[23:02:51] *** Joins: ashley_ (~ashley@ool-44c6903d.dyn.optonline.net)
[23:03:52] <jnewt> all i get is a single line ("\n"s are ignored) starting in the upper left of the page
[23:06:51] *** Joins: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it)
[23:06:54] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[23:06:54] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[23:06:54] *** Joins: tane (~tane@user/tane)
[23:08:13] <ikke> If I do fmt.Printf("%#v\n", dir), I get `&os.File{file:(*os.file)(0xc000508ea0)}`. But when I then do: fmt.Printf("%s\n", dir.Name()), it fails to build with: dir.Name undefined (type http.File has no field or method Name)
[23:08:55] <ikke> How come it reports to be an os.File, but then says it's an http.File?
[23:08:59] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[23:09:25] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[23:10:12] <foobaz> http.File is an interface, os.File is a concrete type
[23:10:24] *** Joins: m4v1s (~mavis@184-96-8-196.hlrn.qwest.net)
[23:10:24] <ikke> oh, ofcourse
[23:13:00] <ikke> Fun, tests that fail because they assume a certain directory in /tmp/ does not exist :D
[23:26:28] <ikke> mkdir /tmp/etc and the caddy testsuite failes
[23:33:44] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Remote host closed the connection)
[23:41:24] *** Joins: arcatech (~arcatech@user/arcatech)
[23:45:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:51:12] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[23:53:29] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[23:55:36] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[23:59:20] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
