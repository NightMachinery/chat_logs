[00:00:01] *** Joins: sokan (~sokan@2a02:587:9e11:bc00:227:eff:fe16:865d)
[00:00:32] *** Quits: malina (~malina@user/malina) (Quit: malina)
[00:02:33] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:04:37] *** Joins: geeknix (~pi@2001:e68:5432:153f:a117:e5bd:94ba:3d25)
[00:08:23] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[00:10:31] *** Joins: jellie (~luv_panda@user/jellie)
[00:11:45] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 248 seconds)
[00:12:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[00:15:23] *** Quits: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3) (Ping timeout: 260 seconds)
[00:16:01] *** Joins: rgrinberg (~textual@177.248.158.166)
[00:18:55] *** Joins: rawley (~rawley@142.99.241.242)
[00:20:37] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[00:22:29] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6)
[00:22:29] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6) (Changing host)
[00:22:29] *** Joins: skapata (~Skapata@user/skapata)
[00:27:57] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:28:24] *** Joins: Viewday1152 (~Viewday@user/viewday)
[00:29:15] *** Joins: travankor (travankor@user/travankor)
[00:29:50] *** Quits: alch (~alch@151.36.228.198) (Read error: Connection reset by peer)
[00:29:58] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:29:58] *** Viewday1152 is now known as Viewday115
[00:30:23] *** Quits: ekathva (~ekathva@2001:999:250:8f1f:9d72:5a3d:d0:fe01) (Quit: Leaving)
[00:31:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[00:32:53] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 260 seconds)
[00:33:34] *** Joins: Ox000 (~jy@74.215.12.46)
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 246 seconds)
[00:34:23] *** Joins: alch (~alch@151.34.90.94)
[00:36:40] *** Joins: Ren5050 (~Ren5050@190-199-157-42.dyn.dsl.cantv.net)
[00:37:20] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:38:45] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:40:57] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[00:42:46] *** Quits: tech_exorcist (13203@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[00:45:05] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:47:11] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[00:47:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:47:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:49:47] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:50:04] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[00:50:24] *** Lord_of_Life_ is now known as Lord_of_Life
[00:53:27] *** Quits: Ren5050 (~Ren5050@190-199-157-42.dyn.dsl.cantv.net) (Quit: Client closed)
[00:57:39] *** Quits: V (~v@anomalous.eu) (Changing host)
[00:57:39] *** Joins: V (~v@ircpuzzles/2022/april/winner/V)
[00:58:59] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[01:01:43] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Changing host)
[01:01:43] *** Joins: yano (~yano@ircpuzzles///////////somanyslashes)
[01:01:50] *** Quits: yano (~yano@ircpuzzles///////////somanyslashes) (Changing host)
[01:01:50] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[01:03:02] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[01:03:31] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.5)
[01:04:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[01:07:24] *** Quits: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 240 seconds)
[01:09:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:11:22] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[01:12:08] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com) (Remote host closed the connection)
[01:12:45] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com)
[01:12:47] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[01:14:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 256 seconds)
[01:15:11] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[01:15:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[01:17:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:17:48] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 260 seconds)
[01:18:59] *** Joins: Telvana (~capo@user/telvana)
[01:19:29] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com)
[01:20:15] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[01:21:45] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:21:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[01:23:03] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com) (Ping timeout: 260 seconds)
[01:23:37] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:25:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Ping timeout: 272 seconds)
[01:25:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:26:25] *** Joins: Telvana (~capo@user/telvana)
[01:26:31] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:27:05] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[01:30:31] *** Joins: Posterdati (~posterdat@user/Posterdati)
[01:32:54] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[01:33:53] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[01:43:16] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:43:19] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:43:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:43:58] *** Joins: noteness (~noteness@user/noteness)
[01:44:54] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[01:47:09] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[01:50:17] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:51:39] *** Joins: brius56 (~brius56@94.134.236.50)
[01:54:00] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:54:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:32] *** Quits: ko (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[01:57:56] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 246 seconds)
[01:58:51] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[02:00:41] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[02:03:45] *** Quits: brius56 (~brius56@94.134.236.50) (Ping timeout: 248 seconds)
[02:03:59] *** Quits: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:6426:70fb:fe7b:46b6) (Quit: Leaving)
[02:04:43] *** Joins: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net)
[02:06:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:08:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[02:10:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:12:07] *** Joins: vicfred (~vicfred@user/vicfred)
[02:18:23] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[02:23:53] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[02:24:04] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[02:25:35] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:31:37] *** Quits: trn (jhj@sourcehut/user/trn) (Quit: trn)
[02:31:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:aabd:edaf:cb83:4282) (Ping timeout: 240 seconds)
[02:33:31] *** Quits: brad_mssw|mac (~bhouse@99-101-56-67.lightspeed.jcvlfl.sbcglobal.net) (Quit: Leaving)
[02:36:29] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com) (Read error: Connection reset by peer)
[02:36:48] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 252 seconds)
[02:37:03] *** Quits: om3ga (~oz@46.49.41.80) (Remote host closed the connection)
[02:37:09] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com)
[02:37:13] *** Joins: ozzz (~oz@46.49.41.80)
[02:41:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[02:43:17] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:45:31] *** AbleBacon_ is now known as AbleBacon
[02:45:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[02:46:14] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 246 seconds)
[02:47:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:48:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[02:48:15] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[02:49:10] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:49:23] *** Joins: jeffz (~user@lambda.xen.prgmr.com)
[02:49:56] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:67d2:d391:3f5:bf92) (Quit: WeeChat 3.4.1)
[02:50:24] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:f37c:486d:e6c4:36d4)
[02:50:26] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:50:37] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[02:52:19] *** Joins: rgrinberg (~textual@177.248.158.166)
[02:52:40] <jeffz> anyone remember a single file implementation of the J or K programming language, in C?  Dated sometime before 2008.  searching fails me.
[02:53:51] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[02:55:35] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:55:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:57:22] *** Quits: zaratustra (~zaratustr@idlerpg/player/zaratustra) (Quit: 93,93/93!)
[02:59:02] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:17] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:59:53] *** Quits: adip (~adip@deu228.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[03:00:52] *** Quits: Akuli (~Akuli@87-94-108-212.bb.dnainternet.fi) (Quit: Akuli)
[03:01:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:05:09] *** Joins: nbits (~nbits@user/nbits)
[03:06:59] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:816b:2899:d068:2f42)
[03:12:27] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[03:14:48] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[03:15:31] <parrott> What difference does the number of files make?
[03:16:17] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 248 seconds)
[03:17:15] *** Quits: nbits (~nbits@user/nbits) (Quit: Leaving)
[03:18:23] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:19:09] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:20:50] *** Joins: vin (~vin@user/crash)
[03:21:42] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[03:22:05] <omegatron> he is obviously searching for a variant, which only consists of one file ..
[03:22:06] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[03:22:13] <vin> Is there a way to force glibC memcpy to use ntstores? I see that if copy size is greater than 32 MiB than it triggers mvntdqu but I would like to use it for smaller sizes as well
[03:22:30] <omegatron> it was therefore a search predicate  =D
[03:23:04] *** Joins: jkl (~jkl@user/jkl)
[03:23:18] <jeffz> parrott: only that someone would remember it that way
[03:23:54] <parrott> Ah ok.  I've seen the one file thing before
[03:24:11] <parrott> omegatron: obviously
[03:25:15] <omegatron> vin: sure, make your own glibc fork with this feature and use that
[03:26:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[03:28:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:30:05] *** Joins: nahcetan (~nate@98.45.152.91)
[03:30:18] *** Quits: n8chan (~nate@98.45.152.91) (Ping timeout: 272 seconds)
[03:30:49] *** Joins: cx_ (~cx@user/cx)
[03:33:48] *** Joins: pizdets (~pizdets@183.182.111.118)
[03:34:09] *** Quits: pizdets_ (~pizdets@183.182.115.90) (Ping timeout: 265 seconds)
[03:34:25] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[03:34:40] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[03:34:42] *** Quits: cx_ (~cx@user/cx) (Client Quit)
[03:46:33] *** Joins: seninha (~seninha@user/seninha)
[03:47:59] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[03:48:18] *** Joins: immibis (~hexchat@62.156.144.218)
[03:48:29] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[03:50:07] *** Joins: Torr (~Torr@user/torr)
[03:50:35] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[03:52:29] <pragma-> cat *.c > onefile.c
[03:52:32] <pragma-> bam
[03:54:56] <jeffz> if Zhivago were here, he'd remember
[03:56:52] *** Joins: teepee (~teepee@openscad/teepee)
[03:58:48] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 260 seconds)
[04:03:25] <Bou> "bam" ... and hope they have all their includes and header guards right so the order doesn't matter
[04:11:31] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:12:04] *** Joins: hub (~hub@user/hub)
[04:13:21] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[04:13:42] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:13:46] <SamuelMarks> hi
[04:14:07] <SamuelMarks> How do I create an AST in C, for C, then emit C from that?
[04:14:14] * SamuelMarks is looking for a library rather than writing his own
[04:16:46] <nitrix> C's grammar is notoriously annoying to work with because it is context-sensitive. Something like (A)*(B) could be either a multiplication or an indirection with a cast, depending on whether the identifier A is for a type.
[04:16:49] *** Joins: vitimiti_ (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[04:17:23] <Xgc> or expand due to some odd macro usage.
[04:17:47] *** Quits: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993) (Read error: Connection reset by peer)
[04:18:36] <SamuelMarks> Yeah that's why I'd prefer to use someone else's implementation rather than to start from scratch
[04:18:44] *** Joins: inversed (~inversed@94.13.111.159)
[04:18:50] <nitrix> By the time you can parse C properly, with all the other translation phases, you already have half a compiler.
[04:18:56] <SamuelMarks> (also so I can concentrate on the problems I want to solve with it… only found out today that LLVM LibClang/LibTooling can't do it
[04:19:04] *** Quits: inversed_ (~inversed@94.13.111.159) (Ping timeout: 272 seconds)
[04:19:39] <SamuelMarks> At worst I'll follow this guide step-by-step, looks easy to follow - https://norasandler.com/2017/11/29/Write-a-Compiler.html - also I have the dragon book I've been meaning to get through
[04:24:46] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[04:28:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:29:15] *** seifeslimene_ is now known as seifeslimene
[04:30:07] <pragma-> SamuelMarks: clang's llvm framework has a lot of support for emiting asts and whatnot
[04:30:11] *** Joins: Wulf (~Wulf@user/wulf)
[04:31:03] *** Joins: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro)
[04:31:28] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[04:31:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:32:38] *** Quits: alch (~alch@151.34.90.94) (Ping timeout: 246 seconds)
[04:32:39] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:816b:2899:d068:2f42) (Quit: Quit)
[04:34:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[04:34:41] *** Joins: alch (~alch@151.34.22.134)
[04:34:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:34:52] <SamuelMarks> pragma- - Yes but not for creating an AST from nothing, manipulating it, then emitting it
[04:35:14] <Bou> https://hal.archives-ouvertes.fr/hal-01633123/ this grammar seems to be pretty accurate, though "not formally verified"
[04:35:16] <candide> Title of Bou's link: A Simple, Possibly Correct LR Parser for C11 - Archive ouverte HAL
[04:36:57] *** Joins: cleverrness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[04:37:24] *** Joins: TVH76773 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net)
[04:37:29] *** Joins: shadowchaser9 (~Shadowcha@liox.eu)
[04:37:33] *** Quits: aosync (~aws@mx1.aosync.me) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: Ap3 (~ape@kanonenjagd.panzer.ninja) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: Dijky (~Dijky@user/dijky) (Ping timeout: 256 seconds)
[04:37:36] *** Joins: SoF9 (~skius@user/skius)
[04:37:37] *** Joins: Retr0id8 (~Retr0id@user/retr0id)
[04:37:41] *** Joins: haliucinas7 (~d5c5a67e@5.20.153.21)
[04:37:47] *** Joins: jancoow9 (~jancoow@user/jancoow)
[04:38:07] *** Quits: Jenna64bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[04:38:08] *** Quits: kfv (~kfv@mail.kfv.io) (Read error: Connection reset by peer)
[04:38:09] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[04:38:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Read error: Connection reset by peer)
[04:38:14] *** Quits: dac (~dcx@user/dac) (Remote host closed the connection)
[04:38:17] *** Quits: meowray (~MaskRay@li683-166.members.linode.com) (Remote host closed the connection)
[04:38:20] *** Joins: kfv (~kfv@mail.kfv.io)
[04:38:22] *** Quits: LIERO (~no@user/liero) (Remote host closed the connection)
[04:38:27] *** Joins: Dijky (~Dijky@user/dijky)
[04:38:27] *** Joins: \u (MaskRay@2600:3c01::f03c:91ff:fea1:e018)
[04:38:32] *** Quits: blinky42 (~quassel@user/blinky42) (Read error: Connection reset by peer)
[04:38:34] *** Joins: dcx (~dcx@user/dac)
[04:38:38] *** Joins: LIERO (~no@vmi473477.contaboserver.net)
[04:38:41] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: gravndal (~weechat@user/ravndal) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: RuotsalainenO (~weechat@kkivimaki.fi) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: gdarko (~me@dg.mk) (Ping timeout: 256 seconds)
[04:38:54] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (Quit: No Ping reply in 180 seconds.)
[04:38:54] *** Quits: SoF (~skius@user/skius) (Read error: Connection reset by peer)
[04:38:54] *** Quits: TVH7677 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net) (Write error: Connection reset by peer)
[04:38:54] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[04:38:54] *** SoF9 is now known as SoF
[04:38:54] *** Retr0id8 is now known as Retr0id
[04:38:55] *** TVH76773 is now known as TVH7677
[04:38:59] *** Quits: shadowchaser (~Shadowcha@liox.eu) (Read error: Connection reset by peer)
[04:39:03] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[04:39:03] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[04:39:05] *** Joins: mattgirv (quassel@apps.fossgalaxy.com)
[04:39:06] *** Joins: joev (~joev@user/joev)
[04:39:15] *** Quits: haliucinas (~d5c5a67e@5.20.153.21) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: van (~van@mx.nocebo.space) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: AStorm (astralstor@bc01n02.hswaw.net) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: leosilva (~leosilva@canonical/leosilva) (Ping timeout: 256 seconds)
[04:39:15] *** haliucinas7 is now known as haliucinas
[04:39:15] *** jancoow9 is now known as jancoow
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:32] *** Joins: RuotsalainenO (~weechat@kkivimaki.fi)
[04:39:41] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[04:39:41] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:39:41] *** Joins: blinky42 (~quassel@user/blinky42)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[04:39:43] *** Joins: gravndal (~weechat@user/ravndal)
[04:39:52] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:40:17] *** Joins: AStorm (astralstor@bc01n02.hswaw.net)
[04:40:24] *** Joins: gdarko (~me@dg.mk)
[04:40:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:40:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:40:34] *** Joins: wroathe (~wroathe@user/wroathe)
[04:40:59] *** Joins: bdt (~bdt@2a01:799:39f:9d00:e65f:1ff:fe08:8a88)
[04:41:15] *** Joins: g2anj (~v@58.228.230.4)
[04:41:35] *** Joins: rgrinberg (~textual@177.248.158.166)
[04:42:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: pinheadmz (~pinheadmz@hns-contributor.dev) (Ping timeout: 256 seconds)
[04:42:58] *** Joins: Brewster_ (~Brewster@us.8bitshort.com)
[04:43:02] *** Joins: AsenMx (~asen@user/asenmx)
[04:43:13] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: sivoais (~zaki@199.19.225.239) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: mattroelle (~Matt_Roel@funbox.mattroelle.com) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: roue (~roue@097-086-244-045.res.spectrum.com) (Ping timeout: 256 seconds)
[04:43:41] *** Joins: antizeus (~Euler@138.204.24.99)
[04:43:47] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Brewster (~Brewster@us.8bitshort.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: eau (~chat@user/eau) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: mrec_ (~markus@user/mrec) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: rick123 (~rick123@157.245.192.96) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: ReimuHakurei_ (~Reimu@raphi.vserver.alexingram.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: clarity (~clarity@user/clarity) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: v4mp (~v4mp@user/v4mp) ()
[04:43:57] *** Joins: derelict (~derelict@user/derelict)
[04:44:11] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[04:44:21] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: APic (apic@apic.name) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: snappy (~snappy@user/snappy) (Ping timeout: 256 seconds)
[04:44:31] *** Joins: pinheadmz (~pinheadmz@hns-contributor.dev)
[04:44:54] *** Joins: roue (~roue@097-086-244-045.res.spectrum.com)
[04:45:04] *** Joins: sivoais (~zaki@199.19.225.239)
[04:45:13] *** Joins: ReimuHakurei (~Reimu@raphi.vserver.alexingram.net)
[04:45:14] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[04:45:17] *** Joins: mattroelle (~Matt_Roel@funbox.mattroelle.com)
[04:45:24] *** Joins: mrec (~markus@sundtek.de)
[04:45:25] *** Joins: rick123 (~rick123@157.245.192.96)
[04:45:25] *** Joins: eau (~chat@user/eau)
[04:45:29] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:45:34] *** Joins: sandman13 (sandman13@sandman13.jujube.ircnow.org)
[04:45:37] *** Joins: clarity (~clarity@user/clarity)
[04:45:39] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[04:46:00] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[04:46:16] *** Joins: Thedarkb (~Thedarkb@92.40.196.0.threembb.co.uk)
[04:47:06] *** Joins: CalimeroTeknik (~calimero@ctkarch.org)
[04:47:42] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:51:57] *** Joins: van (~van@mx.nocebo.space)
[04:52:13] *** Joins: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi)
[04:52:21] *** Joins: leosilva (~leosilva@canonical/leosilva)
[04:54:11] *** Joins: begriffs (~begriffs@user/begriffs)
[04:55:22] <parrott> bip
[04:56:07] *** Joins: Ekho (~Ekho@user/ekho)
[04:56:26] *** Joins: APic (~apic@apic.name)
[04:56:53] <pragma-> BAM!
[04:57:42] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[04:57:49] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[04:57:56] *** Joins: snappy (~snappy@user/snappy)
[04:59:54] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[05:02:10] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[05:02:12] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:03:23] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com) (Ping timeout: 256 seconds)
[05:06:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:07:50] <cuppajoe> When the correct number of arguments are supplied, why is `if ((*argv)[0] == '-')` causing a segfault?
[05:10:13] <fizzie> Perhaps an off-by-one error has moved the `argv` pointer to point at the list-terminating null pointer. But why guess? Check the value of `argv` at the point of segfault in a debugger.
[05:11:22] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:11:39] <cuppajoe> I did try that, and it was bring up garbage values from elsewhere on my system. Before I check the first character, I also do `while (++argv != NULL)` to move argv past the first argument. It seems this step causes the segfault in the next statement.
[05:12:31] <cuppajoe> And in the debugger, I can see that it segfaults on the first iteration.
[05:12:57] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:13:03] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[05:13:06] <fizzie> `while (++argv != NULL)` shouldn't really end ever.
[05:13:22] <fizzie> Because you don't get a *pointer* to be null by incrementing it, unless you increment it a whole lot.
[05:13:22] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:13:41] <fizzie> If you want to move argv past the *first* argument, that's just `argv++`, no loops involved.
[05:14:04] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Client Quit)
[05:14:27] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:14:46] <cuppajoe> So then if I want to parse each argument, how should I advance the pointer?
[05:15:08] <fizzie> By a single ++ each time you want it to advance to the next argument.
[05:16:18] *** Quits: antizeus (~Euler@138.204.24.99) (Remote host closed the connection)
[05:16:19] <fizzie> ,cc while (*argv) { printf("[%s] ", *argv); argv++; } -args="foo bar baz"
[05:16:21] <candide> fizzie: [/home/vm/59732/prog] [foo] [bar] [baz]
[05:17:05] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 246 seconds)
[05:17:50] <fizzie> Or other similar constructions, or by using argc for driving the loop. That version is stopping at the null pointer at the end of the list, but the key difference is that it tests whether `*argv` is null, not whether `argv` is null.
[05:18:18] *** Joins: rgrinberg (~textual@177.248.158.166)
[05:18:56] <pragma-> ,cc while (*argv) { printf("[%s] ", *argv); argv++; } -args="'foo bar' baz" // just making sure
[05:18:58] <candide> pragma-: [/home/vm/59812/prog] [foo bar] [baz]
[05:19:17] <cuppajoe> Okay, I think I understand now.
[05:21:12] <cuppajoe> Wait, but why would ++argv; (*argv)[0]....; segfault on the first iteration?
[05:22:41] <cuppajoe> Oh, I guess it doesn't, I just tried it...
[05:22:54] <fizzie> It wouldn't, if there are any arguments provided.
[05:22:58] <fizzie> ,cc ++argv; printf("%c", (*argv)[0]); -args=foo
[05:23:01] <candide> fizzie: f
[05:23:22] <fizzie> ,cc ++argv; printf("%c", (*argv)[0]); // it would if argc == 1, of course
[05:23:24] <candide> fizzie:  runtime error: load of null pointer of type 'char'   Program received signal SIGSEGV, Segmentation fault in main (argc=1, argv=0x7fffffffe430) at statement: printf("%c", (*argv)[0]);
[05:23:57] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[05:24:12] *** Joins: relight (~relight@user/relight)
[05:24:42] <cuppajoe> Hmm, okay. Thanks for the help :)
[05:26:56] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[05:28:07] *** Joins: Upsite (~Upsite@155.135.55.233)
[05:30:02] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 246 seconds)
[05:31:26] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[05:32:07] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:34:00] *** Joins: Viewday1156 (~Viewday@user/viewday)
[05:34:36] *** Quits: haniaF (~haniaF@79.191.93.146.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:35:03] *** Quits: Upsite (~Upsite@155.135.55.233) (Quit: Client closed)
[05:35:38] *** Joins: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl)
[05:35:57] *** Joins: vysn (~vysn@user/vysn)
[05:35:59] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[05:35:59] *** Viewday1156 is now known as Viewday115
[05:36:49] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:37:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:39:33] *** Joins: Church (~aleph@72.80.0.136)
[05:40:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:42:55] *** Quits: Ox000 (~jy@74.215.12.46) (Quit: leaving)
[05:42:59] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a022:1434:f490:bc25)
[05:43:17] *** Joins: Ox000 (~jy@74.215.12.46)
[05:44:44] *** Quits: haniaF (~haniaF@79.191.100.214.ipv4.supernova.orange.pl) (Ping timeout: 246 seconds)
[05:45:22] *** Joins: haniaF (~haniaF@79.191.91.134.ipv4.supernova.orange.pl)
[05:53:50] *** Joins: fwg (~fwg@user/fwg)
[05:56:31] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:56:47] <SamuelMarks> Bou - Yeah I'm scrolling through that now. Not a terrible idea, still would need to write my own prettyprinter though I'm assuming
[05:57:58] * SamuelMarks quotes https://hal.archives-ouvertes.fr/hal-01633123 in response to my question on creating an AST in C code for C code, then emitting that as C code
[05:58:00] <candide> Title of SamuelMarks's link: A Simple, Possibly Correct LR Parser for C11 - Archive ouverte HAL
[05:58:02] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 246 seconds)
[05:59:45] * SamuelMarks found the link in the references - https://github.com/jhjourdan/C11parser
[05:59:46] <candide> Title of SamuelMarks's link: GitHub - jhjourdan/C11parser: A correct C89/C90/C99/C11/C18 parser written using Menhir and OCaml
[05:59:47] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a022:1434:f490:bc25) (Quit: Quit)
[06:01:23] *** Quits: parrott (~parrott@2607:fb90:1776:3402:0:53:4f3:b501) (Read error: Connection reset by peer)
[06:01:41] *** Joins: parrott (~parrott@158-59-127-107.net.arlingtonva.us)
[06:03:27] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:09:34] <seifeslimene> ,help
[06:09:34] <candide> For general help, see <https://github.com/pragma-/pbot/tree/master/doc>. For help about a specific command or factoid, use `help <keyword> [channel]`.
[06:12:58] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 260 seconds)
[06:16:44] *** Joins: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[06:17:44] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[06:19:00] *** Quits: Inline (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:22:55] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:25:06] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 272 seconds)
[06:27:26] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[06:32:16] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[06:34:07] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[06:35:23] *** Joins: zer0x (~zer0x@1.55.254.166)
[06:37:30] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[06:38:58] *** Joins: acidtonic_ (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net)
[06:39:20] *** Quits: geezabiscuit (~Geezabisc@user/geezabiscuit) (Ping timeout: 246 seconds)
[06:39:23] *** Quits: towel_ (~towel@user/towel) (Ping timeout: 256 seconds)
[06:39:35] *** Joins: Goodbye_Vincent1 (cyvahl@freakshells.net)
[06:40:09] *** Quits: goblin (~jaa@yatima.uukgoblin.net) (Read error: Connection reset by peer)
[06:40:16] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[06:40:17] *** Quits: Torr (~Torr@user/torr) ()
[06:40:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:40:22] *** Joins: DCTWD- (~dc@uz.utmappro.com)
[06:40:29] *** Joins: nkiz (~nki@adsl-89-217-141-227.adslplus.ch)
[06:40:30] *** Joins: Torr (~Torr@user/torr)
[06:40:31] *** Quits: theFr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: nkiz- (~nki@adsl-89-217-141-227.adslplus.ch) (Ping timeout: 256 seconds)
[06:40:46] *** Joins: towel (~towel@user/towel)
[06:41:05] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: DCTWD (~dc@uz.utmappro.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[06:41:05] *** Goodbye_Vincent1 is now known as Goodbye_Vincent
[06:41:39] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: acidtonic (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 256 seconds)
[06:41:44] *** Joins: geezabiscuit (~geezabisc@user/geezabiscuit)
[06:42:15] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[06:42:27] *** Joins: theFr1nge (~Fr1nge@ip-92-205-18-51.ip.secureserver.net)
[06:42:58] *** Joins: klys (~mdasoh@show.op8.us)
[06:43:03] *** Joins: tusko (~yeurt@user/tusko)
[06:43:19] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[06:47:09] *** Joins: aosync (~aws@mx1.aosync.me)
[06:53:10] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:30] *** Joins: rgrinberg (~textual@177.248.158.166)
[06:54:48] *** Quits: trumae (~trumae@2804:18:86e:cd79:1:0:4570:9f01) (Remote host closed the connection)
[06:55:28] *** Joins: Chaser (~Chaser@user/chaser)
[06:57:47] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Remote host closed the connection)
[07:01:35] *** Joins: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008)
[07:01:40] *** Joins: soapsudsxx (~soapsudsx@141.193.188.147)
[07:09:17] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[07:10:52] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:10:55] *** Quits: z14 (~alzee@user/alzee) (Remote host closed the connection)
[07:12:16] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.174)
[07:13:59] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 246 seconds)
[07:14:13] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 260 seconds)
[07:15:28] <SamuelMarks> Mmm ok I'll write my own parser/emitter for C
[07:16:06] <seifeslimene> : give seifeslimene books
[07:16:19] <seifeslimene> !give seifeslimene books
[07:16:40] <pragma-> it uses , instead of ! in this channel
[07:16:57] <seifeslimene> ,give seifeslimene books
[07:16:58] <candide> seifeslimene: See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources.
[07:17:06] <seifeslimene> :pragma- great
[07:17:43] <seifeslimene> What is the best book of c that covers everything in language
[07:19:44] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Read error: Connection reset by peer)
[07:21:59] <parrott> Modern C was good
[07:22:10] <seifeslimene> :parrott link?
[07:22:22] <parrott> I would go kr first though
[07:22:30] <parrott> Beep boop
[07:22:37] <parrott> Bn.com
[07:22:53] <parrott> Bn.com/stores
[07:26:56] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.174) (Ping timeout: 246 seconds)
[07:39:29] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[07:41:02] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[07:44:16] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[07:46:24] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.174)
[07:46:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[07:48:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 248 seconds)
[07:51:08] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f37c:486d:e6c4:36d4) (Ping timeout: 260 seconds)
[07:51:42] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:7b2e:dcb2:6878:c267)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:58:45] *** Quits: Torr (~Torr@user/torr) ()
[08:00:02] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[08:00:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:00:23] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[08:02:54] *** Joins: smeso (~smeso@user/smeso)
[08:03:00] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Quit: Leaving)
[08:06:48] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[08:08:23] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[08:09:14] *** Joins: fstd_ (~fstd@xdsl-87-78-201-176.nc.de)
[08:10:27] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[08:12:12] *** Quits: fstd (~fstd@xdsl-89-0-80-77.nc.de) (Ping timeout: 240 seconds)
[08:24:32] *** Joins: Torr (~Torr@user/torr)
[08:26:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[08:26:26] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.174) (Ping timeout: 246 seconds)
[08:27:04] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[08:27:13] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.174)
[08:29:53] *** Quits: alch (~alch@151.34.22.134) (Read error: Connection reset by peer)
[08:31:10] *** Quits: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:31:37] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[08:33:58] *** Joins: alch (~alch@151.68.19.47)
[08:35:09] *** Joins: Viewday1151 (~Viewday@user/viewday)
[08:37:17] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[08:37:17] *** Viewday1151 is now known as Viewday115
[08:38:23] *** Quits: Muzer (~muzer@tim32.org) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: overrider_ (~overrider@user/overrider) (Ping timeout: 256 seconds)
[08:39:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:40:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:40:42] *** Joins: overrider_ (~overrider@user/overrider)
[08:43:08] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:76db:3839:8c62:de89)
[08:43:30] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:44:29] *** Joins: Torr (~Torr@user/torr)
[08:51:34] <Clockface> is there a workaround for schedualing a new SIGALRM within the handler for SIGALRM
[08:54:40] *** Joins: Muzer (~muzer@tim32.org)
[08:55:08] *** Quits: soapsudsxx (~soapsudsx@141.193.188.147) (Ping timeout: 246 seconds)
[08:56:59] *** Joins: fe23 (~fe23@2409:8a34:465:ec80:ac4c:ea47:9bda:9c5e)
[08:58:45] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 268 seconds)
[08:59:48] <dave0> are you asking if you can call alarm() from a signal handler?
[09:00:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[09:01:07] *** Quits: Ox000 (~jy@74.215.12.46) (Ping timeout: 260 seconds)
[09:02:21] <dave0> posix says alarm() is async-signal-safe
[09:02:33] <dave0> you may safely call alarm() from a signal handler
[09:05:43] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:08:47] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 246 seconds)
[09:09:11] <dave0> this talks about periodic timers: https://pubs.opengroup.org/onlinepubs/9699919799/functions/timer_getoverrun.html
[09:10:17] *** Quits: parrott (~parrott@158-59-127-107.net.arlingtonva.us) (Ping timeout: 260 seconds)
[09:11:16] *** Joins: parrott (~parrott@172.58.107.231)
[09:11:40] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[09:15:05] *** Joins: noarb (~noarb@user/noarb)
[09:15:33] *** Quits: parrott (~parrott@172.58.107.231) (Read error: Connection reset by peer)
[09:15:50] *** Joins: parrott (~parrott@158-59-127-107.net.arlingtonva.us)
[09:19:02] *** Joins: trev (~trev@user/trev)
[09:20:33] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.174) (Ping timeout: 248 seconds)
[09:23:19] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.174)
[09:26:03] <pragma-> Alrighty, I think I've fixed the "invalid characters" issue with ,cc for once and for all.
[09:28:26] <pragma-> It now prints any invalid characters escaped as \xNN
[09:28:49] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:29:10] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.174) (Read error: Connection reset by peer)
[09:31:41] *** Joins: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de)
[09:32:37] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:34:13] *** Quits: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:36:47] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 246 seconds)
[09:37:50] *** Quits: yggdrasil (~yggdrasil@67-0-13-193.albq.qwest.net) (Ping timeout: 246 seconds)
[09:38:49] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[09:42:10] *** Joins: Dotz0cat_ (~Dotz0cat@71.29.71.39)
[09:43:20] *** Quits: Dotz0cat (~Dotz0cat@75.90.45.146) (Ping timeout: 272 seconds)
[09:43:21] *** Dotz0cat_ is now known as Dotz0cat
[09:45:37] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.174)
[09:53:05] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Ping timeout: 248 seconds)
[09:53:44] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32)
[09:54:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:55:13] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.174) (Ping timeout: 248 seconds)
[09:55:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[09:56:07] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[09:56:17] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:57:47] <dave0> ,cc puts("hi");
[09:57:49] <candide> dave0: hi
[10:00:19] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:07:36] <sham1> pragma-: that seems like the most expected behaviour
[10:08:11] <pragma-> i aim to meet expectations
[10:08:22] <NRK> ,cc puts(" '🐧' '😊' 'মৌ' 'あ' 'A'\n");
[10:08:24] <candide> NRK:  '🐧' '😊' 'মৌ' 'あ' 'A'
[10:08:51] <pragma-> but now it doesn't error with "invalid characters in JSON" if you use invalid unicode like \xe5
[10:09:04] <pragma-> ,cc puts(
[10:09:05] <candide> pragma-: error: expected expression before ';' token
[10:09:08] * pragma- mutters.
[10:09:20] <pragma-> ,cc puts("\xe5");
[10:09:22] <candide> pragma-: \xE5
[10:09:28] <pragma-> great success!
[10:09:45] <dave0> ,cc puts("\xb00b5");
[10:09:47] <candide> dave0: [warning: hex escape sequence out of range] \xB5
[10:09:48] <nitrix> ,cc puts("\\xE5");
[10:09:50] <candide> nitrix: \xE5
[10:10:13] *** Joins: adip (~adip@deu228.neoplus.adsl.tpnet.pl)
[10:10:17] <Maxdamantus> ,cc puts("\x5C");
[10:10:19] <candide> Maxdamantus: \
[10:10:20] <NRK> pragma-: what was the error?
[10:10:29] <dave0> now do octal
[10:10:39] <Maxdamantus> ,cc puts("\377");
[10:10:39] <pragma-> the stuff in between the double quotes
[10:10:41] <candide> Maxdamantus: \xFF
[10:10:49] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[10:10:57] <Maxdamantus> ,cc puts("\xEF\xBF\xDF");
[10:10:59] <candide> Maxdamantus: \xEF\xDF
[10:11:21] <Maxdamantus> ,cc puts("\xEF\xBF\xBD");
[10:11:23] <candide> Maxdamantus: �
[10:11:28] <nitrix> We're witnessing the singularity's IQ increasing.
[10:11:46] <pragma-> unicode has been the bane of candide's existence for several years
[10:12:10] <Maxdamantus> Maybe Perl 7 will have proper Unicode support.
[10:12:15] <pragma-> looks like that "has" is now a "had"!
[10:12:17] *** Quits: zer0x (~zer0x@1.55.254.166) (Ping timeout: 248 seconds)
[10:14:36] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:15:44] <Maxdamantus> Oh, apparently Perl 7 is actually a thing.
[10:16:00] <pragma-> almost
[10:16:19] <pragma-> NRK: the error was, for instance, https://i.imgur.com/H1OqK3X.png
[10:16:25] <pragma-> NRK: that should totally be fixed now
[10:16:37] <dave0> ,cc puts("red");
[10:16:39] <candide> dave0: r﻿ed
[10:18:56] * pragma- pats dave0
[10:20:22] *** Parts: parrott (~parrott@158-59-127-107.net.arlingtonva.us) (Leaving)
[10:21:34] * dave0 wags tail
[10:21:58] <NRK> pragma-: i was asking what triggers it. -_-
[10:23:06] <pragma-> invalid bytes
[10:23:12] <NRK> there wasn't any unicode on that screenshot though... at least it doesn't appear to be.
[10:23:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:24:49] <pragma-> i'm not sure where the x7f is coming from in that case, but the important thing is that it doesn't happen any more!
[10:25:19] <pragma-> and now any invalid bytes are escaped
[10:25:56] <NRK> ,cc char* 🐧 = "penguin";
[10:25:58] <candide> NRK: no output: 🐧 = 0x40302c "penguin"
[10:26:30] <pragma-> such unicode
[10:26:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:26:58] <nomagno> So, I've been looking into this 'macro currying' trick: https://termbin.com/wk2g
[10:27:10] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[10:27:41] <nomagno> My question is, can you work around this syntactical divide of the function in two parts to perform ANY two-argument computation like this?
[10:27:50] <NRK> ,cc #define 👎 false \nif (0 == 👎) puts("👎");
[10:27:52] <candide> NRK: 👎
[10:28:19] <nomagno> This question is interesting because it mixes computer science, very C-specific stuff, and formal grammar
[10:30:01] <nomagno> Can I essentially transform any syntactically prefix operation into a variable prefix/infix that changes based on 'argument a' and a variable postfix/infix that changes based on 'argument b'?
[10:30:28] *** Joins: malina (~malina@user/malina)
[10:30:50] <dave0> if(!👍) puts("👎");
[10:30:52] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[10:31:27] <fossforus> http://0x0.st/obcq.png bruh
[10:33:33] <NRK> what's "cjit" ?
[10:34:18] <nomagno> C JIT compiler, presumably
[10:34:27] <nomagno> I think it's made by CERN?
[10:34:56] <nomagno> No, that's CINT, an actual C interpreter
[10:35:05] <fossforus> NRK: shell util I wrote
[10:35:18] <fossforus> just compiles and runs the c program immediately after you exit your editor
[10:35:31] *** Joins: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[10:35:38] <NRK> what does it use to compile? tcc?
[10:35:41] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[10:35:47] <fossforus> cc
[10:35:57] <fossforus> whatever it's linked to
[10:36:01] <pragma-> https://github.com/xzhong86/CJit uses https://github.com/vnmakarov/mir/tree/3ee4d8c2f9b29503759421c42a7e9ab1d6ac14f3 but idk if that's what fossforus is using
[10:36:02] <candide> Title of pragma-'s link: GitHub - xzhong86/CJit: A Simple JIT compiler for C language
[10:36:09] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[10:36:49] *** Joins: parrott (~parrott@172.58.176.128)
[10:37:07] <dave0> ,cc putwchar(L"👎👍"[true]); putwchar(L"👎👍"[false]);
[10:37:11] <candide> dave0: 👍👎
[10:37:23] *** Quits: sudden (~cat@user/sudden) (Ping timeout: 256 seconds)
[10:37:23] *** Quits: andjjj23_ (~irc@107.170.228.47) (Ping timeout: 256 seconds)
[10:37:23] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[10:37:57] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[10:38:23] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Ping timeout: 260 seconds)
[10:39:12] *** Joins: sudden (~cat@user/sudden)
[10:46:38] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[10:47:22] <NRK> nomagno: the macro currying trick looks cool.
[10:47:37] <NRK> but im wondering what subtle bugs can it end up causing
[10:51:04] *** Joins: andjjj23_ (~irc@107.170.228.47)
[10:51:49] *** Quits: parrott (~parrott@172.58.176.128) (Read error: Connection reset by peer)
[10:52:07] *** Joins: parrott (~parrott@158-59-127-107.net.arlingtonva.us)
[10:54:13] *** Joins: fowl2 (~fowlmouth@user/fowl)
[10:54:16] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[10:54:41] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 268 seconds)
[10:55:53] *** Quits: fowl (~fowlmouth@user/fowl) (Ping timeout: 246 seconds)
[10:55:53] *** fowl2 is now known as fowl
[10:58:33] *** Joins: cuhela (~cuhela@188.119.45.227)
[11:03:32] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[11:06:59] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[11:09:21] *** Joins: zer0x (~zer0x@1.55.254.166)
[11:10:41] *** Joins: khach1 (~khach1@157.90.196.52)
[11:12:59] *** Joins: moose (~moose@user/moose)
[11:15:34] *** Quits: khach1 (~khach1@157.90.196.52) (Remote host closed the connection)
[11:15:50] <smallville7123> is this safe?
[11:15:51] <smallville7123> 0x1 * (float)(2 ^ - 90)
[11:16:07] <smallville7123> for      0x1p - 90f
[11:16:16] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:17:47] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[11:18:09] *** Quits: slimbo (~slim@user/slimbo) (Quit: slimbo)
[11:20:01] *** Quits: raym (~raym@user/raym) (Ping timeout: 248 seconds)
[11:20:44] *** Quits: cuhela (~cuhela@188.119.45.227) (Quit: Leaving)
[11:21:00] *** Joins: raym (~raym@user/raym)
[11:22:14] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:2c0c:4d27:84df:c44e)
[11:23:01] *** Joins: mixfix41 (~sdenynine@user/mixfix41)
[11:23:06] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:23:56] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[11:25:19] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[11:26:15] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[11:28:37] <dave0> smallville7123: ^ is the exclusive-or operator, not exponentiation
[11:28:57] <dave0> 2e-90
[11:29:30] <dave0> oh wait that's decimal
[11:29:53] <smallville7123> so      0x1 * (float)(2 * exp(- 90f) )        ?
[11:30:55] <dave0> ,cc float a = exp2(90.); printf("%g ", a);
[11:30:58] <candide> dave0: 1.23794e+27
[11:31:23] <dave0> whoops wrong sign
[11:31:28] <dave0> ,cc float a = exp2(-90.); printf("%g ", a);
[11:31:30] <candide> dave0: 8.07794e-28
[11:31:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:31:56] <dave0> powf sohuld work too
[11:32:51] <dave0> of exp2f is for floats
[11:33:11] <smallville7123> how would i do that manually
[11:34:19] <dave0> ,cc float a = powf(2.f, -90.f), b = exp2f(-90.f); printf("%g %g ", a, b);
[11:34:20] <candide> dave0: 8.07794e-28 8.07794e-28
[11:34:37] <smallville7123> without math functions
[11:34:58] <dave0> use a loop
[11:35:38] <dave0> ,cc float a = 1.f; for(int e = 1; e < 90; e++) a /= 2.f; printf("%g ", a);
[11:35:40] <candide> dave0: 1.61559e-27
[11:35:49] <dave0> nearly
[11:35:54] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[11:35:54] <dave0> ,cc float a = 1.f; for(int e = 1; e <= 90; e++) a /= 2.f; printf("%g ", a);
[11:35:56] <candide> dave0: 8.07794e-28
[11:36:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 248 seconds)
[11:36:32] <smallville7123> could i use this function?
[11:36:33] <smallville7123> floating-point power of two in the normal range.
[11:36:36] <dave0> if you're implementing pow() i think the usual way is with exp and log
[11:36:39] *** Joins: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:108b:5c99:3648:2915)
[11:36:42] <smallville7123> Returns a floating-point power of two in the normal range.
[11:36:46] <smallville7123> float powerOfTwoF(int n)
[11:36:49] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:37:05] *** Joins: aradesh (~aradesh@user/aradesh)
[11:37:24] <dave0> that's the same as exp2f
[11:38:27] <dave0> if the math lib you're writing has a suitable license, i would copy this stuff from one of the bsd's
[11:39:02] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:2c0c:4d27:84df:c44e)
[11:39:04] <dave0> i don't know any public domain math libs, but i assume *bsd's have a liberal license
[11:39:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:2c0c:4d27:84df:c44e) (Quit: Quit)
[11:39:47] <dave0> plus it comes already debugged
[11:41:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:41:27] <smallville7123> so how would i write 0x1p - 90f    using PowerOfTwoF
[11:42:22] <smallville7123> would i just do  0x1 * (float)MathUtils.powerOfTwoF(90);   ?
[11:42:50] <Juliu_> What is 0x1p again?
[11:42:56] <smallville7123> - (float)powerOfTwoF(90);     *
[11:46:19] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[11:46:57] *** Joins: iomari891 (~iomari891@102.91.5.67)
[11:47:34] <smallville7123> dave0: would i just do  0x1 * ( - (float) powerOfTwoF( 90 ) );   ?
[11:47:40] *** Joins: BrainchildHo[m] (~brainchil@2001:470:69fc:105::1:f030)
[11:47:48] <dave0> no idea
[11:47:55] <smallville7123> qwq
[11:48:25] <Juliu_> Thanks for not even answering
[11:49:45] *** Joins: chenqisu1 (~chenqisu1@183.217.202.44)
[11:51:02] <smallville7123> oof
[11:51:36] *** Joins: Rounin (~david@84.212.130.215)
[11:53:54] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:57:32] *** Joins: Telvana2 (~capo@user/telvana)
[11:57:43] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 260 seconds)
[11:58:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl)
[12:02:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[12:05:20] *** Joins: slimbo (~slim@user/slimbo)
[12:05:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:06:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[12:07:14] *** imm__ is now known as imm_
[12:07:55] <smallville7123> is this equvilant to NaN ?   (x - x) / (x - x)
[12:09:45] <dave0> of course
[12:10:13] <smallville7123> also integer ? true : false    is equivilant to  integer == 0 ? true : false;      right?
[12:10:31] <dave0> not if x is an integer
[12:10:42] <smallville7123> ok
[12:10:47] <dave0> not if x is an integer (for Nan)
[12:11:08] <dave0> for question mark?
[12:11:31] <dave0> no
[12:11:57] <smallville7123> for https://elixir.bootlin.com/musl/v1.2.2/source/src/math/__math_invalidf.c#L3
[12:11:59] <dave0> `integer ? a : b` is equivalent to `integer != 0 ? a : b`
[12:15:09] *** Quits: slimbo (~slim@user/slimbo) (Quit: slimbo)
[12:15:14] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:15:31] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[12:17:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.5)
[12:18:38] *** Joins: Senicar9 (~Senicar@gateway/tor-sasl/senicar)
[12:19:13] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[12:19:15] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Ping timeout: 240 seconds)
[12:19:16] *** Senicar9 is now known as Senicar
[12:19:27] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:20:18] <dave0> c# on wikipedia doesn't say that c# is compatible with c
[12:20:24] *** Joins: epony (epony@user/epony)
[12:20:34] <dave0> smallville7123: why are you bothering us with non-c language?
[12:21:56] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:22:34] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[12:26:31] *** Joins: slimbo (~slim@user/slimbo)
[12:27:28] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[12:29:19] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:29:28] *** Quits: alch (~alch@151.68.19.47) (Read error: Connection reset by peer)
[12:31:05] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[12:33:04] *** Joins: siesta (~siesta@srv24711.blue.kundencontroller.de)
[12:34:14] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Ping timeout: 246 seconds)
[12:34:25] *** Joins: alch (~alch@151.68.2.191)
[12:35:27] <NRK> does printf have any specifier for _Bool ?
[12:35:27] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[12:35:46] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[12:36:02] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[12:36:37] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[12:36:48] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 260 seconds)
[12:37:14] <siesta> hello Bou
[12:37:16] <dave0> not that i know, cast it to int, or index a string array (char*[]){"false","true"}[mybool] ignoring locales
[12:38:27] <siesta> im fria
[12:39:07] <Bou> Ah, heya
[12:39:20] <NRK> i got `const char * bool2str(int x) { return x ? "yes" : "no"; }` going
[12:40:03] <Juliu_> Why is bool2str taking int and not bool
[12:40:25] <NRK> bcus im using lots of ints as bools
[12:40:32] <Juliu_> And "yes" and "no" are not boolean values
[12:40:57] <siesta> Bou: here is the new version https://github.com/rald/CPlayBot
[12:41:10] <siesta> Bou: here is the new version https://github.com/rald/CPlayBotDev
[12:41:11] <NRK> they're more suitable for what im doing than "true" "false"
[12:41:55] <Juliu_> I can understand that. I'm just making fun of the fact that your function is not doing what the name implies
[12:43:27] <NRK> so just like most other functions :P
[12:43:30] <Juliu_> Also I have a very bad feeling if you return the address of a local non-static char array (i.e. string)
[12:43:42] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:43:49] <NRK> string literals are static storage
[12:43:57] <Juliu_> Oh ok
[12:45:33] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 260 seconds)
[12:45:49] <NRK> dave0: also using a function was safer than using a table. cus i'd have to do `!!` on every index if i want to treat some int as a bool.
[12:46:02] *** Quits: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca) (Quit: Leaving)
[12:46:38] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (Ping timeout: 260 seconds)
[12:46:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[12:48:03] <Juliu_> If you were sure that the value was either 0 or 1 you wouldn't have to
[12:49:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[12:51:28] <siesta> Bou: now it loads .so files for robot program
[12:52:14] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 260 seconds)
[12:52:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:52:28] <dave0> NRK: your bool2str is shorter too
[12:53:10] <Bou> siesta: wew, a lot has changed. you did the same thing with the arc drawing as I did (just draw N line sections), I'm now sure how DrawLine could work without the wrapping code in DrawPoint though (you just have a bounds check now?)
[12:53:17] <Bou> *not sure
[12:57:50] *** Joins: mweckbecker (~matthias@weckbecker.name)
[12:58:11] *** Quits: iomari891 (~iomari891@102.91.5.67) (Ping timeout: 260 seconds)
[12:58:14] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Remote host closed the connection)
[12:58:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:59:16] *** Joins: lawt (~lawt@2601:200:8200:6870:dea6:32ff:fea1:adf9)
[12:59:26] <siesta> bou: yes i check bounds its lot easier
[13:00:00] <siesta> i just draw 12 sections
[13:00:12] <siesta> it is much faster
[13:01:20] <Bou> but now lines don't show up on the other side do they? I haven't run the code yet (and I woke up half an hour ago)
[13:01:31] <Bou> anyway let's PM to avoid spamming #c with this
[13:01:56] <smallville7123>  what exactly does this mean?
[13:01:58] <smallville7123> https://elixir.bootlin.com/musl/v1.2.2/source/src/internal/libm.h#L99
[13:02:11] <smallville7123> /* Evaluate an expression as the specified type. With standard excess    precision handling a type cast or assignment is enough (with    -ffloat-store an assignment is required, in old compilers argument    passing and return statement may not drop excess precision).  */
[13:04:21] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[13:04:25] *** Joins: moog_ (~moog@98.97.85.106)
[13:05:15] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[13:06:02] *** Quits: moog (~moog@98.97.85.106) (Ping timeout: 268 seconds)
[13:06:07] *** GiverOfDomains is now known as Polo
[13:06:07] <siesta> oww Bou i got something to do be back later
[13:06:33] *** Quits: CalimeroTeknik (~calimero@ctkarch.org) (Changing host)
[13:06:33] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[13:06:59] <Polo> Heya
[13:07:03] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:10:53] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[13:11:26] *** Joins: cdman (~dcm@27.2.216.95)
[13:11:27] *** Quits: cdman (~dcm@27.2.216.95) (Changing host)
[13:11:27] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[13:16:12] *** Joins: seifeslimene (~seifeslim@197.244.201.38)
[13:17:22] <Dean> in c what is the difference when opening a file with r+ mode or w+? both are going to give you write/read permissions. is it that w+ will delete the contents and r+ won't? but won't opening with r+ then just be the same as opening with a+ because you're going to keep the contents and read/write?
[13:17:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 260 seconds)
[13:17:49] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 250 seconds)
[13:18:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:18:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[13:20:14] <dave0> i think the difference is w+ will create a file if it doesn't already exist... i gotta look it up
[13:21:12] <dave0> yeah w+ will truncate or create: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fopen.html
[13:21:30] <dave0> a just means there's an implicit seek to the end of the file whenever you write to it
[13:22:56] <Dean> thank you dave0 ! that makes sense.
[13:24:30] *** Joins: Klinda (~superleag@user/klinda)
[13:24:33] <dave0> no worries
[13:31:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:32:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:34:34] *** Joins: yosef`` (~user@2409:8a55:e212:aae0:58b9:4cff:fea0:d9)
[13:35:50] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[13:40:56] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[13:40:57] <Dean> if ((fd = open(pathname, O_WRONLY | O_CREAT | O_TRUNC, mode)) == -1) <-- This example is in the book but it is not a full snippet. My question is. Won't only a single param get chosen via short circuit evaluation here? In other words, O_WRONLY, O_CREAT, or O_TRUNC? Like it won't take all 3 of them right?
[13:41:53] <dave0> ah nope, you're thinking of ||
[13:42:00] <dave0> | is bitwise or
[13:42:10] <dave0> 4|2 == 6
[13:42:30] <smallville7123> now im confused qwq
[13:42:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:42:58] <Bou> smallville7123: your CPU can use higher precision internally, more than sizeof(double), and that can cause slightly different results
[13:43:05] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[13:43:06] <smallville7123> https://elixir.bootlin.com/musl/v1.2.2/source/src/math/hypotf.c#L34
[13:43:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:43:37] <smallville7123> does this implicitly cast `(double)x*x + (double)y*y` to a float when passed to sqrtf
[13:43:40] <Dean> dave0: the bitwise or puts all of them together?
[13:43:59] <dave0> Dean: yeah, it's a common way of using flags
[13:44:17] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[13:44:17] <Dean> dave0: wouldn't the bitwise & do the same?
[13:45:44] <smallville7123> eg does it implicitly do  sqrtf((float)((double)x*x + (double)y*y))
[13:46:05] <dave0> Dean: no, bitwise & only keeps bits that are set in both arguments
[13:46:12] *** Quits: yosef`` (~user@2409:8a55:e212:aae0:58b9:4cff:fea0:d9) (Remote host closed the connection)
[13:46:15] <smallville7123> or is it just a typo in musl libc ?
[13:46:53] <Dean> dave0: oooh. thank you. that is fascinating!
[13:47:02] <dave0> Dean: so in binary   0b1101 & 0b0011 == 0b0001    0b1101 | 0b0011 == 0b1111
[13:47:14] <smallville7123> that apparently exists even in v 1.0.0
[13:47:19] <smallville7123> https://elixir.bootlin.com/musl/v1.0.0/source/src/math/hypotf.c#L34
[13:47:26] <smallville7123> return z*sqrtf((double)x*x + (double)y*y);
[13:47:42] <dave0> Dean: https://en.wikipedia.org/wiki/Boolean_algebra
[13:47:47] <smallville7123> so why cast to double ?
[13:48:00] <smallville7123> and then cast back to float ?
[13:48:06] <Dean> thank you very much dave0 !
[13:48:07] <Bou> for the multiplication?
[13:48:25] <smallville7123> as it could overflow the cast float, right?
[13:48:31] <dave0> Dean: no worries :-)
[13:49:06] <smallville7123> eg the result of    (double)x*x + (double)y*y      coule be larger than FLOAT_MAX    right?
[13:49:10] <smallville7123> could*
[13:50:24] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[13:51:01] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:52:33] *** Joins: sokan_ (~sokan@athedsl-304997.home.otenet.gr)
[13:54:08] *** Quits: sokan (~sokan@2a02:587:9e11:bc00:227:eff:fe16:865d) (Ping timeout: 268 seconds)
[13:54:08] *** sokan_ is now known as sokan
[13:54:30] *** Joins: jellie (~luv_panda@user/jellie)
[13:54:58] <Bou> I think it prevents that with the funny bit twiddling, but I'm not sure
[13:58:36] <smallville7123> welp imma just mark it as        THIS CAST FROM DOUBLE TO FLOAT IS INTENTIONAL
[13:59:31] <rcf> smallville7123: it’s questionable code probably based on some esoteric performance concern more than sanity; if you wanted to avoid the truncation you would need to use sqrt()
[13:59:32] <smallville7123> THIS CAST FROM FLOAT TO DOUBLE THEN BACK TO FLOAT IS INTENTIONAL    *
[14:01:00] <rcf> smallville7123: you can’t add squares together and get a smaller number unless I missed the complex somewhere, truncation will occur no matter what.
[14:01:24] <smallville7123> rcf:
[14:01:29] <smallville7123> https://elixir.bootlin.com/musl/v1.0.0/source/src/math/hypotf.c#L34
[14:02:00] <smallville7123> exists all the way through to latest version 1.2.2
[14:02:16] <smallville7123> and is unchanged
[14:02:23] <smallville7123> remains*
[14:03:53] <fizzie> rcf: Hypothetically it could save you from underflow in a really unlikely case.
[14:03:53] *** Quits: kkd (uid425746@id-425746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:04:31] <fizzie> (The one where either `x*x` or `y*y` would be small enough to round to zero, but their sum isn't.)
[14:04:54] <rcf> True
[14:06:25] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[14:10:03] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[14:10:50] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 246 seconds)
[14:11:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 248 seconds)
[14:12:48] <rcf> smallville7123: I suppose I would just chalk this up to an extremely strong desire to perform well on soft float ABIs in the minimalist systems musl has often been used with. In those cases every double operation is extremely expensive, so going back to sqrtf makes sense.
[14:12:56] *** Joins: jellie (~luv_panda@user/jellie)
[14:15:05] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32) (Read error: Connection reset by peer)
[14:15:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32)
[14:15:22] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:15:28] <rcf> Of course if you have an FPU I still say don’t bother.
[14:17:43] <rcf> But then I’m also the sort that doesn’t bother to implement single-precision variants of a function at all if it is in any way avoidable.
[14:18:12] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[14:18:49] <Bou> why even have a `hypotf(a,b)` if just does `return hypot(a,b)`
[14:21:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[14:22:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:22:32] *** Parts: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro) ()
[14:22:37] <smallville7123> rdg: alright
[14:22:58] <smallville7123> [19:48] <Bou> why even have a `hypotf(a,b)` if just does `return hypot(a,b)`
[14:23:00] <smallville7123> where
[14:23:52] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:23:56] <rcf> They were referencing my disdain for single-precision, not what this does
[14:25:05] *** Joins: z14 (~alzee@user/alzee)
[14:32:22] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:35:02] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[14:35:39] *** Joins: shivesh (~shivesh@user/shivesh)
[14:38:58] *** Joins: seninha (~seninha@user/seninha)
[14:43:50] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[14:46:23] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:48:38] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[14:49:52] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:52:39] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:52:39] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:52:39] *** Joins: nortoh (~nortoh@user/nortoh)
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[14:55:06] *** Quits: jellie (~luv_panda@user/jellie) (Quit: WeeChat 3.5)
[14:55:18] *** Joins: cart_man (~rynot@host-78-144-123-112.as13285.net)
[14:56:24] *** Joins: jellie (~luv_panda@user/jellie)
[14:58:35] *** Joins: coaxing (~coaxing@user/coaxing)
[15:07:01] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Read error: Connection reset by peer)
[15:07:41] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[15:08:28] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 260 seconds)
[15:16:09] *** Quits: cart_man (~rynot@host-78-144-123-112.as13285.net) (Ping timeout: 268 seconds)
[15:17:23] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 268 seconds)
[15:17:42] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:19:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:20:21] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:22:36] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:2c0c:4d27:84df:c44e) (Quit: Quit)
[15:27:32] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[15:28:05] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:28:14] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:29:20] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[15:29:51] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:30:04] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[15:30:06] *** Joins: alicef (~none@gentoo/developer/alicef)
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:59] *** Joins: csrf (~csrf@user/csrf)
[15:32:20] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[15:32:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:34:08] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[15:34:32] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[15:35:51] *** Quits: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008) (Quit: Leaving)
[15:38:07] *** Quits: jaeckel (~jaeckel@sleipnir.jaeckel.eu) (Changing host)
[15:38:07] *** Joins: jaeckel (~jaeckel@user/jaeckel)
[15:40:44] *** Joins: strajder (~strajder@user/strajder)
[15:41:26] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:41:47] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:43:35] *** Joins: unknow (~i.am@user/marlboro)
[15:47:15] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[15:47:49] *** Quits: Khoyo (~khoyo@user/khoyo) (Quit: ZNC 1.8.2 - https://znc.in)
[15:48:18] *** Joins: Khoyo (~khoyo@user/khoyo)
[15:54:39] *** Quits: cleverrness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[15:56:14] *** shadowchaser9 is now known as shadowchaser
[15:57:24] *** Quits: Thymo (~Thymo@88-159-60-197.fixed.kpn.net) (Quit: ZNC - http://znc.in)
[15:58:27] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[15:58:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:04:35] *** Joins: Dean (~Dean@165-73-119-228.ip.afrihost.capetown)
[16:04:36] *** Quits: Dean (~Dean@165-73-119-228.ip.afrihost.capetown) (Changing host)
[16:04:36] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[16:05:54] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[16:06:38] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[16:07:20] *** Joins: smokey-panda (~smokey-pa@2601:281:203:4716:9edc:744d:2e27:7203)
[16:09:57] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[16:10:35] *** Joins: Ox000 (~jy@74.215.12.46)
[16:14:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:15:35] *** Quits: smokey-panda (~smokey-pa@2601:281:203:4716:9edc:744d:2e27:7203) (Quit: Leaving)
[16:18:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.222) (Ping timeout: 260 seconds)
[16:20:20] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[16:20:46] *** Quits: mixfix41 (~sdenynine@user/mixfix41) (Quit: and the winter is outta here...)
[16:23:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[16:25:25] *** Quits: Posterdati (~posterdat@user/Posterdati) (Read error: Connection reset by peer)
[16:26:30] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Quit: Quit)
[16:26:42] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[16:27:08] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[16:27:12] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Client Quit)
[16:30:07] *** Joins: Torr (~Torr@user/torr)
[16:30:43] *** Joins: Posterdati (~posterdat@user/Posterdati)
[16:30:50] *** Quits: alch (~alch@151.68.2.191) (Read error: Connection reset by peer)
[16:32:02] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[16:32:28] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[16:33:11] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:41] *** Joins: alch (~alch@151.34.43.155)
[16:34:57] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:35:25] *** Quits: Torr (~Torr@user/torr) ()
[16:36:54] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[16:39:35] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[16:43:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:43:13] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 248 seconds)
[16:43:37] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[16:44:00] *** Joins: rany (~rany@user/rany)
[16:46:57] *** Joins: krissmaster (~kriss@213.239.83.90)
[16:47:08] *** Quits: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:52:54] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[16:56:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[16:56:35] <Dean> how can i tell in which version of the c standard 'fgetpos' 'fsetpos' were added? 'ftell' and 'fseek' are the older version of this?
[16:57:02] *** Joins: yggdrasil (~yggdrasil@75-161-5-157.albq.qwest.net)
[16:57:30] *** Quits: yggdrasil (~yggdrasil@75-161-5-157.albq.qwest.net) (Remote host closed the connection)
[16:58:57] <clarity> http://mdoc.su/o/fgetpos
[16:58:59] <candide> Title of clarity's link: fseek(3) - OpenBSD manual pages
[16:59:38] <clarity> Indeed, they are in c89
[16:59:49] <Dean> wow! thank you clarity i never knew about this website before.
[17:00:10] <Dean> this is fantastic!
[17:00:49] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Ping timeout: 248 seconds)
[17:01:02] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 260 seconds)
[17:04:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[17:05:15] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:07:08] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[17:08:51] *** Joins: coaxing (~coaxing@user/coaxing)
[17:13:59] *** Joins: pucara (~i@host16.190-139-218.telecom.net.ar)
[17:17:53] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 248 seconds)
[17:18:05] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Quit: [H]EAT ROX FUCK R0X SHIT BRIX.)
[17:20:53] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 260 seconds)
[17:20:56] *** Joins: m4v (~znc@ubuntu/member/m4v)
[17:21:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[17:22:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[17:27:00] *** Quits: psyxopompos (~psyxopomp@user/psyxopompos) (Ping timeout: 240 seconds)
[17:27:33] *** Joins: brad_mssw (~bhouse@172.110.173.17)
[17:28:08] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:28:57] <siesta> ,cc char *x=(rand()%3)[(char*[]){"eat","sleep","code"}];
[17:29:00] <candide> siesta: no output: x = 0x403037 "sleep"
[17:29:59] <siesta> ,cc srand(time(NULL)); char *x=rand()%3)[(char*[]){"eat","sleep","code"}];
[17:30:00] <candide> siesta: warning: initialization of 'char *' from 'int' makes pointer from integer without a cast [-Wint-conversion]  error: expected ',' or ';' before ')' token
[17:30:12] <siesta> ,cc srand(time(NULL)); char *x=(rand()%3)[(char*[]){"eat","sleep","code"}];
[17:30:14] <candide> siesta: no output: x = 0x403033 "eat"
[17:30:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:23] *** Quits: Ox000 (~jy@74.215.12.46) (Ping timeout: 246 seconds)
[17:32:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:33:01] *** Quits: chenqisu1 (~chenqisu1@183.217.202.44) (Ping timeout: 240 seconds)
[17:34:32] *** Quits: kplant (~kplant@user/kplant) (Quit: _)
[17:35:12] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[17:35:32] <Dean> what is the difference between using something like fputs("Failed to close file.", stderr); or perror("set pos failed."); ?
[17:35:52] <Dean> stderr vs perror
[17:36:23] <Dean> i get that perror is a function and stderr is passed in as a param.
[17:36:29] <Dean> but why would one be more useful in a specific case?
[17:37:36] <constxd> perror() is for reporting errors that are returned by setting errno
[17:38:11] <constxd> it's a shortcut for fprintf(stderr, "... %s", strerror(errno)) basically
[17:38:17] *** Joins: kplant (~kplant@user/kplant)
[17:39:09] <constxd> ,cc strtol("723647247627364726472634762734672634723674", NULL, 10); perror("strtol()");
[17:39:13] <candide> constxd: strtol(): Numerical result out of range
[17:39:33] <Dean> constxd: thanks. in this case i didn't set any errno when working with some files. could it be the example is incomplete and errno should've been set?
[17:39:49] <constxd> it's the library functions that set errno
[17:40:03] <Dean> constxd: so it happens automatically?
[17:40:11] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[17:40:32] <constxd> yes, refer to the man page for the given function to see how it uses errno
[17:40:46] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[17:41:08] <constxd> notice how in my example i didn't write errno anywhere. but in the output it says numerical result out of range
[17:41:09] <Dean> ok thank you constxd
[17:41:13] *** Joins: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de)
[17:41:32] <constxd> because strtol() set errno to ERANGE
[17:41:51] <constxd> ,cc errno = ENOENT; perror("test");
[17:41:54] <candide> constxd: test: No such file or directory
[17:41:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:42:01] <Dean> https://paste.debian.net/1236873/ this is the code snip. so i could practically replace all the fputs & stderr with perror?
[17:42:14] <Dean> thank you constxd
[17:42:54] <constxd> perror() only makes sense when the function that failed sets errno upon failure
[17:43:10] <Dean> ooh ok. so that is where i look at the doc.
[17:43:14] <constxd> yeah
[17:43:44] *** Joins: nshirelaptop (~nshire@user/nshire)
[17:43:53] <Dean> so when i want to call any function provided by the cstandard library or POSIX i must check if it sets an errno and handle error messages accordingly?
[17:44:38] <Dean> if it does set the errno i can use perror otherwise i will use fputs with stderr constxd
[17:45:20] <rcf> That is the common approach
[17:45:21] <constxd> if you care about specific error logging then yes, but you don't always
[17:46:05] <Dean> that makes sense. thank you very much constxd and rcf
[17:46:11] <constxd> np
[17:48:13] *** Quits: nshirelaptop (~nshire@user/nshire) (Ping timeout: 250 seconds)
[17:54:39] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:54:58] *** Joins: chops (~chops@2600:8804:8248:ed00:1536:866a:b95c:488e)
[17:55:08] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Remote host closed the connection)
[17:55:38] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[17:55:43] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[17:56:03] *** Parts: chops (~chops@2600:8804:8248:ed00:1536:866a:b95c:488e) ()
[17:56:04] <Dean> "The unlink function always removes the directory
[17:56:04] <Dean> entry for the file, but it deletes the actual file only when there are no more
[17:56:07] <Dean> links to it."
[17:56:16] <Dean> What is a link? It's different from a pointer yeah?
[17:59:26] <constxd> yes
[17:59:43] <constxd> a link is a filesystem concept
[18:00:29] <constxd> you can have multiple links to the same file
[18:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:01:22] <constxd> see ln(1) and link(2)
[18:01:42] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[18:02:53] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[18:03:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 246 seconds)
[18:04:52] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:07:47] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[18:10:02] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[18:12:25] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:12:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:15:36] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 268 seconds)
[18:16:15] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[18:17:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:17:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:17:47] *** Joins: wroathe (~wroathe@user/wroathe)
[18:18:07] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[18:18:08] *** Quits: trev (~trev@user/trev) (Quit: trev)
[18:21:39] *** Joins: tolot (~tolot@dynamic-078-049-112-061.78.49.pool.telefonica.de)
[18:26:11] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[18:26:18] *** Quits: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de) (Quit: Leaving)
[18:27:45] *** Joins: Inline (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[18:28:52] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[18:29:08] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:29:21] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 248 seconds)
[18:31:07] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:32:17] *** Quits: parrott (~parrott@158-59-127-107.net.arlingtonva.us) (Ping timeout: 246 seconds)
[18:32:35] *** Joins: parrott (~parrott@2607:fb90:1779:1046:0:31:d33c:5301)
[18:33:48] *** Quits: parrott (~parrott@2607:fb90:1779:1046:0:31:d33c:5301) (Read error: Connection reset by peer)
[18:34:11] *** Joins: parrott (~parrott@158-59-127-107.net.arlingtonva.us)
[18:34:50] <SamuelMarks> Is a C file guaranteed to fit in memory, or do I need to carefull mmap pages of it?
[18:35:24] <xiaomiao> "it depends"
[18:35:47] <xiaomiao> I'm not sure I understand the intent of your question
[18:36:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[18:37:11] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:37:22] *** Quits: lehmrob (~lehmrob@p578c3e7c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:38:03] <SamuelMarks> I'm writing a C parser and want to know what I can assume
[18:38:07] *** Joins: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73)
[18:38:28] <pragma-> Why would any file be guaranteed to fit in memory?
[18:38:53] <xiaomiao> you can assume that some person will have a machine-generated file that is so YUUUGE it breaks all your assumptions :)
[18:40:13] *** Quits: dhch (~dhch@185.213.154.171) (Ping timeout: 260 seconds)
[18:41:05] *** Quits: parrott (~parrott@158-59-127-107.net.arlingtonva.us) (Ping timeout: 248 seconds)
[18:42:05] *** Joins: parrott (~parrott@2607:fb90:1779:1046:0:31:d33c:5301)
[18:43:13] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[18:45:19] <constxd> SamuelMarks: bro why
[18:45:59] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[18:46:40] <ioxzev1z> SamuelMarks, what's wrong with reading a file by line, or in sets of a fixed buffer?
[18:47:52] <ioxzev1z> Even if you read the entire file in memory (and it's huge), you could probably easily fit like 3 or 4 GiB in memory on a modern computer
[18:48:21] <cehteh> you can just make the assumption that it fits in memory, and give some sensible error/abort if it does not
[18:48:53] <cehteh> memory is always finite thus there will never be a gurantee that anything fits in memory
[18:49:37] <cehteh> but as long you practically can assume it'l do for all foreseen cases it should be ok
[18:49:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[18:49:58] *** Joins: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de)
[18:50:30] *** Quits: nq (~nq@82.79.141.40) (Quit: Leaving)
[18:51:28] <Bou> a parser shouldn't need the whole file in advance anyway
[18:52:11] <pragma-> I don't know about you but I'd sure hope my compiler writer guy has gotten down the basics of checking the return value of malloc and such...
[18:52:35] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 246 seconds)
[18:55:00] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[18:55:58] *** Quits: clamiax (~clamiax@net-93-65-240-235.cust.vodafonedsl.it) (Remote host closed the connection)
[18:56:56] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[18:57:05] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:57:24] *** Joins: nvmd (~weechat@user/nvmd)
[18:57:38] *** Quits: pucara (~i@host16.190-139-218.telecom.net.ar) (Quit: Lost terminal)
[19:00:27] *** Joins: Akiva (~Akiva@user/Akiva)
[19:03:07] <rcf> SamuelMarks: there are limits a conforming program is supposed to meet, but not in terms of file size itself.
[19:03:12] <rcf> ,c11 5.4.2.1
[19:03:12] <candide> No such section '5.4.2.1' in C11 Draft Standard (n1570).
[19:03:26] <rcf> ,c11 5.2.4.1
[19:03:28] <candide> http://www.iso-9899.info/n1570.html#5.2.4.1 [Translation limits] 1 The implementation shall be able to translate and execute at least one program that contains at least one instance of every one of the following limits:18) -- 127 nesting levels of blocks -- 63 nesting levels of conditional inclusion -- 12 pointer, array, and function declarators (in any combinations) modifying an arithmetic, structure, un... <truncated; https://0x0.st/obA2.txt>
[19:03:48] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[19:03:54] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[19:04:26] <SamuelMarks> ioxzev1z: reading line by line
[19:04:51] <SamuelMarks> xiaomiao: yeah I was thinking people that put a table in a C file, like generated from TensorFlowLite
[19:05:13] <pragma-> "each universal character name specifying a short identifier of 00010000 or more is considered 10 characters"
[19:05:14] <pragma-> hmm
[19:06:07] <pragma-> creat()
[19:06:35] <NRK> i can maybe see someone generating a EUGE c file with lots of data in it...
[19:06:51] <pragma-> At a previous job there was a 82 mb header file.
[19:07:21] <SamuelMarks> In other news my C parser doesn't look good. I haven't written the logic yet but my type hierarchy is ugly…
[19:07:36] <NRK> honestly, just mmap away. and if it fails, then bail.
[19:07:45] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32) (Ping timeout: 248 seconds)
[19:11:08] *** Quits: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 246 seconds)
[19:12:57] <SamuelMarks> mmk
[19:13:22] <rcf> It's not like mmap() actually requires the file to fit in RAM proper
[19:13:33] <rcf> Unless you're writing this for some ancient system without virtual memory.
[19:13:49] *** Joins: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net)
[19:14:05] <SamuelMarks> Any suggestions for AST [& CST] `struct`s for C? - I'm trying something like https://github.com/offscale/cdd-c/blob/47b35da/c_cdd/tests/test_function.h#L16 (types defined here https://github.com/offscale/cdd-c/blob/47b35da/c_cdd/cst.h ) but it's getting ugly…
[19:14:44] * SamuelMarks is trying to port his Python AST/CST library to C
[19:19:25] *** Joins: rgrinberg (~textual@177.248.158.166)
[19:20:04] *** Joins: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec)
[19:20:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:21:50] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:22:35] <Dean> constxd: is a link like a path to a directory?
[19:22:50] *** Quits: Brewster_ (~Brewster@us.8bitshort.com) (Changing host)
[19:22:50] *** Joins: Brewster_ (~Brewster@user/brewster)
[19:22:50] *** Brewster_ is now known as Brewster
[19:23:28] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 272 seconds)
[19:25:30] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:25:41] <pragma-> a link is like a hero that rescues the princess
[19:27:25] *** rcf is now known as rfc
[19:29:14] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[19:30:03] <SamuelMarks> that's racist
[19:30:12] *** Parts: jtm (~jtm@user/jtm) (Leaving)
[19:30:47] <NRK> Dean `man 7 symlink` should help you out
[19:31:36] <dave0> he means hard link
[19:31:44] *** rfc is now known as heidegger
[19:32:12] *** heidegger is now known as rcf
[19:32:21] <dave0> Dean: when you make a hard link to a file, you make a new name that refers to the file
[19:32:59] <dave0> Dean: you can have as many links, or names, to a file as you like... linux counts them for you
[19:33:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 248 seconds)
[19:34:08] <dave0> Dean: once you've removed all names that refer to a file, and no program had that file open, the count goes to 0 and linux releases the files space on the disk
[19:35:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:35:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:35:55] *** Joins: chomwitt (~chomwitt@athedsl-31881.home.otenet.gr)
[19:37:06] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Quit: Quit)
[19:37:08] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[19:37:09] <Dean> dave0: is that why on windows you can't delete a file when it is open? because there is ause of the file?
[19:38:03] <dave0> i don't know about windows, it's not posix
[19:38:19] <dave0> does windows even have hard links?
[19:38:22] <Dean> dave0: do you do linux?
[19:38:40] <dave0> i used to, i use netbsd these days
[19:42:27] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[19:42:51] <ioxzev1z> Dean, if I had to guess (considering there isn't much info about low-level windows stuff), windows won't let you delete an open file
[19:43:38] <ioxzev1z> wrt linux, I think mktmp() or whatever it's called will generate a random name, give you a handle, then immediately unlink it such that you can use the file while you have the handle open but there won't be an actual link in the fs
[19:43:44] <NRK> dave0: it describes hard links as well
[19:43:45] <ioxzev1z> Though you should double check that
[19:43:57] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:43:59] <NRK> >  Symbolic links are files that act as pointers to other files.  To understand their behavior, you must first understand how hard links work.
[19:44:13] *** Joins: bindu (~bindu@user/bindu)
[19:44:23] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[19:44:25] <dave0> NRK: oh ok
[19:44:44] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:45:37] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:48:49] *** Quits: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73) (Ping timeout: 248 seconds)
[19:49:57] <Dean> thank you constxd ioxzev1z and NRK
[19:50:15] <Dean> NRK this was the paragraph in the book https://paste.debian.net/1236894/
[19:52:29] * pragma- mutters something about princess zelda and hard links.
[19:52:55] <ioxzev1z> l
[19:53:57] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:54:53] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[19:56:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[19:56:15] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[19:56:15] *** Joins: nortoh (~nortoh@user/nortoh)
[19:56:20] *** Joins: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3)
[19:56:36] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[19:59:29] *** Quits: zer0x (~zer0x@1.55.254.166) (Ping timeout: 248 seconds)
[20:00:12] *** Quits: nvmd (~weechat@user/nvmd) (Ping timeout: 272 seconds)
[20:00:17] *** Joins: tosemusername (~weechat@user/nvmd)
[20:01:29] *** tosemusername is now known as nvmd
[20:01:32] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:01:34] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737)
[20:02:05] *** Joins: vin (~vin@user/crash)
[20:02:51] <vin> In glibc when I memcpy from one address to another, is the destination address data read at any time during the copy?
[20:03:30] *** Joins: magla (~gelignite@d5363ac5.access.ecotel.net)
[20:04:17] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 248 seconds)
[20:04:24] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:04:31] *** Quits: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3) (Ping timeout: 245 seconds)
[20:04:48] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[20:05:09] <parrott> Would it be?
[20:06:03] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:06:11] <vin> I expect it not to
[20:06:39] *** Joins: dld (~davidlowr@2601:197:600:1210:38c1:e5a4:b065:9eb3)
[20:06:53] <parrott> Me too, I guess you could look at the implementation
[20:08:54] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737) (Quit: Client closed)
[20:09:13] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:11:10] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:11:54] <ioxzev1z> vin, by that you mean buf1 gets copied into buf2, and you're wondering if buf2 is read in the middle of the copy?
[20:12:07] <ioxzev1z> Maybe if you're writing threaded code
[20:13:05] <parrott> 🌄
[20:15:55] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[20:17:21] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[20:17:43] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[20:19:49] *** Quits: magla (~gelignite@d5363ac5.access.ecotel.net) (Quit: Stay safe!)
[20:20:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.5)
[20:20:19] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[20:23:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[20:26:35] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (Read error: Connection reset by peer)
[20:27:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:29:53] *** Quits: alch (~alch@151.34.43.155) (Read error: Connection reset by peer)
[20:33:56] *** Joins: alch (~alch@151.68.93.33)
[20:34:56] *** Joins: fspax (~fspax@46.148.141.211)
[20:36:49] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[20:37:47] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[20:41:08] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 268 seconds)
[20:41:47] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com)
[20:41:59] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f)
[20:41:59] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f) (Changing host)
[20:41:59] *** Joins: skapata (~Skapata@user/skapata)
[20:43:47] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:44:36] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 240 seconds)
[20:45:25] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Ping timeout: 240 seconds)
[20:45:27] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:46:19] *** Joins: rgrinberg (~textual@177.248.158.166)
[20:47:57] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:47:58] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 260 seconds)
[20:48:13] *** Joins: clamiax (~clamiax@net-93-65-240-235.cust.vodafonedsl.it)
[20:50:09] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 248 seconds)
[20:50:41] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[20:50:43] *** Quits: tech_exorcist (13203@user/tech-exorcist/x-0447479) (Quit: updating)
[20:52:59] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 246 seconds)
[20:56:34] *** Quits: user24037 (~user47239@user/user282069) (Ping timeout: 272 seconds)
[20:59:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[20:59:32] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[20:59:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Quit: Quit)
[20:59:55] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:00:14] *** Joins: trev (~trev@user/trev)
[21:04:11] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[21:04:56] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[21:06:23] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Client Quit)
[21:06:41] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[21:07:33] *** Joins: Juliu_ (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf)
[21:07:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:3c56:9606:87ba:fbbf) (Client Quit)
[21:09:35] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[21:10:24] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:13:18] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:13:18] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:13:18] *** Joins: nortoh (~nortoh@user/nortoh)
[21:16:54] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[21:17:06] *** Quits: Telvana2 (~capo@user/telvana) (Read error: Connection reset by peer)
[21:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:18:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[21:20:11] <kurahaupo> vin: On a CPU that only has word read/write, asking memcpy to overwrite part of the last (or first) word will necessarily involve reading the existing value and bit mashing
[21:20:23] *** Joins: Telvana (~capo@user/telvana)
[21:20:53] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[21:22:39] <kurahaupo> vin: Even on x86_64, the CPU actually reads & writes 64 bytes (512 bits) at a time, and so it likely does a read-modify-write cycle on your behalf; you would have to check the actual CPU docs from Intel or AMD to be sure it doesn't
[21:22:41] *** Joins: Telvana (~capo@user/telvana)
[21:25:26] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:25:31] *** Joins: user24037 (~user47239@mail.ultronoarena.com)
[21:25:32] *** Quits: user24037 (~user47239@mail.ultronoarena.com) (Changing host)
[21:25:32] *** Joins: user24037 (~user47239@user/user282069)
[21:26:20] *** ozzz is now known as om3ga
[21:26:57] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 248 seconds)
[21:28:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[21:28:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:28:47] *** Joins: rgrinberg (~textual@177.248.158.166)
[21:31:05] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[21:31:55] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[21:32:31] *** Joins: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net)
[21:36:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:37:08] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[21:37:09] *** Joins: Alhazred (~Alhazred@86.106.74.38)
[21:37:21] *** Joins: Akuli (~Akuli@82-203-164-177.bb.dnainternet.fi)
[21:37:24] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[21:39:18] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com)
[21:41:20] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com) (Ping timeout: 252 seconds)
[21:46:25] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:51:00] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: leaving)
[21:51:48] *** Quits: parrott (~parrott@2607:fb90:1779:1046:0:31:d33c:5301) (Read error: Connection reset by peer)
[21:52:05] *** Joins: parrott (~parrott@158-59-127-107.net.arlingtonva.us)
[21:53:04] *** Joins: Ap3 (~ape@kanonenjagd.panzer.ninja)
[21:56:20] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:56:40] *** Joins: cation (cation@user/cation)
[21:58:08] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:58:47] *** Quits: parrott (~parrott@158-59-127-107.net.arlingtonva.us) (Ping timeout: 246 seconds)
[22:00:55] *** Joins: LuKaRo_ (~LuKaRo@p4fc32565.dip0.t-ipconnect.de)
[22:01:18] *** Quits: LuKaRo (~LuKaRo@p200300dfa72b1d372a0e3d5e954163f2.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[22:06:08] *** Quits: Ox000 (~jy@166.147.161.66.ded-dsl.fuse.net) (Ping timeout: 260 seconds)
[22:11:51] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[22:12:15] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[22:13:54] *** Joins: tusko (~yeurt@user/tusko)
[22:14:43] *** Quits: Ap3 (~ape@kanonenjagd.panzer.ninja) (Quit: bye)
[22:15:33] *** Joins: meator (~meator@user/meator)
[22:15:53] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:20:44] *** Joins: _4p3 (~ape@kanonenjagd.panzer.ninja)
[22:22:53] *** Quits: chomwitt (~chomwitt@athedsl-31881.home.otenet.gr) (Ping timeout: 268 seconds)
[22:23:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:25:39] *** Joins: seninha (~seninha@user/seninha)
[22:26:26] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[22:28:15] *** Joins: chomwitt (~chomwitt@athedsl-20549.home.otenet.gr)
[22:30:07] <SamuelMarks> hi
[22:30:43] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[22:31:29] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[22:31:44] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:32:17] <SamuelMarks> What is a good ontology for a C AST? - `struct If { CstNode_base_properties; const char *condition; };` but then when I try to make a body for a function do I give it a pointer to pointer of `union CstNode { struct If _if; /* &etc. */ };`?
[22:32:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[22:33:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:34:29] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[22:35:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:35:41] *** Joins: Xplorator (~Xplorator@176.166.206.65)
[22:35:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[22:36:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:36:55] *** Joins: Macbethwin (~chargen@8.31.163.87)
[22:37:50] *** Macbethwin is now known as Chargen
[22:39:01] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:39:47] *** Joins: strajder (~strajder@user/strajder)
[22:40:55] *** Joins: barthandelous (~cbrzezins@gateway/tor-sasl/barthandelous)
[22:42:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[22:42:29] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:44:14] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[22:44:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[22:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[22:44:21] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f1ec-d7f3-37e1-032c.res6.spectrum.com)
[22:45:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:45:31] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[22:47:32] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[22:50:26] *** Joins: pulse (~pulse@user/pulse)
[22:52:38] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: leaving)
[22:57:18] *** Joins: fwg_ (~fwg@user/fwg)
[22:58:47] <fizzie> One possibility is to translate the standard's syntax nonterminals to AST nodes more or less directly. Though a really direct mapping might be a little too non-flat. But from that perspective, the body of a function would be a single /compound-statement/. And a /compound-statement/ would be a list of /block-item/s, where each /block-item/ is either (i.e., a (tagged) union of) a /declaration/ or a
[22:58:49] <fizzie> /statement/. And so on.
[23:00:11] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 260 seconds)
[23:02:14] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[23:04:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:06:57] <constxd> bro what
[23:07:13] <constxd> `const char *condition`?
[23:07:40] *** Quits: fe23 (~fe23@2409:8a34:465:ec80:ac4c:ea47:9bda:9c5e) (Quit: fe23)
[23:07:50] <twkm> ,english const char *condition;
[23:07:51] <candide> twkm: Declare `condition` as a pointer to const char.
[23:07:57] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:08:25] <constxd> you probably want something like `struct Expr *condition`
[23:10:07] <constxd> imo you should have just two types: Expression and Statement. they are both tagged unions
[23:10:59] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 252 seconds)
[23:12:33] <constxd> struct Expr { enum { EXPR_INT_LITERAL, EXPR_UINT_LITERAL, ... } type; union { int k; struct { struct Expr *left, *right; }; ... }; }
[23:12:59] <pragma-> or just Expression
[23:13:09] *** Joins: mahmutov (~mahmutov@5.176.41.245)
[23:13:25] <constxd> but the C grammar is not expression oriented really
[23:13:35] <pragma-> Oh, right, I forgot we were talking about C.
[23:13:37] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 248 seconds)
[23:14:46] <constxd> SamuelMarks: ^ that's what i do for the Ty AST and i find it nice to work with
[23:14:51] <constxd> https://github.com/marchelzo/ty/blob/master/include/ast.h
[23:15:07] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:15:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:15:51] *** Joins: Chargen (~chargen@8.31.163.87)
[23:16:04] *** Quits: chomwitt (~chomwitt@athedsl-20549.home.otenet.gr) (Ping timeout: 260 seconds)
[23:16:21] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:45] *** Quits: trev (~trev@user/trev) (Quit: trev)
[23:16:53] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:17:18] *** Joins: Chargen (~chargen@8.31.163.87)
[23:17:22] *** Joins: chomwitt (~chomwitt@athedsl-369869.home.otenet.gr)
[23:17:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:17:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:17:36] *** Joins: wroathe (~wroathe@user/wroathe)
[23:18:30] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:19:05] *** Joins: Chargen (~chargen@8.31.163.87)
