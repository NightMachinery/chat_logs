[00:23:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 250 seconds)
[00:42:27] *** Quits: speskk (~speskk@user/speskk) (Remote host closed the connection)
[00:45:16] <tewi> what does indefinite extent mean exactly? extent - interval of time during which a reference to something is defined, indefinite extent - interval of time during which a reference to something is defined is unlimited. if a reference is valid indefinitely, wouldn't that be bad for garbage collection?
[00:48:48] <phoe> objects with indefinite extent are the whole purpose why garbage collectors exist
[00:49:31] <phoe> if some object only has dynamic extent then the GC needs to spare no effort collecting it
[00:50:18] <phoe> basically, indefinite extent means that some object goes on the heap, and becomes managed by the GC; dynamic extent, it goes on the stack, and is managed by program control flow
[00:51:24] <tewi> so with indefinite extent, something continues to exist as long as it can be referenced? and if gc can prove it cannot, it gets marked for collection or whatever the scheme is?
[00:51:33] <phoe> yes
[00:51:45] <phoe> if an object cannot be referenced, it is dead and can be collected
[00:52:17] <phoe> and if you can no longer reference an object, you cannot prove it exists
[00:54:52] <tewi> i guess what is really confusing me is what would count as a reference. so when you redefine a function for example, the old function object would be garbage collected, unless you had it still referenced somewhere, like a variable?
[00:57:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:02:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[01:02:49] <phoe> yes
[01:04:05] *** Joins: speskk (~speskk@c-71-234-67-119.hsd1.ct.comcast.net)
[01:04:05] *** Quits: speskk (~speskk@c-71-234-67-119.hsd1.ct.comcast.net) (Changing host)
[01:04:05] *** Joins: speskk (~speskk@user/speskk)
[01:07:14] *** Joins: dmgk (~dmgk@user/dmgk)
[01:18:29] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[01:18:38] <rotateq> :)
[01:19:05] <rotateq> What could be a good way to undefine all subclasses of a class?
[01:22:03] *** Joins: dra (~dra@2a04:4540:6407:b000:11f6:2ee1:9b7c:4495)
[01:24:18] *** Quits: dra (~dra@2a04:4540:6407:b000:11f6:2ee1:9b7c:4495) (Remote host closed the connection)
[01:24:35] <phoe> what do you mean, undefine?
[01:24:48] <rotateq> phoe: good question :)
[01:25:00] <rotateq> let me think about a formulation for a sec
[01:28:22] <rotateq> I have something with the dependency tree for classes and want it without possible old class definitions when it's run the next time.
[01:31:08] <rotateq> so there is really one root class from which the dependency tree of all subclasses is printed, like in the draggable-graph example of McCLIM (which I wanted to use/exchange to have it also visualized)
[01:33:26] <phoe> but what do you mean to undefine them
[01:33:43] <phoe> break the subclass/superclass association? remove them from the global class namespace?
[01:34:23] <rotateq> that another time it shall not happen to have accidentally a class in the graph which was just predefined but then not used anymore
[01:34:37] <rotateq> i would say the latter
[01:34:48] <phoe> note that the latter is not enough
[01:34:51] <phoe> they will still be in memory
[01:34:56] <rotateq> okay :)
[01:34:58] <phoe> because of the subclass/superclass association
[01:35:28] <rotateq> i would let a small macro generate the classes from an assoc-list
[02:03:49] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:21:41] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[02:53:05] *** Quits: fwoaroof (~fwoaroof@cpe-108-185-194-90.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:53:57] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:4100:dd4:ee5e:72a7) (Ping timeout: 240 seconds)
[02:54:35] <tewi> what is the relation between names, identifiers, and symbols, and what does it mean to "establish a mapping from names to symbols"? i thought symbol -> identifier (a symbol used to identify/distinguish names) -> name (identifier by which object etc. is referred to). but then on symbol page it says "interned symbol is uniquely identifiable by its name [...]" and i'm just confused
[02:55:11] <phoe> https://flownet.com/ron/packages.pdf
[02:55:18] <phoe> an unfortunately named but nice article
[02:59:29] *** Joins: fwoaroof (~fwoaroof@cpe-108-185-194-90.socal.res.rr.com)
[02:59:42] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:03:57] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[03:06:40] <tewi> i'll give it a more thorough read in the morning, but is it something along the lines of symbol -> name + package? 
[03:06:56] <phoe> more or less, yes
[03:07:21] <phoe> the important thing about packages is that a symbol is unique in a package
[03:07:25] <phoe> or rather
[03:07:36] <phoe> there can be only one symbol with a given name in a package
[03:07:42] <tewi> right, like namespaces
[03:07:47] <phoe> t
[03:10:31] <tewi> what confuses me is that name -> identifier and identifier -> symbol in the hyperspec glossary, and it reads like a circular definition
[03:10:40] <tewi> maybe i'm just reading it wrong or something?
[03:15:27] <tewi> unless identifier wasn't to be taken as a symbol, but a string instead like in symbol-name
[03:16:31] <phoe> tewi: see https://github.com/phoe/in-nomine/#manual
[03:16:36] <phoe> there are plenty of namespaces in Common Lisp
[03:16:42] <phoe> and not all are named with symbols
[03:17:09] <phoe> a "name" of an object can be a symbol, a string, a character, really a lot of things
[03:17:27] <phoe> symbols are named with strings, packages are named with strings
[03:17:33] <phoe> but functions are named with symbols
[03:18:33] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (Quit: Bye!)
[03:19:29] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[03:19:51] <tewi> so name would be just... something that is used to refer to an object?
[03:20:00] <phoe> aren't all names?
[03:21:33] <tewi> and identifier is either a symbol or string used as a name?
[03:22:26] <phoe> that's the clhs definition, yeah
[03:22:49] <phoe> but then, yanno, it's a bit circular because "what is a name? a miserable little pile of familiarities"
[03:22:57] <phoe> "but, enough talk, have at you"
[03:23:29] <tewi> yes, it's confusing
[03:26:14] <tewi> but where would you get a different definition from? common lisp the language?
[03:26:17] <phoe> name n., v.t. 1. n. an identifier by which an object, a binding, or an exit point is referred to by association using a binding. 
[03:26:31] <phoe> I'd say the english dictionary
[03:26:52] <phoe> if I were to get 100% technical, then the name is a key in some hash table or other dictionary-esque data structure
[03:27:40] <phoe> it is a piece of data which allows me to refer to some other piece of data because there is an association between these two
[03:27:44] <phoe> and that association is called a binding
[03:31:09] <tewi> makes sense. hopefully it will continue to, after i wake up. thanks phoe 
[03:31:21] <phoe> why did you call me phoe
[03:31:55] <phoe> :D
[03:32:09] <phoe> anyway I'll crash too
[03:32:11] <phoe> good night
[03:32:15] <tewi> good night
[03:32:25] <rotateq> good night you two
[04:12:59] *** Quits: tewi (~tewi@apn-95-40-139-216.dynamic.gprs.plus.pl) (Ping timeout: 256 seconds)
[04:21:01] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[04:23:03] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[04:23:21] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:57:45] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[05:01:15] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:05:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[05:34:17] *** Quits: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[05:43:24] *** Joins: Rue (~rue@2001-b011-1000-1402-f4fe-f6f9-1dd3-9979.dynamic-ip6.hinet.net)
[06:18:57] *** Joins: Josh_2 (~user@37.25.47.130)
[06:32:23] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:b92:1a0:165b:5914)
[07:02:50] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:07:31] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[07:34:11] <beach> Good morning everyone! 
[07:40:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[07:43:02] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:e8ea:b48d:a0c7:7ddc)
[08:08:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:13:25] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[08:31:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:36:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[09:06:59] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:17:37] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[09:37:27] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:e8ea:b48d:a0c7:7ddc) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:37:49] *** Joins: occ (~occ@user/occ)
[09:46:11] *** Quits: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105) (Ping timeout: 252 seconds)
[10:24:16] *** Joins: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105)
[10:33:08] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:36:56] *** Joins: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d)
[10:37:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[10:44:13] *** Joins: shka (~herr@109.231.0.226)
[10:52:54] *** Quits: dre (~dre@2001:8003:c932:c301:3356:3f6e:5d90:d014) (Quit: Leaving)
[10:53:57] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[11:01:43] <phoe> hello
[11:02:40] <beach> Hello phoe. 
[11:12:00] *** Quits: occ (~occ@user/occ) (Ping timeout: 256 seconds)
[11:12:52] <rotateq> beach: I hope you come along well with doing the SICL bootstrapping process. :)
[11:14:54] <beach> Thanks.
[11:17:30] *** Joins: tewi (~tewi@apn-95-41-20-73.dynamic.gprs.plus.pl)
[11:34:17] *** Quits: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105) (Ping timeout: 240 seconds)
[11:38:02] *** Joins: Partmedia (~kevinz@2600:6c40:6400:2f:221:ccff:fe66:4105)
[12:00:46] *** Joins: ogamita (~pjb@2a01:cb11:8036:90c2:9d7d:7385:bf16:b209)
[12:05:49] *** Joins: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de)
[12:07:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[12:08:14] *** Joins: occ (~occ@user/occ)
[12:12:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[12:48:05] *** Quits: occ (~occ@user/occ) (Read error: Connection reset by peer)
[12:51:19] *** Joins: dre (~dre@2001:8003:c932:c301:c29e:700:d5d3:6fcd)
[13:10:12] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:14:43] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:21:41] *** Joins: treflip (~user@user/treflip)
[13:34:14] *** Joins: kathe (~kathe@49.32.232.67)
[13:47:17] *** Quits: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d) (Ping timeout: 240 seconds)
[14:11:02] *** Quits: speskk (~speskk@user/speskk) (*.net *.split)
[14:11:03] *** Quits: dbotton (sid492350@lymington.irccloud.com) (*.net *.split)
[14:16:13] *** Joins: speskk (~speskk@user/speskk)
[14:16:13] *** Joins: dbotton (sid492350@lymington.irccloud.com)
[14:44:28] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[14:45:48] *** Joins: minion (~minion@common-lisp.net)
[15:01:16] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:3c97:bf3a:3e4c:7eb2)
[15:11:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:12:34] *** Quits: kathe (~kathe@49.32.232.67) (Quit: Leaving)
[15:16:26] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[15:25:02] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:25:21] *** Joins: occ (~occ@user/occ)
[15:46:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:46:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[16:18:42] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[16:20:26] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[16:30:44] *** Quits: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[16:39:31] *** Quits: occ (~occ@user/occ) (Ping timeout: 245 seconds)
[16:44:22] *** Joins: vcarvalho (~vcarvalho@161.230.15.110)
[17:31:42] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[17:36:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:06:17] *** Joins: occ (~occ@user/occ)
[18:11:59] *** Joins: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de)
[18:20:39] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[18:24:37] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[18:26:51] *** Joins: aeth (~aeth@user/aeth)
[18:46:58] *** Quits: silasfox (~sbv@p200300cec71adb000b1561d576288968.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[18:52:36] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[19:09:58] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[19:34:17] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[19:35:45] *** Joins: aeth (~aeth@user/aeth)
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:53:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:58:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[20:00:09] *** Joins: rotateq (~user@p200300e78706a00050f72feb644e2401.dip0.t-ipconnect.de)
[20:00:55] *** Joins: aeth_ (~aeth@user/aeth)
[20:02:41] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[20:02:46] *** aeth_ is now known as aeth
[20:51:40] *** Quits: Rue (~rue@2001-b011-1000-1402-f4fe-f6f9-1dd3-9979.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[20:56:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:00:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[21:00:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[21:01:02] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:3c97:bf3a:3e4c:7eb2) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:04:36] *** Joins: Bike (~Glossina@71.69.170.70)
[21:39:33] *** Joins: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d)
[21:56:17] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:b92:1a0:165b:5914) (Ping timeout: 240 seconds)
[22:03:35] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:c170:ec30:68fa:bc68)
[22:03:59] *** Quits: vcarvalho (~vcarvalho@161.230.15.110) (Ping timeout: 256 seconds)
[22:17:36] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:24:37] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:c170:ec30:68fa:bc68) (Ping timeout: 240 seconds)
[22:40:04] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:833f:e9c7:6325:4206)
[22:59:16] *** Joins: aeth_ (~aeth@user/aeth)
[22:59:22] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[22:59:24] *** aeth_ is now known as aeth
[23:04:29] *** Joins: vcarvalho (~vcarvalho@161.230.15.110)
[23:17:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:26:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:31:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[23:52:26] *** Quits: rain3 (~rain3___@2a02:2f09:d103:6400:778f:987:8477:e76d) (Ping timeout: 245 seconds)
