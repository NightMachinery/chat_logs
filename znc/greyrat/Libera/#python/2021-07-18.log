[00:00:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[00:00:21] <bjs> beeza: why did replace_suffix change to have `input: Union[List[Pathish], Pathish]`
[00:00:42] *** Joins: lexandrop (~lex@user/lexandrop)
[00:00:43] <Gustavo6046> bjs: maybe it checks for iterability and runs path.join on that?
[00:00:47] <beeza> because it is overload implementation
[00:00:51] <Gustavo6046> assuming I recognized correctly
[00:00:59] <bjs> beeza: a function like `def f(x: Union[int, str]) -> Union[int, str]` doesn't tell you *which* (int or str) you get. So you cannot go `a: str = f("a")` for example
[00:01:15] <Gustavo6046> beeza: you should use generics for that
[00:01:20] <Gustavo6046> like a typevar
[00:01:29] <beeza> bjs: yes but it has overloads, so which overload you call does tell you
[00:01:31] <Gustavo6046> orrr, you can use typing.protocol and the overloading thingy
[00:01:35] <Gustavo6046> I forgot the name :<
[00:01:36] <bjs> beeza: oh I missed the overloads sorry
[00:01:58] <Gustavo6046> Here https://docs.python.org/3/library/typing.html#typing.overload
[00:02:02] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[00:03:15] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:03:23] <bjs> beeza: Oh your 2nd overload has `List[PathishT]` but the implementation only has `Union[List[Pathish], Pathish]`
[00:03:48] <beeza> but PathishT is bound to Pathish ðŸ¤”
[00:03:49] <bjs> Remember that List is invariant, so List[Union[str, PurePath]] is not the same as Union[List[str], List[PurePath]]
[00:03:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[00:04:06] <bjs> beeza: it has an upper bound* of Pathish, which is a Union.
[00:04:18] <beeza> ðŸ¤”
[00:05:02] <bjs> beeza: there's a difference between List[Union[int, str]] and List[T] where T has upper bound Union[int, str]
[00:05:21] <beeza> I see
[00:05:23] <beeza> thanks
[00:05:42] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[00:06:24] <bjs> beeza: typing generally goes better the less concrete the types are
[00:06:41] *** Joins: Warped (~Warped@user/warped)
[00:09:32] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[00:10:19] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[00:10:29] <winterflaw> (as a C programmer, that sentence made me wince :-)
[00:10:51] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:12:05] <beeza> winterflaw: as someone who has used python typing which is much more expressive than C typing, C typing makes me winch
[00:12:23] <beeza> winterflaw: if you even want to do something slightly as complicated as this in c you have to resort to void*
[00:12:25] <winterflaw> makes you winch, does it? :-)
[00:12:38] <beeza> wince*
[00:12:42] <winterflaw> that portable crane in the back yard turned out to be useful for stress relief ;-) :-)
[00:13:06] <winterflaw> you can't compare C and Python, I think
[00:13:10] <winterflaw> different use cases
[00:13:32] <winterflaw> there's a metric ton of stuff I would never dream of writing in C, which Python does almost effortlessly
[00:14:08] <beeza> winterflaw> (as a C programmer, that sentence made me wince :-)
[00:14:09] *** Joins: tspng (~tspng@2a02:168:a1a1:1:fd0c:db2:d58c:d2ef)
[00:14:21] <beeza> ðŸ¤·
[00:14:44] <winterflaw> I love C, but I don't need to spent ten hours doing something in C which I can do in one hour in Python :-)
[00:14:51] *** Joins: Fiji (~Fiji@user/fiji)
[00:15:17] <apollo13> I hate C with a passion :D
[00:15:51] <beeza> it's not conducive to correct implementations
[00:16:00] <winterflaw> well, don't let it get you down - I'm sure one day you'll master programming ;-) :-P :-)
[00:16:57] <beeza> winterflaw: we can only hope
[00:17:01] <beeza> or dream
[00:18:04] <the-mask> is there any resource where I can understand the design of GUI ?
[00:19:24] <winterflaw> can you do GUIs with Python?
[00:19:40] <beeza> winterflaw: not once you mastered programming
[00:20:17] <winterflaw> I mastered eating chocolate :-)
[00:20:29] *** Quits: koltrast (403c30d0@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[00:25:06] *** Joins: finsternis (~X@23.226.237.192)
[00:25:08] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507) (Quit: Textual IRC Client: www.textualapp.com)
[00:26:12] *** Joins: oriba (~oriba@x4dbf7706.dyn.telefonica.de)
[00:31:10] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Ping timeout: 252 seconds)
[00:31:57] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[00:32:26] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[00:32:34] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[00:33:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564)
[00:34:02] *** Quits: oriba (~oriba@x4dbf7706.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:34:19] *** Joins: iauc (uid508886@id-508886.tooting.irccloud.com)
[00:34:47] *** Quits: philipp64|work (~philipp64@mail.redfish-solutions.com) (Quit: philipp64|work)
[00:34:48] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 255 seconds)
[00:36:45] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:36:58] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[00:36:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:37:19] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[00:37:50] *** iauc is now known as abraxas
[00:37:58] *** abraxas is now known as braxas
[00:39:08] *** Quits: braxas (uid508886@id-508886.tooting.irccloud.com) (Quit: Updating details, brb)
[00:39:17] *** Joins: braxas (sid508886@id-508886.tooting.irccloud.com)
[00:40:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:40:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:41:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:44:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[00:51:07] *** Joins: cdown (~cdown@host213-122-124-140.range213-122.btcentralplus.com)
[00:51:37] <SnoopJ> winterflaw, yep, you can do GUIs with Python
[00:52:06] <winterflaw> in what way?
[00:52:22] <winterflaw> Python can open, say, windows on Windows?
[00:52:51] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[00:54:26] <SnoopJ> yep
[00:54:46] <braxas> I dunno, I think winterflaw would have known this if it was true
[00:55:03] <SnoopJ> winterflaw, there's a summary of resources here: https://wiki.python.org/moin/GuiProgramming
[00:55:11] <winterflaw> I've never need to use Python for GUI work, on any platform.
[00:55:22] <winterflaw> I use it for web-based backends, so in that sense there's a GUI.
[00:55:34] <SnoopJ> The ones I see often in #python are PyQt, Kivy, Tkinter, wxPython, in no particular order
[00:55:35] <winterflaw> I've never even needed to google a bit to find out if it could be done.
[00:55:40] <bjs> winterflaw: there are some popular libraries (like PyQt5, and Kivy) that make nice interfaces
[00:55:54] <SnoopJ> Of those, I'd say Kivy strikes the best balance between "easy to get started" and "capable of complexity"
[00:55:55] <winterflaw> That's interesting.
[00:56:08] <ChrisWarrick> winterflaw: you might want PySide, which is like PyQt but with better licensing
[00:56:09] <winterflaw> the only
[00:56:16] <SnoopJ> ah yea, PySide too
[00:56:20] <winterflaw> real project I have in mind which needs a local GUI though is a text editor
[00:56:31] <winterflaw> and I'd make that in C
[00:56:39] <ChrisWarrick> winterflaw: why in C?
[00:57:00] <SnoopJ> winterflaw, the way most of these tools work is by using Python as a "glue language" to some library written in another language (often C++)
[00:57:24] <winterflaw> Snoop -> yes -> not a surprise
[00:57:34] <winterflaw> I'd also need to learn how to make GUIs under Linux, too
[00:57:35] <SnoopJ> oh I guess PyGame should be mentioned, too, but that's less for "GUI" than it is for games (although the distinction is not entirely sharp)
[00:57:46] <SnoopJ> winterflaw, all the options we've listed here are cross-platform :)
[00:57:55] <winterflaw> I used to know how to make them in Windows, many, many years ago (using Win32 in fact - lord knows how it's done now)
[00:58:02] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[00:58:09] <winterflaw> I wouldn't want my software *to* run on Windows :-)
[00:58:09] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:16] <winterflaw> can I turn the cross-platform off? :-)
[00:58:25] <ChrisWarrick> winterflaw: why not? modern Windows is a pretty good platform
[00:58:27] <SnoopJ> you can not-distribute it for those platforms if you'd like, sure.
[00:58:33] <winterflaw> Chris -> in C because I write code for pleasure and I love C
[00:58:43] <winterflaw> I wouldn't dream of doing a really serious piece of work in anything else
[00:58:48] <SnoopJ> ouch
[00:58:57] <winterflaw> I'd like it to actively sabotage those other platforms
[00:59:02] <winterflaw> is there a module for that? :-)
[00:59:08] <SnoopJ> nope
[00:59:12] <winterflaw> dang
[00:59:14] <winterflaw> well
[00:59:16] <winterflaw> gap in the market :-)
[00:59:20] <SnoopJ> if you say so
[00:59:48] <BtbN> "How to make sure nobody ever takes me and my software serious"-101?
[01:00:28] <winterflaw> Chris -> I'm not being particularly serious, but by and large I'm *not* an MS fan
[01:00:39] <winterflaw> I never forgave them for introducing top posting in email/news
[01:01:03] <winterflaw> I also went through a lot of pain with Visual Studio before abandoning it as a platform
[01:01:06] <SnoopJ> WSL complicates things quite a lot: you might want to stop developing for Linux, too, if you don't want people running your software on Windows.
[01:01:25] <winterflaw> there are some things - large scale build configuration - which a GUI is absolutely impossible for
[01:01:27] <BtbN> What's the issue with that? Scrolling over an endless mountain of previous mails to reach the new stuff is just annoying.
[01:01:43] * SnoopJ glances at /topic
[01:01:51] *** Joins: hafat (~hafat@95.70.168.45)
[01:01:59] <winterflaw> where a makefile will let you do in five minutes what VS needs five days for, and five days of non-stop mousing and clicking
[01:02:01] <winterflaw> it's torture
[01:02:17] <SnoopJ> winterflaw, do you have any other questions about Python?
[01:02:17] *** Joins: koltrast (55df89c8@h77-53-57-114.cust.a3fiber.se)
[01:02:36] <BtbN> Seems just like shotgun troll attempts to me really.
[01:02:43] <SnoopJ> BtbN, DNFTT, then
[01:02:52] <winterflaw> ta very much :-P
[01:04:24] <SnoopJ> ooh, MicroPython's .mpy format seems pretty neat.
[01:05:16] *** Joins: pnoud (~pnoud@user/pnoud)
[01:08:07] *** Quits: elezium (~elezium@modemcable039.188-176-173.mc.videotron.ca) (Quit: Client closed)
[01:10:21] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[01:10:59] *** Joins: vicfred (~vicfred@user/vicfred)
[01:11:34] *** Quits: rendar (~rendar@user/rendar) ()
[01:11:36] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[01:11:38] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:12:36] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[01:15:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:20:40] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[01:21:11] <habnabit_> str really shouldn't be iterable
[01:21:19] <habnabit_> it makes me so sad that it is
[01:21:41] <ba> +1 on that. Can we fix it in python 4? :D
[01:21:45] <NeilRG> habnabit_, yeah I agree
[01:22:11] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[01:22:48] <NeilRG> habnabit_, they should have had an as_chars method that returns a sequence of characters writeable view
[01:22:53] <NeilRG> or chars
[01:23:21] <habnabit_> NeilRG, now, what's a char? ;)  a grapheme cluster? for sure
[01:23:39] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[01:23:42] <NeilRG> I don't know, a unicode character of some kind?
[01:23:52] <NeilRG> isn't that what the elements of a str currently are?
[01:23:57] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[01:24:25] <habnabit_> NeilRG, no. the elements of a str are code points. a grapheme cluster is a single displayed 'character' which might be multiple code points
[01:25:04] <NeilRG> what I mean by elements, is whatever some_str[i] returns
[01:25:11] <NeilRG> can't that return multiple code points?
[01:25:18] <habnabit_> NeilRG, some alphabets don't have individual 'letters' without combining several graphemes/code points; some latin languages have combining diacritics
[01:25:24] <habnabit_> NeilRG, no. that will only return one code point
[01:25:28] <NeilRG> oh really?
[01:25:33] <NeilRG> didn't realize that
[01:25:41] <habnabit_> NeilRG, yes. it's yet another unfortunate design
[01:25:49] <NeilRG> seems like it then yes
[01:25:58] <habnabit_> indexing by code point is pretty useless
[01:26:03] <NeilRG> yup, you're right
[01:26:12] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:5116:121c:1aec:4564) (Quit: Client closed)
[01:26:26] <habnabit_> but some people want to pretend everything is ascii, where everything is only one code point
[01:26:29] <NeilRG> too bad no one said anything 15 years ago
[01:26:29] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[01:26:48] <NeilRG> or 25 or whatver
[01:27:11] <habnabit_> yeah, unicode has developed substantially since then
[01:29:20] <NeilRG> the only problem with your first suggestion is that working with strings would pollute code with a lot of method calls
[01:29:30] <habnabit_> how so?
[01:29:40] <NeilRG> right now you can do some_str[i:i+10]
[01:29:57] <NeilRG> did you want to keep the indexing without remaining a sequence?
[01:30:11] <habnabit_> some_str.graphemes[i:i+10]
[01:30:20] <NeilRG> right, so that's the tradeoff
[01:30:28] <NeilRG> I'm on your side, but some people might find that noisy
[01:30:29] <habnabit_> that's not a method call tho
[01:30:42] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 240 seconds)
[01:30:48] <NeilRG> also .chars is less accurate than graphemes, but probably easier to understand
[01:31:00] <habnabit_> i don't care; i prefer the lack of ambiguity. like if you also need some_str.code_points[i:i+10]
[01:31:22] <habnabit_> indexing directly is ambiguous and i don't like it
[01:31:29] <NeilRG> that's also a good point, you could get the graphemese separately from the code points
[01:31:37] <NeilRG> yeah great idea
[01:31:43] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[01:31:47] <NeilRG> maybe someone could build your super_str type
[01:31:55] <habnabit_> ha
[01:32:02] <NeilRG> and eventually it could replace str with a from __future__ import super_str
[01:32:09] <NeilRG> that's the dream, right?
[01:32:15] <habnabit_> yes
[01:32:21] <NeilRG> well, you have my vote
[01:32:48] <habnabit_> yay
[01:32:53] <NeilRG> :D
[01:33:27] <Yhg1s> can't be done with a future import, though. It'd just have to be new features on str, with its sequence behaviour deprecated, then deprecated with a noisy warning, and then removed.
[01:34:02] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:34:15] <habnabit_> Yhg1s, couldn't the code path issuing a warning check if the calling frame had the future flag on?
[01:34:18] <NeilRG> Why can't it be done with a future import?
[01:34:37] <NeilRG> it would just replace the type for that file
[01:34:40] <Yhg1s> NeilRG: because you can pass strings around.
[01:34:42] <NeilRG> yes
[01:34:51] <NeilRG> I realize there would be all kinds of intermixing problems
[01:34:59] <habnabit_> right. so you want to predicate it on source file
[01:35:01] *** Quits: mexen (uid495612@user/mexen) ()
[01:35:05] *** Quits: Quack (~Quack@185.21.216.169) (Remote host closed the connection)
[01:35:11] <habnabit_> it's one type that issues warnings differently
[01:35:14] *** Joins: Quack (~Quack@185.21.216.169)
[01:35:18] <Yhg1s> You would create a string in the module with the future import to something without the future import; should it fail or not? Also, vice-versa.
[01:35:35] <Yhg1s> eh, pass, not create.
[01:35:38] <NeilRG> there would be issues, yes.
[01:35:48] <NeilRG> some things are easy to fix
[01:35:56] <NeilRG> comparison can be made to work pretty easily
[01:35:58] <Yhg1s> Yes. The part where it's a future import is not easy to fix :)
[01:36:07] <Yhg1s> (that's why we had Python 3.)
[01:36:07] <NeilRG> :)
[01:36:08] <habnabit_> what about what i said!!!
[01:36:20] <NeilRG> habnabit_, whagt di dyou say?
[01:36:22] <Yhg1s> habnabit_: I don't know how that would work, and I doubt it would catch all issues.
[01:36:32] <NeilRG> oh I see
[01:36:55] <NeilRG> well, first someone has to make the super_str
[01:37:03] <Yhg1s> habnabit_: not everything is a Python frame. Also, Python frames can be misleading. It also makes code refactoring a lot less safe.
[01:37:39] <habnabit_> is there no 'nearest python frame' concept
[01:37:48] <Yhg1s> not currently, no.
[01:38:16] <habnabit_> i bet stackless has that
[01:38:30] <Yhg1s> I don't think there should be, either. If you're passing a string to an extension module, your future import affecting your use of the string should not affect its behaviour.
[01:38:37] <Yhg1s> stackless still exists?
[01:38:47] <habnabit_> man idk
[01:41:22] <Yhg1s> There's another issue with relying on future imports: things that pass strings as iterables to code that accepts arbitrary iterables.
[01:41:41] <bjs> Yhg1s: doesn't generator_stop make different generator objects, which code outside the module the generators are passed to see?
[01:41:58] <bjs> Could have a future that makes string literals build a "non-sequence str" type ;)
[01:42:44] <Yhg1s> bjs: yes, just like 'from __future__ import unicode_literals'. Have you ever used it? :)
[01:43:32] <bjs> Yhg1s: oh I forgot about that one
[01:43:35] <bjs> that was a long time ago now
[01:43:46] <Yhg1s> bjs: and yes, 'from __future__ import generator_stop' produced subtly different generators, but the thing it affects is local to the generator (whether it catches StopIteration silently or not)
[01:43:58] <NeilRG> honestly, there should be a list of Python quirks that are hard to fix
[01:44:17] <NeilRG> this super string one is a good one
[01:44:39] <Yhg1s> People can never agree on what's a quirk or not. They can't even agree to get rid of absurdly antique stdlib modules.
[01:44:52] <habnabit_> is asyncore gone yet
[01:44:54] <NeilRG> bool being a subtype of int bugs me sometimes
[01:45:28] <bjs> I still think tuples being iterable was a mistake :)
[01:45:30] <NeilRG> and the fact that numbers are truthy
[01:45:33] <NeilRG> bjs really?
[01:45:45] <Yhg1s> habnabit_: https://www.python.org/dev/peps/pep-0594/#asyncore
[01:45:52] <Yhg1s> (but note the state of the PEP)
[01:46:03] <habnabit_> Yhg1s, but is it actually gone?
[01:46:06] <bjs> yes, or really tuples are just a mistake of a type. we should've had frozenlist() and classes and maybe not have tuples at all
[01:46:09] <Roey> anyone here ever get into python-rust integration?
[01:46:19] <habnabit_> Roey, yep
[01:46:23] <Yhg1s> habnabit_: no, that's what I meant.
[01:46:30] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[01:46:33] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[01:46:41] <Roey> habnabit_: I looked for resources today but I wonder if there is an official set of python docs for this
[01:46:50] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[01:46:57] <habnabit_> Roey, official set? ha
[01:46:59] <Yhg1s> (there was a lot of exhausting debate about the PEP, to the point where Christian spent time on other things instead.)
[01:47:15] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:47:18] <ChrisWarrick> Iâ€™d love to see that PEP revived
[01:47:27] <Roey> habnabit_: like there are libraries here or there for specific things with python and rust
[01:47:31] <NeilRG> bjs, isn't tuple a frozen list?
[01:47:37] <NeilRG> essentially?
[01:47:49] <bjs> NeilRG: depends who you ask, and that is the problem.
[01:47:50] <Roey> habnabit_: I found those, and also articles talking about integrating rust with python, but no "official" docs
[01:47:53] <Roey> for it.
[01:48:04] <habnabit_> Roey, https://github.com/PyO3/maturin
[01:48:24] <habnabit_> Roey, that's the most self-contained thing i've found
[01:48:28] <NeilRG> bjs I mean conceptually though, we do think of tuples differently, don't we?   list is usually a homogeneous type like List[X], wherease tuple is heterogeneous Tuple[A, B, C]
[01:48:29] <Roey> oh thank you
[01:48:32] <Roey> habnabit_: ^
[01:48:46] <Roey> habnabit_: what's your background in rust, out of curiosity?
[01:48:56] <habnabit_> Roey, used it for years
[01:48:57] <bjs> NeilRG: well, some people think of them differently. Which is the same problem as I just said just from the other side :)
[01:49:04] <graingert> They barely managed to remove @asyncio.coroutine
[01:49:08] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:49:24] <Roey> habnabit_: do you still do anything in C?
[01:49:29] <habnabit_> Roey, lmao no
[01:49:30] <graingert> I'd like arbitrary heterogeneous Iterables
[01:49:34] <Roey> habnabit_: heh
[01:49:38] <Yhg1s> Don't put things in the stldib, don't want having things in the stdlib, don't use the stdlib.
[01:49:45] <NeilRG> graingert, List[Any]?
[01:50:06] <Roey> habnabit_: that said, do you ever see a rust-based python interpreter and libs?
[01:50:12] <bjs> Yhg1s: people don't really care about "stdlib" they want "came with my installation"
[01:50:17] <graingert> NeilRG: No like List[int, str]
[01:50:20] <habnabit_> Roey, at least one already exists
[01:50:34] <bjs> graingert: is that like Union[List[int], List[str], List[Union[int, str]]  ?
[01:50:36] <NeilRG> graingert, why do you want that?
[01:50:40] <Roey> habnabit_: ahhhhh cool
[01:50:50] <Yhg1s> bjs: a large proportion does, yes. There are also people who do care about what is in the stdlib, for a variety of reasons.
[01:50:51] <graingert> It's used a lot as a replacement for nonlocal in twisted
[01:51:00] <Roey> https://github.com/RustPython/RustPython
[01:51:08] <Roey> habnabit_: ^ ok, I se
[01:51:10] <Roey> see*
[01:51:18] <NeilRG> it's better to keep things out of stdlib so that they can develop at a reasonable speed
[01:51:19] <bjs> graingert: wouldn't the obvious replacement for the non-local scope be a dictionary?
[01:51:29] *** Joins: Dotz0cat_ (~Dotz0cat@h216.44.90.75.dynamic.ip.windstream.net)
[01:51:29] <bjs> anyway
[01:51:41] <habnabit_> Roey, i've seen other people talking about making personal projects to do the same
[01:51:44] <habnabit_> Roey, but yeah
[01:51:51] <graingert> Also I want to subclass Iterable[MemoryObjectSendStream[T], MemoryObjectReceiceStream[T]]
[01:52:17] *** Quits: Dotz0cat (~Dotz0cat@h6.93.213.151.dynamic.ip.windstream.net) (Ping timeout: 268 seconds)
[01:52:21] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[01:52:22] <graingert> So that I can be unpacked in a tx, rx = MemoryObjectStream[int]()
[01:52:40] <habnabit_> Roey, the library 'cryptography' uses rust in its python now, via nearly the same toolchain that maturin sets up
[01:52:46] <graingert> bjs: I suppose a TypedDict would work
[01:52:50] <habnabit_> Roey, cryptography's build process is highly specialized
[01:52:57] <graingert> But it's slower than a list
[01:53:19] *** Dotz0cat_ is now known as Dotz0cat
[01:53:52] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 256 seconds)
[01:54:43] *** Joins: jelmer (~jelmer@user/jelmer)
[01:55:09] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:55:27] <Roey> habnabit_: sure
[01:55:44] <Roey> why is cryptography using rust out of all the ohter libraries, ha
[01:56:04] <habnabit_> Roey, its authors care about security and hate writing security-critical C code
[01:56:19] <Roey> ok
[01:56:47] <Roey> I was coming at it from the perspective that it's just number-crunching, nothing to do with heavy pointer and memory allocation work
[01:56:57] <Roey> [for which Rust is good at ensuring safety]
[01:57:04] <Yhg1s> Roey: you may want to check the number of CVEs for OpenSSL.
[01:57:12] <Roey> oh gosh.
[01:57:27] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[01:58:18] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:00:59] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[02:02:10] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:02:48] *** Joins: plains (~plains@user/plains)
[02:04:21] *** Quits: tspng (~tspng@2a02:168:a1a1:1:fd0c:db2:d58c:d2ef) (Quit: Leaving, bye!)
[02:05:19] *** Parts: nickjj (~nickjj@user/nickjj) (Leaving)
[02:05:40] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[02:06:46] *** Joins: lmmx (~louis@host-92-23-205-52.as13285.net)
[02:10:53] <rannnn8888> re.compile(r'^[A-Z]{5,}$') i worng ? i want all the A-Z with 4 lettrs
[02:11:16] <habnabit_> rannnn8888, {5,} means '5 or more'
[02:12:01] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 268 seconds)
[02:13:28] <rannnn8888> habnabit_ if i make this 4 its remve the 4 https://dpaste.org/j53f
[02:14:09] <rannnn8888> i get empty list only 5 return the 4 lettres
[02:14:35] *** Joins: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com)
[02:15:39] <Yhg1s> rannnn8888: '{4,}' means '4 or more'.
[02:15:56] <rannnn8888> Yhg1s u see the dpaste ?
[02:16:06] <bjs> rannnn8888: no, the dpaste has been deleted
[02:16:07] <Yhg1s> rannnn8888: yes. Do you understand what '4 or more' means?
[02:16:08] <bjs> (stop using dpaste)
[02:16:29] <bjs> doesn't infobob re-paste dpastes?
[02:16:37] <habnabit_> no, but it could
[02:17:57] <rannnn8888> Yhg1s https://bpa.st/3C4Q So what the output do you expect to get here ?
[02:18:24] <Yhg1s> rannnn8888: the output you get: The empty list. Because '{4,}' means '4 or more', so all those strings match.
[02:19:05] <rannnn8888> "DSDS" but  this it not 4 ?
[02:19:21] <bjs> rannnn8888: {4,} means 4 _or more_
[02:19:21] <Yhg1s> rannnn8888: 'DSDS' is 4.
[02:19:32] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 250 seconds)
[02:19:42] <rannnn8888> '4 or more'
[02:19:51] <rannnn8888> why i get the empty list :X  ?
[02:19:58] <Yhg1s> rannnn8888: I'm not sure how to put this differently.
[02:19:59] <bjs> rannnn8888: so "ABCD" matches because it is 4, and "ABCDE" matches because it's more than 4. But "ABC" does not match since it's less than 4
[02:20:02] <bjs> rannnn8888: because they all match
[02:20:13] <Yhg1s> rannnn8888: you get the empty list because all of the items match. The items all match because they are all 4 or more characters.
[02:20:14] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[02:20:21] <bjs> rannnn8888: your list is all the things where `not regex.search(i)` but every i matched.
[02:20:32] *** Joins: jelmer (~jelmer@user/jelmer)
[02:21:29] <rannnn8888> so if i want get only the item Which are 4 letters
[02:21:40] <rannnn8888> items*
[02:21:50] <Yhg1s> rannnn8888: then you need to not use '{4,}'. You could use '{4}'.
[02:22:23] <bjs> rannnn8888: (and drop the `not`)
[02:22:32] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 255 seconds)
[02:22:48] <Gustavo6046> I think my code may be starting to get a bit overengineered.
[02:22:58] <Gustavo6046> Or at least convoluted.
[02:23:58] <rannnn8888> Yhg1s bjs Thank you
[02:24:03] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[02:24:21] <Gustavo6046> https://github.com/Gustavo6046/triarc most of the relevant work in the dev/1.0.0 branch and the work/dev/1.0.0/* branches is what I am referring to
[02:24:26] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[02:26:48] *** Quits: p-i- (~Ohmu@node-467.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:28:03] <rannnn8888> have idea how make its faster ? https://bpa.st/NG4A
[02:29:10] <grym> rannnn8888: use sets
[02:29:54] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[02:30:11] <Yhg1s> grym: it's a text search.
[02:30:13] *** Quits: upsala2 (~zcb@185.213.155.160) (Ping timeout: 258 seconds)
[02:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:30:58] <Yhg1s> rannnn8888: namesre = '|'.join(re.escape(name) for name in names); if re.search(namesre, textexmaple): print('make')
[02:31:10] <rannnn8888> grym but how its help ? i want cheack if one from my items in a text i chaeck
[02:31:34] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:32:32] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[02:35:01] *** Joins: Guest24 (~Guest24@77.124.108.113)
[02:36:33] *** Joins: iogue (~iogue@gateway/tor-sasl/iogue)
[02:36:58] <Guest24> Hi, I want to make sure some of dataclasses from my code will be able to (de)serialize to json, I saw Pydantic and dataclasses-json, from some quick sight, looks that pydantic is more maintained and doced, any reason not to use pydantic.dataclasses instead of the regular one?
[02:37:46] <Yhg1s> Guest24: you may want to use pydantic. certainly don't use dataclasses; use attrs if you don't want pydantic.
[02:37:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:37:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[02:38:01] <rannnn8888> Yhg1s i forgot i need but get the name
[02:38:54] <Yhg1s> rannnn8888: m = re.search(namesre, textexmaple); print(m.group(0))
[02:39:03] <rannnn8888> https://bpa.st/YMUQ example
[02:39:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:39:16] <Guest24> Why 'certainly dont use dataclasses' ?
[02:39:42] <Yhg1s> Guest24: attrs is better in all ways, and can be installed separately from Python, which means you aren't beholden to the Python version for its specific behaviour.
[02:40:15] <grym> Guest24: for round-tripping to json, pydantic is a little more ergonomic to me than attrs
[02:40:18] <grym> but both are good
[02:41:11] *** Joins: CodePoint (~BitShift@47.186.145.58)
[02:41:24] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:42:19] <Guest24> There are some other projects besides fastapi that uses pydantic?
[02:42:51] *** Quits: lmmx (~louis@host-92-23-205-52.as13285.net) (Ping timeout: 268 seconds)
[02:43:22] <rannnn8888> Yhg1s i need use this 2 times ? https://bpa.st/MHLQ
[02:43:43] <Guest24> I saw that pydantic does not support every feature of dataclass "as-is", like frozen. I would like to create a baseclass for my code to integrate with pydantic if possible, and search for references
[02:43:44] <Yhg1s> rannnn8888: no, you do not. Do 'if m:' after 'm = re.search(...)'
[02:43:51] <grym> Guest24: https://github.com/samuelcolvin/pydantic/network/dependents
[02:43:53] <Yhg1s> rannnn8888: you also don't need the ';'.
[02:44:44] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Remote host closed the connection)
[02:45:04] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0)
[02:46:01] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[02:46:11] <rannnn8888> Yhg1s ';'. mistake , like this yepp ?https://bpa.st/HU5Q
[02:46:31] <Yhg1s> rannnn8888: sure.
[02:46:42] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 258 seconds)
[02:48:40] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:52:26] <graingert> Guest24: If you're going to use pydantic you might as well use the full featured BaseModel
[02:53:03] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:59:00] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[03:01:39] *** Joins: driib4 (~driib@185.195.233.168)
[03:02:37] *** Quits: magla (~gelignite@55d4b6dc.access.ecotel.net) (Quit: Stay safe!)
[03:05:33] *** Quits: driib (~driib@185.195.233.170) (Ping timeout: 255 seconds)
[03:05:33] *** driib4 is now known as driib
[03:06:06] *** Joins: pnoud (~pnoud@user/pnoud)
[03:07:33] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:9752:5098:f3e0:54a6)
[03:08:03] *** Quits: Guest24 (~Guest24@77.124.108.113) (Quit: Client closed)
[03:09:30] <voldial> how do I get sh to fork a process? https://bpa.st/JTFA
[03:09:38] *** Quits: Akuli (~Akuli@87-94-109-15.bb.dnainternet.fi) (Remote host closed the connection)
[03:10:11] <voldial> xterm launches in that case, but sh still blocks until xterm exits.
[03:11:13] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[03:11:46] *** Quits: isekaijin (~pyon@user/pyon) (Ping timeout: 252 seconds)
[03:11:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[03:11:59] <voldial> same result with sh.xterm(_bg=True, _bg_exc=True)
[03:12:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[03:12:16] *** Joins: monkey_ (~user@190.104.116.134)
[03:13:06] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:14:33] *** Joins: skapate (~Skapata@user/skapata)
[03:15:00] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[03:15:19] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 246 seconds)
[03:16:16] *** Joins: jelmer (~jelmer@user/jelmer)
[03:17:03] <voldial> oops. all I had to do was assign it to a var
[03:20:51] *** Joins: _SKiTZO (~dark@147.89-10-133.nextgentel.com)
[03:23:09] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:24:15] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[03:24:19] <Jin^eLD> there is nothing similar to pthread_cancel in pythons threading?
[03:25:07] <Yhg1s> Jin^eLD: nope. There's no way to clean up when a thread is cancelled. (It's the same reason pthread_cancel is a really bad idea in any arbitrary threading environment.)
[03:26:22] <Jin^eLD> I am looking for a way to interrupt a user script that I start, but which does not "belong" to me in the sense that I have no control about what it is doing
[03:26:36] <Yhg1s> Jin^eLD: execute it in a separate process.
[03:27:29] <Jin^eLD> does not work too well, the script is being started from a larger C app (python embedding scenario)
[03:27:50] <Jin^eLD> and it seems interaction between the app and python stops working when python launches another process
[03:27:52] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[03:28:03] <Jin^eLD> or rather, some things silently fail
[03:28:17] <Yhg1s> Jin^eLD: you want the 'user script' to interact with the embedding program?
[03:28:42] <Jin^eLD> the C app is providing bindings that pyhon "user scripts" can use
[03:28:50] <Yhg1s> so, yes?
[03:28:51] <Jin^eLD> and it does launch such a python user script
[03:28:55] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[03:29:13] <Jin^eLD> which can, well, do stuff; but what I would like to do is to be able to replace the user script
[03:29:18] <Jin^eLD> without restarting the C app
[03:30:03] <Yhg1s> there isn't really a way to terminate the script. The script has to end itself. You could have all the calls provided by this embedding app raise an exception, for example, but if the Python code is busy doing something else, you can't interrup tit.
[03:30:31] <Jin^eLD> I tried the exception thing but that did not work out somehow, I am not sure why
[03:32:01] <Jin^eLD> https://www.geeksforgeeks.org/python-different-ways-to-kill-a-thread/
[03:32:05] <Jin^eLD> that's what I tried
[03:32:11] <Jin^eLD> maybe it does not play along with cffi
[03:35:20] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:37:57] *** Joins: echi (uid501591@id-501591.tooting.irccloud.com)
[03:38:05] <Jin^eLD> I think I know why, something is wrong with my thread id, let me fix that first
[03:39:05] *** Parts: echi (uid501591@id-501591.tooting.irccloud.com) ()
[03:39:27] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Ping timeout: 265 seconds)
[03:41:51] *** Joins: phax (~phax@user/phax)
[03:41:53] *** Jefren1 is now known as Jefren
[03:42:37] *** Quits: frostschutz (~frostschu@2a01:c23:78eb:dd00:3b54:54bf:2392:d97e) (Remote host closed the connection)
[03:45:20] *** Quits: pyfisch (~pyfisch@ip-37-201-119-209.hsi13.unitymediagroup.de) (Quit: Ping timeout (120 seconds))
[03:45:37] *** Joins: pyfisch (~pyfisch@ip-37-201-119-209.hsi13.unitymediagroup.de)
[03:46:32] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:46:59] *** Quits: CodePoint (~BitShift@47.186.145.58) (Ping timeout: 268 seconds)
[03:50:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:55:14] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[03:55:19] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[03:57:52] *** Joins: hposca (~hposca@node-1w7jr9phoke2t1sm518y8klap.ipv6.telus.net)
[03:58:50] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[03:59:48] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:00:25] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:00:33] *** Joins: Fluxx (~Fluxx@user/fluxx)
[04:01:34] *** Joins: philipp64|work (~philipp64@174.27.8.12)
[04:02:07] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[04:02:50] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[04:02:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:04:00] *** Joins: jelmer (~jelmer@user/jelmer)
[04:04:06] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[04:04:31] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:05:21] <acresearch> people, i open a file f.readline() to check the first line, but then when i loop through the file it starts with the second line, is there a way to check first line without moving to second line?
[04:05:58] *** Joins: Trevor (~TrevorLan@user/trevorlaneray)
[04:06:46] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[04:07:49] *** Joins: d00gy (~tonberry@user/d00gy)
[04:09:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:10:26] <Byteflux> acresearch: you could seek to the first byte with f.seek(0)
[04:11:00] <Byteflux> but i wonder why bother reading the first line again if you can avoid it (since you've already read it)
[04:11:35] <acresearch> Byteflux: it works, thanks :-)
[04:11:53] *** Quits: Fluxx (~Fluxx@user/fluxx) (Quit: Leaving)
[04:12:23] *** Quits: plains (~plains@user/plains) (Quit: Leaving)
[04:14:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[04:14:52] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:16:12] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[04:16:35] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[04:18:34] *** Joins: jelmer (~jelmer@user/jelmer)
[04:23:06] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:9752:5098:f3e0:54a6) (Quit: Client closed)
[04:25:59] *** Quits: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it) ()
[04:26:19] *** Joins: d3vyL (d3vyL@host-95-250-37-25.retail.telecomitalia.it)
[04:27:27] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[04:27:34] *** Joins: Jefren1 (~Jefren@70.35.66.127)
[04:28:21] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 255 seconds)
[04:28:40] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:29:07] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:29:32] *** Quits: Jefren (~Jefren@206.253.157.235) (Ping timeout: 250 seconds)
[04:29:38] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[04:29:40] <rannnn8888> https://www.prnewswire.com/news-releases/american-osteopathic-association-installs-joseph-giaimo-do-as-125th-president-301335910.html
[04:30:01] <rannnn8888> how extract the text from the news ?  res = soup.find_all("div", {"class": "release-body container"})
[04:30:44] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:31:05] *** Parts: mybit (~wow@192.241.202.241) ()
[04:31:20] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0)
[04:31:53] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[04:32:11] <yitz> I prefer lxml and xpath
[04:32:15] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[04:34:05] <rannnn8888> yitz i try before I could not extract
[04:34:12] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:35:53] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[04:36:39] *** Quits: waxfire23 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:36:53] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[04:40:57] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[04:41:08] *** Joins: plains (~plains@user/plains)
[04:41:08] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[04:43:06] *** Quits: Jefren1 (~Jefren@70.35.66.127) (Ping timeout: 268 seconds)
[04:44:57] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[04:46:05] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 255 seconds)
[04:46:21] *** Quits: lexandrop (~lex@user/lexandrop) (Ping timeout: 255 seconds)
[04:46:24] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:47:07] *** Joins: Jefren1 (~Jefren@70.35.67.53)
[04:47:38] *** Joins: gvsa123 (~gvsa123@d50-93-29-104.abhsia.telus.net)
[04:47:39] *** Quits: gvsa123 (~gvsa123@d50-93-29-104.abhsia.telus.net) (Read error: Connection reset by peer)
[04:48:02] *** Joins: gvsa123 (~gvsa123@d50-93-29-104.abhsia.telus.net)
[04:50:07] *** Joins: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820)
[04:51:24] *** Joins: Jefren2 (~Jefren@70.35.66.252)
[04:52:14] *** Quits: Jefren1 (~Jefren@70.35.67.53) (Ping timeout: 252 seconds)
[04:52:20] *** Joins: darksun (~darksun@user/darksun)
[04:56:07] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[04:56:23] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[04:56:38] *** Quits: Jefren2 (~Jefren@70.35.66.252) (Ping timeout: 252 seconds)
[04:57:54] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[04:58:02] *** Joins: Jefren2 (~Jefren@70.35.67.148)
[04:58:13] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 246 seconds)
[05:00:31] *** Joins: ominionx (~ominionx@38.135.235.14)
[05:01:45] *** Joins: Naan (~naan@user/naan)
[05:01:48] *** Joins: derelict (~derelict@user/derelict)
[05:06:56] *** Joins: pnoud (~pnoud@user/pnoud)
[05:09:41] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[05:10:07] *** Quits: hposca (~hposca@node-1w7jr9phoke2t1sm518y8klap.ipv6.telus.net) (Ping timeout: 246 seconds)
[05:11:13] *** Joins: darksun (~darksun@user/darksun)
[05:12:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[05:14:12] *** Quits: gvsa123 (~gvsa123@d50-93-29-104.abhsia.telus.net) (Quit: Leaving)
[05:14:17] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[05:14:34] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[05:15:54] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[05:16:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[05:17:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[05:19:39] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 255 seconds)
[05:20:57] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[05:21:13] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11)
[05:23:02] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:27:59] *** Joins: jimklo (~jimklo@2600:6c52:6f00:ae5f:f063:3805:dacc:a033)
[05:28:50] *** Quits: emerent (~quassel@p200300cd57058c26ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[05:28:51] *** Joins: emerent_ (~quassel@p200300cd57058c9dba27ebfffed28a59.dip0.t-ipconnect.de)
[05:28:51] *** emerent_ is now known as emerent
[05:29:12] *** Quits: northernsage (~northerns@138.197.11.208) (Quit: leaving)
[05:30:23] *** Joins: darksun (~darksun@user/darksun)
[05:31:32] *** Quits: jimklo_ (~jimklo@gemini.sri.com) (Ping timeout: 255 seconds)
[05:32:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:00] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[05:35:11] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c9b:2e00:5387:8d4c:6325:88cb)
[05:35:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[05:35:37] *** Joins: pete443 (~pete@user/pete443)
[05:36:08] *** Quits: Jefren2 (~Jefren@70.35.67.148) (Ping timeout: 268 seconds)
[05:36:23] *** Joins: vlm (~vlm@user/vlm)
[05:37:17] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 258 seconds)
[05:37:36] *** Quits: mcglk (~mcglk@131.191.49.120) (Quit: (seeya))
[05:37:46] *** Quits: sharperguy (~sharpergu@2001:16b8:5c04:7b00:1bce:612a:144e:2845) (Ping timeout: 246 seconds)
[05:38:05] *** Joins: mcglk (~mcglk@131.191.49.120)
[05:38:21] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:38:37] *** Joins: Jefren2 (~Jefren@70.35.66.39)
[05:41:22] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-2404-dbc3-ced0-7997.res6.spectrum.com) (Read error: Connection reset by peer)
[05:42:55] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[05:44:09] *** Quits: Jefren2 (~Jefren@70.35.66.39) (Ping timeout: 268 seconds)
[05:44:09] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:44:25] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 246 seconds)
[05:44:35] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 255 seconds)
[05:44:55] *** Joins: Jefren2 (~Jefren@70.35.67.8)
[05:47:37] *** Joins: thiras (~thiras@user/thiras)
[05:49:00] *** Joins: darksun (~darksun@user/darksun)
[05:49:42] *** Quits: Jefren2 (~Jefren@70.35.67.8) (Ping timeout: 268 seconds)
[05:49:42] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[05:49:47] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:50:18] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:a1cd:7973:859f:1b11) (Quit: WeeChat 3.2 (See ya!))
[05:50:34] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:9117:69a7:a633:ca49)
[05:50:44] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 256 seconds)
[05:51:17] *** Joins: Jefren2 (~Jefren@70.35.67.159)
[05:51:20] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[05:53:30] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[05:53:40] *** Joins: taru9 (~taru9@103.113.159.246)
[05:54:01] *** Joins: heco (~redrum@user/redrum88)
[05:54:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[05:54:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[05:54:36] *** Quits: taru9 (~taru9@103.113.159.246) (Client Quit)
[05:55:44] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-e951-e910-a452-198d.res6.spectrum.com)
[05:57:00] *** Joins: taru9 (~taru9@103.113.159.246)
[05:58:20] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 268 seconds)
[05:58:20] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 268 seconds)
[05:58:39] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 265 seconds)
[05:59:45] *** Joins: califax- (~califax@user/califx)
[06:00:25] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:01:56] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:02:20] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:02:23] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[06:02:24] *** califax- is now known as califax
[06:02:40] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[06:03:19] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 246 seconds)
[06:03:19] *** brabrax_ is now known as brabrax
[06:03:29] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:07:10] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[06:07:23] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[06:08:02] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:08:36] <vd> hi all -- is it possible to assign 2 values with comma assignments to the 2 first values of an array?
[06:09:16] <vd> like a, b = array[0], array[1] but with array specified only once
[06:09:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:10:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:10:47] <nedbat> a, b = array[0:2]
[06:11:01] <nedbat> or:   a,b = array[:2]
[06:11:16] <nedbat> vd: btw, this might be a list you are using, not an array?
[06:12:25] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:13:32] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:14:25] <vd> nedbat that's the result of split() i'm using, exactly what I wanted thank you!
[06:15:08] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[06:17:13] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:17:19] *** Joins: darksun (~darksun@user/darksun)
[06:17:20] *** rf` is now known as envex
[06:21:46] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[06:22:23] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[06:23:01] *** Quits: rio (~rio@2601:345:4203:41c0:9a93:b9de:7342:f9d7) (Remote host closed the connection)
[06:24:51] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 268 seconds)
[06:28:18] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[06:28:55] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:32:17] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[06:32:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:33:16] *** Joins: jelmer (~jelmer@user/jelmer)
[06:34:06] *** Quits: Jefren2 (~Jefren@70.35.67.159) (Ping timeout: 268 seconds)
[06:38:04] *** Joins: Jefren2 (~Jefren@70.35.66.179)
[06:40:16] *** Joins: Jefren3 (~Jefren@70.35.66.38)
[06:41:49] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:9117:69a7:a633:ca49) (Ping timeout: 246 seconds)
[06:42:27] *** Quits: Jefren2 (~Jefren@70.35.66.179) (Ping timeout: 258 seconds)
[06:43:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:43:57] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:703d:a760:f1e7:a405) (Remote host closed the connection)
[06:44:26] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:703d:a760:f1e7:a405)
[06:45:44] *** FinnElija is now known as Guest7485
[06:45:44] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:45:44] *** Quits: Guest7485 (~finn_elij@user/finn-elija/x-0085643) (Killed (sodium.libera.chat (Nickname regained by services)))
[06:45:44] *** finn_elija is now known as FinnElija
[06:45:47] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:46:18] *** Joins: Jefren4 (~Jefren@70.35.66.51)
[06:47:00] *** Joins: tims (~tims@193-82-234-90.tpgi.com.au)
[06:48:35] *** Quits: Jefren3 (~Jefren@70.35.66.38) (Ping timeout: 258 seconds)
[06:49:41] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:50:09] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:50:44] *** Quits: Jefren4 (~Jefren@70.35.66.51) (Ping timeout: 255 seconds)
[06:51:00] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[06:51:48] *** Quits: Maple (~Maple@user/maple) (Quit: WeeChat 3.2)
[06:52:22] *** Quits: taru9 (~taru9@103.113.159.246) (Quit: WeeChat 3.1)
[06:52:38] *** Joins: Jefren4 (~Jefren@70.35.67.49)
[06:52:59] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:53:41] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[06:53:46] *** Joins: Maple (~Maple@user/maple)
[06:57:57] *** Joins: Syrup (uid10029@user/maple)
[07:01:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:01:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:03:52] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[07:05:44] *** Joins: jelmer (~jelmer@user/jelmer)
[07:07:46] *** Joins: pnoud (~pnoud@user/pnoud)
[07:12:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[07:17:04] *** Joins: darksun (~darksun@user/darksun)
[07:21:40] *** Joins: Celeo (~Celeo@user/celeo)
[07:21:50] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[07:22:45] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[07:24:48] *** Quits: knowmadic (~ryan@user/knowmadic) (Remote host closed the connection)
[07:25:13] *** Joins: vicfred (~vicfred@user/vicfred)
[07:26:25] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Quit: WeeChat 3.2)
[07:27:26] *** Joins: ccldarjun (~textual@c-67-160-245-135.hsd1.ca.comcast.net)
[07:32:30] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:32:51] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 255 seconds)
[07:32:53] *** ccldarjun is now known as datoneguy
[07:34:52] <datoneguy> HI, i want to attend my first PyCon in 2022. When will tickets and stuff be sold? I saw that it's going to be held in SLC
[07:37:20] <domhnall> Hi all, I'm not sure what this build error is suggesting I do to resolve it. Also not sure where to find the full command output logs. https://bpa.st/6WDA  any help is appreciated.
[07:37:49] <domhnall> OS os Centos-Stream... if that matters.
[07:37:54] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 240 seconds)
[07:37:56] <domhnall> s/os/is
[07:39:02] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[07:40:07] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:40:34] *** Joins: acresearch (~acresearc@user/acresearch)
[07:43:14] *** Quits: dld (~davidlowr@73.61.8.96) (Ping timeout: 250 seconds)
[07:43:45] *** Joins: desophos (~desophos@2601:249:1680:a570:f1ba:fb0d:59f:a0b5)
[07:44:27] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[07:45:24] *** Joins: dld (~davidlowr@2601:197:600:1210:9957:7449:5ffc:ef4d)
[07:45:31] *** Joins: jabberwo- (~jessy@user/jabberwock)
[07:45:45] *** Joins: LiftLeft (~LiftLeft@154.21.114.207)
[07:46:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:46:52] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 268 seconds)
[07:46:55] *** Quits: lidless (jessy@user/jabberwock) (Ping timeout: 265 seconds)
[07:49:23] *** Joins: monkey_ (~user@190.104.116.134)
[07:56:43] <BrenBarn> did you install python-dev package?
[07:57:33] <domhnall> BrenBarn: umm.. I want to say 'no', because I did not run a command to install that today
[07:58:12] <SnoopJ> I think it's called python-devel on CentOS
[07:58:22] <domhnall> SnoopJ: okay
[07:59:11] <domhnall> is this something I must enable as a repository? I get an error message of: " No matching distribution found for python-devel"
[07:59:11] <SnoopJ> domhnall, the immediate error is because it can't find Python.h, probably you need that ^ package. But at the top of the report, it looks like it wanted to use Cython, so you might want to install that too (`python3 -m pip install Cython`) if it's the first choice of that package's devs.
[07:59:38] <domhnall> I installed the Cython and still get the Python.h error..
[07:59:56] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:59:59] <SnoopJ> right, Cython wouldn't fix that
[08:00:16] <domhnall> I see... now that you mention it as two seperate packages.
[08:00:21] <BrenBarn> you need both cython and python dev
[08:00:23] <SnoopJ> Just pointing it out because it seems like what you're getting is fallback behavior
[08:00:28] <BrenBarn> or python-devel or whatever it's called on your system
[08:00:42] <desophos> hi, i'm having a confusing problem installing a particular package. in a new poetry env, `poetry add plyvel-win32==1.3.0` and `pip install plyvel-win32==1.3.0` both fail, saying that there is no matching distribution (1.2.1 and 1.2.1.dev0 are both available). however, https://pypi.org/project/plyvel-win32/ shows that version 1.3.0 is available. is this a configuration issue on my part or has the developer made some packaging
[08:00:42] <desophos> mistake? i can install the most recent versions of other packages completely fine. i'm using python 3.8
[08:00:42] <SnoopJ> BrenBarn, I don't think you *need* Cython, but if it tried that first I would think that's what it's designed for
[08:01:05] <domhnall> well, the python-devel isn't matching anything... gotta check with the -stream folks...waiting for reply now.
[08:01:46] <desophos> (i also updated poetry and pip)
[08:02:12] <SnoopJ> desophos, if you crank up the verbosity of poetry it'll tell you what restrictions are ruling out 1.3.0
[08:02:52] <domhnall> SnoopJ: on a related query... where do I find the full command output log for that error message I
[08:02:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:02:58] <domhnall> am having?
[08:03:21] <SnoopJ> domhnall, to what command are you referring? What you shared is close to the full output I'd expect from pip
[08:03:43] *** Joins: vimart (~vimart@148.252.129.15)
[08:03:43] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[08:03:49] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[08:03:58] <domhnall> SnoopJ: yeah, it is.. the command is the Filename: 'pip3 install --user web3'
[08:04:03] <SnoopJ> oh, probably the bit at the bottom
[08:04:18] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[08:05:14] *** Joins: jelmer (~jelmer@user/jelmer)
[08:05:23] *** Quits: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de) (Quit: iftheraincomes)
[08:05:53] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:06:36] <SnoopJ> domhnall, I'm not sure, actually. I'd be looking to see if the named directories under /tmp still exist, it might be there.
[08:06:54] <domhnall> SnoopJ: okay
[08:07:18] <SnoopJ> but the output here is enough to tell you that the proximate cause of the failure is definitely not being able to find Python.h
[08:08:16] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[08:11:09] *** Quits: vimart (~vimart@148.252.129.15) (Quit: WeeChat 2.8)
[08:12:07] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-e951-e910-a452-198d.res6.spectrum.com) (Ping timeout: 246 seconds)
[08:13:06] <domhnall> SnoopJ: fair enough. I seem to be past the Python.h error. Now looking at: https://bpa.st/A7YA
[08:13:07] *** __jmcantrell__ is now known as jmcantrell
[08:13:28] <domhnall> also, if anyone is on Centos-stream and wondering.. the package was 'python38-devel' (in my case)
[08:14:47] <domhnall> oh...just noticed its a permission issue... (i think)
[08:15:48] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[08:15:48] <domhnall> yeah... forgot the --user flag
[08:17:22] <SnoopJ> newer pip will try that automatically, but maybe CentOS-stream vendors an older one
[08:17:33] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[08:18:08] <domhnall> *shrugs* I also forgot to setup my venv..wondering if my issues now are based on that.
[08:18:39] <domhnall> looks like I'm using one for a difference project
[08:18:54] <domhnall> well, not at all really... no prompt prefix
[08:20:58] <domhnall> ohh. not even that. seems my default python version is 3.6... but I'm doing things with 3.8 and sometimes I forget the 3.8 part with pip
[08:21:18] <domhnall> anywho.. .things are finishing successfully now. Thanks for the help SnoopJ.
[08:21:47] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[08:22:12] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:22:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[08:22:38] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[08:23:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:24:08] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:24:37] *** Joins: Trashlord (~trash@user/trashlord)
[08:25:34] *** Jefren4 is now known as Jefren
[08:27:15] <desophos> SnoopJ, that's the thing: it finds the 1.3.0 package, dependencies are resolved, and then it raises a RuntimeError ("Unable to find installation candidates") when trying to install it: https://bpa.st/RW4A
[08:32:16] <domhnall> 4
[08:32:28] <domhnall> oops
[08:33:28] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[08:33:40] <BrenBarn> that's a strange error
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:06] <BrenBarn> I see some recent issues: https://github.com/python-poetry/poetry/issues/3591
[08:38:15] <BrenBarn> this is on mac but who knows if something similar could be happening on windows
[08:40:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:42:31] <desophos> the weird thing is that version 1.2.1.dev0 installs fine
[08:43:19] <desophos> oh... i think i figured it out
[08:43:30] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[08:44:05] <desophos> the only wheels available in 1.3.0 are 64-bit binaries
[08:44:22] <desophos> previous versions have 32-bit binaries available
[08:44:56] <desophos> has everyone migrated to 64-bit python?
[08:45:10] <desophos> i've been using 32-bit python for compatibility
[08:45:38] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[08:46:40] *** Joins: rndusr (~rndusr@user/rndusr)
[08:46:45] <rndusr> hi
[08:47:00] <BrenBarn> oh, you're on 32-bit?
[08:47:09] <BrenBarn> yeah that would do it
[08:47:11] <rndusr> is there a way, using the os library, to change the effective uid?
[08:47:22] <rndusr> (assuming one is running as root and using a linux-like system)
[08:48:25] <BrenBarn> desophos, compatibility with what?
[08:49:43] <sunny93> What's definition of "procedure call"?
[08:49:51] <BrenBarn> 32-bit systems have become pretty uncommon, I think a lot of linux distros are no longer supporting them
[08:50:00] <desophos> BrenBarn, hmm... good question. i think that idea dates back to before 64-bit architecture was the default
[08:51:07] <desophos> so i'll switch to 64-bit python, thanks for the nudge!
[08:52:50] <BrenBarn> rndusr: there's os.seteuid
[08:53:17] <rndusr> BrenBarn: can I do it by username?
[08:58:15] <BrenBarn> you probably need to do some separate call to get the id from the username
[08:58:43] <samleh> <desophos "so i'll switch to 64-bit python,"> There might be some problems with older C-libraries. That's why I'm using with WIndows 32-bit...
[08:59:28] <samleh> It's kind of annoying that 32-bit libs can't be used with 64 bit python (afaik)
[08:59:39] <desophos> yeah, that's probably why i didn't switch earlier
[08:59:58] <desophos> fortunately, pyenv lets me have both :P
[09:00:25] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[09:01:06] <rndusr> you can do from pwd import getpwnam; print(getpwnam(user).pw_uid)
[09:01:09] <rndusr> for the record
[09:03:22] <BrenBarn> yeah, I mean, that's why I asked compatibility with what
[09:03:49] <BrenBarn> I think I still have 32-bit Python 2.7 installed just to run DreamPie
[09:04:13] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 268 seconds)
[09:04:38] *** Joins: Mandus (~aasmundo@85.112.154.250)
[09:04:40] <BrenBarn> but often, unfortunately, it becomes untenable as the divergence between what's available on 32 and 64 bit becomes greater
[09:04:49] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:05:27] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[09:07:38] *** swn_ is now known as swn
[09:08:36] *** Joins: pnoud (~pnoud@user/pnoud)
[09:11:59] *** Quits: LiftLeft (~LiftLeft@154.21.114.207) (Ping timeout: 265 seconds)
[09:13:39] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[09:14:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:18:09] <desophos> lol, even after all that, updating to 1.3.0 didn't fix anything
[09:18:16] *** Quits: Mandus (~aasmundo@85.112.154.250) (Ping timeout: 265 seconds)
[09:18:36] *** Joins: darksun (~darksun@user/darksun)
[09:19:57] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[09:20:09] <desophos> anyone know a leveldb library that works better on windows than plyvel does? :P
[09:23:25] *** Quits: kor1 (~kor1@user/kor1) (Quit: Leaving.)
[09:24:00] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[09:24:06] *** Joins: Wulf (~Wulf@user/wulf)
[09:25:29] *** Joins: taru9 (~realTaru9@raincheck.tk)
[09:27:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[09:28:27] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[09:28:32] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[09:28:57] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Time to reboot FreeBSD)
[09:29:26] * samleh  < https://libera.ems.host/_matrix/media/r0/download/libera.chat/74880d6b596a850087871e9d9c0270af796b0d16/message.txt >
[09:31:12] <samleh> Yet, there is this. Made me wonder if anyone has actually ever used it: https://msl-loadlib.readthedocs.io/en/latest/interprocess_communication.html
[09:31:48] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 265 seconds)
[09:32:20] *** Quits: datoneguy (~textual@c-67-160-245-135.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:32:23] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:33:19] *** Joins: fflam (~mdt@91.193.7.40)
[09:35:57] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:36:31] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[09:37:05] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Client Quit)
[09:38:55] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:42:56] *** Joins: the-mask (~the-mask@user/the-mask)
[09:45:00] <the-mask> hello, any resource to learn more about designing a nice and functional GUI ? how to handle this task ?
[09:47:44] *** Joins: LiftLeft (~LiftLeft@154.21.28.74)
[09:47:50] *** Quits: taru9 (~realTaru9@raincheck.tk) (Quit: ZNC - https://znc.in)
[09:48:09] *** Joins: taru9 (~realTaru9@raincheck.tk)
[09:52:38] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[09:55:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:55:50] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 252 seconds)
[09:57:12] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[09:57:52] *** Quits: phax (~phax@user/phax) (Quit: Leaving)
[09:59:22] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[10:01:59] *** Quits: mrus (~mrus@2001:19f0:5:3fd4:5400:3ff:fe48:1820) (Ping timeout: 255 seconds)
[10:02:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:04:26] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[10:06:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:08:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:09:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[10:09:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:10:05] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[10:10:32] *** Joins: bilb_ono (~alexmarsh@c-73-70-189-144.hsd1.ca.comcast.net)
[10:11:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:11:49] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[10:11:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:13:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:14:55] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[10:15:07] *** Joins: rany (~rany@user/rany)
[10:16:16] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 265 seconds)
[10:17:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:20:02] *** Joins: upsala (~zcb@185.213.155.160)
[10:22:22] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:25:27] *** Quits: Jefren (~Jefren@70.35.67.49) (Ping timeout: 265 seconds)
[10:29:15] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 255 seconds)
[10:29:57] *** Joins: Jefren1 (~Jefren@70.35.67.121)
[10:30:16] *** Joins: pnoud (~pnoud@user/pnoud)
[10:30:35] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff)
[10:32:37] *** Joins: palasso (~palasso@user/palasso)
[10:34:36] *** Quits: Jefren1 (~Jefren@70.35.67.121) (Ping timeout: 268 seconds)
[10:36:01] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[10:36:24] *** Joins: Jefren1 (~Jefren@208.104.190.48)
[10:37:35] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:37:42] *** Joins: Jefren2 (~Jefren@208.104.190.25)
[10:38:44] *** Joins: Nanobot567 (~Nanobot56@024-181-099-188.res.spectrum.com)
[10:39:16] *** Joins: Jefren3 (~Jefren@70.35.67.56)
[10:40:53] *** Quits: Jefren1 (~Jefren@208.104.190.48) (Ping timeout: 258 seconds)
[10:41:52] *** Joins: Jefren4 (~Jefren@70.35.66.70)
[10:42:00] *** Joins: rendar (~rendar@user/rendar)
[10:42:25] *** Quits: Jefren2 (~Jefren@208.104.190.25) (Ping timeout: 258 seconds)
[10:43:12] *** Joins: Jefren (~Jefren@70.35.67.185)
[10:43:14] *** Quits: LiftLeft (~LiftLeft@154.21.28.74) (Ping timeout: 268 seconds)
[10:43:51] *** Quits: Nanobot567 (~Nanobot56@024-181-099-188.res.spectrum.com) (Ping timeout: 268 seconds)
[10:44:41] *** Joins: dude-x_ (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[10:44:44] *** Quits: Jefren3 (~Jefren@70.35.67.56) (Ping timeout: 255 seconds)
[10:46:26] *** Quits: Jefren4 (~Jefren@70.35.66.70) (Ping timeout: 252 seconds)
[10:46:48] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:32] *** Joins: seednode (~seednode@user/seednode)
[10:48:10] *** Quits: Jefren (~Jefren@70.35.67.185) (Ping timeout: 268 seconds)
[10:49:29] *** Joins: Jefren (~Jefren@70.35.66.200)
[10:52:30] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[10:52:52] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:54:27] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 255 seconds)
[10:59:07] *** Joins: Jefren1 (~Jefren@70.35.67.157)
[10:59:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:d017:d7b1:2fba:63a0) (Quit: Leaving)
[11:00:15] *** Quits: Jefren (~Jefren@70.35.66.200) (Ping timeout: 265 seconds)
[11:00:28] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:11ac:ff32:c5e1:43ff) (Ping timeout: 246 seconds)
[11:01:02] *** Joins: Jefren2 (~Jefren@70.35.66.161)
[11:02:18] *** Joins: Jefren3 (~Jefren@70.35.67.198)
[11:02:22] *** Quits: bilb_ono (~alexmarsh@c-73-70-189-144.hsd1.ca.comcast.net) (Quit: bilb_ono)
[11:03:27] *** Quits: Jefren1 (~Jefren@70.35.67.157) (Ping timeout: 255 seconds)
[11:05:25] *** Quits: Jefren2 (~Jefren@70.35.66.161) (Ping timeout: 258 seconds)
[11:07:17] *** Quits: Jefren3 (~Jefren@70.35.67.198) (Ping timeout: 268 seconds)
[11:08:35] *** Joins: Jefren3 (~Jefren@70.35.67.105)
[11:08:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:10:50] *** Quits: fflam (~mdt@91.193.7.40) (Ping timeout: 255 seconds)
[11:11:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:12:40] *** Joins: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net)
[11:12:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:13:27] *** Quits: Jefren3 (~Jefren@70.35.67.105) (Ping timeout: 268 seconds)
[11:13:47] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:14:32] *** Joins: semanticz0 (~semanticz@116.68.101.148)
[11:14:52] *** Joins: Jefren3 (~Jefren@70.35.67.217)
[11:15:30] <semanticz0> Hey! Quick question. I'm a relative beginner. I can make Django applications at a relatively simple level but I felt my Python fundamentals aren't great, so I decided to start with the official python tutorial and work my way up.
[11:15:50] <semanticz0> Should I be using unittest when I'm starting out?
[11:15:52] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:15:58] <semanticz0> Or should I just not bother and use pytest
[11:16:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:17:15] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[11:17:19] *** Joins: TomTheDragon (~tom@108-91-122-242.lightspeed.gnbonc.sbcglobal.net)
[11:17:39] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[11:18:03] <cvmn> why doesn't fcntl.fcntl(f, fcntl.F_WRLCK) block?
[11:18:27] <cvmn> https://gist.github.com/9195c01b8138838f303b5a7604615c17
[11:18:56] *** Quits: cdown (~cdown@host213-122-124-140.range213-122.btcentralplus.com) (Ping timeout: 255 seconds)
[11:18:57] <cvmn> when i run this twice in separate processes, i expect it to block on the 2nd.  but it doesn't.
[11:20:06] *** Joins: darksun (~darksun@user/darksun)
[11:22:22] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[11:22:37] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:23:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[11:25:57] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[11:28:01] *** Quits: desophos (~desophos@2601:249:1680:a570:f1ba:fb0d:59f:a0b5) (Quit: Leaving)
[11:28:23] <yolk> cvmn: fcntl is process based not file descriptor based you could lock on the basis of there being a lock file with like the process currently locking the file for access between processes or use multiprocessing to spawn processes that share the fcntl maybe
[11:29:22] *** Joins: mcfrdy_ (uid507892@user/mcfrdy)
[11:30:00] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[11:30:08] <cvmn> yolk: what are you talking about.  are you saying that my code is sharing process?
[11:30:24] *** Quits: Trevor (~TrevorLan@user/trevorlaneray) (Quit: Closing chat client)
[11:30:56] *** Joins: wyclif (~wyclif@user/wyclif)
[11:31:07] <cvmn> yolk: you mean that fcntl only works __within__ the same process?
[11:31:08] *** Joins: jelmer (~jelmer@user/jelmer)
[11:32:34] *** Quits: Jefren3 (~Jefren@70.35.67.217) (Ping timeout: 268 seconds)
[11:33:26] *** Joins: cdown (~cdown@host213-122-124-140.range213-122.btcentralplus.com)
[11:34:08] *** Joins: Jefren3 (~Jefren@70.35.66.156)
[11:34:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[11:34:36] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:34:37] <BrenBarn> semanticz0: I find pytest more full-featured and it's not really any harder to use, so no real reason not to use it
[11:34:43] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:35:06] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-1c9e-5e14-4857-b2b8.res6.spectrum.com)
[11:35:28] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[11:35:39] <yolk> cvmn: Yes it's only for the same process.
[11:36:11] <cvmn> yolk: what about lockf?
[11:36:56] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 255 seconds)
[11:37:46] *** Quits: cdown (~cdown@host213-122-124-140.range213-122.btcentralplus.com) (Ping timeout: 252 seconds)
[11:39:39] <yolk> cvmn Both types are supported on Linux, my suggestion was checking for the existence of a second file with the process id in it. Like you might see a yum.lock when upgrading packages on centos. Once the file isn't being "locked" delete the lock file
[11:39:53] *** Quits: Jefren3 (~Jefren@70.35.66.156) (Ping timeout: 265 seconds)
[11:41:21] *** Joins: skapate (~Skapata@user/skapata)
[11:42:20] <cvmn> yolk: i'm making my own lock.  i notice that fcnt.lockf works like fcnt.flock in my case:  both block.  i'm surprised.  then why didn't fcntl.fcntl work like that?  if fcntl.lockf is just a wrapper around fcnt.fcnt, then shouldn't they both work the same: i.e. not block?
[11:42:54] <cvmn> https://gist.github.com/6cc6659b223f34d11b948d70065ec228
[11:44:31] <yolk> cvmn: OS dependent I think, but I'm also not experienced file locking like this ðŸ˜… here's a SO answer that is more detailed https://stackoverflow.com/a/34935188
[11:45:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[11:45:51] <TomTheDragon> I'm having trouble running a python script I found, perhaps some bit-rot has affected it... doubtful it was actually broken from the get-go: https://yingtongli.me/blog/2019/12/01/input-over-ssh-2.html
[11:46:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:47:40] <TomTheDragon> this is the error: https://bpa.st/4THA
[11:48:07] *** Joins: carlio (~carlio@88.198.149.110)
[11:48:54] <TomTheDragon> It actually appear broken in two ways... one is it's apparently not sending the "2" for protocol version, the other is it's actually finding /dev/input/input0...
[11:50:13] *** Joins: Jefren3 (~Jefren@70.35.67.81)
[11:50:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:50:33] *** vinleod is now known as vdamewood
[11:51:45] <TomTheDragon> I see, I feel like an idiot... I passed the list to the remote
[11:51:50] <yolk> TomTheDragon: is it supposed to be launched with `-2` like `ssh -2`
[11:52:46] <yolk> I looked at the script because the post was interesting around tunneling controller input over ssh ðŸ˜‹
[11:53:18] *** Joins: saschi (~saschi@user/saschi)
[11:53:34] *** Joins: Jefren4 (~Jefren@70.35.67.64)
[11:56:33] *** Quits: Jefren3 (~Jefren@70.35.67.81) (Ping timeout: 255 seconds)
[11:57:19] *** Joins: wyclif (~wyclif@user/wyclif)
[11:57:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[11:57:27] *** Joins: Jefren (~Jefren@70.35.66.240)
[11:58:11] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[11:58:57] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 276 seconds)
[11:59:03] <ZenixOwler> just wondering about the underlying of python, when i compare an int to a float, does python automatically convert one or another to a certain datatype then compare them or it does it just frankly do it by using binary comparation maybe ?
[11:59:49] *** Joins: trufas (~trufas@177.240.218.218)
[11:59:53] *** Quits: Jefren4 (~Jefren@70.35.67.64) (Ping timeout: 255 seconds)
[12:00:05] *** Joins: Jefren1 (~Jefren@70.35.67.246)
[12:03:05] *** Quits: Jefren (~Jefren@70.35.66.240) (Ping timeout: 265 seconds)
[12:04:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[12:05:10] <TomTheDragon> yolk: nope, figured it out (sorta).. I got the script working just not able to get the actual input to appear in xinput
[12:05:13] *** Quits: Jefren1 (~Jefren@70.35.67.246) (Ping timeout: 246 seconds)
[12:05:20] <TomTheDragon> might be a limitation in TigerVNC
[12:09:20] <graingert> ZenixOwler: it's supposed to do it via int.__eq__
[12:10:10] <ZenixOwler> does python docs provide a overview of the source code of int.__eq__ ? i can't seem to find it
[12:10:11] *** Joins: Jefren2 (~Jefren@70.35.66.130)
[12:10:25] <graingert> ZenixOwler: let me grab it for you...
[12:11:29] <graingert> Someone should make a pep so that help(int.__eq__) included the filename and line of the source code
[12:12:42] *** Joins: Jefren3 (~Jefren@70.35.67.94)
[12:13:09] <ZenixOwler> Return self==value.
[12:13:11] <ZenixOwler> hhhhmmm
[12:13:49] <ZenixOwler> now that is very abstracted
[12:15:37] *** Joins: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il)
[12:15:39] *** Quits: Jefren2 (~Jefren@70.35.66.130) (Ping timeout: 265 seconds)
[12:16:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[12:17:06] *** Quits: Jefren3 (~Jefren@70.35.67.94) (Ping timeout: 258 seconds)
[12:17:52] *** Joins: Jefren3 (~Jefren@70.35.66.184)
[12:18:20] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[12:19:19] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[12:20:40] *** Quits: Allegretto (~allegrett@84-236-36-123.pool.digikabel.hu) (Ping timeout: 268 seconds)
[12:23:45] *** Quits: Jefren3 (~Jefren@70.35.66.184) (Ping timeout: 268 seconds)
[12:24:22] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[12:26:04] *** Joins: Jefren3 (~Jefren@70.35.67.62)
[12:26:37] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:26:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:28:00] *** Quits: ominionx (~ominionx@38.135.235.14) (Ping timeout: 252 seconds)
[12:28:13] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (Ping timeout: 265 seconds)
[12:28:17] *** Joins: jelmer (~jelmer@user/jelmer)
[12:28:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[12:28:27] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:32:11] *** Joins: kosh (~kosh@user/kosh)
[12:33:05] *** Joins: Allegretto (~allegrett@87-97-89-9.pool.digikabel.hu)
[12:33:54] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-1c9e-5e14-4857-b2b8.res6.spectrum.com) (Quit: jarthur)
[12:35:40] *** Joins: wyclif (~wyclif@user/wyclif)
[12:37:01] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:19] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:39:34] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:7df0:42f4:391b:6bc9)
[12:40:09] *** Joins: cedric (~cedric@2a01:cb11:867:c200:2d0c:35d4:bc18:a14a)
[12:40:12] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:40:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[12:41:09] *** Joins: wyclif (~wyclif@user/wyclif)
[12:41:14] *** Quits: skapate (~Skapata@user/skapata) (Quit: Äœis.)
[12:41:22] *** Joins: ominionx (~ominionx@204.98.224.67)
[12:42:48] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.3-dev)
[12:44:04] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:7df0:42f4:391b:6bc9) (Ping timeout: 246 seconds)
[12:44:39] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[12:44:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:44:48] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:46:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[12:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[12:47:48] *** Quits: Jefren3 (~Jefren@70.35.67.62) (Ping timeout: 268 seconds)
[12:51:30] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[12:51:30] *** Quits: todda7 (~torstein@static-qvn-qvu-160026.business.bouyguestelecom.com) (Ping timeout: 268 seconds)
[12:52:58] *** Joins: Crassus (~Crassus@user/crassus)
[12:54:25] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:54:57] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:57:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:58:57] *** Joins: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[13:00:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:00:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:00:38] *** Lord_of_Life_ is now known as Lord_of_Life
[13:01:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[13:01:49] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[13:02:01] *** Joins: Jefren3 (~Jefren@70.35.66.91)
[13:02:47] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:03:54] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:04:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:06:20] *** Joins: Vonter (~Vonter@user/vonter)
[13:09:54] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[13:10:01] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:10:21] *** Joins: anon16_ (~anon16_@user/anon16)
[13:11:12] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[13:11:35] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:12:05] *** Joins: jelmer (~jelmer@user/jelmer)
[13:13:13] <anon16_> Hello, can someone explain the second answer in this thread? https://stackoverflow.com/questions/4284991/parsing-nested-parentheses-in-python-grab-content-by-level
[13:13:14] <anon16_> I looked at it using pdb, and sure enough, when it creates a nested list and sets the list to -1 (to point to the new nested list) and then appened an element to it, the original values were erased and everything was normal. Yet when it returned to the calling function, it magically restored the older values in their place.
[13:15:23] *** Quits: sunyour (~sunyour@129.226.182.99) (Quit: WeeChat 3.1)
[13:15:42] *** Joins: sunyour (~sunyour@129.226.182.99)
[13:16:57] <Repiphany> l = l[-1] doesn't delete the original list
[13:17:33] *** Quits: sunyour (~sunyour@129.226.182.99) (Client Quit)
[13:17:53] *** Joins: sunyour (~sunyour@129.226.182.99)
[13:18:32] <anon16_> Yes, but it sets it to the new nested list, and when examining `l` in the debugger, no older values were present. Yet somehow when it returned to the calling function, all the values appeared again
[13:19:55] <Repiphany> The label "l" inside the push function being relabeled doesn't affect the original list that was passed to the function
[13:19:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[13:20:26] <Repiphany> It's just using l again while it goes "depth" down to find which nested list to actually modify inside the original
[13:21:01] *** Quits: sunyour (~sunyour@129.226.182.99) (Client Quit)
[13:21:20] *** Joins: sunyour (~sunyour@129.226.182.99)
[13:21:37] *** Joins: darksun (~darksun@user/darksun)
[13:22:06] <Repiphany> The while loop is just to get to l[-1][-1]...[-1] which gets modified by the push function
[13:22:56] <anon16_> Ah ok, makes sense. Thank you for the explanation
[13:26:39] *** Quits: Jefren3 (~Jefren@70.35.66.91) (Ping timeout: 268 seconds)
[13:27:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[13:27:26] *** Joins: SGautam__ (~SGautam@59.90.3.1)
[13:27:36] <SGautam__> Hey guys
[13:27:56] <SGautam__> How do I know what type my class is from code?
[13:28:30] <SGautam__> Say I have a class Circle and Square both of which inherit from a base class of Shape through polymorphism, how I can tell what type my instance is?
[13:28:46] <SGautam__> Something like if(type(self) == Circle)
[13:30:06] <SGautam__> Oh I just realized thats the code.
[13:30:08] *** Joins: Jefren3 (~Jefren@70.35.66.251)
[13:30:09] <SGautam__> nvm.
[13:30:16] *** Joins: pnoud (~pnoud@user/pnoud)
[13:31:43] <deniska> SGautam__: there's also isinstance()
[13:32:23] *** Joins: c4017_ (~c4017@S010664777dab66f3.vf.shawcable.net)
[13:32:54] *** Joins: Jefren4 (~Jefren@70.35.67.12)
[13:33:56] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[13:34:05] *** Quits: resmo (~resmo@2a00:d420:9:8a00:d916:8653:276f:70b6) (Quit: Leaving)
[13:34:39] *** Quits: Jefren3 (~Jefren@70.35.66.251) (Ping timeout: 255 seconds)
[13:35:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[13:35:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[13:36:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[13:36:13] *** Quits: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net) (Ping timeout: 246 seconds)
[13:37:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:37:32] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[13:39:57] *** Joins: Jefren (~Jefren@70.35.66.253)
[13:40:40] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[13:41:03] *** Joins: zamba (~marius@5.226.162.54)
[13:42:01] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[13:42:12] *** Quits: Jefren4 (~Jefren@70.35.67.12) (Ping timeout: 258 seconds)
[13:42:12] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 258 seconds)
[13:43:01] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:43:28] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[13:45:09] *** Quits: Jefren (~Jefren@70.35.66.253) (Ping timeout: 268 seconds)
[13:45:12] <sectec84> Anyone here have any experience running the Deep Learning AMI (DLAMI) on AWS? I am trying to get CUDA to work with PyTorch, and torch.cuda.is_available() is returning false. What do I need to do to get CUDA working with Torch?
[13:45:19] *** Joins: darksun (~darksun@user/darksun)
[13:46:15] *** Joins: Jefren (~Jefren@70.35.67.124)
[13:46:55] <sectec84> https://bpa.st/FV5Q
[13:49:28] *** Quits: asix (~Anders@user/asix) (Ping timeout: 268 seconds)
[13:49:50] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[13:51:53] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:54:00] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[13:54:39] <anon16_> re - my above question about nested lists: is there a way to relabel `l` inside that function so that it points one-step back? (i.e. point to the entire list again instead of pointing to a nested list)
[13:54:52] *** Joins: canton7 (canton7@about/csharp/canton7)
[13:54:57] *** Joins: wilk (~wilk@user/wilk)
[13:57:15] *** Joins: wyclif (~wyclif@user/wyclif)
[13:58:06] *** Quits: Jefren (~Jefren@70.35.67.124) (Ping timeout: 268 seconds)
[13:59:24] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[13:59:32] *** Joins: Jefren (~Jefren@70.35.66.119)
[14:01:23] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[14:01:39] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[14:03:04] *** Joins: asix (~Anders@user/asix)
[14:03:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[14:05:25] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:07:07] <Repiphany> Just keep a reference to the original list, "l_original = l" at the start of the function or something
[14:07:58] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[14:09:43] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[14:10:21] *** Joins: pete443_ (~pete@user/pete443)
[14:11:03] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 268 seconds)
[14:13:55] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:16:10] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:16:19] <u4t> lriginal
[14:16:37] *** Quits: mcfrdy_ (uid507892@user/mcfrdy) (Quit: Connection closed for inactivity)
[14:20:20] <AhmedAmerican> within docs --> https://docs.python.org/3/library/io.html#io.StringIO why there's no output for https://bpa.st/PHNQ
[14:21:19] <AhmedAmerican> ah okay, it's outputted to the file
[14:23:39] <DK3> i have a list of some items and i want to compare it with another list that also hase some items - whats the best way to compare each list and get the items that are in list a but not in b?
[14:24:59] *** Joins: node1 (~node1@user/node1)
[14:25:16] *** Joins: hafat (~hafat@95.70.168.45)
[14:26:02] <Repiphany> DK3: sets
[14:27:04] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:27:59] <deniska> DK3: {1, 2, 3, 4, 5} - {2, 3, 10} == {1, 4, 5}
[14:28:40] *** Joins: gggpkm (~gggpkm@123.113.178.180)
[14:28:40] <DK3> so i have to create a set first with each list?
[14:28:45] <node1> Hi, What's `key` in sorted function ? could we able to see the programs written for sorted?
[14:29:37] <Repiphany> set(list_1) - set(list_2)
[14:30:27] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 255 seconds)
[14:32:20] <node1> There is Test class, while creating and printing out the object of it, i received
[14:32:20] <node1>   <__main__.Test object at 0x7f1817a53828> I would likes to know what does __main__.Test here refers?
[14:33:09] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[14:33:14] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:35:14] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[14:35:27] <Repiphany> That's the default repr() of the class instance if you don't write your own Test.__repr__
[14:36:32] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:37:59] <bjs> node1: `sorted([x,y,z])` returns the same values in a possibly different order `[a,b,c]` where `a < b < c`. Using `key` changes this slightly so it returns an order `[a,b,c]` such that `key(a) < key(b) < key(c)`
[14:38:27] <bjs> node1: so `sorted(list_of_people, key=lambda person: person.age)`  sorts them by age.
[14:38:33] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[14:38:58] *** Joins: frdy (~mcfrdy@user/mcfrdy)
[14:39:04] <AhmedAmerican> @graingert how to wrap `trio.wrap_file(StringIO('asdf'))` into contextmanager
[14:39:05] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[14:39:35] <bjs> node1: Test is the name of the class, and __main__ is the name of the module that defined it.  (When you run `python3 script.py` then the script.py module is called "__main__" for historical reasons, so it just means it was defined in the file you ran)
[14:40:02] *** Quits: sectec84 (~sectec84@24.18.109.173) (Ping timeout: 268 seconds)
[14:40:26] <graingert> AhmedAmerican: you don't need to
[14:40:35] <graingert> AhmedAmerican: just write to it synchronously
[14:40:47] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:40:51] *** Joins: sectec84 (~sectec84@24.18.109.173)
[14:41:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:41:16] *** Quits: gggpkm (~gggpkm@123.113.178.180) (Ping timeout: 268 seconds)
[14:41:55] *** Joins: jelmer (~jelmer@user/jelmer)
[14:43:11] *** Joins: node1 (~node1@user/node1)
[14:43:48] *** Quits: weedmic (~weedmic@89-139-109-7.bb.netvision.net.il) (Quit: Konversation terminated!)
[14:44:26] <node1> bjs, But i just defined a `class Test: pass ...` and called it using Test() and i received an output  `<__main__.Test object at 0x7f1817a53828>`
[14:45:00] <bjs> node1: yes, the representation has many parts in a standard format: "<module_name.ClassName object at identity>"
[14:45:37] <Repiphany> "a = Test(); print(a)" tries to print a.__str__() if that's defined otherwise it goes with a.__repr__()
[14:45:40] <bjs> node1: __main__.Test means it was the "Test" class defined in the file that you ran,  it means if you had multiple Test classes in different files when you printed it out you could tell which was which.
[14:46:28] <node1> Fine, so module name is always be __main__ if it's being started getting executed from Test class ?
[14:46:51] <bjs> node1: when you go `python3 foo.py` then Python pretends foo.py is a module called "__main__"
[14:47:10] <bjs> if you then `import collections` you get another module called "collections"
[14:47:19] <node1> okay, but i performed this on IDE
[14:47:33] <bjs> node1: okay?  the IDE was the one that ran Python then
[14:47:50] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[14:48:25] <node1> https://pastebin.com/raw/23gFK91S bjs
[14:48:34] *** Joins: Naan (~naan@user/naan)
[14:48:40] <node1> okay got it
[14:48:42] <bjs> node1: yes I know,  I'm not sure what you're confused by?
[14:48:54] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[14:49:03] <node1> so it's IDE?
[14:49:14] <bjs> node1: no the IDE isn't anything to do with it
[14:49:32] <node1> mean current program?
[14:49:38] <AhmedAmerican> graingert: something like that ? https://bpa.st/PEOQ , pay attention on how i passed the file to pandas.
[14:50:21] <bjs> node1: I mean,  at some point either you or the IDE is running the file that contains the Test class
[14:50:21] <graingert> AhmedAmerican: if it's just a StringIO you just .write it without await
[14:50:23] <node1> Now i understood thanks bjs
[14:50:42] *** Quits: chrisawi (~chrisw@user/chrisawi) (Ping timeout: 255 seconds)
[14:50:57] <AhmedAmerican> graingert: it's BytesIO
[14:51:17] <Repiphany> node1: https://bpa.st/BX6A
[14:51:21] <graingert> AhmedAmerican: Same with bytesio
[14:51:41] <AhmedAmerican> alright, what do you think about `myf.getvalue()` ?
[14:52:08] <graingert> AhmedAmerican: You can just use .content with an httpx.AsyncClient.get(...)
[14:52:16] *** Joins: wyclif (~wyclif@user/wyclif)
[14:52:19] *** Joins: Haxxa (~Haxxa@122-199-44-120.ip4.superloop.com)
[14:52:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::9885)
[14:52:32] <bjs> node1: your IDE is probably just hiding the fact it did `python3 test.py` in the background.  I use VSCode and always use the terminal to run python myself
[14:52:49] <SGautam__> How does one distribute python executables?
[14:52:54] <SGautam__> I'm making a game.
[14:52:54] <graingert> AhmedAmerican: You're just buffering the whole thing to memory then joining it into a single bytes object
[14:53:13] <SGautam__> Ideally, I'd want to distribute my game as an executable rather than python code.
[14:53:17] <graingert> SGautam__: depends on the store front you're using
[14:53:34] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[14:54:03] <SGautam__> I think I could just distribute the interpreter. But my problem is the libraries.
[14:54:05] *** Joins: jelmer (~jelmer@user/jelmer)
[14:54:08] <bjs> SGautam__: you can use something like PyInstaller to generate the executable (but note, this executable is just a ball that contains your Python code and a whole Python implementation)
[14:54:15] <node1> VSCode is great, but i use vim and ddd with pydb for debugging.
[14:54:20] *** Joins: entuland (~entuland@user/entuland)
[14:54:35] <AhmedAmerican> graingert: i used https://www.python-httpx.org/async/#streaming-responses to stream the response in chunks
[14:54:47] <bjs> node1: okay well I used to use vim and also just used the terminal. I'm saying, when you get confused by something you should try it out in the terminal running things manually so the IDE isn't adding any confusion.
[14:54:56] <node1> As i have stick with assembly and C
[14:55:09] <graingert> AhmedAmerican: right but as soon as you stream it you buffer the whole response
[14:55:21] <bjs> node1: day to day I do a lot with asm and C and Rust and a variety of languages,  I think VSCode works really well for mixed language projects
[14:55:22] <u4t> pfft. REAL programmers manipulate quantum states directly in silicon using lasers
[14:55:34] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:56:49] *** Joins: nyah (~nyah@90.221.186.180)
[14:58:26] <AhmedAmerican> graingert: Super! so there's no need to store the file in memory. just passing `r.content` directly here ` await trio.to_thread.run_sync(partial(pd.read_excel, r.content, sheet_name=3, engine="pyxlsb"))`
[14:58:47] <AhmedAmerican> graingert: :D you usually think out of the box :D
[14:58:47] <graingert> AhmedAmerican: that does store the file in memory
[14:58:49] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[14:59:04] *** Quits: kmh (~kmh@p200300df5f3d230035b7f5463ee68434.dip0.t-ipconnect.de) (Quit: Leaving)
[14:59:04] <AhmedAmerican> i meant no need to do it twice
[14:59:11] <graingert> AhmedAmerican: right
[14:59:39] <graingert> Do you know if read_excel can take a SupportsRead[bytes] ?
[15:00:37] <AhmedAmerican> graingert: honestly idk
[15:02:25] *** Joins: darksun (~darksun@user/darksun)
[15:03:08] <graingert> AhmedAmerican: How big's the file?
[15:03:57] <AhmedAmerican> like 8mb with 800k rows
[15:04:35] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[15:04:42] *** Quits: semanticz0 (~semanticz@116.68.101.148) (Ping timeout: 268 seconds)
[15:04:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 246 seconds)
[15:07:47] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[15:09:59] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:12:52] *** Joins: EGH (~EGH@185.25.195.104)
[15:13:31] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[15:16:34] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[15:16:40] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:17:23] <rannnn8888> how extrct the news text bs4 https://bpa.st/PZYA
[15:19:33] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:20:45] *** Quits: Mikaela (~sid12355@user/mikaela) (Changing host)
[15:20:45] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[15:26:58] *** Joins: kosh (~kosh@user/kosh)
[15:33:54] *** Quits: SGautam__ (~SGautam@59.90.3.1) (Ping timeout: 252 seconds)
[15:34:59] *** Joins: SGautam (~SGautam@59.90.2.157)
[15:35:41] *** Joins: kmh (~kmh@p200300df5f3d2300852dc21772644f53.dip0.t-ipconnect.de)
[15:36:45] *** Joins: SGautam_ (~SGautam@27.59.178.85)
[15:36:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[15:37:06] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[15:37:44] *** Joins: Pickchea (~private@user/pickchea)
[15:38:01] *** Quits: acresearch (~acresearc@user/acresearch) (Ping timeout: 246 seconds)
[15:38:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:38:47] *** Joins: acresearch (~acresearc@user/acresearch)
[15:39:40] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[15:40:28] *** Quits: SGautam (~SGautam@59.90.2.157) (Ping timeout: 268 seconds)
[15:40:35] *** Joins: manti7 (~manti7@176.10.104.94)
[15:40:36] *** Joins: SGautam__ (~SGautam@117.195.240.234)
[15:42:00] *** Quits: SGautam_ (~SGautam@27.59.178.85) (Ping timeout: 255 seconds)
[15:42:37] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:43:14] *** Quits: Brocker (~NoBody@user/brocker) (Quit: ZNC 1.8.2 - https://znc.in)
[15:44:06] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 258 seconds)
[15:44:33] *** Joins: darksun (~darksun@user/darksun)
[15:46:16] *** Joins: Brocker (~NoBody@user/brocker)
[15:47:41] *** Joins: the-mask (~the-mask@user/the-mask)
[15:48:41] <AhmedAmerican> what's the opposite for `soup.find('input',url=True)` by CSS selector ? `soup.select_one('input[url=??]')`
[15:49:17] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[15:50:08] <acagastya> Hi, is it possible to rerender/paint a tkinter window, say every 20 times a second?
[15:51:24] *** Joins: rememberYou (~someone@user/rememberyou)
[15:52:28] *** Quits: menace (~someone@user/menace) (Ping timeout: 250 seconds)
[15:53:29] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[15:55:04] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[15:55:16] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[15:55:22] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[15:55:35] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[15:56:34] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[15:56:58] *** Server sets mode: +Ccnrtf #python-unregistered
[16:00:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:02:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:02:47] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:10:30] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[16:10:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:10:53] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[16:11:02] *** Joins: wyclif (~wyclif@user/wyclif)
[16:13:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[16:14:39] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:15:21] *** Joins: bindu (bindu@user/bindu)
[16:16:51] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[16:19:44] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Ping timeout: 265 seconds)
[16:20:52] *** Parts: Kays (Kays@user/kays) ()
[16:21:01] <rendar> what is the best method (with numpy? scipy?) to solve these kind of polynomials: https://imgur.com/TI29zr4 ?
[16:21:03] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:21:09] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[16:21:50] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[16:22:18] *** SGautam__ is now known as SGautam
[16:23:45] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[16:23:47] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[16:24:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[16:24:32] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[16:24:32] *** Joins: bindu (bindu@user/bindu)
[16:24:43] *** Quits: bindu (bindu@user/bindu) (Client Quit)
[16:26:01] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[16:26:22] <ApostleInTriumph> Hello. in the second example in the doc, how do I get an output of [[1],[4],[2],[5]...] https://numpy.org/doc/stable/reference/generated/numpy.vstack.html
[16:27:36] *** Joins: bindu (bindu@user/bindu)
[16:28:05] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[16:29:04] <Repiphany> You could do np.hstack((a, b)).reshape(-1, 1)
[16:29:59] <ApostleInTriumph> Repiphany would it be valid if the inner dimension changes? i.e., the shape is (N, M)
[16:30:04] *** Joins: sebastianos (~sebastian@user/sebastianos)
[16:30:27] <ApostleInTriumph> then, would np.hstack((a, b)).reshape(2*N, M) be a valid solution?
[16:30:39] <ApostleInTriumph> provided a,b are of (N,M) shape
[16:31:04] <ApostleInTriumph> I checked for small M,N. seems okay. not sure if there is any exception
[16:31:07] <Repiphany> I don't know what arrays you have or what result you expect, just try it out
[16:32:52] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[16:34:19] *** Joins: ano (~weechat@user/ano)
[16:34:39] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[16:34:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:35:06] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 255 seconds)
[16:35:06] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 255 seconds)
[16:35:06] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[16:35:22] *** Joins: sebastianos (~sebastian@user/sebastianos)
[16:35:40] *** Joins: jelmer (~jelmer@user/jelmer)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:22] *** Joins: xhor (~xhor@79.112.4.198)
[16:38:32] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 258 seconds)
[16:39:40] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[16:41:02] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:d2a:c7af:9d0c:3c04)
[16:41:09] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[16:45:21] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:d2a:c7af:9d0c:3c04) (Ping timeout: 250 seconds)
[16:45:38] *** Quits: xhor (~xhor@79.112.4.198) (Changing host)
[16:45:38] *** Joins: xhor (~xhor@user/xhor)
[16:46:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a)
[16:47:10] *** Quits: xhor (~xhor@user/xhor) (Quit: Leaving)
[16:48:04] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[16:48:18] *** Joins: xhor (~xhor@user/xhor)
[16:48:29] *** gr33n7001 is now known as gr33n7007h
[16:48:31] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:53:14] *** Quits: starz (starz@ns378512.ip-37-59-36.eu) (Ping timeout: 268 seconds)
[16:55:48] *** Joins: stig124 (~stig124@193.32.126.162)
[16:56:08] *** Parts: stig124 (~stig124@193.32.126.162) ()
[16:57:31] *** Joins: ackroydai (~334498e2@user/ackroydai)
[16:59:06] *** Parts: ackroydai (~334498e2@user/ackroydai) ()
[16:59:08] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[17:01:28] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:02:12] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[17:04:43] *** Joins: gggpkm (~gggpkm@221.219.66.135)
[17:04:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[17:05:17] <gggpkm> can delete operator remove all type of instance
[17:07:16] <Yhg1s> gggpkm: there is no 'delete operator'.
[17:07:24] <Yhg1s> gggpkm: the 'del' statement deletes references, not objects.
[17:07:40] <Yhg1s> gggpkm: you may want to watch or read bit.ly/pynames1 to understand how that works.
[17:08:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:08:49] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:09:40] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[17:10:25] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[17:11:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[17:12:06] *** Joins: stig124 (~stig124@193.32.126.162)
[17:12:08] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[17:12:33] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[17:16:22] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 246 seconds)
[17:18:01] *** Quits: gggpkm (~gggpkm@221.219.66.135) (Ping timeout: 258 seconds)
[17:18:31] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 268 seconds)
[17:21:38] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[17:22:09] *** Joins: probonic (~probonic@mail.philevansweb.com)
[17:28:23] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 268 seconds)
[17:29:10] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[17:30:22] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:30:40] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:31:56] *** Joins: pnoud (~pnoud@user/pnoud)
[17:32:47] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[17:32:52] *** Joins: entuland_ (~entuland@user/entuland)
[17:34:10] *** Quits: xhor (~xhor@user/xhor) (Ping timeout: 252 seconds)
[17:35:15] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[17:36:48] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 258 seconds)
[17:37:01] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[17:41:28] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[17:42:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:43:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:43:12] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[17:45:16] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:45:20] *** Joins: monkey_ (~user@190.104.116.134)
[17:46:38] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:48:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:48:30] *** Joins: wyclif (~wyclif@user/wyclif)
[17:49:21] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[17:50:47] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[17:52:17] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Quit: reboot)
[17:53:06] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[17:53:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:53:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:54:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:57:20] *** Joins: gggp (~gggp@123.116.73.11)
[17:57:57] <gggp> does python have reference type internal
[17:58:16] <graingert> gggp: there's a Cell for closures
[17:59:01] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 250 seconds)
[17:59:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[17:59:28] *** Joins: wyclif (~wyclif@user/wyclif)
[17:59:30] <gggp> reference type
[17:59:53] <graingert> gggp: https://docs.python.org/3/library/types.html#types.CellType
[18:00:39] <gggp> maybe this is not my answer
[18:00:53] <bjs> gggp: what would you do with this "reference" type?
[18:01:14] <gggp> a=1 //a is reference
[18:01:20] <bjs> gggp: but what does that mean?
[18:01:31] <bjs> what would you do with this type,  how would it behave differently to other Python objects?
[18:02:00] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:02:18] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[18:02:18] *** ayusta is now known as ayustae
[18:04:33] <gggp> oh , python use gc
[18:04:35] *** Joins: jelmer (~jelmer@user/jelmer)
[18:04:40] <gggp> so no need reference type
[18:04:46] <bjs> gggp: I'm not sure how those relate
[18:05:04] <bjs> (because it's not clear what your "reference type" is supposed to be?)
[18:08:58] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[18:09:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:10:03] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[18:10:10] *** entuland_ is now known as entuland
[18:11:34] <bjs> gggp: you might find that normal Python objects already (mostly) do what you want
[18:12:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:12:47] *** Quits: gggp (~gggp@123.116.73.11) (Ping timeout: 268 seconds)
[18:13:19] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[18:14:13] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:15:29] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:19:40] *** Quits: Notgnoshi (~nots@2001-48F8-8-40-FA77-B918-2203-346-dynamic.midco.net) (Remote host closed the connection)
[18:21:17] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[18:22:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:24:14] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[18:24:30] *** Quits: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[18:25:20] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[18:28:02] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b8a8-a0e0-33b3-f041.res6.spectrum.com)
[18:28:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[18:29:42] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 258 seconds)
[18:31:30] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 250 seconds)
[18:31:34] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[18:32:00] *** Joins: jelmer (~jelmer@user/jelmer)
[18:33:06] *** Joins: zebrag (~chris@user/zebrag)
[18:33:51] *** Quits: nyah (~nyah@90.221.186.180) (Read error: Connection reset by peer)
[18:37:03] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 255 seconds)
[18:42:05] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:42:19] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:42:22] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[18:42:37] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[18:42:38] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[18:44:15] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:f5ec:dd60:1223:a3c0) (Ping timeout: 255 seconds)
[18:45:29] *** Joins: bss (bss@rie.incorporeal.org)
[18:48:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Killed (strontium.libera.chat (Nickname regained by services)))
[18:48:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[18:48:31] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[18:54:01] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:54:40] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:55:46] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c9b:2e00:5387:8d4c:6325:88cb) (Ping timeout: 246 seconds)
[18:56:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[18:59:31] *** Joins: skapata (~Skapata@user/skapata)
[19:01:29] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:01:50] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[19:01:55] *** Joins: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net)
[19:03:11] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[19:03:50] <spiun> Is there an efficient way to find the first offset (within a string) of multiple candidate substrings, as well as which candidate was found?
[19:04:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[19:04:43] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[19:04:48] <Repiphany> re.search
[19:04:56] <spiun> i.e. something like `offset, found_string = find_first_of(['one', 'two', 'three'], 'some longer text with one or two of the candidates')`
[19:05:23] *** Joins: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:44b9:2c9c:c9a5:ce2b)
[19:05:36] <spiun> with re.search i'm not very confident about properly escaping the input list
[19:06:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[19:06:27] <spiun> ah i see there is re.escape
[19:08:54] *** Quits: tims (~tims@193-82-234-90.tpgi.com.au) (Ping timeout: 268 seconds)
[19:10:53] <spiun> ty
[19:13:03] <DK3> im trying to add list values to a existing string: missing_servers = 'Following Servers Types are not in Stock\n'.join(missing)
[19:13:16] <DK3> problem is that the string is not in the missing_servers variable only the list what am i doing wrong?
[19:13:53] <SnoopJ> spiun, if you want to do something like multiple regexes without repeating shared work, this is a pretty good read (but _definitely_ power-user territory): http://lucumr.pocoo.org/2015/11/18/pythons-hidden-re-gems/
[19:14:25] <Repiphany> str.join is for making a longer string separated by a delimiter, e.g. ','.join(['a','b','c']) == 'a,b,c'
[19:15:42] <DK3> i see so iam totally wrong here :D
[19:16:40] <Repiphany> "Message...\n" + '\n'.join(missing)
[19:17:32] <DK3> thats working as intented, thank you
[19:17:45] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:19:01] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[19:19:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:19:58] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:20:18] *** Joins: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net)
[19:21:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:22:47] *** Joins: wyclif (~wyclif@user/wyclif)
[19:24:31] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[19:25:20] *** Joins: LiftLeft (~LiftLeft@154.21.23.108)
[19:26:46] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:27:34] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[19:28:56] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[19:30:27] *** Joins: rsx (~dummy@ppp-188-174-149-162.dynamic.mnet-online.de)
[19:30:57] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[19:31:01] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:31:03] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[19:32:01] *** Joins: jelmer (~jelmer@user/jelmer)
[19:32:35] *** Joins: monkey_ (~user@190.104.116.134)
[19:32:46] *** Joins: pnoud (~pnoud@user/pnoud)
[19:32:48] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[19:32:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:33:29] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[19:36:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:37:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[19:39:16] *** Joins: wyclif (~wyclif@user/wyclif)
[19:40:12] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[19:42:02] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 256 seconds)
[19:42:25] *** Joins: jelmer (~jelmer@user/jelmer)
[19:43:49] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[19:43:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:44:47] *** Joins: wyclif (~wyclif@user/wyclif)
[19:45:08] <acresearch> people is there a way to hire someone to make your code better?   i have a large code 250 lines (a single class) and even though it works, the code looks ugly,,, i might be able to do a better job but I just do not have time. are there people who can takr your code and make it better and more efficient?
[19:45:26] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:49:05] <acagastya> I have this code <https://0x0.st/-Vb7.py> and I am trying to just animate a line in tkinter -- but that does not delete the previously sketched line.  Any way to delete the old sketch while painting a new one?
[19:49:10] *** Quits: DillonB07 (~DillonB07@cpc123410-leic20-2-0-cust892.8-1.cable.virginm.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[19:50:21] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[19:51:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:51:34] *** Joins: mickey (~user@user/mickey)
[19:52:41] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[19:53:07] <acagastya> Or perhaps, I can rephrase the question: how can I redraw the canvas every 40ms?
[19:53:50] *** Joins: Pickchea (~private@user/pickchea)
[19:54:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:54:38] *** Joins: teut (~teut@182.64.49.252)
[19:55:34] *** Joins: isekaijin (~pyon@user/pyon)
[19:55:48] *** Joins: wyclif (~wyclif@user/wyclif)
[19:56:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[19:56:51] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:57:09] *** Joins: gusto (~Augustus@109.255.100.54)
[20:00:13] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c9b:2e00:5387:8d4c:6325:88cb)
[20:03:32] <bjs> acagastya: well to answer your first question, create_line returns an id you can .delete()
[20:05:01] <acagastya> Ah, that works!
[20:05:19] *** Joins: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net)
[20:05:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:06:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:06:49] *** Joins: wyclif (~wyclif@user/wyclif)
[20:06:51] *** RemiYuko is now known as AkechiShiro
[20:11:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[20:12:05] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:12:09] *** Joins: et_ (~et@user/et)
[20:12:20] *** Joins: wyclif (~wyclif@user/wyclif)
[20:12:37] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[20:12:38] *** et_ is now known as et
[20:13:39] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[20:13:55] *** Joins: cheater (~Username@user/cheater)
[20:15:06] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[20:15:25] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[20:15:45] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Client Quit)
[20:17:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:17:51] *** Joins: wyclif (~wyclif@user/wyclif)
[20:18:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:18:26] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[20:19:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a) (Quit: Leaving)
[20:19:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a)
[20:21:32] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[20:21:47] *** Joins: upsala (~zcb@185.213.155.160)
[20:21:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:22:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[20:23:06] *** Joins: no_maam (~chat@gauss.datenzone.de)
[20:23:08] *** Quits: jdmark (~jdmark@67.8.137.130) (Quit: Leaving)
[20:23:23] *** Joins: wyclif (~wyclif@user/wyclif)
[20:24:07] <no_maam> Hi, is there any python library that assists me with the generation of python code? For example, when I have the name of a function I would like to generate as a string and the argument names as an array, is there something that will turn that into pretty formatted python code?
[20:25:16] *** Joins: sdb1031 (~sdb1031@184-091-161-228.res.spectrum.com)
[20:25:45] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Ping timeout: 265 seconds)
[20:27:38] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[20:28:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:30:20] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[20:30:32] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[20:30:37] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 246 seconds)
[20:31:14] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:33:05] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[20:34:08] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:11] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:34:24] *** Joins: wyclif (~wyclif@user/wyclif)
[20:34:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:37:06] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a) (Quit: Leaving)
[20:37:18] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[20:37:47] *** Joins: kor1 (~kor1@user/kor1)
[20:39:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[20:40:01] *** Joins: wyclif (~wyclif@user/wyclif)
[20:40:25] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:41:29] <stig124> no_maam: Basically any IDE will do it, and a simple bash script can be done if you don't use IDEs
[20:41:42] *** Joins: starz (starz@ns378512.ip-37-59-36.eu)
[20:41:47] *** Joins: NeoCore (~neocore@195.200.221.164)
[20:42:58] <no_maam> stig124: Right, but imagine I would like to write a python script that supports a user to compute something based on an excel table. Then I would first like to parse the table and get all the column names and then generate a python source file that contains a function that takes all the column names as arguments. I would then ask the user to complete the function.
[20:43:23] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[20:43:43] <no_maam> stig124: And the second time the program is called, it will pick up the source code file and invoke the function for every row in the table.
[20:44:08] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[20:44:17] <no_maam> stig124: Right now I generate the template with string formatting but it would of course be nice when there would be something general in python.
[20:45:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:45:33] *** Joins: wyclif (~wyclif@user/wyclif)
[20:45:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:46:41] *** Quits: ominionx (~ominionx@204.98.224.67) (Quit: Leaving)
[20:47:40] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:47:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[20:48:38] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:49:13] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[20:49:24] *** Gustavo6046_ is now known as Gustavo6046
[20:49:33] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[20:50:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:51:03] *** Joins: wyclif (~wyclif@user/wyclif)
[20:53:02] *** Quits: noobly11 (~noobly@50.38.123.106) (Quit: Client closed)
[20:53:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:56:33] *** Joins: wyclif (~wyclif@user/wyclif)
[20:56:52] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[20:58:57] *** Joins: jelmer (~jelmer@user/jelmer)
[20:59:05] *** Joins: pnoud (~pnoud@user/pnoud)
[21:00:40] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[21:01:09] *** Joins: BUSY (~BUSY@user/busy)
[21:01:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:01:59] *** Quits: BUSY (~BUSY@user/busy) (Max SendQ exceeded)
[21:02:04] *** Joins: wyclif (~wyclif@user/wyclif)
[21:02:29] *** Joins: BUSY (~BUSY@user/busy)
[21:05:20] *** Joins: zaizai123 (~bb@93.122.167.52)
[21:05:27] *** Quits: t3nj1n (~t3nj1n@172-79-155-71.nrwc.ny.frontiernet.net) (Ping timeout: 268 seconds)
[21:05:47] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[21:06:38] <zaizai123> Hi, so regarding project configuration with env variables based on deploying environemnt (prod, staging, dev etc), what is the meta?
[21:06:51] <zaizai123> what packages should I use?
[21:06:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[21:07:22] *** Quits: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10) (Ping timeout: 246 seconds)
[21:07:45] *** Joins: jl- (~jl@c-73-55-56-137.hsd1.fl.comcast.net)
[21:08:10] *** Joins: Auron (~Auron956@user/auron)
[21:08:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:09:15] <jl-> I'm having a hard time moving line 21-31 out of the contructor here in its own function as part of the class: https://paste.debian.net/1204820/
[21:14:30] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[21:15:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 255 seconds)
[21:16:02] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[21:17:06] *** Joins: magla (~gelignite@55d4e6f7.access.ecotel.net)
[21:17:47] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[21:18:11] <raek> jl-: maybe you can add @staticmethod between @self.slack.event_adapter.on() and def message?
[21:19:02] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[21:21:17] *** Joins: squirrel (~sq@user/squirrel)
[21:21:50] *** Joins: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it)
[21:22:08] <squirrel> with requests, is there an official way to get server declared response encoding?
[21:22:33] <squirrel> there's response.encoding but the documentation doesn't seem to say how it is set
[21:23:27] *** Joins: stig124_ (~stig124@89.44.9.25)
[21:24:12] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:26:25] *** Quits: stig124 (~stig124@193.32.126.162) (Ping timeout: 268 seconds)
[21:26:26] *** stig124_ is now known as stig124
[21:27:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:28:28] *** Quits: SGautam (~SGautam@117.195.240.234) (Ping timeout: 252 seconds)
[21:28:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[21:28:32] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[21:28:57] *** Quits: zaizai123 (~bb@93.122.167.52) (Ping timeout: 255 seconds)
[21:29:15] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:29:32] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:31:02] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:31:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[21:31:30] *** Joins: BUSY (~BUSY@user/busy)
[21:31:35] <dav1d> squirrel, probably set from the content type?
[21:32:24] <dav1d> squirrel, https://docs.python-requests.org/en/latest/user/quickstart/#response-content
[21:32:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:32:41] <dav1d> When you make a request, Requests makes educated guesses about the encoding of the response based on the HTTP headers. The text encoding guessed by Requests is used when you access r.text. You can find out what encoding Requests is using, and change it, using the r.encoding property:
[21:33:07] <squirrel> it's set even when content type does not specify charset at all
[21:33:33] <dav1d> see the link
[21:33:46] *** Joins: wyclif (~wyclif@user/wyclif)
[21:34:30] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:34:59] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[21:35:03] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[21:35:04] <squirrel> the link says it's set by the headers, but i'm looking at headers that don't specify charset
[21:35:05] <dav1d> https://github.com/psf/requests/blob/c45a4dfe6bfc6017d4ea7e9f051d6cc30972b310/requests/utils.py#L486 this seems to be it in code
[21:35:14] <dav1d> squirrel, the link says it makes an educated guess
[21:35:30] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:36:05] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[21:36:54] <squirrel> i see
[21:37:24] <squirrel> i guess i'll have to read the headers manually, thanks
[21:38:01] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:38:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[21:39:17] *** Joins: wyclif (~wyclif@user/wyclif)
[21:39:32] *** Joins: jdmark (~jdmark@67.8.137.130)
[21:39:40] <dav1d> depends, encoding in the web is not always easy, e.g. HTML might declare the content in the body and the server not advertising the encoding. If your server has an explicit header for encoding, then yeah, you have to do that manually (you can set response.encoding as well). If the encoding is part of the content type, requests should pick it up
[21:39:40] <dav1d> correctly
[21:40:11] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[21:40:40] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Ping timeout: 265 seconds)
[21:42:22] <squirrel> i have a bit of my own charset detection logic and i need to know if i should engage it in case the server provides a wrong one or doesn't provide at it all
[21:42:23] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:43:12] <mawk> cchardet
[21:43:34] *** Joins: ajb (~ajb@cupid.whatbox.ca)
[21:43:45] <squirrel> the linked code seems to simply slapping on ISO-8859-1 for every unspecified encoding, that should fail a lot
[21:44:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:44:47] *** Joins: wyclif (~wyclif@user/wyclif)
[21:45:03] <jl-> raek: sorry what do you mean add between? create another function?
[21:45:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[21:46:09] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[21:46:34] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:47:14] *** Parts: floatingpoint (~floatingp@net-2-36-142-160.cust.vodafonedsl.it) ()
[21:47:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:47:35] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[21:47:35] <bjs> jl-: because it needs `self` you cannot put in the class body
[21:48:06] <bjs> jl-: you could define it after you create an instance, like after line 56 `@sb.slack_event_adapter.on('message') def message(payload): ...`
[21:48:26] *** Joins: Elon_Satoshi (~elonsatos@46.102.153.243)
[21:48:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:48:44] <Elon_Satoshi> Hello! I've been going through Automate The Boring Stuff with Python
[21:48:55] <jl-> bjs: so it cannot be inside the class?
[21:49:05] <bjs> jl-: well it's already inside the class for yours
[21:49:16] <jl-> bjs: yeah but it's just slapped into the constructor
[21:49:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:49:34] <bjs> it's just not at the same level as the other functions.  Specifically the `self.slack_event_adapter.on` part cannot be at the same level
[21:50:00] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:50:04] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[21:50:12] <jl-> bjs: what would be better practice here then to do with @self.slack_event_adapter.on('message')
[21:50:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:50:31] <bjs> jl-: maybe it's possible to not use a decorator here, and call some other function on SlackEventAdaptor?
[21:51:40] <jl-> bjs: how? :)
[21:51:48] *** Joins: nyah (~nyah@90.221.186.180)
[21:51:51] <bjs> jl-: I don't know, where are the docs for this library?
[21:52:21] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 255 seconds)
[21:52:49] <bjs> well I mean you can always just undo the decorator to do it manually. afterall all the decorator syntax is doing is calling the decorator with the function as an argument
[21:52:52] <bjs> but that's not always very pretty
[21:52:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[21:53:14] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[21:53:42] *** Joins: gggp (~gggp@123.113.188.221)
[21:54:03] <jl-> bjs: how bad is it to just put it in the constructor like I did? it seems to work, as in, it's calling the library and listens to events
[21:54:17] <bjs> jl-: is it https://pypi.org/project/slackeventsapi/ ?  it seems to use https://pypi.org/project/pyee/ and _its_ docs suggest that you on() can take 2 arguments
[21:54:20] <jl-> I just can't help myself feeling like this is wrong
[21:54:22] <bjs> jl-: not "bad", it just looks funky
[21:54:29] <gggp> how about python in rust
[21:54:31] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:54:43] <bjs> gggp: what do you mean "how about"? how about what
[21:55:08] *** Parts: yogoyo (~yogoyo@user/yogoyo) (bye)
[21:55:24] <bjs> jl-: you can always write it out manually like `def message(self, payload): ...` then in __init__ go `self.slack_event_adapter.on("message")(self.message)`
[21:55:27] <gggp> python written by rust
[21:55:42] <bjs> jl-: the docs for pyee suggest you can write it `self.slack_event_adapter.on("message", self.message)` which might be nicer
[21:55:57] <bjs> gggp: okay? what about what about python written by rust
[21:56:11] <bjs> gggp: you mean, some rust code generating Python code? Or what? It's very not clear what you're asking about
[21:56:43] *** Joins: gitly (~gitly@185.69.145.24)
[21:56:44] <gggp> sorry for my poor english ,I mean the python runtime written with rust
[21:56:53] <bjs> gggp: the Python runtime isn't written in rust
[21:57:09] *** Joins: P1RATEZ (piratez@user/p1ratez)
[21:57:15] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[21:58:35] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:58:35] <bjs> gggp: I'm never really sure what you're asking or what level you want answers at,  the more info you can give the better. Questions like "how about python in rust" are really hard to answer because there's almost no clue what you actually mean or what kind of answer you're looking for ...
[21:58:38] <jl-> bjs: I'm going to give that a try a bit later. what do I do with line 30 and 31?
[21:59:01] <bjs> jl-: can't they go where you normally put, like ~line50
[21:59:13] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:59:23] <bjs> jl-: `if __name__ == "__main__": sb = SlackBot(...); ...; sb.app.run(...)`
[21:59:23] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:59:41] <jl-> bjs: yeah that's how it should be I think
[21:59:57] *** Joins: Wafficus (~user@70.126.240.148)
[22:00:14] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: Textual IRC Client: www.textualapp.com)
[22:00:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:00:43] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[22:01:20] *** Joins: wyclif (~wyclif@user/wyclif)
[22:01:21] <Wafficus> hey there, wanted some advice on how to pull this off with a crontab Python 3 script: How can I examine an HTML page for a specific DIV tag, and programmatically add <img> tags that were referenced from a .JSON file
[22:01:46] *** Joins: Akuli (~Akuli@82-203-164-218.bb.dnainternet.fi)
[22:02:03] *** Quits: rsx (~dummy@ppp-188-174-149-162.dynamic.mnet-online.de) (Quit: rsx)
[22:03:08] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:04:17] <Wafficus> this is the JS way to do it, but I wanted to do this via a crontab job on my site: https://stackoverflow.com/questions/28778048/get-image-from-json-file-using-javascript-and-display-in-html-img-tag
[22:05:13] <squirrel> Wafficus: i would use lxml/xpath
[22:05:20] *** Joins: jdmark2 (~jdmark@67.8.137.130)
[22:06:00] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 250 seconds)
[22:06:07] <nedbat> gggp: there is a python implementation in rust underway
[22:06:25] <squirrel> or just some string operations if i could get away with it
[22:06:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:06:32] *** Joins: azazello (~azazello@109.75.158.195)
[22:06:36] <nedbat> gggp: https://github.com/RustPython/RustPython
[22:06:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:06:50] *** Joins: wyclif (~wyclif@user/wyclif)
[22:06:59] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[22:07:07] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[22:07:24] <Wafficus> squirrel: do you have a reference example?
[22:09:22] *** Quits: jdmark2 (~jdmark@67.8.137.130) (Client Quit)
[22:09:42] *** Joins: Betal (~Beta@user/betal)
[22:09:44] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[22:10:52] <nedbat> gggp: btw, maybe you can out your questions into google translate?
[22:10:59] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 255 seconds)
[22:11:15] <Wafficus> think I found it: https://lxml.de/lxmlhtml.html
[22:11:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a)
[22:11:21] <squirrel> Wafficus: not any specific examples but lxml has some documentation
[22:11:32] <squirrel> look for xpath and addnext
[22:11:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:11:59] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:12:14] *** Joins: et (~et@user/et)
[22:12:21] *** Joins: wyclif (~wyclif@user/wyclif)
[22:12:36] <Wafficus> can that same library tell if the same image is present twice?
[22:12:44] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:12:54] <Wafficus> *rather same branch is present twice in the lxml tree?
[22:13:30] * squirrel not sure
[22:13:36] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[22:14:34] <Wafficus> gotcha thanks
[22:14:35] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[22:14:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[22:15:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[22:17:05] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:17:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:17:52] *** Joins: wyclif (~wyclif@user/wyclif)
[22:18:13] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[22:19:23] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[22:19:38] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[22:22:00] *** Joins: the-mask (~the-mask@user/the-mask)
[22:22:11] *** Quits: bjb (~bjb@sourcerer.ca) (Remote host closed the connection)
[22:24:23] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[22:26:14] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[22:27:00] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 255 seconds)
[22:27:52] *** Quits: ras_manny (~ras_manny@196.24.136.255) (Client Quit)
[22:27:56] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[22:28:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[22:28:18] *** Joins: henrikenggaard (~henrikeng@2a02:810d:e80:68e0:4c1:7df:be19:14d)
[22:28:28] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:28:47] *** Joins: jelmer (~jelmer@user/jelmer)
[22:28:54] *** Joins: wyclif (~wyclif@user/wyclif)
[22:29:50] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:32:33] *** Joins: phax (~phax@user/phax)
[22:33:32] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[22:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:34:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:34:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[22:35:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[22:36:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:38:24] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[22:39:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[22:39:09] *** Quits: jl- (~jl@c-73-55-56-137.hsd1.fl.comcast.net) (Ping timeout: 255 seconds)
[22:39:11] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[22:39:48] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[22:39:56] *** Joins: wyclif (~wyclif@user/wyclif)
[22:44:15] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[22:44:19] *** Quits: Nanobot567 (~Nanobot56@2600:6c58:757f:e4b3:44b9:2c9c:c9a5:ce2b) (Ping timeout: 246 seconds)
[22:44:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[22:45:25] *** Joins: wyclif (~wyclif@user/wyclif)
[22:46:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[22:46:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:47:22] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[22:47:53] <trace987> why does it not change anything if I set a type to a variable explicitly
[22:48:23] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:48:23] <bjs> trace987: the type annotations are documentation, Python itself ignores them.
[22:48:25] *** Quits: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net) (Remote host closed the connection)
[22:48:51] <bjs> trace987: tools like mypy and pytype can read the code (and the annotations) and check that you don't violate them though,  which is what people often do
[22:49:02] *** Joins: pnoud (~pnoud@user/pnoud)
[22:49:56] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[22:50:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:50:56] *** Joins: wyclif (~wyclif@user/wyclif)
[22:52:44] *** Quits: cman (~Cody@2603:9000:d104:8465:a807:3bec:8e60:783f) (Quit: WeeChat 3.2)
[22:54:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:55:13] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[22:56:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:56:56] *** Joins: spiun (~spiun@2a01:4b00:86a9:fb00:bc9f:50f4:ad1e:3d10)
[22:58:50] <nedbat> trace987: what change did you want?
[23:00:12] *** Joins: ttkap (~ttkap@gateway/tor-sasl/ttkap)
[23:00:23] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[23:00:53] *** Quits: gggp (~gggp@123.113.188.221) (Ping timeout: 265 seconds)
[23:01:10] *** Quits: ttkap (~ttkap@gateway/tor-sasl/ttkap) (Changing host)
[23:01:10] *** Joins: ttkap (~ttkap@user/ttkap)
[23:01:22] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[23:01:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:01:23] *** Joins: MikZyth (~MikZyth@188.65.242.162)
[23:01:56] *** Joins: wyclif (~wyclif@user/wyclif)
[23:02:21] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[23:02:24] *** Joins: Celeo (~Celeo@user/celeo)
[23:06:50] <trace987> nedbat, as other languages react to such thing
[23:07:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:07:27] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:46] <nedbat> trace987: you can use mypy to check the types before running, just like you would use a compiler to check the types before running.
[23:09:00] *** Joins: digilink (~digilink@user/digilink)
[23:09:52] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[23:09:55] <nedbat> trace987: that is, usually python is one step: run the program, and languages like C or Java are two steps: first compile, then run. If you want two steps like they have, you use mypy as the first step
[23:12:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:12:57] *** Joins: wyclif (~wyclif@user/wyclif)
[23:13:24] *** Joins: Qtronix (~qtronix@cm-84.213.108.169.getinternet.no)
[23:13:35] *** Quits: digilink (~digilink@user/digilink) (Client Quit)
[23:14:10] *** Quits: ttkap (~ttkap@user/ttkap) (Ping timeout: 244 seconds)
[23:14:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:15:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:15:29] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:17:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:18:27] *** Joins: digilink (~digilink@user/digilink)
[23:18:30] *** Joins: wyclif (~wyclif@user/wyclif)
[23:20:14] *** Quits: autopsy (~autopsy@ip70-190-125-84.ph.ph.cox.net) (Remote host closed the connection)
[23:20:17] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 255 seconds)
[23:20:38] *** Quits: henrikenggaard (~henrikeng@2a02:810d:e80:68e0:4c1:7df:be19:14d) (Quit: Client closed)
[23:22:09] *** Joins: ttkap (~ttkap@user/ttkap)
[23:23:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:23:31] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[23:23:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:24:01] *** Joins: wyclif (~wyclif@user/wyclif)
[23:25:16] *** Joins: runciter (~runciter@user/runciter)
[23:25:18] *** Joins: con3 (~con3@143.198.53.32)
[23:28:23] *** Quits: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com) (Ping timeout: 252 seconds)
[23:29:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[23:29:31] *** Joins: wyclif (~wyclif@user/wyclif)
[23:29:44] *** Joins: monkey_ (~user@190.104.116.134)
[23:30:28] *** Quits: runciter (~runciter@user/runciter) (Remote host closed the connection)
[23:30:59] *** Joins: pnoud (~pnoud@user/pnoud)
[23:31:08] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Read error: Connection reset by peer)
[23:31:20] *** Joins: dynotiger (~dynotiger@45.32.186.178)
[23:31:24] <dynotiger> Hello
[23:31:28] *** Joins: zeden (~zeden@user/zeden)
[23:31:29] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[23:31:36] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[23:32:14] *** Joins: Snyp (~rksht@49.207.206.57)
[23:32:23] <dav1d> Hello!
[23:33:12] <dynotiger> I have a piece of code here using `glob`, but it doesn't output the basedir: https://www.zerobin.net/?e6eda01085143fea#MpAwIxKssclJddWkUzO5dUIAjo3236Mp4Q4QfK9umz8=
[23:34:12] <dynotiger> I think this code that I am trying to debug was written for Py2.7 but I am trying to make it work for Py3
[23:34:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:35:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[23:35:01] *** Joins: wyclif (~wyclif@user/wyclif)
[23:35:47] *** Quits: Qtronix (~qtronix@cm-84.213.108.169.getinternet.no) ()
[23:35:49] *** Joins: Pickchea (~private@user/pickchea)
[23:35:51] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[23:35:54] <BtbN> dynotiger, did you forget the leading /?
[23:36:45] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 255 seconds)
[23:37:29] <dynotiger> oh wow, what a noob mistake.
[23:37:50] <dynotiger> yes I did, but the script I am trying to debug is more detailed. I will keep digging and try to figure it out.
[23:37:59] <dynotiger> thanks BtbN
[23:39:29] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[23:40:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:40:33] *** Joins: wyclif (~wyclif@user/wyclif)
[23:41:12] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::9885) (Quit: Konversation terminated!)
[23:41:29] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 240 seconds)
[23:43:09] *** Joins: x4rchimedes (~archimed3@2a00:23c4:f115:d901:380a:6e2e:92d8:255a)
[23:43:23] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[23:43:25] <x4rchimedes> dang everyone really moved from freenode quick
[23:43:26] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:43:48] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[23:44:32] <Payam> hi, I would like to print a message whenever a list has more than 1 element that is not none. for instance if x = [True, True, False, False] then print "no" and when x = [True, False, False, False] print yes.
[23:44:38] <stealth_> trying to wrap cffi and getting error, https://bpa.st/F27A
[23:44:40] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[23:44:40] <Payam> is there a smart way fo doing that?
[23:44:56] *** Joins: jelmer (~jelmer@user/jelmer)
[23:45:45] <nedbat> x4rchimedes: yes, we've been here for about six weeks :)
[23:45:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[23:46:02] *** Joins: wyclif (~wyclif@user/wyclif)
[23:46:10] <grawity> both of those have 4 elements that are not None, so i'm assuming you want to count those that are false-y
[23:46:18] <Payam> yes. sorry
[23:46:36] <Payam> some onliner. not a loop :P
[23:46:37] <nedbat> Payam: num = sum(int(bool(x)) for x in the_list)
[23:46:45] <nedbat> Payam: it's a one-liner that is also a loop
[23:46:47] <grawity> are they always booleans? if so, you can sum(x) > 1
[23:47:00] <grawity> since apparently, bool is a weird subclass of int
[23:47:10] <stealth_> Payam, `sum(x) > 1`
[23:47:22] <grawity> otherwise, sum(map(bool, x)) > 1
[23:47:36] <grawity> which *looks* less like a loop than a list comprehension does
[23:47:44] <Payam> and if they are of different types? like [None, 123, 32321, False, True] and  if there more than 1 none-None then printing
[23:48:17] <grawity> len(x for x in list if x is None) or something like that
[23:48:33] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:48:43] <bjs> that won't work because generators can't have their len() taken
[23:48:55] <Payam> len([... maybe
[23:48:56] <grawity> oh well, len([same]) then :(
[23:49:05] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[23:49:22] <dynotiger> in the bigger piece of code I am trying to debug here: https://gist.github.com/ei-grad/4d9d23b1463a99d24a8d there is an issue with line 29 that says: `TypeError: a bytes-like object is required, not 'str'` so it looks like the bug is due to the list in the previous line that says: `touchscreen_names = []`. I tried to look at SO for this bug but no results specifically for lists. Any suggestions?
[23:49:32] *** Joins: pnoud (~pnoud@user/pnoud)
[23:49:42] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:954e:1159:52b2:9a4a) (Quit: Leaving)
[23:50:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:51:34] *** Joins: wyclif (~wyclif@user/wyclif)
[23:51:46] <nedbat> dynotiger: i don't see how line 29 can produce that error
[23:52:10] <nedbat> dynotiger: is this the code you are running?
[23:52:19] <Payam> You can not have a message in exit() right?
[23:52:27] <bjs> dynotiger: the subprocess outputs bytes, not text.
[23:52:29] <dynotiger> nedbat: yes. it looks like its written for Py2.7
[23:52:57] <nedbat> dynotiger: oh, sorry, it can.  devices is a list of bytestrings
[23:53:39] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[23:53:40] <x4rchimedes> anyone know about using a script to search a website, e.g. Amazon
[23:54:01] <x4rchimedes> i've got as far as using the script to open the browser
[23:54:13] <nedbat> dynotiger: change line 26 to:  devices = check_output(['xinput', '--list', '--name-only'], encoding="utf8").splitlines()
[23:54:53] <grawity> Payam: at least in 3.x you can, assuming you don't need a custom exit code
[23:55:20] <dynotiger> x4rchimedes: scraping is against Amazon TOS but there are scraper tools in Python
[23:55:39] <Payam> grawity, not just something like exit("I am exiting now.")
[23:56:24] <bjs> Payam: why do you say not?
[23:56:25] *** Quits: jelmer (~jelmer@user/jelmer) (Ping timeout: 246 seconds)
[23:56:27] <grawity> sure, you can do that
[23:56:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[23:56:53] <Payam> sorry. I meant No, Just something like exit(....)
[23:57:04] *** Joins: wyclif (~wyclif@user/wyclif)
[23:57:05] <bjs> Payam: no?
[23:57:10] <bjs> I'm not sure what you're trying to say :)
[23:57:30] <Payam> I meant No, I don't want to care about custom exit code :)
[23:57:32] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[23:58:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[23:58:55] *** Joins: midori (~midori@118.179.37.55)
[23:59:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:59:42] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 255 seconds)
