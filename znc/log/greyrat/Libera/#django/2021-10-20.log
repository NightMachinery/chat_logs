[00:08:48] *** Joins: djapo (~archangel@user/djapo)
[00:11:26] *** Joins: cusco (~tralala@neptune.tretas.eu)
[00:11:59] <cusco> just got scared, joined #django but on OFTC instead of libera.. topic is set "you probably want #django on freenode"
[00:12:08] <cusco> just like 5 parked nicks there
[00:12:18] <cusco> -_-
[00:14:23] <cusco> so.. having a forms.MultipleChoiceField() .. the best way to store the values .. is a contrib.ArrayField ?
[00:23:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[00:23:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:25:19] *** Joins: fikran (~fikran@user/fikran)
[00:30:20] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:38:41] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[01:02:30] *** Joins: urth (~urth@geertswei.nl)
[01:10:51] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:14:00] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:23:27] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 258 seconds)
[01:28:15] <moldy> cusco: depends on your exact situation
[01:30:45] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[01:31:11] *** Joins: jess (~jess@libera/staff/jess)
[01:51:37] *** Quits: gitly (~gitly@85.255.234.27) (Quit: WeeChat 3.2.1)
[01:52:35] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[01:54:20] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Remote host closed the connection)
[01:54:49] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[01:57:34] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 258 seconds)
[02:02:11] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Ping timeout: 264 seconds)
[02:23:25] *** Joins: Matthias1 (~Matthias1@casewireless11.cwru.edu)
[02:28:44] *** Quits: hylje (~hylje@ponie.fi) (Ping timeout: 246 seconds)
[02:29:07] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 252 seconds)
[02:29:29] *** Quits: benjaoming (~benjaomin@37.139.19.237) (Ping timeout: 264 seconds)
[02:31:30] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 260 seconds)
[02:32:35] *** Quits: mxp_ (~mxp@185.16.205.131) (Ping timeout: 246 seconds)
[02:32:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:34:40] *** Joins: fikran (~fikran@user/fikran)
[02:38:30] *** Quits: flagz (~flagZ@188.127.164.67) (Ping timeout: 260 seconds)
[02:47:53] *** Joins: yang_ (~yang@d207-6-48-121.bchsia.telus.net)
[02:57:26] *** Joins: benjaoming (~benjaomin@37.139.19.237)
[02:57:35] *** Joins: dodo (~dodo@user/dodo)
[03:01:39] *** Joins: hylje (~hylje@ponie.fi)
[03:09:50] *** Quits: rundown (~eb0t@90.196.142.168) (Read error: Connection reset by peer)
[03:15:50] *** Joins: rundown (~eb0t@90.199.166.206)
[03:18:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:41:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:42:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:43:45] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 258 seconds)
[03:55:15] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 258 seconds)
[04:07:49] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:b579:da01:cc07:89cc) (Quit: Leaving...)
[04:13:42] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[04:13:45] *** Joins: Rikem (~mike@user/rikem)
[04:19:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:21:01] *** Joins: fikran (~fikran@user/fikran)
[04:34:31] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[04:36:00] *** Quits: urth (~urth@geertswei.nl) (Quit: urth)
[04:53:58] *** Joins: urth (~urth@geertswei.nl)
[05:08:11] *** Quits: yang_ (~yang@d207-6-48-121.bchsia.telus.net) (Ping timeout: 264 seconds)
[05:15:12] *** Quits: The_Jag_ (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:16:48] *** Joins: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it)
[05:19:13] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:25:54] *** Joins: rje (~rje@50.35.241.164)
[05:27:57] *** Joins: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[05:30:59] *** Quits: The_Jag (~The_Jag@host-95-252-246-6.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:39:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:56:24] <schinckel> d1rewolf: user = UserFactory() should be giving you back a user instance.
[05:57:31] <schinckel> We use factoryboy factories all of the time with force_login
[05:57:46] <schinckel> What's your test look like?
[06:06:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:07:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:13:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[06:14:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:19:40] *** Quits: nicode (~nic@2607:f2c0:93bd:8400:4271:da28:1b07:4ce8) (Ping timeout: 260 seconds)
[06:25:40] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 252 seconds)
[06:26:44] *** Joins: ST47 (~ST47@wikimedia/st47)
[06:28:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:29:13] *** Quits: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[06:30:22] *** Joins: fikran (~fikran@user/fikran)
[06:35:37] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[06:39:35] *** Joins: ST47_ (~ST47@wikimedia/st47)
[06:40:05] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 258 seconds)
[06:42:52] *** Quits: Matthias1 (~Matthias1@casewireless11.cwru.edu) (Remote host closed the connection)
[06:43:44] *** Joins: Matthias1 (~Matthias1@casewireless11.CWRU.Edu)
[06:44:39] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[06:47:50] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[06:52:21] *** Quits: ST47_ (~ST47@wikimedia/st47) (Ping timeout: 258 seconds)
[07:06:17] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:14:11] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 264 seconds)
[07:27:02] *** Joins: ST47 (~ST47@wikimedia/st47)
[07:35:11] *** Joins: Gudddu (~Guddu@200-90-226-22.baf.movistar.cl)
[07:38:21] *** Quits: Guddu (~Guddu@200-90-224-92.baf.movistar.cl) (Ping timeout: 258 seconds)
[07:55:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:37:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[08:39:43] *** Joins: fikran (~fikran@user/fikran)
[08:41:31] *** Joins: dor (~erg@185.135.2.172)
[08:52:15] <PaulWay[w]> KRAN!
[09:12:01] <serafeim> hello friends
[09:22:45] *** Joins: carloratm (~carloratm@tilde.club)
[09:24:35] <carloratm> Hi all, I'd like to automatically append a unique numeric id to the slug field on a model. IIUC I can use both signals or override the save method? What do you recommend?
[09:25:09] <carloratm> s/both/either/
[09:26:10] <serafeim> override
[09:26:23] <serafeim> signals are to be avoided if there are other ways to do something
[09:28:53] <PaulWay[w]> Is this to avoid duplicates on a slug?
[09:30:22] <carloratm> serafeim: ok
[09:30:53] <carloratm> PaulWay[w]: yes, but allowing the textual part to be not unique
[09:31:38] <PaulWay[w]> So someone creates a thing, gives it a slug, and you want to assign it slug-2 or slug-3 if there's already a slug-1.
[09:32:33] <carloratm> correct.
[09:32:57] <serafeim> carloratm: i would recommend to not use counters but assign a random string instead like django does
[09:33:14] <serafeim> using counters leads to race conditions unless you are careful with table locking
[09:34:01] <carloratm> serafeim: ok, I was thinking at uuids but thery are too long I think.
[09:34:19] <serafeim> just a small random string should be nough
[09:34:23] <serafeim> enough
[09:35:28] <carloratm> but at every generation I have to check if the slug is unique in the database, right?
[09:36:26] <serafeim> no you woulnd't check. just add a unique constraint
[09:36:59] <serafeim> if you check you once again go to the race condition problem
[09:37:59] <carloratm> ok, with the constraint I just need to catch and retry in case of error
[09:38:10] <serafeim> i.e proc 1 generates a slug. proc 2 generates the same slug. proc 1 checks to see if slug exists and sees that it doesn't. proc 2 checks to see if slug exists and sees that it doesn't. proc 1 inserts the slug. proc 2 inserts the same slug. bummer
[09:38:44] <serafeim> carloratm: or you can just return an error i.e "Something fishy happend, try again". i mean how many unique slugs are you going to have ?
[09:40:04] <carloratm> it should really not happen. But a requirement is that the user does not have to put the slug manually, it must be all automatic.
[09:40:27] <serafeim> it will be automatic since the slug will be generated each time randomly
[09:40:45] <carloratm> anyway, the process is clear. Thank you
[09:40:50] <serafeim> cool
[09:41:28] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 252 seconds)
[10:17:31] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:26:58] *** Joins: WayToDoor8 (~WayToDoor@user/waytodoor)
[10:27:05] *** Joins: pycode (~pycode@2001:b07:5d28:551:cb0b:f005:1c1e:4078)
[10:27:15] *** Joins: kiska6 (james@user/kiska)
[10:28:22] *** Joins: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no)
[10:30:23] *** Joins: anorthall_ (~anorthall@user/anorthall)
[10:39:50] *** Quits: CapnKernel (foobar@gromit.mixdown.ca) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: kiska (james@user/kiska) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: anorthall (~anorthall@user/anorthall) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Buliarous (~gypsydang@185.207.166.57) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: crowbar (~crowbar@user/crowbar) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Ping timeout: 260 seconds)
[10:39:50] *** kiska6 is now known as kiska
[10:39:51] *** henbruas_ is now known as henbruas
[10:39:51] *** WayToDoor8 is now known as WayToDoor
[10:40:31] *** Joins: crowbar (~crowbar@user/crowbar)
[10:41:19] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[10:47:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:47:10] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[10:49:04] *** Joins: fikran (~fikran@user/fikran)
[10:52:34] *** Atque is now known as Atque[m]
[10:59:28] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[10:59:43] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[11:00:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:05:18] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[11:12:51] *** Quits: Atque[m] (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:19:55] *** Quits: dor (~erg@185.135.2.172) (Ping timeout: 258 seconds)
[11:20:41] *** Quits: pycode (~pycode@2001:b07:5d28:551:cb0b:f005:1c1e:4078) (Ping timeout: 258 seconds)
[11:21:56] *** Joins: pycode (~pycode@2001:b07:5d28:551:ba11:ce54:2504:4bec)
[11:25:09] *** Joins: Atque (~Atque@user/atque)
[11:37:06] *** Joins: gitly (~gitly@85.255.232.146)
[11:39:22] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[11:39:32] *** Joins: mxp (~mxp@185.16.205.131)
[11:44:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[11:53:21] *** Joins: dor (~erg@195.205.134.159)
[11:58:38] *** Quits: gitly (~gitly@85.255.232.146) (Ping timeout: 258 seconds)
[12:00:27] *** Joins: gitly (~gitly@85.255.236.129)
[12:13:09] *** Quits: dor (~erg@195.205.134.159) (Remote host closed the connection)
[12:17:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:23:56] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[12:36:41] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Read error: Connection reset by peer)
[12:40:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Ping timeout: 260 seconds)
[12:56:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:58:25] *** Joins: fikran (~fikran@user/fikran)
[13:06:18] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[13:06:34] <diverdude> Hello - how can i write an SQL like this in Django? UPDATE A JOIN (SELECT a_id, COUNT(*) AS count_x FROM B GROUP BY a_id) AS S ON A.id = S.a_id SET A.count_x = S.count_x
[13:16:27] <diverdude> I mean this:UPDATE A JOIN (SELECT a_id, SUM(type='x' OR type='y') AS total_count, SUM((type='x' OR type=â€˜yâ€™) AND accept_status != 2) AS left_todo FROM B GROUP BY a_id) AS S ON A.id = S.a_id SET total_count = S.total_count, left_todo = S.left_todo
[13:30:24] <pycode> hello everybody
[13:31:04] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[13:31:23] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[13:31:35] <pycode> i am going crazy dealing with STATIC....ok i have DEBUG=True and STATIC_URL='/static/' i can see the static if i use DEBUG=True and STATIC_URL='http://127.0.0.1:8000/static/' it does NOT work!!! why?
[13:31:41] <pycode> the final url is just the same
[13:32:01] <pycode> i can reach, for exmaple: http://127.0.0.1:8000/static/quotes/img/email-logo.png
[13:32:11] <pycode> using first example
[13:32:46] <pycode> using the second (STATIC_URL='http://127.0.0.1:8000/static/') i see PAGE NOT FOUND
[13:32:50] <pycode> how is that possible?
[13:33:00] <pycode> the final url is just the same
[13:42:05] <moldy> pycode: if you set STATIC_URL to a full URL instead of a path, the static file serving for DEBUG mode is disabled
[13:42:07] <pycode> if the url... IS AN URL... it does not work
[13:42:24] <moldy> https://docs.djangoproject.com/en/3.2/howto/static-files/#serving-static-files-in-development "This helper function works only in debug mode and only if the given prefix is local (e.g. /static/) and not a URL (e.g. http://static.example.com/)."
[13:42:40] <pycode> so what can i do? i mean... how can i test an email if that email need an url to show a logo ?
[13:43:38] <FunkyBob> tehre's a way you can ask request to build a full uri
[13:43:45] <moldy> IIRC: in the part of the code where you have access to the request, build the full URL using request.build_absolute_url(), then pass that URL to the email template
[13:44:04] <moldy> i think you can alternativel also do something with the sites framework
[13:44:20] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/request-response/#django.http.HttpRequest.build_absolute_uri
[13:44:27] <moldy> ah, uri not url :)
[13:46:24] <pycode> hmm i am not using the sites framework
[13:46:35] <pycode> and the problem still remain the same if i use a task (celery) or something else
[13:46:38] <pycode> i do not have the "request"
[13:46:40] <FunkyBob> no need to use sites
[13:46:51] <FunkyBob> pycode: how about you be up front with your requirements
[13:47:04] <FunkyBob> instead of dribbling them out to shoot down the solutions we provide
[13:48:21] <pycode> FunkyBob, i said that i do not have the sites framework reponding to moldy and... i do not have the "request" so i cannot do request.build_etcetc
[13:48:26] <moldy> pycode: the same principle applies with celery: build the URL where you have access to the request, then pass it on
[13:48:31] <pycode> i am not so good with dribbling :D
[13:48:47] <pycode> moldy, i can call task from a command too
[13:48:48] <FunkyBob> first you complain about sites, we fixed that
[13:48:53] <FunkyBob> then you mentioned emails... so we fixed that
[13:48:56] <FunkyBob> then you mention using celeryt
[13:49:05] <FunkyBob> so yes, you're dribbling out the details
[13:49:15] <moldy> pycode: if there is no request there is no URL, so in that case all you can do is fall back to some default
[13:49:26] <pycode> FunkyBob, never mentioned sites, i just replied to moldy ... however
[13:49:28] <pycode> yes moldy
[13:49:39] <pycode> i think i must add a variable on settings.py
[13:49:49] <moldy> that would be one option, yes
[13:49:49] <FunkyBob> nobody fucking well talking about sites
[13:50:02] <pycode> FunkyBob, >>> <moldy> i think you can alternativel also do something with the sites framework
[13:50:13] <FunkyBob> yes, he mentioned it, I said you don't need it... move on
[13:50:19] <FunkyBob> you're the one who keeps going back to it
[13:50:28] <FunkyBob> but I'm wondering WHAT OTHER requirements you haven't mentioned yet
[13:51:37] <FunkyBob> if you'd come out up front and said "I'm trying to send emails from celery tasks, but I need to put full URIs into them"...
[13:51:40] <pycode> FunkyBob, i need to deal with "statics" from normal pages (normal requests) AND....from commands that have no request. I mentioned email because i send email through commands too
[13:51:43] <FunkyBob> we could have skipped a lot
[13:52:09] <pycode> ok
[13:52:11] <FunkyBob> if you want external references, something needs to know the external URL
[13:52:50] <pycode> is there a way i can read settings from template? or i need to inject that var for every template i need ?
[13:52:53] <moldy> an extra setting should work, or maybe use ALLOWED_HOSTS[0] or whatever
[13:53:14] <moldy> a context processor is an easy way to inject variables into all templates
[13:53:20] <FunkyBob> you could use a context processor to add the value for all templates
[13:53:44] <pycode> intersting, yes because i need them everywhere...BUT...are the context_processor used with commands too ?
[13:54:03] <pycode> if yes i can expose some general var that i need everywhere
[13:54:27] <moldy> by command, do you mean management command?
[13:54:28] <FunkyBob> but why would you need the hostname in normal requests?
[13:56:11] <pycode> moldy, yes
[13:56:40] <moldy> pycode: management commands are just python, so you can access the settings with `from django.conf import settings`
[13:57:09] <pycode> yes moldy but what i am saying is that i read template from commands too (for emails)
[13:57:33] <pycode> so i am asking if i must adding the hostname everywhere or i can put it in context_processor and use them in the templates without adding that variables
[13:58:10] <moldy> i am not 100% sure, but i think context processors do not run if the template is rendered without a request
[13:58:12] <pycode> i need to show the logo everywhere so if i have 10 commands that send 10 emails i am saying if i have to add that var 10 times or just use a context_processor to expose the global vars i need
[13:58:23] <pycode> moldy, ok
[13:58:26] <moldy> so in the management command, just populate the template context yourself
[13:58:34] <pycode> i will pass the var, it is not a big problem, just asking
[13:58:35] <pycode> ok
[13:58:39] <pycode> thanks
[13:59:14] <pycode> moldy, i am using celery for many tasks
[13:59:24] <pycode> and 90% of times a task...ends with an email
[13:59:31] <pycode> the tasks have no "request"
[13:59:37] <pycode> so it is just the same thing as command right?
[13:59:57] <moldy> pass everything the task needs to the task as arguments
[13:59:59] <pycode> i must inject the settings into the template (not all the settings ..sure) just the things i need
[14:00:25] <pycode> moldy, so do you think i must pass the uri to the task directly?
[14:00:35] <pycode> maybe is more "easy" to load the settings and get the variable from there
[14:01:16] <moldy> either approach should work, i think
[14:01:56] <pycode> ok
[14:02:02] <pycode> thanks
[14:04:08] <pycode> moldy, i am thinking to override render_to_string to inject the global varis i need directly inside that functions instead of passing "base_url": BASE_URL etc
[14:04:12] <pycode> sounds stupid ?
[14:04:59] <moldy> sounds ok to me
[14:05:33] <moldy> i'd probably do this though: ``render_to_string(template_name, context=get_default_context())``
[14:06:06] <pycode> i mean def render_to_string(path, vars): return real_render_to_string(path, vars+my_global_var)
[14:06:07] <pycode> oh
[14:06:15] <pycode> so that way django will load all the context_processors?
[14:06:29] <moldy> then you can also do ``context=get_default_context(); context.update({"foo": "bar"}); render_to_string(template_name, context)``
[14:06:40] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 258 seconds)
[14:08:27] <pycode> ok
[14:09:18] <pycode> so i can put the get_default_context function somewhere to load default vars and then add new vars there
[14:09:19] <pycode> ok
[14:09:21] <pycode> sounds better
[14:09:33] <pycode> moldy, last question, where do you think is better to put that function ?
[14:12:30] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:12:54] *** Joins: mad_moses (~ps@2a02:810b:f3f:f0d0:d250:99ff:fe86:b052)
[14:13:04] <pycode> moldy, way way everything works.... if and only if i am in debug mode because if insid a template i do BASE_URL + static '/app/name.html' it is ok for debug but when i am live the "static" will read the STATIC_URL that is poiting for example to static.example.com
[14:13:06] <mad_moses> Hi, how do you document your rest api?
[14:13:13] <pycode> so the BASE_URL Part will be a repeatition
[14:14:13] <pycode> ok i think i must install nginx locally to provide my statics as i do live
[14:14:16] <pycode> to avoid such problem
[14:16:50] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:16:56] <moldy> mad_moses: if you're using DRF, there are some packages that offer swagger support
[14:18:49] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:18:52] <mad_moses> moldy: I don't know swagger. I will have a closer look
[14:23:10] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:31:06] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:36:05] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[14:37:09] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[14:47:46] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 265 seconds)
[14:49:19] <pycode> moldy, do you usually create hosts locally?
[14:49:31] <pycode> project1.local project2.local something like that?
[14:49:39] <pycode> or just different port ?
[14:49:49] <moldy> i usually just use localhost:8000
[14:50:04] <moldy> since i usually don't have to run more than one project at the same time
[14:51:28] <pycode> moldy, ok but if i have to configure nginx locally
[14:51:33] <pycode> to serve statics
[14:51:41] <pycode> i need to create a kind of virtualhost
[14:51:55] <pycode> i would like to create the same thing i have on server
[14:52:00] <pycode> because as i wrote above
[14:52:04] <pycode> i can pass the base_url
[14:52:13] <pycode> on every template i need to read_to_string()
[14:52:23] <pycode> but the problem here is when i will be live
[14:52:23] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[14:52:29] <pycode> static commands will use the STATIC_URL
[14:52:35] <pycode> to create the url
[14:52:42] <pycode> so i will have something like static.example.com
[14:52:49] <pycode> so i cannot use the BASE_URL live
[14:53:06] <pycode> for that reason i am going to install nging to serve the statics
[14:53:09] <pycode> nginx
[14:53:16] <pycode> locally too
[14:53:38] <pycode> but i have to create somethings, i think adding hosts to /etc/hosts
[14:53:43] <pycode> and then set that host in static_url
[15:00:51] <moldy> pycode: i rarely have to do that
[15:01:05] <moldy> pycode: but you may find this helpful: https://fleschenberg.net/django-prod-debug/
[15:01:53] <pycode> moldy, because you said you have one project, but if you have to manage multiple different django projects..
[15:01:57] <pycode> ok i read that article
[15:01:58] <pycode> thanks
[15:02:10] <moldy> i have more than one project, but i usually only need to run one at a time
[15:02:19] <moldy> so i don't need different hostnames
[15:02:32] <pycode> moldy, ok i understand but maybe you serve statics from django
[15:02:41] <pycode> i woul dlike to serve statics from nginx
[15:02:48] <pycode> to avoid the problem i wrote above
[15:02:52] <moldy> which problem?
[15:03:02] <pycode> with duplicate BASE_URL + "static" tag
[15:03:17] <moldy> maybe read that blog post first
[15:03:33] <pycode> moldy, if i set http://www... to BASE_URL and then pass that variable to the template
[15:03:34] <moldy> usually there is no reason to run nginx locally
[15:03:38] <diverdude> Hello. Is it possible to remove duplicates from a child table somehow?
[15:03:41] <pycode> then inside that template i use static tag too
[15:03:55] <pycode> so then one i will be online i will have duplicate http:..
[15:04:09] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:04:10] <pycode> please read above what i said
[15:04:16] <pycode> maybe it is not a problem but i think yes
[15:04:37] <moldy> diverdude: if you google for "django remove duplicates" you should find a few ORM examples
[15:05:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:07:45] *** Joins: fikran (~fikran@user/fikran)
[15:08:43] <diverdude> yeah but those are all about moving duplicates from qs. i need to remove it from db
[15:10:19] <dang`r`us> you can subtract querysets and delete the result
[15:10:25] <dang`r`us> for example
[15:11:41] <diverdude> dang`r`us: ok... like  (qs2-qs1).delete() ?
[15:11:46] <dang`r`us> depending on what the library gives you you might not even need to subtract
[15:11:50] <dang`r`us> diverdude, yep
[15:12:43] <diverdude> and what should be in qs1 and qs2 then?
[15:12:49] <dang`r`us> depends on the library
[15:13:26] <dang`r`us> if it gives you 'all instances that are not unique', you need to subtract 'instances that are' from that
[15:14:00] <dang`r`us> something like (Model.not_unique().order_by() - Model.not_unique().unique().order_by()).delete()
[15:14:04] <diverdude> dang`r`us: im not sure what you mean about library. My library is Django
[15:14:16] <dang`r`us> if it gives you *just the duplicates* you can delete straight away
[15:14:25] <dang`r`us> diverdude, 13:34:37 moldy diverdude: if you google for "django remove duplicates" you should find a few ORM examples
[15:14:32] <dang`r`us> "example", then
[15:14:42] <diverdude> oh
[15:14:49] <diverdude> hmm
[15:15:06] <dang`r`us> (it's been a while since I've worked with Django, the order_by() might be important, might not, details are in the docs)
[15:16:14] <moldy> diverdude: https://www.djangotricks.com/tricks/xb27oB7RhvGF/ something like that
[15:16:55] <cusco> Hello! Is it doable to use a postgres contrib ArrayField() in a model, and a MultipleChoiceField in the forms.py ?
[15:18:43] <moldy> it
[15:18:49] <moldy> it's probably possible but not trivial
[15:18:53] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[15:20:33] <cusco> right, im having dificulty.. right now it seems that the data that its comming back is not in the correct format... can't find the error now
[15:20:56] <cusco> so.. what would be the trivial approach?
[15:21:11] <moldy> i don't think there is one if you want a nice UI
[15:21:28] <cusco> regarding UI, Im actually using DAL select 2idget
[15:21:45] <moldy> maybe google if somebody has already solved that, otherwise you'll have to develop it yourself i guess
[15:22:22] <cusco> I found this piece of code, but it does the same as what im doing https://gist.github.com/danni/f55c4ce19598b2b345ef
[15:22:29] <cusco> not exactly but essentially
[15:22:43] <cusco> ok I'll keep digging and may come back with specific questions
[15:23:28] <moldy> did you read the whole thread?
[15:23:36] <moldy> sounds like there's a working solution in one of the comments
[15:23:45] <cusco> yes I did
[15:25:11] <moldy> and pcraciunoiu's solution doesn't work?
[15:25:27] <cusco> that is the one I incorporated
[15:26:03] <cusco> im trying some stuff, i'll get back with specific errors messages trying to undesrtand them
[15:26:22] <moldy> yeah, a traceback or exact error description would be interesting
[15:26:40] <diverdude> Nice, this seems to delete dupes perfectly :) https://dpaste.org/oanq
[15:29:45] <dang`r`us> ah yeah, it was distinct() not unique() I was thinking of
[15:30:10] <dang`r`us> you might be able to write that more efficiently but hey, if it's a one-off, who cares
[15:30:36] <diverdude> dang`r`us: i probably have to run it now and then...but yeah...at some point i should optimize it
[15:31:27] <dang`r`us> if you're continuing to build up duplicates that sounds like you need to fix this at an earlier point in your architectureÂ 
[15:33:11] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[15:35:01] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:38:06] <cusco> moldy: no traceback, just form.is_valid() returns false and says [12, 13] is not a valid choice
[15:38:44] <cusco> Im thinking of getting these values with querydict.getlist() and save them before is_valid() or so
[15:43:20] <moldy> diverdude: what dang`r`us says. if these duplicates should not exist, you probably want a DB constraint
[15:44:13] *** Joins: carlio (~carlio@static.37.64.203.116.clients.your-server.de)
[15:56:07] *** Joins: flagz (~flagZ@188.127.164.67)
[15:56:48] *** Joins: maharshipatel (~maharship@43.250.165.53)
[15:59:18] <maharshipatel> i have django project with boto3 for ( aws s3 storage ) when i upload image using django-admin it works fine ( on my machine ) but when i publish it in production i  get this error ( Upload a valid image. The file you uploaded was either not an image or a corrupted image.) i am unable to access logs of production site.
[16:00:17] <moldy> maharshipatel: my first guess would be is that there is some image library that you have on your local system but not on production
[16:00:19] *** Joins: Throgkt (~Throgkt@user/throgkt)
[16:00:28] <moldy> maharshipatel: libjpeg etc
[16:16:17] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:20:13] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:21:10] *** Joins: Atque (~Atque@user/atque)
[16:29:34] <maharshipatel> oh
[16:29:47] <maharshipatel> really sorry for late respinse moldy
[16:31:23] *** Quits: maharshipatel (~maharship@43.250.165.53) (Quit: Client closed)
[16:33:26] *** Quits: Matthias1 (~Matthias1@casewireless11.CWRU.Edu) (Remote host closed the connection)
[16:37:19] <moldy> no problem
[16:39:39] *** Joins: thiras (~thiras@user/thiras)
[16:46:39] *** Joins: a_normal_user (~a_normal_@2001:16b8:49d3:b800:18b4:a2e1:a423:53b0)
[16:46:43] <a_normal_user> hello everyone
[16:46:52] <a_normal_user> I'm going a bit insane with setting up django and an s3 bucket.
[16:47:03] <a_normal_user> basically i want all uploaded files to be private and all static files to be public.
[16:48:04] <a_normal_user> this is what i currently have: https://dpaste.org/Mru3
[16:48:15] <a_normal_user> but i've tried i guess everything there is on stackoverflow
[16:49:45] <a_normal_user> however, i still get "Requests specifying Server Side Encryption with AWS KMS managed keys require AWS Signature Version 4." errors
[16:50:02] <a_normal_user> is there a way to have different buckets for static and media just to ease the pain?
[17:15:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[17:17:06] *** Joins: fikran (~fikran@user/fikran)
[17:20:05] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[17:27:51] *** Joins: pro_z_ (~pro_z@37.214.46.4)
[17:28:55] *** Quits: a_normal_user (~a_normal_@2001:16b8:49d3:b800:18b4:a2e1:a423:53b0) (Quit: Client closed)
[17:51:41] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:51:46] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[17:53:59] *** Joins: explore (uid233125@hampstead.irccloud.com)
[17:54:42] *** Joins: Matthias1 (~Matthias1@casewireless10.cwru.edu)
[17:56:29] *** Joins: hepcat72 (~hepcat72@137.83.219.136)
[17:57:45] *** Joins: hepcat7286 (~hepcat72@137.83.219.136)
[17:58:12] *** Quits: pycode (~pycode@2001:b07:5d28:551:ba11:ce54:2504:4bec) (Remote host closed the connection)
[18:01:05] <hepcat7286> I have a question about composite views. I created an advanced search interface that can perform a complex query (with AND/OR) any table in the composite view, but I have learned that if you query through a M:M relationship, you end up with rows in the output template that do not match the term supplied for the related table due to the M:M
[18:01:06] <hepcat7286> relationship. How do I deal with this in a dynamic way? (I.e. the advanced search interface handles multiple composite views and and field in any of the tables involved in the view can be included in the query)
[18:01:25] *** Quits: hepcat72 (~hepcat72@137.83.219.136) (Ping timeout: 256 seconds)
[18:03:06] <hepcat7286> I have an example in the stack post I created about this question: https://stackoverflow.com/questions/69639011/django-inner-join-with-search-terms-for-tables-across-many-to-many-relationships
[18:12:09] <hepcat7286> Is there a way to use a raw SQL query that could avoid the left-join-from-the-root-model behavior, which collects records from the M:M related tables that do not match the query?
[18:18:03] <hepcat7286> This is effectively my first time using IRC, let alone Libera chat. As a sanity check - can anyone see my messages - so I know I registered successfully/correctly?
[18:18:49] <hepcat7286> Don't know why it disconnected and when I reconnected, it said the username I'd just registered was taken...
[18:19:48] *** Joins: dor (~erg@195.205.134.159)
[18:22:59] *** Joins: aselman4 (~aselman4@136.2.33.162)
[18:27:23] *** Joins: bambanxx (~bambanx@181-163-32-147.baf.movistar.cl)
[18:33:18] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[18:34:40] *** Quits: Matthias1 (~Matthias1@casewireless10.cwru.edu) (Remote host closed the connection)
[18:35:54] *** Joins: Matthias1 (~Matthias1@caseguest2.CWRU.Edu)
[18:37:47] *** Joins: pycode (~pycode@2001:b07:5d28:551:fe0:ab5c:de58:d96a)
[18:37:49] *** Quits: aselman4 (~aselman4@136.2.33.162) (Quit: Client closed)
[18:38:26] *** Quits: dor (~erg@195.205.134.159) (Remote host closed the connection)
[18:45:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:46:27] *** Quits: Matthias1 (~Matthias1@caseguest2.CWRU.Edu) (Remote host closed the connection)
[18:46:40] *** Joins: Matthias1 (~Matthias1@caseguest2.CWRU.Edu)
[18:52:54] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 260 seconds)
[18:54:44] *** Quits: Matthias1 (~Matthias1@caseguest2.CWRU.Edu) (Remote host closed the connection)
[18:56:27] *** Joins: Matthias1 (~Matthias1@caseguest2.CWRU.Edu)
[18:56:38] *** Quits: Matthias1 (~Matthias1@caseguest2.CWRU.Edu) (Remote host closed the connection)
[19:02:20] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[19:13:52] *** Joins: dor (~erg@195.205.134.159)
[19:14:17] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[19:16:41] *** Quits: hepcat7286 (~hepcat72@137.83.219.136) (Quit: Client closed)
[19:17:26] *** Joins: hepcat72 (~hepcat72@137.83.219.136)
[19:20:30] *** Joins: Matthias1 (~Matthias1@caseguest.CWRU.Edu)
[19:24:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[19:24:38] *** Joins: rje (~rje@65.141.156.170)
[19:26:27] *** Joins: fikran (~fikran@user/fikran)
[19:30:41] *** Quits: dor (~erg@195.205.134.159) (Remote host closed the connection)
[19:31:07] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:31:49] *** Joins: stavros (~stavros@pon1039.cpe.hcn.gr)
[19:31:51] <stavros> Hello
[19:32:00] <hepcat72> Hi
[19:32:06] <stavros> Does anyone know what this syntax is? `class CountryAdmin(admin.ModelAdmin[Country]):`
[19:33:37] *** Joins: mxp_ (~mxp@185.16.205.131)
[19:34:16] <hepcat72> So far, no one has responded to my question. Yours is the first message I've seen since registering for this chat. I wasn't sure this was even working for me. Can you see this message?
[19:35:38] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:35:55] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 260 seconds)
[19:36:57] <GinFuyou> hepcat72, chat has silent times too
[19:38:53] <hepcat72> Thanks for the sanity check GinFuyou.
[19:41:49] *** Atque is now known as ATQUE
[19:43:27] *** Joins: Siecje (~Siecje@157.52.8.245)
[19:43:37] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[19:44:05] <Siecje> for update_or_create() I'm getting a value violates unique constraint but if I do try: get except: create it works
[19:46:55] *** Quits: Matthias1 (~Matthias1@caseguest.CWRU.Edu) (Remote host closed the connection)
[19:47:24] *** Joins: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu)
[19:47:34] *** Quits: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu) (Remote host closed the connection)
[19:47:57] *** Joins: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu)
[19:53:09] *** Quits: stavros (~stavros@pon1039.cpe.hcn.gr) (Quit: Leaving)
[19:53:12] *** Quits: pycode (~pycode@2001:b07:5d28:551:fe0:ab5c:de58:d96a) (Ping timeout: 258 seconds)
[19:53:50] <knbk> stavros: that syntax is usually used as a type hint for generic classes, most likely with django-stubs in this case
[19:54:03] <knbk> Siecje: code/traceback?
[19:55:09] <Siecje> knbk: Hey long time, the call didn't have defaults
[20:06:17] *** Quits: mxp_ (~mxp@185.16.205.131) (Ping timeout: 265 seconds)
[20:06:50] *** ATQUE is now known as Atque
[20:14:53] *** Quits: WhyNotHugo (sid269118@hampstead.irccloud.com) ()
[20:21:16] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[20:22:59] *** Joins: mxp (~mxp@185.16.205.131)
[20:23:29] *** Quits: flagz (~flagZ@188.127.164.67) (Ping timeout: 258 seconds)
[20:24:49] *** Joins: dor (~erg@195.205.134.159)
[20:46:46] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[20:50:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:51:03] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:53:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:58:05] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:03:17] *** Joins: slightlypandaish (~slightlyp@2001:8a0:5606:d100:794a:752e:2795:143a)
[21:05:01] *** Quits: Lartza (lartza@user/lartza) (Quit: Quit)
[21:11:06] *** Quits: hepcat72 (~hepcat72@137.83.219.136) (Quit: Ping timeout (120 seconds))
[21:14:06] *** Quits: Matthias1 (~Matthias1@macbookgamma.STUDENT.CWRU.Edu) ()
[21:34:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[21:35:45] *** Quits: dor (~erg@195.205.134.159) (Remote host closed the connection)
[21:35:48] *** Joins: fikran (~fikran@user/fikran)
[21:40:20] *** Quits: slightlypandaish (~slightlyp@2001:8a0:5606:d100:794a:752e:2795:143a) (Quit: Client closed)
[21:59:25] *** Joins: slav0nic (slav0nic@python.su)
[22:00:00] <d1rewolf> schinckel: sorry I missed your response. It was a stupid error. I had a @pytest.fixture annotated method which returned "return UserFactory" instead of "return UserFactory()"
[22:00:30] <d1rewolf> as a relative Django newb my eyes missed that :)
[22:17:03] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:20:28] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[22:32:30] *** Joins: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk)
[22:34:18] <soxfoxrox> Is it possible to flush not the entire database for a Django project, but just the tables for a single app within that project?
[22:36:48] <soxfoxrox> Whoops, found it on google, I think.
[22:40:21] *** Parts: Siecje (~Siecje@157.52.8.245) (Leaving...)
[22:42:10] *** Joins: jefferson2z (~jefferson@177.55.224.204)
[22:43:27] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:45:52] <jefferson2z> While reading the documentation, I've found some links that the title doesn't match the page title they're sent to.
[22:46:48] <jefferson2z> I would like to contribute, however I'm not sure if I should send a PR, or create an issue first and then send a PR for it.
[22:53:29] *** Joins: stdout (~stdout@216.163.21.11)
[22:53:48] <soxfoxrox> I have a model that keeps track of number votes over time for different suggestions. I am looking to create a queryset that for each suggestion each day calculates the difference between number of votes at the earliest timestamp for that day and the number of votes at the latest timestamp for that day. I could really use the help of someone more experienced at writing queries for how to do
[22:53:48] <soxfoxrox> this. Model is at https://dpaste.org/g417.
[22:53:57] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:04:58] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[23:05:16] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:17:43] *** Joins: Lartza (lartza@user/lartza)
[23:18:22] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:19:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:19:51] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:20:24] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:22:58] *** Quits: soxfoxrox (~soxfoxrox@80.71.131.255.ipv4.parknet.dk) ()
[23:26:44] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[23:26:50] *** Quits: pro_z_ (~pro_z@37.214.46.4) (Ping timeout: 260 seconds)
[23:42:44] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[23:43:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:45:10] *** Joins: fikran (~fikran@user/fikran)
