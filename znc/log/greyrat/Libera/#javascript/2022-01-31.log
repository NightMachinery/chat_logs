[00:00:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:02:12] *** Quits: jinzo (~jinzo@user/jinzo) (Quit: Leaving)
[00:02:30] *** Joins: trevors (~trevors@user/trevors)
[00:05:39] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:07:38] *** Joins: mohab (~mohab@156.223.20.133)
[00:08:33] *** Quits: mohab (~mohab@156.223.20.133) (Client Quit)
[00:09:29] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:12:09] *** Quits: FirstLite (~FirstLite@c-73-223-164-167.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[00:13:53] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[00:13:55] <relipse> how do i drop an element with relative positioning to the place where the mouse is? it seems like I need to convert abs coordinates to relative coordinates or something?
[00:16:12] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[00:16:18] *** Quits: robyn (~robyndrak@user/robyndrake) (Ping timeout: 250 seconds)
[00:19:45] *** Joins: adsc100 (~adsc@227.189.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[00:23:21] *** Quits: adsc (~adsc@2a02:1206:4524:8a30:ae00:812c:7de7:2ce0) (Ping timeout: 256 seconds)
[00:23:36] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:23:49] *** Joins: pavonia (~user@user/siracusa)
[00:25:50] *** Quits: kakashiA1 (~kakashi@p5dd8dc15.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:28:21] *** Joins: medium_cool (~medium_co@136.36.128.48)
[00:28:25] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:29:29] <ThePendulum> relative with what factor?
[00:31:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:33:30] <qswz> magga: .innerHTML=''
[00:33:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23) (Ping timeout: 245 seconds)
[00:33:48] <qswz> oh clear or remove?
[00:33:58] <qswz> use react btw
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 245 seconds)
[00:35:13] <qswz> relipse: you cn use .getBoundingClientRect() on the container, then use event.clientX/Y
[00:35:17] <qswz> and subtract
[00:36:45] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[00:37:54] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[00:39:57] <qswz> then checkmate
[00:40:07] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:41:38] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[00:42:17] *** Quits: Slade (~user@user/slade) (Quit: Bye)
[00:42:28] <qswz> it's so stupid quora.com requires ogin
[00:42:50] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:43:56] *** Joins: Slade (uid128877@user/slade)
[00:44:45] *** Quits: Slade (uid128877@user/slade) (Client Quit)
[00:44:54] *** Joins: Slade (uid128877@user/slade)
[00:47:00] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[00:51:13] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:52:50] *** Joins: hseg (~hseg@195.192.229.23)
[00:55:09] *** Joins: yaalon (~yaalon@189.224.134.252)
[00:57:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:58:19] *** Quits: Slade (uid128877@user/slade) (Quit: Updating details, brb)
[00:58:28] *** Joins: Slade (uid128877@user/slade)
[00:58:50] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 268 seconds)
[01:00:05] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:00:58] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:02:49] <systemfault> I still love Quora even though the quality had dropped down dramatically the last 5 years...
[01:04:04] <systemfault> These days, the questions look "generated", especially those related to american politics... or look like they were written by "trolls".
[01:04:22] <systemfault> Maximum outrage is the name of the game... I guess
[01:04:48] *** Joins: chazy (~chazy@2a0c:5a84:d202:2b00:2441:19f0:3777:5425)
[01:05:59] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:06:01] *** Joins: F8ER (~f8er@user/voxel)
[01:06:37] <chazy> hi, i want to build a list of html elements using a json object, what'd be a good way of doing this? building the html in javascript or having a template in the html file and then making a copy of that element for each item in the json object?
[01:06:39] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[01:08:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:09:34] *** Joins: pulse (~pulse@user/pulse)
[01:09:38] <systemfault> The answer you'll likely get here is to use something declarative like react... where you can just .map your objects to JSX elements
[01:10:21] <systemfault> But... for old school, you'd map the array and either create the DOM nodes manually or use a template
[01:10:36] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[01:10:58] <systemfault> You could take advantage of the <template> tag
[01:12:41] <minnow> i often wonder what scope exactly should i put my functions: as outermost as possible to minimize amount of variables in function's scope or as innermost as possible to minimize function visibility itself
[01:14:09] <systemfault> I personally put them in the outermost scope (module level in my case) unless they're small arrow functions that I use as callback, then I put them inline, in the function
[01:16:34] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[01:17:37] <minnow> systemfault: that's what i'm leaning to also. put them in the outermost scope possible and put them inside other function only if it requires access to outer function variables
[01:18:16] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:19:14] <minnow> i think minimizing function visibility is not that important as it's scope
[01:19:40] *** Quits: Aljone (~Aljone1@87.71.55.225) (Ping timeout: 256 seconds)
[01:23:33] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[01:23:54] <systemfault> That's not a problem you have if you use modules properly.
[01:24:03] <systemfault> Which is something you should be doing.
[01:28:07] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[01:32:56] *** Quits: yaalon (~yaalon@189.224.134.252) (Remote host closed the connection)
[01:33:21] *** Joins: zyweo (~Svew@user/zyweo)
[01:33:32] <chazy> i need to assign text to either of a bunch of variables based on the value of another variable, how can i do this as cleanly as possible?
[01:35:10] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[01:41:37] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[01:41:54] <systemfault> chazy: Difficult to tell without seeing code?
[01:41:54] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:41:54] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:41:54] *** Joins: wroathe (~wroathe@user/wroathe)
[01:42:30] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:43:47] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[01:45:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[01:45:40] *** Quits: CoolerY (~CoolerX@user/coolerx) (Quit: Leaving)
[01:48:20] *** Joins: yaalon (~yaalon@189.224.134.252)
[01:49:27] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[01:51:41] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[01:53:10] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[01:53:40] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[01:54:17] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[01:54:32] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[01:56:34] *** Joins: alystair (~alystair@user/alystair)
[01:56:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[01:57:22] <alystair> Does anyone here know the rational behind DOM mutations occuring even if the content remains exactly the same?
[01:58:12] *** Joins: c4017w (~c4017@209.52.68.8)
[02:00:38] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[02:01:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:01:56] <alystair> eg. document.title = 'foo' when it's already 'foo' causes a mutation
[02:03:01] <Alexendoo> It's simpler
[02:06:17] <alystair> I guess it allows the person writing the code to decide to mutate or not by doing their own check...
[02:08:27] <Alexendoo> It removes an extra comparison from the implementation
[02:10:23] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:10:49] <alystair> I guess comparison is less efficient than simple replacement under most scenarios
[02:11:56] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:12:40] <Alexendoo> It wouldn't be noticeable either way, people aren't updating the title thousands of times per second. So might as well go with the simple option
[02:13:07] <alystair> or any element under sane conditions...
[02:13:55] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[02:14:56] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 245 seconds)
[02:15:08] <alystair> too bad I'm dealing with some weird code - is there a way for me to check equality between a copy of a node that was put inside a documentFragment and the 'original' within the DOM?
[02:15:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[02:15:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:16:00] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:16:28] <alystair> life isn't as easy as fragmentNode === originalNode :p
[02:16:43] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:18:07] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[02:19:41] <Alexendoo> There's Node.isEqualNode
[02:20:07] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:20:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[02:25:07] <alystair> hmm unsure that'll work. I'll keep looking for the next 5 mins then leave a //TODO for future me :p
[02:26:59] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:27:32] <Alexendoo> Why wouldn't it?
[02:29:28] <alystair> ahh the originalState (What's going in the document fragment) are all the children, not the parent node itself
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:42] *** Quits: yaalon (~yaalon@189.224.134.252) (Remote host closed the connection)
[02:32:48] *** Quits: pizdets (~pizdets@183.182.115.245) (Ping timeout: 250 seconds)
[02:33:20] *** Joins: yaalon (~yaalon@189.224.134.252)
[02:33:47] *** Quits: kilitary (~kilitary@188.242.187.4) (Quit: entering irc ...)
[02:33:57] *** Joins: pizdets (~pizdets@183.182.111.130)
[02:34:59] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[02:35:43] *** Joins: onosendi (~onosendi@user/onosendi)
[02:40:20] <alystair> hehe ofc original.childNodes === clone.childNodes wouldn't work :D
[02:42:33] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:43:28] <alystair> heh I could do .innerHTML comparison but then you miss out on all the DOM prop goodness
[02:46:36] <alystair> Eh I'm dropping this, it's not necessary and mimics native mutation behaviour anyway...
[02:47:09] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[02:47:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[02:47:56] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[02:49:08] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:50:41] *** Quits: yaalon (~yaalon@189.224.134.252) (Read error: Connection reset by peer)
[02:52:21] *** JoelJoel is now known as Joel
[02:52:23] *** Joins: bobdobbs (~user@118.148.102.67)
[02:53:12] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[02:53:27] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5) (Read error: Connection reset by peer)
[02:58:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:01:17] *** Quits: mud (~mud@user/kadoban) (Ping timeout: 240 seconds)
[03:02:15] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:13:00] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:13:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:13:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:13:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:14:17] <bobdobbs> Hi all. I'm really stuck with something. I'm trying to replace my gulp workflow with npm scripts. But I haven't been able to figure out how to get a workflow running with a http service, browser-sync, sass processing and js bundling
[03:14:25] <bobdobbs> ok, maybe it's not that simple
[03:15:04] <bobdobbs> This is my package.json at the moment. It should show what I'm *trying* to do: http://pastie.org/p/6k6H9DGN8CHgorMHPoomg9
[03:16:01] <bobdobbs> I've set up npm-watch to watch for changes in my sass and js files. That works
[03:16:50] <bobdobbs> I've set up browser-sync to serve files and update when files change in the dist directory. That works
[03:17:23] <bobdobbs> But I haven't been able to get these things to work at the same time
[03:17:56] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[03:17:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:18:06] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:18:45] <bobdobbs> On line 21 I'm trying to do the following: start the browser-sync server/watching, and also get npm-watch to watch and respond to changes in js and scss files
[03:19:08] <bobdobbs> I've been struggling with this for hours. Any help would be appreciated
[03:19:15] <onosendi> bobdobbs: If you don't want to go the Webpack route, have you tried Parcel? https://parceljs.org/
[03:19:26] <bobdobbs> hai onosendi
[03:19:36] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:19:47] <bobdobbs> I'd like to get this sorted with npm scripts, if I can
[03:22:09] *** Quits: chazy (~chazy@2a0c:5a84:d202:2b00:2441:19f0:3777:5425) (Remote host closed the connection)
[03:22:23] <onosendi> I'm not familiar with concurrently. Is `npm:serve` supposed to be `npm server`? What's `npm:serve`?
[03:22:33] *** Joins: chazy (~chazy@2a0c:5a84:d202:2b00:2441:19f0:3777:5425)
[03:22:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:22:40] <bobdobbs> I'm happy to throw concurrently out the window at this point
[03:22:49] <alystair> perhaps this is better asked in #npm?
[03:22:50] <onosendi> `npm serve`, not `npm server`
[03:23:06] *** Room-Wah is now known as Relms-Wah
[03:24:21] <bobdobbs> according to some tech blog I read 'npm:serve' is equivalent to 'npm run serve'. But yeah, I should use the longer form for clarity
[03:24:38] <onosendi> Ah, gotcha.
[03:24:49] *** Quits: gebbione (~gebbione@cpc152037-finc21-2-0-cust213.4-2.cable.virginm.net) (Remote host closed the connection)
[03:25:07] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:25:08] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[03:25:11] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com) (Remote host closed the connection)
[03:25:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:26:10] <bobdobbs> onosendi: 'concurrently' allows multiple npm scripts to run at the same time. The cost is that it is difficult to read a script that uses concurrently
[03:27:00] <bobdobbs> about a week ago I managed to get this setup working without using concurrently. But at the moment I can't think how I managed to do that.
[03:28:16] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[03:29:11] <onosendi> bobdobbs: Yeah, I kind of deduced that from its name. I use `npm-run-all` to run things in parallel. Not saying it's better though.
[03:29:51] <bobdobbs> oh yup. I came across that one when trying to figure out how to get this build process to work
[03:30:53] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:31:51] <bobdobbs> onosendi: I came across this gist a few hours back. I might try to set things up around this:  https://gist.github.com/jestho/fc1638dd4eeacf49331a748d2d9b2e91
[03:32:25] <onosendi> Yeah, that looks a lot cleaner in my opinion.
[03:33:11] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[03:33:33] <bobdobbs> this seems to let me thrown npm-watch out the window. Which I'm very happy to do.
[03:33:50] <onosendi> bobdobbs: you can even do { "foo:one": "some foo", "foo:two": "some foo" } and `--parallel foo:*` to run all of them.
[03:34:13] *** Quits: N4buc0 (~N4buc0@191.250.117.129) (Quit: Leaving)
[03:35:39] <bobdobbs> k, I'm gonna take a break. back in ten to rejig my scripts
[03:38:40] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:38:55] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[03:40:12] *** Quits: bobdobbs (~user@118.148.102.67) (Ping timeout: 256 seconds)
[03:40:41] <chazy> i have a question about async and then(), if i call a function that uses then(), does the js wait for it or does it continue?
[03:42:10] <chazy> like if i have alert('second') right after myPromise.then(res => alert('first')); which one goes first?
[03:43:18] <alystair> Try it and find out in a simpler test case? :)
[03:43:40] <chazy> yeah i'm trying it out now
[03:47:47] *** Joins: audiobirb (~audio@user/audio)
[03:48:13] *** Joins: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[03:49:16] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[03:49:16] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[03:53:48] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:55:18] *** Joins: yaalon (~yaalon@200.68.141.34)
[03:56:39] *** Quits: adsc100 (~adsc@227.189.202.62.dynamic.cgnat.res.cust.swisscom.ch) (Quit: Client closed)
[03:57:51] *** Quits: yaalon (~yaalon@200.68.141.34) (Remote host closed the connection)
[03:57:54] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-5c1d-a0eb-1a0b-4e78.res6.spectrum.com)
[03:58:57] *** Joins: yaalon (~yaalon@200.68.141.34)
[03:59:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:00:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[04:03:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:04:00] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[04:04:01] *** Quits: yaalon (~yaalon@200.68.141.34) (Remote host closed the connection)
[04:04:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:06:23] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:09:09] *** Joins: yaalon (~yaalon@200.68.164.224)
[04:11:26] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:11:46] *** Joins: bobdobbs (~user@118.148.102.67)
[04:16:10] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[04:17:09] *** Joins: Rockwood (~Rocky@user/rocky)
[04:18:43] *** Joins: Akiva (~Akiva@user/Akiva)
[04:21:39] <bobdobbs> onosendi: I'm a bit closer now. With this setup I get what I want if I run 'npm run sass' and 'npm run serve' in seperate terminals at the same time.
[04:22:30] <bobdobbs> but 'npm run dev' only runs 'serve'
[04:22:42] *** Quits: yaalon (~yaalon@200.68.164.224) (Ping timeout: 260 seconds)
[04:23:49] <bobdobbs> 'npm run watch' works, and runs the sass script on changes
[04:24:06] <alystair> Why'd they make it so impossible to clear broswer cache for a single site on Chrome Android
[04:27:30] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:28:04] *** Joins: jazzy (~jaziz@user/jaziz)
[04:28:05] <onosendi> bobdobbs: `"dev": "npm-run-all --print-label --parallel sass serve"`, assuming `"script": { "sass": "sass stuff", "serve": "serve stuff" }`
[04:29:31] *** Joins: yaalon (~yaalon@200.68.141.22)
[04:31:54] <Rockwood> bobdobbs, what is your backend?
[04:32:14] <bobdobbs> onosendi: that works! thank you!
[04:32:20] <onosendi> bobdobbs: :)
[04:32:20] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:32:51] <bobdobbs> Rockwood: I don't really have one at the moment.
[04:33:24] <Rockwood> npm run watch <-- that why i am asking
[04:34:32] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:38:14] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:39:20] *** Joins: jazzy3 (~jaziz@user/jaziz)
[04:39:37] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[04:40:09] *** Joins: Lazenca (Lazenca@user/lazenca)
[04:40:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:42:57] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:43:03] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:48:12] *** Quits: yaalon (~yaalon@200.68.141.22) (Ping timeout: 256 seconds)
[04:49:04] *** Joins: mud (~mud@user/kadoban)
[04:53:11] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[04:59:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:00:02] *** Joins: yaalon (~yaalon@200.68.140.12)
[05:00:37] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[05:01:46] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:03:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:03:23] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 252 seconds)
[05:05:46] *** Quits: yaalon (~yaalon@200.68.140.12) (Ping timeout: 256 seconds)
[05:06:54] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:07:28] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:10:56] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:12:36] *** Joins: onosendi (~onosendi@user/onosendi)
[05:12:46] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:12:58] <Tabmow> I have an object with an embedded array - I'm trying to iterate through it using for (item of items) which seems to be working but I also get this error: {"errorType":"TypeError","errorMessage":"customerDifot is not iterable"} - Not sure what I'm doing wrong here...
[05:13:19] <systemfault> Maybe it's not an array
[05:13:34] *** Quits: stagas (~stagas@2a02:587:c41d:f5c1:1fde:c237:1ef8:c821) (Ping timeout: 250 seconds)
[05:15:42] <Tabmow> It's not, there is an object inside which contains the array which is what I need to get to.
[05:19:57] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[05:22:30] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[05:23:02] *** Quits: src (~src@user/src) (Quit: Leaving)
[05:23:49] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:25:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:64b2:4d59:ced9:7c72) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:26:22] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[05:27:23] <onosendi> Tabmow: paste your code somewhere.
[05:27:34] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:28:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[05:30:22] <Tabmow> onosendi: https://dpaste.org/Gq2T - The array I want to iterate over is in the object...
[05:31:00] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[05:31:21] *** Joins: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[05:32:28] <onosendi> Tabmow: https://gist.github.com/onosendi/099cf9ec54b17631650e75a1f6e01a67
[05:33:08] <Rockwood> i wanna schedule a task on every 5 mints something like this--> (start, Pause, Resume)
[05:35:34] <onosendi> Rockwood: `setTimeout(() => { console.log('foo'); }, 300000)` ?
[05:35:53] <Rockwood> its for pause only i think
[05:36:05] *** Quits: jazzy3 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[05:36:09] <Rockwood> onosendi, it will be part of that
[05:36:49] <Tabmow> onosendi: thanks!
[05:42:44] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:44:30] <chazy> hmmm await means code execution will wait for whatever after await to complete?
[05:45:04] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[05:45:53] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[05:46:02] <onosendi> chazy: correct.
[05:46:42] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 260 seconds)
[05:46:43] *** Quits: bobdobbs (~user@118.148.102.67) (Read error: Connection reset by peer)
[05:47:31] <chazy> onosendi, if i have a fetch, does it only wait for the fetch()? or for the code inside then() too?
[05:48:26] <Tabmow> onosendi: is there a limitation of using await in those forEach functions?
[05:48:27] *** Joins: bobdobbs (~user@122.56.181.122)
[05:48:37] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[05:48:49] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:49:16] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:49:53] <systemfault> You can't use async/await with .forEach
[05:50:19] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[05:50:51] <KevinX> You can with Promise.all etc
[05:51:00] <systemfault> Nope.
[05:51:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[05:51:32] <systemfault> async/await is based on promises and forEach doesn't return anything
[05:51:51] <systemfault> So you don't have any way to know if everything went fine.
[05:52:11] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[05:52:24] <systemfault> That's why the usual pattern is to use await Promise.all(someArray.map(async(x) => ....))
[05:52:35] <KevinX> well yeah you'd have to save the promise first, so I guess map would be better
[05:52:44] <KevinX> Yeah map it is
[05:52:53] <onosendi> chazy: https://gist.github.com/onosendi/9e0fbc296fc2b3defc486ef19233fb13 - everything in the promise chain gets executed one after another. 'four' doesn't wait for 'two' and 'three'.
[05:53:57] <KevinX> I was thinking of for await of
[05:54:17] <systemfault> Ah, then it's file, just a bit slow since everything is serialized
[05:54:20] <systemfault> *fine
[05:55:14] <Rockwood> oops
[05:55:21] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 250 seconds)
[05:55:47] <Rockwood> i am still finding the best way for compare time
[05:56:04] <KevinX> arent we all?
[05:56:05] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[05:56:31] <KevinX> did you try date-fns?
[05:56:46] <chazy> onosendi, thanks, i was doing something wrong but the example helps a lot
[05:57:04] <Rockwood> KevinX, i am trying to make logic from em
[05:57:12] <Rockwood> but still failed
[05:57:41] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[05:57:48] <Rockwood> on every 5 mints i wanna run a task
[05:57:53] <KevinX> i just logged on (and might not be on long), what's em?
[05:58:15] <Rockwood> [07:33:58] <Rockwood> i wanna schedule a task on every 5 mints something like this--> (start, Pause, Resume)
[05:58:24] <Rockwood> i am thinking like this
[05:58:26] <onosendi> chazy: I personally prefer async/await to promise chaining. It's cleaner, and you don't end up with a bunch of nested 'then's. https://gist.github.com/onosendi/232b439259436cf1ee8b25edbb3ea78c
[05:59:32] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[05:59:34] <KevinX> rockwood how reliable does it need to be? Just use an interval? Or you can also check every second and see whether a stored date is over 5 minutes ago
[06:00:18] <Rockwood> my concern is if i am going to chk second
[06:00:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:00:38] <Rockwood> is also chking date and mint
[06:00:39] <Rockwood> ?
[06:01:25] <KevinX> yeah you'd have to compare it
[06:01:56] *** Joins: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au)
[06:03:29] <theskillwithin> I just realized that I did it wrong https://jsfiddle.net/theskillwithin/uz1xk8ea/ ya would have to store what tick its on for a real pause
[06:03:45] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[06:03:56] *** Joins: trevors (~trevors@user/trevors)
[06:04:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:04:44] <Rockwood> theskillwithin, yeah similar
[06:04:55] <Rockwood> but a thing i wanna add in
[06:05:16] *** Quits: bobdobbs (~user@122.56.181.122) (Ping timeout: 256 seconds)
[06:05:17] *** Quits: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[06:05:28] <Rockwood> it will be auto run after specified time
[06:05:39] <Rockwood> instead of clicking
[06:06:17] *** Quits: Stinger__ (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[06:08:27] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[06:10:21] *** Joins: eXtr3m0_ (~eXtr3m0@p54861c9e.dip0.t-ipconnect.de)
[06:11:11] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 245 seconds)
[06:11:40] <theskillwithin> Rockwood https://jsfiddle.net/theskillwithin/nbwcd194/
[06:12:21] <theskillwithin> if its backend, just use a node cron prob
[06:13:00] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[06:13:23] <onosendi> theskillwithin: How did you come up with that from "I want to run a task every 5 minutes" ?
[06:13:52] <theskillwithin> I was focusing more on the start, pause, resume part of the question
[06:14:07] <onosendi> Ah, I must have missed something.
[06:14:45] <theskillwithin> idk, i probably should have asked him why he wants to do it, because it probably depends
[06:17:49] <Rockwood> gr8
[06:17:56] <Rockwood> its well managed
[06:18:20] <Rockwood> just i have to implement
[06:18:42] <Rockwood> so i need useState + useEffect for this
[06:19:06] *** Joins: src (~src@user/src)
[06:22:49] *** Joins: scott1 (~scott@101.100.131.161)
[06:22:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:25:43] <Rockwood> theskillwithin, what is the purpose of tickRate?
[06:27:54] <theskillwithin> no purpose, it should always be 1
[06:28:13] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:34:26] <Tabmow> So if I had https://dpaste.org/Gq2T#L - how would I loop through that whilst still being able to use async/await?
[06:35:30] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[06:36:33] <relipse> anyone good at math and relative positioning?
[06:36:50] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[06:38:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:40:09] <theskillwithin> protip you can use inset property instead of setting top right bottom left individually
[06:40:52] <theskillwithin> im bad at math, but relative positioning is pretty straightforward
[06:41:00] <theskillwithin> !ask @ relipse
[06:41:01] <jellobot> relipse, Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html
[06:41:32] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[06:41:48] <relipse> how do I drag an image around a div and place it anywhere in the div wtih pos: relative
[06:41:56] <relipse> it must be inside the div
[06:42:17] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:42:22] <relipse> crud, how do I just click inside a div and place an element where I clicked
[06:42:32] <relipse> with position: relative
[06:43:35] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Client Quit)
[06:45:07] <theskillwithin> unrelated but neato https://codepen.io/theskillwithin/pen/yLVxgdK
[06:46:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:46:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:46:26] *** Joins: wroathe (~wroathe@user/wroathe)
[06:46:34] <theskillwithin> relipse https://www.w3schools.com/howto/howto_js_draggable.asp
[06:50:22] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:50:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:52:15] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:52:50] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[06:54:19] <theskillwithin> https://codepen.io/chriscoyier/pen/Bjamqg
[06:55:02] *** Quits: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[06:55:06] <theskillwithin> ugh this one bothers me https://codepen.io/chriscoyier/pen/xxwVrGW
[06:59:15] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:00:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:04:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:10:11] <onosendi> theskillwithin: hmm...
[07:10:16] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[07:10:29] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:11:50] <relipse> thanks
[07:13:18] *** Joins: optimant (~asavage@user/optimant)
[07:13:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:14:58] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[07:15:32] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[07:15:51] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:16:20] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:22:17] *** Quits: MassDebates_ (~MassDebat@2600:1700:1184:4510:bd90:cb25:ef9:96da) (Ping timeout: 240 seconds)
[07:23:51] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:29:35] *** Joins: crashrep (~crashrep@user/crashrep)
[07:29:54] <Rockwood> theskillwithin, https://dpaste.com/6GCAEK5TN is this correct?
[07:29:55] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[07:30:07] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:32:58] <theskillwithin> hmm im not sure,  the first thing that stands out to me is your not doing a clearTimeout in the useEffects return
[07:33:41] <theskillwithin> so that react cancels the timer in cleanup before unmounting the component
[07:38:22] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[07:44:00] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[07:44:08] <onosendi> Rockwood: for things like `timeInterval`, you don't need to use `useState`. If you just need a variable to survive a re-render use `const timeInterval = useRef(0)`. Set it via `timeInterval.current = 'foo'`.
[07:44:47] <pragma-> :q
[07:45:58] *** Quits: voltage_ (~voltage@user/voltage) (Quit: Leaving)
[07:46:08] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[07:46:42] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 256 seconds)
[07:47:29] <alystair> I'm curious how DOM '.closest' internals work now that I know that we don't have a native method of discovering parent  objects
[07:47:37] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:11ed:a7c3:5966:293c)
[07:48:34] <theskillwithin> alystair did you take a look at https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
[07:49:30] <alystair> well that explains what it does, not how it works - I guess the answer then comes "look at the spec" :D
[07:50:01] <systemfault> Well... what do you believe it would do beside using .parentNode and .matches?
[07:50:27] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[07:50:28] <alystair> it's turtles all the way down! Now I need to look up the spec behind parentNode ;D
[07:50:37] <onosendi> alystair: there's a Polyfill example at the bottom.
[07:50:40] <theskillwithin> it does show some polyfill examples if that helps
[07:50:47] <theskillwithin> onosendi =]
[07:51:04] <onosendi> :P
[07:52:29] <systemfault> Heh... I had not even looked at the polyfill
[07:54:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:11ed:a7c3:5966:293c) (Quit: Textual IRC Client: www.textualapp.com)
[07:54:54] *** Quits: src (~src@user/src) (Quit: Leaving)
[07:56:43] <Rockwood> still not well code
[07:56:49] <Rockwood> i have leave for today
[07:57:02] <Rockwood> have to
[07:57:10] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[07:57:13] <theskillwithin> should make a codesandbox
[07:57:34] <Rockwood> okay
[07:57:45] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-5c1d-a0eb-1a0b-4e78.res6.spectrum.com) (Quit: Client closed)
[07:58:23] <theskillwithin> i mean, when you get back to it later of course
[07:58:25] *** Joins: ic3blx_ (~ic3blx___@87.116.177.49)
[07:58:25] *** Quits: ic3blx_ (~ic3blx___@87.116.177.49) (Changing host)
[07:58:25] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[08:00:03] <Rockwood> sure
[08:01:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:01:39] <Rockwood>             const timeInterval = currentTime.getUTCSeconds() + 20;
[08:02:56] *** Quits: dimino_ (~dimino@71-129-181-69.lightspeed.fyvlar.sbcglobal.net) (Quit: Leaving...)
[08:03:21] <Rockwood> now this concern as onosendi pointed
[08:04:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:07:39] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:12:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:12:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:12:08] *** Joins: wroathe (~wroathe@user/wroathe)
[08:14:06] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[08:15:55] <MootPoot> How common is it for companies to make you do a "skill test project" to get hired
[08:16:00] <MootPoot> its kind of annoying
[08:16:09] <MootPoot> I wish they just sorted it though in the interview
[08:18:36] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:18:46] *** Parts: scott1 (~scott@101.100.131.161) ()
[08:18:50] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 260 seconds)
[08:25:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:27:52] *** Joins: matsaman (~matsaman@user/matsaman)
[08:27:53] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[08:28:08] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Remote host closed the connection)
[08:28:22] <systemfault> It's common... but it's usually something that can be done quickly
[08:32:39] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:33:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:33:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:33:48] *** Joins: wroathe (~wroathe@user/wroathe)
[08:34:10] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-180a-a946-6b5c-63ad.res6.spectrum.com)
[08:36:36] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[08:37:25] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[08:37:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:41:47] <MootPoot> bah
[08:42:23] <KevinX> Some are better than others
[08:42:35] <MootPoot> tiresome
[08:42:43] <MootPoot> I like doing projects, not these pointless tests
[08:43:06] <MootPoot> maybe they'll stop doing it if I start comitting more
[08:44:22] <systemfault> Well, if you have code on your github, that will certainly help
[08:44:41] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[08:45:09] <senoraraton> Why does this fill to black?  https://raw.githubusercontent.com/SenorGato/procmap/main/src/main.ts  It should be filling with a number between -10-10 for the red value
[08:45:31] *** Joins: nomic (~nomic@185.192.69.3)
[08:49:36] *** Quits: optimant (~asavage@user/optimant) (Quit: C-c)
[08:50:01] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:51:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[08:52:41] <pavonia> senoraraton: fillRect takes width/height as 3rd/4th parameter
[08:53:50] <pavonia> which is probably not the problem, though
[08:54:27] <senoraraton> Some of my numbers were negative, but I shifted them to positive, and then multiplied by ten to see range... Still black
[08:54:45] <senoraraton> I think its a syntax error, because the color defaults to black.
[08:54:59] <senoraraton> I don't understand why I'm using template literals here, and how to properly extract the data that I want
[08:56:43] <senoraraton> `rgb(${height},120,120)`; outputs it in blue as if the first element is zero.  `rgb(${height}*10,120,120)`; goes to black.
[08:56:56] <senoraraton> But I can't get any sort of gradient its all monocolor
[08:57:13] <systemfault> Are you sure that "height" is always an integer?
[08:57:40] <systemfault> (If not, maybe you need to Math.floor() it)
[08:57:46] <senoraraton> Yes, height starts as a number -1 < height < 1, and then gets modified, heavily.
[08:58:20] <senoraraton> I console.log the height, and i get a list of positive integers between 3 - 14
[08:59:06] <senoraraton> Also if you look, height DOES get Math.floor on its decleration.
[08:59:51] <systemfault> I quickly looked when you pasted the link... but since there's no "live example", that makes it difficult for us to play with it.
[08:59:56] <systemfault> (I also happen to suck at canvas)
[09:00:17] <senoraraton> Why is rgb a template literal?
[09:00:29] <systemfault> What else?
[09:00:38] <senoraraton> I dunno a tuple
[09:01:23] <systemfault> I guess they wanted to normalize with CSS colors... but that's not great indeed
[09:01:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:01:55] <senoraraton> I have to make it a template literal because it contains a variable correct?  And it reduces to a string, so my syntax is "correct", there is somethign else wrong here.
[09:02:09] *** Joins: stenno (~stenno@user/stenno)
[09:02:37] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:02:59] <senoraraton> Wait, it worked that time.  I think the value was too small to show a color difference, I added *10 IN the {} of the template literal and it worked.
[09:03:03] <systemfault> Yeah, without the template literal, you would need to do string concatenation
[09:03:04] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[09:04:12] <systemfault> Oh, nice!
[09:04:46] <systemfault> `rgb(${height},120,120)` is more readable to me than 'rgb(' +  height + ',120,120)
[09:04:51] <systemfault> '
[09:05:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:07:34] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[09:14:09] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:14:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:19:03] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[09:20:53] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[09:22:40] *** Joins: jazzy (~jaziz@user/jaziz)
[09:23:53] *** Quits: SchmoSeph (sid530771@id-530771.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:25:07] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:28:10] *** Joins: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au)
[09:31:19] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 256 seconds)
[09:33:37] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-180a-a946-6b5c-63ad.res6.spectrum.com) (Ping timeout: 240 seconds)
[09:33:43] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:35:17] *** Quits: SOMBRIO (~mtm49@177.137.119.134) (Ping timeout: 256 seconds)
[09:40:46] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[09:58:08] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:02:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:02:39] *** Quits: chazy (~chazy@2a0c:5a84:d202:2b00:2441:19f0:3777:5425) (Quit: Leaving)
[10:05:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:07:07] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[10:07:54] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[10:08:11] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:08:39] *** Joins: jazzy (~jaziz@user/jaziz)
[10:09:30] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[10:12:41] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[10:13:14] *** Joins: fef (~thedawn@user/thedawn)
[10:14:58] *** Joins: stagas (~stagas@2a02:587:c41d:f5c1:eed4:e52d:fac0:a0e7)
[10:21:18] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[10:22:03] *** Joins: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[10:23:27] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[10:27:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:28:16] *** Joins: falafel (~falafel@2603-8000-8403-e980-a564-89bf-cc0b-6efb.res6.spectrum.com)
[10:28:16] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[10:30:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:32:16] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:dde2:c55f:f2c9:43fc)
[10:32:39] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[10:32:56] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[10:33:41] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[10:37:26] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 245 seconds)
[10:39:09] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:43:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:44:23] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de)
[10:45:09] *** Joins: jazzy3 (~jaziz@user/jaziz)
[10:46:20] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[10:47:41] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[10:48:17] *** Parts: Stinger_ (~Stinger@14-203-0-22.tpgi.com.au) ()
[10:52:09] *** Joins: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[10:56:34] *** Quits: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[10:57:45] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:59:34] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:00:46] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[11:01:35] *** Joins: vysn (~vysn@user/vysn)
[11:02:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[11:02:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:06:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:09:25] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[11:12:38] *** Joins: voltage_ (voltage@user/voltage)
[11:16:04] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:16:44] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4bc:bc38:6fcd:3dae)
[11:18:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:21:25] *** Joins: jazzy (~jaziz@user/jaziz)
[11:34:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:35:25] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[11:46:04] *** Joins: shayr_ (shayr@ip62.ip-91-134-189.eu)
[11:46:29] *** o is now known as niko
[11:47:32] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-032.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[11:49:01] *** Quits: shayr (shayr@ip62.ip-91-134-189.eu) (Ping timeout: 240 seconds)
[11:50:38] *** Quits: stagas (~stagas@2a02:587:c41d:f5c1:eed4:e52d:fac0:a0e7) (Remote host closed the connection)
[11:50:56] *** Quits: ezioadf (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[11:51:01] *** Joins: stagas (~stagas@2a02:587:c41d:f5c1:eed4:e52d:fac0:a0e7)
[11:52:14] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[11:54:31] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 245 seconds)
[11:55:46] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:dde2:c55f:f2c9:43fc) (Ping timeout: 245 seconds)
[11:56:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[12:00:02] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:02:21] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:cf4:c72f:b99:2290)
[12:02:58] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[12:03:16] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[12:03:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:04:37] *** Quits: Geenirvana (root@2a01:7e00::f03c:93ff:fe69:40e7) (Ping timeout: 240 seconds)
[12:04:39] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[12:04:44] *** Joins: BSaboia_ (~bsaboia@95.179.154.99)
[12:04:50] *** Quits: redrambles (sid319583@id-319583.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:04:51] *** Joins: thomas25- (thomas25@brought.to.you.by.bnc4free.com)
[12:05:01] *** Joins: terrorjack5 (~terrorjac@2a01:4f8:1c1e:509a::1)
[12:05:27] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Ping timeout: 268 seconds)
[12:05:27] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: Covrus (~Covrus@user/covrus) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: fuzzfox (~gizzard@saturn.whatbox.ca) (Ping timeout: 268 seconds)
[12:05:51] *** Joins: Geenirvana (~root@151-236-220-136.ip.linodeusercontent.com)
[12:06:04] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4593:8555:d7a7:3d61) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: thomas25 (thomas25@brought.to.you.by.bnc4free.com) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: naeluh___ (sid95128@id-95128.lymington.irccloud.com) (Ping timeout: 268 seconds)
[12:06:04] *** terrorjack5 is now known as terrorjack
[12:06:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:07:00] *** Joins: Covrus (~Covrus@user/covrus)
[12:07:38] *** Joins: redrambles (sid319583@id-319583.tinside.irccloud.com)
[12:07:55] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[12:07:56] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[12:08:34] *** Joins: naeluh___ (sid95128@id-95128.lymington.irccloud.com)
[12:09:16] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[12:10:33] *** Joins: mexen (uid495612@user/mexen)
[12:11:25] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:14:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[12:19:16] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[12:25:12] <gde33> header = JSON.parse('['  +  scv.split('"\n',1)[0]  +  '"]'  );
[12:25:54] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:26:05] <gde33> unless you want your scv header names to start with a line break??
[12:28:16] *** Joins: jim87 (~quassel@93.55.249.30)
[12:30:22] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[12:35:09] <gde33> it seems to me that SCV.parse should just be part of js? Have it return json?
[12:35:25] <gde33> SCV.stringify
[12:36:56] <gde33> wait, 2d array would accomodate weird header names better
[12:37:19] *** Joins: han-solo (~hanish@user/han-solo)
[12:38:04] <gde33> something like myTableObj.json would also be cool
[12:38:55] <gde33> foo.json = JSON.parse(bar)
[12:41:37] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[12:46:49] *** Quits: eXtr3m0_ (~eXtr3m0@p54861c9e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:50:20] *** Quits: falafel (~falafel@2603-8000-8403-e980-a564-89bf-cc0b-6efb.res6.spectrum.com) (Read error: Connection reset by peer)
[12:51:03] <stenno> whats scv? do you mean csv?
[12:53:43] <theskillwithin> gde33 wat is scv?
[12:54:39] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[13:01:49] <gde33> comma sepparated values, not sure why I wrote it like that lol mind occupied by other things :P
[13:03:00] <gde33> haha its like that all over the code too :P
[13:03:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:04:01] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:05:04] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Quit: x)
[13:05:32] <gde33> I also wish you could do var things on arrays and have htem applied to each string in them.
[13:05:51] <gde33> something like arr.split() or arr += 1
[13:06:08] <gde33> the default behavior is kinda bullshit anyway
[13:06:11] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (Ping timeout: 245 seconds)
[13:06:36] <gde33> n> ["foo","bar"] + "baz"
[13:06:37] <jellobot> (okay) 'foo,barbaz'
[13:07:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:07:14] *** Quits: Slade (uid128877@user/slade) (Ping timeout: 260 seconds)
[13:07:17] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[13:07:26] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[13:08:10] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 260 seconds)
[13:08:23] <Maxdamantus> n> ["foo","bar"] + ["baz","qux"]
[13:08:24] <jellobot> (okay) 'foo,barbaz,qux'
[13:08:52] <hamess> i have a piece of code where; A throws an exception. B calls A, does not handle exception. C calls B in try/catch. why is the exception thrown by A not handled by C?
[13:08:59] *** Joins: thojanssens (~thojansse@49.230.196.239)
[13:09:04] <Maxdamantus> n> ["foo","bar"].flatMap(a => [...a, "baz","qux"]);
[13:09:05] <jellobot> (okay) [ 'f', 'o', 'o', 'baz', 'qux', 'b', 'a', 'r', 'baz', 'qux' ]
[13:09:09] <Maxdamantus> eugh
[13:09:10] *** Joins: celphi (sid97751@user/celphi)
[13:09:31] *** Quits: llinguini (sid257922@id-257922.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[13:09:31] <leduyquang753> n>["lorem ipsum", "dolor", "sit amet"].reduce((a, e) => { a.push(...e.split(" ")); return a; }, [])
[13:09:32] <jellobot> (okay) [ 'lorem', 'ipsum', 'dolor', 'sit', 'amet' ]
[13:09:33] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:09:36] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:09:54] <Maxdamantus> n> ["foo","bar"].flatMap(a => ["baz","qux"].flatMap(b => a + b)));
[13:09:54] <jellobot> (fail) SyntaxError: Unexpected token ')'
[13:09:57] <Maxdamantus> n> ["foo","bar"].flatMap(a => ["baz","qux"].flatMap(b => a + b));
[13:09:57] <jellobot> (okay) [ 'foobaz', 'fooqux', 'barbaz', 'barqux' ]
[13:09:59] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[13:10:10] <gde33> default behavior is just not that useful
[13:10:13] *** Joins: Slade (uid128877@user/slade)
[13:10:27] <Maxdamantus> So don't use it.
[13:10:29] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[13:10:41] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 252 seconds)
[13:10:55] *** Joins: llinguini (sid257922@id-257922.hampstead.irccloud.com)
[13:11:04] <gde33> imagine you could do  foo.split('\n').split(',')
[13:11:11] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[13:11:23] <Maxdamantus> That would be ambiguous.
[13:11:26] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5) (Ping timeout: 260 seconds)
[13:11:46] <gde33> not if all string methods would work on arrays
[13:11:52] *** Joins: ljharb (sid43720@user/ljharb)
[13:11:52] *** ChanServ sets mode: +o ljharb
[13:12:09] *** Quits: victor_ (uid208353@user/victor) (Ping timeout: 250 seconds)
[13:12:10] <Maxdamantus> They don't.
[13:12:15] <gde33> heh
[13:12:21] <Maxdamantus> n> [Array.prototype.contains, String.prototype.contains];
[13:12:21] <jellobot> (okay) [ undefined, undefined ]
[13:12:26] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[13:12:35] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 250 seconds)
[13:12:39] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:12:39] <Maxdamantus> eh, can't remember the stupid name JS has for that method.
[13:12:45] <Maxdamantus> n> [Array.prototype.includes, String.prototype.includes];
[13:12:45] <jellobot> (okay) [ [Function: includes], [Function: includes] ]
[13:12:50] <Maxdamantus> oops, exists on both.
[13:13:00] <gde33> that is fine, useful
[13:13:02] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:846c:81c5:480a:6ed5)
[13:13:15] <Maxdamantus> But what does `a.includes("x")` do?
[13:13:26] *** Quits: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[13:13:30] <gde33> why cant we do?   a = "foo";  a[1] = "b"
[13:13:32] <Maxdamantus> Is it the array version of `includes` or the string version?
[13:13:39] <gde33> array ofc
[13:13:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[13:13:50] *** Joins: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:14:01] *** Joins: victor_ (uid208353@id-208353.tinside.irccloud.com)
[13:14:02] <Maxdamantus> But `a.split(",")` does the string version for each element?
[13:14:06] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[13:14:12] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[13:14:15] <gde33> I wish it did
[13:14:45] *** Quits: cythrawll (sid384410@id-384410.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[13:14:53] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[13:15:14] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[13:15:29] <gde33> n> "foo,bar,baz\nbanana,kiwi,orange".split('\n').split(',')
[13:15:30] <jellobot> (fail) TypeError: "foo,bar,baz banana,kiwi,orange".split(...).split is not a function
[13:15:30] <silly> "ab,cd\nef".split(/,|\n/)
[13:15:34] <silly> n> "ab,cd\nef".split(/,|\n/)
[13:15:35] <jellobot> (okay) [ 'ab', 'cd', 'ef' ]
[13:15:46] <Maxdamantus> Basically, you're expecting `["foo,bar", "baz"].split(",")` to be `["foo,bar".split(","), "baz".split(",")]`, aka `[["foo", "bar"], ["baz"]]` .. but you're expecting `["xyz", "x"].includes("x")` to be `true`?
[13:15:49] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[13:16:06] *** Quits: phenom (~primus@user/phenom) (Ping timeout: 260 seconds)
[13:16:20] <gde33> sure, its an array method?
[13:16:25] *** Joins: phenom (~primus@user/phenom)
[13:16:28] <Maxdamantus> imo if you want this sort of functionality, the better way of supporting it would be using something like `do` notation.
[13:16:30] *** Joins: Joel (~jjshoe@user/joel)
[13:16:57] <gde33> yeah, its a raw idea, there are probably others to consider in the context
[13:16:57] *** Joins: cythrawll (sid384410@id-384410.ilkley.irccloud.com)
[13:17:14] <gde33> n> "foo,bar,baz\nbanana,kiwi,orange".split('\n')+''.split(',')
[13:17:15] <jellobot> (okay) 'foo,bar,baz,banana,kiwi,orange'
[13:17:18] *** Quits: abraham (~abraham@143.244.185.86) (Read error: Connection reset by peer)
[13:17:26] *** Joins: abraham1 (~abraham@143.244.185.86)
[13:17:28] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[13:17:34] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:89a7:25cc:df2a:3b33)
[13:18:10] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:18:12] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[13:18:16] <silly> n> "foo,bar,baz\nbanana,kiwi,orange".split('\n').map(x=>x.split(','))
[13:18:17] <jellobot> (okay) [ [ 'foo', 'bar', 'baz' ], [ 'banana', 'kiwi', 'orange' ] ]
[13:18:32] <gde33> in stead we get pipes? lol While ellegant in other languages I wonder if it belongs in js
[13:18:53] <gde33> I just do   pipe(value, funct1, funct2, funct3)
[13:19:15] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[13:19:47] <gde33> but   funct4( funct3( funct2( funct1( value ))))  seems perfectly readable to me?
[13:20:14] <gde33> the language seems to have far bigger problems :P
[13:20:17] <silly> !compose
[13:20:17] <jellobot> silly, (...fns) => (x) => fns.reduceRight((v, f) => f(v), x)
[13:20:18] <Maxdamantus> do{ (yield ["foo,bar","bar"]).split(",") }
[13:20:28] <silly> you can have your pipe function
[13:20:35] <silly> just create it
[13:20:40] <gde33> right?
[13:20:43] <Maxdamantus> that would probably do what you want, under something like `do` notation (adapted to use `yield`, since that's what JS uses instead)
[13:20:46] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:5152:d22:91d7:e9f9) (Ping timeout: 245 seconds)
[13:21:59] <Maxdamantus> imo a sensible language extension could be to basically have repeatable generators.
[13:22:36] *** Quits: otisolsen70__ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[13:23:23] <Maxdamantus> in which case you would expect to be able to write `arrayGen(function*(){ return (yield ["foo,bar","baz"]).split(","); })`
[13:23:59] <Maxdamantus> (would probably need a different syntax to distinguish them from the existing non-repeatable generators)
[13:24:40] <gde33> I've never used a generator, barely get the point
[13:24:55] <Maxdamantus> Have you used async/await?
[13:25:04] <gde33> only when I have to
[13:25:07] <gde33> rarely
[13:25:37] <gde33> stuck on using timeouts :P
[13:25:44] <Maxdamantus> Well, if you can imagine how that's meant to be used, just imagine a generator version of async/await, which should have this equivalence:
[13:26:05] <Maxdamantus> const p = async function foo(){ return await bar() + await baz(); }();
[13:26:41] <Maxdamantus> const p = fromGen(function* foo(){ return yield bar() + yield baz(); }());
[13:27:09] <Maxdamantus> You can define that `fromGen` function that essentially gives you async/await functionality from generators.
[13:27:09] <gde33> I should just read up, thanks for trying tho
[13:28:35] <gde33> I didn't because I dislike the spikes in resource usage if enough things happen async
[13:29:04] <Maxdamantus> Existing generators are limited in that you can't make the generator continue back from an earlier state, so you can't repeat them with a different `yield` result.
[13:29:07] *** Joins: Naan (~Naan@user/naan)
[13:29:24] <gde33> right, I got that part
[13:30:39] <gde33> reminds me of how all the newfangled sexy array methods can only do the entire array
[13:31:39] <silly> there are a few packages on npm that can help you with csv too
[13:33:11] <gde33> certainly, I'll just write my own. My csv has the luxory of not having line breaks in the values
[13:33:59] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Quit: Leaving)
[13:34:08] <gde33> imho packages are cool if there is weird shit in it
[13:34:58] <silly> like more commas in quoted fields
[13:35:11] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:36:19] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:36:20] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 256 seconds)
[13:37:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[13:37:27] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[13:38:07] <OnkelTem> So for the second week I'm on vscode. Switching from WebStorm. Well... folks, are you happy with this extension hell?
[13:38:42] <OnkelTem> Do we have javascript-offtopic? Worth checking out..
[13:39:03] <OnkelTem> Ah, no. Sad
[13:39:23] <theskillwithin> why would we need javascript-offtopic?
[13:39:41] <OnkelTem> I tried to get git commit authors in the left gutter but VSCode cannot do this. I tried installing several extensions - none can do this simple task in a sensible way
[13:39:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[13:40:07] <OnkelTem> theskillwithin: well, to not get accused for an offtopic :)
[13:40:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:40:16] <gde33> theskillwithin: those channels are usually to talk about everything else
[13:40:46] <theskillwithin> off topic is allowed here tho...
[13:40:49] <silly> OnkelTem, ctrl-shift p, gitlens -> toggle gitlens
[13:41:10] <silly> i'm not sure if vscode shift with gitlens by default
[13:41:18] <silly> *ships
[13:41:22] <OnkelTem> silly: yeah and half of my screen gets consumed by commit messages and yet - NO AUTHORS
[13:41:31] <gde33> theskillwithin: when there is a js question getting proccessed I consider it inapropriate
[13:42:05] <theskillwithin> off topic is allowed as long as your not interfering with a js question.  this is a support channel first of course
[13:42:05] <OnkelTem> Someone from VSCode team should really go and see how thing are done in a proper way: in WebStorm
[13:43:56] <OnkelTem> I just needed to get an indent for files in the File Explorer. And for that I had to install vscode-icons extensions. Another overbloaded thing which makes some shit that I don't need but... also it moves files. I have a feeling that after I get what I need in "fast" vscode by installing dozens of extensions, my vscode is gonna be as slow as WebStorm haha
[13:44:48] <gde33> just use a text editor :P
[13:44:52] <OnkelTem> yeah :)
[13:45:01] <OnkelTem> I start thinking about moving back to Emacs
[13:45:08] <gde33> nano
[13:45:10] <gde33> lol
[13:45:34] <gde33> I wrote serious shit in notepad :P
[13:46:06] <gde33> If the ecosystem had decent textarea features I would imediately write my own editor
[13:46:15] <gde33> but its trash so nvm
[13:46:59] <gde33> back in the 80's one would write a dev environment specifically for an application. A bit silly but it did shine from time to time.
[13:49:37] <OnkelTem> I really like the way VSCode is configured. And the degree of its configurability
[13:49:55] <silly> OnkelTem, https://github.com/gitkraken/vscode-gitlens#gutter-blame-
[13:50:00] <OnkelTem> My favorite setting is: "workbench.tree.indent": 24,
[13:50:01] <silly> weird, i can't enable it
[13:50:32] <OnkelTem> silly: annotations on hover just work by default for me.
[13:51:08] <silly> i wonder where my blame gutter went
[13:51:11] <OnkelTem> I just want to see the names (of that guy who ruined everything!) in the left gutter
[13:51:31] <theskillwithin> sublime text used to be my shit,  but vscode sorta took over the world,  so I use vscode now
[13:52:00] <OnkelTem> I wonder do Arabic people have the gutter to the right?
[13:52:09] <gde33> theskillwithin: I hear good things about both (never used either) what would be the sublime thing missing from vs?
[13:52:20] <OnkelTem> Or even.. do they have a language which is writte RTL?
[13:52:31] <OnkelTem> programming language
[13:52:42] <OnkelTem> Like a coffee script, but in Arabic. Cool.
[13:56:00] *** Joins: xsperry (~xs@user/xsperry)
[13:56:04] <silly> ah, there it is...
[13:56:26] <silly> commit message + date, author on hover
[13:56:45] <OnkelTem> yes
[13:56:52] <silly> gitlens has tons of options
[13:57:06] <OnkelTem> but not authors in the gutter LOL
[13:59:01] <OnkelTem> But maybe there is a way though. Maybe they use some sort of templating. I would use if I were them at least
[13:59:36] <gde33> a flow chart based language in a 3d engine
[13:59:53] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:00:18] <OnkelTem> gde33: simply put vscode is an IDE, sublime is more - an editor
[14:00:33] <gde33> OnkelTem: ah
[14:01:09] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:01:32] <silly> OnkelTem, you can enable it in gitlens settings
[14:01:51] <silly> add ${author} to gilens>blame>format
[14:02:00] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[14:03:53] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[14:04:16] <OnkelTem> silly: (unattended) do you know how to enlarge the left column in the settings?
[14:04:17] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[14:04:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:05:07] <silly> is the font too small?
[14:05:13] <OnkelTem> https://imgur.com/5Y6teRD.png
[14:05:14] <silly> use ctrl+
[14:05:33] <silly> oic
[14:05:48] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[14:06:03] <OnkelTem> I was trying to reach that spot where I can configure what you're referencing to
[14:06:16] <OnkelTem> it's in the settings, right?
[14:06:32] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[14:06:34] <silly> the gutter blame format? yes
[14:06:55] <silly> lower third, gutter bla...(10)
[14:07:03] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[14:07:23] <OnkelTem> Oh cool!
[14:07:48] <silly> resizable settings panes would be great
[14:07:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:08:03] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 250 seconds)
[14:10:19] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.30)
[14:10:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[14:10:32] <silly> also, there's #vscode
[14:21:13] *** Joins: paule32 (~paul@nat-91-137-26-21.net.encoline.de)
[14:21:13] *** Quits: paule32 (~paul@nat-91-137-26-21.net.encoline.de) (Changing host)
[14:21:13] *** Joins: paule32 (~paul@user/paule32)
[14:24:57] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[14:25:04] *** Joins: DeepDream (~neutrino@user/neutrino)
[14:27:27] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[14:31:29] <OnkelTem> silly: https://stackoverflow.com/questions/70924868/settings-left-column-any-chance-to-make-it-wider
[14:31:47] <OnkelTem> silly: just created. For us, comrade.
[14:32:01] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:07] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[14:32:34] *** Joins: fef (~thedawn@user/thedawn)
[14:32:52] *** Quits: fef (~thedawn@user/thedawn) (Client Quit)
[14:32:55] <OnkelTem> Should I reduce the degree of sarcazm or leave it as it?
[14:33:02] <OnkelTem> as is*
[14:33:52] <OnkelTem> actually that's not sarcasm, it's just an innocent irony
[14:36:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[14:37:45] <OnkelTem> silly: with just ${author} template it looks like this here: https://i.imgur.com/XdZ3ifo.png
[14:37:56] <OnkelTem> it jumps
[14:38:43] *** Quits: andrew9184_ (sid416777@id-416777.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[14:39:36] <OnkelTem> ${author | 30} should do the trick
[14:40:03] <OnkelTem> ah, no. Disaster :)
[14:43:39] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[14:45:38] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[14:47:18] <OnkelTem> silly: https://github.com/gitkraken/vscode-gitlens/issues/1791
[14:51:42] <OnkelTem> This is my regular work day now. Before I spent a lot of time on submitting WebStorm-related reports to JetBrains support, now I submit bugs and questions into VSCode community. But I personally prefer the latter. Seems more efficient when a community involved
[14:52:30] <OnkelTem> ... and it's not just about you.
[14:53:26] <OnkelTem> fewer regrets on time wasted ;-)
[15:02:49] *** Joins: Wizzzzzy (~wizzzzzy@85.255.234.159)
[15:04:03] *** Joins: D4mned (~D1mned@212.101.253.145)
[15:04:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:08:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:10:49] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:12:23] *** Joins: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl)
[15:12:38] *** Quits: CoolerX (~CoolerX@user/coolerx) (Client Quit)
[15:14:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:18:04] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:20:48] *** Quits: jazzy (~jaziz@user/jaziz) (Remote host closed the connection)
[15:22:16] *** Joins: jazzy2 (~jaziz@user/jaziz)
[15:22:52] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 256 seconds)
[15:23:59] *** jazzy2 is now known as jazzy
[15:24:38] *** Quits: thojanssens (~thojansse@49.230.196.239) (Ping timeout: 268 seconds)
[15:27:00] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com)
[15:27:24] <fweht> what is the most elegant way to destructure an object in a fail safe way such that as many variables as possible are read out?  e.g. i want to do something like `{one, two: {three, four: [five]}}=object` but if the object looks like `{one: 'foo', two: {three: 'bar'}}` it should assign `one` and `free` to `'foo'` and `'bar'`...
[15:29:11] *** Quits: Wizzzzzy (~wizzzzzy@85.255.234.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:32:07] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[15:32:35] *** Joins: Wizzzzzy (~wizzzzzy@85.255.234.159)
[15:33:00] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:35:06] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[15:36:07] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:39:00] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:cf4:c72f:b99:2290) (Quit: Leaving)
[15:40:46] *** Joins: pmercado (~pmercado@186.11.84.232)
[15:41:54] *** Quits: DeepDream (~neutrino@user/neutrino) ()
[15:42:35] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.3)
[15:45:44] *** Quits: pluri_ (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[15:47:05] *** Joins: fef (~thedawn@user/thedawn)
[15:47:27] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 268 seconds)
[15:49:07] *** Joins: han-solo (~hanish@157.44.200.34)
[15:50:49] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[15:52:04] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[15:53:12] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[15:54:14] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:54:39] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Read error: Connection reset by peer)
[15:55:10] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[15:55:10] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[15:57:19] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[15:59:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:59:46] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[16:02:00] *** Joins: pluri (~pluri@user/pluri)
[16:04:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[16:05:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:08:29] *** Joins: pulse (~pulse@user/pulse)
[16:09:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[16:13:18] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[16:15:12] <silly> OnkelTem, the thing from stackoverflow, move it to vscode issues ;)
[16:15:44] <OnkelTem> silly: that's gonna be the next step
[16:16:25] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[16:17:17] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com) (Ping timeout: 240 seconds)
[16:19:57] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:20:33] *** Joins: andersaloof (~anders@251.92-221-169.customer.lyse.net)
[16:20:45] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 268 seconds)
[16:24:59] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:26:47] *** Joins: revolve (~u0_a227@82-132-237-215.dab.02.net)
[16:27:03] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[16:27:32] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: No Ping reply in 180 seconds.)
[16:28:57] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[16:29:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:31:24] *** Joins: Centaur (~sys@user/probe)
[16:41:00] *** Joins: MassDebates_ (~MassDebat@2600:1700:1184:4510:98c4:6395:b7f6:11df)
[16:43:23] *** Joins: thojanssens (~thojansse@49.230.196.239)
[16:44:11] *** Quits: abraham1 (~abraham@143.244.185.86) (Ping timeout: 268 seconds)
[16:45:05] *** Quits: revolve (~u0_a227@82-132-237-215.dab.02.net) (Read error: Connection reset by peer)
[16:46:55] *** Joins: revolve (~u0_a227@82-132-238-143.dab.02.net)
[16:47:37] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[16:47:56] *** Joins: thojanssens_ (~thojansse@49.230.196.239)
[16:48:46] *** Joins: hseg (~hseg@195.192.229.23)
[16:50:29] *** Quits: thojanssens (~thojansse@49.230.196.239) (Ping timeout: 256 seconds)
[16:51:03] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[16:52:25] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[16:53:10] *** Joins: gvp013 (~Guest21@2405:201:e000:6008:7080:8537:71af:ef64)
[16:53:42] *** Quits: gvp013 (~Guest21@2405:201:e000:6008:7080:8537:71af:ef64) (Quit: Client closed)
[16:54:54] *** Joins: thojanssens (~thojansse@49.230.196.239)
[16:55:17] *** Quits: thojanssens_ (~thojansse@49.230.196.239) (Ping timeout: 268 seconds)
[16:55:46] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:56:31] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 268 seconds)
[16:57:01] *** Joins: gvp013 (~gvp013@2405:201:e000:6008:7080:8537:71af:ef64)
[16:57:47] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:01:17] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:05:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:07:36] *** Quits: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net) (Remote host closed the connection)
[17:08:54] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com)
[17:09:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:09:50] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[17:10:05] *** Quits: han-solo (~hanish@157.44.200.34) (Ping timeout: 268 seconds)
[17:14:00] *** Joins: trevors (~trevors@user/trevors)
[17:15:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:17:43] *** Quits: gvp013 (~gvp013@2405:201:e000:6008:7080:8537:71af:ef64) (Remote host closed the connection)
[17:19:14] *** Joins: vysn (~vysn@user/vysn)
[17:25:50] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:27:15] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:27:37] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:28:16] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[17:29:15] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:30:27] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[17:32:04] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[17:32:20] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:40:24] *** Quits: revolve (~u0_a227@82-132-238-143.dab.02.net) (Read error: Connection reset by peer)
[17:40:26] *** Parts: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at) ()
[17:40:51] *** Joins: siyb (~siyb@h081217185055.dyn.cm.kabsi.at)
[17:41:56] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[17:43:04] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[17:44:06] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 250 seconds)
[17:44:33] *** Joins: hseg (~hseg@195.192.229.23)
[17:47:56] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[17:48:19] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Ping timeout: 268 seconds)
[17:48:22] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[17:51:03] *** Joins: Ducki (~ducki@p200300f39f0da4009efaf8dee1fa3982.dip0.t-ipconnect.de)
[17:51:03] *** Quits: Ducki (~ducki@p200300f39f0da4009efaf8dee1fa3982.dip0.t-ipconnect.de) (Changing host)
[17:51:03] *** Joins: Ducki (~ducki@user/ducki)
[17:51:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[17:52:55] *** Joins: RLa (~RLa@82.131.24.208.cable.starman.ee)
[17:59:35] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:00:57] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:01:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[18:03:24] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:03:24] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:03:24] *** Joins: wroathe (~wroathe@user/wroathe)
[18:05:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:06:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:06:31] *** Parts: F8ER (~f8er@user/voxel) (WeeChat 2.8)
[18:09:51] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[18:10:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[18:12:46] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:30:21] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:31:55] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 256 seconds)
[18:34:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:35:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:38:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:41:32] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[18:41:44] *** Quits: thojanssens (~thojansse@49.230.196.239) (Quit: Leaving)
[18:42:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:43:15] *** Joins: han-solo (~hanish@user/han-solo)
[18:44:36] *** Quits: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[18:45:23] *** Joins: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl)
[18:46:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:46:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:46:35] *** Joins: wroathe (~wroathe@user/wroathe)
[18:46:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:47:49] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:48:24] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[18:48:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[18:49:20] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Client Quit)
[18:49:34] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[18:51:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:53:23] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:58:16] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[18:58:34] *** Joins: heatwave (~heatwave@2401:4900:1c63:20b3:ae2b:7e47:754f:baac)
[18:58:56] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[19:00:57] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com) (Ping timeout: 240 seconds)
[19:01:22] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:01:38] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[19:02:03] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[19:02:46] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com)
[19:04:10] <zitter> Good morning, I have an array of Codes and another array of Foo Objects with "code" property. Is there a concise way to filter Foo Objects with code in Codes array?
[19:05:45] <zitter> writing question here I think I've found a way to accomplish that task, using array.filter()
[19:05:58] *** Joins: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d)
[19:06:29] <silly> OnkelTem, did you say comrade? comrades would click thumbsup on this issue https://github.com/microsoft/vscode/issues/140971
[19:06:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:06:57] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[19:07:47] <silly> zitter, objects.filter(obj=>codes.includes(obj.code))
[19:08:39] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:09:14] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[19:10:07] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:10:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:10:49] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Remote host closed the connection)
[19:11:08] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[19:11:48] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:13:01] *** Joins: trevors (~trevors@user/trevors)
[19:14:25] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[19:14:27] *** Joins: mat001 (~mat001@213.143.69.121)
[19:15:33] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Ping timeout: 256 seconds)
[19:15:46] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 245 seconds)
[19:16:02] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[19:17:06] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:19:21] *** Quits: D4mned (~D1mned@212.101.253.145) (Read error: Connection reset by peer)
[19:19:31] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Ping timeout: 256 seconds)
[19:19:45] *** Joins: D4mned (~D1mned@212.101.253.145)
[19:20:05] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[19:24:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[19:27:07] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[19:27:42] *** Joins: mat001 (~mat001@72.28.108.216)
[19:29:17] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[19:31:03] <OnkelTem> silly: done, you're welcome!
[19:31:23] <silly> \o/ yay ty :*
[19:33:00] <OnkelTem> silly: honestly I didn't really get what it is about
[19:33:11] <OnkelTem> I think it's worth adding more clear example
[19:33:14] <OnkelTem> for those like me
[19:33:26] *** Joins: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d)
[19:33:32] <OnkelTem> If you explain, I could add an illustration too
[19:33:36] <OnkelTem> in the comments
[19:33:41] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[19:33:41] <silly> did you see the 3 crosses?
[19:33:44] <OnkelTem> yep
[19:33:52] <teut> https://dpaste.org/R6hK  https://www.worldpostallocations.com/Search-By-Location6b53.html?StateId=1
[19:34:10] <silly> have you ever tried vscode workspace folders?
[19:34:30] <teut> I am trying to scrape all data in that table and other tables but I thing the javascript runs faster than the page loads
[19:34:37] <OnkelTem> Ah, well. I don't know. How can I check? :)
[19:34:43] <teut> what can be done to scrape that?
[19:35:10] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[19:35:24] <silly> in the file explorer click on "add folder to workspace"
[19:35:44] <OnkelTem> silly: Ah, that I did, I recently did that
[19:35:57] <teut> think*
[19:36:16] <OnkelTem> teut: wait for it to load? Btw, you can listen to DOM events. There is an even when a node gets updated
[19:36:35] <OnkelTem> teut: hence, you can add you own listener on that node where table is updated
[19:36:42] <silly> now if you the explorer pane shows only files because it's too many of them, then you don't see which workspace folder they belong to
[19:36:51] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Client Quit)
[19:36:51] <jaawerth> teut: well, first thing to try would be instead of an IIFE, do `document.addEventListener('DOMContentLoaded', scrapAll)` - that will defer running it until at least until the initial page has loaded. It'll get more complicated if hte table itself is dynamically loaded after the page loads, though
[19:36:54] <teut> its html pages that are being fetched
[19:37:09] <jaawerth> if the latter occurs you might need to use a MutationObserver to attempt re-sraping after changes to the table
[19:37:13] <teut> not table being updated
[19:37:26] <OnkelTem> teut: and what jaawerth is saying (I thouht your're already doing it)
[19:37:54] <OnkelTem> teut: erm, and where/how do you run your script
[19:37:56] <OnkelTem> ?
[19:38:04] <teut> in the console
[19:38:16] <teut> its just a function afterall
[19:38:16] <jaawerth> also line 8 is an error
[19:38:49] <jaawerth> Array.from(el).querySelectorAll - will enver be a funciton since arrays don't have that method
[19:38:53] <OnkelTem> teut: use Phoenix headless browser for example
[19:38:54] *** Parts: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (when i leave, come together like butt cheeks)
[19:39:13] <OnkelTem> silly: sorry, reading now
[19:39:43] <teut> https://ibb.co/5kR9CfX
[19:39:45] <teut> see this
[19:40:02] <teut> the list is printed first and then the page switch happens
[19:40:05] <teut> why so?
[19:40:50] <teut> Array.from(el.querySelectorAll) - will enver be a funciton since arrays don't have that method       ya I had corrected it but I didn't update it in the paste , sorry for that
[19:41:58] <teut> ya I can use pupeeter then
[19:42:01] <OnkelTem> silly: I'm beginning to understand I think. So you mean that when you scroll, then the root folder is not visible
[19:42:01] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[19:42:07] <teut> pheonix I have never used
[19:42:12] <silly> yes
[19:42:33] *** Joins: onosendi (~onosendi@user/onosendi)
[19:42:37] <OnkelTem> silly: and you want it like a sticky header maybe
[19:43:00] <silly> yes
[19:43:21] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[19:43:26] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[19:44:00] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:45:25] <OnkelTem> silly: I would also want to have those root folders to be rendered differently
[19:45:49] <OnkelTem> because now they're just blending into... surroundings
[19:45:50] *** Joins: kordou (~goartis@2a02:2149:8884:b100:47e:c0e0:c3bf:111e)
[19:46:14] <silly> yes, custom background colors would be nice
[19:46:44] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[19:46:47] <kordou> HI! how can i use js to open the gallery in android and ios to select photos ? does anyone know a way ? thank you
[19:47:28] *** Joins: hseg (~hseg@195.192.229.23)
[19:53:39] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[19:54:00] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[19:58:56] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[20:04:35] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:06:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[20:07:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:07:52] *** Joins: trevors (~trevors@user/trevors)
[20:10:22] <OnkelTem> From comrade to comrade, from heart to hearts so to speak: https://www.youtube.com/watch?v=ti79fu3TpQ0
[20:10:23] <skillbot> YouTube Title: VSCode: sticky root folders to workspaces
[20:11:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:11:41] *** Joins: crashrep (~crashrep@user/crashrep)
[20:12:34] <FlorianBad> Javascript regexp don't recognized \K  ?
[20:12:50] <FlorianBad> what should I use if I want to replace only what is AFTER a certain point
[20:17:02] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66)
[20:17:31] <ox1eef> (.+) to capture it, then replace
[20:17:45] <OnkelTem> FlorianBad: could you please provide an example? https://regex101.com/
[20:17:48] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:18:04] <FlorianBad> ox1eef: oh, I see, indeed :)
[20:18:24] <silly> ty OnkelTem awsome video
[20:18:39] <OnkelTem> i posted it also in the comments
[20:18:58] <OnkelTem> you're also free to use it in the first one, then I'll delete my comment
[20:19:02] <silly> very cool
[20:19:39] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[20:19:48] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:20:07] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:20:40] <OnkelTem> Two days ago I created a ticket in VSCode issue queue asking to provide coloring for directories, having in my problem with the default File Explorer view when directories and files just blend
[20:21:06] <OnkelTem> https://github.com/microsoft/vscode/issues/141406
[20:21:32] <OnkelTem> Then I discovered a plugin called vscode-icons which solves my problem! Now my File Explorer looks like this:
[20:21:56] <OnkelTem> https://i.imgur.com/PGupgft.png
[20:22:36] <OnkelTem> Just what I wanted :) But... I still thing that coloring dirs would be great. Like in the case what we've just discussed, for the top-most dirs
[20:23:15] <OnkelTem> and as I said in the comments there - I would want to have such things out-of-the-box.
[20:23:28] <OnkelTem> think*
[20:24:11] *** Quits: minnow (~minnow@79.184.171.166.ipv4.supernova.orange.pl) (Quit: Konversation terminated!)
[20:24:40] <ox1eef> that's great, thanks OnkelTem
[20:24:48] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Remote host closed the connection)
[20:24:54] <OnkelTem> Btw, it took some time for me to "unstyle" vscode-icons theming :) By default they try to make assumption on the folder content and add some random icons there. Looks colorful but awful
[20:25:03] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[20:25:25] <ox1eef> yeah, one folder is green which is kinda odd
[20:25:28] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[20:25:34] <silly> oh, i use material icons
[20:25:43] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[20:26:09] *** Joins: hseg (~hseg@195.192.229.23)
[20:26:17] <silly> and i have folders in every color
[20:28:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[20:29:53] <OnkelTem> Upon opening a create-react-app project vscode-icons plugin asked me: is this "angualar" or "nextjs". I was like what-what? Then picked "nextjs" as it seem less stupid in my case. But no, it wasn't a good choice either because nextjs applies some real meaning to folder while in CRA app they just random (and was colored random indeed)
[20:30:16] *** Quits: kordou (~goartis@2a02:2149:8884:b100:47e:c0e0:c3bf:111e) (Quit: Leaving)
[20:30:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[20:32:33] <OnkelTem> *seemed, *to filder names, *were colored, *randomly (sorry)
[20:32:40] <OnkelTem> folder names* :)
[20:33:21] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:33:37] *** Quits: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[20:35:59] <Slade> hmm if somethings marked TODO for 20 years.. is it still a TODO?  https://github.com/dotnet/runtime/blob/main/src/coreclr/debug/ee/debugger.h#L494
[20:37:29] <systemfault> That's usually what happens with Todos
[20:37:45] <systemfault> I've worked with codebases having hundreds of them...
[20:37:51] <systemfault> Most of them are very old
[20:38:35] <systemfault> Programming is where "todo" means "will never do"... where "temporary hack/fix" means "permanent hack/fix"
[20:39:05] <ljharb> TODOs sometimes get done.
[20:39:14] <ljharb> and yes, there's no time limit on them, it could be a TODO for 200 years and it's still one
[20:40:22] <systemfault> There should be, otherwise it should be a ticket in the backlog
[20:41:19] <Slade> i wonder what it'll be like looking back on 200 year old code
[20:41:32] <systemfault> We'll know... in 150 years :p
[20:41:43] <systemfault> Well... not me.
[20:41:50] <systemfault> But "humanity"
[20:42:12] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[20:43:16] <ox1eef> good thing there's global warming and github picked the artic to store all the world's code.
[20:43:36] <systemfault> Too bad we can't eat code...
[20:44:01] <ox1eef> code exists in an odd reality
[20:44:05] <OnkelTem> Can Microsoft just close GitHub at some point? Do they have such a right/permission as an owner?
[20:44:15] <eXtr3m0> Or when implementing a new feature you suddenly find a TODO that would then be helpful. In this case I extend the scope and fix the todo once for all.
[20:44:49] <ox1eef> OnkelTem: certainly at the mercy of a big corp by using github but the beauty of git is that it is decentralized, so they would quickly be replaced.
[20:47:19] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[20:47:52] *** Joins: Intelo (~Intelo@88.244.94.93)
[20:47:55] <Intelo> https://pastebin.mozilla.org/N263iYOa
[20:49:02] *** Quits: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d) (Remote host closed the connection)
[20:49:15] *** Joins: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d)
[20:50:52] <ljharb> OnkelTem: sure. but since they bought github and run it at a loss specifically to prevent that from happening, why would they do so
[20:50:59] *** Joins: src (~src@user/src)
[20:54:35] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:57:49] *** Joins: sagax (~sagax_nb@user/sagax)
[20:59:14] <onosendi> I didn't know github operates at a loss.
[21:02:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:03:08] *** Quits: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net) (Remote host closed the connection)
[21:03:24] *** Joins: trevors (~trevors@user/trevors)
[21:03:33] <Intelo> any clues on regex?
[21:03:39] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:03:50] <Intelo> https://pastebin.mozilla.org/N263iYOa
[21:04:03] *** Joins: Anonamy (~Anonamy@2001:569:7b8c:5300:43ca:5acf:d440:6416)
[21:05:23] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[21:05:44] <Intelo> ignore,  posting in another channel ^
[21:07:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:08:57] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:09:49] *** Quits: kmh (~kmh@2a00:6020:5004:6800:50:8e3a:798a:780d) (Quit: Leaving)
[21:11:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:13:08] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:13:08] *** Quits: D4mned (~D1mned@212.101.253.145) (Read error: Connection reset by peer)
[21:13:19] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:13:31] *** Joins: D4mned (~D1mned@212.101.253.145)
[21:15:00] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[21:16:15] *** Joins: summersault (~summersau@179.221.251.36)
[21:17:07] <OverCoder> hi
[21:17:36] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:17:37] <OverCoder> does nesting two arrow functions cause scope to change somehow?
[21:17:55] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[21:18:03] <OverCoder> This is some (short) ReactJS code  https://irc.overcoder.dev/uploads/70027594fe3786ac/image.png
[21:18:13] <OverCoder> The gist is that the first console log does log a different number than the latter
[21:18:25] <OverCoder> despite seemingly both should be referring to the exact same variable
[21:18:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[21:18:51] <OverCoder> (useMemo() is a ReactJS functino, throttle is a lodash one)
[21:19:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:20:39] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[21:21:00] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[21:21:15] *** Parts: thomas25- (thomas25@brought.to.you.by.bnc4free.com) ()
[21:21:54] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[21:22:51] <Slade> <OnkelTem> Can Microsoft just close GitHub at some point? Do they have such a right/permission as an owner?   <-- yes, but there is a negative incentive to do so.
[21:24:09] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Ping timeout: 268 seconds)
[21:27:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:27:57] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:29:37] *** Quits: neverfindme (~hayden@158.123.160.43) (Max SendQ exceeded)
[21:30:16] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:30:50] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[21:31:44] *** Joins: abraham1 (~abraham@143.244.185.86)
[21:32:00] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[21:32:31] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[21:32:54] <jmdaemon> rizon
[21:33:26] <jmdaemon> whoopsies
[21:34:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:34:58] *** Quits: RLa (~RLa@82.131.24.208.cable.starman.ee) (Quit: Client closed)
[21:35:15] *** Joins: RLa (~RLa@82.131.24.208.cable.starman.ee)
[21:35:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:36:27] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[21:36:39] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[21:37:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:40:04] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:40:13] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[21:43:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:43:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:43:40] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[21:44:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:47:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[21:48:49] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[21:50:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[21:51:23] *** Quits: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d) (Quit: Client closed)
[21:51:34] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:53:37] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3ccd-5c9e-cfd0-95f1.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:53:55] <FlorianBad> Many times I experienced cases where I declared a variable   var myVar; and did not assign it anything, and in some kind of loop it seems to get back a value it had before, so I have to do var myVar = null    I just don't understand how that's possible. Can someone explain me this?
[21:55:53] <onosendi> FlorianBad: https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/
[21:56:25] <onosendi> FlorianBad: use `const`. Use `let` when you need it.
[21:58:29] <onosendi> FlorianBad: and as for your exact issue, we'd have to see the code to diagnose the issue.
[22:00:28] <FlorianBad> onosendi: code is 13K lines;)    Well, the problem is that in that case not only my var was in a function but also no other var has the same name...
[22:00:53] <onosendi> FlorianBad: 13k lines in one file?
[22:01:11] <FlorianBad> yes, it's a library. It's not really a file, but basically yes
[22:02:57] <ox1eef> ljharb: did you once advise against for (let in obj) ? i seem to remember similar, and parsing json i don't see other keys in the chain.
[22:03:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:04:09] <silly> FlorianBad, how can there have been "before", if you didn't assign anything?
[22:05:15] <FlorianBad> silly: loop
[22:05:28] <silly> for..in iterates over all enumerable keys in the entire prototype chain
[22:05:45] <silly> there's Object.entries/keys/values
[22:05:47] <FlorianBad> actually I don't know if it had the value it had "before" but it was certainly not null, and that is strange
[22:06:34] <silly> if you define the variable with `var x;` then the value is `undefined`
[22:07:39] <silly> FlorianBad, telling you where the bug is, isn't easy without actual code
[22:08:11] <FlorianBad> silly: I'm referring to == null, not === null
[22:08:12] <silly> actual reproducable, magic bugs i haven't seen yet
[22:08:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:08:52] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:09:07] <silly> might have something to do with async code?
[22:09:39] <FlorianBad> silly: that piece of the code is here: https://pastebin.com/yER5TsAq      It's the variable prev_p, if I use var the null late is not true afterwards, if I use let it works. It also works if my var initializes it to null
[22:10:18] <FlorianBad> s/null late/null later/
[22:10:37] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:10:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:11:16] <ljharb> ox1eef: yes, never use for-in, ever
[22:11:21] <ljharb> ox1eef: use Object.keys/entries/values and iterate
[22:11:29] <ljharb> !last @ FlorianBad
[22:11:30] <jellobot> FlorianBad, If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/
[22:11:31] <ljharb> FlorianBad: don't use loops.
[22:11:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:12:48] <silly> and don't mix var with const/let
[22:14:03] <FlorianBad> silly: I only changed to let because var produced teh bug
[22:14:09] <silly> !hoisting @FlorianBad
[22:14:09] <jellobot> FlorianBad, http://johnkpaul.com/blog/2013/02/11/what-is-hoisting-really/ https://web.archive.org/web/20170907201821/https://developer.mozilla.org/en-US/docs/Archive/Web/Scope_Cheatsheet https://snek.dev/blag/2019-07_js_hoisting
[22:14:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:14:45] <silly> the variable with let is scoped to the loop, the variable defined with var is scoped to the function
[22:15:21] <FlorianBad> ljharb: I dont understand how the thing about loop above applies
[22:15:28] <FlorianBad> (the !last)
[22:15:34] <silly> so, while the let variable is lost on the next iteration, the var variable from outside scope has still the value from the previous iteration
[22:15:38] *** Joins: nomic (~nomic@185.192.69.3)
[22:15:57] <silly> and it's the !last rule that applies
[22:16:09] <FlorianBad> silly: but it's within a block, isn't it? Isn't for(){ }  a block?
[22:16:27] <silly> if you want blockscoped, use const/let
[22:16:36] <silly> var is function scoped
[22:17:12] <FlorianBad> ah... wow, I never read that right then! That's crazy. Now it makes me rethink everything lol
[22:17:28] <silly> the js engined will move the `var prev_p;` to the beginning of the function
[22:18:09] <silly> not the beginning inside the for loop
[22:18:41] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[22:18:47] <FlorianBad> wow, ok.
[22:19:01] <silly> just... stop using var at all
[22:19:10] <silly> !const
[22:19:10] <jellobot> silly, When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be).
[22:19:19] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:20:04] <FlorianBad> Well, then I probably just need to replace the 2K+ "var " by "let " :)  Because I always used a var like a let. If I want something global I would just have declared it at the right place, it's really weird to declare something in a block and then expect it to be a function-level variable... not good
[22:20:33] <FlorianBad> yeah, var is just ultra insecure then
[22:21:00] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 250 seconds)
[22:21:11] <FlorianBad> I just tried to replace every "var " by "let " (over 2200 of them) and everything seems to work fine
[22:21:58] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:22:09] <silly> 2.2k lets in one file? :)
[22:22:22] <silly> !const @FlorianBad
[22:22:23] <jellobot> FlorianBad, When transpiling or on node 6+, always use `const`. If you can't avoid reassigning the variable (try!), use `let`. Never use `var` unless you are relying on !hoisting (which you shouldn't be).
[22:22:36] <silly> it says "always use `const`"
[22:23:52] <OnkelTem> Is the only reason for SWC existance is that they just could make it?
[22:23:59] <OnkelTem> existence?
[22:24:06] <OnkelTem> yeah.
[22:24:41] <silly> what's swc?
[22:24:57] <OnkelTem> silly: webpack alternative as far as I understood
[22:25:02] *** Joins: z1haze (~z1haze@user/z1haze)
[22:25:05] <OnkelTem> written in... Rust! omg
[22:25:07] <silly> yet another?
[22:26:04] <z1haze> an anyone help be with creating a relationship in objection that will allow me to eager load appointment.service[s].pet without needing to do additional related queries beyond `Appointment.query().withGraphFetched('services.pet')? https://stephenhendricks.me/screenshots/db.png is a broken down model of the db
[22:26:28] *** Joins: alystair (~alystair@user/alystair)
[22:27:37] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Ping timeout: 240 seconds)
[22:29:15] <FlorianBad> silly: there are also thousands of "const" ;)
[22:29:17] *** Joins: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676)
[22:29:39] <ljharb> OnkelTem: yep, basically that's it
[22:29:58] <ljharb> all of these "JS tools written in not-javascript" aren't going to last for long tho. you can't get enough contributors that way.
[22:30:29] <silly> which is also why vscode or atom had to win the editor wars
[22:31:15] *** Quits: Liblx (~Alex@2a02:810c:280:59c:78c0:8f13:70a3:e676) (Client Quit)
[22:31:29] <silly> oh, how did they get 20k gh stars?
[22:31:45] <systemfault> What did get that?
[22:32:07] <systemfault> SWC? It's probably because of the Deno project.
[22:32:29] <systemfault> It gaves the SWC project a ton of exposure
[22:33:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[22:33:28] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:1872:f10d:d91b:b66) (Remote host closed the connection)
[22:33:55] <cthulchu> so browsers tend to cache external files, including the js libs. The question is, whether that cache is viable across TLDs
[22:34:40] <cthulchu> and if it is, it implies that browsers keep cached huge amount of libraries of different versions? I doubt it works like that, although it would explain why they eat so much ram, lol
[22:34:46] <OnkelTem> systemfault: yes, while deno itself may have obsure perspectives
[22:34:54] <systemfault> OnkelTem: o_O
[22:35:18] *** Quits: han-solo (~hanish@user/han-solo) (Quit: night)
[22:35:20] <systemfault> OnkelTem: Dude... it's a NodeJS-like for TypeScript, not an international conspiracy from Elvis Prestley
[22:35:45] <OnkelTem> it does just the same under the cover, doesn't it? Same tsc
[22:35:47] *** Joins: zebrag (~chris@user/zebrag)
[22:35:59] <systemfault> OnkelTem: What does?
[22:36:11] <systemfault> Deno? SWC? Elvis?
[22:36:16] <OnkelTem> transpiling, type checking? It seeeems like it runs natively
[22:36:29] <OnkelTem> but it of course doesn't, at least as I understood
[22:36:40] <OnkelTem> deno
[22:37:13] <OnkelTem> ts-node also runs ts :)
[22:37:31] <OnkelTem> and ts-jest (jest-ts?) runs ts tests :)
[22:37:42] <OnkelTem> no itlsef, as a plugin I mean
[22:37:45] *** Quits: D4mned (~D1mned@212.101.253.145) (Read error: Connection reset by peer)
[22:37:59] <silly> should i ever have a son, i'll call him elvis
[22:38:06] <systemfault> But the swc equivalent to ts-node is a lot faster.
[22:38:25] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:38:26] <systemfault> So... by definition, your tests would also run a lot faster.
[22:38:53] <systemfault> But SWC, in the context of TS, is just a TS stripper and doesn't do type checking
[22:39:10] *** Joins: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420)
[22:39:12] <OnkelTem> oh, even worse! haha
[22:39:15] *** Joins: D4mned (~D1mned@212.101.251.144)
[22:39:59] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[22:40:13] <Alexendoo> SWC is posed as a babel alternative
[22:40:25] *** Joins: onosendi (~onosendi@user/onosendi)
[22:40:50] <Alexendoo> Not a replacement for tsc, you still need that to type check no matter what you pick
[22:41:32] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[22:41:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:41:57] <OnkelTem> ah, yes. Babel, not webpack, my bad, silly ^
[22:42:40] <Alexendoo> cthulchu: It used to be usable across sites (tld included). But now it's separated per origin, so even if you load the same library from the same CDN, it won't be a cache hit if you loaded it prior for a different site
[22:43:05] <cthulchu> Alexendoo, many thanks!
[22:43:19] <Alexendoo> Some stuff is cached in memory but much of it will be on disk, not sure how much, but you could check it if you can find where it ends up
[22:44:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[22:44:45] <silly> Alexendoo, so it would cache the same jquery from cloudflare for each website separately?
[22:44:48] <silly> why is that?
[22:44:55] <silly> seems pointless
[22:45:05] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:10] <Alexendoo> To prevent using the cache as a fingerprint
[22:45:34] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:45:44] <silly> oic :/ makes sense now
[22:45:51] <silly> weird
[22:46:09] <Alexendoo> It's apparently not a common occurrence that two sites shared the same cdn resource anyway
[22:46:21] <silly> this world deserves to burn
[22:46:21] <Alexendoo> That happened to be in the cache
[22:46:33] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[22:47:00] <Alexendoo> I think this change is great, means there's now no reason not to host the files from the same origin as the site
[22:47:55] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:49:52] *** Quits: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420) (Ping timeout: 268 seconds)
[22:51:32] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:53:17] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[22:54:18] *** Quits: Centaur (~sys@user/probe) (Remote host closed the connection)
[22:56:06] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:56:26] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[22:56:48] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[22:58:58] *** Joins: stenno (~stenno@user/stenno)
[23:00:17] *** Joins: salad (~cucumber@82.76.150.118)
[23:01:01] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5d99:6627:d23c:6f74)
[23:01:15] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[23:04:23] *** Quits: Wizzzzzy (~wizzzzzy@85.255.234.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:04:29] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:05:30] *** Bitflux is now known as Byteflux
[23:05:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[23:08:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:11:15] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:12:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:13:22] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:ac63:f3f7:89ad:2997)
[23:14:04] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[23:18:19] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:20:22] *** Quits: pmercado (~pmercado@186.11.84.232) (Read error: Connection reset by peer)
[23:21:31] *** Joins: pmercado (~pmercado@186.11.41.95)
[23:22:16] <hassoon_> anyone knows of an active channel for freelance work ?
[23:22:30] <ljharb> Alexendoo: there is a great reason
[23:22:51] <ljharb> Alexendoo: you don't want cookie weight on every asset request. so your assets should always be on a different subdomain, at least, from the site (when it's on `www`)
[23:24:04] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[23:26:10] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[23:28:01] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[23:28:12] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:30:53] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:32:12] *** Quits: D4mned (~D1mned@212.101.251.144) (Quit: Leaving)
[23:36:37] <ox1eef> ljharb: it seemed fine in the context of 'const json = await res.json(); for(let prop in json) {} - no unexpected props iterated
[23:37:45] <Alexendoo> ljharb: Is that really a concern given hpack exists?
[23:40:53] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Quit: Leaving...)
[23:41:50] <Maxdamantus> ljharb: cookie weight due to something like JWTs?
[23:42:44] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[23:42:49] <Maxdamantus> When I see big cookies in products by Google etc, I assume they are something similar to JWTs, where a bunch of information is encrypted within the cookie.
[23:44:48] <Maxdamantus> Anyway, I imagine http2 would probably allow reuse of cookies across requests, if that's an issue.
[23:45:17] <Maxdamantus> (haven't looked into whether http2 actually does, but it could have easily be designed that way)
[23:45:31] <Alexendoo> Yeah that's hpack, sending a header you already sent is doable in one byte
[23:45:42] <Maxdamantus> (eg, would naturally happen if you gzip compress multiple requests in one block)
[23:45:59] <Maxdamantus> Right, or doing that as a special case.
[23:47:27] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[23:48:22] <Alexendoo> It had to all be special cased to avoid CRIME style attacks
[23:51:23] *** Joins: ekathva (~ekathva@2001:999:51:be01:2799:25be:c992:870)
[23:54:50] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:55:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[23:55:37] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:59:03] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[23:59:22] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
