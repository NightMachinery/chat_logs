[00:01:09] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[00:05:00] *** Quits: slack1256 (~slack1256@191.126.99.78) (Ping timeout: 256 seconds)
[00:06:45] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[00:08:03] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Remote host closed the connection)
[00:09:28] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[00:10:11] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[00:10:35] *** Joins: Pickchea (~private@user/pickchea)
[00:13:33] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[00:14:33] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Quit: Leaving)
[00:14:56] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[00:17:47] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:18:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:19:27] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[00:19:49] <jijimofo> argh, stack is so confusing. added my dependencies to package.yaml but says stack configuration has no version. suggested i add the dependencies to extra-deps. i did. now it's saying it can't find modules. i
[00:20:04] <jijimofo> 'm so perplexed. i don't understand what it wants from me
[00:21:29] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:21:44] <geekosaur> did you specify a resolver in stack.yaml?
[00:22:31] *** Joins: Guest70 (~Guest70@75.76.54.207)
[00:22:35] <geekosaur> I'm no stack expert but I know stack is all about the resolver and you'll get pretty much nowhere without one
[00:23:58] <jijimofo> there's one specified for a site called githubusercontent. i'll try a different one, see if its helps. also going to research what the stack configuration is
[00:24:18] *** Quits: Guest70 (~Guest70@75.76.54.207) (Client Quit)
[00:24:23] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[00:24:56] *** Joins: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7)
[00:24:58] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:25:07] *** Joins: jonathanx (~jonathan@c-5eea3547-74736162.cust.telenor.se)
[00:25:35] <tomsmeding> jijimofo: stack.yaml should have something like "resolver: lts-18.18"
[00:26:34] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[00:26:35] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[00:28:10] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[00:28:11] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[00:29:12] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[00:29:19] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[00:29:59] *** Joins: acidjnk (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de)
[00:30:00] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[00:30:00] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[00:30:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:30:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:30:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:30:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:30:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:31:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:31:21] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:31:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:31:44] <jkaye> Did you generate your stack configuration using one of their tools or are you trying to write it by hand for some reason? Did you also read about what stack is and how it works?
[00:31:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Read error: Connection reset by peer)
[00:31:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:32:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:32:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:32:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:32:43] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:32:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:32:59] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[00:33:00] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[00:33:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[00:33:54] *** Quits: jonathanx (~jonathan@c-5eea3547-74736162.cust.telenor.se) (Ping timeout: 256 seconds)
[00:33:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:34:11] *** Joins: falafel (~falafel@2603-8000-d800-688c-f998-9914-c722-4c43.res6.spectrum.com)
[00:37:10] *** Quits: jijimofo (~cmo@S010610561191f5d6.lb.shawcable.net) (Remote host closed the connection)
[00:37:47] *** Joins: joe_colben (~joe____co@185.190.112.211)
[00:37:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[00:38:17] *** Quits: falafel (~falafel@2603-8000-d800-688c-f998-9914-c722-4c43.res6.spectrum.com) (Ping timeout: 240 seconds)
[00:39:07] *** Parts: joe_colben (~joe____co@185.190.112.211) ()
[00:40:32] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[00:41:49] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[00:42:57] *** Joins: notzmv (~zmv@user/notzmv)
[00:43:43] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[00:44:01] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[00:47:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:49:06] *** Joins: zincy (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[00:50:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:50:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:50:47] *** Joins: wroathe (~wroathe@user/wroathe)
[00:51:13] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Quit: leaving)
[00:51:32] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[00:55:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:58:33] *** Quits: zincy (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Remote host closed the connection)
[01:01:34] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:03:15] *** Joins: cjb (~cjb@user/cjb)
[01:04:45] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[01:05:31] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:05:37] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:05:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[01:05:37] *** finn_elija is now known as FinnElija
[01:11:21] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[01:11:23] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:19:54] *** Joins: Erutuon (~Erutuon@user/erutuon)
[01:21:17] *** Quits: polezaivsani (~polezaivs@orangeshoelaces.net) (Ping timeout: 240 seconds)
[01:21:18] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[01:21:23] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:21:50] *** Joins: deadmarshal (~deadmarsh@95.38.116.51)
[01:22:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:23:50] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[01:25:50] *** Joins: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4)
[01:25:57] *** Quits: deadmarshal (~deadmarsh@95.38.116.51) (Ping timeout: 240 seconds)
[01:26:05] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Quit: No Ping reply in 180 seconds.)
[01:27:27] *** Joins: JimL (~quassel@89-162-2-132.fiber.signal.no)
[01:31:57] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 240 seconds)
[01:33:52] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:41:11] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 245 seconds)
[01:42:15] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[01:42:33] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[01:45:24] *** Quits: python476 (~user@88.160.31.174) (Ping timeout: 240 seconds)
[01:46:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:46:57] *** Quits: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:49:12] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[01:52:40] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:52:47] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[01:53:37] <zero> i'm trying to write a simple bfs but i'm getting duplicate levels. can anyne understand why? https://paste.jrvieira.com/1639952533869
[01:56:15] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[01:56:34] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[01:56:35] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:56:42] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[01:56:43] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:58:17] <EvanR> what is Tree, what is Queue
[01:58:57] <zero> tree is `data Tree a = Leaf a | Node a (Tree a) (Tree a)`
[01:59:45] <zero> Queue is https://paste.jrvieira.com/1639952979883
[02:00:36] *** Quits: darchitect (~darchitec@2a00:23c6:3584:df00:7dec:bf13:8fa:748c) (Ping timeout: 240 seconds)
[02:01:15] <EvanR> .oO(dequeue :: Queue a -> Maybe (a,Queue a))
[02:01:54] *** Quits: max22- (~maxime@2a01cb08833598001a2c7d9873db9006.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:02:24] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:02:24] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:03:18] *** Joins: earendel (uid498179@user/earendel)
[02:03:51] <zero> EvanR: yeah that makes sense!
[02:04:25] *** Joins: taterbase (~user@2603-7081-6902-9100-0000-0000-0000-0006.res6.spectrum.com)
[02:04:53] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[02:05:17] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:05:18] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:06:17] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:06:17] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:09:58] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:09:59] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:10:23] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:10:23] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:12:19] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[02:12:57] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:12:58] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:13:18] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:13:18] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:14:09] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:14:09] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:14:47] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:14:49] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[02:14:55] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:15:07] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:15:07] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:17:30] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:17:30] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:17:31] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[02:17:33] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 268 seconds)
[02:18:00] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:18:02] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:19:21] *** Joins: Guest|37 (~Guest|37@pool-108-16-143-231.phlapa.fios.verizon.net)
[02:19:56] *** Joins: kranius_ (~kranius@222.186.245.213.rev.sfr.net)
[02:20:09] *** Quits: Guest|37 (~Guest|37@pool-108-16-143-231.phlapa.fios.verizon.net) (Client Quit)
[02:20:39] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[02:21:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54f844-160.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:23:30] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:23:30] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:23:50] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:23:50] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:24:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:24:52] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:24:52] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:25:00] *** Quits: jumper149 (~jumper149@static.6.71.203.116.clients.your-server.de) (Quit: WeeChat 3.3)
[02:25:22] *** Quits: cosimone (~user@93-44-185-127.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:25:44] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:25:44] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:26:38] *** Quits: Guest3076 (~Guest30@66.115.252.46) (Quit: Client closed)
[02:27:28] <zero> maybe this is more readable https://paste.jrvieira.com/1639954642001
[02:27:58] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[02:29:03] <Inst> sigh, this is nuts
[02:29:13] <Inst> what's wrong with understanding >>= as join.fmap?
[02:30:00] <dibblego> it isn't?
[02:30:04] <dibblego> @type join . map
[02:30:06] <lambdabot> error:
[02:30:06] <lambdabot>     • Couldn't match type ‘(->) [a]’ with ‘[]’
[02:30:06] <lambdabot>       Expected type: (a -> a1) -> [[a1]]
[02:30:12] <dibblego> @type (join .) . fmap
[02:30:14] <lambdabot> Monad m => (a1 -> m a2) -> m a1 -> m a2
[02:30:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:30:44] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[02:32:08] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:32:43] *** Joins: khumba (~khumba@user/khumba)
[02:33:24] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[02:34:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 240 seconds)
[02:34:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[02:35:34] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[02:36:50] <Inst> i'm sort of going nuts
[02:37:00] <Inst> basically, pure etc isn't behaving the way it should
[02:37:07] <Inst> @type pure Just 3
[02:37:08] <lambdabot> a -> Maybe a
[02:37:16] <geekosaur> you need parentheses
[02:37:20] <Inst> @type pure (Just 3)
[02:37:21] <lambdabot> (Applicative f, Num a) => f (Maybe a)
[02:37:40] <Inst> @pure (Just 3)
[02:37:40] <lambdabot> Maybe you meant: url part more
[02:38:21] <geekosaur> what exactly are you trying to do?
[02:38:31] <superstar64> Inst, functions are monads too. Where `pure = const`
[02:38:59] <Inst> basically, the way I understand it is that pure is the inverse of join
[02:39:03] <Inst> but it's behaving weirdly
[02:39:13] <geekosaur> mm, I wouldn't say that
[02:39:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[02:39:56] <Inst> maybe i don't get it
[02:39:57] <EvanR> :t let (.:) = (.) . (.) in join .: fmap
[02:39:57] <lambdabot> Monad m => (a1 -> m a2) -> m a1 -> m a2
[02:40:01] <Inst> pure [] = []
[02:40:22] <superstar64> It's not being weird. It's just when you do `(pure a) x`. It puts `a` in the function monad, which makes it then ignore `x`. 
[02:40:30] <dibblego> pure is identity for join
[02:40:31] <superstar64> It's an issue of haskell being to generic.
[02:40:34] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:40:34] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:40:53] <geekosaur> :t pure []
[02:40:54] <lambdabot> Applicative f => f [a]
[02:41:06] <Inst> so how do I get pure [] to yield [[]]?
[02:41:25] <geekosaur> do it in the [] monad/applicative
[02:41:38] <geekosaur> % :t pure [] @[]
[02:41:39] <yahb> geekosaur: ; <interactive>:1:1: error:; * Cannot apply expression of type `f0 [a0]'; to a visible type argument `[]'; * In the expression: pure [] @[]
[02:41:46] <superstar64> Inst, `pure [] :: [[Int]]`
[02:41:50] <zero> > pure [] :: [[]]
[02:41:51] <lambdabot>  error:
[02:41:51] <lambdabot>      • Expecting one more argument to ‘[]’
[02:41:51] <lambdabot>        Expected a type, but ‘[]’ has kind ‘* -> *’
[02:41:55] <geekosaur> :t (pure @[]) []
[02:41:56] <lambdabot> error:
[02:41:56] <lambdabot>     Pattern syntax in expression context: pure@[]
[02:41:56] <lambdabot>     Did you mean to enable TypeApplications?
[02:42:01] <Inst> !!! >:(
[02:42:04] <zero> > pure [] :: [[Int]]
[02:42:04] <geekosaur> wrong bot. not my night
[02:42:05] <lambdabot>  [[]]
[02:42:12] <EvanR> you can force it with artificial signatures and type applications but realistically it will just work, because of the context
[02:42:13] <geekosaur> % :t (pure @[]) []
[02:42:13] <yahb> geekosaur: [[a]]
[02:42:42] <Inst> i already have control monad imported
[02:43:04] <EvanR> write top level type signatures for your code that uses pure
[02:43:39] <EvanR> if you don't, your code may end up working for any Applicative not just []
[02:43:43] <zero> :msg lambdabot > pure ()
[02:43:46] <EvanR> horrible I know!
[02:44:57] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:44:58] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:46:09] <Inst> i'm going to sleep, thanks for trying
[02:47:08] <EvanR> type inference picks the most general type that would work, even if that may confuse you
[02:47:19] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:47:19] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:47:29] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:47:32] *** Quits: kranius_ (~kranius@222.186.245.213.rev.sfr.net) (Ping timeout: 240 seconds)
[02:48:27] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:48:28] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:49:45] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:49:45] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:50:08] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:50:10] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:51:06] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Remote host closed the connection)
[02:51:23] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:51:24] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:52:37] *** Quits: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:54:17] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-169.elisa-laajakaista.fi) (Quit: Leaving.)
[02:55:25] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:55:26] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:56:00] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[02:56:02] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:56:06] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:56:26] *** Joins: deech (~user@024-217-244-075.res.spectrum.com)
[02:57:00] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[02:57:07] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[02:58:57] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[03:00:37] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[03:00:38] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[03:01:02] <d34df00d> Why can't I write something like `(Applicative f, forall a. (WrapperType f a ~ f a)) => ...`, where WrapperType is a closed type family?
[03:01:14] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:01:45] <d34df00d> I'm getting `Illegal type synonym family application ‘WrapperType f’ in instance: WrapperType f a ~ f a`
[03:02:26] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:03:29] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[03:03:39] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[03:06:32] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[03:07:35] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[03:08:07] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[03:08:10] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Client Quit)
[03:09:14] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f)
[03:11:15] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[03:11:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 252 seconds)
[03:12:48] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[03:12:49] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[03:12:55] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:13:17] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[03:13:34] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[03:13:42] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[03:17:02] *** Quits: Jing_ (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[03:17:41] *** Joins: Jing (~hedgehog@2604:a840:3::103b)
[03:17:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:21:38] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[03:24:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[03:25:36] *** Quits: acidjnk (~acidjnk@pd9e0bdc0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:29:02] *** Joins: pavonia (~user@user/siracusa)
[03:29:06] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 268 seconds)
[03:29:12] *** Joins: Henson (~kvirc@107-179-133-201.cpe.teksavvy.com)
[03:30:49] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[03:35:14] <monochrom> d34df00d: If GHC 9.2, QuantifiedConstraints may help, but I haven't checked.
[03:35:39] <d34df00d> monochrom: I'm doing this with ghc 8.10 and -XQuantifiedConstraints on. I'll try with 9.2, thanks!
[03:37:33] <d34df00d> Hmm, looks like the same error.
[03:38:03] <monochrom> Then it is something else I don't know of.
[03:40:37] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[03:40:55] *** Quits: superstar64 (~superstar@2600:1700:ed80:50a0:d250:99ff:fe2c:53c4) (Quit: Leaving)
[03:48:06] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[03:50:47] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[03:51:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:51:49] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[03:51:54] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 268 seconds)
[03:54:21] *** Techcable_ is now known as Techcable
[03:55:35] *** Joins: machinedgod (~machinedg@24.105.81.50)
[03:55:39] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[03:57:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[03:58:34] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[04:03:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 240 seconds)
[04:03:57] *** Joins: DNH_ (~DNH@ip5f5abb04.dynamic.kabel-deutschland.de)
[04:04:14] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 268 seconds)
[04:04:16] *** Quits: DNH_ (~DNH@ip5f5abb04.dynamic.kabel-deutschland.de) (Client Quit)
[04:05:59] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d8a9:a97b:f226:606f) (Ping timeout: 252 seconds)
[04:12:09] *** Joins: xsperry (~xs@user/xsperry)
[04:19:44] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[04:29:57] *** Quits: jkaye (~jkaye@2601:281:8300:7530:76ff:6d0a:27ec:c880) (Ping timeout: 240 seconds)
[04:30:39] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[04:34:12] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[04:35:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:35:47] *** Joins: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net)
[04:36:38] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Remote host closed the connection)
[04:38:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 240 seconds)
[04:41:07] *** Quits: ubert (~Thunderbi@p200300ecdf0a5d10d9ff0243dc33f2a7.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:41:25] *** Joins: ubert (~Thunderbi@p200300ecdf0a5d10d9ff0243dc33f2a7.dip0.t-ipconnect.de)
[04:41:36] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:47:43] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:49:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[04:54:57] *** Quits: taterbase (~user@2603-7081-6902-9100-0000-0000-0000-0006.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:56:10] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[04:56:40] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[04:56:40] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[04:57:00] *** Joins: Jing (~hedgehog@2604:a840:3::103b)
[05:07:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[05:13:05] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 252 seconds)
[05:20:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:23:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[05:29:35] *** Quits: Sobhan (~Sobhan@modemcable039.128-131-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[05:29:50] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:31:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:31:56] <jackdk> `(Applicative f, (forall a. WrapperType f a ~ f a)) => ...`, perhaps?
[05:32:15] <[itchyjunk]> Anyone saw this this? 
[05:32:17] <[itchyjunk]> https://www.cs.yale.edu/homes/hudak/Papers/HSoM.pdf
[05:33:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[05:37:56] <EvanR> that's an old one
[05:38:10] <EvanR> has anyone seen the software though
[05:38:33] <[itchyjunk]> its from 2012 apparently
[05:41:29] <EvanR> maybe I was thinking of haskell school of expression
[05:42:00] <[itchyjunk]> The topics in the book looks fairly advanced.
[05:42:12] <[itchyjunk]> I wonder what kind of person can handle a book like that
[05:42:35] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[05:44:42] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:44:49] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:47:38] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 260 seconds)
[05:48:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:53:19] <EvanR> evolution of a haskell programmer
[05:57:39] *** Joins: ub (~Thunderbi@p200300ecdf0a5d0bd9ff0243dc33f2a7.dip0.t-ipconnect.de)
[05:57:42] *** Quits: ubert (~Thunderbi@p200300ecdf0a5d10d9ff0243dc33f2a7.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:57:42] *** ub is now known as ubert
[05:58:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:01:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:01:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:01:18] *** Joins: wroathe (~wroathe@user/wroathe)
[06:01:52] <d34df00d> jackdk: nope, that doesn't help, sadly, I get the same error.
[06:07:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:09:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:09:37] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:09:50] <jackdk> d34df00d: can you pastebin an example for me to play with?
[06:12:03] *** Joins: mbuf (~Shakthi@223.178.83.73)
[06:15:08] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[06:16:47] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[06:17:33] *** Joins: Guest1 (~Guest1@2601:18c:4300:36d0:7c5f:5bfd:da1:79ca)
[06:20:19] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[06:21:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:22:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[06:22:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:23:15] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[06:24:13] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 240 seconds)
[06:25:46] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[06:25:53] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[06:27:20] *** Quits: xff0x (~xff0x@2001:1a81:53d2:9000:941d:3a25:9fc5:6e77) (Ping timeout: 252 seconds)
[06:27:49] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[06:29:21] *** Joins: xff0x (~xff0x@2001:1a81:5214:2e00:5b16:4ef1:d67d:4f66)
[06:30:30] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:31:01] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 268 seconds)
[06:31:02] *** Joins: notzmv (~zmv@user/notzmv)
[06:33:22] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 260 seconds)
[06:33:58] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[06:34:43] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:36:06] *** Quits: Guest1 (~Guest1@2601:18c:4300:36d0:7c5f:5bfd:da1:79ca) (Quit: Client closed)
[06:40:02] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[06:41:37] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[06:46:11] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:50:07] *** Quits: td_ (~td@muedsl-82-207-238-128.citykom.de) (Ping timeout: 268 seconds)
[06:51:23] *** Joins: td_ (~td@94.134.91.10)
[06:53:57] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[06:54:31] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[06:54:57] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[06:57:03] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[06:58:57] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[06:59:22] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[07:04:44] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 252 seconds)
[07:06:13] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[07:07:54] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: Replaced by new connection)
[07:07:55] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[07:08:22] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[07:08:34] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[07:09:27] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Remote host closed the connection)
[07:12:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[07:12:57] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:09] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:17:48] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[07:18:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:19:06] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[07:19:07] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[07:24:02] *** Quits: pgib (~textual@173.38.117.69) (Ping timeout: 268 seconds)
[07:28:22] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[07:29:56] *** Quits: Everything (~Everythin@128-124-10-123.mobile.vf-ua.net) (Quit: leaving)
[07:30:43] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[07:33:48] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[07:35:30] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[07:35:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:36:22] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[07:38:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 240 seconds)
[07:40:37] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[07:44:22] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[07:46:42] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[07:47:00] *** Joins: Akiva (~Akiva@user/Akiva)
[07:52:23] *** Joins: hornetcluster (~textual@2601:5c0:c280:7e20:5502:4cf:f65e:fd6b)
[07:54:36] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:59:52] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:00:00] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[08:00:23] <hornetcluster> Need help: https://paste.tomsmeding.com/nQLUyCHJ
[08:02:15] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[08:04:54] <Axman6> > fmap (*2) <$> [Just 1, Nothing, Just 2, Just 3]
[08:04:56] <lambdabot>  [Just 2,Nothing,Just 4,Just 6]
[08:05:26] <Axman6> > getCompose $ (*2) <$> Compose [Just 1, Nothing, Just 2, Just 3]
[08:05:28] <lambdabot>  error:
[08:05:28] <lambdabot>      Variable not in scope: getCompose :: f0 b0 -> terror:
[08:05:28] <lambdabot>      • Data constructor not in scope: Compose :: [Maybe a0] -> f0 b0
[08:05:36] <Axman6> % getCompose $ (*2) <$> Compose [Just 1, Nothing, Just 2, Just 3]
[08:05:36] <yahb> Axman6: ; <interactive>:199:1: error: Variable not in scope: getCompose :: f0 b0 -> t; <interactive>:199:23: error:; * Data constructor not in scope: Compose :: [Maybe a0] -> f0 b0; * Perhaps you meant one of these: variable `M.compose' (imported from Data.Map), variable `IM.compose' (imported from Data.IntMap), variable `icompose' (imported from Control.Lens)
[08:06:34] <Axman6> % Data.Functor.Compose.getCompose $ (*2) <$> Compose [Just 1, Nothing, Just 2, Just 3]
[08:06:34] <yahb> Axman6: ; <interactive>:200:44: error:; * Data constructor not in scope: Compose :: [Maybe a0] -> Data.Functor.Compose.Compose f g a; * Perhaps you meant one of these: variable `M.compose' (imported from Data.Map), variable `IM.compose' (imported from Data.IntMap), variable `icompose' (imported from Control.Lens)
[08:06:44] <Axman6> % Data.Functor.Compose.getCompose $ (*2) <$> Data.Functor.Compose.Compose [Just 1, Nothing, Just 2, Just 3]
[08:06:44] <yahb> Axman6: [Just 2,Nothing,Just 4,Just 6]
[08:07:02] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[08:07:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[08:08:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:08:44] * hornetcluster Continuation from above paste, I have one more question: https://paste.tomsmeding.com/tMQse5GX
[08:11:46] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[08:12:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3) (Ping timeout: 240 seconds)
[08:12:18] <Axman6> You can ask these questions in the channel by the way
[08:13:05] <Axman6> what behaviour do you want? What should be the result of foldl (+) 0 [Just 1, Nothing, Just 2, Just 3] (ish) to be? Nothing? 6?
[08:13:38] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[08:13:53] <hornetcluster> Just 6 is fine. 6 Ideally. I am learning Haskell, obviously.
[08:14:57] <Axman6> @hoogle catMaybes
[08:14:58] <lambdabot> Data.Maybe catMaybes :: [Maybe a] -> [a]
[08:14:58] <lambdabot> System.Directory.Internal.Prelude catMaybes :: () => [Maybe a] -> [a]
[08:14:58] <lambdabot> Data.Conduit.List catMaybes :: Monad m => ConduitT (Maybe a) a m ()
[08:15:11] <Axman6> :t sum . catMaybes
[08:15:12] <lambdabot> Num c => [Maybe c] -> c
[08:15:25] <Axman6> > sum . catMaybes $ [Just 1, Nothing, Just 2, Just 3]
[08:15:26] <lambdabot>  6
[08:19:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:21:14] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[08:23:58] *** Joins: notzmv (~zmv@user/notzmv)
[08:24:46] * hornetcluster Thanks. However, I am looking for something that works for general monadic type -- not just Maybe types. Here's my main problem:  https://paste.tomsmeding.com/IWSWK4I7
[08:28:11] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:28:37] *** Quits: yaroot (~yaroot@175.0.30.125.dy.iij4u.or.jp) (Ping timeout: 240 seconds)
[08:28:45] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[08:29:29] *** Joins: yaroot (~yaroot@60.149.13.160.dy.iij4u.or.jp)
[08:30:29] <Axman6> Can you specify what general behaviour you want?
[08:33:29] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[08:35:40] *** Joins: jakalx (~jakalx@base.jakalx.net)
[08:35:42] <hornetcluster> Sorry for not being clear. This is the post I made on reddit. https://www.reddit.com/r/haskell/comments/rhxrl6/dynamic_programming_minimum_number_of_coins_to/
[08:36:17] <hornetcluster> This post makes it clear on what I want to do.
[08:36:44] <hornetcluster> I'm trying to use a mutable array to count minimum number of coins required to make up an amount.
[08:38:00] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Remote host closed the connection)
[08:38:30] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:39:22] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Quit: Ping timeout (120 seconds))
[08:39:45] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[08:41:25] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[08:42:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:42:24] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:1116:7911:5ad7:44c3)
[08:42:37] <Axman6> what does that have to do with the questions you've been asking about for lists of maybes?
[08:42:56] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 256 seconds)
[08:46:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:48:48] * hornetcluster Mutable array is a monadic type. So, I have to deal with [m Int] lists instead of [Int] lists while computing the minimum using  `minimum . map ((+1).(readArray arr).(`mod` max).(a -)) . filter (<=a) $ cs` because `readArray arr` returns `m Int` type.
[08:53:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:53:47] * hornetcluster so it doesn't work the way I have written. hence my questions on how to deal with monadic types within a list
[08:57:00] *** Joins: ksqsf (~user@134.209.106.31)
[08:59:18] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:59:18] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:59:18] *** Joins: wroathe (~wroathe@user/wroathe)
[09:04:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:17:51] *** Quits: jespada (~jespada@87.74.33.157) (Ping timeout: 245 seconds)
[09:20:37] *** Joins: jespada (~jespada@87.74.33.157)
[09:23:21] *** Quits: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7) (Quit: gone to sleep. ZZZzzz…)
[09:25:43] <mniip> hornetcluster, you can use sequence to sequence the actions
[09:26:30] <mniip> which makes sense because the result of readArray may have different values depending on when it's executed
[09:31:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:31:17] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[09:41:39] *** Joins: jonathanx (~jonathan@c-5eea3642-74736162.cust.telenor.se)
[09:43:52] <EvanR> sequence :: Monad m => [m a] -> m [a]
[09:44:27] <EvanR> (e.g.)
[09:45:05] *** Joins: KnifeFire (~Knifefire@120.242.179.19)
[09:47:27] <int-e> . o O ( exercise: what does `sequence` do in the list monad? )
[09:47:41] <EvanR> sure go ahead and bump me down the glguy leaderboard... I know I was at 11th xD
[09:47:51] <EvanR> (being bumped down is annoying)
[09:49:02] <int-e> EvanR: want a commemorative screenshot? https://int-e.eu/~bf3/tmp/ER.png ;-)
[09:49:26] <EvanR> through the magic of "stats", by completing the puzzle later than me, you end up doing better xD
[09:49:46] <int-e> oh no, I've leaked my secret identity
[09:50:02] <EvanR> sok I didn't click
[09:51:24] *** Quits: KnifeFire (~Knifefire@120.242.179.19) (Quit: WeeChat 3.0.1)
[09:54:49] <int-e> (it's easy enough to guess anyway :P)
[09:55:01] <g> Are you glguy?
[09:55:51] <int-e> no, glguy is glguy.
[09:56:06] <g> That's probably what he wants you to think!
[09:56:14] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[09:57:02] *** Quits: hornetcluster (~textual@2601:5c0:c280:7e20:5502:4cf:f65e:fd6b) (Quit: Textual IRC Client: www.textualapp.com)
[09:57:05] <g> int-e: do you post solutions online?
[09:57:12] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[09:57:40] <int-e> you don't get 20 questions :P
[09:57:56] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Client Quit)
[09:57:59] <g> How many do I get?
[10:00:19] * xerox commemorates his temporary 9 in there too
[10:01:04] *** Joins: python476 (~user@88.160.31.174)
[10:01:43] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:03:21] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:06:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 245 seconds)
[10:07:36] <EvanR> I posted all my code so far but it's steadily degrades in quality with time
[10:08:33] <EvanR> I went from having it print the answer and having code all tidy to being a hodgepodge of functions that I used half used in the repl with help from a randomly behaving main
[10:09:10] <EvanR> I'm not above mouse copy pasting show output into my code xD
[10:09:57] <EvanR> I still don't know how the 7-segment display code works
[10:11:27] <xerox> I think that was my favorite problem this year so far
[10:11:30] <nshepperd2> most days i have two functions part1 input = ...; part2 input = ... which i call from the repl
[10:12:00] <nshepperd2> needed to compile day 19 for speed though
[10:12:52] <EvanR> I sat there for like 20 minutes waiting for day 19 answers in the repl because I forgot to compile
[10:13:10] <opqdonut> my 19 was 13 secs in ghci
[10:13:16] <opqdonut> 15 was the one I needed to compile
[10:13:29] <opqdonut> probably because I couldn't bother to go full A*
[10:13:41] <EvanR> oh yeah, no idea how that works either
[10:14:00] <EvanR> A* seems pretty mystical
[10:14:02] <opqdonut> (my 19 https://github.com/opqdonut/adventofcode21/blob/master/Day19.hs)
[10:15:36] <EvanR> regularized vector distance, what is this magick
[10:15:56] <opqdonut> it's something I made up on the spot I guess
[10:16:22] <EvanR> I was wondering if there was some kinda correlation junk I never learned that would help
[10:16:36] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[10:16:38] <opqdonut> it's rotation-invariant, and has a bit more "resolution" than just manhattan distance (meaning I get fewer false positives)
[10:17:30] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[10:17:35] <opqdonut> squared euclidean distance might've worked just as well
[10:18:42] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 256 seconds)
[10:20:17] <nshepperd2> oh interesting. i used Linear.Matrix for the rotations
[10:20:49] <nshepperd2> they are all integer matrices with determinant 1
[10:21:29] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:21:35] <opqdonut> I felt matrices are overkill for simple flips and permutations ... but I ended up writing it using dot products anyway
[10:21:40] <EvanR> i used . to build the 24 rotations xD
[10:21:50] <EvanR> rubicks cube style
[10:21:52] <opqdonut> yeah that's pretty good
[10:22:15] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[10:22:58] <EvanR> (Int,Int,Int) probably slowed me down
[10:23:29] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 268 seconds)
[10:23:36] <int-e> I was quite happy with this for rotations: https://paste.debian.net/1224107/
[10:23:56] <EvanR> ah
[10:23:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[10:24:25] <EvanR> I appreciate their clue spoiling how to enumerate the rotations
[10:24:40] <EvanR> that would have taken me a minute
[10:25:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:27:10] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[10:27:24] <int-e> clue, oh they spelled out why there are 24. right.
[10:27:42] <EvanR> and how to get them all
[10:27:44] <int-e> but I knew that :)
[10:28:07] <EvanR> I lost some time opening the octahedral symmetry group wikipedia
[10:28:21] <int-e> heh
[10:29:13] *** Joins: toastloop (toastloop@user/toastloop)
[10:31:18] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[10:35:16] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[10:36:18] <int-e> I have a separate terminal at all times that I can use to compile-and-run in parallel with the bytecode version.
[10:36:57] <int-e> because otherwise I'd have the dilemma of deciding whether the bytecode version is just about to finish
[10:37:17] *** Joins: thevishy (~Nishant@2405:201:f005:c007:48b2:97f1:a252:93a6)
[10:37:43] <EvanR> yeah I just did that
[10:38:07] <EvanR> repl was not instant, began going for the compilable version
[10:38:16] *** Quits: khumba (~khumba@user/khumba) ()
[10:38:26] <EvanR> right before that was ready repl spat out the answer xD
[10:40:05] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[10:42:11] *** Joins: mikoto-chan (~mikoto-ch@nat1.panoulu.net)
[10:44:17] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[10:49:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:52:32] *** Joins: ksqsf (~user@134.209.106.31)
[10:53:17] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[10:53:55] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[11:03:08] <int-e> rotations, less scrutable: https://paste.debian.net/1224141/
[11:06:58] <EvanR> computers, making the obvious incomprehensible since leibniz xD
[11:10:46] <int-e> I think people did group presentations (this is closely related) before computers.
[11:11:31] <EvanR> yeah
[11:11:32] <int-e> though computers made those much more meaningful (because they become practically applicable to larger groups)
[11:12:11] *** Quits: ksqsf (~user@134.209.106.31) (Remote host closed the connection)
[11:15:37] *** Quits: python476 (~user@88.160.31.174) (Ping timeout: 240 seconds)
[11:15:44] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[11:16:24] *** Joins: jakalx (~jakalx@base.jakalx.net)
[11:18:13] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[11:21:43] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[11:23:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[11:27:02] *** Quits: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[11:28:10] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:5002:c5c3:7481:de0c)
[11:30:26] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Remote host closed the connection)
[11:33:57] *** Joins: danso (~danso@d67-193-121-2.home3.cgocable.net)
[11:34:28] *** Joins: Erutuon (~Erutuon@user/erutuon)
[11:36:04] <mjrosenb> Interesting, I saw that there were 24, and didn't actually look beyond that.
[11:36:09] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[11:36:49] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:37:21] *** Joins: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de)
[11:37:21] *** Quits: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de) (Changing host)
[11:37:21] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:37:27] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[11:37:46] <mjrosenb> also, that was yesterday's right? I don't remember seeing any 3d stuff for today's.
[11:38:37] <EvanR> today was 2d
[11:38:50] <EvanR> tomorrow is 5d
[11:40:08] *** Joins: chexum_ (~quassel@gateway/tor-sasl/chexum)
[11:40:18] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[11:40:19] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Quit: No Ping reply in 180 seconds.)
[11:41:57] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::917a) (Ping timeout: 240 seconds)
[11:43:39] *** Quits: jonathanx (~jonathan@c-5eea3642-74736162.cust.telenor.se) (Ping timeout: 268 seconds)
[11:45:50] <nshepperd2> in exchange for the sleigh keys, the grim reaper challenges you to a game of five dimensional chess...
[11:46:28] *** Joins: iqubic (~user@2601:602:9502:c70:c28f:848:f184:6c67)
[11:46:34] <int-e> as long as there's no time travel
[11:47:17] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[11:47:18] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[11:51:57] <EvanR> (wait, a version of chess featuring time travel (other than the mundane "undo" feature))
[11:53:23] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:54:08] <int-e> EvanR: did you miss https://en.wikipedia.org/wiki/5D_Chess_with_Multiverse_Time_Travel (didn't play, saw a few videos, didn't really like what I saw)
[11:54:58] <EvanR> I saw the ad but didn't realize there was timetravel
[11:54:59] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[11:55:06] <int-e> the "time travel" is going back in the game tree and spawning an alternative timeline
[11:55:09] <EvanR> multiverse time travel sounds kind of lame though
[11:55:10] * dminuoso unpacks his TardisT
[11:55:38] <int-e> but the "timelines" interact and its all weird.
[11:55:46] <EvanR> at least have the board contain a closed timelike loop
[11:56:12] <dminuoso> EvanR: I wonder, is that even computable for a chess board?
[11:56:33] <dminuoso> Presumably you'd have to limit backwards time travel to some degree.
[11:57:50] <EvanR> a sequence of moves triggers time travel... and what happens next must eventually be fulfilled like bill and ted
[11:58:27] <EvanR> or maybe at some point all the piece rules are backward
[11:58:56] <EvanR> maybe I should look at 5D chess
[11:59:28] <int-e> EvanR: just don't blame me if it sucks :P
[11:59:39] <int-e> it's still a viable meme though
[12:03:21] <mjrosenb> IIRC, you only need to get checkmate in one timeline, and if you've checked in *a* timeline, then you can't delay getting out of check in that timeline.
[12:04:10] <mjrosenb> anyhow, there's a function in lens that turns a traversal accessing one element into a lens, does anyone remember what it is?
[12:04:21] <int-e> things get wild when pieces cross between timelines
[12:04:50] <int-e> it's just weird though, not interesting, because the complexity arises from comlpex rules
[12:04:53] <dminuoso> mjrosenb: unsafeSingular
[12:05:09] <int-e> (in my opinion, ymmv)
[12:07:33] <mjrosenb> dminuoso: danke (turns out I lied, and I just want to turn a traversal into a getter, and can use singular)
[12:10:45] *** Quits: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk) (Remote host closed the connection)
[12:12:29] *** Joins: cfricke (~cfricke@user/cfricke)
[12:13:24] <EvanR> if a bishop is able to change colors I'm out
[12:14:17] <mjrosenb> I think it can, since the board keeps its parity over time, but the time is part of a bishop's parity?
[12:14:33] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[12:14:37] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:15:02] <iqubic> EvanR: Yeah. Bishops can easily change color
[12:17:39] *** Joins: ksqsf (~user@134.209.106.31)
[12:19:52] *** Joins: acidjnk (~acidjnk@p200300d0c7271e24a8fe310273dd6d48.dip0.t-ipconnect.de)
[12:21:57] <dibblego> @src find
[12:21:57] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[12:21:57] <lambdabot> find p = listToMaybe . filter p
[12:24:59] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:30:37] *** Joins: darchitect (~darchitec@2a00:23c6:3584:df00:7dec:bf13:8fa:748c)
[12:30:40] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[12:30:48] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[12:31:01] *** Quits: shriekingnoise (~shrieking@186.137.144.80) (Quit: Quit)
[12:33:17] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:34:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[12:38:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[12:39:32] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 240 seconds)
[12:40:38] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:40:52] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[12:41:35] *** Joins: cfricke (~cfricke@user/cfricke)
[12:41:37] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[12:41:46] *** Quits: Jing (~hedgehog@2604:a840:3::103b) (Remote host closed the connection)
[12:42:29] *** Joins: Jing (~hedgehog@2604:a840:3::103b)
[12:42:51] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 268 seconds)
[12:43:37] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:46:17] <nshepperd2> "shall a bishop change its stripes?"
[12:47:25] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[12:47:35] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[12:49:52] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[12:50:51] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[12:51:59] *** Joins: jakalx (~jakalx@base.jakalx.net)
[12:53:24] *** Quits: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 256 seconds)
[12:55:28] *** Joins: jle` (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[12:55:55] <int-e> nshepperd2: 🨃 or maybe 🩂🨭🨘?
[12:57:06] <dminuoso> Is there some tool that would help me identify unused extensions?
[12:58:03] <dminuoso> For me the assumption that, if the program compiles without that extension in a module, it's unused is enough - knowing this could harbor some exotic exceptions where removing an extension could alter the program
[12:59:25] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[13:00:14] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[13:05:59] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Quit: WeeChat 2.8)
[13:08:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:11:56] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:13:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:13:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:14:19] <int-e> It's always a bit of a surprise that ghc needs a C++ compiler to built on Linux (because of libffi)
[13:15:47] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[13:19:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 268 seconds)
[13:20:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:21:06] *** Joins: Akiva (~Akiva@user/Akiva)
[13:21:10] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 256 seconds)
[13:22:56] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:24:07] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[13:24:22] *** Joins: joo-_ (~joo-_@87-49-45-77-mobile.dk.customer.tdc.net)
[13:24:22] *** Quits: joo-_ (~joo-_@87-49-45-77-mobile.dk.customer.tdc.net) (Changing host)
[13:24:22] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[13:24:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:24:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:24:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:26:54] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[13:28:15] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Client Quit)
[13:29:02] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-169.elisa-laajakaista.fi)
[13:31:21] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[13:36:57] <Unhammer> bah this ghcid thing also needs constant restarting
[13:37:34] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 260 seconds)
[13:38:12] * Unhammer goes back to while sleep 1; do timeout 30 stack repl; done
[13:38:24] <Hecate> Unhammer: why does it need restarting?
[13:38:31] <Hecate> or rather, what change does it not pick up?
[13:39:57] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[13:41:40] <Unhammer> when I save a file, nothing happens
[13:41:57] <Unhammer> maybe it's that text show pretty error because I have that in my ghci but not installed …
[13:42:42] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[13:42:58] *** Quits: chexum_ (~quassel@gateway/tor-sasl/chexum) (Quit: No Ping reply in 180 seconds.)
[13:44:19] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[13:46:18] *** Joins: jakalx (~jakalx@base.jakalx.net)
[13:46:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[13:47:16] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:48:02] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[13:48:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:49:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:50:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[13:52:58] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[13:54:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:55:17] *** Quits: danso (~danso@d67-193-121-2.home3.cgocable.net) (Ping timeout: 240 seconds)
[13:55:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:56:00] *** Joins: __monty__ (~toonn@user/toonn)
[13:56:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a)
[13:59:42] *** Joins: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7)
[13:59:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[14:01:01] *** Joins: xbreu (~xbreu@2001:470:69fc:105::1:5061)
[14:05:59] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[14:07:33] <mjrosenb> I know that ghcid is really suboptimal for me, since I get about 3 pages worth or warnings every time I save
[14:09:04] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[14:13:13] *** Joins: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net)
[14:13:57] *** Quits: dsp (~dsp@cpc152107-haye27-2-0-cust227.17-4.cable.virginm.net) (Remote host closed the connection)
[14:14:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[14:15:57] *** Quits: mikoto-chan (~mikoto-ch@nat1.panoulu.net) (Quit: mikoto-chan)
[14:16:21] *** Joins: wroathe (~wroathe@user/wroathe)
[14:21:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[14:24:23] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[14:24:39] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[14:27:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[14:28:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[14:31:12] *** Quits: ksqsf (~user@134.209.106.31) (Remote host closed the connection)
[14:33:34] *** Joins: img (~img@user/img)
[14:37:24] *** Quits: ubert (~Thunderbi@p200300ecdf0a5d0bd9ff0243dc33f2a7.dip0.t-ipconnect.de) (Quit: ubert)
[14:39:19] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[14:39:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:43:50] *** Quits: xff0x (~xff0x@2001:1a81:5214:2e00:5b16:4ef1:d67d:4f66) (Ping timeout: 260 seconds)
[14:44:42] *** Joins: xff0x (~xff0x@2001:1a81:5214:2e00:39f0:aaaf:c001:5cae)
[14:44:52] *** Quits: toastloop (toastloop@user/toastloop) (Quit: Leaving)
[14:45:17] *** Quits: ft (~ft@shell.chaostreff-dortmund.de) (Quit: leaving)
[14:45:28] *** Joins: ft (~ft@shell.chaostreff-dortmund.de)
[14:47:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[14:47:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[14:47:09] *** Joins: wroathe (~wroathe@user/wroathe)
[14:49:49] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:50:23] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:52:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:56:03] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 268 seconds)
[14:56:27] *** Joins: Guest57 (~Guest57@82.47.22.49)
[14:57:05] *** Quits: Guest57 (~Guest57@82.47.22.49) (Client Quit)
[14:57:36] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[14:58:23] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[15:02:10] *** Joins: machinedgod (~machinedg@24.105.81.50)
[15:03:10] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:05:58] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[15:06:07] *** Joins: ksqsf (~user@134.209.106.31)
[15:10:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[15:11:02] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[15:11:17] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Ping timeout: 240 seconds)
[15:25:41] *** Joins: polezaivsani (~polezaivs@orangeshoelaces.net)
[15:27:37] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[15:30:37] *** Quits: acidjnk (~acidjnk@p200300d0c7271e24a8fe310273dd6d48.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:34:23] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[15:36:00] <dminuoso> Given a string `x` and another list of strings `zs`, for which I want to find the longest string in `zs`, that happens to be a suffix of x.
[15:36:54] <dminuoso> Now, I need to do this quite often, so Im thinking to build a (maybe patricia) trie from `zs`, and then do a lookup of `x` inside that trie
[15:37:24] <dminuoso> Well not quite lookup, but rather a lookup of the leaf-most suffix
[15:37:34] *** Joins: kranius (~kranius@222.186.245.213.rev.sfr.net)
[15:37:36] <dminuoso> Is there something less convoluted Im missing?
[15:38:08] <dminuoso> uh, and we can pretend this to be prefix too, that's just a matter of calling `reverse`
[15:38:25] *** Joins: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009)
[15:38:58] <dminuoso> in reality Im dealing with lists of texts (call them labels, if you want), so the longest matching tail is what I want
[15:41:43] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:43:24] *** Quits: kranius (~kranius@222.186.245.213.rev.sfr.net) (Ping timeout: 256 seconds)
[15:46:37] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[15:47:18] <Unhammer> mjrosenb yeah same here :/ 
[15:50:02] *** Joins: acidjnk (~acidjnk@p200300d0c7271e24a1571c369919364e.dip0.t-ipconnect.de)
[15:50:30] *** Joins: jonathanx (~jonathan@c-5eea3642-74736162.cust.telenor.se)
[15:51:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:52:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:57:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[15:57:07] *** Quits: jonathanx (~jonathan@c-5eea3642-74736162.cust.telenor.se) (Ping timeout: 268 seconds)
[16:02:23] *** Quits: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7) (Quit: gone to sleep. ZZZzzz…)
[16:04:35] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[16:08:15] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[16:08:21] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Remote host closed the connection)
[16:09:40] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[16:12:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[16:14:17] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:21:50] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:25:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:26:23] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[16:27:30] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[16:28:34] *** Joins: shlomo (~shlomo@128.90.165.9)
[16:30:01] *** Quits: shlomo (~shlomo@128.90.165.9) (Quit: Leaving)
[16:30:14] *** Quits: benin (~benin@183.82.27.121) (Ping timeout: 260 seconds)
[16:31:18] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[16:31:37] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[16:32:52] *** Joins: benin (~benin@183.82.27.121)
[16:33:11] *** Joins: kranius (~kranius@222.186.245.213.rev.sfr.net)
[16:36:08] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[16:37:50] *** Quits: kranius (~kranius@222.186.245.213.rev.sfr.net) (Ping timeout: 252 seconds)
[16:38:11] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[16:40:53] *** Joins: ph88 (~ph88@ip5f5af068.dynamic.kabel-deutschland.de)
[16:43:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[16:43:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[16:43:47] *** Joins: wroathe (~wroathe@user/wroathe)
[16:46:02] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 240 seconds)
[16:47:21] <carbolymer> Damn, Haskell is too smart for me. It tells me that something is a stupid idea right away, and it takes me two days of working around ghc errors to figure this out myself. 
[16:47:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[16:48:10] <yushyin> maybe next time ask here and we might be of help
[16:48:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[16:48:46] <carbolymer> Asking smarter folks for advice is always a good idea
[16:50:09] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[16:52:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:54:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[16:56:37] *** Quits: danso (~danso@2001:1970:52e7:d000:96b8:6dff:feb3:c009) (Ping timeout: 240 seconds)
[16:57:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:57:53] *** Joins: kuribas (~user@ptr-25vy0i760m61zg72p7f.18120a2.ip6.access.telenet.be)
[16:58:31] <ksqsf> b
[16:58:37] <yushyin> then you should not ask me ;)
[16:58:56] <pragma-> ksqsf: that is a fine letter
[16:59:40] *** Joins: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de)
[17:00:39] *** Joins: danso (~danso@d67-193-121-2.home3.cgocable.net)
[17:02:18] *** Joins: jkaye (~jkaye@2601:281:8300:7530:6566:3224:cc66:3345)
[17:02:53] *** Quits: pretty_dumm_guy (~trottel@eduroam-134-96-204-6.uni-saarland.de) (Client Quit)
[17:08:32] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[17:12:57] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[17:14:56] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:15:40] *** Joins: Vajb (~Vajb@2001:999:62:f3d1:4390:fbed:1f9b:9d03)
[17:22:23] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[17:29:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[17:35:41] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:36:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:36:58] *** Joins: shriekingnoise (~shrieking@186.137.144.80)
[17:37:18] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[17:47:15] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[17:53:13] *** Quits: kuribas (~user@ptr-25vy0i760m61zg72p7f.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[17:56:02] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[17:58:32] <tomsmeding> dminuoso: sort the list `zs` and lookup x in that sorted list, potentially by binary search?
[17:58:44] <tomsmeding> you won't find a match, but you'll end up next to the best match
[17:59:15] <tomsmeding> (with lexicographical ordering and search)
[18:01:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:01:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:01:16] *** Joins: wroathe (~wroathe@user/wroathe)
[18:02:16] <tomsmeding> (in reversed form -- naively this does prefix searching of course)
[18:02:36] *** Joins: kranius (~kranius@146.133.22.93.rev.sfr.net)
[18:04:00] *** Joins: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7)
[18:07:37] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[18:14:02] *** Quits: kranius (~kranius@146.133.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[18:15:00] *** Joins: kranius (~kranius@44.149.22.93.rev.sfr.net)
[18:15:55] *** tristanC_ is now known as tristanC
[18:18:17] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[18:20:02] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Quit: Leaving)
[18:20:54] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[18:21:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:27:14] *** Joins: slaydr (~seriley@45.131.194.254)
[18:29:12] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[18:29:41] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:32:17] *** Quits: kranius (~kranius@44.149.22.93.rev.sfr.net) (Ping timeout: 240 seconds)
[18:33:37] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[18:34:18] *** Joins: wolfshappen (~waff@irc.furworks.de)
[18:35:06] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[18:36:57] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:995c:e86e:470c:8a37) (Ping timeout: 240 seconds)
[18:39:17] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[18:40:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:41:14] *** Joins: zebrag (~chris@user/zebrag)
[18:46:12] *** Quits: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7) (Quit: gone to sleep. ZZZzzz…)
[18:46:32] *** Joins: euouae (~euouae@user/euouae)
[18:50:13] *** Joins: hornetcluster (~textual@2601:5c0:c280:7e20:5502:4cf:f65e:fd6b)
[18:51:03] *** Quits: hornetcluster (~textual@2601:5c0:c280:7e20:5502:4cf:f65e:fd6b) (Client Quit)
[18:51:33] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d)
[18:51:37] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 268 seconds)
[18:52:36] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[18:52:36] *** Quits: Vajb (~Vajb@2001:999:62:f3d1:4390:fbed:1f9b:9d03) (Read error: Connection reset by peer)
[18:53:39] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[18:55:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:7cf1:85e9:3000:4f4d) (Ping timeout: 240 seconds)
[18:56:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[18:57:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:57:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:57:04] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:58:25] *** Joins: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7)
[18:58:52] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:01:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:08:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:10:47] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[19:12:37] *** Quits: EvanR (~evan@user/evanr) (Ping timeout: 240 seconds)
[19:15:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:16:36] *** Joins: ksqsf (~user@134.209.106.31)
[19:17:04] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:18:35] *** Joins: coot (~coot@2a02:a310:e03f:8500:7248:52ac:817b:7fb4)
[19:19:59] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:5002:c5c3:7481:de0c) (Quit: WeeChat 2.8)
[19:20:19] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[19:21:14] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[19:21:34] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 256 seconds)
[19:21:46] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[19:27:37] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[19:27:51] *** Quits: acidjnk (~acidjnk@p200300d0c7271e24a1571c369919364e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[19:28:35] <timCF> Hello! Is there something similar to ~ function constraint, but for type parametrer non-equality?
[19:28:45] <Arsen> can Data.Yaml (from yaml) load an object like {"a": "b", "c": "d"} into a simple hashmap?
[19:28:52] <Arsen> I am simply storing key-value pairs
[19:29:55] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[19:30:07] <geekosaur> timCF, no. equality can be done directly in the typechecker, but non-equality requires a type witness
[19:30:12] *** Quits: the-coot[m] (~the-cootm@2001:470:69fc:105::95f) (Quit: You have been kicked for being idle)
[19:32:15] <timCF> geekosaur: thanks!
[19:33:04] *** Joins: ksqsf (~user@134.209.106.31)
[19:36:32] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[19:36:40] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:37:44] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41)
[19:38:26] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[19:40:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:6566:3224:cc66:3345) (Ping timeout: 240 seconds)
[19:41:56] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:42:29] *** Quits: timCF (~timCF@m91-129-100-224.cust.tele2.ee) (Quit: leaving)
[19:45:34] *** Joins: max22- (~maxime@2a01cb0883359800306516e9c6b993f0.ipv6.abo.wanadoo.fr)
[19:47:42] *** Quits: coot (~coot@2a02:a310:e03f:8500:7248:52ac:817b:7fb4) (Quit: coot)
[19:51:34] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[19:52:32] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:52:49] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:54:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:56:10] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[19:56:15] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[19:56:40] *** Quits: neverfindme (~hayden@158.123.160.43) (Client Quit)
[19:58:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[19:58:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[19:59:11] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[20:00:17] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[20:00:26] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[20:01:34] *** Joins: earendel (uid498179@user/earendel)
[20:04:15] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[20:04:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[20:05:12] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 256 seconds)
[20:05:17] *** Joins: jakalx (~jakalx@base.jakalx.net)
[20:07:45] *** Joins: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[20:09:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:09:57] *** Quits: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[20:10:11] *** Quits: awpr (uid446117@id-446117.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:12:52] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[20:13:34] *** earendel is now known as disfrutar-conchi
[20:13:42] *** Joins: emf (~emf@2603-6080-9403-11bf-1471-5d14-4db5-bab4.res6.spectrum.com)
[20:17:44] <monochrom> Very late to the 5D Chess with multiverse time travel conversation, but consider Tenet Chess, too. >:)
[20:17:57] *** Quits: emf (~emf@2603-6080-9403-11bf-1471-5d14-4db5-bab4.res6.spectrum.com) (Ping timeout: 240 seconds)
[20:18:33] *** Joins: emf_ (~emf@2620:10d:c091:480::1:4a0)
[20:18:33] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:18:52] <Hecate> monochrom: NO
[20:18:54] <Hecate> :<
[20:18:58] <Hecate> it hurts my brain :(
[20:20:20] <janus> does it make sense to have 'seq x x' ? hlint has a warning about it
[20:20:27] <monochrom> It doesn't.
[20:21:13] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[20:21:24] <janus> is it because the x would be exactly evaluated when the seq is reached, and that is also the case when the seq is there?
[20:21:25] <monochrom> "Yo dawg I heard you like forcing so I force x while you force x."
[20:21:49] <monochrom> Yeah, it's redundant, repetitive, idempotent.
[20:22:56] <monochrom> See also my http://www.vex.net/~trebla/humour/tautologies.html #6 :)
[20:27:27] <c_wraith> janus: seq isn't magic. laziness still applies. It ties the evaluation of two values together, but that only does anything when it's actually demanded
[20:28:52] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[20:29:23] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 252 seconds)
[20:29:56] <janus> right. i guess my confusion is of how it is often explained with 'evaluation' but i like the explanation on the haskell wiki more, which also talks about data dependency
[20:30:38] <janus> it even mentions this exact example https://wiki.haskell.org/Seq
[20:31:13] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[20:34:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[20:34:46] *** Joins: zaquest (~notzaques@5.130.79.72)
[20:35:44] *** Quits: thevishy (~Nishant@2405:201:f005:c007:48b2:97f1:a252:93a6) (Quit: Leaving)
[20:37:27] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:37:49] <c_wraith> most notably, "seq x y" is mostly useful when x is some substructure of y that isn't evaluated when y is, but you want it to be.
[20:40:44] <c_wraith> for instance, there's an idiom "iterate f x !! n" for applying the function f to the value x, n times. But it works really suboptimally when n is large.
[20:42:29] <c_wraith> because (!!) forces evaluation of the (:) constructors in the list resulting from iterate, but nothing else.  This means you get a huge nested series of applications of f in memory, each one as a thunk taking up memory in a manner that's useless for any strict function f
[20:44:50] <c_wraith> more recent version of base have added a new function, iterate', which resolves this issue for strict f. it uses seq to tie together evaluation of the (:) constructor with its first argument.
[20:45:35] <c_wraith> This means that when you just traverse the spine of the list with (!!), it's still evaluating the values stored in the list along the way, preventing a buildup of thunks
[20:45:43] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[20:47:24] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[20:48:36] *** Joins: burnsidesLlama (~burnsides@dhcp168-011.wadham.ox.ac.uk)
[20:48:37] <c_wraith> Do note that this isn't the complete story, though. There are a lot of ways you could write the value for f such that it will always leak space.  And if f makes use of productive laziness, neither iterate nor iterate' is a good way to apply it repeatedly.
[20:49:36] *** Quits: mbuf (~Shakthi@223.178.83.73) (Quit: Leaving)
[20:50:27] *** Joins: img (~img@user/img)
[20:53:24] <euouae> I don't understand why `iterate f x !! n` is bad for large n
[20:54:29] *** Joins: jkaye (~jkaye@2601:281:8300:7530:bdb2:1444:46f4:adc7)
[20:54:39] <euouae> when the final cons cell is reached, it's a big series of thunks, each one application of f? is that why? As opposed to evaluating f and then caching the result when iterating the list?
[20:54:58] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[20:55:54] <c_wraith> yep.  "iterate f x !! n" is always going to generate n nested applications of f before any of them is evaluated
[20:55:56] <geekosaur> right, rather than caching it just points to the previous thunk
[20:59:16] <euouae> okay, thanks
[20:59:32] <c_wraith> if n is small or f doesn't close over anything, that might not be a big deal
[21:00:41] <c_wraith> Hmm.  f is shared.  if it's a huge closure that's only constant extra space, I suppose.  So really, it's just the size of n that matters.
[21:02:34] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[21:02:36] <c_wraith> But it's notable that large chains of thunks can have surprising performance impacts.  They can cause drag in the garbage collector which actually makes program performance asymptotically worse in certain cases.
[21:02:54] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[21:03:22] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:04:01] *** Quits: pfurla (~pfurla@2804:d41:4331:4800:11e0:2623:c59:6cb7) (Quit: gone to sleep. ZZZzzz…)
[21:04:11] *** Quits: qrpnxz (~qrpnxz@user/qrpnxz) (Quit: Gateway shutdown)
[21:07:39] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[21:11:19] *** Quits: max22- (~maxime@2a01cb0883359800306516e9c6b993f0.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:12:13] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[21:15:48] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[21:16:38] *** Joins: mvk (~mvk@2607:fea8:5cdd:f000::917a)
[21:17:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:17:57] *** Joins: jakalx (~jakalx@base.jakalx.net)
[21:21:32] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[21:22:37] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:25:57] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[21:26:13] <dminuoso> tomsmeding: Yeah I thought about it as well
[21:26:31] <dminuoso> tomsmeding: I think Ill just go with a simple nested map as a non-patricia trie
[21:26:39] <dminuoso> the implementation is very straight forward
[21:27:12] <dminuoso> https://gist.github.com/dminuoso/41d18409f95b98963df7bdff681ecdbd
[21:27:33] <dminuoso> Construction is somewhat inefficient, but that's acceptable to me.
[21:28:24] <euouae> add some comments :P 
[21:28:58] <dminuoso> With `newtype DomTable = DomTable (M.Map T.Text DomTable) deriving Show`
[21:29:00] <dminuoso> Of course
[21:29:18] <tomsmeding> oh right, just a nested tree of Maps
[21:29:53] <dminuoso> Thing though is, Id really like this to be a patricia trie
[21:30:23] * tomsmeding doesn't know how patricia trees work
[21:30:36] <dminuoso> It's simply a trie in which single branches get coalesced/merged
[21:30:46] <tomsmeding> ah
[21:31:05] <tomsmeding> does that happen lots of times in your case?
[21:31:06] <dminuoso> i.e. when storing a string, you dont store characters separately, so when you have `foo` and `fob`, the root would start with `fo`
[21:33:23] *** Joins: econo (uid147250@user/econo)
[21:33:53] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[21:34:10] <tomsmeding> https://hackage.haskell.org/package/list-tries exists, but not sure if you want a dependency for this
[21:34:35] <dminuoso> I dont think a generic trie implementation can realistically work
[21:34:39] <tomsmeding> probably best to go with the nested maps tree unless it becomes a performance liability
[21:34:42] <dminuoso> yeah
[21:34:52] <dminuoso> I mean this is not really out of performance concerns
[21:34:58] <dminuoso> This is just CS golfing, if you want.
[21:35:06] <tomsmeding> I like that term
[21:35:14] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[21:35:35] <tomsmeding> though I still kind of like my original idea
[21:35:59] <dminuoso> It's still linear in lookup though
[21:36:12] <dminuoso> And realistically, the data will not be nicely averaged
[21:37:04] <tomsmeding> what if you take newtype DomTable = DomTable (Set [T.Text]), and for lookup, use Set.lookupLE to get the longest matching prefix
[21:37:09] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:37:16] <tomsmeding> I think that should work
[21:37:21] <tomsmeding> there's a lot of duplication in the keys though
[21:37:34] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[21:37:34] <dminuoso> Uh how would that even work?
[21:37:59] <dminuoso> It certainly wouldnt work with the regular Ord instance
[21:38:03] <dminuoso> Note:
[21:38:06] <tomsmeding> table = DomTable (Set.fromList [["com", "google", "maps"], ["com", "tomsmeding", "paste"]])
[21:38:21] <dminuoso> Find largest key _smaller or equal_ to the given one
[21:38:29] <tomsmeding> yeah, lexicographically
[21:38:44] <tomsmeding> if it finds an equal key, then that's obviously the longest prefix
[21:39:07] <tomsmeding> it there isn't an equal key, then the longest matching prefix is certainly going to be <= your lookup domain
[21:39:26] <dminuoso> Im genuinely curious now
[21:39:27] <tomsmeding> and if there is another item in the set in between, then that can only be a longer prefix -- contradiction
[21:39:50] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:39:56] * tomsmeding might be rambling
[21:40:08] <dminuoso> % sort $ [["foo", "bar", "quux", "baz"], ["google", "maps"], ["com", "tomsmeding", "paste"]]
[21:40:08] <yahb> dminuoso: [["com","tomsmeding","paste"],["foo","bar","quux","baz"],["google","maps"]]
[21:40:19] <disfrutar-conchi> maybe some levensthein derivatation could help
[21:40:39] <tomsmeding> % sort $ [["foo", "bar", "quux", "baz"], ["google", "maps"], ["com", "tomsmeding", "paste"], ["google", "images"]]
[21:40:39] <yahb> tomsmeding: [["com","tomsmeding","paste"],["foo","bar","quux","baz"],["google","images"],["google","maps"]]
[21:40:41] *** Joins: Akiva (~Akiva@user/Akiva)
[21:40:53] <dminuoso> tomsmeding: How would `["www", "google", "maps"]` ever be smaller or equal than only ["google", "maps"] here?
[21:41:09] <tomsmeding> I'm talking about _prefix_ matching here
[21:41:18] <tomsmeding> if you want suffix matching, you'll have to reverse everything :p
[21:41:35] <dminuoso> tomsmeding: Sure, lets just pretend we're on the same level with prefix/suffix here.
[21:41:43] <disfrutar-conchi> string matching.
[21:41:49] <dminuoso> oh hold on.
[21:41:51] <dminuoso> mmm
[21:42:17] <dminuoso> % s = Data.Set.fromList = [["foo", "bar", "quux", "baz"], ["google", "maps"], ["com", "tomsmeding", "paste"], ["google", "images"]]
[21:42:17] <yahb> dminuoso: ; <interactive>:205:23: error: parse error on input `='
[21:42:22] <dminuoso> % s = Data.Set.fromList [["foo", "bar", "quux", "baz"], ["google", "maps"], ["com", "tomsmeding", "paste"], ["google", "images"]]
[21:42:22] <yahb> dminuoso: 
[21:42:30] <tomsmeding> % S.lookupLE ["com", "google", "images"] (S.fromList [["com", "google", "docs"], ["com", "google", "maps"]])
[21:42:30] <yahb> tomsmeding: Just ["com","google","docs"]
[21:42:41] <tomsmeding> oh I'm dumb
[21:42:44] <dminuoso> Yeah that looks borked.
[21:42:53] <tomsmeding> % S.lookupLE ["com", "google", "images"] (S.fromList [["com", "google", "docs"], ["com", "google", "maps"], ["com"]])
[21:42:54] <yahb> tomsmeding: Just ["com","google","docs"]
[21:42:58] <tomsmeding> here you want the ["com"]
[21:43:06] <dminuoso> But that's the thing
[21:43:07] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[21:43:17] <dminuoso> % S.lookupLE ["foo"] (S.fromList [["com", "google", "docs"], ["com", "google", "maps"], ["com"]])
[21:43:17] <yahb> dminuoso: Just ["com","google","maps"]
[21:43:25] <dminuoso> No this will not work for what I do
[21:43:28] <tomsmeding> my idea only works if there are no two items in the set that are prefixes of each other lol
[21:43:31] <tomsmeding> which is not helpful for you
[21:43:33] <dminuoso> Yeah
[21:43:53] <dminuoso> And it assumes that the queried domain has some matching suffix in there
[21:43:59] <tomsmeding> the idea was the whole time that you should double-check if the result of lookupLE is indeed a prefix
[21:44:01] <dminuoso> If it doesnt, it gives junk back
[21:44:04] <tomsmeding> yeah
[21:44:21] <dminuoso> I think I might do
[21:44:35] <tomsmeding> but can your map-tree distinguish between [["com", "google"]] and [["com", "google"], ["com"]] ?
[21:44:37] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[21:44:51] <dminuoso> My original one?
[21:44:54] <tomsmeding> yeah
[21:44:59] <tomsmeding> https://gist.github.com/dminuoso/41d18409f95b98963df7bdff681ecdbd
[21:45:00] <dminuoso> Yes
[21:45:06] <dminuoso> Try it out
[21:45:24] <dminuoso> tomsmeding: basically *because* its a trie.
[21:45:31] <dminuoso> tomsmeding: the former gets turned into the latter, so to speak
[21:45:52] <dminuoso> let chain = foldr (\x t -> DomTable (M.singleton x t)) (DomTable M.empty) xs          in DomTable (M.insert x chain table)
[21:46:33] *** Joins: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net)
[21:46:37] <tomsmeding> 19:15 <dminuoso> tomsmeding: the former gets turned into the latter, so to speak
[21:46:43] <tomsmeding> okay so it _can't_ distinguish? :p
[21:47:13] <dminuoso> Oh sorry, no it cant
[21:47:18] <dminuoso> I see your point.
[21:47:26] <dminuoso> And that's actually a valid one.
[21:47:28] <dminuoso> Mmm.
[21:47:37] <euouae> and finally the peano encoding was useful for something
[21:47:47] <tomsmeding> in an actual Trie, there's a boolean tag on each node indicating whether this prefix is actually in the trie
[21:47:59] <tomsmeding> euouae: peano encoding?
[21:48:01] <dminuoso> dont degrade my trie now :(
[21:48:06] <tomsmeding> lol
[21:48:10] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[21:48:18] <euouae> tomsmeding in set theory the successor of a set n is {n, {n}}
[21:48:44] <euouae> I wouldn't say this is exactly the situation here but it looks like [[x], [x,y]]. Maybe just ignore me :P
[21:48:47] <dminuoso> tomsmeding: I guess in most tries you dont because you only care about finding leafs.
[21:49:02] <dminuoso> and then it doesnt matter
[21:49:07] <tomsmeding> euouae: but then the next step, here, would be [[x], [x,y], [x,y,z]] ;)
[21:49:29] <tomsmeding> dminuoso: do you? I learned a trie as a data structure for a set of strings, I think
[21:49:54] <tomsmeding> in which case, if you want to represent {"fo", "foo"}, you'll need to have a False tag on the f node and True tags on both o nodes
[21:50:19] <monochrom> I though {n, {n}} was von Neumann's.
[21:50:39] <tomsmeding> dminuoso: longestSuffix (Domain ["com", "tomsmeding"]) (insert (Domain ["com", "google"]) (insert (Domain ["com"]) emptyDomTable)) == Nothing
[21:50:41] <tomsmeding> is that expected?
[21:50:47] *** Quits: yauhsien (~yauhsien@61-231-38-209.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[21:50:54] <tomsmeding> or is this precisely the thing we're taling about
[21:51:00] <euouae> monochrom oh yeah, thanks, I was trying to look up the actual name of the person who thought of it, 
[21:51:40] <euouae> monochrom now my statement is even sillier "One of von Neumann's creations was _finally_ useful..." 
[21:52:24] *** Quits: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net) (Quit: WeeChat 3.3)
[21:52:56] *** Joins: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de)
[21:52:56] *** Quits: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de) (Changing host)
[21:52:56] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:55:06] <tomsmeding> dminuoso: oh I mixed up prefix and suffix again
[21:56:54] *** Quits: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp) (Remote host closed the connection)
[21:57:08] *** Joins: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp)
[21:57:38] <c_wraith> that's not complicated enough. let's say invent infix tries!
[21:58:22] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:58:37] *** Quits: emf_ (~emf@2620:10d:c091:480::1:4a0) (Ping timeout: 240 seconds)
[21:59:06] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[21:59:09] *** Joins: emf (~emf@2620:10d:c091:480::1:4a0)
[21:59:26] <tomsmeding> dminuoso: https://paste.tomsmeding.com/8x6WH4dX  I _think_ this implements the boolean tags I mentioned
[21:59:29] *** Joins: dschrempf (~dominik@070-207.dynamic.dsl.fonira.net)
[21:59:49] <tomsmeding> the <|> ensures that if the search fails later, then we still return this prefix (in go) that did match
[22:00:01] <tomsmeding> but only if the tag is True, which is when this prefix is indeed in the tree
[22:00:16] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[22:01:56] *** Joins: python476 (~user@88.160.31.174)
[22:02:06] *** Quits: benin (~benin@183.82.27.121) (Quit: The Lounge - https://thelounge.chat)
[22:02:17] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 240 seconds)
[22:02:29] *** Joins: xkuru (~xkuru@user/xkuru)
[22:03:30] <tomsmeding> (if you wish my contribution to the code is public domain :p )
[22:04:02] <tomsmeding> (but you probably want to rewrite it in a neater way anyway, heh)
[22:06:50] *** Joins: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de)
[22:06:50] *** Quits: neurocyte0132889 (~neurocyte@IP-045136168122.dynamic.medianet-world.de) (Changing host)
[22:06:50] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[22:08:44] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Ping timeout: 256 seconds)
[22:08:50] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:09:37] *** Quits: emf (~emf@2620:10d:c091:480::1:4a0) (Ping timeout: 240 seconds)
[22:14:11] *** Joins: deadmarshal (~deadmarsh@95.38.230.107)
[22:15:40] *** Joins: EvanR (~EvanR@user/evanr)
[22:22:19] *** Joins: doyougnu (~doyougnu@c-73-25-202-122.hsd1.or.comcast.net)
[22:30:47] *** Quits: EvanR (~EvanR@user/evanr) (Quit: Leaving)
[22:30:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:30:56] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[22:31:21] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[22:31:42] *** Joins: EvanR (~EvanR@user/evanr)
[22:33:02] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[22:33:38] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:38:45] *** Joins: tcard_ (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp)
[22:38:57] *** Quits: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp) (Ping timeout: 240 seconds)
[22:39:20] *** Quits: deadmarshal (~deadmarsh@95.38.230.107) (Ping timeout: 256 seconds)
[22:39:47] *** Joins: kranius (~kranius@162.19.149.77.rev.sfr.net)
[22:41:19] <zero> say we have an infinite tree where each node is a calculation on the parent node. if we run an initial bfs to evaluate all nodes up to a depth of n, will running it a second time to n+1 benefit from the former evaluation?
[22:42:31] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:42:43] <zero> in another words, is this a valid model for memoization?
[22:43:25] *** Joins: ridcully_ (~ridcully@pd951f824.dip0.t-ipconnect.de)
[22:44:31] *** Quits: ridcully (~ridcully@p508ac9bf.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[22:45:52] <dsal> It depends on how the calculations are stored.
[22:46:18] <dsal> If they're thunks and you're evaluating them, then it should help 
[22:46:58] <dsal> It's not going to add new storage facilities for you, though.
[22:48:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:48:40] <zero> i'm not sure what is meant by that
[22:49:41] <disfrutar-conchi> did u mean storage factories? :p 
[22:50:21] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:53:01] <zero> data Tree a = Node a (Tree a) (Tree a) ; tree n = Node n (tree $ n+2) (tree $ n*2)
[22:53:17] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[22:53:35] *** Joins: son0p (~ff@181.136.122.143)
[22:53:40] <euouae> zero: how is your tree example different than a list?
[22:53:59] <euouae> after all a path from root to node in your tree is like a list
[22:54:20] <euouae> so it seems that you can recast the question on a list (which is a simpler model) instead
[22:55:16] <tomsmeding> zero: if you construct an infinite tree which you then evaluate up to a certain depth, that evaluation will create that prefix of the tree in memory
[22:55:36] <tomsmeding> so if you keep hold of the data structure, the next evaluation will just read the results of the previous evaluation from memory
[22:56:05] <tomsmeding> but it won't memoise automatically -- you have to explicitly keep the same datastructure and not construct a new one (watch out for polymorphism)
[22:56:53] <EvanR> imagine the result of a breadth first traversal is a boring list of nodes, or list of list of nodes in a level. Then everything you know about lists now applies
[22:57:48] <disfrutar-conchi> every hash is binary tree .. and by thus quick to look up. 
[22:57:59] <EvanR> :thonk:
[22:58:38] <tomsmeding> zero: note that if you evaluate up to depth n+1, then the _new_ stuff you're evaluating is 2^(n+1) nodes, but the whole tree up until now (levels 0 through n) contains 2^(n+1)-1 nodes. So you're only saving half the work. This factor (1/2) decreases if the branching factor of your tree increases
[22:58:52] <tomsmeding> so in case the branching factor is >2, re-evaluate whether it's worthwhile to cache results :)
[22:59:19] <zero> yes
[23:01:25] <euouae> in this case you can probably have a formula that translates a tree node to the immediate calculation
[23:02:04] <tomsmeding> (potentially related search keyword, but you're probably already aware of this: iterative-deepening depth-first search)
[23:04:46] *** Quits: kranius (~kranius@162.19.149.77.rev.sfr.net) (Changing host)
[23:04:46] *** Joins: kranius (~kranius@user/kranius)
[23:05:04] *** Quits: kranius (~kranius@user/kranius) (Quit: leaving)
[23:05:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:13:38] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[23:15:49] *** Joins: max22- (~maxime@2a01cb0883359800b82a50c14ca08cd9.ipv6.abo.wanadoo.fr)
[23:15:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:17:57] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 240 seconds)
[23:19:07] *** Joins: emf (~emf@2620:10d:c091:480::1:8fa6)
[23:19:28] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:19:45] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[23:22:21] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.3)
[23:23:57] *** Quits: emf (~emf@2620:10d:c091:480::1:8fa6) (Ping timeout: 240 seconds)
[23:27:13] *** Joins: emf (~emf@2620:10d:c091:480::1:8fa6)
[23:28:06] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[23:28:51] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:29:46] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[23:30:21] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:32:02] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[23:32:02] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[23:32:28] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[23:33:00] *** Joins: kranius (~kranius@user/kranius)
[23:33:16] *** Quits: iteratee_ (~kyle@162.218.222.107) (Read error: Connection reset by peer)
[23:33:22] *** Quits: samhh (7569f027cf@2604:bf00:561:2000::e4) (Read error: Connection reset by peer)
[23:33:26] *** Joins: iteratee (~kyle@162.218.222.107)
[23:33:29] *** Joins: samhh_ (7569f027cf@2604:bf00:561:2000::e4)
[23:33:36] <gentauro> `GHC-9.0.1` -> `I don't know how to install GHC for (OSX,AArch64), please install manually` xD
[23:33:44] *** samhh_ is now known as samhh
[23:34:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:34:44] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:35:01] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 240 seconds)
[23:35:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:35:54] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[23:37:40] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:22] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:38:38] *** Joins: machinedgod (~machinedg@24.105.81.50)
[23:40:07] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[23:40:40] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[23:41:38] <geekosaur> I think 9.0.1 doesn't suupport that platform, only 8.10.7 and 9.2.1
[23:41:47] <geekosaur> the release schedule went kinda weird there
[23:42:24] *** Joins: jeffz` (~user@lambda.xen.prgmr.com)
[23:42:26] <geekosaur> (in particular 8.10 should really have been considered closed to new features, but got extended specifically for mac aarch64)
[23:43:49] *** Quits: jeffz (~user@lambda.xen.prgmr.com) (Ping timeout: 256 seconds)
[23:45:04] *** Quits: polezaivsani (~polezaivs@orangeshoelaces.net) (Ping timeout: 256 seconds)
[23:45:55] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807)
[23:46:07] *** Quits: tromp (~textual@dhcp-077-249-230-040.chello.nl) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:46:08] *** Joins: polezaivsani (~polezaivs@orangeshoelaces.net)
[23:46:46] *** Quits: superbil (~superbil@1-34-176-171.hinet-ip.hinet.net) (Ping timeout: 256 seconds)
[23:47:34] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:48:54] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:bdb9:8c5f:3085:2807) (Remote host closed the connection)
[23:49:45] *** Joins: ksqsf (~user@134.209.106.31)
[23:51:58] *** Joins: tromp (~textual@dhcp-077-249-230-040.chello.nl)
[23:53:06] *** Quits: polezaivsani (~polezaivs@orangeshoelaces.net) (Ping timeout: 260 seconds)
[23:54:36] *** Quits: ksqsf (~user@134.209.106.31) (Ping timeout: 240 seconds)
[23:56:41] <EvanR> i see java has a nextUp :: Double -> Double math utility which increases a float by 1 ULP. Can haskell do it? (lambdabot gimme something)
[23:58:38] <gentauro> geekosaur: nighly on `stack` points to `9.0.1`
[23:58:39] <gentauro> hmmmm
[23:58:54] <tomsmeding> % unsafeCoerce (unsafeCoerce (42.0 :: Double) + 1 :: Int) :: Double  -- EvanR
[23:58:54] <yahb> tomsmeding: 42.00000000000001
[23:59:05] <EvanR> lol
[23:59:31] *** Joins: superbil (~superbil@1-34-176-171.hinet-ip.hinet.net)
[23:59:33] * EvanR gives tomsmeding's beer back
[23:59:44] <tomsmeding> :D
