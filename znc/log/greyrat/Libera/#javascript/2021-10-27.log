[00:00:01] <ljharb> yeah on it
[00:00:04] <stenno> er grammar
[00:00:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:00:22] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[00:00:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:23] <kalen> what is that hashtag stuff in those js expressions?
[00:01:39] <ljharb> kalen: records and tuples
[00:01:44] <kalen> some sort of bot thing, i assume?
[00:03:01] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[00:03:06] <ljharb> kalen: it's a language proposal
[00:03:19] <kalen> i see
[00:03:30] <kalen> and the bot supports it?
[00:04:36] <kalen> b> 1
[00:04:40] <kalen> how does the bot work, btw? how do i run a js expression in here
[00:05:14] *** Joins: incognito (~relativit@user/incognito)
[00:05:46] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 258 seconds)
[00:07:03] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:09:28] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[00:09:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[00:10:16] <ljharb> kalen: the bot supports it but the bot is under maintenance right now.
[00:11:28] <prussian> rip
[00:12:00] *** Joins: delvx (~arek@77.252.63.98)
[00:12:51] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[00:12:51] *** ChanServ sets mode: +v jellobot
[00:12:53] <kalen> is there a way to run node to get that particular experimental language feature? or does it require some special build
[00:13:21] <ljharb> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]])
[00:13:25] <jellobot> (okay) Tuple { '0': 1, '1': 2, '2': 3, '3': 4, '4': 5, '5': Tuple { '0': 6 } }
[00:13:25] <ljharb> kalen: there is not
[00:13:29] <ljharb> b> #[1, 2].concat(3, #[4, 5], #[], #[#[6]]) @ stenno
[00:13:31] <ljharb> there we go
[00:13:32] <jellobot> stenno, Tuple { '0': 1, '1': 2, '2': 3, '3': 4, '4': 5, '5': Tuple { '0': 6 } }
[00:13:35] <kalen> b> 1
[00:13:37] <jellobot> (okay) 1
[00:13:48] <kalen> cool
[00:14:00] <kalen> does it support imports?
[00:14:05] <kalen> or require() even
[00:14:26] <ljharb> it supports requiring whatever's there
[00:14:30] <ljharb> not the entire npm registry
[00:14:47] <kalen> b> path.parse('/foo/bar.txt')
[00:14:47] <jellobot> (okay) { root: '/', dir: '/foo', base: 'bar.txt', ext: '.txt', name: 'bar' }
[00:14:59] <stenno> ljharb: nice! thanks for fixing
[00:15:06] *** Quits: snedd (~snedd@86.14.114.137) (Ping timeout: 245 seconds)
[00:15:21] <ljharb> apparently docker just LOVES to cache shit
[00:15:34] <ljharb> but i slapped it around a bit with `--no-cache` and now it's behaving
[00:15:55] <kalen> tough love
[00:24:47] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:26:00] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[00:28:13] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[00:29:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:30:06] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[00:33:54] *** Quits: Junxter (~Junxter@121.237.60.100) (Ping timeout: 260 seconds)
[00:34:36] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[00:43:47] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[00:44:31] <matsaman> rm solves my docker problems
[00:46:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:46:40] *** Quits: konrados (~konrados@user-5-173-144-8.play-internet.pl) (Remote host closed the connection)
[00:47:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Quit: Client closed)
[00:48:32] *** Joins: onr (~onr@user/onr)
[00:51:19] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[00:54:19] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[00:54:52] <jaawerth> ljharb: there is not? this isn't just some custom babel transform that's using your polyflil for the builtins?
[00:55:25] *** Quits: federico_it (~textual@176.206.87.127) (Quit: Textual IRC Client: www.textualapp.com)
[00:55:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:58:16] <ljharb> jaawerth: i mean yes, it's a babel transform plus a polyfill, but that's not an easy thing to set up node to run
[00:58:23] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Client Quit)
[00:58:27] <ljharb> kalen: so ^ it's possible but you shouldn't do it before stage 3 for anything
[00:58:55] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:59:35] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Ping timeout: 256 seconds)
[01:00:12] *** Joins: delvx (~arek@77.252.63.98)
[01:01:23] *** Joins: pluri (~pluri@user/pluri)
[01:01:35] *** Quits: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[01:02:28] *** Joins: incognito (~relativit@user/incognito)
[01:02:47] *** Quits: thojanssens__ (~thojansse@ptr-178-51-118-44.dyn.mobistar.be) (Ping timeout: 264 seconds)
[01:04:51] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[01:05:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:06:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:11:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:12:38] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 260 seconds)
[01:13:21] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[01:16:36] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[01:24:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:26:00] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[01:26:13] *** Joins: delvx (~arek@77.252.63.98)
[01:27:16] *** Joins: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net)
[01:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:59] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:31:55] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[01:32:09] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Quit: junktext)
[01:34:04] *** Joins: kogepan (~kogepan@user/kogepan)
[01:34:43] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:34:45] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:8dca:684c:b919:1b00)
[01:35:06] *** Quits: Cyp (~cyp@213.237.87.7) (Ping timeout: 245 seconds)
[01:36:15] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[01:38:25] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[01:39:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:39:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:39:48] *** Joins: wroathe (~wroathe@user/wroathe)
[01:39:53] <hassoon> Introduce yourself briefly, then tell us about a feature that was challenging to build.
[01:39:55] *** Joins: noarb (~noarb@user/noarb)
[01:39:56] <hassoon> d'oh..
[01:40:24] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[01:40:45] <hassoon> a feature can be a whole app as well imo couldn't it be..
[01:41:11] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 264 seconds)
[01:41:21] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 245 seconds)
[01:45:01] <matsaman> hate those questions
[01:45:19] <matsaman> don't consider things challenging
[01:45:44] <matsaman> if you want idiots or quitters don't hire me
[01:46:08] <hassoon> ya what a question :|
[01:46:26] <matsaman> if you want to know if I'll seek help from coworkers ... after I check the vastly more informational internet ... yes of course I will
[01:46:51] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[01:47:43] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[01:48:43] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[01:49:27] <hassoon> matsaman: not sure.. maybe i'll tell them how i overrode fetchApi in a deployed react app that i had no access to its codebase, so i can render a nice loading spinner in a text input intended to be a data search bar, and the spinner should rotate whenever there is an ongoing fetch api request call to the backend when the requested url in the fetch api request stream matches a certain endpoint's url,
[01:49:34] <hassoon> then the spinner disappears when the clienside receives the response
[01:49:38] <matsaman> yeah I was just thinking
[01:49:48] <matsaman> some kind of awful hands-tied / react insanity bs situation, would be perfect
[01:50:03] <hassoon> not that i do react on a daily basis..yet
[01:50:09] <hassoon> more like angular'er for now
[01:50:38] <matsaman> "this one time, I had to override the default favicon in create-react-app, and like every other experience with react, it made me want to move to the woods"
[01:50:45] <hassoon> my main concern in the whole thing is.. doing something with my vanilla javascript/css/html knowledge
[01:51:00] <matsaman> but I don't even apply to jobs that mention react or angular, or agile, definitely not agile
[01:51:06] *** justHaunt is now known as justache
[01:51:11] <matsaman> I see unemployment in my future =) That's okay I really want to be a bank robber
[01:51:18] <matsaman> hassoon: yeah
[01:51:22] <matsaman> so much is fads now
[01:51:34] <hassoon> matsaman: ya it's a remote frontend developer position, and it got my attention, it's an international offer
[01:51:44] <matsaman> people don't care if you have any g'damn idea wtf is going on, they just want you to have done something in the fad lib they're using ATM
[01:51:44] <hassoon> especially the remote part
[01:51:58] <matsaman> lot of remote work right now, though
[01:52:22] <matsaman> although I imagine that will be tapering off _slightly_ as our winter COVID peaks go down
[01:52:29] <hassoon> matsaman: nah it's still not 100% supported where i live
[01:52:51] <matsaman> but you only need the network connection, no?
[01:53:03] <matsaman> I guess there's a lot of red tape in international hiring
[01:53:19] <hassoon> red tape? what's that :p
[01:53:29] <matsaman> bureaucratic nonsense getting in the way
[01:53:39] <matsaman> paperwork, bullshit tedious requirements
[01:53:48] <matsaman> hoops to jump through, obstacles in your path
[01:53:59] <hassoon> in fact i looked up the company in glassdoors and most of the reviews are happy and satisfied
[01:54:09] *** Quits: sfields (~sfields@2603-8090-1605-d7f3-6001-f576-91fc-2e1b.res6.spectrum.com) (Quit: Leaving)
[01:54:47] <matsaman> I wonder what a bad glassdoors review would look like, really
[01:54:53] <matsaman> do tech companies get bad glassdoors reviews?
[01:55:00] <matsaman> you sit in a chair all day and do what you signed up to do
[01:55:04] <hassoon> ah ya, i'll have to go through formalities and paperwork with state offices, maybe i'll have to become a registered single-person company or something, to start working wit hthe
[01:55:08] <hassoon> * with them
[01:55:10] <matsaman> it's not like you're exposed to asbestos
[01:55:22] <matsaman> 's'cool, though, g'luck
[01:56:17] <hassoon> matsaman: there was this company called toptal, same regime, 100% remote international presence, but it got awful reviews and things like 'run away as much as you can'
[01:56:53] <hassoon> they sent me an interview link, but i ignored them, the amount of negative reviews about CEO was hilariously hight
[01:56:56] <hassoon> * high
[01:58:03] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 260 seconds)
[01:59:20] *** Joins: Naan (~naan@user/naan)
[02:02:01] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:bc8c:ff7e:aea9:f1c8)
[02:02:27] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[02:03:04] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[02:04:31] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[02:05:20] *** Quits: tex (~super@user/dix) (Ping timeout: 260 seconds)
[02:05:34] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[02:06:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:146e:edfd:ccd9:4c5c) (Ping timeout: 260 seconds)
[02:07:03] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[02:11:12] *** Quits: pmercado (~pmercado@190.22.168.79) (Quit: Konversation terminated!)
[02:13:48] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:bc8c:ff7e:aea9:f1c8) (Remote host closed the connection)
[02:14:35] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:bc8c:ff7e:aea9:f1c8)
[02:16:43] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:17:02] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:8dca:684c:b919:1b00) (Quit: you are feeeling very sleeeeeepyy......)
[02:17:49] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[02:18:42] *** Joins: N4buc0- (~N4buc0@186.214.195.13)
[02:18:50] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:bc8c:ff7e:aea9:f1c8) (Remote host closed the connection)
[02:23:19] *** Joins: noarb (~noarb@user/noarb)
[02:25:47] <matsaman> hassoon: mmm
[02:26:01] <matsaman> I feel like it's going to be 90% positive or 90% negative, though
[02:32:34] *** Quits: pizdets (~pizdets@183.182.110.228) (Ping timeout: 250 seconds)
[02:32:46] *** Quits: bobdobbs (~user@14.137.23.74) (Read error: Connection reset by peer)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.42)
[02:33:50] *** Quits: hemstock (~hemstock@68.71.244.6) ()
[02:36:10] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[02:36:43] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[02:39:18] *** Joins: noarb- (~noarb@user/noarb)
[02:39:41] <hassoon> matsaman: https://paste.debian.net/plain/1217006 :p
[02:39:50] <hassoon> matsaman: i need to read that in less than 5 minuts
[02:39:53] <hassoon> :D
[02:39:59] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[02:40:03] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[02:40:25] <hassoon> https://i.imgur.com/m9w3O0x.png
[02:40:28] <hassoon> that too
[02:40:40] *** Quits: sylario (uid115390@id-115390.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:40:42] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[02:41:18] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[02:41:38] <matsaman> hmm
[02:42:23] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[02:42:28] <hassoon> i feel like they are targetting a specific feature in the interview, not a whole app to talk about
[02:42:39] <hassoon> like.. a feature you've done in a project
[02:43:34] <matsaman> yeah that is definitely what feature means
[02:44:29] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[02:46:36] <pavonia> hassoon: I like how it starts quite simple ("Oh wow, an input box was the most challenging thing?"), but then, as you go on, you realize the complexity of it ^^
[02:47:16] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:8dca:684c:b919:1b00)
[02:48:08] *** Joins: nomic (~nomic@185.198.243.251)
[02:48:18] <hassoon> pavonia: :>
[02:48:59] *** Joins: delvx (~arek@77.252.63.98)
[02:51:25] *** Joins: pulse (~pulse@user/pulse)
[02:53:07] *** Quits: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[02:53:23] <hassoon> maybe talking about a helper browser extension will do fine too, i once wrote this extension that works with the formio.js library and could be used to fill/empty the whole form(s) with a push of a button, but..usecase can tell that the candidate can find their way with vanilla javascript, if the framework's ecosystem is not available
[02:54:16] <hassoon> * but.. this usecase *
[02:55:00] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:55:16] *** Joins: voltage (~voltage@user/voltage)
[02:56:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[02:56:53] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[02:58:22] <hassoon> And finally I copied my javascript code in a javascript source code file, and handed it to my colleague, so they import it as an external script in their deployed react app.
[02:58:25] <hassoon> :>
[02:58:38] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 265 seconds)
[02:59:11] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 264 seconds)
[03:00:17] *** voltage is now known as voltage_
[03:01:01] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[03:01:51] *** Joins: pluri (~pluri@user/pluri)
[03:04:52] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:06:39] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[03:07:26] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:07:56] *** Joins: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net)
[03:08:40] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:09:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[03:11:11] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 264 seconds)
[03:11:11] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[03:11:26] *** Joins: PowaBanga_ (~PowaBanga@91.86.102.188)
[03:11:44] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[03:12:06] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[03:12:39] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[03:13:29] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:13:29] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:13:29] *** Joins: wroathe (~wroathe@user/wroathe)
[03:18:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[03:18:57] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[03:20:03] *** Joins: delvx (~arek@77.252.63.98)
[03:20:36] *** Joins: summersault (~summersau@179.221.251.16)
[03:20:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Remote host closed the connection)
[03:21:10] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[03:22:43] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-127-230.red.bezeqint.net)
[03:24:40] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[03:24:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:26:34] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 260 seconds)
[03:27:18] *** Joins: sam_1 (~sam_1@87.51.251.118)
[03:28:19] *** Joins: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp)
[03:29:33] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[03:30:22] *** Joins: iomari891 (~iomari891@105.112.138.38)
[03:31:59] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[03:32:21] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:42:41] <jaawerth> what nonsense is this... there are like 50 different jsonpointer/jsonpatch implementations on npm and upon auditing the top 3 hits, two of them didn't both to use strict mode (one of them with an implicit global) and the third was implemented in coffeescript. this shuld not be hard ;_;
[03:42:51] <jaawerth> guess I need to... make yet another one
[03:43:18] <jaawerth> no, no, one of these has got to be ok. right? ...right?
[03:43:46] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:43:56] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:49:20] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[03:49:24] <jaawerth> oh, I see. the `standard` package, which many of these use as a zero-config eslint thing... doesn't actually enforce strict mode, even when using commonjs modules smh
[03:49:40] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[03:50:32] <theskillwithin> are you talking about import assert type json?
[03:51:08] *** Joins: kill (~killown@user/killown)
[03:51:29] <jaawerth> nah just modules implementing the JSONPointer and JSONPatch RFC's, which aren't that hard to implement by hand, I just.. shouldn't have to
[03:52:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:52:37] <jaawerth> theskillwithin: http://jsonpatch.com/ describes both (and links to the RFC's if you're itching to read some IETF drafts ;-) )
[03:52:47] <theskillwithin> hehe
[03:53:28] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:53:31] *** spynx is now known as spynxic
[03:53:45] *** Joins: delvx (~arek@77.252.63.98)
[03:54:22] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Remote host closed the connection)
[03:54:46] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[03:55:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:55:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[03:57:03] <jaawerth> well at least I found one with a build step that will probably handle it (and it has an ms entrypoint) but the index.js pointed to by the main field of package.json.. still lacks it. ES modules have ruined people
[03:57:05] *** Joins: summersault (~summersau@179.221.251.16)
[03:59:03] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[03:59:21] <jaawerth> omg finally https://github.com/sonnyp/JSON8/blob/main/packages/patch/index.js#L1 literally the only one of the JS libraries linked from jsonpatch.com has it in its commonjs entrypoint
[03:59:38] <jaawerth> ljharb: can you just maintain all the things please
[04:00:06] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[04:02:07] <jaawerth> https://github.com/Starcounter-Jack/JSON-Patch also lookos ok I guess since its index.js is mostly just re-exporting
[04:03:17] <sickdyd> "Parameter cannot have question mark and initializer." -> this is annoying
[04:03:32] <sickdyd> it will be optional by default if it has an initializer
[04:03:46] <sickdyd> I guess yeah, makes sense
[04:05:04] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[04:08:30] *** Quits: leviathan (~leviathan@199-83-221-152.PUBLIC.monkeybrains.net) (Remote host closed the connection)
[04:10:32] *** Joins: delvx (~arek@77.252.63.98)
[04:13:24] *** Joins: ferdna (~ferdna@user/ferdna)
[04:13:53] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[04:14:19] *** Joins: rannnn888851 (~rannnn888@bzq-79-176-127-230.red.bezeqint.net)
[04:14:28] <Gamara> Hello can anyone give me advice on how to clean up this code? https://pastebin.com/MVaHEhBr should I just put the common code into a lambda?
[04:15:23] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 264 seconds)
[04:15:49] <Gamara> I feel the only thing that differs  is the for loop and maybe the fact the last two loops only need to be looped through once
[04:17:07] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[04:17:25] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[04:17:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[04:17:55] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-127-230.red.bezeqint.net) (Ping timeout: 256 seconds)
[04:18:07] *** Parts: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) ()
[04:20:59] <OhTheCode> Gamara - you're repeating some of the code so put it in a function
[04:21:24] <OhTheCode> and little things like let j = 0 + 3 * i -> let j = 3 * i
[04:21:56] <Gamara> oh yeah I will definitely fix that thanks for the suggestion
[04:22:06] <Gamara> yeah it is a lot of repeated code would a lambda work well for it?
[04:22:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[04:23:48] <OhTheCode> yeah
[04:24:03] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[04:26:08] <jaawerth> not necessarily arrows per se but I would definitely suggest breaking it down into small reusable/composable functions, it should make it a lot easier to build up your logic in a readable way
[04:27:23] <Gamara> The problem is my for loops and logic is pretty fixed for the thing I am doing, pretty hard to abstract
[04:27:42] <Gamara> I guess I could hard code the values instead of using loop but I think that is worse
[04:27:59] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[04:28:03] <jaawerth> is each one working on the same quadrants array and in the same `this` context? or are they all different?
[04:28:06] <jaawerth> it's hard to tell out of context
[04:29:55] <OhTheCode> in the for loop eg for (let j = 0 + i; j < 9; j += 3), u could have the 2nd and 3rd section as arguments for a function
[04:31:25] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[04:31:58] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:32:25] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[04:34:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:35:11] *** Joins: summersault (~summersau@179.221.251.16)
[04:35:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:36:16] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[04:37:43] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[04:37:43] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[04:38:08] <Gamara> oh true
[04:39:34] <Gamara> The context is I am just drawing lines on a tic tac toe board, they are all dealing with the same variables and arrays. I am simply checking if the array contains a mark and if that mark is equal then draw a line. Idk if that explains it, it would make sense to abstract the for loop itself though using parameters
[04:39:59] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 260 seconds)
[04:40:13] <Gamara> I really appreciate the suggestions thank you so much :)
[04:43:52] *** Joins: fmlatghor (~lcoogan@2601:5cd:8100:2890::4)
[04:45:12] *** Quits: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:45:30] *** Joins: delvx (~arek@77.252.63.98)
[04:46:15] *** Quits: rannnn888851 (~rannnn888@bzq-79-176-127-230.red.bezeqint.net) (Ping timeout: 256 seconds)
[04:48:50] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[04:49:29] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:50:47] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 264 seconds)
[04:52:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Ping timeout: 256 seconds)
[04:55:23] *** Quits: realies (~realies@user/realies) (Ping timeout: 260 seconds)
[04:58:13] *** Joins: The_Jag_ (~The_Jag@host-87-11-42-170.retail.telecomitalia.it)
[05:00:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:00:08] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[05:00:55] *** Quits: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:02:14] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[05:05:03] *** Quits: onr (~onr@user/onr) (Quit: Leaving)
[05:05:49] *** Joins: keypusher (keypusher@user/keypusher)
[05:06:14] *** Joins: nomic (~nomic@185.198.243.251)
[05:08:54] *** Joins: summersault (~summersau@179.221.251.16)
[05:09:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[05:10:31] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:10:56] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[05:13:35] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 264 seconds)
[05:17:06] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[05:20:52] *** Joins: delvx (~arek@77.252.63.98)
[05:23:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[05:23:23] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[05:26:02] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[05:27:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:28:32] *** Joins: summersault (~summersau@179.221.251.16)
[05:29:11] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 264 seconds)
[05:32:36] *** Joins: voltage (~voltage@user/voltage)
[05:34:48] *** Quits: voltage (~voltage@user/voltage) (Client Quit)
[05:36:12] *** Quits: voltage_ (~voltage@user/voltage) (Ping timeout: 265 seconds)
[05:37:11] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:39:20] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Quit: Client closed)
[05:39:31] <theskillwithin> systemfault 😳 https://www.reddit.com/r/todayilearned/comments/qgbqwv/til_that_a_pint_of_draught_beer_sold_in_canada/
[05:39:45] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[05:40:39] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Quit: Going offline, see ya! (www.adiirc.com))
[05:43:04] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:45:52] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[05:50:56] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[05:52:31] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[05:52:45] *** Joins: delvx (~arek@77.252.63.98)
[05:56:45] *** Joins: incognito (~relativit@user/incognito)
[05:57:55] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[05:58:51] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 260 seconds)
[05:59:11] *** Joins: paule32_ (~paule32@user/paule32)
[06:01:11] *** Joins: paule32__ (~paule32@user/paule32)
[06:02:54] *** Quits: paule32 (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:03:31] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[06:04:27] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:04:39] *** Joins: paule32_ (~paule32@user/paule32)
[06:06:31] *** Joins: realies (~realies@user/realies)
[06:07:03] *** Joins: paule32 (~paule32@user/paule32)
[06:08:11] *** Quits: paule32__ (~paule32@user/paule32) (Ping timeout: 260 seconds)
[06:10:02] *** Quits: paule32_ (~paule32@user/paule32) (Ping timeout: 265 seconds)
[06:10:48] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:13:55] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:24:37] <theskillwithin> https://nextjs.org/blog/next-12
[06:25:12] *** Joins: summersault (~summersau@179.221.251.16)
[06:27:04] *** Joins: delvx (~arek@77.252.63.98)
[06:28:29] <kalen> i have a const object, and i'd like to copy the properties from a different object onto it. is Object.assign() the only way to do it, or is there a shorter, fancier way of doing it with a spread operator or something?
[06:29:57] <systemfault> Your variable is const... so you can't reassign.
[06:30:04] <systemfault> The only thing left is mutation
[06:30:45] <kalen> mutation is exactly what i'm doing. Object.assign() works, i'm just wondering if there's a different/shorter way to do it
[06:30:55] <kalen> i'm guessing there isn't, but i figured i'd ask anyway
[06:31:38] <jaawerth> Object.assign is the shortest and best way if you just need shallow copying
[06:31:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[06:31:50] <jaawerth> personally I like that it's just a function rather than syntax
[06:31:50] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[06:32:03] <jaawerth> how hort do you need it? ;-)
[06:32:25] <kalen> i'm a big fan of the spread operator. i like to use it wherever possible :)
[06:32:48] *** Joins: zyweo (~Svew@user/zyweo)
[06:33:07] <jaawerth> meh, composable functions are good and given how spread can.. well, spread all over the place, I like that you can't mutate with it even accidentally
[06:33:18] <kalen> another option is to just define it using "let", but that makes me feel dirty
[06:34:47] <jaawerth> then you'd just be shllow copying andreplacing the reference, which has itsupsides butis pointless if you're just doing it to use spread. however, it can be a legit thin to doso that if ou pass an earlier version into some function, shallow mutations won't be shared
[06:35:13] <jaawerth> but brevity is IMO not a good reason
[06:35:16] <jaawerth> plus
[06:35:27] <jaawerth> n> const a = Object.assign, o = {a: 1}; a(o, {b: 2, c: 3})
[06:35:29] <jellobot> (okay) { a: 1, b: 2, c: 3 }
[06:35:40] <jaawerth> there you go, nice and short :P
[06:36:09] <kalen> haha, nice
[06:41:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:41:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:41:34] *** Joins: wroathe (~wroathe@user/wroathe)
[06:45:20] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[06:45:42] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:48:18] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Client Quit)
[06:49:02] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:56:34] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 260 seconds)
[06:57:11] *** Quits: N4buc0- (~N4buc0@186.214.195.13) (Ping timeout: 245 seconds)
[07:00:25] *** Joins: delvx (~arek@77.252.63.98)
[07:00:30] <ljharb> kalen: don't use let or assign - use *a different variable name*
[07:00:37] *** Joins: zebrag (~chris@user/zebrag)
[07:03:42] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[07:05:47] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 264 seconds)
[07:06:19] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[07:11:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:12:23] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[07:24:57] *** Joins: summersault (~summersau@179.221.251.16)
[07:25:49] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:8dca:684c:b919:1b00) (Quit: you are feeeling very sleeeeeepyy......)
[07:28:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:28:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:28:10] *** Joins: wroathe (~wroathe@user/wroathe)
[07:28:42] <jaawerth> n> const mutate = t => (...xs) => mutate(Object.assign(t, ...xs)), obj = {}; mutate(obj)({a:1})({b:2})({bwahaha:'!'})({bestthingive: 'everdone'}); obj @ljharb
[07:28:43] <jellobot> ljharb, { a: 1, b: 2, bwahaha: '!', bestthingive: 'everdone' }
[07:28:48] <jaawerth> toxicavenger.js
[07:29:04] *** Joins: sam_1 (~sam_1@87.51.251.118)
[07:32:52] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[07:33:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:33:30] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:f07d:468e:6a2a:eef3)
[07:33:39] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[07:35:44] *** Joins: delvx (~arek@77.252.63.98)
[07:40:35] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[07:40:52] *** Joins: Rockwood (~Rocky@user/rocky)
[07:43:50] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[07:49:51] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:50:54] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[07:51:12] *** Joins: summersault (~summersau@179.221.251.16)
[07:51:23] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 264 seconds)
[07:51:46] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[07:53:51] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[07:55:04] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Quit: Going offline, see ya! (www.adiirc.com))
[07:56:08] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:01:53] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[08:04:23] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f)
[08:05:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[08:07:35] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:07:40] *** Quits: Slade (~user@user/slade) (Quit: Bye)
[08:08:47] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 264 seconds)
[08:10:03] *** Joins: delvx (~arek@77.252.63.98)
[08:12:55] *** Joins: summersault (~summersau@179.221.251.16)
[08:15:07] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[08:21:28] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:24:41] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:4d9a:96be:8534:198f) (Ping timeout: 245 seconds)
[08:28:35] *** Quits: silly (~silly@user/silly) (Ping timeout: 264 seconds)
[08:30:32] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:33:04] *** Joins: daz099 (~daz099@gateway/vpn/pia/daz099)
[08:34:12] *** Quits: daz099 (~daz099@gateway/vpn/pia/daz099) (Quit: Leaving)
[08:37:57] <theskillwithin> https://arstechnica.com/tech-policy/2021/10/viewing-website-html-code-is-not-illegal-or-hacking-prof-tells-missouri-gov/
[08:41:53] *** Joins: delvx (~arek@77.252.63.98)
[08:44:16] <Neuromancer> lmao
[08:46:51] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[08:47:02] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:48:40] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:49:49] *** Joins: Slade (~user@user/slade)
[08:50:15] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[08:52:24] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[08:57:31] *** Joins: delvx (~arek@77.252.63.98)
[08:57:45] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Ping timeout: 265 seconds)
[08:59:03] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[08:59:52] *** Joins: mei (~mei@user/mei)
[09:00:39] *** Joins: delvx_ (~arek@77.252.63.98)
[09:02:08] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:02:35] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[09:04:19] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[09:04:54] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[09:08:01] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:10:36] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:11:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:11:38] *** Joins: WishBoy (~WishBoy@user/wishboy)
[09:14:38] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:14:59] <theskillwithin> just watched the movie broadcast signal intrusion,  that was a waste of time
[09:16:17] *** Joins: nomic (~nomic@185.198.243.251)
[09:23:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:26:28] *** Joins: silly (~silly@user/silly)
[09:29:00] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[09:32:25] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[09:34:17] *** Joins: delvx_ (~arek@77.252.63.98)
[09:34:54] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:35:13] *** Joins: hexology (~hexology@user/hexology)
[09:35:55] <hexology> what's an idiomatic way to flatten nested arrays? [[1,2,3], [4,5,6]] -> [1,2,3,4,5,6]
[09:36:10] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[09:37:09] <theskillwithin> n> [[1,2,3], [4,5,6]].flat()
[09:37:09] <jellobot> (okay) [ 1, 2, 3, 4, 5, 6 ]
[09:39:01] <biberu> hexology: depending on how you got to that stage you might also be looking for flatMap: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap
[09:39:16] <theskillwithin> n> [[1,2,3], [4,5,6]].flatMap(x => x)
[09:39:17] <jellobot> (okay) [ 1, 2, 3, 4, 5, 6 ]
[09:39:23] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 264 seconds)
[09:39:30] <hexology> in my case i really want "flatSortByKey()"
[09:40:16] <hexology> so .flat() will have to do for now
[09:40:20] <hexology> thanks
[09:41:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:44:21] *** Joins: nomic (~nomic@185.198.243.251)
[09:45:01] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[09:47:06] <hexology> oh, i actually need to flatten, de-duplicate, and then sort
[09:47:14] <hexology> is there a nice flatten+deduplicate idiom?
[09:47:37] <hexology> (de-duplicate by some key function)
[09:49:41] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:50:38] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[09:53:11] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[09:53:35] *** Joins: Iago[m] (~mercvrivs@2001:470:69fc:105::2ee6)
[09:54:43] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[09:56:47] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[10:00:33] *** Joins: Guest6824 (~Guest68@mail.bfc-net.de)
[10:00:43] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[10:01:59] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:08:37] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:f07d:468e:6a2a:eef3) (Quit: you are feeeling very sleeeeeepyy......)
[10:08:50] *** Joins: delvx_ (~arek@77.252.63.98)
[10:13:20] *** Joins: tex (~super@user/dix)
[10:13:58] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[10:16:49] *** Quits: jazzy2 (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:18:51] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[10:19:49] *** Iago[m] is now known as psyxopompos[m]
[10:25:21] *** Joins: delvx_ (~arek@77.252.63.98)
[10:30:18] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[10:33:41] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[10:34:29] <hamess> so npm 8 is now using tabs instead of spaces and my diff is huge -1,5127 +1,11890 :D
[10:34:29] *** psyxopompos[m] is now known as Iago[m]
[10:36:45] *** Joins: pluri (~pluri@user/pluri)
[10:39:39] *** Joins: delvx_ (~arek@77.252.63.98)
[10:40:47] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:43:12] *** Quits: TorvusBug (~TorvusBug@pool-173-48-227-59.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[10:43:53] *** Iago[m] is now known as psyxo[m]
[10:47:08] <sheetjs> ljharb: what version of eslint do you use in older projects?
[10:47:13] *** Quits: Guest4341 (~Guest43@p200300c8cf2dff005209dc5ffb43a83c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:47:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[10:49:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:50:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df085-25.dhcp.inet.fi)
[10:51:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df085-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[10:52:57] *** Quits: psyxo[m] (~mercvrivs@2001:470:69fc:105::2ee6) (Changing host)
[10:52:57] *** Joins: psyxo[m] (~mercvrivs@user/psyxopompos)
[11:01:00] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[11:05:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[11:08:54] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:09:02] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:09:02] *** Joins: jazzy (~jaziz@172.58.19.219)
[11:10:16] *** Quits: Guest6824 (~Guest68@mail.bfc-net.de) (Quit: Client closed)
[11:12:07] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[11:13:49] *** Quits: gggpkm (~gggpkm@li2015-124.members.linode.com) (Remote host closed the connection)
[11:14:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:14:54] *** Joins: kogepan (~kogepan@user/kogepan)
[11:19:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) ()
[11:20:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[11:20:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:21:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:22:44] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[11:23:37] <sheetjs> nvm had to add acorn to the devdependencies to satiate acorn-jsx
[11:25:17] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:25:56] *** Joins: jazzy3 (~jaziz@user/jaziz)
[11:26:32] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:26:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[11:27:14] *** Quits: jazzy (~jaziz@172.58.19.219) (Ping timeout: 260 seconds)
[11:28:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:30:02] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:35:17] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:10] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:38:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:54] *** Joins: Lazenca (~lazenca@user/lazenca)
[11:46:10] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:199:65c1:3452:f81d)
[11:56:55] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:00:08] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:00:56] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:03:19] *** Joins: amcsi (~amcsi@2E6BC1DC.catv.pool.telekom.hu)
[12:04:29] *** Joins: delvx_ (~arek@77.252.63.98)
[12:06:29] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:11:30] <theskillwithin> notchris 👋
[12:11:34] *** Quits: sickdyd (~sickd@FL1-220-144-186-62.tky.mesh.ad.jp) (Ping timeout: 265 seconds)
[12:24:18] *** Joins: Guest68 (~Guest68@mail.bfc-net.de)
[12:35:34] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 258 seconds)
[12:42:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:44:20] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[12:45:06] <OhTheCode> anyone know how to dynamically load a function within lodash? import('lodash').then((_) => { console.log(_.trim('  loading file')) }) doesn't work
[12:46:29] *** Joins: cth (~Cthulchu@193.194.107.250)
[12:46:29] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[12:47:16] <stenno> can't you just do import('lodash/trim') ?
[12:47:49] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:50:16] *** Quits: Guest68 (~Guest68@mail.bfc-net.de) (Quit: Client closed)
[12:50:23] <OhTheCode> do i download lodash and put it in scripts directory?
[12:51:10] <stenno> are you using it for node or for the browser?
[12:51:38] <OhTheCode> for browser
[12:57:13] *** Quits: kmh (~kmh@2a00:6020:5004:6800:74ab:af57:2aa5:a7aa) (Quit: Leaving)
[13:00:56] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:199:65c1:3452:f81d) (Ping timeout: 245 seconds)
[13:06:49] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[13:09:34] <OnkelTem> Folks, can one run eslint so that it would return 0 status code, while continue messaging in the console?
[13:09:35] *** Joins: thojanssens (~thojansse@2a02:a03f:65cc:8900:15a2:4b:bc5f:2c2e)
[13:10:05] <OnkelTem> e.g. max-warning=999 max-erros=999
[13:10:16] <OnkelTem> but there is no max-errors
[13:10:40] <OnkelTem> or just... "pre-commit": "npm run lint -s -- --max-warnings=0; exit 0" ?
[13:12:26] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:199:65c1:3452:f81d)
[13:19:07] <OhTheCode> doesn't it return 0 if ....  Linting was successful and there are no linting errors. If the --max-warnings flag is set to n, the number of linting warnings is at most n.
[13:20:38] <OnkelTem> Yeah I know
[13:20:45] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[13:20:46] <OnkelTem> It's easier to just skip running husky :)
[13:21:12] <OnkelTem> with `git -n` allegedly
[13:23:18] <OnkelTem> Yeah, works perfectly
[13:24:46] *** Joins: Guest6816 (~Guest68@mail.bfc-net.de)
[13:26:55] *** Joins: chao (~stenno@user/stenno)
[13:28:43] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:29:00] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[13:32:47] *** Quits: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (Ping timeout: 264 seconds)
[13:32:55] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:199:65c1:3452:f81d) (Ping timeout: 260 seconds)
[13:33:39] *** Joins: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[13:44:02] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Remote host closed the connection)
[13:44:11] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:50:55] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[13:56:10] *** Joins: mei (~mei@user/mei)
[13:57:08] *** Joins: delvx (~arek@77.252.63.98)
[13:58:54] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[14:01:01] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:01:14] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 260 seconds)
[14:04:50] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[14:07:15] *** Joins: pycurious (~Adium@user/pycurious)
[14:08:01] *** Quits: s1b1 (~s1b1@user/s1b1) (Ping timeout: 245 seconds)
[14:08:52] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[14:09:42] *** Quits: tex (~super@user/dix) (Read error: Connection reset by peer)
[14:10:00] *** Joins: nomic (~nomic@185.198.243.251)
[14:11:44] *** Quits: thojanssens (~thojansse@2a02:a03f:65cc:8900:15a2:4b:bc5f:2c2e) (Read error: Connection reset by peer)
[14:12:43] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650)
[14:12:45] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 260 seconds)
[14:14:37] *** Joins: Naan (~Naan@user/naan)
[14:14:52] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[14:15:14] *** Quits: rundown (~eb0t@90.198.61.154) (Ping timeout: 258 seconds)
[14:15:23] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:17:03] *** Joins: rundown (~eb0t@90.210.90.151)
[14:21:47] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[14:22:49] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd)
[14:23:03] *** Joins: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney)
[14:24:55] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[14:35:35] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:35:47] *** Joins: irrgit (~irrgit@192.241.175.183)
[14:38:29] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[14:42:15] *** Joins: keypusher (keypusher@user/keypusher)
[14:42:18] *** Quits: pycurious (~Adium@user/pycurious) (*.net *.split)
[14:42:18] *** Quits: cth (~Cthulchu@193.194.107.250) (*.net *.split)
[14:42:18] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (*.net *.split)
[14:42:18] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[14:42:18] *** Quits: PowaBanga_ (~PowaBanga@91.86.102.188) (*.net *.split)
[14:42:18] *** Quits: noarb- (~noarb@user/noarb) (*.net *.split)
[14:42:18] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (*.net *.split)
[14:42:18] *** Quits: c4017w (~c4017@209.52.68.8) (*.net *.split)
[14:42:18] *** Quits: futs4 (~nico@142.93.239.247) (*.net *.split)
[14:42:18] *** Quits: cinderblock (~cinderblo@firefly.isozilla.com) (*.net *.split)
[14:42:18] *** Quits: kraucrow (~polarizin@188.166.72.81) (*.net *.split)
[14:42:18] *** Quits: nr0q_radio (~Thunderbi@about/gridtracker/nr0q-radio) (*.net *.split)
[14:42:18] *** Quits: jonifen (~jonifen@user/jonifen) (*.net *.split)
[14:42:18] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[14:42:18] *** Quits: Zauberfisch (~Zauberfis@62.240.152.166) (*.net *.split)
[14:42:18] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[14:42:18] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[14:42:18] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[14:42:18] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[14:42:18] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[14:42:18] *** Quits: brachamh (~brachamh@user/brachamh) (*.net *.split)
[14:42:18] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[14:42:18] *** Quits: Talon_ (Talon@172.77.150.56) (*.net *.split)
[14:42:19] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[14:42:19] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[14:42:19] *** Quits: naeluh__ (sid95128@lymington.irccloud.com) (*.net *.split)
[14:42:19] *** Quits: MachinShin__ (sid243317@helmsley.irccloud.com) (*.net *.split)
[14:42:19] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[14:42:19] *** Quits: jaawerth (~jaawerth@104.131.115.202) (*.net *.split)
[14:42:19] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[14:42:19] *** Quits: LtHummus (~lthummus@97.126.106.255) (*.net *.split)
[14:42:19] *** Quits: tkazi (~tkazi@user/tkazi) (*.net *.split)
[14:42:19] *** Quits: Memory (sid459764@user/memory) (*.net *.split)
[14:42:19] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[14:42:19] *** Quits: notchris (sid181145@hampstead.irccloud.com) (*.net *.split)
[14:42:19] *** Quits: Puyo (sid500577@user/puyo) (*.net *.split)
[14:42:19] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[14:42:19] *** Quits: Jackal-o-lantern (~quassel@173.195.145.98) (*.net *.split)
[14:42:19] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[14:42:19] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (*.net *.split)
[14:42:19] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[14:42:19] *** Quits: lebster (sid17131@hampstead.irccloud.com) (*.net *.split)
[14:42:19] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[14:42:19] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[14:42:19] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (*.net *.split)
[14:42:19] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[14:42:19] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[14:42:19] *** Quits: median (~median@user/median) (*.net *.split)
[14:42:19] *** Quits: richardwhiuk (richardwhi@scarlet.richardwhiuk.com) (*.net *.split)
[14:42:19] *** Quits: sembiance (~sembiance@108.170.16.18) (*.net *.split)
[14:42:27] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[14:43:53] *** Joins: delvx (~arek@77.252.63.98)
[14:45:01] *** Quits: Guest6816 (~Guest68@mail.bfc-net.de) (Quit: Client closed)
[14:45:29] *** Joins: pycurious (~Adium@user/pycurious)
[14:45:29] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:45:29] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:45:29] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[14:45:29] *** Joins: PowaBanga_ (~PowaBanga@91.86.102.188)
[14:45:29] *** Joins: noarb- (~noarb@user/noarb)
[14:45:29] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[14:45:29] *** Joins: c4017w (~c4017@209.52.68.8)
[14:45:29] *** Joins: futs4 (~nico@142.93.239.247)
[14:45:29] *** Joins: cinderblock (~cinderblo@firefly.isozilla.com)
[14:45:29] *** Joins: kraucrow (~polarizin@188.166.72.81)
[14:45:29] *** Joins: nr0q_radio (~Thunderbi@about/gridtracker/nr0q-radio)
[14:45:29] *** Joins: jonifen (~jonifen@user/jonifen)
[14:45:29] *** Joins: \mSg (mSg@user/msg/x-0285936)
[14:45:29] *** Joins: Zauberfisch (~Zauberfis@62.240.152.166)
[14:45:29] *** Joins: brachamh (~brachamh@user/brachamh)
[14:45:29] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[14:45:29] *** Joins: webstrand (~webstrand@user/webstrand)
[14:45:29] *** Joins: phenom (~primus@user/phenom)
[14:45:29] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[14:45:29] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[14:45:29] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[14:45:29] *** Joins: Talon_ (Talon@172.77.150.56)
[14:45:29] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:45:29] *** Joins: calcmandan (~quassel@user/calcmandan)
[14:45:29] *** Joins: naeluh__ (sid95128@lymington.irccloud.com)
[14:45:29] *** Joins: MachinShin__ (sid243317@helmsley.irccloud.com)
[14:45:29] *** Joins: Geronimo (~Geronimo@user/geronimo)
[14:45:29] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[14:45:29] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[14:45:29] *** Joins: LtHummus (~lthummus@97.126.106.255)
[14:45:29] *** Joins: tkazi (~tkazi@user/tkazi)
[14:45:29] *** Joins: Memory (sid459764@user/memory)
[14:45:29] *** Joins: Pixi (~Pixi@user/pixi)
[14:45:29] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[14:45:29] *** Joins: Puyo (sid500577@user/puyo)
[14:45:29] *** Joins: niko (~niko@libera/staff/niko)
[14:45:29] *** Joins: Jackal-o-lantern (~quassel@173.195.145.98)
[14:45:29] *** Joins: zacts (~zacts@user/zacts)
[14:45:29] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[14:45:29] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[14:45:29] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[14:45:29] *** Joins: ross (sid305269@user/ross)
[14:45:29] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:45:29] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[14:45:29] *** Joins: Cork (~Cork@user/cork)
[14:45:29] *** Joins: a1paca (~a1paca@user/a1paca)
[14:45:29] *** Joins: median (~median@user/median)
[14:45:29] *** Joins: richardwhiuk (richardwhi@scarlet.richardwhiuk.com)
[14:45:29] *** Joins: sembiance (~sembiance@108.170.16.18)
[14:46:25] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:47:37] <ljharb> hamess: npm 8 doesn't use tabs instead of spaces
[14:47:59] <ljharb> hamess: but npm 7 and 8 will apply the first indent it finds to the entire file. so if you have a tab in the beginning, it'll assume the whole thing should be tabs
[14:48:19] <ljharb> OhTheCode: string trim is in the language, why tf would you use lodash for that
[14:48:31] <ljharb> OhTheCode: https://npmjs.com/string.prototype.trim, and also, don't dynamically load things, bundle them
[14:49:17] *** Joins: federico_it (~textual@176.206.87.127)
[14:50:58] *** Joins: Guest847 (~Guest8@mail.bfc-net.de)
[14:54:10] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 260 seconds)
[14:54:17] *** Joins: nomic (~nomic@185.198.243.251)
[14:54:45] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 260 seconds)
[14:54:45] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 260 seconds)
[14:55:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[14:55:59] *** Quits: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[14:56:02] *** Joins: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[14:57:05] *** Joins: iomari891 (~iomari891@197.210.53.184)
[15:00:46] <hamess> ljharb: thanks. and sorry, i didn't mention i was talking about package-lock.json file specifically. upgraded from v6 -> v8 and got tabs for spaces after npm install <package>. i do use tabs in my js/ts files, does the same apply here as well?
[15:01:18] <ljharb> hamess: if package.json uses tabs than yeah it’ll start formatting the lockfile the same way
[15:01:32] <ljharb> but you can view diffs ignoring whitespace so it shouldn’t be that big a deal the one time
[15:01:53] <hamess> oh you can? how
[15:03:33] <hamess> git diff -w
[15:03:50] <hamess> TIL \o/ ! thanks ljharb
[15:07:44] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[15:08:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[15:08:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[15:08:01] *** Joins: wroathe (~wroathe@user/wroathe)
[15:12:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[15:12:36] *** Joins: jellobot1 (~jellobot@li334-26.members.linode.com)
[15:12:36] *** ChanServ sets mode: +v jellobot1
[15:12:36] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Killed (tungsten.libera.chat (Nickname regained by services)))
[15:12:36] *** jellobot1 is now known as jellobot
[15:13:01] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[15:13:10] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[15:13:20] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:13:44] *** Joins: pylong_ (bluehoney@gateway/vpn/protonvpn/bluehoney)
[15:13:49] *** Joins: amcsi_ (~amcsi@2E6BC1DC.catv.pool.telekom.hu)
[15:13:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:13:55] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[15:13:58] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[15:14:23] *** Joins: mage_ (~julien@orval.bbpf.belspo.be)
[15:14:24] *** Joins: Svitkona2 (~Svitkona@157.245.38.135)
[15:14:33] *** Joins: Jck_true8 (~jcktrue@188.228.89.240)
[15:14:35] *** Joins: llinguini_ (sid257922@id-257922.hampstead.irccloud.com)
[15:14:35] *** Joins: g00fy78 (~g00fy@user/g00fy)
[15:14:43] *** Joins: Rubba (~Kol@d75-157-122-186.bchsia.telus.net)
[15:14:43] *** Joins: rvgate2 (~rvgate@user/rvgate)
[15:14:45] *** Joins: wille1 (~wille@static.140.85.76.144.clients.your-server.de)
[15:14:53] *** Joins: flameboi9 (dgw@user/flameboi)
[15:14:58] *** Joins: phryk_ (~totallyno@user/phryk)
[15:15:07] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650) (Quit: you are feeeling very sleeeeeepyy......)
[15:15:21] *** Joins: tcsc_ (sid145321@id-145321.lymington.irccloud.com)
[15:15:22] *** Joins: celphi_ (sid97751@user/celphi)
[15:15:24] *** Joins: Artea- (~Lufia@artea.com.pt)
[15:15:26] *** Joins: gendl_ (sid100083@id-100083.hampstead.irccloud.com)
[15:15:30] *** Joins: rawgreaze_ (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[15:15:32] *** Joins: cebor_ (~cebor@user/cebor)
[15:15:33] *** Joins: Andrew_ (~andrew@user/andrewyu)
[15:15:33] *** Joins: quesker_ (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[15:15:36] *** Joins: zettabyte_ (~zettabyte@user/zettabyte)
[15:15:59] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650)
[15:16:00] *** Joins: queue (~nerd@rektnet.com)
[15:16:49] *** Joins: kcrk_ (~kcrk@user/kcrk)
[15:17:01] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[15:17:27] *** Quits: iomari891 (~iomari891@197.210.53.184) (Ping timeout: 260 seconds)
[15:17:37] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[15:17:52] *** Joins: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net)
[15:17:52] *** Joins: ox1eef_ (~0x1eef@user/rg)
[15:18:03] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[15:18:04] *** Joins: klys_ (~mdasoh@show.op8.us)
[15:18:17] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[15:18:19] *** Joins: eblip (~eb0t@90.210.90.151)
[15:18:42] *** Joins: ringo__ (~ringo@157.230.117.128)
[15:18:50] *** Joins: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[15:18:55] *** Joins: ericP_ (~eric@jay.w3.org)
[15:21:07] *** Joins: Solokill (~JKM@vps-85.201.170.217.stwvps.net)
[15:21:55] *** Parts: Solokill (~JKM@vps-85.201.170.217.stwvps.net) ()
[15:22:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:22:27] *** Quits: bluehoney (bluehoney@gateway/vpn/protonvpn/bluehoney) (*.net *.split)
[15:22:27] *** Quits: rundown (~eb0t@90.210.90.151) (*.net *.split)
[15:22:27] *** Quits: amcsi (~amcsi@2E6BC1DC.catv.pool.telekom.hu) (*.net *.split)
[15:22:27] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (*.net *.split)
[15:22:27] *** Quits: sam_1 (~sam_1@87.51.251.118) (*.net *.split)
[15:22:27] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[15:22:27] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[15:22:27] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (*.net *.split)
[15:22:27] *** Quits: bodiccea (~bodiccea@user/bodiccea) (*.net *.split)
[15:22:27] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[15:22:27] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[15:22:27] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[15:22:27] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[15:22:27] *** Quits: eqw (~eqw@31.134.178.99) (*.net *.split)
[15:22:27] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[15:22:27] *** Quits: Pilum (~JKM@user/pilum) (*.net *.split)
[15:22:27] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[15:22:27] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[15:22:27] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[15:22:27] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[15:22:27] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (*.net *.split)
[15:22:27] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[15:22:27] *** Quits: APic (apic@apic.name) (*.net *.split)
[15:22:27] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[15:22:27] *** Quits: ryzokuken (~ryzokuken@fanzine.igalia.com) (*.net *.split)
[15:22:27] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) (*.net *.split)
[15:22:27] *** Quits: flameboi (dgw@user/flameboi) (*.net *.split)
[15:22:27] *** Quits: queue- (~nerd@rektnet.com) (*.net *.split)
[15:22:27] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[15:22:27] *** Quits: g00fy7 (~g00fy@user/g00fy) (*.net *.split)
[15:22:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[15:22:27] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[15:22:27] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[15:22:27] *** Quits: gendl (sid100083@hampstead.irccloud.com) (*.net *.split)
[15:22:27] *** Quits: zettabyte (~zettabyte@user/zettabyte) (*.net *.split)
[15:22:27] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[15:22:27] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[15:22:27] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[15:22:27] *** Quits: tcsc (sid145321@lymington.irccloud.com) (*.net *.split)
[15:22:27] *** Quits: llinguini (sid257922@hampstead.irccloud.com) (*.net *.split)
[15:22:27] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[15:22:27] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[15:22:27] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[15:22:27] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[15:22:27] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[15:22:27] *** Quits: ox1eef (~0x1eef@user/rg) (*.net *.split)
[15:22:27] *** Quits: ericP (~eric@jay.w3.org) (*.net *.split)
[15:22:28] *** flameboi9 is now known as flameboi
[15:22:28] *** quesker_ is now known as quesker
[15:22:29] *** kalen- is now known as kalen
[15:22:29] *** tcsc_ is now known as tcsc
[15:22:29] *** Svitkona2 is now known as Svitkona
[15:22:29] *** g00fy78 is now known as g00fy7
[15:22:29] *** rvgate2 is now known as rvgate
[15:22:29] *** Jck_true8 is now known as Jck_true
[15:22:29] *** zettabyte_ is now known as zettabyte
[15:22:29] *** wille1 is now known as wille
[15:22:30] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:22:30] *** gendl_ is now known as gendl
[15:22:31] *** llinguini_ is now known as llinguini
[15:22:33] *** celphi_ is now known as celphi
[15:23:20] *** Joins: sam_1 (~sam_1@87.51.251.118)
[15:23:31] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 260 seconds)
[15:24:26] *** Joins: Pilum (~JKM@user/pilum)
[15:25:15] *** Joins: delvx_ (~arek@77.252.63.98)
[15:25:20] *** Joins: ryzokuken_ (~ryzokuken@fanzine2.igalia.com)
[15:25:38] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[15:27:15] *** Quits: delvx (~arek@77.252.63.98) (Ping timeout: 260 seconds)
[15:27:28] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 265 seconds)
[15:27:42] *** Joins: eqw (~eqw@31.134.178.99)
[15:28:01] *** Joins: d[-_-]b (~stenno@user/stenno)
[15:28:19] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[15:28:52] *** Joins: APic (apic@apic.name)
[15:29:12] *** Quits: d[-_-]b (~stenno@user/stenno) (Client Quit)
[15:29:48] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[15:30:49] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[15:30:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:31:30] *** Quits: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[15:32:05] *** Joins: Dev0n (~Dev0n@user/dev0n)
[15:32:07] *** Joins: xsznix9 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[15:32:19] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:32:42] *** Joins: de-facto (~de-facto@user/de-facto)
[15:35:07] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:35:17] <hassoon> 'morning
[15:35:32] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:35:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:35:52] *** Joins: de-facto (~de-facto@user/de-facto)
[15:36:04] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:36:06] *** Parts: Artea- (~Lufia@artea.com.pt) ()
[15:36:25] *** Joins: kenoba (~kenoba@user/kenoba)
[15:39:33] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Read error: Connection reset by peer)
[15:41:40] <OhTheCode> morning tough guy
[15:42:33] <hassoon> :p
[15:48:33] *** Joins: voltage_ (voltage@user/voltage)
[15:54:10] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:59:34] *** phryk_ is now known as phryk
[16:00:53] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:01:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:05:35] *** Joins: stenno (~stenno@user/stenno)
[16:13:01] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 268 seconds)
[16:16:35] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:23:06] <msfninja> if i am awaiting a promise from a function, will that halt the current code execution within the async function
[16:25:28] <stenno> wjust imagine that everything following the await call is inside a .then after the promise
[16:26:11] <stenno> so if you have const bla = await foo(); const zomg = bla.bar(); its the same as foo().then(bla => { const zomg = bla.bar(); ... })
[16:26:33] <msfninja> i see
[16:28:07] <stenno> (disregarding scoping stuff here)
[16:29:53] *** Joins: Artea (~Lufia@artea.com.pt)
[16:30:15] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:33:25] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:34:54] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:42:03] *** Quits: pizdets (~pizdets@183.182.111.42) (Read error: Connection reset by peer)
[16:42:14] *** Joins: pizdets (~pizdets@183.182.111.42)
[16:43:11] <interop_madness> is there a way to detect if a certain key is pressed outside of an event handler? as in, i'm inside a MutationObserver's callback and right then and there, I need to check if a certain key is pressed
[16:44:38] *** Quits: Guest847 (~Guest8@mail.bfc-net.de) (Quit: Client closed)
[16:45:10] <Decker> interop_madness looks like you have to add keyup/down and capture the state yourself
[16:45:27] <Decker> unless it's a modifier key like shift/ctrl/... which may be on other events
[16:45:37] <interop_madness> dang
[16:45:46] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 265 seconds)
[16:45:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:46:11] <interop_madness> thanks Decker that's what I suspected
[16:47:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:47:57] *** Joins: earendel (uid498179@user/earendel)
[16:50:07] *** Joins: gggpkm (~gggpkm@li2015-124.members.linode.com)
[16:50:49] *** Joins: src (~src@user/src)
[16:51:28] *** Joins: Guest8983 (~Guest89@mail.bfc-net.de)
[16:53:01] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:fcf9:7db7:8568:40fd) (Ping timeout: 245 seconds)
[16:53:18] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[16:57:15] *** Quits: federico_it (~textual@176.206.87.127) (Ping timeout: 260 seconds)
[16:59:11] *** Joins: federico_it (~textual@151.95.125.195)
[17:01:55] *** Joins: delvx_ (~arek@77.252.63.98)
[17:05:28] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:09:25] *** Quits: Guest8983 (~Guest89@mail.bfc-net.de) (Quit: Client closed)
[17:16:27] *** Joins: pizdets_ (~pizdets@183.182.114.179)
[17:17:03] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Remote host closed the connection)
[17:17:23] *** Quits: pizdets (~pizdets@183.182.111.42) (Ping timeout: 260 seconds)
[17:17:27] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[17:20:49] *** Joins: han-solo (~hanish@user/han-solo)
[17:21:50] <austincheney> anybody encounter typescript problem: "Cannot assign to '0' because it is a read-only property.".  That 0 is an array index on something that I created and did not make read only
[17:23:00] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[17:23:21] *** Joins: kinabalu (~kinabalu@198.23.166.98)
[17:23:21] *** Quits: kinabalu (~kinabalu@198.23.166.98) (Changing host)
[17:23:21] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[17:24:07] <hassoon> austincheney: can you share your coe
[17:24:08] <hassoon> * core
[17:24:11] <hassoon> * code
[17:26:49] *** Joins: leviathan (~leviathan@2600:1700:dad0:9870:9b0:44d7:a86:3204)
[17:27:58] <austincheney> thanks hassoon but I just figured it out.  I have an object property of type  directoryResponse = directoryList | "missing" | "noShare" | "readOnly".  I need to specifically call out that the object property is of type directoryList in this case so I can loop over it
[17:30:03] *** Andrew_ is now known as AndrewYu
[17:31:07] *** Joins: Guest8933 (~Guest89@mail.bfc-net.de)
[17:33:28] <ljharb> * iterate over it
[17:36:53] *** Joins: audio (~audio@2603-8081-1800-1546-0cb3-5ee7-df8a-1120.res6.spectrum.com)
[17:38:07] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[17:39:25] *** Quits: Guest8933 (~Guest89@mail.bfc-net.de) (Quit: Client closed)
[17:40:33] <FlorianBad> b> var $some$weird_name1 = ' cat '; var phrase = `The${$some$weird_name1}is hungry`; phrase;
[17:40:34] <jellobot> (okay) 'The cat is hungry'
[17:40:55] <FlorianBad> yeah... I was wondering, is that ok to use some $ in ${} .... but apparently it is?
[17:41:11] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[17:41:13] <FlorianBad> b> "use strict"; var $some$weird_name1 = ' cat '; var phrase = `The${$some$weird_name1}is hungry`; phrase;
[17:41:14] <jellobot> (okay) 'The cat is hungry'
[17:45:39] <ljharb> FlorianBad: totally fine
[17:45:41] <ljharb> FlorianBad: you can also escape it
[17:45:59] <ljharb> FlorianBad: oh in this case it's part of an identifier, so it's totally fine, inside `${ }` any expression is valid
[17:46:18] <ljharb> n> `dollar signs work too $ \${}` @ FlorianBad
[17:46:19] <jellobot> FlorianBad, 'dollar signs work too $ ${}'
[17:47:20] <kalen> ljharb, do you subscribe to the idea that we should try to write code that is almost exclusively functional and stateless? and basically pass around one giant global state object to every module that needs to keep track of something, which then returns a copy of that global state object with some modification to save (in a global store or whatever)?
[17:47:33] <ljharb> kalen: those are two very different questions
[17:47:34] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 260 seconds)
[17:47:37] <ljharb> kalen: the first, yes, obviously
[17:47:46] <kalen> <samsch> kalen, `function makeInitialState() { return { count: 1 } } function incrementCount(state) { return { ...state, count: state.count + 1 }; } module.exports = { makeInitialState, incrementCount
[17:47:46] <ljharb> kalen: the second, no, why would you need one giant state object
[17:47:58] <ljharb> kalen: that's not a giant state object, that's one item
[17:48:24] <kalen> presumably, he's passing in one giant state object to the module function
[17:48:36] <kalen> which then returns a copy to be saved in a store
[17:48:39] <ljharb> kalen: personally i wouldn't even expose a state object there, i'd return functions for "get" and "increment"
[17:48:40] <FlorianBad> ljharb :)
[17:48:55] *** Joins: silly_ (~silly@user/silly)
[17:48:57] <samsch> ljharb's inference is correct, that's just state for that self-contained "thing"
[17:49:11] <samsch> Not a global state object
[17:49:28] <kalen> hmm
[17:49:52] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[17:51:30] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[17:52:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[17:52:17] *** Joins: silly (~silly@user/silly)
[17:53:29] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650) (Quit: you are feeeling very sleeeeeepyy......)
[17:53:30] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[17:53:51] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650)
[17:54:26] *** Joins: sillyslux__ (~silly@user/silly)
[17:55:09] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[17:55:11] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 260 seconds)
[17:55:50] <kalen> i assumed it was a giant global store you were passing in there, because if it's just the state for that 1 specific module, then i'm not quite sure i see the point of that code rather than just having the caller manually keep track of everything returned by the module
[17:56:43] <kalen> why pass in the state at all
[17:58:18] *** Quits: Talon_ (Talon@172.77.150.56) (Ping timeout: 260 seconds)
[17:59:14] *** Joins: Talon (Talon@172.77.122.171)
[17:59:46] *** Joins: stenno (~stenno@user/stenno)
[18:00:23] <samsch> The idea is to treat the state used by the module as a black box independent system. The function from the module creates the state shape and handles any reads and writes directly and exclusively.
[18:00:54] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:03:57] <sillyslux__> redux feels like a giant global state store
[18:04:19] <kalen> yeah, that's exactly what i thought he had in mind with that piece of code
[18:04:31] <kalen> a "single source of truth"
[18:05:50] <kalen> samsch, assuming it's properly encapsulated, isn't everything the module does already a black box and independent? what does passing in a state object for just 1 module do for us here? like can you give me an example of a problem we're trying to solve with that approach
[18:09:28] <cth> my wonderful folks! The network tab. Does it accept regex?
[18:09:33] <cth> the filter there, I mean
[18:09:55] <stenno> wrong channel?
[18:10:01] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[18:10:02] <cth> why?
[18:10:08] <stenno> this channel is about javascript
[18:10:12] <cth> aaaand?
[18:10:15] <ljharb> cth: no, it doesn't
[18:10:18] <cth> thanks!
[18:10:21] <ljharb> kalen: a single source of truth for one piece of data, not all data
[18:10:23] <stenno> which browser?
[18:10:25] <stenno> even?
[18:10:31] <stenno> or just an arbitrary browser
[18:10:34] <ljharb> it doesn't in any. but yeah that's good info to provide
[18:10:50] <stenno> cth: javascript is not a browser, its a programming language
[18:11:12] <cth> ok, ok, nothing new's there. thanks for your input.
[18:11:21] <kalen> are you against having a single source of truth for all data?
[18:11:48] <kalen> assuming it's read-only, of course
[18:12:06] <kalen> by all the consuming modules
[18:12:35] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[18:12:51] *** Joins: Pixi (~Pixi@user/pixi)
[18:12:52] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[18:13:05] <kalen> i can see how exposing too much information, even if it's read-only, could lead to some problems. but it does also provide some simplicity and elegance to the system
[18:13:20] <ljharb> kalen: yes? that would end up with one massive impossible-to-maintain object
[18:13:35] <kalen> isn't that what redux does, though?
[18:13:39] <ljharb> kalen: you want information as tightly constrained as possible. nothing should be observable or changeable anywhere it's not necessary
[18:13:39] *** Joins: incognito (~relativit@user/incognito)
[18:13:46] <sillyslux__> cth, https://developer.chrome.com/docs/devtools/network/#search
[18:13:53] <ljharb> kalen: redux may do that internally but you can't really observe that
[18:14:02] <ljharb> kalen: and i don't think "redux" is a great example for good ways to code
[18:14:14] <sillyslux__> if you scroll down, there's the filter box described. seems like it indeed does support regexp
[18:14:29] <kalen> okay, can you tell me how you recommend handling state in most applications then
[18:14:44] <cth> sillyslux__, holy-moly! THANKS!
[18:15:04] <stenno> next time, state the browser you are using at least
[18:15:47] *** Joins: bambanxx (~bambanx@181-163-33-161.baf.movistar.cl)
[18:15:54] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Read error: Connection reset by peer)
[18:16:03] *** Joins: pulse (~pulse@user/pulse)
[18:17:15] <sillyslux__> I'm using firefox, but the link i gave for chrome
[18:17:36] <sillyslux__> #justsaying
[18:22:07] <samsch> Sorry kalen, I've got meetings all morning not allowing me to have significant other conversations
[18:22:40] <kalen> i understand. no worries :)
[18:23:47] *** Joins: nomic (~nomic@185.198.243.251)
[18:24:14] <samsch> I am pretty strongly against the Redux approach of a global state store for front end stuff. But my front end code that's non-trivial uses React and React's local state management and local state management libraries. I'd port some of those ideas outside of React as well, but how that actually *looks* is vague for me since I don't practically do that ever.
[18:24:47] <kalen> i'm starting on a new personal project, which will be pretty large in scope, and i'm trying to make sure i design it properly up front with the best possible coding practices. i've been doing object-based programming my whole career, so this new paradigm of exclusively functional/stateless code is new to me, and i'm just trying to wrap my head around it all and the benefits it brings
[18:26:14] <stenno> once you understood it, you don't want to go back
[18:26:22] <stenno> but its quite the learning curve for sure imo
[18:26:39] <stenno> (disclaimer: i am not an expert in functional programming)
[18:27:28] <ljharb> sillyslux__: oh nice, TIL
[18:27:41] <efdee> samsch: what libraries do you use for state?
[18:29:10] <samsch> useAsyncFn from react-use, and React Final Form are the main ones. I'd probably use react-query if there was more shared data.
[18:29:54] <joepie91> kalen: I don't have time for in-depth explanation atm, but if I had to give one piece of advice for getting used to this approach, it would be: think of your code not as a series of steps that do or change stuff, but as a series of transformations from one data format to another - using literal "functions that return an object literal" makes this very easy in JS
[18:30:30] <joepie91> sometimes you will of course still have "do X" type code, but the main state in your application should be represented in a consistent format as much as possible, with transformations from/to other formats where necessary
[18:30:53] <efdee> samsch: thanks
[18:31:39] <kalen> hmm
[18:36:16] <kalen> i really like the idea of making things stateless. that can simplify things immensely and reduce a lot of sources for bugs. the part i'm not quite getting is that if we're _not_ going to use 1 gigantic global state object, then how do we decide where and when to store those individual state objects?
[18:36:47] <ljharb> kalen: in the most granular place possible, and no more so
[18:37:49] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[18:37:50] <kalen> the most granular place would be in the module itself, heh
[18:37:59] <kalen> but we're trying to move away from that
[18:38:07] <kalen> and move it up the chain, right
[18:38:13] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Client Quit)
[18:38:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:39:19] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[18:39:20] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Remote host closed the connection)
[18:39:34] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[18:39:37] <kalen> or maybe i'm just totally misunderstanding what you guys are proposing
[18:40:15] <ljharb> kalen: if you only need it in one place, why move it elsewhere
[18:40:26] <kalen> okay, but then it's not stateless
[18:40:43] <kalen> i thought the point was to make things stateless as much as possible?
[18:40:44] <ljharb> sure but you can still have two components, one stateless one and one stateful one
[18:40:47] <ljharb> yes, it is
[18:41:08] <ljharb> but that doesn't mean you should create unnecessary abstractions just so you can add a tally mark to the "stateless" side of the whiteboard
[18:43:16] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[18:44:40] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[18:47:40] *** Joins: sam_1 (~sam_1@87.51.251.118)
[18:48:24] <prussian> kalen: how stateless do you want to be?
[18:48:38] <stenno> lol
[18:48:50] <kalen> that's exactly what i'm trying to figure out ;)
[18:48:52] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[18:49:06] <stenno> kinda silly question, prussian
[18:49:23] <prussian> "learn you a haskell" may give you some ideas. it has a section about stuff like zippers. sort of gives you an idea of what functional is about, sort of juggling the state through the execution.
[18:49:28] <prussian> stenno: true.
[18:50:38] <kalen> would be nice if there was a guideline or general rule of thumb for this sort of thing
[18:50:42] *** Joins: derjanni (~textual@p4ff80cd9.dip0.t-ipconnect.de)
[18:50:59] <prussian> it's like that problem where you just know and it sort of a "it depends" thing
[18:51:10] <prussian> or at least *pretend* to know
[18:51:13] <prussian> more accurately
[18:52:02] *** Joins: bomb (~bomb@user/bomb)
[18:52:07] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[18:53:41] *** Joins: pavonia (~user@user/siracusa)
[18:54:25] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[18:55:50] <Gamara> Hey I was wondering if anyone knew how I could best clean up the following functions on line 2, 24, 45, and 63 that are called by function 82 https://pastebin.com/MSv1fVyS All these functions are doing is drawing lines on a tic tac toe board if there are 3 marks vertical or three marks horizontal, etc that are the same. they are not effectng any state changes, they are simply calling    this.drawWinningLine(line); which is just
[18:55:50] <Gamara> drawing a line based on the coordinates passed to line array e.g. the red lines: https://i.imgur.com/1YFUapP.png
[18:56:33] <Gamara> since all 4 functions use the same code, I am having a hard time thinking of how I can refactor this because of the for statements and the fact one is wrapped in another for loop (so it can scan all the columns and rows for the respected methods)
[18:56:57] <Gamara> Any help would be greatly appreciate thank you in advanced :)
[19:00:28] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:00:29] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:01:10] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:d473:8efe:494d:9650) (Quit: you are feeeling very sleeeeeepyy......)
[19:03:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[19:08:25] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:09:05] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[19:12:11] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[19:13:38] *** Joins: dmanto (~dmanto@host137.190-231-79.telecom.net.ar)
[19:14:14] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 258 seconds)
[19:14:34] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[19:17:07] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[19:17:23] <qswz> is Steev a real name? or a typo
[19:17:36] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:18:23] <qswz> what music should I liste to help digest a moutain of greens in my stomach
[19:18:32] <qswz> I should ask cows how they do
[19:19:11] <qswz> I think cows digestive system recycle multiple times, it's more efficient for those high fiber stuff
[19:19:12] <stenno> i heard cows give good milk when they listen to beethoven
[19:19:20] *** Joins: RougeR (~rougex250@user/rouger)
[19:19:21] <stenno> yeah you lack a few stomaches for that
[19:19:28] <stenno> presumably
[19:19:42] <qswz> yea, unless I eat my own shit and give it another go
[19:19:46] <qswz> but well
[19:20:44] <stenno> you could listen to the new JPEGMafia LP https://www.youtube.com/watch?v=EXRLoV1I_UE
[19:20:45] <skillbot> YouTube Title: JPEGMAFIA - LP! (OFFLINE)
[19:20:51] <qswz> https://mivolunteers.org/how-many-stomachs-does-a-cow-have/
[19:21:26] <stenno> oh ok
[19:21:39] <stenno> so you have the required amount of stomaches but lack the compartments
[19:22:14] <qswz> I could turn upside down
[19:22:17] <qswz> to force reflux
[19:22:23] <qswz> ah good idea
[19:23:03] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:23:12] <qswz> I like rap music
[19:23:16] <qswz> also slam
[19:23:23] <stenno> oh cool
[19:23:37] <stenno> jpegmafia i guess can be considered a bit unconventional
[19:24:04] <stenno> slam as in slam metal?
[19:24:07] <stenno> that would be hilarious
[19:24:31] <stenno> slam metal is what people who don't know about metal think when they hear the term 'heavy metal'
[19:25:51] <qswz> a famous French slammer is Grand corp malade and Abd el malik
[19:26:02] <qswz> 2 famous*
[19:26:17] <stenno> oh slam poetry
[19:26:21] <qswz> but that's in french
[19:26:31] <stenno> the most famous german slam poet is marc-uwe kling
[19:27:35] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[19:28:41] *** Joins: nomic (~nomic@185.198.243.251)
[19:28:49] <qswz> https://www.youtube.com/watch?v=AX0y5tkPHgM a good one
[19:28:49] <skillbot> YouTube Title: Abd Al Malik - Gibraltar
[19:29:16] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[19:29:26] <qswz> background music is nina simone sinnermanI guess
[19:29:32] <bomb> where is Xin btw?
[19:29:58] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:30:13] <stenno> sinnerman is one of my favorite songs
[19:30:56] <qswz> amazing woman, too bad she smoke
[19:31:15] <qswz> couldn't really avoid it in 20th century
[19:31:29] <hassoon> avoid what
[19:31:34] <qswz> smoking
[19:31:42] <stenno> she had mental health issues too
[19:31:42] <hassoon> you need to :|
[19:31:44] <qswz> and dying 30 years sonner
[19:31:46] <qswz> sooner*
[19:32:03] <qswz> hassoon: you can also just breath air
[19:32:18] <qswz> works better
[19:32:36] <bomb> in 20th century doctors were suggesting smoking was good for your body
[19:32:59] <stenno> tobacco industry also claimed that
[19:33:01] <stenno> under oath
[19:33:09] <qswz> smoking is like https://www.meme-arsenal.com/memes/c1b964b3752f0c50a3f1a8831dec6405.jpg
[19:33:24] *** Joins: nomic (~nomic@185.198.243.251)
[19:33:24] <stenno> qswz: but she would have had a different voice if she didn't smoke
[19:33:36] <qswz> stenno: hah, true
[19:33:42] <qswz> but not sure if worse
[19:33:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:33:48] <qswz> imagine if the beegees smoked
[19:33:57] <qswz> they wouldn't be able to go that high haha
[19:34:12] <qswz> they did smoke, but probly lightly
[19:36:39] <bomb> yeah rockstars barely smoked and did drugs in 60s and 70s
[19:41:03] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:42:07] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:43:52] <qswz> it's practical when you spend no money, you don't have to check your bank account to see if it's ok
[19:43:59] <qswz> when you don't* spend
[19:44:21] <qswz> I spend around 20€/week for food, and that's all
[19:45:08] <qswz> just dates currently, rest is from markets end free food
[19:45:34] <bomb> you cook yourself?
[19:46:21] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 245 seconds)
[19:46:53] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[19:47:00] <qswz> the nofuckitalism
[19:47:01] <stenno> cooking other things > cooking yourself
[19:47:13] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:47:18] <qswz> what do you mean?
[19:47:42] <qswz> I eat everything raw since this spring
[19:47:43] <stenno> i tried to make a joke regarding the ambigous expression 'cooking yourself', never mind
[19:47:52] <stenno> oh nm
[19:48:11] <qswz> the most cooked thing would be lemon maceration
[19:48:34] <stenno> as long as you don't eat raw meat..
[19:48:45] <ljharb> why not, tartare is great
[19:48:49] <qswz> some insects or worms sometimes
[19:48:49] <stenno> it is
[19:48:58] <stenno> but it is very specific meat prepared in a very specific way
[19:49:07] <ljharb> qswz: lol you do realize how weird all that is, yes?
[19:49:07] <stenno> in germany we eat raw minced pork meat
[19:49:23] <qswz> ljharb: well, in some countries it's the normality
[19:49:34] <qswz> above all if you can grow that food
[19:49:49] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[19:49:57] <qswz> we don't *need* to cook foo
[19:50:00] <qswz> food*
[19:50:34] * bomb vomits
[19:50:37] *** Parts: bomb (~bomb@user/bomb) (‏‏‎ ‎)
[19:51:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:51:35] <qswz> in many cases cooking just spoils the food potential
[19:52:33] <ljharb> qswz: in what countries is that normal when other options exist
[19:52:34] <qswz> man, is there a better quality docs site than stripe's? https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_method_types
[19:52:44] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[19:53:43] *** Quits: derjanni (~textual@p4ff80cd9.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[19:53:47] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 264 seconds)
[19:54:13] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[19:54:18] <qswz> being normal is boring anyway
[19:54:36] <qswz> we should always escapethe social normality
[19:54:54] <stenno> not neccessarily
[19:55:35] <qswz> necessary is so hard to spell
[19:55:49] <qswz> unnecessarily
[19:55:55] <qswz> I hate that word
[19:55:59] <qswz> we need an abbrv for it
[19:56:25] <stenno> neccy
[19:56:28] <stenno> unneccy
[19:56:41] <stenno> speak like 'nessy'
[19:56:54] <qswz> yea let's use that word
[19:57:03] <qswz> as the real nessy seems extinct anyway
[19:57:14] <qswz> just like yeti
[19:57:44] <qswz> and like most wild life, in front of human destruction
[19:58:39] <stenno> that is indeed a reality and a future that is awaiting us
[19:58:59] <qswz> await self.destruction()
[19:59:15] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:59:20] <stenno> > self
[19:59:22] <stenno> code smell
[19:59:30] <qswz> > this
[20:00:25] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[20:00:41] <qswz> what's the best customer service software for a small startup?
[20:00:46] <pulse> Why is self code smell, lol?
[20:01:01] <stenno> pulse: because it implies something like: `const self = this`
[20:01:02] <qswz> `self` the variable name, is a code smell
[20:01:09] <pulse> stenno, Yes, what's wrong with that?
[20:01:15] <qswz> because tends to be var self = this;
[20:01:18] <qswz> > that
[20:01:21] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[20:01:40] <stenno> pulse: if you need to do that, then your code is smelly
[20:01:47] <pulse> Nonsense.
[20:01:50] <stenno> we have fat arrow notation
[20:01:58] <stenno> not nonsense
[20:02:00] <src> have trouble prepending a list (in object form) with an element https://dpaste.com/5Z394BANX not sure why it doesn't work, pointers appreciated
[20:02:29] <qswz> *x here's a pointer
[20:02:30] <stenno> pulse: we have fat arrow notation for lexical scoping
[20:02:38] * stenno &qswz
[20:02:41] <qswz> what's the goal?
[20:03:12] <qswz> src: it's a linked list?
[20:03:20] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:03:31] <qswz> who uses linked list ew
[20:03:37] <qswz> except students
[20:03:49] <qswz> or very specific rare use cases
[20:04:24] <pulse> stenno, Syntax sugar at best. ;)
[20:04:25] <qswz> prepending a linked list is the most simple thing possible
[20:04:49] <src> qswz you are awfully helpful
[20:04:59] <qswz> prepend(list, el) => ({ value: el, rest: list })
[20:05:29] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[20:05:32] <pulse> I find JS programmers have this tendency of making everyone else conform to their ideal style. :D
[20:05:44] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[20:05:58] <qswz> what are the different styles around?
[20:06:04] <qswz> the golfer style
[20:06:28] <qswz> the boring verbose and longVariableNames style
[20:06:40] <qswz> the oop style
[20:06:44] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[20:07:10] <stenno> the 2010 style where people use var that = this
[20:07:14] <qswz> the standard style (guys omitting semi-colons and other atrocious things)
[20:07:15] <pulse> In many cases `self` makes code a billion times more readable.
[20:07:47] <pulse> Saying it's unequivocally a code smell is kind of funny to me.
[20:07:58] <qswz> pulse: example?
[20:08:07] <pulse> qswz, I don't have time to hand out examples. :P
[20:08:17] <stenno> kinda funny indeed
[20:08:21] <hassoon> that = this? saw that before ahah
[20:08:41] <qswz> _this = this
[20:08:59] <qswz> dis = this
[20:09:20] <qswz> gangsta style
[20:10:21] <stenno> deez
[20:11:59] <qswz> ceci = this
[20:12:08] <qswz> confused french noob
[20:12:12] <pulse> self = this is a great example of KISS. You can nest your closures until hell turns cold and you can still refer to the original.
[20:12:20] <pulse> Nothing wrong with that.
[20:12:35] <qswz> kiss my ass style
[20:12:36] <pulse> s/original/top level/
[20:12:48] <qswz> nesting closures is atrocious
[20:12:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[20:12:53] <pulse> It's also a practice as old as JS. :P
[20:12:55] <qswz> ever heard of callback hell?
[20:13:05] <pulse> qswz, It's quite common in real world code, though.
[20:13:08] <stenno> ceci n'est pas un lexical scope
[20:13:09] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:13:38] <qswz> I wouldn't be able to translate lexial scope
[20:14:03] <stenno> scopeaux lexicalique
[20:15:07] <qswz> lexikalischer geltungsbereich
[20:15:27] <qswz> such a beautiful lang
[20:15:48] <stenno> lexikalischer sichtbarkeitsbereich
[20:15:51] <stenno> according to wikipedia
[20:16:15] <OneMirror> any suggestions for React programming problem?  Something that can be done with coderpad's html-js-css pad
[20:16:23] <stenno> lexical visibility area
[20:16:51] <qswz> OneMirror: tictactoe
[20:17:37] <OneMirror> nice qswz
[20:17:53] <stenno> sudoku
[20:17:58] <stenno> with generator and solver
[20:18:02] <qswz> tetris
[20:18:37] <qswz> a table size slector (rows x cols) with a grid dropdown
[20:19:19] <efdee> a todo list
[20:20:01] <qswz> a meme generator
[20:20:12] <efdee> windows 98
[20:20:58] <stenno> fully compatible irc client using websockets
[20:21:19] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 268 seconds)
[20:21:28] <OneMirror> sodoku solver is ridiculously hard.  i had to write one before for linear programming class using simplex
[20:21:43] <OneMirror> for an interview question
[20:21:47] <stenno> i wrote one and it just did bruteforcing more or less
[20:21:48] <OneMirror> todo list and table size also good
[20:21:51] <stenno> smart bruteforcing
[20:22:07] <hassoon> OneMirror: check freecodecamp's frontend libraries tutorials section, it offers some small projects to do in react
[20:22:47] <hassoon> OneMirror: calculator, music composer, etc
[20:23:30] *** Joins: han-solo (~hanish@user/han-solo)
[20:24:00] *** Quits: amcsi_ (~amcsi@2E6BC1DC.catv.pool.telekom.hu) (Ping timeout: 258 seconds)
[20:24:02] <stenno> oh music composer sounds nice
[20:24:09] <stenno> using audio api
[20:24:16] <hassoon> stenno: right
[20:26:20] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[20:30:30] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[20:30:31] *** Joins: hanaan (~naan@user/naan)
[20:30:45] *** hanaan is now known as Naan
[20:33:30] *** Joins: thetoloachekid (~ttk@189.147.186.240)
[20:37:36] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[20:41:31] <src> sorry I still have not gotten it to work
[20:41:43] <src> https://www.ideone.com/yXv5sw this for one, I don't understand the output I'm getting here
[20:43:40] <qswz> use repl.it next time
[20:43:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:44:32] <qswz> src: how's that not working?
[20:44:54] <src> qswz, look at the output
[20:45:06] <qswz> I do
[20:45:21] <qswz> 4 is prepended
[20:45:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:14da:3bf0:27ee:7397)
[20:45:55] *** Joins: nomic (~nomic@185.198.243.251)
[20:46:25] <qswz> language:Node.js (node 11.12.0)  lol ideone
[20:46:34] <src> I would want { value: 4, rest: { value 3, rest: { value 2, rest: { value 1, rest : null } } } };
[20:46:38] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[20:46:51] <src> what's with value: 2, rest: [Object} }}} ...
[20:46:56] <qswz> yea that's what you got
[20:47:18] <qswz> that's just ho it's orinted
[20:47:22] <qswz> printed*
[20:47:32] <src> ...
[20:47:46] <qswz> turn on your brain
[20:48:05] <efdee> src: whatever is printing it thought it would be better to print [Object] than the actual object
[20:48:12] <qswz> n> ({x:{y:{z:{q:{v:1}}}}})
[20:48:13] <jellobot> (okay) { x: { y: { z: { q: { v: 1 } } } } }
[20:48:41] <src> efdee k thanks
[20:48:47] <qswz> hmm we tuned jello
[20:48:49] <src> I thought I was obviously doing something wrong
[20:49:04] <efdee> src: https://www.ideone.com/wARubt
[20:49:07] *** Joins: nomic (~nomic@185.198.243.251)
[20:49:31] <src> efdee thank you!
[20:49:35] <sillyslux__> n> ''+{} @src
[20:49:36] <jellobot> src, '[object Object]'
[20:49:44] <sillyslux__> it's pretty much this
[20:49:55] <qswz> https://www.ideone.com/O0SDrI
[20:50:13] <sillyslux__> n> ({}).toString() @orThis
[20:50:14] <jellobot> orThis, '[object Object]'
[20:54:05] *** Joins: Rockwood (~Rocky@user/rocky)
[20:55:47] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[20:55:54] *** Joins: salad (~cucumber@86.121.64.41)
[20:56:48] <qswz> n> util.inspect({x:{y:{z:{q:{v:1}}}}}, {depth: 3})
[20:56:49] <jellobot> (okay) '{\n  x: { y: { z: { q: [Object] } } }\n}'
[20:57:43] <Rockwood> qswz, hi
[20:58:00] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[20:58:01] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[20:58:35] *** Quits: X-Scale (~ARM@31.22.167.71) (Ping timeout: 264 seconds)
[20:59:22] *** Joins: hemstock (~hemstock@68.71.244.6)
[20:59:39] *** X-Scale` is now known as X-Scale
[21:01:25] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[21:03:39] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:04:27] *** Joins: ryzendapgh (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[21:06:18] *** Joins: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[21:06:31] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[21:06:40] *** duch_kazatel is now known as robertmaxrees
[21:06:59] *** Quits: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 260 seconds)
[21:11:59] *** Joins: jazzy (~jaziz@user/jaziz)
[21:13:36] *** Joins: nomic (~nomic@185.198.243.251)
[21:14:52] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[21:14:55] <pavonia> With no MWE available, can anyone think of a reason why `let elem = document.querySelector(".foo"); elem.style.display="block"; let cp = getComputedStyle(elem); console.log(cp.display);` would still output "none"? I thought it might be a specificity problem, but inline styles should override all CSS rules
[21:16:16] <qswz> what's a MWE?
[21:16:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:16:32] <pavonia> Minimal working example
[21:16:59] <qswz> !important is stronger than inline styles
[21:17:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:18:08] <pavonia> Hhm, is there a way to override that from JS?
[21:18:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:18:10] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[21:18:52] <systemfault> You also make it important
[21:19:14] <systemfault> "normal" and "!important" are two different stacks of priorities
[21:19:27] <systemfault> let elem = document.querySelector(".foo"); elem.style.display="block !important"; let cp = getComputedStyle(elem); console.log(cp.display); ?
[21:19:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:19:41] <qswz> just add another css rulewith !important
[21:19:46] <qswz> from js or not
[21:19:54] *** Joins: nomic (~nomic@185.198.243.251)
[21:20:27] <qswz> I don't think you can use important from inline styles
[21:21:05] <pavonia> systemfault: That doesn't change the result
[21:21:15] <systemfault> Ah :/
[21:21:20] <systemfault> Then qswz is right
[21:21:40] <systemfault> Why do you even use !important though? :(
[21:22:27] <pavonia> It's a hack, and I'm trying to hack the hack :D
[21:23:02] <pavonia> Thanks though, at least I know what to look at then
[21:23:13] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[21:23:29] <systemfault> Maybe you can do elem.setAttribute('style', 'display: block !important')
[21:23:52] <qswz> that's an inline style
[21:24:00] <Rockwood> systemfault, hi Canadian :)
[21:24:22] <systemfault> qswz: But !important works with inline styles, no?
[21:24:23] *** Joins: deadbeat (~quassel@user/deadbeat)
[21:24:44] <qswz> try, I think no, last time I tried it didn't
[21:25:08] <pavonia> Is there nothing stronger than !important rules in a stylesheet?
[21:25:10] <systemfault> Google is saying... elem.style.setProperty( 'color', 'green', 'important' ); But I haven't tried
[21:25:27] <qswz> !superimportant
[21:25:55] *** Quits: salad (~cucumber@86.121.64.41) (Quit: salad)
[21:26:10] <qswz> oh, maybe react was sanitizing the !important in my case
[21:26:15] <sheetjs> !!important
[21:27:33] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Quit: Going offline, see ya! (www.adiirc.com))
[21:28:44] <qswz> yea, systemfault is right
[21:28:49] <qswz> and react's a bitch
[21:29:06] <qswz> https://jsfiddle.net/caub/2cpsgtqd/
[21:29:45] <qswz> double it, value!important!important;
[21:30:37] <qswz> https://joshtronic.com/2018/03/22/how-to-important-inline-styles-in-react/
[21:31:06] <pavonia> systemfault: elem.style.setProperty( 'color', 'green', 'important' ) works in a MWE, but not in the real code ... Joy!
[21:31:30] <systemfault> You have a weird problem...
[21:31:32] <qswz> just use a string, like my fiddle
[21:32:01] <sillyslux__> i've created a devtools theme once and there were about a 1000 !importants
[21:32:03] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[21:32:18] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[21:32:45] <qswz> if everything is !important, at least things clear
[21:33:08] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Read error: Connection reset by peer)
[21:33:22] *** Quits: src (~src@user/src) (Quit: Leaving)
[21:33:33] *** Joins: src (~src@user/src)
[21:33:48] <lantech19446> I have some javascript I wish to lazy load, the person who wrote the scripts already has type="text/javascript" can I add module into that like I would with classes?
[21:34:07] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[21:34:28] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Client Quit)
[21:34:39] <qswz> type="module" ?
[21:34:45] <sillyslux__> you don't need type="text/javascript"
[21:34:54] <sillyslux__> obsolete since html5
[21:34:58] <qswz> ifthe script usemodules, yes
[21:35:10] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[21:35:13] <qswz> use async attr
[21:35:40] <lantech19446> according to mdn if you put type="module" it will defer loading it that's why i'm interested in doing it, I wish I could remove it altogether honestly no one uses it
[21:36:02] *** Joins: nomic (~nomic@185.198.243.251)
[21:36:24] <qswz> why ot just async or defer attr?
[21:36:38] <qswz> why not using the right tool for the job?
[21:36:56] <lantech19446> well mainly because I haven't studied javascript yet and I was unaware there was a better tool
[21:37:10] <lantech19446> if you can guide me i'll certainly use the better option
[21:37:11] <qswz> !mdn script @ lantech19446
[21:37:11] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[21:37:12] <jellobot> lantech19446, <script>: The Script element - The <script> HTML element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The <script> element can also be used with other languages, such as WebGL's GLSL shader programming language and JSON. https://mdn.io/script
[21:37:20] <qswz> read the doc
[21:37:27] <qswz> it talks about those options
[21:37:34] <lantech19446> ok thank you
[21:37:40] <qswz> yw
[21:37:45] *** Joins: justache (~justache@user/justache)
[21:41:10] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[21:41:49] *** Joins: tatiana (~OhTheCode@124.168.232.44)
[21:41:49] <qswz> is table > tr > td > h3 valid html?
[21:42:35] <qswz> and the answer is....     yes
[21:44:17] *** Joins: incognito (~relativit@user/incognito)
[21:44:21] *** Quits: OhTheCode (~OhTheCode@124.168.232.44) (Ping timeout: 244 seconds)
[21:44:22] <efdee> would be nice if you added a tbody
[21:46:53] <lantech19446> qswz: ok so I understand the article except for one thing, is it type="defer"? they say to pass it as an attribute but I don't know how that's done in js
[21:47:02] *** Joins: Guest78 (~Guest78@p200300c8cf2dff00b8d422587b1562c3.dip0.t-ipconnect.de)
[21:47:31] <pavonia> Found the problem. There was an !important rule in usercontent.css which apparently overrides anything else
[21:49:20] <sillyslux__> lantech19446, <script type="module" src="main.js" defer async></script>
[21:49:33] <lantech19446> awesome thank you
[21:50:08] <qswz> yea, simple attributes, without value
[21:50:10] <sillyslux__> lantech19446, "The HTML5 specification urges authors to omit the attribute rather than provide a redundant MIME type."
[21:50:26] <sillyslux__> https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-type
[21:51:32] <lantech19446> ok, does it slow down loading or something? I'm kind of puzzled as to why they eliminated it
[21:53:45] <Alexendoo> It adds some bytes but not going to be significant, it's just removing information that's already implied
[21:54:17] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[21:54:56] <stenno> wait, defer _and_ async?
[21:55:36] <Alexendoo> defer and async don't combine
[21:55:49] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:55:53] <Alexendoo> One of them just overrides the other but I cannot remember which
[21:55:55] <lantech19446> I only put defer that seems closer to what i want
[21:57:08] <systemfault> defer keeps ordering of all the deferred.
[21:57:13] <systemfault> async doesn't care.
[21:57:51] <lantech19446> either one is fine i'm only deferring one thing
[21:58:06] <systemfault> I don't think async cares if the dom is loaded or not
[21:58:21] <systemfault> So, if the JS needs to access the DOM, you may want "defer"
[21:59:17] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[21:59:29] <lantech19446> I can't even tell if it worked but page insights shows my site loading all in the green now so  i think it did something
[22:00:04] <qswz> https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/images/image_13.png
[22:00:06] *** Joins: N4buc0- (~N4buc0@2804:7f4:3487:cd22:3419:f880:9920:34ad)
[22:00:46] <lantech19446> they want me to defer two other things but I think they're kinda vitile to the page one of them I know is that's the main css document the other is another script I'll have to review what it does
[22:04:41] *** Quits: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d) (Ping timeout: 245 seconds)
[22:04:44] <qswz> someone's trying to improve lighthouse SEO
[22:06:24] <lantech19446> I couldn't care less about the SEO aspect we're a small hometown library I do care that our page was slow as shit
[22:06:37] *** Joins: N4buc0 (~N4buc0@186.214.195.13)
[22:06:44] <qswz> haha
[22:06:47] *** Quits: N4buc0- (~N4buc0@2804:7f4:3487:cd22:3419:f880:9920:34ad) (Remote host closed the connection)
[22:06:56] <qswz> make it bearable
[22:07:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:07:38] <lantech19446> the mobile version needs to be attacked next but this last run I got a 97 on the desktop side where a couple weeks ago it was in the 50's
[22:07:42] <qswz> use preload and actually all the lighthouse recommandations
[22:08:18] <qswz> does lighthouse score chnage if you're localhost or not?
[22:08:21] <lantech19446> what's preload?
[22:08:34] <qswz> !mdn preload
[22:08:35] <lantech19446> I don't think it'll even look at localhost
[22:08:36] <jellobot> qswz, Link types: preload - The preload value of the <link> element's rel attribute lets you declare fetch requests in the HTML's <head>, specifying resources that your page will need very soon, which you want to start loading early in the page lifecycle, before browsers' main rendering machinery kicks in. This ensures they are available earlier and are… https://mdn.io/preload
[22:08:47] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:09:10] <qswz> for example for your main css
[22:10:02] <lantech19446> hmm ok
[22:10:15] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[22:10:20] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 246 seconds)
[22:10:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:12:56] <lantech19446> I don't know if i'll worry about the main css since that loads right in the beginning of the page anyway but preloading the fonts might help
[22:14:56] <qswz> also use font swap
[22:15:17] <qswz> https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display
[22:15:30] <qswz> allows to not wait for font
[22:19:04] <lantech19446> yea i did that one already
[22:19:11] *** Joins: delvx_ (~arek@77.252.63.98)
[22:20:08] <lantech19446> the one thing that pisses me off is this LCP it's our main header and my boss composed it from several different things instead of creating an image of it, if it was an image i could compress it and preload it but noooo
[22:21:27] <lantech19446> does preloading cut down on critical path latency>?
[22:21:35] <qswz> LCP is?
[22:22:02] <lantech19446> largest contentful paint
[22:22:07] <qswz> ah right
[22:22:52] <qswz> you can also use tools like purgecss to trim down your css (removes unused rules based on your markup) and compress thing well
[22:23:40] <qswz> that's for if your css is massive, > 100KB
[22:23:52] <lantech19446> I'd be hesitant to use it because I didn't write the page so there's certain things that i'll modify if i fully understand what they're doing but otherwise don't touch them
[22:25:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:25:28] *** Joins: zerothule (~eric@2601:602:8d80:4e50:818d:c31c:21ae:145d)
[22:25:44] <qswz> what's taking most of our css size is font-awesome, damn, but we whitelisted from purgecss as it's used dynamically from our headless cms
[22:25:54] <qswz> we accept-listed it*
[22:27:06] *** Joins: mei (~mei@user/mei)
[22:27:32] *** Joins: snedd (~snedd@86.14.114.137)
[22:27:44] *** Quits: snedd (~snedd@86.14.114.137) (Read error: Connection reset by peer)
[22:28:04] <lantech19446> qswz: we only use certain parts of certain fonts 2 total so they call the entire font and then inside the index they call just those parts that we use :(
[22:28:16] <lantech19446> I know there's a way to just call those particular parts from the getgo
[22:29:10] <qswz> yea
[22:29:28] <qswz> what's good for fonts are geometric fonts, they need only one file
[22:29:37] <lantech19446> the only things we even use are .woff and yet they're loading .eot .svg and .ttf too for both
[22:29:45] <qswz> I mean variable fonts
[22:29:48] <qswz> not geometric
[22:30:08] <qswz> https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide
[22:31:04] <cth> what do we use to iterate through an array, pick certain stuff from each object and concat it to a string... I'm thinking about map and then join
[22:32:18] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[22:32:45] <cth> like so: ["Name:code, Desc:whatever desc is, the first desc basically", "Name:auto, Desc:the second description"].map(function(obj){return obj.split(/desc:/i).slice(-1)}).join(",")
[22:33:05] <cth> I wonder if there's really a need to use two array functions
[22:33:44] <cth> I mean, this gives me 2N and I wanna keep it at N, right? And I also don't wanna iterate through it with foreach
[22:34:29] <stenno> no, this is fine
[22:34:55] <stenno> you could put it into a .reduce
[22:35:17] <stenno> but like this its more readable imo
[22:35:28] <cth> right, ok. Thanks!
[22:35:43] <qswz> better chaining .map .filter and stuff than a big reduce, imo
[22:35:50] <stenno> yeah
[22:35:56] <qswz> and not care about perf
[22:36:49] <qswz> RoP Readability over Performance
[22:37:08] <stenno> keep in mind though that slice returns an array
[22:37:10] <lantech19446> holy shit preloading our mobile css brought it up to a 72 on it's own
[22:37:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:37:44] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[22:39:59] <qswz> n> 'foo.bar.shit'.split('.').at(-1)
[22:40:00] <jellobot> (okay) 'shit'
[22:40:25] <stenno> or flatMap :P
[22:40:38] <qswz> sure
[22:43:33] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:43:36] <cth> oh damn, I keep forgetting the slice returns an array. Many thanls stenno
[22:45:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:36] <cth> but I like how join is smart enough to deal with nested arrays seamlessly. Damn I love JS.
[22:45:43] <cth> the sexiest language ever.
[22:45:53] <qswz> it's not really smart
[22:46:06] <qswz> it's because array toString does it with a comma
[22:46:15] <qswz> n> ['aa', 'bb']+''
[22:46:16] <jellobot> (okay) 'aa,bb'
[22:46:36] <qswz> n> [['aa', 'bb'], ['cc', 'dd']] + ''
[22:46:37] <jellobot> (okay) 'aa,bb,cc,dd'
[22:46:46] <qswz> n> [['aa', 'bb'], ['cc', 'dd']].join('_')
[22:46:46] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[22:46:47] <jellobot> (okay) 'aa,bb_cc,dd'
[22:46:52] <cth> ooooooh
[22:46:56] <cth> I see now, thanks
[22:47:03] <qswz> n> [['aa', 'bb'], ['cc', 'dd']].map(a => a.join('_')).join('_')
[22:47:04] <jellobot> (okay) 'aa_bb_cc_dd'
[22:47:05] <qswz> yw
[22:47:28] *** Joins: X-Scale` (~ARM@31.22.203.65)
[22:47:29] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:48:38] *** X-Scale` is now known as X-Scale
[22:51:38] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:11] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:3911:e7d9:4efd:d7ee)
[22:52:34] <ljharb> lol nobody says "RoP" but yes, readability is way better than performance
[22:52:39] <ljharb> or rather, way more important
[22:53:07] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[22:53:40] <qswz> I just made up that term
[22:53:42] <qswz> :p
[22:53:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:14da:3bf0:27ee:7397) (Quit: Client closed)
[22:54:08] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:14da:3bf0:27ee:7397)
[22:57:09] *** Joins: Betal (~Betal@user/betal)
[22:57:12] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:57:43] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[22:58:02] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[23:01:31] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[23:02:37] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[23:05:50] *** Quits: federico_it (~textual@151.95.125.195) (Read error: Connection reset by peer)
[23:05:52] <qswz> the COP principle, comprehensive over performant
[23:07:12] <stenno> The TOP Principle
[23:07:58] *** Quits: Gamara (Gamara@66-203-186-178.ded.execulink.com) (Quit: Going offline, see ya! (www.adiirc.com))
[23:10:05] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[23:10:25] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Client Quit)
[23:12:08] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:e159:7ddf:f7bb:a877) (Quit: Textual IRC Client: www.textualapp.com)
[23:14:07] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[23:15:12] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[23:15:51] *** Joins: noarb (~noarb@user/noarb)
[23:16:34] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[23:17:31] *** Joins: bomb (~bomb@user/bomb)
[23:18:07] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:91aa:6be9:4f6:b2a2)
[23:19:46] *** Joins: noarb (~noarb@user/noarb)
[23:20:16] *** Joins: federico_it (~textual@151.95.125.195)
[23:23:39] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[23:27:15] *** Joins: Gamara (Gamara@66-203-186-178.ded.execulink.com)
[23:27:40] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[23:29:11] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Ping timeout: 264 seconds)
[23:32:26] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[23:33:39] *** Joins: audiobirb (~audio@cpe-24-27-99-134.tx.res.rr.com)
[23:34:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[23:35:02] *** Joins: pmercado (~pmercado@190.22.167.171)
[23:35:47] *** Quits: audio (~audio@2603-8081-1800-1546-0cb3-5ee7-df8a-1120.res6.spectrum.com) (Ping timeout: 268 seconds)
[23:35:59] *** Joins: audiocat (~audio@2603-8081-1800-1546-10af-d74f-73e0-9d35.res6.spectrum.com)
[23:36:48] *** Joins: konrados (~konrados@user-5-173-144-8.play-internet.pl)
[23:36:52] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-127-230.red.bezeqint.net)
[23:37:15] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Ping timeout: 260 seconds)
[23:37:17] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[23:37:55] <fweht> is there a way to use SVGGraphicsElement.getBBox() with svg elements dynamically generated from an array of path objects?
[23:38:29] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[23:38:39] *** Quits: audiobirb (~audio@cpe-24-27-99-134.tx.res.rr.com) (Ping timeout: 260 seconds)
[23:39:46] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[23:43:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:44:31] *** Quits: Guest78 (~Guest78@p200300c8cf2dff00b8d422587b1562c3.dip0.t-ipconnect.de) (Quit: Client closed)
[23:46:55] <bomb> fweht you mean, before rendering any SVG on the screen?
[23:47:49] *** Joins: nomic (~nomic@185.198.243.251)
[23:48:30] <fweht> bomb: yes, exactly
[23:50:16] <bomb> fweht it's tricky man. text has a method for that, bot shapes and stuff... I would probably use a library that generates SVG
[23:50:47] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:51:15] *** Quits: rawgreaze_ (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Ping timeout: 260 seconds)
[23:51:23] <fweht> bomb: makes sense, didnt really expect it to work, thanks!
[23:52:39] <bomb> fweht different approach than SVG, but you might find it useful: http://paperjs.org/
[23:52:56] <bomb> has all the functions to calculate bounds and stuff
[23:53:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:53:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:53:45] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:54:22] <fweht> yeah, paperjs has alway been in the back of my head but i never actually used it, will check out if it suits my need here!
[23:54:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:55:18] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[23:56:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:14da:3bf0:27ee:7397) (Ping timeout: 256 seconds)
[23:56:54] *** Quits: delvx_ (~arek@77.252.63.98) (Ping timeout: 265 seconds)
