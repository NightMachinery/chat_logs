[00:00:17] <hololeap> well, arrays with a known size
[00:00:28] <EvanR> before it's an array, you must choose an embedding of r into the euclidean plane
[00:00:40] <EvanR> so we know how to arrange stuff in space
[00:01:00] <EvanR> make sure it's a horizontal arrangement
[00:02:01] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:02:01] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:02:01] *** Joins: wroathe (~wroathe@user/wroathe)
[00:02:26] <hololeap> % :t tablulate -- this is the tricky one which requires the structure to be fixed
[00:02:26] <yahb> hololeap: ; <interactive>:1:1: error:; * Variable not in scope: tablulate; * Perhaps you meant one of these: `tabulate' (imported from Data.Functor.Rep), `Q.tabulate' (imported from Test.QuickCheck), `gtabulate' (imported from Data.Functor.Rep)
[00:02:34] <EvanR> (I mean, how else do you comprehend an array. O(1) performance? xD)
[00:02:41] <hololeap> % :m + Data.Functor.Rep
[00:02:42] <yahb> hololeap: 
[00:02:48] <hololeap> % :t tablulate
[00:02:48] <yahb> hololeap: ; <interactive>:1:1: error:; * Variable not in scope: tablulate; * Perhaps you meant one of these: `tabulate' (imported from Data.Functor.Rep), `Q.tabulate' (imported from Test.QuickCheck), `gtabulate' (imported from Data.Functor.Rep)
[00:03:00] <awpr> https://en.wikipedia.org/wiki/Container_(type_theory) even goes as far as to say a container is a sum type of many Representables, if you reorganize the concepts slightly
[00:03:05] <hololeap> % :t tabulate -- derp
[00:03:05] <yahb> hololeap: Representable f => (Rep f -> a) -> f a
[00:04:08] *** Joins: taylorswift2018 (~taylorswi@115-188-158-33-fibre.sparkbb.co.nz)
[00:04:52] *** Joins: Sqaure (~a@user/square)
[00:05:26] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[00:06:05] *** Joins: Pirate18 (~Pirate18@72-46-55-28.lnk.ne.static.allophone.net)
[00:06:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:07:47] *** Quits: Topsi (~Tobias@dyndsl-095-033-093-001.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[00:09:15] *** Quits: PokeyCat (~PokeyCat@cpe-24-55-0-112.austin.res.rr.com) (Remote host closed the connection)
[00:09:35] *** Joins: cynomys (~cynomys@user/cynomys)
[00:09:35] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[00:10:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:10:56] <EvanR> a perfect binary tree is an array of size 2^n, programmers think the second one is more concrete, but the first one is how RAM is constructed xD
[00:12:00] <monochrom> If you relax from binary to a hardware-dependent base then yes.
[00:12:27] <EvanR> or maybe mixed base
[00:13:11] <monochrom> And yes they even have the term "linear address model". The irony that this is just a model and nowhere near the bare "metal" is totally lost.
[00:13:30] <[exa]> o blocks, o caches
[00:14:05] <monochrom> And the irony that semiconductors are nowhere near metal is also totally lost.
[00:14:14] <EvanR> lol
[00:14:15] <[exa]> o silicon
[00:14:22] *** Joins: Erutuon (~Erutuon@user/erutuon)
[00:14:41] <monochrom> Shows you how much programmers are living in their own reality distortion fields.
[00:14:46] <Rembane> Are semiconductors more like porcelain?
[00:14:47] <EvanR> shiny https://en.wikipedia.org/wiki/Silicon#/media/File:SiliconCroda.jpg
[00:16:26] <EvanR> it's also literally "near metal" (aluminum) on the periodic table
[00:16:32] <monochrom> If you go back to the 1940s of using relays for logic gates, now that would be honest about "bare metal".
[00:17:25] <monochrom> Now see Shannon's nice Msc thesis on thinking in terms of logic gates in the first place!  https://www.cs.virginia.edu/~evans/greatworks/shannon38.pdf
[00:20:15] <dolio> This is such a ridiculous complaint.
[00:20:17] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[00:21:02] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:21:42] *** Joins: emf (~emf@2620:10d:c090:400::5:ab3f)
[00:26:10] *** Joins: Hash (~Hash@hashsecurity.org)
[00:28:40] *** Joins: deadmarshal (~deadmarsh@95.38.112.249)
[00:31:13] *** Joins: pavonia (~user@user/siracusa)
[00:32:37] *** Quits: xff0x (~xff0x@2001:1a81:52c7:8c00:f773:af87:1684:89e3) (Ping timeout: 240 seconds)
[00:33:05] *** Quits: deadmarshal (~deadmarsh@95.38.112.249) (Ping timeout: 256 seconds)
[00:33:41] *** Joins: xff0x (~xff0x@2001:1a81:52c7:8c00:38b7:f9c0:eacd:8def)
[00:35:23] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:39:29] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[00:47:58] *** Joins: cjb (~cjb@user/cjb)
[00:48:08] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[00:50:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:50:27] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[00:53:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[00:58:26] <EvanR> This sentence is such a ridiculous complaint
[00:59:44] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[01:02:02] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:06:49] *** Joins: sheb (~sheb@31.223.228.71)
[01:08:18] <d34df00d> This sentence is false.
[01:11:39] *** Joins: Constraintegic (~thomasbul@2001:a61:1366:3201:de74:893f:6e5d:3ce1)
[01:12:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a) (Ping timeout: 250 seconds)
[01:13:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[01:15:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:17:48] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:18:50] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:19:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:19:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[01:20:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[01:21:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:21:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:23:37] *** Quits: Constraintegic (~thomasbul@2001:a61:1366:3201:de74:893f:6e5d:3ce1) (Quit: Leaving)
[01:24:31] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 250 seconds)
[01:24:37] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:24:55] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[01:24:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[01:25:41] <Pirate18> I've got an expensive Rand StdGen A and want to generate a large # of As from it, preferably concurrently. What would be the best way to do that? Right now I spawn numCapabilities threads that repeatedly generate one (using runRand) and pass it to a single consumer thread with an MVar.
[01:26:19] <wavemode> why's it so expensive
[01:26:50] <Pirate18> It's a monte-carlo simulation that runs several thousand steps to produce a result
[01:29:48] <hololeap> so is each step of the StdGen getting salted with this expensive computation, or the computation just used to initialize it?
[01:31:54] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:32:09] <Pirate18> Right now I call newStdGen once per thread, and thread that StdGen through each iteration. Getting a new StdGen each time (with evalRandIO instead of runRand) ended up being slower.
[01:32:14] <ski> Pirate18 : you're `split'ting at time of spawn ?
[01:32:20] <ski> oh, `newStdGen'
[01:32:38] <Pirate18> effectively the same I think
[01:32:54] <ski> well, `newStdGen' mutates the global `StdGen'
[01:33:07] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:33:08] <ski> so, perhaps if you only did `newStdGen' once ?
[01:33:40] <hololeap> mutating the global StdGen probably isn't a bad thing
[01:33:45] <Pirate18> I could but I'm only calling newStdGen once per thread so that's not going to be the bottleneck
[01:34:14] <ski> oh right, only `numCapabilities' threads
[01:34:52] <hololeap> I don't know if there is a better approach than what you're doing, Pirate18
[01:35:41] <EvanR> calling newStdGen once per number doesn't sound right
[01:35:57] *** Quits: fendor (~fendor@178.115.78.100.wireless.dyn.drei.com) (Remote host closed the connection)
[01:36:22] <EvanR> nvm, once per capability
[01:37:05] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[01:37:07] <Pirate18> OK. I've made/fixed a few dumb mistakes so far (like not cleaning up the worker threads) so wanted to double-check I wasn't missing a library that made it simple, in addition to anything that would speed it up of course.
[01:37:25] <Pirate18> Thanks for the help
[01:37:31] *** Quits: jonathanx_ (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se) (Remote host closed the connection)
[01:37:34] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
[01:37:37] <hololeap> you could use the stuff in the parallel package
[01:37:42] <EvanR> I hear the stdgen rng from base isn't the highest performance RNG in the world
[01:37:53] <EvanR> there are many to choose from on hackage
[01:38:10] <monochrom> base doesn't have it (or any random story) any more.
[01:38:19] <EvanR> orly
[01:38:29] <monochrom> The random package uses the splixmix package, which is pretty fast.
[01:38:43] <monochrom> err splitmix
[01:38:51] <wavemode> how are the worker threads passing the numbers to the consumer thread? a concurrent queue might be the best way
[01:39:26] <hololeap> they probably each just generate N numbers as a batch job
[01:39:32] <Pirate18> Just an MVar right now because the consumer is much faster than all the producers, I haven't benchmarked a queue against it yet though.
[01:41:05] <Pirate18> Alright I've got a few things to benchmark now, thanks!
[01:41:57] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[01:42:06] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:43:52] <EvanR> N threads are producing random numbers in parallel and pushing to the same MVar, where 1 thread is taking and using them? Interesting, I guess if they are properly random the result is also random
[01:44:15] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4) (Remote host closed the connection)
[01:44:44] <EvanR> it's not obvious how to show that doing that is still random, to me
[01:45:54] <EvanR> N rngs + the "randomness" of the scheduler...
[01:45:57] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 250 seconds)
[01:47:09] <hololeap> if you start with a random value and iterate it through a PRNG N times, does it lose its randomness at some point?
[01:47:52] <monochrom> No, but you hit periodicity at some point.
[01:48:04] <EvanR> meaning, a random seed
[01:48:18] <monochrom> Oh wait you mean something else.
[01:48:39] <EvanR> iterate *it* through an RNG = just run the RNG?
[01:49:34] <monochrom> This is why most PRNGs don't let you really do that. The seed type is usually much wider than the output type.
[01:49:47] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[01:50:04] <EvanR> the state type
[01:50:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:50:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:50:12] *** Joins: wroathe (~wroathe@user/wroathe)
[01:51:05] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Remote host closed the connection)
[01:54:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:55:27] <EvanR> all numbers are equally random, but something about macrovariable values correspond to different number of microstates
[01:55:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:56:05] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:56:10] *** Quits: xff0x (~xff0x@2001:1a81:52c7:8c00:38b7:f9c0:eacd:8def) (Ping timeout: 260 seconds)
[01:56:53] *** Joins: xff0x (~xff0x@2001:1a81:52c7:8c00:e8ce:cafa:8529:c63a)
[01:58:45] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:05:03] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:05:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:07:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:07:15] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[02:07:44] *** Joins: RFV (~Thunderbi@187.red-88-13-186.dynamicip.rima-tde.net)
[02:07:48] *** Quits: burnside_ (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Remote host closed the connection)
[02:08:21] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[02:10:21] *** Quits: RFV (~Thunderbi@187.red-88-13-186.dynamicip.rima-tde.net) (Client Quit)
[02:11:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[02:12:17] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[02:17:10] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[02:20:00] *** Joins: xcmw (~textual@071-087-004-073.biz.spectrum.com)
[02:20:16] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:27:33] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[02:29:25] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[02:30:37] *** Quits: emf (~emf@2620:10d:c090:400::5:ab3f) (Ping timeout: 240 seconds)
[02:39:24] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[02:43:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Remote host closed the connection)
[02:43:21] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[02:46:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:47:43] *** Quits: MochizukisLastTh (~Mochizuki@112-68-46-13f1.osk2.eonet.ne.jp) (Ping timeout: 256 seconds)
[02:50:11] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[02:50:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[02:51:21] *** Quits: tcard_ (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp) (Quit: Leaving)
[02:53:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217)
[02:54:14] *** Joins: MochizukisLastTh (~Mochizuki@112-68-46-13f1.osk2.eonet.ne.jp)
[02:54:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Ping timeout: 240 seconds)
[02:57:33] <sm> Data.Char.isAlphaNum, y'all. What weird Unicode demons might lurk inside it ?
[02:58:06] <sm> https://hackage.haskell.org/package/base-4.16.0.0/docs/Data-Char.html#v:isAlphaNum
[02:58:06] <sm> "Selects alphabetic or numeric Unicode characters. ... numeric digits outside the ASCII range, as well as numeric characters which aren't digits, are selected by this function ..."
[02:58:11] *** Joins: tcard (~tcard@p2878075-ipngn18701hodogaya.kanagawa.ocn.ne.jp)
[02:58:42] <maerwald> lolz
[02:58:58] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[02:59:03] <sm> do you think that includes any problematic exploit-friendly chars ?
[03:00:20] <monochrom> > let x = 'ᴀ' in (ord x, isAlphaNum x)
[03:00:21] <lambdabot>  (7424,True)
[03:00:27] <ski> > [c | c <- [minBound .. maxBound],isAlphaNum c]
[03:00:28] <lambdabot>  "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\170\178\179\...
[03:01:58] <sm> the kind that don't render, or change the direction of rendering, or look like things they're not...
[03:02:10] * sm prints that list.. ooh yeah that's fun
[03:02:26] *** Joins: AlexNoo_ (~AlexNoo@94.233.241.230)
[03:03:11] <monochrom> > let x = 'ⅰ' in (ord x, isNumber x)
[03:03:12] <lambdabot>  (8560,True)
[03:03:29] <sm> yeah.. there's no way to audit that. On the upside, includes elvish runes, which would be awesome to use
[03:03:29] <monochrom> (That's Roman numeral ⅰ)
[03:03:57] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[03:04:49] <monochrom> > isNumber '①'
[03:04:50] <lambdabot>  True
[03:04:57] * monochrom is number ① :)
[03:05:03] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[03:05:21] <monochrom> err there is a better one
[03:05:25] <monochrom> > isNumber '⒈'
[03:05:26] <lambdabot>  True
[03:05:37] *** Quits: Alex_test (~al_test@94.233.241.94) (Ping timeout: 256 seconds)
[03:05:37] *** Quits: AlexZenon (~alzenon@94.233.241.94) (Ping timeout: 256 seconds)
[03:05:42] * monochrom is number ⒈ (number one, period) :)
[03:05:55] <awpr> > isNumber '∞'
[03:05:57] <lambdabot>  False
[03:06:11] *** Quits: AlexNoo (~AlexNoo@94.233.241.94) (Ping timeout: 256 seconds)
[03:06:54] * sm uploaded an image: (861KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/sIiMOUQfMefwmCrUWKIdYdcN/Screen%20Shot%202022-02-06%20at%201.36.28%20PM.png >
[03:07:14] <sm> ^ that's the first screenful. I'm puzzled by the lower 2/3, are those semigraphics ? Or a limitation of my font /
[03:08:54] <monochrom> ⅔ is a thing
[03:08:56] <geekosaur> looks to me like emacs might not handle the astral plane correctly?
[03:09:10] <geekosaur> (that is, non-BMP)
[03:09:17] *** Quits: MochizukisLastTh (~Mochizuki@112-68-46-13f1.osk2.eonet.ne.jp) (Quit: Client closed)
[03:09:18] <monochrom> > let x = '⅔' in (ord x, generalCategory x)
[03:09:19] <lambdabot>  (8532,OtherNumber)
[03:09:26] *** Joins: Alex_test (~al_test@94.233.241.230)
[03:09:27] *** Joins: AlexZenon (~alzenon@94.233.241.230)
[03:09:49] <monochrom> Oh nevermind :)
[03:10:04] <awpr> > read "⅔" :: Rational
[03:10:05] <hpc> @let ⅔ = 2/3
[03:10:05] <lambdabot>  Parse failed: Illegal character ''\8532''
[03:10:06] <lambdabot>  *Exception: Prelude.read: no parse
[03:10:07] <hpc> :(
[03:10:20] <Axman6> :(
[03:10:40] <Axman6> @let a⅔ = 2/3
[03:10:41] <lambdabot>  Defined.
[03:11:04] <Axman6> pronounced "A two third"
[03:11:47] <byorgey> monochrom: in my font 
[03:11:54] <sm> unicode is amazing
[03:12:04] <awpr> 1/4 = "one fourth", so 3/2 = "one twothirdsth"?
[03:12:04] <Cale> Also known as d
[03:12:06] <byorgey> monochrom: in my font ⒈ looks like "bottom, period"
[03:12:16] <sm> and has hung my emacs/vs code, as I half expected
[03:12:58] <monochrom> bottom is OK. I'm the foundation of you all!
[03:13:32] <sm> ok, got it back, but see how it has corrupted the minibuffer rendering:
[03:13:37] * sm uploaded an image: (23KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/QcdiRBcGMmbubAYdWbKHFJgB/image.png >
[03:14:01] <sm> I guess I'm looking for a more restrictive isAlphaNum, to enable smaller subsets
[03:14:12] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[03:15:57] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[03:16:32] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[03:17:25] <Cale> (perfect fourth down from a)
[03:18:46] <maerwald> sm: chop it off
[03:19:09] <monochrom> There is isAscii
[03:19:30] <sm> they're complaining about isAscii
[03:19:42] <sm> I can't understand it
[03:19:58] <monochrom> Are they OK with isLatin1?
[03:20:02] <Cale> awpr: haha, 3/2 = "one (perfect) fifth"
[03:20:18] <awpr> 2 = 2/3 confirmed
[03:20:23] <awpr> 5 = 2/3
[03:20:35] <sm> monochrom: oh that sounds like a nice progressive step. (Would like CJK too maybe)
[03:20:55] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[03:22:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:24:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[03:26:33] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:29:21] *** Quits: xcmw (~textual@071-087-004-073.biz.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:34:24] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:43:12] *** Parts: amk (~amk@109.255.169.126) (WeeChat 3.4)
[03:44:39] *** Quits: machinedgod (~machinedg@24.105.81.50) (Quit: Lost terminal)
[03:54:12] *** Quits: maxime_ (~maxime@2a01cb08833598006800cd803015c082.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:01:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:01:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:01:53] *** Joins: wroathe (~wroathe@user/wroathe)
[04:08:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:09:30] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:13:11] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 252 seconds)
[04:14:30] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[04:26:01] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:31:44] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:32:35] *** Joins: img (~img@user/img)
[04:35:41] *** Joins: califax (~califax@user/califx)
[04:37:53] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:48:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:49:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:49:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:52:21] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:52:58] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[04:53:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[04:57:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:00:21] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:c32:f815:8539:fe9a) (Ping timeout: 245 seconds)
[05:07:00] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[05:14:54] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[05:19:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Ping timeout: 250 seconds)
[05:20:14] *** Joins: benin (~benin@183.82.31.24)
[05:21:49] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[05:22:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[05:24:55] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[05:26:05] *** Joins: tommd (~tommd@67-42-147-226.ptld.qwest.net)
[05:29:44] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[05:30:51] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:31:34] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Remote host closed the connection)
[05:32:01] *** Joins: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk)
[05:33:18] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:36:18] *** Quits: burnsidesLlama (~burnsides@dhcp168-015.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[05:46:16] *** Joins: califax- (~califax@user/califx)
[05:47:07] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[05:48:43] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[05:48:57] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:48:57] *** califax- is now known as califax
[05:52:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217)
[05:56:39] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[05:57:53] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[06:01:00] *** Quits: tommd (~tommd@67-42-147-226.ptld.qwest.net) (Ping timeout: 250 seconds)
[06:01:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:03:13] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[06:04:20] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[06:04:57] *** Quits: xff0x (~xff0x@2001:1a81:52c7:8c00:e8ce:cafa:8529:c63a) (Ping timeout: 240 seconds)
[06:07:04] *** Joins: xff0x (~xff0x@2001:1a81:530c:c100:a39b:fc3d:abc2:3254)
[06:07:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:07:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:07:08] *** Joins: wroathe (~wroathe@user/wroathe)
[06:09:10] <ephemient> > let x = '十' in (ord x, isNumber x)
[06:09:11] <lambdabot>  (21313,False)
[06:09:34] <ephemient> CJK numeric characters aren't numbers apparently
[06:13:25] *** Joins: foul_owl (~kerry@23.82.193.178)
[06:14:23] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[06:18:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217)
[06:19:34] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[06:24:24] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:8900:f68f:743:8461) (Remote host closed the connection)
[06:26:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[06:30:15] *** Joins: razetime (~quassel@49.207.209.26)
[06:33:21] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:740e:1010:1471:f716)
[06:33:59] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:42:19] *** Quits: foul_owl (~kerry@23.82.193.178) (Ping timeout: 256 seconds)
[06:42:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:42:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[06:44:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217)
[06:46:16] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:48:27] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[06:50:35] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[06:54:05] *** Quits: razetime (~quassel@49.207.209.26) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:54:22] *** Joins: razetime (~quassel@49.207.209.26)
[06:56:55] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[06:58:12] *** Joins: foul_owl (~kerry@23.82.193.176)
[06:59:43] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[07:00:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:01:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[07:02:57] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[07:03:05] *** Joins: cheater (~Username@user/cheater)
[07:06:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:06:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:06:52] *** Joins: wroathe (~wroathe@user/wroathe)
[07:07:01] *** Joins: img (~img@user/img)
[07:08:23] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:08:48] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Remote host closed the connection)
[07:09:31] *** Quits: td_ (~td@muedsl-82-207-238-099.citykom.de) (Ping timeout: 256 seconds)
[07:11:17] *** Joins: td_ (~td@muedsl-82-207-238-078.citykom.de)
[07:11:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:15:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:15:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:15:52] *** finn_elija is now known as FinnElija
[07:19:29] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[07:21:08] *** Quits: Pirate18 (~Pirate18@72-46-55-28.lnk.ne.static.allophone.net) (Quit: Client closed)
[07:24:52] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:25:57] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:27:41] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:29:19] *** Joins: flinner (~flinner__@2001:16a2:7844:cc00:a653:a7c4:bee9:612)
[07:29:19] *** Quits: flinner (~flinner__@2001:16a2:7844:cc00:a653:a7c4:bee9:612) (Changing host)
[07:29:19] *** Joins: flinner (~flinner__@user/flinner)
[07:30:34] *** Joins: jao (~jao@static-68-235-44-10.cust.tzulo.com)
[07:30:53] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[07:31:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217)
[07:32:21] *** Joins: cyphase (~cyphase@user/cyphase)
[07:32:57] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[07:34:09] *** Quits: modnar (~modnar@shell.sonic.net) (Quit: No Ping reply in 180 seconds.)
[07:34:14] *** Joins: dajoer (~david@user/gvx)
[07:35:35] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[07:36:09] *** Quits: foul_owl (~kerry@23.82.193.176) (Ping timeout: 256 seconds)
[07:36:16] *** Joins: modnar (~modnar@shell.sonic.net)
[07:39:13] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[07:41:02] *** Quits: Null_A (~null_a@2601:645:8700:2290:dcf9:b60:3266:d217) (Remote host closed the connection)
[07:43:55] *** Quits: jao (~jao@static-68-235-44-10.cust.tzulo.com) (Remote host closed the connection)
[07:45:05] *** Joins: rusrushal13 (~rusrushal@2401:4900:447d:3aba:8f0f:db79:1f48:d9d7)
[07:47:24] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[07:48:28] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[07:52:00] *** Joins: foul_owl (~kerry@192.145.116.101)
[07:53:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10)
[07:57:17] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[07:58:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:58:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:58:50] *** Joins: wroathe (~wroathe@user/wroathe)
[08:00:46] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[08:00:50] *** Joins: mbuf (~Shakthi@171.61.147.232)
[08:03:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:08:05] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:13:12] *** Quits: razetime (~quassel@49.207.209.26) (Remote host closed the connection)
[08:15:21] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[08:16:04] *** Quits: juhp (~juhp@128.106.188.82) (Quit: juhp)
[08:19:09] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[08:19:19] *** Joins: fef (~thedawn@user/thedawn)
[08:20:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[08:23:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[08:23:45] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:24:00] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:26:55] *** Joins: xsperry (~xs@user/xsperry)
[08:27:31] *** Quits: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10) (Remote host closed the connection)
[08:31:07] *** Quits: rusrushal13 (~rusrushal@2401:4900:447d:3aba:8f0f:db79:1f48:d9d7) (Ping timeout: 256 seconds)
[08:31:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10)
[08:32:45] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[08:33:07] *** Joins: califax (~califax@user/califx)
[08:36:33] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[08:36:39] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:39:16] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:41:17] *** Joins: cyphase (~cyphase@user/cyphase)
[08:41:28] *** Quits: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10) (Remote host closed the connection)
[08:42:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10)
[08:44:16] *** Joins: juhp (~juhp@128.106.188.82)
[08:46:17] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:39b9:31d6:1ae3:9955)
[08:47:48] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[08:49:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:51:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Ping timeout: 240 seconds)
[08:52:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:4c47:2f1b:c09c:dc10) (Remote host closed the connection)
[08:54:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[08:55:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105)
[08:56:01] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[08:56:17] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:57:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:58:57] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[09:00:17] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[09:01:38] *** Joins: alp (~alp@user/alp)
[09:02:42] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:02:45] *** Quits: taylorswift2018 (~taylorswi@115-188-158-33-fibre.sparkbb.co.nz) (Quit: Leaving)
[09:02:46] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[09:03:19] *** Joins: alp (~alp@user/alp)
[09:04:11] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[09:04:26] *** Quits: alp (~alp@user/alp) (Remote host closed the connection)
[09:04:59] *** Quits: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105) (Remote host closed the connection)
[09:05:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[09:05:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:09:39] *** Parts: jneira[m] (~jneiramat@2001:470:69fc:105::d729) ()
[09:09:57] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[09:10:38] *** Joins: andreabedini (~andreabed@8s8kj6nggd7d356nhftb.ip6.superloop.com)
[09:11:11] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[09:11:21] *** Quits: foul_owl (~kerry@192.145.116.101) (Ping timeout: 256 seconds)
[09:17:35] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[09:18:32] *** Joins: haskell_ (~haskell@65-102-32-32.ptld.qwest.net)
[09:21:10] *** haskell_ is now known as id-obs
[09:21:15] *** Quits: shriekingnoise_ (~shrieking@201.231.16.156) (Quit: Quit)
[09:22:00] *** Quits: id-obs (~haskell@65-102-32-32.ptld.qwest.net) (Remote host closed the connection)
[09:22:02] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[09:26:17] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[09:26:49] *** Joins: foul_owl (~kerry@23.82.194.141)
[09:28:13] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[09:37:54] *** Quits: andreabedini (~andreabed@8s8kj6nggd7d356nhftb.ip6.superloop.com) (Quit: WeeChat 3.3)
[09:38:47] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:38:56] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:39:43] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[09:44:33] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[09:46:56] *** Joins: freemanX (~user@112.199.211.72)
[09:50:48] *** Joins: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105)
[10:00:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105) (Remote host closed the connection)
[10:06:57] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:10:48] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:16:16] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:39b9:31d6:1ae3:9955) (Remote host closed the connection)
[10:20:00] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[10:23:54] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:26:11] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[10:26:33] *** Joins: nunggu (~q@user/nunggu)
[10:31:28] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:c46f:8faf:ca93:337c)
[10:35:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[10:40:05] *** Joins: neurocyte0917090 (~neurocyte@IP-045128181160.dynamic.medianet-world.de)
[10:40:05] *** Quits: neurocyte0917090 (~neurocyte@IP-045128181160.dynamic.medianet-world.de) (Changing host)
[10:40:05] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[10:43:34] *** Joins: razetime (~quassel@49.207.209.26)
[10:44:05] *** Quits: razetime (~quassel@49.207.209.26) (Client Quit)
[10:44:20] *** Joins: razetime (~quassel@49.207.209.26)
[10:45:25] *** Joins: Everything (~Everythin@37.115.210.35)
[10:46:17] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::80f1) (Ping timeout: 240 seconds)
[10:49:40] <Axman6> is there a common function which looks like" foo b xs = if b then xs else []? it's not guard because that needs m ()
[10:50:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:50:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:50:35] *** Joins: wroathe (~wroathe@user/wroathe)
[10:53:01] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[10:53:31] <jackdk> https://hoogle.haskell.org/?hoogle=Monoid%20m%20%3D%3E%20Bool%20-%3E%20m%20-%3E%20m I see nothing promising Axman6 
[10:55:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:55:39] <jackdk> @pl (\b x -> guard b *> x)
[10:55:39] <lambdabot> (*>) . guard
[10:55:43] <jackdk> Axman6: ^
[10:55:50] <jackdk> the birdface stands guard
[10:57:18] *** Joins: fef (~thedawn@user/thedawn)
[10:58:21] *** Parts: Everything (~Everythin@37.115.210.35) ()
[10:58:35] <jackdk> Everything is gone! *absolute despair*
[10:58:43] <Axman6> D:
[10:58:57] <Axman6> ther's also filter . const
[10:59:18] <Axman6> or filter . const . not depending on which one I actually want...
[10:59:31] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:580c:39ae:f851:5d4a)
[10:59:33] <Axman6> though the O(n) vs O(1) makes me sad
[10:59:57] <Axman6> have just used the if version
[11:02:25] <jackdk> Axman6: the chozo sentinel is disappointed
[11:03:31] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:07:11] *** Joins: tdammers (~tdammers@77.109.72.177.res.static.edpnet.net)
[11:08:25] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[11:13:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105)
[11:17:12] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:17:35] <Inst> erm
[11:17:48] <Inst> am in the only person here who read "Thinking Functionally in Haskell" by Richard Bird?
[11:18:09] <Inst> *with Haskell
[11:18:46] <Inst> just finished another skim of it, and honestly, it's incredibly informative both about Haskell as well as about teaching Haskell
[11:19:05] <Inst> typeclasses chapter 2 is a small deal, but he goes over efficiency concerns in Chapter 7 and introduces O-notation
[11:22:50] *** Quits: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105) (Remote host closed the connection)
[11:26:12] <Hecate> oh that's nice :)
[11:27:42] <Inst> https://www.amazon.com/Thinking-Functionally-Haskell-Richard-Bird/dp/1107452643
[11:27:57] <Inst> The approach taken here is heavy on equational reasoning, and the author is not afraid to delve into topics often perceived as arcane -- such as performance optimization of Haskell programs. The book does shy away from discussing rigorous methods for establishing asymptotic complexity under lazy evaluation, but that's probably a good thing in an introductory textbook, and you'd want to refer to Okasaki's PFDS or somesuch for the 
[11:27:57] <Inst> gory details anyway. Overall, the book takes more of a computer science-y approach, which I find to be slightly preferrable to the alternative "let's start hacking and think about getting out of the mess later" route, though some clever combination of the two might be superior to either.
[11:34:33] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:35:44] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[11:38:46] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[11:39:10] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[11:40:17] *** Quits: sqrt2_ (~ben@80-108-18-7.cable.dynamic.surfer.at) (Ping timeout: 250 seconds)
[11:41:10] *** Joins: alp (~alp@user/alp)
[11:43:13] *** Joins: sqrt2 (~ben@80-108-18-7.cable.dynamic.surfer.at)
[11:44:52] *** Joins: chele (~chele@user/chele)
[11:45:43] *** Joins: cosimone (~user@93-47-231-87.ip115.fastwebnet.it)
[11:47:01] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de)
[11:49:56] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[11:50:34] <Axman6> I don''t think anyone would call those arcane ideas, we think about them all the time
[11:50:49] <Inst> for newbies?
[11:50:54] <Inst> he's pitching it as an intro textbook
[11:51:10] <Axman6> no, of course not, you got to learn how to write haskell before you can think about learning to write fast haskell
[11:51:20] *** Quits: xff0x (~xff0x@2001:1a81:530c:c100:a39b:fc3d:abc2:3254) (Ping timeout: 252 seconds)
[11:51:24] <Axman6> which is IIRC exactly what the book does
[11:51:50] *** Joins: fendor (~fendor@178.115.64.55.wireless.dyn.drei.com)
[11:52:14] *** Joins: xff0x (~xff0x@2001:1a81:530c:c100:b873:bdb8:c5f:a8b5)
[11:52:23] <Inst[m]> concepts of perfomrance start at chapter 4, iirc, or at least chapter 5
[11:52:30] <Inst[m]> where he has a program design that's ridiculously not performant
[11:52:46] <Inst[m]> yup, chapter 4
[11:52:57] <Axman6> like, there's no point talking about performance problems until you've run into them, introducing someone to the languyage by using [(k,v)] as a map is perfectly acceptable, until that becomes a bottleneck, and then it's a good time to talk about Map and HashMap
[11:53:25] <Inst[m]> chapter 4, he mentions "if you have a nose for inefficiency, this code is better written as"
[11:53:33] <Inst[m]> while introducing list comprehensions
[11:55:49] <Inst> bird explicitly describes his book as "assuming no previous knowledge of computers or programming"
[11:56:09] <Inst> I knock his book as "appropriate as an intro to programming book, but only if you're an oxbridge undergraduate"
[11:56:18] <Axman6> Are you intentionally changing back and forth between clients?
[11:58:34] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:00:33] *** Quits: benin (~benin@183.82.31.24) (Ping timeout: 256 seconds)
[12:01:48] *** Quits: freemanX (~user@112.199.211.72) (Remote host closed the connection)
[12:02:01] *** Joins: freemanX (~user@112.199.211.72)
[12:02:11] *** Joins: benin (~benin@183.82.31.24)
[12:02:51] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 245 seconds)
[12:03:53] *** Joins: michalz (~michalz@185.246.204.87)
[12:04:47] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-058.client.tudelft.eduvpn.nl)
[12:05:05] *** AlexNoo_ is now known as AlexNoo
[12:06:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:06:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:06:21] *** Joins: wroathe (~wroathe@user/wroathe)
[12:06:31] *** Quits: michalz (~michalz@185.246.204.87) (Remote host closed the connection)
[12:08:47] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[12:09:17] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[12:10:56] *** Quits: foul_owl (~kerry@23.82.194.141) (Read error: Connection reset by peer)
[12:11:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:11:36] *** Joins: simpleauthority_ (~simpleaut@user/simpleauthority)
[12:12:07] *** Quits: simpleauthority (~simpleaut@user/simpleauthority) (Ping timeout: 256 seconds)
[12:12:07] *** simpleauthority_ is now known as simpleauthority
[12:13:39] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[12:14:34] <Inst> nope, just, sometimes convenient
[12:14:46] <Inst> i got into matrix because a friend is now in a dispute with discord and i want to help her migrate off discord into matrix
[12:15:29] <Inst> the three places where i think haskell pedagogy comes short:
[12:15:51] <Inst> not practical enough; by the end of the course, students should have a small library of haskell programs that they can modify for everyday, practical use
[12:16:09] *** Joins: kuribas (~user@ptr-25vy0i6r6bvbga979rx.18120a2.ip6.access.telenet.be)
[12:16:11] <Inst> not theoretical enough; by the end of the course, students should have a beginning grasp of computing concepts that are usually taught in later courses
[12:17:14] <Inst> not professional enough; by the end of the course, students should be conversant with monad transformers, text, and be able to read modern haskell code and use standard non-prelude libraries, even if they haven't been taught it
[12:18:13] *** Joins: max22- (~maxime@2a01cb0883359800907188a6988a6499.ipv6.abo.wanadoo.fr)
[12:19:20] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:20:48] <Inst> sorry, i'll stop bloviating
[12:22:19] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[12:25:14] *** Quits: razetime (~quassel@49.207.209.26) (Remote host closed the connection)
[12:25:56] <Inst> i'm just thinking about some of Bird's approaches, i.e, devoting entire chapters to example programs (which Hutton also does)
[12:28:16] <Inst> or, whether, it might be possible to deal with two of the three, i.e, start by issuing a professional program, then teach haskell by deconstructing the program and reverse engineering it
[12:28:33] <Inst> then, start again with another program, but with the objective first to read it, then to modify it for further capability or efficiency
[12:29:55] *** Joins: foul_owl (~kerry@192.145.116.33)
[12:30:02] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[12:30:04] *** Joins: Erutuon (~Erutuon@user/erutuon)
[12:30:06] *** Quits: nomeata (~nomeata@2001:470:69fc:105::1:5ed4) (Quit: You have been kicked for being idle)
[12:31:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:32:27] <Inst> that's probably fairly close to will kurt's approach in GPWH (Get Programming with Haskell) https://www.reddit.com/r/haskell/comments/hipa18/mini_review_of_get_programming_with_haskell_by/
[12:36:01] *** Joins: michalz (~michalz@185.246.204.75)
[12:37:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:37:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:37:11] *** Joins: wroathe (~wroathe@user/wroathe)
[12:42:29] *** Quits: V (~v@anomalous.eu) (Ping timeout: 268 seconds)
[12:42:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:43:22] *** Joins: Topsi1 (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de)
[12:44:32] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[12:45:24] *** Joins: romesrf (~romes@2001:818:dcef:c700:44a3:1843:a5e9:2bf7)
[12:45:37] *** Quits: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[12:47:11] *** Quits: romesrf (~romes@2001:818:dcef:c700:44a3:1843:a5e9:2bf7) (Client Quit)
[12:50:21] *** Joins: akegalj (~akegalj@93-139-151-35.adsl.net.t-com.hr)
[12:50:30] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 250 seconds)
[12:51:07] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:51:08] *** Joins: xkuru (~xkuru@user/xkuru)
[12:55:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[12:57:21] *** Joins: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net)
[12:59:48] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[13:07:56] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:07:56] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:07:56] *** Joins: wroathe (~wroathe@user/wroathe)
[13:08:18] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:09:19] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:09:46] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[13:10:20] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:11:11] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[13:11:20] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:12:22] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:12:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[13:15:46] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[13:16:34] *** Quits: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net) (Ping timeout: 260 seconds)
[13:23:09] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[13:28:37] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[13:44:09] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[13:44:31] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[13:47:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[13:47:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:49:12] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de)
[13:52:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:52:59] *** Quits: Topsi1 (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[13:54:46] *** Joins: jakalx (~jakalx@base.jakalx.net)
[13:55:57] *** Joins: mzan (~quassel@mail.asterisell.com)
[14:00:52] *** Joins: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-208.stargrpns.pp.ua)
[14:01:25] *** Joins: Topsi1 (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de)
[14:03:17] *** Quits: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[14:05:13] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de)
[14:07:11] *** Quits: Topsi1 (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[14:10:14] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[14:11:07] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:11:07] *** Joins: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:15:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Ping timeout: 240 seconds)
[14:16:21] *** Joins: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net)
[14:16:55] *** Quits: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net) (Client Quit)
[14:19:51] *** Quits: comerijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:21:47] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:23:12] *** Quits: tdammers (~tdammers@77.109.72.177.res.static.edpnet.net) (Quit: WeeChat 3.0)
[14:23:46] *** Joins: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net)
[14:26:59] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:28:20] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:29:30] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:31:31] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:32:05] *** Quits: foul_owl (~kerry@192.145.116.33) (Ping timeout: 256 seconds)
[14:32:27] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:38:37] *** Quits: td_ (~td@muedsl-82-207-238-078.citykom.de) (Ping timeout: 240 seconds)
[14:38:45] *** Quits: benin (~benin@183.82.31.24) (Quit: The Lounge - https://thelounge.chat)
[14:39:43] *** Quits: AlexZenon (~alzenon@94.233.241.230) (Quit: ;-)
[14:40:18] *** Quits: Alex_test (~al_test@94.233.241.230) ()
[14:41:46] *** Quits: AlexNoo (~AlexNoo@94.233.241.230) (Quit: Leaving)
[14:42:12] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[14:47:03] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[14:47:49] *** Joins: foul_owl (~kerry@23.82.194.143)
[14:50:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:50:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:50:39] *** Joins: wroathe (~wroathe@user/wroathe)
[14:54:06] *** Joins: thevishy (~Nishant@2405:201:f005:c007:f886:9bab:89ec:ff42)
[14:55:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105)
[14:55:48] *** Joins: td_ (~td@muedsl-82-207-238-072.citykom.de)
[14:55:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:57:03] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:04:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105) (Remote host closed the connection)
[15:09:43] *** Joins: razetime (~quassel@49.207.209.26)
[15:11:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[15:12:17] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:14:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:14:34] *** Quits: thyriaen (~thyriaen@simnet-nat-pool-185-130-54-208.stargrpns.pp.ua) (Quit: Leaving)
[15:17:13] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[15:17:27] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[15:18:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:19:17] *** Joins: Achylles (~Achylles_@2804:431:d724:1728:f3b4:d659:13ba:d509)
[15:20:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:21:26] *** Quits: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[15:21:56] *** Joins: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net)
[15:25:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[15:26:15] *** Quits: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[15:26:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:26:54] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:27:29] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:31:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[15:33:17] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[15:36:55] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:38:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:56:07] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (Ping timeout: 268 seconds)
[16:00:03] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[16:01:19] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[16:03:19] *** Quits: freemanX (~user@112.199.211.72) (Ping timeout: 256 seconds)
[16:13:03] *** Joins: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net)
[16:15:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[16:15:13] *** Quits: Topsi (~Tobias@dyndsl-095-033-024-009.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[16:15:39] *** Joins: freemanX (~user@112.199.211.72)
[16:16:12] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[16:17:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:19:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:20:50] *** Joins: V (~v@anomalous.eu)
[16:24:43] *** Joins: xsperry (~xs@user/xsperry)
[16:25:23] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:26:05] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[16:28:13] *** Joins: gaff (~gaff@49.207.227.188)
[16:31:15] *** Joins: slack1256 (~slack1256@191.126.227.204)
[16:35:43] *** Joins: cuz (~user@50.226.229.246)
[16:40:36] *** Quits: RFV (~Thunderbi@5.red-80-39-250.dynamicip.rima-tde.net) (Quit: RFV)
[16:42:22] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 268 seconds)
[16:44:38] <gaff> newtype X = X a, instance Num X where ...,  and  if you have f :: Num a => a -> String; f (X _) = ...   this pattern match is disallowed in haskell.  i am not sure why.
[16:45:18] *** Joins: Guest|90 (~Guest|90@5.151.28.4)
[16:45:35] <ski> because you can pass e.g. an `Integer' to `f'
[16:45:40] <geekosaur> because Num a does not mean it's always X
[16:45:48] *** Quits: Guest|90 (~Guest|90@5.151.28.4) (Client Quit)
[16:46:20] <ski> `f :: Num a => a -> String' means "I promise to work for *all* types `a' that are instances of `Num', and if you give me an `a', i'll give you back a `String'"
[16:46:37] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[16:46:38] <gaff> but there is also a catch-all pattern f _ = ... still it does not work.
[16:46:59] <gaff> ski: correct
[16:47:01] <geekosaur> the catch-all still has to be of the same type
[16:47:01] <ski> `f' is in no position to expect to only be passed an `X'
[16:47:12] <gaff> ski i see
[16:47:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:48:20] <ski> (oh, and btw, `newtype X = X a' seems pretty useless .. did you mean to bind that tyvar `a' ?)
[16:48:25] <gaff> ski: so in this type signature, the code in `f` can not make any ssumption about a particular type.  it has to work for all instances of Num.
[16:48:33] <ski> correct
[16:48:46] <gaff> ski: that is just an example
[16:48:56] <gaff> a silly one for illustration
[16:48:57] <ski> if you want `f' to be able to assume that its input is an `X', then do `f :: X -> String'
[16:49:05] <gaff> ski
[16:49:08] <gaff> i see
[16:49:20] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[16:49:43] *** Joins: nunggu (~q@user/nunggu)
[16:49:44] <gaff> so pattern matching works for a specific type
[16:49:48] <ski> yes
[16:50:08] <gaff> strange i dd not see this mentioned in any of the books
[16:50:28] <ski> (unless you use `PatternSynonyms' (or `ViewPatterns'), then they could work over multiple ones. also numeric literal patterns, i guess)
[16:50:40] <gaff> i see
[16:50:49] <ski> `X _' has type `X'. therefore, that pattern will only match an input of type `X'
[16:50:52] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[16:51:30] <gaff> ski: yeah, thank you very much.  now i understand.  just one other question:  why is it designed this way?
[16:51:39] <ski> which ?
[16:51:50] <ski> that a pattern of type `X' only can match a value of type `X' ?
[16:51:51] <gaff> the restriction on pattern match
[16:51:56] <gaff> yeah
[16:52:04] <ski> i don't see how it could really be any other way
[16:52:17] <ski> how could possibly a pattern of type `X' match a value of type `Y' ?
[16:52:36] <ski> % newtype X = MkX a
[16:52:36] <yahb> ski: ; <interactive>:70:17: error: Not in scope: type variable `a'
[16:52:58] <gaff> ah i got it
[16:53:03] <gaff> thank you
[16:53:18] <lortabac> I think some languages allow untagged union types, maybe that's what gaff had in mind
[16:53:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[16:54:05] <geekosaur> you may be expecting OOP classes, where this might work. typeclasses don't really map to OOP though
[16:54:32] <gaff> geekosaur: yeah, my OOP background is the culprit ... you are correct.
[16:54:39] *** Quits: raym (~raym@user/raym) (Ping timeout: 256 seconds)
[16:54:46] *** Quits: Achylles (~Achylles_@2804:431:d724:1728:f3b4:d659:13ba:d509) (Quit: Leaving)
[16:54:47] <geekosaur> I generally think the naming of typeclasses and things related to them is unfortunate in much the same way that the naming of Monad and its `return`is unfortunate
[16:54:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[16:55:00] *** Joins: deadmarshal (~deadmarsh@95.38.113.203)
[16:55:01] <ski> there specifically isn't something like `instanceof'/`typecase' in Haskell .. by design. (it would break parametricity)
[16:55:16] <gaff> ski: i see
[16:55:27] *** Joins: raym (~raym@user/raym)
[16:55:33] <gaff> and no "casting" as well
[16:55:40] <lortabac> there is Type.Reflection, which requires a Typeable constraint
[16:55:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:55:52] <ski> (well, if you add a `Typeable' constraint, you can do some such things. butt not without adding that constraint)
[16:55:59] <ski> @type cast
[16:56:00] <lambdabot> (Typeable a, Typeable b) => a -> Maybe b
[16:56:10] <ski> > cast False :: Maybe Bool
[16:56:11] <lambdabot>  Just False
[16:56:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105)
[16:56:14] <ski> > cast False :: Maybe Integer
[16:56:16] <lambdabot>  Nothing
[16:56:55] <ski> (this doesn't break parametricity, since it only applies when you have that additional `Typeable' constraint. it's not something that applies to polymorphism in general)
[16:57:05] <ski> so, it's opt-in
[16:57:13] <gaff> ok, thanks ... i am not vey familiar with Typeable, to be honest
[16:57:23] <ski> it's usually not something you need/want
[16:57:27] <gaff> ok
[16:57:28] <ski> occasionally, it's handy, though
[16:57:34] <gaff> i see
[16:57:40] *** Joins: messier102 (~messier10@user/messier102)
[16:58:04] <ski> > fromDynamic (toDyn False) :: Maybe Bool
[16:58:05] <lambdabot>  Just False
[16:58:07] <ski> > fromDynamic (toDyn False) :: Maybe Integer
[16:58:07] <merijn> gaff: It helps to think of typeclass contexts in signatures as predicates
[16:58:08] <lambdabot>  Nothing
[16:58:14] <ski> @type toDyn
[16:58:15] <lambdabot> Typeable a => a -> Dynamic
[16:58:21] <ski> @type fromDynamic
[16:58:22] <lambdabot> Typeable a => Dynamic -> Maybe a
[16:58:24] <ski> @type fromDyn
[16:58:25] <lambdabot> Typeable a => Dynamic -> a -> a
[16:58:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[16:58:50] <gaff> merijn: as predicates?
[16:58:51] <merijn> gaff: So "foo :: Num a => a -> String" is similar to "IF 'a' has an instance of 'Num' THEN 'foo :: a -> String' ELSE type error"
[16:59:11] <gaff> i see
[16:59:24] <ski> if (the *type*) `a' satisfies the `Num' (has numeric operations) property, then ...
[16:59:30] <merijn> gaff: So they're describing a subset of things the function can be applied to, but the logic inside cannot know/assume which one
[16:59:47] <merijn> It has to work on any/all of them
[16:59:52] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[16:59:56] <ski> or .. if `a' is in the class/set of types `Num' (containing the ones that support the basic numeric operations), then ..
[16:59:58] <gaff> merijn: yeah, i finally understood after ski explained
[17:00:06] <ski> (which is where the terminology "type class" comes from)
[17:00:17] <gaff> i see
[17:00:36] *** Joins: wmacmil (~wmacmil@83-233-165-97.cust.bredband2.com)
[17:01:14] <wmacmil> is there a case split in haskell analogous to agda, like a <c-c c-c> type extension or plugin 
[17:01:36] <ski> (in math, "class" is often more or less synonymous with "set". e.g. "equivalence class", when one's talking about an equivalence relation, e.g. "has the same height" or "lists contain the same elements" or ..)
[17:01:48] <gaff> merijn: thanks
[17:02:26] * ski would probably omit the "ELSE ..." part there, usually
[17:02:38] <ski> (making it an implication, rather than a conditional)
[17:03:26] <ski> (if you can't manage to show why the types would work out, then you have a type error, regardless)
[17:03:37] <gaff> yeah
[17:04:39] <gaff> you could also say it as "for all types `a` that are instances of Num, ..."
[17:04:50] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[17:05:02] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:06:27] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[17:06:53] <ski> gaff : "parametricity" basically means that, if you have a polymorphic operation, polymorphic in some type variable, say `a', then that operation can *not* inspect input values of type `a', can only pass them around (iow, drop/ignore then, duplicate the reference to them, pass them on). so `foo :: [a] -> [a]' can not do different things, depending on what the elements are. it can only reorder elements, drop 
[17:06:59] <ski> elements, and duplicate elements
[17:07:36] <gaff> ski: i see
[17:07:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:08:10] <ski> if you add say `Ord a => ' to that, then it *can* "inspect" inputs of type `a', but only *via* passing them to operations polymorphic over `Ord' (which in the end amounts to the methods of the `Ord' type class, so `(<=)',`compare' and so on)
[17:08:28] <gaff> ok
[17:08:40] <ski> similarly, `bar :: (a -> Bool) -> [a] -> [a]' can *only* inspect inpute elements, by passing them to the callback predicate
[17:08:44] <merijn> ski: I know, because you have made the complaint before :p
[17:09:04] <merijn> ski: But the first few times I used that example I did, in fact, not use an ELSE but people got confused
[17:09:15] <merijn> "but what happens if it doesn't match?"
[17:09:21] <ski> this is a very powerful reasoning principle, which can allow you to tell quite a bit about polymorphic library operations, including higher-order ones
[17:09:50] <ski> merijn : hm, sorry, i forget which complaint that was :p .. the "ELSE" bit ?
[17:09:59] <ski> ah, okay
[17:11:04] <gaff> but as far as i am concerend, the explanation is very helpful.
[17:11:18] <ski> well, in such case i'd add that if they can't find a way to justify the types with the typing rules .. then they've not managed to show the types "are aligned", and can't proceed past type checking
[17:11:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:7c2a:bca9:fa46:3105) (Remote host closed the connection)
[17:12:01] <ski> "but what happens if it doesn't match?" -- it totally depends on whether there might be some *other* way to make the types work out. in this case, there happens to not be another such way
[17:13:42] <ski> imo, it's somewhat misleading to construe it as a conditional, an `if'-`then'-`else'. it gives the wrong impression. (although, this isn't a major problem, at this point, won't make a huge difference for the current issue. but i don't like leaving such wrong impressions around, possibly getting entrenched, and compounded by other similar misapprehensions)
[17:13:48] <ski> gaff : yw
[17:15:25] <ski> wmacmil : not that i'm aware of :/
[17:15:27] *** Quits: max22- (~maxime@2a01cb0883359800907188a6988a6499.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[17:15:39] <ski> <gaff> you could also say it as "for all types `a` that are instances of Num, ..."
[17:15:42] <ski> yes, that's fine
[17:15:45] *** Quits: wavemode (~wavemode@2601:241:0:fc90:5d33:217d:3934:b62c) (Quit: Client closed)
[17:15:48] <gaff> ok
[17:17:55] <wmacmil> or anyway to at least get the compiler to help? 
[17:18:28] <ski> it might be possible to do something with some GHC API, i guess
[17:21:08] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[17:23:18] <gaff> thanks everyone ... i really appreciate all your help.
[17:23:30] *** Quits: gaff (~gaff@49.207.227.188) ()
[17:23:30] <ski> no problem :)
[17:25:41] <geekosaur> simplifier pass maybe, not that I fully understand what's up with case splits
[17:31:56] *** Joins: slac90987 (~slack1256@181.42.41.211)
[17:33:12] *** Quits: wmacmil (~wmacmil@83-233-165-97.cust.bredband2.com) (Quit: Leaving)
[17:33:58] *** Joins: cuz` (~user@2607:fb90:e7b:bc92:1455:2c0:e8af:6e02)
[17:34:06] *** Quits: slack1256 (~slack1256@191.126.227.204) (Ping timeout: 245 seconds)
[17:34:19] <messier102> As far as I understand the manual, case splitting automatically creates a complete set of pattern matches for a given variable
[17:34:39] *** Quits: cuz (~user@50.226.229.246) (Read error: Connection reset by peer)
[17:34:49] <ski> yes
[17:35:27] <ski> in case of indexed data type, it'll automatically exclude cases which can't happen, due to the particular indices of the scrutinee
[17:35:56] <messier102> e.g. if you give it a `foo xs` where `xs :: [a]`, it will write `foo []` and `foo (x:xs)` for you (I think)
[17:36:11] <messier102> seems like a neat feature
[17:36:17] <ski> (now i'm wondering if it can be told to case split simultaneously on multiple scrutinees ..)
[17:36:22] <ski> yep
[17:36:37] *** Joins: eron (~eron@2804:431:c7c2:934:9877:36f8:e8ed:91e)
[17:37:03] *** Joins: cuz`` (~user@50.226.229.246)
[17:38:37] *** Quits: cuz` (~user@2607:fb90:e7b:bc92:1455:2c0:e8af:6e02) (Ping timeout: 240 seconds)
[17:39:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:39:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:39:20] *** Joins: wroathe (~wroathe@user/wroathe)
[17:44:45] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[17:45:31] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:54:38] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[17:57:45] *** Joins: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de)
[18:00:18] *** Joins: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:588d:9794:eb2f:3fa5)
[18:00:22] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[18:01:24] *** Joins: img (~img@user/img)
[18:03:22] *** Joins: whatif (~user@123.123.222.32)
[18:04:55] *** Quits: img (~img@user/img) (Client Quit)
[18:06:18] *** Joins: img (~img@user/img)
[18:06:32] <dminuoso> Mmm, I wish GHC would forbid anyclass deriving with non-empty minimal method sets.
[18:06:40] <dminuoso> Is that a reasonable thing to demand?
[18:07:19] <dminuoso> Or can GHC produce a warning at least?
[18:07:35] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[18:07:38] <merijn> I thought that already existed?
[18:08:30] <dminuoso> Mmm, oh. Let's figure out why its not being triggered then
[18:08:42] *** Joins: max22- (~maxime@2a01cb08833598007cddd107fb6e9829.ipv6.abo.wanadoo.fr)
[18:13:03] *** Quits: segfaultfizzbuzz (~rustisafu@2602:306:cd3c:9350:588d:9794:eb2f:3fa5) (Quit: Leaving)
[18:14:06] *** Quits: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:14:24] *** Joins: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de)
[18:15:09] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[18:15:27] *** Joins: califax (~califax@user/califx)
[18:16:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:18:58] <Hecate> merijn: are you thinking of the warning if you derive a typeclass without having implemented a minimal method set?
[18:19:20] <Hecate> I never heard about a warning if the class declaration doesn't have a minimal method set
[18:19:33] <merijn> Hecate: I recall a discussion on "warning for anyclass if not full minimal set", but that's hazy memory
[18:20:06] <Hecate> maybe I'm mis-understanding dminuoso and you two are talking about the same thing though :p
[18:20:07] <merijn> oh, I just realised I misread dminuoso's comment anyway
[18:20:10] <Hecate> hahaah
[18:20:16] <Hecate> dminuoso: which one of us is right??
[18:20:41] *** Quits: xff0x (~xff0x@2001:1a81:530c:c100:b873:bdb8:c5f:a8b5) (Ping timeout: 250 seconds)
[18:21:24] <Hecate> merijn: though you're right, the warning you're describing does exist, I mostly see it when starting to implement a typeclass, when I've written "instance Typeclass Type where" and then GHC complains that the stand-alone class declaration doesn't have the minimal method set fulfilled
[18:21:26] *** Joins: xff0x (~xff0x@2001:1a81:530c:c100:36c:8332:80ae:2bd7)
[18:22:20] *** Joins: wroathe (~wroathe@user/wroathe)
[18:23:39] *** Quits: ellie (~ellie@user/ellie) (Read error: Connection reset by peer)
[18:26:02] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[18:26:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:29:31] *** Quits: michalz (~michalz@185.246.204.75) (Ping timeout: 256 seconds)
[18:29:48] *** Joins: Guest|42 (~Guest|42@37.172.219.228)
[18:30:02] *** Quits: Guest|42 (~Guest|42@37.172.219.228) (Client Quit)
[18:35:01] *** Joins: michalz (~michalz@185.246.204.94)
[18:42:23] *** Quits: akegalj (~akegalj@93-139-151-35.adsl.net.t-com.hr) (Quit: leaving)
[18:43:50] *** Quits: kuribas (~user@ptr-25vy0i6r6bvbga979rx.18120a2.ip6.access.telenet.be) (Read error: Connection reset by peer)
[18:45:29] *** Quits: polyphem (~rod@2a02:810d:840:8754:3d7:e2e3:b5c3:df83) (Ping timeout: 252 seconds)
[18:47:22] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:47:22] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:47:22] *** Joins: wroathe (~wroathe@user/wroathe)
[18:52:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:55:30] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[18:59:45] *** Quits: thevishy (~Nishant@2405:201:f005:c007:f886:9bab:89ec:ff42) (Quit: Leaving)
[19:00:28] *** Joins: cuz``` (~user@2607:fb90:e7e:cbcd:4035:8992:d7c:96cf)
[19:00:51] *** Quits: Merfont (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[19:01:16] *** Joins: Merfont (~Kaiepi@156.34.47.253)
[19:03:54] *** Quits: cuz`` (~user@50.226.229.246) (Read error: Connection reset by peer)
[19:03:57] *** Joins: cuz```` (~user@50.226.229.246)
[19:04:39] *** Quits: messier102 (~messier10@user/messier102) (Ping timeout: 256 seconds)
[19:05:39] *** Joins: ardell (~ardell@user/ardell)
[19:05:57] *** Quits: cuz``` (~user@2607:fb90:e7e:cbcd:4035:8992:d7c:96cf) (Ping timeout: 240 seconds)
[19:07:11] *** Joins: polyphem (~rod@2a02:810d:840:8754:e075:74dd:6e37:209d)
[19:09:02] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:12:19] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Remote host closed the connection)
[19:17:04] *** Joins: ardell_ (~ardell@user/ardell)
[19:17:09] *** Joins: fef (~thedawn@user/thedawn)
[19:17:17] *** Quits: ardell (~ardell@user/ardell) (Ping timeout: 240 seconds)
[19:17:39] <fendor> can I print the stack trace of an exception I've caught if I have the executable compiled with `-prof`? Tried the function `whoCreated exc` but that reports just  `GHC.Exception.Type.CAF (<entire-modle>)`
[19:18:21] <merijn> fendor: run with +RTS -xc
[19:19:24] <fendor> That's basically what I did, via RTSOPTS
[19:19:37] <fendor> oh dammit, it should be GHCRTS
[19:19:37] *** Quits: cuz```` (~user@50.226.229.246) (Ping timeout: 256 seconds)
[19:19:38] <fendor> dammit
[19:19:53] <fendor> yeah that works
[19:19:55] <fendor> damn me
[19:19:59] <merijn> :D
[19:20:38] <fendor> thanks!
[19:20:46] *** Quits: whatif (~user@123.123.222.32) (Ping timeout: 256 seconds)
[19:24:54] *** Joins: haskell_ (~haskell@65-102-32-32.ptld.qwest.net)
[19:25:13] *** Quits: ubert (~Thunderbi@p200300ecdf0994592d10ea882e78994b.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:26:45] *** Joins: __monty__ (~toonn@user/toonn)
[19:26:52] *** Quits: haskell_ (~haskell@65-102-32-32.ptld.qwest.net) (Remote host closed the connection)
[19:27:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:28:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:28:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:28:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:29:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:29:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:29:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:29:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:29:49] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:29:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[19:30:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:59] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:31:15] *** slac90987 is now known as slack1256
[19:31:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:31:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:50] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:05] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:32:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:32:33] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:32:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:33:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:33:33] <geekosaur> lavaman, you're bouncing
[19:33:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:34:02] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:34:06] *** ChanServ sets mode: +o geekosaur
[19:34:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:34:18] *** geekosaur sets mode: +b *!*@98.38.249.169
[19:34:20] *** Quits: michalz (~michalz@185.246.204.94) (Remote host closed the connection)
[19:34:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:34:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:34:42] *** Joins: michalz (~michalz@185.246.204.72)
[19:34:46] *** geekosaur sets mode: -o geekosaur
[19:34:47] *** Quits: michalz (~michalz@185.246.204.72) (Remote host closed the connection)
[19:35:32] *** Joins: michalz (~michalz@185.246.204.72)
[19:37:22] *** Quits: mbuf (~Shakthi@171.61.147.232) (Quit: Leaving)
[19:37:53] *** Joins: cuz```` (~user@38.140.58.234)
[19:39:37] *** Quits: ardell_ (~ardell@user/ardell) (Ping timeout: 240 seconds)
[19:40:38] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 260 seconds)
[19:42:32] *** Joins: wavemode (~wavemode@2601:241:0:fc90:7b48:d1cc:a5e5:a126)
[19:45:17] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[19:45:41] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:46:39] *** Joins: slac97852 (~slack1256@191.126.227.204)
[19:48:51] *** Quits: slack1256 (~slack1256@181.42.41.211) (Ping timeout: 256 seconds)
[19:49:31] *** ChanServ sets mode: +o litharge
[19:49:32] *** litharge sets mode: -bo *!*@98.38.249.169 litharge
[19:49:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:49:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:49:48] *** Joins: k8yun (~k8yun@24.244.29.102)
[19:50:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:50:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:50:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:50:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:50:43] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:50:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:51:05] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:51:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:51:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:51:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:51:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:51:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:52:09] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:52:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:52:21] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[19:52:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:52:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:52:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:53:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:53:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:53:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:53:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:53:50] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:54:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:54:12] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:54:28] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:54:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:54:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:54:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:55:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:55:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:55:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:55:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:55:53] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:56:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:56:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:56:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:56:24] *** slac97852 is now known as slack1256
[19:56:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:56:45] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:57:01] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:57:09] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:57:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:57:30] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:57:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:57:53] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:58:09] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:58:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:58:30] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:58:38] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:58:44] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:580c:39ae:f851:5d4a) (Quit: WeeChat 2.8)
[19:58:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:59:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:59:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:59:23] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:59:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:59:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:59:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:00:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:00:17] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[20:00:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:00:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:00:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:00:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:01:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:01:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:01:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:01:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:01:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:01:53] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[20:01:54] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:02:00] *** Quits: flinner (~flinner__@user/flinner) (Quit: Leaving)
[20:02:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:02:16] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[20:04:33] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[20:07:46] *** Quits: freemanX (~user@112.199.211.72) (Remote host closed the connection)
[20:08:38] *** Joins: freemanX (~user@112.199.211.72)
[20:08:43] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:09:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:11:31] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[20:11:41] *** Joins: messier102 (~messier10@user/messier102)
[20:14:10] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[20:15:31] *** Quits: messier102 (~messier10@user/messier102) (Client Quit)
[20:21:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:21:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:21:42] *** Joins: wroathe (~wroathe@user/wroathe)
[20:25:15] *** Quits: dajoer (~david@user/gvx) (Quit: leaving)
[20:25:43] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:26:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[20:27:41] *** Quits: freemanX (~user@112.199.211.72) (Remote host closed the connection)
[20:30:02] *** Joins: jneira[m] (~jneiramat@2001:470:69fc:105::d729)
[20:30:11] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[20:32:43] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:34:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:bc81:ba25:7a70:67f2)
[20:34:42] *** Joins: econo (uid147250@user/econo)
[20:36:20] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[20:36:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[20:37:42] *** Joins: Guest|52 (~Guest|52@p54a4f18f.dip0.t-ipconnect.de)
[20:38:54] *** Quits: Guest|52 (~Guest|52@p54a4f18f.dip0.t-ipconnect.de) (Client Quit)
[20:39:38] <gentauro> anybody knows how the following expression (let biding) is translated to LambdaCalc `let x = 2 + 2 in x`?
[20:40:10] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[20:40:14] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:40:14] <gentauro> I recall there is a "trivial" map between lambda calculus and let-bindings :) (I just don't remember how to do it)
[20:41:00] *** Joins: lbseale_ (~ep1ctetus@user/ep1ctetus)
[20:41:33] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[20:41:45] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[20:41:52] *** Quits: fendor (~fendor@178.115.64.55.wireless.dyn.drei.com) (Remote host closed the connection)
[20:42:24] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:42:24] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[20:42:49] <slack1256> Is r/haskell still the forum with the best headspace on the haskell comunity for job postings? The company I work for will put a new advert. I am convincing the higher ups that reddit > linkedin for job posting. Is this still true?
[20:43:22] <sshine> slack1256, that or Haskell Weekly newsletter.
[20:44:37] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Ping timeout: 240 seconds)
[20:44:54] <sshine> slack1256, I don't know if it's me who lost interest reading the Haskell Weekly newsletter, or if the quality has gone down a bit (probably the former), but the job section is doing better and better. there were 8 job postings in #300 (most recent is #301 with a closer to average 3 job posts)
[20:45:21] <gentauro> sshine: HWN think it has a cost, but /r/haskell is free :)
[20:45:40] *** Joins: lechner (~lechner@debian/lechner)
[20:46:19] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:46:25] <sshine> a sponsored link in Haskell Weekly costs $60. but the average open rate is pretty damn high; https://haskellweekly.news/advertising.html
[20:46:42] <ski> gentauro : `(\x -> x) (2 + 2)' ?
[20:47:08] *** Joins: whound (~dust@2409:4071:d85:6d06:82d4:5fb8:a938:35fc)
[20:47:13] <sshine> compared to a job site or a recruiter, $60 is close to nothing. :)
[20:47:34] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[20:47:41] <ski> (beware of polymorphic `let'-bindings, though. lambda-bound variables are monomorphic, unless they've explicit signatures to the opposite effect)
[20:47:57] <ski> (oh .. and, obviously, also recursion)
[20:48:15] * ski idly ponders "named `let's"
[20:49:31] <sshine> I don't know the exact overlap between /r/haskell and Haskell Weekly; I'm guessing it's up there, but the cost of cross-posting is equivalent to the cost of posting on Haskell Weekly. ;-)
[20:56:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:56:10] *** Quits: cosimone (~user@93-47-231-87.ip115.fastwebnet.it) (Remote host closed the connection)
[20:56:28] *** Joins: mvk (~mvk@2607:fea8:5cdc:bf00::80f1)
[20:56:30] *** lbseale_ is now known as lbseale
[20:58:06] <gentauro> ski: yeah something like that. I don't recall if it was Stephen Diehl or Benjamin Pierce (TAPL) that had some info on it
[20:58:12] <gentauro> I guess I will keep looking, but thx
[20:58:46] *** Joins: alx741 (~alx741@157.100.197.240)
[20:58:58] <ski> hm, afaik, this is all folklore
[20:59:34] <ski> (perhaps mentioned in one of the original papers by Church or something ..)
[21:02:05] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:03:05] *** Joins: cosimone (~user@93-47-231-87.ip115.fastwebnet.it)
[21:03:31] *** Joins: emf (~emf@136.60.235.103)
[21:04:15] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[21:04:56] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:05:30] *** Quits: cuz```` (~user@38.140.58.234) (Remote host closed the connection)
[21:05:37] *** Joins: cuz```` (~user@38.140.58.234)
[21:05:57] *** Quits: whound (~dust@2409:4071:d85:6d06:82d4:5fb8:a938:35fc) (Quit: Konversation terminated!)
[21:06:41] *** Joins: emf_ (~emf@2620:10d:c090:400::5:9645)
[21:07:35] *** Quits: razetime (~quassel@49.207.209.26) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:07:45] *** Parts: Orbstheorem (~orbstheor@2001:470:69fc:105::a56) ()
[21:07:51] *** Quits: emf (~emf@136.60.235.103) (Ping timeout: 256 seconds)
[21:08:44] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[21:09:08] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-058.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[21:10:13] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[21:12:50] *** Joins: MatthiasG2 (~matthias@i6DFA026C.versanet.de)
[21:12:57] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[21:14:39] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[21:14:45] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[21:14:55] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[21:17:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[21:17:44] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:18:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:19:06] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:21:45] *** Joins: alx741 (~alx741@157.100.197.240)
[21:21:50] *** Quits: alp (~alp@user/alp) (Ping timeout: 250 seconds)
[21:22:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:23:49] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:24:31] *** Joins: mmhat (~mmh@55d4d31f.access.ecotel.net)
[21:24:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:24:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:24:42] *** Joins: wroathe (~wroathe@user/wroathe)
[21:24:44] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[21:25:19] *** Quits: alx741 (~alx741@157.100.197.240) (Read error: Connection reset by peer)
[21:25:39] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:25:48] *** Joins: neurocyte0917090 (~neurocyte@ip-045128181160.dynamic.medianet-world.de)
[21:25:48] *** Quits: neurocyte0917090 (~neurocyte@ip-045128181160.dynamic.medianet-world.de) (Changing host)
[21:25:48] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[21:27:21] *** Joins: slac11724 (~slack1256@181.42.41.211)
[21:28:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[21:29:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:29:43] *** Quits: slack1256 (~slack1256@191.126.227.204) (Ping timeout: 256 seconds)
[21:33:03] *** Joins: Akiva (~Akiva@user/Akiva)
[21:35:57] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:38:27] *** Joins: alx741 (~alx741@157.100.197.240)
[21:38:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:38:44] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[21:38:50] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[21:39:01] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[21:40:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:49] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:42:19] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:43:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:44:15] *** Quits: michalz (~michalz@185.246.204.72) (Remote host closed the connection)
[21:44:29] *** Joins: michalz (~michalz@185.246.204.94)
[21:44:46] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:46:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[21:46:19] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4)
[21:47:02] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[21:48:09] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[21:50:28] *** Joins: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com)
[21:51:28] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:53:42] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[21:53:45] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[21:57:01] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 240 seconds)
[21:57:27] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:58:03] *** Quits: slac11724 (~slack1256@181.42.41.211) (Ping timeout: 256 seconds)
[21:59:00] *** Quits: k8yun (~k8yun@24.244.29.102) (Quit: Leaving)
[21:59:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[22:00:07] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:c46f:8faf:ca93:337c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:02:27] *** Joins: k8yun (~k8yun@24.244.29.102)
[22:03:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[22:04:31] *** Quits: cuz```` (~user@38.140.58.234) (Ping timeout: 256 seconds)
[22:06:27] *** Quits: xff0x (~xff0x@2001:1a81:530c:c100:36c:8332:80ae:2bd7) (Ping timeout: 250 seconds)
[22:07:22] <dminuoso> Mmm, I wish I could define a let-binding over top level declarations :(
[22:07:22] *** Joins: xff0x (~xff0x@2001:1a81:530c:c100:3392:9410:3e85:84e1)
[22:07:38] <dminuoso> i.e. let foo = 1 in { instance ...; instance ... }
[22:07:47] <monochrom> Yeah.
[22:08:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[22:08:21] <EvanR> once again javascript wins
[22:08:28] <wavemode> isn't what what 'where' is for
[22:08:42] <EvanR> where can be attached to 1 declaration
[22:08:44] <dminuoso> No, where scopes to a single declaration but not declaration groups
[22:08:46] <geekosaur> where doesn't work any better for that
[22:09:16] *** Quits: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[22:09:32] <monochrom> SML has "local foo = 1 in instance ...; instance ...; end"
[22:09:32] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 252 seconds)
[22:10:04] <monochrom> If you say that at the top level, then the instances will be at the top level. (Generally everything from "in" to "end".)
[22:10:06] <EvanR> I guess you have to use more modules
[22:10:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:11:11] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 252 seconds)
[22:11:37] <dminuoso> My use case is defining generic aeson options, it would be easy to say `let opts = defaultOptions { ... } in { instance ToJSON Foo where toJSON = genericToJSON opts; instance FromJSON Foo where parseJSON = genericParseJSON opts }`
[22:11:44] *** Quits: cosimone (~user@93-47-231-87.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[22:11:50] <dminuoso> Using more modules scales poorly, as that would move each such data type into a separate module
[22:12:14] <EvanR> funny I recall long ago advice to put every data type in its own module for some reason
[22:12:22] <EvanR> an operations elsewhere
[22:12:27] <monochrom> Actually if not for "one module per file" modules would scale.
[22:12:59] <monochrom> Note that Haskell 2010 does not disallow multiple modules per file. >:)
[22:13:35] <dminuoso> Dont some ML language allow multiple modules per file?
[22:15:17] *** Joins: simendsjo (~user@84.211.91.241)
[22:15:58] <dminuoso> Im just worried if that would translate into one-object-file-per-module, that could perhaps degrade linker times a bit too much
[22:16:05] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:16:57] <EvanR> linker time is worse for more objects same size or larger objects same number
[22:17:01] <EvanR> ?
[22:18:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:21:37] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[22:21:47] <sshine> dminuoso, sure, both SML and OCaml :)
[22:23:23] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[22:23:56] <monochrom> I think OCaml does not even use the system obj file format or the system linker.
[22:24:45] <monochrom> It uses its own *.cmo object file format, and it is one source file -> one cmo file. It also uses its own library archive format *.cma
[22:24:55] <sshine> dminuoso, but for SML(/NJ + others) there's also the .mlb files that can be used to establish some convention of one module per file... sort of like compilation units, I guess.
[22:25:05] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[22:26:53] *** Joins: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de)
[22:30:00] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:31:37] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 240 seconds)
[22:32:15] *** Joins: Chai-T-Rex (~ChaiTRex@user/chaitrex)
[22:35:09] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Ping timeout: 276 seconds)
[22:35:48] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[22:36:10] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:39:36] *** Joins: zebrag (~chris@user/zebrag)
[22:40:04] <ski> i've often wanted `local'-`in'-`end', in Haskell
[22:41:07] <ski> (also, occasionally, declaration-level `if'-`then'-`else', and `case'-`of')
[22:41:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[22:41:55] <ski> (sshine : well, NJ has CM ..)
[22:42:18] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[22:42:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:43:12] <monochrom> "local instance Ord Bool where ... in ... end" would raise questions about instance coherence.
[22:43:18] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[22:44:10] <monochrom> There are solutions. There may be too many rivalling solutions. Probably the Haskell committee decided to not divide themselves on it, and just adopt the common denominator: don't bother.
[22:45:09] <ski> yes, but those questions also arise for instances in `where' and `let'-`in'. i'm not sure of `local'-`in'-`end' bring any new complications there
[22:46:06] <monochrom> Ah right.
[22:46:32] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4) (Remote host closed the connection)
[22:46:41] <ski> (iow, the most obvious path is to simply allow value (including function) signatures and definitions, between `local' and `in', at least to begin with)
[22:46:57] <ski> (s/allow/allow only/)
[22:48:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Remote host closed the connection)
[22:48:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk)
[22:48:24] <ski> dminuoso : perhaps Backpack could help .. ?
[22:52:48] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:52:59] *** Joins: cuz```` (~user@38.140.58.234)
[22:56:54] *** Joins: notzmv (~zmv@user/notzmv)
[23:00:20] *** Joins: WzC (~Frank@77-162-168-71.fixed.kpn.net)
[23:00:47] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81) (Remote host closed the connection)
[23:01:00] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:1dc4:f5c4:a458:81)
[23:02:28] *** Quits: EvanR (~EvanR@user/evanr) (Remote host closed the connection)
[23:03:16] *** Joins: pooryori1k (~pooryoric@87-119-174-173.tll.elisa.ee)
[23:03:50] *** Joins: Vq_ (~vq@90-227-195-41-no77.tbcn.telia.com)
[23:04:13] *** Joins: EvanR (~EvanR@user/evanr)
[23:06:57] *** Quits: deadmarshal (~deadmarsh@95.38.113.203) (Ping timeout: 256 seconds)
[23:07:20] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[23:07:52] *** Quits: xff0x (~xff0x@2001:1a81:530c:c100:3392:9410:3e85:84e1) (*.net *.split)
[23:07:52] *** Quits: img (~img@user/img) (*.net *.split)
[23:07:52] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (*.net *.split)
[23:07:52] *** Quits: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com) (*.net *.split)
[23:07:52] *** Quits: phma (phma@2001:5b0:211c:1a98:48d4:386a:82f8:d37) (*.net *.split)
[23:07:52] *** Quits: soft (~soft@2001:470:69fc:105::c75) (*.net *.split)
[23:07:52] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[23:07:52] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (*.net *.split)
[23:07:52] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (*.net *.split)
[23:07:52] *** Quits: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be) (*.net *.split)
[23:07:52] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (*.net *.split)
[23:07:52] *** Quits: jkaye[m] (~jkayematr@2001:470:69fc:105::1:86f7) (*.net *.split)
[23:07:52] *** Quits: jinsun_ (~jinsun@user/jinsun) (*.net *.split)
[23:07:52] *** Quits: amesgen[m] (~amesgenm]@2001:470:69fc:105::82b) (*.net *.split)
[23:07:52] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (*.net *.split)
[23:07:52] *** Quits: sajith (~sajith@user/sajith) (*.net *.split)
[23:07:52] *** Quits: davetapley (sid666@id-666.uxbridge.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: jonrh (sid5185@id-5185.ilkley.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: tom__ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684) (*.net *.split)
[23:07:52] *** Quits: lieven (~mal@ns2.wyrd.be) (*.net *.split)
[23:07:52] *** Quits: kaskal (~kaskal@2001:4bb8:2cc:5073:e1cf:a3ef:264a:1e80) (*.net *.split)
[23:07:52] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (*.net *.split)
[23:07:52] *** Quits: bollu (~bollu@159.65.151.13) (*.net *.split)
[23:07:52] *** Quits: Noinia (~Frank@77-162-168-71.fixed.kpn.net) (*.net *.split)
[23:07:52] *** Quits: Putonlalla (~sapekiis@it-cyan.it.jyu.fi) (*.net *.split)
[23:07:52] *** Quits: urdh (~urdh@user/urdh) (*.net *.split)
[23:07:52] *** Quits: Vq (~vq@90-227-195-41-no77.tbcn.telia.com) (*.net *.split)
[23:07:52] *** Quits: acro (~acro@user/acro) (*.net *.split)
[23:07:52] *** Quits: LambdaDuck (~anka@ksit.fixme.fi) (*.net *.split)
[23:07:52] *** Quits: xacktm (xacktm@user/xacktm) (*.net *.split)
[23:07:52] *** Quits: davl (~davl@207.154.228.18) (*.net *.split)
[23:07:52] *** Quits: lyxia (~lyxia@poisson.chat) (*.net *.split)
[23:07:52] *** Quits: SIben (~SIben@ns3106586.ip-5-135-191.eu) (*.net *.split)
[23:07:52] *** Quits: ggVGc (~ggVGc@a.lowtech.earth) (*.net *.split)
[23:07:52] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[23:07:52] *** Quits: dpratt__ (sid193493@id-193493.helmsley.irccloud.com) (*.net *.split)
[23:07:52] *** Quits: grfn (sid449115@id-449115.helmsley.irccloud.com) (*.net *.split)
[23:07:53] *** Quits: bonz060 (~quassel@2001:bc8:47a4:a23::1) (*.net *.split)
[23:09:53] *** Quits: simendsjo (~user@84.211.91.241) (Remote host closed the connection)
[23:10:01] *** Quits: doyougnu (~doyougnu@cpe-67-249-83-190.twcny.res.rr.com) (Ping timeout: 256 seconds)
[23:10:48] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[23:11:31] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:12:26] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[23:12:26] *** Joins: xff0x (~xff0x@2001:1a81:530c:c100:3392:9410:3e85:84e1)
[23:12:26] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[23:12:26] *** Joins: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[23:12:26] *** Joins: phma (phma@2001:5b0:211c:1a98:48d4:386a:82f8:d37)
[23:12:26] *** Joins: soft (~soft@2001:470:69fc:105::c75)
[23:12:26] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[23:12:26] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[23:12:26] *** Joins: smichel17[m] (~smichel17@2001:470:69fc:105::2d32)
[23:12:26] *** Joins: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be)
[23:12:26] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[23:12:26] *** Joins: jinsun_ (~jinsun@user/jinsun)
[23:12:26] *** Joins: jkaye[m] (~jkayematr@2001:470:69fc:105::1:86f7)
[23:12:26] *** Joins: amesgen[m] (~amesgenm]@2001:470:69fc:105::82b)
[23:12:26] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[23:12:26] *** Joins: sajith (~sajith@user/sajith)
[23:12:26] *** Joins: davetapley (sid666@id-666.uxbridge.irccloud.com)
[23:12:26] *** Joins: jonrh (sid5185@id-5185.ilkley.irccloud.com)
[23:12:26] *** Joins: tom__ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684)
[23:12:26] *** Joins: lieven (~mal@ns2.wyrd.be)
[23:12:26] *** Joins: kaskal (~kaskal@2001:4bb8:2cc:5073:e1cf:a3ef:264a:1e80)
[23:12:26] *** Joins: bollu (~bollu@159.65.151.13)
[23:12:26] *** Joins: Putonlalla (~sapekiis@it-cyan.it.jyu.fi)
[23:12:26] *** Joins: urdh (~urdh@user/urdh)
[23:12:26] *** Joins: acro (~acro@user/acro)
[23:12:26] *** Joins: xacktm (xacktm@user/xacktm)
[23:12:26] *** Joins: LambdaDuck (~anka@ksit.fixme.fi)
[23:12:26] *** Joins: davl (~davl@207.154.228.18)
[23:12:26] *** Joins: SIben (~SIben@ns3106586.ip-5-135-191.eu)
[23:12:26] *** Joins: ggVGc (~ggVGc@a.lowtech.earth)
[23:12:26] *** Joins: bonz060 (~quassel@2001:bc8:47a4:a23::1)
[23:12:26] *** Joins: Xe (~cadey@tailscale/xe)
[23:12:26] *** Joins: dpratt__ (sid193493@id-193493.helmsley.irccloud.com)
[23:12:26] *** Joins: grfn (sid449115@id-449115.helmsley.irccloud.com)
[23:12:31] *** Quits: d34df00d (~d34df00d@2600:1700:8c60:3a10::48) (Excess Flood)
[23:13:41] *** Joins: img (~img@user/img)
[23:14:38] *** Joins: lyxia (~lyxia@poisson.chat)
[23:16:02] *** Quits: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: finalti[m] (~finaltima@2001:470:69fc:105::d909) (Ping timeout: 240 seconds)
[23:16:02] *** Quits: fcortesi (~fcortesi@2001:470:69fc:105::f3a9) (Ping timeout: 240 seconds)
[23:16:12] *** Quits: litharn[m] (~litharnma@2001:470:69fc:105::1:8336) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: Las[m] (~lasmatrix@2001:470:69fc:105::74e) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: Morrow[m] (~morrowmma@2001:470:69fc:105::1d0) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: reza[m] (~rezaphone@2001:470:69fc:105::3eda) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: EkaiZend[m] (~ekai-zend@2001:470:69fc:105::1:7756) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: sjanssen (~sjanssenm@2001:470:69fc:105::1:61d8) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: jesser[m] (~jessermat@2001:470:69fc:105::d5ae) (Ping timeout: 245 seconds)
[23:16:12] *** Quits: jchia[m] (~jchiamatr@2001:470:69fc:105::c50b) (Ping timeout: 245 seconds)
[23:16:13] *** Quits: juhp[m] (~juhpmatri@2001:470:69fc:105::6e9) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: james[m]12 (~jamesnina@2001:470:69fc:105::1:4203) (Ping timeout: 250 seconds)
[23:16:13] *** Quits: marijan (~marijanma@2001:470:69fc:105::1:6cce) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: fgaz (~fgaz@2001:470:69fc:105::842) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: maerwald[m] (~maerwaldm@2001:470:69fc:105::1ee) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: cdsmith (~cdsmithma@2001:470:69fc:105::284) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: SawyerBergeron[m (~sawyerber@2001:470:69fc:105::3036) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: unrooted (~unrooted@2001:470:69fc:105::a4a) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: Tisoxin (~ikosit@user/ikosit) (Ping timeout: 240 seconds)
[23:16:13] *** Quits: Guillaum[m] (~guiboumat@2001:470:69fc:105::1:72ac) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: sm (~sm@plaintextaccounting/sm) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: zwro[m] (~zwromatri@2001:470:69fc:105::1d4) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: joaquinmg[m] (~joaquinmg@2001:470:69fc:105::1:67d2) (Ping timeout: 240 seconds)
[23:16:14] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 240 seconds)
[23:16:26] *** Quits: octeep[m] (~octeepoct@2001:470:69fc:105::1:3dbf) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: denbrahe (~denbrahe@2001:470:69fc:105::19c0) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: craige[m] (~craigemcw@2001:470:69fc:105::35f1) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: unclechu (~unclechu@2001:470:69fc:105::354) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: simmsb (~simmsb@2001:470:69fc:105::1:55c3) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: fendor[m] (~fendormat@2001:470:69fc:105::fcbd) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: alexfmpe[m] (~alexfmpem@2001:470:69fc:105::38ba) (Ping timeout: 250 seconds)
[23:16:26] *** Quits: Michal[m] (~oomiguelm@2001:470:69fc:105::1:5ab0) (Ping timeout: 250 seconds)
[23:16:32] *** Quits: Christoph[m] (~hpotsirhc@2001:470:69fc:105::2ff8) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: justosophy[m] (~justosoph@2001:470:69fc:105::572f) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: ongy[m] (~ongymatri@2001:470:69fc:105::5018) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: marinelli[m] (~marinelli@2001:470:69fc:105::2d8) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: vaibhavsagar[m] (~vaibhavsa@2001:470:69fc:105::ffe) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: ac (~aloiscoch@2001:470:69fc:105::65) (Ping timeout: 240 seconds)
[23:16:32] *** Quits: schuelermine[m] (~schuelerm@user/schuelermine) (Ping timeout: 240 seconds)
[23:16:35] *** Quits: Inst[m] (~instrmatr@2001:470:69fc:105::1:903e) (Ping timeout: 256 seconds)
[23:16:35] *** Quits: phuegrvs[m] (~phuegrvsm@2001:470:69fc:105::1:65e4) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: afotgkmnzj7asv3r (~afotgkmnz@2001:470:69fc:105::c24b) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: cstml[m] (~cstmlmatr@2001:470:69fc:105::1:5c07) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: DemiMarieObenour (~alwayscur@2001:470:69fc:105::4886) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: yehoshuapw (~yehoshuap@2001:470:69fc:105::a5f) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: JoseC[m] (~jmcardonm@2001:470:69fc:105::1:7539) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: siraben (~siraben@user/siraben) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: benjamin[m]123 (~benjaminm@2001:470:69fc:105::1:3f2f) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: alex[m]12 (~alexchete@2001:470:69fc:105::1:1001) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: maralorn (~maralorn@2001:470:69fc:105::251) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: mmos[m] (~mmosmatri@2001:470:69fc:105::1:8340) (Ping timeout: 256 seconds)
[23:16:36] *** Quits: pfurla-matrix (~pedrofurl@2001:470:69fc:105::1:51d7) (Ping timeout: 256 seconds)
[23:16:38] *** Quits: sekun[m] (~hsekmatri@2001:470:69fc:105::d18f) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: wysteriary[m] (~wysteriar@2001:470:69fc:105::a42e) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: sofviic[m] (~sofviicma@2001:470:69fc:105::1:51fd) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: SridharRatnakuma (~sridmatri@2001:470:69fc:105::1c2) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: cherryblossom[m] (~cherryblo@2001:470:69fc:105::b789) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: tripa[m] (~tripamatr@2001:470:69fc:105::1:4f7e) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: thejuan24f[m] (~thejuan2m@2001:470:69fc:105::1:6569) (Ping timeout: 252 seconds)
[23:16:38] *** Quits: Sixto[m] (~provornyc@2001:470:69fc:105::1:74df) (Ping timeout: 252 seconds)
[23:16:39] *** Quits: oak- (~oakuniver@2001:470:69fc:105::fcd) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: Artem[m] (~artemtype@2001:470:69fc:105::75b) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 250 seconds)
[23:16:39] *** Quits: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f) (Ping timeout: 250 seconds)
[23:16:42] *** Quits: soft (~soft@2001:470:69fc:105::c75) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: smichel17[m] (~smichel17@2001:470:69fc:105::2d32) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: ManofLetters[m] (~manoflett@2001:470:69fc:105::3be) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: jkaye[m] (~jkayematr@2001:470:69fc:105::1:86f7) (Ping timeout: 260 seconds)
[23:16:42] *** Quits: amesgen[m] (~amesgenm]@2001:470:69fc:105::82b) (Ping timeout: 260 seconds)
[23:17:03] *** Quits: throwaaaa[m] (~throwaaaa@2001:470:69fc:105::1:6fe6) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: peddie (~peddie@2001:470:69fc:105::25d) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: moats (~oats@user/oats) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: Deide (~deide@user/deide) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: bb010g (~bb010g@2001:470:69fc:105::9a5) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: aidy (~aidy@2001:470:69fc:105::c7b4) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: kalxd[m] (~kalxdmatr@2001:470:69fc:105::1:576e) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: jaror[m] (~jaror@2001:470:69fc:105::265) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: jneira[m] (~jneiramat@2001:470:69fc:105::d729) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: Nate[m] (~m52957mat@2001:470:69fc:105::1:591a) (Ping timeout: 268 seconds)
[23:17:03] *** Quits: ParsaAlizadeh[m] (~lizadehma@2001:470:69fc:105::1:65a4) (Ping timeout: 268 seconds)
[23:17:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:18:18] *** Joins: zincy (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[23:19:40] *** cawfee_ is now known as cawfee
[23:20:26] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Ping timeout: 260 seconds)
[23:20:26] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[23:20:45] *** Quits: carmysilna (~brightly-@2001:470:69fc:105::2190) (Ping timeout: 250 seconds)
[23:21:21] *** Quits: noiobeforebed (~noiobefor@2001:470:69fc:105::1:3c2d) (Ping timeout: 268 seconds)
[23:23:18] *** Vq_ is now known as Vq
[23:24:17] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Remote host closed the connection)
[23:24:53] *** Joins: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net)
[23:25:12] *** Joins: simendsjo (~user@84.211.91.241)
[23:28:09] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[23:29:37] *** Quits: yauhsien_ (~yauhsien@61-231-29-69.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[23:31:36] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:31:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:31:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:32:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:32:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:32:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:32:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:32:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:33:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:33:19] *** Joins: lavaman (~lavaman@98.38.249.169)
[23:33:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[23:35:17] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:37:29] *** Joins: juhp (~juhp@128.106.188.82)
[23:40:37] *** Quits: simendsjo (~user@84.211.91.241) (Ping timeout: 240 seconds)
[23:40:57] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 256 seconds)
[23:42:18] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[23:47:15] *** Joins: Null_A (~null_a@2601:645:8700:2290:6473:b18:2fbd:1123)
[23:48:09] *** Joins: zfnmxt (~zfnmxtzfn@2001:470:69fc:105::2b32)
[23:50:07] *** Joins: EkaiZend[m] (~ekai-zend@2001:470:69fc:105::1:7756)
[23:51:44] *** Joins: Yehoshua (~yehoshua@2001:470:69fc:105::1:593f)
[23:51:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:53:17] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[23:53:19] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[23:53:54] *** Joins: mahene[m] (~mahenemat@2001:470:69fc:105::1:6a93)
[23:53:56] *** Joins: jneira[m] (~jneiramat@2001:470:69fc:105::d729)
[23:54:01] *** Joins: thomasjm[m] (~thomasjmm@2001:470:69fc:105::c6d9)
[23:54:15] *** Joins: cdsmith (~cdsmithma@2001:470:69fc:105::284)
[23:54:42] *** Joins: fcortesi (~fcortesi@2001:470:69fc:105::f3a9)
[23:54:43] *** Joins: ParsaAlizadeh[m] (~lizadehma@2001:470:69fc:105::1:65a4)
[23:54:48] *** Joins: Artem[m] (~artemtype@2001:470:69fc:105::75b)
[23:55:00] *** Joins: Heffalump[m] (~hsenagmat@2001:470:69fc:105::e11)
[23:55:18] *** Joins: reza[m] (~rezaphone@2001:470:69fc:105::3eda)
[23:55:36] *** Quits: burnsidesLlama (~burnsides@dhcp168-036.wadham.ox.ac.uk) (Remote host closed the connection)
[23:56:39] *** Joins: wildsebastian (~wildsebas@2001:470:69fc:105::1:14b1)
[23:57:49] *** Joins: jchia[m] (~jchiamatr@2001:470:69fc:105::c50b)
[23:57:53] *** Joins: RosarioPulella[m (~rosariopu@2001:470:69fc:105::a57)
[23:58:30] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[23:58:39] *** Joins: benjamin[m]123 (~benjaminm@2001:470:69fc:105::1:3f2f)
[23:59:37] *** Joins: joaquinmg[m] (~joaquinmg@2001:470:69fc:105::1:67d2)
[23:59:56] *** Joins: mmos[m] (~mmosmatri@2001:470:69fc:105::1:8340)
