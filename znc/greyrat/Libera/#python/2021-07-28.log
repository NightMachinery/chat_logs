[00:00:10] <gitesh> you can do substring in string
[00:00:16] *** Joins: qunzhong1luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:00:33] <SnoopJ> whatsupdoc, I would approach this problem in two steps: 1) get an iterable of all substrings 2) check if those substrings have repeating characters 3) find the longest one after filtering on (2)
[00:00:40] <SnoopJ> err, three* steps
[00:01:21] *** Quits: Jefren3 (~Jefren@206.253.157.248) (Ping timeout: 268 seconds)
[00:01:24] <whatsupdoc> i'm using a hash table to store the values i run into
[00:01:33] <echelon> jinsun: so how do i reference the choice made? args.choices?
[00:01:36] <whatsupdoc> and then i check if i've seen them before
[00:01:52] <whatsupdoc> and if i have, then i quit and restart
[00:02:34] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 240 seconds)
[00:02:57] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[00:03:45] *** Joins: dulanic (~dulanic@47.187.144.163)
[00:04:10] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:04:38] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:04:41] <freeman_h> Hi all I am getting this error on my error log file. However has this is happening on my small live system I am not sure what value is getting passed in. Anyway ideas how to resolve this please. Thank you
[00:04:42] <freeman_h> https://kopy.io/ZsbVR
[00:05:13] <echelon> missing 1 required positional argument: 'dest'
[00:05:17] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 255 seconds)
[00:05:34] *** Joins: Jefren (~Jefren@70.35.67.155)
[00:06:54] *** Quits: Jefren4 (~Jefren@70.35.67.247) (Ping timeout: 268 seconds)
[00:07:13] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:09:00] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:09:18] *** Joins: Jefren1 (~Jefren@70.35.67.220)
[00:09:42] <gitesh> whatsupdoc: this is very hard problem for me, i can never solve this
[00:09:55] <gitesh> that much i can say, programming is tough
[00:10:31] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:10:39] *** Joins: skapata (~Skapata@user/skapata)
[00:10:58] <Byteflux> whatsupdoc: https://bpa.st/SLTQ seems to work, dunno why you have to "go back"
[00:11:05] <Byteflux> i dont have an account to actually check on that site though
[00:11:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:11:18] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[00:11:48] <Byteflux> im sure there's better ways to do it, that looks similar to the solution you linked earlier
[00:11:49] *** Joins: Jefren2 (~Jefren@70.35.66.135)
[00:12:08] *** Quits: Jefren (~Jefren@70.35.67.155) (Ping timeout: 258 seconds)
[00:14:03] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[00:14:14] <jinsun> echelon: no, args.whatever_name_you_gave  that would have been the first argument of parser.add_argument, like `parser.add_argument('my_name', choices=['add', 'delete'])` and access like `choice = args.my_name`
[00:14:39] <echelon> thanks!
[00:15:06] *** Quits: Jefren1 (~Jefren@70.35.67.220) (Ping timeout: 272 seconds)
[00:15:55] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[00:16:19] *** Joins: pnoud (~pnoud@user/pnoud)
[00:16:26] <SnoopJ> whatsupdoc, here's how I would solve that problem: https://bpa.st/5OFQ
[00:17:20] *** Quits: swn (~sweeney@user/swn) (Remote host closed the connection)
[00:17:38] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[00:17:53] <SnoopJ> if you had to worry about the size of your input, you might want to do more of that work in the same place so you could skip any candiates shorter than the current winner.
[00:18:03] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:18:15] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[00:18:45] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:19:15] *** Joins: Jefren3 (~Jefren@70.35.67.210)
[00:19:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:19:16] <whatsupdoc> https://dpaste.com/HU9Y4G6CX
[00:19:21] <whatsupdoc> My solution is trash?
[00:19:24] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[00:19:38] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[00:19:42] <HurricaneHarry> @freeman_h check the value of decimal.Decimal(ins['lastPrice'])
[00:19:45] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[00:20:24] *** Joins: Jefren4 (~Jefren@206.253.157.254)
[00:20:28] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[00:21:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[00:21:11] <whatsupdoc> i can't even understand your code lol
[00:21:22] <SnoopJ> whatsupdoc, if you want to understand it, ask me clarifying questions.
[00:21:37] <whatsupdoc> what is 'yield'?
[00:21:46] <SnoopJ> I don't think your solution "is trash," but I don't like carrying that much state around
[00:21:50] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[00:22:12] *** Quits: Jefren2 (~Jefren@70.35.66.135) (Ping timeout: 256 seconds)
[00:22:13] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[00:22:16] <whatsupdoc> state?
[00:22:23] <Byteflux> whatsupdoc: Snoop's is nicer, the extra-credit approach for sure, but if you want something "simpler" then mine isn't too hard to understand: https://bpa.st/SLTQ
[00:22:34] <SnoopJ> whatsupdoc, `yield` is like `return` but it's for generator functions: https://docs.python.org/3/tutorial/classes.html#generators
[00:22:38] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[00:22:50] <SnoopJ> Byteflux, that's pretty much what they did
[00:23:18] <Byteflux> i just don't see the point of the two loops given the particular requirements :P
[00:23:22] <SnoopJ> whatsupdoc, you have to keep track of `seen, count` and reset them.
[00:23:31] *** Quits: Jefren3 (~Jefren@70.35.67.210) (Ping timeout: 250 seconds)
[00:24:01] <SnoopJ> That information is the "state" of the search you're performing for each choice of `i`
[00:24:29] <SnoopJ> It's not incorrect or anything, but it's a lot of extra stuff to keep track of
[00:25:34] <whatsupdoc> but how do you know set() is not doing something similar in the background?
[00:25:44] <whatsupdoc> and using more state variables?
[00:25:47] <SnoopJ> why do I care about the background?
[00:26:03] <SnoopJ> the implementation being correct is the implementation's problem, I'm just writing Python :)
[00:26:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:26:36] <whatsupdoc> i guess
[00:26:38] *** Joins: Jefren (~Jefren@70.35.66.158)
[00:26:45] <Byteflux> a set is *basically* a dictionary, it's not a very complex data structure
[00:26:57] <SnoopJ> Byteflux, I guess there isn't a point if you only care about the length of the longest such substring.
[00:27:09] <Repiphany> Length of longest substring attempt without sets https://bpa.st/WVUQ
[00:27:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:27:47] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 255 seconds)
[00:27:49] <whatsupdoc> i wonder how much of this is to solve on your own and how much of this is to just using prebuilt tools
[00:28:01] <SnoopJ> the point of the question, you mean?
[00:28:06] <whatsupdoc> yea
[00:28:10] <SnoopJ> the point of questions like that is usually to waste everyone's time, in my experience
[00:28:13] <Byteflux> you would not be reasonably expected to reinvent a set
[00:28:24] <Byteflux> you can use a list if you want, it'd be less efficient, that's all
[00:28:35] <whatsupdoc> yes, but i don't think you need to use a set to solve it
[00:28:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[00:28:40] <SnoopJ> of course you don't
[00:28:42] *** Quits: Jefren4 (~Jefren@206.253.157.254) (Ping timeout: 240 seconds)
[00:28:49] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:28:51] <Byteflux> the set is for efficiency
[00:29:03] <Byteflux> it's optimal, not necessary.
[00:29:04] <SnoopJ> it's for clarity as far as I'm concerned
[00:29:05] *** Joins: mickey (~user@user/mickey)
[00:29:11] <SnoopJ> set(somestr) gets rid of duplicates
[00:29:15] <whatsupdoc> you're basically bruteforce generating all the subsets
[00:29:18] *** Joins: Jefren1 (~Jefren@70.35.67.33)
[00:29:21] <Byteflux> yeah in your example, for sure
[00:29:35] <Byteflux> im only looping over the string, once. a single pass
[00:29:40] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:8d1e:9a6a:e03:adfe) (Ping timeout: 272 seconds)
[00:29:49] <Byteflux> i use the set to track the longest unique substring
[00:30:09] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[00:30:37] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[00:30:37] *** Quits: qunzhong1luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[00:30:52] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:30:53] *** Joins: averell (~averell@user/averell)
[00:30:57] *** Quits: Jefren (~Jefren@70.35.66.158) (Ping timeout: 245 seconds)
[00:31:43] *** Joins: Jefren2 (~Jefren@70.35.67.61)
[00:31:44] <SnoopJ> whatsupdoc, sure, I pointed out in my reply that there is some room for improvement. It's okay if you don't like my solution :)
[00:31:49] *** Joins: slav0nic (slav0nic@python.su)
[00:32:05] <whatsupdoc> no i like it, idk if i'd ever come up with a solution like that on my own
[00:32:24] *** Quits: thecoder (~mrrobot@static-47-206-93-60.tamp.fl.frontiernet.net) (Ping timeout: 252 seconds)
[00:32:45] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[00:32:46] <SnoopJ> Loops are the #1 thing I'd point out as different in Python, and they can feel very uncomfortable if you're used to the way that C-like languages do it
[00:32:50] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[00:33:19] <freeman_h> HurricaneHarry, cant
[00:33:22] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:33:24] <whatsupdoc> yep
[00:33:25] <Byteflux> using generators more can change the way you think about loops
[00:33:27] <Repiphany> Byteflux: Your solution is incorrect because you reset the whole substring when you detect a repeat
[00:33:27] <whatsupdoc> i notice that
[00:33:29] *** Joins: pnoud (~pnoud@user/pnoud)
[00:33:37] <whatsupdoc> I miss C/C++ for that reason
[00:33:45] <whatsupdoc> idk why i'm forcing myself to use python lol
[00:33:55] *** Quits: Jefren1 (~Jefren@70.35.67.33) (Ping timeout: 250 seconds)
[00:33:58] <SnoopJ> iterables in Python are like uni-directional Iterators in C++
[00:34:03] <Repiphany> longest('abcae') returns 3 when it should be 4
[00:34:15] <Byteflux> Repiphany: no, it shouldn't
[00:34:19] *** Joins: Jefren3 (~Jefren@70.35.67.65)
[00:34:25] <Byteflux> as i said the description of "repeating characters" is bad
[00:34:31] <SnoopJ> Byteflux, 'bcae' has length 4
[00:34:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[00:34:42] <Byteflux> ah right
[00:34:59] <Byteflux> it produced the correct outputs for the example, didn't catch that
[00:35:06] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 240 seconds)
[00:35:15] <SnoopJ> yea, this is why I like to write something that gets close to the way I'd say it in English
[00:35:17] *** Gustavo6046_ is now known as Gustavo6046
[00:35:26] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[00:35:39] <whatsupdoc> mine works thank goodness
[00:35:47] <whatsupdoc> even though it looks like a mess
[00:36:00] <Byteflux> wouldn't say it's a mess
[00:36:06] <Byteflux> just a different approach
[00:36:22] *** Parts: Praise (~Fat@user/praise) (Vado a fare qualcosa di utile.)
[00:36:48] <SnoopJ> it does have one big advantage over mine: it doesn't double back on itself as much because the inner range starts at `i`
[00:36:57] *** Joins: aosaigh (~aosaigh@user/aosaigh)
[00:36:59] <Repiphany> (also my solution is incorrect)
[00:37:10] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[00:37:17] *** Quits: aosaigh (~aosaigh@user/aosaigh) (Client Quit)
[00:37:22] <Byteflux> generators are the more idiomatic approach though, i'd say.
[00:37:34] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com)
[00:37:51] *** Quits: Jefren2 (~Jefren@70.35.67.61) (Ping timeout: 276 seconds)
[00:38:27] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[00:38:29] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[00:38:56] <whatsupdoc> so slow smh 13%
[00:39:01] <Repiphany> https://bpa.st/FAHA had a -1 instead of +1 in line 10
[00:39:17] <SnoopJ> you could definitely get it done without using generators, but it'd probably end up looking pretty much like the slice-y version
[00:39:57] *** Joins: jcalla (~jcallaha@cpe-75-189-211-206.nc.res.rr.com)
[00:40:06] <SnoopJ> probably there's some itertools spelling that replaces substrings() but I couldn't be bothered to think about it too hard, and usually this is a sign that it'd be write-only code.
[00:40:12] *** Joins: Jefren4 (~Jefren@70.35.66.145)
[00:40:18] <Byteflux> Repiphany's looks like the shortest and probably more performant approach
[00:40:33] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[00:40:48] <SnoopJ> if the problem is one where you'll be anxious about every machine cycle, Python is definitely not the best choice
[00:41:21] * SnoopJ has more headaches over to difficult-to-maintain code than due to not-maximally-efficient code
[00:42:24] *** Quits: Jefren3 (~Jefren@70.35.67.65) (Ping timeout: 276 seconds)
[00:42:37] <Byteflux> it's not too obscure but yeah, fair point
[00:43:00] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[00:43:13] <SnoopJ> of these solutions, mine is probably the most obscure because of the generators
[00:43:23] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[00:43:39] <SnoopJ> ...also, I forgot to remove the Counter import that I didn't use :)
[00:43:41] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:44:17] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[00:45:04] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[00:45:38] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[00:45:50] *** Joins: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc)
[00:45:52] <freeman_h> Hi guys, I am getting this erro rhttps://kopy.io/ZsbVR I know why but not sure how to handle it in python has I am still new. Basically the lastPrice can be 0.00000000 OR 0.00000000  OR 0.00 or 0.000 what I want to do is basically add a if statement which says if the lastPrice is like that skip it has this is in a loop
[00:45:53] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:45:55] *** Joins: Jefren (~Jefren@70.35.67.23)
[00:46:07] *** Quits: raydeeam (uid325131@dgplug/raydeeam) (Quit: Connection closed for inactivity)
[00:47:23] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:47:48] *** Quits: Jefren4 (~Jefren@70.35.66.145) (Ping timeout: 252 seconds)
[00:47:54] *** Quits: magla (~gelignite@55d40f0c.access.ecotel.net) (Quit: Stay safe!)
[00:48:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[00:49:58] *** Quits: bdeferme1 (~bdeferme@i.ctrl86.com) (Read error: Connection reset by peer)
[00:50:17] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[00:50:35] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:50:38] *** Joins: pnoud (~pnoud@user/pnoud)
[00:50:48] <jinsun> freeman_h: put your code in a try block and `except decimal.DivisionByZero: pass` ?
[00:50:53] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:51:25] <nedbat> freeman_h: or, `  if ins["lastPrice"] == 0: `  and then do something when it is
[00:51:36] <rama> i have an attribute that i want to add to an object, its value can be `internal` or `external` is is "better" to have the attribute be a string, or rather to make the attribute a boolean e.g. x.internal=True vs x.status=internal any hard opinions about this?
[00:51:39] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[00:51:39] *** Quits: waxfire238 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[00:51:40] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[00:51:43] *** Joins: y1n (~y1n@84-115-64-213.wifi.dynamic.surfer.at)
[00:52:07] *** Quits: Tritium (~tritium@toxin.sdamon.com) (Quit: Do not write bellow this line)
[00:52:20] *** Joins: waxfire238 (~waxfire@65.119.2.240)
[00:52:31] <SnoopJ> here's my second pass, no generator magic and it uses the minimal search space: https://bpa.st/M3EA
[00:52:35] <nubonix> hi there, im looking for some qthread help with pyqt5. what i have now works fine for a set of threads, but if i loop over it again to create another set of threads, it destroys the threads that existed before which doesnt quite make sense to me since im adding them to a list and then trying to start them.
[00:52:35] <nubonix> the full version of the code is the first file on bpaste, while the second file is one that i have trimmed down to what i believe the scope of the problem is.
[00:52:36] <nubonix> # A bit more detail of symptoms
[00:52:36] <nubonix> if i uncomment z1.start() and z2.start() while only having the loop iterate once, everything works as expected, but as soon as i comment those out and add them to a list and try to start z1.start() and z2.start() in the second iteration of the loop, things dont work.
[00:52:36] <freeman_h> nedbat, you mean if ins["lastPrice"] is not 0
[00:52:36] <nubonix> Also, by adding a second iteration, it makes the second box / card in my pyqt5 app display the video, while the first one is blank. Along with this, the buttons of the first and second card only control the second card. I was also getting a weird toggling effect that would switch from z1 to z2 images when i added another iteration to the loop
[00:52:36] <nubonix> https://bpa.st/3GLA
[00:52:45] <jcalla> rama: is the value always going to be effectively boolean?
[00:52:48] <nedbat> freeman_h: != 0   would also work
[00:52:56] <nedbat> freeman_h: you don't want "is not 0"
[00:53:08] *** Joins: Jefren1 (~Jefren@208.104.190.46)
[00:53:17] <rama> jcalla: yeah it seems like it, there can never be a third status, its either `internal` or `external`
[00:53:46] *** Quits: Antibody (~Antibody@107.170.145.30) (Ping timeout: 268 seconds)
[00:53:57] <jcalla> rama: then boolean is more clear. easier to do checks like  if self.internal:
[00:55:03] *** Quits: waxfire238 (~waxfire@65.119.2.240) (Client Quit)
[00:55:26] <freeman_h> nedbat, !=0 doesnt work
[00:55:33] *** Quits: Jefren (~Jefren@70.35.67.23) (Ping timeout: 265 seconds)
[00:55:37] *** Quits: webmind (~webmind@user/webmind) (Ping timeout: 268 seconds)
[00:55:39] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[00:55:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[00:56:04] <nedbat> freeman_h: can you link us to the code?
[00:56:43] <freeman_h> nedbat, ignore me
[00:56:48] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[00:56:55] <nedbat> freeman_h: i won't, but glad that it is working :)
[00:57:02] *** Joins: nuala2 (~nuala@user/nuala)
[00:57:12] *** Quits: nuala (~nuala@user/nuala) (Ping timeout: 245 seconds)
[00:57:28] <nedbat> freeman_h: btw, if ins['lastPrice'] isn't a string, then decimal.Decimal won't help with the float issues.
[00:58:15] *** Quits: anddt (~anddt@net-188-152-4-216.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[00:58:32] *** Joins: Jefren2 (~Jefren@70.35.67.233)
[01:00:03] *** Joins: waxfire238 (~waxfire@65.119.2.240)
[01:00:38] *** Quits: Jefren1 (~Jefren@208.104.190.46) (Ping timeout: 255 seconds)
[01:00:52] <HurricaneHarry> @freeman_h: https://kopy.io/MD0xf
[01:01:13] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 250 seconds)
[01:01:35] *** Quits: nuala2 (~nuala@user/nuala) (Ping timeout: 258 seconds)
[01:01:50] *** Joins: heco (~redrum@user/redrum88)
[01:01:51] *** Joins: bwe (~bwe@2a01:4f8:1c1c:4878::2)
[01:01:54] <nedbat> if you are going to do that, might as well assign the decimal to a variable instead of repeating it three times.
[01:02:13] *** Quits: akashgp09 (uid500614@id-500614.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:46] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[01:04:07] <grym> can i `pytest test_foo.py test_bar.py` ?
[01:04:30] <SnoopJ> grym, yep
[01:04:38] <grym> excellent.
[01:06:19] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[01:06:22] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[01:06:40] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 265 seconds)
[01:06:57] *** Joins: Jefren3 (~Jefren@70.35.66.170)
[01:06:59] *** Joins: Mogget (Mogget@vogon.moshwire.com)
[01:07:12] *** Joins: Antibody (~Antibody@107.170.145.30)
[01:07:39] *** Joins: webmind (~webmind@user/webmind)
[01:07:50] *** Quits: y1n (~y1n@84-115-64-213.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[01:08:51] *** Joins: y1n (~y1n@84-115-64-213.wifi.dynamic.surfer.at)
[01:10:01] *** Quits: Jefren2 (~Jefren@70.35.67.233) (Ping timeout: 258 seconds)
[01:12:26] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 252 seconds)
[01:12:33] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 252 seconds)
[01:13:31] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:14:02] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[01:15:56] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 255 seconds)
[01:16:45] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[01:16:51] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[01:17:53] <OnlineCop> !json
[01:18:14] <OnlineCop> I'd have figured that was a common enough question that there'd be a tutorial or FAQ...
[01:18:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[01:18:49] <grym> nope, our bot is intentionally real dumb
[01:18:53] <grym> OnlineCop: whatcha got
[01:19:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:19:30] <entuland> poor bot
[01:19:32] <entuland> !cookie
[01:20:07] <axisys> how do I print the name of the dictionary? I have three dicts foo, bar and quaz. how do I loop through them and just print them, not their content
[01:20:07] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:20:13] <OnlineCop> I'm modifying some JSON; using simplejson and OrderedDict, I'm able to pass a list to a function and the values are updated as expected (pass by reference?). I need to modify keys, however, so `"foo": { 1.0, 2.0, 3.0 }` can be renamed to `"bar": { 1.0, 2.0, 3.0 }`.
[01:20:22] <SnoopJ> The official tutorial includes a brief section on JSON that is mostly there to direct people towards the module's documentation: https://docs.python.org/3/tutorial/inputoutput.html#saving-structured-data-with-json
[01:21:16] <axisys> I meant, just print their* name
[01:22:50] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[01:23:38] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:23:44] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[01:23:45] <SnoopJ> axisys, objects don't have names. Helpful reading/viewing about this: https://nedbatchelder.com/text/names1.html
[01:24:33] <nedbat> OnlineCop: you would need to add the "bar" key and delete the "foo" key
[01:24:47] <SnoopJ> short version: `d = {"foo": 1, "bar": 2}; d2 = d;  # there is only one dict object here, and the names d, d2 both refer to it`
[01:24:53] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:25:24] *** Joins: anddt (~anddt@net-188-152-4-216.cust.dsl.teletu.it)
[01:25:37] <OnlineCop> https://bpa.st/JC2A
[01:26:18] <OnlineCop> Calling update_value() and passing in the list (section) where 'name' is found, properly updates the caller.
[01:26:55] <OnlineCop> I'm having trouble with rename_key() however, since 'section.pop()' works as expected but 'section = ...' does not modify the caller's "section" parameter.
[01:26:58] <nedbat> OnlineCop: line 8 looks more complicated than it needs to be, and won't do what you need, because "section" is a local variable, changing it won't change your structure.
[01:28:01] <nedbat> OnlineCop: line 8 can be:  section[new_name] = section[old_name], and move the pop to apply all the time
[01:28:06] <OnlineCop> nedbat: Right. This works properly if I do it inline, but when I extracted it to its own def, the reassignment to 'section' doesn't continue to work like it did before.
[01:28:55] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 268 seconds)
[01:29:21] <nedbat> OnlineCop: https://gist.github.com/nedbat/c4527cd8baca56844b0f66cea1426af3 this should work
[01:29:31] <OnlineCop> I tried that with line 8 before, but it doesn't keep the original order of the JSON (which was a big complaint by developers who had to modify GB-sized JSON files and didn't want all those "lines moved" in their dirrs).
[01:29:53] *** Quits: SGautam (uid286066@charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:03] <nedbat> OnlineCop: i don't see how a simple assignment could be worse
[01:30:35] <nedbat> OnlineCop: oh, you want the new name to be in the same place as the old name, even if it doesn't sort that way?
[01:30:46] <nedbat> i see now
[01:30:50] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[01:31:00] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[01:31:02] *** Parts: WinterHeart (~Guest35@134.126.93.123) ()
[01:31:06] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 240 seconds)
[01:31:27] <nedbat> OnlineCop: then you should return section from this function
[01:31:41] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:f438:5f31:7a5c:74c3) (Ping timeout: 255 seconds)
[01:31:53] <OnlineCop> Okay, so anything that calls rename_key() should expect a returned 'section' list?
[01:32:00] <nedbat> OnlineCop: yes
[01:32:05] <nedbat> (dict)
[01:32:20] *** Joins: ferz (~ferz@93.48.251.229)
[01:32:36] <OnlineCop> Right; dict.
[01:33:40] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[01:33:53] *** Joins: ali1234 (~al@user/ali1234)
[01:34:20] *** Quits: amahl (~amahl@84.251.202.64) (Remote host closed the connection)
[01:35:39] *** Joins: inom (~inom@176.59.103.126)
[01:36:23] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:36:31] <nubonix> looking for some help with pyqt5 slots & threads. so im creating threads, and updating the slot via a thread, but it seems that the slot doesnt create a seperate instance of a slot, but does create a seperate instance of the qlabel
[01:36:31] <nubonix> the first file is the full_version and the second file is the file ive trimmed down to what i think the problem is
[01:36:31] <nubonix> https://bpa.st/3GLA [please feel free to tag me]
[01:37:08] *** Quits: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net) (Quit: Client closed)
[01:38:08] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[01:38:56] *** Parts: inom (~inom@176.59.103.126) ()
[01:39:06] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[01:41:06] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[01:41:42] *** Quits: emika (~emika@185.207.249.102) (Ping timeout: 252 seconds)
[01:41:58] *** Joins: emika (~emika@185.207.249.143)
[01:42:20] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:42:41] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[01:44:34] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:46:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 276 seconds)
[01:47:12] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:48:42] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[01:48:53] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:49:01] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[01:50:39] <EvanCarroll> If anyone is in the USA and mid-senior level and looking job, cPanel hiring. Feel free to pvmsg me over your info. You get to work with me on a large Python project.
[01:52:24] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[01:54:00] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 256 seconds)
[01:54:11] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:55:28] <nedbat> EvanCarroll: thanks, but we would rather not have hiring ads here.
[01:55:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:57:12] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f)
[01:57:36] <matsaman> not to be contrary, truly, but is that in the rules in /topic?
[01:57:46] <matsaman> wasn't there a -lance channel in ye olde freenode.net days?
[01:58:03] <SnoopJ> https://www.python.org/jobs/
[01:58:11] <matsaman> =)
[01:58:19] <matsaman> EvanCarroll: ^
[01:58:30] *** Joins: inom (~inom@176.59.103.126)
[01:59:32] *** Quits: cedric (~cedric@2a01:cb11:867:c200:17e6:53b6:42:d0c0) (Quit: Konversation terminated!)
[01:59:40] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-194.range86-150.btcentralplus.com) (Quit: Leaving.)
[02:00:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[02:01:00] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[02:01:02] <nedbat> matsaman: we could add it to https://www.pound-python.org/
[02:01:09] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:01:24] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:01:45] <matsaman> indeed
[02:02:04] *** Joins: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a)
[02:02:04] <SnoopJ> huh, wonder why that Ars article uses scare quotes in the title
[02:02:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[02:02:42] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f) (Ping timeout: 240 seconds)
[02:02:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:03:00] *** Joins: ice9 (~ice9@user/ice9)
[02:03:02] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:03:27] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 268 seconds)
[02:03:39] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:cc6b:e958:ede8:e051)
[02:03:44] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f)
[02:04:08] <stewie925> hi all, i have an issue with "import error" in python3 -   here is my import statement in my program:
[02:04:39] <stewie925> `from .database.models import db_drop_and_create_all, setup_db, Drink`
[02:04:59] <stewie925> emphasis on the dot in front of the  `.database`
[02:05:18] <stewie925> when i run with flask using VSCode, I have no issue
[02:05:54] <stewie925> however, when I am running debugging, i get `attempted relative import with no known parent package`
[02:06:04] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[02:06:09] <stewie925> btw I am running inside a virtual environment
[02:06:43] *** Joins: Trieste (T@user/pilgrim)
[02:07:26] *** Joins: humberto1 (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb)
[02:07:35] <matsaman> SnoopJ: which'n?
[02:07:37] *** Quits: y1n (~y1n@84-115-64-213.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[02:07:48] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[02:08:06] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:09:18] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[02:09:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:09:56] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:a046:b347:f565:b30f) (Ping timeout: 255 seconds)
[02:09:56] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:10:32] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:abed:7f37:45fd:324) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:10:38] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:11:02] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:11:25] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[02:12:07] *** Quits: BlickleTree (~ndean@pool-72-94-87-37.phlapa.fios.verizon.net) (Ping timeout: 258 seconds)
[02:12:10] <OnlineCop> If I loop over dicts: `for app in foo['apps']: app = rename_key(section=app, old_name='bar', new_name='baz')` then will `foo['apps']` have each of its `app` instances modified?
[02:12:16] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[02:12:28] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:12:45] <ChrisWarrick> OnlineCop: no
[02:12:49] *** Joins: Trieste (T@user/pilgrim)
[02:12:52] <OnlineCop> Bummer.
[02:12:57] <ChrisWarrick> OnlineCop: if you made the modification directly on `app` instead of assigning to it, it would work
[02:13:11] <OnlineCop> It modifies a child of `app`.
[02:13:33] <ham5urg> In sqlalchemy a model can be defined with deriving from Base=declarative_base() and MyModel(Base): ... I would like to create a db = scoped_session(sessionmaker()) before loading the models. Is it possible to use the constructor instead of the class definition of a Model to register it with the db? E.g. mymodel = MyModel(db_instance) would be great.
[02:13:36] <OnlineCop> The intent is to rename key `foo['apps']['bar']` => `foo['apps']['baz']`.
[02:13:52] *** Quits: inom (~inom@176.59.103.126) (Quit: Leaving.)
[02:14:13] <ChrisWarrick> OnlineCop: foo['apps']['baz'] = foo['apps']['bar']; del foo['apps']['bar']
[02:14:25] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 258 seconds)
[02:14:33] <SnoopJ> matsaman, the one linked on the pound-python page
[02:15:00] <matsaman> SnoopJ: ah right
[02:15:09] <matsaman> SnoopJ: IIRC his claim to the throne is widely regarded as nonsense
[02:15:21] <OnlineCop> ChrisWarrick: I've got a `def rename_key()` that I'm calling all over the place, to update old key names in a JSON to newer names. I'm not able to `del foo['apps']['bar']` them all inline.
[02:15:21] <matsaman> SnoopJ: someone did say he had it, though; it's on wikipedia somewhere
[02:15:34] <SnoopJ> matsaman, #python-offtopic if you want to chat about it, it was a remark in passing
[02:15:36] <ChrisWarrick> OnlineCop: how does your rename_key look?
[02:15:50] <matsaman> SnoopJ: it's a bit unfair because we make fun of him by calling him that, even though he's not that really =P
[02:15:53] <matsaman> SnoopJ: sure sure
[02:16:00] <OnlineCop> ChrisWarrick: https://bpa.st/VM5Q more-or-less.
[02:16:39] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:ca4e:e8c3:6062:e811) (Ping timeout: 276 seconds)
[02:16:54] <OnlineCop> This script converts a JSON in multiple steps, where some steps rename the key names, and others simply modify the values.
[02:17:00] <ChrisWarrick> OnlineCop: your rename_key doesn’t work
[02:17:23] <OnlineCop> Derp: I forgot to `return section` on line 12 in that paste.
[02:17:24] *** Joins: d3vyL (d3vyL@host-95-252-236-168.retail.telecomitalia.it)
[02:17:44] *** Joins: Naan (~naan@user/naan)
[02:17:49] *** Joins: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[02:17:53] <OnlineCop> https://bpa.st/Y6TQ
[02:17:57] <OnlineCop> Should that work?
[02:17:59] <ChrisWarrick> OnlineCop: it returns a new instance of the dict, which means it won’t magically replace itself
[02:18:08] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8130-a387-318d-d58e.res6.spectrum.com) (Read error: Connection reset by peer)
[02:18:11] *** Joins: dre (~dre@2001:8003:c932:c301:10a0:acdf:118c:76a2)
[02:18:16] *** Joins: inom (~inom@176.59.103.126)
[02:18:22] <ChrisWarrick> OnlineCop: nope, line 36 won’t work
[02:18:54] <OnlineCop> Ah. That's what this rewrite was hoping to accomplish.
[02:20:38] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[02:21:21] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[02:21:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:21:39] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[02:21:46] *** Parts: inom (~inom@176.59.103.126) ()
[02:21:49] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:21:56] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:21:57] <OnlineCop> It'd be much easier if I can just key['new_name'] = key.pop('old_name') and keep the order the same. :eyeroll:
[02:22:01] <mat001> When would you use logging warning vs error? Are there guidelines?
[02:24:01] <hodapp> warning is typically something like "this probably isn't a problem, but it could potentially indicate one", whereas an error should be for some definite problem preventing something from proceeding
[02:24:08] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:24:22] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:24:23] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[02:24:41] <mat001> In my case it's a data loss when generating events. Not critical nor doesn't it break anything, but it's a significant impact on the customer, they would benefit from knowing that it is happening
[02:25:08] <SnoopJ> the warnings module has this to say: "Warning messages are typically issued in situations where it is useful to alert the user of some condition in a program, where that condition (normally) doesn’t warrant raising an exception and terminating the program."
[02:25:47] <mat001> hm, thanks. I think my issue is still in the warning category
[02:26:08] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[02:26:28] <hodapp> I'd say so too
[02:26:30] *** Joins: p-i- (~Ohmu@node-120w.pool-118-173.dynamic.totinternet.net)
[02:26:34] *** Quits: n3tgh0st (~n3t@209-112-185-154-radius.dynamic.acsalaska.net) (Quit: Leaving)
[02:26:46] <SnoopJ> using the ERROR level in a logger suggests two main cases to me: 1) supplementary data that doesn't fit into the exception about to be raised 2) recording recoverable errors that occurred down the stack
[02:28:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[02:29:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:29:05] *** audio is now known as audiocat
[02:29:13] *** audiocat is now known as duckgoose
[02:29:14] *** Joins: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642)
[02:29:17] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 255 seconds)
[02:29:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:29:30] *** duckgoose is now known as audiocat
[02:30:21] *** Joins: V1mV1m (~VimVim@85.191.62.30)
[02:30:33] *** cman_ is now known as cman
[02:30:38] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:30:45] *** resmo_ is now known as resmo
[02:31:44] *** Joins: bobbi (~bobby@cpe688f2ec74c43-cm688f2ec74c40.cpe.net.fido.ca)
[02:31:56] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[02:32:18] <bobbi> i'm trying to write an overlay program that permits click-through and acts as a crosshair to clarify the position of my cursor
[02:32:55] <bobbi> however i've run into roadbumps both using tkinter as well as pyqt5, in which the transparency of the overlay or the click-through-ability of the overlay seems to disable mouse tracking in some way
[02:33:12] *** Joins: nuala2 (~nuala@user/nuala)
[02:33:19] *** Quits: Akuli (~Akuli@87-94-111-16.bb.dnainternet.fi) (Quit: Leaving)
[02:33:47] *** Quits: VimVim (~VimVim@85.191.89.249) (Ping timeout: 255 seconds)
[02:33:48] *** Quits: V1mV1m (~VimVim@85.191.62.30) (Client Quit)
[02:34:06] *** Joins: VimVim (~VimVim@85.191.62.30)
[02:34:10] *** Joins: djapo (~archangel@user/djapo)
[02:35:00] *** Joins: akaWolf (~akaWolf@akawolf.org)
[02:35:44] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[02:36:16] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 258 seconds)
[02:36:45] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 268 seconds)
[02:36:59] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:37:12] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:38:01] *** Joins: clf59 (~clf59@user/clf59)
[02:39:35] *** Joins: Praise (~Fat@user/praise)
[02:39:38] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 255 seconds)
[02:40:52] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.58)
[02:42:47] *** Quits: Quaking (~Quaking@167.89.254.27) (Ping timeout: 255 seconds)
[02:43:40] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[02:43:56] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[02:44:25] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[02:45:37] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[02:45:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:46:03] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[02:46:58] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:47:46] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 258 seconds)
[02:47:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[02:50:04] *** Quits: clf59 (~clf59@user/clf59) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:50:20] *** Quits: greedom (~greedom@2001:16b8:2e72:9600:c666:7829:908d:f3cc) (Remote host closed the connection)
[02:50:32] *** Quits: dalan6 (~dalan@59-102-56-163.tpgi.com.au) (Quit: dalan6)
[02:50:34] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:50:58] *** Joins: dalan6 (~dalan@59-102-56-163.tpgi.com.au)
[02:51:28] *** Joins: pnoud (~pnoud@user/pnoud)
[02:51:43] *** Joins: jdmark (~jdmark@67.8.137.130)
[02:52:47] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[02:52:58] *** Joins: clf59 (~clf59@user/clf59)
[02:53:34] *** Quits: mexen (uid495612@user/mexen) ()
[02:56:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[02:57:05] <ham5urg> Is there something available in Python like C++'s block scope? https://en.cppreference.com/w/cpp/language/scope
[02:57:11] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 255 seconds)
[02:57:14] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[02:57:27] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[02:58:01] *** Quits: anddt (~anddt@net-188-152-4-216.cust.dsl.teletu.it) (Quit: Leaving)
[02:59:25] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[03:00:14] <nedbat> ham5urg: there isn't a scope smaller than function
[03:00:44] <nedbat> ham5urg: how would that scope help?
[03:01:10] *** Joins: schumaml4 (~schumaml@dslb-188-104-182-167.188.104.pools.vodafone-ip.de)
[03:02:04] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[03:02:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[03:02:35] <ham5urg> nedbat, it would just be for nicer var naming in a longer repeating command sequence.
[03:02:35] *** Quits: schumaml3 (~schumaml@dslb-088-067-050-047.088.067.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[03:02:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:56] <nedbat> ham5urg: you could use those nicer names anyway, couldn't you?
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:03:49] <ham5urg> nicer, shorter... but it's not a big deal
[03:04:00] <SnoopJ> or perhaps some functions
[03:04:24] <nedbat> ham5urg: i'm just not sure why you can't use the names you wanted, even without the block scope?
[03:04:54] <SnoopJ> nedbat, because it clobbers the original value, I think?
[03:04:56] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:05:05] <SnoopJ> the original mapping of name->value, I mean
[03:07:21] *** Joins: sybariten (~jake@78-47-86-21.cinfuserver.com)
[03:07:21] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 276 seconds)
[03:07:31] <sybariten> so, i'm trying to import some data, externa file
[03:08:30] *** Joins: schumaml (~schumaml@dslb-188-104-168-209.188.104.pools.vodafone-ip.de)
[03:08:50] <ham5urg> nedbat, like in C++ I would try to have the same var naming scheme. If I shorten the var-name to the min. I would not need to name the vars like varA_a / varA_b and varB_a / varB_b. Instead {a=... b=... some_fun()} {a=... b=... some_fun()} would be enough. No big deal but I could stay in sync with the C++ naming scheme.
[03:08:50] <sybariten> the data is stored as a plain dictionary in a file called recorded_data.py . I'm in the same dir, running python3 . If i do import recorded_data , do i automatically get this dicitonary as an object available to me then?
[03:08:57] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[03:09:30] <nedbat> ham5urg: in python you don't need to name them varA_a either. Just call them a,b, etc.
[03:10:32] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:10:46] *** Quits: schumaml4 (~schumaml@dslb-188-104-182-167.188.104.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[03:10:48] <SnoopJ> ham5urg, there is no direct analogue of that lexical feature. The closest thing is probably the stuff in `contextvars` and that's really more for passing things around.
[03:10:51] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[03:11:07] <sybariten> ah, wait, i couldnt do just print(recorded_dictionary) , i had to do print(recorded_data.recorded_dictionary)
[03:11:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[03:12:04] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:12:20] *** Quits: outsider1 (~sierkov@c89-176.i07-23.onvol.net) (Ping timeout: 265 seconds)
[03:15:22] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[03:15:48] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 276 seconds)
[03:18:18] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[03:18:40] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[03:20:21] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[03:20:53] *** Joins: schumaml1 (~schumaml@dslb-188-104-182-178.188.104.pools.vodafone-ip.de)
[03:21:12] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[03:21:27] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:21:40] <ham5urg> Thanks for the info
[03:22:03] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:22:17] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[03:23:02] *** Quits: schumaml (~schumaml@dslb-188-104-168-209.188.104.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[03:23:30] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:23:40] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:24:14] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[03:24:22] *** Joins: erica (~erica@user/erica)
[03:24:28] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[03:25:06] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[03:26:56] *** Joins: schumaml2 (~schumaml@dslb-094-216-175-195.094.216.pools.vodafone-ip.de)
[03:27:24] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:441c:804b:bc41:65d6)
[03:27:47] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[03:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[03:28:24] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[03:28:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:28:48] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:29:10] *** Quits: schumaml1 (~schumaml@dslb-188-104-182-178.188.104.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[03:29:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:30:20] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:30:45] <stewie925> hi guys is there a chat room for flask python?
[03:30:50] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[03:31:13] <nubonix> stewie925 you can ask here, but there also might be a #flask, however, alot more people are here
[03:31:25] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:31:55] <stewie925> nubonix:  thanks!  I just checked now  there is no flask chat :)
[03:31:58] <nubonix> flask is still python so
[03:32:11] <stewie925> hehe true :)
[03:32:12] *** dermato_ is now known as dermato
[03:32:42] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:32:48] <stewie925> so I have an issue with my flask python - I am running 'flask shell' which is like the "python3 interactive" for flask
[03:32:48] <nubonix> i dont go to a pyqt5 channel for help with pyqt5, because it is its own language, while im looking for help in the pyqt5 wrapper for python  :)
[03:33:23] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 258 seconds)
[03:33:43] <stewie925> my python program is contained  in a folder called /src,  and that /src folder has another folder called database
[03:34:00] <stewie925> this is an import question
[03:34:17] <stewie925> so my program has this:  `from .database.models import db_drop_and_create_all, setup_db, Drink`
[03:34:24] *** Joins: pnoud (~pnoud@user/pnoud)
[03:34:52] <nubonix> this isnt a flask problem
[03:35:00] <stewie925> however, if I type the same thing in `flask shell`  I have this issue...
[03:35:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[03:35:20] <nubonix> if you run it from python you will probably have the same problem [outside of your ide]
[03:35:22] <stewie925> `>>> from .database.models import db_drop_and_create_all, setup_db, Drink
[03:35:22] <stewie925> Traceback (most recent call last):
[03:35:23] <stewie925>   File "<console>", line 1, in <module>
[03:35:23] <stewie925> KeyError: "'__name__' not in globals"
[03:35:24] <stewie925> >>> from database.models import db_drop_and_create_all, setup_db, Drink
[03:35:24] <stewie925> Traceback (most recent call last):
[03:35:25] <stewie925>   File "<console>", line 1, in <module>
[03:35:25] <stewie925> ModuleNotFoundError: No module named 'database'`
[03:35:37] <stewie925> `from .database.models import db_drop_and_create_all, setup_db, Drink
[03:35:38] <stewie925> Traceback (most recent call last):
[03:35:38] <stewie925>   File "<console>", line 1, in <module>
[03:35:39] <stewie925> KeyError: "'__name__' not in globals"
[03:35:39] <stewie925> >>> from database.models import db_drop_and_create_all, setup_db, Drink
[03:35:40] <stewie925> Traceback (most recent call last):
[03:35:40] <stewie925>   File "<console>", line 1, in <module>
[03:35:41] <nubonix> please dont paste tracebacks or code in the channel
[03:35:41] <stewie925> ModuleNotFoundError: No module named 'database' `
[03:35:43] <nubonix> stop
[03:35:55] <rama> stewie95, can you paste that into something like bpaste ? its easier to read :)
[03:36:02] <stewie925> sorry about that
[03:36:05] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[03:36:10] <stewie925> I thought the tick marks work for multiple lines
[03:36:12] <nubonix> stewie925: please read this https://www.pound-python.org
[03:36:21] <rama> no worries, we all get one freebie
[03:36:22] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[03:36:28] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:36:56] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[03:37:09] *** Quits: dermato (~dermatobr@154.21.114.128) (Quit: WeeChat 3.1)
[03:37:38] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:38:21] *** Joins: dermato (~dermatobr@154.21.114.128)
[03:38:31] <nubonix> stewie925 here is a potential solution. create a folder for your project to live in, create another folder inside the project folder with the same name. put all of your files and folders that you currently have worked on related to this project in the second folder. move the file you are running to the second level folder
[03:38:36] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:f472:b5db:88c6:67dd) (Read error: Connection reset by peer)
[03:39:13] <nubonix> stewie925: warning, this will break things if you are not using an ide to change paths for you
[03:39:22] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9d05-f087-6eb0-7a9f.res6.spectrum.com) (Ping timeout: 240 seconds)
[03:40:19] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[03:40:32] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[03:40:43] <stewie925> nubonix:  thanks,  I am actually doing a udacity python project and its frustrating
[03:41:49] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[03:41:57] <stewie925> so i cant just move the files from one folder to another, it is already set as is
[03:42:13] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[03:42:54] *** Joins: mrus (~mrus@2001:19f0:5:1535:5400:3ff:fe7d:10ae)
[03:44:42] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:44:54] <stewie925> oh here is my bpaste - https://bpa.st/ZE5Q
[03:45:02] <harpia> When running "python -m build" inside a 'venv' virtual environment, I'm getting a lot of warnings complaining about my pip version being 21.0.1 when 21.2.1 is available. The thing is, I already have 21.2.1 installed in this environment. I don't understand.
[03:45:08] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[03:45:41] <harpia> python -m pip --version returns 21.2.1
[03:45:45] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[03:46:02] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[03:46:05] <rannnn8888> have more simple way get the "or" here ? https://bpa.st/3X2Q
[03:46:23] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[03:46:37] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[03:46:46] *** Joins: tims (~tims@61.69.131.46)
[03:47:03] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 268 seconds)
[03:48:33] <nubonix> stewie925: try src.database.w/e
[03:48:46] <nubonix> src.database.models
[03:48:57] <nedbat> harpia: you can silence those warnings, or just ignore them.
[03:48:58] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[03:49:02] <stewie925> nubonix: thanks, let me try :)
[03:49:07] <nubonix> stewie925: `from .database.models import db_drop_and_create_all, setup_db, Drink`
[03:49:12] <nubonix> asdfasdfadsf
[03:49:21] <nubonix> `from src.database.models import db_drop_and_create_all, setup_db, Drink`
[03:49:26] <nedbat> harpia: idk why they are happening, and it's a little concerning that it's finding a different pip, but the warnings themselves don't matter.
[03:49:59] <stewie925> nubonix: it workkkkked
[03:50:08] <rannnn8888> someone :D  ?
[03:50:32] <stewie925> thank you nubonix!
[03:51:04] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[03:51:11] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[03:51:31] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[03:51:32] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[03:51:56] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[03:53:21] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[03:54:23] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[03:54:31] *** Joins: nrg (~NRG@user/nrg)
[03:54:33] *** Joins: milosz_ (~milosz@user/milosz)
[03:55:25] <nubonix> stewie925: np
[03:55:37] <nubonix> stewie925: do you know why it worked?
[03:56:06] <stewie925> nubonix:  I guess because we speciffy the folder name in the path?
[03:56:13] <stewie925> so python doesnt get "confused"?
[03:57:34] <nubonix> stewie925: so idk where you are calling flask shell from, but most likely it is one level above the src directory, or at the src directory, and therfore `from .database` was looking for a folder in the same directory that src is in for a folder named database, and of course that doesnt exist, because the database folder is inside the src directory, not outside of it / next to it
[03:58:09] <stewie925> I am copy/pasting your comments for future reference :)
[03:58:18] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 258 seconds)
[03:58:26] <nubonix> stewie925: you  could have also tried `..database` but this tends to cause more problems [from my experience]
[03:58:27] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[03:59:02] <stewie925> now I understand why the females hate periods....
[03:59:03] *** Quits: nrg (~NRG@user/nrg) (Client Quit)
[03:59:38] <nubonix> stewie925: these dot commands `.` and `..` are the same thing as in a terminal or command prompt. e.g. `cd .` and `cd ..`
[04:00:12] <nubonix> `cd .` looks in the same directory as you are in, while `cd ..` looks for things one directory above the current directory
[04:00:33] <stewie925> nubonix:  oooooh
[04:00:44] <nubonix> dot commands are not the technical name for them, as idk what their actual name is
[04:01:43] <nubonix> however these "dot commands" are limited to one directory above the current directory unlike the command prompt or terminal. e.g. `from ....database` will not work when trying to import something
[04:02:16] <nubonix> as `cd ../..` is valid for a command prompt and terminal, this is not valid when import python libraries
[04:02:27] <nubonix> anyways :)
[04:03:15] <stewie925> thank yo so much!!!!
[04:03:23] <nubonix> cause as with a command prompt or terminal `cd ....` is also not valid
[04:03:26] <nubonix> np :)
[04:04:12] *** Joins: nrg (~NRG@user/nrg)
[04:06:24] *** Joins: sn1tch3r (~sn1tch3r@185.153.176.56)
[04:06:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[04:06:57] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.58) (Ping timeout: 265 seconds)
[04:07:19] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[04:08:35] *** Joins: mexen (uid495612@user/mexen)
[04:08:59] *** Quits: argento (~argent0@168-227-96-51.ptr.westnet.com.ar) (Ping timeout: 252 seconds)
[04:09:43] *** Joins: sn1tch3r_ (~sn1tch3r@185.153.176.54)
[04:10:34] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[04:11:00] *** colorado is now known as fluiD
[04:11:01] *** Quits: sn1tch3r (~sn1tch3r@185.153.176.56) (Ping timeout: 250 seconds)
[04:11:34] *** Quits: sn1tch3r_ (~sn1tch3r@185.153.176.54) (Remote host closed the connection)
[04:12:17] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[04:12:29] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:12:52] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:13:50] <gloin> How do I assign multiple multiple outputs to a single string? Like I can "print(foo.bar(), "stuff, bar.baz())" but how do I do roughly "bigstring = join(foo.bar(), "stuff", bar.baz())" instead of just printing the output?
[04:14:09] <BtbN> Just add them
[04:14:35] <gloin> BtbN: that's what I tried... can you explain what you mean by adding them?
[04:14:41] <BtbN> "a" + "b"
[04:15:17] <BtbN> The leftmost element actually has to be a string for that to work.
[04:15:21] <gloin> so replace comma with + and remove enclosing parens?
[04:15:31] <fluiD> anyone able to help me with Anaconda? I want to do serial port stuff but "import serial" imports the wrong package.
[04:15:44] <gloin> ach, what if I want the leftmost element to not be a string? Just maybe '' + foo.bar()... etc?
[04:16:06] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:16:10] <BtbN> That, or convert it to a string properly
[04:16:13] <nedbat> gloin: you can only add strings to strings. They all have to be strings for that to work
[04:16:15] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 276 seconds)
[04:16:38] <nedbat> gloin: an f-string might be best:  bigstring = f"{foo.bar()}stuff{bar.baz()}"
[04:16:39] *** Joins: cjb (~cjb@user/cjb)
[04:16:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:17:20] *** Joins: outsider1 (~sierkov@c91-231.i07-23.onvol.net)
[04:17:21] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[04:17:24] <rama> fluiD: have you checked the pythonpath?
[04:17:45] <rama> ive found my wrong import issues were due to the pythonpath being set incorrectly, or changing
[04:17:52] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Client Quit)
[04:18:08] <fluiD> i seem to have it working now but I don't know what I did differently.
[04:18:20] <fluiD> OK. Next question. How can I see what "import serial" gives me?
[04:18:35] <gloin> nedbat: the f-string works. Thanks!
[04:18:53] <nedbat> fluiD: print(serial)
[04:19:05] <nedbat> fluiD: and then:  help(serial)
[04:19:19] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[04:19:24] *** Joins: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at)
[04:19:33] *** Joins: sn1tch3r_ (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:19:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:19:38] *** Wulf4 is now known as Wulf
[04:19:44] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Read error: Connection reset by peer)
[04:19:47] <fluiD> print only gave me __init__.py, but help() worked. Thanks!
[04:20:08] *** sn1tch3r_ is now known as sn1tch3r
[04:21:07] *** Joins: p-i-_ (~Ohmu@node-fts.pool-101-109.dynamic.totinternet.net)
[04:21:38] *** Joins: finsternis (~X@23.226.237.192)
[04:22:39] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:22:43] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:24:03] *** Quits: p-i- (~Ohmu@node-120w.pool-118-173.dynamic.totinternet.net) (Ping timeout: 268 seconds)
[04:24:13] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:24:25] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[04:24:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:25:29] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[04:25:47] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[04:25:55] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[04:26:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:26:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:28:59] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[04:29:42] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[04:30:05] *** Joins: upsala (~zcb@185.213.155.160)
[04:31:07] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:32:35] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 255 seconds)
[04:33:20] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[04:33:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:33:56] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[04:34:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[04:35:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[04:36:41] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: harpia)
[04:37:58] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[04:44:37] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[04:46:43] <fluiD> I'm trying to plot some x,y data with matplotlib.pyplot.plot and the y axis labels are in a random order
[04:48:28] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:49:06] <fluiD> it looks like for every new Y value it just adds another tick and a label
[04:50:10] *** Quits: akk (~akk@75.161.155.222) (Quit: +++)
[04:51:12] <fluiD> this... really shouldn't be difficult
[04:51:17] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[04:51:30] *** Joins: gloin (~gloin@user/gloin)
[04:52:12] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[04:55:05] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[04:56:28] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[04:57:43] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[04:57:59] <gloin> argh
[04:58:39] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:59:01] <gloin> why is it so hard to run a system command in python and capture output? my $foo = `echo foo`; print $foo
[04:59:07] <gloin> argh
[05:00:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[05:00:48] <Repiphany> subprocess.check_output(['echo', 'foo'])
[05:01:18] <gloin> ah
[05:01:45] *** Joins: pizdets (~pizdets@183.182.115.135)
[05:01:47] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[05:02:22] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:02:35] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:02:39] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:02:47] <gloin> I had got as far as subprocess.run(["echo", "foo"], stdout=subprocess.PIPE) which was almost what I wanted
[05:03:15] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:03:22] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:03:32] <mat001> I'm struggling to cretae a virtual env with pipenv for pypy. Keeps asking for version and rejects any versin. What's the correct syntax?
[05:04:33] <Repiphany> `p = subprocess.run(['echo', 'foo'], capture_output = True); print(p.stdout)` also works
[05:04:38] <SnoopJ> gloin, I think you want the `capture_output` argument to run(), which makes the streams available on the resulting CompletedProcessObject. See the online doc, which is more complete: https://docs.python.org/3/library/subprocess.html#subprocess.run
[05:05:01] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:05:09] <gloin> SnoopJ: I thought as much also but capture_output is only 3.7 and later, and I've got 3.6 on these Centos7 boxes.
[05:05:55] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[05:07:12] <SnoopJ> Ah
[05:07:30] *** Joins: rany_ (~rany@user/rany)
[05:07:35] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:08:32] *** Joins: k0fein (~esmeralda@user/k0fein)
[05:08:41] <gloin> Repiphany: why is it prepending the output with b' and adding ' at the end?
[05:08:45] <SnoopJ> gloin, you should be able to pass `stdout=subprocess.PIPE` and then access it on the resulting instance
[05:08:51] <gloin> subprocess.check I mean
[05:08:56] <Repiphany> You're getting bytes, not a string
[05:09:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:09:37] <SnoopJ> (they are file streams, they define only reading/writing bytes as meaningful, the rest is semantics we put on top of that)
[05:10:20] <gloin> hm
[05:10:22] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[05:10:37] <gloin> still does it even when I wrap the subprocess.check_output command in str()
[05:10:54] <Repiphany> `subprocess.check_output(['echo', 'foo']).decode()` will give you a string
[05:10:59] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[05:11:07] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:11:18] <gloin> my $foo = `ls -l` # I'm going to miss the friendliness of this :(
[05:11:29] *** Joins: rany (~rany@user/rany)
[05:11:33] <SnoopJ> gloin, str(some_bytes_obj) gives you the repr() of that bytes object
[05:11:39] <gloin> I tried .strip()
[05:12:11] <gloin> alright, that works. thanks Repiphany
[05:12:34] <SnoopJ> gloin, the object you get is bytes, you need to decode it to text if you want to consider it as text. If this is a new concept to you, this is an excellent primer: https://nedbatchelder.com/text/unipain.html
[05:13:37] *** Joins: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[05:14:06] *** Joins: djapo (~archangel@user/djapo)
[05:15:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:17:02] *** Quits: rany (~rany@user/rany) (Ping timeout: 265 seconds)
[05:18:52] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[05:19:00] *** Joins: rany (~rany@user/rany)
[05:19:27] *** Quits: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[05:20:20] *** Joins: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at)
[05:20:34] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:21:22] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[05:21:52] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:22:32] *** Joins: rany_ (~rany@user/rany)
[05:22:44] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:25:17] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:25:53] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[05:26:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:27:31] <gry> how do i do interpolation on data like 'orig' here? https://i.imgur.com/eHD1AQZ.png i tried scipy.interpolate.splrep, but that's the 'spline' line, it's way too far off
[05:29:17] *** Joins: rany (~rany@user/rany)
[05:29:36] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 265 seconds)
[05:30:05] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:19] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:31:36] <SnoopJ> gry, what kind of interpolation do you want?
[05:32:06] <SnoopJ> (there are a lot of ways to interpolate data, so we need to figure out which properties you care about the most)
[05:32:37] *** Quits: fructose (~fructose@user/fructose) (Ping timeout: 245 seconds)
[05:32:48] <SnoopJ> since there's a piecewise linear interpolation on there, presumably you don't want that. Knowing why would help answer my question.
[05:33:40] <gry> SnoopJ: hi
[05:33:40] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Ping timeout: 272 seconds)
[05:33:44] <SnoopJ> hi
[05:33:46] <gry> SnoopJ: made an example testcase: https://dpaste.com/97YUW9RQ7.txt
[05:34:11] *** Joins: rany_ (~rany@user/rany)
[05:34:11] <gry> i'd like it to be similar to what linear does, but without discontinuities of the slope at the points themselves
[05:34:28] *** Joins: vlm (~vlm@user/vlm)
[05:34:45] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:34:46] <SnoopJ> so you want a continuous derivative? do you care about higher-order discontinuities (i.e. should the slope itself be continuous?)
[05:36:41] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:68a0:f76f:c20a:17b7) (Quit: Textual IRC Client: www.textualapp.com)
[05:37:02] *** Joins: pnoud (~pnoud@user/pnoud)
[05:37:49] *** Joins: dg_dg (~dg_dg@156.146.57.175)
[05:41:06] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 240 seconds)
[05:41:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[05:42:16] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:42:44] *** Joins: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f)
[05:43:11] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[05:43:21] *** Joins: upsala1 (~zcb@81.17.24.203)
[05:46:31] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 265 seconds)
[05:48:31] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[05:48:55] *** Joins: rany (~rany@user/rany)
[05:50:15] *** Quits: cman (~Cody@2603:9000:d104:8465:3135:272:bd89:274e) (Ping timeout: 250 seconds)
[05:50:16] *** Joins: califax- (~califax@user/califx)
[05:50:29] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[05:51:09] <sgt_chuckles> im on linux, i have python 3.9 installed, but when I enter python --version in my terminal I get Python 2.7.18
[05:51:13] *** Joins: cman (~Cody@2603:9000:d104:8465:59c1:7564:f6c0:e626)
[05:51:20] <nedbat> sgt_chuckles: try python3
[05:51:33] <gry> SnoopJ: just continuous derivative is ok
[05:51:53] <sgt_chuckles> nedbat: that shows 3.9.5 but how can I get python to show that
[05:51:55] <gry> SnoopJ: i'm doing it because linear interpolation appears to cause some instability later in my remaining algorithm
[05:51:59] *** Joins: orbatos (~orbatos@user/orbatos)
[05:52:08] <gry> SnoopJ: sorry about the delay, my computer crashed
[05:52:09] <nedbat> sgt_chuckles: make a virtualenv, or accept "python3"
[05:52:35] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:52:36] *** califax- is now known as califax
[05:52:37] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:53:36] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[05:53:36] *** brabrax_ is now known as brabrax
[05:54:12] *** syntaxman is now known as syntaxman_
[05:54:47] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[05:54:51] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[05:55:33] *** humberto1 is now known as humbertowoody
[05:55:40] <SnoopJ> gry, do you maybe use the derivative of the interpolation later? You may want to use `scipy.interpolate.UnivariateSpline`, the default value of k (=3) is a good next choice of interpolant.
[05:55:47] *** Joins: rany_ (~rany@user/rany)
[05:55:59] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[05:56:14] <SnoopJ> But if you're computing the derivative from this interpolation, you would probably be better off without the intermediate step, which is why I ask.
[05:56:15] *** Joins: Sadale (~Sadale@user/sadale)
[05:57:42] <gry> Well, after interpolation, it becomes argument to another function. Of that I will take first and second derivatives. So the smoother this interpolation is, the better
[05:58:03] <SnoopJ> Ideally you wouldn't interpolate at all, you'd use a suitable numerical derivative
[05:58:33] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[05:59:58] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:00:17] <gry> it will need to know the data for any X in the range, not only where the data points are
[06:00:29] *** Joins: rany (~rany@user/rany)
[06:00:45] <SnoopJ> of course
[06:02:22] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:03:16] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[06:03:17] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:34] *** Joins: pagnol (~user@014198154145.ctinets.com)
[06:04:18] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:04:42] *** Joins: rany (~rany@user/rany)
[06:05:35] *** Quits: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:f8c5:ecee:9897:17f7) (Ping timeout: 252 seconds)
[06:06:13] <SnoopJ> Surprisingly, numpy/scipy don't have a pre-built thing for doing this, but a good choice is the five-point stencil, explained here (the formula in question is D₄): http://th.if.uj.edu.pl/~trom/Finance/Lecture_04.html#Accuracy
[06:06:39] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:52] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[06:07:52] *** Quits: emika (~emika@185.207.249.143) (Ping timeout: 258 seconds)
[06:08:15] *** Joins: emika (~emika@83.136.182.23)
[06:08:24] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:08:44] *** Joins: mickey (~user@user/mickey)
[06:08:59] *** Joins: rany_ (~rany@user/rany)
[06:09:12] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:09:23] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[06:11:22] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[06:11:57] *** Joins: MercilessDeth (~brad@136.49.61.2)
[06:13:13] *** Quits: hposca (~hposca@node-1w7jr9phoke2t9sajlv8zcl7c.ipv6.telus.net) (Remote host closed the connection)
[06:13:31] *** Joins: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net)
[06:13:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:14:47] *** Joins: foozle (~foozle@218-161-104-228.HINET-IP.hinet.net)
[06:15:30] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[06:16:09] *** Joins: rany (~rany@user/rany)
[06:16:11] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:16:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e)
[06:18:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:cc6b:e958:ede8:e051) (Quit: Client closed)
[06:19:23] *** Quits: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[06:19:37] *** Joins: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at)
[06:19:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[06:22:03] <SnoopJ> Can't recall if it ends up being ~the same as a piecewise polynomial fit after you interpolate the resulting derivatives over your grid. Numerics gets complicated fast, but my intuition tells me that fitting first is usually leaving accuracy in the derivative on the table
[06:22:19] *** Joins: rany_ (~rany@user/rany)
[06:22:47] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:25:32] *** Quits: adinfinitum (~adinfinit@2600:6c40:653f:5f00:a650:d8d7:fe0b:8c1f) (Quit: WeeChat 3.2)
[06:26:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:26:07] *** Quits: hposca (~hposca@node-1w7jr9phoke2t3ov4z0ok1wpo.ipv6.telus.net) (Remote host closed the connection)
[06:26:16] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:26:25] *** Joins: Kvothe (~weechat@user/elodin)
[06:26:48] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:27:11] *** Joins: rany (~rany@user/rany)
[06:27:48] * SnoopJ might be overthinking it, piecewise cubic is probably fine
[06:30:01] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[06:30:07] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:30:09] *** Joins: Elodin_ (~weechat@user/elodin)
[06:30:59] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[06:31:12] *** Joins: Elodin (~weechat@user/elodin)
[06:31:16] *** Joins: bongobrown (~omary@cpe-76-185-215-2.satx.res.rr.com)
[06:31:17] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:31:28] *** Joins: rany_ (~rany@user/rany)
[06:32:03] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb) (Quit: WeeChat 3.2)
[06:32:05] *** Joins: Elodin__ (~weechat@user/elodin)
[06:32:29] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb)
[06:32:48] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 256 seconds)
[06:32:56] *** Joins: Elodin___ (~weechat@user/elodin)
[06:33:19] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:33:41] *** Joins: rany (~rany@user/rany)
[06:34:28] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[06:35:04] *** Quits: Elodin_ (~weechat@user/elodin) (Ping timeout: 256 seconds)
[06:35:51] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 258 seconds)
[06:36:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 276 seconds)
[06:36:57] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[06:37:18] *** Quits: Elodin__ (~weechat@user/elodin) (Ping timeout: 276 seconds)
[06:37:33] *** Joins: upsala2 (~zcb@185.213.155.160)
[06:39:04] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[06:39:20] *** Joins: Elodin (~weechat@user/elodin)
[06:40:10] *** Joins: Kvothe (~weechat@user/elodin)
[06:40:31] *** Quits: upsala1 (~zcb@81.17.24.203) (Ping timeout: 250 seconds)
[06:40:33] *** Quits: Elodin___ (~weechat@user/elodin) (Ping timeout: 276 seconds)
[06:41:03] *** Quits: foozle (~foozle@218-161-104-228.HINET-IP.hinet.net) (Quit: Leaving)
[06:41:09] *** Joins: pnoud (~pnoud@user/pnoud)
[06:41:12] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[06:43:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:44:27] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 276 seconds)
[06:45:33] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:46:13] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[06:46:28] *** Joins: rany (~rany@user/rany)
[06:49:38] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:50:18] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[06:51:05] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[06:51:55] *** Joins: rany_ (~rany@user/rany)
[06:52:49] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[06:52:59] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 255 seconds)
[06:53:16] *** Joins: Umeaboy (~Umeaboy_8@94-255-145-133.cust.bredband2.com)
[06:54:19] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[06:54:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:54:50] <Umeaboy> Hi! I'm working on building my first gui and I have a problem at line 6......
[06:54:51] <Umeaboy> https://bpa.st/SA6Q
[06:55:06] *** Quits: Chex (~Chex@user/chex) (Ping timeout: 240 seconds)
[06:55:19] *** Joins: dbg (~dbg@user/dbg)
[06:56:00] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[06:56:15] <Umeaboy> I'd appreciate on how to fix it.
[06:56:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:56:49] <Umeaboy> Sorry. Missed a "help" in that sentence. :)
[06:56:54] *** Joins: rany (~rany@user/rany)
[06:57:24] *** Joins: Elodin_ (~weechat@user/elodin)
[06:57:33] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[06:57:41] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[06:58:28] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 258 seconds)
[06:59:14] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 258 seconds)
[06:59:55] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[06:59:55] *** finn_elija is now known as FinnElija
[07:00:58] *** Joins: jiffe (~jiffe@mail.nsab.us)
[07:01:10] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:01:46] *** Joins: Elodin (~weechat@user/elodin)
[07:02:15] *** Joins: rany_ (~rany@user/rany)
[07:02:55] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:03:42] *** syntaxman_ is now known as syntaxman
[07:04:34] *** Quits: Elodin_ (~weechat@user/elodin) (Ping timeout: 240 seconds)
[07:05:43] *** syntaxman is now known as syntaxma1
[07:06:10] *** syntaxma1 is now known as syntaxman
[07:06:16] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[07:06:58] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[07:07:17] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 258 seconds)
[07:09:02] *** Joins: rany (~rany@user/rany)
[07:09:49] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[07:12:03] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[07:13:17] <SnoopJ> Umeaboy, what is the problem you're having? Your code appears to work on my machine.
[07:14:13] *** Joins: vicfred (~vicfred@user/vicfred)
[07:14:34] *** Quits: jcalla (~jcallaha@cpe-75-189-211-206.nc.res.rr.com) (Ping timeout: 258 seconds)
[07:14:39] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[07:14:46] <Umeaboy> SnoopJ: Sorry. I see that now. Nevermind.
[07:14:56] <Umeaboy> Excuse me for taking your time.
[07:15:22] <SnoopJ> Umeaboy, the shebang on the first line is weird, though. It should probably be `#!/usr/bin/env python3` instead (but you can just leave it off if you're not running the file directly with a shell)
[07:15:46] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[07:15:51] *** Joins: rany_ (~rany@user/rany)
[07:16:16] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[07:16:22] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[07:16:39] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 252 seconds)
[07:17:12] <Umeaboy> SnoopJ: Case solved.
[07:17:14] <Umeaboy> :)
[07:17:47] <Umeaboy> I plan to build an executable binary in the end.
[07:18:51] *** Quits: y1n (~y1n@84-115-64-18.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[07:19:12] *** Joins: y1n (~y1n@84-115-65-197.wifi.dynamic.surfer.at)
[07:23:01] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[07:23:11] *** Joins: rany (~rany@user/rany)
[07:26:50] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:28:00] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[07:28:13] *** Joins: rany (~rany@user/rany)
[07:28:15] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:30:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:30:49] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[07:31:23] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[07:32:22] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[07:34:19] *** Joins: baltazaar (~baltazar@fibhost-66-141-162.fibernet.hu)
[07:35:36] *** Joins: rany_ (~rany@user/rany)
[07:35:42] *** Quits: rany (~rany@user/rany) (Ping timeout: 256 seconds)
[07:35:54] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[07:35:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[07:36:51] *** Quits: baltazar (~baltazar@178-164-240-29.pool.digikabel.hu) (Ping timeout: 250 seconds)
[07:38:46] *** Joins: cjb (~cjb@user/cjb)
[07:39:16] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:39:29] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[07:41:15] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:42:44] *** Joins: rany (~rany@user/rany)
[07:43:37] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[07:44:05] *** Quits: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 258 seconds)
[07:44:09] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[07:44:56] *** Quits: zenloading (~zenloadin@user/zenloading) (Quit: Leaving)
[07:46:31] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:46:42] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Client Quit)
[07:46:43] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:50:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 265 seconds)
[07:52:23] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:52:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:53:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:54:39] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[07:55:04] *** Joins: pnoud (~pnoud@user/pnoud)
[07:55:18] *** Joins: rany (~rany@user/rany)
[07:56:52] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[07:59:21] *** Joins: rany_ (~rany@user/rany)
[07:59:23] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[08:00:22] *** Joins: Fiji (~Fiji@user/fiji)
[08:00:42] *** Joins: summersault (~summersau@179.221.251.16)
[08:00:43] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[08:02:00] *** Joins: Socra (~Socra@206.217.216.27)
[08:02:31] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:441c:804b:bc41:65d6) (Read error: Connection reset by peer)
[08:02:40] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:02:40] *** __jmcantrell__ is now known as jmcantrell
[08:03:50] *** Quits: {HD} (~{HD}@102.165.16.92) (Ping timeout: 252 seconds)
[08:04:24] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[08:05:27] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[08:05:32] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-19f6-df01-1020-b51e.res6.spectrum.com)
[08:05:49] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[08:06:28] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[08:08:08] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[08:08:12] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[08:08:14] *** Joins: rany (~rany@user/rany)
[08:09:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:10:25] *** Joins: {HD} (~{HD}@37.19.197.201)
[08:11:02] *** Joins: gggp (~gggp@60.10.194.43)
[08:11:23] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[08:11:30] *** Joins: rany_ (~rany@user/rany)
[08:11:45] *** Quits: upsala2 (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[08:12:51] *** Quits: jochum (~jochum@user/jochum) (Ping timeout: 276 seconds)
[08:13:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[08:13:34] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[08:14:10] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:14:25] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Remote host closed the connection)
[08:15:18] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[08:16:12] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[08:16:14] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[08:16:40] *** Quits: moto (~moto@user/moto) (Ping timeout: 258 seconds)
[08:17:22] *** Joins: rany (~rany@user/rany)
[08:17:48] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[08:18:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:19:20] *** Quits: y1n (~y1n@84-115-65-197.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[08:20:08] *** Joins: y1n (~y1n@84-115-65-197.wifi.dynamic.surfer.at)
[08:21:41] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:22:15] *** Quits: dermato (~dermatobr@154.21.114.128) (Quit: WeeChat 3.1)
[08:22:36] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[08:23:16] *** Joins: moto (~moto@user/moto)
[08:25:50] *** Quits: rany (~rany@user/rany) (Ping timeout: 252 seconds)
[08:26:43] *** Joins: rany (~rany@user/rany)
[08:27:37] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:28:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[08:30:16] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[08:31:37] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 258 seconds)
[08:32:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:32:22] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[08:35:07] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[08:35:40] <perrierjouet> hi all
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:32] <perrierjouet> what is the safest way to uinstall sudo pip installed packages ?
[08:37:47] <perrierjouet> is this safe sudo pip freeze | xargs pip uninstall -y ?
[08:39:49] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[08:49:42] <domhnall> sudo with pip? why not --user flag?
[08:50:18] <SnoopJ> perrierjouet, that is probably the opposite of safe: it will remove *all* packages so-installed.
[08:51:00] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:54:10] *** Quits: Umeaboy (~Umeaboy_8@94-255-145-133.cust.bredband2.com) (Quit: Leaving)
[08:56:17] <SnoopJ> `pip show` will tell the other packages that are `Required-by` one you're looking at, you may want to have a look at that if you're trying to remove all packages that have only the things to be uninstalled as dependencies. I don't think there's any way to get pip to do that itself.
[08:57:06] *** Quits: rany (~rany@user/rany) (Ping timeout: 240 seconds)
[08:59:11] <perrierjouet> SnoopJ: how can I reverty my mess ? I have sudo pip freeze > reqs.txt
[08:59:21] <SnoopJ> perrierjouet, are you using Ubuntu/Debian?
[09:00:24] <perrierjouet> and I did sudo pip uninstall -y -r reqs.txt but got warning apparmor is from distutils etc
[09:00:29] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[09:00:34] <perrierjouet> archlinux
[09:02:07] *** Joins: djapo (~archangel@user/djapo)
[09:02:36] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:02:38] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[09:04:47] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Remote host closed the connection)
[09:04:53] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[09:04:58] *** Joins: rany (~rany@user/rany)
[09:05:03] *** Joins: derelict_ (~derelict@user/derelict)
[09:06:17] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[09:07:15] *** Joins: pnoud (~pnoud@user/pnoud)
[09:07:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:08:04] *** Quits: y1n (~y1n@84-115-65-197.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[09:10:28] <SnoopJ> well, any damage it would do is probably done, then. That command just removes everything installed in the site.
[09:10:54] <SnoopJ> You might want to consider reinstalling your distribution's Python package and maybe any packages that depend on it.
[09:11:32] *** Quits: gggp (~gggp@60.10.194.43) (Remote host closed the connection)
[09:11:56] *** Joins: stevieh (~skrodzki@tmo-098-124.customers.d1-online.com)
[09:12:01] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[09:13:21] *** Joins: kdc (~kdc@196.211.197.189)
[09:13:21] <perrierjouet> SnoopJ: I try to do that I get this http://ix.io/3uh9
[09:13:27] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:13:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[09:14:11] <perrierjouet> SnoopJ: the package I tried to remove are here http://ix.io/3uha
[09:14:29] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.0)
[09:14:55] <perrierjouet> is there a way to install from the file reqs.txt ?
[09:15:01] <perrierjouet> I followed this help https://stackoverflow.com/questions/11248073/what-is-the-easiest-way-to-remove-all-packages-installed-by-pip
[09:15:46] <perrierjouet> steps before disaster 1) sudo pip freeze > reqs.txt 2) sudo pip uninstall -y -r reqs.txt
[09:16:07] <SnoopJ> perrierjouet, you have damaged your system Python. At this point, you want to reinstall that. I don't know what the Arch spelling for that is.
[09:16:26] <perrierjouet> remove python ?
[09:17:01] <SnoopJ> Probably there's a way to ask pacman to _reinstall_ it without first removing it (which will probably do even more damage to your system)
[09:18:40] <perrierjouet> I reinstalled python
[09:18:43] <perrierjouet> it worked
[09:19:09] <SnoopJ> Best not to use sudo with pip for this reason
[09:20:21] <perrierjouet> if I delete /sur/lib/python3.9/* and reinstall will it work ?
[09:20:36] <perrierjouet> because now pip does not work
[09:22:21] *** Joins: greenx_ (~greenx@user/greenx)
[09:23:03] <SnoopJ> perrierjouet, if you /join #archlinux and ask them how to reinstall Python, they will be able to give you more specific help than I can. I don't recommend trying any more guess commands, the odds are good you'll do more damage.
[09:23:18] <SnoopJ> (I would *not* recommend doing the deletion you just described)
[09:26:57] *** Quits: hafat (~hafat@95.70.168.45) (Ping timeout: 276 seconds)
[09:27:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:27:37] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c475-4d50-14a5-d62d.res6.spectrum.com)
[09:28:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:28:52] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:05] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-19f6-df01-1020-b51e.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:29:48] *** Joins: slav0nic (slav0nic@python.su)
[09:29:54] *** Quits: stevieh (~skrodzki@tmo-098-124.customers.d1-online.com) (Ping timeout: 240 seconds)
[09:30:13] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f)
[09:30:57] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[09:31:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[09:33:12] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[09:33:19] <djapo> Hello, how do I check that at least one value in a list does not equal an empty string ?
[09:33:30] <KirkMcDonald> djapo: any(L)
[09:33:52] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[09:34:00] *** Quits: kmh (~kmh@p200300df5f3d23000955d7f071ccacf7.dip0.t-ipconnect.de) (Quit: Leaving)
[09:34:18] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[09:34:18] *** Joins: dvx (~dvx@185.63.97.64)
[09:34:22] <djapo> ah yes. any([i !== '' for i in ll])
[09:34:49] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:37:37] *** Quits: BillyZane (~BillyZane@91.196.220.173) (Ping timeout: 245 seconds)
[09:38:18] <KirkMcDonald> Don't even need those brackets.
[09:38:26] <KirkMcDonald> Also, !=, not !==
[09:38:49] *** Joins: BillyZane (~BillyZane@152.89.204.250)
[09:38:51] <KirkMcDonald> But, assuming it's known to be a list of strings, you can just `any(ll)`, because empty strings are false, and non-empty strings are true.
[09:38:52] <SnoopJ> the brackets are actively harmful, even: they prevent any() from early-exiting when it finds a True case
[09:39:34] <KirkMcDonald> But if there are things in there which aren't strings, and you explicitly do mean to just check for empty strings, then you'd need that comprehension or something like it.
[09:39:47] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[09:40:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:40:56] *** Quits: Melantha (~pyon@user/pyon) (Ping timeout: 256 seconds)
[09:41:30] *** Quits: audiocat (~audio@2603-8081-1800-00ad-7777-ea44-55cb-9a16.res6.spectrum.com) (Ping timeout: 256 seconds)
[09:42:42] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[09:42:43] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:43:59] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[09:45:21] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:47:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[09:48:23] *** Joins: CombatVet (~c4@user/combatvet)
[09:49:36] *** Joins: sandeepk (~sandeepk@223.130.30.103)
[09:52:35] *** Joins: simplicity (~yti@user/simplicity)
[09:52:45] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:53:30] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 265 seconds)
[09:54:48] *** Quits: sandeepk (~sandeepk@223.130.30.103) (Ping timeout: 258 seconds)
[09:58:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[10:01:01] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[10:01:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[10:02:25] *** Joins: kosh (~kosh@user/kosh)
[10:03:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:04:41] *** Joins: upsala (~zcb@185.213.155.160)
[10:04:56] *** Joins: Chex (~Chex@user/chex)
[10:06:14] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[10:06:22] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Write error: Broken pipe)
[10:06:33] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[10:07:16] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[10:10:04] *** Joins: sandeepk (~sandeepk@223.130.30.125)
[10:10:32] *** Quits: VimVim (~VimVim@85.191.62.30) (Ping timeout: 255 seconds)
[10:10:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[10:11:10] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[10:11:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[10:11:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:12:19] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[10:14:51] *** Quits: greenx_ (~greenx@user/greenx) (Quit: greenx_)
[10:16:08] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 272 seconds)
[10:17:59] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[10:21:15] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[10:25:21] *** Parts: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) ()
[10:26:21] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:26:51] *** vinleod is now known as vdamewood
[10:28:52] *** Joins: djapo (~archangel@user/djapo)
[10:29:10] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:30:29] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[10:30:35] <perrierjouet> please help pip list gives this error http://ix.io/3uhq
[10:30:44] *** Quits: zbr (~zbr@h.sbarnea.com) (Quit: The Lounge - https://thelounge.chat)
[10:30:48] *** Joins: palasso (~palasso@user/palasso)
[10:33:31] *** Quits: emika (~emika@83.136.182.23) (Ping timeout: 258 seconds)
[10:33:56] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 255 seconds)
[10:34:06] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 265 seconds)
[10:34:09] *** Joins: emika (~emika@185.207.249.219)
[10:34:43] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[10:35:22] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 240 seconds)
[10:35:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:35:51] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[10:36:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[10:37:19] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[10:38:05] <BrenBarn> I see this: https://stackoverflow.com/questions/49478573/pip3-install-not-working-no-module-named-pip-vendor-pkg-resources
[10:38:06] <BrenBarn> seems like pip got messed up somehow
[10:38:23] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:38:29] <BrenBarn> not exactly the same error but similar
[10:38:31] <SnoopJ> perrierjouet, did you ask #archlinux yet?
[10:38:38] <SnoopJ> You need to reinstall your system's Python.
[10:39:09] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[10:39:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:40:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:551b:9284:450d:c33e) (Quit: Leaving)
[10:41:49] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[10:45:55] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:26] *** Joins: seednode (~seednode@user/seednode)
[10:46:31] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[10:48:15] *** Joins: tijuco (~tijuco@user/tijuco)
[10:48:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[10:49:01] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-c475-4d50-14a5-d62d.res6.spectrum.com) (Quit: jarthur_)
[10:49:39] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:50:17] *** Quits: tijuco (~tijuco@user/tijuco) (Client Quit)
[10:50:29] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[10:53:03] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[10:53:57] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[10:54:25] *** Joins: pnoud (~pnoud@user/pnoud)
[10:56:13] *** Joins: c10l (~c10l@89.34.167.207)
[10:57:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:58:55] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:00:01] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[11:00:26] *** Joins: rememberYou (~someone@user/rememberyou)
[11:00:39] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[11:00:57] <djapo> how can I check that a dictionary values are not None or ''
[11:00:58] <djapo> ?
[11:00:59] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[11:01:10] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[11:01:25] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[11:01:26] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:01:33] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[11:01:41] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[11:01:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[11:02:05] <Obo> A specific one, all of them, or any of them?
[11:02:08] <Wulf> djapo: if it's None or str: if x["foo"]:
[11:02:10] *** Quits: tone0 (~tone@071-011-252-111.res.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[11:02:40] *** Joins: tone0 (~tone@071-011-252-111.res.spectrum.com)
[11:02:53] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[11:03:33] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[11:04:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[11:04:35] *** Joins: stevieh (~skrodzki@185.109.153.2)
[11:04:43] *** Joins: greedom (~greedom@2001:16b8:2e11:1e00:e911:5e70:13b3:435d)
[11:05:05] <djapo> I want to check that at least one value is not '' or None
[11:05:24] <Wulf> if any(x.values()):
[11:05:25] *** Joins: zbr (~zbr@h.sbarnea.com)
[11:06:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[11:06:02] <djapo> thanks
[11:06:16] <Wulf> djapo: if your dict has values like 0 or False, those won't match either.
[11:09:23] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[11:10:42] *** Joins: emerent_ (~quassel@p200300cd57058c09ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:10:42] *** emerent is now known as Guest5054
[11:10:42] *** Quits: Guest5054 (~quassel@p200300cd57058cc0ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (silver.libera.chat (Nickname regained by services)))
[11:10:42] *** emerent_ is now known as emerent
[11:12:29] *** Quits: greedom (~greedom@2001:16b8:2e11:1e00:e911:5e70:13b3:435d) (Ping timeout: 252 seconds)
[11:12:39] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 250 seconds)
[11:12:54] *** Quits: stevieh (~skrodzki@185.109.153.2) (Ping timeout: 268 seconds)
[11:12:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[11:13:05] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[11:13:08] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[11:14:09] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[11:17:05] *** Joins: BlickleTree (~ndean@pool-72-94-87-37.phlapa.fios.verizon.net)
[11:19:01] *** Joins: gusto (~Augustus@109.255.100.54)
[11:22:03] *** Joins: chele (~chele@user/chele)
[11:22:50] *** Joins: inom (~inom@176.59.103.126)
[11:23:41] *** Joins: manti7 (~manti7@176.10.104.94)
[11:24:57] *** Joins: pnoud (~pnoud@user/pnoud)
[11:26:51] *** Joins: stevieh (~skrodzki@2a01:598:89f4:66d1:647b:f3f9:7e4e:7368)
[11:27:01] <genewitch> with hashlib.sha256 i get the same result as sha256sum, but if i use the hashlib update(string.encode('utf-8')) method, how do i accomplish the same thing with the raw file so whatever i appended with hashlib's update() has the same sha256sum?
[11:27:42] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:28:04] <genewitch> i'm running the program like: echo "foo" | python sha256pad.py, python prints that input as b'foo\n'
[11:28:10] *** Quits: Brion (~Brion@gateway/tor-sasl/brion) (Remote host closed the connection)
[11:28:29] *** Joins: Brion (~Brion@gateway/tor-sasl/brion)
[11:29:52] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[11:29:58] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:30:19] *** Parts: inom (~inom@176.59.103.126) ()
[11:30:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[11:30:49] <habnabit_> genewitch, i'm having a hard time following.. you mean you want to do a length extension attack?
[11:31:00] *** Joins: andika (~Andika@subs46-116-206-42-79.three.co.id)
[11:31:28] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[11:31:31] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:32:16] *** Joins: sudorm (~sudorm@lfbn-orl-1-1760-187.w90-107.abo.wanadoo.fr)
[11:33:00] <Wulf> genewitch: are you looking for .digest()?
[11:33:09] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (Quit: < debdrup> What is this /quit thing?)
[11:34:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[11:35:22] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[11:36:35] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[11:36:55] *** Quits: OnlineCop (~OnlineCop@user/onlinecop) (Ping timeout: 250 seconds)
[11:37:19] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[11:37:37] *** Quits: stevieh (~skrodzki@2a01:598:89f4:66d1:647b:f3f9:7e4e:7368) (Ping timeout: 245 seconds)
[11:38:14] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[11:38:20] *** Joins: driib (~driib@185.195.233.169)
[11:39:50] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[11:39:55] *** Joins: cedric (~cedric@2a01:cb11:867:c200:aaf3:64f9:e2a5:8571)
[11:41:30] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:41:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.0)
[11:43:36] <genewitch> I figured it out - i needed to append "\n" before using update()
[11:43:56] <genewitch> now the hashlib.sha256 and sha256sum agree
[11:45:01] <genewitch> habnabit_: no i'm just making a toy "pad file so the sha256sum has an arbitrary number of '0' at the beginning"
[11:45:19] <genewitch> and it works now
[11:46:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:49:13] *** Joins: inom (~inom@176.59.103.126)
[11:50:18] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[11:50:38] *** Joins: pnoud (~pnoud@user/pnoud)
[11:50:40] *** Joins: stevieh (~skrodzki@tmo-098-124.customers.d1-online.com)
[11:55:47] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[11:57:31] *** Joins: Elzington (~Elzington@68.235.43.12)
[11:59:46] *** Quits: Elzington_ (~Elzington@68.235.43.141) (Ping timeout: 258 seconds)
[12:01:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:02:07] *** Joins: gggp (~gggp@60.10.194.43)
[12:02:21] <gggp> is bytearray a package operating bytes?
[12:02:35] <habnabit_> gggp, no, it's a builtin type
[12:03:12] <gggp> bytes module is also builtin ?
[12:03:24] <habnabit_> gggp, bytes is also a builtin type, not a module
[12:03:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:03:49] <gggp> there is bytes, why need bytearray
[12:03:57] <habnabit_> gggp, bytearray is mutable
[12:04:49] <gggp> bytes cannot modify its values?
[12:05:23] <habnabit_> gggp, bytes is immutable yes
[12:06:03] <gggp> why immutable ? what is the reason
[12:06:09] *** Quits: inom (~inom@176.59.103.126) (Quit: Leaving.)
[12:06:17] <gggp> read locked?
[12:06:24] *** Joins: inom (~inom@176.59.103.126)
[12:08:54] *** Quits: inom (~inom@176.59.103.126) (Client Quit)
[12:08:58] <supakeen> Because immutable is the simple default.
[12:09:09] *** Quits: andika (~Andika@subs46-116-206-42-79.three.co.id) (Read error: Connection reset by peer)
[12:09:12] *** Joins: inom (~inom@176.59.103.126)
[12:09:13] <supakeen> A mutable object immediately has shared state.
[12:09:30] *** Joins: andika (~Andika@subs43-116-206-39-71.three.co.id)
[12:09:51] *** Joins: entuland (~entuland@user/entuland)
[12:12:26] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[12:13:31] *** Joins: layerex (~layerex@213.87.158.36)
[12:14:01] <KirkMcDonald> Because dict keys and set elements must be immutable.
[12:14:35] *** kai6 is now known as kai
[12:15:18] *** Quits: stevieh (~skrodzki@tmo-098-124.customers.d1-online.com) (Ping timeout: 276 seconds)
[12:17:15] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:17:50] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[12:17:54] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 240 seconds)
[12:18:27] <whatsupdoc> list1 = [1,2,3,4]; list2 = list1;  list1.clear(); print(list2)
[12:18:36] <whatsupdoc> thoughts?
[12:18:55] *** Quits: inom (~inom@176.59.103.126) (Quit: Leaving.)
[12:18:57] <KirkMcDonald> whatsupdoc: Both names refer to the same object.
[12:19:09] *** Joins: inom (~inom@176.59.103.126)
[12:19:15] *** Joins: VimVim (~VimVim@85.191.89.249)
[12:19:17] <whatsupdoc> so it's a reference not an actual copy?
[12:19:17] *** Quits: andika (~Andika@subs43-116-206-39-71.three.co.id) (Quit: Leaving)
[12:19:35] <gggp> yeah
[12:19:37] *** Joins: andika (~Andika@subs43-116-206-39-71.three.co.id)
[12:19:58] <KirkMcDonald> If you want a copy, then make a copy: list2 = list1[:]
[12:20:27] <whatsupdoc> that performs a deep copy?
[12:20:34] <KirkMcDonald> No.
[12:20:45] <KirkMcDonald> It makes a shallow copy.
[12:20:55] *** Quits: d3vyL (d3vyL@host-95-252-236-168.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[12:21:37] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:21:57] *** Quits: andika (~Andika@subs43-116-206-39-71.three.co.id) (Remote host closed the connection)
[12:22:23] <whatsupdoc> so what's the difference between list2 = list1[:] and list2 = list1?
[12:22:31] *** Joins: andika (~Andika@subs43-116-206-39-71.three.co.id)
[12:22:40] *** Quits: daddy (~ryan@hashbang/bdfl) (Read error: Connection reset by peer)
[12:22:43] <KirkMcDonald> whatsupdoc: The former makes a copy. The latter assigns the existing object to a new name.
[12:22:54] <Repiphany> list1[:] is a new list object which points to the same objects that were in list1
[12:22:54] *** Joins: zzy2357 (~zzy2357@240e:3b7:3270:e5a0:2d04:43a5:4f57:f8ce)
[12:23:23] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:23:36] <whatsupdoc> doesn't seem to work unfortunately
[12:23:55] *** Joins: stevieh (~skrodzki@2a01:598:89f0:20df:e8e0:c17d:db42:d48a)
[12:24:00] <KirkMcDonald> whatsupdoc: In what way does it fail?
[12:24:02] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[12:24:11] <KirkMcDonald> whatsupdoc: Truthfully, the change I would recommend is not making the copy, but doing `list1 = []` instead of `list1.clear()`
[12:24:11] <whatsupdoc> when i clear, it also clears my copy
[12:24:18] <KirkMcDonald> whatsupdoc: Show us.
[12:24:34] *** Joins: daddy (~ryan@hashbang/bdfl)
[12:26:21] *** Quits: sarna (~sarna@c40-227.icpnet.pl) (Ping timeout: 276 seconds)
[12:26:26] *** Joins: rendar (~rendar@user/rendar)
[12:26:29] <Repiphany> https://bpa.st/QFZA
[12:26:39] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[12:27:27] <whatsupdoc> https://dpaste.com/799WWJSC8
[12:28:18] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[12:29:17] <KirkMcDonald> whatsupdoc: Hmm.
[12:29:27] <whatsupdoc> https://leetcode.com/problems/binary-tree-inorder-traversal/
[12:29:58] <KirkMcDonald> whatsupdoc: This method returns a value, but the recursive calls to the method do not use that return value.
[12:30:11] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[12:30:24] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:30:43] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:31:19] <whatsupdoc> this sort of works https://dpaste.com/9PFYNZKH9
[12:31:25] <whatsupdoc> unless you run multiple examples
[12:31:40] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[12:32:07] *** Quits: andika (~Andika@subs43-116-206-39-71.three.co.id) (Read error: Connection reset by peer)
[12:32:44] <KirkMcDonald> whatsupdoc: I would expect that you don't want to use a class attribute for this.
[12:33:12] *** Joins: Gerula (~Gerula@user/gerula)
[12:33:17] <whatsupdoc> wrap it in a function is what i'm thinking but i hate that
[12:33:47] <KirkMcDonald> I'm not certain what you mean by that, but you should just be able to use local variables.
[12:34:30] *** Joins: andika (~Andika@subs43-116-206-39-71.three.co.id)
[12:34:43] <whatsupdoc> static variable
[12:35:09] <KirkMcDonald> Not necessary.
[12:35:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[12:35:54] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 265 seconds)
[12:36:02] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[12:36:16] <whatsupdoc> how do you declare a static variable in python anyway
[12:36:37] <jinsun> whatsupdoc: no need of static variable or class variable, just return self.inorderTraversal(root.left) + [root.val] + self.inorderTraversal(root.right) and before that do a base check if root is None: return []
[12:37:39] *** Joins: andikadinata (~Andika@subs43-116-206-39-74.three.co.id)
[12:38:16] *** Quits: andikadinata (~Andika@subs43-116-206-39-74.three.co.id) (Remote host closed the connection)
[12:38:18] *** Quits: layerex (~layerex@213.87.158.36) (Quit: Leaving)
[12:38:36] *** Joins: andikadinata (~Andika@subs43-116-206-39-74.three.co.id)
[12:38:54] *** Joins: sarna (~sarna@c40-227.icpnet.pl)
[12:39:51] *** Quits: andikadinata (~Andika@subs43-116-206-39-74.three.co.id) (Remote host closed the connection)
[12:40:18] *** Quits: andika (~Andika@subs43-116-206-39-71.three.co.id) (Ping timeout: 240 seconds)
[12:40:19] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:40:25] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[12:40:26] *** Joins: andika (~Andika@subs43-116-206-39-74.three.co.id)
[12:40:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 250 seconds)
[12:41:44] *** Quits: andika (~Andika@subs43-116-206-39-74.three.co.id) (Remote host closed the connection)
[12:41:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 276 seconds)
[12:42:06] *** Joins: andika (~Andika@subs43-116-206-39-74.three.co.id)
[12:42:56] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[12:43:05] <KirkMcDonald> Python does not have static variables as such. Module-level variables are the nearest thing, though sometimes you'll see people use attributes of the function object.
[12:43:12] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:43:21] *** Quits: zzy2357 (~zzy2357@240e:3b7:3270:e5a0:2d04:43a5:4f57:f8ce) (Quit: Leaving)
[12:43:30] <KirkMcDonald> But really, better to not use global state in the first place.
[12:45:36] <whatsupdoc> https://dpaste.com/CEUN8MWC9
[12:45:42] <whatsupdoc> doesn't work
[12:45:44] <whatsupdoc> why
[12:46:24] <whatsupdoc> got it nvm
[12:47:37] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[12:51:10] *** Quits: andika (~Andika@subs43-116-206-39-74.three.co.id) (Quit: Leaving)
[12:51:30] *** Joins: andika (~Andika@subs43-116-206-39-74.three.co.id)
[12:52:42] *** Joins: haroon (~haroon@gw.wmd.de)
[12:53:08] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[12:53:15] *** baltazaar is now known as baltazar
[12:53:16] *** Quits: humbertowoody (~humbertow@2806:107e:f:6403:480e:71d6:7818:81bb) (Quit: WeeChat 3.2)
[12:53:32] *** Quits: sudorm (~sudorm@lfbn-orl-1-1760-187.w90-107.abo.wanadoo.fr) (Quit: Leaving)
[12:53:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[12:54:27] *** Joins: zzy2357 (~zzy2357@240e:3b7:3270:e5a0:2d04:43a5:4f57:f8ce)
[12:54:58] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[12:56:12] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:56:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:56:59] *** Quits: BlickleTree (~ndean@pool-72-94-87-37.phlapa.fios.verizon.net) (Quit: WeeChat 3.2)
[12:57:31] *** Joins: Vonter (~Vonter@user/vonter)
[12:57:32] *** Quits: andika (~Andika@subs43-116-206-39-74.three.co.id) (Quit: Leaving)
[12:58:11] *** Joins: anandprabhu (~anandprab@193.138.218.160)
[12:58:32] *** Joins: andika (~Andika@subs43-116-206-39-74.three.co.id)
[12:58:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[12:58:58] *** Quits: stevieh (~skrodzki@2a01:598:89f0:20df:e8e0:c17d:db42:d48a) (Ping timeout: 268 seconds)
[12:59:54] *** Joins: gulzar (~gulzar@123.201.194.110)
[12:59:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:00:29] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:14] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:01:52] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[13:01:57] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:02:03] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[13:03:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:04:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:06:18] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[13:06:47] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 245 seconds)
[13:07:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[13:10:27] *** Joins: sreve (~quassel@p4ff44924.dip0.t-ipconnect.de)
[13:10:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[13:11:42] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:11:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:18:29] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:06] *** Joins: upsala (~zcb@185.213.155.160)
[13:19:44] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[13:20:07] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:22:10] *** Joins: tspng (~tspng@2a02:168:a1a1:1:7421:d43:e90f:f8e6)
[13:22:18] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[13:25:04] *** Joins: Naan (~naan@user/naan)
[13:25:07] *** Joins: stevieh (~skrodzki@tmo-099-48.customers.d1-online.com)
[13:25:09] *** Joins: Melantha (~pyon@user/pyon)
[13:28:56] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[13:31:30] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:33:11] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[13:33:25] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:33:54] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:34:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:35:41] *** Quits: inom (~inom@176.59.103.126) (Remote host closed the connection)
[13:35:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[13:37:04] *** Joins: rany (~rany@user/rany)
[13:38:03] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:38:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:38:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[13:40:18] *** Joins: zbr6 (~zbr@h.sbarnea.com)
[13:40:20] *** Joins: Atque (~Atque@user/atque)
[13:41:32] *** Quits: zbr (~zbr@h.sbarnea.com) (Ping timeout: 252 seconds)
[13:41:32] *** zbr6 is now known as zbr
[13:41:38] *** Quits: stevieh (~skrodzki@tmo-099-48.customers.d1-online.com) (Ping timeout: 265 seconds)
[13:41:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[13:43:44] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[13:44:27] *** Joins: jess (~jess@libera/staff/jess)
[13:45:09] *** Joins: famubu (~famubu@user/famubu)
[13:45:55] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[13:46:08] *** Joins: zaquest (~notzaques@5.128.210.178)
[13:47:45] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:47:56] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[13:49:59] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[13:50:04] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[13:51:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:51:11] *** Joins: kosh (~kosh@user/kosh)
[13:51:12] <VaniaPy> hello,in a while loop i need to return a body with data everytime the conditions are being met but this breaks my loop
[13:51:21] <VaniaPy> i tried with yield
[13:51:27] *** Joins: pnoud (~pnoud@user/pnoud)
[13:51:34] <VaniaPy> as well but glask doesn't accept it as return statement
[13:51:38] <VaniaPy> flask*
[13:52:57] *** Joins: rany_ (~rany@user/rany)
[13:52:57] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[13:53:22] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[13:54:24] *** rany_ is now known as rany
[13:55:10] *** Quits: ops (~ops@user/echelon) (Ping timeout: 265 seconds)
[13:55:41] *** Quits: andika (~Andika@subs43-116-206-39-74.three.co.id) (Read error: Connection reset by peer)
[13:55:47] *** Joins: andikadinata (~Andika@subs43-116-206-39-74.three.co.id)
[13:57:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:57:37] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[13:58:00] *** Quits: andikadinata (~Andika@subs43-116-206-39-74.three.co.id) (Client Quit)
[13:58:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[13:59:31] *** Joins: ops (~ops@user/echelon)
[14:00:11] *** Joins: ice9 (~ice9@user/ice9)
[14:00:17] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[14:04:05] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[14:04:33] *** Joins: rany (~rany@user/rany)
[14:05:15] <habnabit_> VaniaPy, can you give an example of what you want the output to be?
[14:05:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:05:29] <habnabit_> VaniaPy, and also how you want to write the code to generate it
[14:06:18] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:06:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[14:07:21] *** Quits: dbg (~dbg@user/dbg) (Quit: dbg)
[14:11:52] *** Joins: kosh (~kosh@user/kosh)
[14:12:03] <gulzar> Hi. I have a numpy array. I need to get two values: 1) The indexes if values less than 2.5   2) Five lowest values >=2.5 and their index. Any ideas please
[14:12:20] *** Joins: dbg (~dbg@user/dbg)
[14:13:18] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:13:41] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[14:14:09] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:e8d3:fa8:a38a:7c2f)
[14:14:17] *** Joins: y1n (~y1n@84-115-65-52.wifi.dynamic.surfer.at)
[14:14:51] <VaniaPy> habnabit_ https://dpaste.org/4Ncq i need to return the data body after the alert gets triggered
[14:15:28] *** Quits: BillyZane (~BillyZane@152.89.204.250) (Ping timeout: 258 seconds)
[14:15:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[14:17:09] <jinsun> gulzar: for 1st one use numpy.where https://numpy.org/doc/stable/reference/generated/numpy.where.html `numpy.where(the_array < 2.5)`
[14:17:28] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:17:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:18:21] *** Joins: andika (~Andika@subs43-116-206-39-74.three.co.id)
[14:19:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:22:08] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:23:14] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[14:24:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:24:33] *** Quits: ham5urg (~ham5urg@p2e54d6c3.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:24:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:27:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:28:33] *** Joins: dcaro_ (~dcaro@user/dcaro)
[14:29:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:30:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:31:06] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 240 seconds)
[14:31:06] *** dcaro_ is now known as dcaro
[14:32:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[14:32:18] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:32:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:35:10] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 268 seconds)
[14:35:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:36:25] *** Quits: ntdll (ntdll@user/ntdll) (Quit: WeeChat 3.2)
[14:36:42] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[14:36:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:38:12] *** Joins: andikadinata (~Andika@subs47-116-206-43-84.three.co.id)
[14:38:18] *** Quits: andikadinata (~Andika@subs47-116-206-43-84.three.co.id) (Remote host closed the connection)
[14:38:48] *** Joins: andikadinata (~Andika@subs47-116-206-43-84.three.co.id)
[14:38:49] *** Quits: andikadinata (~Andika@subs47-116-206-43-84.three.co.id) (Remote host closed the connection)
[14:39:17] *** Joins: andikadinata (~Andika@subs47-116-206-43-84.three.co.id)
[14:39:17] *** Quits: derelict_ (~derelict@user/derelict) (Ping timeout: 252 seconds)
[14:39:27] *** Quits: andikadinata (~Andika@subs47-116-206-43-84.three.co.id) (Client Quit)
[14:39:43] *** Quits: andika (~Andika@subs43-116-206-39-74.three.co.id) (Read error: Connection reset by peer)
[14:40:19] *** Quits: jmft2 (~JMFT@82.3.54.26) (Killed (NickServ (GHOST command used by jmft236!~jmft2@81.149.115.87.dyn.plus.net)))
[14:40:55] *** Joins: ntdll (ntdll@user/ntdll)
[14:42:27] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:42:31] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[14:42:49] *** Joins: mickey (~user@user/mickey)
[14:43:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:44:06] *** Joins: andika (~Andika@subs47-116-206-43-84.three.co.id)
[14:44:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:44:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:46:02] *** Quits: tspng (~tspng@2a02:168:a1a1:1:7421:d43:e90f:f8e6) (Remote host closed the connection)
[14:46:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:48:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:48:53] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 250 seconds)
[14:52:29] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[14:52:42] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:e8d3:fa8:a38a:7c2f) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:53:35] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 255 seconds)
[14:53:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:53:44] *** Quits: dre (~dre@2001:8003:c932:c301:10a0:acdf:118c:76a2) (Ping timeout: 256 seconds)
[14:54:03] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:54:08] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[14:54:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:55:02] *** Joins: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f)
[14:55:44] <bjs> VaniaPy: you said something about flask?
[14:56:02] <bjs> where does this while loop fit into a flask program?
[14:57:19] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:07] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[14:59:25] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:59:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:59:43] *** Quits: emika (~emika@185.207.249.219) (Ping timeout: 250 seconds)
[15:00:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:22] *** Joins: emika (~emika@83.136.182.131)
[15:05:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:05:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:22] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:07:24] *** Joins: akaWolf (~akaWolf@akawolf.org)
[15:09:21] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[15:09:36] *** Joins: Gerula (~Gerula@user/gerula)
[15:11:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:11:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:13:45] *** zwindl is now known as abc
[15:13:56] *** abc is now known as zwindl
[15:16:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:17:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:18:36] *** Quits: y1n (~y1n@84-115-65-52.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[15:19:20] *** Joins: y1n (~y1n@84-115-65-52.wifi.dynamic.surfer.at)
[15:19:31] <gulzar> jinsun: that's good. Thank You.
[15:19:33] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Ping timeout: 252 seconds)
[15:19:37] <gulzar> How to get second part?
[15:20:07] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[15:20:43] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:21:12] *** Quits: sandeepk (~sandeepk@223.130.30.125) (Ping timeout: 252 seconds)
[15:21:39] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Quit: raek)
[15:22:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:23:10] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[15:23:50] *** Joins: Gerula_ (~Gerula@user/gerula)
[15:23:50] *** Quits: Gerula (~Gerula@user/gerula) (Killed (sodium.libera.chat (Nickname regained by services)))
[15:23:50] *** Gerula_ is now known as Gerula
[15:24:30] *** Quits: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153) (Client Quit)
[15:26:56] *** Joins: death916 (~death916@user/death916)
[15:27:07] *** Joins: MmeQuignon (~MmeQuigno@2a01:e0a:1ab:f090:7bb3:6e09:e3a:7903)
[15:27:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:28:16] *** Joins: raek (~raek@2001:9b1:efe:3200:d250:99ff:fec0:e153)
[15:28:18] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[15:28:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:29:04] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:08] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 258 seconds)
[15:33:05] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[15:33:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:34:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:34:17] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 245 seconds)
[15:35:07] *** Joins: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6)
[15:37:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[15:37:53] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[15:39:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:39:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:42:24] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:42:37] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[15:42:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:43:29] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[15:43:36] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Quit: You have been idle for 30+ days)
[15:44:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:46:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:46:45] *** Quits: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[15:47:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[15:48:13] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[15:48:59] *** Joins: DaNeenjah (~jake@adsl-74-230-9-66.hsv.bellsouth.net)
[15:49:31] *** Quits: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net) (Read error: Connection reset by peer)
[15:49:36] <rannnn8888> A general question that I connect to the API is the same as sending every second reequsts ?
[15:50:33] *** Joins: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net)
[15:50:55] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Read error: Connection reset by peer)
[15:51:41] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:55:36] *** Joins: pnoud (~pnoud@user/pnoud)
[15:55:58] *** Joins: lorcab (~user@197.251.194.240)
[15:57:10] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[15:59:04] <The-Compiler> rannnn8888: I don't understand the question
[15:59:07] <shlomif> rannnn8888: which api?
[15:59:15] *** Quits: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net) (Ping timeout: 245 seconds)
[16:00:07] *** Parts: famubu (~famubu@user/famubu) ()
[16:00:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[16:01:26] *** Quits: pyfisch (~pyfisch@ip-37-201-119-196.hsi13.unitymediagroup.de) (Changing host)
[16:01:26] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[16:01:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[16:01:32] *** Joins: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net)
[16:01:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:01:58] *** Quits: zzy2357 (~zzy2357@240e:3b7:3270:e5a0:2d04:43a5:4f57:f8ce) (Quit: 悄悄地，我走了，正如我悄悄地来。挥一挥衣袖，不带走一片云彩。)
[16:02:17] <rannnn8888> In general this connection to the API example twitter stream api,is the same as I will send request and get response all secent
[16:02:46] <The-Compiler> rannnn8888: that entirely depends on the API
[16:04:24] *** Joins: Deneb (~johnch@37.111.189.80.dyn.plus.net)
[16:04:49] *** Joins: zeden (~zeden@user/zeden)
[16:06:11] *** Joins: sudorm (~sudorm@126-28-127-151.dsl.ovh.fr)
[16:07:33] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[16:08:34] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 265 seconds)
[16:08:48] <jinsun> gulzar: for second there is no quick function to do it, but I think you can use numpy.argsort to get the indicces of the sorted array, then slice the output using the result of part 1
[16:10:47] *** Joins: Ares000 (~Ares3@37.228.196.119)
[16:10:56] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[16:10:58] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[16:11:08] *** Joins: shabius_ (~shabius@2a0e:1c80:2:1022::1003)
[16:12:00] <gitesh> do you know The printed representation omits the quote marks that are included in the string literal.
[16:12:12] <gitesh> this is unlikely for other data
[16:12:35] <gitesh> like list will include [] and dictionries will include {}
[16:12:57] <jinsun> gulzar: something like `indices = numpy.argsort(the_array)[len(result_of_part_1):len(result_of_part1 + 5)]` and then `values = the_array[indices]`
[16:13:20] <Yhg1s> gitesh: yes, if you print a string, you print its data. If you print a list or dict, you print its repr(). You can print the repr() of a string, too. print(repr(s))
[16:13:44] <Yhg1s> gitesh: see the difference between str() and repr(), and __str__ and __repr__.
[16:13:49] <gitesh> okay nice Yhg1s
[16:13:50] *** Quits: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net) (Ping timeout: 245 seconds)
[16:13:54] *** Quits: shabius (~shabius@46.188.40.202) (Ping timeout: 240 seconds)
[16:15:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[16:16:03] <VaniaPy> i'm trying to delete an entity from an IoT sensor
[16:16:50] <VaniaPy> and i'm getting {
[16:16:50] <VaniaPy>     "error": "NotFound",
[16:16:51] <VaniaPy>     "description": "The requested entity has not been found. Check type and id"
[16:16:51] <VaniaPy> }
[16:17:08] <VaniaPy> is there a way to force the DELETE process?
[16:17:25] <VaniaPy> or find the entity with different parameters
[16:17:35] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[16:18:14] *** Quits: y1n (~y1n@84-115-65-52.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[16:18:15] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:18:16] *** Joins: computeiro (~Wender@189.37.69.205)
[16:18:34] *** Joins: y1n (~y1n@84-115-65-94.wifi.dynamic.surfer.at)
[16:18:38] <Ares000> what is the best way to learn Python?
[16:19:06] <The-Compiler> Ares000: the /topic has a couple of links
[16:19:17] *** Joins: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net)
[16:19:50] <bjs> Ares000: by spending lots of time reading and writing Python code.
[16:19:54] <The-Compiler> VaniaPy: that seems to be something coming back from the sensor (or whatever API you're using there)
[16:20:38] <Ares000> thank you!
[16:20:59] <andika> bjs: good idea, i will do it
[16:21:17] <The-Compiler> Ares000: https://automatetheboringstuff.com/ is pretty nice too - in general, learn the basics, then get your hands dirty and write something small (or find a friedly project to contribute to, perhaps even something you use yourself)
[16:23:04] *** Quits: Jin^eLD (~jin@45.62.236.211) (Ping timeout: 265 seconds)
[16:23:08] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 255 seconds)
[16:23:39] <shlomif> Ares000: different people need different resources
[16:25:21] *** Joins: masber (~masber@vpn-26.cscs.ch)
[16:26:48] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[16:27:23] *** Joins: simplicity (~yti@user/simplicity)
[16:28:01] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 268 seconds)
[16:30:00] *** Quits: andika (~Andika@subs47-116-206-43-84.three.co.id) (Quit: Goodbye :D)
[16:30:05] *** Quits: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net) (Ping timeout: 245 seconds)
[16:30:14] *** Joins: aslicedbanjo (~aslicedba@host31-48-145-70.range31-48.btcentralplus.com)
[16:30:23] *** Joins: andika (~Andika@subs47-116-206-43-84.three.co.id)
[16:30:28] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[16:32:31] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e)
[16:33:52] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:34:11] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[16:35:07] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[16:35:30] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 272 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:50] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[16:37:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:37:51] *** Quits: andika (~Andika@subs47-116-206-43-84.three.co.id) (Read error: Connection reset by peer)
[16:38:02] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[16:38:38] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[16:40:26] *** Joins: cpyang (cpyang@114-32-153-132.HINET-IP.hinet.net)
[16:41:20] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[16:42:40] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 258 seconds)
[16:43:47] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Quit: Goodbye :D)
[16:44:11] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[16:44:48] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[16:46:21] *** Joins: Gerula (~Gerula@user/gerula)
[16:46:34] *** Joins: Fluxx (~Fluxx@user/fluxx)
[16:47:53] *** Quits: sudorm (~sudorm@126-28-127-151.dsl.ovh.fr) (Quit: Leaving)
[16:49:51] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:50] <gulzar> jinsun: ok , thank You
[16:50:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[16:51:00] *** Joins: pspiagicw (~pspiagicw@1.23.47.161)
[16:51:32] *** Quits: pspiagicw (~pspiagicw@1.23.47.161) (Client Quit)
[16:51:46] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.1)
[16:52:12] *** Joins: leonardo (~leonardo@user/leonardo)
[16:52:23] *** Quits: jazzy (~jaziz@2600:380:8644:8168:ad48:50e6:fb3f:d642) (Ping timeout: 255 seconds)
[16:53:21] *** Joins: thiras (~thiras@user/thiras)
[16:56:23] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[16:57:07] <Luyin> can you use a requirements.txt file along with pyproject.toml and tox? can I tell tox to run `pip install -r requirements.txt` somehow so that it gets a dependency that is not on PyPI but somewhere else?
[16:58:52] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[16:59:03] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Quit: Goodbye :D)
[16:59:21] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[17:00:04] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Client Quit)
[17:00:21] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[17:00:26] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:01:57] *** Quits: fm (~fm@user/fm) (Remote host closed the connection)
[17:02:54] *** Parts: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) ()
[17:03:04] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Client Quit)
[17:03:15] *** Joins: ambv (~ambv@c138-59.icpnet.pl)
[17:03:29] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[17:04:06] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[17:04:26] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Client Quit)
[17:04:43] *** Joins: andika (~Andika@subs46-116-206-42-80.three.co.id)
[17:05:38] *** Quits: gulzar (~gulzar@123.201.194.110) (Quit: Konversation terminated!)
[17:05:48] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[17:06:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:09:19] *** Joins: pro (~pro@user/pro)
[17:09:55] <pro> how would I detect in realtime if a packet of certain protocol reached my network card ?
[17:11:08] *** Quits: andika (~Andika@subs46-116-206-42-80.three.co.id) (Remote host closed the connection)
[17:11:11] <zamba> pro: huh?
[17:11:14] <zamba> tcpdump?
[17:11:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[17:11:42] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:11:50] <pro> so just analyse the tcpdump ?
[17:12:07] <zamba> pro: you want/need to do this in python?
[17:12:38] <pro> what could go wrong? is python too slow ?
[17:12:52] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[17:13:09] <zamba> really depends on the traffic
[17:13:12] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[17:13:34] <pro> is the limit known ?
[17:13:59] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[17:14:12] <zamba> you can use scapy, for instance
[17:14:17] <zamba> there's no "limit"
[17:14:31] <zamba> it depends on the amount of traffic and your hardware
[17:15:11] <zamba> but yes, sure, python isn't the fastest language to do this in.. and aspects like single and multi-threading comes into play
[17:15:33] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[17:16:14] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 265 seconds)
[17:17:12] <zamba> but there are dedicated tools/solutions for doing this kind of stuff.. that also distributes the load across several threads.. tools like zeek and/or suricata, for instance
[17:17:31] *** Joins: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs)
[17:17:55] <pro> thanks, I'll look into them
[17:18:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[17:18:21] *** Quits: y1n (~y1n@84-115-65-94.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[17:18:21] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 252 seconds)
[17:18:27] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:19:03] *** Joins: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at)
[17:19:13] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:19:24] <zamba> pro: but you haven't really said what you want to do
[17:19:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:20:31] <pro> basically analyse tcpdump in realtime and filter out packages I'm interested in
[17:20:50] <zamba> packages? packets, you mean?
[17:20:57] <zamba> and what about tcp reassembly?
[17:21:19] <pro> packets sorry
[17:21:32] <pro> I completely forgot about tcp reassembly aswell :(
[17:22:41] <zamba> it seems like quite a lot you've forgotten about :)
[17:22:52] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:23:19] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:23:50] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:24:11] *** Quits: anandprabhu (~anandprab@193.138.218.160) (Quit: Leaving)
[17:24:18] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[17:29:31] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[17:29:52] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[17:31:02] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[17:31:28] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:32:43] *** Quits: computeiro (~Wender@189.37.69.205) (Quit: Leaving)
[17:32:55] *** Joins: ferz (~ferz@93.48.251.229)
[17:33:37] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:33:49] *** Joins: greenx_ (~greenx@user/greenx)
[17:34:00] *** Quits: greenx_ (~greenx@user/greenx) (Client Quit)
[17:34:14] *** Joins: thiras (~thiras@user/thiras)
[17:34:38] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:35:04] *** Quits: irrgit (~irrgit@192.241.175.183) (Quit: Leaving)
[17:35:17] *** Joins: irrgit (~irrgit@192.241.175.183)
[17:36:33] *** Joins: andika (~andika@subs46-116-206-42-80.three.co.id)
[17:36:40] *** Joins: scabby_ (~scabby@user/scabootssca)
[17:39:22] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[17:39:24] *** Quits: andika (~andika@subs46-116-206-42-80.three.co.id) (Read error: Connection reset by peer)
[17:40:37] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:41:40] *** Joins: andika (~andika@subs46-116-206-42-84.three.co.id)
[17:42:28] *** Quits: blddk (~admin@185.233.252.229) (Ping timeout: 258 seconds)
[17:42:33] *** Joins: hyperknot (~hyperknot@2a02:3033:409:3e4b:4d4b:1a5a:91b:ed89)
[17:42:57] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[17:44:31] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[17:46:06] *** Joins: jpe__ (~sharpergu@2001:16b8:5c50:5100:fd1a:812c:6af0:a515)
[17:46:13] <gitesh> I'm not sure on local variable and global variables
[17:46:37] <gitesh> i wanna be able to work on it surely
[17:46:56] *** Joins: tspng (~tspng@2a02:168:a1a1:1:1523:116b:6040:d599)
[17:47:02] <gitesh> when you past a list to a function, it's an alias so that you can mutate that objecdt
[17:47:05] <gitesh> *object
[17:47:56] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:68b2:28b1:6250:800e) (Ping timeout: 252 seconds)
[17:48:36] *** Quits: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133) (Ping timeout: 252 seconds)
[17:48:45] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[17:49:28] <bjs> gitesh: yes;  do you have a question about local/global variables?
[17:50:32] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 245 seconds)
[17:50:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 245 seconds)
[17:51:16] <Yhg1s> gitesh: you may want to watch or read bit.ly/pynames1
[17:51:21] <hyperknot> Hi, I'm a bit confused about extending classes with inits. Currently I'm using a class without __init__: https://bpa.st/YVOQ
[17:51:36] <hyperknot> How can I extend this such that I can pass a parameter to TestApp?
[17:51:43] <bjs> hyperknot: by defining an __init__
[17:51:55] <Yhg1s> hyperknot: defining an __init__, and calling the parent __init__ with super().
[17:52:00] <hyperknot> bjs: I'm doing that however I got stuck with the super
[17:52:08] <bjs> hyperknot: stuck how?
[17:52:20] <hyperknot> I tried super(self.__class__, app)
[17:52:26] <hyperknot>     def __init__(self, app, user):
[17:52:33] <Yhg1s> hyperknot: super().__init__(app, user)
[17:52:35] <bjs> hyperknot: no don't pass arguments to super
[17:52:39] <hyperknot> basically I'd like to pass a simple parameter: user
[17:52:41] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[17:52:48] <Yhg1s> hyperknot: okay, super().__init__(app)
[17:53:00] <bjs> hyperknot: `super().__init__(args to super init)`  it depends what arguments the parent's __init__ accepts
[17:53:12] <Yhg1s> hyperknot: certainly never ever pass self.__class__ to super() (see bit.ly/super-wrong)
[17:53:31] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[17:53:48] <hyperknot> wow, #1 Google result: https://stackoverflow.com/questions/12701206/how-to-extend-python-class-init
[17:54:06] <hyperknot> that's how I got confused
[17:54:38] <Yhg1s> hyperknot: that's the Python 2 way of doing it. With Python 3, you can omit the arguments to super(). Also, notice how 'SubThing' *is not* 'self.__class__'.
[17:54:53] *** Joins: philectro (~quassel@2a02:2788:9a4:9f0:cfec:36a4:2496:17c0)
[17:55:02] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[17:55:03] <hyperknot> Yhg1s: that's the first comment with 21 votes
[17:55:09] <bjs> hyperknot: stack overflow answerers are bad, the person who says "Also instead of referencing SubThing in super, you can do super(self.__class__, self).__init__(*args, **kwargs)" is just wrong :(
[17:55:13] <Yhg1s> hyperknot: yep, isn't stackoverflow absolutely terrible.
[17:55:21] <Yhg1s> hyperknot: see bit.ly/super-wrong for how wrong it is, and why.
[17:55:26] *** Joins: blddk (~admin@185.233.252.229)
[17:55:31] <pragmaticenigma> Also, passing arguments to the parent class with *args and **kwargs is going to lead to a developer having a very bad time
[17:55:39] <Yhg1s> quite likely, yes.
[17:55:52] <bjs> well that part at least is not outright incorrect
[17:56:08] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:56:13] <hyperknot> OK, super().__init__(app) works. On an other note, Is there a recommended way to pass arguments to pytest fixtures?
[17:56:26] *** Joins: pnoud (~pnoud@user/pnoud)
[17:56:44] <hyperknot> My current solution is to make multiple fixtures: https://bpa.st/4QKQ
[17:57:23] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[17:57:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[17:58:32] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 255 seconds)
[17:58:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:59:34] *** Joins: BUSY (~BUSY@user/busy)
[17:59:57] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[18:00:27] <bjs> hyperknot: you can use a marker
[18:00:51] <bjs> hyperknot: https://docs.pytest.org/en/6.2.x/reference.html#custom-marks you can read those marks from inside the fixture to do something with
[18:01:41] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[18:01:42] *** Joins: Quaking (~Quaking@167.89.254.27)
[18:02:22] <hyperknot> bjs: thanks. I think the current solution is cleaner in my case (only 2-3 possible values).
[18:02:26] <bjs> Yhg1s: pragmaticenigma: actually now I remember that there is a common place where people pass *args,**kwargs through __init__s on MI
[18:02:30] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[18:02:53] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Remote host closed the connection)
[18:03:03] <bjs> allowing superclasses to collect args it needs and passes some (perhaps unknown) set forward.  so it's not a terrible thing  (even if MI architectures like this have other issues)
[18:03:04] <pragmaticenigma> I'm not familiar with what MI is
[18:03:20] <bjs> pragmaticenigma: multiple inheritance, if you have multiple superclasses
[18:03:20] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[18:03:22] <Yhg1s> bjs: actually, it *is* a terrible thing.
[18:03:23] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[18:03:43] <Yhg1s> bjs: you can't arbitrarily compose classes together in an MI hierarchy. They have to be written to co-operate with each other.
[18:03:57] <pragmaticenigma> MI is something I've always avoided as it's very easy to get things out of order and override things unexpectedly
[18:04:10] <bjs> Yhg1s: not arbitrarily but few programs are truly arbitrary
[18:04:15] <Yhg1s> bjs: each of the classes needs to know about all the methods and attributes and parameters of all other classes anyway, so there's no value in using *args/**kwargs.
[18:04:31] <pragmaticenigma> I mostly avoid inheritence and use Dependency Injection and Polymorphism approaches
[18:04:39] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[18:05:06] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 252 seconds)
[18:05:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[18:05:47] <bjs> Yhg1s: it lets you have a base class that accepts "no" arguments,  and then still use it in a wider MI context;  I've definitely seem it done before and in a not-broken way (for the collection of classes the application defined)
[18:07:55] *** Joins: charrit69 (~charrit69@111.red-83-56-34.staticip.rima-tde.net)
[18:07:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:08:09] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 258 seconds)
[18:08:10] *** Joins: r1ch (~r1ch@user/r1ch)
[18:09:57] *** Quits: andika (~andika@subs46-116-206-42-84.three.co.id) (Ping timeout: 250 seconds)
[18:10:48] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[18:12:32] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:14:38] <charrit69> Hi, Could anyone help me to understan why a function is not called? (there's no error or traceback)
[18:14:44] <charrit69> https://pastebin.com/bH0vNtDx
[18:15:05] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Remote host closed the connection)
[18:15:21] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:15:58] <fluiD> what's the problem?
[18:16:12] <SnoopJ> charrit69, prueba() is a generator function, calling it creates an iterator, but the code in the function body won't be iterated until you iterate it.
[18:16:19] <SnoopJ> won't be executed*
[18:16:22] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[18:17:47] *** Joins: Norm (~norm@user/norm)
[18:17:48] *** Joins: d00gy (~tonberry@user/d00gy)
[18:18:03] *** Joins: timkofu (~timkofu@user/timkofu)
[18:18:07] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 258 seconds)
[18:18:13] <SnoopJ> https://bpa.st/IK5Q
[18:18:35] *** Quits: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[18:19:11] *** Joins: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at)
[18:19:33] *** Joins: dougquaid (~dougquaid@156.146.62.221)
[18:19:33] <jabberwock> I think it may be the RSS spec (or lack thereof) - feedparser seems a bit fragile. Need lots of try/excepts
[18:19:34] <timkofu> Howdy
[18:19:39] <jabberwock> hi :)
[18:20:06] <charrit69> but yield is used inside ShowChannels variable that will be iterated at next line
[18:20:22] <dougquaid> Is there a library for multipoint trilateration? I have GPS coordinates and distances, and I want to find out where they intersect
[18:21:33] <charrit69> I didn't used yield in python, only in ruby but the behaviour it's not the same, I think
[18:21:49] <jabberwock> .shapely
[18:22:00] <jabberwock> dougquaid: hip shot - shapely ?
[18:22:02] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[18:22:12] <dougquaid> jabberwock: Thanks I'll check it out
[18:22:27] <jabberwock> 👍
[18:22:35] <charrit69> I followed the instruccions of the panoramisk module, I'll try to obtain the results with your snnipet. Thanks SnoopJ
[18:25:08] <SnoopJ> charrit69, basically, when you use `yield` in a function body, calling that function only sets up an iterable object (a generator).
[18:26:54] *** Joins: Blankspace (~abcd@user/blankspace)
[18:26:56] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 258 seconds)
[18:26:57] *** Joins: sazawal (~sazawal@171.50.134.171)
[18:28:06] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[18:29:28] *** Joins: mike18 (~geri@217-149-163-174.nat.highway.telekom.at)
[18:29:57] <Yhg1s> bjs: if your baseclass accepts no arguments, all the subclasses should not be passing arguments to super(). If you have a bunch of subclasses that take the same arguments and they can be composed together, they need a common baseclass that takes the arguments and doesn't pass them to the parent class.
[18:30:02] <Yhg1s> bjs: passing along *args/**kwargs just papers over the fact that your MI hierarchy is a mess.
[18:30:02] <sazawal> Guys, something is spinning my head. I did `from multiprocessing import Queue`, `q=Queue()` and `isinstance(q,Queue)`, the last statement gives me a TypeError. Further, when I do `type(q)`, I get `<class 'multiprocessing.queues.Queue'>`
[18:30:21] <Yhg1s> sazawal: what is the exact error you get?
[18:30:27] <mike18> hi, i have a python app which could throw multiple exceptions. i want to store all of them and than before the program ends write those into a file. would you store it into a list and than write it out?
[18:30:31] <bjs> sazawal: can you share the actual error and traceback and code?
[18:30:33] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:30:44] <sazawal> Yhg1s, TypeError: isinstance() arg 2 must be a type or tuple of types
[18:30:57] <Yhg1s> sazawal: the error means multiprocessing.Queue is not a class.
[18:31:02] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1582-46b3-b2a4-e984.res6.spectrum.com)
[18:31:10] <Yhg1s> (the class is multiprocessing.queues.Queue, but I wouldn't recommend using isinstance() on it anyway)
[18:31:23] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:31:28] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Client Quit)
[18:31:40] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:31:42] <sazawal> Yhg1s, Why not? If it is not class, how does q=multiprocessing.Queue() work?
[18:31:49] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:32:00] <mawk> what's the difference between str.isnumeric and str.isdigit
[18:32:00] *** Joins: nyah (~nyah@90.221.186.180)
[18:32:06] <mawk> I want just [0-9]
[18:32:08] <SnoopJ> mike18, I would write exceptions to a log as they occur. traceback.format_exc() is useful for this.
[18:32:12] <mawk> I don't want romannumerals
[18:32:52] *** Joins: fofoni (~fofoni@user/fofoni)
[18:33:04] <grym> mawk: check the docs
[18:33:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:33:07] <mawk> neither isdigit or isnumeric are good
[18:33:24] <mawk> I checked the docstring of these functions, it ought to be enough
[18:33:25] <bjs> mawk: isdigit() does what it says on the tin, isnumeric() also matches other Unicode numeric things
[18:33:27] <mawk> but apparently no
[18:33:35] <bjs> mawk: why is isdigit() not enough?
[18:33:37] <mawk> well '²'.isdigit() is True
[18:33:44] <Yhg1s> yes, because it's a digit :)
[18:33:46] <SnoopJ> and indeed, that has Numeric_Type=Digit
[18:33:50] <Yhg1s> if you only want 0-9, check for that.
[18:33:52] <mawk> it's a fake weird little digit
[18:33:56] <Yhg1s> not fake.
[18:34:02] *** Quits: fofoni (~fofoni@user/fofoni) (Client Quit)
[18:34:08] <SnoopJ> mawk, both of those methods use Unicode's property system.
[18:34:10] <grym> mawk: this isn't even a python thing
[18:34:14] *** Joins: akk (~akk@75.161.155.222)
[18:34:19] <grym> mawk: if you want [0-9], just write the regex, i think
[18:34:20] *** Joins: fofoni (~fofoni@user/fofoni)
[18:34:22] <grym> or explicitly check
[18:34:23] <charrit69> SnoopJ: ok, I undestand and made some tests in the repl. Then how can I obtain these results inside a function? separating the generator function?
[18:34:25] <charrit69> https://panoramisk.readthedocs.io/en/latest/manager.html#module-panoramisk
[18:34:29] <charrit69> send_action
[18:34:29] <mawk> I see
[18:34:30] <mawk> thanks
[18:34:30] <SnoopJ> isdigit() is Numeric_type=Digit or Decimal, isnumeric() looks for Numeric too
[18:34:35] <mike18> @SnoopJ the problem is i need them in a file - if apps runs next time i need to re-run things which failed before...
[18:34:40] <mike18> so i would just load the file
[18:34:42] <mike18> and see what failed
[18:34:43] <grym> mike18: you can log to a file, yes
[18:34:44] <SnoopJ> mike18, you can write logs promptly.
[18:34:53] <grym> (and even tee to stderr at the same time!)
[18:35:12] <mike18> for example log it to csv file or so
[18:35:19] <sazawal> Yhg1s, How do I check if an object is an instance of multiprocessing.queues.Queue class?
[18:35:20] <grym> probably not that, no
[18:35:34] <bjs> sazawal: why are you trying to do that
[18:35:35] <grym> mike18: there are structured approaches to logging; csv is probably a poor choice for a structure
[18:35:41] <SnoopJ> charrit69, you get results out of a generator by iterating it (`for value in mygen:`, calling list() on it, etc.). I don't know what you mean by "separating the generator function"
[18:35:44] <Yhg1s> sazawal: usually, you don't. Why do you need to?
[18:35:46] <mike18> grym: json better?
[18:35:46] <bjs> sazawal: and more to the point, why don't you know whether it is or isn't?
[18:35:47] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:35:51] *** Joins: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691)
[18:35:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:36:14] <grym> mike18: eliot takes that approach, iirc.
[18:36:18] *** Joins: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:7969:171a:ce93:2df8)
[18:36:33] <mike18> timestmap, id, error_msg
[18:36:35] <charrit69> Separating I mean to splitting in two functions.
[18:36:39] <grym> mike18: but normally i read / grep logs but don't otherwise operate on them programmatically
[18:36:46] *** Quits: akk (~akk@75.161.155.222) (Client Quit)
[18:36:59] <mike18> grym: i need to read the log (json) file again for the next run
[18:37:05] <mike18> and re-run ids which failed
[18:37:06] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 240 seconds)
[18:37:06] <charrit69> list is iterating the results of the var who calls yield from the module class
[18:37:12] *** Joins: akk (~akk@75.161.155.222)
[18:37:15] <SnoopJ> mike18, it isn't clear why you think logging is orthogonal to these needs.
[18:37:24] *** Joins: Fiji (~Fiji@user/fiji)
[18:37:38] <SnoopJ> charrit69, list(some_iterable) will iterate over the iterable object, yep.
[18:37:45] <mike18> SnoopJ: im saying i could write the logs as exceptions happen or write a summary at the end...
[18:37:47] <sazawal> bjs, Oh you remember the snippet I shared? There were two processes the second process calls a function which contains the queue pipeline going through various functions. All the internal threads are communicated with standard queues and between processes it is mul. queue.
[18:38:13] <SnoopJ> mike18, why defer it?
[18:38:20] <mike18> SnoopJ: bc i need to write it to s3 - maybe better to have a summary log
[18:38:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:38:28] <bjs> sazawal: okay... so your process gets handed an "in" queue and an "out" queue, and then the process makes some of its own queues and hooks everything up
[18:38:36] <mike18> @SnoopJ lots of writes are not so good on s3
[18:38:43] <sazawal> bjs, Now there are some functions in the second class which need assistance of other functions and in that case there is no need of using a mul. Queue.
[18:38:52] <SnoopJ> hmm, does the library not offer write buffering?
[18:39:07] <mike18> SnoopJ: not that i know
[18:39:19] <charrit69> SnoopJ: In the line no. 19 I try to iterate the iterable ShowCahnnels var but no execution of the main function prueba()
[18:39:20] <sazawal> bjs, Yes so far it worked good, except some joins which I will see later because it is freezing the Qt ui.
[18:39:33] <mike18> i could write to a temp file
[18:39:41] <mike18> and than write to s3 at end
[18:39:48] <SnoopJ> mike18, you could also use a Handler class that defers the writes
[18:39:49] <bjs> sazawal: okay but I still don't really get the need to check anything,  the process function will be given arguments that are the input and output multiprocessing Queues, it knows that's what they are it doesn't need to check. Then the process can create all the queues to hook together all the functions and it can make whatever threaded queues it wants, it doesn't need to check either
[18:40:52] <sazawal> bjs, Hm well there are ways to avoid it. I am not sure how to explain clearly, let me try.
[18:41:20] <SnoopJ> mike18, using a temp file would probably be the simplest solution here
[18:41:30] <mike18> yeah
[18:41:39] <bjs> sazawal: joins freezing the Qt ui doesn't sound like a multiprocessing vs threading Queue type problem, it juts sounds like a "calling join from the qt thread" problem
[18:43:06] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:43:13] *** Joins: Stx (stx@libera/staff/stx)
[18:44:21] <bjs> Yhg1s: is there anywhere using MI is not a mess
[18:44:42] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[18:45:21] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:45:41] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 252 seconds)
[18:45:45] *** Joins: cadmio (~gidna@151.37.193.210)
[18:45:47] <cadmio> Hello
[18:46:11] <cadmio> if there's one familiar with gtk I'd like to undertstand how to save a  GtkSourceBuffer, I've seen there's a gtk_source_file_saver_new but I don't think it's sufficient https://paste.gnome.org/pey9rcukn#line-152
[18:46:20] <sazawal> bjs, Consider a box running a parallel process, and inside there are many functions running in separate threads. Now the link going in the box and out of the box are handled by mul.queues and the rest inside is normal queues. Now there is a function which creates all the internal queues, the mul.queues are created from outside this system. Now suppose I have a function inside this box which needs other functions in the box to do its computation. For
[18:46:20] <sazawal> this, I will use an object of the same system to set up a subnetwork of queues confined to one function. And now in this case I wouldn't need a mul.queue because ultimately it is inside the same box.
[18:46:23] <sazawal> God!
[18:47:16] <bjs> sazawal: but I mean, it's weird to do type checking on the queues to figure anything out.  The Process would be some kind of Python function, and it'd accept arguments that are the input and output queues. Those are just always going to be multiprocessing Queues, you don't need to check
[18:48:45] <bjs> sazawal: then the process can create all the other queues to do the inter-thread communication on that process just normally, it knows the very first function's input should be attached to the "input" queue it was given, so it doesn't have to create a queue there, and it knows the very last function in the pipeline's output should just be the "output" queue so it doesn't have to create anything
[18:49:04] <sazawal> bjs, Yes but if the output queue I am getting in the system which sets up this network is a multiprocessing queue, then I will pass on the output data to a multiprocessing queue provided to it. If it is not a mul.queue (in the case of subnetwork internally) then it will just pass it on.
[18:49:12] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[18:49:30] <bjs> sazawal: how can it not be a multiprocessing queue if it's in another process?
[18:50:34] *** Quits: cman (~Cody@2603:9000:d104:8465:59c1:7564:f6c0:e626) (Ping timeout: 240 seconds)
[18:50:46] <sazawal> I mean for the case of subnetwork created by one of the function which uses other functions to complete it's computation, then I would only take data from normal queues and out it with a normal queue
[18:50:58] *** Quits: r1ch (~r1ch@user/r1ch) (Read error: Connection reset by peer)
[18:51:12] <bjs> sazawal: okay but I'm confused, you said it was a parallel box. This "box" is just some Python function you call with `multiprocessing` yes?
[18:51:13] *** Joins: upsala (~zcb@2a03:1b20:6:f011::a01e)
[18:51:42] *** Joins: cman (~Cody@2603-9000-d104-8465-59c1-7564-f6c0-e626.inf6.spectrum.com)
[18:52:19] <Evolver> Can I make a http0.9 GET request with `requests`? How?
[18:52:40] *** Parts: cadmio (~gidna@151.37.193.210) (WeeChat 2.3)
[18:53:17] <sazawal> Lol, yes it is confusing. Yes there is a main box which works like this how you said it. But there are some functions in this box, which cannot work on their own, so they need to set up a subbox for it. This subbox will reside in the same process, and the functions in this subbox will be running in parallel threads.
[18:53:21] *** Joins: sharksauce (sharksauce@user/sharksauce)
[18:53:58] <mawk> why would you want that Evolver though?
[18:53:58] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[18:54:03] <bjs> sazawal: so what's the problem? there's some pipeline of functions that get called, and so the process sets up all the queues
[18:54:20] <Evolver> mawk: why does it matter? just answer the question rather than annoying users with additional pointless questions
[18:54:39] <bjs> sazawal: I still don't get *where* you would be checking the type of the queue, or what you'd do differently
[18:55:08] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Ping timeout: 256 seconds)
[18:55:22] <mawk> it looks more like the reverse for now Evolver
[18:55:28] <mawk> you're annoying the people willing to help you
[18:55:39] <Evolver> mawk: you're trolling, not helping, so go away
[18:55:40] <SnoopJ> Let's leave it at "I don't want to tell you" and move on
[18:55:41] <mawk> maybe I was asking a question because I was curious in the meantime I was looking up the answer for you
[18:55:43] <OnlineCop> Is it incorrect to call `def`s "functions"? `def foo(param1, param2): ...` Would this be the foo() definition, foo() method, foo() function... ? (I'm coming from a C++ naming convention background.)
[18:55:46] <mawk> but I think I will stop
[18:55:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:55:53] <SnoopJ> I don't know the answer to the question but suspect it's "no"
[18:55:54] <bjs> OnlineCop: function is fine
[18:56:35] <bjs> OnlineCop: function is exactly what Python calls them: https://bpa.st/KANQ
[18:56:52] <grym> OnlineCop: if you have `def foo(self, ...)` inside a class, that's usually also called a method (but it's also a function)
[18:57:02] <Evolver> mawk: if you're just curious, the answer is that some sites allow only http0.9 and http2.0, not 1.0 or 1.1. They do this for security-theater.
[18:57:02] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[18:57:38] <OnlineCop> Alright: similar to how C++ names them (functions for outside a class, method for inside). Thanks!
[18:57:47] <mawk> it seems urrllib3 is the one setting the HTTP version in the request line
[18:58:15] <sazawal> 1. I created in and out mulQueues, passes it to queue-manager along with the desired functions. 2. the queue-manager sets up everything and it attaches a function at the end which takes the data from the normal queue of the last function and puts it in the out-queue (multiprocessing).
[18:58:21] <SnoopJ> yea I think the answer will be determined by the underlying deps. The README names HTTP/1.1 specifically and no others.
[18:58:36] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:58:54] <SnoopJ> Evolver, the answer to your question is no, this was dropped in 2014: https://github.com/psf/requests/blob/master/HISTORY.md#250-2014-12-01
[18:59:01] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[18:59:27] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[18:59:57] <Evolver> SnoopJ: Thank you! I will try it with urllib then.
[18:59:58] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi) (Quit: WeeChat 3.2)
[19:00:24] <sazawal> bjs, Now for the case of subbox: 1. I created normal in and out queues and passed it to queue-manager along with desired functions. 2. The queue manager don't need to attach another function at the end which takes the data from normal queues and puts it inside another normal queue. I would know this in the queue-manager if I know which kind of out-queue is provided to it.
[19:00:29] <SnoopJ> You might-could use an old version of requests, too. You'd be missing out on the better part of a decade of updates, but that's kind of the task anyway.
[19:01:03] <mawk> which in turn calls from the urllib in python
[19:01:16] <bjs> sazawal: but this "queue-manager" operation, knows what all the functions are and the order it has to evaluate them in for some kind of pipeline
[19:01:30] <SnoopJ> yea the change seems to be mostly passing `strict=True` to urllib3
[19:01:53] <sazawal> bjs, Yes the queue-manager knows it as it is provided in a function which is passed to it.
[19:02:04] <bjs> sazawal: if it sees it needs boxes [f, g, h] it knows it needs to make 2 threading Queues and knows where to hook them up
[19:02:17] <bjs> I don't understand why you need to look at the types of anything
[19:02:17] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[19:04:19] <bjs> sazawal: like if it sees it has 12 boxes and needs to hook them up then it knows the input for the first is the "in" mp queue, and the output for the last should be the "out" mp queue and it was just given those from the parent process, and then it knows it needs 11 threading Queues to hook up the 11 other "out" queues (and attach to the following box's "in")
[19:04:25] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[19:04:28] <bjs> so why do you need to look at the types of anything to do this?
[19:05:31] <sazawal> bjs, These pipelines need not be linear, it can be like: q1=f(q0), q2=g(q1[0]), q3=h(q1[1]), q4=i(q2,q3,q3). Now say we have qo as out-queue (multiprocessing), then it will do transform(q4,qo). The transform function reads from q4 and puts it in qo.
[19:05:32] *** Quits: pgib (~textual@173.38.117.81) (Quit: 00 PC LOAD LETTER)
[19:05:38] *** Joins: MaximB (~Guest89@87.68.165.19)
[19:05:54] *** Quits: cqi (~cqi@2408:8207:252f:75a0:8cf2:f40a:73a7:dfd6) (Ping timeout: 240 seconds)
[19:06:07] <altendky> in the year'ish since this discussion of unions in desert, is anyone aware of progress on union handling with marshmallow?
[19:06:11] <altendky> https://github.com/python-desert/desert/issues/36
[19:06:43] <bjs> sazawal: okay I'm still not seeing why you need to do any looking at the types of the queues at any point here
[19:06:47] <mawk> Evolver: so as SnoopJ either you use an old version, or you use urllib3 or urllib directly, or you write into a socket directly, whichever you like the most
[19:07:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:07:54] <Evolver> mawk: ok thanks. That's a good summary.
[19:08:11] <bjs> sazawal: the function that creates the Thread(target=transform, args=[q4, qo])  well it knows qo is the mp "out" queue and it knows q4 is the threading Queue doesn't it?  the thing creating the Queues and hooking them up to all the boxes clearly should already know what types the queues are it just created are
[19:09:24] <mawk> actually I'm not sure the old requests version would work Evolver
[19:09:26] <mawk> https://github.com/psf/requests/pull/2323
[19:09:31] <mawk> or else you have to python 2
[19:09:37] <sazawal> bjs, Suppose qo is not multiprocessing queue, it will give i function q2,q3 and qo, and we don't need a transform function
[19:09:40] <mawk> the PR says "This is already requests behaviour on Python 3'
[19:10:27] <bjs> sazawal: but why would it not be a multiprocessing Queue? this is the thing I don't understand, the function that's doing this creating of queues and then passing them to all the threads *is handed* the multiprocessng queues from the parent (so it knows what type they are) and it just created the threading queues and it surely knows what types the things it just created are
[19:10:40] <bjs> sazawal: what does "transform" do exactly?
[19:11:50] <sazawal> bjs, transform just reads the data from q4 and puts it in qo. That is reading from a normal queue and putting it in multiprocessing queue
[19:12:23] <bjs> sazawal: ... why?  what
[19:12:33] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 258 seconds)
[19:12:37] <mawk> more exactly you need a python version less than 3.3 Evolver I think, and in any case python 2 should be good
[19:12:47] <mawk> see this: https://bugs.python.org/issue17849#msg187856
[19:12:50] *** Parts: akk (~akk@75.161.155.222) (+++)
[19:12:54] <bjs> sazawal: I don't understand why transform() exists at all
[19:12:54] *** Joins: andika (~andika@subs46-116-206-42-103.three.co.id)
[19:12:57] *** Joins: dyslexicat (~dyslexica@212.253.36.231)
[19:13:01] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[19:13:20] *** Joins: Blankspace (~abcd@user/blankspace)
[19:13:35] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[19:14:03] <Evolver> mawk: If urllib cannot do it, I'll write a function using sockets. I have to use Python 3.9 only.
[19:14:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:15:42] <mawk> yes, so HTTP/1.0 or HTTP/0.9 is quite easy to do manually, you don't have keep-alive or SSL to bother you
[19:15:48] <sazawal> bjs, Well because there is a function which the queue-manager uses to set up the queues, and this function has statements run one by one which sets up the whole thing. The queue-manager doesn't know prior to executing these statements if it is the last statement it is executing.
[19:15:50] <mawk> or maybe you have ssl but it's transparent
[19:15:52] <bjs> sazawal: if you want to write to the mp queue output, just ... do that? why all this juggling of types and having another queue and then copying over
[19:16:14] *** Quits: cedric (~cedric@2a01:cb11:867:c200:aaf3:64f9:e2a5:8571) (Quit: Konversation terminated!)
[19:16:16] *** Quits: andika (~andika@subs46-116-206-42-103.three.co.id) (Remote host closed the connection)
[19:16:22] <Evolver> mawk: I do have ssl but hopefully it's transparent (like you said)
[19:16:25] *** Joins: Blankspace (~abcd@user/blankspace)
[19:16:41] <bjs> sazawal: I don't understand,  why doesn't this "queue-manager" know that it's the last box? can't it just give the last box the mp queue to output to?  and I still have no idea _where_ you'd be doing these type checks
[19:17:09] <mawk> I don't think any header is strictly necessary other than Host, so you send GET / HTTP/0.9\r\nHost: thewebsite.com\r\n\r\n you will see if it works
[19:17:28] <supakeen> The Host header isn't necessary either.
[19:17:34] <mawk> well not necessary in theory
[19:17:39] <supakeen> And sending HTTP/0.9 is a bad plan (1.0 is fine).
[19:17:40] <mawk> but it could be a shared IP
[19:17:42] <Evolver> mawk: Thanks. If SSL is not transparent, then it gets a lot harder.
[19:17:48] <Evolver> supakeen: some sites don't support 1.0
[19:17:50] <mawk> Evolver: it is, you just use the ssl module
[19:17:57] <supakeen> Evolver: Even less support 0.9 :)
[19:18:10] <mawk> many sites are shared IP, so if you don't send the host header you won't get the right thing
[19:18:15] <Evolver> supakeen: 0.9 is something they forgot about. They blocked 1.0 and 1.1 for security reasons.
[19:18:27] *** Quits: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[19:18:56] *** Quits: jazzy (~jaziz@2600:380:8644:8168:f908:1770:b71c:1691) (Ping timeout: 256 seconds)
[19:19:00] *** Joins: ikus060 (~ikus060@96.127.228.230)
[19:19:18] <grym> are we doing something ~~naughty~~
[19:19:25] *** Joins: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at)
[19:19:34] <sazawal> bjs, There is only one place I want to do the type check. Because queue-manager is provided with the output queue.
[19:19:38] <Evolver> grym: no, not at all. just reading an RSS feed. http2.0 is also allowed.
[19:19:47] <bjs> sazawal: but "the output queue" is always going to be the multiprocessing queue?
[19:20:02] <sazawal> bjs, Let me check let me check if I can tell the queue manager that it is the last box.
[19:20:04] <bjs> or at least, is always the queue to output to, why would it need to check? just have the last thing output to the otuput queue
[19:20:19] <bjs> sazawal: ... what is this queue-manager even doing if it doesn't know anything about the queues, or the boxes
[19:20:34] *** Joins: andika (~andika@subs46-116-206-42-103.three.co.id)
[19:20:42] *** Quits: andika (~andika@subs46-116-206-42-103.three.co.id) (Remote host closed the connection)
[19:21:01] *** Joins: andika (~andika@subs46-116-206-42-103.three.co.id)
[19:21:04] <sazawal> bjs, Yes until now it was supposed to be the multiprocessing queue. But now I also need a subnetwork of queues because one of the functions in this box need to run other functions to complete its own computations
[19:21:30] <bjs> sazawal: so... where's the issue?  what would you do differently if the output queue was a threading queue instead of a multiprocessing quuee?
[19:21:39] <bjs> do you mean you have *many* queue-managers? one for each box?
[19:22:37] <sazawal> If the output queue is not a multiprocessing queue, then I would not attach an extra function at the end which takes in the data from the last box through normal queue and puts it in the out-queue (multiprocessing)
[19:23:04] <sazawal> Yes now I would have many instances of queue-manager class, that's how I thought it should work.
[19:23:21] <bjs> sazawal: but that makes no sense, surely the "top" queue-manager would just give the last box the multiprocessing queue as the output queue
[19:23:31] <bjs> and the first one the multiprocessing queue as the input queue
[19:23:34] <bjs> why does the queue-manager care?
[19:23:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:23:51] <sazawal> Not all the functions would need a queue-manager, only when it needs other functions to complete its own thing then it would need a queue-manager
[19:23:56] *** Quits: andika (~andika@subs46-116-206-42-103.three.co.id) (Remote host closed the connection)
[19:24:07] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:24:55] <bjs> sazawal: but checking the type of the output queue and throwing it straight into multiprocessing seems wrong?
[19:25:22] <bjs> what if there was more boxes after this one?
[19:25:34] <sazawal> bjs, Yes that's what I am thinking. That the queue-manager should know the last box and give it the out-queue be it a normal queue or multiprocessing, instead of attaching another 'transform' function
[19:25:37] <bjs> and ... why didn't whatever gave you the 'output' queue just give you the multiprocessing queue in that case?
[19:25:41] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[19:25:44] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[19:25:47] <bjs> sazawal: this transform function seems silly why does it even exist?
[19:25:57] *** Quits: emika (~emika@83.136.182.131) (Ping timeout: 252 seconds)
[19:26:00] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:26:05] <sazawal> bjs, Yea it does seem stupid :(
[19:26:07] <bjs> just, when you want a box to "output" back to the parent, give it the multiprocessing queue
[19:26:11] *** Joins: emika (~emika@185.207.249.98)
[19:26:12] <bjs> where's the issue?
[19:27:06] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Client Quit)
[19:27:07] <sazawal> bjs, Yes right. Let me see how do I get the last box.
[19:27:55] <bjs> sazawal: what does this queue-manager even do if it doesn't even know how the boxes are wired up together?
[19:28:13] <bjs> it can't "manage" any of the queues if it doesn't even know which box is first or last or anything?
[19:31:16] *** Parts: Kalium (~kalium@178.62.246.247) (Accept this gift, for the gods surely won't.)
[19:31:35] <sazawal> bjs, Say I have a set function in the queue manager, it takes input the function-to-run, input-queue and other arguments if there are. What I do is, q1=QM.set(f,qo). The set function returns a normal queue q1 and appends (f,q0,q1) in a list. Similarly the list has other functions and its arguments in it. Now when I call QM.run() then it calls f(q0,q1)
[19:33:13] <sazawal> So QM.set is called multiple times appending the QM list. I somehow should tell QM.set that it is the last box, or maybe I can make another function when all the calls to QM.set are over.
[19:33:22] <bjs> sazawal: why can't you just say `QM.set(f, qin, out=qout)` or something?
[19:33:27] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[19:33:52] <bjs> so instead of creating another queue it uses qout
[19:34:07] *** Joins: Roey (~Roey@user/Roey)
[19:35:10] <sazawal> bjs, Then I have to make qout in another class which calls QM.set, and this class is the class which I want my user to make. My user would use this system to create modules running on top of this system.
[19:36:13] <bjs> sazawal: I'm confused again,  isn't the function you're calling QM.set inside of get some kind of input/output queues? where else does `q0` come from?
[19:36:24] <bjs> the first input had to come from the multiprocessing queue already..
[19:36:24] <sazawal> I don't want the users to be bothered about the intricacies of system by dealing with processes and queues
[19:36:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[19:37:05] <sazawal> qo which is the main source of all the data is coming from another module of the system, it is an online data stream
[19:37:16] <sazawal> And it is a multiprocessing queue
[19:37:25] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:54] <charrit69> SnoopJ: I made some tests. I have it working only inside the registered event function but if I try to make a own function for structuring the code it doesn't work
[19:37:55] <bjs> sazawal: but there are 2 multiprocessing Queues right? an input and an output, if this function knows about the input why does it not know about the output one
[19:37:59] <charrit69> https://bpa.st/BRXA
[19:38:13] <sazawal> The user would connect this input to the network created by him, get the output.
[19:38:40] <bjs> sazawal: you just said that the human 'user' writes `QM.set(f, qo)` to pass the input to f from the mp queue
[19:38:44] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[19:39:00] <sazawal> bjs, The output one I have created in the superclass of the class I want my user to write for his own purpose.
[19:39:04] <SnoopJ> charrit69, it's because you're only creating the generator in the second version, not using it for anything. Try `yield from prueba()`
[19:39:18] *** Quits: y1n (~y1n@84-115-65-69.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[19:39:21] <bjs> sazawal: so why can't the human user just write `QM.set(g, qo, out=out_queue)` on the last one?
[19:39:22] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[19:39:52] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[19:40:00] <bjs> sazawal: but the first thing in the queue-manager has to be attached to some "input" queue, and the last thing has to be attache to some "output" thing.  I don't see where the issue is
[19:40:33] <bjs> this whole thing seems weird, you have an input queue and an output queue and you have some things that take input and give output. You just attach the input to the input and the output to the output and you're done, why is there an issue here at all?
[19:41:20] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[19:41:31] <charrit69> It's the same use than in the main function, the yield has sense from the module manager... I think. I'll try to yield prueba()
[19:41:46] <sazawal> I gave my user a function to write these statements: say `def network(qo): q1=QM.set(f,qo) q2=QM.set(g,q1) return q2
[19:42:04] <bjs> sazawal: but why does it only accept an input?  surely these things also need to *output* stuff?
[19:42:18] <bjs> sazawal: but okay, if you want it to return its own queues, that's fine too
[19:43:04] *** Quits: masber (~masber@vpn-26.cscs.ch) (Ping timeout: 246 seconds)
[19:43:05] <bjs> sazawal: if you make it always create the output queue itself, then you need this transform() thing and that's silly, but sure.  But then why do you need to check types? *all* of the output queues you see will be threading Queues in that case
[19:43:18] <bjs> (because you literally just created it with a QM.set call)
[19:43:46] <charrit69> SnoopJ: it works. I'll need further knowledgement about yield in python. Thanks very much for your help
[19:43:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[19:43:54] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 240 seconds)
[19:44:24] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:45:07] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[19:45:24] <sazawal> bjs, See this is a sample network function which I want my user to write. https://bpa.st/PPEA . He is not bothered if the queues he is using are multiprocessing or normal queues or even what actually a queue is. Later on this code will be generated by a generator where user will provide a block-diagram.
[19:45:58] <bjs> sazawal: okay but this "network" is one of those sub-boxes right? there's a bigger one above that was actually the main one for the process
[19:46:26] <sazawal> bjs, No this network is the top/main one.
[19:46:47] <bjs> sazawal: it's returning queues...
[19:46:54] <bjs> there has to be something above it using them?
[19:47:13] <bjs> sazawal: this isn't a `Process(target=network, args=[some_mp_queue])` function
[19:47:34] <SnoopJ> charrit69, there is some discussion of generators in this excellent article on iteration in Python: https://nedbatchelder.com/text/iter.html
[19:47:51] <sazawal> Yes this function is called by the QM.run. QM.run is executed in a parallel process. So, all the thread queues created when network() was executed resides in the parallel process.
[19:48:05] <bjs> sazawal: but what does QM.run do with the returned queues?
[19:48:11] <bjs> it's returning 2 queues, what are they for? what uses them?
[19:48:26] <sazawal> bjs, I did Process(target=QM.run, args=(network,qin,qout))
[19:48:34] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Ping timeout: 240 seconds)
[19:48:55] <bjs> sazawal: why is it returning queues? who is using those returned queues? how are they being used?
[19:49:02] <sazawal> Then QM.run calls q_xyz=network(qin)
[19:49:24] <bjs> sazawal: but it's returning multiple queues?
[19:49:26] <sazawal> Then I do transmit(q_xyz,qout) also in QM.run
[19:49:35] <charrit69> SnoopJ: I'll check it out. Thanks again!
[19:49:53] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[19:49:55] <bjs> sazawal: but that doesn't work because your network returned 2 queues?
[19:50:00] <sazawal> Yes I need multiple queues as output. I gave an example of one queue to make it simpler.
[19:50:07] <bjs> sazawal: no your output returned 2
[19:50:21] <bjs> sazawal: do you want both of them to go to the same multiprocessing output queue?
[19:50:22] <sazawal> Let's just say qin and qout are list of multiprocessing queues
[19:50:30] <SnoopJ> charrit69, no problem, generators can seem pretty magical when you first see them :)
[19:50:40] <SnoopJ> (and the Nth time you see them...)
[19:50:48] <bjs> sazawal: Okay I'm still not seeing where in this process you need to check the types of any of the queues?
[19:50:49] <sazawal> The number of queues in qin are the same as number of queues in qout
[19:51:44] *** Joins: Fiji (~Fiji@user/fiji)
[19:51:44] <sazawal> bjs, If I get rid of transform() function, then I wouldn't need to check the type. For that I need to know the last box
[19:52:13] <bjs> sazawal: but in QM.run, you get given the multiprocessing queues?
[19:52:23] <bjs> so you know they're the multiprocessing queues
[19:52:30] <sazawal> So I would provide the last box my qout be it normal queue or multiprocessing queue, it would work.
[19:53:10] <bjs> sazawal: no this makes no sense, if QM.run is the thing multiprocessing calls then its input queues are multiprocessing Queues so you just always do the transform thing
[19:53:15] <bjs> sazawal: does anyone else call QM.run ?
[19:53:43] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[19:54:08] <sazawal> Yes in QM.run I gave multiprocessing queues, and until now it works good. I am not considering the case if one of my function needs to create a QM class instance and therefore make a subnetwork of its own. Then in that case I would provide QM.run both in and out normal queues.
[19:54:30] <bjs> sazawal: you seem confused
[19:54:39] <bjs> the need for transform() isn't really about multiprocessing vs normal queue
[19:54:39] <sazawal> bjs, There is only one call to QM.run
[19:55:00] <bjs> sazawal: it's because you're being handed output queues
[19:55:17] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Quit: Leaving)
[19:55:42] <bjs> sazawal: with the way you've set things up at the moment you *always* need a transform() call in QM.run
[19:55:56] <sazawal> bjs, Lol see, the whole point why I created the transform function because in QM.set the return queue is always normal queue, I thought that let's keep the return value a normal queue making it general for firstbox or lastbox
[19:55:57] <bjs> because the output queue passed to QM.run is not attached to anything
[19:56:23] <bjs> sazawal: it doesn't matter what the *type* is, it's the fact that your QM.set is creating a *new* queue for the output
[19:56:27] <sazawal> What I should instead do is return multiprocessing queue from QM.set if it is the last box
[19:56:34] <bjs> sazawal: no
[19:56:46] <bjs> if you make a *new* multiprocessing Queue in QM.set you still need transform()
[19:57:15] <sazawal> bjs, WHy?
[19:57:17] *** Joins: pnoud (~pnoud@user/pnoud)
[19:57:29] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:57:31] <bjs> sazawal: because QM.run takes an "output" queue
[19:57:40] <bjs> but it's not hooked up to anything. that's what transform does
[19:57:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:57:56] <sazawal> Oh let me think let me think
[19:58:20] <bjs> sazawal: you have a weird mix here, where QM.run takes an "output" queue but *everything else* creates its own output queue and returns it
[19:58:49] <bjs> and so obviously these two things clash because QM.run is given an output queue but then its box creates its own output and now it's sat holding two "output" queues that aren't attached
[19:58:50] <sazawal> QM.run is calling network, so network is executed in another process. Hmm so, I wouldn't have access to the output queue if it is created in QM.set, you are right.
[19:59:41] <bjs> this really has nothing to do with procesess either
[20:00:38] <sazawal> If I only give my input queue to QM.run and let it create the output queue, how would I get the output queue (multiprocessing queue) in the primary process?
[20:00:45] <bjs> sazawal: imagine you just had a sub-box you were talking about, only threading queues. You'd call `q1 = self.a.set(some_func, qo)` to get the queue. Then you'd call `QM.run(some_box, q1, ...)`  but what would the "output" queue be to pass to QM.run here?
[20:01:44] <bjs> sazawal: not easily, this is a very weird architecture
[20:02:00] <bjs> normally you'd do that, you'd give things input and output queues and network(qin, qout): ...
[20:02:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 245 seconds)
[20:02:13] <bjs> the first thing reads from qin, and the last thing writes to qout
[20:02:32] <sazawal> Oh
[20:02:47] <sazawal> Let me think
[20:03:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[20:04:21] *** Joins: zzy2357 (~zzy2357@121.35.185.193)
[20:04:44] *** Quits: zzy2357 (~zzy2357@121.35.185.193) (Client Quit)
[20:04:53] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[20:06:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[20:06:22] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[20:07:27] *** Joins: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz)
[20:07:37] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Quit: Leaving...)
[20:08:31] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[20:09:18] <sazawal> bjs, Yes `def network(qin,qout): q1=QM.set(f,qin) q2=QM.set(g,q1,output=qout)` would work. Cool!
[20:09:42] <sazawal> So QM.set would know g is the last box because the output queue is already provided to it
[20:09:44] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:10:35] <sazawal> I would do Process(target=QM.run,args=(network,qin,qout)) and run network(qin,qout) in QM.run
[20:10:44] <sazawal> This is cool
[20:10:54] *** Joins: srhm (~ascii@user/srhm)
[20:11:34] <sazawal> Then there would be no transform function, and also the subbox thing (which is inside a function) would work as I would make qin and qout as normal queues instead of multiprocessing queues
[20:11:39] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[20:11:42] *** Joins: derelict_ (~derelict@user/derelict)
[20:11:58] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[20:12:56] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:13:26] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Read error: Connection reset by peer)
[20:14:23] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[20:15:34] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 268 seconds)
[20:16:08] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:16:18] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[20:16:31] <bjs> sazawal: yes, all your issues just vanish
[20:17:04] <sazawal> Cool bjs, thanks
[20:17:36] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[20:18:16] <LuxuryMode> When running poetry install I am getting this error "ERROR: cryptography-3.4.7-cp36-abi3-macosx_10_10_x86_64.whl is not a supported wheel on this platform." I guess the issue is that this wheel is meant for macosx_10_10_x86_64 whereas I am on macOS 11.5. How can I resolve this or get the correct wheel for my OS?
[20:18:22] *** Joins: schumaml3 (~schumaml@dslb-178-002-188-136.178.002.pools.vodafone-ip.de)
[20:18:27] *** Quits: schumaml2 (~schumaml@dslb-094-216-175-195.094.216.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[20:18:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:19:25] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[20:19:30] *** Quits: LiftLeft (~LiftLeft@138.199.10.80) (Ping timeout: 240 seconds)
[20:20:38] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[20:20:42] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:21:44] <fassl> hey, does somebody know how to get the calling function from the stack in c?
[20:22:05] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[20:22:12] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[20:22:23] *** Joins: qlixed (~qlixed@181.45.80.239)
[20:22:29] <fassl> like inspect.stack()[1].function but from C
[20:22:31] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[20:22:35] <nedbat> fassl: wow, that sounds esoteric.  can you tell us more about the need?
[20:22:51] <nedbat> fassl: a simple thing could be to write that helper function in python, and call it from C
[20:23:01] *** Joins: nbin (~nbin@user/nbin)
[20:23:10] <nedbat> fassl: you can import modules, find attributes, and call functions from C, but it would be easier to do this in C
[20:23:18] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[20:23:29] <bjs> in Python you mean?
[20:23:35] <nedbat> in Python :)
[20:23:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:25:21] <fassl> nedbat, i have a command tree which i want to be able to execute via python. i guess you are right, i can just do that at the script side
[20:26:20] <fassl> though thought its not so heavy to do it in c, at least for the cpu in contrast to me ;)
[20:26:51] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8433-02bf-c0e0-ee2c.res6.spectrum.com)
[20:27:17] *** jpe__ is now known as sharperguy
[20:28:10] *** Joins: thecoder (~mrrobot@173.171.13.109)
[20:28:14] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[20:28:34] *** Joins: nbin (~nbin@user/nbin)
[20:29:38] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[20:30:40] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[20:30:52] <thecoder> hi, i'm trying to iterate values in a dictionary (a small search function) however, one of the values that comes back is a boolean val, is there anyway I can just skip over the value? https://pastebin.com/5tP4KBbe
[20:31:05] *** Joins: schumaml4 (~schumaml@dslb-188-104-191-129.188.104.pools.vodafone-ip.de)
[20:31:26] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[20:31:28] *** Joins: zeden (~zeden@user/zeden)
[20:31:52] <Repiphany> not type(bool) first
[20:32:08] <thecoder> ?
[20:32:14] <thecoder> Repiphany where lol
[20:32:17] *** Quits: wgwz (~wgwz@45.55.193.150) (Ping timeout: 258 seconds)
[20:32:18] <thecoder> thx by the way :)
[20:32:30] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[20:32:34] *** Quits: mgocobachi (~m@ancrae.com) (Ping timeout: 240 seconds)
[20:32:42] *** Quits: schumaml3 (~schumaml@dslb-178-002-188-136.178.002.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:32:56] <SnoopJ> fassl, you can use `inspect` from C, if you want to. If you are worried about how "heavy" it is, my immediate question is whether you're worrying about it because you've performed a measurement that tells you it needs to go faster.
[20:32:57] <Repiphany> if not isinstance(val, bool) and searchFor in val):
[20:32:57] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (Ping timeout: 250 seconds)
[20:32:58] *** Quits: dftrace (~dftrace@hopper.lethalbit.com) (Ping timeout: 240 seconds)
[20:33:14] <thecoder> Ahh
[20:33:22] *** Quits: laretta (~laretta@user/laretta) (Ping timeout: 240 seconds)
[20:33:26] *** Quits: zoid (~zoid@user/taxationistheft) (Ping timeout: 265 seconds)
[20:33:30] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 240 seconds)
[20:33:30] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 240 seconds)
[20:33:30] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[20:33:40] <thecoder> i'm seeing this isinstance alot lately, is this a new thing ? :O seems very powerful.
[20:33:47] *** Quits: northernsage (~dobox@138.197.11.208) (Ping timeout: 255 seconds)
[20:33:49] *** Quits: oxipital (~oxipital@165.225.60.216) (Ping timeout: 250 seconds)
[20:33:49] *** Quits: utunbu (~utunbu@user/utunbu) (Ping timeout: 250 seconds)
[20:33:49] *** Quits: poorboy (~poorboy@104.131.46.87) (Ping timeout: 250 seconds)
[20:33:49] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (Ping timeout: 258 seconds)
[20:33:49] *** Quits: Vultyre (~vultyre@user/vultyre) (Ping timeout: 258 seconds)
[20:33:50] <KirkMcDonald> No, it is not new.
[20:33:52] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Ping timeout: 245 seconds)
[20:33:54] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[20:33:54] *** Quits: leosilva (~leosilva@canonical/leosilva) (Ping timeout: 240 seconds)
[20:33:54] <thecoder> I see
[20:33:57] <nedbat> fassl: the run-time cost of the python vs the C will be the same, since your C code will literally be the equivalent of the Python code.
[20:34:07] <Repiphany> or a try-except and just skip TypeErrors on "searchFor in val"
[20:34:09] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (Ping timeout: 252 seconds)
[20:34:12] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 258 seconds)
[20:34:12] *** Quits: oisota (~oisota@user/oisota) (Ping timeout: 258 seconds)
[20:34:13] <fassl> SnoopJ, did not take any measurements, just a gut feeling
[20:34:16] *** Quits: byzandula (~byzandula@beerbq.net) (Ping timeout: 272 seconds)
[20:34:18] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 252 seconds)
[20:34:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:30] *** Quits: ilmostro (~ilmostro@user/ilmostro) (Ping timeout: 276 seconds)
[20:34:44] *** Quits: charrit69 (~charrit69@111.red-83-56-34.staticip.rima-tde.net) (Quit: Konversation terminated!)
[20:35:09] *** Quits: drogas (~drogas@jump2.jet.uk) (Ping timeout: 276 seconds)
[20:35:09] <SnoopJ> fassl, relying on one's gut is a dangerous thing when it comes to this kind of micro-optimization, I'd recommend just using `inspect`
[20:35:11] *** Quits: xernaron (~xernaron@box.xernaron.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[20:36:02] <fassl> nedbat, true, makes sense
[20:36:16] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[20:36:28] *** Joins: dskullz (~dskull@user/dskull)
[20:36:36] *** Quits: tspng (~tspng@2a02:168:a1a1:1:1523:116b:6040:d599) (Remote host closed the connection)
[20:37:03] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[20:37:31] *** Joins: reset (~reset@user/reset)
[20:37:32] <fassl> SnoopJ, you're right, make it work, optimize later if necessary
[20:37:34] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[20:37:45] <SnoopJ> yup :)
[20:37:46] <fassl> sometimes i just lose track of the important
[20:38:02] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 258 seconds)
[20:38:05] *** dskullz is now known as dskull
[20:38:28] <fassl> talking to you guys i realized, as i create the script with jinja2, and i already have the function name there, i can just pass it, no need for not even inspect...
[20:38:41] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:39:36] <fassl> i guess its time for a break :D thanks
[20:39:37] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 268 seconds)
[20:39:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:39:50] *** Joins: dstufft (~dstufft@shitbird.caremad.io)
[20:40:07] <thecoder> Repiphany, thanks but it fails on the ```for val in values[key]
[20:40:35] *** Joins: ali1234 (~al@user/ali1234)
[20:40:44] <thecoder> so it finds a bool value in the loop and can't iterate there because of the bool.
[20:40:50] <thecoder> so I need to catch it before then I guess.
[20:40:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:41:20] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:41:26] *** Joins: utunbu_ (~utunbu@user/utunbu)
[20:41:41] <Repiphany> Dictionaries have a .values() function so you don't need to do "for key in dict: value = dict[key]; ..."
[20:42:15] *** Joins: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net)
[20:42:27] <thecoder> ohhh I see
[20:42:30] <Repiphany> also makes using the name "values" for a dictionary a bit weird (if that's what that is)
[20:42:31] <thecoder> *doh*
[20:42:40] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:42:49] *** Joins: leosilva (~leosilva@canonical/leosilva)
[20:43:19] *** Joins: byzandula (~byzandula@beerbq.net)
[20:43:35] *** Joins: mgocobachi (~m@ancrae.com)
[20:43:36] *** Joins: energizer (~energizer@user/energizer)
[20:43:37] *** Joins: tkazi (~tkazi@user/tkazi)
[20:43:42] *** Quits: Deneb (~johnch@37.111.189.80.dyn.plus.net) (Quit: Leaving)
[20:43:44] *** Joins: dftrace (~dftrace@hopper.lethalbit.com)
[20:43:49] *** Joins: wgwz (~wgwz@45.55.193.150)
[20:43:59] *** Joins: trashcatt (~trashcatt@znc.trashcat.xyz)
[20:44:08] *** Joins: zoid (~zoid@user/taxationistheft)
[20:44:18] *** Joins: CombatVet (~c4@user/combatvet)
[20:44:29] *** Quits: dyslexicat (~dyslexica@212.253.36.231) (Quit: leaving)
[20:44:58] *** Joins: laretta (~laretta@user/laretta)
[20:45:10] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[20:45:10] *** Joins: jiffe (~jiffe@mail.nsab.us)
[20:45:33] *** Joins: bkhl (~bkhl@user/bkhl)
[20:46:22] *** Joins: northernsage (~dobox@138.197.11.208)
[20:46:34] *** Joins: oisota (~oisota@user/oisota)
[20:46:37] <pulec> there was new feature in python 3.9 if I recall correctly, print for debuging, instead of printing: "print('variable a', a)" there was some shorter way, with = or how
[20:46:41] <pulec> I failed to google it...
[20:46:42] <AhmedAmerican> scrapy can't render JavaScript ?
[20:46:51] <Repiphany> pulec: f'{a=}'
[20:46:59] <pulec> yeah that, thanks!
[20:47:14] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:47:29] *** Joins: Betal (~Beta@user/betal)
[20:47:33] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:48:41] *** Joins: Vultyre_ (~vultyre@user/vultyre)
[20:48:49] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:48:57] *** Joins: morteza24 (~morteza24@188.122.101.61)
[20:49:07] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:49:44] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[20:50:57] *** Joins: seednode (~seednode@user/seednode)
[20:52:11] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[20:52:16] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[20:53:54] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[20:54:08] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[20:54:19] <SnoopJ> AhmedAmerican, scrapy doesn't render anything at all
[20:54:53] <jinsun> pulec: that is available from 3.8 actually
[20:56:03] <pulec> jinsun: thanks, I will know what to google when I will forget it again
[20:56:11] <pulec> should keep some notes of things I forget often, heh
[20:57:43] *** Joins: seednode9 (~seednode@user/seednode)
[20:58:03] *** Quits: hyperknot (~hyperknot@2a02:3033:409:3e4b:4d4b:1a5a:91b:ed89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:13] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:52] <SnoopJ> in your defense, the syntax has been changing a lot lately :)
[20:59:01] *** Joins: dez (uid92154@user/dez)
[20:59:03] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 265 seconds)
[20:59:03] *** seednode9 is now known as seednode
[20:59:39] *** Joins: paravida (~myChateau@user/paravida)
[21:00:20] <pulec> syntax for print command? I didn't see anything that was removed
[21:00:42] <SnoopJ> I mean the new format specifier
[21:01:09] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 276 seconds)
[21:01:16] *** Joins: esv (~esv@72.11.45.232)
[21:02:23] <esv> hey folks, is there a way to make pip3 trust the intermediary certificate provided by a proxy server instead of having to trust the pypi.org and files.pythonhosted.org servers?
[21:02:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 240 seconds)
[21:03:13] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Quit: Do you type on  your PS1 or play on your PS1?)
[21:03:19] *** Quits: paravida (~myChateau@user/paravida) (Read error: Connection reset by peer)
[21:03:39] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[21:04:17] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[21:06:23] *** Joins: paravida (~myChateau@user/paravida)
[21:07:18] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:08:24] <SnoopJ> esv, I think you might want to override the bundled CA certificate store? https://pip.pypa.io/en/latest/cli/pip_install/#ssl-certificate-verification
[21:08:34] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[21:08:39] *** Joins: tspng (~tspng@2a02:168:a1a1:1:b079:ead4:a0d8:e81)
[21:09:51] *** Quits: sebastianos (~sebastian@user/sebastianos) (Read error: Connection reset by peer)
[21:10:16] *** Joins: tspng_ (~tspng@2a02:168:a1a1:1:7517:a002:3c96:ef0d)
[21:10:24] *** Joins: seednode6 (~seednode@user/seednode)
[21:10:39] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 265 seconds)
[21:10:39] *** seednode6 is now known as seednode
[21:10:54] *** Parts: morteza24 (~morteza24@188.122.101.61) (Leaving)
[21:10:59] <SnoopJ> It doesn't point it out there, but you can also set the value of `cert` in pip.conf
[21:11:05] *** Joins: sebastianos (~sebastian@user/sebastianos)
[21:11:27] *** Joins: setuid (sid191390@canonical/setuid)
[21:12:35] <setuid> If I have a method that takes key=value args (myMethod(foo=bar, bar=blort, blort=quux), and have a conditional that inserts one of those as optional, how do I pass that in? As a string?
[21:12:44] <setuid> I'm getting: TypeError: Method must be called with keyword args.
[21:13:04] <setuid> but I am passing in the exact same values as if I statically wrote out the function with them
[21:13:24] *** Quits: tspng (~tspng@2a02:168:a1a1:1:b079:ead4:a0d8:e81) (Ping timeout: 256 seconds)
[21:13:25] <SnoopJ> setuid, you can prepare a dictionary of args you want to pass and call as `myMethod(**thatdict)`
[21:14:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:14:33] <esv> thanks SnoopJ
[21:14:36] *** Quits: Psi-Jack (~psi-jack@user/psi-jack) (Remote host closed the connection)
[21:16:06] *** Joins: seednode5 (~seednode@user/seednode)
[21:16:22] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 258 seconds)
[21:16:22] *** seednode5 is now known as seednode
[21:16:26] <SnoopJ> esv, cautionary note: it looks like there's some weirdness with those environment vars, and REQUESTS_CA_BUNDLE wins over all the rest. https://github.com/pypa/pip/issues/10147
[21:16:33] <setuid> Ok, that worked
[21:17:18] *** Joins: mx7ca (~max@user/mx7ca)
[21:17:54] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[21:19:41] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[21:19:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:20:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[21:20:56] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 268 seconds)
[21:21:17] *** Quits: aslicedbanjo (~aslicedba@host31-48-145-70.range31-48.btcentralplus.com) (Quit: Leaving.)
[21:22:20] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[21:23:02] *** Quits: cman (~Cody@2603-9000-d104-8465-59c1-7564-f6c0-e626.inf6.spectrum.com) (Ping timeout: 245 seconds)
[21:23:51] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[21:24:03] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[21:24:05] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[21:24:18] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[21:25:38] *** Quits: echelon (~echelon@gateway/tor-sasl/steerpike) (Quit: echelon)
[21:26:00] *** Joins: cman (~Cody@2603:9000:d104:8465:3c57:d567:2a1b:63be)
[21:26:13] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[21:31:12] <esv> thanks
[21:33:24] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Remote host closed the connection)
[21:34:37] *** Joins: audiocat (~audio@2603-8081-1800-00ad-8765-16b9-2bc4-4a15.res6.spectrum.com)
[21:35:14] *** Joins: Auron (~Auron956@user/auron)
[21:35:28] *** Joins: hafat (~hafat@95.70.168.45)
[21:37:39] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:38:17] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[21:38:18] *** Quits: qlixed (~qlixed@181.45.80.239) (Ping timeout: 240 seconds)
[21:38:41] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[21:38:46] <AhmedAmerican> is that kind of anti-bot techniques ? https://bpa.st/FS7Q
[21:38:47] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f) (Quit: Textual IRC Client: www.textualapp.com)
[21:38:49] *** Quits: ali1234 (~al@user/ali1234) (Ping timeout: 250 seconds)
[21:39:45] *** Quits: MaximB (~Guest89@87.68.165.19) (Quit: Client closed)
[21:39:46] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[21:41:38] *** Joins: pnoud (~pnoud@user/pnoud)
[21:43:06] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[21:43:16] *** Joins: seednode0 (~seednode@user/seednode)
[21:43:35] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 258 seconds)
[21:43:35] *** seednode0 is now known as seednode
[21:44:02] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:44:36] <randall> esv: You're probably looking for "certificate pinning", but be aware that it will break every time after a certificate renewal.
[21:44:44] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[21:44:54] *** Joins: greenx (~greenx@user/greenx)
[21:47:22] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[21:47:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:47:29] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[21:48:32] *** Quits: greenx (~greenx@user/greenx) (Client Quit)
[21:49:04] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[21:50:37] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:52:08] <bjs> AhmedAmerican: is what
[21:52:21] *** Joins: qlixed (~qlixed@host172.181-9-125.telecom.net.ar)
[21:52:37] <AhmedAmerican> bjs: meant the response which outputted
[21:52:50] <bjs> AhmedAmerican: you didn't include the response, what does it say?
[21:53:00] <AhmedAmerican> OPS, my mistake
[21:53:44] <AhmedAmerican> bjs: https://bpa.st/H5TA here's it
[21:54:12] *** Quits: ambv (~ambv@c138-59.icpnet.pl) (Quit: Bye)
[21:54:20] <grym> AhmedAmerican: smells like cloudflare?
[21:54:37] *** Quits: ethoxy (~root@echelon.lucif3r.ru) (Quit: brb)
[21:55:01] <rany> grym, I doubt a website on gov.cn would use cloudflare ;p
[21:55:06] <AhmedAmerican> grym: according to that JS function, seems so https://bpa.st/DIJQ
[21:55:16] <grym> rany: why?
[21:55:25] <grym> oh, well.
[21:55:26] <grym> heh
[21:55:27] <grym> maybey
[21:56:47] <rany> AhmedAmerican, it doesn't return this for me, maybe your ip address has low reputation?
[21:57:10] <AhmedAmerican> rany: you able to get the actual content ?
[21:57:16] <rany> AhmedAmerican, yes
[21:57:24] <grym> new hypothesis: cn sends whatever http codes they want
[21:57:40] <AhmedAmerican> Hmm, might be GEO location block then ?
[21:57:44] <grym> but wiki lists cloudflare as a known sender of 521
[21:57:45] <grym> https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#Cloudflare
[21:58:12] <rany> i'm getting 200 and the regular web page, so mhm
[21:58:17] <bjs> grym: I mean any website can send any http code they want
[21:58:22] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[21:58:37] <bjs> there might be cloudflare somewhere between here and there though, who really knows :P
[21:58:38] <AhmedAmerican> rany: cool, will check that using proxy then
[21:58:43] <grym> yeah, hard to say
[21:58:59] <grym> not amazingly inclined to traceroute it :D
[21:59:38] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[21:59:40] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Excess Flood)
[22:00:46] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[22:04:19] *** Joins: BillyZane (~BillyZane@91.196.220.173)
[22:06:02] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:06:09] *** Joins: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch)
[22:06:21] *** Joins: morteza24 (~morteza24@138.199.40.180)
[22:06:49] *** Joins: death916 (AdiIRC@user/death916)
[22:08:43] *** Quits: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net) (Quit: Client closed)
[22:10:02] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:10:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[22:11:16] *** Joins: raxor2k (~raxor2k@185.82.108.174)
[22:11:21] <raxor2k> graingert: are you here
[22:12:29] *** Joins: pnoud (~pnoud@user/pnoud)
[22:12:55] <raxor2k> https://bpa.st/3BDQ can i make a combination of both schmas ?
[22:13:01] <raxor2k> schemas
[22:13:57] *** Joins: rsx (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de)
[22:14:15] *** Quits: audiocat (~audio@2603-8081-1800-00ad-8765-16b9-2bc4-4a15.res6.spectrum.com) (Ping timeout: 252 seconds)
[22:14:20] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[22:14:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:15:25] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:15:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:15:42] *** Joins: ali1234 (~al@user/ali1234)
[22:15:49] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:17:19] *** Quits: stevieh (~skrodzki@adsl-84-227-248-244.adslplus.ch) (Ping timeout: 258 seconds)
[22:17:20] *** Quits: tspng_ (~tspng@2a02:168:a1a1:1:7517:a002:3c96:ef0d) (Quit: Leaving, bye!)
[22:17:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[22:18:05] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:19:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[22:19:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:20:20] *** Parts: mx7ca (~max@user/mx7ca) ()
[22:20:32] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:21:26] *** Joins: lorcab (~user@197.251.194.240)
[22:22:40] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[22:23:54] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:24:58] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[22:25:14] *** Joins: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net)
[22:25:28] *** rsx is now known as Guest9710
[22:25:34] *** Quits: Guest9710 (~dummy@ppp-188-174-153-141.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[22:26:33] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[22:26:37] *** Joins: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de)
[22:28:16] *** Joins: seednode1 (~seednode@user/seednode)
[22:28:42] *** Quits: morteza24 (~morteza24@138.199.40.180) (Quit: Leaving)
[22:29:06] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 252 seconds)
[22:29:06] *** seednode1 is now known as seednode
[22:29:27] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[22:29:55] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:29:58] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[22:30:21] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:31:06] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 240 seconds)
[22:31:34] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:33:28] *** Joins: rama (~rama@2601:640:10c:6800:a162:375a:3f46:814a)
[22:36:15] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[22:36:54] *** Quits: rama (~rama@2601:640:10c:6800:a162:375a:3f46:814a) (Client Quit)
[22:38:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:39:59] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:9e4:59cd:fc2f:859f)
[22:40:29] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[22:41:02] *** Quits: rajkosto (~rajkosto@178-221-125-154.dynamic.isp.telekom.rs) (Ping timeout: 265 seconds)
[22:41:21] *** Joins: hyperknot (~hyperknot@dynamic-046-114-095-237.46.114.pool.telefonica.de)
[22:42:27] *** Joins: pnoud (~pnoud@user/pnoud)
[22:42:58] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[22:43:16] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[22:43:22] *** Quits: pnoud (~pnoud@user/pnoud) (Read error: Connection reset by peer)
[22:43:26] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:46:00] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:46:53] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[22:47:12] *** Joins: zebrag (~chris@user/zebrag)
[22:47:16] *** Quits: jpcanepa (~jpcanepa@2800:300:62b1:a600::c) (Read error: Connection reset by peer)
[22:48:10] *** Quits: rsx (~dummy@ppp-188-174-136-255.dynamic.mnet-online.de) (Quit: rsx)
[22:48:12] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[22:48:27] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[22:49:06] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Ping timeout: 240 seconds)
[22:49:19] *** Quits: hafat (~hafat@95.70.168.45) (Quit: Leaving)
[22:49:31] *** Joins: seednode4 (~seednode@user/seednode)
[22:49:39] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:49:46] *** Quits: seednode (~seednode@user/seednode) (Ping timeout: 240 seconds)
[22:49:46] *** seednode4 is now known as seednode
[22:50:39] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[22:50:55] *** Joins: mexen (uid495612@user/mexen)
[22:51:07] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:51:33] *** Joins: Akuli (~Akuli@82-203-161-154.bb.dnainternet.fi)
[22:52:46] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[22:53:07] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[22:53:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:54:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[22:54:15] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[22:54:27] *** Quits: Linux77 (~kvirc@186.235.105.168) (Ping timeout: 255 seconds)
[22:54:56] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[22:55:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:56:16] *** Joins: Forty-Bot (~kvirc@pool-74-96-87-9.washdc.fios.verizon.net)
[22:56:20] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:56:37] *** Quits: kdc (~kdc@196.211.197.189) (Quit: kdc)
[22:58:02] <thecoder> .
[22:58:19] <thecoder> Repiphany - I got it working, it was much more simpler than what I was doing. :)
[22:59:00] <thecoder> basically I had to use for v in dict: if searchFor in v["Name"]: return v["Value"]
[22:59:08] *** Parts: setuid (sid191390@canonical/setuid) ()
[22:59:59] *** Quits: raxor2k (~raxor2k@185.82.108.174) ()
[23:00:57] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[23:01:09] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:01:14] <domhnall> 'essentially'
[23:01:28] *** Quits: hyperknot (~hyperknot@dynamic-046-114-095-237.46.114.pool.telefonica.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:01:41] <thecoder> domhnall yeah thats a lot more appropriate. thanks :)
[23:03:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:04:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:05:01] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[23:05:33] *** Joins: SuperLag (~akulbe@user/superlag)
[23:05:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 268 seconds)
[23:05:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[23:06:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[23:07:24] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[23:08:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:12:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:12:47] *** Joins: rama (~rama@2601:640:10c:6800:fc8a:66f3:cc8e:781e)
[23:12:53] <rama> v
[23:12:54] <rama> Should fstrings be avoided within exceptions? is it "better" to use .format?
[23:13:37] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:13:40] <hodapp> can't think of why; wouldn't most problems with f-strings end up being parse errors rather than runtime errors?
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:14:03] <hodapp> whereas with .format it's a little bit easier to get the numbering/ordering wrong in such a way it throws an exception?
[23:14:58] <nedbat> rama: I also don't have a reason to avoid fstrings. have you heard a reason?
[23:15:04] *** Joins: SilverFox (~joe@64.223.223.162)
[23:15:04] *** Joins: justache (~justache@user/justache)
[23:15:34] <rama> I think its something to due w/ deffered evaluation of the string? I'm not sure of the reasoning, another engineer on the team was talking about it....
[23:15:35] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[23:16:14] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:16:18] <ChrisWarrick> `raise Exception(f"{foo}")` and `raise Exception("{}".format(foo))` both evaluate at the same time
[23:16:26] <grym> for logging, though, f-strings are doing double work
[23:16:39] <grym> logging defers formatting until it needs to do it, aiui
[23:16:47] <SilverFox> Hey #python! Im thinking of trying to put together a little simple statusboard for some of the services i run around the place, just raspberry pis and other lil things. i think ill be able to tell everything i want just by using a curl or ping command, see if a host or site is up but im not sure where to start, ive heard python can do web pages and that could work really well! my current idea is to
[23:16:50] <SilverFox> setup a raspberry pi in kiosk mode, no DE just xorg or something, and display a python application in fullscreen. Where should i start?
[23:17:16] <SilverFox> Something as simple as 6 large boxes dividing the screen and turning green/red would be all i need :3
[23:17:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:18:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:23] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:19:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:19:34] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Remote host closed the connection)
[23:20:59] <deniska> SilverFox: well, python supports various GUI frameworks for X11, or you can make some sort of console TUI app using a library like urwid
[23:21:02] *** Joins: esmailelbob (~esmailelb@41.232.241.14)
[23:21:18] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[23:21:25] <SilverFox> deniska: I guess so, a local web application wouldent be better?
[23:21:47] <deniska> SilverFox: if you are fine with writing some html and perhaps a few lines of js, it's an option too
[23:22:00] <SilverFox> deniska: Ill start with urwid~
[23:22:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:22:20] *** Quits: esmailelbob (~esmailelb@41.232.241.14) (Client Quit)
[23:22:47] <deniska> my first instinct would be to grab tkinter or pyside2 because I like GUIs a bit more than web pages :)
[23:23:14] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:24:39] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:25:05] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[23:25:56] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[23:26:14] *** Joins: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net)
[23:26:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:27:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:27:54] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:28:13] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[23:28:28] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[23:28:37] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[23:28:43] <rama> nedbat: its a styling opinion from the senior engineer. `I believe the reasoning is that asserts & exceptions are meant for programmers, so no need for a verbose message with embedded values. Instead we make use of the multiple arguments allowed when throwing an exception and give it a short message followed by any relevant variable values.`
[23:28:51] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[23:29:55] <nedbat> rama: I find it very helpful to include the values that caused the problem in exception messages.  Using arguments is good too, i should look into how those get presented to the user.
[23:30:09] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[23:30:47] <nedbat> rama: hmm,  raise Exception("Hello", 17, "abc")  produces this:   Exception: ('Hello', 17, 'abc')
[23:31:14] <nedbat> that's not as good as formatting the message yourself so you can clearly indicate what happened.
[23:31:42] <nedbat> rama: perhaps it depends on whether you think someone will catch and use the exception programmatically or not
[23:31:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:31:59] *** Quits: botfather (~botfather@botd.io) (Quit: Lost terminal)
[23:32:00] * SnoopJ finds he likes verbosity *best* when it's internally-facing information
[23:32:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:32:55] *** Quits: jess (~jess@libera/staff/jess) ()
[23:33:00] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[23:33:13] *** Quits: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[23:33:26] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[23:33:30] *** Joins: y1n (~y1n@84-115-64-138.wifi.dynamic.surfer.at)
[23:34:39] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[23:35:04] *** Quits: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Ping timeout: 256 seconds)
[23:35:21] <Yhg1s> nedbat: the usual choice is to add a __repr__ to your exception subclass that shows it the way you want in the traceback.
[23:35:33] *** Joins: nbao (~hot@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[23:35:45] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[23:36:00] <Yhg1s> eh, __str__ rather.
[23:36:46] <SnoopJ> Yhg1s, the advantage over an f-string being what, that the data is still stored in a structured way?
[23:36:52] <Yhg1s> yes.
[23:36:57] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Remote host closed the connection)
[23:36:59] <SnoopJ> makes sense
[23:37:07] <Forty-Bot> is there a way to programmatically discover the path to site-packages for a given virtualenv without activating it?
[23:37:18] *** Quits: sharperguy (~sharpergu@2001:16b8:5c50:5100:fd1a:812c:6af0:a515) (Ping timeout: 272 seconds)
[23:37:20] <Yhg1s> Forty-Bot: you never need to activate it.
[23:37:23] <SnoopJ> Forty-Bot, `path/to/venv/bin/python3 -m site` probably has what you want
[23:37:31] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[23:37:34] <Yhg1s> Forty-Bot: how would you do it while activating it? :)
[23:37:41] <Yhg1s> (What do you actually want to know it for?)
[23:37:41] *** Quits: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net) (Quit: Client closed)
[23:37:42] *** Joins: esmailelbob (~esmailelb@41.232.241.14)
[23:37:46] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[23:37:51] <SnoopJ> both good questions :)
[23:38:03] *** Quits: esmailelbob (~esmailelb@41.232.241.14) (Client Quit)
[23:38:05] <rama> nedbat: i think it was primarily for assertions, and this custom method called `require, reject` that we use. The lead wants messages like `Prefixes source cannot end in a `/`, "aa/"` rather than something like 'Prefix source "aa/" cannot end in a `/`'
[23:38:50] *** Joins: esmailelbob (~esmailelb@41.232.241.14)
[23:38:51] <Forty-Bot> Yhg1s: the virtualenv is located in the wrong place (as I am creating a distro package) so the python interpreter symlink is broken\
[23:38:57] <grym> rama: oo, two smells at once!
[23:39:03] <SnoopJ> rama, that sounds like a good case for a subclass specific to your require/reject formalism with a custom __str__ as Yhg1s describes.
[23:39:12] <Forty-Bot> so I can't just do venv/bin/python -m site
[23:39:34] <SnoopJ> you're vendoring a venv in a system package?
[23:39:42] <Forty-Bot> yes
[23:39:51] <Forty-Bot> this is for personal use
[23:39:56] *** Quits: esmailelbob (~esmailelb@41.232.241.14) (Client Quit)
[23:40:00] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 265 seconds)
[23:40:00] <Forty-Bot> to help manage configs that have to go in /etc
[23:40:10] <SnoopJ> ouch. is something twisting your arm and forcing you to do this? They are extremely not-relocatable.
[23:40:23] <Forty-Bot> after the package is installed, everything works great
[23:40:30] <Yhg1s> Forty-Bot: use chroot to run it with the right root?
[23:40:46] <Forty-Bot> there's no python in the root
[23:40:46] *** Joins: goldfish (~goldfish@user/goldfish)
[23:40:48] <Yhg1s> Forty-Bot: if you can't run the Python, you can't _reliably_ find out what it would use for site-packages.
[23:41:12] <Yhg1s> Forty-Bot: so you would just have to guess at venv/lib/python$version/site-packages.
[23:41:19] <Forty-Bot> e.g. I have something like $BUILD/path_to_my_virtualenv/{bin,lib}
[23:41:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:41:49] <Forty-Bot> right, and that's what I'm trying to avoid doing
[23:42:04] <Forty-Bot> so my guess doesn't break if I decide to upgrade python or whatever
[23:42:05] <Yhg1s> The way to avoid doing that is to make it so you can run the target Python.
[23:42:34] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:42:35] <Forty-Bot> is there a way to tell python "here is the virtualenv to use" other than symlinking it?
[23:43:15] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[23:43:25] <SnoopJ> a virtualenv is an isolated interpreter, not something an interpreter 'uses'
[23:43:36] <Yhg1s> Forty-Bot: it's actually the other way 'round: the virtualenv tells python where to find the 'real' python.
[23:43:51] <Forty-Bot> that doesn't seem right
[23:43:51] <Yhg1s> (for all the bits that aren't copied into the virtualenv)
[23:44:08] <Forty-Bot> since from what I can tell, venv/bin contains a symlink to the "real" python
[23:44:15] <SnoopJ> it isn't guaranteed to
[23:44:21] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:44:29] <SnoopJ> i.e. maybe it was created with --copies
[23:44:31] <Forty-Bot> so presumably python figures out what to do based on argv[0]
[23:44:54] <Yhg1s> Forty-Bot: kinda, yes.
[23:45:36] <Yhg1s> Forty-Bot: it uses argv[0] to check for pyvenv.cfg, which tells it where the real python is.
[23:45:38] <SnoopJ> There is a whole bunch of stuff that happens, much (but by no means all) of it documented here: https://docs.python.org/3/library/site.html
[23:45:49] *** Joins: swam (~swam@172-10-18-87.lightspeed.clmasc.sbcglobal.net)
[23:46:10] <Forty-Bot> ok, so can I point it at an arbitrary pyvenv.cfg?
[23:46:33] <Yhg1s> Forty-Bot: no, because pyvenv.cfg doesn't tell it where the *virtualenv* is. It tells it where the *real python* is.
[23:46:41] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[23:46:55] *** Quits: philectro (~quassel@2a02:2788:9a4:9f0:cfec:36a4:2496:17c0) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:46:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:47:03] <Forty-Bot> sure it does
[23:47:11] *** Quits: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) (Quit: Leaving.)
[23:47:11] <Yhg1s> Forty-Bot: it really doesn't.
[23:47:18] <Forty-Bot> the virtualenv is dirpart(pyvenv.cfg)
[23:47:43] <Forty-Bot> or rather, dirpart(argv[0])/..
[23:48:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:48:05] <Yhg1s> Forty-Bot: it isn't that simple, I'm afraid. But perhaps you are looking for exec -a?
[23:48:17] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[23:48:29] <Yhg1s> that is, 'exec -a /path/to/venv/bin/python /usr/bin/python'
[23:48:33] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[23:48:58] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[23:49:13] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[23:49:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[23:49:47] <SnoopJ> I think you have that backwards-ish. From the above: «If [when running Python] a file named “pyvenv.cfg” exists one directory above sys.executable...» i.e. the cfg is located relative to the running interpreter.
[23:49:56] <SnoopJ> (or this is my understanding anyway)
[23:50:08] *** Joins: ckdcreation (~ckdCreati@147.55.133.137)
[23:50:08] <Yhg1s> SnoopJ: who has what backward?
[23:50:33] <Yhg1s> (pyvenv.cfg is relative to argv[0], which is the virtualenv's python symlink)
[23:50:37] <SnoopJ> Yhg1s, responding to "the virtualenv is [relative location info]"
[23:50:50] <nedbat> Yhg1s: I guess this comes down to how finely sliced the exception classes are.  I don't want a new class for every message.
[23:50:58] <Yhg1s> SnoopJ: well, it happens to be both, really.
[23:51:14] <Yhg1s> nedbat: no, just one for every different way you would want to format it.
[23:51:25] <SnoopJ> Yhg1s, because pyvenv.cfg might include information about "hey, there's another Python $THERE and I want you to be aware of it so you can share its site?"
[23:51:48] <Yhg1s> SnoopJ: I'm not sure what you mean. pyvenv.cfg contains exactly that, for the real Python installation.
[23:51:59] <nedbat> Yhg1s: do you have an example I can see?
[23:52:05] *** Quits: fluffyballoon (~fluffybal@pat-verona-h.epic.com) (Quit: Client closed)
[23:52:05] *** Joins: emika3 (~emika@83.136.182.235)
[23:52:17] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[23:52:30] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 272 seconds)
[23:52:52] *** Joins: fluffyballoon (~fluffybal@pat-verona-h.epic.com)
[23:53:30] *** Quits: emika (~emika@185.207.249.98) (Ping timeout: 240 seconds)
[23:53:30] *** emika3 is now known as emika
[23:53:51] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[23:53:55] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[23:54:33] <SnoopJ> Yhg1s, maybe I'm not sure either. My understanding is that pyvenv.cfg is located relative to the interpreter whose site configuration is being initialized, period. In other words, the interpreter determines where that file is sought, you can't point at it.
[23:54:54] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
[23:54:58] <Yhg1s> nedbat:
[23:55:00] <Yhg1s> nedbat: https://bpa.st/F44A
[23:55:32] *** Quits: bobbi (~bobby@cpe688f2ec74c43-cm688f2ec74c40.cpe.net.fido.ca) (Quit: Leaving)
[23:55:32] <Yhg1s> SnoopJ: yes, that's what I said, and why I suggested exec -a. However, it's also true that the directory that contains pyvenv.cfg is the virtualenv.
[23:55:44] <Yhg1s> SnoopJ: you just can't tell Python to look there for pyvenv.cfg.
[23:55:51] <Yhg1s> (except via argv[0])
[23:56:02] <nedbat> Yhg1s: but that means that exception is only useful if the error makes sense as a "before: ___ after: ___" message.  When i have to say "Couldn't read configuration from {!r}", what do I do?
[23:56:19] *** Quits: derelict_ (~derelict@user/derelict) (Quit: WeeChat 3.2)
[23:56:30] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[23:56:40] <SnoopJ> Yhg1s, gotcha, I think we're saying the same thing then but mine's coming out all muddled and confused. `exec -a` sounds like it might make sense in this packaged-venv context.
[23:57:03] <Yhg1s> nedbat: if you want the information to be structured, you would make the message and the rest of the info separate arguments to the exception.
[23:57:52] <Yhg1s> you don't always care about the information to be structured, though, but it is sometimes quite helpful that NameError, for example, exposes the name that produced the error.
[23:59:44] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[23:59:51] *** Joins: inom (~inom@176.59.103.126)
