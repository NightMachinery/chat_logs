[00:01:12] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[00:01:36] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:02:09] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[00:03:58] *** Joins: vysn (~vysn@user/vysn)
[00:05:22] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[00:07:18] *** Joins: CaCode (~CaCode@user/cacode)
[00:08:25] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[00:08:36] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[00:08:53] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Ping timeout: 252 seconds)
[00:09:15] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[00:09:50] *** Quits: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt) (Quit: Lost terminal)
[00:10:05] *** Quits: PeGaSuS (ubuntu@user/pegasus) (Quit: Goodbye! - WeeChat 3.4)
[00:10:29] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:46] *** Joins: PeGaSuS (ubuntu@user/pegasus)
[00:12:48] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.4)
[00:13:40] *** Quits: drd (~drd@93-45-53-200.ip101.fastwebnet.it) (Ping timeout: 256 seconds)
[00:14:40] *** Joins: oarion7 (anonymous@user/oarion7)
[00:16:52] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[00:17:12] *** Quits: welder (~welder@vps-1ca6fb1a.vps.ovh.ca) (Quit: WeeChat 3.0)
[00:17:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694) (Read error: Connection reset by peer)
[00:17:21] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[00:18:26] *** Joins: welder (~welder@vps-1ca6fb1a.vps.ovh.ca)
[00:18:55] *** Joins: nunggu (~q@user/nunggu)
[00:20:00] *** Quits: welder (~welder@vps-1ca6fb1a.vps.ovh.ca) (Client Quit)
[00:20:11] *** Joins: welder (~welder@vps-1ca6fb1a.vps.ovh.ca)
[00:20:30] *** Quits: luva (~luva@37.120.197.54) (Remote host closed the connection)
[00:21:11] *** Joins: luva (~luva@146.70.62.236)
[00:21:35] *** Joins: TenochSLB (~Tenochyy@108-216-74-215.lightspeed.wchtks.sbcglobal.net)
[00:22:30] *** Joins: mongy (~mongy@user/mongy)
[00:23:14] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[00:23:49] *** Joins: unop (~unop@194.154.249.71)
[00:25:55] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:34c9:7321:99e2) (Remote host closed the connection)
[00:28:56] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:30:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:31:40] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:38:27] *** Joins: becks` (~becks`@bbcs-125-80.pub.wingo.ch)
[00:39:59] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[00:44:56] *** Joins: [diablo]4 (~diablo]@user/diablo/x-9068044)
[00:46:42] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 260 seconds)
[00:46:43] *** [diablo]4 is now known as [diablo]
[00:52:58] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[00:55:06] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[00:55:33] *** Quits: PeGaSuS (ubuntu@user/pegasus) (Remote host closed the connection)
[00:56:11] *** Joins: PeGaSuS (ubuntu@user/pegasus)
[00:59:34] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[01:02:58] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 256 seconds)
[01:04:04] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 250 seconds)
[01:06:41] *** Joins: zro (~zro@user/zro)
[01:08:24] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:09:30] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[01:10:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[01:11:08] *** Joins: [diablo] (~diablo]@user/diablo/x-9068044)
[01:11:56] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:12:56] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962)
[01:15:09] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:20:00] *** Quits: becks` (~becks`@bbcs-125-80.pub.wingo.ch) (Quit: Client closed)
[01:22:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:23:34] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 250 seconds)
[01:24:03] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[01:25:43] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:2da8:e0a9:f3ad:5962) (Quit: WeeChat 3.4)
[01:26:08] *** Joins: rcernin (~rcernin@101.189.141.138)
[01:27:54] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:29:38] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 250 seconds)
[01:31:02] *** Quits: Minvera (~Minvera@user/Minvera) (Quit: Leaving)
[01:31:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[01:31:39] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:35:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[01:40:22] *** Joins: n4dir (~user@i5E866640.versanet.de)
[01:40:28] *** Joins: bluedust (~bluedust@103.161.144.140)
[01:40:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:43:07] *** Joins: idego (~idego@user/idego)
[01:43:49] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[01:44:48] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 250 seconds)
[01:46:16] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[01:47:22] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[01:48:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:48:50] *** Joins: pj (~pj@ghettoforge/pj)
[01:48:52] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[01:50:17] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[01:52:57] *** Quits: dfinr (~dfinr@user/dfinr) ()
[01:53:07] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[01:54:05] *** Quits: adac (~adac@213-47-252-7.cable.dynamic.surfer.at) (Ping timeout: 250 seconds)
[01:56:09] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:56:42] *** Quits: chomwitt (~chomwitt@2a02:587:dc16:6e00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[01:58:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:58:58] *** Quits: magla (~gelignite@55d4248d.access.ecotel.net) (Quit: Stay safe!)
[01:59:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:00:05] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:00:09] <Filystyn> piotr_dom$ var=0; while read -r line; do var="$( bc -e 'var + line' -e 'quit' )"; done < 2019; echo "$var"
[02:00:14] <Filystyn> can't make it work
[02:00:30] <Filystyn> the bc part
[02:00:38] <Filystyn> not  sure how to aproach
[02:03:08] <e36freak> Filystyn: are they not integers?
[02:03:20] <e36freak> var=$(bc <<<"$var + $line")
[02:03:26] *** Joins: jmew (~jmew@user/jmew)
[02:03:37] *** Quits: YHVH (~yhvh@2601:982:8300:8090:49a1:32c6:3f50:c08f) (Ping timeout: 240 seconds)
[02:03:47] <e36freak> how would bc have access to your shell variables? you're providing it a literal 'var + line' and it has no idea what var or line are
[02:03:57] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[02:04:09] <Filystyn> they are floats
[02:04:31] <llua> nah
[02:04:38] <Filystyn> yeah but thatn "$car + $line" ?
[02:05:04] <Filystyn> seems working
[02:06:50] <e36freak> of course that whole thing could be replaced with awk '{tot += $1} END {print tot}' 2019
[02:09:09] *** Quits: knstn (~knstn@ppp-94-66-57-45.home.otenet.gr) (Quit: leaving)
[02:10:02] *** Quits: idego (~idego@user/idego) (Ping timeout: 240 seconds)
[02:13:01] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 240 seconds)
[02:14:45] *** Quits: fstd_ (~fstd@xdsl-89-1-56-234.nc.de) (Read error: Connection reset by peer)
[02:15:52] *** Joins: fstd (~fstd@xdsl-89-1-56-234.nc.de)
[02:17:24] *** Joins: rcernin (~rcernin@101.189.141.138)
[02:18:23] *** Joins: lotharn (~kvirc@2607:fb90:4af3:c977:df47:cf0c:3457:47bb)
[02:19:30] <Filystyn> what if I have ab= ... "$abcbd "
[02:19:41] <Filystyn> "{$abc}bd"  ?
[02:21:28] <twkm> hmm.
[02:22:15] <larryv> something will happen
[02:22:18] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[02:22:22] <Filystyn> normaly I do "$abc"'bd'
[02:22:24] <Filystyn> but
[02:22:38] <Filystyn> If I wnated to double qoute all
[02:22:45] <Filystyn> can I have it work
[02:22:47] <Filystyn> ?
[02:22:50] <emanuele6> "${abc}bd"
[02:22:56] <Filystyn> k
[02:22:58] <Filystyn> thx
[02:23:05] <twkm> {$abc} doesn't do what yu think, certainly not for ab=...
[02:23:20] *** Joins: roadt_ (~roadt@36.7.92.131)
[02:23:57] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.4)
[02:25:38] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 260 seconds)
[02:26:16] *** Quits: roadt (~roadt@36.5.93.137) (Ping timeout: 256 seconds)
[02:27:20] *** Joins: ouestbillie (~gallup@185.195.233.151)
[02:28:50] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:30:12] *** Quits: vil01 (~vilja@fwa5e16-76.bb.online.no) (Remote host closed the connection)
[02:30:34] *** Joins: vil01 (~vilja@fwa5e16-76.bb.online.no)
[02:31:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[02:34:32] *** Joins: idego (~idego@user/idego)
[02:34:50] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:37:08] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 268 seconds)
[02:39:36] <lotharn> parsing html is a great way to learn regex
[02:40:10] <lotharn> fight me
[02:42:04] <Friithian> but, it doesn't teach your what you're actually going to use it for
[02:43:55] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[02:44:18] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Quit: SCV ready!)
[02:46:33] <Blondie101010> lotharn:  you may want to go annoy more relevant channels...  no one here cares if you's crazy enough to parse html with regex
[02:47:47] <lotharn> i dunno its teaching modes and grouping and lookarounds.
[02:47:48] <kurahaupo1> Filystyn: "$ab""cd""as ma"ny" quot"es' as y'ou" need"
[02:48:02] *** Joins: ferdna (~ferdna@user/ferdna)
[02:48:18] <lotharn> stuff ive never used before
[02:48:43] <lotharn> takes alot of concentration.
[02:48:55] <lotharn> feels like science is happening.
[02:49:06] <kurahaupo1> lotharn: all stuff you should avoid using casually, only use it if you actually NEED it, because they will make your regexes much slower
[02:49:11] <Blondie101010> if you do it as a perpetual quest, sure... it'll teach force you to learn those things and eventually that the idea was stupid
[02:49:26] <llua> zzz
[02:49:33] <lotharn> oh its slow as shit!
[02:49:33] <Friithian> it's better to learn doing practical things that you'd actually do in real life
[02:49:46] <lotharn> but thats kinda a feature.
[02:50:02] *** Quits: nyex (~Thunderbi@177.84.107.20) (Remote host closed the connection)
[02:50:27] <Blondie101010> it's slow when it works (temporarily) because it's a bad solution\
[02:50:42] <lotharn> just look at this thing
[02:50:46] <lotharn> '(?:<strong>Address<\/strong><br>(?:\s|.)*?(?:<br>)(?:\s|.)*? - )([0-9]{5})'
[02:50:50] <kurahaupo1> Somewhere along the way we seem to have forgotten what "regular" means in "regular expression": linear time over the size of the input being scanned.
[02:51:13] <kurahaupo1> lotharn: that's a PCRE, not a standard regex
[02:51:21] <lotharn> true
[02:51:45] <kurahaupo1> Does anything other than Perl support (?<name>pattern)
[02:52:09] <kurahaupo1> Oh, those are literal <>, never mind
[02:52:14] <Blondie101010> yes, oniguruma is used in php
[02:52:22] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:52:24] <lotharn> i dunno alot of things are quasiperl
[02:52:56] <lotharn> but i think named groups are just regex
[02:53:20] <larryv> lolno
[02:53:36] *** Quits: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com) (Remote host closed the connection)
[02:53:37] <lotharn> -p options and whatnot.
[02:53:50] <kurahaupo1> lotharn: Named groups were added later, some time around 2000 IIRC
[02:55:27] <kurahaupo1> lotharn: Anything that includes "(?" is PCRE, not plain (basic or extended) regex, so named groups aren't "just" regex
[02:56:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:56:44] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[02:57:26] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[02:59:17] *** Quits: vil01 (~vilja@fwa5e16-76.bb.online.no) (Ping timeout: 240 seconds)
[02:59:44] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[03:01:20] *** Joins: chenqisu1 (~bhca7d@183.217.200.249)
[03:02:03] *** Quits: chenqisu1 (~bhca7d@183.217.200.249) (Read error: Connection reset by peer)
[03:02:04] *** Joins: vil01 (~vilja@fwa5e16-76.bb.online.no)
[03:03:27] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[03:06:51] *** Quits: XV8|Desktop (~xv8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Konversation terminated!)
[03:07:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:12:59] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:15:00] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:12] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[03:16:09] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:21:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:22:07] *** Quits: mat001_ (~mat001@72.28.108.216) (Remote host closed the connection)
[03:22:14] *** Joins: Betal (~Betal@user/betal)
[03:25:24] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:25:45] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Remote host closed the connection)
[03:26:09] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[03:28:01] *** Joins: hentai (~hentai@user/hentai)
[03:28:10] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 260 seconds)
[03:28:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:32:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[03:33:27] <hentai> I have 2 directories with files. For each file in dir B, I want to get a file from dir A with the same relative path as in dir B, if found, compare it to file in dir B, if identical, set the same ctime on file from dir A as on file from dir B, and delete the file in dir B
[03:33:43] <hentai> What solution other than just implementing it in bash would you recommend?
[03:34:09] <zeamp> The channel is bash, I would assume bash-based answers.
[03:34:17] <zeamp> If you're looking for alternative solutions, you might try an alternative channel?
[03:34:46] <hentai> zeamp, I recall this channel to be the "Why bash is not going to solve your problem" one-stop shop
[03:35:12] <hentai> This was a long time ago, but I presumed this to hold true to this day
[03:35:20] <zeamp> Your name suggests much more.
[03:35:29] <zeamp> Afraid my hands are tai'd.
[03:35:31] <Blondie101010> zeamp: translate what you said in bash syntax and if it doesn't work, paste it so we can look
[03:35:41] <mknod> Bash is definitely the tool for the job.
[03:35:48] * Blondie101010 nods
[03:36:06] <zeamp> This is the first time I've typed in this channel since COVID began.
[03:36:07] <mknod> You'll want to use "touch" for more than just creating a blank file, also.
[03:36:25] <hentai> mknod, So nobody will say "Dont reinvent the wheel and use the proven rsync" or "Do not try to do this in bash, instead try something like python or a proper language"
[03:36:55] <hentai> zeamp, This is the first time I've typed in this channel since I tested positive for COVID
[03:37:03] <hentai> Because I did yesterday :)
[03:37:31] <zeamp> When I tell people about IRC, they think I have a disease.
[03:37:37] <zeamp> Kids these daysâ€¦
[03:38:00] <Friithian> hey I'm young enough to be a kid in this saying
[03:39:06] <hentai> Also, as I am certain that the mere existence of my solution in this case would lead to at least a single inexplicable migraine in this world among bash gurus, can someone point me to a "true and only" way to take ctime of one file, and apply it to a different one
[03:39:45] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:40:16] <kurahaupo1> hentai: ctime is there to indelibly record when the other metadata are modified.
[03:40:34] <kurahaupo1> hentai: it's intentionally impossible to change it, other than to set it to the current time
[03:40:44] <phogg> tl;dr use touch, change mtime
[03:40:44] <hentai> kurahaupo1, touch?
[03:40:47] <Friithian> sounds easily possible to change it then :P
[03:40:50] <kurahaupo1> hentai: but why do you care about ctime?
[03:40:51] <Friithian> just change system time
[03:41:04] <mknod> hentai, stat + date + touch.
[03:41:11] *** Joins: bluedust (~bluedust@103.161.144.140)
[03:41:15] <kurahaupo1> Friithian: yeah, and then be very precise about when you call "touch"
[03:41:24] <hentai> Pardon, covid gotta have touched the brain facilities, I did mean mtime, not ctime
[03:41:35] <kurahaupo1> hentai: touch --ref=otherfile thisfile
[03:41:44] <hentai> Thank you very much
[03:41:48] <Friithian> god that would not be fun, a script to change system time so you can set the time on a file correctly
[03:41:50] <kurahaupo1> probably touch -c to prevent it creating a new file
[03:42:12] <phogg> there is a way to set ctime... on Linux, if with ext filesystems (by using debugfs). I will say no more
[03:42:13] <mknod> Ah, even simpler if there is no date manipulation indeed.
[03:42:23] <kurahaupo1> Friithian: and then cancel all the alarms caused by the system clock going bananas
[03:42:39] * kurahaupo1 glares at phogg
[03:42:47] <Friithian> and you can't do anything related to the internet because certs are expired or not in effect yet
[03:42:51] <hentai> Also, I have a completely separate problem, which is identical to this one, but this time dir B is a remote FTP server
[03:42:51] <kurahaupo1> "not while mounted", harummpph
[03:43:09] <hentai> What should I use in this second, completely unrelated case?
[03:43:32] <hentai> Certainly implementing FTP on bash using /dev/tcp does not sound fun
[03:43:44] <kurahaupo1> hentai: have you considered switching to a less despicably obsolete protocol? say, sftp? NFS? CFS even?
[03:43:47] <phogg> kurahaupo1: if you are *really* dedicated to your task you will leave no stone unturned!
[03:43:58] <hentai> kurahaupo1, I am not owning the remote host :D
[03:44:01] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[03:44:21] <phogg> hentai: at the very least you should leave ftp up to the VFS layer and just fuse mount the remote site
[03:45:03] <kurahaupo1> phogg: yeah, sync, then put computer to sleep. Physically remove drive, put it in a caddy case attached to another one, where we use debugfs, then reinstall in the original computer, and wake it up again
[03:45:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[03:45:35] <phogg> kurahaupo1: and then start buying the robot arms to automate the process!
[03:45:38] <kurahaupo1> hentai: I thought for a moment you meant "not pwning the remote host"
[03:46:36] <hentai> kurahaupo1, I have loaded over a TB of music off a private FTP server, and hardly noticed that I messed up the timestamps on the loaded files
[03:47:28] <Friithian> why are the timestamps so important?
[03:47:29] <hentai> My original IP was banned for using too much traffic, so loading it again is not a viable option :)
[03:48:00] <hentai> Friithian, FOR DEH HISTORY! I am going to archive that epic FTP while it is still alive
[03:48:08] <Friithian> ah
[03:48:17] <phogg> I timestamp all of my ripped audio based on the release date of the source album
[03:48:22] <kurahaupo1> hentai: depending on the file format, it might have "recording timestamp" included inside it. I would be inclined to set the mtime to that.
[03:48:26] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:48:26] <phogg> I am sure I cannot be the only one...
[03:48:28] <kurahaupo1> phogg: *snap*
[03:48:43] <Friithian> I just use the id3 tags or whatever the other one is called
[03:48:58] <phogg> Friithian: "not used by anyone"
[03:49:13] <hentai> kurahaupo1, I want the original mtime on the server, as I find it to be of historic value
[03:49:13] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[03:49:32] <Friithian> AAc?
[03:49:35] <hentai> I hate id3 and all other "invasive" tagging formats
[03:49:51] <Friithian> I hate the tagging just because it isn't standard enough
[03:50:17] <Friithian> but my entire library is tagged either via id3 or aac if it came with that
[03:50:17] <hentai> Unfortunately, there are no non-invasive tagging formats, so I had to make my own
[03:50:29] <Friithian> someone link the standards xkcd
[03:50:31] *** Quits: vil01 (~vilja@fwa5e16-76.bb.online.no) (Remote host closed the connection)
[03:50:39] <hentai> But as soon as one becomes a standard, I am yeeting my format for whatever it is
[03:50:49] <Friithian> id3 *should* be standard
[03:50:53] <hentai> Friithian, It is already projected into my mind
[03:51:12] * hentai throws a metal plate at Friithian's forehead
[03:51:19] <phogg> there is too much variation of opinion on what is legal id3
[03:51:39] <phogg> and what to do when you have both v1 and v3 in the same file
[03:51:41] <Friithian> jellyfin has nfo files that it generates
[03:51:42] <Friithian> cry
[03:51:49] <Friithian> manually fix it like I do
[03:52:02] <phogg> chuck it all and tag via extended filesystem attributes!
[03:52:08] <hentai> id3 skews the checksums of the file. If you want metadata in the file, use matroska containers
[03:52:41] <phogg> BeFS had it figured out 25 years ago.
[03:52:50] <hentai> I hate using filesystem attributes for any data of value
[03:52:51] <Friithian> would you be happy with id3 but the tags are in a seperate file?
[03:53:04] <hentai> Friithian, Exactly what I mean by "non-invasive"
[03:53:21] <Friithian> hmm, an idea is forming in my mind and it's a *bad* one
[03:53:37] <hentai> But id3 is just not meant to be stored in a separate file, because it is not in the specification
[03:53:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[03:53:57] <hentai> And as soon as you leave the specification, it is no longer a standard
[03:54:15] <hentai> And at this point, I am using an sqlite database
[03:54:41] <Friithian> id3 has been good enough for me, although my music collection is not that big and I rarely change or add to it
[03:54:46] <Friithian> I have like, 222 hrs
[03:54:56] <hentai> It can be easily merged/split, It is efficient for huge libraries, it can contain ANYTHING
[03:55:23] <hentai> Friithian, I have more than a few years worth of music, so your pain is insignificant to myself
[03:55:33] <Friithian> I only listen to a specific set
[03:55:44] <Friithian> get more refined tastes idk
[03:55:56] <hentai> If I add the SFX archive, this may take decades :)
[03:56:01] <Friithian> oh no
[03:56:12] <Friithian> train an AI to do it for you and have it done in centuries!
[03:56:31] <hentai> Friithian, You store the music you enjoy, I archive all the music^Wsounds I get my hands on
[03:56:37] *** Quits: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[03:56:40] <Friithian> aaah an archivist
[03:56:52] <phogg> extended filesystem attributes are as much a part of the file as file data, which is ideal. The only reason they're a problem is some filesystems can't cope
[03:57:00] <phogg> a universal binary container format would solve the problem
[03:57:05] <phogg> too bad nobody ever invented IFF
[03:58:49] <Friithian> quick, invent it yourself!
[03:58:54] <hentai> phogg, No guaranteed cross-fs persistence, no guarantee of being OS-agnostic, not generally regarded to be an "unalienable part" of the file
[03:58:55] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[04:00:11] *** Joins: luckiswithme (~luckiswit@103.226.104.2)
[04:00:19] <hentai> phogg, You mean IFF 85?
[04:00:37] <hentai> Wasn't that already "invented"?
[04:01:17] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 250 seconds)
[04:02:30] <phogg> hentai: no way, if we had a good general solution to this class of problem we'd be using it everywhere by now!
[04:03:10] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[04:03:58] <hentai> phogg, Sometimes it is not due to a lack of means, but moronity of the mankind
[04:04:33] <Friithian> most people still use ntfs so
[04:04:57] <wiscii> we should go bck to hand written scrolls ;-)
[04:04:59] <hentai> Some are forced by Microsoft, and honestly, would you rather use exfat?
[04:05:06] *** Quits: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:05:24] <phogg> hentai: this is just me being bitter
[04:05:28] <Friithian> I would rather use ext4
[04:05:44] <Friithian> or, lvm + ext4
[04:06:03] <phogg> I love NTFS. A constant source of comedy. It's hilariously bad at being a filesystem. It's quite shocking when you benchmark it.
[04:07:06] <hentai> Friithian, Some of us are forced to cope with the byproducts of Microsoft existence.
[04:07:41] <Friithian> I'm only slightly forced to, I can get away with a VM right now and only need it for certain classes
[04:08:01] *** Joins: MercilessDeth (~brad@136.49.59.177)
[04:08:37] * larryv wonders if hentai is ever going to actually make headway on their problem
[04:08:39] <hentai> Friithian, My work requires me to continue torturing my self with maintaining exfat volumes because "interoperability"
[04:08:41] *** Quits: clime (~clime@78-80-113-95.customers.tmcz.cz) (Ping timeout: 245 seconds)
[04:08:51] *** Quits: luckiswithme (~luckiswit@103.226.104.2) (Remote host closed the connection)
[04:09:02] <hentai> larryv, What problem? Did I not receive a clear comprehensible answer already?
[04:09:24] <Friithian> oooh
[04:09:36] <Friithian> I only need exfat for specific USB drives
[04:09:55] <larryv> if you did i missed it
[04:10:11] <hentai> Never mind speed - reliability is still a concern on exfat
[04:11:27] <Friithian> I just use it to transfer documents between devices of unknown support
[04:12:18] <hentai> Friithian, Now that we have real NTFS in the kernel, I wonder whether I should compromise on my goal to make my workplace Windows-free, and push to move us onto NTFS drives
[04:13:24] <Friithian> you can do baby steps, move to NTFS, then move away from windows
[04:13:34] <kurahaupo1> Does NTFS do journalling?
[04:13:45] <llua> so like, bash.
[04:13:50] <hentai> ReiserFS is the final step for me
[04:14:22] <hentai> There is nothing to exceed ReiserFS in being the FS I love
[04:14:46] <kurahaupo1> hentai: Have you wanted to kill anyone lately?
[04:14:47] <hentai> Atomic, reliable, easy to recover, easy to undelete.
[04:14:58] <hentai> kurahaupo1, FREEDOM FOR HANS REISER!
[04:15:06] <kurahaupo1> err, no
[04:15:12] <hentai> kurahaupo1, YES
[04:15:13] <larryv> llua: that'd be on-topic though. what are you thinking
[04:15:34] <hentai> llua, What indecencies do you imply by that?
[04:17:44] <phogg> kurahaupo1: ntfs is journaling (has been since the stasrt). It has a myriad of features and is quite extensible
[04:18:21] <kurahaupo1> phogg: how hard is it to tune to get reasonable performance? Can the mac labelling be turned off or limited?
[04:18:24] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:18:37] <phogg> HFS+ style resource forks are there, too, which you can use for souped up extended attrs if you want
[04:18:57] <phogg> kurahaupo1: its performance is anything but reasonable. That's the real problem with it
[04:18:58] <kurahaupo1> That would be nice. Apple should have adopted it.
[04:19:31] <kurahaupo1> Did NTFS start with Win NT 3?
[04:19:39] <phogg> NTFS is a kitchen sink of design and engineering. It's at version 6.something now, I believe.
[04:19:54] <phogg> I can't recall, I know it was there for NTv4
[04:20:18] <kurahaupo1> phogg: oh, like most ISO standards :-Ãž
[04:20:35] <kurahaupo1> phogg: yeah I remember it from NTv4 as well
[04:20:37] <phogg> kurahaupo1: imagine that *without* the benefit of perspective from multiple parties
[04:20:41] <hentai> ReiserFS is a gods miracle of reliability and lightweightedness.
[04:21:00] <phogg> can't fault it for features or extensibility, can fault it for performance and complexity
[04:21:21] <phogg> hentai: who still uses reiserfs3? Or did they ever actually release v4?
[04:21:31] <hentai> They did
[04:21:36] <kurahaupo1> I mean, who decides that, since you need a packet size that's a power of two, and half the people think it should be 32 and the other half think it should be 64, that somehow 48 is a "good" compromise?
[04:21:59] <hentai> There is ReiserFS, and there is Reiser4
[04:22:14] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:22:58] *** Joins: malina (~malina@user/malina)
[04:23:15] <phogg> I ran reiserfs until it was clear development had ground to a halt, then reluctantly switched to ext3. These days I don't think we need it, there are enough options
[04:23:15] *** Parts: larryv (~larryv@zsh/patchmanager/larryv) ()
[04:23:26] <phogg> unless reiser4 can finally give me xattrs that aren't a joke
[04:23:37] *** Quits: uuidNuni1 (~weechat@222.67.14.47) (Quit: WeeChat 3.4)
[04:25:02] *** Joins: uuidNuniq (~weechat@222.67.14.47)
[04:25:34] <hentai> phogg, ReiserFS is in the mainline kernel. Reiser4 is not included because it only became usable after the "MURDER". Reiser5 is still a tad untested
[04:26:11] <hentai> I wonder whether renaming Reiser5 to ShishkinFS will do it good
[04:26:58] *** Quits: ouestbillie (~gallup@185.195.233.151) (Ping timeout: 256 seconds)
[04:27:12] <phogg> couldn't hurt
[04:27:42] <hentai> I would still rather hear Reisers official approval or disapproval on this
[04:28:38] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[04:29:11] <hentai> Don't dis the Hans - officially recognized murderer of Nina Reiser
[04:30:42] *** Joins: nickdiaz1wag209 (~bjpenn_@98.42.87.100)
[04:33:41] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.39) (Ping timeout: 268 seconds)
[04:34:44] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[04:34:48] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aÐ»Ð»Ð¸Ð»Ñ¹Ñ–Ð°!)
[04:38:57] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[04:39:49] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c)
[04:40:39] *** Joins: akoana (~ah@user/akoana)
[04:41:57] *** Joins: luckiswithme (~luckiswit@103.226.104.2)
[04:44:29] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:51:20] *** Parts: idego (~idego@user/idego) ()
[04:54:25] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:55:28] *** Joins: nickdiazswag209 (~bjpenn_@13.110.54.42)
[04:56:45] *** Joins: bastardo (~nicholasm@170.250.151.114)
[04:57:37] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[04:59:09] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:957d:f7c8:aec:c824)
[05:03:23] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC - https://znc.in)
[05:07:57] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[05:08:30] *** Joins: lotharn|2 (~kvirc@2607:fb90:4af1:9d4b:bdac:7e61:2621:67a4)
[05:08:30] *** Quits: luckiswithme (~luckiswit@103.226.104.2) (Ping timeout: 260 seconds)
[05:08:50] *** Joins: N4buc0- (~N4buc0@191.250.117.129)
[05:09:23] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:957d:f7c8:aec:c824) (Remote host closed the connection)
[05:11:37] *** Quits: lotharn (~kvirc@2607:fb90:4af3:c977:df47:cf0c:3457:47bb) (Ping timeout: 240 seconds)
[05:12:18] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[05:17:21] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[05:17:30] *** Joins: larryv (~larryv@zsh/patchmanager/larryv)
[05:20:46] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[05:20:48] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[05:27:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:29:52] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:52] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[05:32:48] *** Joins: vlm (~vlm@user/vlm)
[05:34:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[05:34:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:36:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece)
[05:36:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece) (Changing host)
[05:36:06] *** Joins: skapata (~Skapata@user/skapata)
[05:37:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:37:26] *** Quits: N4buc0- (~N4buc0@191.250.117.129) (Remote host closed the connection)
[05:37:52] *** Joins: N4buc0- (~N4buc0@191.250.117.129)
[05:42:04] *** Joins: bluedust (~bluedust@103.161.144.140)
[05:46:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[05:49:08] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 256 seconds)
[05:49:35] *** Joins: rcernin (~rcernin@101.189.141.138)
[05:54:57] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[05:55:17] *** Joins: maryo_87 (~Maryo@user/maryo)
[05:55:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:57:00] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:00:52] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Read error: Connection reset by peer)
[06:01:41] *** Joins: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com)
[06:01:41] *** Quits: wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com) (Changing host)
[06:01:41] *** Joins: wuseman (~wuseman@user/wuseman)
[06:02:10] *** Quits: n4dir (~user@i5E866640.versanet.de) (Ping timeout: 256 seconds)
[06:02:16] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[06:04:08] *** Joins: n4dir (~user@i5E86664B.versanet.de)
[06:06:06] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[06:06:55] *** Quits: muirrum (~muirrum@sourcehut/user/muirrum) (Quit: Ping timeout (120 seconds))
[06:07:09] *** Joins: muirrum (~muirrum@sourcehut/user/muirrum)
[06:07:50] *** Quits: bastardo (~nicholasm@170.250.151.114) (Ping timeout: 250 seconds)
[06:08:02] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[06:09:11] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[06:10:59] *** Joins: rcernin (~rcernin@101.189.141.138)
[06:11:29] *** Quits: rcernin (~rcernin@101.189.141.138) (Client Quit)
[06:11:43] *** Joins: rcernin (~rcernin@101.189.141.138)
[06:16:29] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[06:16:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:16:59] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[06:18:28] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[06:19:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[06:20:30] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:2891:6bd5:ed2a:ab88) (Remote host closed the connection)
[06:20:43] *** Joins: userT (~user0@187.140.199.208)
[06:21:20] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:21:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:21:40] *** Joins: thiras (~thiras@user/thiras)
[06:22:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:22:35] <userT> For testing whether a given variable $some_var is empty/not-defined, what's the difference between [ -z $some_var ] and just [ $some_var ] ?
[06:23:02] <emanuele6> they are both wrong
[06:23:15] <emanuele6> and when properly quoted they do the opposite
[06:23:27] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[06:23:36] <userT> Oh, crap.
[06:23:39] <userT> Sorry
[06:23:58] <userT> It's [ -z "$some_var" ] and [ "$some_var" ]
[06:24:04] <larryv> i.e., [ "$some_var" ] is equivalent to [ -n "$some_var" ]
[06:24:06] <emanuele6> yeah, they do the opposite
[06:24:34] <emanuele6> [ "$some_var" ] is equivalent to [ -n "$some_var" ] and [ -z "$some_var" ] is equivalent to [ ! -z "$some_var" ]
[06:24:37] <emanuele6> err
[06:24:44] <emanuele6> and [ -z "$some_var" ] is equivalent to [ ! -n "$some_var" ]
[06:25:06] <emanuele6> ( or [ ! "$some_var" ] )
[06:26:05] <emanuele6> # some_var=h; if [ "$some_var" ]; then echo yes; else echo no; fi; if [ -z "$some_var" ]; then echo yes; else echo no; fi
[06:26:06] <shbot> emanuele6: yes
[06:26:07] <shbot> emanuele6: no
[06:26:11] <emanuele6> # some_var=; if [ "$some_var" ]; then echo yes; else echo no; fi; if [ -z "$some_var" ]; then echo yes; else echo no; fi
[06:26:12] <shbot> emanuele6: no
[06:26:12] <shbot> emanuele6: yes
[06:29:06] <userT> What if $some_var is empty, or totally non-existent, not defined?
[06:29:58] <userT> Ok, let me try here.
[06:30:35] <emanuele6> userT: there is no difference if you test like that
[06:30:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:31:03] <emanuele6> not set is equivalent to empty because you are using the length of plain expansions to check
[06:31:07] <wiscii> # [ "$nothing" ] || echo zip
[06:31:08] <shbot> wiscii: zip
[06:31:38] <emanuele6> if you want to do something if the variable is not set, you should do something like  [ "${some_var+is_set}" ]
[06:32:15] <emanuele6> where ${par+str} is an expansion that expands to nothing if par is set or empty string if par is not set
[06:32:26] <emanuele6> # echo "${nothing+is_set}"
[06:32:28] <shbot> emanuele6: no output
[06:32:33] <emanuele6> # nothing=; echo "${nothing+is_set}"
[06:32:34] <shbot> emanuele6: is_set
[06:33:33] <userT> # stg=; if [ $stg ]; then echo yes; else echo no; fi; if [ -z $stg ]; then echo yes; else echo no; fi; if [ -n $stg ]; then echo yes; else echo no; fi
[06:33:34] <shbot> userT: no
[06:33:35] <shbot> userT: yes
[06:33:35] <shbot> userT: yes
[06:33:47] <userT> # if [ $stg ]; then echo yes; else echo no; fi; if [ -z $stg ]; then echo yes; else echo no; fi; if [ -n $stg ]; then echo yes; else echo no; fi
[06:33:48] <emanuele6> [ -z $stg ] is plain wrong
[06:33:49] <shbot> userT: no
[06:33:49] <shbot> userT: yes
[06:33:49] <shbot> userT: yes
[06:33:56] <userT> Oh crap
[06:33:57] <larryv> these are all broken
[06:34:00] <userT> Yes
[06:34:03] <e36freak> all of them are wrong/broken
[06:34:05] <userT> Stupid me
[06:34:07] <e36freak> quotes.
[06:34:11] <userT> YES
[06:34:13] <emanuele6> if stg is not set or empty, it will expand to [ -z ]
[06:34:20] <emanuele6> not [ -z '' ]
[06:34:30] <emanuele6> then [ -z ] is equivalent to [ -n -z ]
[06:34:41] <emanuele6> and since -z is not zero-length, it is true
[06:34:49] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[06:35:12] <e36freak> it actually works, but only because by accident. if stg is set, then [ -z foo ] is falso, as intended
[06:35:25] <e36freak> it will however break horribly if there are any glob characters in the variable
[06:35:32] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 252 seconds)
[06:36:06] *** Quits: lotharn|2 (~kvirc@2607:fb90:4af1:9d4b:bdac:7e61:2621:67a4) (Read error: Connection reset by peer)
[06:36:20] <e36freak> [ -n $stg ] is even more broken because it's always true
[06:36:30] <e36freak> (except for the glob character thing that may break it horribly)
[06:36:34] *** Joins: lotharn|2 (~kvirc@2600:8800:280:d400:d8ac:c0d6:e63e:ecd7)
[06:37:12] <emanuele6> also if it contains spaces, tabs or newlines unless the injection of arguments makes it work
[06:37:16] <e36freak> right
[06:37:36] <userT> Ok.
[06:37:43] <e36freak> quotes are important
[06:37:47] <e36freak> or, if bash, use [[
[06:37:47] *** Joins: WinterStar (~IceLight@user/icelight)
[06:37:52] <e36freak> [[ -n $stg ]] is fine
[06:38:07] <e36freak> (though quoting there certainly doesn't hurt either)
[06:38:32] <userT> So in bash, with [[ it doesn't really matter whether quoting or not? I'm free on it?
[06:38:40] <e36freak> [[ is special
[06:38:53] <emanuele6> only in [[ and only in some contexts
[06:38:56] <e36freak> [ is a command, like any other command. it doesn't do anything special with what's inside
[06:39:12] <e36freak> [[ is a shell keyword, it actually changes the way bash parses what's inside it
[06:39:25] <e36freak> for unary tests, like -n or -z, quotes aren't needed because no wordsplitting occurs
[06:39:41] <e36freak> for equality tests, the right side needs to be quoted unless you want it treated as a shell pattern to match against
[06:39:51] <userT> Ooohhhhh
[06:39:53] <userT> Right.
[06:40:07] <e36freak> # a=foo; b='f*'; [[ $a = $b ]] && echo match
[06:40:09] <shbot> e36freak: match
[06:40:11] <e36freak> # a=foo; b='f*'; [[ $a = "$b" ]] && echo match
[06:40:13] <shbot> e36freak: no output
[06:40:19] <userT> Yes, I did know that [ is the "test" command, and [[ is kind of a bash-ism
[06:40:37] <e36freak> but because [ is just a command, quoting rules apply just like any other command
[06:40:46] <bn_work> hi, we have a "requirement" to launch ~17 processes in parallel to "minimize start times" but the simultaneous logging of everything to stdout seems to be dropping log messages when initially viewed, why? & anything we can do prevent this besides launching them serially?
[06:40:53] <emanuele6> [[ is a special thing, not a command; similar to ((
[06:41:20] <userT> So, [ "$stg" ] and [ -n "$stg" ] are equivalent.
[06:41:24] <e36freak> yes
[06:41:28] <userT> Thanks.
[06:41:33] <userT> Having said this,
[06:42:11] <userT> I have seen particularly in "init" scripts that sometimes they use the first and some others the second.
[06:42:14] <userT> Why?
[06:42:16] <e36freak> bn_work: maybe a buffering issue? can you force them to be line buffered?
[06:42:34] <e36freak> userT: whoever wrote it preferred it that way
[06:42:39] *** Joins: lotharn (~kvirc@ip70-162-36-238.ph.ph.cox.net)
[06:42:59] <Blondie101010> bn_work:  when many programs append to the same file, lines are appended in blocks in a time shared manner\
[06:43:06] <userT> Maybe, but the thing is, they use *both* use cases in the same script.
[06:43:07] <Blondie101010> so things will be all over the place
[06:43:29] <e36freak> userT: who knows. maybe someone wrote it initially, and someone else changed/patched it
[06:43:32] <bn_work> e36freak: not sure, how would one buffer it?
[06:43:37] <e36freak> userT: maybe they felt like switching things up
[06:43:49] <e36freak> bn_work: stdbuf might be one option
[06:43:51] <e36freak> !faq buffer
[06:43:51] <greybot> https://mywiki.wooledge.org/BashFAQ/009 -- What is buffering?  Or, why does my command line produce no output: tail -f logfile | grep 'foo bar' | awk ...
[06:43:56] <e36freak> some options are discussed in there
[06:43:57] *** Joins: volga629 (~volga629@72.139.93.26)
[06:44:32] <userT> e36freak: wait, is that level of "subjective" thinking or freedom allowed in Bash coding?
[06:44:57] <e36freak> userT: i mean, whenever you have two different ways to do the same thing, there's a choice on which to use
[06:45:33] <emanuele6> that is not even bash, it is just POSIX sh
[06:45:37] *** Quits: lotharn|2 (~kvirc@2600:8800:280:d400:d8ac:c0d6:e63e:ecd7) (Ping timeout: 240 seconds)
[06:45:38] <Blondie101010> you combine a tail and a few greps, and the buffer can get thick
[06:45:40] <e36freak> knowing that it's shell code and iniscripts, i wouldn't be surprised if they're different because they were just copying from different tutorials or examples
[06:46:03] <emanuele6> in bash you also have [[ $var ]] and [[ -n $var ]] on top of [ "$var" ]  [ -n "$var" ]  test "$var"  test -n "$var"
[06:46:16] <tirnanog> and [[ ! $var ]]
[06:46:21] <userT> emanuele6: I meant, in Bash and any other similar shell
[06:46:31] <e36freak> [[ ! -z $var ]], just to be extra fun
[06:46:35] <emanuele6> and  case $var in *?*) ; esac
[06:46:50] <Blondie101010> e36freak:  I actually prefer ! -z
[06:46:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[06:46:58] <e36freak> of course you do
[06:47:18] <tirnanog> I don't bother using either of -n or -z in [[ but, ultimately, whatever gets the job done.
[06:47:19] <userT> ..........................
[06:47:22] <userT> OUCH
[06:47:22] <emanuele6> i prefer [[ ! ! ( ! -z $var ) ]]
[06:47:45] <e36freak> needs more parenthesis
[06:48:08] *** Quits: N4buc0- (~N4buc0@191.250.117.129) (Ping timeout: 250 seconds)
[06:48:15] <userT> I think this is more painful than when I barely learned printf...
[06:48:33] <wiscii> # [ -n ] ] && echo ;-)
[06:48:34] <shbot> wiscii: bash: syntax error near unexpected token `)'
[06:48:47] <emanuele6> ';-)'
[06:49:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:49:09] <wiscii> see the rest first xD
[06:50:25] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:51:10] *** Joins: hashbangenjoyer (~hashbange@ip72-194-77-230.oc.oc.cox.net)
[06:52:05] <hashbangenjoyer> No problem to ask help with, just want to ask if there are any resources on using ex in shell scripting besides the man page?
[06:52:19] <lotharn> can someone tell me what an as400 does that a pc cant?
[06:52:36] <tirnanog> userT: it's really not that complicated. see help test and just know that, because [ isn't a keyword, you need to make a point of quoting your expansions.
[06:52:47] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[06:52:50] <tirnanog> or don't use [ at all, if that applies to you.
[06:53:02] <e36freak> hashbangenjoyer: ex i'm not sure, here are some ed documents that may get you started though
[06:53:05] <e36freak> !ed
[06:53:05] <greybot> ed is a command-based file editor. See http://wiki.bash-hackers.org/howto/edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf
[06:53:13] <emanuele6> !ex
[06:53:13] <greybot> ex is a POSIX command-based file editor: ex -sc '%s/long john/big ed/g|x' file. If your ex is vim it can also take multiple files using ge and argdo: ex -sc 'argdo %s/foo/bar/ge|x' *.txt # See http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ex.html
[06:54:13] <emanuele6> !forget ed
[06:54:13] <greybot> OK, emanuele6
[06:54:29] <emanuele6> !learn ed ed is a POSIX command-based file editor. See http://wiki.bash-hackers.org/howto/edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf
[06:54:29] <greybot> OK, emanuele6
[06:54:50] <e36freak> ed is the standard editor
[06:55:27] <emanuele6> !forget ed
[06:55:27] <greybot> OK, emanuele6
[06:56:10] <emanuele6> !learn ed ed is a POSIX command-based file editor. See http://wiki.bash-hackers.org/howto/edit-ed - http://sdf.lonestar.org/index.cgi?tutorials/ed - http://wolfram.schneider.org/bsd/7thEdManVol2/edtut/edtut.pdf - https://pubs.opengroup.org/onlinepubs/9699919799/utilities/ed.html
[06:56:10] <greybot> OK, emanuele6
[06:56:12] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:57:08] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:57:34] *** Joins: tijuco (~tijuco@user/tijuco)
[06:57:42] <userT> I didn't mean the quoting thing; that was a pure error of mine. I meant the "free" choice of whether using [ "$x" ] or [ -n "$x" ]
[06:58:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[06:58:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[06:58:39] <userT> # echo $xy
[06:58:41] <shbot> userT: no output
[06:58:44] <userT> Ok
[06:58:45] <e36freak> userT: -n is just the default when there's a single argument, not that much to it
[06:58:52] <userT> Ooohhhhh
[06:59:00] <e36freak> just like say grep -e string and grep string are the same thing
[06:59:05] <userT> # xy=123; echo $xy
[06:59:07] <shbot> userT: 123
[06:59:12] <emanuele6> !qefs
[06:59:12] <userT> # echo $xy
[06:59:12] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[06:59:14] <shbot> userT: no output
[06:59:19] <userT> Alright.
[06:59:22] <e36freak> !shbot > userT
[06:59:22] <greybot> userT: shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[07:00:11] <userT> Is #evalbot a channel?
[07:00:15] <e36freak> yes
[07:00:20] <userT> No, wait, I can see myself
[07:00:25] <znf> good luck breaking him :P
[07:00:25] <userT> Ok, thanks anyway.
[07:00:33] <userT> Eh?
[07:00:37] <userT> What was that?
[07:00:49] *** Quits: amcorrigal (~alexcorri@185.92.25.116) (Quit: WeeChat 3.4)
[07:02:13] <userT> And how do I use it there? Just equally prefixing '#' to each command?
[07:02:48] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:03:09] <e36freak> yep
[07:03:12] *** Joins: tijuco (~tijuco@user/tijuco)
[07:03:13] <e36freak> it's in there, just like it's in here
[07:03:13] <koala_man> shbot's not on that channel
[07:03:19] <e36freak> oh? should be
[07:03:28] <e36freak> it is in #shbot
[07:03:40] <e36freak> !forget shbot
[07:03:40] <greybot> OK, e36freak
[07:03:44] <e36freak> !learn shbot shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[07:03:44] <greybot> OK, e36freak
[07:03:48] <e36freak> damn it
[07:03:48] <e36freak> !forget shbot
[07:03:48] <greybot> OK, e36freak
[07:03:55] <koala_man> geirha: --^
[07:04:06] <e36freak> !learn shbot shbot runs each session in a new VM as root. Feel free to play with the bot in #shbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[07:04:06] <greybot> OK, e36freak
[07:04:14] <koala_man> ah
[07:04:32] <e36freak> fixe it
[07:04:33] <emanuele6> shbot is only in #awk, #sed, #bash and #jq afaik
[07:04:33] <e36freak> d
[07:04:57] <e36freak> i just joined #shbot, it's there
[07:05:21] <wiscii> you can query the bot directly
[07:05:22] <koala_man> #evalbot was a legacy channel anyways
[07:05:29] <e36freak> wiscii: also true
[07:05:53] <e36freak> !forget shbot
[07:05:53] <greybot> OK, e36freak
[07:06:11] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[07:06:11] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[07:06:12] <e36freak> !learn shbot shbot runs each session in a new VM as root. Feel free to play with the bot in #shbot, or query it directly. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[07:06:12] <greybot> OK, e36freak
[07:06:23] <userT> Wait, so I should use #shbot instead of #evalbot?
[07:06:26] <koala_man> yes
[07:06:46] <e36freak> shbot is a fork of evalbot, which is what was in here many moons ago
[07:06:48] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[07:06:48] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[07:07:02] <e36freak> #evalbot was the channel on freenode
[07:10:45] <bn_work> argh, I really hate this asynch startup method, it makes debugging messages confusing as heck especially since I'm now finding that some processes  don't actually start at all
[07:10:59] <koala_man> I keep forgetting we're not even on freenode anymore
[07:11:28] <e36freak> it's freenode 2.0
[07:11:49] *** Joins: YHVH (~yhvh@2601:982:8300:8090:fd1a:1b29:d0cb:6b64)
[07:11:52] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[07:11:54] <koala_man> the freer node
[07:13:46] <bn_work> FWIW, these are jvm-based apps that seem to be using logback
[07:13:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:14:10] <bn_work> e36freak: would any of the buffering methods linked to earlier still help?
[07:14:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:34] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[07:15:08] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:16:44] *** Quits: jos1 (~jos3@dyndsl-091-248-052-028.ewe-ip-backbone.de) (Ping timeout: 250 seconds)
[07:17:17] *** Quits: kurahaupo (~kurahaupo@pa49-182-42-180.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[07:17:33] *** Joins: Atque (~Atque@user/atque)
[07:18:57] <e36freak> bn_work: migrating from log4j?
[07:19:00] <e36freak> never used it
[07:19:21] <bn_work> e36freak: no, it always used logback (via slf4j)
[07:19:47] <e36freak> are they all writing to the same file?
[07:19:51] <bn_work> no
[07:20:15] <bn_work> unless you consider stdout the same "file" (descriptor)
[07:20:28] <e36freak> looks like slf4j buffers by default
[07:20:44] <e36freak> usually writing to stdout line buffers, but i guess an application could choose not to
[07:21:38] <e36freak> oh, hm
[07:21:59] <e36freak> there's an immediateFlush bool it looks like, should be true by default, but see if your application sets it to false somewhere?
[07:22:12] <e36freak> way beyond #bash at that point though
[07:22:53] <bn_work> e36freak: the weird thing is, this isn't an issue when launched serially, it's only when all this shit is getting launched as quick as possible, it becomes a complete mess
[07:23:21] <bn_work> quick as possible = ie: asynch as bg processes
[07:23:22] <e36freak> define serially? they're not running at the same time then?
[07:23:29] <userT> Is there by chance a #bash-offtopic similar channel?
[07:23:33] <e36freak> no
[07:23:34] <bn_work> like one after another
[07:23:47] <userT> Ouch.
[07:23:48] <e36freak> bn_work: do they fork themselves? i have no idea what the programs you're dealing with are
[07:24:26] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:25:05] <bn_work> e36freak: they're the typical java-generated shell scripts that massage the environment and collect JVM params before finally running something like `java -cp <insane_long_list_of_libs> <class> <entry_method>`
[07:25:23] <wiscii> userT: userT i'm in ##bash-ot if you like
[07:25:32] <bn_work> they're launched in bg via bash's `&` operator
[07:25:51] <e36freak> which part is generating logging info?
[07:25:56] *** Joins: willyg_cos (~willyg_co@user/willyg-cos/x-4994202)
[07:25:57] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 240 seconds)
[07:26:01] <e36freak> (i'm not a java guy, fwiw)
[07:26:38] <bn_work> e36freak: both the shell script I wrote to launch these JVM shell scripts + the jvm apps themselves
[07:26:52] <userT> A channel you just created, perhaps?
[07:26:57] <e36freak> may have better luck in #java
[07:27:49] <wiscii> userT: just to ask you .. it's only a temp , hense ##
[07:28:08] <emanuele6> javafreak
[07:28:11] <userT> Ok.
[07:28:25] *** Joins: Tabmow (~tabmow@user/tabmow)
[07:30:02] <bn_work> e36freak:  the folks in #java are elitists, they consider anything that isn't a programming question N/A
[07:30:22] *** Joins: jos1 (~jos3@dyndsl-178-142-071-058.ewe-ip-backbone.de)
[07:30:37] <emanuele6> in my experience, the people in #java are quite nice
[07:30:57] <emanuele6> at least the were in freenode :)
[07:31:06] <emanuele6> s/the/&y/
[07:31:18] <llua> ripfreenode
[07:31:19] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[07:31:28] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:31:36] <wiscii> controversial!
[07:31:50] <bn_work> emanuele6:  depends on what's being asked (see above), but I've seen them chastise legit java programming questions too from users, multiple times
[07:31:57] <wiscii> +1 rip fn
[07:32:10] <llua> do you not lurk this channel?
[07:32:21] <e36freak> lol
[07:32:24] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[07:32:27] * wiscii ducks
[07:34:03] * emanuele6 chickens
[07:34:34] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 260 seconds)
[07:34:44] <bn_work> anyway, isn't this really a shell question since it is getting sent to stdout?  I just wasn't sure if the C programs mentioned in that link would still work or not against the java jvm process (will try though)
[07:34:51] <wiscii> i mourn freenodes' passing .. but the "Why" was unforgivable
[07:35:25] <emanuele6> it doesn't matter what writes to stdout if it is writing to stdout
[07:35:39] <bn_work> wiscii:  why?  libera is basically freenode
[07:35:48] <e36freak> as i said, freenode 2.0
[07:35:57] <e36freak> new name, same network
[07:36:03] <wiscii> bn_work: hardly
[07:36:14] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[07:36:27] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:28] <emanuele6> it basically also has the same staff
[07:36:53] <wiscii> i'm not getting into that
[07:37:09] * emanuele6 is relieved
[07:37:19] <wiscii> i could cite a specific incedent but it would be better you ask the source
[07:37:20] <e36freak> same bat time, same bat channel
[07:37:22] <emanuele6> lmao, typo
[07:37:43] <wiscii> danananana
[07:38:06] <tirnanog> biff. bam. pow.
[07:38:39] <wiscii> oof.. awww unnggg
[07:39:17] <wiscii> ali v fraser !
[07:39:21] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:41:01] *** Joins: zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:41:37] <e36freak> bn_work: you can certainly try stdbuf and see if it helps
[07:42:28] <bn_work> if I have a shell script that launches multiple files like this, could race conditions occur?  ie:  would L4 execute before L3 finishes? https://www.irccloud.com/pastebin/1oGXLKtX/test.bash
[07:43:06] *** Joins: bluedust (~bluedust@103.161.144.140)
[07:43:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[07:43:56] <e36freak> yikes code injection, why the shit are you not using a function
[07:44:16] <e36freak> but no
[07:44:53] <bn_work> wiscii: there is always the (now aptly) named ##moshpit if you still want to relive the drama :)
[07:45:11] <bn_work> e36freak: code injection?
[07:45:47] <e36freak> yeah, you're taking arbitrary command output in the $()s and then passing it to bash to reparse as code
[07:45:53] <emanuele6> code="something $(cmd) x"   bash -c "$code"
[07:45:56] <emanuele6> that is an injection
[07:46:25] <wiscii> bn_work: really ? ppl still butthurt ?
[07:46:29] <bn_work> how is it arbitrary?  unless cat and date got compromised?
[07:46:55] <emanuele6> you are using data as code
[07:47:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[07:47:24] <bn_work> oh, you're talking about L3/4
[07:47:33] <tirnanog> is this really a systemd unit or is it a script pretending to be one?
[07:47:57] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[07:48:07] <emanuele6> my guess a script pretending to be one, i don't think this can be a valid unit file
[07:48:21] <tirnanog> it's all kinds of wrong then.
[07:48:41] <bn_work> tirnanog:  there is no systemd, do not pass go, do not collect $200, welcome to container-hell
[07:48:53] <tirnanog> I see.
[07:51:09] <bn_work> I think some sort of race condition is still occurring
[07:51:54] <bn_work> tirnanog: java launcher scripts seem to use this launching method a lot
[07:52:12] <tirnanog> yes. I've had to fix more then my fair share of them. their authors should be hung.
[07:53:03] <tirnanog> in any case, yes, this code is racy - but also, you're performing expansions at the point that ExecStartPre is assigned. it's hokum, basically.
[07:53:52] <tirnanog> using a function would be a good start.
[07:54:38] <bn_work> tirnanog:  I'm still confused how the race conditions are occurring
[07:54:59] <tirnanog> it's outright broken, even before getting to the topic of race conditions.
[07:56:10] <bn_work> tirnanog:  besides the other points you made, how so?
[07:56:17] <bn_work> it does run
[07:56:38] <wiscii> do you know what in runs ?
[07:56:49] <wiscii> s/in/it
[07:57:01] <tirnanog> because every single variable expansion and command substitution is performed before you (needless) inject the code. at the very least, that's going to impact upon $date.
[07:57:29] <bn_work> wiscii: yes, as mentioned, it runs the java build tool generated jvm launcher script
[07:58:00] <wiscii> ok
[07:58:18] <bn_work> tirnanog: the date thing is such a minor detail, but I understand what you're saying though
[07:59:21] <tirnanog> in fact, the code isn't even valid.
[07:59:24] <tirnanog> the quotes are unbalanced.
[08:00:09] <tirnanog> I assume line #1 was supposed to end with a double quote. that aside, the above applies.
[08:00:31] <bn_work> tirnanog:  yes, that was a copy-paste sanitization error
[08:01:01] <bn_work> again though, how are race conditions happening?
[08:01:22] <wiscii> only for curiosity..
[08:01:28] <bn_work> s/copy-paste/copy-paste into paste-bin/
[08:01:32] <wiscii> !check bn_work
[08:01:32] <checkbot> bn_work: Line 2: date is referenced but not assigned (for output from commands, use "$(date ...)" ). Line 2: host is referenced but not assigned. Line 2: baz_port is referenced but not assigned. See https://shellcheck.net/?id=cb44292
[08:03:04] <wiscii> ok, that was a bit unfair but i was only testing
[08:03:23] <bn_work> those shellcheck comments seem off... $date is used, re. the latter two, this is a snippet, not the full launcher "script"
[08:04:00] <bn_work> but good to shellcheck, wish (mac)vim did it actively
[08:04:18] <wiscii> it would be better with a shebang ;-)
[08:04:26] <userT> Thanks everyone. Need to retire.
[08:04:31] *** Quits: userT (~user0@187.140.199.208) (Quit: leaving)
[08:05:14] * wiscii closes ##bash-ot
[08:06:42] <tirnanog> run the code directly instead of injecting it. then see !race, along with !faq 45.
[08:07:58] <wiscii> s/closes/drops/
[08:12:00] <bn_work> !race
[08:12:00] <greybot> http://mywiki.wooledge.org/RaceCondition
[08:12:09] <bn_work> !faq 45
[08:12:09] <greybot> https://mywiki.wooledge.org/BashFAQ/045 -- How can I ensure that only one instance of a script is running at a time (mutual exclusion, locking)?
[08:14:40] *** Joins: on^ (~on@50.231.5.242)
[08:20:10] <tirnanog> it's even easier in the case that you have the flock(1) utility in your environment. the basic idea is to have "Baz" maintain a hold over the lock file it is running (acheivable with a wrapper script in the event that it cannot do so itself). the snippet you just posted would then attempt to acquire the lock. if it failed to do so, Baz would be running.
[08:20:31] <tirnanog> while it is running, rather.
[08:21:01] <bn_work> isn't that what the PID file is?
[08:21:07] <bn_work> and the check for it?
[08:21:12] <tirnanog> no.
[08:21:22] <tirnanog> this is just one long sequence of race conditions, as it stands.
[08:21:30] <tirnanog> you begin with a TOCTOUT (if [[ -e)
[08:21:33] <tirnanog> TOCTOU*
[08:22:01] <bn_work> "TOCTOU"?
[08:22:03] <tirnanog> flock(1) is a wrapper for the flock(2) syscall.
[08:23:01] <tirnanog> https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use
[08:24:43] <bn_work> oh, it's the subprocess that's probably causing it
[08:25:04] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:68a2:6953:6de0:8da2)
[08:26:15] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:29:22] *** Joins: epony (epony@user/epony)
[08:30:58] <tirnanog> ideally, you would have the thing that binds the port lock or otherwise signal when it is up and ready to field connections rather than performing a test from without. that's something to consider if it's an application of your own design. in any case, there's no way that your present approach can be rendered race-free. at best, you could shorten the window times.
[08:32:15] <tirnanog> the point is, one can implement shared locks, even in sh (as the faq discusses).
[08:32:43] *** Quits: willyg_cos (~willyg_co@user/willyg-cos/x-4994202) (Quit: Gone to sleep.)
[08:32:55] <tirnanog> rather, even with sh and nothing but the standard posix utilities to hand. flock(1) is much nicer, though.
[08:33:38] <bn_work> hmm, the lack of pgrep -F in alpine linux's buysbox pgrep and subsequent substitution in of `ps fax -o pid | grep ` in lieu of it may have made it worse
[08:34:22] <bn_work> yeah, I have no control over the app itself
[08:35:30] *** Joins: vysn (~vysn@user/vysn)
[08:35:36] *** Quits: hashbangenjoyer (~hashbange@ip72-194-77-230.oc.oc.cox.net) (Quit: zzz)
[08:35:41] <tirnanog> if it's alpine, note that the util-linux package would give you flock(1). otherwise, consider the mkdir method.
[08:35:57] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[08:36:26] <tirnanog> or, move the responsibility of spawning Baz to the script in question before performing your connectivity poll. that's another potential option.
[08:36:35] <tirnanog> (both of these things are not necesarily mutually exclusive)
[08:38:37] <bob_x1> what is good linter for bash ?
[08:38:51] <tirnanog> shellcheck.net
[08:39:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:39:57] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:44:10] *** Joins: Nintendo (~smb3@user/great)
[08:46:04] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:fd8c:4391:c384:e82c)
[08:49:47] *** Parts: texasmynsted (~texasmyns@99.96.221.112) (WeeChat 3.3)
[08:50:32] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:fd8c:4391:c384:e82c) (Ping timeout: 240 seconds)
[08:54:14] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[08:55:42] <wiscii> shello-checko !!!
[08:57:05] *** Joins: downunder (~downunder@110.151.111.219)
[09:01:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:11:24] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[09:13:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:15:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[09:16:01] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[09:17:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[09:17:50] *** Joins: maryo_87 (~Maryo@user/maryo)
[09:19:59] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[09:20:44] *** Joins: fef (~thedawn@user/thedawn)
[09:22:05] *** Joins: WinterStar (~IceLight@user/icelight)
[09:24:04] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Quit: larryv)
[09:25:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:27:13] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 268 seconds)
[09:27:49] *** Joins: fstd_ (~fstd@xdsl-89-1-56-234.nc.de)
[09:27:59] *** Joins: useretail_ (~useretail@185.132.19.151)
[09:28:14] *** Joins: Inline__ (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[09:28:22] *** Joins: cim4 (~cim@205.185.117.110)
[09:28:23] *** Joins: WinterStar (~IceLight@user/icelight)
[09:28:27] *** Joins: gpol2 (~gpol@135-23-207-205.cpe.pppoe.ca)
[09:28:29] *** Joins: greknod2821 (~grek@120.88.171.98)
[09:28:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:28:33] *** Joins: unop_ (~unop@194.154.249.71)
[09:28:48] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:29:02] *** Joins: unixman_ (~aunixman@209-165-134-1.gci.com)
[09:29:16] *** Joins: rcernin_ (~rcernin@101.189.141.138)
[09:29:22] *** Joins: Bayes^_^ (~Bayes@vps-1d06364e.vps.ovh.ca)
[09:29:32] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[09:29:41] *** Joins: Bitflux (~byte@byteflux.net)
[09:29:43] *** Joins: themchn (~themachin@user/themachine)
[09:29:45] *** Joins: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:13] *** Joins: _lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[09:30:21] *** Joins: marlinc_ (~marlinc@user/marlinc)
[09:30:28] *** Quits: n4dir (~user@i5E86664B.versanet.de) (Remote host closed the connection)
[09:30:55] *** Quits: son0p (~ff@2800:484:1d81:b700::5) (Ping timeout: 268 seconds)
[09:30:59] *** Joins: Sketch_ (sketch@2604:180:2::a506:5c0d)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:26] *** Joins: karstensrage_ (~karstensr@nibbler.warped.com)
[09:31:43] *** Joins: ezzieygu1wuf (~Unknown@user/ezzieyguywuf)
[09:31:50] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[09:31:50] *** Joins: jrayhawk_ (~jrayhawk@user/jrayhawk)
[09:31:51] *** Joins: And1` (~And1@brewington.uberspace.de)
[09:31:55] *** Joins: SuperL4g (~akulbe@user/superlag)
[09:32:02] *** Joins: et_ (~et@user/et)
[09:32:08] *** Joins: ilikeyou_ (~ilikeyou@ec2-18-219-166-223.us-east-2.compute.amazonaws.com)
[09:32:12] *** Joins: e36freak_ (~e36freak@user/e36freak)
[09:32:14] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[09:32:21] *** Joins: yourname (~yourname@5.189.138.218)
[09:32:23] *** Joins: kyr_ (~kyr@167.71.50.12)
[09:32:24] *** Joins: downunde1 (~downunder@110.151.111.219)
[09:32:32] *** Joins: tetra (~trane@login.redpill-linpro.com)
[09:32:34] *** Joins: ccl_ (ccl@shell.xshellz.com)
[09:32:37] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[09:32:37] *** et_ is now known as et
[09:32:40] *** Joins: nop (~Murray@89.109-247-180.customer.lyse.net)
[09:32:59] *** Joins: zauberfisch_ (~Zauberfis@cm147-42.liwest.at)
[09:33:00] *** Joins: revolve_ (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:33:03] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:33:04] *** nop is now known as Guest501
[09:33:09] *** Joins: int (~int@0x4.cx)
[09:34:11] *** Joins: ^wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com)
[09:34:11] *** Quits: ^wuseman (~wuseman@90-229-213-60-no68.tbcn.telia.com) (Changing host)
[09:34:11] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[09:35:30] *** Joins: kolbe (~kolbe@user/kolbe)
[09:37:08] *** Quits: downunder (~downunder@110.151.111.219) (*.net *.split)
[09:37:08] *** Quits: zauberfisch (~Zauberfis@cm147-42.liwest.at) (*.net *.split)
[09:37:08] *** Quits: on^ (~on@50.231.5.242) (*.net *.split)
[09:37:08] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[09:37:08] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (*.net *.split)
[09:37:08] *** Quits: tijuco (~tijuco@user/tijuco) (*.net *.split)
[09:37:08] *** Quits: rcernin (~rcernin@101.189.141.138) (*.net *.split)
[09:37:08] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:37:08] *** Quits: muirrum (~muirrum@sourcehut/user/muirrum) (*.net *.split)
[09:37:08] *** Quits: wuseman (~wuseman@user/wuseman) (*.net *.split)
[09:37:08] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (*.net *.split)
[09:37:09] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[09:37:09] *** Quits: roadt_ (~roadt@36.7.92.131) (*.net *.split)
[09:37:09] *** Quits: fstd (~fstd@xdsl-89-1-56-234.nc.de) (*.net *.split)
[09:37:09] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[09:37:09] *** Quits: unop (~unop@194.154.249.71) (*.net *.split)
[09:37:09] *** Quits: oarion7 (anonymous@user/oarion7) (*.net *.split)
[09:37:09] *** Quits: useretail (~useretail@185.132.19.151) (*.net *.split)
[09:37:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[09:37:09] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (*.net *.split)
[09:37:09] *** Quits: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net) (*.net *.split)
[09:37:09] *** Quits: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com) (*.net *.split)
[09:37:09] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[09:37:09] *** Quits: ccl (ccl@shell.xshellz.com) (*.net *.split)
[09:37:09] *** Quits: mooz (~none@107.155.42.134) (*.net *.split)
[09:37:09] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (*.net *.split)
[09:37:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[09:37:09] *** Quits: przemoc (~przemoc@user/przemoc) (*.net *.split)
[09:37:09] *** Quits: litheum (~kolbe@user/kolbe) (*.net *.split)
[09:37:09] *** Quits: sixwheeledbeast (~zem@user/sixwheeledbeast) (*.net *.split)
[09:37:09] *** Quits: wwilliam (~afernande@user/wwilliam) (*.net *.split)
[09:37:09] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (*.net *.split)
[09:37:09] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:37:09] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:37:09] *** Quits: xiaomiao (~purrrr@gentoo/developer/patrick) (*.net *.split)
[09:37:09] *** Quits: Noventicx1 (~Noventicx@crux.uberspace.de) (*.net *.split)
[09:37:09] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (*.net *.split)
[09:37:09] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[09:37:09] *** Quits: setesat (~setesat@94.4.156.220) (*.net *.split)
[09:37:09] *** Quits: greknod282 (~grek@120.88.171.98) (*.net *.split)
[09:37:09] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[09:37:09] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[09:37:09] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:37:09] *** Quits: victorbrca (~victorbrc@user/victorbrca) (*.net *.split)
[09:37:09] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:37:09] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[09:37:09] *** Quits: armands (~armands@46.109.8.165) (*.net *.split)
[09:37:09] *** Quits: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[09:37:09] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:37:09] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (*.net *.split)
[09:37:09] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[09:37:09] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[09:37:09] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[09:37:09] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:37:09] *** Quits: peb (~PEB@debian/peb) (*.net *.split)
[09:37:09] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[09:37:09] *** Quits: kyr (~kyr@167.71.50.12) (*.net *.split)
[09:37:09] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:37:09] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:37:09] *** Quits: pooby (~pooby@167.99.100.8) (*.net *.split)
[09:37:09] *** Quits: And1 (~And1@brewington.uberspace.de) (*.net *.split)
[09:37:09] *** Quits: capn (~capn@user/capn) (*.net *.split)
[09:37:09] *** Quits: Lantizia (~Lantizia@user/lantizia) (*.net *.split)
[09:37:09] *** Quits: bobo (~bobo@irc.webirc.eu) (*.net *.split)
[09:37:09] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:37:09] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (*.net *.split)
[09:37:09] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (*.net *.split)
[09:37:09] *** Quits: themachine (~themachin@user/themachine) (*.net *.split)
[09:37:09] *** Quits: din0 (~dino@user/din0) (*.net *.split)
[09:37:09] *** Quits: ilikeyou (~ilikeyou@ec2-18-219-166-223.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:37:09] *** Quits: hid3 (~arnoldas@78.157.71.116) (*.net *.split)
[09:37:09] *** Quits: compuguy (~ahall@user/compuguy) (*.net *.split)
[09:37:09] *** Quits: jabster28 (~jabster28@81.111.217.63) (*.net *.split)
[09:37:09] *** Quits: Ox4 (~int@0x4.cx) (*.net *.split)
[09:37:09] *** Quits: jrayhawk (~jrayhawk@user/jrayhawk) (*.net *.split)
[09:37:09] *** Quits: yourname_ (~yourname@5.189.138.218) (*.net *.split)
[09:37:09] *** Quits: Sketch (sketch@new.rednsx.org) (*.net *.split)
[09:37:09] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[09:37:09] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:37:09] *** Quits: cim (~cim@205.185.117.110) (*.net *.split)
[09:37:09] *** Quits: marlinc (~marlinc@user/marlinc) (*.net *.split)
[09:37:09] *** Quits: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (*.net *.split)
[09:37:09] *** Quits: bertieb (~bertieb@217.155.39.147) (*.net *.split)
[09:37:10] *** Quits: Bayes (~Bayes@user/bayes) (*.net *.split)
[09:37:10] *** Quits: trane (~trane@login.redpill-linpro.com) (*.net *.split)
[09:37:10] *** Quits: hubvu_ (sid495858@tinside.irccloud.com) (*.net *.split)
[09:37:10] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (*.net *.split)
[09:37:10] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[09:37:10] *** Quits: sahilister (~sahiliste@user/sahilister) (*.net *.split)
[09:37:10] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[09:37:10] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:37:10] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:37:10] *** Quits: jaskal (~jaskal@user/jaskal) (*.net *.split)
[09:37:10] *** Quits: ryo (foobar@user/ryo) (*.net *.split)
[09:37:10] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[09:37:10] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[09:37:10] *** Quits: unixman (~aunixman@209-165-134-1.gci.com) (*.net *.split)
[09:37:10] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:37:10] *** And1` is now known as And1
[09:37:10] *** Sketch_ is now known as Sketch
[09:37:10] *** gpol2 is now known as gpol
[09:37:11] *** greknod2821 is now known as greknod282
[09:37:11] *** cim4 is now known as cim
[09:37:16] *** Joins: mooz_ (~none@107.155.42.134)
[09:37:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[09:37:32] *** Quits: N0ZYC_ (~N0ZYC@173.16.166.245) (Ping timeout: 240 seconds)
[09:37:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:37:46] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:37:54] *** Joins: tijuco (~tijuco@user/tijuco)
[09:38:15] *** Joins: on^ (~on@50.231.5.242)
[09:38:16] *** Joins: Mo (~Mo@dynamic-077-003-211-094.77.3.pool.telefonica.de)
[09:38:44] *** Joins: capn (~capn@user/capn)
[09:40:29] *** e36freak_ is now known as e36freak
[09:41:09] *** Joins: xiaomiao (~purrrr@gentoo/developer/patrick)
[09:42:24] *** Joins: Atque (~Atque@user/atque)
[09:42:50] *** Joins: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl)
[09:42:50] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[09:42:50] *** Joins: wwilliam (~afernande@63.240.73.102)
[09:42:50] *** Joins: bobo (~bobo@irc.webirc.eu)
[09:42:50] *** Joins: jabster28_ (~jabster28@81.111.217.63)
[09:42:50] *** Joins: armands_ (~armands@46.109.8.165)
[09:42:50] *** Joins: [RMS] (~rs@genoce.org)
[09:42:50] *** Joins: queue- (~nerd@rektnet.com)
[09:42:50] *** Joins: dino- (~dino@cpe-74-131-247-218.kya.res.rr.com)
[09:42:50] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[09:42:50] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[09:42:50] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:42:50] *** Joins: muirrum (~muirrum@sourcehut/user/muirrum)
[09:42:50] *** Joins: roadt_ (~roadt@36.7.92.131)
[09:42:50] *** Joins: oarion7 (anonymous@user/oarion7)
[09:42:50] *** Joins: jwash (~jwash@c-73-254-46-148.hsd1.wa.comcast.net)
[09:42:50] *** Joins: sixwheeledbeast (~zem@user/sixwheeledbeast)
[09:42:50] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[09:42:50] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:42:50] *** Joins: simplicity (~yti@user/simplicity)
[09:42:50] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[09:42:50] *** Joins: setesat (~setesat@94.4.156.220)
[09:42:50] *** Joins: Gerula (~Gerula@user/gerula)
[09:42:50] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:42:50] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[09:42:50] *** Joins: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu)
[09:42:50] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[09:42:50] *** Joins: dstein64 (~dstein64@dannyadam.com)
[09:42:50] *** Joins: dlam (~dlam@dlam.me)
[09:42:50] *** Joins: pooby (~pooby@167.99.100.8)
[09:42:50] *** Joins: Lantizia (~Lantizia@user/lantizia)
[09:42:50] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[09:42:50] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[09:42:50] *** Joins: compuguy (~ahall@user/compuguy)
[09:42:50] *** Joins: bertieb (~bertieb@217.155.39.147)
[09:42:50] *** Joins: hubvu_ (sid495858@tinside.irccloud.com)
[09:42:50] *** Joins: sahilister (~sahiliste@user/sahilister)
[09:42:50] *** Joins: koollman (~samson_t@user/koollman)
[09:42:50] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:42:50] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:42:50] *** Joins: jaskal (~jaskal@user/jaskal)
[09:42:50] *** Joins: ryo (foobar@user/ryo)
[09:42:50] *** Joins: tinystoat (~squeek@user/tinystoat)
[09:42:50] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[09:42:50] *** Joins: nickodd (~nickodd@user/nickodd)
[09:43:58] *** [RMS] is now known as Guest9702
[09:44:03] *** Joins: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com)
[09:44:25] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[09:44:25] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:44:46] *** Joins: peb (~PEB@debian/peb)
[09:44:48] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[09:44:48] *** Quits: birkoff (birkoff@birkoff.thunderirc.net) (Changing host)
[09:44:48] *** Joins: birkoff (birkoff@user/birkoff)
[09:44:50] *** Joins: mz` (~mz`@user/mz/x-8532539)
[09:45:34] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:49:36] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:49:41] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[09:49:56] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:50:10] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[09:50:27] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:52:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:53:17] *** Joins: N0ZYC (~N0ZYC@173.16.166.245)
[09:54:30] *** Joins: koolazer (~koo@user/koolazer)
[09:54:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:03:27] *** Joins: Jong (~Jong@2620:10d:c090:400::5:6a53)
[10:04:51] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[10:07:57] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:17:53] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[10:18:07] *** Joins: fef (~thedawn@user/thedawn)
[10:21:49] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:24:27] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[10:31:46] *** Joins: jmew (~jmew@host-78-147-81-209.as13285.net)
[10:31:46] *** Quits: jmew (~jmew@host-78-147-81-209.as13285.net) (Changing host)
[10:31:46] *** Joins: jmew (~jmew@user/jmew)
[10:32:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:38:06] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[10:43:48] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[10:45:46] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[10:45:57] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[10:46:30] *** Joins: yustin (~yustin@user/yustin)
[10:46:32] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[10:52:24] *** Quits: rcernin_ (~rcernin@101.189.141.138) (Quit: WeeChat 3.4)
[10:52:36] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[10:54:20] *** Quits: unixman_ (~aunixman@209-165-134-1.gci.com) (Quit: rm -rf /)
[10:55:02] *** Joins: unixman (~aunixman@209-165-134-1.gci.com)
[10:55:41] *** Joins: Hercules (~Hercules@user/hercules)
[10:56:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:58:48] *** Quits: Hercules (~Hercules@user/hercules) (Client Quit)
[11:00:00] *** Quits: unop_ (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:16] *** Joins: unop (~unop@194.154.249.71)
[11:02:07] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:06:21] <amosbird> Hello! What's the right way of checking an input $1 is a number and between 1 and 64?
[11:06:51] <Soliton> !faq valid
[11:06:51] <greybot> https://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
[11:07:59] *** Joins: situ_ (situ@nat-pool-brq-t.redhat.com)
[11:08:54] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:12:38] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:13:45] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[11:20:03] <Nintendo> Wouldn't it be even easier than the FAQ solutions, given the convenient rejection of 0 per the requirement?
[11:20:18] <Nintendo> (( $1 >= 1 && $1 <= 64 ))
[11:21:55] <geirha> that allows arbitrary code execution
[11:24:39] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe)
[11:24:51] <dan01> Why does ./script.sh run as script?
[11:25:05] <dan01> I mean ./ is just a path right? How come the script gets executed?
[11:25:19] <Soliton> what else do you expect?
[11:25:57] <dan01> Well I mean how come if you just write script.sh it won't get executed, but it works if you write ./script.sh?
[11:26:03] <wiscii> try without ./
[11:26:04] *** Joins: hid3 (~arnoldas@78.157.71.116)
[11:26:18] <Soliton> because if you give no path then it looks through PATH.
[11:26:20] <geirha> since you didn't provide a path, bash will look for the command in PATH instead
[11:26:29] <wiscii> path
[11:26:43] <dan01> Ok, I see
[11:26:55] <wiscii> did somwbody order paving slabs ?
[11:27:05] *** Quits: oarion7 (anonymous@user/oarion7) (Quit: Running IRC on a charmed medieval abacus.)
[11:27:20] <dan01> Then, what's the role of #!/bin/env bash, I've heard there's a difference between source script.sh and ./script.sh because source won't create a new subshell
[11:27:46] <dan01> But is the subshell created in ./ because of the #!/bin/bash thing? Or is that irrelevant to that?
[11:28:02] <Soliton> the shebang only plays a role if you call the script. if you source it it's just a comment.
[11:28:02] <Nintendo> I don't see the arbitrary code execution, but I did learn that (( )) does not equate any non-integer string as 0.
[11:28:21] <osse> dan01: script.sh isn't actually a binary exe file; it's just a text file. the role of that is to tell the kernel how to execute it
[11:28:29] <geirha> neither involves a subshell. If you exeecute another script, it will be run by another shell instance, whichever is set in the shebang
[11:29:33] <geirha> !#!
[11:29:33] <greybot> A script MUST begin with a #! line, called the "shebang" (from hash+bang). It tells the kernel what interpreter to run, to read your script. See <http://stackoverflow.com/a/733901/58803> and <http://mywiki.wooledge.org/BashGuide/CommandsAndArguments#Scripts> and <http://www.in-ulm.de/~mascheck/various/shebang/>
[11:31:02] *** Joins: lavaball (felix@31.204.155.215)
[11:33:44] <Soliton> # f() (( $1 >= 1 && $1 <= 64 )); f 'a[$(echo oops>&2)]'  # Nintendo
[11:33:45] <shbot> Soliton: oops
[11:34:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:34:41] <dan01> Hmm now I'm even more confused
[11:34:54] <dan01> Why if I run source script.sh on an executable it won't work?
[11:35:12] <Soliton> what is an executable here?
[11:35:15] <dan01> -bash: source: /usr/bin/test: cannot execute binary fil
[11:35:30] <dan01> Soliton: A bash script marked as executable
[11:35:32] <Soliton> source reads a shell script.
[11:35:49] <Soliton> doesn't seem like that is a script.
[11:36:10] <dan01> Ah the problem was I needed to run source ./script.sh
[11:36:17] <dan01> well mine is called just test
[11:36:23] <dan01> Ok I get it now
[11:36:23] <Nintendo> Thank you, Soliton.  Wow, that's scary.
[11:36:44] <Soliton> source also looks in PATH if you don't specify a path.
[11:38:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:39:01] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[11:39:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 260 seconds)
[11:40:44] *** Joins: TheSilentLink_ (~TheSilent@user/thesilentlink)
[11:40:47] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 252 seconds)
[11:40:48] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[11:41:32] *** Joins: freep (~freepppp@46.246.189.172.dsl.dyn.forthnet.gr)
[11:42:08] *** TheSilentLink_ is now known as TheSilentLink
[11:42:42] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[11:43:19] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:6598:2294:f787:fa6c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:45:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[11:46:45] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[11:48:00] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 250 seconds)
[11:48:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:48:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:51:44] *** Joins: Major_Biscuit (~MajorBisc@c-001-005-022.client.tudelft.eduvpn.nl)
[11:57:08] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[11:58:39] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:00:11] *** Joins: adac (~adac@212-41-238-132.static.upcbusiness.at)
[12:01:33] *** Joins: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6)
[12:01:57] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:02:25] *** Joins: xx (~xx@user/xx)
[12:03:05] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:68a2:6953:6de0:8da2) (Quit: Client closed)
[12:03:15] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:03:21] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:11:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:14:17] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[12:19:35] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:23:57] *** Quits: richardm75 (~richardm7@2600:8801:c507:b200:e5c3:dbc5:5f95:e7a7) (Ping timeout: 240 seconds)
[12:25:17] *** Joins: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it)
[12:25:17] *** Quits: _gabriele (~gabriele@host-95-250-67-210.retail.telecomitalia.it) (Changing host)
[12:25:17] *** Joins: _gabriele (~gabriele@user/gabriele)
[12:25:17] *** _gabriele is now known as gabriele
[12:26:49] *** Joins: nickdiaz1wag209 (~bjpenn_@98.42.87.100)
[12:29:17] *** Quits: nickdiazswag209 (~bjpenn_@13.110.54.42) (Ping timeout: 240 seconds)
[12:36:14] *** Quits: itachi19 (~itachi19@46.232.210.60) (Quit: The Lounge - https://thelounge.chat)
[12:36:34] *** Joins: itachi19 (~itachi19@46.232.210.60)
[12:42:40] *** Quits: uuidNuniq (~weechat@222.67.14.47) (Quit: WeeChat 3.4)
[12:43:10] *** Joins: uuidNuniq (~weechat@222.67.14.47)
[12:46:58] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:47:01] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.0)
[12:48:26] *** Quits: kyr_ (~kyr@167.71.50.12) (Quit: Lost terminal)
[12:48:46] *** Joins: kyr (~kyr@167.71.50.12)
[12:49:43] *** Quits: on^ (~on@50.231.5.242) (Ping timeout: 250 seconds)
[12:50:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[12:51:28] *** Joins: drd (~drd@93-45-53-200.ip101.fastwebnet.it)
[12:53:26] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[12:59:59] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[13:01:08] *** Joins: kspalaiologos (~kspalaiol@user/kspalaiologos)
[13:05:04] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[13:09:33] *** Quits: adac (~adac@212-41-238-132.static.upcbusiness.at) (Quit: Leaving)
[13:10:10] *** Joins: jiploading (~vjipac@user/vjipac)
[13:11:41] *** Joins: flipchan (~filip@188-169-255-31.dsl.utg.ge)
[13:11:43] <flipchan> does anyone know how I can remove white space in a bash/shell command? im trying get some values from a file with a one liner and grep
[13:12:02] *** Joins: TomyWork (~TomyLobo@p200300e80f0067002cd75dabac6c542d.dip0.t-ipconnect.de)
[13:12:27] <Soliton> read -r value < file
[13:14:32] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:16:42] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[13:16:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:9102:5c27:2e48:97c2)
[13:21:29] *** Joins: bluedust_ (~bluedust@59.98.49.134)
[13:22:51] *** Quits: jmew (~jmew@user/jmew) (Ping timeout: 245 seconds)
[13:23:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[13:23:50] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[13:23:56] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[13:24:17] *** Quits: situ_ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 240 seconds)
[13:24:44] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 252 seconds)
[13:25:12] *** Joins: locrian9 (~mike@211.sub-174-193-208.myvzw.com)
[13:25:36] *** Joins: rendar (~rendar@user/rendar)
[13:25:48] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:26:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:28:30] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[13:35:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:36:08] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:37:13] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[13:39:21] *** Joins: shad (~shad@user/shad)
[13:40:37] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[13:40:57] *** Quits: furrymcgee (~devuan@cgn-89-1-211-231.nc.de) (Ping timeout: 240 seconds)
[13:41:47] *** Joins: Jad (~Nashmi@user/jad)
[13:43:03] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:43:24] <The_Blode_> Good morning all. Does anybody know how to pop a line out of a text file? Quick and dirty.
[13:43:49] <djph> The_Blode_: grep?
[13:44:22] <The_Blode_> I mean, pop the last line. Apologies.
[13:44:36] <The_Blode_> Sorry, delete the last line.
[13:45:00] <djph> well, you can use gnu head for that; but it's not portable
[13:45:01] <selckin> head -n -1
[13:45:20] <The_Blode_> Thank you. Let me give it a whirl.
[13:45:52] <Soliton> printf '%s\n' '$d' w q | ed -s file
[13:46:18] <djph> selckin: bah, I had to look up the right syntax :(
[13:46:26] <Soliton> assuming you want to edit the file.
[13:47:59] *** Joins: furrymcgee (~devuan@cgn-89-1-209-145.nc.de)
[13:50:40] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[13:56:33] <jelly> the standard editor!
[13:58:10] <selckin> esoteric not quick & dirty :)
[13:59:10] <Soliton> surely the standard is furthest away from esoteric.
[14:00:40] <Earnestly> What does it say when the standard becomes to esoteric
[14:00:44] <Earnestly> to/the
[14:04:03] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe) (Ping timeout: 250 seconds)
[14:04:19] <selckin> you think more then 1% of people in here have used ed ?
[14:05:18] <emanuele6> ed, sed, awk, cp, rm, unlink, etc. yes
[14:05:59] <selckin> you should go into politics
[14:07:48] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[14:08:10] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[14:08:41] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Remote host closed the connection)
[14:12:24] *** Joins: timm (~timm@user/timm)
[14:14:25] <jelly> I've never used ed, but it's there and it's exactly the right tool for this particular issue
[14:15:58] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[14:16:33] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe)
[14:18:48] *** Quits: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net) (Remote host closed the connection)
[14:19:40] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:19:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[14:19:44] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[14:19:51] *** Joins: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net)
[14:20:57] *** Lord_of_Life_ is now known as Lord_of_Life
[14:22:01] *** tetra is now known as trane
[14:29:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[14:32:24] *** Joins: tercaL (~tercaL@user/tercal)
[14:33:18] <tercaL> Hi there. How to search and find files starting with a capital letter in a directory, let's say the letter is 'S'? Also, how to find files with a specific owner, let's say; root?
[14:33:36] <tercaL> *in directories
[14:33:51] <selckin> !find
[14:33:51] <greybot> http://mywiki.wooledge.org/UsingFind
[14:36:05] *** Quits: locrian9 (~mike@211.sub-174-193-208.myvzw.com) (Quit: Lost terminal)
[14:36:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[14:46:11] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:47:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:47:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:51:52] *** Quits: Doqnach (~bofh@2a01:7c8:aab1:94:5054:ff:fef4:3181) (Quit: Doqnach)
[14:52:11] *** Quits: martinus__ (~martin@127.59.202.77.rev.sfr.net) (Ping timeout: 252 seconds)
[14:54:38] *** Joins: shad (~shad@user/shad)
[14:54:57] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[14:55:47] <bn_work> tirnanog: sorry, fell asleep, slumped over writing bash code last night.  Re. flock(1):  it seems it doesn't exist on OSX but does on Linux.  So I was reading its man page & https://mywiki.wooledge.org/BashFAQ/045 and am wondering how I would rewrite the above & deal with the PID file though? (or would the PID file become the lock file?  ex:  https://mywiki.wooledge.org/BashFAQ/045#CA-ab955f35824fa6a6c2dad7ae4ca84e27357c6f1d_1 )
[14:57:10] <Earnestly> Don't use pidfiles
[14:57:14] <tirnanog> you need a mutually agreed-upon path. it doesn't have to be a pid file.
[14:57:43] <tirnanog> how does the thing that is presently the subject of this pid file get launched to begink with? this "baz".
[14:59:30] <Earnestly> (I.e. forget pid files exist, like $0, force yourself to exclude them as potential solutions for anything)
[14:59:42] *** Quits: downunde1 (~downunder@110.151.111.219) (Quit: WeeChat 3.4)
[15:00:44] <bn_work> Earnestly: it just creates one by default, and it will complain if a stale one is left
[15:00:56] <bn_work> it = app
[15:01:24] <Earnestly> That word triggers me so much lol
[15:01:52] <Earnestly> bn_work: Look to see if the daemon you're using has a way to run in the foreground and not depend on pid files
[15:02:08] <Earnestly> Very few pieces of software still depend on these stupid designs
[15:02:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[15:03:06] <Earnestly> (Ironically, linux's recent pidfd makes it possible, in a different form)
[15:03:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:03:58] <bn_work> tirnanog: it has a java build-tool generated launcher script?  besides the subshell race condition, I'm still a bit unclear how other ones may occur with the original code I linked though?
[15:06:09] <tirnanog> I don't have the time to keep going over it at this point. suffice to say that the -e test is a race and walking the process table is a race. reading the pid file is a race; it proves nothing as concerns the state of the process you are intending to poll.
[15:06:40] *** Joins: maryo87 (~Maryo@user/maryo)
[15:07:36] <Earnestly> tirnanog: Is it another top secret project so the nature of how it works will never be known to us?
[15:07:39] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:08:03] <tirnanog> given that you are already using some wrapper script to lauch the application in question, you might have it acquire a file lock and simply run the application in the foreground. when the application exits, so will the wrapping script, and the lock will be automatically released (if using flock).
[15:08:37] <tirnanog> you then attempt to acquire the lock in this other script. a failure to acquire the lock means the application is running. it's not conceptually that complicated. I would encourage you to play around with the flock utility and get a sense of how it works in practice.
[15:08:48] <tirnanog> Earnestly: do you really want to see it?
[15:09:09] <Earnestly> Probably not, but as an aside, I sometimes use fifos for signalling
[15:09:33] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[15:09:34] <Earnestly> And I get around the need for locks by making things idempotent
[15:09:37] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[15:09:43] *** Joins: luckiswithme (~luckiswit@103.226.104.2)
[15:09:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:09:50] <bn_work> Earnestly: the *app* creates the PID file , not the java launcher script or "daemon" (which there really is none, AFAICT, unless you count the build generated launcher script- which mentions nothing about pid files, except in a `execRunner` function where it does an exec to "ensure accurate pids")
[15:10:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:10:45] <Earnestly> If it's not a daemon, there's no need for pid files
[15:11:01] <tirnanog> Earnestly: other than a little surrounding chitter-chatter, this was all the code presented so far: https://www.irccloud.com/pastebin/1oGXLKtX/test.bash
[15:11:38] <Earnestly> systemd directives, huh
[15:11:59] <tirnanog> systemd influenced variable names.
[15:12:22] <Earnestly> But systemd would be a solution, i.e. a supervisor
[15:12:26] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:9102:5c27:2e48:97c2) (Read error: Connection reset by peer)
[15:13:27] <tirnanog> it's some minimal alpine container thing, and already polluted by some java-developer-tier application startup scripts, as I understand it.
[15:13:32] <Earnestly> But yeah, this is insane
[15:14:03] <Earnestly> I would mention pgrep, but it's entirely wrong approach, even with more sensible use of tooling
[15:14:25] <tirnanog> what I said earlier (aside from the ridiculous code assignment then injection) was to use a lock file if it absolutely must be known that some other script has launched something before proceeding to this connectivity polling routine.
[15:15:33] <tirnanog> and if there is no adequate supervisor to hand. that startup scripts originating from the java ecosystem are involved suggests that it would already be a mess.
[15:15:43] <Earnestly> There's too much to go over, and I have headache, everything is wrong
[15:16:18] <tirnanog> you raise a good point about fifos. they're so easily overlooked.
[15:16:42] *** Joins: arinov (~arinov@85.106.97.174)
[15:16:58] <bn_work> tirnanog:  the problem is the container doesn't gracefully let processes end and it just leaves stale PID files around (AFAICT, I can disable the PID file creation by the app).  Also, BTW, I'm not trying to run multiple instances of the service, so wouldn't checking for those type of race conditions be overkill?
[15:17:01] <Earnestly> I use for notification and control, to turn polling into blocking io
[15:18:06] <Earnestly> tirnanog: (for control is nice because can be done over ssh)
[15:18:10] <tirnanog> bn_work: if you've determined for yourself that none of this matters, I'm not really sure there's much else for me to say.
[15:18:21] *** Quits: luckiswithme (~luckiswit@103.226.104.2) (Ping timeout: 250 seconds)
[15:18:30] <tirnanog> the old adage about leading a horse to water springs to mind, and I'm distracted by my work at this point.
[15:19:23] <Earnestly> Use proper supervisor, probably has runit, alpine seems to have this thing: http://supervisord.org/index.html
[15:19:42] <bn_work> Earnestly: it *was* a systemd unit, the only reason this bastardization of it exists is because people are foaming at the mouth for containers
[15:19:57] <Earnestly> people are dumb ;(
[15:20:42] <Earnestly> But it looks like you can use this supervisord
[15:21:10] <Earnestly> It has ctl program which can be used to start/stop etc
[15:21:54] <Earnestly> haha https://github.com/Supervisor/initscripts/blob/master/ubuntu#L53
[15:22:03] <bn_work> Earnestly:  "too much to go over"?
[15:22:05] <Earnestly> Shit everywhere, can't escape
[15:22:41] <bn_work> tirnanog: sorry, s/can/CAN'T/)
[15:23:00] <jelly> Earnestly, this is when "supervisor" itself is started on a distro with sysvinit init scripts.
[15:23:05] <tirnanog> that's fine. don't worry about the pid file.
[15:23:17] <tirnanog> just pretend it's not a factor in a potential solution for a moment.
[15:23:25] <jelly> process managers all the way down
[15:24:01] <tirnanog> Earnestly: come to think of it, apline uses openrc doesn't it? though I'm not sure that these trendy containerized forms of apline would. anyway, openrc does provide supervise-daemon which, along with runscript deps, is better than nothing.
[15:24:28] <jelly> containers are supposed to be self-well,-contained
[15:24:33] <jelly> no need for a pid file
[15:24:40] <Earnestly> tirnanog: The container might not come with init (openrc)
[15:24:46] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[15:24:48] <tirnanog> yeah. I suspect that you are quite right.
[15:24:48] <bn_work> tirnanog:  what?  you're acting as if I *want* to containerize this, I don't, I don't really have much of a say in this matter at all, I'm just trying to make the best of this situation
[15:24:55] <jelly> a container is supposed to run one process
[15:24:55] <tirnanog> ?
[15:25:13] <tirnanog> are you addressing that last remark to me in error?
[15:25:13] <Earnestly> jelly: No it can run many, but doesn't need init
[15:25:29] <jelly> Earnestly, it _can_, but it's not _supposed to_
[15:25:55] <tirnanog> I'm acting in no such fashion.
[15:26:09] <tirnanog> in fact, I never even questioned why it was being containerised.
[15:26:47] <Earnestly> jelly: I don't think you're right about that, much emphasis these days made on running logical groupings of software that provide some service
[15:27:17] <Earnestly> Often this means just one thing like web server
[15:27:22] <jelly> that's abuse of the original container idea
[15:27:26] <Earnestly> But api server can mean running several bits
[15:28:30] <Earnestly> bn_work: I would, as this is bodge job anyway, just use pgrep with specific flags to check if process running.  Still racy, but fewer races to lose
[15:29:05] <Earnestly> Have wrapper script use fifo as notification, create mini supervisor that responds to reads from fifo and does stuff.  It's about 10 lines of sh to have basic supervisor
[15:29:30] <tirnanog> ^ this is true.
[15:29:49] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[15:30:30] *** Joins: unop (~unop@194.154.249.71)
[15:30:49] <bn_work> jelly: yes, that's the other thing I have a beef with (I'm being "requested" to put multiple processes in one container)
[15:30:56] <Earnestly> while read -r ctl; do case $ctl in start) ... ;; stop) ... ;; ... esac; done < namedpipe.  Then wrapper writes start/stop to namedpipe
[15:31:10] <Earnestly> Can include logic in loop to make sure start not seen twice in a row
[15:32:03] <bn_work> tirnanog: I'm just responding to "if you've determined for yourself that none of this matters, I'm not really sure there's much else for me to say." "the old adage about leading a horse to water springs to mind"
[15:32:14] <bn_work> s/I'm/I was/
[15:32:29] <Earnestly> Can also put upness test in wrapper to write 'ready' to namedpipe, and then mini supervisor can alert other things as needed
[15:32:57] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:33:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[15:33:56] <tirnanog> bn_work: I'm not sure how you read into that that I am commenting on the cirumstances under how - or why - it came to be that a container was employed. I just don't have the patience to keep re-iterating that, yes, race conditions can matter at this juncture. I mean, you asked originally whether races can occur and the answer remains "yes".
[15:34:18] <tirnanog> the answer isn't going to chance for as long as you employ the present approach, as was stated earlier.
[15:34:21] <tirnanog> change*
[15:34:29] <tirnanog> anyway, Earnestly's idea is better than mine.
[15:35:29] <tirnanog> a blocking read loop on a fifo to which any number of scripts may signal their state would afford you a lot of power.
[15:36:00] <Earnestly> Keep it simple though, there's reason systemd is so complex, tries to solve lots of actual problems
[15:36:20] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:36:29] <tirnanog> wise words. a fact often overloked by systemd's critics.
[15:36:36] *** Quits: arinov (~arinov@85.106.97.174) (Ping timeout: 268 seconds)
[15:36:42] <bn_work> tirnanog: anyway, wasn't trying to attack, I do appreciate the suggestions, I was just trying to better understand how the other type of race conditions occur with that piece of code (you mentioned everything was a race condition but I was still vague on it)
[15:36:55] <tirnanog> bn_work: ok, sure. I did come across as a bit grumpy.
[15:36:57] <Earnestly> bn_work: It's basic TOCTOU
[15:37:13] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[15:37:15] <tirnanog> but, in fairness, I did link to some resources earlier.
[15:37:22] <Earnestly> Not always avoidable, often not that important
[15:37:34] <tirnanog> checking whether a file exists before reading from it is a very simple TOCTOU that is fairly easy to grasp.
[15:37:41] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[15:37:52] <tirnanog> I mean, there's more, but it's a good case to consider in the first instance.
[15:39:01] <tirnanog> I would re-iterate, also, that your storing of code by a variable breaks even that.
[15:39:33] <tirnanog> the command substitution happens _before_ the code payload that incorporates that -e test is even delivered to a shell.
[15:39:37] *** Quits: maxzor__ (~maxzor@abordeaux-652-1-2-77.w90-16.abo.wanadoo.fr) (Quit: compiuter crash)
[15:39:44] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[15:40:08] <tirnanog> hence, you were urged not to do this, even before considering the veracity of this code.
[15:40:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:40:17] <bn_work> Earnestly: yes, that's (prgrep -f) what I was originally using but alpine linux's busybox pgrep didn't support -F (starting to get more worried about using alpine-linux as I keep running into these "oh, x isn't included") , so I've had to add procps as a package
[15:41:35] <Earnestly> bn_work: -F not needed when live in world were pid file not exist
[15:41:36] *** Joins: maryo (~Maryo@user/maryo)
[15:41:40] <Earnestly> *taps head*
[15:41:41] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b2b00000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:42:01] <bn_work> Earnestly: thanks, I understand the FIFO concept but haven't ever had to create/use one in bash, I guess I can try looking into that
[15:42:03] <tirnanog> I'm not sure that this has been acknowledged.
[15:42:07] <Earnestly> busybox is very limited, ps is not implemented at all
[15:42:21] <Earnestly> toybox is true successor
[15:42:26] <tirnanog> this $(cat ...) thing happens before the file-existence test is even conducted.
[15:42:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[15:42:33] <bn_work> Earnestly: so is "ctl" a (FIFO?) var that was declared earlier?
[15:42:43] <tirnanog> there is a reason that people are implying that it's horribly broken.
[15:42:46] <Earnestly> read creates variable
[15:42:56] <Earnestly> I called it $ctl, you can call it whatever you want
[15:43:15] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:43:56] *** Joins: seninha (~seninha@user/seninha)
[15:44:52] <Earnestly> bn_work: I'd also join mini-supervisor to process, one per-process.  Don't try to make something that handles more than one process
[15:45:27] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 250 seconds)
[15:45:50] *** Quits: roadt_ (~roadt@36.7.92.131) (Remote host closed the connection)
[15:46:23] <bn_work> tirnanog: yes, thanks for linking those, was digesting those last night/this morning.  I've studied race conditions in college but I've always found it difficult to identify them as it's a type of pattern and not a specific "text" so when I saw the example in the first link with arbitrary code snippet, I was like "ok, how is this the same/similar"?
[15:48:18] <bn_work> Earnestly: doh, s/prgrep -f/pgrep -F/
[15:49:19] <tirnanog> Earnestly: busybox does have a ps applet on offer.
[15:49:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:49:49] *** Quits: kspalaiologos (~kspalaiol@user/kspalaiologos) (Quit: Leaving)
[15:50:17] <tirnanog> it's not great, mind.
[15:51:29] <Earnestly> tirnanog: Look at code, there is virtually nothing.  It implements -o and -T, no -p
[15:51:31] <Earnestly> Nothing else
[15:51:38] <tirnanog> I know. I tested it for conformance once.
[15:51:45] <Earnestly> That's WIP
[15:52:42] <tirnanog> as you say, there's not much to test!
[15:53:04] <Earnestly> On the other hand, toybox is quite a nice bit of code.  Landley has done a good job on implementing things like ps to the best he can according to POSIX spec, but notes deviation when the spec is being silly
[15:53:21] <Earnestly> The comments are entertaining
[15:53:21] <bn_work> tirnanog: I understand what you're saying now, ie:  L1 evals the -e but it doesn't get run till L3, but I guess I don't understand what the race condition/risk if only one service is allowed to run anyway?
[15:54:09] <tirnanog> bn_work: you test the existence of the file before proceeding to perform some operation based on the existence of that test. there is no proof that the file does or doesn't exist at that point.
[15:54:44] <tirnanog> taken in isolation, an example of how it might be improved is to just use the read builtin to try to read from the file. if you read something successfuly, then - of course - it had to exist.
[15:54:54] <tirnanog> and you've reduced these two operations to one.
[15:56:05] <tirnanog> there are some downsides, though, mainly owing to bash's limited error handling. let's say a read fails. do we know whether that was on account of ENOENT or for some other reason? in bash, we can't know. there's no way to get the error number of the underlying syscall.
[15:56:19] *** Quits: jiploading (~vjipac@user/vjipac) (Quit: Lost terminal)
[15:56:34] <tirnanog> oops, "based on the outcome of that test", rather.
[15:56:36] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[15:57:20] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[15:58:12] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[15:58:18] <tirnanog> in the locking article, mkdir was mentioned because the act of creating a directory is atomic. if two processes try to race to create the same directory, there can only be one victor. therefore, the matter of whether the operation succeeded can be taken as an indication of having 'won' the lock.;
[15:58:38] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e4b0:adf8:305f:a850)
[15:59:10] <tirnanog> again, this is not taking into consideration the possibility that mkdir could have failed for other reasons (hopefully not).
[15:59:48] <tirnanog> flock is better still, because the lock is released as soon as the process holding the lock goes away.
[16:00:37] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[16:01:29] *** Joins: thiras (~thiras@user/thiras)
[16:02:02] <tirnanog> Earnestly: has anyone packaged toybox yet?
[16:02:17] <tirnanog> I assume it's not hard to compile. just wondering.
[16:02:37] *** Quits: clime (~clime@78-80-113-95.customers.tmcz.cz) (Ping timeout: 240 seconds)
[16:03:36] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:03:52] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:04:02] <Earnestly> Hm, I haven't looked
[16:04:02] <bn_work> tirnanog:  I thought bash's read builtin can only read user-input from stdin or a fd? (or are you saying the fd would be mapped to a file?)
[16:04:21] <tirnanog> you forget about input redirection.
[16:04:34] * Earnestly builds it to see
[16:04:35] *** Quits: revolve_ (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: No route to host)
[16:04:50] *** Joins: jiploading (~vjipac@user/vjipac)
[16:05:09] <tirnanog> but yes, you could technically attempt to open it first with exec.
[16:06:12] <Earnestly> tirnanog: toybox is easy to build, works well
[16:06:17] <tirnanog> ah, splendid.
[16:06:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:07:02] <tirnanog> I just noticed that it's in AUR also.
[16:07:36] *** Joins: shad (~shad@user/shad)
[16:10:37] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[16:10:53] *** Joins: unop (~unop@194.154.249.71)
[16:12:23] *** Quits: unop (~unop@194.154.249.71) (Read error: Connection reset by peer)
[16:12:51] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Ping timeout: 276 seconds)
[16:13:19] *** Joins: unop (~unop@194.154.249.71)
[16:13:49] <Earnestly> tirnanog: https://repology.org/badge/versions-matrix.svg?projects=toybox&require_all=1
[16:14:22] <Earnestly> Curiously few
[16:14:56] <bn_work> ok, well thanks for all the suggestions, tirnanog & Earnestly, I will try to implement those now (since this was wanted "yesterday"^2 ðŸ˜‚)
[16:16:22] <tirnanog> if you don't have time to do it properly(tm), at the very least, split out the socket check. none of the rest of it needs bash, and you can just run that directly, which will attend to the expansions-happening-too-soon issue.
[16:17:08] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[16:17:13] *** Quits: bluedust_ (~bluedust@59.98.49.134) (Remote host closed the connection)
[16:18:04] *** Quits: Bayes^_^ (~Bayes@vps-1d06364e.vps.ovh.ca) (Changing host)
[16:18:04] *** Joins: Bayes^_^ (~Bayes@user/bayes)
[16:18:12] *** Bayes^_^ is now known as Bayes
[16:18:51] *** Joins: zeden (~zeden@user/zeden)
[16:19:39] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:20:00] *** Joins: zeden (~zeden@user/zeden)
[16:20:57] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[16:21:46] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:21:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[16:22:02] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:22:17] *** Quits: furrymcgee (~devuan@cgn-89-1-209-145.nc.de) (Ping timeout: 250 seconds)
[16:22:17] <tirnanog> bn_work: for example, this is still shit but at least it's not outright broken: https://termbin.com/kp96
[16:23:30] *** Joins: Trieste (T@user/pilgrim)
[16:23:31] *** Joins: malina (~malina@user/malina)
[16:23:51] <tirnanog> it might buy you some time to consider how it can properly be done.
[16:26:13] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[16:28:58] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[16:31:50] *** Joins: arinov (~arinov@78.162.47.28)
[16:32:21] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:32:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[16:32:50] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[16:33:11] *** Joins: zoe (~zoe@fsf/member/zoe)
[16:34:18] *** Joins: bluedust (~bluedust@59.98.49.134)
[16:34:43] *** Joins: liveacoustic (~adison@user/liveacoustic)
[16:35:32] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[16:36:40] *** Joins: Payam (~Payam@138.106.57.132)
[16:38:10] <Payam> Hi, I want to sure that .gitignore ignores any changes under any directory and subdirectories under src/. I don't want to write src/**/**/**....
[16:38:11] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:38:29] <Payam> Because I don't always know the depth of subdirectories
[16:38:33] <Payam> What can I write instead?
[16:39:02] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:39:47] <NRK[m]> `man gitignore`
[16:39:59] <selckin> src/
[16:40:11] <NRK[m]> says trailing /** has infinite depth
[16:42:25] <Earnestly> bn_work: (Fwiw, wrapper and supervisor can be made one script, no need for separate wrapper unless cannot be avoided)
[16:45:12] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:46:50] *** Joins: jarocz (~jaro@host-185-78-133-160.jmdi.pl)
[16:47:34] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[16:48:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[16:51:47] <twkm> asking #bash about something that only matters to #git seems weird.
[16:53:02] <djph> twkm: don't you know, this is the OneTruePlace for all questions that involve a commandline
[16:53:36] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[16:54:22] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[16:55:23] *** Quits: jarocz (~jaro@host-185-78-133-160.jmdi.pl) (Quit: Leaving.)
[16:55:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:56:53] <selckin> do you want to talk to a manager
[16:57:01] *** Joins: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl)
[16:59:27] *** Joins: arinov_ (~arinov@78.162.46.154)
[16:59:30] *** Quits: arinov (~arinov@78.162.47.28) (Ping timeout: 256 seconds)
[17:01:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:01:42] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[17:02:48] *** Joins: han-solo (~hanish@user/han-solo)
[17:02:55] <djph> selckin: can I replace them with a small shell script?
[17:03:55] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:04:40] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:04:47] *** timm is now known as f00
[17:06:57] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[17:08:19] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[17:08:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:08:41] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:08:48] *** Parts: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl) ()
[17:09:06] *** Quits: Mo (~Mo@dynamic-077-003-211-094.77.3.pool.telefonica.de) (Ping timeout: 250 seconds)
[17:09:42] *** Joins: revolve (~u0_a227@82-132-238-254.dab.02.net)
[17:09:44] <bn_work> tirnanog:  thanks, didn't know about "signal 0" being useful for checking.  so is -e (with [ or [[ ) not atomic?
[17:10:30] <tirnanog> testing whether a file exists then proceeding to do something based on the outcome of that test is non-atomic.
[17:11:18] <tirnanog> it should be obvious, if you think about it.
[17:11:34] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Ping timeout: 268 seconds)
[17:15:31] *** Quits: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[17:15:31] *** Joins: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl)
[17:15:53] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[17:16:12] *** Joins: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66)
[17:17:06] *** Quits: Gooberpatrol_66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[17:17:24] *** Quits: jiploading (~vjipac@user/vjipac) (Quit: leaving)
[17:18:35] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[17:18:35] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[17:18:44] <tirnanog> although, I doubt that was the most pressing problem you face, for reasons that have been discussed several times over by now.
[17:19:05] <bn_work> tirnanog:  your example also does an if ... then ... else ... fi; so how is it not the same issue? (besides also using kill -0 -- "$pid") ?
[17:19:19] <tirnanog> I don't recall claiming that it was race free.
[17:19:27] <tirnanog> certainly that was not implied by "this is still shit".
[17:19:38] <tirnanog> pid files are nonsense to begin with.
[17:20:42] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:20:47] <bn_work> right, so the question was about -e, ie:  I'm trying to understand if doing `[[ -e /path/to/lockfile ]]` is worse/better than `read -r pid < /run/foo/bar/RUNNING_PID`
[17:21:26] <tirnanog> a pid file isn't a lockfile.
[17:21:36] <tirnanog> so I don't know why you frame it that way.
[17:21:40] <Blondie101010> and the lockfile approach you mention seems very flaky
[17:22:05] <Blondie101010> what do you do if the lockfile is there but the process crashed?
[17:22:12] <tirnanog> irrelevant, if using flock.
[17:22:20] * Blondie101010 nods
[17:22:25] <tirnanog> if the proess crashes, the lock is released.
[17:22:33] <tirnanog> it's as simple as that.
[17:22:53] <tirnanog> whether the file exists or not doesn't even matter.
[17:23:18] <tirnanog> bn_work: framing it as -e /path/to/lockfile doesn't make sense. that's never how you would implement a lock or mutex.
[17:23:23] <bn_work> Blondie101010: that's why the first thing is to check for it and remove it if it is stale
[17:23:56] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[17:24:05] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[17:24:15] <tirnanog> as far as reading a pid file is concerned, going straight to reading is marginally better than testing for existence first.
[17:24:21] *** Joins: furrymcgee (~devuan@cgn-213-196-210-135.nc.de)
[17:24:39] *** Joins: jiploading (~vjipac@user/vjipac)
[17:25:58] <tirnanog> pid files are not lock files because no process (conventionally) maintains a lock over them.
[17:26:13] *** Quits: arinov_ (~arinov@78.162.46.154) (Ping timeout: 240 seconds)
[17:26:24] <bn_work> tirnanog: ok, I think I'm starting to see what you mean now, ie:  the issues is because the check is a separate command from the actual reading of it via that awful pipeline earlier and now pgrep -F
[17:26:28] *** Joins: arinov_ (~arinov@78.162.147.102)
[17:26:32] <bn_work> s/issues/issue/
[17:26:33] <tirnanog> and being able to read an integer from a pid file ultimately means nothing. you can't even be entirely sure it refers to the same process for whom the pid was originally written into the file.
[17:27:07] <tirnanog> for example, the original process could have died by the time you check, and the pid number might have been re-used.
[17:27:50] <bn_work> tirnanog:  well, presumably it was outputted by the original process during startup and if tmpfiles.d was used correctly, to a dir that only that process would have access to (or root)
[17:27:55] <tirnanog> my point was that this "shit" code is slightly less shit than what you already have, in a pinch. I think that was clear enough.
[17:28:07] <tirnanog> so what?
[17:28:38] <tirnanog> hwo do you know that process didn't die in the interim?
[17:28:40] <tirnanog> you don't.
[17:29:14] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[17:29:19] <bn_work> tirnanog:  yes, you mentioned that it was "shit" :)  again, I was just trying to understand *why* it was less shit :)
[17:29:34] <tirnanog> you would know if you were the supervisor of the process or you used Earnestly's idea to implement a simple form of inter-process communication.
[17:29:35] <bn_work> (or why the other was more shit)
[17:30:13] <bn_work> which is why is removes it on startup if it did.  Re. PID recycling:  yes, that's a possibility
[17:30:37] <bn_work> s/is removes/it removes/
[17:31:07] *** Joins: yustin (~yustin@user/yustin)
[17:31:08] <tirnanog> it's less shit because, for I think the third time now, it doesn't rely on a) the evaluation of command substituations and variable expansions too soon - which is COMPLETELY broken b) it gets straight to reading the pid file without an existence check and uses kill -0, which is going to be a bit more efficient than walking the process table.
[17:31:28] <tirnanog> well, I shouldn't say rely. that's just a coding error.
[17:31:39] <tirnanog> nevertheless, that's how it is in the code that was presented.
[17:32:50] *** Quits: bluedust (~bluedust@59.98.49.134) (Remote host closed the connection)
[17:32:56] <tirnanog> if the read fails, then either the pid file didn't exist or nothing can be read from it (neither of which your present code accounts for).
[17:33:05] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:34:00] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:34:29] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:35:02] *** Quits: arinov_ (~arinov@78.162.147.102) (Ping timeout: 240 seconds)
[17:35:06] *** Joins: arinov (~arinov@78.162.147.120)
[17:35:25] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:35:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 260 seconds)
[17:35:56] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:36:52] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:37:10] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[17:37:10] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[17:37:24] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:38:17] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:38:44] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:39:13] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:39:40] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:40:26] *** Joins: sinaowolabi_ (~SinaOwola@160.152.121.235)
[17:40:44] *** Quits: dino- (~dino@cpe-74-131-247-218.kya.res.rr.com) (Changing host)
[17:40:44] *** Joins: dino- (~dino@user/din0)
[17:41:30] *** Quits: sinaowolabi_ (~SinaOwola@160.152.121.235) (Max SendQ exceeded)
[17:41:54] <bn_work> tirnanog: ok, so excluding the FIFO idea for now (since I need to read more on that) how does https://termbin.com/kp96 compare to the way flock is used in https://mywiki.wooledge.org/BashFAQ/045 ?  The discussion section at the end https://mywiki.wooledge.org/BashFAQ/045#Discussion leaves me worried still
[17:42:22] <tirnanog> it doesn't compare at all. there is no locking.
[17:43:08] <tirnanog> it just reads the pid and, if it can do that, signals the process to see if it's alive, hoping that - collectively - this is a meaningful way of determining that the process of interest is alive.
[17:43:23] <tirnanog> pid files are not lock files. I don't know how much more clear I can be on that.
[17:43:43] <tirnanog> but at least it doesn't have this shellcode="... $(whoops, doing this too soon) ..." nonsense.
[17:43:46] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[17:43:56] *** Guest9702 is now known as [R]
[17:44:28] <tirnanog> and has at least a hint of error checking (you don't check the exit status of cat).
[17:44:33] <bn_work> that last part about fd uniqueness leaves me confused because it says "Note, file descriptors are unique per-process" but then proceeds to say "what if this file descriptor is already in use by a completely different process?"
[17:45:42] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[17:46:07] <tirnanog> that's probably a question posted by some distinct person.
[17:46:17] *** Joins: unop (~unop@194.154.249.71)
[17:46:22] <tirnanog> file descriptors are, indeed, unique per-process.
[17:46:47] <bn_work> so when the process crashes, fd closes and the file is deleted?
[17:47:03] <bn_work> or kill -9-ed
[17:47:05] <bn_work> ?
[17:47:20] <bn_work> (as it seems docker likes to do)
[17:47:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:47:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:48:06] <tirnanog> if a process goes away then the file descriptors that it held will go away with it. that has nothing to do with unlinking a file.
[17:48:08] <Earnestly> bn_work: An fd isn't the file, why would a file be deleted?
[17:49:25] <tirnanog> note that lock files don't need to be deleted where using flock. the file can exist indefinitely. it's merely a question of whether it is locked or not at any given instant.
[17:49:31] <Jaro2k> kill -9 $(cat /path_to_file/file.pid)
[17:49:53] <djph> It looks like they're taking the example in the top (exec 9>lockfile; if ! flock...).  Two running processes would have UNIQUE FD9 , but both file descriptors point to the same place (and only one would actually GET the lock)
[17:50:02] *** Joins: bluedust (~bluedust@59.98.49.134)
[17:50:33] <bn_work> Earnestly:  I don't know, I'm just trying to understand how an fd is better ðŸ¤·
[17:51:11] <tirnanog> because the interface of flock(1) requires that an fd number be passed to it. that is all.
[17:51:17] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:51:59] <tirnanog> actually, it doesn't but that's how it is done here.
[17:52:02] *** Joins: vysn (~vysn@user/vysn)
[17:52:12] <Earnestly> bn_work: Do you think shared memory is better than non-shared memory?
[17:52:17] <bn_work> djph:  so the OP is assuming the two processes are for the same script?
[17:54:10] <bn_work> tirnanog: so the only reason the file is (initially) created is to have a fd point to it for use with flock?
[17:54:57] <djph> bn_work: I think that the (mis-)understanding was that somehow "process_1" and "process_2" would be sharing the literal "FD9", rather than the lockfile described by FD9.
[17:54:57] <tirnanog> the more important reason is that the script must keep the file open until such time as it exits. by opening the file first with the exec builtin, it is do.
[17:55:02] <tirnanog> so*
[17:55:19] <tirnanog> what the fd number is is of no importance whatsoever.
[17:55:31] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[17:56:07] *** Joins: nunggu (~q@user/nunggu)
[17:56:28] <bn_work> Earnestly:  not sure... obviously shared memory saves space but then it requires managing refs to it, concurrency, etc.  non-shared seems easier but probably more expensive?
[17:56:46] <tirnanog> in short: attempt open, then attempt lock with file that was just opened. when script exist, the file is closed and the lock relinquished with it.
[17:56:48] <Earnestly> bn_work: don't worry about it
[17:57:32] *** Quits: arinov (~arinov@78.162.147.120) (Ping timeout: 240 seconds)
[17:57:51] <tirnanog> with this particular method, it is not only atomic, but there is no need to care that the lock file continues to exist beyond the point which the lock holder exits. it simply doesn't matter.
[17:57:57] *** Quits: f00 (~timm@user/timm) (Ping timeout: 240 seconds)
[17:57:57] <Earnestly> (flock(1) can use directories too)
[17:58:01] *** Joins: arinov (~arinov@78.162.47.24)
[17:58:32] *** Joins: sinaowolabi_ (~SinaOwola@160.152.26.119)
[17:58:38] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[17:59:29] *** Quits: sinaowolabi_ (~SinaOwola@160.152.26.119) (Max SendQ exceeded)
[17:59:54] <tirnanog> I would highly encourage you to just try it if you are curious as to how it works in practice.
[17:59:56] *** Joins: sinaowolabi_ (~SinaOwola@160.152.26.119)
[17:59:57] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[18:00:09] <tirnanog> it takes only a minute or two to write some test scripts acting on a shared lockfile.
[18:00:36] <tirnanog> you could just have them sleep for a bit in the case that the lock is acquired.
[18:01:21] <bn_work> I'm just wondering how to deal with the PID files, I don't think I can turn them off
[18:01:32] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[18:01:32] *** Quits: Dotz0cat (~Dotz0cat@h59.213.213.151.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[18:01:41] *** Joins: A|an (~Alan@173.218.175.171)
[18:01:53] <tirnanog> you don't need to deal with them.
[18:01:56] <bn_work> like the app just spits them out and complains if one already exists
[18:02:06] <bn_work> the only thing I have control over is where it puts it
[18:02:07] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:4917:bc56:f54d:812b)
[18:02:16] *** Quits: ianmacd_ (ianmacd@faust.caliban.org) (Quit: ZNC 1.8.2 - https://znc.in)
[18:02:22] <tirnanog> you could give it /dev/null as the path, potentially.
[18:02:27] <bn_work> (I think in the past I tried to tell it to go to /dev/null but it didn't like that)
[18:02:32] <tirnanog> oh, but then it would moan.
[18:02:42] <Earnestly> tirnanog: Heh, careful with that, sometimes it creates a file called that
[18:03:12] <Earnestly> This is why I mentioned to use pgrep on process itself (with flags to be as exact as possible) in wrapper and manage stale pid file presence there
[18:03:24] <Earnestly> Rest of wrapper doesn't need to care about it
[18:03:34] <tirnanog> just rm -f if before the command that launches the actual program in its wrapper script occurs, I suppose.
[18:03:35] *** Quits: arinov (~arinov@78.162.47.24) (Ping timeout: 252 seconds)
[18:03:47] <tirnanog> you might not be able to modify the application but you can probably modify its crummy wrapper script.
[18:03:50] <Earnestly> If 'app' doesn't use pid file, then can just remove indiscrimantly
[18:03:53] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[18:04:06] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[18:04:06] <Earnestly> indiscriminately*
[18:04:13] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[18:04:48] *** Joins: frostwork (~frostwork@user/frostwork)
[18:04:55] <tirnanog> or you can make rm -f the first thing you do before calling said crummy wrapper script, perhaps.
[18:05:06] *** Joins: wnbeser (~wnbeser@91-154-217-247.elisa-laajakaista.fi)
[18:05:34] <Earnestly> wrapper may not need to exist, depends
[18:05:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e4b0:adf8:305f:a850) (Ping timeout: 250 seconds)
[18:06:13] <tirnanog> I have a feeling that there is one.
[18:06:15] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[18:06:15] <Earnestly> But it is useful to have wrapper for ipc, since it acts one level above process itself
[18:06:33] *** Joins: Dotz0cat (~Dotz0cat@h184.231.187.173.dynamic.ip.windstream.net)
[18:06:39] <tirnanog> this is the java scene we are contending with. horrendously designed wrapper scripts are common.
[18:06:39] <Earnestly> So you can manage exit states, signals, etc.  I think for what they're doing, all of this is overkill
[18:06:58] <Earnestly> I doubt they even need to care if process already runs
[18:07:02] <Earnestly> Because container managers do this
[18:07:04] *** izabera is now known as lizabera
[18:07:05] <tirnanog> which isn't to say that such a thing couldn't potentially be jettisoned, of course.
[18:07:06] <Earnestly> At container level
[18:09:48] *** Joins: volga629 (~volga629@72.139.93.26)
[18:09:57] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[18:12:08] *** Quits: wnbeser (~wnbeser@91-154-217-247.elisa-laajakaista.fi) (Quit: Leaving)
[18:12:55] <Celmor[m]> I'm trying to create transcripts of my ssh sessions automatically via a bashrc on the remote. for some reason this causes the script command to be invoked dozens of times and they now stick around with dozens of log files
[18:13:24] <bn_work> tirnanog: the wrapper script is output by the build process, if I change that it will get overwritten in the next build, but again, it's not the wrapper that's generating the pid file, it's the compiled java (actually scala) app, which complains if it's already there (not sure what happens if I just delete the pid file pre-run but post creation)
[18:13:35] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[18:14:12] <bn_work> BTW, partially related to all the above, do shell scripts pass signals by default to child (script) background processes launched via `&` ?
[18:15:19] <bn_work> Celmor[m]:  why not just use `history` or the terminal's console log?
[18:15:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[18:15:41] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[18:17:10] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[18:17:10] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:17:24] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:18:09] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[18:18:19] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:18:47] <Jaro2k> can you read pid from file.pid?
[18:18:49] *** Quits: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6) (Read error: Connection reset by peer)
[18:19:08] <Celmor[m]> @bn_work cause I need the output of the whole sessions without doing a bunch of redirection for each command
[18:19:51] <Earnestly> Celmor[m]: Use tmux to save/dump window content
[18:19:51] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[18:20:22] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[18:20:23] <Celmor[m]> I want a permanent record not a temporary session
[18:20:37] <Earnestly> what
[18:20:44] <Earnestly> That reply makes no sense
[18:20:48] <Celmor[m]> I thought that's what `script` was supposed to be for
[18:21:07] <Earnestly> Sure?
[18:22:15] <Earnestly> Also ttyrec and termtosvg
[18:22:18] <Celmor[m]> looks like my irc client just nuked itself
[18:22:54] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:23:14] <Celmor[m]> ideally I want a written record of what I see in the terminal
[18:23:14] <Celmor[m]> afaik script loogs to much and kind of needs bash to decode control characters
[18:23:58] <Celmor[m]> looks like ttyrec also needs ttyplayer
[18:24:10] <Earnestly> Like both, they store timing information
[18:24:41] <Celmor[m]> script would work I think, if there weren't that issue
[18:24:51] <Earnestly> ansi escapes are preserved, and bash is not what interprets them
[18:25:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:25:24] <Celmor[m]> the terminal then
[18:25:44] <Celmor[m]> ideally I can open the log in a text editor and not need to cat it in a terminal for it to show properly
[18:26:16] <Earnestly> But then it's not what the terminal sees
[18:26:24] <Earnestly> And much can be hidden
[18:26:40] <Earnestly> (See diff attack against git)
[18:27:13] <Celmor[m]> I've tried `if [ -t 0 ] ; then script "$(mktemp /my/logging/location/SSH_TRANSCRIPT_XXX)"; fi` but that spawned dozens of instances and left the session unusable till I've ^C'ed
[18:27:38] <Earnestly> Learn about ssh's forcecommand
[18:28:25] <bn_work> ok, so I guess the answer is "no[, bash doesn't propagate signals to children", and something like https://unix.stackexchange.com/questions/146756/forward-sigterm-to-child-in-bash could be used to propagate them?
[18:28:39] <Earnestly> !google > bn_work
[18:28:39] <greybot> bn_work: Google is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
[18:29:06] <Celmor[m]> @earnestly that would solve this issue?
[18:29:24] <Earnestly> Celmor[m]: ssh forcecommand
[18:29:31] <Earnestly> openssh*
[18:30:06] <Earnestly> replace shell with forcecommand wrapper that sets up script
[18:30:08] *** Quits: mpagano (~quassel@gentoo/developer/mpagano) (Quit: Quitting)
[18:30:18] <Earnestly> And then invokes normal shell
[18:30:48] <bn_work> lol, I did ask here :)
[18:31:11] <Earnestly> bn_work: Didn't see question about signal propogation
[18:31:34] <Celmor[m]> @earnestly do you have an example, particularily in regards to the last part? just the script invokation, not the ForceCommand part I mean
[18:31:37] <bn_work> I'll check the bashguide though, perhaps there is an entry there or in the FAQ
[18:31:54] <Earnestly> bn_work: The article in !sigint explains how it works as background, even though focus is on sigint handling specifically
[18:31:56] <Celmor[m]> invocation*
[18:32:19] <bn_work> !sigint
[18:32:19] <greybot> How the shell handles ^C (SIGINT) and why: http://www.cons.org/cracauer/sigint.html
[18:33:49] <bn_work> to be fair though, SO does bubbles up good answers and tends to have a more quality focused crowd
[18:34:53] <Earnestly> Celmor[m]: ForceCommand script -qec "${SSH_ORIGINAL_COMMAND:=bash -l}" /path/to/transcript # probably
[18:35:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:35:31] <tirnanog> !stackoverflow
[18:35:31] <greybot> Like virtually every other web site you find via Google, StackOverflow is chock full of wrong answers. Verify everything you read there before using it.
[18:35:36] <Celmor[m]> thanks!
[18:35:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:36:03] *** Joins: Minvera (~Minvera@user/Minvera)
[18:36:21] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:36:37] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:37:07] <Earnestly> Celmor[m]: Might be proper tools for this though, e.g. https://github.com/Scribery/tlog - might also be able to use ttysnoop from bcc/bpftools
[18:37:26] <Earnestly> ttysnoop is probably best option imo
[18:37:32] *** Quits: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[18:38:06] <Earnestly> Would just need way to initiate ttysnoop when user logs in
[18:38:23] *** Joins: bluedust_ (~bluedust@103.161.144.140)
[18:38:27] *** Joins: martinus__ (~martin@127.59.202.77.rev.sfr.net)
[18:38:28] <Earnestly> (ttysnoop (epbf tool) needs priviledge so would be external)
[18:39:10] *** Joins: bluedus__ (~bluedust@185.248.85.10)
[18:39:22] <Earnestly> But tlog is designed for this, auditing
[18:39:37] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:40:23] <Earnestly> (Could even use auditd if you only wanted commands)
[18:40:47] <Celmor[m]> @earnestly can I dynamically generate the log name from the ssh config? e.g. via "$(mktemp /mnt/Logs/SSH_Transcript_XXX.log)"
[18:40:49] <Celmor[m]> otherwise I'd have to specify a static string for it
[18:41:04] <Celmor[m]> I want output as well, that's the whole point
[18:41:24] *** Quits: bluedust (~bluedust@59.98.49.134) (Ping timeout: 250 seconds)
[18:42:26] <Earnestly> Celmor[m]: see manual, forcecommand run under user login shell with -c, so bash -l -c 'command here'.  Might not need bash -l like I wrote, just bash will do (where bash is whatever user's shell is)
[18:42:37] *** Quits: bluedust_ (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[18:42:51] <Earnestly> Celmor[m]: If more complex, make script on server, run that from forcecommand
[18:43:48] <Earnestly> tlog is still probably better than this idea because script will hang in pipes
[18:45:32] <Celmor[m]> as long as tlog gives me readable output...
[18:46:28] <Earnestly> terminal escapes can hide output, so the idea that you can just have output with those interpreted will mean you lose information
[18:47:31] <Earnestly> So you have to tolerate colour.  At least with colour escapes you can feasibly filter those out by implementing basic escape parser
[18:47:53] <Celmor[m]> it doesn't, it apparently logs in json
[18:48:18] <Celmor[m]> I just want an asci output, no color, highlighting, etc.
[18:48:28] <Celmor[m]> lik as if I'd redirected the whole terminals output and tee it to a file
[18:48:39] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[18:48:41] <Celmor[m]> terminal*
[18:48:45] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:49:35] *** Joins: bluedust (~bluedust@103.161.144.140)
[18:50:36] *** Parts: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl) ()
[18:52:50] *** Quits: bluedus__ (~bluedust@185.248.85.10) (Ping timeout: 256 seconds)
[18:55:03] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:55:17] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:02:10] *** Quits: maryo (~Maryo@user/maryo) (Remote host closed the connection)
[19:02:28] *** Quits: jiploading (~vjipac@user/vjipac) (Ping timeout: 256 seconds)
[19:02:30] *** Joins: maryo (~Maryo@user/maryo)
[19:02:37] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 250 seconds)
[19:03:22] *** Joins: volga629 (~volga629@72.139.93.26)
[19:05:17] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[19:06:37] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[19:10:02] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[19:10:17] *** Joins: unop (~unop@194.154.249.71)
[19:10:59] *** Joins: timj (~timj@user/timj)
[19:13:26] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Remote host closed the connection)
[19:21:23] *** Quits: Inline__ (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[19:21:59] *** Joins: OlCe (~user@amontsouris-654-1-37-13.w92-151.abo.wanadoo.fr)
[19:22:38] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[19:24:02] *** Joins: richardm75 (~richardm7@2600:8801:c507:b200:6c0b:7127:7f46:de8c)
[19:24:27] <Earnestly> Celmor[m]: You're asking for two different code paths at the same time
[19:25:14] <Earnestly> Either a tool writes with colour escapes and other such things or it doesn't, such as those detecting a pipe.  The codebase literally has two different paths to take for each write, one with escapes and one without
[19:25:18] <Earnestly> You can't have both
[19:31:50] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[19:32:48] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:16] *** Quits: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se) (Read error: Connection reset by peer)
[19:34:23] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe) (Remote host closed the connection)
[19:34:39] *** Joins: ncrowl (~ncrowl@c-fda770d5.022-170-6c756e3.cust.ownit.se)
[19:34:47] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:898d:8fc5:d036:d8fe)
[19:35:09] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[19:37:06] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:38:58] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:39:39] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9ca7:ab60:462e:5792)
[19:41:07] *** Joins: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de)
[19:42:22] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:43:52] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[19:46:48] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[19:48:07] *** Joins: lavaball (felix@31.204.155.215)
[19:50:55] *** Joins: volga629 (~volga629@72.139.93.26)
[19:51:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[19:54:49] *** ezzieygu1wuf is now known as ezzieyguywuf
[19:56:44] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:57:06] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[19:57:18] *** Joins: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net)
[20:02:10] *** Joins: maryo (~Maryo@user/maryo)
[20:03:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:03:29] *** Joins: han-solo (~han-solo@user/han-solo)
[20:05:57] *** Joins: N4buc0- (~N4buc0@2804:7f4:348a:fff2:6b3a:820a:5601:a6e)
[20:09:54] *** Joins: mpagano (~quassel@gentoo/developer/mpagano)
[20:10:07] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[20:10:38] *** Joins: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:51] *** Joins: unop (~unop@194.154.249.71)
[20:13:52] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[20:13:54] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:17:57] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[20:18:04] *** Joins: taupiqueur_ (~taupiqueu@202.144.204.77.rev.sfr.net)
[20:21:30] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7)
[20:25:15] *** Joins: mat001 (~mat001@213.143.69.121)
[20:26:05] *** Quits: volga629 (~volga629@72.139.93.26) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:26:05] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:26:31] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:27:01] *** Quits: taupiqueur_ (~taupiqueu@202.144.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[20:28:09] *** Joins: f00 (~timm@user/timm)
[20:28:44] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9ca7:ab60:462e:5792) (Quit: WeeChat 3.2)
[20:31:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[20:31:59] *** Joins: bluedust (~bluedust@103.161.144.140)
[20:32:02] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:32:40] *** Joins: mat001 (~mat001@72.28.108.216)
[20:38:14] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[20:42:11] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[20:43:02] *** Joins: magla (~gelignite@55d49292.access.ecotel.net)
[20:45:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786)
[20:45:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786) (Changing host)
[20:45:20] *** Joins: skapata (~Skapata@user/skapata)
[20:51:46] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[20:53:40] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[21:00:20] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:02:49] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[21:02:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[21:03:35] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ddea:1b08:25c:b114)
[21:03:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ddea:1b08:25c:b114) (Client Quit)
[21:04:02] *** Quits: haliucinas (~haliucina@5.20.153.21) (Ping timeout: 240 seconds)
[21:05:31] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:05:42] <Celmor[m]> Earnestly: well, couldn't it "tee" to tty and a process that filters those escapes and writes it to a file? I just see one pipe that would be needed
[21:05:57] <Earnestly> no
[21:06:06] *** Quits: furrymcgee (~devuan@cgn-213-196-210-135.nc.de) (Ping timeout: 260 seconds)
[21:06:17] <Earnestly> Well yes, I mean of course you can just write a parser
[21:06:24] <Earnestly> Implement a terminal
[21:06:25] <Celmor[m]> | tee >(filtering) | /dev/stdout
[21:06:34] <Earnestly> "filtering" is the magical bit
[21:06:45] <Earnestly> The | /dev/stdout is meaningless
[21:06:57] <Earnestly> But now your program isn't connected to tty
[21:07:01] <Celmor[m]> sure
[21:07:18] <Celmor[m]> why wouldn't it be?
[21:07:25] <Earnestly> Because you put it in a pipe
[21:07:25] <Celmor[m]> output is passed through the pipe to the terminal and stdin is attached anyway
[21:07:43] <Celmor[m]> the output of the pipe (from tee) is printed to the console, no?
[21:07:53] <Earnestly> Yes
[21:08:14] <Celmor[m]> and control characters should be passed through as well
[21:08:24] <Earnestly> Yes
[21:08:33] <Earnestly> Depends on the process
[21:08:49] <Earnestly> It might use the fact it's in a pipe to turn them off, or change output entirely (e.g. ls and ls -1)
[21:09:14] <Earnestly> But if it produces escape sequences they will progress through the pipe unchanged
[21:09:34] *** Joins: jinsun (~quassel@user/jinsun)
[21:10:35] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[21:11:07] *** Joins: haliucinas (~haliucina@5.20.153.21)
[21:11:22] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[21:12:12] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[21:13:06] <Celmor[m]> I don't see the issue then
[21:16:08] *** Joins: jinsun (~quassel@user/jinsun)
[21:17:02] *** Quits: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6) (Ping timeout: 240 seconds)
[21:17:12] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[21:17:47] *** Joins: bluedust (~bluedust@103.161.144.140)
[21:18:11] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:21:08] *** Joins: knstn (~knstn@ppp-94-66-57-45.home.otenet.gr)
[21:21:52] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 256 seconds)
[21:22:33] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7)
[21:22:47] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 250 seconds)
[21:22:50] *** Joins: maryo (~Maryo@user/maryo)
[21:24:57] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[21:26:08] *** Joins: nickdiazswag209 (~bjpenn_@13.110.54.41)
[21:26:52] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[21:27:05] *** Joins: fmirkes (~fmirkes@user/fmirkes)
[21:27:49] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[21:28:02] *** Quits: nickdiaz1wag209 (~bjpenn_@98.42.87.100) (Ping timeout: 240 seconds)
[21:29:46] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[21:31:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:33:26] *** Quits: Major_Biscuit (~MajorBisc@c-001-005-022.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[21:37:08] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:37:31] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[21:40:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[21:42:12] *** Quits: TomyWork (~TomyLobo@p200300e80f0067002cd75dabac6c542d.dip0.t-ipconnect.de) (Quit: Leaving)
[21:42:50] *** Quits: sinaowolabi_ (~SinaOwola@160.152.26.119) (Ping timeout: 256 seconds)
[21:46:00] *** Joins: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de)
[21:46:31] *** Joins: volga629 (~volga629@72.139.93.26)
[21:48:42] <flower_> hm no tabcompletion for process numbers ...
[21:50:44] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[21:52:15] *** Quits: jkwnki (~jkwnki@p2e5796b1.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:53:24] *** Joins: docmax__ (~docmax@dynamic-095-116-175-182.95.116.pool.telefonica.de)
[21:54:32] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:55:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[21:55:46] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 245 seconds)
[21:55:58] *** Quits: docmax_ (~docmax@dynamic-077-001-187-127.77.1.pool.telefonica.de) (Ping timeout: 250 seconds)
[21:56:25] *** Joins: sinaowolabi_ (~SinaOwola@160.152.21.125)
[21:58:27] *** Joins: m_ (~m@143.255.100.142)
[21:58:44] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[22:00:36] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[22:00:40] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[22:03:35] *** Joins: vysn (~vysn@user/vysn)
[22:06:10] *** Quits: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6) (Remote host closed the connection)
[22:06:22] *** Joins: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6)
[22:07:16] *** Quits: m_ (~m@143.255.100.142) (Quit: Leaving)
[22:08:25] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:10:57] *** Joins: dfinr (~dfinr@user/dfinr)
[22:11:26] *** Quits: dfinr (~dfinr@user/dfinr) (Read error: Connection reset by peer)
[22:11:50] *** Quits: Rue_ (~rue@61-231-137-75.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[22:12:52] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[22:15:02] <twkm> wow that's lazy flower.
[22:16:12] *** Joins: smrtz (~smrtz@user/smrtz)
[22:17:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:17:55] *** Quits: revolve (~u0_a227@82-132-238-254.dab.02.net) (Read error: Connection reset by peer)
[22:19:25] <colo> may I present to you, the PID-catchall-expression: {1..4194304}
[22:19:29] <colo> (worksforme)
[22:19:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[22:20:57] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[22:21:38] *** Joins: revolve (~u0_a227@82-132-238-205.dab.02.net)
[22:21:49] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[22:22:18] *** Joins: cryptone1tor (~nico@24.28.108.183)
[22:22:40] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[22:22:41] *** Joins: nahcetan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[22:23:28] *** Joins: pflanze_ (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[22:25:02] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[22:25:12] *** Joins: itu_ (~wp@lynx.uberspace.de)
[22:25:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[22:25:14] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (Read error: Connection reset by peer)
[22:25:14] *** Quits: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.a230.priv.bahnhof.se) (Read error: Connection reset by peer)
[22:25:14] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Remote host closed the connection)
[22:25:14] *** Quits: itu (~wp@wikipedia/itu) (Excess Flood)
[22:25:14] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: cryptonector (~nico@24.28.108.183) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: MentalExcuse (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: td001 (~td001@172.245.134.58) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: haro (beau@saweet.net) (Ping timeout: 256 seconds)
[22:25:16] *** scoobydoo_ is now known as scoobydoo
[22:25:17] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[22:25:17] *** Joins: haro_ (beau@saweet.net)
[22:25:18] *** Joins: wwalker_ (~wwalker@platinum.solid-constructs.com)
[22:25:21] *** Joins: pyre_ (~pyre@crimeboss.nillas-power.com)
[22:25:23] *** Joins: lux0r- (~lux0r@65.56.68.34.bc.googleusercontent.com)
[22:25:23] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[22:25:27] *** Joins: td00_ (~td001@172.245.134.58)
[22:25:27] *** Joins: deekej[m] (~deekej@2001:470:69fc:105::a6c)
[22:25:29] *** Joins: MentalEx- (~MentalExc@ec2-3-125-144-169.eu-central-1.compute.amazonaws.com)
[22:25:31] *** Joins: Dan39 (~dan@user/dan39)
[22:25:41] *** Quits: sdu (~sidu@185.44.146.61) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: downtrip (~downtrip@188.166.151.198) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: hsv_ (~unknown@user/hsv) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Fjord8 (~Fjord@c-73-14-198-35.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: redo (~redo@193.191.4.173) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Camusensei (~Camusense@megaman.thican.net) (Ping timeout: 256 seconds)
[22:25:45] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[22:25:52] *** td00_ is now known as td001
[22:25:53] *** MentalEx- is now known as MentalExcuse
[22:25:57] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[22:25:58] *** Joins: sdu (~sidu@185.44.146.61)
[22:25:59] *** Joins: harleypig (thelounge@harleypig.com)
[22:26:04] *** Quits: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6) (Ping timeout: 268 seconds)
[22:26:13] *** Joins: downtrip (~downtrip@188.166.151.198)
[22:26:15] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 256 seconds)
[22:26:17] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[22:26:27] *** Joins: hsv (~unknown@user/hsv)
[22:26:29] *** Joins: redo (~redo@193.191.4.173)
[22:26:31] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[22:26:35] *** Joins: dodo (~dodo@user/dodo)
[22:26:37] *** Joins: llua (~llua@zsh/developer/llua)
[22:26:54] *** Joins: JyZyXy (~jyz@88-112-115-81.elisa-laajakaista.fi)
[22:26:56] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[22:26:57] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[22:27:03] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:27:04] *** Joins: Fjord8 (~Fjord@c-73-14-198-35.hsd1.co.comcast.net)
[22:27:11] *** Joins: beencubed (~beencubed@209.131.238.248)
[22:27:23] *** Quits: Psi-Jack (psi-jack@user/psi-jack) (Ping timeout: 256 seconds)
[22:27:28] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[22:27:47] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[22:31:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:31:21] *** Quits: acegallagher (~Ace@174-16-184-112.hlrn.qwest.net) (Ping timeout: 256 seconds)
[22:31:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:31:47] *** Quits: dza (~dza@user/dza) (Remote host closed the connection)
[22:31:55] *** Quits: ds (~ds@user/ds) (Ping timeout: 256 seconds)
[22:31:55] *** Quits: osse (~osse@zsh/user/osse) (Ping timeout: 256 seconds)
[22:32:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:32:11] *** Joins: ds (~ds@user/ds)
[22:32:18] *** Joins: acegallagher (~Ace@174-16-184-112.hlrn.qwest.net)
[22:32:18] *** Joins: osse (~osse@zsh/user/osse)
[22:32:49] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:34:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[22:34:38] *** Joins: Ekho (~Ekho@user/ekho)
[22:35:19] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (Ping timeout: 256 seconds)
[22:35:38] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:36:04] *** Quits: wodencafe (wodencafe@woden.cafe) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[22:37:43] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[22:38:07] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[22:40:20] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[22:41:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[22:43:17] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[22:43:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:43:39] *** Joins: Betal (~Betal@user/betal)
[22:43:43] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[22:43:52] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:8cbb:90c8:fb87:52b1)
[22:45:35] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[22:45:51] *** Joins: unop (~unop@194.154.249.71)
[22:47:15] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Quit: WeeChat 3.4)
[22:47:40] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[22:48:41] *** Joins: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6)
[22:49:12] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:51:13] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Client Quit)
[22:51:48] *** Joins: lavaball (felix@31.204.155.215)
[22:52:47] *** karstensrage_ is now known as karstensrage
[22:53:05] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[22:53:05] *** Joins: karstensrage (~karstensr@user/karstensrage)
[22:56:20] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:59:07] *** Quits: ninjabuffet (~ninjabuff@user/ninjabuffet) (Quit: Laters)
[23:00:17] *** Quits: polve (~polve@user/polve) (Ping timeout: 240 seconds)
[23:00:22] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[23:02:17] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[23:02:41] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:03:03] *** Joins: polve (~polve@user/polve)
[23:03:32] *** Quits: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[23:03:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:04:27] *** Joins: bluedust (~bluedust@103.161.144.140)
[23:05:39] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[23:07:43] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Client Quit)
[23:09:14] *** Quits: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6) (Ping timeout: 268 seconds)
[23:09:30] *** Joins: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4)
[23:10:13] *** Quits: andril (~andril@2601:586:8400:e4:a965:a318:3940:38c4) (Client Quit)
[23:10:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[23:10:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:11:17] *** Quits: sinaowolabi_ (~SinaOwola@160.152.21.125) (Ping timeout: 240 seconds)
[23:11:46] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:12:39] *** Joins: crashrep (~crashrep@user/crashrep)
[23:12:50] *** Joins: lavaball (felix@31.204.155.215)
[23:14:25] *** Joins: nyex (~Thunderbi@177.84.107.20)
[23:14:57] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[23:15:32] *** Quits: revolve (~u0_a227@82-132-238-205.dab.02.net) (Read error: Connection reset by peer)
[23:15:51] <flower_> maybe that's why everyone is using killall -9
[23:17:28] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[23:18:52] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[23:19:22] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:22:03] *** Joins: moto (~moto@user/moto)
[23:22:03] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[23:23:29] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:24:24] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[23:24:37] *** Joins: lavaball (felix@31.204.155.215)
[23:26:04] *** Quits: nyex (~Thunderbi@177.84.107.20) (Quit: nyex)
[23:27:19] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[23:29:57] *** Joins: gareppa (~gareppa@user/gareppa)
[23:31:53] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[23:31:59] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[23:32:08] *** Joins: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6)
[23:32:45] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[23:33:15] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:7c68:228:b173:b6f7) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:34:08] *** Joins: yustin (~yustin@user/yustin)
[23:34:20] <Dan39> i was on a BSD or some other non-standard-linux system once and ran `killall someprogram` ... bad times. actually killed ALL processes on the system, not the one i named
[23:36:02] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:36:22] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:36:41] *** Quits: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6) (Ping timeout: 250 seconds)
[23:36:48] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[23:37:35] *** Joins: crashrep (~crashrep@user/crashrep)
[23:37:55] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[23:39:42] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[23:41:42] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 250 seconds)
[23:41:55] *** Joins: tijuco (~tijuco@user/tijuco)
[23:43:42] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[23:44:12] <xiaomiao> solaris maybe?
[23:44:23] <flower_> pgrep and kill the process. I should try to write a newbie bash script for it, I guess
[23:44:26] <flower_> :)
[23:45:07] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[23:45:48] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:47:20] *** Quits: yourname (~yourname@5.189.138.218) (Ping timeout: 250 seconds)
[23:47:44] *** Joins: yourname (~yourname@5.189.138.218)
[23:48:54] *** Joins: zro (~zro@user/zro)
[23:49:15] <phy1729> you can just pkill rather than pgrep then kill
[23:49:38] *** Joins: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6)
[23:52:10] <ormaaj> Did killall move to some other project then? Linuxes that ditched sysv init didn't discard killall in the process.
[23:52:26] <Enissay> `/usr/bin/time --format='%C took %e seconds' free | tee -a $LOG_FILE` how to modify this so that only the time stat is appended to log ?
[23:52:30] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[23:52:53] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[23:53:44] *** Joins: bodiccea_ (~bodiccea@user/bodiccea)
[23:54:07] <llua> aix killall does that
[23:54:37] <Friithian> killsome
[23:54:42] *** Quits: roadie (~user@2a02:8108:5a40:1d87:958a:885:1bac:22a6) (Ping timeout: 250 seconds)
[23:55:23] *** Joins: semeion (~semeion@user/semeion)
[23:55:26] <Earnestly> killall5 came to exist with sysv for old killall purpose
[23:56:02] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 240 seconds)
[23:56:57] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[23:57:26] <flower_> phy1729, ah ... doesn't give a error when there is no such process, but the -e option helps
[23:59:31] <llua> # pkill lol; echo $?
[23:59:32] <shbot> llua: bash: pkill: command not found
[23:59:33] <shbot> llua: 127
