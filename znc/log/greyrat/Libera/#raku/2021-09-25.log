[00:16:48] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:16:48] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:17:04] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[00:17:54] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[00:18:12] <codesections> m: say {:c(2), :a(0), :b(1)}.sort».value.Array 
[00:18:13] <camelia> rakudo-moar ba15173fd: OUTPUT: «[0 1 2]␤»
[00:19:22] <codesections> that ^^^ turns a hash with numerical keys into an Array.  But I thought I used to know a shorter/clearer way to do so.  Does anyone know one?
[00:24:24] <ugexe> those aren't numerical keys
[00:25:02] <ugexe> if you are trying to sort on the value i'd just do .values.sort.Array
[01:02:18] <codesections> m: #`[doh, of course I meant:] say {2 => 'c', 0 => 'a', 1 => 'b'}.sort».value.Array  
[01:02:18] <camelia> rakudo-moar ba15173fd: OUTPUT: «Don't know setting RESTRICTED␤   at gen/moar/ModuleLoader.nqp:249  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/Perl6/ModuleLoader.moarvm:previous_setting_name)␤ from gen/moar/ModuleLoader.nqp:254  (/home/camelia/rakudo-m-inst-1/share/perl6/lib/…»
[01:02:34] <codesections> m: say {2 => 'c', 0 => 'a', 1 => 'b'}.sort».value.Array  
[01:02:34] <camelia> rakudo-moar ba15173fd: OUTPUT: «[a b c]␤»
[01:17:54] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:17:54] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:18:07] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[02:18:07] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:20:58] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:50:29] *** Quits: sena_kun (~koto@94.142.239.45) (Ping timeout: 246 seconds)
[03:33:04] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:40:32] *** Quits: lichtkind_ (~lichtkind@p200300d0a704f0b715019876f9c8959e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:20:54] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:38:21] *** Joins: frost (~frost@59.71.244.36)
[05:34:58] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:42:28] *** Joins: guifa (~guifa@static-host-66-18-52-169.epbinternet.com)
[05:47:24] <guifa> Not bad, I got DateTime::Timezones updated withint an hour and a half of its release :-) 
[05:47:47] <guifa> (of the new timezone data from IANA, I mean)
[05:52:25] <japhb> guifa++
[06:44:23] *** Joins: holyghost (~Adium@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749)
[07:14:08] *** Quits: holyghost (~Adium@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749) (Quit: Leaving.)
[07:30:44] *** Joins: holyghost (~Adium@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749)
[07:47:10] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[07:55:13] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:05:10] *** Quits: archenoth (~archenoth@2604:3d09:681:f00:c17b:6fbc:1799:ef41) (Ping timeout: 260 seconds)
[08:49:01] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Read error: Connection reset by peer)
[08:49:02] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 260 seconds)
[08:52:33] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[08:53:03] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[09:24:14] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 252 seconds)
[09:24:32] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[09:27:11] *** Joins: stanrifkin (~stanrifki@p200300dbcf336500176792978b00bb1b.dip0.t-ipconnect.de)
[09:28:09] <stanrifkin> i install rakudoc via zef, but i can't read any documentation with ex.: rakudoc Str. What i missed to install?
[09:30:50] <stanrifkin> oh... i see. Have had to install p6doc too. That seems to work now.
[09:32:27] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:40:22] *** Quits: stanrifkin (~stanrifki@p200300dbcf336500176792978b00bb1b.dip0.t-ipconnect.de) (Quit: Leaving)
[09:49:36] <holyghost> stanrifkin: use p6doc then, same thing AFAIK
[09:49:38] <tellable6> holyghost, I'll pass your message to stanrifkin
[10:04:19] *** Quits: holyghost (~Adium@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749) (Quit: Leaving.)
[10:12:23] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[10:17:55] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[10:19:01] *** Joins: holyghost (~holyghost@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749)
[10:23:36] *** Quits: holyghost (~holyghost@2a02:a03f:64c8:9200:d0c2:c3e9:ad52:7749) (Client Quit)
[10:24:34] *** Joins: holyghost (~holly@109.136.39.83)
[10:33:39] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:37:01] *** Joins: Sgeo (~Sgeo@user/sgeo)
[11:34:06] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[11:35:41] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 252 seconds)
[11:36:36] *** Joins: sena_kun (~koto@94.142.239.45)
[11:56:08] *** Joins: Compl (~Compl@103.136.251.65)
[11:58:06] *** Quits: Compl (~Compl@103.136.251.65) (Client Quit)
[12:08:20] <Kaiepi> .tell altai-man, Trait::Traced's update has been released. Data::Record and Kind::Subset::Parametric need more maintenance, but should be doable over the weekend
[12:08:21] <tellable6> Kaiepi, I'll pass your message to Altai-man
[12:14:56] <sena_kun> Kaiepi, thank you very much for your work!
[12:20:12] *** Joins: Altai-man (~koto@94.142.239.45)
[12:20:59] *** Quits: Altai-man (~koto@94.142.239.45) (Client Quit)
[12:25:56] *** Joins: lichtkind_ (~lichtkind@p200300d0a704f02615019876f9c8959e.dip0.t-ipconnect.de)
[12:28:21] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[12:31:47] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:39:52] *** Joins: slu (uid501941@id-501941.helmsley.irccloud.com)
[12:46:38] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[12:47:00] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[13:47:01] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:01] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:47:43] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[13:48:03] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[13:48:26] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[13:48:31] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[13:49:18] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[13:49:38] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[13:49:40] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[13:49:52] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[14:24:52] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[14:29:40] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:47:25] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:48:14] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[14:49:09] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[14:49:11] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[14:49:25] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[14:49:47] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[14:50:09] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[15:16:01] <holyghost> It'd be nice to have a python grammar for "binary" loading of pic files into a raku program
[15:16:13] <holyghost> S/pic/pyc
[15:16:37] <holyghost> Then have some kind of execution with them
[15:16:44] <holyghost> S/then/them
[15:17:03] <holyghost> I'm not going to write it
[15:17:24] <holyghost> I know it's a parrot idea but there's several languages of choice including us
[15:19:30] <holyghost> CORBA is dead I guess
[15:33:56] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:36:54] <[Coke]> last time i wrote CORBA was at Enron.
[15:43:49] <holyghost> I just compiled ORBit 20 years ago, I don't know much about it
[16:08:11] *** Quits: holyghost (~holly@109.136.39.83) (Quit: gratin dauphinoise time !)
[16:47:42] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[16:49:21] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[17:15:48] *** Quits: tejr (~tejr@user/tejr) (Quit: reboot)
[17:36:30] *** Joins: tejr (~tejr@user/tejr)
[18:24:53] *** Quits: xinming (~xinming@115.219.37.199) (Ping timeout: 252 seconds)
[18:26:37] *** Joins: xinming (~xinming@115.219.38.236)
[18:50:54] *** Joins: holyghost (~holly@109.136.39.83)
[19:20:14] *** Quits: lichtkind_ (~lichtkind@p200300d0a704f02615019876f9c8959e.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:55:47] *** Quits: holyghost (~holly@109.136.39.83) (Quit: bbl)
[20:19:30] *** Joins: sergii (~sergii@94.244.184.149.nash.net.ua)
[20:20:39] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (Remote host closed the connection)
[20:24:30] *** Quits: sergii (~sergii@94.244.184.149.nash.net.ua) (Quit: Connection closed)
[20:43:15] *** Joins: holyghost (~holly@109.136.39.83)
[20:47:19] <holyghost> I just posted AI-Agent 0.2.10, it's actor based (non-native raku), interesting also for OOP. I am working on the actual AI Music Agent which can be networked later on.
[20:47:55] <holyghost> By non-native raku, I mean without built-in actors which might be in raku itself
[20:50:11] <holyghost> It's from my Scheme days in college, we used actor systems like that in Scheme to build systems. Doing the same in LISP which gives cognitive AIs sometimes
[20:56:24] *** Joins: MasterDuke (~MasterDuk@94.0.188.131)
[20:57:41] *** Quits: holyghost (~holly@109.136.39.83) (Quit: This computer has gone to sleep)
[21:03:30] *** Joins: holyghost (~holly@109.136.39.83)
[21:04:26] <holyghost> Everything is at http://github.com/hollythemage/AI-Agent and http://github.com/hollythemage/AI-Agent-Music
[21:22:12] *** Quits: holyghost (~holly@109.136.39.83) (Quit: bbl)
[21:32:58] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:33:17] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:48:14] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[21:58:29] *** Joins: Ben10 (~Ben10@37.120.130.28)
[22:01:37] <codesections> CIAvash, I have a question prompted by the github reply you just posted
[22:03:05] <codesections> m: my &f = grep(* !%% 2) # This doesn't work
[22:03:06] <camelia> rakudo-moar ba15173fd: OUTPUT: «Type check failed in assignment to &f; expected Callable but got Seq (().Seq)␤  in block <unit> at <tmp> line 1␤␤»
[22:03:23] <codesections> m: say ([0..5] ==> grep(* !%% 2) ) # So why does this?
[22:03:23] <camelia> rakudo-moar ba15173fd: OUTPUT: «(1 3 5)␤»
[22:06:40] <CIAvash> I don't know :) it's how the feed operator works and I haven't looked into it. Also for some reason which I don't remember, the functions need to have parenthesis. (most of the time!)
[22:09:23] <codesections> wait, never mind; I was just misreading that syntax
[22:10:19] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:10:54] <codesections> The equivalent (ish – it's .grep instead of &grep) syntax would be: 
[22:11:13] <codesections> m: my &f = *.grep(* !%% 2)
[22:11:13] <camelia> rakudo-moar ba15173fd: ( no output )
[22:11:21] <codesections> which does work
[22:18:34] <codesections> And I'm pretty sure I realized that at some point earlier, which is why I didn't use the &mul_odd_squares example in the GitHub issue – it can already be written as
[22:18:44] <codesections> m: my &mul_odd_squares = *.reduce(&[×]) ∘ *.map(*²) ∘ *.grep(* !%% 2); say mul_odd_squares ^6
[22:18:44] <camelia> rakudo-moar ba15173fd: OUTPUT: «225␤»
[22:20:31] <CIAvash> yeah, but those are methods, does it work functions?
[22:21:12] <codesections> No, which is part (all?) of the motivation for the issue
[22:22:03] <codesections> but it's actually pretty hard to come up with good examples using fns from CORE, because nearly all of them are also methods
[22:24:59] *** Quits: colemanx (~coleman@2605:a601:5529:1e00:54f0:de2:7ad9:462c) (Remote host closed the connection)
[22:25:19] *** Joins: colemanx (~coleman@2605:a601:5529:1e00:cdbb:95d3:8b86:ab4d)
[22:27:25] <CIAvash> `await` is not a method, I remember wanting to use it like method
[22:30:12] *** Parts: Ben10 (~Ben10@37.120.130.28) ()
[22:31:18] <codesections> Part of what makes this more workable is the https://docs.raku.org/language/operators#methodop_.&  So, for example:
[22:31:28] <codesections> m: my $p = Promise.start({ sleep 2; 42}); say $p.&await
[22:31:31] <camelia> rakudo-moar ba15173fd: OUTPUT: «42␤»
[22:34:06] <CIAvash> yeah
[22:35:58] <codesections> So part of what I was trying to get at with my &minmax-primes example was the ability to deal with more complex signatures.  if it was just &min-prime, you could write it as
[22:36:37] <codesections> m: my &min-prime = *.first(&is-prime); say min-prime [10..42]
[22:36:37] <camelia> rakudo-moar ba15173fd: OUTPUT: «11␤»
[22:36:57] <codesections> But there's no way to pass :end to that
[22:37:12] <codesections> m: my &min-prime = *.first(&is-prime); say min-prime [10..42], :end 
[22:37:12] <camelia> rakudo-moar ba15173fd: OUTPUT: «Unexpected named argument 'end' passed␤  in block <unit> at <tmp> line 1␤␤»
[22:37:40] <codesections> m: my &minmax-prime = &first.assuming(&is-prime); say minmax-prime [10..42], :end 
[22:37:41] <camelia> rakudo-moar ba15173fd: OUTPUT: «41␤»
[22:46:23] <CIAvash> same thing applies to `await` I think. `*.&await` works only on one argument, but await can take more than one argument, although you can pass an array to it as well.
[23:30:12] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:30:12] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[23:30:39] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[23:31:10] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[23:32:53] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[23:33:59] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 252 seconds)
[23:35:12] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:38:22] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 265 seconds)
[23:48:13] *** Quits: abraxxa-home (~alex@2a01:100:2000:2500::22) (Remote host closed the connection)
