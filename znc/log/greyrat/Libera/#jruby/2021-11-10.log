[00:01:06] <enebo[m]> ah I see.  I did not really see it in the code but I did not look at it very long
[00:02:01] <enebo[m]> nirvdrum: as it turns out our strftime impl has some invariant processing every time because it is not caching the format processing at all but does use a per thread parser
[00:02:18] <enebo[m]> just adding a simple cache does improve perf a little bit so that is ok
[00:02:46] <enebo[m]> but I also notice we use String and CharSequence and then convert it back to bytes using Charsets
[00:03:19] <enebo[m]> So I think even without making a scaled back lesser but simpler parser there seems to be quite a bit to squeeze out
[00:07:14] <enebo[m]> nirvdrum: The common parser is an idea I outlined for our persistence format a little bit at fosdem
[00:08:31] <enebo[m]> script/module/class bodies all only have a small fraction of instrs for most files loaded and we can bump scope without leaving current simpler interpreter
[10:18:56] <headius> enebo: travis has not replied to my issue about them shutting down service, so I guess that's it
[10:19:04] <headius> we will need to migrate those jobs to GHA
[11:07:24] <headius> silly me... we also need to audit the 2.7 feature list
[11:07:34] <headius> https://github.com/jruby/jruby/issues/6464
[11:08:18] <headius> enebo: you might be able to go through this quicker based on your 3.0 work
[11:08:33] <headius> I will let you do a first pass since a lot of this is probably done
[11:11:29] <headius> I added a note here
[11:46:25] <headius> ugh and snapshot deploys were on travis too
[11:46:31] <headius> I guess I have my marching orders for tomorrow
[17:17:41] *** Joins: mattpatt[m] (~mattpattm@2001:470:69fc:105::315d)
[17:22:38] <mattpatt[m]> I am moving to a new M1 Pro MBP and am getting nowhere fast with JNR/JFFI and 9.3 on Azul's aarch64 JDK 11. Is there a recommended Apple Silicon JDK to use, or do I just need to keep plugging? (I do not recall having these problems with 9.2.19 on an M1 Mac mini, but I also don't recall what I actually did...)
[17:23:30] <mattpatt[m]> headius: Shout if you want/need a hand with GHA/Travis migration - I will have some time tonight...
[17:25:55] <mattpatt[m]> (actually, just saw your tweet. Will check in later on once kid is asleep)
[22:21:14] <mattpatt[m]> so, looks like bundler on native Apple Silicon JDK is a no go until libffi support is upstreamed from Apple. Okay, JDK under Rosetta it is then...
[22:26:56] <mattpatt[m]> welp, still faster than on my old MBP ðŸ¤£
[23:01:59] <headius> mattpatt: yeah that FFI support is the only missing thing really
[23:02:15] <headius> x86 JDK is a good workaround for now since it still runs well
[23:04:10] <mattpatt[m]> @headius I'm looking at the Travis and existing GHA stuff now
[23:05:36] <headius> edipo.federle: are you still looking at that Enumerator/ArithmeticSequence thing? Looks like that is the last failure in Array specs on master (13 of the same error).
[23:05:46] <headius> https://github.com/jruby/jruby/pull/6927
[23:06:14] <headius> mattpatt: oh that would be great... enebo should we do it against 9.3 or 9.2?
[23:06:45] <headius> none of our branches are getting tested now
[23:07:10] <headius> 9.3 and master are a bit better than 9.2 because they moved some mvn-launched jobs to GHA
[23:07:24] <headius> none of the main Ruby suites are running though
[23:07:26] <enebo[m]> headius: do which GHA?
[23:07:31] <headius> yeah
[23:07:48] <enebo[m]> Yeah I think all three if we can since 9.2 may need more releases
[23:08:10] <enebo[m]> I think my only concern is I hit limits on GHA per month and I am uncertain if that will happen to us on an org account
[23:08:45] <enebo[m]> OTOH we only do so much dev at a time in any one place so it probably will not matter from hitting some quota
[23:08:59] <mattpatt[m]> The existing actions stuff that's been done was to move jobs out of Travis? (I was looking for additions to .github and removals from .travis.yml and am not finding much with my quick poking about)
[23:10:01] <headius> mattpatt: 9.3 and master should be mostly the same and have all (or most of) the maven-launched jobs running on GHA
[23:10:08] <headius> 9.2 has almost nothing on GHA
[23:10:18] <headius> I think there'
[23:10:21] <headius> there's a build smoke test and that's it
[23:10:55] <headius> and yes we moved those jobs to get out of travis but never got past the simple maven jobs
[23:11:18] <headius> mattpatt: you know a lot of this is academic... pick 9.2 or 9.3 branch and try moving a job over and we will see how it goes
[23:11:25] <headius> we don't have to boil the ocean
[23:17:47] <enebo[m]> mattpatt: headius Let's do simplest thing first
[23:18:05] <enebo[m]> 9.3 branch which we will merge to master since GHA is already partially there
[23:18:24] <enebo[m]> we can cherrypick or copy that directory to 9.2 after it is running
[23:18:42] <enebo[m]> 9.3 will be our next release too so there's that
[23:18:50] <headius> yeah 9.2 will require some tweaks because it has never been set up to run tests on GHA
[23:18:57] <headius> 9.3 is a good target
[23:18:58] <mattpatt[m]> workflow in `master` and in `jruby-9.3` seem to be identical
[23:19:09] <headius> yeah no change there
[23:19:16] <enebo[m]> mattpatt: yeah they should be...only code is different
[23:19:33] <headius> we just merge 9.2 => 9.3 => master (9.4)
[23:19:36] <mattpatt[m]> I was assuming I'd start on master, but sounds like I should start directly on 9.3
[23:19:43] <headius> so 9.3 changes will get into master naturally but not the other way around
[23:20:10] <headius> 9.3 is current release too so good to prioritize getting it working in CI again
[23:20:20] <headius> and master fails all its tests because we moved to 3.0 and not everything is there yet
[23:20:45] <headius> which is what I'm working on today ðŸ˜€
[23:47:23] *** Joins: subbu (~subbu@user/subbu)
[23:59:53] <mattpatt[m]> Just opening a test-this-action PR
