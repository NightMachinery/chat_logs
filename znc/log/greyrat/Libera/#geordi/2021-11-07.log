[00:52:02] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; } struct A {}; struct B {}; template<typename T> struct isA { static bool value = false; }; template<> struct isA<A> { static bool value = true; };
[00:52:02] <geordi> error: ISO C++ forbids in-class initialization of non-const static member 'isA<T>::value'
[00:53:17] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; };
[00:53:17] <geordi> A is A
[00:54:34] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; }; template<typename T> concept CisA = isA<T>::value;
[00:54:34] <geordi> A is A
[00:57:25] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; B b; f(b); } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; }; template<typename T> concept CisA = isA<T>::value; template<CisA T> void f(T) { cout << "hello"; }
[00:57:25] <geordi> error: no matching function for call to 'f(B&)'
[00:57:38] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; A a; f(a); } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; }; template<typename T> concept CisA = isA<T>::value; template<CisA T> void f(T) { cout << "hello"; }
[00:57:38] <geordi> A is Ahello
[01:25:13] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; A a; f(a); } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; }; template<typename T, D> struct C; template<typename T, typename D> concept CisA = requires C<T, D>::d; template<CisA T> void f(T) { cout << "hello"; }
[01:25:13] <geordi> error: 'D' has not been declared
[01:25:32] <CarloWood> { if (isA<A>::value) cout << "A is A"; if (isA<B>::value) cout << "B is A"; A a; f(a); } struct A {}; struct B {}; template<typename T> struct isA { static bool const value = false; }; template<> struct isA<A> { static bool const value = true; }; template<typename T, typename D> struct C; template<typename T, typename D> concept CisA = requires C<T, D>::d; template<CisA T> void f(T) { cout << "hello"; }
[01:25:32] <geordi> error: expected '{' before 'C'
[06:41:03] *** Joins: great_taste (~great_tas@190.32.235.20)
[08:38:36] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[18:06:14] *** Quits: X-Scale (~ARM@31.22.160.27) (Ping timeout: 260 seconds)
[18:06:22] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[18:07:55] *** X-Scale` is now known as X-Scale
[20:51:47] *** Quits: rb (~augh@theguntretort.com) (Quit: ZNC - https://znc.in)
[20:53:37] *** Joins: rwb (~augh@theguntretort.com)
[21:13:47] *** rwb is now known as rb
[21:45:24] *** Joins: great_taste (~great_tas@190.32.235.20)
