[00:03:05] <DaveCherkusN1AI[> I think I would suggest a few more words around this.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/6867aeebe5ec5719a4073c08d801288d3d6beee1)
[00:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[01:04:39] <DaveCherkusN1AI[> End result with FSK_example is since the RX section uses decim=1 a lot of the math simplifies itself.
[01:04:52] <DaveCherkusN1AI[> The eye graph section of my flowgraph looks like: 
[01:04:59] * DaveCherkusN1AI[ uploaded an image: (27KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/995dfdc74d295871a447abc5a4624de9c0f324b4/image.png >
[01:05:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[01:06:07] <DaveCherkusN1AI[> Eye sink just uses the new variables...
[01:06:09] * DaveCherkusN1AI[ uploaded an image: (56KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/f0c058d30f61f8e5ccddbb2b63efcb98849bc1b6/image.png >
[01:06:27] <DaveCherkusN1AI[> The best part of it, it also actually works!
[01:19:47] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[01:28:34] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:28:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:31:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:31:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[01:32:11] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:46:44] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:50:46] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[01:57:38] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:05:49] *** Server sets mode: +nt 
[02:13:03] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:5f4a:3e:1cd:4cfc) (Quit: uros)
[02:33:24] *** Joins: foz (mt@gateway/vpn/protonvpn/deliriousgeorge)
[02:48:05] *** Joins: euidzero_ (~euidzero@158.101.10.150)
[02:49:01] *** Quits: euidzero (~euidzero@158.101.10.150) (Ping timeout: 268 seconds)
[03:34:20] *** Quits: jemius (~imperator@200116b82d412100fd0d21dda4388e79.dip.versatel-1u1.de) (Quit: Leaving)
[03:38:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:12:40] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9c22:176:a43c:c037)
[04:17:19] *** Quits: goldrak (~goldrak@217-212-240-69.teliacarrier-cust.com) (Ping timeout: 256 seconds)
[04:27:38] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:42:58] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9c22:176:a43c:c037) (Read error: Connection reset by peer)
[05:04:17] * mcdiarmid[m] uploaded an image: (13KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/93910e2917314fdf5a183483bce8e95611c6a12c/image.png >
[05:04:17] <mcdiarmid[m]> I've got a USRP N210 with UBX-40 v2 daughter board, but I can't figure out how to use both antennas to receive.  
[05:04:23] <mcdiarmid[m]> Does anyone have pointers for this?
[05:04:46] * mcdiarmid[m] uploaded an image: (37KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/0b943ba350c9d889ca9833b159c2d3e2fed89660/image.png >
[05:05:37] <patchvonbraun[m]> There’s only one receive chain.
[05:05:55] <mcdiarmid[m]> Oh, that probably explains why I can't find a how-to
[05:05:57] <mcdiarmid[m]> Thanks :)
[05:07:14] <patchvonbraun[m]> The TX/RX port is used by the RX chain in half-duplex configurations, where the RX chain is switched to it during receive.  But the N210 has only a single ADC, and the UBX only has a single downconversion chain.
[05:09:29] <patchvonbraun[m]> The only dual-channel RX that historically worked on the N210 was the TVRX2, which I think is discontinued--it was a low-iF downconversion, so the two ADC channels were used as real IFs (at 6MHz as I recall), and then converted to two complex-baseband streams by the DDC in the FPGA.
[05:12:50] <mcdiarmid[m]> Ah I see, that was the daughterboard mentioned in the only how-to I could find for dual rx on an N210.  Thank you for explaining all this
[05:16:49] <patchvonbraun[m]> The N210 diagram on the N210 datasheet shows the two ADCs and two DACs, which might lull you into thinking that there's two RX channels always, but only if you didn't realize that MOST daughtercards use complex (I/Q) sampling.
[05:40:53] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[06:36:01] *** Quits: cuoops (~cuoops@user/cuoops) (Quit: kthxbye)
[06:36:20] *** Joins: pcero (~pcero@187.135.224.43)
[06:37:13] *** Joins: cuoops (~cuoops@user/cuoops)
[07:04:29] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[07:11:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:23:42] <DaveCherkusN1AI[> So this isn't working out too well for me...  picture follows...
[07:23:43] * DaveCherkusN1AI[ uploaded an image: (47KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/1d323c6c20393eec0a8fb5d4535eb6637ce93f55/image.png >
[07:25:37] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 240 seconds)
[07:26:38] <DaveCherkusN1AI[> I have a flow that can support different SDRs or no SDR at all (i.e. null sink).  Problem is when I run the flow and the SDR isn't present (i.e. I select Null Sink) the code still tries to instantiate the osmocom Sink and that fails.  So, disable the sinks for radios that aren't present with the 'D' key?  Nope, then the selector complains that the output is no longer connected.  Any ideas how to work around this?
[07:27:04] *** Joins: Thorn (~Thorn@user/thorn)
[07:39:39] <muaddib[m]> If you’re gonna disable a radio, then don’t use the selector.
[07:42:04] <muaddib[m]> Just have your upstream data source connected to both blocks (you can connect one source to 2 sinks). The flowgraph will only instantiate the enabled sink.
[07:46:39] <DaveCherkusN1AI[> Sounds like that's the best workaround... 
[07:48:20] <muaddib[m]> Don’t quote me on this, but the generic soapy block might be able to take the device arguments for both of those.
[07:52:46] <muaddib[m]> There’s a bunch of ways to do this. Is the idea just to have a fixed unchanging dsp process  but  use it with different radios?
[08:05:45] *** Quits: pcero (~pcero@187.135.224.43) (Quit: Konversation terminated!)
[08:32:28] <patchvonbraun[m]> Most of my flow graphs are hardware agnostic. I pass device arg in at runtime, etc.
[08:36:26] <cuoops> https://i.imgur.com/4N0ubAk.png
[08:36:47] <cuoops> that's so stupid it's funny
[08:47:46] <n1ai[m]> <patchvonbraun[m]> "Most of my flow graphs are..." <- I am not sure I follow. I believe flow graphs must start and stop with source and sink. I can see how a device argument could be used to change a path or something like that, but not to change the type of source or sink. I'm not sure what mechanism you are using to pass in the device argument. Are you using a command line to pass in the device argument?
[08:48:14] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:49:04] <n1ai[m]> * I am not sure I follow. I believe flow graphs must start and stop with source and sink. I can see how a device argument could be used to change a path or something like that, but not to change the type of source or sink. I'm not sure what mechanism you are using to pass in the device argument. Are you using the command line to pass in the device argument?
[08:49:19] <patchvonbraun[m]> I use a command line parameter for the device argument.
[08:51:15] <patchvonbraun[m]> But it is true that making radical changes in the flow graph at runtime is kinda difficult. I’ll note that osmosdr supports a “file=“ device type. Probably soapy does as well.
[08:51:16] <n1ai[m]> So you change the python to instantiate different sources or sinks based on what the device argument is?
[08:54:00] <patchvonbraun[m]> No. The sinks/sources support a device argument—osmosdr or the generic soapy sinks/source.
[08:54:54] <n1ai[m]> Okay. I understand. I will look into those blocks more closely tomorrow. Thank you very much for your help!
[09:15:39] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Ping timeout: 256 seconds)
[10:07:41] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[10:15:36] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:29:05] *** Quits: foz (mt@gateway/vpn/protonvpn/deliriousgeorge) (Quit: Konversation terminated!)
[10:56:31] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:21:41] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[11:46:50] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:51:42] <Bernard[m]1> Can someone give me/point me to a high-level explanation of the changes in argument type-checking in GR?
[11:57:27] <l4rrybr3nt[m]> is there a way in grc to detect the frequency of maximum rx level? I want to detect a carrier of a "known" frequency and see if it's a little "off"
[12:09:03] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:f522:7238:7e9f:face)
[12:17:47] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[12:18:10] <Bernard[m]1> <Bernard[m]1> "Can someone give me/point me..." <- Is this related to the flowgraph representation changes from 3.7-3.8?
[12:21:18] <l4rrybr3nt[m]> <l4rrybr3nt[m]> "is there a way in grc to..." <- is studying the PLL mechanism the right direction?
[12:29:16] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[12:30:12] *** Quits: cluberic[m] (~clubericg@2001:470:69fc:105::1:88cc) (Quit: You have been kicked for being idle)
[12:32:58] *** Joins: goldrak (~goldrak@217-212-240-68.teliacarrier-cust.com)
[12:48:24] <funkylab[m]> l4rrybr3nt: well, PLLs are definitely commonly used for such purposes. You'll probably want to have bandpass filter upfront to suppress things outside of what you can assume to be the feasible range 
[12:48:46] <funkylab[m]> l4rrybr3nt: on a related note, what is "a little off", in terms of frequency relative to sample rate, and maybe also knowing the SNR?
[12:49:41] <funkylab[m]> generally, what you have is a parametric spectrum estimation problem. A PLL might be a good solution – there's many others, but it's hard to tell whether any of them would be better not knowing more
[12:52:55] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:53:00] <l4rrybr3nt[m]> funkylab: I already receive the signal through a bandpass. Example is the sig is expected to be on 145.0MHz but in fact comes in on 144.998 and I want to measure the offset from the expected frequency. SNR would be detected by measuring the ground noise before starting the actual measurement. I can influence when the transmitter starts to transmit
[12:53:56] <funkylab[m]> so, sampling rate and SNRs you're expecting to work at?
[12:56:14] <l4rrybr3nt[m]> samp rate is now set to 10Msps, snr will at least be 25db
[12:56:26] <funkylab[m]> ah, that's both plentiful!
[12:58:22] <funkylab[m]> so, yeah, then PLL freqdet with  a low filter bandwidth works
[12:58:36] <l4rrybr3nt[m]> ha yea thats the benefit of working in a 
[12:58:49] <l4rrybr3nt[m]> rf free environment... good snr :D
[12:59:09] <funkylab[m]> but you don't need continuous updates to the frequency error, do you?
[13:00:04] <l4rrybr3nt[m]> nope, the whole thing is: measure ground noise, wait for the signal to come in, check the freq once and exit. later on I need to detect am mod index which is a whole different story :D
[13:01:02] <funkylab[m]> ah well, then rather make something that is a best possible estimate based one long sample vector
[13:02:11] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[13:02:17] <funkylab[m]> again, at this SNR, a PLL definitely works, but your estimate has variance – as everything based on an observation. But there's methods that might bring you lower estimation variance. Don't know if that matters!
[13:04:05] <l4rrybr3nt[m]> I could easily hook to that signal for a few seconds for a better estimation. lower variance is always better and the tx signal will be held for 10sec, so there should be plenty of time
[13:05:12] <funkylab[m]> well, look into parametric spectral estimators then. ESPRIT?
[13:06:19] <Yamakaja[m]> l4rrybr3nt: Is that signal going to be modulated or can you estimate that error with a pure tone?
[13:07:28] <l4rrybr3nt[m]> Yamakaja: that depends. I have to deal with one simple carrier and the other AM 80% 1khz
[13:07:41] <Yamakaja[m]> Also what are you frequency sources? I don't believe there's a point in measuring the frequency error of a TXCO with super low variance - that thing is going to drift around, especially if you give it some time :P
[13:07:46] <l4rrybr3nt[m]> funkylab[m]: already googeling :)
[13:08:04] <Yamakaja[m]> s/you/your/
[13:08:16] <Yamakaja[m]> s/you/your/, s/TXCO/TCXO/
[13:10:00] <l4rrybr3nt[m]> Yamakaja[m]: to be honest, this is more proof of concept for now. actually thats on a hackrf with txco and it's drifting. but not as bad as the transmitter most likely :) so if I can narrow it down to 100 or 200 hz it would be ok for now
[13:30:15] *** Joins: uros1 (~Thunderbi@2001:8a0:6074:ad00:726d:5446:b5ec:b861)
[13:30:50] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:f522:7238:7e9f:face) (Ping timeout: 250 seconds)
[13:30:50] *** uros1 is now known as uros
[13:41:59] *** Joins: Peanut (~paul@user/peanut)
[13:44:21] <l4rrybr3nt[m]> @funkylab I did a quick pll thing and I now understand what you were talking about in terms of "estimation" .. The result is hopping and would need filtering. ESPRIT looks way cooler but I dont know if I'll get that working :D have to dig into it
[13:48:27] <funkylab[m]> If it hops Rio much, reduce loopback filter bandwidth of the pll
[13:48:38] <funkylab[m]> s/Rio/too/
[14:11:00] <l4rrybr3nt[m]> this is not bad for now! :D 
[14:14:36] *** Quits: arch3r (~ben@185.66.194.79) (Ping timeout: 240 seconds)
[14:15:59] *** Joins: arch3r (~ben@185.66.194.78)
[14:17:50] *** Quits: arch3r (~ben@185.66.194.78) (Read error: Connection reset by peer)
[14:20:07] *** Joins: arch3r (~ben@185.66.194.79)
[14:24:49] *** Joins: arch3r- (~ben@185.66.194.78)
[14:25:24] *** Quits: arch3r (~ben@185.66.194.79) (Ping timeout: 240 seconds)
[14:26:25] *** arch3r- is now known as arch3r
[14:29:02] <l4rrybr3nt[m]> combined with some averaging it is close enough for now. thanks for your help funkylab  Yamakaja 
[14:45:31] *** Joins: jemius (~imperator@200116b82daf520025fb2d768954fcfd.dip.versatel-1u1.de)
[15:02:09] *** Joins: Ottega[m] (~ottegamat@2001:470:69fc:105::1:d141)
[15:15:18] <funkylab[m]> l4rrybr3nt: averaging is essentially the same as reducing the loop filter bandwidth (if you think about it, an average is just a boxcar-shaped filter)
[15:17:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:54:02] *** Joins: pcero (~pcero@187.135.224.43)
[16:27:19] *** Quits: jemius (~imperator@200116b82daf520025fb2d768954fcfd.dip.versatel-1u1.de) (Quit: Leaving)
[16:42:47] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:40ed:b38:9078:7a7) (Read error: Connection reset by peer)
[16:49:03] <DaveCherkusN1AI[> <muaddib[m]> "There’s a bunch of ways to do..." <- That's pretty much it.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/354ca3e6061646efa5c5c20b1b64975ce3555538)
[17:12:56] <BarryDuggan[m]> using a program, how can I determine the OS version, e.g. "Ubuntu 20.04.4 LTS"?
[17:13:19] <Myon> check /etc/os-release
[17:16:29] <BarryDuggan[m]> thanks!
[17:18:50] <MarcinP[m]> Hi, I have question about RRC filter, is it compulsory to have number of taps in RRC to be multiple of samples per symbols + 1 ? 
[17:21:18] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:22:09] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 252 seconds)
[17:39:50] *** Joins: jemius (~imperator@200116b82daf520025fb2d768954fcfd.dip.versatel-1u1.de)
[17:59:09] <funkylab[m]> no, it's not
[17:59:45] <funkylab[m]> it's just a length where the truncation hurts the least (a local minimum of pain, if you will)
[18:00:35] <funkylab[m]> so, it's sensible, but if you have other constraints (e.g. gets too long, thus hard to compute in real time) you can make trade-offs there
[18:01:14] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[18:01:58] <LordKalma> RC/no filter vs RRC/RRC, now that's a debate :D
[18:03:36] <funkylab[m]> depends on your channel and noise model, and how much of the RX filtering you'd have to do anyways
[18:04:50] <funkylab[m]> generally, you want to have a chance to have a matched receive filter, as it will, even in a multipath channel, at least give you a chance of local minimal in a timing error estimator function, I'd guess
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:24:19] *** Joins: warpenguin (~holly@user/jholtom)
[18:24:59] *** Joins: bpadalin1 (~bpadalino@107.191.125.107)
[18:25:11] *** Server sets mode: +nt 
[18:25:52] *** Joins: ChealRip1 (~RealChips@user/ChealRipster)
[18:26:45] *** Quits: jholtom (~holly@user/jholtom) (Killed (NickServ (GHOST command used by warpenguin)))
[18:26:47] *** warpenguin is now known as jholtom
[18:29:22] *** Joins: MrCircuitMatt- (~max@toxik.info)
[18:29:52] *** Quits: Peanut (~paul@user/peanut) (*.net *.split)
[18:29:52] *** Quits: goldrak (~goldrak@217-212-240-68.teliacarrier-cust.com) (*.net *.split)
[18:29:52] *** Quits: kusanagi (~kusanagi@user/kusanagi) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: sn0wflake (~snowflake@k1vzx.com) (*.net *.split)
[18:29:53] *** Quits: DonRichie (~DonRichie@ricl.de) (*.net *.split)
[18:29:53] *** Quits: even (~steve@ayerhart.party) (*.net *.split)
[18:29:53] *** Quits: MrCircuitMatt (~max@toxik.info) (*.net *.split)
[18:29:53] *** Quits: ChealRipster (~RealChips@user/ChealRipster) (*.net *.split)
[18:29:53] *** Quits: eth0p1 (~eth0p1@bacalhau.chourico.net) (*.net *.split)
[18:29:53] *** Quits: drewlander (~drewlande@74.196.20.3) (*.net *.split)
[18:29:53] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[18:29:53] *** Quits: blackbit (~blackbit@ghost.xx.vu) (*.net *.split)
[18:29:53] *** Quits: bpadalino (~bpadalino@107.191.125.107) (*.net *.split)
[18:29:53] *** sn1wflake is now known as sn0wflake
[18:29:54] *** DonRichie2 is now known as DonRichie
[18:30:07] *** Joins: Peanut (~paul@user/peanut)
[18:36:45] *** Joins: blackbit (blackbit@ghost.xx.vu)
[19:20:56] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:726d:5446:b5ec:b861) (Ping timeout: 252 seconds)
[19:37:50] <l4rrybr3nt[m]> <funkylab[m]> "l4rrybr3nt: averaging is..." <- okay. how low can we go? the doc mentions it "should" be pi/200 and I already entered 0.005 now :-) just to stay reasonable
[19:39:57] <funkylab[m]> as low as you can still both converge within the time the PLL operates (the PLL is a control loop; you start it up, it oscillates, at some point it converges, but the lower the bandwidth of the loop filter the slower the oscillations, and the better the estimate after the oscillations have dropped beneath an acceptable level) and you can still lock on to your target oscillation. 
[19:39:57] <funkylab[m]> Let's do the math here
[19:40:24] <funkylab[m]> so, 10 MS/s and at most 2 kHz offset, from your example
[19:41:09] <funkylab[m]> a 2 kHz offset means that the error phase does a full 2pi every 10·10⁶ / 2·10³ = 5000 samples
[19:41:23] <funkylab[m]> or, 1/5000 of 2pi per sample
[19:41:32] <funkylab[m]> so, pi/2500 would still be OK
[19:42:00] <funkylab[m]> you don't want to be at the edge of things, but using a bandwidth of pi/1000 would sound feasible
[19:42:58] <funkylab[m]> (I mean, "loop filter bandwidth" is also a ... so and so term. A filter isn't only its bandwidth, and we do not even specify the type of filter or our exact definition of "bandwidth")
[19:43:51] <l4rrybr3nt[m]> hell let me hack that in and compare quickly
[19:50:29] <l4rrybr3nt[m]> still works, seems to "jump" less .. I am still able to catch an offset of 20khz though
[19:53:38] <funkylab[m]> yeah, as said, "bandwidth" is not going to *stop* you under great SNR, because a loop filter isn't going to be very steep
[19:53:51] <l4rrybr3nt[m]> ahh okay got it
[19:54:49] <funkylab[m]> plus, the bandwidth really just says "OK, if the actual frequency is within this and that of my current guess, I'll definitely converge to it". The presence of noise can still make you randomly walk around until you "hit" the right frequency
[19:55:14] <funkylab[m]> but it isn't guaranteed (need not even be likely, you can get captured by other effects)
[20:01:08] <l4rrybr3nt[m]> I am really satisfied with the result so far. :) 
[20:01:49] <funkylab[m]> glad to hear! 
[20:01:57] <funkylab[m]> as said, the PLL is likely not even optimal 
[20:02:47] <funkylab[m]> (exactly because you have this phase at the beginning where it needs to stabilize, and in the end, for your accuracy, the later samples play a bigger role than the early ones)
[20:03:14] <funkylab[m]> but if it's good enough! Also, at 25 dB, and such a small bandwidth, you can't be very far from a theoretically optimal estimator (assuming we're only comparing unbiased ones)
[20:03:42] <l4rrybr3nt[m]> Measuring with my handheld trx shows me an offset between 10 and 50hz -> most likely it IS a little above the frequency so measuring +/-20hz (in my case with a fantastic snr) is more than I did expect. 
[20:08:39] <funkylab[m]> I would have questions on your measuring methodology and would like to have your measurement equipment! at 145 MHz, a 20 Hz offset is 7.25 ppm. Are your oscillators likely to be more accurate?
[20:12:44] *** Joins: jemius (~imperator@200116b82daf520025fb2d768954fcfd.dip.versatel-1u1.de)
[20:14:26] <l4rrybr3nt[m]> To be honest, I can't really say how accurate this chinese handheld trx is. So I am not working in a lab environment here. But I dont think the TRX is hopping around a lot. More like drifting. But you are right.. the +/- xy hz may well caused by the trx here. I should hook up a sig generator eventually. And for sure the HackRF isn't a measurement receiver also :D
[20:14:46] <l4rrybr3nt[m]> But it's whats in the box and I have to work with that :)
[20:15:28] <funkylab[m]> jep, but chances are the oscillator in your hackrf are much better than that in your transceiver
[20:16:27] <patchvonbraun[m]> The default hackrf oscillator is 20Ppm
[20:16:47] <funkylab[m]> also note that for example that there's expensive measurement equipment that comes with a 10 ppm oscillator (unlikely that you'd do that with a siggen, but still), so don't judge anything before you know the datasheet and calibration state of your references
[20:16:47] <funkylab[m]> patchvonbraun[m]: ah I thought it was better
[20:16:56] <l4rrybr3nt[m]> I have got a TCXO attached.. 
[20:16:59] <LordKalma> hackrf lives true to its name, always
[20:17:15] <patchvonbraun[m]> Amateur radio handhelds are usually a bit better but not by a lot. Perhaps 5-10PPM
[20:17:33] <LordKalma> some are pretty off honeslty
[20:18:04] <patchvonbraun[m]> The usual TCXO on HackRF is specced at 0.5PPM
[20:19:34] <funkylab[m]> I mean you can test how much HackRF and your TRX disagree on frequencies; simply tune the hackrf to say 145 MHz, send a "constant" (DC / LO cancellation will eat some of it, but we don't want power, anyway), and observe with the TRX
[20:19:43] <LordKalma> https://i.imgur.com/WD8XKcO.jpg
[20:19:58] <LordKalma> I had this TCXO before getting a port-a-pack, which also has one on board
[20:20:17] <funkylab[m]> then, if there's still GSM around you, you can use that to calibrate your HackRF's freq offset
[20:21:05] <LordKalma> honestly, most applications don't require much precision anyway
[20:21:33] <funkylab[m]> true, I mean we just demonstrated how well a PLL works
[20:21:51] <funkylab[m]> but l4rrybr3nt being in a lab environment might mean they need it as measurement device
[20:22:22] <LordKalma> I would use a lab to measure a hackrf, not a hackrf to measure a lab
[20:22:27] <LordKalma> but I'm spoiled in that regard
[20:22:27] <patchvonbraun[m]> I once had a customer who opined that even 1.0e-16 was r good enough and what was I going to do for him? I suggested that he might want to consider a different PhD thesis or maybe a different field altogether.
[20:22:47] <LordKalma> -16?!
[20:22:59] <patchvonbraun[m]> Yes.
[20:23:06] <LordKalma> what is this? the atomic clock?
[20:23:09] <patchvonbraun[m]> It needed to be “perfect”
[20:23:36] <patchvonbraun[m]> Hydrogen masers archive 1.0e-16
[20:23:48] <patchvonbraun[m]> Achieve
[20:24:36] <LordKalma> his computer probably didn't do math with that much significant digits
[20:24:47] <patchvonbraun[m]> My Rb achieves about -11
[20:26:58] <LordKalma> people be crazy
[20:28:00] <patchvonbraun[m]> To be fair there are uses for extremely accurate clocks. But messing about surfing the airwaves probably isn’t one of them.
[20:28:27] <LordKalma> of course there are, and of course it isn't
[20:29:02] *** Joins: neverfindme (~hayden@158.123.160.43)
[20:29:16] <LordKalma> the amount of things at the lab we sometimes just hand-adjust... you'd be surprised
[20:29:36] <LordKalma> like 400GBps optical links that required the IQ optical modulator to be balanced by hand
[20:31:43] <patchvonbraun[m]> I’m measuring phase excursions on the WWV signal caused by ionospheric motion. Need a very stable system clock for that.
[20:31:50] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[20:32:44] <LordKalma> measuring deltas requires precision, but not necessarily accurate to the same degree
[20:32:49] <Yamakaja[m]> LordKalma: Damn, GB as in GByte or GBaud?
[20:33:25] <LordKalma> byte iirc. it's not my group, I only know what I hear from hearing them pitching to visitors next to my workbench
[20:33:36] <LordKalma> (single channel, btw, no wdm)
[20:33:57] <Yamakaja[m]> That's 3.2 Tbit/s, papers please :D
[20:34:16] <LordKalma> bit* sorry
[20:34:34] <LordKalma> by head today isn't great
[20:34:36] <Yamakaja[m]> Ahh
[20:34:39] <LordKalma> *my  urgh
[20:35:09] <Yamakaja[m]> With a coherent optical link i suppose that's feasible. What bandwidth are they operating on?
[20:35:34] <LordKalma> yes, coherent optics, don't know much more
[20:36:09] <patchvonbraun[m]> Nortel was working on Tbit optical switching when the party ended in 2008.
[20:36:30] <LordKalma> patchvonbraun[m] this is without WDM
[20:36:48] <LordKalma> it's something very specific, I don't know exactly what they are studying
[20:36:55] <LordKalma> but they are pushing Shannon's limit so damn hard
[20:37:07] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[20:37:32] <patchvonbraun[m]> LordKalma: yeah. Was my thing at Nortel. Just knew guys who were playing with it.
[20:37:49] <Yamakaja[m]> patchvonbraun: Are you sure they were working with single-carrier systems?
[20:37:49] <patchvonbraun[m]> s/Was/Wasnt/
[20:37:52] <LordKalma> anyway, what I can tell you is the specs of the RF generator, which is the limiting device in the setup. It's a Keysight M8194A, 4 channels (which we use to do 2x IQ (dual polarization))  @ 120GSps, 45GHz usable bandwidth 
[20:38:06] <LordKalma> or was it 35? might be 35
[20:38:19] <patchvonbraun[m]> Yamakaja: I don’t know.
[20:38:29] <Yamakaja[m]> WDM Tbit/s has become pretty easy by now (And was probably also possible back then)
[20:38:55] <LordKalma> well, in "simple" systems, whether you can get Tbit/s on single wavelength is more or less dispersion-limited
[20:39:18] <LordKalma> RF systems never have to think blue and red travel at different speeds
[20:39:30] <funkylab[m]> LordKalma: Yep, the pride of the optical testers group at Keysight in Böblingen
[20:40:07] <LordKalma> the M8194A?
[20:40:23] <funkylab[m]> LordKalma: we would also be hardly pressed to make the medium we're using nonlinear
[20:40:29] <patchvonbraun[m]> LordKalma: not always true. When your signals are traveling along columns of interstellar medium that may be 100s of light years deep…..
[20:41:13] <LordKalma> patchvonbraun[m] well, I of course mean on garden-variety waveguides
[20:41:55] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[20:41:58] <funkylab[m]> LordKalma: might confuse this with m829...
[20:42:00] <Yamakaja[m]> Not sure, but i don't think propagation speed is constant over frequency in waveguides
[20:42:14] <LordKalma> it's not. fibre is dispersive
[20:42:28] <LordKalma> nothing is linear if your bandwidth is large enough :p
[20:43:36] <LordKalma> funkylab[m] I don't think so?! https://www.keysight.com/zz/en/product/M8920A/radio-test-set.html
[20:43:51] <LordKalma> versus https://www.keysight.com/zz/en/product/M8194A/120-gsa-s-arbitrary-waveform-generator.html
[20:44:16] <patchvonbraun[m]> Yamakaja: indeed which is why there are formulas for calculating the effective wavelength elongation in a guide and why they have a low frequency cutoff.
[20:45:02] <funkylab[m]> ah, https://www.keysight.com/de/de/product/M8290A/optical-modulation-analyzer-high-speed-digitizer-test-solution.html
[20:45:02] <funkylab[m]>  * ah, https://www.keysight.com/de/de/product/M8290A/optical-modulation-analyzer-high-speed-digitizer-test-solution.html , LordKalma 
[20:45:23] <LordKalma> ahhhh okay, 8290, not 8920 :D
[20:45:53] <LordKalma> yeah, we don't have that one. We have generations and scopes because everything is home made, including the modulation
[20:45:55] <funkylab[m]> I might still be confusing things, it's been a while since I've talked to my favorite person in that production/special solutions team
[20:46:05] <LordKalma> interesting side note: patchvonbraun[m] and I use the same equations, but with 1/x :D 
[20:46:13] <LordKalma> patchvonbraun[m] says Z, I say n
[20:46:28] <LordKalma> microwave waveguides versus optical ones, I mean
[21:01:28] <Yamakaja[m]> I've failed to fined one a couple times now ... has anybody ever seen a real API Reference (Think doxygen, C++ Reference, etc.) for pybind? :/
[21:02:34] <LordKalma> pybind11?
[21:02:42] <Yamakaja[m]> Yes
[21:02:57] <LordKalma> the read the docs page isn't good?
[21:03:11] <Yamakaja[m]> It certainly isn't exhaustive
[21:03:32] <LordKalma> you can read boost::python, since pybind11 comes from it, I guess
[21:05:15] <Yamakaja[m]> I think the projects have diverged to the point where reading the doc for boost::python isn't going to help much. Especially for the more advanced usecases
[21:06:34] <Yamakaja[m]> But they do have a reference :D https://www.boost.org/doc/libs/1_58_0/libs/python/doc/v2/reference.html
[21:06:44] <Yamakaja[m]> I suppose i'll just have to keep digging around in the headers ...
[21:09:11] *** Joins: PKM (~PKM@2402:3a80:10cc:a122:e8d2:2666:50c4:bc8f)
[21:09:23] <l4rrybr3nt[m]> is there a "ok" way to print my values to the console to parse from a calling application? there are a lot ideas on the net, like sockets and stuff but I think it's not needed for me
[21:10:25] <Yamakaja[m]> stdout isn't a good method to get data out, lots of other output is going there. You could write to a file, network socket, fifo or use other IPC techniques
[21:10:56] <Yamakaja[m]> ZMQ sockets are popular. What's on the other side?
[21:11:00] <Yamakaja[m]> * sockets are also popular. What's
[21:11:22] <l4rrybr3nt[m]> for now on the other side is a .py 
[21:11:38] <Yamakaja[m]> What kind of data and at what rate?
[21:14:20] <l4rrybr3nt[m]> its just parsing the signal level and the offset from the pll. 2-3 fps would be enough :D I used to parse from SoapyPower or Hackrfsweep from the console and that worked well. But it's far away from a cool solution though
[21:15:27] <Yamakaja[m]> I think i'd go with a network connection, but at those rates pretty much any method will do 🤷‍♂️
[21:18:37] <l4rrybr3nt[m]> yea like printing, take the paper and scan it again.. still fast enough :D is it like adding a "Python Module" to the the flow and handle it from there? I think the TCP sink is not optimal for giving measurement results to the main application? 
[21:19:02] <l4rrybr3nt[m]> Maybe I have to stop asking and doing some own research now.. you already saved my day twice today :D
[21:19:21] <Yamakaja[m]> If your values are already just values in a stream you can also use the TCP Sink block
[21:19:31] <Yamakaja[m]> Alternatively the ZeroMQ blocks
[21:21:00] <l4rrybr3nt[m]> For now I pick them up with "Function Probe" from "Probe Signal" and have a GUI Label -> GUI has to go away of cause
[21:23:16] <l4rrybr3nt[m]> ZMQ looks cool, thanks, I dig into the wiki
[21:24:54] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:25:33] *** Joins: lambo (~lambo@129.24.49.157)
[21:26:27] <lambo> Hey everybody, is pybombs being phased out? It seems that gnuradio is no longer really supporting pybombs installations.
[21:28:07] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:28:24] *** Joins: lambo (~lambo@129.24.49.157)
[21:30:01] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:30:40] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[21:32:20] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:32:37] *** Joins: lambo (~lambo@129.24.49.157)
[21:32:47] *** Parts: PKM (~PKM@2402:3a80:10cc:a122:e8d2:2666:50c4:bc8f) ()
[21:34:27] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:34:44] *** Joins: lambo (~lambo@129.24.49.157)
[21:36:24] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:36:41] *** Joins: lambo (~lambo@129.24.49.157)
[21:38:31] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[21:40:48] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:41:05] *** Joins: lambo (~lambo@129.24.49.157)
[21:45:13] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:45:30] *** Joins: lambo (~lambo@129.24.49.157)
[21:47:11] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:47:27] *** Joins: lambo (~lambo@129.24.49.157)
[21:49:08] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:49:24] *** Joins: lambo (~lambo@129.24.49.157)
[21:51:04] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:51:21] *** Joins: lambo (~lambo@129.24.49.157)
[21:51:53] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:54:58] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:55:14] *** Joins: lambo (~lambo@129.24.49.157)
[21:56:55] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:57:12] *** Joins: lambo (~lambo@129.24.49.157)
[21:57:17] *** Joins: jmfriedt[m] (~jmfriedtg@2001:470:69fc:105::eab8)
[21:57:18] <jmfriedt[m]>  I have compiled last week GNU Radio 3.8, 3.9 and 3.10 on my computer to make sure I had all versions available, and all compilations completed fine
[21:57:20] <willcode4[m]> lambo: PyBOMBS is not being actively maintained, but it still works if you understand how to make small changes to the config files and recipes.
[21:57:24] <jmfriedt[m]> * my computer using PyBOMBS (Debian/sid)to make
[21:59:05] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[21:59:21] *** Joins: lambo (~lambo@129.24.49.157)
[22:01:02] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[22:01:18] *** Joins: lambo (~lambo@129.24.49.157)
[22:02:31] <DaveCherkusN1AI[> jmfriedt:  I am wondering if the code that is in http://jmfriedt.free.fr/gnuradiodays2021_3jmfriedt.pdf is available, or should I re-create it? 
[22:03:18] <funkylab[m]> lambo: you seem to have IRC connectivity issues. SO, it's not sure wheter the messages on here ever reach you. That's a bit sad for the people answering. Consider not using IRC to access this channel, but going to `#gnuradio:gnuradio.org` using Matrix (e.g. using matrix.org) , which is more or less our "native" platform, and also functions as bouncer, so you get messages delivered that were sent while you were offline.
[22:03:25] <lambo> Thanks! How are developers moving between different installed branches then? Are folks just recompiling from scratch on different branches? e.g. if I'm working on 3.10, and I need to fix and test a bug on 3.9, do ya'll uninstall completely and rebuild at 3.9? Or are folks using a container-based strategy or something like that?
[22:03:49] <lambo> oh okay I
[22:03:56] <lambo> ll move to matrix
[22:04:12] <funkylab[m]> if you don't notice any dropped messages, don't worry
[22:04:20] <funkylab[m]> we love all ways to speak with us :)
[22:05:07] <funkylab[m]> so, anyway, I simply have multiple prefixes, done by setting PYTHONPATH, PATH, LD_LIBRARY_PATH, and GRC_BLOCKS_PATH 
[22:05:40] <jmfriedt[m]> DaveCherkusN1AI[: I can find in my archives and upload if you wish, but I think typing is a good opportunity to consider the meaning of each line and make sure the processing sequence is understood. That is at least the way I learn to program.
[22:06:23] *** Joins: lambo[m] (~lambognur@2001:470:69fc:105::1:d191)
[22:07:02] *** Quits: lambo (~lambo@129.24.49.157) (Remote host closed the connection)
[22:07:24] <funkylab[m]> hi lambo !
[22:07:36] <lambo[m]> Hey so I'm matrixed now :-)
[22:07:49] <funkylab[m]> yes, feels very linearly operational, doesn't it?
[22:07:51] <jmfriedt[m]> jmfriedt[m]: It is just a pitty that at the time I did not know about View ->Show parameter expressions in block which would have made the screenshots easier to understand 
[22:08:12] <lambo[m]> Yeah I've been using the prefix function via pybombs to switch between versions, it was pretty handy
[22:08:31] <lambo[m]> if pybombs isn't really active, I
[22:08:43] <lambo[m]> m not sure what the best way to move forward would be
[22:09:19] <n1ai[m]> jmfriedt[m]: Yes, I too just learned about that on this very chat a day or so ago. I will recreate the code. Thank you very much for the presentation, it is very helpful!
[22:09:40] <jmfriedt[m]> n1ai[m]: glad you enjoyed it, thanks
[22:10:16] <lambo[m]> funkylab: it sounds like you're manually switching prefixes around then, kind of recreating pybombs functionality?
[22:12:09] <funkylab[m]> I did that before there was pybombs, but yes :)
[22:14:15] *** Joins: linext_ (~linext@pool-100-1-126-94.nwrknj.fios.verizon.net)
[22:14:27] * funkylab[m] posted a file: (1KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/6825f8841c872d2c3c406a382d475a07f5ed6942/setupgr.zsh >
[22:14:28] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[22:14:42] <funkylab[m]> lambo:  that's the shell function that I call
[22:16:22] *** Quits: linext (~linext@pool-100-1-126-94.nwrknj.fios.verizon.net) (Ping timeout: 268 seconds)
[22:22:33] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:89f1:31b0:ce3e:daf7)
[22:23:14] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:89f1:31b0:ce3e:daf7) (Client Quit)
[22:24:27] <funkylab[m]> <funkylab[m]> "I did that before there was..." <- oh dear, that was a "did it before it was cool" statement... I hereby apologize
[22:27:16] <Hoernchen_> i still have a batch file to configure gr and build it on windows..
[22:34:28] <funkylab[m]> oh, windows is retro
[22:56:29] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[22:57:38] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
