[00:02:12] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[00:04:53] *** Joins: jazzy (~jaziz@user/jaziz)
[00:04:58] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:3d3d:936:e9ee:e56e) (Quit: Textual IRC Client: www.textualapp.com)
[00:09:19] *** Joins: tofran5 (~tofran@bl15-47-228.dsl.telepac.pt)
[00:18:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 256 seconds)
[00:20:28] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[00:20:39] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[00:20:45] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[00:21:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:22:13] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[00:22:56] *** Joins: onosendi (~onosendi@user/onosendi)
[00:24:42] *** Joins: pavonia (~user@user/siracusa)
[00:25:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:25:50] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[00:28:53] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[00:29:30] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 260 seconds)
[00:30:48] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Read error: Connection reset by peer)
[00:32:20] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:34:50] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c)
[00:36:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:37:51] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[00:38:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:39:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:49c3:3805:b874:d1c) (Ping timeout: 240 seconds)
[00:39:51] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:42:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:44:13] <t3nj1n> can anyone recommend me a good architecture format for node.js backend organization? So far, what's been popping up is the MVC+S structure. Any reason why I shouldn't get more familiar with this approach?
[00:44:23] *** Joins: trevors (~trevors@user/trevors)
[00:45:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[00:47:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:48:49] *** Quits: salad (~cucumber@82.76.150.118) (Quit: salad)
[00:50:41] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 256 seconds)
[00:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[00:56:12] *** Joins: masoudd (~masoudd@user/masoudd)
[00:56:53] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[00:57:34] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 250 seconds)
[01:01:08] <blueagain> t3nj1n: what is S?
[01:01:44] <t3nj1n> Service Layer
[01:03:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[01:03:40] *** Joins: nomic2 (~nomic@85.203.36.247)
[01:04:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:05:21] <onosendi> t3nj1n: I just finished a hobby project where everything is organized by feature. The "project" directory is stuff all features share. https://github.com/onosendi/product-feedback/tree/master/server
[01:05:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[01:06:03] *** Quits: nomic (~nomic@185.217.117.228) (Ping timeout: 252 seconds)
[01:06:18] *** nomic2 is now known as nomic
[01:09:47] <t3nj1n> interesting onosendi, i'll take a look :) thx
[01:10:21] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[01:12:18] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[01:13:24] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[01:15:21] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 245 seconds)
[01:15:58] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[01:17:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:17:53] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[01:18:04] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:19:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[01:21:41] *** Quits: NinjaKirby (Izzy@gateway/vpn/protonvpn/ninjakirby) ()
[01:21:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:23:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:24:20] *** Parts: symm (symmetry@user/sym) ()
[01:24:31] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 245 seconds)
[01:24:46] <ljharb> t3nj1n: MVC is a very poor fit for web apps
[01:24:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:25:07] <ljharb> t3nj1n: but also, please don't cross-post; you got answers in #node.js already
[01:25:55] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[01:27:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[01:27:23] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1343:907e:aefa:48d6)
[01:27:33] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[01:29:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:31:46] *** Joins: kerat58 (~keeerat@user/tarek58)
[01:32:14] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 250 seconds)
[01:33:20] <t3nj1n> apologies, I imagined i'd get a different answer from JS than I did fromnode.
[01:39:29] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:39:50] <theskillwithin> https://i.redd.it/if2d5tpu0xl81.jpg
[01:40:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[01:41:42] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:43:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[01:47:49] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Remote host closed the connection)
[01:48:48] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[01:49:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[01:52:30] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[01:56:53] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[01:56:58] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[01:57:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[01:57:05] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:00:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:00:46] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 245 seconds)
[02:01:00] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[02:03:53] *** Joins: Adoi (~Adoi@user/adoi)
[02:07:20] *** Quits: colordro1 (~erahhal@2603-8001-9600-7b60-0010-0100-0001-cee7.res6.spectrum.com) (Ping timeout: 250 seconds)
[02:09:02] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:09:03] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:09:46] *** Joins: trevors (~trevors@user/trevors)
[02:13:24] *** Joins: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac)
[02:16:57] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[02:18:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[02:22:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:24:50] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:25:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:26:15] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[02:30:24] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[02:30:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[02:31:17] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:31:39] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:31:48] *** Joins: pulse (~pulse@user/pulse)
[02:33:34] *** Quits: pizdets (~pizdets@183.182.110.37) (Ping timeout: 272 seconds)
[02:33:52] *** Joins: pizdets_ (~pizdets@183.182.110.47)
[02:34:59] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:36:04] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[02:38:33] *** Joins: silverdust (~silverdus@user/silverdust)
[02:38:58] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[02:39:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[02:42:06] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:31] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[02:43:00] *** Quits: mikrosis (~mikrosis@dynamic-046-114-171-009.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[02:45:18] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:45:28] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 250 seconds)
[02:46:04] *** Joins: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[02:51:12] *** Joins: trevors (~trevors@user/trevors)
[02:52:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[02:53:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1343:907e:aefa:48d6) (Quit: Leaving)
[02:54:08] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[02:56:36] *** Quits: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:57:01] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 245 seconds)
[02:57:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:59:32] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[03:00:26] *** Quits: pmercado (~pmercado@186.107.55.248) (Ping timeout: 252 seconds)
[03:01:25] *** Joins: ferdna (~ferdna@user/ferdna)
[03:02:52] *** Joins: naan (~Naan@user/naan)
[03:04:40] *** Quits: bobdobbs (~user@116.251.146.222) (Read error: Connection reset by peer)
[03:05:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[03:05:48] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[03:09:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 240 seconds)
[03:11:00] *** Quits: naan (~Naan@user/naan) (Read error: Connection reset by peer)
[03:11:53] *** Joins: elastic_1 (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[03:12:31] *** Joins: onosendi (~onosendi@user/onosendi)
[03:12:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[03:13:59] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[03:14:06] *** Quits: elastic_1 (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Client Quit)
[03:14:17] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:14:43] *** Joins: silverdust (~silverdus@user/silverdust)
[03:14:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:18:54] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 260 seconds)
[03:22:02] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[03:22:08] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:22:09] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:22:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:22:48] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[03:24:36] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:25:11] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[03:25:31] *** Quits: average (~average@user/average) (Ping timeout: 250 seconds)
[03:26:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[03:29:07] *** Joins: trevors (~trevors@user/trevors)
[03:29:25] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[03:29:55] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 256 seconds)
[03:32:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[03:33:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[03:37:49] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:38:37] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:39:33] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Ping timeout: 256 seconds)
[03:39:59] *** Quits: _sa0sin_ (~sa0sin@88.120.82.205) (Remote host closed the connection)
[03:40:33] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[03:42:32] *** Quits: clamiax (~clamiax@net-93-147-242-148.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[03:45:10] *** Joins: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com)
[03:45:25] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:45:33] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 252 seconds)
[03:46:45] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0)
[03:49:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:bc27:5786:5d33:eaa0) (Read error: Connection reset by peer)
[03:51:37] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[03:54:20] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[03:57:11] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:58:28] *** Joins: enamon (~enamon@2604:a880:cad:d0::2f:9001)
[03:59:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:00:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[04:03:24] *** rdrg109_ is now known as rdrg109
[04:06:36] *** Joins: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br)
[04:07:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[04:14:36] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[04:16:35] *** Joins: Adois (~Adoi@user/adoi)
[04:17:30] *** Joins: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net)
[04:17:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[04:18:04] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 256 seconds)
[04:18:35] <AJTJ> just did a paired coding session with my CTO and another employee at my new job. Been here like 2 weeks. The CTO wrote a small service and then handed it off to me, and asked me to "finish" it up, which basically entailed placing icons.
[04:18:51] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[04:19:00] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[04:19:00] *** Joins: crashrep (~crashrep@user/crashrep)
[04:19:16] <AJTJ> I've been a dev for about 5 years. It's bizarre that what is being asked is so simplistic
[04:19:23] *** Joins: KevinX (~KevinX@user/KevinX)
[04:19:44] <sheetjs> do you have decades of experience with react?
[04:20:06] <AJTJ> like I said, I've been a dev for 5 years
[04:20:39] <sheetjs> never mind, it was a joke
[04:20:47] <AJTJ> ah ok
[04:21:04] <sheetjs> it feels like the landscape churns every few years
[04:21:10] <AJTJ> I just don't get it. Last week I built out something more complex
[04:21:20] <AJTJ> sheetjs: what do you mean?
[04:21:38] <sheetjs> the "right way to do things" changes
[04:21:40] <AJTJ> "Can you place these icons with CSS"? It's weird
[04:21:45] <AJTJ> I suppose
[04:21:48] *** Quits: Inspiral (~inspiral@user/inspiral) (Ping timeout: 240 seconds)
[04:22:02] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 256 seconds)
[04:22:04] <AJTJ> to be fair, most of the paired programming session was going over our events system
[04:22:07] <sheetjs> even icons
[04:22:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[04:22:24] <sheetjs> there's font-awesome
[04:22:56] <sheetjs> but there are other databases and approaches that come in and out of vogue
[04:22:56] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[04:23:15] *** Joins: Inspiral (~inspiral@host-92-22-22-119.as13285.net)
[04:23:15] *** Quits: Inspiral (~inspiral@host-92-22-22-119.as13285.net) (Changing host)
[04:23:15] *** Joins: Inspiral (~inspiral@user/inspiral)
[04:23:28] <AJTJ> it's just bizarre
[04:23:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:23:42] <AJTJ> I thought I "proved" myself last week
[04:23:44] <sheetjs> were you tasked with actually picking icons?
[04:23:49] <AJTJ> nope
[04:23:56] <AJTJ> literally just making them show up
[04:24:03] <AJTJ> it seems
[04:25:03] *** Joins: vysn (~vysn@user/vysn)
[04:26:27] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[04:26:28] <KevinX> why do you think it was a test?
[04:26:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[04:28:28] <AJTJ> KevinX: I guess it seems like I'm talking about it like it was a test
[04:28:35] <AJTJ> I don't think it was
[04:28:47] <AJTJ> I'm just surprised that I was asked to do something to straightforward
[04:28:55] <AJTJ> ...like it was a challenge
[04:29:02] <AJTJ> but I suppose that's the development process
[04:29:13] <KevinX> oh ok yeah, you questioned why you felt you needed to prove yourself
[04:29:31] <KevinX> Sometimes people just like to jam on something together
[04:29:39] *** Quits: Inspiral (~inspiral@user/inspiral) (Ping timeout: 256 seconds)
[04:29:41] <AJTJ> KevinX: I guess I thought "didn't I already show you I know this shit"?
[04:29:49] <AJTJ> first few weeks of the job
[04:29:56] <AJTJ> so I suppose I have my "imposter insecurity"
[04:30:07] *** Joins: Inspiral (~inspiral@host-92-22-22-119.as13285.net)
[04:30:07] *** Quits: Inspiral (~inspiral@host-92-22-22-119.as13285.net) (Changing host)
[04:30:07] *** Joins: Inspiral (~inspiral@user/inspiral)
[04:30:09] <AJTJ> yea, sometimes people just like to jam out
[04:30:11] <AJTJ> that's fair
[04:30:19] *** Joins: trevors (~trevors@user/trevors)
[04:30:19] *** Joins: pmercado (~pmercado@186.107.55.248)
[04:30:26] <AJTJ> share ideas, build a shared understanding of the structure
[04:30:49] <KevinX> maybe they have imposter syndrome too
[04:31:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[04:31:14] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[04:31:15] <AJTJ> maybe!
[04:31:28] <AJTJ> being compassionate to that is very healing all around
[04:31:37] <AJTJ> KevinX: excellent input
[04:31:50] <AJTJ> appreciate it
[04:32:02] <KevinX> Anytime, i"m here all week
[04:32:08] <AJTJ> ehhe
[04:32:20] <KevinX> The job is going well though?
[04:32:20] <AJTJ> KevinX: but yea, I think simple is ok
[04:32:31] <AJTJ> yea, it's going well
[04:33:05] <AJTJ> I didn't really want to jump into another React job, but here I am. We're going to be using lots of rust, eventually. That's why I'm here.
[04:33:26] <AJTJ> but React gigs pay
[04:33:45] <KevinX> I want a job where I can use Rust
[04:33:51] <KevinX> I might start looking mid year
[04:34:01] <AJTJ> KevinX: good idea, that's why I'm at this job
[04:34:13] <AJTJ> I either wanted a backend TS job or a rust job
[04:34:39] <AJTJ> and I chose this because I like the product and we're planning on using lots of rust
[04:35:06] <KevinX> That's awesome
[04:35:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:37:33] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:37:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:37:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:39:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[04:40:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:42:41] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[04:44:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[04:47:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[04:47:54] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[04:50:11] <onosendi> Rust for web?
[04:50:16] <onosendi> Sorry, haven't read anything.
[04:52:12] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 240 seconds)
[04:52:48] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[04:57:01] <onosendi> `const a = [1];` Why does this work: `([] as (number[] | string[])[]).concat(a, a);`, but this doesn't: `([] as (number[] | string[])).concat(a, a)`? You'd think the second one would be correct, no?
[05:04:24] <KevinX> You can use Rust on the web if you compile it to web assembly
[05:05:07] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:05:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[05:06:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1343:907e:aefa:48d6)
[05:08:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[05:08:53] *** Joins: silverdust (~silverdus@user/silverdust)
[05:11:00] <KevinX> I think that's wrong because you need to tell it the array can take both string and numbers, and not OR
[05:11:35] <KevinX> `[] as (number[] & string[]);`
[05:13:26] <KevinX> onosendi
[05:14:36] <onosendi> KevinX: I was asking if his job was writing Rust for web :)
[05:14:44] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[05:15:50] *** Joins: RubiZockt__ (~Username@i5E866E99.versanet.de)
[05:16:18] <onosendi> KevinX: ah, you're right. I was thinking 'array of numbers or array of strings' = number[] | string[].
[05:16:39] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8dc0:ef0f:d832:35ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:17:25] <AJTJ> onosendi: yea, rust for web
[05:17:28] <AJTJ> wasm
[05:17:36] <AJTJ> but also database things
[05:17:47] <onosendi> AJTJ: ah, that's awesome.
[05:17:56] <AJTJ> future forward
[05:18:12] *** Quits: RubiZockt_ (~Username@i577BC8F5.versanet.de) (Ping timeout: 240 seconds)
[05:18:21] <onosendi> AJTJ: I started playing with Rocket a while back: https://rocket.rs/
[05:18:39] <AJTJ> onosendi: I've built some things with rocket
[05:18:43] <AJTJ> I prefer actix-web
[05:19:16] <onosendi> Bookmarked.
[05:19:32] *** Joins: silverdust (~silverdus@user/silverdust)
[05:20:35] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:21:20] <AJTJ> onosendi: Rocket is great tho
[05:21:26] <AJTJ> arguably simpler
[05:22:15] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[05:23:10] *** Joins: RubiZockt_ (~Username@2001:9e8:6c5c:9700:d169:4c24:129d:2ef3)
[05:24:10] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:24:57] *** Quits: RubiZockt__ (~Username@i5E866E99.versanet.de) (Ping timeout: 240 seconds)
[05:25:12] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[05:26:50] <KevinX> Bookmark axum too https://github.com/tokio-rs/axum
[05:26:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[05:27:06] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 272 seconds)
[05:28:01] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:28:35] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:29:29] <AJTJ> axum is young tho, so you're gonna have to build a lot of things yourself
[05:29:45] <AJTJ> also, actix-web is fastest rust web framework
[05:31:24] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[05:37:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:37:51] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:45:48] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[05:46:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[05:47:50] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d)
[05:47:57] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:53:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:53:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:53:44] *** Joins: wroathe (~wroathe@user/wroathe)
[05:54:39] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[05:55:48] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:958:c11c:b4e1:7a0d) (Ping timeout: 240 seconds)
[05:55:58] *** Joins: thojanssens (~thojansse@49.230.134.204)
[05:56:26] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[05:57:14] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[06:01:46] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 256 seconds)
[06:03:37] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[06:03:58] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[06:04:19] *** Quits: niop (niop@gateway/vpn/airvpn/niop) (Remote host closed the connection)
[06:04:33] *** Joins: thekingofbandit (~thekingof@user/thekingofbandit)
[06:04:39] *** Joins: niop (niop@gateway/vpn/airvpn/niop)
[06:07:39] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[06:07:49] *** Joins: cheater (~Username@user/cheater)
[06:09:13] *** Joins: ejjfunky (~ejjfunky2@125.164.19.110)
[06:10:45] *** Joins: trevors (~trevors@user/trevors)
[06:15:37] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[06:16:22] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[06:21:03] *** Joins: Ziyan (~ziyan@112.134.172.31)
[06:21:26] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 268 seconds)
[06:21:58] *** Joins: silverdust (~silverdus@user/silverdust)
[06:24:22] *** Joins: Adoi (~Adoi@user/adoi)
[06:24:47] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[06:24:52] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:25:03] *** Joins: de-facto (~de-facto@user/de-facto)
[06:26:30] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 260 seconds)
[06:28:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[06:31:26] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[06:33:40] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:34:24] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[06:34:50] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:35:46] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[06:36:18] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 260 seconds)
[06:38:30] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:40:29] *** Quits: niop (niop@gateway/vpn/airvpn/niop) (Quit: Leaving)
[06:40:57] *** Joins: niop (niop@gateway/vpn/airvpn/niop)
[06:43:06] *** Quits: pmercado (~pmercado@186.107.55.248) (Ping timeout: 272 seconds)
[06:43:58] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178)
[06:51:12] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[06:52:40] *** Joins: pmercado (~pmercado@186.107.55.248)
[06:55:06] *** Joins: wyclif (~wyclif@user/wyclif)
[06:56:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178) (Ping timeout: 240 seconds)
[06:57:41] *** Joins: RubiZockt__ (~Username@2001:9e8:6c65:eb00:a825:db55:bcd7:bf1a)
[06:58:09] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[06:58:27] *** Joins: wyclif (~wyclif@user/wyclif)
[07:00:13] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178)
[07:00:16] *** Quits: RubiZockt_ (~Username@2001:9e8:6c5c:9700:d169:4c24:129d:2ef3) (Ping timeout: 250 seconds)
[07:00:36] *** Quits: Ziyan (~ziyan@112.134.172.31) (Ping timeout: 240 seconds)
[07:02:06] *** Joins: Ziyan (~ziyan@112.134.168.8)
[07:04:21] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[07:07:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[07:07:48] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[07:08:36] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 240 seconds)
[07:08:46] *** Quits: thojanssens (~thojansse@49.230.134.204) (Quit: Leaving)
[07:11:23] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:12:00] *** Joins: Rockwood (~Rocky@user/rocky)
[07:12:53] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:12:54] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[07:14:12] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[07:14:37] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:15:24] *** Joins: silverdust (~silverdus@user/silverdust)
[07:15:30] *** Quits: xsznix95 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[07:15:37] *** Joins: xsznix956 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[07:16:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178) (Ping timeout: 240 seconds)
[07:18:31] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[07:18:37] *** Quits: hashfuncadb (~user@2601:5c0:c280:7090:29ba:fcc0:8f3a:efac) (Ping timeout: 240 seconds)
[07:19:39] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[07:23:43] <Rockwood> sheetjs, hi ther e
[07:25:07] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:25:47] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[07:25:47] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[07:25:47] *** Joins: average (~average@user/average)
[07:26:31] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178)
[07:28:34] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[07:29:57] *** Parts: bulletsquid (~bulletsqu@user/bulletsquid) (Byebye)
[07:30:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:31:00] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178) (Ping timeout: 240 seconds)
[07:37:17] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[07:37:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[07:37:49] *** vinleod is now known as vdamewood
[07:40:23] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[07:42:55] *** Joins: mechanist (~mg@95.236.242.231)
[07:43:28] <mechanist> hello
[07:43:44] *** Joins: crashrep (~crashrep@user/crashrep)
[07:43:50] <mechanist> https://jsfiddle.net/Labczt0x/ I wonder why the menu box disappear when I click on Sub Item 2...
[07:44:54] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 256 seconds)
[07:50:12] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[07:51:11] *** Quits: defn (~n0b0dy@user/defn) (Remote host closed the connection)
[07:51:47] <theskillwithin> https://imgur.com/a/NgMqHZQ
[07:55:59] *** Quits: nomic (~nomic@85.203.36.247) (Quit: Leaving)
[07:57:28] *** Quits: croraf (croraf@croraf.ircforever.org) (Ping timeout: 250 seconds)
[07:57:36] *** Joins: han-solo (~hanish@user/han-solo)
[07:57:37] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178)
[07:58:37] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:5916:cda3:9e09:b39e)
[07:59:32] *** Joins: p-i-__ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0)
[07:59:52] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:00:24] <mechanist> theskillwithin: yes, it does sometime, but most of the times it just closes
[08:00:44] <mechanist> I'm using Microsoft Edge
[08:01:24] *** Joins: defn (~n0b0dy@user/defn)
[08:01:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:e987:6aa0:a30c:b178) (Ping timeout: 240 seconds)
[08:02:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:1f05:5916:cda3:9e09:b39e) (Ping timeout: 240 seconds)
[08:03:27] <theskillwithin> mechanist well aside from it not working if the screen width is too small.   im noticing if you leave the mouse from the menu,  the then click on sub thing causes to close it.   whereas if your mouse never left the menu, the sub thing opens when you click
[08:04:04] *** Joins: hendry (~hendry@210.23.22.2)
[08:04:39] *** Joins: croraf (croraf@croraf.ircforever.org)
[08:05:46] <mechanist> wow, nice find!
[08:06:13] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[08:06:14] <mechanist> what a tricky bug...
[08:06:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:06:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:06:51] *** Joins: wroathe (~wroathe@user/wroathe)
[08:07:23] <theskillwithin> mechanist probably related to this .mouseleave thing your doing
[08:08:59] <mechanist> how can I remove it? I'm zero skilled in jquery
[08:09:35] <theskillwithin> idk I haven't used jquery in over 5 years
[08:09:39] <mechanist> $(this).parent().find('ul')  could it be ok?
[08:09:40] <mechanist> ok
[08:10:02] *** Quits: pmercado (~pmercado@186.107.55.248) (Ping timeout: 250 seconds)
[08:11:46] <mechanist> looks like I've solved it at the first try...
[08:12:23] <mechanist> $(this).parent().find('ul')(function () { works good, although the menu doesn't close when I click outside the menu
[08:13:22] *** Quits: stagas (~stagas@2a02:587:c428:4985:af92:8e9b:279e:b5d7) (Ping timeout: 260 seconds)
[08:14:32] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[08:15:08] <mechanist> foudn a better solution
[08:15:10] <mechanist> sorry
[08:15:34] <mechanist> resetting the condition     $(this).parent().find('ul').parent().mouseleave(function () {
[08:15:51] <mechanist> I've just removed thisUI.children(".dropdown-menu").hide();
[08:16:01] <mechanist> now it works fine.
[08:16:55] <theskillwithin> no need to be sorry, thats great you found solution
[08:17:33] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[08:17:44] <theskillwithin> 🎉
[08:19:28] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 256 seconds)
[08:21:53] <mechanist> not working
[08:22:20] <mechanist> the menu stays opened when I click outside it
[08:22:29] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:24:02] <theskillwithin> mechanist idk if using mouseleave to detect an outside click is the most practical way
[08:24:45] <Rockwood> bye cya
[08:25:17] <mechanist> theskillwithin: is there any work around?
[08:25:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:28:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[08:29:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:33:00] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1343:907e:aefa:48d6) (Quit: Leaving)
[08:39:37] <mechanist> found a way using another function found on internet that ironically had the same variables name: https://jsfiddle.net/Labczt0x/1/
[08:39:59] <mechanist> theskillwithin: you've been very helpful. thank you. now I can take my rest.
[08:40:08] *** Quits: mechanist (~mg@95.236.242.231) (Remote host closed the connection)
[08:41:55] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:49:05] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[08:50:45] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[08:53:24] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 240 seconds)
[08:53:37] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 240 seconds)
[08:55:37] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[09:00:31] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:06:48] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[09:07:15] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:10:12] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[09:10:59] *** Quits: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:16:28] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (Quit: l8r)
[09:17:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:17:31] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:17:51] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[09:19:00] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:20:59] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[09:22:24] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[09:22:47] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[09:25:23] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[09:26:15] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:26:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:26:34] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[09:26:54] *** Quits: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[09:27:05] *** Joins: mexen (uid495612@user/mexen)
[09:29:48] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 240 seconds)
[09:30:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:33:28] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[09:33:32] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[09:35:24] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[09:36:07] *** Joins: kakashiA1 (~kakashi@160.176.105.255)
[09:48:39] *** Quits: p-i-__ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0) (Remote host closed the connection)
[09:49:12] *** Joins: p-i- (~Ohmu@2403:6200:8978:1f05:45d9:b671:7f9e:34a5)
[09:49:57] *** Quits: friend (~friend@2601:c1:c000:e8::1002) (Ping timeout: 240 seconds)
[09:50:06] *** Quits: Ziyan (~ziyan@112.134.168.8) (Quit: My iMac has gone to sleep. ZZZzzz…)
[09:50:50] *** Quits: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[09:52:05] *** Joins: endidragon (~elle@cpe-76-167-67-22.natsow.res.rr.com)
[10:05:02] *** Quits: niop (niop@gateway/vpn/airvpn/niop) (Remote host closed the connection)
[10:06:03] *** Joins: wyclif (~wyclif@user/wyclif)
[10:08:07] <wyclif> Just installed nvm. Everything went OK, BUT I know have a top level directory called /:HOME that contains another directory named .nvm that contains a couple of hard links
[10:08:33] <wyclif> One of them is to `nvm-exec -> /opt/homebrew/opt/nvm/libexec/nvm-exec`
[10:08:49] <wyclif> The other is to `nvm.sh -> /opt/homebrew/opt/nvm/libexec/nvm.sh`
[10:09:00] <wyclif> Did I do something wrong here or is this to be expected?
[10:09:02] <theskillwithin> wyclif your on windows?
[10:09:07] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[10:09:09] <wyclif> nooo macOS
[10:10:38] <theskillwithin> wyclif i feel like your not supposed to install nvm via homebrew
[10:11:40] <theskillwithin> https://github.com/nvm-sh/nvm#installing-and-updating
[10:12:30] <wyclif> I strictly followed the directions on installing nvm, from GitHub
[10:12:34] <wyclif> I did not use Homebrew
[10:13:20] <theskillwithin> idk ljharb knows more about it
[10:13:35] <wyclif> It seems strange that I now have a new top level dir
[10:13:37] <ljharb> um
[10:13:49] <ljharb> wyclif: if you followed the instructions then it wouldn't be inside /opt
[10:14:17] <ljharb> wyclif: i'd completely brew uninstall it, make sure that nvm dir is deleted, check your profile files for any nvm lines and delete those, and then reinstall from the install script
[10:14:35] <ljharb> wyclif: if you've used homebrew in the past you might have some stuff in your profile that can cause problems
[10:14:47] <wyclif> ljhard: OK so what happened was that weeks ago I did install it via Homebrew, but then I realise this would cause problems so I uninstalled it via Homebrew and then installed it via the instructions theskillwit mentioned at GitHub
[10:15:11] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:15:12] <ljharb> wyclif: ok so then you didn't fully uninstall it, clearly
[10:15:16] <wyclif> Yes
[10:15:24] <ljharb> wyclif: if there's an `NVM_DIR` set in a profile file, that would break things
[10:15:39] <wyclif> So I can go ahead and delete this directory? Sorry, I thought uninstalling would take care of all the cruft
[10:15:46] <wyclif> YES
[10:15:53] <wyclif> ~/.zshrc
[10:16:34] <theskillwithin> ljharb if homebrew is doing you wrong, as owner of package can't you tell them to do it differently?
[10:16:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:17:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:17:58] <ljharb> wyclif: homebrew fucks everything up, that's why i don't support it
[10:18:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:18:01] <ljharb> theskillwithin: no
[10:18:08] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[10:18:11] <ljharb> theskillwithin: the homebrew bottle doesn't belong to me
[10:18:11] <wyclif> I have this in my ~/.zshrc:
[10:18:14] <wyclif> #Set $NVM_DIR
[10:18:14] <wyclif> export NVM_DIR="$HOME/.nvm"
[10:18:14] <wyclif> [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[10:18:16] <wyclif> [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
[10:18:21] <ljharb> theskillwithin: if it was up to me i'd delete it entirely, but that's not how homebrew works
[10:18:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:18:33] <ljharb> wyclif: ok so delete all those lines for now (altho they seem fine)
[10:18:46] <ljharb> wyclif: also make sure to run `unset $NVM_DIR` in your shell
[10:18:50] <ljharb> sorry `unset NVM_DIR`
[10:18:54] *** Joins: teut (~teut@103.144.92.240)
[10:19:23] <theskillwithin> ljharb i get the bottle doesn't belong to you,  but it should belong to you?
[10:19:44] <wyclif> done
[10:20:05] <ljharb> wyclif: ok now reinstall it properly, in a new shell, with the install script
[10:20:10] <ljharb> theskillwithin: i'm sure i could claim it. but then i'd have to maintain it
[10:20:24] <ljharb> theskillwithin: they wouldn't let me delete it, and even if i did, some jerk would just make a new one
[10:20:38] <ljharb> theskillwithin: homebrew does not allow a package to be "blocked" from being on homebrew
[10:20:44] <theskillwithin> you maintain plenty of things, why not claim it
[10:20:58] <ljharb> theskillwithin: because i don't want people using homebrew to install it
[10:21:02] <ljharb> theskillwithin: what would claiming it gain me
[10:21:08] <wyclif> ljharb: the curl script?
[10:21:10] <ljharb> wyclif: yes
[10:21:12] *** Joins: masoudd (~masoudd@user/masoudd)
[10:21:36] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[10:21:45] <theskillwithin> ljharb it would gain you never having to deal with BS issues involving it anymore
[10:21:55] <ljharb> theskillwithin: how
[10:22:07] <ljharb> theskillwithin: the BS issues are *permanently and inherently part of homebrew*
[10:22:17] <ljharb> the only solution is if i can block people from installing it with homebrew
[10:22:23] <ljharb> but homebrew's policies don't allow me to do that
[10:22:39] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 252 seconds)
[10:22:46] <ljharb> there does not exist a way to use brew to install nvm and have it not be fucked up
[10:22:47] <theskillwithin> ljharb then you claim it,  and on homebrew install you fail the install and direct user to link how to install
[10:22:58] <ljharb> theskillwithin: no, the homebrew maintainers would never let me merge that
[10:23:08] <wyclif> I just installed it
[10:23:18] <ljharb> theskillwithin: homebrew bottles have to be functional, and actually install the thing
[10:23:19] <theskillwithin> ljharb this might be a special case where they would allow
[10:23:23] <ljharb> theskillwithin: it's not
[10:23:35] <theskillwithin> ljharb if nvm fails on all brew,  then idk why brew would want that
[10:23:36] <ljharb> i barked up this tree half a decade ago
[10:23:38] <ljharb> nvm doesn't fail
[10:23:50] <ljharb> it works "mostly". it just causes subtle problems because of the way homebrew works
[10:23:51] *** Joins: Ziyan (~ziyan@112.134.168.8)
[10:24:01] <average> ljharb: hi, i was thinking of writing some javascript today
[10:24:05] <ljharb> so you're going to have to trust me that it can't get any better than this
[10:24:08] *** Quits: colordro1 (~erahhal@cpe-142-129-123-225.socal.res.rr.com) (Ping timeout: 272 seconds)
[10:24:18] <wyclif> It appended nvm source string to my ~/.zshrc
[10:24:22] <ljharb> wyclif: great
[10:24:43] <paulcarroty> does hbrew still recompile all dependencies?
[10:25:01] <wyclif> but now I'm getting `zsh: command not found: nvm`
[10:25:21] <paulcarroty> seems like stupid concept. tried it several years ago.
[10:25:46] <ljharb> wyclif: did you restart your shell like the install script told you to?
[10:26:48] <wyclif> Heh, no. Sorry!
[10:27:02] <ljharb> lol can't do anything about people not reading :-p
[10:27:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:28:23] <wyclif> ljharb: Thanks, man. I'm new to nvm so that helps a lot.
[10:29:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: ping timeout... or is it something else??)
[10:29:33] <theskillwithin> ljharb i do trust you,  but maybe try one more time
[10:30:29] <average> ljharb: what kind of javascript do you think I should write today?
[10:30:56] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:30:58] <theskillwithin> wtf
[10:31:22] <ThePendulum> aggressive javascript
[10:33:36] <theskillwithin> horny javascript
[10:35:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:36:10] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 260 seconds)
[10:36:39] <theskillwithin> ThePendulum https://codepen.io/arushi011/pen/EXmMvx
[10:37:43] <ThePendulum> ooo nice
[10:38:12] <ljharb> average: the good kind
[10:38:36] <ljharb> theskillwithin: what would be the point, homebrew's maintainers aren't going to be sympathetic to "your tool sucks, can you please not let your users install nvm with it?"
[10:39:15] <ThePendulum> til 'alternate'
[10:39:21] <theskillwithin> ljharb well thats not how I would phrase it to them...
[10:39:24] *** Quits: akurilin_ (uid322841@id-322841.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:40:04] *** Joins: keypusher (keypusher@user/keypusher)
[10:40:04] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[10:40:26] <theskillwithin> ljharb maybe I can be your PR person.  you say a bunch of curse words at homebrew, and then I translate to them in a nice way to them
[10:41:24] *** Quits: kakashiA1 (~kakashi@160.176.105.255) (Ping timeout: 240 seconds)
[10:42:53] <ljharb> lol
[10:42:58] <theskillwithin> ljharb when you have a popular library, sometimes you have to support things you would never use
[10:43:00] <ljharb> nah, i'm good, the status quo is fine
[10:43:09] <ljharb> and i do, all the time. my stuff works on windows.
[10:43:19] <ljharb> but i'd rather support windows than homebrew
[10:44:17] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[10:45:02] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[10:45:11] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[10:46:09] <theskillwithin> ljharb so fuck all the people who didn't know better and installed on homebrew?
[10:47:23] <ljharb> they did know better. the homebrew formula explicitly tells them it's unsupported. i at least got that in there awhile back
[10:47:49] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:47:56] <ljharb> next?
[10:47:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Read error: Connection reset by peer)
[10:48:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:48:44] <theskillwithin> "Please note that upstream has asked us to make explicit managing
[10:48:44] <theskillwithin> nvm via Homebrew is unsupported by them and you should check any
[10:48:44] <theskillwithin> problems against the standard nvm install method prior to reporting."
[10:49:11] <theskillwithin> https://formulae.brew.sh/formula/nvm#default
[10:49:25] <ljharb> yep
[10:49:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:49:45] <ljharb> sooo yes, if you use something that the software's authors have said not to, then "fuck you" is an acceptable response
[10:49:55] <ljharb> luckily for them i'm nicer than that, i tell them i'm happy to support them if they install nvm properly
[10:50:12] <theskillwithin> its not explicit enuff to me
[10:50:34] <ljharb> it's all i could get away with
[10:51:04] <theskillwithin> 5 year ago
[10:51:15] <theskillwithin> you could probably get better now
[10:51:21] <ljharb> why would you think so
[10:51:40] <ljharb> the main homebrew guy is even more jaded and pissed off now than he was 5 years ago
[10:52:35] <theskillwithin> why would he want to have a package that doesn't work right installed via his package manager
[10:52:56] <theskillwithin> thats like insane...
[10:55:28] <ljharb> because the design of homebrew prevents it from working better
[10:55:32] <teut> when i run    `next run build`
[10:55:45] <teut> I get error parsing typescript
[10:55:49] <ljharb> theskillwithin so the choice is to admit that homebrew is inherently flawed, or, keep things as they are. guess which is more likely
[10:56:00] <teut> https://dpaste.org/kC37#L10
[10:56:10] <theskillwithin> ljharb so after 5 years, go back, and tell em again once more
[10:56:18] <teut> I need to deploy it to firebase
[10:56:20] <teut> plz help
[10:56:33] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:57:09] <ljharb> theskillwithin: i think you're misunderstanding the effect of time on people's opinions
[10:57:25] <ljharb> theskillwithin: at any rate, i actively do not want to do that. i actively prefer the status quo to LITERALLY ANY CONVERSATION with them about it.
[10:57:33] <ljharb> ok? ok.
[10:58:42] <jaawerth> isn't homebrew a sneeze away from death?
[10:59:05] <jaawerth> or at least some people think so? I forget the details now lol
[10:59:28] <jaawerth> I don't care since I'll just switch to macportsor whtever else become the make-macos-usable dujour
[11:00:29] <ljharb> macports hasn't seemed like a going concern for a long time
[11:00:32] <ljharb> and no, brew's doing fine afaik
[11:01:45] <jaawerth> oh I read something recently suggesting the maintainers were on the verge of bailing, I think for some of the reasons you alludedd to. it was largely conjecture I didn't really care to authenticate for the aforementioned reasons, though
[11:02:25] <jaawerth> but yeah macports didn't strike meas a viable alternative so I figured, like, if that happened someone would have to do someting about it so nbd
[11:02:53] <jaawerth> it'd be desruptive enough to cause a vacuum that got made it resolve quickly
[11:02:56] <ljharb> jaawerth: interested to read it if you find the link
[11:03:58] <jaawerth> I'll poke around a bit but best ignore it. I mainly brought it up so you could tell me nah
[11:04:01] <theskillwithin> ljharb btw am I getting silly here with the aria stuffs? https://gist.github.com/theskillwithin/b4e16967a303fd862716512c4a3b0129
[11:05:12] <theskillwithin> always should test in an actual screenreader in the end,  but just making component for now
[11:05:15] *** Quits: Ziyan (~ziyan@112.134.168.8) (Quit: Textual IRC Client: www.textualapp.com)
[11:06:11] <jaawerth> what's really wild to me is that a linux port exists
[11:07:02] <jaawerth> or rather it works on both from core? like, I just don't understand the demand for that
[11:07:14] <theskillwithin> a linux port of what? macports?
[11:07:20] <jaawerth> hoomebrew
[11:07:41] <theskillwithin> lol that is kinda funny
[11:08:43] <jaawerth> I get why folks would want to port the interface but, well, i'e seen enough homebrew installs go weird on mac that I can't imagine it being smoother than the distro's own package manager
[11:09:15] <ljharb> theskillwithin: aria attrs should be a last resort, when you've totally failed at using semantic html
[11:09:31] <jaawerth> but even wanting to port the interface.. I guess I'm not considering it from the perspective of a longtime mac user though
[11:09:56] *** Joins: silverdust (~silverdus@user/silverdust)
[11:10:13] <theskillwithin> jaawerth ya just use apt,  or if its centos its like yum or osmething
[11:10:27] <ljharb> ew, no
[11:10:32] <ljharb> i'd take homebrew over apt
[11:11:07] <jaawerth> apt is fine, you're just salty over how it treats node :P
[11:11:56] <ljharb> i'm salty over lots of aspects of it
[11:12:07] <ljharb> including the one it shares with brew, that it often hosts software unofficially
[11:13:21] <jaawerth> what do you mean? the official repos have a pretty rigid review process to make it in. or do you mean ppa's and stuff?
[11:13:35] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[11:13:48] <jaawerth> (albeit more in terms of security than ease of use)
[11:14:02] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[11:14:30] <jaawerth> oh you mean "not approved by upstream?" maybe?
[11:15:12] <Maxdamantus> The problem with doing what upstream wants is that upstream is usually not a package maintainer, so they don't necessarily know how things should actually fit together as part of an OS.
[11:15:12] <ljharb> yes, that
[11:15:28] <ljharb> that doesn't matter, the package author is the authority
[11:15:45] <ljharb> if they're not familiar with how ubuntu works, then that's apt's problem to solve, and supplanting their authority isn't a solution
[11:15:48] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[11:15:58] <Maxdamantus> No, the user chose the OS, the OS chooses how packages work.
[11:16:25] <Maxdamantus> upstream might have preconceived ideas of how OSes work based on whatever they happen to use.
[11:17:46] <ljharb> that attitude is the problem.
[11:17:52] <jaawerth> yeah I mean I would hope the packagers listen to feedback from upstream authors but ultimately they're making decisions for the OS/package manager's environment nad users and within bounds of the software license I think it's fair that they aren't beholden to upstream authors. especially given the wide variety of opinions possible among upstream authors
[11:17:54] <ljharb> the OS doesn't *get* to decide how packages work.
[11:17:58] <ljharb> only the author of the software does.
[11:18:02] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[11:18:02] <Maxdamantus> eg, something that comes to mind that I had to deal with a few months ago is some software for a special analogue keyboard I bought. the manufacturer has made software which works on Linux, but it's basically packaged in such a way that it works on Windows. using it on Linux is horrible.
[11:18:04] <jaawerth> it sounds like you're referring to specific bad interactions though
[11:18:25] <ljharb> if that doesn't fit the OS, then it is on the *OS* to incentivize the author. it is not up to them to force their viewpoint.
[11:18:29] <Maxdamantus> I refuse to use their broken packaging system, so I just wrote my own software for it that disregards everything they've provided.
[11:18:50] <ljharb> jaawerth: it's not fair, because license or no, apt's users don't complain to apt when apt-installed software breakks
[11:19:19] <ljharb> jaawerth: tbh if there was an MIT that said "but you can't redistribute the software under the same name" i'd use it
[11:19:30] <ljharb> and i'm kind of suspicious that MIT already says that, tbh
[11:19:31] <jaawerth> eh I've seen plenty of that in both directions
[11:19:43] <ljharb> right but the software author has checks and balances
[11:19:55] <ljharb> users can just pick different software. they can't and won't just switch OS.
[11:20:05] <jaawerth> depends on the software
[11:20:13] <jaawerth> and OS. but in debian's cacse, you're right
[11:20:16] <ljharb> but it doesn't depend on the OS
[11:20:27] <ljharb> thus, the OS has lockin that software projects don't, in general
[11:20:47] <ljharb> and those projects that have lockin, have it no matter how they're installed
[11:20:55] <ljharb> so that's orthogonal to this topic :-)
[11:21:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[11:22:09] <jaawerth> I just don't think it's someting to generalize about sincec there's a pretty wide variety of upstream author type
[11:22:30] *** Joins: sheetjs_ (~sheetjs@pool-108-53-213-150.nwrknj.fios.verizon.net)
[11:22:36] *** Quits: sheetjs_ (~sheetjs@pool-108-53-213-150.nwrknj.fios.verizon.net) (Quit: Leaving...)
[11:22:43] <teut> https://dpaste.org/dFim
[11:22:45] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[11:22:50] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[11:22:56] <teut> can someone help with these next js build errors?
[11:22:58] <jaawerth> like, for things like "which system dir to put things in<" it's not uncommon for authors to just have it put things in wherever their distro of choice puts it, which may or may not be a standard across distros
[11:23:02] <teut> I need to deploy it
[11:23:12] <ljharb> jaawerth: there's XDG, but also, so?
[11:23:40] <Maxdamantus> XDG doesn't specify installation directories afaik.
[11:23:40] <ljharb> jaawerth: if users want a standard, they'll pressure authors to follow one. they don't need OS package repo managers arbitrarily deciding that for a subset of the ecosystem
[11:23:50] <Maxdamantus> it might specify configuration directories within $HOME
[11:23:55] <ljharb> you're right there
[11:24:01] <jaawerth> yeah that's for local stuff
[11:24:15] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[11:24:22] <jaawerth> teut: did you click on the links?
[11:24:47] <teut> Error occurred prerendering page "/". Read more: https://nextjs.org/docs/messages/prerender-error     this?
[11:24:56] <jaawerth> the gssp ones look more relevant
[11:25:04] <jaawerth> and likely the cause of that one
[11:25:05] <theskillwithin> Error for page /: pages with `getServerSideProps` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export
[11:25:08] *** Joins: plitter (~plitter@192.108.100.200)
[11:25:08] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[11:25:08] *** Joins: plitter (~plitter@user/plitter)
[11:25:09] <teut> yes
[11:25:39] <jaawerth> so basically you can't prerender if you're using getServerSideProps, since getServerSideProps is for use when not prerendering
[11:25:51] <teut> looks it its complicated
[11:25:57] <teut> looks like*
[11:26:11] <jaawerth> well the suggestoin on the page of using getStaticProps instead would be the solution
[11:26:35] <teut> if I use revalidate with that , would it be good?
[11:26:54] <teut> does it gives similar effect as getSeverSde Props
[11:27:27] *** Joins: de-facto (~de-facto@user/de-facto)
[11:27:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:27:55] <theskillwithin> your trying to do next export wich is like a pure static site I think.  but what if your doing things in your next site that aren't able to be staticly built
[11:28:25] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9e2:b202:643:aa15)
[11:29:40] *** Joins: rendar (~rendar@user/rendar)
[11:29:51] <jaawerth> ljharb: well thare are a few root level dirs under /etc and /usr and usch that may or may not eist or may or may not be symlinks on one another from distro to distro. while ou can often solve it via symlinking, it can help with distro stability to standardize, and that's something distro maintainers need to care about
[11:30:37] <Maxdamantus> My OS puts libraries in /usr/lib (which is normally symlinked to /lib). That's probably not compatible with macOS.
[11:30:55] <jaawerth> that too
[11:31:02] <Maxdamantus> presumably brew puts them in something like /usr/local/brew/lib
[11:31:07] <teut> https://dpaste.org/1wAq
[11:31:11] <teut> what does this say?
[11:31:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:31:27] <jaawerth> right and in brew's case some packages will work from linux and some won't, for those sorts of reasons
[11:31:35] <theskillwithin> Error for page /: pages with `getServerSideProps` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export
[11:32:19] <teut> because getStaticProps is there in that file
[11:32:24] <jaawerth> ljharb: keep in mind I'm not saying apt has never unreasonably made life worse for upstream authors by ignoring them nd thus gnerating gh issues theycan't fi
[11:32:26] <jaawerth> x
[11:32:31] <jaawerth> I'm sure that's happened
[11:32:44] <teut> https://dpaste.org/0b1b#L97
[11:32:47] <jaawerth> I'm just saing I don't see it as a one-sided authority
[11:32:50] <Maxdamantus> actually, it doesn't even put them in /usr/lib nowadays, it puts them in /usr/lib/x86_64-linux-gnu/ so that you can have packages from various architectures installed at the same time, which I've found very useful on my phone.
[11:33:16] <Maxdamantus> upstream doesn't know about any of that though. debian maintainers are very much aware of it.
[11:33:43] <jaawerth> and that can sometimes get more complex once you drill down into subdirs
[11:33:43] <Maxdamantus> if upstream were responsible for it, they would probably break my combined arm/x86 setup that I use on my phone.
[11:36:42] <theskillwithin> teut idk I have been higher than jirrafe pussy for the past few hours.  nextjs has good docs, read the errors and the docs it points to
[11:36:48] <teut> oh its paths
[11:37:20] <teut> the confusion I face always is whether I should ask or find
[11:37:26] <teut> how do you decide?
[11:38:02] <theskillwithin> try to find before ask
[11:38:44] <teut> try to find  is abstract way of saying it
[11:38:53] <teut> try to search for  x minutes
[11:39:10] <teut> is the thing to know
[11:39:21] <theskillwithin> being resourceful
[11:40:15] <theskillwithin> teut more than half the questions I answer in here, I just did a quick google
[11:40:44] <systemfault> You _never_ ask first.
[11:41:15] <systemfault> Otherwise, people end up believing you're a help leech... and you don't want that.
[11:41:17] <teut> hmm, I can agree on this that I asked too quickly
[11:41:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[11:41:21] <teut> to save time
[11:41:30] <teut> ya help vampire
[11:41:46] <teut> yes surely I do not want to become that
[11:42:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:43:02] *** Joins: rendar (~rendar@user/rendar)
[11:43:13] <theskillwithin> learn how to learn
[11:44:12] <teut> yep that's much required with today's kind of software industry
[11:44:43] <teut> since more code is integrated and bought than made
[11:44:47] <systemfault> One step at a time... a few of us have been doing it for 10+ years
[11:45:13] <teut> the problem is not me but the business
[11:45:17] <systemfault> We're not geniuses.. we've just seen more shit than you did
[11:45:22] <teut> the keep pushing
[11:45:49] <teut> ik but this startup ecosystem doesnt understands it
[11:46:07] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[11:47:36] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[11:47:44] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:47:54] <teut> now there's a prroblem
[11:47:57] <theskillwithin> systemfault im not a fan of the term help vampire, we don't want to be gatekeepers
[11:48:06] <teut> my  page  [id].tsx
[11:48:18] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[11:48:24] <teut> this id is basically the product id
[11:48:38] <teut> some weird number that comes from the api
[11:48:39] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:48:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:49:01] <theskillwithin> teut that comes from the route
[11:49:02] <teut> If a page has Dynamic Routes and uses getStaticProps, it needs to define a list of paths to be statically generated.
[11:49:11] <teut> so I cannot create the list
[11:49:30] <teut> route what?
[11:50:11] <teut> router.push(`/product/${id}`)
[11:50:34] <teut> this is how on click of product in the cart   the next page opens
[11:52:13] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[11:53:52] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[11:54:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[11:56:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:56:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:58:53] <teut> do you mean I should use a query param?
[12:00:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[12:01:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:02:49] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:06:54] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:08:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:09:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:10:14] *** Quits: teut (~teut@103.144.92.240) (Quit: Client closed)
[12:13:41] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:16:43] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[12:20:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[12:21:11] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 245 seconds)
[12:21:48] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[12:24:37] *** Joins: salad (~cucumber@82.76.150.118)
[12:25:08] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[12:25:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:26:12] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[12:28:14] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:30:06] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: You have been kicked for being idle)
[12:31:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:32:04] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:34:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:37:01] *** Joins: clamiax (~clamiax@net-93-65-241-192.cust.vodafonedsl.it)
[12:37:12] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:37:20] *** Joins: torniq (~xjsxxx@172.103.177.52)
[12:37:51] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:38:44] <torniq> I'm using inertiajs/vue.  I set a this.$page.props.name = 'test' and my watcher doesn't fire.  Typically i'd use : Vue.set(this,'$page.props.name', 'test') after I did an import Vue from 'vue'.   What's weird is that this doesn't provide Vue.set.  Anyone know how to get vue to detect the changes?
[12:39:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[12:40:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:41:50] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 256 seconds)
[12:42:45] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[12:43:15] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[12:46:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[12:48:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:54:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[12:55:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:56:18] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[12:57:06] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[12:57:35] *** Joins: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br)
[12:57:47] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[13:01:36] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 252 seconds)
[13:03:03] <rendar> any help with this? https://jsfiddle.net/1Lmnyexp/1/ why i can't make the animation of the second span to start?
[13:07:39] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[13:08:43] <Cork> redrambles: your animation: in .world is broken
[13:09:27] <Cork> ex. https://jsfiddle.net/z35yr0eL/
[13:11:20] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[13:17:17] *** Joins: kerala (~kerala@2409:4073:2e81:94ce:c271:8360:bc9d:74b1)
[13:21:33] <theskillwithin> Cork I think you pinged the wrong person, you meant to ping rendar
[13:21:44] <Cork> lol so i did...
[13:23:49] <fweht> somehow doing `state[i] = newValue; return [...state];` in react to force a state update feels so unelegant, but i need to return something that doesn't 'equal' the old state, would you say wrapping the array in another array and do `return [state]` is better?
[13:25:12] <Cork> why not have a separate return value telling to skip the equal check?
[13:25:30] <Cork> instead of fake the array
[13:26:27] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[13:28:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:28:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:29:01] *** Joins: Adoi (~Adoi@user/adoi)
[13:29:34] <fweht> Cork: what do you mean with seperate return value?
[13:29:58] <Cork> fweht: [arr, skipEqualCheck]
[13:30:06] *** Joins: niop (niop@gateway/vpn/airvpn/niop)
[13:30:13] <Cork> IF that is what your after
[13:30:16] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[13:30:19] <fweht> Cork: oh, thats a thing, yes i guess so!
[13:30:22] <Cork> instead of trying to embed that information in the array
[13:30:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:31:04] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[13:32:10] *** Joins: silverdust (~silverdus@user/silverdust)
[13:32:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:33:05] *** Quits: Adoi (~Adoi@user/adoi) (Remote host closed the connection)
[13:33:34] *** Joins: Adoi (~Adoi@user/adoi)
[13:33:38] *** Joins: audio (~audio@user/audio)
[13:34:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:36:02] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[13:36:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:37:18] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[13:37:33] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:38:55] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[13:40:48] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:41:13] *** Joins: silverdust (~silverdus@user/silverdust)
[13:41:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[13:42:32] *** Joins: ekh (~ekh@188.236.106.195)
[13:44:35] <ekh> Hello. I have a server and a client, where some kind of RPC is implemented. I am just wondering, is it possible to generate x509 certificate to authenticate the client?
[13:44:37] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:44:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:45:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[13:45:22] <Cork> ekh: yes have a look at pkcs10.js
[13:46:48] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 272 seconds)
[13:47:38] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[13:48:03] *** Joins: masoudd (~masoudd@user/masoudd)
[13:48:17] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:48:58] <ekh> Cork, thanks, how would the client authenticate? I think I need to mention both server and client are node apps
[13:49:46] <Cork> ekh: well either you have to sign the certificate from the server side and then give it to the client to store (known issuer)
[13:50:00] <Cork> or the server has to keep a list of trusted public keys
[13:50:46] <Cork> meaning same as certificates normally work
[13:51:12] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Quit: enoq)
[13:51:33] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:51:48] <Cork> if you want to use it to encrypt the communication with a client cert, not sure, never done it
[13:52:13] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[13:53:00] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:55:21] <Maxdamantus> It's probably a bit weird issuing certificates within the protocol. Usually certificate issuance is meant to be out-of-band, since you've presumably got external systems that are able to renew/revoke.
[13:56:07] <Maxdamantus> If you're wanting to hand something out from the server, why not just hand out a regular token?
[13:57:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[13:57:23] <ekh> Maxdamantus, I just want to secure the communication between a single server and 2 clients. I think I'll go with REST using expressjs for the server side. I am trying to find out if the client can somehow send the certificate along with the http requests
[13:57:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:59:09] <Maxdamantus> ekh: I haven't used express, but I imagine that should be possible. I wouldn't expect the certificate to be generated in JS or anything though.
[13:59:38] <ekh> So, I need to secure the connection, and use JWT for authorization
[13:59:50] <ekh> i'll just use openssl for certificate generations
[14:00:15] <Maxdamantus> ekh: it should be a matter of providing a CA certificate to the server in the form of a "trust" store, and using client certificates that have been signed using that CA certificate.
[14:00:34] <Maxdamantus> Yes, that sounds okay.
[14:02:10] <ekh> I don't suppose I can use fetch(), right? is axios the way to go? (for the client)
[14:02:52] <Maxdamantus> Haven't used `fetch`, but if you can provide a custom Node.js HTTP client, that should work.
[14:02:57] *** Quits: kerala (~kerala@2409:4073:2e81:94ce:c271:8360:bc9d:74b1) (Ping timeout: 240 seconds)
[14:03:04] <Maxdamantus> (haven't used `fetch` in node, at least)
[14:03:31] *** Joins: han-solo (~hanish@user/han-solo)
[14:03:41] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[14:05:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:06:15] <Maxdamantus> `https.request({ cert: "-----BEGIN CERTIFICATE-----\n.....", ... })` is how you provide a client certificate.
[14:06:28] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:06:31] <ekh> I'll give it a shot. Thanks
[14:07:31] <Maxdamantus> and `https.createServer({ ca: ["-----BEGIN CERTIFICATE-----\n....."], ... })` is how you specify the trusted CA certificate(s) when creating a server.
[14:08:32] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[14:08:37] <Maxdamantus> There'll be something on the `HttpServerRequest` interface that allows you to inspect the client certificate, so you can check the subject or whatever.
[14:08:44] *** Joins: stagas (~stagas@2a02:587:c428:4985:3c4f:1680:2eaa:25c8)
[14:09:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:09:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:10:08] <Maxdamantus> oh, and you'll probably want `requestCert: true` in the server options.
[14:12:36] <Maxdamantus> `req.socket.getCertificate()`: https://nodejs.org/api/all.html#all_tls_tlssocketgetcertificate
[14:12:42] *** Joins: laris (undead@37.221.209.36)
[14:15:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[14:15:40] *** Joins: kerala (~kerala@2409:4073:2e81:94ce:fc92:97a6:c53a:f4b3)
[14:16:40] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:18:51] *** Joins: silverdust (~silverdus@user/silverdust)
[14:19:30] *** Joins: monoxane (~monoxane@user/monoxane)
[14:23:34] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[14:25:58] *** Joins: federico_it (~textual@151.51.80.129)
[14:26:06] *** Joins: silverdust (~silverdus@user/silverdust)
[14:26:43] *** Joins: DnzAtWrk (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi)
[14:27:05] *** Joins: thiras (~thiras@user/thiras)
[14:29:36] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:32:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:35:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:37:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:38:59] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[14:39:27] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:41:39] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[14:42:36] *** Quits: kerala (~kerala@2409:4073:2e81:94ce:fc92:97a6:c53a:f4b3) (Ping timeout: 240 seconds)
[14:43:40] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[14:44:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[14:47:19] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:47:19] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[14:51:09] *** Joins: monoxane (~monoxane@user/monoxane)
[14:52:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[14:52:43] *** Joins: D4mned (~D1mned@212.101.234.138)
[14:56:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Max SendQ exceeded)
[14:56:29] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[14:56:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:58:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:59:32] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:00:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:03:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[15:05:20] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:06:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:07:28] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[15:09:08] *** Quits: DnzAtWrk (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:11:22] *** Joins: Deneb (~johnch@128.82.159.143.dyn.plus.net)
[15:11:23] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[15:12:03] *** Joins: DnzAtWrk (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi)
[15:16:06] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[15:16:22] <Kirjava> made some unscientific benchmarks in a project of mine https://i.imgur.com/wndorAu.png
[15:23:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:25:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:30:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:33:20] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 250 seconds)
[15:33:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:33:52] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[15:35:45] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[15:35:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:37:01] *** Joins: nomic (~nomic@85.203.36.247)
[15:40:02] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[15:43:36] *** Joins: pmercado (~pmercado@186.107.55.248)
[15:46:49] *** Joins: DnzAtWrk2 (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi)
[15:46:58] *** Quits: DnzAtWrk (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi) (Ping timeout: 260 seconds)
[15:47:10] *** Quits: DnzAtWrk2 (~DnzAtWrk4@mobile-access-6df0de-203.dhcp.inet.fi) (Client Quit)
[15:50:21] *** Quits: ejjfunky (~ejjfunky2@125.164.19.110) (Remote host closed the connection)
[15:53:08] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[15:56:49] *** Quits: Deneb (~johnch@128.82.159.143.dyn.plus.net) (Quit: Leaving)
[15:57:29] *** Joins: Guest52 (~Guest52@213.162.65.110)
[16:03:29] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:04:06] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[16:08:27] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[16:11:01] *** Joins: trevors (~trevors@user/trevors)
[16:11:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:12:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:13:00] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 252 seconds)
[16:14:40] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[16:16:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[16:21:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[16:22:36] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[16:28:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[16:30:57] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:34:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:37:42] *** Joins: mikrosis (~mikrosis@dynamic-046-114-169-113.46.114.pool.telefonica.de)
[16:38:02] <mikrosis> hi
[16:38:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[16:38:42] <mikrosis> How to give a React app an initial state? I can pass a global GET parameter for an ID, or using SSR and injecting JSON into the app index.html?
[16:40:07] *** Joins: voltage_ (voltage@user/voltage)
[16:40:12] *** Joins: thiras (~thiras@user/thiras)
[16:41:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:42:24] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[16:46:03] <mikrosis> anyone? :(
[16:46:18] *** Joins: edk (edk@libera/staff/edk)
[16:47:21] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 268 seconds)
[16:48:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:48:59] <D4mned> its been a while since i used react so am not so sure about this
[16:49:06] <D4mned> but maybe useEffect hook is used for that
[16:50:58] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[16:51:02] <D4mned> once the component gets mounted it gets triggered
[16:51:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:51:22] <blueagain> yeah, that's how we load data initially
[16:51:22] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[16:51:31] <D4mned> and theres some dependency list you have take care of
[16:51:42] <D4mned> or memory leaks
[16:51:55] <D4mned> or infinit loops
[16:54:15] *** Joins: han-solo (~hanish@user/han-solo)
[16:55:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:55:46] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[16:57:31] <mikrosis> hmm
[16:58:37] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:58:46] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[17:00:59] *** Joins: trevors (~trevors@user/trevors)
[17:04:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:05:47] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[17:06:48] *** Quits: Praise (~Fat@user/praise) (Quit: Vado a fare qualcosa di utile.)
[17:06:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:07:03] *** Joins: Praise (~Fat@user/praise)
[17:13:06] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:17:52] *** Joins: pulse (~pulse@user/pulse)
[17:22:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:23:33] *** Joins: sfields_ (~sfields@136.34.181.232)
[17:25:24] *** Quits: sfields (~sfields@2605:a601:adea:7a00:f8c8:b826:13da:1633) (Ping timeout: 240 seconds)
[17:29:11] *** Joins: onosendi (~onosendi@user/onosendi)
[17:31:38] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:31:58] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:33:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:35:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:35:22] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:37:38] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[17:42:15] *** Joins: gehn (~gehn@user/gehn)
[17:44:08] <b-rex> how to mixin static and getters?
[17:52:10] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[17:56:08] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:4da8:368c:98cd:8404)
[17:57:27] *** Joins: jumpcutking (uid459573@id-459573.uxbridge.irccloud.com)
[17:58:48] *** Joins: silverdust (~silverdus@user/silverdust)
[18:02:16] <onosendi> mikrosis: https://gist.github.com/onosendi/64f52fc70943dfdea336e01d0b4d4765
[18:03:17] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 240 seconds)
[18:04:28] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[18:09:55] *** Quits: Guest52 (~Guest52@213.162.65.110) (Quit: Client closed)
[18:11:43] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:12:41] <pulse> one reason why for loops are better than forEach is you can break out of a for loop :D
[18:13:56] *** Joins: mohammad5305 (~mohammad@2.180.200.151)
[18:18:54] *** Joins: Rockwood (~Rocky@user/rocky)
[18:19:46] *** Quits: mohammad5305 (~mohammad@2.180.200.151) (Ping timeout: 272 seconds)
[18:24:25] *** Quits: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) (Remote host closed the connection)
[18:25:44] *** Joins: silverdust (~silverdus@user/silverdust)
[18:26:32] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 240 seconds)
[18:26:41] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[18:28:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[18:32:19] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:35:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:35:54] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:36:21] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[18:39:28] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:40:51] <KevinX> what's another reason?
[18:40:54] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[18:42:14] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:42:15] <wallbroken> https://dpaste.org/9Ywy#L15
[18:42:44] <wallbroken> 16:11:23	Informazioni	Title: testEvent   Date: function toString() { [native code] }   ID: myID
[18:42:53] <wallbroken> why do I have wrong output date?
[18:43:41] <wallbroken> ok, all AFK
[18:43:44] <wallbroken> never mind
[18:44:12] <KevinX> `toString` is a function
[18:44:44] <wallbroken> i know, but adding () will not solve the problem
[18:45:06] <KevinX> That means you have a different problem
[18:45:34] <KevinX> what's the new error message?
[18:45:45] <wallbroken> https://developers.google.com/apps-script/reference/calendar/calendar-event#getdatecreated
[18:45:47] <wallbroken> this is the API
[18:45:51] <wallbroken> it looks like ok
[18:46:01] <wallbroken> the error is still the same
[18:46:36] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[18:46:50] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[18:47:05] <KevinX> `getDateCreated` is also a function
[18:47:21] <KevinX> You can't  just optionally leave off the `()`
[18:47:56] <wallbroken> ok, problem solved, thank you
[18:48:03] <KevinX> np
[18:48:04] <wallbroken> KevinX: the problem is not mine
[18:48:12] <wallbroken> is autocomplete of the editor
[18:48:18] <wallbroken> which is not adding ()
[18:48:21] <KevinX> get a new editor :P
[18:49:45] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[18:51:55] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[18:53:43] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-7d1a-6b96-683c-fe3e.res6.spectrum.com)
[18:53:43] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-7d1a-6b96-683c-fe3e.res6.spectrum.com) (Client Quit)
[18:55:08] *** Joins: banana__ (~banana_@user/banana/x-2944094)
[18:56:36] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[18:56:38] <buu> How do I get a function added to the stdlib for string
[18:56:48] *** banana__ is now known as banana_
[18:56:59] <Rockwood> KevinX, o/
[18:58:48] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:59:03] <KevinX> hi
[18:59:08] <KevinX> buu, like what?
[19:00:36] <KevinX> And do you mean add to the string prototype or something else?
[19:00:40] *** Quits: Covrus (~Covrus@user/covrus) (Quit: WeeChat 3.4)
[19:02:06] <buu> KevinX: Yes, that
[19:02:20] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[19:03:02] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[19:03:12] *** Quits: TedCHoward (~TedCHowar@072-181-136-152.res.spectrum.com) (Read error: Connection reset by peer)
[19:04:06] <KevinX> There's probably a better way to do things, but you can just do `String.prototype.theThing = ...`
[19:04:53] <KevinX> I don't think it's advised to add to the built in prototypes
[19:05:25] <KevinX> But depends on your project, of course
[19:06:20] <buu> ljharb: Why does https://github.com/es-shims/String.prototype.matchAll/blob/main/shim.js mess around with Symbol.matchAll and Symbol in general?
[19:07:47] <ljharb> buu: because the spec requires it
[19:11:23] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[19:12:07] *** Joins: TedCHoward (~TedCHowar@072-181-136-152.res.spectrum.com)
[19:12:59] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[19:13:21] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[19:15:01] *** Joins: Adoi (~Adoi@user/adoi)
[19:19:04] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:1f05:f9df:549d:e993:2bb0)
[19:20:37] *** Joins: ejjfunky (~ejjfunky@125.164.23.88)
[19:20:44] *** Joins: plitter (~plitter@2a02:2121:308:9d3:aeed:5cff:febd:9188)
[19:20:44] *** Quits: plitter (~plitter@2a02:2121:308:9d3:aeed:5cff:febd:9188) (Changing host)
[19:20:44] *** Joins: plitter (~plitter@user/plitter)
[19:21:52] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:22:12] *** Quits: p-i- (~Ohmu@2403:6200:8978:1f05:45d9:b671:7f9e:34a5) (Ping timeout: 240 seconds)
[19:22:35] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:23:45] <pulse> KevinX, no other reason. perf used to be a concern but afaik forEach now matches for loops
[19:24:34] <KevinX> Another one is async/await
[19:25:00] <KevinX> if you want to run in sequence
[19:25:57] <pulse> people often complain that for is less readable than forEach but i don't see it. must be my C mindset
[19:26:57] *** Joins: mohammad5305 (~mohammad@2.180.200.151)
[19:27:56] <pulse> the real problem with for is the lack of closure imo
[19:28:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[19:28:12] <pulse> also apparently the MDN design has changed
[19:28:22] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[19:28:24] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[19:28:31] <pulse> i liked the previous one better :|
[19:28:43] <KevinX> same
[19:28:51] <KevinX> middle content area is too narrow as well
[19:29:10] <KevinX> So some code content moves to the next line
[19:29:10] *** Joins: kerala (~kerala@2409:4073:2e81:94ce:da7a:b562:9355:db49)
[19:29:42] <pulse> darkmode looks kinda nice
[19:29:48] <KevinX> Also, I think there's less contrast so it's harder to scan quickly
[19:29:52] <pulse> i say this as someone who dislikes darkmode in general
[19:30:00] *** Quits: cinderblock (~cinderblo@firefly.isozilla.com) (Quit: kthxbai!)
[19:30:08] *** Quits: Eugenius[m] (~eugeniusg@2001:470:69fc:105::1:a867) (Quit: You have been kicked for being idle)
[19:30:46] *** Joins: cinderblock (~cinderblo@firefly.isozilla.com)
[19:33:01] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:33:43] *** Joins: crashrep (~crashrep@user/crashrep)
[19:36:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:36:57] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 240 seconds)
[19:38:01] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:40:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[19:40:25] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:41:54] *** Quits: Swant (~swant@libera/staff/swant) (Quit: gone to IKEA)
[19:42:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:42:47] *** Joins: Swant (~swant@libera/staff/swant)
[19:42:54] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[19:42:55] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[19:46:52] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[19:47:47] *** Joins: jruff (~jruff@c-67-167-60-147.hsd1.il.comcast.net)
[19:53:10] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[19:53:41] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Max SendQ exceeded)
[19:54:17] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[19:59:09] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 250 seconds)
[19:59:29] <samsch> pulse, `for` is less semantically specific. For a given iteration operation, there are a few common tasks which are each specifically covered by Array iteration methods such as map, reduce, some, find, etc. And when you use forEach, you are implying that the given task is *none* of those things. But with a `for` loop, you have no information about the intention of the code. It's not even guaranteed to be an iteration.
[20:00:23] <samsch> It's not that the code in a `for` loop is harder to read, it's that you have to read the code and pay attention to side effects to figure out what it's doing at all. You don't have any information about what the output is.
[20:00:29] *** Joins: thiras (~thiras@user/thiras)
[20:00:42] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[20:01:02] <pulse> disagreed, for is semantically meaningful anytime you're dealing with ranges of indexes
[20:01:09] <pulse> or ranges of any numbers really
[20:01:37] <ljharb> KevinX: no, it doesn't depend; never ever modify builtins
[20:01:55] <ljharb> buu: what string function do you want?
[20:02:58] <samsch> pulse, It could have that semantic meaning if that's the primary way it's generally used, but it isn't, and it doesn't.
[20:03:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:03:37] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:06:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e)
[20:08:52] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (Read error: Connection reset by peer)
[20:10:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[20:12:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:12:13] <pulse> in general i disagree that "all code should be as readable as possible". some code is inherently complex and as such hard to read. wrapping it in neat little semantical functions is like putting sugar onto manure
[20:12:18] *** Quits: hamess (~hamess@user/hamess) (Quit: **BRB** dyed my hair bLacK. Mom got so mad lol)
[20:12:37] *** Joins: hamess (~hamess@user/hamess)
[20:12:46] <ljharb> lol what kind of code needs be that complex
[20:13:01] <ljharb> also, let's be real, if you had to eat manure, would you rather have it with or without sugar
[20:13:22] <ljharb> also if that's your biggest complaint, maybe you shouldn't be putting manure on your plate :-p
[20:13:29] <ljharb> this is a fun analogy
[20:14:56] <pulse> yes please write zlib with your fancy functions
[20:14:59] <pulse> good luck
[20:15:13] <ThePendulum> why should I care about pinia vs vuex
[20:15:15] <KevinX> If you're eating manure, you're probably not using a plate
[20:15:20] <pulse> rewrite libpng and libjpg while you're at it
[20:15:39] <pulse> and maybe replace the whole linux kernel with a nice javascript codebase consisting of fairy tales and rainbows
[20:15:47] <ljharb> people have already done that one
[20:15:51] <KevinX> theskillwithin the Vue team recommends it
[20:15:56] <ljharb> but also, maybe cite a lib that wasn't written in C decades ago
[20:15:57] <KevinX> sorry, wrong tag
[20:15:59] <KevinX> ThePendulum
[20:16:32] <pulse> libs written in C decades ago are still in widespread use today, and will be for the foreseeable future
[20:16:40] <ThePendulum> orly? I thought vuex was from the vue team and they would've just released a new version of that instead
[20:16:50] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:16:57] <pulse> and even if you rewrote them in any language, the complexity wouldn't go away and it would probably look worse than C code
[20:17:04] <ThePendulum> ah pinia is also from the vue team, interesting
[20:17:47] <ljharb> pulse: it sounds like you think that's a compliment
[20:17:55] <ljharb> pulse: code that doesn't get replaced is because it's shit code
[20:18:09] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e)
[20:18:13] <ljharb> if they were written better we might have better things in use today.
[20:18:20] <pulse> no, i think that some code is inherently too complex to be wrapped into nice looking code so that people on top of the ivory tower can feel safe and secure about it
[20:18:39] <pulse> but go ahead and rewrite zlib and make it readable, prove me wrong
[20:20:30] <ljharb> that is a proper cantankerous old C programmer mentality, indeed
[20:20:39] <pulse> ikr ;)
[20:20:44] <KevinX> Someone is probably rewriting it in Rust
[20:20:44] <ljharb> how's the last three decades of change working out for you
[20:20:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e) (Ping timeout: 245 seconds)
[20:20:55] <pulse> KevinX, rust looks worse
[20:21:09] <pulse> ljharb, pretty good, actually https://www.tiobe.com/tiobe-index/
[20:24:03] <ljharb> oh, you poor poor man that you justify your choices based on a programming language index :-(
[20:24:17] <ljharb> any list where java's near the top is automatically not that interesting
[20:24:28] <ljharb> any positive list, i guess, inb4 someone makes that crack
[20:25:20] <Alexendoo> miniz exists
[20:25:23] <pulse> i don't justify choices, i just think C is still important
[20:25:31] <pulse> rust may be safer but the codebase it 10 times crappier
[20:25:35] <pulse> is*
[20:25:35] <Alexendoo> As does a rust port of miniz
[20:26:25] <ljharb> COBOL is still important
[20:26:28] <ljharb> that doesn't mean it's any good
[20:26:46] <pulse> good is relative
[20:27:24] <pulse> i like C for various reasons, but mostly because it's both simple and powerful
[20:27:43] <pulse> and there's not a language on this planet that balances those two as well
[20:28:11] <pulse> and quite frankly, C code is easier to reason about than JS code, or any high level code
[20:28:22] <pulse> C is beautifully elegant
[20:28:42] * jaawerth valiantly resists bringing up lisp, partially succeeds by instead mentioning offhand the act of resisting bringing up lisp
[20:29:54] <jaawerth> pulse: out of curiosity, what in particular do you find wores about rust? like, what warts have you seen? also by codebase do you mean rust userland code or, like, the compiler?
[20:31:33] <pulse> jaawerth, the language and consequentially the compiler are way more complex than C. which also translates to codebases
[20:31:48] <pulse> rust trades simplicity for safety, but keeps power
[20:31:51] *** Quits: mohammad5305 (~mohammad@2.180.200.151) (Ping timeout: 256 seconds)
[20:31:53] <pulse> so it's a tradeoff
[20:33:43] <OneMirror> Hm. When implementing Writable.write() what's different between returning false and later emiting drain, and just not calling the write cb() until later?
[20:33:46] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:33:54] *** Quits: kerala (~kerala@2409:4073:2e81:94ce:da7a:b562:9355:db49) (Remote host closed the connection)
[20:35:18] <jaawerth> hm. I suppose - I think the counter-argument is how C may appear simple on the face of things but if you poke through codebases you end up seeing gnarly boilerplate (or worse) macros? which you can account for which code quality, but I think the case for rust is a little more complexity upfront in exchange for a better median
[20:35:25] *** Joins: colordro1 (~erahhal@69.53.245.255)
[20:36:00] <jaawerth> but I don't use either enough to have a super strong opinion. most of the C I touch is just for native modules coordinated by fennel (lua)
[20:36:21] <pulse> jaawerth, by simple i mean C's spec is simple. it is the minimal set of features to give you full power over the computer. that is its appeal
[20:37:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:38:09] <jaawerth> is it though? a simple spec implies you can just, like, write a C custom parser. which the general consensus is that this is a very bad idea
[20:38:34] <jaawerth> largely due to the various undefined behaviors
[20:38:49] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[20:39:03] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:39:09] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Remote host closed the connection)
[20:39:21] <jaawerth> to be clear I don't think it's the worst, I just think it's worthwhile to search for something to replace it someday
[20:39:33] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[20:40:48] *** Joins: kerala (~kerala@157.46.169.246)
[20:42:52] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[20:45:08] *** Quits: ejjfunky (~ejjfunky@125.164.23.88) (Quit: Leaving)
[20:45:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[20:47:30] *** Quits: kerala (~kerala@157.46.169.246) (Ping timeout: 250 seconds)
[20:47:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:47:41] <ljharb> lol i doubt most people would describe C as beautiful
[20:47:42] *** Joins: mohammad5305 (~mohammad@2.180.200.151)
[20:47:59] <ljharb> "C's spec is simple" is irrelevant, since people don't use the spec, they use the implementations
[20:48:21] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[20:52:49] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[20:53:54] <banana_> o/
[20:55:59] <Rockwood> \o
[20:56:43] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[20:56:44] <banana_> o/o/o/  \o/  \o\o\o
[20:57:52] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:58:46] *** Joins: kerala (~kerala@2409:4073:2e81:94ce:696c:8d83:4b24:474b)
[21:00:13] *** Joins: src (~src@user/src)
[21:00:30] *** Quits: colordro1 (~erahhal@69.53.245.255) (Ping timeout: 250 seconds)
[21:00:39] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:01:57] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[21:02:44] *** Joins: colordro1 (~erahhal@69.53.245.255)
[21:03:06] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:03:23] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[21:05:04] *** Joins: mohab (~mohab@41.129.70.89)
[21:06:20] <chovy> anyone know: https://stackoverflow.com/questions/71399219/ts2571-error-object-is-of-type-unknown
[21:07:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[21:08:12] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 268 seconds)
[21:09:09] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[21:09:49] *** Quits: mohab (~mohab@41.129.70.89) (Client Quit)
[21:11:47] *** Joins: kerala_ (~kerala@117.212.167.141)
[21:13:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:13:38] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 260 seconds)
[21:14:17] *** Quits: kerala (~kerala@2409:4073:2e81:94ce:696c:8d83:4b24:474b) (Ping timeout: 240 seconds)
[21:15:14] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[21:17:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:18:04] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[21:18:11] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3)
[21:19:14] <KevinX> why would you think typing was optional?
[21:20:05] <KevinX> You need to set a type for searches or at least for search
[21:20:08] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[21:20:59] <KevinX> "Did you try to use any ?" <- this is the wrong answer
[21:21:10] *** Joins: mohab (~mohab@197.46.171.192)
[21:21:26] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:21:31] <KevinX> chovy
[21:24:02] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[21:24:14] <ljharb> chovy: it definitely isn't optional
[21:24:19] <ljharb> you should have strict mode enabled also
[21:24:49] <ljharb> and you should have `searches` properly typed, at least as `{ user: { contactme: boolean } }[]` or something
[21:25:01] <ljharb> you never want to use `any`
[21:25:57] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:28:53] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[21:29:00] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[21:29:09] <blueagain> if any is useless, why did even bother to have it
[21:29:13] <blueagain> TS is such a waste of time
[21:29:54] <xisop> they most likely did it to interface with untyped code
[21:31:43] <ljharb> no idea. they only added `unknown` in v3 thjo
[21:31:44] *** Joins: mintograde (~mintograd@47.201.5.61)
[21:32:01] <ljharb> and until `unknown` existed, `any` made sense. once `unknown` exists, `any` no longer makes sense.
[21:32:10] *** Joins: blezz (~blez@213-130-92-210.ip.btc-net.bg)
[21:32:40] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:33:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:33:21] *** Quits: mohab (~mohab@197.46.171.192) (Quit: WeeChat 3.4)
[21:33:22] *** Quits: blez (~blez@213-130-92-210.ip.btc-net.bg) (Ping timeout: 256 seconds)
[21:33:36] <xisop> apparently any is for when you don't want a specific value to cause type checking errors..
[21:33:41] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 245 seconds)
[21:34:28] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:34:38] <ljharb> which you should never want
[21:34:43] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[21:35:03] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[21:35:20] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:35:45] <xisop> yeah, seems like the equivalent of void* in C
[21:35:53] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 256 seconds)
[21:36:10] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[21:36:16] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[21:36:36] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[21:37:21] *** Joins: Adoi (~Adoi@user/adoi)
[21:37:21] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:37:48] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[21:37:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:38:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:41:05] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[21:42:17] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[21:43:36] *** vinleod is now known as vdamewood
[21:44:20] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:44:41] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:45:29] *** Joins: rpino (~textual@189.172.95.214)
[21:46:52] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[21:48:21] *** Joins: src (~src@user/src)
[21:49:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:50:30] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[21:52:12] *** Joins: imsky (~imsky@2603-7000-4902-2e00-dc1e-503b-703c-1c5c.res6.spectrum.com)
[21:52:41] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:54:22] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:54:27] <sheetjs> you can't de-reference void*
[21:54:32] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:55:17] <sheetjs> *the difference between void* and any is that you still need to convert to another pointer type in C
[21:57:25] *** Joins: trevors (~trevors@user/trevors)
[21:58:17] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[21:58:58] <Alexendoo> blueagain: It's a pain now, but it was a necessary evil to gain popularity, as it allowed gradual adoption and/or to still use TS with libraries that had no types (very common before TS got popular)
[21:59:46] <ljharb> i don't think it was necessary
[21:59:48] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[22:00:06] <ljharb> if TS had unknown from the start (along with `declare module`), that would have been sufficient
[22:00:34] *** Joins: thiras_ (~thiras@user/thiras)
[22:00:35] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[22:01:46] <Alexendoo> That would have been sufficient if people were willing to write type definitions for the libraries that they would be using, but most people aren't going to spend time doing that
[22:03:14] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[22:03:55] <ljharb> tbh, then they shouldn't be using a type system
[22:04:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[22:04:41] <ljharb> you don't have to write perfect/accurate types for untyped packages, but you can still write enough to make your code safer. if you're not going that, what's the point of TS
[22:04:59] *** Joins: thiras_ (~thiras@user/thiras)
[22:05:18] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[22:06:48] *** Quits: mohammad5305 (~mohammad@2.180.200.151) (Ping timeout: 250 seconds)
[22:06:56] <blueagain> I much prefer defensive programming than TS, anyway
[22:07:09] <blueagain> TS is a poor man's solution for a harder problem
[22:08:08] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:08:27] <ljharb> i agree
[22:08:51] *** Quits: Arisco (~ckmptnml@201-11-17-238.user3p.brasiltelecom.net.br) (Ping timeout: 252 seconds)
[22:09:30] <buu> Types are, generally speaking, better than not having types
[22:09:37] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[22:09:38] <buu> Except possibly in java
[22:10:01] <buu> And whatever nonsense makes typescript typing turing complete
[22:10:43] *** Joins: mohammad5305 (~mohammad@2.180.200.151)
[22:12:30] *** Quits: imsky (~imsky@2603-7000-4902-2e00-dc1e-503b-703c-1c5c.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:12:46] <buu> When you have like, for loops inside your type definition you should probably rethink things
[22:13:05] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:13:58] <buu> 10:31 <@ljharb> buu: what string function do you want?
[22:14:08] <buu> I want string.bettermatch(/regex/, callback)
[22:14:29] <ljharb> ok but why
[22:14:39] <ljharb> what arguments would the callback take
[22:15:03] <ljharb> given you could already do `callback([...string.matchAll(/regex/g)])`
[22:15:42] <Alexendoo> buu: Many end up turing complete, not just a TS weirdness
[22:16:09] <buu> I know, it was just a convenient example
[22:17:13] <buu> ljharb: The callback would take matches[1..] if they exist or fall back to matches[0]
[22:17:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:35] <buu> And the point is callback only executes if it matches
[22:17:51] *** Joins: antsomers (~thiras@user/thiras)
[22:18:04] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:18:20] <ljharb> and would it execute once for each match, or once for all matches?
[22:19:04] <buu> Prrrrrrrrobably the the former, but either way is reasonable
[22:19:44] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:9ff:d128:aded:6ba3) (Ping timeout: 268 seconds)
[22:19:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:20:09] <buu> javascript regexp objects store the match position with "globabl" regexps right?
[22:21:17] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 240 seconds)
[22:21:46] *** Joins: imsky (~imsky@2603-7000-4902-2e00-dc1e-503b-703c-1c5c.res6.spectrum.com)
[22:23:00] <buu> b> let x = /(\d)/g; let str="123459"; [x.exec(str)]
[22:23:02] <jellobot> (okay) [ [ '1', '1', index: 0, input: '123459', groups: undefined ] ]
[22:23:11] <buu> b> let x = /(\d)/g; let str="123459"; [x.exec(str), x.exec(str)]
[22:23:12] <jellobot> (okay) [ [ '1', '1', index: 0, input: '123459', groups: undefined ], [ '2', '2', index: 1, input: '123459', groups: undefined ] ]
[22:23:17] *** Joins: Adoi (~Adoi@user/adoi)
[22:23:19] <buu> hm
[22:23:26] <buu> b> let x = /(\d)/g; let str="123459"; [str.match(x)]
[22:23:27] <jellobot> (okay) [ [ '1', '2', '3', '4', '5', '9' ] ]
[22:23:33] * buu eyerolls
[22:24:38] *** Joins: aalmazan (uid180785@id-180785.uxbridge.irccloud.com)
[22:25:00] *** Joins: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb)
[22:25:29] <banana_> oh how .match functions differently base on the /g flag
[22:25:32] <banana_> *based
[22:26:39] <banana_> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match#return_value
[22:28:28] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[22:28:43] <banana_> what's "globabl" regexps btw
[22:28:50] *** Joins: onosendi (~onosendi@user/onosendi)
[22:30:22] <ljharb> buu: ok so, `Array.from(string.matchAll(regex), callback)` will only run when it matches, once for each match
[22:30:26] <ljharb> buu: what else do you need
[22:30:48] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[22:31:42] <buu> What's the Array.from doing?
[22:31:50] <blueagain> this is just hilarious
[22:32:07] <blueagain> Mar 8, 09:53 PST The root cause has been determined, remediations have been executed to restore service.
[22:32:16] <ljharb> buu: spreading the iterator to an array, and simultaneously mapping over it
[22:32:23] <ljharb> blueagain: huh?
[22:32:24] <blueagain> Mar 8, 10:29 PST We are continuing to investigate the issue impacting the API to find root cause.
[22:32:28] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[22:32:45] <blueagain> that is about zero reliability
[22:32:48] <buu> ljharb: Oh ick
[22:32:50] <blueagain> ljharb: discord is dead
[22:33:04] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[22:33:49] <ljharb> buu: what's ick about it
[22:33:59] <buu> ljharb: Anyways, obviously js is turing complete, but this isn't making my code cleaner
[22:34:07] <ljharb> blueagain: oh no, how will people find a horrible chat UX now
[22:34:23] <ljharb> buu: ok but you didn't share your code, you just shared how you think you can make it cleaner :-p
[22:35:01] <banana_> what do you mean by turing complete
[22:35:03] <blueagain> ljharb: I was asking myself the same question. but I'm a bit surprised how a "root cause" can be determined, and 30 minutes later it's still being looked after
[22:35:09] <buu> "Capture groups are ignored when using match() with the global /g flag:
[22:35:09] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:35:10] <banana_> or someone enlighten me
[22:35:20] <banana_> buu: yessir
[22:35:22] <buu> wat
[22:35:46] <ljharb> buu: yes, `match` sucks for global regexes. that's exactly why i made `matchAll`
[22:35:47] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[22:35:48] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[22:36:24] <buu> match sucks at most things =[
[22:36:34] <ljharb> matchAll is great tho
[22:36:37] <buu> banana_: if a language is turing complete you can code a solution to any problem in it, eventually
[22:37:26] <buu> ljharb: let matches = str.match(/regex/); if(matches) { something(matches[1]) } is ugly and lame and I'm tired of typing it
[22:37:38] <banana_> so when you say js is turing complete youre saing you can js code a solution to any problem?
[22:37:51] <ljharb> buu: what is `something` tho, and why is it a side effect
[22:37:57] <ljharb> banana_: yes, that's what turing complete means
[22:38:16] <buu> Well, any solvable problem =]
[22:38:19] *** Joins: pulse (~pulse@user/pulse)
[22:38:23] <ljharb> indeed
[22:38:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:38:34] <buu> ljharb: It's a side effect because all programs eventually have to produce side effects
[22:38:52] <ljharb> buu: sure but not in the middle of your string code :-)
[22:38:58] <ljharb> what are you actually doing here?
[22:39:16] <buu> ljharb: Doing literally anything with the match
[22:39:36] <buu> adding it to another string, storing it in a database, dispatching to a url handler
[22:39:49] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 240 seconds)
[22:39:50] <blueagain> doesn't turing complete mean being able to process a type 0 language in the chomsky hierarchy
[22:40:02] <blueagain> that's what I remember, at least, from uni
[22:40:23] <buu> That uh, doesn't sound right
[22:40:42] <ljharb> buu: ok but do you have something concrete?
[22:40:43] <buu> I don't think chomsky spoke much about computation
[22:41:39] <blueagain> type 0 can be recognised by a turing machine
[22:41:40] <buu> ljharb: let matches = item.match(/ISBN:\s*(\d+)/); if( matches) { book.isbn13 = matches[1] }
[22:41:59] <ljharb> buu: and you only want `isbn13` set if there's a match?
[22:42:03] <buu> yep
[22:42:20] *** Quits: clamiax (~clamiax@net-93-65-241-192.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[22:42:21] <buu> blueagain: oh. So it can.
[22:42:36] <buu> blueagain: Anyway, like I said, it's a shorthand
[22:42:58] <ljharb> buu: ok, then yeah you don't have a better option really. you could do `const [, isbn13] = item.match(regex) || [];` but you'd still need `if (isbn13) { book.isbn13 = isbn13; }`
[22:43:26] <ljharb> buu: since the prevailing patterns these days are more functional, the callback approach wouldn't really work with that since it'd *only* be usable for side effects
[22:43:27] <buu> ljharb: Yes also in the general case that would fail if isbn13 was false =/
[22:43:49] <ljharb> buu: sure, you could do `if (isbn13 != null)` if that's what you wanted
[22:44:04] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[22:44:06] <buu> ljharb: why not match(/(\d+)\+(\d+)/, ($1,$2) => $1+$2)
[22:44:08] <buu> Seems functional
[22:44:38] <ljharb> that would only work for one match - regexes can always match multiples
[22:44:56] <ljharb> and since matchAll, to an array, lets you do all those things, i doubt the committee would see the value
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:13] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:47:21] *** Joins: clamiax (~clamiax@net-109-116-207-237.cust.vodafonedsl.it)
[22:47:28] <buu> Gonna make my own committee
[22:48:52] <ljharb> have at it
[22:49:09] <buu> (With hookers. and blckjack)
[22:49:49] <buu> ljharb: why not match(/(\w+)/g, (...foo) => foo)
[22:50:02] <DPA> I wanted to propose creating JS++, but it already exists...
[22:50:16] <ljharb> buu: same reason. multiple invocations don't translate to returning a single value
[22:50:40] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[22:51:14] <buu> ljharb: What? Where are the multiple invocations
[22:51:45] <banana_> buu: .replace
[22:52:01] *** Joins: beencubed (~beencubed@209.131.238.248)
[22:52:43] <jaawerth> buu: doesn't nullish accessor/coalesc more or less solve taht for ou now?
[22:52:56] <ljharb> buu: a global regex can match multiple times
[22:53:05] <buu> ljharb: Right, that was my example
[22:53:18] <ljharb> buu: oh you're saying the callback gets invoked only once
[22:53:33] <jaawerth> the let meatches/if matches thing, I mean
[22:53:36] <buu> yeah
[22:53:39] <ljharb> hm
[22:53:43] <buu> jaawerth: er, how?
[22:54:28] <banana_> yeah nvm
[22:54:42] <jaawerth> oh I suppose your example is conditionally invoking something so you're not just annoye about access-null errors, nm
[22:54:46] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:56:29] <jaawerth> buu: wait, reading moar scrollback, why don't you like the Array.from approach?
[22:56:39] <jaawerth> I loe the optional mapper callback for Array.from
[22:56:43] <jaawerth> s/loe/love/
[22:56:52] *** Joins: cyberbanjo (~user@2607:fb90:42b7:213f:732e:306d:a6f3:7f1)
[22:56:52] <jaawerth> just too verbose?
[22:58:26] *** Joins: Akiva (~Akiva@user/Akiva)
[23:00:58] <buu> jaawerth: Yeah, and unclear
[23:01:24] *** Joins: crst (~crst@81-230-180-214-no2661.tbcn.telia.com)
[23:03:11] <crst> Hey! I'm too stupid to get my desired result combining list1 and list2. How can you do this, Array.reduce? https://jsfiddle.net/q0hm3xaw/
[23:03:11] *** Quits: D4mned (~D1mned@212.101.234.138) (Read error: Connection reset by peer)
[23:03:51] <DPA> I think in functional languages, they like to define parsers which take a string, return the matched token, and the rest of the string, or nothing. Then, if there was no match, they try the next token. If there was a match, they continue with the returned remainder. But I don't remember the exact pattern.
[23:03:54] *** Quits: bambanxx (~bambanx@2800:150:106:1061:d868:4584:b859:6bb) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:04:23] <jaawerth> buu: what's unclear about it? just that not everyone knows you can apss a callback to Array.from?
[23:04:46] *** Joins: D4mned (~D1mned@89.108.142.112)
[23:04:47] *** Joins: skylite (~skylite@46.107.44.214)
[23:05:05] <jaawerth> DPA: isn't that just standard (x, xs) style tail recursion?
[23:05:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:06:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:06:47] <DPA> Probably
[23:09:08] <jaawerth> reduce is somewhat of a flat/iterative abstraction for that, believe it or not
[23:10:20] <jaawerth> you can do the full-on head/tail thing via rest/spread if so desired, ofc
[23:10:49] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[23:13:37] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[23:14:08] *** Joins: benni (~benni@ipbcc2cd57.dynamic.kabel-deutschland.de)
[23:15:32] *** Quits: kakashiAL (~kakashi@105.156.4.88) (Ping timeout: 272 seconds)
[23:15:37] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:16:24] <Maxdamantus> It's not really tail recursion.
[23:16:36] <Maxdamantus> It's basically use of a `State` monad.
[23:16:59] <Maxdamantus> `xs` is the state and `x` is the emitted value.
[23:17:49] *** Joins: rpino (~textual@189.172.95.214)
[23:17:50] <Maxdamantus> type Parser t = String -> (t, String)
[23:18:20] <Maxdamantus> type State s t = s -> (t, s)
[23:18:26] <Maxdamantus> Same thing.
[23:18:38] <ljharb> buu: ok so it seems like the generic thing you want might be, "if a value is non-nullish, call a function and pass it as an argument"?
[23:18:40] <Maxdamantus> `Parser` is just `State String`
[23:20:24] <lf94> How do you test hooks
[23:20:33] <lf94> Mine is very, very small
[23:20:38] <skylite> how can I await for all promises that are inside an array of nested objects? like: [ { a: { x: [Promise] } }, { a: { y: [Promise] } },...] also as you see the key of the inner object that contains the promises can vary
[23:20:46] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:21:36] <Maxdamantus> skylite: for (const { a: { x } } of arr) await x;
[23:21:41] <lf94> https://gist.github.com/lf94/935ccf3f2b823196f3bcf9dca2d3114d
[23:22:08] <ljharb> skylite: using `Promise.all`, not a loop
[23:22:28] <skylite> I know I have to do Promise.all I just cant figure out how
[23:22:43] <ljharb> skylite: oh, well actually because the key changes you're kind of screwed for simplicity regardless
[23:22:47] <ljharb> skylite: why does the key change?
[23:23:03] <skylite> well it has to change because it represents different things
[23:23:03] <ljharb> skylite: or is the key's name statically available in the same object?
[23:23:09] <ljharb> skylite: that doesn't mean it has to hcange
[23:23:21] <ljharb> skylite: `{ type: 'this changes', value: promise }`
[23:23:29] <ljharb> skylite: you can always have a statically keyed data structure.
[23:24:06] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[23:24:07] <skylite> so I know the possible names of the keys if that's the question it's not THAT ranodm
[23:24:25] <ljharb> skylite: that helps, but it still should be static
[23:24:33] *** Quits: antsomers (~thiras@user/thiras) (Remote host closed the connection)
[23:24:54] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:25:35] *** Joins: rpino (~textual@189.172.95.214)
[23:25:55] *** Quits: imsky (~imsky@2603-7000-4902-2e00-dc1e-503b-703c-1c5c.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:25:59] *** Joins: antsomers (~thiras@user/thiras)
[23:26:18] <Maxdamantus> If you want to use `Promise.all` instead, you can do `await Promise.all(arr.map(({ a: { x } }) => x));`, adjusting for whatever different keys you're using, though it's probably going to be simpler just using a loop.
[23:26:33] <Maxdamantus> especially if there are multiple keys you need to wait for.
[23:26:51] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:26:56] <Maxdamantus> `Promise.all` is usually a bit cleaner if the promises don't already exist yet.
[23:27:07] <skylite> So the actual objects look something like this: [{id, type, relationships: {layout_items: [Promise]}, social_links: [Promise]}}, {id, type, relationsips: {webforms: [Promise]}}]
[23:27:26] *** Joins: kakashiAL (~kakashi@105.156.4.88)
[23:27:48] <skylite> So I know the list of all posible relationships but I don't know which object has which one
[23:28:35] <banana_> so relationships is dynamic
[23:28:48] <skylite> yes :/
[23:28:50] <Maxdamantus> Why are you actually waiting for them anyway? Are you intending on doing anything with the resolved values?
[23:29:44] <ljharb> skylite: also, the code that constructs the object shouldn't do that
[23:29:54] <ljharb> skylite: it shouldn't put a promise in an object, it should make a promise for the fully reified object
[23:30:10] <banana_> is there a static amount of `relationships` object keys
[23:30:15] <skylite> it's a recursive async function that produces these relationships (if they exist) I am fetching nested data from a jsonAPI
[23:31:28] <skylite> actually I was able to resolve this when I just used numbers as keys for the relationships but that's not good enough I have to know the name of the relationship
[23:32:08] <skylite> It's pretty messed up but I'm not in control of the backend :(
[23:33:14] <ljharb> skylite: the advice is the same
[23:33:21] <banana_> he's saying the relationships object's prop-values shouldn't be promises
[23:33:28] <ljharb> skylite: at each step, make sure you're returning a promise for a thing, instead of a thing holding promises
[23:33:41] <banana_> I just realized "should" has an L in it
[23:33:46] <sheetjs> is the modern advice to write code for ReadableStream or nodejs stream.Readable?
[23:34:27] <Maxdamantus> banana_: should it not?
[23:34:30] <skylite> I'll try
[23:35:06] <banana_> no it /shəd/ not
[23:35:37] <Maxdamantus> Usually in IPA that vowel should be the one represented by the upside-down omega.
[23:35:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:36:31] *** Quits: benni (~benni@ipbcc2cd57.dynamic.kabel-deutschland.de) (Quit: Client closed)
[23:36:56] <Maxdamantus> /ʃʊd/
[23:39:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[23:39:59] *** Quits: mohammad5305 (~mohammad@2.180.200.151) (Ping timeout: 256 seconds)
[23:40:10] <banana_> I thinking https://en.wikipedia.org/wiki/Near-close_near-back_rounded_vowel because it's a rounded close vowel the L clues you in that's it's a close vowel
[23:40:24] <banana_> or yea like I said before it's just english being inconsistent
[23:41:11] <banana_> L clues you in it's a close and rounded vowel*
[23:41:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:41:45] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[23:42:09] *** Joins: wand (~user@gateway/tor-sasl/wand)
[23:43:12] <banana_> could be the case
[23:44:25] <banana_> but no theory breaks down with "wood" and "would"
[23:44:25] *** Quits: salad (~cucumber@82.76.150.118) (Read error: Connection reset by peer)
[23:44:34] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:44:36] *** Joins: salad (~cucumber@82.76.150.118)
[23:44:47] <ljharb> those words aren't pronounced exactly the same
[23:44:55] <ljharb> just very close
[23:45:42] <banana_> "wood" and "would" ?
[23:45:52] <banana_> they're homophones as far as I can tell with IPA
[23:45:58] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:46:21] <banana_> https://en.wiktionary.org/wiki/would also lists "wood" as a homophone
[23:46:44] <ljharb> ¯\_(ツ)_/¯ to me they sound incredibly close - such that puns work - but not exactly the same in many dialects
[23:47:30] *** Joins: rpino (~textual@189.172.95.214)
[23:47:37] <banana_> I think your vowel pattern could present the word differently
[23:48:20] <ljharb> maybe i'm just hearing the context, i dunno
[23:48:30] <banana_> i.e. you can stress words in a sentence like you can stress vowels in a word
[23:48:48] <banana_> afaik anyways about vocal patterns
[23:48:56] <banana_> sorry meant vocal patterns not vowel patterns
[23:49:24] <banana_> Like when you say "this a piece of wood" people know what youre saying
[23:49:41] <ljharb> right that'd be the context
[23:50:28] <banana_> but like if you said "this is the word would" not sure if people could tell what you meant
[23:50:35] <banana_> yeah there's not enough context
[23:53:55] *** Quits: jruff (~jruff@c-67-167-60-147.hsd1.il.comcast.net) (Quit: Leaving)
[23:55:17] *** Joins: mohammad5305 (~mohammad@2.180.188.123)
[23:55:58] *** Quits: rpino (~textual@189.172.95.214) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
