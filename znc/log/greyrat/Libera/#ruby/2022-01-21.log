[00:04:55] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[00:06:31] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Remote host closed the connection)
[00:10:44] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[00:10:58] *** Joins: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67)
[00:14:12] <adam12> Hmm. I'm kind of surprised that a match in a case/in is hoisted out of the case statement....
[00:14:13] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Read error: Connection reset by peer)
[00:14:41] <adam12> I wonder if it's a dry-monads thing.
[00:15:40] <adam12> case 1; in Integer => y; end; p y
[00:16:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67) (Ping timeout: 268 seconds)
[00:19:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67)
[00:19:46] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[00:20:05] *** Quits: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67) (Remote host closed the connection)
[00:20:37] <adam12> I feel like docs don't show that all.
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:42] *** Quits: _ht (~quassel@2a02:a468:b619:1:4334:88f2:ba01:c6e) (Remote host closed the connection)
[00:38:29] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Quit: WeeChat 3.4)
[01:08:36] *** Joins: Vaevictus (~vae@user/vaevictus)
[01:09:26] <Vaevictus> i've got an array of objects... i need to hashify them based on a specific attribute ... what should i be looking for?
[01:10:18] <adam12> Hashify?
[01:11:33] <Vaevictus> i need to be able to search the array for the object that matches the attribute
[01:12:31] <adam12> [foo, bar, baz].find { |obj| obj.attribute == "the one" }
[01:12:39] <Vaevictus> no
[01:12:43] <adam12> Vaevictus: Show code.
[01:12:45] <Vaevictus> i'll be doing this thousands of times
[01:13:17] <Vaevictus> i need to iterate the array one time and use one of the object attributes as an index
[01:13:18] <adam12> You want some sort of index then?
[01:13:24] <Vaevictus> aye
[01:15:16] <adam12> Are you concerned about duplicate keys?
[01:16:35] <adam12> Simple solution: just build a Hash with the key being the attribute value, and the value being the object.
[01:21:25] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 240 seconds)
[01:30:17] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:41:57] *** Quits: infinityfye (~infinityf@102.47.59.10) (Ping timeout: 240 seconds)
[02:08:00] *** Quits: taupiqueur (~taupiqueu@126.144.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[02:34:06] <havenwood> Vaevictus: For example, if you have: [{aim: true}, {aim: false}, {aim: false}].to_h { [_1.fetch(:aim), _1] }
[02:34:20] <havenwood> #=> {true=>{:aim=>true}, false=>{:aim=>false}}
[02:34:31] <havenwood> Vaevictus: Does that duplicate key being squashed into one matter?
[02:35:11] <havenwood> If there won't be duplicates or it's find for duplicates to point to the first object, a little #to_h and block is all it takes.
[02:35:29] <havenwood> If there will be duplicates, you just have to decide what you want it to return. All matching objects? Just one?
[02:45:18] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[02:52:34] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:54:49] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[02:59:17] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2) (Ping timeout: 240 seconds)
[03:01:30] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:26:17] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[03:32:07] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[03:35:20] *** Joins: bluedust (~bluedust@117.241.183.103)
[03:35:43] *** Quits: devz3ro (devz3ro2@user/devz3ro) (Quit: *)
[03:36:27] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[03:38:37] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:40:01] *** Joins: devz3ro (~devz3ro@user/devz3ro)
[03:41:08] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[03:41:23] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[03:45:50] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:7a5a:42e1:750a:339f)
[03:45:59] *** Joins: graywolf (~wolf@user/graywolf)
[03:48:39] <ox1eef> ruby ruby ruby! 
[03:49:10] *** Quits: devz3ro (~devz3ro@user/devz3ro) (Quit: The Lounge - https://thelounge.chat)
[03:49:37] <leah2> da dah da dah dah dah
[03:49:48] <ox1eef> :)
[03:51:17] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.4)
[03:51:49] *** Joins: devz3ro (~devz3ro@user/devz3ro)
[03:59:02] *** Quits: devz3ro (~devz3ro@user/devz3ro) (Quit: The Lounge - https://thelounge.chat)
[03:59:26] *** Joins: devz3ro (~devz3ro@user/devz3ro)
[04:00:49] *** Parts: devz3ro (~devz3ro@user/devz3ro) ()
[04:06:08] *** Joins: devz3ro (~devz3ro@user/devz3ro)
[04:09:47] *** Joins: Rounin (~david@84.212.130.215)
[04:18:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:23:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:27] *** Joins: rubyruby (~rubyruby@2804:29b8:505a:f33d:fd47:1c4a:d11:2be0)
[04:25:42] *** Quits: rubyruby (~rubyruby@2804:29b8:505a:f33d:fd47:1c4a:d11:2be0) (Remote host closed the connection)
[04:26:56] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[04:31:36] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:33:39] *** Joins: constxd_ (~brad@142.167.170.88)
[05:00:25] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[05:00:53] *** Quits: bluedust (~bluedust@117.241.183.103) (Ping timeout: 256 seconds)
[05:16:11] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:20:17] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:22:48] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[05:26:28] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Remote host closed the connection)
[05:26:58] *** Joins: lunarkitty (uid501895@user/pyra)
[05:30:34] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[05:32:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[05:38:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:40:57] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[05:47:32] *** Quits: graemefawcett (55322ea766@2604:bf00:561:2000::2ab) (Ping timeout: 240 seconds)
[05:48:13] *** Joins: graemefawcett (55322ea766@2604:bf00:561:2000::2ab)
[05:49:31] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[05:50:00] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[05:51:41] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[05:51:48] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[05:55:56] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[05:55:56] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 250 seconds)
[06:03:38] *** Joins: hanzo (uid532183@user/hanzo)
[06:25:50] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Ping timeout: 250 seconds)
[06:42:14] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[06:46:51] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:47:51] *** Joins: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net)
[06:58:22] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[07:40:48] *** Quits: polishdub (~polishdub@ip72-208-203-185.ph.ph.cox.net) (Quit: leaving)
[07:51:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[07:55:32] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[07:56:40] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[08:04:37] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:7a5a:42e1:750a:339f) (Ping timeout: 240 seconds)
[08:14:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:15:30] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[08:16:08] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[08:42:28] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Read error: Connection reset by peer)
[08:42:50] *** Joins: bluedust (~bluedust@89.45.90.230)
[08:48:20] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[08:51:03] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[08:51:08] *** Quits: bluedust (~bluedust@89.45.90.230) (Ping timeout: 256 seconds)
[08:58:23] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[08:59:05] *** Joins: dviola (~diego@user/dviola)
[09:02:51] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[09:05:36] *** Quits: fcser (~fcser@booty.farted.net) (Ping timeout: 268 seconds)
[09:06:02] *** Joins: fcser (~fcser@booty.farted.net)
[09:18:43] *** Quits: tweaks (tweeeaks@user/tweeeaks) (Ping timeout: 250 seconds)
[09:19:15] *** Joins: tweaks (tweeeaks@user/tweeeaks)
[09:32:38] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[09:36:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[09:49:08] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[10:52:20] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[10:52:29] *** Joins: _ht (~quassel@82-168-34-160.fixed.kpn.net)
[10:59:00] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[10:59:47] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[11:18:55] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Remote host closed the connection)
[11:19:40] *** Joins: bluedust (~bluedust@103.160.233.171)
[12:06:37] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Ping timeout: 240 seconds)
[12:07:26] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:11:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:23:23] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:23:26] *** Joins: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com)
[12:23:47] *** Quits: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com) (Client Quit)
[12:27:29] *** Joins: infinityfye (~infinityf@102.47.59.10)
[12:28:23] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection timed out)
[12:29:04] *** Quits: infinityfye (~infinityf@102.47.59.10) (Client Quit)
[12:29:20] *** Joins: bluedust (~bluedust@103.160.233.171)
[12:31:32] *** Joins: constxd_ (~brad@142.167.170.88)
[12:33:45] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[12:34:08] <fdan> hi guys, i am new to ruby
[12:34:11] <fdan> i get this error https://bpa.st/4SNA
[12:34:21] <fdan> here is the gemfile https://bpa.st/PBAQ
[12:42:27] <jhass[m]> fdan: try bundle update google-protobuf
[12:44:58] <fdan> the build has been failing from a custom build tool
[12:45:06] <fdan> im trying to figure out how to edit the steps
[12:45:11] *** Quits: pandabot (~pandabot@user/leftylink/bot/pandabot) (Ping timeout: 250 seconds)
[12:45:50] *** Quits: benjaminwil (~benjaminw@benjaminwil.info) (Ping timeout: 252 seconds)
[12:46:15] <fdan> jhass[m] can i try changing the version in the gemfile?
[12:46:41] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[12:47:14] *** Quits: leftylink (~leftylink@user/leftylink) (Ping timeout: 260 seconds)
[12:47:16] <jhass[m]> bundle update google-protobuf would be the safe version of editing Gemfile.lock, those changes you can commit and retry the build tool
[12:48:33] *** Joins: leftylink (~leftylink@user/leftylink)
[12:48:36] *** Joins: benjaminwil (~benjaminw@benjaminwil.info)
[12:48:52] *** Joins: dstein64 (~dstein64@dannyadam.com)
[12:49:21] *** Joins: pandabot (~pandabot@user/leftylink/bot/pandabot)
[12:49:44] <fdan> ok i tried to do that in my terminal
[12:49:49] <fdan> i get this error Your Ruby version is 2.6.3, but your Gemfile specified 2.5.5
[12:50:56] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[12:53:51] <jhass[m]> ah, bummer. If you have docker lying around fastest might be to run it in there, something like docker run --rm  ruby:2.5 -v "$(pwd):/mnt" -w /mnt ruby:2.5 bundle update google-protobuf if memory serves well
[12:53:57] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:54:07] *** Joins: taupiqueur_ (~taupiqueu@91.196.204.77.rev.sfr.net)
[12:54:26] <jhass[m]> otherwise temporarily commenting the ruby line in Gemfile might be fair too
[12:55:11] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:58:05] <fdan> jhass[m] i get this error docker: Error response from daemon: OCI runtime create failed: container_linux.go:380: starting container process caused: exec: "-v": executable file not found in $PATH: unknown.
[12:58:47] <jhass[m]> Ah sorry, had an extra ruby:2.5 in there, remove the first one
[12:59:40] <fdan> hmm ok i get this now Your Ruby version is 2.5.9, but your Gemfile specified 2.5.5
[13:00:15] <fdan> docker run --rm  -v "$(pwd):/mnt" -w /mnt ruby:2.5.9 bundle update google-protobuf
[13:00:17] *** Quits: benjaminwil (~benjaminw@benjaminwil.info) (Ping timeout: 256 seconds)
[13:00:21] <fdan> should i change the docker run command to the above?
[13:00:57] *** Quits: leftylink (~leftylink@user/leftylink) (Ping timeout: 240 seconds)
[13:01:25] *** Quits: pandabot (~pandabot@user/leftylink/bot/pandabot) (Ping timeout: 256 seconds)
[13:01:44] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[13:01:48] *** Joins: benjaminwil (~benjaminw@benjaminwil.info)
[13:01:49] *** Joins: pandabot (~pandabot@user/leftylink/bot/pandabot)
[13:01:51] *** Joins: leftylink (~leftylink@user/leftylink)
[13:02:02] <jhass[m]> Not sure that's available, give it a shot!
[13:02:10] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[13:02:11] <jhass[m]> 2.5.5 not 2.5.9 of course
[13:02:17] <fdan> yeah sure
[13:04:18] *** Joins: dstein64 (~dstein64@dannyadam.com)
[13:04:47] <fdan> jhass[m] i get this https://bpa.st/5NFQ
[13:05:06] <jhass[m]> Looks promising, give it a minute
[13:05:22] <fdan> okay
[13:07:37] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[13:11:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:12:26] <fdan> its been like that since 5m now
[13:16:25] *** Joins: nebiros_ (nebiros@2600:3c03::f03c:91ff:fe7e:a08a)
[13:17:26] *** Quits: nebiros (~nebiros@user/nebiros) (Ping timeout: 245 seconds)
[13:18:56] <fdan> i think the container is up
[13:20:08] <fdan> jhass[m] what's next?
[13:20:29] <jhass[m]> Hum, okay it shouldn't get stuck on that...
[13:20:45] <fdan> i opened a new tab and did a docker ps
[13:20:51] <fdan> i see the container is up
[13:21:15] <jhass[m]> Normally it should be installing and updating gems after that and then exit on its own
[13:21:23] <fdan> hmm
[13:21:27] <fdan> so what can i do to fix this
[13:21:47] <jhass[m]> I'd kill it and try to throw an -i -t into the args list to see if it's somehow stuck on allocating a pty, but probably not
[13:22:59] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[13:23:44] <jhass[m]> If that does not help next up would be temporarily removing that silly ruby version restriction in the Gemfile (not Gemfile.lock), never understood why that's even a feature
[13:23:58] <fdan> yes that doesnt look like its helping
[13:24:31] <fdan> jhass[m] https://bpa.st/U4VA
[13:24:34] <fdan> this is my gemfile
[13:24:52] <fdan> which line needs to be removed
[13:25:02] <jhass[m]> Okay, throw a # in front of line 5 and retry the local bundle update google-protobuf
[13:27:26] <fdan> jhass[m] i get this https://bpa.st/EGLAccccccvcrruvdbvhubgljklufbglhfbduirjrlblgjvk
[13:27:30] <fdan> https://bpa.st/EGLA
[13:27:38] <fdan> sorry ignore the first link
[13:27:59] <fdan> sry i think its the same
[13:28:09] <fdan> the characters are because of my yubikey
[13:28:44] <jhass[m]> weird, why would it get stuck on this
[13:28:53] <fdan> hmm
[13:29:06] <jhass[m]> (it's trying to do network calls in case that's not obvious and rings a bell)
[13:29:26] <fdan> is there a -v flag to see more verbose
[13:29:49] <jhass[m]> you can try -V but not sure it'll really help here
[13:30:47] <fdan> jhass[m] https://bpa.st/BOBQ
[13:32:39] <jhass[m]> oh well, looks like whatever gembuilder.s3.amazonaws.com was in the first place no longer exists. rubygems.org doesn't seem to host the versions of the gems referenced from there, so I guess you have to consider the project dead, sorry
[13:33:43] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Ping timeout: 256 seconds)
[13:33:49] <fdan> i also get this message from the build pipeline https://bpa.st/5SVQ
[13:33:54] *** Quits: pandabot (~pandabot@user/leftylink/bot/pandabot) (Ping timeout: 256 seconds)
[13:33:58] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 250 seconds)
[13:34:17] *** Quits: leftylink (~leftylink@user/leftylink) (Ping timeout: 256 seconds)
[13:34:20] <jhass[m]> Yes, that's what we've been trying to achieve
[13:35:06] <jhass[m]> build pipeline probably just happens to still have the other gems cached or something
[13:35:06] <fdan> any other way to update the version
[13:35:30] <fdan> hmm
[13:35:47] <jhass[m]> Guess you can try to ninja Gemfile.lock after all, but honestly this all looks terribly maintained so not sure it's all worth the effort
[13:38:37] *** Quits: benjaminwil (~benjaminw@benjaminwil.info) (Ping timeout: 240 seconds)
[13:44:15] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[13:44:22] *** Joins: Thanzex8 (~Thanzex@37.103.212.236)
[13:44:32] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:44:57] *** Quits: taupiqueur_ (~taupiqueu@91.196.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[13:46:09] *** Joins: bluedust_ (~bluedust@117.241.176.36)
[13:47:37] *** Quits: bluedust (~bluedust@103.160.233.171) (Ping timeout: 240 seconds)
[13:52:13] *** Joins: benjaminwil (~benjaminw@benjaminwil.info)
[13:55:47] *** Joins: leftylink (~leftylink@user/leftylink)
[13:55:49] *** Joins: dstein64 (~dstein64@dannyadam.com)
[13:59:08] *** Joins: pandabot (~pandabot@user/leftylink/bot/pandabot)
[14:16:47] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.6)
[14:19:06] *** Joins: taupiqueur_ (~taupiqueu@236.196.204.77.rev.sfr.net)
[14:19:54] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[14:36:37] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[14:42:33] *** Joins: infinityfye (~infinityf@102.47.59.10)
[14:46:43] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:55:29] *** Joins: cdown (~cdown@163.114.131.1)
[14:58:46] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:05:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:06:34] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:06:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:08:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:12:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Read error: Connection reset by peer)
[15:13:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:16:42] *** Quits: infinityfye (~infinityf@102.47.59.10) (Remote host closed the connection)
[15:17:08] *** Joins: infinityfye (~infinityf@102.47.59.10)
[15:19:48] *** Joins: fef (~thedawn@user/thedawn)
[15:20:31] *** Joins: TomyWork (~TomyLobo@p200300e80f0067000d65dce87c2c82c9.dip0.t-ipconnect.de)
[15:23:51] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[15:43:56] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[15:54:58] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[16:03:53] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[16:04:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:07:38] *** Joins: TCZ (~tcz@91.150.178.124)
[16:10:14] *** Joins: bluedust (~bluedust@103.160.194.145)
[16:13:17] *** Quits: bluedust_ (~bluedust@117.241.176.36) (Ping timeout: 240 seconds)
[16:26:22] *** Quits: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net) (Remote host closed the connection)
[16:26:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[16:29:10] *** Quits: Thanzex8 (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[16:29:28] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[16:34:08] *** Quits: nebiros_ (nebiros@2600:3c03::f03c:91ff:fe7e:a08a) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:34:23] *** Joins: nebiros (nebiros@2600:3c03::f03c:91ff:fe7e:a08a)
[16:34:23] *** Quits: nebiros (nebiros@2600:3c03::f03c:91ff:fe7e:a08a) (Changing host)
[16:34:23] *** Joins: nebiros (nebiros@user/nebiros)
[16:35:07] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:43:51] *** Joins: _aeris_ (~aeris@user/aeris)
[16:44:47] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[16:45:11] *** _aeris_ is now known as aeris
[16:50:41] *** Joins: fruity (~fruity@178.197.205.33)
[16:50:42] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Read error: Connection reset by peer)
[16:50:43] *** Quits: fruity (~fruity@178.197.205.33) (Client Quit)
[16:50:59] *** Joins: LazyDev123 (~LazyDev12@178.197.205.33)
[16:56:15] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[17:02:28] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[17:05:17] *** Quits: infinityfye (~infinityf@102.47.59.10) (Ping timeout: 240 seconds)
[17:06:02] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.6) (Ping timeout: 240 seconds)
[17:08:44] *** Quits: LazyDev123 (~LazyDev12@178.197.205.33) (Quit: Client closed)
[17:14:02] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-12.mobile.abo.orange.fr)
[17:14:02] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Read error: Connection reset by peer)
[17:19:35] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[17:24:40] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[17:35:26] *** Joins: bluedust_ (~bluedust@89.45.90.110)
[17:38:17] *** Quits: bluedust (~bluedust@103.160.194.145) (Ping timeout: 240 seconds)
[17:39:55] <fdan> why is edititng the Gemfile.lock not a good idea?
[17:45:45] <Vaevictus> sorry, adam12 / havenwood ... i had to run and get my kids from the bus as you were helping me yesterday.  the index attribute is a unique value, at least in theory, and we can go along that.
[17:52:12] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[17:56:17] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[17:58:28] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Quit: Client closed)
[18:01:22] <adam12> Vaevictus: The naive answer would be to just generate a Hash with the attribute as the key and the object as the value.
[18:01:53] <adam12> Vaevictus: I _believe_ Ruby Hashes are O(1) so it should be fast for lookups.
[18:03:44] <Vaevictus> gotcha... is there a pretty directive to accomplish that, or just iterate the array push the key/object into the hash?
[18:05:05] <adam12> I normally do each_with_object or reduce, but if you're on a newer version of Ruby, Array#to_h takes a block. so it would be as simple as array.to_h { |item| [item.attribute, item] }
[18:05:24] <jhass[m]> fdan: just very easy to destroy it as part of the process, not updating all places that need to be or doing one too many, putting in an invalid dependency tree resolution etc
[18:05:44] <Vaevictus> this project is ruby 3.0
[18:05:53] <adam12> Vaevictus: Should be fine then, afaik.
[18:06:53] <Vaevictus> cool, thanks.  i was looking at reduce initially but not quite figuring that out.  I'm a bit dense, haven't used ruby since 1.2 or something :D
[18:07:29] <adam12> If you think you need reduce, I'd reach for each_with_object before it. They are similar, but I find each_with_object easier to reason about mentally.
[18:07:54] <adam12> With reduce, you need to return the memo object (IIRC) and each_with_object has that hidden away from you.
[18:07:59] <jhass[m]> yeah, ton's of inject/reduce abuse in the wild
[18:08:15] * adam12 reduces jhass[m] into {}s
[18:08:29] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:08:39] <jhass[m]> :(
[18:08:45] <adam12> jhass[m]: Happy Friday!
[18:09:01] <jhass[m]> Indeed, happy it's weekend already, am I right?!
[18:09:34] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:16:42] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:17:08] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:19:35] <adam12> jhass[m]: You win!
[18:20:23] <jhass[m]> Yay!
[18:20:29] <jhass[m]> let's create an NFT for this moment
[18:21:42] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-12.mobile.abo.orange.fr) (Ping timeout: 250 seconds)
[18:23:53] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:23:56] <adam12> jhass_ape.gif
[18:24:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:27:26] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[18:28:17] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.4)
[18:40:16] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:40:48] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Read error: Connection reset by peer)
[18:47:25] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[18:48:04] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Client Quit)
[18:56:26] *** Joins: croberts (~quassel@nat-pool-232-132.redhat.com)
[18:58:39] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[18:59:02] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[19:00:34] <croberts> I was looking at the OPENSSL::X509::Certificate class and was curious if you have a subject like this Subject: O=Default_Organization, CN=57b26ce3-e4fe-4f79-a377-2c4d9dea5204
[19:00:44] <croberts> is there a way to grab just the CN= out of it without regex?
[19:01:03] <croberts> i checked the docs but just saw subject and not a cn method
[19:03:36] <John_Ivan_> hi, is there any way to get the entries of a directory's in fullpath mode?
[19:04:12] <John_Ivan_> looking inside the Dir object, there's nothing of the sort. but File contains File.realpath(). so my actual question is - how can I make Dir return an array of Files ?
[19:04:17] <John_Ivan_> File objects*
[19:04:50] <John_Ivan_> or to just print out the full absolute path instead of entry name.
[19:05:03] <adam12> John_Ivan_: Can you get what you want via Pathname?
[19:05:37] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:05:46] <John_Ivan_> adam12, let me try.
[19:06:55] <John_Ivan_> adam12, yes. that works, it's perfect. how does that work? O_O
[19:07:07] <John_Ivan_> it takes a string and it can retrieve it's absolute path.... based on what?
[19:07:15] <John_Ivan_> the last call made to enumerate a dir or?
[19:07:32] <jhass[m]> croberts: iirc openssl has no API for it and the format there is more of a convention than a standard. But should be simple enough to parse with a .split(", ").to_h {|item| item.split("=") }
[19:07:44] <adam12> John_Ivan_: I'd have to see code since I'm not sure what you see.
[19:08:07] <John_Ivan_> adam12, actually no. my bad. I'm getting a weird path prefix. I'm getting C:\User\Me
[19:08:15] <adam12> John_Ivan_: But ultimately, I consider Pathname above Dir and File in terms of higher-order functionality.
[19:08:16] <John_Ivan_> that's not where the actual file is located in.
[19:08:29] <micah> is there a way I can tell `gem install` to use the pre-built binary version, rather than compile it manually
[19:08:34] <adam12> John_Ivan_: If you're globbing, you might need to glob a full path and not relative.
[19:08:49] <adam12> micah: It should, if it's available.
[19:09:07] <micah> adam12: you mean it should by default?
[19:09:10] <adam12> micah: Yes.
[19:09:16] <adam12> micah: what gem and what platform?
[19:09:20] <micah> adam12: hm, it seems its building libv8
[19:09:27] <micah> adam12: i've set x86_64-linux
[19:10:06] <micah> Installing libv8-node 15.14.0.1 with native extensions
[19:10:17] <John_Ivan_> adam12, let's start from step 1 again. think I might've messed things up completely. so I have a full path. "D:\mydata\direktory". I need to enumerate all **directories** inside direktory but in the form of "D:\mydata\direktory\fileA.ext", "D:\mydata\direktory\fileB.ext" etc.
[19:10:20] <micah> (using bundle install -j $(nproc) --path vendor "${FLAGS[@]}")
[19:11:00] <croberts> jhass[m]: thank you sir
[19:12:05] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[19:12:51] <adam12> John_Ivan_: So you want all _files_ inside all _directories_ inside that parent directory?
[19:13:18] <John_Ivan_> adam12, no. just the toplevel directories inside "direktory" in fullpath form.
[19:14:30] <John_Ivan_> and yes, I know I can just append the path I pass over to Dir then concatenate that with the results returned from it, but isn't there like, Dir.entries("path", Mode::FullPath) ?
[19:15:49] <adam12> John_Ivan_: Pathname("D:\mydata\direktory").each_child { |path| p path }
[19:18:17] <adam12> micah: What version of Ruby? What version of `gem`?
[19:18:30] <adam12> micah: Also `uname -a`?
[19:19:00] <John_Ivan_> adam12, that solves it. thanks. I'll keep pathname in mind :)
[19:19:15] <adam12> John_Ivan_: cheers.
[19:19:33] <John_Ivan_> no. thank you :)
[19:19:43] <adam12> micah: I just realized you're using bundler. Which version of bundler? There were some improvements around this lately.
[19:19:53] <micah> adam12: 2.5, bundler 2.2.33, and on a debian buster machine
[19:20:29] <micah> although I think i'll update to debian bullseye, and bundler 2.3.3
[19:25:38] <jhass[m]> mmh, debian package supplied bundler & rubygems? I would trust them to patch out stuff like using prebuilt binaries 🤣
[19:27:00] <adam12> LOL
[19:28:46] <croberts> jhass[m]: I tried to use the split but it comes back with it saying unknown method https://paste.centos.org/view/a6643717 am i using it in the wrong spot?
[19:29:23] <jhass[m]> Ah, I guess you need to to_s or something first
[19:29:29] <croberts> oh ok
[19:30:14] <jhass[m]> croberts: though Name#to_a also looks interesting, give that a call
[19:31:27] <croberts> ok i'll play around with it, after doing to_s i got ArgumentError: wrong array length at 0 (expected 2, was 3) so will keep at it
[19:31:30] <croberts> will check out name too
[19:32:22] <jhass[m]> ?pry
[19:32:28] * jhass[m] kicks the bot
[19:33:03] <jhass[m]> ?pry
[19:33:06] *** Joins: ruby[bot] (bot@about/ruby/bot)
[19:33:06] *** ChanServ sets mode: +o ruby[bot]
[19:33:11] *** Quits: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[19:34:14] <jhass[m]> ?pry
[19:34:15] <ruby[bot]> Pry, the better IRB, provides easy object inspection `ls`, `history`, viewing docs `?`, viewing source `$`, syntax highlighting and other features (see `help` for more). Put `binding.pry` in your source code for easy debugging. Install Pry (http://pry.github.io/): gem install pry pry-doc
[19:34:32] <jhass[m]> croberts: ^ check this out, good for playing around :) 
[19:34:38] <croberts> ok ty
[19:44:08] *** Joins: reset (~reset@user/reset)
[19:52:50] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[19:54:38] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[20:02:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[20:06:54] *** justJustache is now known as justache
[20:22:37] <ox1eef> Not sure I would still call Pry the "better IRB". Have you used IRB recently? it is catching up with Pry, if not over taking it.
[20:23:30] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:27:23] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 256 seconds)
[20:27:38] <havenwood> ox1eef: "Pry, the inspiration for modern IRB"
[20:28:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[20:29:53] <havenwood> ox1eef: Here's a fun one Pry is still better at: :xxxxxxxxx; Symbol.all_symbols.grep(/xx/)
[20:30:01] <havenwood> Check results in Pry and IRB. :)
[20:31:04] <havenwood> Now we have ruby/debug too.
[20:31:57] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:38:14] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Remote host closed the connection)
[20:38:56] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[20:39:30] *** Joins: dstein64 (~dstein64@dannyadam.com)
[20:39:57] *** Quits: taupiqueur_ (~taupiqueu@236.196.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[20:46:15] <adam12> debug is so nice.
[20:46:25] <adam12> I can't believe it took so long to get a better one.
[20:46:48] <adam12> I guess everyone was happy wth byebug. I rarely used it.
[20:46:52] <adam12> Tho I use debug constantly.
[20:47:32] <rapha> can you replace the contents of a capture with themselves .downcase?
[20:47:51] <rapha> wait, that's a badly posed question
[20:48:24] <rapha> better: what's the most foolproof way of downcasing any character immediately following a specific list of characters?
[20:49:12] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Remote host closed the connection)
[20:49:29] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[20:49:32] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[20:59:20] <adam12> gsub with block? Maybe some code would help explain a bit better what you want to do.
[21:04:58] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[21:05:11] *** Joins: taupiqueur (~taupiqueu@236.196.204.77.rev.sfr.net)
[21:09:35] *** Quits: taupiqueur (~taupiqueu@236.196.204.77.rev.sfr.net) (Remote host closed the connection)
[21:09:47] <ox1eef> havenwood: +1
[21:10:37] *** Quits: miah (~miah@173.255.215.56) (Ping timeout: 265 seconds)
[21:10:55] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:15:33] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:28:25] *** Joins: teocle (~t@hex.plasm.in)
[21:29:20] <rapha> adam12: rn i'm (lastc=''; str.chars.map{|c| c.downcase! if lastc.match?(/[ʿʾ]/); lastc=c}.join)'ing
[21:29:52] *** Joins: constxd (~brad@192.75.101.164)
[21:31:59] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[21:32:09] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[21:35:30] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.4) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[21:44:15] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:47:20] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.156)
[21:47:57] <havenwood> rapha: preceeding = 'LOL'; 'OMGWTFBBQLOLCOPTERLOLLIGAG'.gsub(/(?<=#{preceeding})(.)/, &:downcase)
[21:48:27] *** Joins: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[21:48:46] <havenwood> rapha: str.gsub(/(?<=#{specific_chars})(.)/, &:downcase)
[21:49:04] <havenwood> rapha: If you mean a union of chars, you can do that regexp for `specific_chars`.
[21:49:32] <havenwood> >> preceeding = 'LOL'; 'OMGWTFBBQLOLCOPTERLOLLIGAG'.gsub(/(?<=#{preceeding})(.)/, &:downcase)
[21:49:32] <ruby[bot]> havenwood: I'm terribly sorry, I could not evaluate your code because of an error: JSON::ParserError:A JSON text must at least contain two octets!
[21:49:44] <havenwood> #=> "OMGWTFBBQLOLcOPTERLOLlIGAG"
[21:49:57] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 240 seconds)
[21:50:52] <havenwood> ruby[bot]: Showing example input and the output you want would be best, if that ^ doesn't make sense for your case?
[21:51:00] <havenwood> rapha: ^
[21:51:06] * havenwood talks to ruby[bot] 
[21:51:49] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.156) (Ping timeout: 256 seconds)
[21:52:54] *** Joins: John_Ivan__ (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[21:53:14] <adam12> havenwood: Happy Friday!
[21:54:49] <adam12> I'd love to figure out why ruby[bot] won't talk to carc.in anymore.
[21:54:59] <adam12> Maybe I'll run my own ruby[bot] on the weekend to look.
[21:55:14] *** Quits: John_Ivan__ (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[21:55:31] *** Joins: John_Ivan__ (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[21:55:47] *** Quits: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 256 seconds)
[22:04:51] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[22:13:30] <mooff> ah, ruby[bot] is still bust
[22:14:13] <mooff> well, i was wondering about the class/module scope difference between instance_eval(str) and instance_eval(&blk)
[22:18:58] *** Joins: ruby[moo] (~ruby@cyberspace.baby)
[22:20:34] <mooff> ] [ instance_eval { class Foo; end }, instance_eval "class Bar; end" ]
[22:23:27] <mooff> ] [ instance_eval { class Foo; end }, instance_eval "class Bar; end" ]
[22:23:27] <ruby[moo]> Fuck, SyntaxError: (eval):1: syntax error, unexpected string literal, expecting `do' or '{' or '('
[22:23:27] <ruby[moo]> ...ass Foo; end }, instance_eval "class Bar; end" ]
[22:23:34] <mooff> ] [ instance_eval { class Foo; end }, instance_eval("class Bar; end") ]
[22:23:35] <ruby[moo]> Array (2): [nil, nil]
[22:23:47] <mooff> ] [ instance_eval { class Foo; end; Foo }, instance_eval("class Bar; end; Bar") ]
[22:23:48] <ruby[moo]> Array (2): [OperBot::Foo, #<Class:0x00007fae44fc68a0>::Bar]
[22:24:52] <mooff> the former makes constants in the scope of where the eval implementation is defined.. (good)
[22:25:06] <mooff> the latter makes constants in the scope of some anonymous class.. (huh??)
[22:28:30] <mooff> heh.. please pardon my foul exception reporting :)
[22:29:09] <adam12> lol
[22:30:39] *** Quits: TomyWork (~TomyLobo@p200300e80f0067000d65dce87c2c82c9.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:34:50] *** Quits: bluedust_ (~bluedust@89.45.90.110) (Remote host closed the connection)
[22:35:13] *** Joins: bluedust (~bluedust@89.45.90.110)
[22:35:19] *** Quits: bluedust (~bluedust@89.45.90.110) (Remote host closed the connection)
[22:36:52] <mooff> instance_eval with a string goes to this C function:
[22:36:56] <mooff> `cat snippet.c`.highlight 'c'
[22:36:56] <ruby[moo]> 15/* string eval under the class/module context */
[22:36:57] <ruby[moo]> 02static15 VALUE
[22:36:57] <ruby[moo]> 07eval_under(VALUE15 self,15 10int15 singleton,15 VALUE15 src,15 VALUE15 file,15 10int15 line)
[22:36:57] <ruby[moo]> {
[22:36:57] <ruby[moo]> 15    rb_cref_t15 *cref15 =15 vm_cref_push(GET_EC(),15 self,15 10NULL,15 FALSE,15 singleton);
[22:36:57] <ruby[moo]> 15    SafeStringValue(src);
[22:36:58] <ruby[moo]> 15    02return15 eval_string_with_cref(self,15 src,15 cref,15 file,15 line);
[22:36:58] <ruby[moo]> }
[22:38:56] <mooff> so i find *why* there's a difference interesting, plus the fact that it's not documented
[22:39:11] <mooff> can't find anything about it on Google
[22:39:40] <mooff> but i found a solution for my immediate problem
[22:40:52] <mooff> which is to use Binding#eval with a binding from the correct class context
[22:41:14] <mooff> ] method(:fresh_eval_scope).source.highlight
[22:41:14] <ruby[moo]> String (99)
[22:41:14] <ruby[moo]>   02private 02def 07fresh_eval_scope evt
[22:41:14] <ruby[moo]>     target, msg = evt.args
[22:41:14] <ruby[moo]>     10binding
[22:41:14] <ruby[moo]>   02end
[22:41:58] <mooff> ] fresh_eval_scope(evt).eval "class HelloWorld; end"; HelloWorld.new
[22:41:58] <ruby[moo]> OperBot::HelloWorld: #<OperBot::HelloWorld:0x00007fae44928fe8>
[22:42:22] <mooff> woo!
[22:42:44] *** Joins: goldfish (~goldfish@user/goldfish)
[22:45:13] *** Quits: ruby[moo] (~ruby@cyberspace.baby) (Quit: Thanks, rubber duck)
[22:54:43] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 256 seconds)
[22:58:23] <rapha> havenwood: i got very confused when you talked to the bot. apart from that, yes, that's it, but i'm very amazed by your code and will be starting at it for the next 2 to 3 days. thank you! :D
[23:31:48] *** Quits: yosafbridge` (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[23:33:26] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[23:47:50] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[23:48:32] <micah> adam12: i tried with a newer bundler, and same results :()
[23:53:25] <adam12> micah: Maybe worth raising a bug report on rubygems repo. I'd see if you could install nokogiri with similar results.
[23:54:09] <Vaevictus> can you have two entirely different qrcodes generate the exact same binary data?  anyone?
[23:54:24] <Vaevictus> error correction aside?
[23:57:06] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
