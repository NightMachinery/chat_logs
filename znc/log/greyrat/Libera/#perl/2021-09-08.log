[00:05:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[00:08:40] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[00:09:41] <haj> Oh my... LeoNerd's example "my $len = sqrt( $x * $x + $y * $y );" triggers some memory...  At the university, we found that this formula is getting rather inaccurate if $x is *much* larger than $y.  We had to resort to a Taylor expansion to get an accurate $len.  That'd be quite a challenge for MULTIMATH :)
[00:10:58] <mst> haj: fucking gloats
[00:11:01] <mst> floats
[00:11:02] <mst> bah
[00:11:25] <Grinnz> i figured gloats were just some term for the next size of floats
[00:11:31] <mst> bahahahahaha
[00:12:12] <asdflkj_sh> meh, that should be 'bloats'
[00:12:14] <Grinnz> the annoying part is that sqrt requires floating point math
[00:12:21] <Grinnz> you can't just throw bigrat at it
[00:12:31] <Altreus> gloatware
[00:12:40] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 260 seconds)
[00:13:26] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:13:29] <asdflkj_sh> Altreus: that's what apple hardware is, especially the most expensive apple watches and beats
[00:14:00] <Altreus> heh, seems accurate
[00:18:34] <ether> sigh, dealing with folks on #dbix-class who think utf8::is_utf8 is going to help them
[00:22:45] <haj> Grinnz: bigrat and Taylor expansions are a perfect match.  It just ... takes ... a ... little ... patience ... until ... results ... are ... available
[00:22:51] <Grinnz> :)
[00:23:45] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Quit: SureVoIP: http://www.surevoip.co.uk)
[00:30:54] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[00:35:08] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Read error: Connection reset by peer)
[00:42:03] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[00:49:29] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:52:10] * GumbyPAN CPAN Upload: LaTeXML-0.8.6_1 by BRMILLER https://metacpan.org/release/BRMILLER/LaTeXML-0.8.6_1
[00:55:04] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[00:58:56] *** Joins: Manderson (~manderson@45.40.80.170)
[01:00:58] *** Joins: GEttR (~GEttR@user/gettr)
[01:01:11] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[01:01:42] <mjgardner> New blog post on lightweight OO modules: https://phoenixtrap.com/2021/09/07/cutting-the-fat-lightweight-perl-oo/
[01:01:44] <Paperbot_> Link title(s): [ Cutting the fat: Lightweight Perl OO modules - The Phoenix Trap ]
[01:02:11] * GumbyPAN CPAN Upload: DNS-NIOS-0.005 by SSMN https://metacpan.org/release/SSMN/DNS-NIOS-0.005
[01:08:48] <xq> mjgardner: nice post, a couple comments: 1) Moo belongs in that list too as it's fairly lightweight 2) Moo will use Class::XSAccessor if it is installed, for significant speedup 3) One of the crucial differences between these light OOP systems is whether or not they have weak referece accessor support, so it might be helpful to add that info 
[01:08:57] <xq> mjgardner++ # we need more perl blogs
[01:09:59] <mjgardner> I confess I haven’t done much work which cared whether references are weak or not.
[01:10:08] <xq> (about #3: Moo supports them, Class::Tiny does not, and no idea about the others)
[01:12:36] <xq> mjgardner: weak references are crucial if you have member objects that would like to have access to parent
[01:13:17] <xq> without weak references such structure will not automatically destruct nicely because there is a circular reference (prent holds a ref to member, member holds a ref to parent)
[01:13:27] <Grinnz> Mojo::Base is an interesting case where it's like Class::Tiny (well, Class::Tiny::Chained) but also has weak ref features because they're important to mojo
[01:13:55] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[01:15:25] <mst> xq: Mu::Tiny doesn't but I might add it at some point
[01:15:48] <mst> xq: Mojo::Base supports weak references - I wrote the code that implements it - not sure if Object::Tiny ever copied the feature
[01:15:52] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 252 seconds)
[01:16:02] <mst> that was funny earlier today
[01:16:33] * mst needed a weak reference in a mojo codebase, was thinking "aw crap I'm going to have to add Moo aren't I" then realised that, nope, I already implemented that a while back, all good
[01:29:47] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[01:30:19] *** Quits: magla (~gelignite@55d44c2f.access.ecotel.net) (Quit: Stay safe!)
[01:31:31] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[01:32:04] *** Joins: LSD (~LSD@2.lsd.systems)
[01:36:47] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[01:42:33] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:43:30] *** Joins: YaoNai (~YaoNai@user/yaonai)
[01:44:18] *** Joins: diskin (~diskin@87.117.49.178)
[01:45:38] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[01:47:02] <ether> I'd totally forgotten about Class::Struct. it's only in core to support IPC::SysV, so there's no guarantee it will stick around, and it being in core doesn't mean it's recommended
[01:47:32] <simcop2387> alright, short announcement.  Perlbot and perl.bot will go down the weekend of September 25th, They should be back up fairly quickly but might be a day or so while i'm moving things again to my new apartment.  Likely won't have the time to put them elsewhere in the mean time so I don't think I'll bother.
[01:47:49] <ether> if Moo was too heavy, I'd use Class::Tiny, or nothing at all
[01:48:41] <simcop2387> it's a short move, about 3-4 miles so it's not worth that much effort
[01:51:48] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[01:52:16] * GumbyPAN CPAN Upload: Data-MoneyCurrency-0.19 by EDF https://metacpan.org/release/EDF/Data-MoneyCurrency-0.19
[01:53:23] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[01:53:41] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[01:56:14] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:56:58] *** Joins: proller (~p@80.240.216.69)
[01:57:41] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[01:58:32] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[01:58:50] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[01:59:51] <Grinnz> ether: Class::Struct is also used for Time::tm, User::pwent, User::grent, Net::hostent, Net::servent, Net::netent, Net::protoent... which of course is all stuff nobody knows about and thus nobody uses, and File::stat which people actually do use
[02:01:46] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[02:01:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:02:33] <Grinnz> Struct::Dumb is a better struct if that's what you want of course
[02:03:39] <LeoNerd> Or  Object::Pad + the :Struct class attr
[02:04:01] <xenu> or vec() (just kidding)
[02:06:17] <LeoNerd> Hah... what? How would that work?
[02:06:55] <Grinnz> insert the values directly into a C structure
[02:07:34] <LeoNerd> That's probably more work than even just using an array
[02:07:42] <Grinnz> absolutely is
[02:07:48] <xenu> but it's more compact!
[02:08:49] <LeoNerd> I actually did that once
[02:09:12] <LeoNerd> I had a perl process on a 32bit machine, which had over 1GiB of data in a single hash
[02:09:45] <LeoNerd> I couldn't make an array per item, so I stored just a string and used pack/unpack to manipulate 3 fields in it
[02:10:13] <LeoNerd> Otherwise it would try to use more RAM than a single 32bit process is allwoed
[02:14:25] *** Joins: proller (~p@80.240.216.69)
[02:15:00] <xenu> fun fact: according to gcc and clang developers C standard interpretation, it's UB to have objects larger than PTRDIFF_MAX
[02:15:21] <xenu> ptrdiff_t is signed, so the max string size on 32-bit platform is ~2GB
[02:16:05] <xenu> platforms*
[02:16:19] * GumbyPAN CPAN Upload: Test-Mock-LWP-Distilled-0.001_01 by SKINGTON https://metacpan.org/release/SKINGTON/Test-Mock-LWP-Distilled-0.001_01
[02:20:58] <Grinnz> https://twitter.com/sw17ch/status/1435352981679996929
[02:20:58] <Paperbot_> John VanEnk (@sw17ch) 27m45s ago: The primary value I get from all the C minutia I know is terrorizing my friends with facts.
[02:22:45] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[02:22:45] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[02:23:24] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[02:23:37] *** Quits: sevvie (~sevvie@vps-6df5f188.vps.ovh.net) (Ping timeout: 252 seconds)
[02:23:50] *** Joins: sevvie (~sevvie@vps-6df5f188.vps.ovh.net)
[02:24:32] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:26:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:27:20] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:27:47] <mjgardner> https://www.reddit.com/r/programming/comments/pjnt5y/cutting_the_fat_lightweight_perl_oo_modules/hbz2s4i/?utm_source=share&utm_medium=ios_app&utm_name=iossmf&context=3
[02:27:47] <mjgardner> Someone on r/programming would like to go back to 1998.
[02:27:48] <Paperbot_> Link title(s): [ Cutting the fat: Lightweight Perl OO modules : programming ]
[02:30:25] <Grinnz> lol
[02:30:36] <Grinnz> i bet that guy would love the Moose overhead
[02:30:36] *** Joins: Joel (~jjshoe@user/joel)
[02:36:21] * GumbyPAN CPAN Upload: Test-Mock-LWP-Distilled-JSON-0.001_01 by SKINGTON https://metacpan.org/release/SKINGTON/Test-Mock-LWP-Distilled-JSON-0.001_01
[02:52:46] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:52:47] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[02:53:19] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[02:54:25] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:3177:ae04:5861:103b) (Ping timeout: 252 seconds)
[02:55:54] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:56:13] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:02:42] *** Joins: proller (~p@2a02:6b8:b081:1229::1:11)
[03:04:42] <gordonfish> Hmmmmm..
[03:04:45] <gordonfish> sweval: join ' ', map sprintf('%02X', ord), split //, pack D => 3.14159;
[03:04:46] <perlbot> gordonfish: 00 70 33 DC 80 CF 0F C9 00 40 00 00 00 00 00 00
[03:04:56] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:04:58] <perlbot> gordonfish: 1D 72 33 DC 80 CF 0F C9 00 40 E7 5A FC 55 00 00 
[03:06:59] <gordonfish> I'm curious as to why these don't match, while non-long doubles do:
[03:07:04] <gordonfish> sweval: join ' ', map sprintf('%02X', ord), split //, pack d => 3.14159;
[03:07:05] <perlbot> gordonfish: 6E 86 1B F0 F9 21 09 40
[03:07:10] *** Joins: whynot (~whynot@37.73.94.95)
[03:07:11] <gordonfish> basheval: c 'double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:07:13] <perlbot> gordonfish: 6E 86 1B F0 F9 21 09 40 
[03:07:20] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:8ce1:c48d:4442:203d)
[03:07:55] <Grinnz> difference in precision of the constant between c and perl maybe?
[03:08:25] <simcop2387> 1basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%08b ", *(((unsigned char*)&x)+i) ); }'
[03:08:29] <simcop2387> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%08b ", *(((unsigned char*)&x)+i) ); }'
[03:08:31] <perlbot> simcop2387: %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b %08b 
[03:08:34] <simcop2387> bah
[03:08:49] <simcop2387> i'm not looking that up.  i'm wondering if there's a stupid padding issue
[03:09:22] <simcop2387> no there shouldn't be fo rthat.  i'm brain dead right now
[03:09:53] <simcop2387> i think i'm going to lay down
[03:21:40] *** Quits: proller (~p@2a02:6b8:b081:1229::1:11) (Ping timeout: 260 seconds)
[03:25:41] *** Joins: aspic (~shifty~~~@ppp121-44-110-232.syd-gls-har-bras38.tpg.internode.on.net)
[03:28:00] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:31:16] *** Quits: aspic (~shifty~~~@ppp121-44-110-232.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[03:32:54] *** Quits: pizdets (~pizdets@183.182.114.81) (Ping timeout: 250 seconds)
[03:33:41] *** Joins: pizdets (~pizdets@183.182.110.162)
[03:35:05] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[03:35:05] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[03:35:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[03:41:55] *** Joins: proller (~p@2a02:6b8:b081:a413::1:18)
[03:44:40] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 240 seconds)
[03:47:34] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { int n = *(((unsigned char*)&x)+i); for (int j=7; j>=0; j--) { n >> j & 1 ? printf("1") : printf("0"); } printf(" "); }'
[03:47:36] <perlbot> gordonfish: free(): invalid pointer␤[Exited 1]
[03:48:10] <gordonfish>  basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { int n = *(((unsigned char*)&x)+i); for (int j=7; j>=0; j--) { n >> j & 1 ? printf("1") : printf("0"); } printf(" "); }'
[03:48:46] <gordonfish> simcop2387: in PM, perlbot gave:
[03:48:48] <gordonfish>  <perlbot> 00011101 01110010 00110011 11011100 10000000 11001111 00001111 11001001 00000000 01000000 01110100 01110001 11110011 01010101 00000000 00000000
[03:49:06] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[03:49:20] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { int n = *(((unsigned char*)&x)+i); for (int j=7; j>=0; j--) { (n >> j) & 1 ? printf("1") : printf("0"); } printf(" "); }'
[03:49:22] <perlbot> gordonfish: 00011101 01110010 00110011 11011100 10000000 11001111 00001111 11001001 00000000 01000000 01110101 01011110 01100010 01010101 00000000 00000000 
[03:49:51] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[03:50:26] <gordonfish> simcop2387: I also noticed that in the C version, the last 5 hex blocks, minus the 00 00 at the end, keeps changing:
[03:50:28] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:50:29] <perlbot> gordonfish: 1D 72 33 DC 80 CF 0F C9 00 40 D2 F6 57 55 00 00 
[03:50:31] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:50:32] <perlbot> gordonfish: 1D 72 33 DC 80 CF 0F C9 00 40 E6 07 FB 55 00 00 
[03:50:34] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:50:36] <perlbot> gordonfish: free(): invalid pointer␤[Exited 1]
[03:50:42] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:50:44] <perlbot> gordonfish: free(): invalid pointer␤[Exited 1]
[03:50:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:51:15] <gordonfish> And now sometimes that free(): invalid pointer keeps coming up. Maybe hitting memory restrictions?
[03:51:19] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { printf("%02X ", *(((unsigned char*)&x)+i) ); }'
[03:51:20] <perlbot> gordonfish: 1D 72 33 DC 80 CF 0F C9 00 40 F0 95 42 56 00 00 
[03:51:43] *** Joins: madduck (~madduck@user/madduck)
[03:51:43] <gordonfish> I don't get why the value fluctuates like that
[03:55:17] <gordonfish> Also...
[03:55:23] <gordonfish> basheval: c 'long double x = 3.14159L; printf("%lf\n", x);'
[03:55:24] <perlbot> gordonfish: 0.000000␤
[03:55:28] <gordonfish> ???
[04:01:46] *** Joins: pj (~pj@ghettoforge/pj)
[04:02:35] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[04:04:15] *** Quits: proller (~p@2a02:6b8:b081:a413::1:18) (Ping timeout: 260 seconds)
[04:12:31] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[04:23:20] *** Joins: proller (~p@80.240.216.69)
[04:23:24] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[04:31:58] <gordonfish> simcop2387: I'm sometimes seeing the 'free(): invalid pointer' message from sweval as well. Seems somethings soured perlbot's memory?
[04:32:00] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:35:37] <gordonfish> basheval: c 'long double x = 3.14159L; for (int i=0; i<sizeof(x); i++) { int n = *(((unsigned char*)&x)+i); for (int j=7; j>=0; j--) { printf("%d", n >> j & 1); } printf(" "); }'
[04:35:38] <perlbot> gordonfish: 00011101 01110010 00110011 11011100 10000000 11001111 00001111 11001001 00000000 01000000 10000110 10101010 00101101 01010110 00000000 00000000 
[04:36:39] <gordonfish> sweval: join ' ', map sprintf('%08b', ord), split //, pack D => 3.14159;
[04:36:41] <perlbot> gordonfish: 00000000 01110000 00110011 11011100 10000000 11001111 00001111 11001001 00000000 01000000 00000000 00000000 00000000 00000000 00000000 00000000
[04:37:53] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[04:44:10] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[04:48:02] *** Quits: Linux77 (~Linux7_7@186.233.182.237) (Ping timeout: 265 seconds)
[04:50:29] *** Joins: Linux77 (~Linux7_7@186.233.182.237)
[04:51:08] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[04:55:00] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 260 seconds)
[04:55:13] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Quit: WeeChat 2.3)
[05:06:35] *** Quits: waltman (waltman@2601:4a:701:4451:60bd:2602:d760:42c) (Quit: leaving)
[05:06:46] *** Joins: aspic (~shifty~~~@ppp121-44-110-232.syd-gls-har-bras38.tpg.internode.on.net)
[05:15:46] *** Quits: bs338 (~pi@host217-44-224-228.range217-44.btcentralplus.com) (Ping timeout: 250 seconds)
[05:16:19] <xq> neat
[05:16:27] <xq> is there basheval for C++ ?
[05:17:07] *** Joins: waltman (waltman@2601:4a:701:4451:6491:5141:3040:6ea4)
[05:19:01] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:19:02] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:21:17] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Remote host closed the connection)
[05:22:28] *** Joins: bs338 (~pi@host31-52-183-46.range31-52.btcentralplus.com)
[05:32:04] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[05:35:15] *** Quits: whynot (~whynot@37.73.94.95) (Quit: leaving)
[05:37:26] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[05:39:17] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[05:43:26] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[05:48:11] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.0.1)
[05:49:26] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:00:37] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[06:01:17] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[06:01:29] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[06:01:42] * GumbyPAN CPAN Upload: Time-Verbal-1.1.1 by GUGOD https://metacpan.org/release/GUGOD/Time-Verbal-1.1.1
[06:03:43] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[06:29:59] *** Quits: Su-Shee_ (~Susanne@p4ffc7f3c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:32:02] *** Joins: Su-Shee (~Susanne@p4ffc797a.dip0.t-ipconnect.de)
[06:33:26] <aquanight> LeoNerd: what is 'async method' from?
[06:33:33] <aquanight> is that part of O:P?
[06:34:04] <xenu> aquanight: https://metacpan.org/pod/Future::AsyncAwait#Object::Pad
[06:34:04] <Paperbot_> Link title(s): [ Future::AsyncAwait - deferred subroutine syntax for futures - metacpan.org ]
[06:34:26] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:34:26] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (erbium.libera.chat (Nickname regained by services)))
[06:34:26] *** finn_elija is now known as FinnElija
[06:40:59] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[06:42:20] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 260 seconds)
[06:46:58] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[06:49:04] <toddr> durn it. I always forget the module you use to convert a relative path into the absolute path :(
[06:49:10] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[06:49:21] <Grinnz> Cwd::abs_path
[06:49:42] <toddr> guh. thank you
[06:50:32] *** Quits: aspic (~shifty~~~@ppp121-44-110-232.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[06:50:54] *** Joins: aspic (~shifty~~~@ppp121-44-111-156.syd-gls-har-bras38.tpg.internode.on.net)
[07:21:06] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:21:28] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[07:23:15] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:23:50] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[07:26:55] *** Joins: pb (~pb@polemon.org)
[07:34:21] *** Joins: Martchus_ (~martchus@dynamic-095-114-005-188.95.114.pool.telefonica.de)
[07:35:26] *** Quits: Martchus (~martchus@dynamic-077-009-124-124.77.9.pool.telefonica.de) (Ping timeout: 252 seconds)
[07:50:05] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[07:53:02] *** Quits: aspic (~shifty~~~@ppp121-44-111-156.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[07:53:54] *** Joins: aspic (~shifty~~~@124-171-87-236.dyn.iinet.net.au)
[07:56:53] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[07:59:09] *** Joins: monkey_ (~user@190.104.116.134)
[08:04:02] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[08:05:08] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[08:13:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[08:31:16] *** Joins: Martchus (~martchus@2a01:c23:c4f2:1f00:d250:99ff:fe49:3cce)
[08:31:32] *** Quits: Martchus_ (~martchus@dynamic-095-114-005-188.95.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[08:32:04] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[08:45:33] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:05:27] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 240 seconds)
[09:08:34] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[09:12:03] * GumbyPAN CPAN Upload: Data-MoneyCurrency-0.20 by EDF https://metacpan.org/release/EDF/Data-MoneyCurrency-0.20
[09:14:19] *** Joins: Manderson_ (~manderson@45.40.80.170)
[09:15:17] *** Quits: aspic (~shifty~~~@124-171-87-236.dyn.iinet.net.au) (Ping timeout: 260 seconds)
[09:16:17] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[09:17:33] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:25:33] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[09:31:20] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:31:57] *** Joins: mattil (~mattil@airio.portalify.com)
[09:35:50] *** Joins: Manderson (~manderson@45.40.80.170)
[09:37:34] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[09:38:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[09:43:39] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[09:44:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:49:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:52:07] * GumbyPAN CPAN Upload: Net-GitHub-1.02 by FAYLAND https://metacpan.org/release/FAYLAND/Net-GitHub-1.02
[09:57:59] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:01:13] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[10:01:45] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:05:27] *** Joins: Manderson_ (~manderson@45.40.80.170)
[10:06:17] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[10:07:16] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[10:07:47] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[10:18:07] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:20:42] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:22:46] *** Joins: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de)
[10:24:00] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:32:10] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:33:52] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[10:37:57] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:38:12] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:38:41] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:44:43] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:45:03] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[10:48:47] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Remote host closed the connection)
[10:49:12] *** Joins: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi)
[10:53:37] *** Joins: aspic (~shifty~~~@124-171-87-236.dyn.iinet.net.au)
[10:54:00] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[10:54:01] *** Quits: mattil (~mattil@d42p4mqqmg26xvgvn9k-4.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[10:57:20] *** Joins: horsepatat (~horsepata@80.89.79.41)
[10:58:01] *** Joins: anthk_ (~anthk_@92.176.105.30)
[11:01:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:13:52] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[11:15:27] *** Joins: Manderson (~manderson@45.40.80.170)
[11:16:30] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 260 seconds)
[11:17:40] *** Quits: waltman (waltman@2601:4a:701:4451:6491:5141:3040:6ea4) (Ping timeout: 260 seconds)
[11:17:40] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[11:19:22] *** Joins: Manderson_ (~manderson@45.40.80.170)
[11:21:28] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[11:22:26] *** tobybl_ is now known as tobybl
[11:22:56] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:24:10] *** Joins: waltman (waltman@2601:4a:701:4451:6491:5141:3040:6ea4)
[11:31:58] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:8ce1:c48d:4442:203d) (Ping timeout: 252 seconds)
[11:40:13] *** Joins: fwg (~fwg@user/fwg)
[11:46:17] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[11:50:29] *** Joins: R2robot (~R2robot@user/r2robot)
[11:52:06] *** Joins: Manderson (~manderson@45.40.80.170)
[11:54:16] *** Joins: __Manderson (~manderson@45.40.80.170)
[11:54:20] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[11:54:54] *** Joins: Pali (~pali@user/pali)
[11:55:06] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2.1)
[11:56:17] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:56:20] * GumbyPAN CPAN Upload: GitHub-Actions-0.1.0 by JMERELO https://metacpan.org/release/JMERELO/GitHub-Actions-0.1.0
[11:57:14] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[11:57:57] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[12:00:01] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 252 seconds)
[12:01:20] * GumbyPAN CPAN Upload: Data-MoneyCurrency-0.21 by EDF https://metacpan.org/release/EDF/Data-MoneyCurrency-0.21
[12:05:34] *** Joins: art1 (~romeyke@p200300ccdf046100880a1eba6074a9f6.dip0.t-ipconnect.de)
[12:08:57] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[12:09:41] *** Joins: smitop (~smitop@user/smitop)
[12:12:31] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 252 seconds)
[12:13:02] *** Joins: Jonno_FTW (~come@api.carswap.me)
[12:13:05] *** Quits: Pali (~pali@user/pali) (Ping timeout: 260 seconds)
[12:24:36] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[12:24:40] *** Quits: TieUpYourCamel (~david@99-111-133-221.lightspeed.chrlnc.sbcglobal.net) (Ping timeout: 252 seconds)
[12:26:23] * GumbyPAN CPAN Upload: Data-MoneyCurrency-0.22 by EDF https://metacpan.org/release/EDF/Data-MoneyCurrency-0.22
[12:34:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[12:49:53] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:49:58] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:3994:6852:518a:e292)
[12:51:15] *** Joins: randir (~randir@176.59.52.254)
[12:52:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:54:45] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[12:56:24] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[12:59:35] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[13:07:48] *** Joins: Manderson (~manderson@45.40.80.170)
[13:09:40] *** Quits: __Manderson (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[13:14:23] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[13:15:13] *** Parts: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) ()
[13:22:52] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[13:24:20] *** Joins: Manderson_ (~manderson@45.40.80.170)
[13:26:20] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[13:28:01] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[13:31:39] *** Joins: Manderson (~manderson@45.40.80.170)
[13:34:02] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[13:40:19] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[13:42:07] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 245 seconds)
[13:49:37] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 245 seconds)
[13:51:21] *** Joins: tbcr (~tbcr@75.183.195.9)
[13:55:52] *** Quits: aspic (~shifty~~~@124-171-87-236.dyn.iinet.net.au) (Ping timeout: 260 seconds)
[13:56:10] *** Joins: aspic (~shifty~~~@ppp121-44-115-146.syd-gls-har-bras39.tpg.internode.on.net)
[14:03:48] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[14:08:14] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[14:08:37] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[14:12:32] *** Joins: randir (~randir@176.59.52.254)
[14:13:26] *** Joins: Manderson_ (~manderson@45.40.80.170)
[14:14:14] *** Joins: fwg (~fwg@user/fwg)
[14:15:11] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Remote host closed the connection)
[14:15:57] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[14:20:00] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[14:20:55] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[14:21:37] *** Joins: randir (~randir@176.59.52.254)
[14:23:58] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[14:26:17] *** Quits: randir (~randir@176.59.52.254) (Ping timeout: 252 seconds)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:32:38] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:33:56] *** Quits: icedjava37 (~icedjava3@ppp046177149155.access.hol.gr) (Quit: leaving)
[14:38:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:39:22] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:43:57] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:44:09] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:45:20] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 260 seconds)
[14:47:16] *** Joins: randir (~randir@176.59.52.254)
[15:02:03] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[15:11:40] * GumbyPAN CPAN Upload: App-nioscli-0.001 by SSMN https://metacpan.org/release/SSMN/App-nioscli-0.001
[15:11:41] * GumbyPAN CPAN Upload: Proc-ProcessTable-0.612 by JWB https://metacpan.org/release/JWB/Proc-ProcessTable-0.612
[15:13:35] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[15:16:06] *** Joins: Manderson (~manderson@45.40.80.170)
[15:17:25] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:18:34] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[15:21:17] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[15:22:25] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:27:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:27:48] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[15:31:29] *** Joins: randir (~randir@176.59.52.254)
[15:41:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[15:44:10] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[15:48:14] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[15:49:10] *** Joins: Manderson_ (~manderson@45.40.80.170)
[15:51:40] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[15:51:59] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[16:01:16] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[16:01:33] *** Joins: Covrus (~Covrus@2602:ff16:3:0:1:ec:0:1)
[16:04:54] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[16:07:57] *** Quits: bes_internal (~bes@leased-line-217-21-59-112.telecom.by) (Remote host closed the connection)
[16:08:35] *** Joins: bes_internal (~bes@leased-line-217-21-59-112.telecom.by)
[16:09:38] *** Joins: Manderson (~manderson@45.40.80.170)
[16:11:47] * GumbyPAN CPAN Upload: Astro-SpaceTrack-0.147 by WYANT https://metacpan.org/release/WYANT/Astro-SpaceTrack-0.147
[16:11:57] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[16:12:33] *** Joins: randir (~randir@176.59.52.254)
[16:12:53] *** Parts: Covrus (~Covrus@2602:ff16:3:0:1:ec:0:1) (WeeChat 3.2.1)
[16:13:19] *** Joins: Manderson_ (~manderson@45.40.80.170)
[16:13:48] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[16:15:49] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[16:25:28] *** Quits: aspic (~shifty~~~@ppp121-44-115-146.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[16:26:13] *** Joins: aspic (~shifty~~~@ppp121-44-115-237.syd-gls-har-bras39.tpg.internode.on.net)
[16:27:50] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[16:27:52] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[16:28:05] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[16:34:14] *** Joins: bmeneg (~bmeneg@2001:1284:f016:6898:8291:e243:7782:d783)
[16:40:18] <hethw> is there a smart way to decode/encode a hash with all of it's keys/values?
[16:42:34] <LeoNerd> Uh.. yes-ish but that's a weird question
[16:42:43] <hethw> I'm weird question man
[16:42:54] <alh> Storable's freeze/thaw, JSON encoding/decode, Sereal
[16:42:55] <LeoNerd> Usually you'd encode a string into bytes as basicaly the very last step before sending those bytes out of a filehandle or similar
[16:43:11] <alh> Depends on what you're doing with it
[16:43:21] <LeoNerd> Simiarly, you'd decode from bytes as the first thing you do when you grab it from the filehandle
[16:43:39] <hethw> so I guess I'll do it with foreach
[16:43:47] <LeoNerd> So really, encode/decode are operations you perform on *strings* to convert then between unicode and bytes... The concept doesn't really apply to any other type of data like a hash.
[16:44:29] <LeoNerd> If what you have is a hash whose keys and values are still-encoded byte-strings, then you probably want to fiddle with whatever decode options are on whatever deserialiser that created said hash
[16:44:44] <hethw> LeoNerd, you're right
[16:44:56] <hethw> but that for now is not possible, so I'm workarounding
[16:45:26] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 252 seconds)
[16:46:01] <hethw> I can't make json_encode store one unicode byte because I'm probably stupid
[16:46:24] <LeoNerd> ?
[16:46:26] <hethw> s/byte/4 byte char/
[16:47:08] <hethw> --
[16:47:12] <hethw> I can't make json_encode store one 8bit unicode char because I'm probably stupid
[16:47:16] *** Joins: proller (~p@2a02:6b8:0:40c:7d35:ab1e:428c:69b4)
[16:47:44] <LeoNerd> Huh.. I think I broke perlbot
[16:47:45] <hethw> so what I have is two 4bit chars instead encoded in json encoding \uXXXX\uXXXX
[16:47:49] <LeoNerd> eval: use JSON::MaybeUTF8 'encode_json_utf8';  encode_json_utf8 { snow => "\N{SNOWMAN}" }
[16:47:50] *** Joins: anthk_ (~anthk_@92.176.105.30)
[16:47:50] <perlbot> LeoNerd: ERROR: Can't locate JSON/MaybeUTF8.pm in @INC (you may need to install the JSON::MaybeUTF8 module) (@INC contains: $BLEAD/lib/site_perl/5.35.3/x86_64-linux $BLEAD/lib/site_perl/5.35.3 $BLEAD/lib/5.35.3/x86_64-linux $BLEAD/lib/5.35.3) at (IRC) line 1. BEGIN failed--compilation aborted at (IRC) line 1. 
[16:48:03] <LeoNerd> Oh.. weird. That gave me Out of Memory in PM
[16:48:33] <LeoNerd> Yes, I believe JSON uses UTF-16 and surrogate pairs
[16:48:36] <LeoNerd> or some silly crap
[16:48:45] <LeoNerd> So anything outside of the BMP is going to look silly
[16:49:46] <LeoNerd> eval: use JSON::MaybeXS 'encode_json';  encode_json { snow => "\N{SNOWMAN}" }
[16:49:48] <perlbot> LeoNerd: {"snow":"☃"}
[16:49:56] <LeoNerd> Hrm.. Unhelpful
[16:51:20] <hethw> use JSON::MaybeXS 'encode_json';  encode_json { snow => "\u00d1\u0084" }
[16:51:29] <Botje> eval: use JSON; JSON->new>ascii->encode({ snow =>"\N{SNOWMAN}" }
[16:51:30] <perlbot> Botje: free(): invalid pointer [Exited 1]
[16:51:33] <Botje> eval: use JSON; JSON->new->ascii->encode({ snow =>"\N{SNOWMAN}" }
[16:51:34] <perlbot> Botje: free(): invalid pointer [Exited 1]
[16:51:42] <Botje> ah yeah, 's broken
[16:51:45] <hethw> eval: use JSON::MaybeXS 'encode_json';  encode_json { snow => "\u00d1\u0084" }
[16:51:46] <perlbot> hethw: {"snow":"00d10084"}
[16:52:03] <hethw> eval: use JSON::MaybeXS 'decode_json';  decode_json { snow => "\u00d1\u0084" }
[16:52:05] <perlbot> hethw: ERROR: malformed JSON string, neither tag, array, object, number, string or atom, at character offset 0 (before "(end of string)") at (IRC) line 1. 
[16:52:21] <hethw> eval: use JSON::MaybeXS 'encode_json';  encode_json { snow => "\\u00d1\\u0084" }
[16:52:22] <perlbot> hethw: {"snow":"\\u00d1\\u0084"}
[16:52:41] <hethw> eval: use JSON::XS 'encode_json';  encode_json { snow => "\\u00d1\\u0084" }
[16:52:43] <perlbot> hethw: {"snow":"\\u00d1\\u0084"}
[16:52:49] <Botje> anyway. JSON->new->ascii->encode(...) results in \u2603
[16:52:56] <hethw> eval: use JSON::XS 'encode_json';  encode_json { snow => "\u00d1\u0084" }
[16:52:57] <Botje> which is still in the BMP.
[16:52:57] <perlbot> hethw: {"snow":"00d10084"}
[16:53:06] <hethw> well, I'm probably still stupid
[16:53:06] <Botje> hethw: please stop and tell us what you're trying to do.
[16:53:14] <hethw> I already did
[16:53:32] <hethw> <hethw> I can't make json_encode store one 8bit unicode char because I'm probably stupid
[16:53:33] <hethw> <hethw> so what I have is two 4bit chars instead encoded in json encoding \uXXXX\uXXXX
[16:54:05] <Botje> 'two 4bit chars' makes no sense.
[16:54:06] <haj> What is "one 8bit unicode char"?
[16:54:10] <hethw> what I need to get is \u0444
[16:54:19] <Botje> hethw: please take the string you have and pass it through printf "%vx"
[16:54:24] <Botje> hethw: and show us the result.
[16:54:39] <hethw> it's the same just with \x{}
[16:54:41] <Botje> that is probably the fastest way to know what you actually have and how to get you to somewhere decent.
[16:54:57] <Botje> hethw: you're making up terminology to compensate for your lack of unicode knowledge. don't.
[16:55:03] <hethw> yep
[16:55:10] <Botje> tell us the result of printf "%vx" and we'll help you.
[16:55:11] <hethw> let's get smarter brb
[16:55:52] <Botje> I've been solving encoding issues here for the better part of 20 years, but trying to understand made-up terminology helps noone.
[16:56:04] <Botje> Show me the actual characters and I'll tell you how to produce the output you want.
[16:56:25] <Botje> and printf "%vx", $str is a reliable way of doing that.
[16:56:51] * GumbyPAN CPAN Upload: Math-MPFR-4.17 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPFR-4.17
[16:59:27] <Botje> or just ignore me, that works too.
[17:00:42] <hethw> give me some time please
[17:03:56] <hethw> d1.84
[17:04:09] <hethw> that's what I get from printf "%vx", "ф";
[17:04:22] <hethw> cc Botje 
[17:04:31] <LeoNerd> That'll be because your string is already a UTF-8 byte string then, and not a unicode character
[17:04:42] <LeoNerd> eval: no utf8; sprintf "%vx", "ф"
[17:04:43] <perlbot> LeoNerd: free(): invalid pointer [Exited 1]
[17:04:48] <LeoNerd> ... perlbot is still unhappy
[17:04:53] <LeoNerd> eval: use utf8; sprintf "%vx", "ф"
[17:04:55] <perlbot> LeoNerd: 444
[17:05:15] <LeoNerd> There. You need to put the "ф" string literal in a context that is  use utf8;  and then this will all be fine
[17:05:29] <hethw> yes. that's not the usecase tho
[17:05:59] <LeoNerd> Well where did the Phi come from? Ensure that is giving you Unicode strings
[17:06:53] * GumbyPAN CPAN Upload: Math-MPC-1.13 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-MPC-1.13
[17:06:54] <Botje> hethw: assuming you have a string with bytes, you can use the trick f*zzie told you about yesterday.
[17:06:54] <hethw> it's not so simple, as I already explained
[17:07:25] <hethw> Botje, it doesn't help since I have to convert it 5 times to get the result
[17:07:46] <Botje> and why is that?
[17:08:00] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[17:08:05] <Botje> show us the full path your data takes.
[17:08:05] <hethw> that was the example from f*zzie
[17:08:16] <hethw> that's not possible I'm afraid
[17:08:27] <hethw> what do you actually need?
[17:08:32] *** Joins: randir (~randir@176.59.52.254)
[17:08:36] <Botje> the truth.
[17:08:42] <Botje> why do you 'need to convert it 5 times'
[17:08:44] <hethw> looking for the same thing
[17:08:47] <Botje> from what to what?
[17:08:58] <Botje> It appears you currently have UTF-8 encoded bytes in a string variable.
[17:09:26] <hethw> this is the proposal https://l.perl.bot/p/pb8wi6
[17:09:27] <Paperbot_> Link title(s): [ Perlbot Pastebin ]
[17:09:38] <Botje> yes, that is what you asked yesterday.
[17:09:55] <hethw> and then I need to convert it again to json's \uXXXX
[17:10:06] <Botje> yes, that was also answered in the channel.
[17:10:16] <hethw> yep
[17:10:21] <Botje> so what else do you need?
[17:10:31] <hethw> noone will accept that patch
[17:10:40] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:10:42] <hethw> however peculiar and working it is
[17:10:50] <shlomif> perlbot: JSON
[17:10:50] <perlbot> shlomif: JavaScript Object Notation - a simple (and somewhat limited) serialisation format based on JavaScript’s syntax. See - http://en.wikipedia.org/wiki/JSON . In Perl, parse it with https://metacpan.org/pod/JSON::MaybeXS . In JavaScript use JSON.parse .
[17:10:59] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[17:10:59] <Botje> uh, okay.. and what do you want us to do about it?
[17:11:09] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[17:11:12] <hethw> nothing much
[17:11:21] <hethw> I'm alooking for other ways
[17:11:28] <hethw> and LeoNerd asked why
[17:11:47] <Botje> any other way will be equally hacky, I'm afraid.
[17:12:02] <hethw> decode on one hash is good enough
[17:12:58] *** Quits: randir (~randir@176.59.52.254) (Ping timeout: 252 seconds)
[17:13:22] <Botje> *blink*
[17:13:42] *** Joins: gryphn (~gryphn@154.9.128.26)
[17:13:49] <Botje> I'll go back to working on the presentation i'm being paid to write if you have no actual problem that needs solving.
[17:14:37] *** Quits: Su-Shee (~Susanne@p4ffc797a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[17:14:53] <hethw> Botje, good luck and thanks.
[17:15:24] *** Quits: aspic (~shifty~~~@ppp121-44-115-237.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[17:16:07] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[17:16:14] *** Joins: aspic (~shifty~~~@ppp121-44-125-29.syd-gls-har-bras39.tpg.internode.on.net)
[17:16:32] *** Joins: Su-Shee (~Susanne@p4ffc7219.dip0.t-ipconnect.de)
[17:19:10] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:19:11] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:21:43] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[17:27:58] *** Joins: jaggz (~jaggz@user/jaggz)
[17:28:04] <jaggz> why's tesseract going into the background?
[17:28:06] <jaggz> system("tesseract '$tmpss' '$tmptessbase' &>/dev/null");
[17:30:36] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:13] *** Quits: horsepatat (~horsepata@80.89.79.41) (Ping timeout: 265 seconds)
[17:31:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:31:50] <Botje> probably because it chose to?
[17:31:59] <buZz> doing OCR?
[17:32:00] <haj> Because you said '&' ?
[17:32:11] <Botje> oh, heh.
[17:32:14] <Botje> &> is a bashism.
[17:32:21] <Botje> you want > /dev/null 2>&1
[17:32:24] <Botje> well-spotted, haj 
[17:34:27] *** Joins: randir (~randir@176.59.52.254)
[17:35:17] <jaggz> "the entire argument is passed to the system's command shell for parsing (this is "/bin/sh -c" on Unix platforms
[17:35:18] <jaggz> oh
[17:35:50] <Botje> yeh, /bin/sh hasn't been bash for a long time on debian/ubuntu.
[17:36:03] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 265 seconds)
[17:36:36] <jaggz> buZz, yeah, just to automate something
[17:36:54] <jaggz> can't find a way to get text from a window, so i'm taking a snapshot and ocr'ing it :/
[17:36:59] <jaggz> my @lines = `tesseract '$tmpss' stdout quiet`;
[17:37:32] *** Quits: aspic (~shifty~~~@ppp121-44-125-29.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[17:37:49] *** Joins: aspic (~shifty~~~@ppp121-44-107-250.syd-gls-har-bras38.tpg.internode.on.net)
[17:38:04] <buZz> jaggz: i've always considered adding tesseract (or similar) to URL reading ircbots
[17:38:08] *** Parts: art1 (~romeyke@p200300ccdf046100880a1eba6074a9f6.dip0.t-ipconnect.de) ()
[17:38:18] <buZz> for reading text in images instead of just '100x500 PNG'
[17:38:31] <buZz> so you wouldnt need to click on memes anymore
[17:40:26] <Botje> meme generators should just embed the text in png/jpg metadata
[17:40:34] <Botje> save us all some trouble.
[17:40:47] <buZz> that would be handy yeah
[17:41:00] <zgu> or use svg with the original image embedded and the text encoded as actual text
[17:44:16] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[17:44:52] *** Joins: randir (~randir@176.59.52.254)
[17:47:07] <jaggz> how do I write an Imager image to a variable as png?
[17:47:47] *** Joins: EvanCarroll (~ecarroll@88.246.75.188)
[17:48:17] <alh> $img->write(data => \$var, type => $type); ?
[17:49:33] <jaggz> looks like Imager::Simple's write() call can accept a scalar ref.. not sure how to call it on an image I get from Imager::Screenshot
[17:49:35] *** Quits: randir (~randir@176.59.52.254) (Ping timeout: 265 seconds)
[17:49:37] <jaggz> alh, that looks like it
[17:49:49] <jaggz> documents on write() don't mention that in the write() area it looks like..
[17:50:12] <alh> write() in perldoc Imager is a quick overview but tells you later to look in Imager::Files 
[17:50:29] <jaggz> (there it is.. mentioned in the general area "Input and output"
[17:52:49] *** diskin is now known as Guest5307
[17:52:49] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[17:52:49] *** Quits: Guest5307 (~diskin@87.117.49.178) (Killed (lead.libera.chat (Nickname regained by services)))
[17:52:49] *** diskin_ is now known as diskin
[17:53:50] <jaggz> buZz, text in images from irc?
[17:53:55] *** Joins: randir (~randir@176.59.52.254)
[17:54:55] <EvanCarroll> Terminal images are awesome.
[17:55:09] * Botje sends EvanCarroll some goatse
[17:55:33] <buZz> jaggz: yes
[17:56:27] <revhippie> Botje: at $work[-2] an ops guy "wall"ed an ascii-art version of that to all the developers, not realizing half of us were afk and had desks facing the hall at the end of the cube farm.
[17:57:19] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[17:57:23] *** Quits: randir (~randir@176.59.52.254) (Remote host closed the connection)
[17:58:57] <jaggz> buzz:   my $pid = open2(my $tout, my $tin, qw(tesseract stdin stdout quiet));
[17:59:18] <jaggz> print $tin $sspng; close $tin; my @lines = <$tout>; close $tout;
[17:59:28] <Botje> ~ here is my handle here is my $tout ~
[17:59:32] <buZz> lol
[18:00:06] <Botje> jaggz: Capture::Tiny is a better and smaller version of that.
[18:00:07] <jaggz> waitpid($pid, 0);
[18:00:15] <jaggz> Botje, oh
[18:03:26] *** Joins: clf59 (~clf59@user/clf59)
[18:05:33] <jaggz> Botje, how do you send to its stdin?
[18:05:45] <jaggz> with tiny
[18:06:53] <jaggz> buzz, modern tesseract uses a recurrent neural net model, from my understanding, and provides much faster and more-accurate results in my experience
[18:07:00] *** Parts: clf59 (~clf59@user/clf59) ()
[18:07:02] <Botje> oh, hmm. I don't know :(
[18:07:02] <buZz> ooo cool
[18:07:17] *** Quits: aspic (~shifty~~~@ppp121-44-107-250.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[18:07:22] <buZz> its amazing such a old project is still being improved
[18:07:24] <buZz> and used a lot
[18:07:27] <jaggz> Botje, I'd have to open() with -| or whatever
[18:07:45] <buZz> Originally developed by Hewlett-Packard as proprietary software in the 1980s
[18:07:54] <jaggz> buzz, oh neat
[18:08:06] <buZz> Tesseract was in the top three OCR engines in terms of character accuracy in 1995
[18:08:55] *** Quits: ufobat_ (~martin@dynamic-077-007-129-095.77.7.pool.telefonica.de) (Ping timeout: 260 seconds)
[18:09:37] <jaggz> okay cool.. so this is because I'm using opensnitch to monitor outgoing connections
[18:09:55] <jaggz> it pops up a window often with the IP of a host
[18:10:41] <jaggz> I noticed, when I'm visiting suspicious urls, and switch to using tor for it, tor will connect to the network using some torrent site.. wherever
[18:10:51] <jaggz> france, netherlands, russia, germany, etc.
[18:11:16] <jaggz> opensnitch doesn't yet have the ability to say "block based on a geoip lookup of the ip address -> united states"
[18:11:59] <jaggz> so I made this script which I'm about to bind to a hotkey, and it gets the IP address from the window and sends it out with "notify-send" so I can quickly see if I can allow or deny the connection
[18:12:36] *** Joins: roe_ (~mroe@dyn222132.cc.lehigh.edu)
[18:12:37] <buZz> hehe
[18:13:29] <roe_> Using Getopt::Long is it possible to specify two flags are incompatible? 
[18:14:04] <Botje> possibly but slightly awkward.
[18:14:40] <roe_> easier to just test after the fact?
[18:15:24] <alh> Getopt::Long::Descriptive can do it with one_of
[18:15:38] <jaggz> buZz, messy script.. it's from past "macros" I coded, over time... tons of stuff in here not used for this simple task
[18:15:39] <jaggz> https://paste.debian.net/hidden/1d34eefe/
[18:15:40] <Paperbot_> Link title(s): [ Debian Pastezone ]
[18:16:04] <jaggz> oh, it relies on bansi.pm .. hmm.
[18:16:56] <jaggz> that's just my ansi color code module that lets me do like:  print "{$bgblu}{$red}This is one of the more awful combinations for ur eyez$rst";
[18:17:06] <jaggz> bred is bright red, red is just red
[18:17:40] <Botje> sub setter_for { my ($ref, $val) = @_; sub { die "Incompatible $_[0], already set!" if defined $$ref; $$ref = $val } } GetOptions('one' => setter_for(\$foo, "one"), 'two' => setter_for(\$foo, "two"));
[18:17:45] <Botje> roe_: ^
[18:18:11] <jaggz> oh, here, bansi.pm: https://paste.debian.net/hidden/fc8579ab/
[18:18:12] <Paperbot_> Link title(s): [ Debian Pastezone ]
[18:18:47] <roe_> Thanks
[18:20:49] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[18:21:28] <jaggz> (also has some routines for 256 color code mode and stuff)
[18:21:40] <jaggz> nevermodified it to handle 24 bit color.. I should.
[18:21:50] <jaggz> I did add 24bit stuff to my python version of this
[18:21:53] <jaggz> anyway.
[18:24:15] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[18:25:15] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 260 seconds)
[18:26:31] <jaggz> (it doesn't make an attempt at optimizing, like joining fg and bg settings for \033[44;36;1m  (bright cyan on blue)
[18:27:13] <gchristensen> I'm looking at implementing support for logging in via OIDC. I've been browsing implementations of OIDC, JWT, and OAuth2 on metacpan. I'm a bit skeptical of OIDC::Lite, but Crypt::JWT looks pretty good to me. Anyone here worked with Crypt::JWT, or have counterindictaions / recommendations?
[18:27:23] <jaggz> "$bgblu{$bcya}Hi$rst"
[18:30:13] <Botje> gchristensen: uh, Crypt::JWT is only like 10% of the total picture
[18:31:24] <gordonfish> Re: <Botje> meme generators should just embed the text in png/jpg metadata
[18:31:30] <gordonfish> Not really knockinh anything, though it's kind of sad and annoying that a simple image with some text constitutes a meme, for some time now. I can remember when the original All Your Base are Belong to Us video came out. Now that was a meme. That took actual effort.
[18:31:35] <Botje> but I don't have any module suggestions for you though.
[18:32:15] <jaggz> buZz, for a while I was using some company (ibm?)'s AI image captioning for irc images
[18:32:34] <buZz> hehe nice
[18:32:42] <buZz> jaggz: are you by chance blind?
[18:32:47] <jaggz> an image posted from a few whitelisted sites, like imgur, and it would send it off to ibm and spit out the description here
[18:32:55] <buZz> that you're extra motivated for this kinda stuff
[18:32:57] <jaggz> nah
[18:33:06] <buZz> ah np, just curious
[18:33:11] <jaggz> just that there are so many clicks.. so many things to check out.. 
[18:33:19] <buZz> some ppl in #reprap are blind, so amazing that they do well in 3d printing
[18:33:27] <jaggz> my summarizer, for instance, for urls.. that's been handy for me
[18:34:22] <jaggz> buzz, well, that's why they're in irc right?
[18:34:26] <jaggz> "Does this print look good?"
[18:34:29] <jaggz> "No."
[18:34:31] <jaggz> "How about this?"
[18:34:33] <jaggz> "No."
[18:35:03] * jaggz laughs with his visually-impared irc buds (and buddettes)
[18:35:11] <buZz> :D
[18:35:19] <buZz> that makes me wonder
[18:35:25] <buZz> what color PLA filament will they buy
[18:35:29] <jaggz> one of them sits there and does electronics and coding and stuff...
[18:35:46] <jaggz> thankfully the nerd/tech industry is known for not having good taste, buzz
[18:35:58] <buZz> :D
[18:36:00] <jaggz> pardon me.. uhm.. not sure how to say it
[18:36:05] <buZz> blind might be a improvement?
[18:36:08] <jaggz> I ordered pink filament though, and got bright orange.
[18:36:21] <buZz> hehe, a man packaged it
[18:36:28] <jaggz> reported it to them.. they apologized
[18:36:32] <jaggz> refunded me
[18:36:33] <buZz> pink vs orange is near impossibru for some men
[18:36:38] <jaggz> then I received another roll of orange.. for free.
[18:36:42] <buZz> lol
[18:36:54] <jaggz> this is Prusa orange
[18:37:05] <jaggz> and the box label says "Orange"
[18:37:11] <buZz> are you in EU?
[18:37:14] <jaggz> smh
[18:37:17] <jaggz> nah, los angeles
[18:37:25] <buZz> there's a filament producer in poland thats really nice imho
[18:37:29] <buZz> 'devils designs' iirc
[18:37:37] <buZz> ah, np
[18:37:37] <jaggz> :)
[18:37:47] <buZz> that filament producer makes the -best- beige colored filament
[18:37:52] <jaggz> where are you?
[18:37:53] <buZz> looks like old C64 machine color
[18:37:54] <buZz> netherlands
[18:38:09] * jaggz quickly blocks tor hits to netherlands
[18:38:15] <buZz> lol
[18:38:16] <jaggz> (I use tor for sus irc links)
[18:38:51] <jaggz> mmm.. I grew up with the c64 (and vic20, but since the c64 was out...)
[18:38:54] <jaggz> learned to code on that thing
[18:39:06] <jaggz> Below the Root!
[18:39:17] <jaggz> best game ever
[18:39:41] <jaggz> https://www.youtube.com/watch?v=KJiRl61fgts
[18:39:42] <Paperbot_> YouTube video linked by jaggz: Free: How to run "Below the Root" in an Emulator - published by Jaggz H
[18:42:47] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[18:45:40] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 265 seconds)
[18:49:18] *** Joins: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net)
[18:49:54] <ningu> I have what's possibly a dumb question but I'll ask it anyway. is it possible in perl regular expressions (or any regex really) to do a search and replace while ignoring unicode combining marks i.e. \p{M}?
[18:51:17] <ningu> the idea would be you want to do something like: s/ab/ad/ and you'd like to do this in a way that's transparent to any combining mark on the "a", which in practice will be a subsequent unicode char as long as you've put it in NFD form first. acute accute, grave accent, etc
[18:52:06] *** Joins: Manderson (~manderson@45.40.80.170)
[18:52:19] <ningu> it's very easy to strip combining marks but I'm not sure how to do a search/replace that's transparent to them while preserving them. I guess it would be tricky to know how to map the replacement... like if you did s/ab/foo/ should it remove the mark or not?
[18:54:10] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[18:54:32] <ningu> given that I suppose it's hard to come up with a way that it would work so I'll just have to handle the cases as I want to specifically
[18:54:39] <Grinnz> yeah, there is no magic solution for that
[18:55:19] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[18:56:13] <Grinnz> you can match \p{General_Category: Combining_Mark} and then do with it what you will
[18:56:20] <ningu> yes, that's the same as \p{M}
[18:57:18] <ningu> at least, I think it is
[18:57:23] <Grinnz> similar
[18:57:49] <Grinnz> https://metacpan.org/pod/String::Tagged may be useful to treat different parts of the string differentyl
[18:57:49] <Paperbot_> Link title(s): [ String::Tagged - string buffers with value tags on extents - metacpan.org ]
[18:58:33] *** Joins: YaoNai (~YaoNai@user/yaonai)
[18:58:41] <ningu> ah yeah, that sort of thing can be useful in general
[18:59:54] <ningu> different question (well, related but only in the context of what I'm doing): \x{301} is combining acute, so suppose I want to do this: s/a(\x{301)?b/a$1d/ i.e. still match if the acute is there and preseve it when it is
[19:00:05] <ningu> should I just turn off uninitialized warnings or is there a more elegant solution?
[19:01:13] <ningu> I guess in this case (a\x{301})? would work
[19:01:16] <ningu> er
[19:01:22] <ningu> (a\x{301}?)
[19:01:31] <ningu> in other cases maybe not though
[19:01:59] <ningu> like s/a(\x{301)?b/e$1d/
[19:03:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:04:19] *** Joins: Manderson_ (~manderson@45.40.80.170)
[19:04:44] <Altreus> turning off warnings seems fine to me
[19:04:50] <Altreus> that's what scoping is for :)
[19:04:56] <ningu> hehe
[19:05:01] <Altreus> you can even make it clearer with do {}
[19:05:27] <Altreus> do { no warnings 'uninitialized'; ... } is basically why all those things are in place
[19:05:53] <ningu> what things?
[19:06:40] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[19:07:55] <Altreus> do, specific warning categories, and lexically-scoped warnings
[19:07:59] <ningu> ah yeah
[19:08:03] <EvanCarroll> Breaking Points is a pretty reasonable youtube show.
[19:09:16] <ningu> I guess I like to avoid uninitialized warnings anyway but this is a case where it seems reasonable (and trivial) to just turn them off
[19:10:01] <Altreus> yeah, normally they mean you've passed a bad argument to a function, but here it's just a natural part of the process
[19:10:24] *** Joins: ori (~atdt@user/ori)
[19:15:56] *** Joins: Manderson (~manderson@45.40.80.170)
[19:16:35] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[19:17:40] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[19:18:21] *** Joins: Manderson_ (~manderson@45.40.80.170)
[19:19:59] *** Quits: arthurpbs (~arthurpbs@168.121.99.239) (Ping timeout: 252 seconds)
[19:20:03] <Grinnz> ningu: making it optional within the capture group would make it empty string instead of undefined
[19:20:23] <Grinnz> seems like that would work fine in your other case too?
[19:20:32] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[19:20:49] <ningu> ah yes, I see
[19:20:52] <ningu> that's true
[19:22:49] *** Joins: Manderson (~manderson@45.40.80.170)
[19:23:18] *** Joins: anthk_ (~anthk_@92.176.105.30)
[19:23:37] <Altreus> oof, always a better answer
[19:24:32] *** Joins: __Manderson (~manderson@45.40.80.170)
[19:24:48] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[19:27:06] * GumbyPAN CPAN Upload: HTML-HTML5-Parser-0.991 by TOBYINK https://metacpan.org/release/TOBYINK/HTML-HTML5-Parser-0.991
[19:27:42] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[19:28:15] *** Joins: tg (~tg@rockylinux/infra/tg)
[19:29:20] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 252 seconds)
[19:32:39] *** Joins: arthurpbs (~arthurpbs@168.121.98.59)
[19:34:20] *** Joins: Manderson (~manderson@45.40.80.170)
[19:34:43] *** Joins: thrig (~thrig@65.113.153.50)
[19:36:29] *** Quits: __Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[19:37:07] * GumbyPAN CPAN Upload: HTML-HTML5-Parser-0.992 by TOBYINK https://metacpan.org/release/TOBYINK/HTML-HTML5-Parser-0.992
[19:37:14] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[19:37:32] *** Joins: Manderson_ (~manderson@45.40.80.170)
[19:37:55] *** Joins: Guest75 (~Guest75@2.135.75.132)
[19:37:58] *** Joins: randir (~randir@93.159.239.42)
[19:40:16] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[19:40:52] *** Quits: Guest75 (~Guest75@2.135.75.132) (Client Quit)
[19:43:22] <revhippie> jaggz: "Below the Root" - !! I couldn't remember the name of that game, and have off-and-on tried to look up what it was for _years_ now.  Thanks!
[19:56:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Ping timeout: 260 seconds)
[19:57:51] *** Parts: homura (root@user/homura) ()
[19:59:23] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:04:06] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[20:04:20] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[20:08:18] *** Quits: EvanCarroll (~ecarroll@88.246.75.188) (Ping timeout: 265 seconds)
[20:10:37] *** Quits: bmeneg (~bmeneg@2001:1284:f016:6898:8291:e243:7782:d783) (Ping timeout: 252 seconds)
[20:10:37] *** Joins: bmeneg_ (~bmeneg@2001:1284:f013:f5b1:a019:c9d0:dfdc:c90)
[20:11:45] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[20:12:14] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[20:15:01] *** Quits: roe_ (~mroe@dyn222132.cc.lehigh.edu) (Ping timeout: 252 seconds)
[20:19:47] *** Joins: Manderson (~manderson@45.40.80.170)
[20:22:10] *** Quits: perigrin (sid218253@id-218253.lymington.irccloud.com) (Ping timeout: 240 seconds)
[20:22:12] * GumbyPAN CPAN Upload: Minion-Backend-MongoDB-1.09 by EBRUNI https://metacpan.org/release/EBRUNI/Minion-Backend-MongoDB-1.09
[20:22:12] * GumbyPAN CPAN Upload: Crypt-OpenSSL-RSA-0.32 by TODDR https://metacpan.org/release/TODDR/Crypt-OpenSSL-RSA-0.32
[20:22:19] *** Joins: perigrin (sid218253@id-218253.lymington.irccloud.com)
[20:24:46] *** Joins: EvanCarroll (~ecarroll@88.246.74.66)
[20:25:42] *** Quits: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net) (Ping timeout: 265 seconds)
[20:26:57] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Ping timeout: 276 seconds)
[20:28:29] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[20:29:58] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:8ce1:c48d:4442:203d)
[20:31:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:37:28] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[20:46:51] <jaggz> revhippie, wow! :)
[20:47:03] <jaggz> it's seriously like one of if not the best game of all time
[20:47:35] <jaggz> timeless
[20:48:50] <revhippie> jaggz: in my memory it goes up against Tunnels of Doom, so it's kind of a challenge :)
[20:53:07] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[20:54:47] *** Joins: Manderson_ (~manderson@45.40.80.170)
[20:57:22] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[20:59:43] <shlomif> jaggz: revhippie : which game?
[21:00:30] <revhippie> shlomif: "Below the Root"
[21:00:35] <gordonfish> revhippie: Does that involve a whip-brandishing archeologist with a cool fedora and a goonie?
[21:00:52] <thrig> AST. Very Dangerous. You go first.
[21:02:50] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[21:03:23] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[21:05:08] <shlomif> revhippie: ah, i tried playing it on the PC. didn't get too far
[21:14:47] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[21:15:29] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[21:15:29] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[21:15:31] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[21:17:15] *** Joins: Manderson (~manderson@45.40.80.170)
[21:17:55] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 265 seconds)
[21:19:08] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[21:19:48] *** Joins: magla (~gelignite@55d4c46b.access.ecotel.net)
[21:19:54] *** Joins: zacts (~zak@user/zacts)
[21:30:20] *** LSD is now known as acidsys
[21:35:52] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[21:36:51] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[21:37:54] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:39:47] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[21:41:01] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Remote host closed the connection)
[21:43:54] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:45:55] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[21:47:36] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[21:48:51] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Ping timeout: 276 seconds)
[21:55:51] *** Joins: gast0n (~g4570n@user/gast0n)
[21:58:19] *** Joins: Pali (~pali@user/pali)
[22:00:43] *** Joins: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net)
[22:01:22] * GumbyPAN CPAN Upload: Test-Mock-LWP-Distilled-0.001_02 by SKINGTON https://metacpan.org/release/SKINGTON/Test-Mock-LWP-Distilled-0.001_02
[22:03:25] *** Quits: EvanCarroll (~ecarroll@88.246.74.66) (Ping timeout: 260 seconds)
[22:05:45] *** Quits: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net) (Ping timeout: 265 seconds)
[22:07:24] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:09:08] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:11:24] * GumbyPAN CPAN Upload: Test-Mock-LWP-Distilled-JSON-0.001_02 by SKINGTON https://metacpan.org/release/SKINGTON/Test-Mock-LWP-Distilled-JSON-0.001_02
[22:12:52] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[22:18:31] *** Joins: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net)
[22:19:07] *** Quits: ningu (~unamuno@135-180-40-59.fiber.dynamic.sonic.net) (Client Quit)
[22:19:54] <jaggz> shlomif, it's a bit less enjoyable without the mouse.. and I don't honestly know if I'd be patient enough to make it through such a game at this age
[22:20:23] <jaggz> but the environment and message was refreshing as a kid
[22:32:07] <gordonfish> Mmm, fresh, distilled JSON
[22:34:48] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[22:35:25] <shlomif> jaggz: ah, ok
[22:40:34] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:41:47] *** Joins: EGD (~egd@user/egd)
[22:42:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:53:29] *** Joins: anthk_ (~anthk_@92.176.105.30)
[22:54:10] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:56:17] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 245 seconds)
[22:56:28] * GumbyPAN CPAN Upload: IPC-Shareable-1.06 by STEVEB https://metacpan.org/release/STEVEB/IPC-Shareable-1.06
[23:01:50] *** Joins: fwg (~fwg@user/fwg)
[23:17:30] *** Quits: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com) (Ping timeout: 260 seconds)
[23:17:31] *** choroba is now known as choroba_
[23:18:24] *** Joins: ShorTie (~ShorTie@112.sub-72-108-77.myvzw.com)
[23:18:27] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[23:18:51] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[23:20:27] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:41:33] * GumbyPAN CPAN Upload: Alien-libvterm-0.01_001 by PEVANS https://metacpan.org/release/PEVANS/Alien-libvterm-0.01_001
[23:41:33] * GumbyPAN CPAN Upload: Term-VTerm-0.07 by PEVANS https://metacpan.org/release/PEVANS/Term-VTerm-0.07
[23:42:49] <Grinnz> https://discussion.fedoraproject.org/t/hello-interested-people/32944
[23:42:50] <Paperbot_> Link title(s): [ Hello interested people! - Fedora Chat (Matrix) - Fedora Discussion ]
[23:43:18] <Grinnz> fedora launching a matrix based chat system
[23:43:38] <Grinnz> there were rumblings of it when the whole freenode thing happened
[23:44:50] *** Joins: aspic (~shifty~~~@ppp121-44-117-75.syd-gls-har-bras39.tpg.internode.on.net)
[23:45:06] <LeoNerd> Hrm.. perhaps I should dust off Net::Async::Matrix and see that it still works for modern stuff
[23:45:17] <LeoNerd> Nut ugh,.. so many things
[23:51:10] *** Quits: proller (~p@2a02:6b8:0:40c:7d35:ab1e:428c:69b4) (Ping timeout: 252 seconds)
[23:53:14] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[23:54:54] *** Joins: defjam (~eb0t@90.214.8.179)
[23:56:40] *** Quits: eb0t (~eb0t@90.204.61.71) (Ping timeout: 240 seconds)
[23:56:47] *** Joins: anthk_ (~anthk_@92.176.105.30)
[23:56:47] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
