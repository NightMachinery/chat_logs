[00:01:39] <Ha-Jo> https://stackoverflow.com/questions/14693701/how-can-i-remove-the-ansi-escape-sequences-from-a-string-in-python
[00:01:58] <hzm74> Hello, check this simple python code (I’m a beginner). Why I always get “no good choice” when I enter 1 or 2, or anything I enter!!
[00:02:02] <hzm74> https://bpa.st/DSMQ
[00:02:09] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[00:03:11] <jinsun> hzm74: input() gives a string, you have to convert it to int by calling int() on the result if you want a int
[00:04:27] <Ha-Jo> ...or change the extression to contain a string:  --> q == "1"
[00:04:47] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[00:04:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[00:05:03] <raek> willow: that looks like ANSI control characters...
[00:05:18] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[00:05:35] <raek> what command are you running? some commands have a flag or environment variable to turn of colors in the output (one source of such control chars)
[00:06:10] *** Quits: jbe (~jbe@lysator/root/jbe) (Ping timeout: 260 seconds)
[00:06:15] <willow> raek: this is the raw command: vim -e -c 'exe "!echo " . &rtp' -c q!
[00:06:42] <willow> raek: it returns the vim runtimepath
[00:07:11] <hzm74> Jinsun + Ha-Jo. Thnx! Works both.
[00:08:03] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:08:16] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[00:09:08] <willow> run(['vim', '-e', '-c', 'exe "!echo " . &rtp', '-c', 'q!'], stdout=PIPE, stderr=DEVNULL)
[00:09:28] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:09:57] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[00:09:58] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[00:09:59] <raek> yeah, it's definitely vim that uses those control characters to control the terminal
[00:10:24] <raek> I don't know if vim has any mode for just printing stuff and not touching the terminal controls
[00:11:03] *** Joins: Auron (~Auron956@user/auron)
[00:11:04] <Ha-Jo> willow:  maybe you can change the output, if you change the TERM env.    --> TERM=vt100 vim -e ...
[00:11:20] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:11:30] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr)
[00:12:45] <raek> willow: is it possible to tell vim to write the runtimepath to a file instead?
[00:13:12] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[00:13:43] *** Quits: sazawal (~sazawal@122.161.81.235) (Quit: Leaving)
[00:13:48] <willow> raek: perhaps.  i'm not adept at vim programming.  what i do know is it's not simple to get the rtp outside of vim.
[00:14:10] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7)
[00:14:26] <willow> info on rtp: https://vimhelp.org/options.txt.html#%2527runtimepath%2527
[00:14:40] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[00:15:16] <raek> willow: another alternative is to go the route Ha-Jo suggested (stripping the control codes), for example using a library: https://pypi.org/project/strip-ansi/
[00:16:05] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[00:16:55] *** Joins: TuckerBrandy1997 (~TuckerBra@209.87.29.242)
[00:18:07] *** Joins: seednode (~seednode@user/seednode)
[00:18:41] <TuckerBrandy1997> https://dpaste.org/HZKW
[00:18:46] <TuckerBrandy1997> why does the if statement always execute
[00:19:32] <dextercd> TERM=vanilla will give you the fewest escape sequences (actually none on my machine)
[00:19:40] <dextercd> willow ^
[00:19:51] <mawk> TERM=lol
[00:20:10] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[00:21:45] <raxor2k> "
[00:21:45] <raxor2k> from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession" aint working here
[00:21:47] <raxor2k> any tips ?
[00:21:49] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:21:59] *** Quits: tpr (~tpr@user/tpr) (Ping timeout: 264 seconds)
[00:22:10] <nedbat> raxor2k: you have been here long enough to know that "aint working" isn't enough information.
[00:22:16] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[00:23:03] <willow> someone on #vim suggested: vim -T builtin_dumb -c 'echo &rtp|q'
[00:23:33] *** Quits: szymon (~ugh@37.120.156.164) (Remote host closed the connection)
[00:23:40] <raxor2k> i see everyone using "from sqlalchemy.ext.asyncio import AsyncSession" but for me this isnt working, i get error on ".asyncio"
[00:23:41] *** Quits: Ha-Jo (~Ha-Jo@2a01:c22:8c99:900:b58e:362e:34bc:16b3) (Quit: Client closed)
[00:24:09] <nedbat> raxor2k: step back and think: what information do you have in front of you that you should share in order to get help?
[00:24:54] *** Quits: remedan (~remedan@balak.me) (Quit: Bye!)
[00:25:25] <TuckerBrandy1997> Anyone can take a look at my code and give me some advice please?
[00:25:45] <Helenah> I'm finding asyncio confusing stilll. I can have like 2 if statements with await functions called if condition on one of them is met but when the result gets returned it seems I end up in both functions and having to set state variables to stop it...
[00:25:54] <nedbat> TuckerBrandy1997: it's easier to help if you provide the whole program.  for example, what type (and values) is MyFriends_100090908 ?
[00:25:57] <Helenah> But I'm finding this way of coding to be very tedious...
[00:25:57] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[00:26:11] *** Quits: canton7 (~canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[00:26:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:27:53] <Helenah> I'm wrote very complicated things in the past without the asyncio library and never had to put an abundance of stupid variables everywhere in my code.
[00:28:06] *** Joins: canton7 (canton7@about/csharp/canton7)
[00:28:09] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[00:28:20] <nedbat> Helenah: can you link us to your code?
[00:28:22] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[00:28:24] <Helenah> Sure!
[00:28:30] * Swayze is also curious
[00:29:02] <raxor2k> nedbat: well, i have this: https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html
[00:29:21] <nedbat> raxor2k: when you have an error, pastebin the full error report and traceback.
[00:29:32] <raxor2k> and i have this: https://towardsdatascience.com/build-an-async-python-service-with-fastapi-sqlalchemy-196d8792fa08
[00:29:52] <raxor2k> a lot of links that has code that starts with : from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
[00:29:53] <Helenah> Check out the user def and the part of the run def where I'm testing stdin. https://termbin.com/tymh
[00:30:08] <raxor2k> but "sqlalchemy.ext.asyncio" aint working here!
[00:30:09] <nedbat> raxor2k: you have a problem with your code, but you've only shown us links to documentation.
[00:30:14] <nedbat> raxor2k: stop this.
[00:30:34] <nedbat> raxor2k: did you really just say "aint working" again?
[00:30:42] <nedbat> raxor2k: are you reading anything I'm saying to you?
[00:31:02] <raxor2k> nedbat: yes u an¨
[00:31:04] <raxor2k> i am
[00:31:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:31:11] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[00:31:12] <nedbat> raxor2k: then why did you say "aint working"?
[00:32:03] *** Joins: remedan (~remedan@balak.me)
[00:32:39] *** Joins: jim (~jim@about/linux/staff/jim)
[00:33:29] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 268 seconds)
[00:34:18] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:36:28] <nedbat> raxor2k: we like to help people. we need information in order to help.
[00:36:50] <TuckerBrandy1997> nedbat MyFriends_100... is a collection, my program is a bit over 150+ line of codes and ppl norally goes silence when i provide the whole thing
[00:37:06] <willow> i see what the problem was.  the result of split() is a list, which i was directly printing, thus getting a repr of the list.  i just had to use a for loop to print each element of the list
[00:37:15] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca)
[00:37:17] <nedbat> TuckerBrandy1997: can you be more specific about "a collection"? what type is it?
[00:37:56] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[00:37:58] <nedbat> TuckerBrandy1997: can you provide a link to the code?
[00:38:14] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-402f-d6ba-4c5b-5ff0.res6.spectrum.com)
[00:38:15] <Helenah> 20:48:41 TuckerBrandy1997 | https://dpaste.org/HZKW
[00:38:34] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[00:38:48] <nedbat> Helenah: thanks, I was hoping to see the whole program to understand the types of the variables
[00:38:57] <Helenah> Ah
[00:39:21] <KirkMcDonald> In particular, the question is what this .find() method returns.
[00:39:31] <Helenah> TuckerBrandy1997: Yes, that's a situation I'm getting where if statements are ALWAYS executed and I'm having to use an abundance of variables to stop it reaching an unwanted conclusion.
[00:39:33] <Helenah> Ugh
[00:39:36] <TuckerBrandy1997> nedbat https://dpaste.org/gii2
[00:39:42] <Helenah> ALWAYS when I await!
[00:40:30] <nedbat> TuckerBrandy1997: thanks. I don't know if a mongodb cursor will be considered falsey if it found no documents.
[00:41:33] <TuckerBrandy1997> nedbat: https://dpaste.org/f9nH
[00:41:46] <TuckerBrandy1997> any advice on how i would fix that
[00:42:02] <nedbat> TuckerBrandy1997: does isDup work correctly?
[00:42:28] <TuckerBrandy1997> no
[00:42:29] <Helenah> Like I might have if var1 == 'foo': and if var1 == 'bar': with awaits within both and then find that... when result is returned both are executed regardless...
[00:42:31] <johnkeats6> is using map/filter/reduce in place of loops (when reasonable) discouraged by pythonists? i don't see it used much
[00:42:35] <TuckerBrandy1997> AttributeError: 'Cursor' object has no attribute 'count_documents'
[00:42:37] <Helenah> Like the testing was just completely ignored!
[00:42:40] <TuckerBrandy1997> like u said, it's a cursur
[00:43:00] <TuckerBrandy1997> im just not sure what find() returns
[00:43:02] *** Quits: jay-m126 (~jay-m@129.0.76.242) (Ping timeout: 256 seconds)
[00:43:12] <ChrisWarrick> johnkeats6: python’s syntax doesn’t lend itself too neatly to functional programming
[00:43:14] <KirkMcDonald> johnkeats6: It depends, but comprehensions are usually preferred over map and filter.
[00:43:25] *** Joins: parv (~quass@user/parv)
[00:43:30] *** Quits: jay-m126_ (~jay-m@129.0.76.242) (Ping timeout: 260 seconds)
[00:43:32] <nedbat> Helenah: can you link us to a complete actual program?
[00:43:49] <KirkMcDonald> johnkeats6: reduce can have its uses, but it's fairly situational.
[00:43:53] *** Joins: tpr (~tpr@user/tpr)
[00:44:02] *** Quits: as (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[00:44:13] <Helenah> nedbat: I already did, I think you missed it.
[00:44:15] <Helenah> 20:59:53          Helenah | Check out the user def and the part of the run def where I'm testing stdin. https://termbin.com/tymh
[00:44:16] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[00:44:25] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[00:44:29] <nedbat> Helenah: ah, i did, sorry
[00:44:34] <Helenah> No problem
[00:44:43] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[00:44:48] <johnkeats6> map returns an iterable right?
[00:44:55] <jinsun> TuckerBrandy1997: well the error tells you it returned a Cursor
[00:44:55] <ChrisWarrick> johnkeats6: yes
[00:45:24] <johnkeats6> so is there any semantic difference between (f(x) for x in y) and map(f, y)?
[00:45:37] <TuckerBrandy1997> jinsun: so how would I fix it?
[00:45:38] <nedbat> johnkeats6: there isn't a difference
[00:45:50] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[00:46:06] <nedbat> johnkeats6: i will use map for cases like that where the function already exists.  I won't use map+lambda
[00:46:41] <Helenah> nedbat: Just to let you know I feel like I hackily walked around EVERYTHING.
[00:47:33] <jinsun> TuckerBrandy1997: if I am reading the pymongo docs right, you don't need find, give your query directly to count_docuements
[00:48:17] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-5139-97f2-2b53-0c9a.res6.spectrum.com)
[00:48:22] <TuckerBrandy1997> like this? if list(MyFriends_100090908({'fname': fname}, {'lname': lname})).count_documents == 0:
[00:48:35] <TuckerBrandy1997> giving me syntax error
[00:49:23] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[00:49:39] *** Joins: delvian (~delvian@41.5.115.193)
[00:50:02] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[00:50:19] <Helenah> TuckerBrandy1997: And what's the exact syntax error?
[00:50:55] <jinsun> the extra closing brackets probably
[00:51:20] <nedbat> TuckerBrandy1997: try this:    if list(MyFriends_100090908({'fname': fname, 'lname': lname}).count_documents == 0:
[00:51:30] *** Quits: pigweed (~pigweed@97.119.229.83) (Quit: Leaving)
[00:51:39] <nedbat> TuckerBrandy1997: try this:    if len(list(MyFriends_100090908({'fname': fname, 'lname': lname})) == 0:
[00:52:01] <Helenah> Oh yeah!
[00:52:05] <TuckerBrandy1997> nedbat I still get syntax error
[00:52:20] <Helenah> Okies
[00:52:22] <TuckerBrandy1997> All I get is SyntaxError: invalid syntax
[00:52:47] <ChrisWarrick> TuckerBrandy1997: pastebin your complete code
[00:52:54] <TuckerBrandy1997> i alrd did
[00:52:56] *** Joins: slav0nic (slav0nic@python.su)
[00:53:02] <ChrisWarrick> TuckerBrandy1997: after the change
[00:53:14] <Helenah> And your complete error not just the tiny statement at the bottom.
[00:53:19] <Helenah> lol
[00:53:20] <TuckerBrandy1997> https://dpaste.org/KgSj
[00:53:20] <TuckerBrandy1997> but here
[00:53:47] <ChrisWarrick> TuckerBrandy1997: line 8 seems incomplete
[00:54:19] <Helenah> Yeh you've missed out a closing bracket
[00:54:24] *** Joins: henistein (~henistein@2001:8a0:fc9f:bc01:c783:a741:a7e9:5935)
[00:54:33] <Helenah> and double quote
[00:54:54] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[00:56:11] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:e9b6:8108:70ae:45d7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:56:23] <TuckerBrandy1997> now I get this: https://dpaste.org/Lrpw
[00:56:59] <jinsun> from the docs it looks it like it should be something like `MyFriends_100090908.count_documents(filter)`
[00:57:13] <TuckerBrandy1997> yeah i tried that too
[00:57:29] <jinsun> and what did that give?
[00:57:36] <TuckerBrandy1997> still get this: TypeError: 'Collection' object is not callable. If you meant to call the 'MyFriends_100090908' method on a 'Database' object it is failing because no such method exists.
[00:57:59] <jinsun> that is for the other thing you tried
[00:58:48] *** Joins: Pickchea (~private@user/pickchea)
[00:58:54] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[00:59:21] <jinsun> TuckerBrandy1997: try `MyFriends_100090908.count_documents({'fname': fname, 'lname': lname})` and report back
[01:00:07] <Helenah> nedbat: Hows the code reading going? :)
[01:00:11] <TuckerBrandy1997> it always return true
[01:00:18] <TuckerBrandy1997> jinsun
[01:00:50] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:00:55] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection timed out)
[01:01:52] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[01:02:14] <jinsun> True? or 0?
[01:02:27] *** Joins: Mindscape (~Lindis@user/lindis)
[01:02:53] *** Quits: lambda (~weechat@cyka.blyat.vodka) (Quit: WeeChat 3.2)
[01:02:55] <jinsun> it was supposed to give a number
[01:03:20] *** Quits: darksun (~darksun@user/darksun) (Quit: g'night)
[01:03:59] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 250 seconds)
[01:04:18] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:04:37] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[01:06:06] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[01:06:14] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[01:06:15] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:07:14] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[01:07:51] <TuckerBrandy1997> jinsun: if it's == 0 it return True else False
[01:08:42] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 260 seconds)
[01:08:51] <jinsun> Helenah: seems like a misunderstanding of how or works in your code, for example `if arg1 == 'add' or 'remove' or 'set'` is same as `if 'set'`
[01:09:11] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:09:17] <Helenah> Oh! o:
[01:09:44] <Helenah> So instead I'd do if arg1 == 'add' or if arg1 == 'remove' or if arg1 == 'set':
[01:09:46] <Helenah> Okies
[01:09:48] <Helenah> er...
[01:09:51] <Helenah> without the extra if's woops
[01:10:03] <Helenah> So the or's but not the following if's :3
[01:10:51] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:10:53] <Helenah> I'll correct those now :3
[01:10:54] <jinsun> or `if arg in {"add", "remove", "set"}`
[01:11:00] <Helenah> OH!
[01:11:15] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[01:12:06] <jinsun> TuckerBrandy1997: okay then something wrong with the query or the db doesn't have the entry really for all the cases you check, no idea what the correct query should look like
[01:12:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[01:12:30] *** ayusta is now known as ayustae
[01:12:33] <Evolver> What is the best way in which to install Python 3.10 on Ubuntu 21.04?
[01:13:59] <jinsun> pyenv is good, ubuntu has choice of deadsnakes PPA also
[01:15:08] <Helenah> jinsun: Lets say I did "if foo in bar:" isn't that not testing if "foo" can be found in "bar"?
[01:15:21] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[01:15:40] <Helenah> I'm confused by how the {} brackets make that do what I want it to do?
[01:15:50] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[01:15:58] <jinsun> the brackets are just syntax to make a set
[01:16:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:16:25] <Helenah> Yes ofcourse but add, remove and set aren't a set of variables.
[01:16:41] <jinsun> and yes foo in bar will check if bar contains foo
[01:17:05] <Evolver> Speaking of this, what's really bad is that when working with a Pandas series, `x in series` doesn't work.
[01:17:22] *** Joins: oriba (~oriba@x4db725e8.dyn.telefonica.de)
[01:17:34] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:17:38] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[01:17:48] <Helenah> I'm going to write some test code to play with the syntax you mentioned because I've never seen it before and need to be absolutely sure on how it works and certain on what it actually does.
[01:18:22] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:18:58] <jinsun> Evolver: yeah objects can define how "__contains__" works so it can be weird behviorr sometimes, pandas Series checks the index not the values
[01:19:01] <cow_2001> how do i cleanly kill a subprocess.Popen when the python script receives a killing / interrupting / whatever (there are so many kinds!) signal?
[01:19:14] <Evolver> jinsun: ah, thx
[01:19:22] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Max SendQ exceeded)
[01:19:36] <Evolver> jinsun: so i can do `x in series.values`
[01:19:40] *** Mindscape is now known as Bakunin
[01:19:57] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[01:20:06] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:20:29] <Helenah> Tested
[01:20:35] <Helenah> jinsun: Thank you for the suggestion. :)
[01:20:42] <Helenah> That's soo meat and tiny and short!
[01:20:46] <Helenah> *neat
[01:20:49] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[01:21:01] <Helenah> Now to put it into my program.
[01:21:03] *** Quits: magla (~gelignite@55d4b9e2.access.ecotel.net) (Quit: Stay safe!)
[01:21:19] <jinsun> Evolver: yeah, but keep in mind that will be O(n), index lookup is faster
[01:22:05] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:23:31] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[01:23:46] *** Quits: Narrat (~omnius@p200300df5f0df16c06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:23:48] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:23:48] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[01:24:15] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[01:24:39] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:21fd:7494:45f4:75b9)
[01:24:45] <jinsun> Helenah: oops, `if arg1 == 'add' or 'remove' or 'set'` is same as if `remove`, those chained ors will stop at the first truthy value and return that
[01:25:11] <Helenah> Yes I've fixed that
[01:25:42] <jinsun> yeah I was just correcting myself, I said if 'set'` earlier, it was if 'remove'
[01:26:19] <Helenah> Yes :)
[01:26:21] <Helenah> Thank you :)
[01:26:40] <Helenah> Going to write a problem
[01:26:49] <Helenah> Hoping this will get me some support
[01:27:23] <TuckerBrandy1997> many even a simple isDup function and having 4 ppl trying to help me and I still can't fix it
[01:27:25] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:21fd:7494:45f4:75b9) (Client Quit)
[01:27:54] <TuckerBrandy1997> pytho sux
[01:30:00] <grym> alternatively, learning is hard
[01:30:54] <mefistofeles> at the very least crazy costly, computationally
[01:31:18] <grym> thinking-hungry is horrible
[01:31:22] <Helenah> jinsun: https://termbin.com/bk02
[01:31:29] *** Joins: jim (~jim@about/linux/staff/jim)
[01:32:18] <TuckerBrandy1997> i can see learning is hard because a few ppl here trying to help me and their suggestions still can't fix it
[01:32:27] <TuckerBrandy1997> it's hard even for them
[01:32:43] <Helenah> How do I avoid this? I think I'm struggling to understand the asyncio documentation and there is my code to read to even correct me on but the example problem is my interpretion of what's going on.
[01:33:04] *** Joins: pycurious (~Adium@user/pycurious)
[01:35:10] *** Quits: WantToHelp (~WantToHel@user/wanttohelp) (Ping timeout: 256 seconds)
[01:35:27] <mefistofeles> TuckerBrandy1997: and you are not making it easier, surely
[01:35:59] *** Joins: jbe (~jbe@lysator/root/jbe)
[01:36:05] <jinsun> Helenah: can't reproduce that, https://bpa.st/TERQ, this prints only once, for the "one" case
[01:36:18] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[01:37:56] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[01:37:59] <Helenah> I'm not sure where I'm going wrong then, I've been battling it for 3-4 days, I've been sticking if's and else's inside if's and else's to test whether or not an if was entered that shouldn't have been entered so I can determine whether or not to just place a "pass".
[01:38:05] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:38:12] <TuckerBrandy1997> mefistofeles and how am i making it not easy surely
[01:38:21] <Helenah> It's all in my code, it's everywhere inside and outide the user() definition.
[01:38:23] <TuckerBrandy1997> u didn't even try
[01:39:34] <Helenah> mefistofeles: I had a problem in my earlier code where I was constantly opening and closing a config file as and when that data was needed but now I just store that data inside a dictionary and then close the file. :)
[01:40:13] *** Joins: Cyp_ (~cyp@213.237.85.9)
[01:40:25] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:40:49] <jinsun> Helenah: well earlier your if conditions were all evaluating to True because of the "or" mistake, if you fix that then you shouldn't see that behavior, asyncio definitely doesn't randomly enter if blocks even if the conditions was False
[01:41:08] <Helenah> Oh right!
[01:43:51] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr)
[01:43:51] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 250 seconds)
[01:48:44] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:48:48] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:48:56] *** tonitch_ is now known as tonitch
[01:49:25] *** Quits: resmo__ (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Quit: Leaving)
[01:51:22] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:51:40] *** Quits: greedom (~greedom@p200300de672bc30077d8928daad1e1f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:56:07] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 268 seconds)
[01:56:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:57:44] <Helenah> jinsun: Thank you thank you thank you
[01:58:06] <Helenah> I was tempted to put a heart but... recently someone got uncomfortable by that.
[01:58:22] <Helenah> I was banging my head for day with the code though so seriously thank you. I'll remember that in the future! :)
[01:59:08] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[01:59:27] <jinsun> Helenah: you're welcome :D
[01:59:41] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[02:00:26] *** Quits: TuckerBrandy1997 (~TuckerBra@209.87.29.242) (Ping timeout: 268 seconds)
[02:02:05] <Helenah> jinsun: I've stripped out a hell of a lot of code! :D
[02:02:16] <Helenah> And simplifying a load of non-redundant code! :D
[02:02:40] <Helenah> It's funny how... one mistake can result in a lot of problems!
[02:03:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[02:03:42] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[02:04:07] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:04:36] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[02:05:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:05:50] *** Joins: nomic (~nomic@185.217.117.51)
[02:05:56] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[02:06:35] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Ping timeout: 250 seconds)
[02:06:36] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[02:07:07] *** Joins: fikran (~fikran@user/fikran)
[02:08:04] <Helenah> jinsun: I don't like too much nesting so in parts of my code I might do stuff like this: https://termbin.com/d6nm I don't think it makes much difference apart from the extra lines of code but I suppose there is an equalibrium for example I don't and I suppose others don't like seeing code going off to the right of their screen.
[02:08:08] <Helenah> What do you think?
[02:08:51] <Helenah> But now I'm seeing where it no longer makes a difference in places since you helped so I'm going to fix that up to reduce lines! :D
[02:09:12] *** Joins: zebrag (~chris@user/zebrag)
[02:09:13] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:09:41] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:10:00] <Helenah> There is a place where I find it is useful though within my code. :) Like I suppose it can reduce the repeating of code! :D
[02:12:05] *** Joins: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc)
[02:12:05] <jinsun> Helenah: how did you save indentation with the first snippet? you will still have to indent after `if fooFound == 1` just like you had to after `if not foo is None:`
[02:12:35] <Helenah> Something like this: https://termbin.com/wfoz
[02:12:46] <Helenah> Yes
[02:12:49] <jinsun> `if not foo is None` reads bad btw, you should write `if foo is not None`
[02:12:59] <Helenah> Are you speaking of the dots?
[02:13:05] <Helenah> I agree with that actually!
[02:13:19] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:13:25] <Helenah> The dots just mean "code continues here, haven't placed, use your own imagination". :)
[02:13:39] <Helenah> It's placeholder
[02:14:16] <Helenah> Maybe I should've put instead "# code goes here"
[02:14:47] <Helenah> Oh I can do if foo is not!
[02:14:51] <Helenah> Damn I didn't know!
[02:14:56] <Helenah> jinsun: Thank you thank you :)
[02:15:08] <Helenah> I'm no noob either but it seems I'm always learning.
[02:15:20] <jinsun> no the ... makes sense, your newer example shows it better, the previous one was a bit confusing
[02:15:24] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[02:15:32] <jinsun> and that style is fine I think
[02:16:18] <Helenah> It prevents repeating "Command not found" :D
[02:16:35] <Helenah> I think it's better to repeat a variable than a message. :)
[02:16:52] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[02:17:00] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:18:09] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[02:18:09] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[02:18:28] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[02:18:47] *** Joins: withered_wolf (~withered_@174.25.131.17)
[02:19:31] *** Quits: lacrymology (~lacrymolo@181.167.210.254) (Ping timeout: 245 seconds)
[02:19:47] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:22:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: bbl)
[02:22:51] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:23:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:24:06] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[02:24:18] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:27:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:41] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:28:46] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:31:35] <parv> Helenah, What does happen after matching "command"?
[02:31:36] *** Quits: {HD} (~{HD}@86.106.121.200) (Ping timeout: 245 seconds)
[02:32:03] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[02:32:04] <Helenah> parv: Well I didn't write that code, it was just examples I quickly wrote for jinsun to ask them questions. :)
[02:32:08] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[02:32:14] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[02:32:27] <parv> Helenah, Aye. Thanks
[02:32:42] <Helenah> :)
[02:32:59] *** Joins: {HD} (~{HD}@86.106.121.200)
[02:33:02] *** Joins: ham5urg (~ham5urg@p5ddfc726.dip0.t-ipconnect.de)
[02:33:25] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[02:33:41] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Ping timeout: 245 seconds)
[02:33:46] *** Joins: Bakunin (~Lindis@user/lindis)
[02:34:12] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:34:33] *** Quits: ham5urg_ (~ham5urg@p2e54d8bb.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:34:44] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Ping timeout: 260 seconds)
[02:35:50] *** Joins: jay-m126 (~jay-m@129.0.76.208)
[02:36:22] *** Joins: jay-m126_ (~jay-m@129.0.76.208)
[02:37:37] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[02:38:18] *** Quits: jay-m126_ (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[02:38:18] *** Quits: jay-m126 (~jay-m@129.0.76.208) (Read error: Connection reset by peer)
[02:39:56] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[02:40:05] *** Joins: Skyfire (~pyon@user/pyon)
[02:40:22] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:41:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:42:02] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:42:46] <braxas> is there something like create python app
[02:43:02] <braxas> or like create react app but for python
[02:43:47] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:38] <meatballs> braxas: you might like to look at https://anvil.works/
[02:45:00] <braxas> eh, I meant more something to reduce the boilerplate for python
[02:45:18] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: relaxed atomics nightmares)
[02:45:23] <braxas> I want flake8, isort, mypy, etc all set up, and not something I manage
[02:45:32] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[02:45:56] <jinsun> you mean create the folder strructure and pyproject.toml for you?
[02:45:57] <nedbat> brabrax: look for cookiecutters
[02:46:13] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:46:31] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Read error: Connection reset by peer)
[02:46:36] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[02:46:46] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[02:47:41] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[02:47:55] *** Joins: TwinSteel (~bruce@107.115.33.209)
[02:48:23] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[02:48:28] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:50:16] <nedbat> brabrax: cookiecutter is a tool for generating projects. there are many cookiecutters for python, which is a problem: now you have to choose among them.
[02:50:26] <nedbat> braxas: ^^ (oops)
[02:52:40] <meatballs> braxas: are you perhaps looking for an IDE like pycharm or VS Code that has that linting, type checking etc. built in?
[02:52:51] *** Quits: onichomp666 (~onichomp@177.231.43.15) (Ping timeout: 245 seconds)
[02:53:02] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 240 seconds)
[02:53:10] <braxas> nedbat: cookiecutters copy all the boiler plate into my project, it is better than having to set it up
[02:53:24] <nedbat> braxas: right, it's a good thing.
[02:53:25] <braxas> but the nice thing with Create react app is that it does not copy all the boilerplate in
[02:53:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:53:40] <nedbat> braxas: how does it not copy in the boilerplate?
[02:53:49] <TwinSteel> Can someone give me an idea why the latest 'v' of python couldn't find openssl on my system ?
[02:53:51] <TwinSteel> https://bpa.st/3IDQ
[02:54:01] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[02:54:49] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[02:54:49] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ccbf-b509-9dbf-5059.res6.spectrum.com) (Read error: Connection reset by peer)
[02:55:36] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:56:17] <jinsun> you probably need libssl-dev too, have a look at https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[02:56:39] <braxas> nedbat: all the config for toolchain sits in the create react app, the only boiler plat it has is basically 4 scripts start,build,test,eject - and these just call react-scripts  {start,build,test,eject}
[02:57:01] <TwinSteel> Thanks, I'll run the cmds and see what it gets me..
[02:57:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[02:57:11] <braxas> there is no linting config, no typescript config, all of that is inside create react app dependency
[02:57:29] <nedbat> braxas: right, npm has packages for default configurations.
[02:57:39] <nedbat> braxas: and the package.json has references to those packages.
[02:57:54] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 256 seconds)
[02:58:06] <nedbat> braxas: that's a difference between python and js
[02:59:02] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[02:59:07] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: Textual IRC Client: www.textualapp.com)
[02:59:14] <nedbat> braxas: these days, lots of tool config can be in pyproject.toml or setup.cfg, reducing the need for lots of small files.
[02:59:39] *** Quits: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58) (Ping timeout: 268 seconds)
[03:00:15] *** Joins: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[03:00:17] <nedbat> braxas: i think the react app you end up with is completely independent of the create react app.
[03:00:19] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[03:00:53] <braxas> nedbat: if you use npm run eject, but if you use craco https://github.com/gsoft-inc/craco not really
[03:00:58] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[03:00:59] <braxas> you end up with basically very little boilerplate
[03:01:06] <braxas> in terms of toolchain config
[03:01:29] <nedbat> braxas: yes, i understand it's little boilerplate. my point is that it's not in the create react app.  It's in npm, referenced by the package.json
[03:01:51] <nedbat> braxas: but this is off-topic.  can we help you with how to set up a python project?
[03:02:04] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:02:18] <braxas> nedbat: nah it's okay, I just am annoyed with having so much toolchain boilerplate and I'm looking for ways to reduce it
[03:02:39] <nedbat> braxas: do you have a link to a project that you are looking at? We can help you reduce it
[03:03:30] <braxas> https://gitlab.com/aucampia/eg/python-service
[03:03:37] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:04:36] <jinsun> .flake8 and mypy.ini can both go in tox.ini
[03:04:49] <nedbat> braxas: you can put poetry.toml into pyproject.toml
[03:05:11] <nedbat> (in fact, most of this pyproject.toml file is about poetry)
[03:05:19] <braxas> jinsun: and then how do I use it without tox?
[03:05:37] <braxas> actually I don't really use tox, just copied it in from a template, should remove it
[03:05:39] <jinsun> they will read it from tox.ini even if you don't run tox
[03:05:47] <braxas> jinsun: TIL
[03:06:03] <braxas> would much rather have them in pyproject.toml
[03:06:17] <jinsun> mypy supports pyproject.toml now
[03:06:18] <nedbat> and the tox.ini can be put into pyproject.toml: https://tox.wiki/en/latest/example/basic.html?highlight=pyproject.toml#pyproject-toml-tox-legacy-ini
[03:06:27] <jinsun> flake8 doesn't unfortunately
[03:06:56] <nedbat> oh, but tox's support is weird for now.
[03:07:32] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 256 seconds)
[03:07:34] <braxas> like I said I'm not super hot on tox anyway, so that is not my primary concern. For libraries it makes sense but I don't really like how it works in general.
[03:07:43] <meatballs> I tend to use pyproject.toml for anything that supports it with a small setup.cfg for the few remaining bits and pieces that don't.
[03:08:10] <nedbat> braxas: if you don't mind me asking, what don't you like about how tox works?
[03:08:18] <braxas> anyway good to know I can get rid of poetry.toml
[03:08:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:08:31] <jinsun> yeah you can use setup.cfg instead of tox.ini too, though when you use poetry it feels wrong to add setup.cfg
[03:08:50] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:08:54] <braxas> nedbat: I would like to be able to just have it manage the environments, and not also tie the commands to it, so it is easier for me to just run one command in many environments, I think tox kind of have a way to do this, but it is clunky
[03:09:22] <braxas> if I could tell tox: tox run -e py37,py38 -- pytest test/test_fakeness.py
[03:09:25] <braxas> then it would be awesome
[03:09:42] <nedbat> braxas: right,  --notest  will set up the environment, and skip running the commands
[03:10:35] <nedbat> braxas: maybe you could write a tox.ini that would let you do that.
[03:10:53] <braxas> nedbat: I think I can yes
[03:11:21] <braxas> anyway it is pretty nice compared to not anythign in it's stead, I would much rather have tox on projects than nothing
[03:11:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:11:42] <braxas> just it annoys me slightly always, it feels like it's almost the tool I need
[03:12:10] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[03:13:33] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 250 seconds)
[03:16:22] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:16:45] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:17:22] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:17:44] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[03:19:09] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:20:08] <nedbat> braxas: it's frustrating when things are *almost* right :(
[03:20:56] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[03:21:59] <Swayze> unfortunately being almost or close to being right is no gaurantee of the effort it will take to get there
[03:22:06] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:22:13] <Swayze> :-(
[03:22:16] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 256 seconds)
[03:23:38] <Swayze> nature seems exponential like that sometimes, like getting from 50% to 90% takes half the effort of getting from 90% to 100%
[03:23:39] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[03:24:05] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:24:18] *** Joins: remolej (~kenoba@user/kenoba)
[03:25:48] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:26] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:26:28] *** Joins: Gerula (~Gerula@user/gerula)
[03:27:19] *** Joins: sunarch (uid526836@user/sunarch)
[03:28:22] *** Quits: damxsa (~damx@2001:16a2:cc46:e600:cd17:6bf3:a5a4:8bdc) (Quit: Leaving)
[03:28:53] *** Joins: xardas (~xardas@149.233.51.127)
[03:29:06] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 245 seconds)
[03:29:51] <TwinSteel> jinsun: that resulted in a clean configure and a clean compile, doing the 'make install' now..
[03:30:25] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:30:49] <jinsun> make sure to not do that as root or you will end up in a mess
[03:30:59] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[03:31:24] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[03:32:08] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[03:32:26] *** Quits: xardas (~xardas@149.233.51.127) (Client Quit)
[03:32:33] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[03:32:56] <TwinSteel> I'm trying to eventually build a program named 'NanoVNA-Saver' and I've been getting nothing but PyQt5 and other errors along the way, so I've been slowly marching UP the Py version Tree trying to find a sweet spot...   the build process wants me to build with Py3.7 but even that has serious fails.
[03:33:08] <TwinSteel> Yes, install as root..
[03:34:10] *** Joins: cdown_ (~cdown@89.32.122.5)
[03:34:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:36:11] *** Quits: grimvar (~grimvar@i5C75F51B.versanet.de) (Ping timeout: 245 seconds)
[03:36:36] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 245 seconds)
[03:37:18] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 265 seconds)
[03:37:19] *** cdown_ is now known as cdown
[03:37:54] *** Joins: grimvar (~grimvar@i5C75F617.versanet.de)
[03:39:02] <TwinSteel> jinsun: install resulted in these Warnings (no erors)   https://bpa.st/WE3A
[03:39:09] *** Joins: iflema (~ian@user/iflema)
[03:39:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:40:22] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[03:41:46] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 260 seconds)
[03:42:13] <jinsun> oh did you run as root? I said NOT run as root, will make a mess that is hard to clean up
[03:42:14] *** Quits: p-i-_ (~Ohmu@223.206.149.59) (Remote host closed the connection)
[03:42:51] *** Joins: p-i- (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th)
[03:42:59] <jinsun> that pip scheme thing is something I'm seeing the first time, but seems like lot of people get it https://github.com/pypa/pip/issues/10151
[03:43:14] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 256 seconds)
[03:43:51] *** Joins: Andrynet (~Andrynet@190.152.206.99)
[03:44:16] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:e0ac:7e42:249b:81ae) (Ping timeout: 260 seconds)
[03:45:43] <jinsun> seems like not too dangerous, just report it on that github page if you want and ignore it
[03:48:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[03:49:35] *** Joins: bindu (~bindu@user/bindu)
[03:52:06] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[03:52:33] *** Joins: Trieste (T@user/pilgrim)
[03:53:06] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[03:53:22] *** Joins: pycurious (~Adium@user/pycurious)
[03:53:33] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[03:53:58] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[03:54:00] *** Joins: iflema (~ian@user/iflema)
[03:56:25] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[03:57:55] *** Joins: BinaryWave_ (~BinaryWav@ip68-2-121-39.ph.ph.cox.net)
[03:58:36] *** Quits: oriba (~oriba@x4db725e8.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:58:53] <TwinSteel> Sorry, just got through cursing out Github...   I've had an account on there for a long time now, just tried to log in and it seems I'm no longer there.  NOT going through the signup hoops AGAIN...   They can figure this shit out on their own !!!   Or stop deleting members...
[03:59:02] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[03:59:10] <p-i-> So hard to find a competent data scientist on upwork. The engineering grade on this channel is so far ahead of the curve, it's like interacting with a different species.
[03:59:59] <TwinSteel> jinsun: thanks..   I'm going to go back, get a fresh zip of the Python code and see if I can get a clean build this time..
[04:00:30] <TwinSteel> NanoVNA-Saver v0.3.4
[04:02:00] <TwinSteel> Awww  Crap !!!  I just now saw the NOT !!!   @#$%^&&^$%^&
[04:02:09] <p-i-> TwinSteel: As I remember there's more faffing needed now to interact with github via CLI. Can you find messages from GitHub in your email? Maybe you're using the wrong email. I can't imagine they "deleted your account". If they were in the habit of destroying the source code of their members there would be an outcry.
[04:02:55] <TwinSteel> jinsun: guess I have a mess to clean up...   :'-(
[04:03:11] *** Quits: BinaryWave_ (~BinaryWav@ip68-2-121-39.ph.ph.cox.net) (Quit: BinaryWave_)
[04:04:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:04:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:05:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:05:49] <jinsun> TwinSteel: doable, but have to be careful not to touch any system files, because you will have to do it as root, or just live with this python version forever
[04:06:01] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Read error: Connection reset by peer)
[04:06:14] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[04:06:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[04:06:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:06:22] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[04:07:29] *** Quits: Andrynet (~Andrynet@190.152.206.99) (Ping timeout: 268 seconds)
[04:08:00] *** Joins: Skyfire (~pyon@user/pyon)
[04:08:03] *** Quits: henistein (~henistein@2001:8a0:fc9f:bc01:c783:a741:a7e9:5935) (Quit: Client closed)
[04:08:23] *** Batzy_ is now known as Batzy
[04:08:27] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[04:08:47] *** Parts: JAA (~JAA@user/jaa) ()
[04:08:51] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:09:19] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:09:55] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[04:10:29] <TwinSteel> jinsun: I've been thinking I've got so many versions of Python on this now, it might be better just to remove them ALL and start over from scratch with v3.10
[04:10:40] *** Quits: dav1d (~dav1d@user/dav1d) (Quit: Ping timeout (120 seconds))
[04:10:58] *** Joins: dav1d (~dav1d@user/dav1d)
[04:11:04] <TwinSteel> jinsun: none of them seem to be complete, but are missing little things here and there that screw up the compiling..
[04:11:22] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Client Quit)
[04:11:30] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[04:12:53] <jinsun> TwinSteel: I would just switch over to pyenv instead of manually compiling, very less chance of making a mess that way, and if something goes wrong you can just rm -rf .pyenv and start over
[04:13:12] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[04:14:24] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:15:37] <TwinSteel> jinsun: I'm back to v2.7.18 of Python now, buty I'm sure there are lingering ghosts everywhere.   I haven't heard of 'pyenv' a lot, but I'll check it out..
[04:16:14] <jinsun> TwinSteel: https://github.com/pyenv/pyenv-installer
[04:16:28] *** Joins: fikran (~fikran@user/fikran)
[04:19:01] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-5139-97f2-2b53-0c9a.res6.spectrum.com) (Quit: Konversation terminated!)
[04:19:04] *** Quits: freeman_h (~freeman_h@94.0.217.120) (Read error: Connection reset by peer)
[04:19:12] <TwinSteel> jinsun: perhaps 'pyenv' will find all the branches of what's been slapped on here, and I can nuke the ancient stuff.    Thank You for the idea..
[04:22:36] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Read error: No route to host)
[04:22:41] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[04:26:35] *** Quits: nomn (nomn@user/nomn) (Ping timeout: 268 seconds)
[04:27:34] *** Joins: nomn (nomn@user/nomn)
[04:28:25] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e02c:76d4:b60e:293)
[04:28:36] *** gaybread is now known as barackobama
[04:28:46] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:29:47] *** barackobama is now known as granite
[04:30:19] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[04:30:21] <TwinSteel> jinsun: just to be sure I get this right...   I need to git clone that URL you listed, and then do a build and install of that from the cloned dir, yes ?
[04:30:29] *** AmyMalik is now known as MelMalik
[04:30:49] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:31:04] <cluelessperson> TwinSteel, depends on what you're trying to do.  If you're trying to install pyenv, just use the pyenv installer?
[04:32:24] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[04:33:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:33:04] <TwinSteel> cluelessperson: then is that a curl to the run file on git ?
[04:33:32] <TwinSteel> cp: yes, just want to install 'pyenv' for now
[04:33:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[04:34:08] *** granite is now known as foxbox
[04:34:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:35:03] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[04:38:55] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[04:40:42] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:41:04] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[04:44:45] *** Quits: TJ- (~root@about/linux/staff/tj-) (Quit: Ooops, that broke it!)
[04:46:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[04:48:00] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:48:41] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[04:49:17] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[04:53:01] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[04:53:13] *** Quits: flokuehn (~flokuehn@87.123.247.61) (Ping timeout: 250 seconds)
[04:53:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:53:52] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611)
[04:53:53] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[04:54:06] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[04:54:31] *** Joins: Roey (~Roey@user/Roey)
[04:54:44] *** Joins: iflema (~ian@user/iflema)
[04:55:05] *** Joins: flokuehn (~flokuehn@87.123.247.62)
[04:56:16] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:56:21] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[04:56:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:58:33] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:01:06] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:01:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:03:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[05:09:31] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[05:10:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:11:19] *** Joins: Siecje (~Siecje@216.154.14.35)
[05:11:47] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[05:12:48] <Siecje> Hi all
[05:13:01] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:13:54] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:14:48] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:15:18] *** Quits: y1n (~y1n@77.119.202.111.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[05:16:12] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:16:33] <domhnall> Hi
[05:16:59] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:17:06] <Siecje> domhnall: What have you been working on recently?
[05:18:32] *** Quits: esv (~esv@216.237.228.11) (Remote host closed the connection)
[05:19:38] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:21:49] *** Parts: TwinSteel (~bruce@107.115.33.209) ("Tired of dealing with Computer BS for the day !")
[05:22:34] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 260 seconds)
[05:22:58] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 256 seconds)
[05:23:46] *** Joins: esv (~esv@216.237.228.11)
[05:25:02] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[05:25:48] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 256 seconds)
[05:27:31] *** Joins: faLUKE (~paolo@host-80-117-216-225.pool80117.interbusiness.it)
[05:27:32] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:27:47] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[05:28:00] <faLUKE> hello helpful people. Why f.read() adds a newline at the end of the read content ?
[05:28:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:29:16] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[05:30:13] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:03] <grym> faLUKE: probably the file has one too
[05:33:14] <grym> oh, no, it doesn't...
[05:33:16] <faLUKE> grym: no. But I solved with rstrip()
[05:33:36] <faLUKE> anyway, this is very strange
[05:33:40] <altendky> what's the proper way to write and hint `.__new__()`?  https://mypy-play.net/?mypy=latest&python=3.10&gist=68787b9acf32e53894a969482a6f6fba  there are some mypy tickets that seem related so maybe it's just not possible.  but, since i mostly just avoid writing `.__new__()` like the plague...  i'm not super experienced here.  and honestly, `super()` seems half wrong anyways since the second param seems not really applicable.
[05:33:48] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 268 seconds)
[05:34:11] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Read error: Connection reset by peer)
[05:34:56] <p-i-> https://gist.github.com/vidakDK/de86d751751b355ed3b26d69ecdbdb99#gistcomment-3971684 <-- can anyone think how the "coworker" was able to achieve a gcc `InstalledDir: /Library/Developer/CommandLineTools/usr/bin`?
[05:34:56] *** Joins: vlm (~vlm@user/vlm)
[05:36:02] <p-i-> `/Library/Developer/CommandLineTools/usr/bin/gcc --version` reports `InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin`
[05:36:53] *** Joins: snalty (~Shhh@user/snalty)
[05:37:28] <p-i-> `brew install gcc` doesn't actually seem to install gcc. It just applies a minor version update to a preexisting avr-gcc:
[05:37:32] <p-i-> 🍺  /usr/local/Cellar/avr-gcc@8/8.4.0_2: 1,741 files, 204.7MB
[05:37:32] <p-i-> Removing: /usr/local/Cellar/avr-gcc@8/8.4.0_1... (1,741 files, 205.0MB)
[05:38:04] <non-sense> I'm using 3.9.9 and I can't figure out why I can't import yaml? I've never had this issue before. pip install pyyaml gives me 6.0, I've tried 5.4.1 with same results.
[05:38:16] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 256 seconds)
[05:38:54] <nedbat> non-sense: use "python -m pip" instead of "pip"
[05:39:50] *** Quits: faLUKE (~paolo@host-80-117-216-225.pool80117.interbusiness.it) (Read error: Connection reset by peer)
[05:39:51] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[05:40:06] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[05:40:24] *** Quits: driib2 (~driib@185.195.233.168) (Quit: The Lounge - https://thelounge.chat)
[05:40:24] <non-sense> wow.
[05:40:27] <non-sense> But like, why?
[05:40:47] *** Joins: driib2 (~driib@185.195.233.168)
[05:40:50] <non-sense> nvm. I can read up on it. Thank you!
[05:41:06] *** Joins: iflema (~ian@user/iflema)
[05:42:01] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[05:42:29] *** Joins: iflema (~ian@user/iflema)
[05:43:17] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[05:43:31] <non-sense> I have a feeling this will fail if installing from requirements.txt ?
[05:43:36] *** Joins: binary011 (~binary01@174.141.153.217)
[05:43:53] *** Joins: iflema (~ian@user/iflema)
[05:44:11] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[05:44:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:44:48] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[05:44:59] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 250 seconds)
[05:46:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:46:56] *** Joins: zeden (~zeden@user/zeden)
[05:46:59] *** Joins: jim (~jim@about/linux/staff/jim)
[05:47:20] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[05:47:58] <nedbat> non-sense: because "pip" is referring to a different Python installation
[05:48:08] <nedbat> non-sense: this is very common, unfortunately
[05:48:16] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[05:48:25] <nedbat> non-sense: and requirements.txt will be fine, because you still provide the pip command.
[05:49:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[05:49:24] <non-sense> Yes, it all makes sense now. I do have multiple installtins as well.
[05:50:23] <non-sense> -m ensures the according interpreter is used.
[05:50:30] <nedbat> non-sense: yes, exactly
[05:52:16] *** Quits: AsenMx (~AsenMx@user/asenmx) (Quit: Leaving)
[05:53:06] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:53:46] *** Quits: l4yer (~l4yer@2001:ac8:31:6e:1011:aaea:946c:9a98) (Ping timeout: 260 seconds)
[05:54:26] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:57:21] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 250 seconds)
[05:58:07] <dba> let say we have class Class1: and then another class inheriting from Class1, class Class2(Class1) would there be 2 object of Class1 and Class2 in memory or only one for Class2 ?
[05:58:58] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:59:31] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 245 seconds)
[06:00:19] <dba> abstracted code https://bpa.st/EE4A
[06:00:43] <nedbat> dba: there is only one object, with type Class2
[06:01:01] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:01:02] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:01:11] <nedbat> dba: (technically, the classes themselves are also objects, so there are three:  Class1, Class2, and c)
[06:01:16] *** Joins: qpdb (~qpdb@user/qpdb)
[06:01:26] *** brabrax_ is now known as brabrax
[06:01:30] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[06:02:07] <dba> nedbat, there still be one object in memory even we called an object from Class1?
[06:02:53] <dba> I mean the interpreter is not going to create an instance for Class1 to access that object?
[06:03:31] <nedbat> dba: right
[06:03:32] *** Joins: Fiji (~Fiji@user/fiji)
[06:03:47] <nedbat> dba: in your code, there is no object with type Class1
[06:05:39] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b5c3:77c:d51f:bd2a) (Quit: Leaving)
[06:06:30] <dba> nedbat: in this case https://bpa.st/SXPA there still would be one object create in memory, if yes would be be for Class1 or Class2 or both?
[06:06:59] <nedbat> dba: you've still made a Class2 object.
[06:07:29] <nedbat> dba: an object only has one type.  but it can be an instance of a few types.  Your object has type Class2, and is an instance of both Class2 and Class1
[06:07:41] <nedbat> (because all Class2 objects are instances of Class1 and Class2)
[06:07:50] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[06:08:20] <dba> nedbat: make sense, Thanks
[06:08:41] <nedbat> dba: good, because as I was typing it, it sounded confusing to me :)
[06:09:44] <dba> nedbat, lol
[06:09:51] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[06:11:32] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[06:12:02] *** Joins: newpy (~newpy@206.168.231.90)
[06:13:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:15:38] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[06:18:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[06:18:40] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[06:18:47] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:18:49] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:88ab:fa01:43a0:6e9)
[06:19:03] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[06:19:22] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[06:19:25] *** Joins: Fiji_ (~Fiji@user/fiji)
[06:19:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:22:26] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:88ab:fa01:43a0:6e9) (Client Quit)
[06:22:29] *** Joins: riposte (~finalripo@2403-5802-74-2--16c3.ip6.aussiebb.net)
[06:23:16] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 245 seconds)
[06:23:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[06:25:47] *** Joins: fikran (~fikran@user/fikran)
[06:26:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:27:01] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-402f-d6ba-4c5b-5ff0.res6.spectrum.com) (Ping timeout: 245 seconds)
[06:27:38] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[06:28:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:28:12] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[06:32:51] *** Quits: ubert (~Thunderbi@p200300ecdf0ba227e6b318fffe838f33.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:33:02] *** Quits: testusr (~testusr@user/testusr) (Ping timeout: 240 seconds)
[06:33:09] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[06:33:58] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[06:34:40] *** Quits: Siecje (~Siecje@216.154.14.35) (Remote host closed the connection)
[06:37:01] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:38:14] *** Joins: zaquest (~notzaques@5.130.79.72)
[06:40:09] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:41:14] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[06:43:11] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[06:43:25] *** Joins: chuck_ (~chuck@181.191.143.126)
[06:43:31] *** bparker_ is now known as bparker
[06:43:57] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:44:06] *** Joins: frost (~frost@user/frost)
[06:44:37] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-05d7-e490-d0b8-c8dd.res6.spectrum.com)
[06:46:05] *** Joins: withered_wolf (~withered_@174.25.131.17)
[06:49:36] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[06:50:37] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Quit: This computer has gone to sleep)
[06:50:59] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:51:38] *** Quits: chuck_ (~chuck@181.191.143.126) (Quit: leaving)
[06:52:23] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[06:52:27] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[06:53:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:54:03] *** Joins: iflema (~ian@user/iflema)
[06:54:21] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:54:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[06:54:38] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[06:55:15] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611)
[06:57:42] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[06:58:18] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[07:03:14] *** Joins: pycurious (~Adium@user/pycurious)
[07:03:52] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:06:22] *** Joins: jim (~jim@about/linux/staff/jim)
[07:07:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[07:07:11] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[07:09:29] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[07:10:08] *** Joins: SteveR (~SteveR@103.215.168.1)
[07:11:11] *** Quits: davor (~davor@user/davor) (Ping timeout: 245 seconds)
[07:11:35] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[07:11:37] *** Joins: davor (~davor@user/davor)
[07:11:58] *** Joins: Pixi (~Pixi@user/pixi)
[07:13:07] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[07:14:08] *** Joins: nac (~nac@user/nac)
[07:14:11] *** Joins: oakridge (~oakridge@user/oakridge)
[07:18:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[07:22:47] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:24:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:27:26] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr)
[07:28:54] *** Joins: stranac (~stranac@195.29.239.126)
[07:30:25] *** Quits: KombuchaKip (~kip@192.252.230.5) (Read error: Connection reset by peer)
[07:30:47] *** Joins: KombuchaKip (~kip@192.252.230.5)
[07:31:36] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800e139810da53459e9.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[07:34:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:10] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:57] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[07:38:31] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 250 seconds)
[07:41:40] *** Joins: nikkc (~nikkc@2603-7080-0103-7aa9-0d7b-0644-93c5-fb6f.res6.spectrum.com)
[07:42:58] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[07:43:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:43:33] *** Quits: ckdCreations (~ckdCreati@147.55.133.133) (Read error: Connection reset by peer)
[07:44:30] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[07:49:33] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[07:55:39] *** Joins: l4yer (~l4yer@195.181.170.210)
[07:56:45] *** Joins: Fiji- (~Fiji@user/fiji)
[07:58:53] *** Quits: sreve (~quassel@p4ff44a43.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:59:20] *** Joins: sreve (~quassel@p4ff44a31.dip0.t-ipconnect.de)
[07:59:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:00:56] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[08:02:24] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[08:05:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[08:06:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:08:33] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[08:08:52] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[08:09:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[08:14:09] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:15:20] *** Joins: chandankumar (~chandanku@51.159.58.174)
[08:16:40] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[08:17:13] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2c68:fbfc:2fac:4286)
[08:19:50] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 260 seconds)
[08:19:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:21:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[08:23:32] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 240 seconds)
[08:23:38] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[08:26:34] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[08:26:46] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[08:27:27] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:27:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:27:51] *** Joins: sgn (~sgn@user/sgn)
[08:29:09] <enrh> Is it remotely possible with FastAPI to create an endpoint that tells the main process to refresh some cached information?
[08:29:39] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[08:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:42] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:41] <dreamer> you mean cache invalidation?
[08:32:51] <enrh> I don't know what that means
[08:33:08] <dreamer> are you caching directly with python/fastapi or using a caching proxy like nginx?
[08:33:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[08:33:17] <enrh> Directly
[08:33:25] <dreamer> ok, I have no idea how that works
[08:33:45] <dreamer> with nginx you can send a special header and it'll invalidate the local cached values. then retrieve the updates ones
[08:34:02] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[08:34:27] <enrh> We may be talking about two different things
[08:34:54] <enrh> I'm going to go read some and see if I can ask a better question
[08:35:08] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[08:35:08] *** Joins: fikran (~fikran@user/fikran)
[08:39:40] <Omega037> So I went to see if I could figure out how pandas' to_clipboard() method works
[08:40:26] <Omega037> It works fine locally, but not when I use it with a cloud-based Jupyter notebook
[08:40:42] *** Joins: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:41:08] <Omega037> It is in the generic.py file, which is the longest python module I have seen in my life
[08:41:18] <Omega037> Of legit working code, that is
[08:41:28] <Omega037> 11713 lines of Python
[08:43:18] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:43:56] <esaym153> Omega037: so how does it work? :)
[08:45:16] <InPhase> Omega037: Yeah, it sounds very unlikely that would work in Jupyter.
[08:45:30] <InPhase> Omega037: Jupyter would probably need to special-case that.
[08:45:35] <Omega037> Not sure, it was an interface calling from a clipboards module or something
[08:45:48] <Omega037> Also, seems like Linux vs Windows was an issue
[08:45:56] <Omega037> Linux was harder, it seems
[08:46:11] <Omega037> The Jupyter notebook is running in a docker container based on Ubuntu
[08:46:21] *** Joins: kdc (~kdc@196.211.197.159)
[08:46:26] *** Quits: Atlas667 (~Atlas667@193.27.12.10) (Ping timeout: 260 seconds)
[08:46:35] <Omega037> Anyways, it would be nice but not a requirement for my work
[08:46:40] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 260 seconds)
[08:46:53] <Omega037> Unfortunately, very few consumers of my results can use Python
[08:47:27] <Omega037> I have gotten a few to use the BigQuery console, so I can just stage the data there with pandas' to_gbq() and then point them that way
[08:47:43] <Omega037> Still, much easier to copy into an excel table and email stuff
[08:48:09] <InPhase> Omega037: Just dump with to_excel or to_csv
[08:48:34] <Omega037> Then I gotta pull the file down
[08:48:47] <Omega037> Which isn't too bad in JupyterLab
[08:49:03] <Omega037> But like, if this is just a quick results table
[08:49:10] <Omega037> 5 columns, 10 rows
[08:49:53] <Omega037> About 50% of the time, I can just highlight with the mouse and copy-paste manually without borking the formatting
[08:50:01] <InPhase> If it's small, you could print it as csv in Jupyter and copy/paste
[08:50:17] <Omega037> I guess my hope was to understand what happens under the hood with clipboard and copying into Excel
[08:50:21] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[08:50:35] <Omega037> I'm sure there is something I can read, but I tend to learn better just by digging in and trying stuff
[08:51:00] <InPhase> Excel accepts csv or tsv text on the clipboard for ordinary stuff.  I implemented that from scratch before.
[08:51:07] <Omega037> Hmm
[08:51:40] *** Joins: ExeciN (~ExeciN@user/nicexe)
[08:52:20] <Omega037> I think to_csv() will return it as a string without a file path or object
[08:53:29] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:56:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[09:02:24] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[09:02:44] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[09:03:46] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[09:06:44] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[09:19:44] *** Joins: emf (~emf@2620:10d:c090:400::5:4c86)
[09:21:33] *** Quits: xdeadface_ (~xdeadface@gateway/tor-sasl/xdeadface) (Ping timeout: 276 seconds)
[09:23:15] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.0)
[09:26:59] *** Joins: ATAD_ (~ATAD@user/atad)
[09:27:46] *** Joins: dvx (~dvx@5.181.92.64)
[09:30:27] *** Joins: dohtem (uid524096@user/dohtem)
[09:31:51] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[09:34:18] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[09:37:27] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:38:02] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:38:10] *** Joins: DerpGusta (~quassel@user/derpgusta)
[09:40:08] *** Quits: ATAD_ (~ATAD@user/atad) (Quit: Yep)
[09:41:16] *** Quits: DerpGusta (~quassel@user/derpgusta) (Client Quit)
[09:41:57] *** Joins: DerpGusta (~quassel@user/derpgusta)
[09:43:26] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[09:45:12] *** Quits: m1dnight_ (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[09:46:31] *** Joins: txtsd (~txtsd@user/txtsd)
[09:46:44] *** Joins: m1dnight (~christoph@christophe.dev)
[09:48:59] *** Quits: gryzli (~gryzli@84-238-170-30.ip.btc-net.bg) (Ping timeout: 265 seconds)
[09:54:09] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:55:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:55:32] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[09:56:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:58:30] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:58:56] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:03:02] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.0) (Ping timeout: 260 seconds)
[10:06:11] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 245 seconds)
[10:10:02] *** Quits: emf (~emf@2620:10d:c090:400::5:4c86) (Quit: emf)
[10:10:46] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 245 seconds)
[10:13:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:19:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:20:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:22:33] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:1da2:f9da:5bbb:bb23) (Ping timeout: 250 seconds)
[10:26:26] *** Quits: nikkc (~nikkc@2603-7080-0103-7aa9-0d7b-0644-93c5-fb6f.res6.spectrum.com) (Quit: Client closed)
[10:27:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:29:10] *** Joins: pycurious (~Adium@user/pycurious)
[10:29:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:33:28] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:35:14] *** Quits: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com) (Read error: Connection reset by peer)
[10:36:00] *** Joins: Elzington (~Elzington@static-68-235-44-76.cust.tzulo.com)
[10:39:02] *** Joins: jay-m126 (~jay-m@129.0.76.211)
[10:39:02] *** Joins: jay-m126_ (~jay-m@129.0.76.211)
[10:41:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:41:17] *** Joins: jim (~jim@about/linux/staff/jim)
[10:41:18] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:42:14] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:42:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:42:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:44:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[10:44:22] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:44:29] *** Joins: fikran (~fikran@user/fikran)
[10:45:28] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:47:35] *** Joins: bandit_za (~bandit@102-65-138-35.dsl.web.africa)
[10:48:13] *** Joins: emf (~emf@2620:10d:c090:400::5:4c86)
[10:48:18] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[10:48:26] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6450:3e1f:fbe5:993b) (Quit: Leaving)
[10:49:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:49:23] *** Joins: pycurious (~Adium@user/pycurious)
[10:50:34] *** Joins: Batzy_ (~quassel@user/batzy)
[10:52:00] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 268 seconds)
[10:52:26] *** Quits: Batzy (~quassel@user/batzy) (Ping timeout: 245 seconds)
[10:53:10] *** Joins: vit (~vit@chello085216193138.chello.sk)
[10:53:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[10:53:56] *** Quits: emf (~emf@2620:10d:c090:400::5:4c86) (Quit: emf)
[10:54:02] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:54:35] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[10:54:40] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-6.poda.cz)
[10:54:41] *** Joins: han-solo (~hanish@user/han-solo)
[10:55:06] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 268 seconds)
[10:55:14] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611)
[10:56:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[10:56:42] *** Quits: lyr (~lyr@user/lyr) (Ping timeout: 260 seconds)
[10:58:08] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[10:58:48] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:59:08] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[10:59:18] *** Joins: cdown_ (~cdown@163.114.131.1)
[10:59:32] *** Joins: Teacup (~teacup@user/teacup)
[10:59:42] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:00:17] *** Joins: sazawal (~sazawal@122.161.81.235)
[11:00:42] *** Joins: seednode (~seednode@user/seednode)
[11:01:13] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:41] *** Joins: CyDefect (~troll@213.55.226.140)
[11:02:13] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:02:30] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 268 seconds)
[11:02:34] *** cdown_ is now known as cdown
[11:03:03] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[11:05:45] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:05:55] *** Joins: kjnda (~Kinda@user/kjnda)
[11:06:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:06:36] *** Quits: CyDefect (~troll@213.55.226.140) (Ping timeout: 245 seconds)
[11:06:55] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.0)
[11:07:18] *** Parts: kjnda (~Kinda@user/kjnda) ()
[11:07:22] *** Joins: pycurious (~Adium@user/pycurious)
[11:08:25] *** Joins: luigibu (~luigi@80.30.201.209)
[11:10:05] *** Joins: iflema (~ian@user/iflema)
[11:12:02] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[11:12:13] *** Joins: x-x (~x@user/x-x)
[11:12:15] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:ac5a:7772:568e:3548)
[11:12:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:13:16] *** Parts: x-x (~x@user/x-x) ()
[11:14:25] *** Joins: kosh (~kosh@user/kosh)
[11:16:14] <rindolf> Hi all! I'm in the mood for reviewing FOSS code. any takers?
[11:17:16] *** Joins: neff (~neff@89-138-208-63.bb.netvision.net.il)
[11:17:28] <bookworm> https://github.com/pandas-dev/pandas ;P
[11:20:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:20:01] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2c68:fbfc:2fac:4286) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[11:20:58] *** Joins: manti7 (~manti7@176.10.104.94)
[11:21:12] *** Joins: palasso (~palasso@user/palasso)
[11:22:22] *** Quits: jay-m126_ (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[11:22:50] *** Quits: jay-m126 (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[11:23:46] *** Joins: upsala (~zcb@185.213.155.232)
[11:24:28] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:24:35] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:24:45] <rindolf> bookworm: something smaller: https://www.youtube.com/watch?v=0GOGNE0nWHk
[11:25:30] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:28:45] <bookworm> XD
[11:30:47] *** Joins: chele (~chele@user/chele)
[11:30:53] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:31:04] <b3z> One question: Why does '09/21/2020 (18:00)' not match format '%d/%m/%Y (%H:%M)'? Context datetime.
[11:31:33] <jinsun> 21 cannot be a month
[11:31:36] *** Joins: mcpac82 (~textual@212.25.0.228)
[11:31:56] <b3z> Ah fuu. Right. I am stupid. Did not see that.
[11:32:02] <b3z> Thanks jinsun
[11:32:02] <Swayze> becoz yo uhaave the month first
[11:32:06] <Swayze> hehe
[11:32:17] <bookworm> 'Merica where the month gets specified out of a sensible order for the lols
[11:32:27] <b3z> Sometimes you miss like really easy problems cause you look too hard at it.
[11:32:59] <Swayze> thats how they speak 'something something september 21st' instead of 'on the 21st sept somethingsomething'
[11:33:01] *** Joins: grooverman_ (~grooverma@177.95.12.14)
[11:33:27] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[11:33:46] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:33:52] <bookworm> I didn't imply that they just do so in writing ;P
[11:34:14] <Swayze> %m should modulo 12 if its over 12
[11:34:15] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[11:34:18] <Swayze> ez pz :p
[11:34:28] <Swayze> hahahaha imagine the havoc that would cause
[11:34:28] *** Joins: DerpGusta (~quassel@user/derpgusta)
[11:34:35] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[11:34:40] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 260 seconds)
[11:35:15] <b3z> it should not. Imagine not realizing this mistake.
[11:35:24] *** Joins: iflema (~ian@user/iflema)
[11:35:26] <jinsun> sounds like something some Microsoft product would do
[11:35:33] <b3z> And suddenly your months and hours are all screwed up.
[11:37:09] <Swayze> I know hence i said it as a joke
[11:38:09] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[11:39:41] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[11:40:24] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:41:21] <gloomy> Hey, not sure if I should ask this in #python or #git, but - I have a script that is run as root, but a small part needs to be executed as a specific user. I do `os.seteuid(#myuser)` and then `subprocess.run(["git", "commit"])` - but it looks like the commit is being made by root, and I'm unable to push to the repository after that... what am I missing?
[11:42:27] <han-solo> reset the euid ?
[11:42:34] <han-solo> before running the subprocess
[11:42:45] <gloomy> han-solo: what do you mean?
[11:42:57] <gloomy> The initial euid is 0 (root)
[11:43:14] <gloomy> then I set it to my user's euid, because the git commands need to be issued as my user
[11:43:20] <han-solo> ah, got it
[11:43:26] <gloomy> *to my user's uid
[11:43:35] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 264 seconds)
[11:44:26] <han-solo> `['sudo', '-i', 'user', git...]` # ?
[11:44:32] <han-solo> could you try that ?
[11:44:37] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th)
[11:44:47] *** Joins: Linux77 (~Linux_77@186.233.182.193)
[11:45:19] <han-solo> or `su`, whichever you prefer i guess
[11:45:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:46:27] *** Joins: Abrax (~Abrax@user/abrax)
[11:46:28] <han-solo> s/-i/-u/
[11:46:31] <gloomy> trying that
[11:46:40] *** Joins: Morphex (~Morphex@dynamic-078-054-223-019.78.54.pool.telefonica.de)
[11:46:47] *** Joins: rendar (~rendar@user/rendar)
[11:47:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi)
[11:48:45] *** Quits: p-i- (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[11:49:00] *** Joins: jay-m126 (~jay-m@129.0.76.211)
[11:49:04] *** Joins: jay-m126_ (~jay-m@129.0.76.211)
[11:53:14] <han-solo> no dice ?
[11:53:46] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[11:54:58] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[11:55:42] *** Joins: ihristov (~ihristov@85.187.46.226)
[11:55:58] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 260 seconds)
[11:56:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:56:10] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:58:03] <rindolf> han-solo: "it's a good day to dice" ;)
[11:58:16] *** Quits: Morphex (~Morphex@dynamic-078-054-223-019.78.54.pool.telefonica.de) (Quit: Leaving)
[11:58:22] *** Joins: gws1200 (~thelounge@118.120.84.49)
[11:59:07] *** Joins: lotsofpizza (~shawn@2601:1c0:8781:2bf0::e47b)
[11:59:16] *** Joins: prs (~Priyanshu@2409:4043:221e:b7de::1177:8a5)
[12:00:37] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[12:01:06] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:01:16] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[12:01:20] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 256 seconds)
[12:02:28] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:03:35] *** Joins: Morphex (~Morphex@dynamic-078-054-223-019.78.54.pool.telefonica.de)
[12:05:18] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 260 seconds)
[12:06:08] *** Joins: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo)
[12:06:46] *** Joins: luigibu (~luigi@80.30.201.209)
[12:07:18] *** Joins: RiFo (~RiFo@user/rifo)
[12:07:18] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:08:23] *** Joins: pyfisch3 (~pyfisch@user/pyfisch)
[12:09:08] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:09:59] <han-solo> rindolf: ':)
[12:10:26] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 265 seconds)
[12:10:26] *** pyfisch3 is now known as pyfisch
[12:10:50] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[12:10:58] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[12:11:46] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:12:01] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[12:13:44] <lotsofpizza> Hello
[12:13:48] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 256 seconds)
[12:14:15] <rindolf> lotsofpizza: meow
[12:14:16] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[12:14:37] <lotsofpizza> ruff ruff
[12:15:26] *** Joins: pycurious (~Adium@user/pycurious)
[12:15:40] <rindolf> lotsofpizza: do you mean 'woof woof'?
[12:16:02] *** Joins: mrwick (~mrwick@user/mrwick)
[12:16:41] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:17:09] *** Joins: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr)
[12:20:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[12:20:38] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[12:20:53] *** Quits: Morphex (~Morphex@dynamic-078-054-223-019.78.54.pool.telefonica.de) (Quit: Leaving)
[12:21:15] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611)
[12:23:16] *** Quits: lotsofpizza (~shawn@2601:1c0:8781:2bf0::e47b) (Ping timeout: 245 seconds)
[12:24:08] *** Quits: jay-m126_ (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[12:25:00] *** Joins: nyah (~nyah@94.6.71.219)
[12:25:04] *** Quits: jay-m126 (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[12:27:50] *** Quits: Linux77 (~Linux_77@186.233.182.193) (Quit: Leaving)
[12:28:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[12:28:30] *** Quits: delvian (~delvian@41.5.115.193) (Quit: Leaving)
[12:29:58] *** Quits: prs (~Priyanshu@2409:4043:221e:b7de::1177:8a5) (Remote host closed the connection)
[12:30:44] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[12:30:44] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Read error: Connection reset by peer)
[12:30:46] *** Joins: imp_ (~imp@192-141-191-227.alternativaip.net.br)
[12:30:54] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:31:06] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:31:18] *** imp_ is now known as imp
[12:31:50] *** Joins: Linux77 (~Linux_77@186.233.182.193)
[12:32:54] <ede> rindolf: not 'whoosh whoosh'?
[12:33:31] *** Joins: pycurious (~Adium@user/pycurious)
[12:35:06] *** dcaro_away is now known as dcaro
[12:36:11] <gloomy> han-solo: sorry, had a meeting pop up - it works with sudo -u, thanks ;-)
[12:36:28] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:37:26] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:39:07] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Remote host closed the connection)
[12:39:47] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[12:40:10] *** Joins: remolej (~kenoba@user/kenoba)
[12:40:41] <SteveR> hi there, what are pure functions
[12:40:45] <SteveR> how do we write one in python
[12:43:11] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:44:34] <jinsun> SteveR: https://en.wikipedia.org/wiki/Pure_function
[12:45:14] <SteveR> jinsun could you give a simple example snippet in python
[12:45:32] *** Joins: Batzy (~quassel@user/batzy)
[12:45:32] *** Joins: guenhael (~Thunderbi@193.52.208.30)
[12:45:50] <jinsun> just write a normal function but be careful about not having any side effects
[12:46:16] *** Joins: nomic (~nomic@185.217.117.51)
[12:46:30] <jinsun> SteveR: `def f(x): return x`
[12:46:47] <grawity> gloomy: usually things like sudo 1) set the EUID *and* RUID, 2) set groups, so that newly created files won't have wrong groups, and 3) set environ["HOME"] to the target user's home dir, so that `git commit` doesn't try to read /root/.gitconfig
[12:47:02] *** Quits: Batzy_ (~quassel@user/batzy) (Ping timeout: 240 seconds)
[12:47:19] <SteveR> jinsun can you explain me more about what a pure function is. from my reading i got to know that a pure function should always have one functionality and it has do only one thing
[12:47:50] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:48:24] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi)
[12:48:33] *** Joins: greedom (~greedom@p200300de67100a0052a33a04e922f4b1.dip0.t-ipconnect.de)
[12:49:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[12:49:30] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[12:50:23] *** Quits: greedom (~greedom@p200300de67100a0052a33a04e922f4b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:50:28] <grawity> doesn't matter how many things it does, as long as they don't change anything outside the function
[12:50:35] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:50:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:51:11] *** Joins: greedom (~greedom@p200300de67100a0052a33a04e922f4b1.dip0.t-ipconnect.de)
[12:51:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:52:48] <kosh> grawity, of course that can also get complicated sometimes
[12:53:48] <kosh> because you can end up with situations where you didn't explicitely change anything outside the function but things still do change even if unintentional
[12:53:50] *** Joins: fikran (~fikran@user/fikran)
[12:54:42] <jinsun> SteveR: not sure if I can say anything more than that wikipedia article, think of it like if your function is pure then function(some_value) can be replaced with the result of that function call in your code and behavior of your code wouldn't change
[12:55:09] <SteveR> hmm i still dont understand.. could one of you explain with an understandable example. sorry if my ask is too vague
[12:56:35] *** Joins: henistein (~henistein@92.250.100.52)
[12:56:48] *** Joins: Naan` (~Naan@user/naan)
[12:56:53] <kosh> def add2(x): return x+2       add2(5)  can be replaced by just writing 7 in your code without causing issues usually
[12:57:10] <kosh> a pure function should only depend on its input and nothing else
[12:57:42] <SteveR> def add2: return 7
[12:57:49] <SteveR> is that how a pure function should be written
[12:59:04] <SteveR> kosh ^
[12:59:05] <kosh> in general just think of it as the output only depends on the input
[12:59:22] *** Joins: yotsuba (~yotsuba@176.12.153.48)
[12:59:27] <deniska> SteveR: pure function doesn't change the state of the system, and won't change a return value for the same argument passed multiple times
[12:59:27] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:59:36] <kosh> and even with pure functions is it not strictly true that you can just replace the call and nothing changes in all cases
[12:59:56] <kosh> because calling the function takes time and replacing that time with the answer and a zero time call can change behavior
[13:00:33] <SteveR> deniska:  from what i read, a pure function always return the same value when we pass the same set of arguments multiple times
[13:00:34] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8456-215.dhcp.inet.fi) (Quit: WeeChat 2.8)
[13:00:36] *** Joins: somlis (~somlis@user/somlis)
[13:00:45] <deniska> SteveR: yes, it's one of its properties
[13:01:11] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-6.poda.cz) (Ping timeout: 245 seconds)
[13:01:13] <deniska> not changing the state of the system is also important though
[13:01:23] <SteveR> why do we write pure functions? technically there can be also an outcome which itself is non deterministic right
[13:01:35] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[13:01:45] <SteveR> for example, we pass a value, and then we use the value as a seed to the rand to calculate the random number
[13:01:45] <jinsun> kosh: that just means your function wasn't pure enough, ideally a pure function should stop time before running :D
[13:01:45] <deniska> We write functions, some of them happen to be pure
[13:01:52] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:02:11] <deniska> It's nice when functions deeper in a call stack are pure because pure functions are easier to test and reason about
[13:02:58] <deniska> and using a non-pure function inside a function makes this function non-pure
[13:03:42] <kosh> jinsun, I just know that theoretical purity can sometimes run into practical purity
[13:03:50] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[13:05:09] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[13:05:43] *** Quits: yotsuba (~yotsuba@176.12.153.48) (Quit: Leaving)
[13:08:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:09:52] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:11:09] *** Joins: gtz (~gtz@185.12.215.240)
[13:11:25] *** Quits: pipapipapipo (~peppbel@c-73-221-241-101.hsd1.wa.comcast.net) (Remote host closed the connection)
[13:11:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[13:11:53] <gtz> I'm stumped... I am running a script and in the stacktrace I am seeing the old state of the file. It looks like my changes to the file are not taken into account. I have deleted all the pyc files, what else could be causing this?
[13:12:52] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:13:27] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:13:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[13:13:42] <gtz> Never mind, figured it out...
[13:13:45] *** Quits: gtz (~gtz@185.12.215.240) (Client Quit)
[13:15:46] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[13:15:47] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[13:16:38] *** Joins: plastico (~plastico@neomutt/plastico)
[13:18:53] *** Quits: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[13:19:54] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:20:45] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[13:20:55] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Read error: Connection reset by peer)
[13:20:56] *** Joins: jim (~jim@about/linux/staff/jim)
[13:21:26] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:21:30] *** Joins: jay-m126 (~jay-m@129.0.76.211)
[13:21:48] *** Joins: iflema (~ian@user/iflema)
[13:22:44] *** Joins: darksun (~darksun@user/darksun)
[13:24:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:25:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:26:48] *** Joins: jay-m126_ (~jay-m@129.0.76.211)
[13:27:32] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[13:27:53] *** Joins: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr)
[13:27:55] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-05d7-e490-d0b8-c8dd.res6.spectrum.com) (Quit: jarthur)
[13:28:36] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 256 seconds)
[13:29:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:30:39] *** Joins: delvian (~delvian@41.5.115.193)
[13:31:22] *** Quits: {HD} (~{HD}@86.106.121.200) (Read error: Connection reset by peer)
[13:32:19] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:32:45] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[13:32:46] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f2.oracle-ocna.com)
[13:33:45] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[13:34:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:34:16] *** Quits: jpic (~jpic@82.142.20.182) (Ping timeout: 256 seconds)
[13:34:56] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:35:48] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[13:36:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[13:37:08] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[13:38:44] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:40:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:43:58] *** Joins: luigibu (~luigi@80.30.201.209)
[13:46:44] *** Quits: gitly (~gitly@85.255.235.189) (Ping timeout: 256 seconds)
[13:48:07] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:48:43] *** Joins: gitly (~gitly@185.69.145.50)
[13:49:02] *** Quits: encukou_ (quassel@nat-pool-brq-t.redhat.com) (Ping timeout: 265 seconds)
[13:49:28] *** Joins: encukou (~quassel@149.11.118.10)
[13:50:10] *** Joins: pycurious (~Adium@user/pycurious)
[13:53:07] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi) (Quit: Leaving)
[13:54:11] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d2-8.dhcp.inet.fi)
[13:54:12] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:54:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:56:47] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f2.oracle-ocna.com) (Read error: Connection reset by peer)
[13:57:17] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[13:58:13] *** Quits: relight (~relight@user/relight) (Read error: Connection reset by peer)
[13:58:40] *** Joins: relight (~relight@user/relight)
[14:00:45] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[14:01:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 260 seconds)
[14:01:04] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[14:01:15] *** Joins: et_ (~et@user/et)
[14:01:33] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:02:22] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 260 seconds)
[14:02:34] *** Quits: henistein (~henistein@92.250.100.52) (Ping timeout: 256 seconds)
[14:02:34] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[14:02:34] *** et_ is now known as et
[14:04:12] *** Joins: jpic (~jpic@82.142.20.182)
[14:04:15] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[14:04:23] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[14:04:35] *** Joins: kevr (~kevr@user/kevr)
[14:05:47] *** Quits: doc (~doc@user/doc) (Ping timeout: 264 seconds)
[14:06:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[14:06:38] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[14:07:05] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 265 seconds)
[14:08:57] *** Quits: guenhael1 (~Thunderbi@193.52.208.97) (Ping timeout: 250 seconds)
[14:11:02] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[14:12:09] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[14:12:44] *** Joins: p-i- (~Ohmu@223.206.149.59)
[14:13:23] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--b2.oracle-ocna.com)
[14:13:40] *** Joins: Wulf (~Wulf@user/wulf)
[14:14:00] *** Quits: jay-m126 (~jay-m@129.0.76.211) (Read error: Connection reset by peer)
[14:14:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:15:21] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:15:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[14:15:37] *** Joins: frost (~frost@user/frost)
[14:16:23] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:16:37] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:75c5:c6ed:c91:17fe)
[14:17:22] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800fd45bd0fb61ce980.ipv6.abo.wanadoo.fr)
[14:17:44] *** Joins: evilissimo (vfeenstr@redhat/evilissimo)
[14:17:50] *** Quits: encukou (~quassel@149.11.118.10) (Ping timeout: 260 seconds)
[14:18:08] *** Joins: encukou (quassel@nat-pool-brq-t.redhat.com)
[14:18:18] *** Quits: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484) (Quit: Konversation terminated!)
[14:18:39] *** Joins: jay-m126 (~jay-m@195.24.211.78)
[14:18:43] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[14:18:49] *** Joins: dbedrenko (~dbedrenko@host-78-146-205-250.as13285.net)
[14:19:09] *** Joins: iflema (~ian@user/iflema)
[14:19:44] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800fd45bd0fb61ce980.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:20:02] *** Joins: guenhael (~Thunderbi@2a01cb008c3d5800fd45bd0fb61ce980.ipv6.abo.wanadoo.fr)
[14:20:27] *** Joins: Klinda (~superleag@user/klinda)
[14:21:20] *** Joins: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484)
[14:21:21] *** Joins: bindu (~bindu@user/bindu)
[14:21:34] *** Quits: jay-m126_ (~jay-m@129.0.76.211) (Ping timeout: 260 seconds)
[14:22:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:22:34] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[14:24:45] <dbedrenko> Hello, what language feature can I use to achieve the DRY principle in the following case: two classes have the same class attributes but different parameters passed to those attributes.  Example:   https://bpa.st/WRGA
[14:28:43] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[14:29:13] <nedbat> dbedrenko: i'm not sure there's a simple one.  how many attributes are there?
[14:31:13] *** Joins: lyr (~lyr@user/lyr)
[14:31:56] <bookworm> you can write a metaclass, but that gets rather hairy
[14:32:51] <NeilRG> don't write a metaclass because it will get hairy
[14:32:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 245 seconds)
[14:33:05] <NeilRG> dbedrenko, Foo = class_factory('arg1')
[14:33:22] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:33:29] <NeilRG> would do it.  I don't know why you're doing this weird thing though
[14:34:54] *** Quits: iflema (~ian@user/iflema) (Read error: Connection reset by peer)
[14:35:28] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:35:29] *** Joins: iflema (~ian@user/iflema)
[14:36:46] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz)
[14:37:21] <d3x> dbedrenko, IMO this is one of the cases where forcing DRY reduces readability and maintainability of the code, so I would leave all the attributes defined explicitly
[14:37:23] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[14:37:43] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz) (Client Quit)
[14:37:55] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[14:38:45] *** Joins: jim (~jim@about/linux/staff/jim)
[14:39:06] <d3x> What's the actual use case, anyway? `ForeignKey` suggests these are some DB models. Perhaps you could rethink your DB design if you find yourself creating lots of models with the same field pointing to a different foreign model
[14:41:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[14:43:27] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[14:44:32] <deniska> DRY in database model definitions: not even once. Anything fancier than a base abstract model with fields like updated_at, created_at: just say no :)
[14:44:48] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[14:44:56] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[14:45:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:46] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 245 seconds)
[14:47:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:48:23] <NeilRG> ^ I agree with d3x
[14:49:04] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[14:50:24] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[14:51:25] *** Quits: vukky (~vukky@wikipedia/vukky) (Ping timeout: 250 seconds)
[14:52:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:53:52] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[14:54:31] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[14:54:43] *** Joins: luigibu (~luigi@80.30.201.209)
[14:54:58] *** Joins: BSaboia (~bsaboia@177.37.198.107)
[14:58:08] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:58:46] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[15:01:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:01:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[15:02:42] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz)
[15:03:11] *** Joins: fikran (~fikran@user/fikran)
[15:03:26] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:04:12] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[15:04:25] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Ping timeout: 250 seconds)
[15:05:08] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:05:26] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[15:08:33] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[15:09:08] <dbedrenko> OK thank you, I'll define the attributes explicitly for each table. The usecase is that there's a table `Statistics` that contains all statistics. I'm creating 2 other tables (in Django) with the exact same schema for performance reasons: they have a subset of the data in `Statistics`. 2 cache tables. The schema is exactly the same except the foreign keys must take a different argument or their names will clash. d3x
[15:09:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:09:27] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[15:09:35] <dbedrenko> Thanks all for your opinion, I will avoid DRY in this case
[15:09:55] <dbedrenko> nedbat, to answer you, there are 6 such attributes (6 foreign keys)
[15:11:00] *** Quits: Syzygy (~Syzygy@dynamic-2l4rd2zuqbvmbdvecf-pd01.res.v6.highway.a1.net) (Ping timeout: 268 seconds)
[15:11:27] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:11:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:20] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[15:13:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[15:18:28] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[15:18:48] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[15:18:48] *** Joins: jkl1337 (~jkl@user/jkl)
[15:18:49] *** Joins: coc0nut_ (~coc0nut@user/coc0nut)
[15:18:51] *** Joins: aluria (~aluria@canonical/aluria)
[15:19:02] *** Joins: brettgilio3 (~brettgili@x-node.gq)
[15:19:07] *** Joins: starship (~kkh@user/duracrisis)
[15:19:09] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[15:19:11] *** Joins: Techcable_ (~Techcable@168.235.93.147)
[15:19:16] *** Joins: N3X15_ (~nexis@mail.nexisonline.net)
[15:19:18] *** Joins: Some-body_ (user@znc/developer/DarthGandalf)
[15:19:31] <d3x> You could use a special syntax '%(class)s'. From docs: '%(class)s' is replaced by the lowercased name of the child class that the field is used in.
[15:19:34] *** Joins: kai2 (~kai@x50d24799.cust.hiper.dk)
[15:19:35] <d3x> https://docs.djangoproject.com/en/3.2/topics/db/models/#abstract-related-name
[15:19:42] *** Joins: LuKaRo_ (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de)
[15:19:49] *** Joins: Trieste_ (T@user/pilgrim)
[15:19:50] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[15:19:59] *** Joins: jramsay (~lack@user/lack)
[15:20:06] *** Joins: syllin3 (~syllin@user/syllin)
[15:20:11] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[15:20:12] *** Joins: Armen2 (~Armen@armen138.com)
[15:20:20] *** Joins: glider_ (~glider@user/glider)
[15:20:31] *** Joins: klotzhauer_ (~klotzhaue@gibtesnochklopapier.de)
[15:20:36] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:20:46] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[15:20:47] <d3x> I think this requires having an abstract base model, something like BaseStatistics, where you define your field, then your Statistics, CacheA and CacheB inherit from said base model class
[15:20:49] *** Joins: krisd_ (krisd@s0.mydevil.net)
[15:20:53] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[15:20:54] *** Joins: bboles_ (~bboles@64.94.212.195)
[15:20:54] *** Joins: dm1 (~dm@157.230.21.14)
[15:20:56] *** Joins: frrs (~ferros@vps-eacaba1b.vps.ovh.net)
[15:21:00] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[15:21:03] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:21:06] *** Joins: m1dnight_ (~christoph@christophe.dev)
[15:21:06] *** Joins: d1b_ (~db@user/d1b)
[15:21:06] *** Joins: foo_ (~foo@user/foo/x-8763512)
[15:21:07] *** Joins: dangrenier83_ (~pi@user/dangrenier83)
[15:21:10] *** Joins: nyuszika7h_ (nyuszika7h@lykos/dev/nyuszika7h)
[15:21:13] *** Joins: phillhoc1ing (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com)
[15:21:17] *** Joins: ulif_ (~nick@user/ulif)
[15:21:19] *** Joins: pie__ (~pie_bnc@user/pie/x-2818909)
[15:21:20] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[15:21:21] *** Joins: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC)
[15:21:22] *** Joins: SeeM_ (~SeeM@153.ip-54-38-53.eu)
[15:21:30] *** Joins: JerryXia1 (~JerryXiao@user/jerryxiao)
[15:21:32] *** Joins: sgn_ (~sgn@user/sgn)
[15:21:33] *** Joins: joris2 (~joris@195.123.218.123)
[15:21:40] *** Joins: KirkMcDo1ald (~Kirk@python/site-packages/KirkMcDonald)
[15:21:43] *** Joins: jamwil_ (~jamwil@user/jamwil)
[15:21:43] *** Joins: grnman__ (~grnman@159.89.27.73)
[15:21:45] *** Joins: bluss_ (~bluss@user/bluss)
[15:21:47] *** Joins: mdw_ (~root@159.65.86.163)
[15:22:21] *** Joins: opashley (~opashley@70.138.105.34.bc.googleusercontent.com)
[15:22:22] *** Joins: djhankb7 (~djhankb@208.113.164.68)
[15:22:35] *** Server sets mode: +Ccnrtf #python-unregistered
[15:22:37] *** Joins: zaz_ (~zaz@poneybl.eu)
[15:22:38] *** Joins: sasha- (~sasha@wikimedia/-sasha-)
[15:22:42] *** Joins: luischi (~luigi@80.30.201.209)
[15:22:43] *** Joins: ElimGarak (dgw@sopel/admin/dgw)
[15:22:44] *** Joins: m42e (~m42e@pb42.de)
[15:22:45] *** Joins: cache (~cache@user/cacheyourdreams)
[15:23:01] *** Joins: saschi_ (~saschi@user/saschi)
[15:23:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[15:23:06] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[15:23:30] *** Quits: bookworm (~bookworm@neomutt/bookworm) (Killed (NickServ (GHOST command used by bookworm_)))
[15:23:36] *** bookworm_ is now known as ghost
[15:23:42] *** ghost is now known as bookworm
[15:24:19] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:24:54] *** Joins: aeadio (~aead@user/aead)
[15:24:59] *** Joins: malwar3hun73r (~malwar3hu@134.122.29.124)
[15:25:07] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d2-8.dhcp.inet.fi) (Killed (NickServ (GHOST command used by DnzAtWrk3!~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi)))
[15:25:24] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[15:25:30] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:25:35] *** Joins: eblip (~eb0t@90.199.243.141)
[15:25:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi)
[15:25:55] *** Joins: mokytis__ (~root@user/mokytis/x-7723836)
[15:25:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: zaz\ (~zaz@poneybl.eu) (Ping timeout: 260 seconds)
[15:25:59] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[15:25:59] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: bboles (~bboles@64.94.212.195) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: aead (~aead@user/aead) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: kvik (~kvik@80.240.23.8) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: madprops (~hj8oijo@user/madprops) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: LuKaRo (~LuKaRo@p5dedaa53.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: krisd (krisd@s0.mydevil.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: loworder1it (~dave@S0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: ksynwa (~ksynwa@5.45.111.57) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: uhu (~uhu@static.101.168.216.95.clients.your-server.de) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: xavierdarkness (~xavierdar@user/xavierdarkness) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: vlt (~dm@157.230.21.14) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: mtg (~mtg@209.250.241.226) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: BSaboia (~bsaboia@177.37.198.107) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: m1dnight (~christoph@christophe.dev) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: jbe (~jbe@lysator/root/jbe) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: sideeffex5613 (~sideeffex@user/sideeffex) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: twainwek (~user@144.211.196.35.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: Common (~Common@user/common) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: rundown (~eb0t@90.199.243.141) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: foo (~foo@user/foo/x-8763512) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: renrelkha_ (~renrelkha@user/renrelkha) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: nyuszika7h (~nyuszika7@lykos/dev/nyuszika7h) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: erry (~erry@errietta.me) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: mokytis_ (~root@user/mokytis/x-7723836) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: joris1 (~joris@195.123.218.123) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: zegalch (~zegalch@178.128.75.133) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: jcass (~votg@50-0-146-31.dsl.dynamic.fusionbroadband.com) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: kolcon (~kolcon@v.kolouch.org) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: dawg (~dirtydawg@triton.blinkenshell.org) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Timvde (~tim@towely.vdeynde.com) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: d1b (~db@user/d1b) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: glider (~glider@user/glider) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: ferros (~ferros@vps-eacaba1b.vps.ovh.net) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: ulif (~nick@user/ulif) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: francis (francis@user/francis) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: phillhocking (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[15:26:00] *** Bluefoxicy_ is now known as Bluefoxicy
[15:26:00] *** Quits: amosbird (~amosbird@13.75.119.182) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: salparadise (~salparadi@129.146.17.140) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: aluria_ (~aluria@canonical/aluria) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: grooverman_ (~grooverma@177.95.12.14) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: djhankb (~djhankb@208.113.164.68) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: bparker (~nobody@user/bparker) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Geronimo (~Geronimo@user/geronimo) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: foxbox (~cammy@user/cammy) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: kushal (~hopless@dgplug/kushal) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: theo (~theo@user/theo) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: syllin (~syllin@user/syllin) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: lack (~lack@user/lack) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: malwar3hun73r_ (~malwar3hu@134.122.29.124) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: murr4y (ali@user/murr4y) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: hook (~hook@user/silver-hook/x-9987513) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: poorboy (~poorboy@159.89.189.144) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: DXR (~lyrical@77.49.234.159.dsl.dyn.forthnet.gr) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: sasha (~sasha@wikimedia/-sasha-) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: gerty (~gerty@user/gerty) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: bluss (~bluss@user/bluss) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: jamwil (~jamwil@user/jamwil) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: greenbagels (~gb@user/greenbagels) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: JamGobbar (~elophant@173.82.112.112) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: Armen (~Armen@armen138.com) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: nigelb (~nigel@zeus.nigelb.me) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: dfg (~dfg@user/dfg) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: robyndrake (~robyndrak@user/robyndrake) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: tnez (~el@user/tnez) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: saschi (~saschi@user/saschi) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: grnman_ (~grnman@159.89.27.73) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: mdw (~root@159.65.86.163) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: duracrisis (~kkh@user/duracrisis) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: jkl (~jkl@user/jkl) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: pyeverything (~pyeveryth@goku.bu.edu) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Ping timeout: 260 seconds)
[15:26:01] *** xavierdarkness_ is now known as xavierdarkness
[15:26:01] *** N3X15_ is now known as N3X15
[15:26:01] *** sideeffex56130 is now known as sideeffex5613
[15:26:01] *** zuQe85 is now known as zuQe8
[15:26:01] *** djhankb7 is now known as djhankb
[15:26:01] *** Some-body_ is now known as DarthGandalf
[15:26:01] *** ElimGarak is now known as dgw
[15:26:01] *** dhch2 is now known as dhch
[15:26:01] *** Geronimo5 is now known as Geronimo
[15:26:01] *** SirScott1 is now known as SirScott
[15:26:01] *** stoneware4 is now known as stoneware
[15:26:01] *** syllin3 is now known as syllin
[15:26:01] *** Deaygo0 is now known as Deaygo
[15:26:01] *** brettgilio3 is now known as brettgilio
[15:26:02] *** Trieste_ is now known as Trieste
[15:26:02] *** mbrndtgn1 is now known as mbrndtgn
[15:26:02] *** dv^_^6 is now known as dv^_^
[15:26:02] *** foxbox3 is now known as foxbox
[15:26:02] *** theo7 is now known as theo
[15:26:02] *** gerty2 is now known as gerty
[15:26:02] *** Armen2 is now known as Armen
[15:26:11] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[15:26:14] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[15:26:16] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[15:26:18] *** Joins: erry (~erry@errietta.me)
[15:26:25] *** Joins: kushal (~hopless@dgplug/kushal)
[15:26:33] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:26:47] *** nyuszika7h_ is now known as nyuszika7h
[15:26:49] *** dcaro is now known as dcaro_lunch
[15:26:50] *** Joins: zegalch (~zegalch@178.128.75.133)
[15:27:08] *** Joins: ham5urg_ (~ham5urg@p200300d167435800114b660ffce7796b.dip0.t-ipconnect.de)
[15:27:44] *** sasha- is now known as sasha
[15:28:14] *** Lord_of_Life_ is now known as Lord_of_Life
[15:28:20] *** Joins: jbe (~jbe@lysator/root/jbe)
[15:28:30] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[15:28:50] *** Joins: bparker (~nobody@user/bparker)
[15:28:50] *** Joins: DXR (~lyrical@77.49.234.159.dsl.dyn.forthnet.gr)
[15:29:06] *** Quits: guenhael (~Thunderbi@2a01cb008c3d5800fd45bd0fb61ce980.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[15:29:08] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:29:31] *** Quits: ham5urg (~ham5urg@p5ddfc726.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[15:29:34] <dbedrenko> d3x Yes I have a `BaseStatistics` and the Caches inherit from it. The problem is if I use `%(class)` it will do a migration and rename the existing related name for `Statistics`. I would have to change everywhere in the code where the reverse relation field is being accessed, and I want to avoid doing that. Hence I thought to paramaterise the value to `related_name`: keep the old name for `Statistics` and `+` for the cache tables
[15:30:02] <dbedrenko> I think there's no easy way to do that, so I'll just take your advice and define the ForeignKeys with `related_name` value explicitly, and avoid DRY for that
[15:31:38] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[15:31:52] *** Joins: Timvde (~tim@towely.vdeynde.com)
[15:31:52] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[15:32:21] *** Joins: BUSY (~BUSY@user/busy)
[15:32:28] *** Joins: beencubed (~beencubed@209.131.238.248)
[15:32:32] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[15:32:48] *** Joins: greenbagels (~gb@user/greenbagels)
[15:33:31] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[15:33:32] *** Joins: murr4y (ali@user/murr4y)
[15:33:34] *** Joins: qpdb (~qpdb@user/qpdb)
[15:33:38] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[15:34:42] *** Joins: vulpes_vulpes (~vulpes_vu@ppp-2-34.bris-a-2.dynamic.dsl.as9105.com)
[15:35:36] *** Quits: Rust\Chickatrice (aoei@nethackscoreboard/aoei) (Quit: restarting weechat)
[15:35:45] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:26] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:40:32] *** Joins: Elodin (~weechat@user/elodin)
[15:42:42] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:43:53] *** Quits: sadara (~sadara@user/sadara) (Read error: Connection reset by peer)
[15:44:01] <ham5urg_> My user shall type a path into my program, which at the end shall create a file. How could I check prior writing that the user entered path can result into creating a file.
[15:44:23] *** Joins: Jong (~Jong@2620:10d:c090:400::5:31eb)
[15:44:57] <Yhg1s> ham5urg_: you can't catch all problems with the path before writing. What kinds of problems are you trying to catch?
[15:45:15] <bookworm> just do it and handle the failure should it occur
[15:45:36] <bookworm> any testing will be obsolete by the time you actually do the thing
[15:45:45] *** Joins: y1n (~y1n@77.119.166.106.wireless.dyn.drei.com)
[15:45:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:48:46] <ham5urg_> Yhg1s, I just tried to show a green or red frame around the inputfield as the user writes. All input fields are getting this, so the user knows instantly that the datainput is correct or not. No need for a error-message shown each time and slowing the user down.
[15:49:39] <Yhg1s> ham5urg_: do you want to show an error when the user can't write to the directory? Or if the directory doesn't exist? Or if the file already exists and the user can't replace it? Or just if it exists?
[15:51:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:52:22] *** Quits: delvian (~delvian@41.5.115.193) (Quit: Leaving)
[15:54:23] *** aoei is now known as aoei\Chickatrice
[15:54:30] *** Joins: noord (~noord@user/noord)
[15:54:39] <ham5urg_> Yhg1s, an read-only input-file is checked e.g. with path.is_file() and os.access(path, os.R_OK) and it seems to work. What I don't know is how to check for a "write_only" output-file. If the path the user entered shows a directory = RED (don't proceed), this is easy. But if a path "could" result in a file but the user lacks rights = RED. If a file exists and the user has rights = ORANGE (proceed but warn against
[15:54:40] <ham5urg_> overwriting). If no such file exists but can be created = GREEN.
[15:55:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:56:01] *** Joins: nme_ (~nme@gateway/vpn/pia/nme)
[15:56:46] *** Quits: nme_ (~nme@gateway/vpn/pia/nme) (Client Quit)
[15:56:54] <Yhg1s> ham5urg_: if you want to check if the directory is writable for the user, os.access works for that as well. (Check for os.W_OK|os.X_OK.)
[15:56:57] *** Joins: nme (~nme@gateway/vpn/pia/nme)
[15:57:03] *** Sadale_ is now known as Sadale
[15:57:17] <Yhg1s> ham5urg_: but as I said, you can't check for all possible errors without actually creating the file.
[15:57:34] *** Joins: interweb (~interweb@user/interweb)
[15:57:39] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[15:57:51] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[15:58:26] <ham5urg_> Yes, I understand. Thanks for X_OK. Did not know that.
[16:00:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df043-50.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:01:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d2-8.dhcp.inet.fi)
[16:04:03] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:06:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:07:39] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[16:10:25] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Leaving)
[16:10:53] *** Joins: legola (~legola@46.235.101.181)
[16:11:27] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:12:23] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[16:12:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:12:53] *** Joins: kolcon (~kolcon@v.kolouch.org)
[16:13:08] *** Quits: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611) (Read error: Connection reset by peer)
[16:13:30] *** Joins: gregoryloscombe (~gregorylo@82.25.194.79)
[16:13:44] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[16:13:44] *** Joins: onichomp (~onichomp@2806:264:4404:80b7:f01b:30f9:bd29:d611)
[16:15:24] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:16:20] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[16:16:46] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[16:17:12] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[16:18:48] *** Joins: llh (~llh@user/llh)
[16:19:46] *** Joins: pycurious (~Adium@user/pycurious)
[16:20:23] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[16:20:32] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 240 seconds)
[16:20:57] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[16:21:25] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[16:21:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:24:25] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--b2.oracle-ocna.com) (Read error: Connection reset by peer)
[16:26:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:27:46] *** Joins: delvian (~delvian@41.5.115.193)
[16:27:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:27:51] *** Quits: bandit_za (~bandit@102-65-138-35.dsl.web.africa) (Ping timeout: 245 seconds)
[16:28:44] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[16:29:31] *** saribro is now known as swinnenb
[16:29:46] *** Joins: interweb (~interweb@user/interweb)
[16:29:48] *** dcaro_lunch is now known as dcaro
[16:29:50] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[16:30:53] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 250 seconds)
[16:31:03] *** Joins: zeden (~zeden@user/zeden)
[16:31:24] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[16:31:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:32:22] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:32:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:32:58] *** Joins: upsala (~zcb@185.213.155.252)
[16:33:46] *** Joins: bindu (~bindu@user/bindu)
[16:36:35] *** Joins: thiras (~thiras@user/thiras)
[16:38:10] *** Joins: {HD} (~{HD}@86.106.121.213)
[16:38:19] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[16:39:07] *** Joins: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr)
[16:41:03] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[16:42:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:43:04] *** Joins: RiFo (~RiFo@user/rifo)
[16:43:07] *** Joins: grooverman (~grooverma@177.102.117.95)
[16:43:26] *** Parts: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-165.dsl.bell.ca) (WeeChat 3.2)
[16:43:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:46:23] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th)
[16:47:00] *** Joins: Vonter (~Vonter@user/vonter)
[16:48:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[16:50:15] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[16:50:22] *** Quits: p-i- (~Ohmu@223.206.149.59) (Ping timeout: 260 seconds)
[16:50:33] *** Joins: TJ- (~root@about/linux/staff/tj-)
[16:50:45] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[16:56:14] *** Quits: dbedrenko (~dbedrenko@host-78-146-205-250.as13285.net) (Quit: Leaving)
[16:56:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:56:59] *** Joins: bsdbandit (~bwell@users.757.org)
[16:57:07] <sreve> Is it possible to save a python object including the code from its class?
[16:57:40] <bookworm> what for?
[16:57:46] <bookworm> but the answer is yes
[16:57:51] *** Quits: vulpes_vulpes (~vulpes_vu@ppp-2-34.bris-a-2.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[16:57:53] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[16:58:23] <bookworm> however the usual approach is to pickle it and that has some issues if the python version changes and some security implications
[16:58:25] <sreve> I want to load the object to a jupyter notebook and don't want to imort all the libraries.
[16:58:40] <bookworm> that's not a sane thing to do
[16:58:54] <sreve> well its a simple objcet / class
[16:59:07] <bookworm> just... copy paste the code
[16:59:14] <bookworm> you have it anyhow obviously
[16:59:16] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Quit: leaving)
[16:59:32] <sreve> copy&paste is no way, cause the code will change in future.
[16:59:47] *** Joins: jay-m126_ (~jay-m@195.24.211.78)
[16:59:51] <bookworm> then put it in a module and import it properly
[17:00:12] *** pacbard_ is now known as pacbard
[17:00:47] <bookworm> if you prefer you can also use the cell magics to load / execute some other file in the current notebook
[17:01:53] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:02:02] <sreve> well, I see, that I could do "from mymodule import *" when I start jupyter from my project root. So I only need to save/load the objects-data. I guess pickle is what I need.
[17:03:09] <bookworm> don't do star imports it makes your code hard to read and reason about
[17:03:31] <bookworm> just as a word of advice
[17:03:56] <bookworm> namespaces are a good thing, use them
[17:03:56] <sreve> I agree, it was just a test.
[17:04:21] <grym> sreve: choice of serialisation format (pickle, hdf5, json, ... ) doesn't free you from importing things
[17:04:33] <sreve> I haven't uses namespaces so far. As I remember they do not work properly in jupyter.
[17:04:42] *** Joins: yeirr (~yeirr@user/yeirr)
[17:04:49] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[17:04:59] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[17:05:10] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[17:05:12] <bookworm> hm? By namespaces I am referring to modules and packages, they work very well
[17:05:21] <bookworm> else you couldn't run python code
[17:05:25] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[17:05:27] <grym> namespacing is just an idea, yeah
[17:06:57] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d2-8.dhcp.inet.fi) (Ping timeout: 268 seconds)
[17:07:25] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:10:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[17:12:31] *** Joins: fikran (~fikran@user/fikran)
[17:13:20] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[17:14:33] <sreve> hmm, why does the unpickelt object work in jupyter without importing the module?
[17:15:11] <grym> depends on what's in it
[17:15:26] <sreve> attributes and some functions
[17:15:45] <grym> whose types are ...
[17:15:48] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[17:15:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:16:34] <sreve> lists, dicts, and other objects of classes defined in my module.
[17:17:08] <sreve> when I use functions with bad paramter and I force an exception, than jupyter displays my code from my module.
[17:17:15] *** Quits: binary011 (~binary01@174.141.153.217) (Ping timeout: 250 seconds)
[17:17:15] <sreve> mybe some jupyter magic?
[17:17:26] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[17:17:27] <jinsun__> pickle automatically imports the module that it needs too
[17:17:32] *** Quits: y1n (~y1n@77.119.166.106.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[17:17:41] <jinsun__> that is why it can fail if you unpicke from the wrong cwd
[17:17:50] <sreve> ok
[17:17:53] *** jinsun__ is now known as jinsun
[17:18:54] *** dodo__ is now known as dodo
[17:19:09] <sreve> yes, renaming the module results in a exception when I use pickel to load the object.
[17:19:30] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[17:19:43] *** Joins: JanC (~janc@user/janc)
[17:19:46] *** Quits: jay-m126 (~jay-m@195.24.211.78) (Ping timeout: 260 seconds)
[17:19:53] *** Quits: jay-m126_ (~jay-m@195.24.211.78) (Ping timeout: 268 seconds)
[17:20:02] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[17:20:03] *** Joins: luigibu (~luigi@80.30.201.209)
[17:20:27] *** Joins: binary011 (~binary01@174.141.153.217)
[17:21:55] *** Joins: dgdg (~dg_dg@cm-171-101-73-87.revip11.asianet.co.th)
[17:23:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[17:23:59] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[17:24:00] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:24:06] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 245 seconds)
[17:24:46] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 265 seconds)
[17:25:10] *** tonitch_ is now known as tonitch
[17:26:01] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[17:26:04] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--125.oracle-ocna.com)
[17:26:34] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[17:27:04] *** Joins: mambang (~mambang@user/mambang)
[17:27:51] *** Quits: dgdg (~dg_dg@cm-171-101-73-87.revip11.asianet.co.th) (Ping timeout: 250 seconds)
[17:28:18] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[17:28:30] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[17:31:37] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:58] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[17:34:35] *** Joins: dawg_ (dirtydawg@triton.blinkenshell.org)
[17:37:24] *** Joins: nomic (~nomic@185.217.117.51)
[17:39:06] *** Quits: delvian (~delvian@41.5.115.193) (Ping timeout: 245 seconds)
[17:40:34] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[17:43:01] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:44:10] <Helenah> I have a prompt but I want the prompt to be able to accept flags. Don't confuse it with stdin on the linux shell. I'm talking about a prompt within my program I wanna be able to do something like... foo -b or --bar and be able to put those flags anywhere in the prompt. What would be the best way to do this?
[17:45:08] <grym> Helenah: i believe argparse or click will accept input from things that aren't stdin
[17:45:14] *** Joins: dez (uid92154@user/dez)
[17:45:16] <grym> like, a string you get from input() for example
[17:45:31] <Helenah> Oh right!
[17:46:10] <Helenah> Now that I didn't know! And yes input() is like what I was meaning but more specifically a self.write() that sends data over a socket. :)
[17:46:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:46:23] <Helenah> But I suppose I can see it working with the write function too.
[17:46:26] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:47:04] <grym> there's also something like `inquirer` if you want a lightweight control tool for guided / interactive user input
[17:47:56] <VaniaPy> i need to get the next element of a list when i'm calling an API endpoint, i tried the cycle but it only return the second element of the list https://bpa.st/UONQ
[17:48:08] <Helenah> I will have to look into it. :)
[17:48:32] *** naan is now known as Naan
[17:49:15] <hexnewbie> Helenah: https://bpa.st/B3ZQ
[17:49:51] <Helenah> Yeah, inquirer is not what I want but argparse certainly is. :)
[17:49:53] * Helenah clicks
[17:50:30] <Helenah> hexnewbie: Is shlex's split() really needed? I'm working with the in-built split but have used both.
[17:50:55] <hexnewbie> help.set_defaults(cmd='help', func=help_func) may also help
[17:50:58] <Helenah> I'm going to test this script and see what I can do with it but it makes sense.
[17:51:03] <grym> shlex will generally Do The Right Thing with shell style quoting
[17:51:15] <Helenah> Oh!
[17:51:19] <Helenah> Ah!
[17:51:31] <hexnewbie> Helenah: Well, shlex.split() would provide grammar similar to a POSIX shell. Regular split will provide... less human-friendly grammar
[17:51:44] <Helenah> Ah right. :)
[17:51:55] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 250 seconds)
[17:52:05] <Helenah> Yeh, that's just what I want. Okay thanks!
[17:54:01] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[17:54:27] <Helenah> "add_subparsers()", that's a new one!
[17:54:31] * Helenah Googles
[17:56:24] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[17:56:42] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[17:57:07] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[17:57:49] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[17:58:10] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[17:58:20] *** Quits: eblip (~eb0t@90.199.243.141) (Quit: WeeChat 3.0)
[17:58:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[17:59:08] *** Joins: justache (~justache@user/justache)
[17:59:36] *** Joins: chris_99 (uid26561@id-26561.lymington.irccloud.com)
[18:00:08] <faceface> I'm being stupid I know... How do I sort a dict?
[18:00:51] <grym> faceface: you kind of don't
[18:01:00] <deniska> you can create a new dict with keys in a different insertion order
[18:01:02] <grym> you can make a new dict whose insertion order is the one you prefer, though
[18:01:13] <deniska> dict(sorted(original_dict.items())) for example
[18:01:38] <chris_99> Hi, i'm wondering, is there a special way to wait for multiple Condition variables to be notified, i'm currently looping through them, but i then seem to get one hanging, so am wondering if you can 'miss' a notify, by just looping through them
[18:01:40] <grym> ^ passing a key= func of your chosing there; items() returns a 2-tuple
[18:01:49] *** Quits: gitly (~gitly@185.69.145.50) (Ping timeout: 268 seconds)
[18:02:15] <faceface> So why doesn't this work: lit = sorted(lit)
[18:02:33] <grym> faceface: see what deniska suggested in stead
[18:03:05] <grym> (but the reason is that iterating a dict is an implicit .keys() which is a setlike view and isn't sorted)
[18:03:06] <faceface> grym: I see the alternative... but I guess I'm confused about what sorted does
[18:03:17] <grym> sorted sorts things and returns a new thing
[18:03:26] <grym> the thing you're handing sorted() isn't what you mean to be handing it
[18:03:27] <grym> that's all
[18:03:32] <faceface> grym: and when the thing is a dict, the result is confusing...
[18:03:38] <faceface> kk
[18:03:52] <grym> right, because .keys() is implicit not explict ; this is generally bothersome
[18:04:00] <faceface> hmm
[18:04:07] <Helenah> grym is right. :)
[18:04:11] <faceface> lit = lit.sort() ;-)
[18:04:22] <VaniaPy> i need to get the next element of a list when i'm calling an API endpoint, i tried the cycle but it only return the second element of the list https://bpa.st/UONQ
[18:04:50] *** dm1 is now known as vlt
[18:04:51] <Helenah> I'm using a dict to list connected clients and yeah this stuff can't just be re-arranged.
[18:05:13] <faceface> thanks grym, deniska, Helenah
[18:05:17] <Helenah> :)
[18:05:19] <Helenah> No problem.
[18:05:49] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Read error: Connection reset by peer)
[18:06:06] <grym> faceface: https://bpa.st/NYYA
[18:06:08] <faceface> Talking of sorting... should I use a heap (it's a big list) or just sort it at the end ... # simple question I know
[18:06:16] <The-Compiler> VaniaPy: I don't understand what your goal is exactly - could you show an example of how lower_prediction_values would look and what output you'd want based on that?
[18:06:35] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[18:06:37] <VaniaPy> The-Compiler sure
[18:06:40] <Helenah> faceface: You can iterate through your existing dict to put the contents in a new dict in a different order and then use del to delete the existing dict but I think it would be best to get the order right to start with when you created your original dict. This is just extra coding effort, extra computational power.
[18:06:52] <faceface> grym: I get it now, the .keys() just happen... thanks
[18:07:22] <faceface> I'm parsing through 1000s of files to build up a list of things that I then want to dump in date order
[18:07:27] <faceface> I'll look into a heap
[18:07:27] <VaniaPy> The-Compiler that's the output https://bpa.st/7HBA
[18:07:28] <grym> faceface: and then the only other subtlety is that sorted() returns a new object
[18:07:35] <faceface> grym: ya
[18:07:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:08:17] <VaniaPy> The-Compiler i need every time i call the API to get the next lower_prediction value of the list
[18:09:16] *** Joins: withered_wolf (~withered_@174.25.131.17)
[18:09:29] <The-Compiler> VaniaPy: it sounds like you want to save an iterator somewhere (iter(thelist)), and then call next(it) every time you need a value
[18:10:11] *** Joins: betuxy (~betuxy@p579ad707.dip0.t-ipconnect.de)
[18:10:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[18:11:24] <VaniaPy> The-Compiler something like this? https://bpa.st/OGQA
[18:11:32] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[18:11:47] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[18:12:08] <The-Compiler> VaniaPy: more or less, but here you only return one value
[18:12:23] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:12:26] *** Joins: delvian (~delvian@41.13.198.66)
[18:14:43] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[18:14:43] *** Joins: timkofu (~timkofu@user/timkofu)
[18:15:03] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[18:15:22] <mickey8> i have a simple python script that does textblob analysis on text. the script is executed from an external non-python program, but the catch is the initializing of the python script is slow and takes a while, so i'd like to initialize it once and then pass more than one text to it
[18:15:35] <mickey8> right now i call python script.py --text "whatever here" over and over again
[18:15:42] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[18:16:08] <mickey8> is there any nice way of running the script and passing data to it continuously until it receives an EOF or something, instead of re-starting it every time?
[18:16:26] <bjs> mickey8: yes the standard way is with stdin
[18:16:29] <mickey8> i thought of using grpc or something similar, but im hope for a simpler solution
[18:16:52] <timkofu> whats a regex that would match any(love,loved,loving) anywhere in a sentence? r"\blove.*\b" isn't quite working
[18:17:01] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4549-a9c2-dd08-03ab.res6.spectrum.com)
[18:17:11] <mickey8> bjs the thing is, the calling app loops through hundreds of thousands of lines of text, so dropping all of that in stdin will be expensive
[18:17:37] <bjs> mickey8: how is it more expensive than any other way of passing it?
[18:17:39] <mefistofeles> mickey8: why not making it a function and call that function every time?
[18:17:53] <mickey8> mefistofeles because the calling app isn't python to begin with
[18:17:58] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[18:18:00] <bjs> mickey8: and of course it doesn't have to be passed directly through stdin, stdin could take a file name or something... but it seems the same to me
[18:18:07] *** Joins: Atlas667 (~Atlas667@193.27.12.10)
[18:18:17] *** Joins: Sadale (~Sadale@user/sadale)
[18:18:30] <bjs> timkofu: it doesn't "quite" work?
[18:18:30] <mickey8> bjs there's no good reason to load everything to memory. the calling app sends in a line of text and expects a response for that line; and then again
[18:19:02] <bjs> mickey8: I mean the program can read stdin a line at a time (or however much at a time) I'm not sure why it'd have to be loaded all at once?
[18:19:35] <timkofu> bjs: actually doesnt work at-all
[18:20:22] <Helenah> timkofu: That's vague.
[18:20:26] <bjs> timkofu: can you give some example sentences and what you want to match then?
[18:20:28] <Helenah> mickey8: stdin.
[18:20:30] <vlt> timkofu: Because "loving" has no "e"?
[18:20:40] <Helenah> But I suppose it depends on how exactly you want to pass data into the script.
[18:20:40] *** sgn_ is now known as sgn
[18:20:48] <mickey8> so it's as simple as looping with input() and then feed that stdin?
[18:20:59] <bjs> mickey8: sure, that'll read stdin a line at a time
[18:21:27] <Helenah> mickey8: That can be done or data could be passed to it as args which would be the way I'd prefer to do it personally.
[18:21:27] <mickey8> i'll give that a try. thanks.
[18:22:02] <mickey8> Helenah that's what im doing right now, but the data needs to be fed in continuously, otherwise it has to reinitialize every time which is the culprit atm
[18:22:24] <Helenah> Yeah then use input() so the script is forever open. :)
[18:22:40] <bjs> timkofu: a more direct way would be r"\b(love|loved|loving)\b"  but perhaps you want something more natural-language orientated (nltk?)
[18:22:48] *** Quits: delvian (~delvian@41.13.198.66) (Read error: Connection reset by peer)
[18:23:07] <mickey8> yup i'll try that now.
[18:23:14] <mickey8> thanks for the tips.
[18:23:39] <Helenah> mickey8: and with input you can also have your parent program enter a command such as "exit" for example which can then call exit() to exit the program once finished.
[18:23:40] <Helenah> :)
[18:24:12] <mickey8> what would you use to indicate EOL?
[18:24:20] <mickey8> i mean EOF
[18:24:26] *** Joins: delvian (~delvian@41.13.198.66)
[18:24:43] *** Quits: mambang (~mambang@user/mambang) (Remote host closed the connection)
[18:24:46] *** Joins: jay-m126 (~jay-m@129.0.76.209)
[18:24:46] <VaniaPy> The-Compiler i only need one value each time
[18:24:49] <Helenah> Like so the program knows to wait for the next instruction?
[18:24:51] *** Joins: jay-m126_ (~jay-m@129.0.76.209)
[18:25:10] <bjs> mickey8: streams already have notions of EOF, when you're done on the other end just close it
[18:25:11] <mickey8> Helenah sure, or so the program knows the job is done and it can exit
[18:25:22] <bjs> and it'll send EOF
[18:25:25] <mickey8> bjs okay
[18:25:40] <Helenah> mickey8: Yes, bjs is right.
[18:25:41] <The-Compiler> VaniaPy: yeah, but you will need to store your data (or at least the iterator) somewhere outside of that function if you want to preserve state between function calls
[18:25:45] <non-sense> For some reason, I can't seem to add 1 specific __pycache__ (main project dir) folder to my .gitignore. *.pyc and **/__pycache__ works for except the main folder __pycache__. What gives?
[18:25:52] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 268 seconds)
[18:26:03] <Helenah> Like I said... you could have an exit command that when passed to input() it will execute exit().
[18:26:05] <mickey8> uhm sorry for the stupid question, but if i while True: text = input(), how would it know how to handle an EOF?
[18:26:06] <non-sense> works for all* except.
[18:26:25] <bjs> non-sense: this sounds like a git question but **/dir  means not the top-level-dir
[18:26:28] *** Joins: guenhael (~Thunderbi@193.52.208.97)
[18:26:47] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 250 seconds)
[18:26:48] <bjs> non-sense: gitignore however comes with some special rules:  https://git-scm.com/docs/gitignore
[18:27:12] <Helenah> mickey8: I'll quickly write you something up with input().
[18:27:29] *** Quits: Linux77 (~Linux_77@186.233.182.193) (Quit: Leaving)
[18:27:37] <mickey8> Helenah don't waste your time, i'll just use \x00\x00EOFEOF or something
[18:28:07] <bjs> non-sense: actually I am wrong, from that reading **/dir also means the top-level dir.  Are you sure it's not just that your pycache is already tracked or something?
[18:28:40] <Helenah> mickey8: https://termbin.com/ry79
[18:28:56] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[18:28:59] <Helenah> So if the parent program sends "exit" the python program will exit.
[18:29:21] <Helenah> You'll need a while True: so that the program keeps running until exit() is invokaed.
[18:30:01] <bjs> mickey8: input raises EOFError when it reads EOF https://docs.python.org/3/library/functions.html#input
[18:30:19] <Helenah> bjs: Ah right!
[18:30:28] <Helenah> Now that I didn't know. Thank you. :)
[18:30:56] <bjs> reading sys.stdin directly would just yield the empty string -- which would mean EOF too
[18:32:06] <Helenah> A bit off-topic but... I thought I'd say this seems as the event is coming up, whose celebrating xmas and having a meal? I hope you enjoy! :)
[18:32:11] <Helenah> Right back on topic for me. :)
[18:33:33] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:34:12] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[18:36:10] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[18:36:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:37:10] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: Lost terminal)
[18:37:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:38:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[18:38:11] <grym> oh right, advent is sunday.  and AoC is wednesday!
[18:39:33] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.149-59.dynamic.3bb.co.th) (Remote host closed the connection)
[18:40:08] *** Joins: p-i- (~Ohmu@223.206.149.59)
[18:40:09] <jbe> adventure
[18:40:23] <CrtxReavr> AoC?
[18:40:46] <grym> CrtxReavr: https://adventofcode.com/
[18:40:47] <jbe> advent, but of code
[18:40:52] <non-sense> bjs: I don't think it is...
[18:41:02] <CrtxReavr> Ahh.
[18:41:15] <jbe> you write a code every day, and when you're done it's christmas
[18:41:20] <grym> not to be conflated with one of my alma mater's more currently notable alumni
[18:41:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[18:41:45] <bjs> non-sense: maybe you'll have to share your actual gitignore and `git status` output (probably in #git not here though)
[18:43:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:43:35] *** Joins: akk (~akk@75.161.146.115)
[18:44:46] *** Joins: gusto (~Augustus@109.255.100.54)
[18:45:51] *** Quits: ham5urg_ (~ham5urg@p200300d167435800114b660ffce7796b.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:46:06] *** Joins: ham5urg_ (~ham5urg@p200300d167435800114b660ffce7796b.dip0.t-ipconnect.de)
[18:46:19] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[18:46:23] <vlt> bjs: Does just "__pycache__" do what you expect?
[18:46:32] *** Quits: gregoryloscombe (~gregorylo@82.25.194.79) (Ping timeout: 240 seconds)
[18:46:34] <bjs> vlt: why are you asking me
[18:47:05] <non-sense> You are right. It was tracked. It's working now but I think VSCode think it's not on the list.
[18:47:13] <non-sense> So it was throwing me off.
[18:47:16] <vlt> bjs: Ah, sorry, that was for non-sense^^^
[18:47:34] <non-sense> thanks bjs.
[18:48:06] *** Quits: snalty (~Shhh@user/snalty) (Read error: Connection reset by peer)
[18:48:31] *** Joins: gregoryloscombe (~gregorylo@82.25.194.79)
[18:48:45] *** Joins: snalty (~Shhh@user/snalty)
[18:48:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:49:23] *** Parts: chris_99 (uid26561@id-26561.lymington.irccloud.com) ()
[18:49:54] *** Joins: rsx (~dummy@ppp-188-174-142-187.dynamic.mnet-online.de)
[18:50:20] <Helenah> hexnewbie: There is one problem... the usage notice when something invalid is inputted is formatted only correctly for one situation, that's if arguments are getting passed via the linux shell.
[18:50:35] <Helenah> I'm going to look into turning that off though.
[18:50:46] *** Joins: lastshell (~lastshell@user/lastshell)
[18:51:02] *** Joins: lacrymology (~lacrymolo@181.167.210.254)
[18:51:06] <Helenah> OH!
[18:51:17] <CalculusCat> ?
[18:51:18] <Helenah> Ah right.
[18:51:27] <Helenah> I think I may have come to a solution. :D
[18:51:54] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[18:53:10] <Helenah> It looks like add_help=False can be specified at the argparser just incase anyone wants to know also.
[18:53:32] <Helenah> But that didn't work but maybe I did it wrong.
[18:53:38] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:53:45] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:53:48] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[18:54:05] <Helenah> OH!
[18:54:17] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:54:23] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[18:55:10] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:14] *** Joins: gitly (~gitly@148.252.129.211)
[18:55:31] <Helenah> Yeah, it didn't work. :(
[18:56:36] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[18:57:49] <Helenah> I really would've liked to handle it myself though because my program has cleaner (less lines, to the point) messages than this.
[18:58:29] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[18:58:56] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[18:59:07] <Helenah> It seems like add_help=False removes the --help and -h arguments which are added by default but doesn't disable the notice. hmm.
[19:02:22] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[19:02:26] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:03:07] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[19:04:37] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:21] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[19:08:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[19:12:42] *** Quits: jpic (~jpic@82.142.20.182) (Ping timeout: 260 seconds)
[19:12:44] *** Quits: jay-m126_ (~jay-m@129.0.76.209) (Read error: Connection reset by peer)
[19:12:51] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[19:13:24] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:13:41] *** Quits: gregoryloscombe (~gregorylo@82.25.194.79) (Ping timeout: 245 seconds)
[19:14:06] *** Joins: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com)
[19:15:02] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[19:16:33] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[19:16:53] *** Quits: jay-m126 (~jay-m@129.0.76.209) (Read error: Connection reset by peer)
[19:20:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:21:52] *** Joins: fikran (~fikran@user/fikran)
[19:22:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[19:23:30] *** Joins: Linux77 (~7Linux7@186.233.182.193)
[19:26:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[19:27:25] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[19:28:09] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:28:29] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[19:29:08] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[19:30:30] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:30:52] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[19:32:13] *** Joins: kosh (~kosh@user/kosh)
[19:34:03] *** Joins: ArtfulDodger (~ArtfulDod@147.210.204.164)
[19:34:19] *** Quits: baltazar (~baltazar@91-82-172-24.pool.digikabel.hu) (Ping timeout: 268 seconds)
[19:35:19] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[19:35:39] *** Joins: baltazar (~baltazar@94-21-222-223.pool.digikabel.hu)
[19:36:12] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[19:38:32] *** Joins: Payam (~Payam@138.106.57.132)
[19:38:58] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Client Quit)
[19:39:20] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:40:30] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--125.oracle-ocna.com) (Ping timeout: 268 seconds)
[19:41:10] *** Quits: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:41:20] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[19:42:23] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[19:43:26] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:6c13:316b:1996:736a)
[19:43:47] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[19:44:31] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 245 seconds)
[19:45:31] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[19:45:45] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[19:45:49] *** Joins: pycurious (~Adium@user/pycurious)
[19:46:28] *** Joins: XV8 (~XV8@199.192.138.251)
[19:47:08] *** Joins: Betal (~Betal@user/betal)
[19:47:17] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.11)
[19:47:47] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:48:16] *** Quits: NeilG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[19:48:18] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[19:48:25] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:48:38] *** Joins: Abrax- (~Abrax@user/abrax)
[19:48:45] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[19:48:49] *** Quits: Abrax- (~Abrax@user/abrax) (Client Quit)
[19:48:50] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.0) (Ping timeout: 256 seconds)
[19:49:11] *** Joins: Abrax (~Abrax@user/abrax)
[19:49:33] *** Quits: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[19:50:07] <Helenah> What would be the best way to load all files in a particular directory as a module? I want this to be dynamic but I'm going to use an INI file to specify what's a module and what isn't for some security.
[19:51:26] *** Joins: gregoryloscombe (~gregorylo@82.25.194.79)
[19:51:50] *** Joins: NeilG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[19:52:41] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[19:53:51] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:53:52] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[19:55:08] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[19:57:54] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Client Quit)
[19:58:12] *** Joins: jeho2 (~jehoshaph@user/jehoshaphat)
[19:58:47] *** Quits: XV8 (~XV8@199.192.138.251) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:59:53] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[20:00:12] <raxor2k> I was able to use declarative base together with Session in sqlalchemy, can i also use with with "AsyncSession" ?
[20:00:14] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 268 seconds)
[20:00:44] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 256 seconds)
[20:00:53] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Client Quit)
[20:01:23] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[20:02:21] *** Joins: sharperguy (~sharpergu@89.244.125.128)
[20:03:14] *** Quits: withered_wolf (~withered_@174.25.131.17) (Remote host closed the connection)
[20:04:56] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-70-146.poda.cz) (Ping timeout: 245 seconds)
[20:05:30] *** CalculusCat is now known as JustACat
[20:06:02] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:09:25] *** Joins: Roey (~Roey@user/Roey)
[20:10:47] *** Quits: julia (~quassel@user/julia) (Ping timeout: 260 seconds)
[20:10:53] *** foo_ is now known as foo
[20:11:45] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[20:12:04] *** Joins: julia (~quassel@user/julia)
[20:12:29] *** Quits: guenhael (~Thunderbi@193.52.208.97) (Ping timeout: 265 seconds)
[20:12:33] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:12:37] <SnoopJ> Helenah, it depends on what "best" means, really. A very simple way to do it is to modify sys.path, perform your import, and then restore the value (or not, but this is kinda sloppy). A more cautious way involves getting your hands into the import system machinery, using importlib.
[20:13:06] <SnoopJ> In this case I guess you'd have one import per file in that directory
[20:13:25] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:e983:cac5:a8b0:623a)
[20:14:10] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:15:18] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[20:16:02] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[20:16:21] *** Quits: Atlas667 (~Atlas667@193.27.12.10) (Ping timeout: 265 seconds)
[20:16:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[20:16:35] *** Joins: drogas (~drogas@jump2.jet.uk)
[20:16:52] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[20:18:41] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--7b.oracle-ocna.com)
[20:18:58] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[20:19:24] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:20:19] *** Joins: ianliu (~ianliu@189-46-252-210.dsl.telesp.net.br)
[20:20:21] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[20:20:36] <raxor2k> graingert: plz tell me i can still use the same models using base, even if i change to async db?
[20:20:37] <raxor2k> https://bpa.st/4LGQ
[20:21:42] <ianliu> When using %matplotlib widget, every plot after the first seems to show the first plot I've made. Has anyone experienced this?
[20:21:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:21:51] <SnoopJ> ianliu, use `%matplotlib inline`
[20:22:10] <ianliu> SnoopJ: is there a way to interact with the inline plot?
[20:22:22] *** Quits: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr) (Quit: Ping timeout (120 seconds))
[20:22:26] <SnoopJ> hmm, no, I think inline always gives you raster
[20:22:32] *** Joins: dohtem (uid524096@user/dohtem)
[20:22:35] *** Quits: JustACat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[20:22:39] <ianliu> so widget is unsupported?
[20:23:11] <SnoopJ> ianliu, can we see an example notebook? Preferably whatever is minimal to reproduce what you're seeing
[20:23:47] <SnoopJ> I doubt it's unsupported, but matplotlib can be annoyingly stateful and IPython can compound the problem
[20:24:24] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[20:24:30] *** Joins: noord (~noord@user/noord)
[20:24:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 250 seconds)
[20:25:21] *** Quits: Tas-sos (~Tas-sos@78-203-151.adsl.cyta.gr) (Ping timeout: 245 seconds)
[20:27:27] <ianliu> I will try making a minimal example
[20:27:48] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[20:28:26] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:32] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[20:30:09] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[20:30:16] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[20:30:19] <ianliu> about your annoyingly stateful, I also hate jupyter because of that! uh...
[20:30:34] <SnoopJ> ianliu, the one thing I can say is that if you use this magic, you should restart the notebook if you change it, because calling matplotlib.use() twice is basically pointless (and doesn't issue any error/warning)
[20:30:43] <SnoopJ> and that's basically what the magic does for you, in addition to some IPython innards
[20:30:46] <ianliu> trying to reproduce the problem on a newly created venv gives me another error now: Error displaying widget: model not found
[20:31:32] <ianliu> I did pip install jupyterlab matplotlib ipympl
[20:31:55] <ianliu> started a notebook and executed %matplotlib widget with a simple line plot
[20:32:02] *** Quits: nomic (~nomic@185.217.117.51) (Quit: Leaving)
[20:32:03] <SnoopJ> all I can say about that is that whatever `model` is, it's not importable in your venv
[20:32:15] <SnoopJ> or otherwise unavailable?
[20:32:37] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5)
[20:32:39] <SnoopJ> however confusing it looks from your end, it can only be worse on my side: I can't see the screen :)
[20:32:59] <ianliu> dunno, I will investigate further tomorrow, now I will just deal with %matplotlib inline
[20:33:08] <ianliu> no time now, thanks!
[20:33:57] *** Quits: canarts (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[20:34:14] *** Quits: Jong (~Jong@2620:10d:c090:400::5:31eb) (Ping timeout: 265 seconds)
[20:34:43] *** Joins: srhm (~srhm@user/srhm)
[20:34:48] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[20:35:48] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:38:19] *** Joins: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr)
[20:38:56] *** Quits: ianliu (~ianliu@189-46-252-210.dsl.telesp.net.br) (Quit: WeeChat 3.3)
[20:40:34] *** Joins: guenhael (~Thunderbi@193.52.208.30)
[20:41:07] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:43:40] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:44:53] *** Quits: thurs80601421 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[20:45:02] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 240 seconds)
[20:45:16] *** Joins: drogas (~drogas@jump2.jet.uk)
[20:47:11] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[20:48:51] *** Joins: millido (~millido@84.210.150.128)
[20:48:55] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[20:51:25] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Ping timeout: 268 seconds)
[20:51:47] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com)
[20:52:02] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[20:52:23] *** Joins: Klinda (~superleag@user/klinda)
[20:52:36] *** Quits: NeilG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 265 seconds)
[20:54:30] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[20:54:50] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.3)
[20:54:55] *** dcaro is now known as dcaro_away
[20:55:11] *** Quits: greedom (~greedom@p200300de67100a0052a33a04e922f4b1.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:55:20] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[20:55:37] *** Joins: asa22 (~asa22@84.125.126.219.dyn.user.ono.com)
[20:58:53] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 265 seconds)
[20:59:54] *** Quits: VaniaPy (~VaniaPy@46.12.234.111.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:00:36] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:00:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:00:47] *** Joins: Naan (~naan@user/naan)
[21:01:53] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Ping timeout: 268 seconds)
[21:02:11] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:02:25] *** Joins: Tas-sos (~Tas-sos@46-180-173.adsl.cyta.gr)
[21:04:20] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:05:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[21:06:01] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[21:06:11] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 245 seconds)
[21:06:36] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[21:06:41] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 250 seconds)
[21:09:02] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--7b.oracle-ocna.com) (Ping timeout: 240 seconds)
[21:09:04] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[21:09:30] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[21:10:44] *** Joins: jay-m126 (~jay-m@154.72.150.235)
[21:10:49] *** Joins: jay-m126_ (~jay-m@154.72.150.235)
[21:11:07] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:11:21] *** Joins: hedera (~hedera@2804:7f0:3887:2952:c4e5:3aca:56cd:9685)
[21:11:23] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[21:11:47] <hedera> can someone explain what CoC is?
[21:12:01] <frrs> code of conduct
[21:12:14] <hedera> makes sense
[21:12:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:26] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:13:34] *** Joins: doc (~doc@user/doc)
[21:15:40] *** Quits: Tas-sos (~Tas-sos@46-180-173.adsl.cyta.gr) (Ping timeout: 260 seconds)
[21:15:48] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[21:16:08] *** Quits: hedera (~hedera@2804:7f0:3887:2952:c4e5:3aca:56cd:9685) (Remote host closed the connection)
[21:17:00] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:17:17] *** Joins: grandrew (~grandrew@2601:642:c301:c600:f22f:74ff:feac:90a3)
[21:17:18] *** Joins: Tas-sos (~Tas-sos@ppp046177165196.access.hol.gr)
[21:17:40] *** Joins: Colt (~Colt@user/colt)
[21:19:09] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:19:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:20:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:22:01] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:22:24] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:25:55] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[21:26:00] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:26:16] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[21:26:28] *** Joins: naranja (~orange@user/orangeboxcutter)
[21:26:51] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 260 seconds)
[21:27:28] *** coc0nut_ is now known as coc0nut
[21:28:46] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[21:29:25] *** Joins: NeilG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[21:29:31] *** Joins: Colt (~Colt@user/colt)
[21:29:36] *** Joins: plantman (~plantman@2601:405:4680:1b0::2)
[21:29:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[21:29:47] *** Parts: plantman (~plantman@2601:405:4680:1b0::2) ()
[21:31:12] *** Joins: fikran (~fikran@user/fikran)
[21:31:27] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[21:31:29] *** Joins: hedera (~User@2804:7f0:3887:2952:c4e5:3aca:56cd:9685)
[21:32:03] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:32:06] *** Quits: luigibu (~luigi@80.30.201.209) (Read error: Connection reset by peer)
[21:32:39] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[21:33:16] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[21:33:23] *** Quits: asa22 (~asa22@84.125.126.219.dyn.user.ono.com) (Quit: Client closed)
[21:33:25] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:33:48] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[21:34:34] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 268 seconds)
[21:34:42] *** Quits: hedera (~User@2804:7f0:3887:2952:c4e5:3aca:56cd:9685) (Client Quit)
[21:35:34] *** Joins: hedera (~User@2804:7f0:3887:2952:c4e5:3aca:56cd:9685)
[21:35:35] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:36:37] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:36:59] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[21:37:37] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:37:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:38:00] *** Joins: Colt (~Colt@user/colt)
[21:39:16] *** Joins: preston (~preston@097-080-132-008.res.spectrum.com)
[21:40:45] *** Quits: ArtfulDodger (~ArtfulDod@147.210.204.164) (Ping timeout: 268 seconds)
[21:41:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[21:41:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[21:41:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[21:41:57] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:42:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:43:31] *** Joins: jim (~jim@about/linux/staff/jim)
[21:43:33] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[21:43:38] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[21:45:55] *** Joins: capnyesterday (uid528258@id-528258.lymington.irccloud.com)
[21:48:17] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[21:48:40] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[21:49:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:49:44] *** Joins: node1 (~node1@user/node1)
[21:51:53] *** Joins: p-i-_ (~Ohmu@223.206.149.59)
[21:54:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:55:32] *** Quits: p-i- (~Ohmu@223.206.149.59) (Ping timeout: 240 seconds)
[21:55:35] *** Quits: rsx (~dummy@ppp-188-174-142-187.dynamic.mnet-online.de) (Quit: rsx)
[21:57:57] *** Joins: setuid (sid191390@canonical/setuid)
[21:58:35] *** bkhl_ is now known as bkhl
[21:58:57] <setuid> I'm on a mission, and need to pick some brains... so I've got a public site that we maintain, lives behind a mirrored CDN, and has a few million files in it. Hitting this with lftp, wget, curl, scrapy and other tools is quite inefficient to mirror it out. rsync would be ideal, but that's not set up yet.
[21:59:06] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[21:59:14] <setuid> So I'm thinking lxml, trio, asks, and requests/session, but need to somehow make the parsing "re-entrant"
[21:59:32] <ChrisWarrick> if you mainain this site, just set up rsync or whatever
[21:59:49] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:00:36] <setuid> eg: grab a page, urlextract XPath the URLs from the page `urls = lh.fromstring(r.text).xpath("//a/@href")`, and then send each one of those back into the await nursery to parse that page's urls and traverse, all while making local directories to match urls that are paths, and create files for those that are files in those paths.
[22:00:49] <setuid> ChrisWarrick: Yes, that's the idea, but that's months out, at best
[22:01:02] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[22:01:26] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[22:01:37] <setuid> Current site has 5,234,220 files within its heirarchy
[22:02:08] *** Joins: sedeki (~textual@user/sedeki)
[22:02:47] <akk> Temporarily writing an rsync workalike seems like it would take longer than just setting up rsync ...?
[22:03:42] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[22:05:48] <setuid> It's not about the time it takes to set it up, it's all the background work, approvals, resource allocation needed.
[22:06:04] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[22:06:08] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[22:06:21] <ChrisWarrick> setuid: how often do you need to do this?
[22:06:34] <setuid> ChrisWarrick: Mirror the site? Nightly.
[22:06:42] <ChrisWarrick> get a real setup then
[22:06:49] <setuid> problem is, tools like lftp, even with a decent parallelism, takes days to complete each nightly run
[22:06:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:07:25] <setuid> But I know from past experience mirroring Zwift json blobs, I can do tens of thousands of requests/minute in parallel, reusing the same http socket, and get this done in mere hours
[22:07:53] <ChrisWarrick> get a real rsync-based setup then
[22:08:41] <setuid> Yes, and that's coming, but not fast enough, so we need a stopgap in the short term
[22:09:27] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 265 seconds)
[22:09:46] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[22:10:03] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[22:10:16] *** Joins: ArtfulDodger (~ArtfulDod@19.68.205.77.rev.sfr.net)
[22:10:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:10:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[22:11:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[22:11:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 245 seconds)
[22:12:09] *** Joins: aporetical (~mj@88.98.217.239)
[22:12:10] *** Joins: semeion (~semeion@user/semeion)
[22:12:56] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:13:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:14:02] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[22:14:14] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:17:40] *** Quits: aporetical (~mj@88.98.217.239) (Quit: Connection closed)
[22:18:29] <pycurious> When I run pylint -> tests/test_mymodule.py:25:27: E1101: Module 'torch' has no 'float32' member (no-member) — but when i import torch in python3 - i do see torch.float32 - any ideas what i am doing wrong?
[22:18:49] <raxor2k> graingert: are you here
[22:18:52] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[22:19:13] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:19:20] *** Joins: Auron (~Auron956@user/auron)
[22:19:36] <pycurious> I see - those are dynamically created by torch - thanks
[22:22:02] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:22:46] *** Joins: Warped (~Warped@user/warped)
[22:23:06] *** Joins: Atque (~Atque@user/atque)
[22:23:35] *** Quits: raxor2k (~raxor2k@78.158.245.248) (Remote host closed the connection)
[22:23:40] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[22:24:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:44] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:24:49] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5)
[22:25:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:29:12] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[22:29:22] *** Quits: fstd (~fstd@xdsl-87-79-98-69.nc.de) (Read error: Connection reset by peer)
[22:29:38] *** Joins: fstd (~fstd@xdsl-87-79-98-69.nc.de)
[22:30:02] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 240 seconds)
[22:31:01] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[22:31:21] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[22:32:49] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[22:33:02] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 240 seconds)
[22:35:24] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[22:36:58] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[22:37:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431) (Ping timeout: 256 seconds)
[22:38:02] *** Quits: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617) (Client Quit)
[22:39:23] *** Joins: fofoni (~fofoni@user/fofoni)
[22:40:23] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[22:42:07] *** Parts: setuid (sid191390@canonical/setuid) ()
[22:42:10] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[22:45:17] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e025:9d89:129f:3ca5) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:47:08] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:49:05] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 265 seconds)
[22:50:01] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:50:37] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[22:52:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:52:23] *** Joins: raxor2k (~raxor2k@78.158.245.248)
[22:54:00] <jinsun> pycurious: you can tell pylint to import the package to look for members https://pylint.pycqa.org/en/latest/technical_reference/c_extensions.html, but it will become even more slower than it already is
[22:55:48] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[22:55:58] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[22:56:59] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[22:58:32] *** Quits: ham5urg_ (~ham5urg@p200300d167435800114b660ffce7796b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:02:03] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:605d:7a3a:8801:8c2d)
[23:03:02] *** Quits: NeilG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[23:03:40] <SnoopJ> pycurious, jinsun there is also the generated-members pylint option, which does not trigger E1101 when those are accessed
[23:03:57] <SnoopJ> (torch is obnoxious about this, there are a bunch of those)
[23:04:33] *** Joins: mtg (~mtg@209.250.241.226)
[23:04:40] <SnoopJ> documented here: https://pylint.pycqa.org/en/latest/technical_reference/features.html?highlight=generated%20members#typecheck-checker-options
[23:05:05] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:605d:7a3a:8801:8c2d) (Client Quit)
[23:06:06] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[23:06:10] <jinsun> ah cool, that would be faster (but a bit more annoying to maintain in your config)
[23:06:36] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 256 seconds)
[23:06:53] *** Joins: Macuser (~Macuser@2600:1003:b44d:8636:59ce:d574:5054:a617)
[23:07:59] *** Joins: jmuriel (~jmuriel@ip72-223-91-148.ph.ph.cox.net)
[23:11:18] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[23:12:29] *** Joins: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:12:38] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[23:12:51] <Evolver> Why does the `array` module not have a 2 byte float?
[23:13:09] <Evolver> Numpy has a 2 byte float, but it's slow.
[23:14:52] <ChrisWarrick> what is slow?
[23:15:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:48] <SnoopJ> Evolver, why would it have one?
[23:16:02] <Evolver> why should I have to waste 50% of my memory
[23:16:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 240 seconds)
[23:16:12] <Evolver> I don't need a 4 byte float for my current application.
[23:16:19] <SnoopJ> Then perhaps you want a bytearray.
[23:16:43] <ChrisWarrick> Evolver: what is slow about numpy?
[23:16:45] <Evolver> That won't support simple mathematical operations, e.g. greater than, less than, etc.
[23:16:52] <Evolver> (referring to a bytearray)
[23:17:14] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 260 seconds)
[23:17:22] <Evolver> ChrisWarrick: I compared the random access speed of array.array with np.array for a 4 byte and 8 byte float, and numpy was so much slower
[23:17:34] *** Quits: causaui1 (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[23:17:34] <SnoopJ> Evolver, if you expect [arbitrary format] to be available, simple, and fast, I don't really know what to tell you.
[23:17:46] <Evolver> I mean it would be a simple addition
[23:17:52] <ChrisWarrick> Evolver: sounds like a micro-benchmark to me
[23:17:57] <SnoopJ> So would all other arbitrary-length floats
[23:18:06] <ChrisWarrick> Evolver: numpy excels at vectorized operations
[23:18:18] <Evolver> If numpy has it, that's strong reason enough to want to have it in Python, referring to the 2 byte float datatype.
[23:18:24] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 260 seconds)
[23:18:26] <Evolver> in the array module
[23:18:32] *** Joins: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112)
[23:18:42] <Evolver> ChrisWarrick: agreed
[23:18:43] <ChrisWarrick> a 2-byte float sounds impractical to me
[23:18:54] <Evolver> it's not impractical to numpy or they wouldn't have it
[23:18:56] <SnoopJ> Python's floats are following IEEE 754 which does not define this width. Perhaps you can find (or write) a C module that defines your own type.
[23:19:03] <Evolver> I see
[23:19:23] *** Joins: reset (~reset@user/reset)
[23:19:24] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[23:20:14] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2d35:fa03:476d:9431)
[23:20:15] <SnoopJ> hmm, maybe it does define it
[23:20:45] <SnoopJ> oh, no, binary16 is the smallest one of the interchange formats
[23:21:57] <Evolver> That's what I'm asking for, 16 bits
[23:21:58] <SnoopJ> the struct module knows how about it, but I guess the use-case of half-precision floats wasn't considered worth the bother of putting it in
[23:22:17] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:55ca:3c58:edec:de8a)
[23:22:42] <SnoopJ> I'm skeptical of the benchmark as well, I'd have to see it to know if it makes sense.
[23:23:33] *** Quits: jmuriel (~jmuriel@ip72-223-91-148.ph.ph.cox.net) (Quit: WeeChat 2.8)
[23:23:53] <bitplane> hallo. quick question.. I'm making an enum for some data coming back over a serial connection, the data is a time period like "ms, 10ms, second, minute, hour, week, month, year" - I want a method to get the number of ms for each period
[23:24:09] <graingert[m]> <raxor2k> "graingert: are you here" <- I'm always here
[23:24:30] *** Joins: nomic (~nomic@185.217.117.51)
[23:24:43] <bitplane> is there a nice, pythonic way of doing this where I've got the byte value, the name and the period all bundled together in a nice simple way?
[23:25:15] <bitplane> like SECONDS = (3, 1000) or something?
[23:26:00] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:26:05] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-115.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:26:09] <bitplane> 3 being the wire value of the byte, 1000 being the number of ms it represents, so I don't need to have a big list of these declared twice
[23:26:48] *** Quits: Andrynet (~Andrynet@190.152.208.104) (Ping timeout: 268 seconds)
[23:27:04] *** Joins: y1n (~y1n@77.119.166.106.wireless.dyn.drei.com)
[23:27:23] *** Joins: Andrynet (~Andrynet@190.152.208.104)
[23:27:47] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[23:30:26] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[23:30:32] <Evolver> bitplane: in general you can use one or more of: class, dataclass, enum, namedtuple, dict, struct
[23:30:41] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Client Quit)
[23:30:46] <SnoopJ> bitplane, can you tell us a little more about this data?
[23:30:58] *** Joins: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net)
[23:31:37] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:31:43] <bitplane> ok, I send a struct.pack'd request, get a response. the response is two bytes (units, unittype)
[23:32:11] <bitplane> where unittype is 0, 1, 2, 3, 4 etc that represents the values above
[23:32:21] <bitplane> but at some point I want to convert that into milliseconds
[23:33:20] <SnoopJ> sounds like you might just want a dict[first_byte, conversion_factor] ?
[23:33:35] *** Quits: hedera (~User@2804:7f0:3887:2952:c4e5:3aca:56cd:9685) (Quit: Leaving)
[23:34:02] <SnoopJ> `msec = second_byte * msec_factor[first_byte]` or somesuch
[23:34:31] <bitplane> yeah it just seems kinda ugly like that, I'd like for it to be as self-documenting as possible
[23:34:41] <SnoopJ> bitplane, what do you find ugly about it?
[23:35:11] <bitplane> well I can't just cast to the type can I?
[23:35:20] <SnoopJ> You could have an IntEnum for the first byte if you wanted, so the dict would be `msec_factor = { TimeType.SECONDS: 1000, ... }`
[23:35:24] *** Quits: nat_of_cy (~Thunderbi@user/nat-of-cy/x-1732112) (Quit: nat_of_cy)
[23:35:48] <bitplane> yeah that's the thing, I'm using the enum value to get the type value
[23:35:52] <bitplane> hang on lemme paste
[23:36:06] <SnoopJ> IntEnum would behave exactly like `3` there
[23:36:11] <bitplane> argh work laptop no paste
[23:36:13] <SnoopJ> but in a way that is a little less opaque
[23:37:02] <SnoopJ> or I guess you could do `SECONDS = b"\x03"; ...; msec_factor = { SECONDS: 1000, ... }`
[23:37:06] <bitplane> hmm yeah I guess declaring the whole thing twice with a dict is the right way to do it
[23:37:10] <SnoopJ> if you wanted to use bytes objects
[23:37:15] <bitplane> still feels kinda nasty
[23:37:25] <SnoopJ> can you explain why?
[23:37:47] <SnoopJ> a dict is usually the most natural choice for a mapping and AFAICT what you want is a mapping, and maybe a helper method that uses it
[23:38:21] <bitplane> well, we're using black for formatting, so it'll just be long and read like something's declared twice
[23:38:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:38:51] <SnoopJ> bitplane, why declared twice?
[23:39:03] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:39:12] <bitplane> once for the value itself (3), once to map the value to the interval (1000)
[23:39:21] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[23:39:33] <SnoopJ> Sorry, I don't understand
[23:39:53] <SnoopJ> that sounds like you're saying the format itself is duplicating information (which...kinda?)
[23:40:34] *** Joins: fikran (~fikran@user/fikran)
[23:41:36] <bitplane> oh I guess I could make the enum a type that's an int for the byte value and another for the duration
[23:42:07] <SnoopJ> the duration is an enum, not a scalar?
[23:42:18] <bitplane> oh sorry the typ[e
[23:42:26] <bitplane> MILLISECONDS = DurationType(3, 1000)
[23:42:32] <bitplane> that in an enum
[23:42:38] <bitplane> again that feels kinda dirty
[23:42:55] <SnoopJ> it's pretty elaborate/indirect for a handful of mappings like this
[23:43:04] *** Quits: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:43:22] *** Joins: ubert (~Thunderbi@p200300ecdf0ba285e6b318fffe838f33.dip0.t-ipconnect.de)
[23:44:41] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:46:18] <bitplane> yeah, there's nothing terse and simple enough
[23:46:30] <bitplane> I guess a dict is the most pythonic/simple answer
[23:46:36] <SnoopJ> a dict with some comments to label what the bytes mean is pretty terse
[23:46:59] *** Joins: brabrax (~brabrax@user/brabrax)
[23:47:27] <SnoopJ> i.e. `{ ..., b"\x03": 1000  # SECONDS ... }`
[23:47:41] <bitplane> ideally I'd like to use pydantic to define the data coming back, so I can parse responses automagically and raise exceptions if the dest address or the checksum is wrong, or the data doesn't match the right format
[23:48:34] <SnoopJ> you could do that, sure
[23:48:49] <bitplane> hardware is a real pain for testing, you can't really do meaningful automated tests and actual kit has all kinds of weird realities
[23:49:15] <bitplane> so I'm trying to adapt the structure of what I have to have some safety built in
[23:49:25] *** Joins: node1 (~node1@user/node1)
[23:49:26] <raxor2k> graingert: I can still use the same crud functions + Models even tho i change from Session to AsyncSession ?
[23:49:29] <bitplane> but it still be reasonably readable
[23:49:57] <SnoopJ> bitplane, making it into an object is probably a matter of calling the helper I have in mind, and adding whatever other validation you want
[23:49:58] *** Joins: ElGuapo_ (~ElGuapo@li1974-164.members.linode.com)
[23:50:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:50:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:50:57] <ElGuapo_> hi.. I am newb.. having trouble with my script.. I have a string varible called msg .. but it has spaces in it.. how do I wrap that ?
[23:51:07] <ChrisWarrick> ElGuapo_: what do you mean?
[23:51:12] <ChrisWarrick> ElGuapo_: also, pastebin your code (bpaste.net)
[23:51:28] <SnoopJ> variable names can't contain spaces, but maybe I am slightly misunderstanding the question
[23:52:00] <ElGuapo_> I mean a string ..     self.irc.send(bytes("PRIVMSG " + channel + " " + msg + "\n", "UTF-8"))
[23:52:23] <ChrisWarrick> ElGuapo_: I still don’t understand
[23:52:25] * SnoopJ still isn't sure what the question is
[23:52:27] <ChrisWarrick> (also, don’t write an irc bot by hand)
[23:52:39] <ElGuapo_> oh sorry.. using the pastbin.. 1 sec
[23:53:08] <ElGuapo_> oh Im trying to write a simple IRC bot yes.. just to my own znc
[23:53:29] <ElGuapo_> its working.. I just cant figure out how to send a message with spaces
[23:54:30] <ChrisWarrick> ElGuapo_: but how is your attempt failing?
[23:54:37] <ElGuapo_> https://bpa.st/YTAA
[23:54:53] <ElGuapo_> I only get the last bit of the string.
[23:55:22] <ElGuapo_> so I expect to get "Fri, 26 Nov 2021 12:45:01 -0700"  but I only get "-0700"
[23:55:38] <ChrisWarrick> ElGuapo_: that’s because you’re doing IRC by hand
[23:55:47] <ElGuapo_> I feel like I got to wrap that msg in quotes or something ?
[23:55:52] <Repiphany> IRC messsages should end with \r\n fwiw
[23:56:02] <ChrisWarrick> ElGuapo_: find a good irc library
[23:57:01] *** Quits: Tas-sos (~Tas-sos@ppp046177165196.access.hol.gr) (Ping timeout: 268 seconds)
[23:57:09] <Repiphany> f'PRIVMSG {channel} :{msg}\r\n'
[23:57:24] <Celelibi> Hm... If I symlink a file does it still uses its original location to find the imported modules?
[23:57:24] *** Quits: CalculusCat (~CalculusC@pool-71-178-171-140.washdc.fios.verizon.net) (Quit: Is now asleep in her box)
[23:57:27] <ElGuapo_> ohh its curly brackets ?  thx
[23:57:31] <ChrisWarrick> ElGuapo_: no
[23:57:34] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[23:57:40] <Repiphany> Missing the ":" as well (there's one in your datestring)
[23:58:31] <ElGuapo_> ohh ok.. I guess the example I went from had some bugs on that
