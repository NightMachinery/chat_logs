[01:40:05] *** Quits: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[02:51:01] <maerwald> I can't build the patched GHC (the one with the linker patch)
[02:51:05] <maerwald> it always segfaults
[06:34:35] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 264 seconds)
[09:30:33] *** Joins: expipiplus1 (~expipiplu@2001:470:69fc:105::d713)
[13:37:59] *** Joins: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com)
[14:47:18] *** Joins: yoshitsugu (~yoshitsug@p503133-ipngn2901morioka.iwate.ocn.ne.jp)
[15:06:41] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[15:08:09] *** Joins: hololeap (~hololeap@user/hololeap)
[15:13:59] *** Joins: konstantine (~konstanti@ppp046177200155.access.hol.gr)
[15:41:20] <fendor[m]> After participating in a coding contest using Haskell and watching my partner use HLS, I can confirm that HLS's auto completion is often not helping at all
[15:42:41] <fendor[m]> It is overly eager, autocomples `x` to some ghc-prim array access function, showing a completion for some reason four times instead of once
[15:52:38] <expipiplus1> <fendor[m]> "It is overly eager, autocomples..." <- Is this that: https://github.com/haskell/haskell-language-server/pull/2040
[15:53:20] * expipiplus1 uploaded an image: (36KiB) < https://libera.ems.host/_matrix/media/r0/download/monoid.al/eOTHFudmsKDtduebqrEHQwik/image.png >
[15:53:20] <fendor[m]> Probably, yeah
[15:53:27] <fendor[m]> yeah exactly
[15:53:57] <expipiplus1> I disliked that up until earlier today in fact, when I changed my editor to do the "insert the relevant import" when one is selected
[15:54:05] <expipiplus1> now they're no longer functionally identical 
[15:54:28] <expipiplus1> (although the UI (in my case) is still terrible, making me have to run down each one to see its provenance)
[15:54:42] <expipiplus1> hahah
[15:54:42] * expipiplus1 uploaded an image: (88KiB) < https://libera.ems.host/_matrix/media/r0/download/monoid.al/RvwUYNjTgRTHCVItScvYzplw/image.png >
[15:55:04] <fendor[m]> this looks like the default behaviour and I think it is a bad default, causing a bad first impression of HLS
[15:55:32] <expipiplus1> It should definitely be disabled if `haskell.plugin.ghcide-completions.config.autoExtendOn` is false
[15:56:02] <fendor[m]> autoExtend is the automatically import an identifier?
[15:56:18] <expipiplus1> I wonder if this is too "out there" but I wish if I typed `BSL.putSt` it would only suggest completions where `BSL` is a substring of the module
[15:56:32] <expipiplus1> fendor[m]: yeah, without that having several copies is meaningless
[15:57:09] <expipiplus1> (although one may still want the out of scope things, although tbh I don't think that's common)
[15:57:26] <fendor[m]> yeah, don't know whether you have seen my complaints already, but this causes quite a lot of trouble for newcomers
[15:58:01] <fendor[m]> expipiplus1: tbh, I liked that feature in typescript but HLS is way too lenient and happily imports names that are completely off from what I actually want
[15:58:22] <expipiplus1> yeah, it's probably a super hard problem to solve generally
[15:58:38] <fendor[m]> in a language such as Haskell, definitely
[15:58:58] <expipiplus1> I wonder if it would be overall any better if one limits it to identifiers which occur 'frequently' in Hackage
[15:59:10] <expipiplus1> that might just lead to "this completion is really inconsistent"
[15:59:34] *** Quits: konstantine (~konstanti@ppp046177200155.access.hol.gr) (Quit: konstantine)
[15:59:49] <fendor[m]> probably bad for companies that use HLS but not Hackage
[16:00:52] <fendor[m]> I wonder whether it would help to change the scoring function for autocompletion to practically say "when an identifier is not in scope it must be *really* close to what you are typing to be suggested"
[16:01:07] <expipiplus1> üëçÔ∏è
[16:04:09] <expipiplus1> fendor[m]: well, they can train this themselves perhaps
[16:04:43] <maerwald> my main problem with HLS is not completion, but that it works at all
[16:05:19] <maerwald> server crashes, stale cache, TH, fobject-code issues, etc etc
[16:05:32] <fendor[m]> TH situation is rather dire indeed
[16:07:10] <expipiplus1> In general, I've found it to be really quite stable recently (TH excluded perhaps). (I don't mean to minimize your experience, maerwald, and I get that this is not very actionable)
[16:11:43] *** Quits: yoshitsugu (~yoshitsug@p503133-ipngn2901morioka.iwate.ocn.ne.jp) (Quit: Client closed)
[16:22:10] <jneira[m]> there is a pr about completion sorting that maybe could help
[17:41:19] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[19:05:00] *** carbolymer_ is now known as carbolymer
[19:24:10] *** Joins: fendor_ (~fendor@77.119.198.57.wireless.dyn.drei.com)
[19:26:39] *** Quits: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[20:12:25] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[20:13:53] *** Joins: hololeap (~hololeap@user/hololeap)
[20:23:15] <michaelpj[m]> yeah, I actually think this might be exactly that issue
[20:23:20] <michaelpj[m]> it really shouldn't be like that
[22:00:54] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:02:09] *** Joins: hololeap (~hololeap@user/hololeap)
[23:15:16] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:16:38] *** Joins: hololeap (~hololeap@user/hololeap)
[23:35:18] *** Quits: juhp (~juhp@128.106.188.220) (Ping timeout: 260 seconds)
[23:38:05] *** Joins: juhp (~juhp@128.106.188.220)
