[00:00:09] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[00:01:52] <pyzozord> I'm confused, all those \n \t escape sequences part of ascii, or is it a c construct that got very popular?
[00:02:39] <GeDaMo> Those are C string escapes which translate to ASCII control characters
[00:03:17] <pyzozord> aah ok that's why I was confused, it makes sense now
[00:03:56] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[00:03:57] <GeDaMo> They can also translate to control characters in other character encodings depending on the system
[00:03:57] *** Joins: nikola_ (~nikola@109-92-11-43.dynamic.isp.telekom.rs)
[00:04:11] *** nikola_ is now known as usi
[00:04:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[00:04:40] *** usi is now known as Guest4006
[00:05:27] <pyzozord> And the locales and encodings? Are those concepts part of C or ASCII or something else?
[00:05:55] <GeDaMo> Locales came much later
[00:06:09] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Quit: WeeChat 2.8)
[00:06:18] <pyzozord> I'm not even sure what I am talking about but I think you can be an ascii string and have some encoding at the same time
[00:06:43] <pyzozord> K&R doesn't talk about it at all
[00:06:47] *** Quits: jamea97 (~jamea77@200.68.140.59) (Ping timeout: 252 seconds)
[00:07:10] <GeDaMo> C strings contain bytes, how those bytes are interpreted can vary across systems / locales / etc.
[00:07:25] <pulse> "I think you can be an ascii string" o_O
[00:08:03] <pyzozord> pulse: figure of speach
[00:08:08] <pyzozord> speech*
[00:09:21] <pulse> an ascii figure one would hope
[00:09:25] *** Quits: RickDeckard (~RickDecka@pool-100-12-189-215.nycmny.fios.verizon.net) (Quit: Leaving...)
[00:10:28] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:10:53] <pyzozord> so C doesn't have any concept of string, I have typed with my keyboard some string of bytes into my editor and that has been saved on the disk, later compiler took that exact string of bytes and embedded it inside the binary, later during execution, machine code will reach to memory location mapped to that exact string of bytes and copy them to other memory location that represents a stream in the
[00:10:59] <pyzozord> operating system, that's when operating system will decide how to present those bytes on the screen
[00:11:13] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Client Quit)
[00:12:27] <GeDaMo> The terminal decies how to present them
[00:12:31] <GeDaMo> ^decides
[00:13:50] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[00:14:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 272 seconds)
[00:14:49] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[00:16:31] <pyzozord> ok, thanks GeDaMo
[00:17:26] *** Joins: Beyondo (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[00:17:47] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[00:21:09] <pyzozord> need to study strings and locales more, suddenly it's very confusing to me how is it really handled
[00:22:59] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:23:12] *** Joins: ayenet4 (~0x100@32.211.211.39)
[00:24:14] <GeDaMo> Strings are arrays of bytes ... until they're not :|
[00:24:50] <GeDaMo> Locales allow you to specify e.g. the currency character or decimal character
[00:28:01] <pyzozord> Oh ok, that takes at least locales out of the problem
[00:28:43] <pyzozord> I think part of what I was confused about is encodings like ISO 8859-1. But now I think it's just an alternative to ASCII, those are just two different "charsets"?
[00:29:59] *** Quits: xff0x (~xff0x@2001:1a81:539d:3600:1c1d:c169:6e6:5e55) (Ping timeout: 252 seconds)
[00:30:03] <GeDaMo> The first 127 characters are standardised in ASCII, everything above that can vary
[00:30:29] <pyzozord> oh interesting
[00:30:44] <pyzozord> Thanks!
[00:30:56] *** Joins: xff0x (~xff0x@2001:1a81:539d:3600:dd23:6975:e62a:a95)
[00:31:44] *** Joins: brabrax (~brabrax@user/brabrax)
[00:32:02] <GeDaMo> https://en.wikipedia.org/wiki/Code_page_437
[00:36:02] *** Quits: mmfood (~mmfood@45.91.21.58) (Ping timeout: 252 seconds)
[00:36:50] *** Joins: lembron (~admin@user/lembron)
[00:37:31] *** Joins: Y00fie (~yoofie@097-070-135-101.res.spectrum.com)
[00:37:54] *** Quits: magla (~gelignite@55d42021.access.ecotel.net) (Quit: Stay safe!)
[00:38:00] <pyzozord> oh so ascii is 7 bit, all those ascii "charsets" are ascii extensions and take 8 or more bits, one of the extensions is utf8
[00:39:09] <pyzozord> btw cool to know CP 437 has a name, I always recognized that specific set as the base computer set, did not know it was actually an extension of ascii, I thought it WAS ascii
[00:39:11] <deniska> pyzozord: utf8 is an extension to ascii in a sense that all ascii is also valid utf8
[00:39:17] <GeDaMo> No, UTF-8 is an encoding for Unicode
[00:39:42] <deniska> pyzozord: there're unicode encodings which are not ascii-compatible
[00:39:44] <GeDaMo> Although UTF-8 is compatible with ASCII for the first 128 characters
[00:40:00] *** Joins: mmfood (~mmfood@45.91.21.31)
[00:40:02] <deniska> utf-16, utf-32, utf-7 :)
[00:41:01] <deniska> utf-7 is sometimes used as a vector for XSS-style attacks
[00:41:03] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[00:41:16] <pyzozord> oh ok, "unicode" is listed as ascii extension on this page https://en.wikipedia.org/wiki/ASCII (the right hand side)
[00:41:35] *** Joins: frm (~frm@user/frm)
[00:41:36] <deniska> pyzozord: "unicode" is a standard which gives each 'symbol' a number
[00:41:49] <deniska> pyzozord: how you pack these numbers into bytes depends on the encoding
[00:41:57] <deniska> utf-8 is one of them, but there are others
[00:41:58] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[00:42:14] <GeDaMo> I don't think I would call Unicode an extension of ASCII
[00:42:52] <deniska> unicode reused ascii for the first 128 symbols
[00:42:59] <deniska> so in that sense it's… kinda like ascii
[00:43:06] <deniska> except that it's not an encoding
[00:44:22] <pyzozord> deniska: what is "an encoding"?
[00:45:09] <deniska> pyzozord: by "encoding" I mean a way to map from an array of unicode codepoints to an array of bytes and vice versa
[00:46:15] <deniska> unicode is more or less (well, more than less) an enumeration of characters
[00:46:19] <lembron> so... I have a salesforce-backup, containing of GB´s of csv´s - want to leave salesforce, while keeping this data somwhat accessible (in a readonly cruddy webfrontend or so) - and i dont rly want to build schemas for hundrets of object-types well never touch, so "throw it in elastic and '100 lines of code' to dump it out in 2-3 views" doesnt sound like all the big thing... ---- but
[00:46:20] <lembron> the actual Q now: someone else surely done that... but google is failing me, and its a little to 'enterprisey' to be a #datahorder topic or am i missing something... (this is not jobs, not "what language should i learn" ;-) been in it for 10years - just a crosschecking with others if im spinning of on stupid ideas or if thats pretty much what ill have todo :/
[00:46:26] <GeDaMo> Unicode maps glyphs to codepoints but doesn't really specify the way those codepoints are stored or transmitted
[00:46:36] <deniska> but there're multiple ways to put something like 5647 in a sequence of bytes
[00:46:37] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[00:48:03] <deniska> lembron: not too crazy of an idea would be to autogenerate an sqlite database out of that
[00:48:09] <pyzozord> so unicode specifies the "what" not the "how". utf8 specifies the "how", ascii specifies both the "what" and the "how"
[00:48:47] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[00:48:56] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:48:58] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:49:01] *** Joins: JanC (~janc@user/janc)
[00:49:05] <deniska> pyzozord: python takes this approach: any kind of encoding maps arrays of unicode codepoints to bytes and vice versa
[00:49:19] <deniska> but for some encodings not all mappings are possible
[00:50:02] <deniska> something like cp1252 maps a limited amount of unicode codepoints to bytes
[00:50:18] <deniska> but everything it maps still is present in unicode
[00:50:27] <deniska> (because if it doesn't, god help you)
[00:51:50] <lembron> deniska sqlite sounds like an idea... will be no concurrent users (if users at all ;D i expect that to be needed like twice in the next 3 months, and then once a year or so :D - so i dont rly want to spend time on it... but there default "100 zipfiles that either contain file-objects (uploads) or csv´s (wich may also be split across multiple archives and need to be remerged) is not rly
[00:51:51] <lembron> something i can hand over to the ladys in controlling :P
[00:53:07] <deniska> if ladys know sql, sqlite is hard to beat :)
[00:54:04] <deniska> even as far as concurrent users go, "lots of readers, few writers" and "lots of writers, few readers" are quite well supported scenarios
[00:54:36] <lembron> still schema is hours again.. while all i rly care is pretty much just Id&parentId on everything + "then have it try to build a mesh out of this"...
[00:54:55] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:55:04] <deniska> sqlite is lax about types, so you can probably autogenerate definitions without much fuss
[00:55:14] <lembron> and no sql for them, http it is, if somethign can do that automagically awesome, if not hacking some 100lines of code to write a few views... ("select case by id, get show related type=email & type=file" kinda things...)
[00:55:42] <deniska> you'll need sane indices to make it fast to query, but that can be arranged after the fact if you know what you want to query
[00:56:10] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 240 seconds)
[00:56:26] <lembron> think im mostly wondering with so many services having "data takeout functions" those days, that there is nothing somewhat generic made to reconsume that...
[00:56:59] <lembron> think, in the style of "metabase" - but with schema-sharing or such...
[00:57:16] <deniska> https://datasette.io/ and there's this thing you can point to an sqlite db and it'll make a semi-fancy UI out of that :)
[00:57:52] <deniska> "data takeout" services are mostly there to please the regulators, they don't care too much how easy data are to use
[01:00:51] <lembron> datasette is certainly looking interesing, same "type" as metabase by the looks, but a bit rawer ((what may be just fine given i dont want to spend 40h linking relations))
[01:00:58] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[01:03:57] <lembron> my the looks im already "lucky" that its clean csv fields with headers - found like 3 different projects to "make facebook export readable" lol
[01:04:02] <lembron> *by
[01:04:38] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:05:11] <deniska> when it comes to common tabular data formats, in the absence of sqlite or a json array, the next best choice is typically xlsx
[01:05:43] <deniska> csv is not a format, more of a vague notion of a format
[01:06:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:06:58] <deniska> database tooling is typically good at handling csv, but you must know what kind of csv it is
[01:07:15] <deniska> what do they use for a comma, how do they do escaping and such :)
[01:07:55] <deniska> excel will use a semicolon instead of comma in locales which use comma for a decimal separator
[01:09:25] *** Quits: frm (~frm@user/frm) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:09:50] <lembron> well FB messed up even the json array it seems :D https://github.com/numbersprotocol/fb-json2table#facebook-will-not-notify-you
[01:10:17] <deniska> I've never seen a json so massacred which came out of Oracle SQL Developer :D
[01:11:08] *** Quits: gggkmp (~gggkmp@114.245.111.21) (Ping timeout: 252 seconds)
[01:11:20] *** Joins: gggkmp (~gggkmp@60.10.23.164)
[01:11:37] <lembron> asside ~10gb of text, i also have ~70gb of attachments, whack them into that same sqlite? make another one (extra file?) or store em entirely different? - only used, but never setup sqlite so far, i should do some reading :P
[01:11:41] *** Joins: frm (~frm@user/frm)
[01:11:56] <deniska> well, sqlite is a single file thing
[01:12:14] <deniska> so the question is "how comfortable are you to keep a single 70gb file around"
[01:12:46] <lembron> i´m fine - but if zfs under lxc likes that is another deal :D
[01:13:08] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:13:35] <deniska> typically I prefer to keep blobs in a filesystem, but it's not like this preference has any technical merit
[01:14:31] <deniska> more like that I'd rather have 5gb sqlite file and an 80 gb folder of images than a single 85gb file
[01:15:03] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[01:15:28] <deniska> but I also never have built something for which storing 80gb long term actually matters, and maybe cramming it inside a DB, be it sqlite, or something server based, is not the worst decision ever
[01:16:44] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[01:16:46] <deniska> a single big file is hard to manage, hard to backup or copy
[01:17:14] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[01:18:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[01:18:21] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[01:18:38] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: leaving)
[01:18:42] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[01:18:50] *** Joins: Auron (Auron956@user/auron)
[01:18:58] <lembron> thankfully nothing to backup from there - and the actual zip export is in deepstorage already and will remain there anyhow sure
[01:19:08] *** Joins: physics (~physics@rain.bz)
[01:19:54] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[01:20:24] <lembron> sits somewhere between a neat weekend project to just hammer out quickly - and a neat month to try out something new :D
[01:21:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:21:14] *** Quits: Guest4006 (~nikola@109-92-11-43.dynamic.isp.telekom.rs) (Quit: leaving)
[01:22:34] *** Quits: Y00fie (~yoofie@097-070-135-101.res.spectrum.com) (Ping timeout: 240 seconds)
[01:24:34] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[01:24:36] <lembron> a selfhosted-salesforce-export-interface... that may even be half a product...
[01:24:39] <pyzozord> I've just realized I am getting old.
[01:24:58] <pyzozord> I hate the autotune bullshit kids listen to nowadays :D
[01:26:03] <pyzozord> I though it wold never happen to me, I'd never become the old grumpy grandpa complaining about the youths music taste nowadays
[01:26:24] <pyzozord> but I can't stand that autotune fad
[01:27:24] <pyzozord> I guess highly offtopic, sorry about that
[01:27:50] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[01:28:17] <lembron> well, thanks for springboarding deniska - ill hack around a bit =)
[01:29:59] <deniska> pyzozord: oh, I've been complaining about music these kids listen to since I was ~13
[01:30:10] *** Quits: rey (raymond@c-73-170-195-151.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[01:31:04] <pyzozord> deniska: we've been born to the wrong times! :)
[01:32:17] *** Quits: physics (~physics@rain.bz) (Read error: Connection reset by peer)
[01:34:37] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[01:34:48] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[01:35:57] *** Joins: guest3278 (~user@2001:5b0:2a58:db88:6485:da42:622f:eabf)
[01:36:22] *** Quits: guest3278 (~user@2001:5b0:2a58:db88:6485:da42:622f:eabf) (Remote host closed the connection)
[01:36:44] *** Joins: guest3278 (~user@2001:5b0:2a58:db88:6485:da42:622f:eabf)
[01:37:42] *** Quits: gggkmp (~gggkmp@60.10.23.164) (Ping timeout: 268 seconds)
[01:38:35] <pyzozord> Although there is good music being produced now too
[01:38:59] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[01:40:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:44:10] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:78ec:ad0c:c775:2f28) (Ping timeout: 240 seconds)
[01:44:41] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:78ec:ad0c:c775:2f28)
[01:45:43] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 268 seconds)
[01:46:05] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[01:46:57] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[01:47:30] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:47:33] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:49:51] *** Joins: jinsun (~quassel@user/jinsun)
[01:50:58] *** Joins: jamea (~jamea77@177.239.80.44)
[01:51:22] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 240 seconds)
[01:51:30] *** Quits: caterfxo (~caterfxo@216.sub-174-253-193.myvzw.com) (Quit: Quit)
[01:53:18] *** Joins: hposca (~hposca@node-1w7jr9phoke2ud7ur43vu6vbd.ipv6.telus.net)
[01:56:40] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:58:24] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[01:59:22] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[02:01:14] *** entuland_ is now known as entuland
[02:03:22] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[02:06:10] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) ()
[02:07:49] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[02:08:40] *** Joins: brickfat (~brickfat@user/brickfat)
[02:10:13] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[02:12:48] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[02:12:57] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[02:15:19] *** Quits: guest3278 (~user@2001:5b0:2a58:db88:6485:da42:622f:eabf) (Read error: Connection reset by peer)
[02:16:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:22:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:23:29] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:02] *** Quits: federico_it (~textual@151.51.82.235) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:20] *** Quits: fboers[m] (~Android@dynamic-046-114-156-096.46.114.pool.telefonica.de) (Quit: -a- Connection Timed Out)
[02:26:35] *** Joins: fboers[m] (~Android@dynamic-046-114-156-096.46.114.pool.telefonica.de)
[02:35:39] *** Joins: guest3278 (~user@2001:5b0:2a58:fd18:6485:da42:622f:eabf)
[02:35:57] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:37:14] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:38:33] *** Joins: gggpkm (~gggpkm@221.219.77.87)
[02:39:07] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[02:40:20] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[02:40:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[02:40:53] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[02:41:43] <guest3278> hello. I'm making a coin flip program in c++. (https://bpa.st/AXSA) Can someone please tell me why my it doesn't remember the total number of heads/tails flips? The last function displayCount always shows zero for everything.
[02:42:11] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[02:42:36] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Read error: Connection reset by peer)
[02:42:53] *** Quits: LjL (~ljl@user/ljl) (Read error: Connection reset by peer)
[02:43:36] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[02:43:48] *** Joins: LjL (~ljl@user/ljl)
[02:44:19] <Izem> use pass by reference in count()
[02:44:23] *** Quits: Akuli (~Akuli@82-203-163-2.bb.dnainternet.fi) (Quit: Leaving)
[02:44:49] <Izem> integers are pass by value in C++ iirc, so the update inside count does nothing
[02:45:22] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[02:46:31] <guest3278> thank you. im still learning functions.
[02:46:43] <Izem> no worries
[02:47:35] <Izem> alternatively, you could use the ++ operator on the arguments to count()
[02:47:56] <Izem> prefix style
[02:49:01] <Arahael> Izem: everything is pass by value unless the function specifies otherwise using a reference
[02:49:49] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[02:51:02] <Izem> not arrays
[02:51:11] <Izem> etc
[02:53:57] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:54:02] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[02:54:53] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:56:10] <davve_> i thought they were recreated each stack frame
[02:56:20] <Arahael> Izem: arrays cant be passed at all in C and C++ inherits that.  arrays decay into a pointer to their first element.
[02:56:21] <davve_> if you are using something like int myArray[4]
[02:57:01] *** Quits: Fleck (~fleck@user/fleck) (Remote host closed the connection)
[02:57:02] <Izem> classes and arrays seem like they are not passed by value
[02:57:20] *** Joins: jinsun_ (~quassel@user/jinsun)
[02:57:46] <Arahael> Izem: classes are passed by value as well.
[02:57:52] <Izem> I see
[02:58:10] <Arahael> Izem: pointers are also passed by value as well :)
[02:58:13] <Izem> class / structs in C++ are so silly
[02:58:34] <Izem> but I guess that is chalked up to legacy? lol
[02:58:36] *** Joins: Fleck (~fleck@user/fleck)
[02:58:56] <Arahael> not entirely
[02:59:16] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[02:59:22] <guest3278> lzem: thank you i fixed it
[02:59:31] <Arahael> other languages pass structs by value too.
[02:59:45] <Arahael> (and c++ classes are structs)
[03:00:21] <guest3278> https://bpa.st/LFNA
[03:00:50] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:01:19] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[03:01:19] <Arahael> Izem: in guest's case he is now explicitly specifying that a lot of those ints are passed by reference
[03:01:20] <Izem> not that aspect, but that class and struct are keywords that do the same thing
[03:01:58] <Izem> guest3278 so it works?
[03:02:09] <Arahael> ah, thats a bit unusual yeah.
[03:02:27] <guest3278> yes but i still need to add a few more things.
[03:04:38] <Izem> nice, that looks about right from my statistics class
[03:06:08] <Izem> time for me to install linux
[03:06:29] <Izem> my productivity on windows has been nothing
[03:06:40] *** Quits: D-04 (~D-04@185.130.184.207) (Read error: Connection reset by peer)
[03:07:16] *** Quits: iauc (~iauc@ti0061a400-1478.bb.online.no) (Quit: Client closed)
[03:07:51] *** Joins: D-04 (~D-04@185.130.184.204)
[03:09:47] <guest3278> i installed windows natively because my vm stopped working and i didnt have the time to fix it. occasionally it wouldn't let go of my mouse and keyboard. it also sometimes locked up linux. i was doing GPU passthrough.
[03:10:24] *** Joins: soulisson (~soulisson@user/soulisson)
[03:10:27] <soulisson> Hello
[03:11:05] <soulisson> Sorry about this question. My english file is not good. What does it mean to pack a file? Does it mean to put a file in another file?
[03:11:21] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[03:11:29] <soulisson> s/My english file/My english/
[03:12:36] <Izem> that's unclear, that could mean anything
[03:13:02] <guest3278> compress a file?
[03:14:23] <Izem> how can you put a file in another file anyways?
[03:16:28] <soulisson> ok, if it helps I read it in the context of malware and the article was talking about packers programs capable of compressing or encrypting a file (or both) and produce a new executable that contains the compressed/encrypted file. So I was wondering what's the action of packing. I looked in the dictionary, it wasn't of great help.
[03:17:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:17:43] <Arahael> soulisson: In the general context I think "pack" means to put into a small space, so in that context, it probably involves compression, and generally trying to put the file into a smaller size.
[03:17:44] *** Quits: Inari (~Pinkishu@p508ef0b5.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:18:35] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[03:18:38] <Arahael> soulisson: In other contexts, such as C structs, it could refer to removing the gaps between the struct members - so I think there is that general sense that "pack" means to put something into a smaller space.
[03:19:32] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:19:40] <Arahael> soulisson: That said, I can imagine some people would also use the word to just mean "to pack away", eg, like you pack away your clothes into a suitcase, you also pack your files away into an archive file, such as a .zip.
[03:20:25] <Arahael> (In that last case, using the word "archive" instead of "pack" would be clearer and less ambigious)
[03:21:38] <soulisson> Arahael, ok, thanks a lot. Sorry for the question. I'm not sure of the meaning in the context of security. I have seen different definitions :(
[03:22:40] <Arahael> soulisson: In English, we love to overload terms and use them in so many different ways depending on context - so context is super important.
[03:23:03] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[03:23:45] <soulisson> Arahael, yes ;) The fact that there is not a single definition even for the same context doesn't help either :)
[03:24:15] <Arahael> Indeed. :(
[03:24:30] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:26:20] <Joanna> There are Also packed arrays
[03:27:22] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[03:28:32] <Thedarkb-Desktop> Chunks in my new Roguelike project, how big should they be?
[03:28:40] <Arahael> Joanna: in some languages, yeah.  i rarely hear about them though.
[03:28:49] <Thedarkb-Desktop> My last was 10x15 which was irritatingly small, I'm thinking of ramping right up to 64x64.
[03:28:50] <pulse> at least 1 chunk big ^_^
[03:29:01] <Arahael> Thedarkb-Desktop: played nethack?
[03:29:06] <Thedarkb-Desktop> Yeah
[03:29:16] <Thedarkb-Desktop> It's a bit deep for me, I quite like playing the original Rogue.
[03:29:35] *** Quits: Axiomatik (~Axiomatik@83-91-97-60-cable.dk.customer.tdc.net) (Quit: Leaving)
[03:29:50] *** Joins: Axiomatik (~Axiomatik@83-91-97-60-cable.dk.customer.tdc.net)
[03:30:53] <Arahael> Thedarkb-Desktop: the modern version is very different to the earlier ones, you can still play the very old one - 1.3d i think on hardfought's server.
[03:31:09] *** Joins: fboers[25 (~Android@p200300edcf2569002cd8504760c06796.dip0.t-ipconnect.de)
[03:31:29] <Thedarkb-Desktop> I'm going for Zelda style combat, so it doesn't really qualify as a Roguelike by the Berlin definition.
[03:31:39] <Arahael> never played the original rogue though although i may have had it on my gameboy but i didnt know what the goal was at the time.
[03:31:52] <Thedarkb-Desktop> There was a Game Boy port of Rogue????
[03:31:55] <Arahael> Thedarkb-Desktop: ah - whats zelda-style?
[03:32:06] <Arahael> Thedarkb-Desktop: yeah, or at least a clone.
[03:32:25] <Thedarkb-Desktop> Neat, I want to go for a similar vibe to the 1986 Legend of Zelda.
[03:32:37] <Arahael> do you have a link?
[03:32:51] <Thedarkb-Desktop> https://en.wikipedia.org/wiki/The_Legend_of_Zelda_(video_game)
[03:32:53] <Arahael> i only know the nintendo 64 version.
[03:33:07] <Thedarkb-Desktop> The original lets you take the game in whatever order you want.
[03:33:14] <Thedarkb-Desktop> People have done no sword speedruns!
[03:33:34] <Thedarkb-Desktop> It's less story heavy and more free form.
[03:33:56] <Arahael> oh! now i remember playing it on the NES!
[03:34:17] <Thedarkb-Desktop> It's a great game.
[03:34:20] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[03:34:30] <Thedarkb-Desktop> Last dungeon kind of overdoes it on complexity.
[03:34:47] *** Quits: fboers[m] (~Android@dynamic-046-114-156-096.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[03:35:00] <Thedarkb-Desktop> And when you finish the game, it resets your save file and makes you play through it again with the same overworld but different dungeons, harder enemies, and different item placements.
[03:35:10] <Arahael> nice.
[03:35:11] <Thedarkb-Desktop> Truly Nintendo Hard™
[03:35:27] <Arahael> yep
[03:35:42] <Arahael> i dislike modern games for that reason - too easy and boring.
[03:35:52] <Arahael> it's why i still play nethack.
[03:36:14] <Thedarkb-Desktop> Legend of Zelda was the first NES game to allow you to save your progress.
[03:37:08] <Arahael> nice!  i was too young at the time to appreciate that.
[03:37:13] <AlexDelarge> someone should start a...oh look.. ##gaming
[03:37:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:38:28] <Arahael> AlexDelarge: nostalgic games and writing them is hardly offtopic in my view :) especially when it's quiet.
[03:42:16] <Arahael> Thedarkb-Desktop: maybe you should make it a similar size to zelda then? :)
[03:42:47] <Thedarkb-Desktop> I did on my last attempt two or three years ago, but it was a bit fiddly.
[03:42:52] <Arahael> Thedarkb-Desktop: i guess you walk around like in rogue, then when you bump into an enemy, you start a fight scene?
[03:43:09] <Thedarkb-Desktop> No, real time combat with a wide variety of weapons.
[03:43:17] <Thedarkb-Desktop> But always with a sword, unless you never pick one up.
[03:43:35] <Arahael> ah, interesting.
[03:43:42] <KillerWasp> i have a cool bitmap of cp437
[03:43:45] <Arahael> i've always preferred turnbased.
[03:44:01] <Thedarkb-Desktop> I was working with 10x15 chunks and I even made an in engine level editor and everything, but my lack of gamedev experience led to me making a lot of mistakes and I gave up, so I'm starting from scratch.
[03:44:06] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:44:29] *** Quits: Nact (~l@host-85-27-121-155.dynamic.voo.be) (Quit: Konversation terminated!)
[03:45:01] <Arahael> Thedarkb-Desktop: nice!
[03:45:30] <KillerWasp> cool! a #RetroGames channel! it's amazing for to join!
[03:46:23] <KillerWasp> i also can talk of programming here
[03:51:23] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[03:52:15] <guest3278> My coin toss program in c++ is almost done but I'm not sure where to begin making these functions: getSideUp() and displayFace(). I made a placeholder for them. The description is a little confusing.  https://bpa.st/HJ5A
[03:53:57] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[03:54:11] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[03:54:27] <Arahael> guest3278: perhaps write a test to demonstrate how they should be used - then make those tests pass by implementing them?
[03:54:28] <guest3278> getSideUp() - is called from displayFace() and will return the face of the coin to be displayed.    displayFace() - is called from main() and will output the coin face value of the toss.
[03:57:58] *** Joins: Guest59 (~Guest59@S01069050ca4e3573.cg.shawcable.net)
[03:59:09] *** Joins: rcg (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[03:59:42] *** rcg is now known as Izem
[04:00:07] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[04:00:40] *** Joins: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu)
[04:02:44] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[04:05:31] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[04:06:35] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[04:08:01] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 265 seconds)
[04:08:34] *** Quits: mmfood (~mmfood@45.91.21.31) (Ping timeout: 240 seconds)
[04:09:32] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[04:09:56] *** Joins: Jigsy (~Jigsy@user/jigsy)
[04:11:34] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:11:47] *** Joins: gggpkm_ (~gggpkm@221.219.70.176)
[04:11:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[04:12:20] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[04:12:52] *** Quits: alextee (~alextee@zrythm/alex) (Read error: Connection reset by peer)
[04:13:11] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:13:50] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[04:14:07] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:14:11] *** Quits: gggpkm (~gggpkm@221.219.77.87) (Ping timeout: 258 seconds)
[04:15:49] *** Quits: soulisson (~soulisson@user/soulisson) (Read error: Connection reset by peer)
[04:15:50] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[04:16:21] *** Joins: soulisson (~soulisson@41.141.7.76)
[04:16:25] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:17:19] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[04:17:38] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:17:38] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Client Quit)
[04:20:20] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[04:21:32] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[04:23:12] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[04:24:27] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[04:27:56] *** Joins: alextee (~alextee@zrythm/alex)
[04:29:37] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[04:29:41] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Ping timeout: 252 seconds)
[04:31:42] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[04:33:05] *** Quits: soulisson (~soulisson@41.141.7.76) (Quit: Leaving)
[04:37:22] *** Quits: fboers[25 (~Android@p200300edcf2569002cd8504760c06796.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:39:11] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[04:39:15] *** Quits: guest3278 (~user@2001:5b0:2a58:fd18:6485:da42:622f:eabf) (Quit: quit)
[04:39:22] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 240 seconds)
[04:40:04] *** Quits: walton (walton@gateway/vpn/airvpn/walton) (Ping timeout: 246 seconds)
[04:41:25] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[04:41:27] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:42:39] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.1)
[04:42:52] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 246 seconds)
[04:45:51] <computerquip> I really hate server software that has a minimum of like 8GB RAM to serve some files.
[04:46:06] <computerquip> Why do you do this to me Java developers?
[04:47:38] <Guest59> if your code is 8GB youre doing something wrong
[04:48:11] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[04:50:04] *** Quits: misnor (~misnor@156.57.153.38) (Ping timeout: 265 seconds)
[04:50:33] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 265 seconds)
[04:50:46] *** Joins: trufas (~trufas@177.240.218.218)
[04:51:12] <computerquip> Gonna have to take a second mortgage to afford a server for this thing.
[04:52:11] *** Quits: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[04:52:14] *** Quits: hposca (~hposca@node-1w7jr9phoke2ud7ur43vu6vbd.ipv6.telus.net) (Ping timeout: 252 seconds)
[04:53:12] *** Joins: walton (walton@gateway/vpn/airvpn/walton)
[04:53:59] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[04:55:35] *** Quits: JuggleTux (~tux@mob-194-230-146-192.cgn.sunrise.net) (Ping timeout: 258 seconds)
[04:58:56] *** Quits: walton (walton@gateway/vpn/airvpn/walton) (Quit: No Ping reply in 180 seconds.)
[05:00:39] *** Joins: walton (walton@gateway/vpn/airvpn/walton)
[05:02:47] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[05:03:10] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 246 seconds)
[05:03:54] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[05:04:42] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[05:04:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:04:53] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[05:06:45] *** Joins: alextee (~alextee@zrythm/alex)
[05:07:12] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[05:07:43] *** Joins: ayenet4 (~0x100@32.211.211.39)
[05:09:06] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[05:09:54] <vdamewood> Hi, people etc.
[05:10:31] *** Quits: gggpkm_ (~gggpkm@221.219.70.176) (Ping timeout: 246 seconds)
[05:11:13] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 246 seconds)
[05:12:17] *** Quits: walton (walton@gateway/vpn/airvpn/walton) (Quit: No Ping reply in 180 seconds.)
[05:13:31] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:13:33] <PlanckWalk> The code is not 8GB.  The heap space may approach 8GB
[05:13:43] *** Joins: walton (walton@gateway/vpn/airvpn/walton)
[05:14:26] <PlanckWalk> It's still really bloated, but not quite as bloated as "code is 8GB" :-)
[05:14:34] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 240 seconds)
[05:15:22] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[05:16:31] *** Joins: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu)
[05:18:02] *** Quits: pizdets (~pizdets@183.182.111.24) (Ping timeout: 272 seconds)
[05:18:27] <oldlaptop> Maybe they just really like unrolling loops.
[05:18:53] *** Joins: pizdets (~pizdets@183.182.115.100)
[05:26:42] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Quit: Leaving)
[05:27:22] *** Quits: meks (~nekohacke@user/meks) (Ping timeout: 272 seconds)
[05:27:25] *** Joins: alextee (~alextee@zrythm/alex)
[05:27:41] *** Joins: meks (~nekohacke@95.165.15.201)
[05:31:46] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 240 seconds)
[05:32:34] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[05:33:17] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[05:38:07] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[05:39:00] *** vinleod is now known as vdamewood
[05:39:09] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[05:39:32] <vdamewood> Am I me now?
[05:40:07] <pulse> who are we anyway, in this vast multiverse
[05:40:18] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[05:41:40] <vdamewood> pulse: Dust in the wind.
[05:41:48] <vdamewood> pulse: Either that, or pikachus.
[05:42:06] <pulse> does pikachu say anything if you squeeze him
[05:42:18] <vdamewood> "pika"
[05:42:32] <pulse> nice
[05:44:18] *** Joins: alextee (~alextee@zrythm/alex)
[05:45:32] <vdamewood> Pikaču!
[05:45:54] <pulse> nice use of the šumnik
[05:46:46] *** Joins: pete443_ (~pete@user/pete443)
[05:47:22] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 240 seconds)
[05:49:31] <vdamewood> šumnik? Is that what ˇ is called in Slovene?
[05:51:30] <pulse> no, that's called strešica
[05:51:40] <pulse> literally `little roof`
[05:51:55] <pulse> šumnik is the character + strešica
[05:52:37] <vdamewood> So ŝumnik is ĉ
[05:52:43] <vdamewood> err oops.
[05:53:00] <vdamewood> So šumnick is č
[05:53:07] <pulse> o_o
[05:53:11] <pulse> yes the 2nd one
[05:53:27] <vdamewood> FWIW ŝ and ĉ are Esperanto.
[05:53:41] <pulse> i see
[05:54:01] <pulse> šumniki in slovene are čšž
[05:54:36] <vdamewood> Ah, okay.
[05:58:46] *** Joins: pandakekok9 (~job@user/job)
[06:01:07] *** Joins: JavaBean (~JavaBean@user/javabean)
[06:05:23] *** Quits: xff0x (~xff0x@2001:1a81:539d:3600:dd23:6975:e62a:a95) (Ping timeout: 252 seconds)
[06:06:08] *** Quits: allegorical (~guest@2607:fea8:33e0:65c:3df9:8cda:cf15:1c7) (Quit: Leaving)
[06:07:08] *** Joins: xff0x (~xff0x@2001:1a81:53dc:b800:8c77:48f3:1e3:3060)
[06:07:35] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[06:07:48] *** Joins: Raguile (~Raguile@user/raguile)
[06:07:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:09:37] <neshpion> english really should have adopted more diacritical marks to make the latin alphabet actually fit
[06:11:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:12:34] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:12:44] *** Quits: Izem (~rcg@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[06:13:02] *** Joins: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com)
[06:14:37] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:15:53] *** Joins: tlaxkit (~hexchat@170.253.37.3)
[06:18:58] <Arahael> computerquip: Unused RAM is wasted RAM, though.
[06:20:03] <computerquip> My system has 1.5GB, I tried running on there and the kernel literally had to kill it because it made my entire system unresponse.
[06:20:06] <computerquip> unresponsive*
[06:20:20] *** Quits: death916 (~death916@user/death916) (Ping timeout: 252 seconds)
[06:20:41] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[06:20:55] *** Joins: alextee (~alextee@zrythm/alex)
[06:21:06] *** Quits: tlaxkit (~hexchat@170.253.37.3) (Quit: Leaving)
[06:21:14] *** Joins: a2x (a2x@gateway/vpn/protonvpn/a2x)
[06:21:25] <computerquip> I tried tuning it down to about 1024MB maximum for heap and it literally just doesn't function. It times out before it can figure out what's going on.
[06:21:37] <computerquip> Timeout is 2 minutes.
[06:21:48] <Arahael> computerquip: Java has the additional problem is that, being an inherently entirely GC'ed language, it plays very very badly with swap.
[06:23:29] <Twipply> Unused CPU is wasted CPU
[06:23:34] <Twipply> Fire up a few spinlocks thanks
[06:24:16] *** Joins: rey (~reymond@23.81.176.228)
[06:24:21] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[06:24:25] <Arahael> Twipply: Not the same thing, at all...
[06:24:47] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) ()
[06:24:54] <Twipply> Not when you add some more conditions it won't be
[06:24:56] <Twipply> but, as it stands
[06:25:06] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[06:25:15] *** Joins: audiocat (~audio@2603-8081-1800-6a65-0864-cd51-1ae6-323f.res6.spectrum.com)
[06:25:18] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[06:25:44] <Arahael> Twipply: What possible reason would you have for wanting unused RAM?
[06:26:10] <Arahael> (Obviously: You want the CPU as low as you can, but that's not the case for RAM)
[06:27:14] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[06:27:42] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[06:27:46] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 240 seconds)
[06:28:35] *** Quits: rey (~reymond@23.81.176.228) (Ping timeout: 252 seconds)
[06:30:15] <Arahael> Just realised I should spell it out why unsused CPU is "good":  Less thermal output, less power usage, longer battery, longer CPU life.
[06:30:40] <Arahael> (Much of those are related to simply using less energy and lower thermal output)
[06:33:45] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[06:34:02] *** Joins: LuKaRo_ (~LuKaRo@p200300dfa714f109fff23dec5b74458c.dip0.t-ipconnect.de)
[06:34:15] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[06:34:19] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 268 seconds)
[06:34:40] *** Quits: LuKaRo (~LuKaRo@p57b15697.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:36:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 252 seconds)
[06:36:52] *** Quits: nazuwi (~nazuwi@89.44.10.140) (Quit: WeeChat 2.3)
[06:37:25] <vdamewood> Hmm... I wonder how hard it would be to write my own signals/sots mechanism.
[06:38:22] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 246 seconds)
[06:38:52] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[06:40:26] <netman69> like QTs callback stuff? shouldn't be terribly hard
[06:40:44] <netman69> it's just keeping pointers to functions and calling them
[06:41:03] *** Joins: misnor (~misnor@156.57.153.38)
[06:41:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[06:42:59] *** Joins: gggpkm (~gggpkm@221.219.70.176)
[06:44:40] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[06:45:26] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[06:45:26] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[06:45:38] *** Joins: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net)
[06:47:49] *** Quits: aquijoule_ (~richbridg@213-225-13-36.nat.highway.a1.net) (Ping timeout: 246 seconds)
[06:52:35] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:54:18] *** Joins: anahat (~anahat@116.74.190.238)
[06:54:25] *** Quits: jamea (~jamea77@177.239.80.44) (Ping timeout: 258 seconds)
[06:57:25] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[06:57:40] <Izem> Was mail around before the email protocol?
[06:58:48] <neshpion> no, regular mail is a physical implementation of electronic mail
[06:59:04] <Izem> mail as in the unix program
[07:00:09] <blahboybaz> heh.. how cool! I guess something like overloading is possible in node.
[07:01:35] <neshpion> Izem: wikipedia article on "mail (Unix)" states its release as in 1971 and the article on "Email" states its invention in 1971
[07:02:18] <Izem> I see
[07:02:35] *** Quits: Leone (~Leo@45.72.238.153) (Read error: Connection reset by peer)
[07:02:53] <Izem> would you say the modern web is still built on smtp and http?
[07:03:20] <neshpion> i would
[07:03:29] *** Joins: alextee (~alextee@zrythm/alex)
[07:03:40] <neshpion> oh hold on the wikipedia article says SMTP was introduced in 1981
[07:03:50] <neshpion> so email itself was there for ten years but that protocol came later
[07:04:46] <Izem> oh, hmm
[07:05:24] *** Quits: anahat (~anahat@116.74.190.238) (Quit: Leaving)
[07:06:19] <vdamewood> I'm kind of sat FTP sucked so badly that no one uses it anymore.
[07:06:22] <vdamewood> sad*
[07:07:10] <Izem> was it just replaced by http?
[07:07:18] <Izem> or has nothing replaced it?
[07:07:28] <neshpion> ftp and http are for different purposes
[07:07:33] <vdamewood> It has been replaced by http and sftp.
[07:07:40] <AlexDelarge> sites still use ftp
[07:07:41] *** Joins: decker (~d3x0r@ip98-160-176-209.lv.lv.cox.net)
[07:08:14] <vdamewood> Well, I guess https has mostly replaced http at the same time, so by https and sftp.
[07:11:11] <vdamewood> AlexDelarge: The protocol maybe used here or there, but it's effectively dead.
[07:11:22] <vdamewood> s/maybe/may be/
[07:11:41] <AlexDelarge> sure
[07:12:12] <neshpion> irc is dead
[07:12:20] <AlexDelarge> yep
[07:12:39] <AlexDelarge> so is gopher and archie
[07:12:54] <AlexDelarge> pushing up the daisies
[07:13:09] <vdamewood> Burned by Berners-Lee.
[07:13:10] *** Quits: decker (~d3x0r@ip98-160-176-209.lv.lv.cox.net) (Read error: Connection reset by peer)
[07:13:13] *** Joins: gggkmp_ (~gggkmp@221.219.68.57)
[07:13:21] *** Joins: decker (~d3x0r@ip98-160-176-209.lv.lv.cox.net)
[07:13:22] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 240 seconds)
[07:13:35] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Ping timeout: 252 seconds)
[07:13:42] <Guest59> imo application protocols are mostly obsolete nowadays cause you should easily be able to inject any binary into tcp or udp nowadays with high level code
[07:14:14] <vdamewood> That would just be some other new application-level protocol.
[07:15:07] <Guest59> vdamewood I mean wasn't the point of it because applications were once hard to write but now its easy to write applications?
[07:15:15] <Guest59> with all high level languages supporting raw sockets now
[07:15:20] <Guest59> why even have http or w/e
[07:15:34] *** Joins: wei2912 (~wei2912@112.199.250.21)
[07:15:46] *** Quits: EdFletcher (~EdFletche@user/edfletcher) (Ping timeout: 240 seconds)
[07:15:51] <Guest59> 'application protocol' sounds redundant now if its used from a high level application programming language
[07:15:56] <vdamewood> When you say hard to write applications, you mean like with C and a compiler?
[07:16:04] <Guest59> ya
[07:16:41] <vdamewood> The two uses of the word 'application' are unrelated.
[07:17:22] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 240 seconds)
[07:17:29] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 268 seconds)
[07:18:31] *** gggkmp_ is now known as gggkmp
[07:18:34] *** Quits: misnor (~misnor@156.57.153.38) (Remote host closed the connection)
[07:19:37] <Arahael> It's almost as if HTTP is not a protocol in Guest59's mind, as it's on top of TCP.
[07:19:56] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[07:20:02] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[07:20:06] <vdamewood> Now I'm trying to figure out why the upper layer is called the application layer.
[07:20:23] <Arahael> AlexDelarge: I've been exploring gopher (and gemini) lately.  It's not /quite/ dead. ;)
[07:20:41] * vdamewood shoots gopher.
[07:21:06] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:21:17] <AlexDelarge> Arahael: oh I know.  I was being sarcastic.
[07:21:17] <Guest59> Arahael yea because if its just a library I could write myself not part of the OS then is it really a 'protocol' ?
[07:21:20] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:21:53] <vdamewood> AlexDelarge: Though, you do have a point, FTP's status as alive or dead is the same as IRC's whatever it is.
[07:22:14] <Guest59> is just serializing data anyone can do that
[07:22:15] <vdamewood> Now... do I want to classify them as dead, or alive, in my head.
[07:22:41] <Arahael> AlexDelarge: Be wary that sarcasm doesn't translate well over IRC.  It's nearly impossible to tell.
[07:22:59] <vdamewood> There's also Poe's law.
[07:23:06] <AlexDelarge> Arahael: I've been using irc since the early 90s.  I am aware.  Thank you.
[07:23:46] <vdamewood> AlexDelarge: Was that sarcasm?
[07:24:04] <vdamewood> ... Is mayonnaise an instrument?
[07:24:16] <neshpion> is women a fetish?
[07:24:23] *** Joins: alextee (~alextee@zrythm/alex)
[07:24:56] <Arahael> neshpion: Can we please avoid allusions to sexism here?
[07:25:16] <neshpion> can we please take a joke?
[07:25:21] <Arahael> neshpion: It's not a joke.
[07:25:30] <neshpion> god you're annoying
[07:25:48] <vdamewood> Time to test the bot?
[07:26:20] <Arahael> !q neshpion
[07:26:21] *** Quits: audiocat (~audio@2603-8081-1800-6a65-0864-cd51-1ae6-323f.res6.spectrum.com) (Ping timeout: 252 seconds)
[07:26:21] *** bayaz sets mode: +q $a:neshpion
[07:26:33] *** Joins: _d3x0r (~d3x0r@ip98-160-176-209.lv.lv.cox.net)
[07:26:48] *** Quits: decker (~d3x0r@ip98-160-176-209.lv.lv.cox.net) (Read error: Connection reset by peer)
[07:26:58] * vdamewood pats bayaz on the head
[07:27:01] <vdamewood> good bot.
[07:27:25] <netman69> are mothers girls?
[07:27:48] <vdamewood> netman69: Let's just drop it.
[07:28:03] <netman69> lel if this channel doesn't take jokes bye guys
[07:28:05] *** Parts: netman69 (~netman@user/netman) (Leaving)
[07:29:07] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 246 seconds)
[07:29:12] *** Joins: src (~src@user/src)
[07:30:34] <Arahael> Good.  Lets keep this a safe place for everyone.
[07:30:35] *** Joins: jamea (~jamea77@177.239.84.103)
[07:30:45] <Izem> :)
[07:32:46] *** Joins: gggpkm_ (~gggpkm@221.219.68.57)
[07:34:27] * src ducks behind his desk, barely avoided the flying bullets
[07:34:40] <src> phew, that was a close one
[07:34:57] * AlexDelarge goes back to watching Starlost
[07:35:04] *** Quits: gggpkm (~gggpkm@221.219.70.176) (Ping timeout: 246 seconds)
[07:35:24] *** Quits: _d3x0r (~d3x0r@ip98-160-176-209.lv.lv.cox.net) (Read error: Connection reset by peer)
[07:35:26] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:35:33] *** Joins: _d3x0r_ (~d3x0r@ip98-160-176-209.lv.lv.cox.net)
[07:35:59] *** Joins: snake (~snake@user/snake)
[07:37:19] *** Joins: paulo_ (~paul0@user/paulo/x-9032687)
[07:38:33] *** bayaz sets mode: -q $a:neshpion
[07:38:46] *** Quits: src (~src@user/src) (Quit: leaving)
[07:39:05] *** Joins: src (~src@user/src)
[07:41:43] *** Joins: alextee (~alextee@zrythm/alex)
[07:43:50] *** Quits: _d3x0r_ (~d3x0r@ip98-160-176-209.lv.lv.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[07:44:02] *** Joins: Crassus (~Crassus@user/crassus)
[07:47:11] <vdamewood> Food time.
[07:47:49] <paulo_> vdamewood: what time at your end?
[07:47:57] <vdamewood> 20:17
[07:48:11] <paulo_> 11:18 here
[07:48:23] <vdamewood> AM or BM?
[07:49:59] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[07:50:04] <paulo_> military time
[07:50:05] <paulo_> 1118
[07:50:40] *** Quits: jamea (~jamea77@177.239.84.103) (Ping timeout: 272 seconds)
[07:53:05] <vdamewood> Hmm... Phillipines?
[07:53:06] *** Joins: nekobyte (~nekobyte@user/nekobit)
[07:54:50] <Arahael> I should probably grab some more food myself.  It's 13:23 here for me. :)
[07:55:07] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:55:21] <rindolf> Arahael: just for the record, I think it was mildly funny, and political correctness and censorship aer scourges: https://github.com/shlomif/shlomif-tech-diary/blob/master/about-censorship.asciidoc .
[07:57:10] <Arahael> rindolf: I'll be taking a fairly harsh stance for this sort of thing whenever I notice it, however.  If you disagree, please be aware that Libera is under Swedish law.  Please give the network policy a read, and also the channel guidelines.
[07:57:18] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[07:57:45] <vdamewood> Oh yeah, I still need to update the channel guidelines with the anti -ism and -phobia rules.
[07:58:23] <rindolf> Arahael: links?
[07:58:49] <Arahael> rindolf: See topic, and click through to the network policy and guidelines as well.
[07:58:49] <vdamewood> rindolf: The channel's site (page, really) is in the /topic. There are links to libera's pages there.
[08:00:13] *** Joins: audiocat (~audio@2603-8081-1800-6a65-662a-417a-58d5-f091.res6.spectrum.com)
[08:01:18] <rindolf> Arahael: vdamewood : thanks
[08:02:02] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[08:03:17] *** Quits: c705 (c705@alpine/contributor/c705) (Quit: Hello! And... good-bye!)
[08:03:44] *** Quits: nekobyte (~nekobyte@user/nekobit) (Ping timeout: 252 seconds)
[08:04:48] <computerquip> Linode keeps up to date kernels you can boot directly too despite not being installed on your system. Neat.
[08:05:06] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:11:04] *** Joins: lunarkitty (uid501895@user/pyra)
[08:11:20] *** Joins: alextee (~alextee@zrythm/alex)
[08:11:35] *** Joins: nekobyte (~nekobyte@user/nekobit)
[08:14:09] <vdamewood> How do android users shop for phones?
[08:15:10] *** Joins: c705 (c705@alpine/contributor/c705)
[08:16:09] *** Quits: kmh (~kmh@p200300df5f2f120075f9d28b18545808.dip0.t-ipconnect.de) (Quit: Leaving)
[08:16:28] *** Quits: nsuperbus (~nsuperbus@05BBE268.dsl.pool.telekom.hu) (Read error: Connection reset by peer)
[08:18:13] *** Joins: nsuperbus (~nsuperbus@05BBE268.dsl.pool.telekom.hu)
[08:19:17] <computerquip> They walk into a shop, some soliciting employ harasses them for what they want for 15 minutes, they're guilted into buying something they don't want, and they leave beaten down and depressed.
[08:20:01] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[08:20:29] <rindolf> vdamewood: using pixie dust and magic? ;)
[08:21:17] <vdamewood> computerquip: That sounds like it's both tongue-in-cheek, and reality.
[08:22:14] <computerquip> It's a general overview of toxic salesmanship in America ;P
[08:22:41] <computerquip> Could apply that to almost everything.
[08:24:02] <rindolf> mobile devices *and* MLP: FiM magic - "can't we have both": https://www.shlomifish.org/humour/Queen-Padme-Tales/
[08:27:05] <vdamewood> computerquip: Got a more serious answer? I've only ever owned Apple phones when it comes to smart phones, and when I want a new phone, I just decide "cheap or flagship", and "how much memory?" So, I'm kind of at a loss when it comes to Android.
[08:27:11] <rindolf> computerquip: i actually love friendly vendors: https://www.shlomifish.org/humour/Terminator/Liberation/indiv-nodes/emma-watson-and-the-children-get-icecream.xhtml
[08:27:33] *** Joins: kmh (~kmh@p200300df5f2f12002c82c639a9d34e57.dip0.t-ipconnect.de)
[08:27:38] *** Joins: JuggleTux (~tux@mob-194-230-146-192.cgn.sunrise.net)
[08:28:00] <rindolf> vdamewood: nokia has nice phones; unbloated
[08:28:37] <computerquip> I just throw a dart at a well reviewed phone. I don't update phones for about 6 to 7 years. Not that they've really changed much honestly.
[08:28:51] <rindolf> ouchPhones hurt
[08:28:54] <computerquip> Others probably by phones through their phone carrier.
[08:29:08] <computerquip> Like through Verizon or T-Mobile.
[08:29:16] <vdamewood> Okay, yeah, people like my mom just go to the phone store, and buy whatever's cheapest or free.
[08:29:29] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[08:31:15] <rindolf> computerquip: anyway, commerce was demonised, but wrongly IMO: https://www.shlomifish.org/philosophy/philosophy/putting-cards-on-the-table-2019-2020/indiv-nodes/amateur-modelled-commerce.xhtml
[08:33:19] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:33:43] * rindolf thinks it is a great day to die, get reborn, kill, love, and live!
[08:36:24] *** Joins: Buggys (~Buggys@static.25.59.9.176.clients.your-server.de)
[08:36:26] *** Joins: dunkeln (~dunkeln@188.70.10.207)
[08:37:57] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:38:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:39:56] *** Quits: Guest59 (~Guest59@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[08:41:01] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[08:41:15] *** Joins: arcatech (~arcatech@user/arcatech)
[08:42:14] <vdamewood> I know it won't as as near as bit as it is with Apple, but do Android users have brand loyalty?
[08:42:23] *** Joins: alextee (~alextee@zrythm/alex)
[08:42:26] <vdamewood> s/as as/be as/
[08:42:36] <vdamewood> also s/bit/big/
[08:42:50] <vdamewood> I blame my cat for wanting pets.
[08:42:59] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[08:43:48] *** Joins: ZenixOwler (~zenix@118.69.128.37)
[08:44:31] <rindolf> vdamewood: i don't have a brand loyalty
[08:45:12] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[08:45:15] <ZenixOwler> little question, the core language that Arduino uses is quite similar to C, but somehow they also seems very OOP as well ( Ex : Serial.println ), so is it actually C ? or it is their very own language
[08:45:19] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[08:45:49] <rindolf> vdamewood: i like android phones wo a lot of OEM gunk
[08:46:10] <ZenixOwler> not very, but it does seem abstracted and quite encapsulated
[08:46:20] <rindolf> ZenixOwler: it is C++-ish crap
[08:46:48] <vdamewood> ZenixOwler: I'm not familiar with it and it's kind of hard to tell by your example.
[08:47:31] <vdamewood> You could have a function pointer as a member of a struct in C, and call it like that. But the function wouldn't get a reference to Serial.
[08:48:05] <ZenixOwler> yea but that function is quite abstracted, where you don't have to specify the type of its parameter, you can just pass anything in and it will just print it
[08:48:20] <rindolf> ZenixOwler: my opinion on arduino: https://twitter.com/search?q=%40shlomif%20arduino&src=typed_query
[08:48:39] <vdamewood> ZenixOwler: I looked it up, it's its own language.
[08:48:48] <kosek> I would like be a gay it is so cool nowadays
[08:49:25] <ZenixOwler> vdamewood: well then, i don't really get the part "C is also used for embedded devices" as some people said anywhere, clearly Arduino doesn't use C but its own language
[08:50:13] <ZenixOwler> rindolf: yea, does seems a bit like C++ but not fully
[08:50:32] <vdamewood> ZenixOwler: Arduino isn't the only embedded system out there.
[08:50:38] <kosek> why python get so popular nowadys ?
[08:50:44] <rindolf> kosek: hi
[08:50:56] <ZenixOwler> kosek: because it is neat, easy-to-use, full of libraries but still quite slow
[08:51:04] <rindolf> kosek: it is simple
[08:51:14] <rindolf> kosek: yet powerful
[08:51:29] <ZenixOwler> kosek: also it is very abstracted and it is obsesses with Object Oriented
[08:51:39] <rindolf> kosek: and pypi is nice
[08:51:40] <ZenixOwler> vdamewood: do you know anything else beside arduino ?
[08:51:55] <vdamewood> ZenixOwler: I don't even know Arduino.
[08:52:06] <ZenixOwler> no i mean some embedded systems platforms
[08:52:07] <kosek> I thought as programmer you like challenges from nature
[08:52:13] <vdamewood> ZenixOwler: For the most part, I'm a phone, tablet, server, and PC dev.
[08:52:18] <ZenixOwler> kosek: challenge from nature ?
[08:52:19] <kosek> b ut ok thanks for explain#
[08:52:28] <rindolf> kosek: do note that i still use and love Perl 5
[08:52:41] <ZenixOwler> vdamewood: well yea ok then
[08:52:55] <ZenixOwler> just trying to see why people are still saying C is used for embedded
[08:53:07] <kosek> ZenixOwler:  you know hardcore syntax etc :d
[08:53:44] <vdamewood> ZenixOwler: Because there are embedded devices out there and C is used for them. The embedded market is full of niche and bespoke systems. It's not like the PC market where it's dominated by onr or two major systems.
[08:53:46] <ZenixOwler> ZenixOwler: oh yea, challenges... go learn Assembly if you wish to, it is fast, and very low-level so you can do much more, but that is when you are asking for a hard life
[08:54:01] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[08:54:02] <vdamewood> s/onr/one/
[08:54:28] <ZenixOwler> oh whoops, i accidentally tagged myself :P
[08:54:33] <ZenixOwler> kosek: it was for ya :P
[08:54:53] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[08:55:19] <kosek> I guessed
[08:55:54] <kosek> or better to say
[08:55:57] <rindolf> kosek: https://www.reddit.com/r/edmproduction/comments/60zh48/do_you_ever_feel_like_your_cheating_by_using/dfasidh/ - "
[08:55:57] <rindolf> I thought using loops was cheating so I programmed my own samples. Then I thought using samples was cheating so I recorded real drums."
[08:56:01] <ZenixOwler> vdamewood: hopefully i will encounter one soon :P
[08:56:08] *** Quits: moha (uid506645@id-506645.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[08:57:29] <kosek> rindolf: are you some kind of music producer
[08:57:34] <rindolf> kosek: no
[08:58:01] <rindolf> kosek: «As an analogy, most software developers will use high-level programming languages, and convenient desktop or mobile operating systems to write what Joel on Software calls "throwaway code", or "in-house code" or even a lot of shrinkwrap (open source/proprietary/etc.) codebases whose performances are not too critical, as well as libraries, APIs, and development tools. Writing everything in
[08:58:02] <rindolf>  assembly, or ASIC if you're really crazy and rich, will be a grand waste of time, and usually development effort will exceed the runtime of code written using higher level languages. "Real programmers use a nice [text] editor and a programming language and get done in less than O(N!)" ( vanguard on ##programming).» -- me
[08:58:55] *** Joins: The_Blode (~Blode@92.40.181.36.threembb.co.uk)
[08:59:16] <rindolf> kosek: it's just an amusing analogy
[08:59:44] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[09:00:00] *** Quits: gggpkm_ (~gggpkm@221.219.68.57) (Remote host closed the connection)
[09:01:22] <kosek> Idk
[09:01:29] <kosek> done in less time
[09:01:42] <kosek> its all about  do so mich in less time you can
[09:02:22] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[09:02:33] <kosek> Somethimes Im wondering or most programmers could even make something without all those Library
[09:02:36] <kosek> and IDE
[09:02:55] <rindolf> kosek: there's a limit to how much one can reinvent the wheel: https://www.youtube.com/watch?v=7s664NsLeFM - "Carl Sagan: If you wish to make an apple pie from scratch, you must first invent the universe."
[09:03:44] <AlexDelarge> that's the episode of COSMOS where he starts to write out a GOOGOLPLEX on paper
[09:03:50] *** Joins: gggpkm (~gggpkm@221.219.70.176)
[09:04:21] <AlexDelarge> and they overdub the number of cuts it would take to get down to a single atom from "eighty" to "ninty"
[09:04:38] *** Quits: gggpkm (~gggpkm@221.219.70.176) (Remote host closed the connection)
[09:04:40] <rindolf> kosek: i can write perl/python/etc. with a basic editor
[09:04:57] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[09:05:06] *** Quits: Apple][ (capo@user/telvana) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[09:05:59] <vdamewood> kosek: Someone made the library and the IDE.
[09:06:35] <kosek> yeah
[09:06:38] <kosek> real programmers
[09:06:40] *** Joins: Telvana (capo@user/telvana)
[09:06:42] <kosek> :D
[09:06:53] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[09:07:07] <kosek> I mean isw u use but you can do same without it
[09:07:09] <kosek> its fine
[09:07:10] <rindolf> and ppl who build their own computers/etc from parts don't mint their own ASIC CPUS/gpu-s/etc
[09:08:00] <vdamewood> Arahael: by tye way, I should tell you about something that just happened to me.
[09:08:44] <vdamewood> Arahael: A friend of mine just sent me a text/picture message asking for help. She couldn' remember her computer's password, and in order to change it she needed her FileVault key.
[09:08:54] <rindolf> kosek: IDE devs often use older versions of the IDE to dev the new one
[09:09:09] <kosek> Don't get me wrong
[09:09:37] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[09:10:05] *** Quits: The_Blode (~Blode@92.40.181.36.threembb.co.uk) (Changing host)
[09:10:05] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:10:40] <kosek> I just know some people especially in web-dev
[09:10:55] <rindolf> kosek: i've written my share of libraries too: https://www.shlomifish.org/open-source/projects/ ; it isn't rocket science
[09:11:17] <kosek> and i know without those available libraries they are kind of lost
[09:11:25] <Arahael> vdamewood: Sucks. :/
[09:11:37] <vdamewood> Arahael: Nope. Doesn't suck.
[09:11:45] <kosek> rindolf: I'm sure
[09:11:51] <kosek> you seems to be a good programmer
[09:11:58] <vdamewood> Arahael: I took a picture of her FV key when we set up her computer. :)
[09:12:17] <Arahael> vdamewood: Oooh.  Nice!  As long as she knows.
[09:12:18] <kosek> I cant judge you since I dont know you
[09:12:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[09:12:25] <kosek> this is just ex. I made with some people
[09:12:28] <kosek> i worked with
[09:12:41] <vdamewood> Arahael: Oh yeah, she was there and saw me take the picture.
[09:12:46] <Arahael> All good. :)
[09:13:05] <kosek> lets talk about today such a nice sunny day
[09:13:05] <vdamewood> Too bad I can't remember my own FV key.
[09:13:11] <Arahael> vdamewood: You can change it.
[09:13:22] <Arahael> vdamewood: (I think using fdesetup?)
[09:13:24] <rindolf> kosek: thanks! i try to be good, and to improve
[09:13:26] <vdamewood> Arahael: Oh, good to know. I'll do it after a backup.
[09:13:31] <Arahael> vdamewood: Oh, absolutely.
[09:13:49] <Arahael> vdamewood: You can also have it backed up to icloud - the key ,that is.
[09:13:59] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[09:14:05] <Arahael> (So you can use your icloud account to recover it)
[09:14:19] <vdamewood> Is that the use icloud to recover you prassword option?
[09:14:36] <Arahael> I believe so.
[09:14:50] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[09:15:05] <rindolf> kosek: https://www.shlomifish.org/open-source/nostalgia/ - my DOS / Turbo C++ code - can be used to scare young children
[09:15:07] <Arahael> It might assume that your FV key is linked to the account, which is linked to the apple account, though.
[09:15:13] *** Joins: a6a45081-2b83 (~aditya@106.214.66.197)
[09:15:38] <vdamewood> Arahael: Nope. I'm paranoid. I'd rather lose my data than put anything on the cloud.
[09:16:04] <vdamewood> Oh wat, *linked* Yeah.
[09:16:07] <vdamewood> wait
[09:16:10] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[09:16:12] <Arahael> vdamewood: Fair enough. I put a lot on the cloud for various reasons - but I try to avoid it. :(
[09:16:37] <rindolf> kosek: speaking of "scary" - https://www.youtube.com/watch?v=XHbdoO7uCkk
[09:16:41] <vdamewood> Arahael: I've recently started using iCloud storage for Numbers spreadsheets I wanted to share with people.
[09:16:43] *** Joins: omegahack_ (~omega@2603-6010-a529-9c00-4ccc-aa7b-1e0a-9917.res6.spectrum.com)
[09:16:49] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[09:17:00] <Arahael> vdamewood: iCloud is awful for sharing docs like that. :(
[09:17:11] <vdamewood> Arahael: Works for me.
[09:17:11] <Arahael> Is it still apple-only?
[09:17:15] <kosek> :DD
[09:17:24] <rindolf> kosek: where do you live?
[09:17:39] <Arahael> I use the free dropbox account for that - small, but works for incidential sharing.
[09:17:40] <vdamewood> Arahael: Not really. I'm able to share (at least on a read-only basis) my sheets with android and Windex users.
[09:17:59] <Arahael> vdamewood: Ah, they must've improved it.
[09:18:06] <vdamewood> Arahael: Oh, with iCloud people can access your docs via web browser.
[09:18:08] <kosek> rindolf: germany
[09:18:12] <kosek> and you ?
[09:18:45] <rindolf> kosek: Conan is almost as scary as the real librarians were
[09:20:04] <rindolf> kosek: Tel Aviv, Israel: https://www.shlomifish.org/meta/FAQ/#where_are_you_from
[09:20:31] <kosek> yeah
[09:20:46] <kosek> checkd your IP :p
[09:20:49] *** Joins: alextee (~alextee@zrythm/alex)
[09:22:01] *** Joins: xerxes (~xerxes@117.222.64.149)
[09:22:10] <kosek> there was a lot of news last time from your country , hope the situation is stable again
[09:22:40] <rindolf> kosek: you need to pay to use my https://en.wikipedia.org/wiki/Intellectual_property ;)
[09:22:43] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: nekosleep)
[09:23:13] <kosek> I need to take my dog out... he alrayd literally begging me
[09:23:32] <rindolf> kosek: heh, israel is shalom-ful
[09:23:47] <rindolf> kosek: bye
[09:24:42] <kosek> From your mouth to God's ears.
[09:24:47] <kosek> wish you a nice day
[09:24:52] <kosek> see ya soon
[09:25:26] <rindolf> kosek: go forth and multiply-lang.org
[09:27:22] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Quit: Segmentation fault (Core dumped))
[09:27:45] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[09:27:54] <rindolf> vdamewood: i have a plain https service: https://www.shlomifish.org/Files/files/
[09:28:54] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[09:29:39] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:44] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[09:31:18] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[09:31:43] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[09:31:55] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[09:31:59] <rindolf> i coded https://www.shlomifish.org/open-source/projects/sky/ , which uploads for me; a far cry from being a dropbox killer though :D
[09:33:50] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 252 seconds)
[09:34:23] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 252 seconds)
[09:35:05] *** Quits: ZenixOwler (~zenix@118.69.128.37) (Quit: Leaving)
[09:38:29] *** Joins: cation21 (cation@user/cation)
[09:39:42] *** Quits: cation (cation@user/cation) (Ping timeout: 250 seconds)
[09:40:54] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[09:42:01] *** cation21 is now known as cation
[09:43:41] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[09:45:14] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:87a6:f7cc:b1eb:3d1c) (Quit: No Ping reply in 180 seconds.)
[09:45:22] *** Joins: p0g0__ (~p0g0@216.211.147.11)
[09:46:23] *** Joins: |7| (~seachdamh@user/seachdamh)
[09:46:29] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:28b3:b880:7a24:ae63)
[09:46:40] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 246 seconds)
[09:47:35] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:49:30] *** Quits: p0g0_ (~p0g0@216.211.147.11) (Ping timeout: 252 seconds)
[09:51:55] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Quit: Segmentation fault (Core dumped))
[09:52:04] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:14] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[09:57:47] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[09:59:51] *** Joins: alextee (~alextee@zrythm/alex)
[10:05:34] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:05:58] <Izem> ok, so I've sorta figured out non back tracking regex, what would be a good application for it?
[10:07:44] *** Joins: gggpkm (~gggpkm@123.113.190.118)
[10:09:08] <W> my take is that regexs are only good for when the end user specifies the regex, so things like IRC client configuration for when to highlight a message
[10:09:46] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 246 seconds)
[10:09:50] <W> you generally want expressive power (up to a limit) there, so not especially non-backtracking
[10:12:40] * vdamewood runs W through a finite-state machine.
[10:13:49] <W> Where a user specifies the finite-state machine, you generally want a domain specific language of some kind; where you specify it, you want to just code it in the regular language you are using, or if you really want an abstract FSM, use a library that models one.
[10:14:16] <W> regexps being equivalent to one is not a good reason to use them for that purpose
[10:14:37] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[10:15:00] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[10:17:35] *** Quits: gggpkm (~gggpkm@123.113.190.118) (Ping timeout: 258 seconds)
[10:17:56] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:17:56] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[10:19:22] <vdamewood> I think I want to hook a web server up to /dev/random so that whenever someone accesses a file, it downloads random garbage.
[10:19:49] <rindolf> vdamewood: heh
[10:19:51] <vdamewood> Access it enough and it will eventually spit out the complete works of Shakespear.
[10:20:04] <rindolf> vdamewood: heh
[10:20:06] <Izem> that's the theory :P
[10:20:22] <vdamewood> Izem: Back to typing, monkey!
[10:20:46] <Izem> I seem to be only good at reading xD
[10:20:48] <rindolf> vdamewood: /dev/urandom surely?
[10:21:03] <vdamewood> rindolf: Depends on the kernel.
[10:21:59] <paulo_> vdamewood: then don't set a file size, so it never stops downloading
[10:22:20] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 252 seconds)
[10:22:30] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 252 seconds)
[10:22:32] <rindolf> vdamewood: there is only ONE TRUE KERNEL: https://www.kernel.org/ . ;)
[10:22:50] *** Joins: alextee (~alextee@zrythm/alex)
[10:23:07] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Remote host closed the connection)
[10:23:27] *** Joins: gambusia (~gambusia@S01069050cacf7653.lb.shawcable.net)
[10:23:34] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Ping timeout: 265 seconds)
[10:24:28] *** Quits: LiftLeft (~LiftLeft@154.21.28.219) (Ping timeout: 246 seconds)
[10:25:17] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[10:26:41] * vdamewood hugs XNU.
[10:28:50] *** Quits: dunkeln (~dunkeln@188.70.10.207) (Ping timeout: 252 seconds)
[10:31:41] <rindolf> vdamewood: i think writing a basic kernel that implements enuf of POSIX to bootstrap gnu.org is fairly easy
[10:33:16] <rindolf> implementing html5/css3/js is near impossible
[10:34:22] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[10:34:22] *** Joins: death916 (~death916@user/death916)
[10:39:00] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[10:39:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:41:10] *** ChanServ sets mode: +o InPhase
[10:41:14] *** InPhase sets mode: +b *!*rindolf@*.68.241.247.adsl.012.net.il
[10:41:14] *** rindolf was kicked by InPhase (Accumulated pattern of conduct not welcome)
[10:41:19] *** InPhase sets mode: -o InPhase
[10:41:21] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[10:41:29] <rifl> i aint sure which version of kernel is readable for learning
[10:43:20] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:43:20] *** silverballz is now known as silverwhitefish
[10:44:11] *** ChanServ sets mode: +o InPhase
[10:44:54] *** InPhase sets mode: -b+bb *!*rindolf@*.68.241.247.adsl.012.net.il $a:rindolf *!*@87.68.241.247.adsl.012.net.il
[10:44:58] *** InPhase sets mode: -o InPhase
[10:45:19] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[10:45:48] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[10:46:06] *** Quits: gambusia (~gambusia@S01069050cacf7653.lb.shawcable.net) (Quit: WeeChat 2.8)
[10:49:53] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:51:36] *** Quits: inky (~inky@46.36.119.6) (Ping timeout: 265 seconds)
[10:57:04] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[11:00:10] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 246 seconds)
[11:00:14] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:00:55] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[11:02:04] *** Joins: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net)
[11:02:22] <paulo_> finally, no more shlomifish links
[11:06:28] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 246 seconds)
[11:07:19] <InPhase> There was more going wrong than that (undisclosed on channel), but, yeah.
[11:07:31] *** Joins: Glumfish (~Glumfish@user/glumfish)
[11:09:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:09:08] *** Joins: \o` (~\o`@user/o/x-1005988)
[11:09:41] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:09:45] <password> rindolf was banned?
[11:10:52] <Arahael> password: Yes.
[11:10:55] <Glumfish> why?
[11:12:18] <Glumfish> Arahael: what happened? I was takling to him yesterday here lol
[11:12:42] <password> he was here 40 min ago
[11:13:21] *** Joins: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu)
[11:15:06] <InPhase> Glumfish: Persistent spamming of his site after being asked to stop, followed by additional hostilities that do not need to be aired publicly.
[11:15:48] <Glumfish> Oh rip
[11:17:16] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[11:18:00] *** Joins: dunkeln_ (~dunkeln@188.70.10.207)
[11:20:05] *** Quits: a2x (a2x@gateway/vpn/protonvpn/a2x) (Ping timeout: 252 seconds)
[11:21:26] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[11:21:56] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[11:22:29] *** Joins: alextee (~alextee@zrythm/alex)
[11:26:11] *** Quits: a6a45081-2b83 (~aditya@106.214.66.197) (Remote host closed the connection)
[11:26:42] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:27:15] *** Joins: Auron (~Auron956@user/auron)
[11:27:16] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[11:28:04] *** Joins: inky (~inky@188.115.229.38)
[11:28:30] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Quit: Leaving.)
[11:28:34] *** Joins: gggkmp (~gggkmp@221.219.68.57)
[11:29:54] *** Joins: ixil (~ixil@82.197.178.137)
[11:31:18] *** Joins: mrig (~mrig@user/mrig)
[11:31:59] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[11:32:38] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[11:33:11] *** Quits: dunkeln_ (~dunkeln@188.70.10.207) (Ping timeout: 252 seconds)
[11:33:41] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[11:33:43] *** Joins: dunkeln_ (~dunkeln@188.70.10.207)
[11:34:07] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[11:35:30] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[11:35:45] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[11:36:21] *** Joins: aradesh (~aradesh@user/aradesh)
[11:40:08] *** Joins: alextee (~alextee@zrythm/alex)
[11:42:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: kodah (~kodah@user/kodah)
[11:45:29] *** Quits: gggkmp (~gggkmp@221.219.68.57) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:45:31] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[11:45:45] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[11:46:34] *** Joins: kmh_ (~kmh@p200300df5f198e006147b5ce666b84fa.dip0.t-ipconnect.de)
[11:48:07] *** Quits: kmh (~kmh@p200300df5f2f12002c82c639a9d34e57.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[11:49:53] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[11:51:26] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 252 seconds)
[11:51:46] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 240 seconds)
[12:00:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:12] *** Joins: Glumfish (~Glumfish@user/glumfish)
[12:00:40] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:01:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:01:28] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 258 seconds)
[12:04:18] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:04:26] *** Joins: Pickchea (~private@user/pickchea)
[12:04:32] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 252 seconds)
[12:05:37] *** Joins: Booster2ooo (~Booster2o@91.183.83.5)
[12:11:10] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[12:12:12] *** Joins: Glumfish (~Glumfish@user/glumfish)
[12:12:39] <pikapika> I just realized how hard arbitrary save points in a video game can be
[12:13:18] <pikapika> You have to make sure the game works right when save/restored from any point including in a state where say there are lightning spells and arrows etc in the middle of the air from enemies and so on
[12:13:30] *** Quits: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[12:13:51] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[12:14:13] *** Joins: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu)
[12:17:34] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[12:18:30] *** Quits: brabrax_ (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[12:20:53] <password> yeah , you need to save everything :D
[12:21:00] *** Joins: brabrax (~brabrax@user/brabrax)
[12:21:11] <password> and often times you need to make a algorithm to save it really compactly
[12:21:43] *** Joins: KidBeta (~KidBeta@user/kidbeta)
[12:21:54] <password> and you need to verify the its a valid save , say your char glitches through a map and you save , you need a way to restore that
[12:21:59] <pikapika> I am surprised oblivion and skyrim can handle this so well
[12:22:12] <password> otherwise you lose all progress
[12:22:19] <password> skyrim , lol
[12:22:29] <pikapika> They have both a huge world where anything can be changed anywhere and they save microstate like position of arm and arrow in air etc of the enemoes too
[12:22:33] <password> thats one of the buggiest games with the most exploits
[12:22:43] <pikapika> I haven't seen any
[12:22:50] <pikapika> I must have had it after most was fixed
[12:22:53] <password> theres like a 100 exploits still
[12:23:21] <password> ie if you drop a save , punch a merchant , reload save ; then what they sell gets refreshed
[12:23:35] <pikapika> Then they are legitimately exploits because I never encountered them in normal gameplay. Moreover, exploits are moot in a single player game
[12:23:44] <pikapika> You can just open console and do anything you want
[12:23:50] <password> watch spiffing britt
[12:23:51] *** Quits: src (~src@user/src) (Quit: leaving)
[12:23:52] <pikapika> Your enjoyment is your own responsibility
[12:23:53] <Glumfish> pikapika: sounds like a pain in the ass
[12:24:03] <pikapika> Glumfish, you misread it
[12:24:05] <Glumfish> or even in something like minecraft where you have all these entities
[12:24:07] <Glumfish> and blocks
[12:24:11] <password> all the warez the kajit sells is in one easy to access chest
[12:24:17] <password> at a random location
[12:24:19] <pikapika> I didn't say you use console to fix bugs, rather that console can be used to "cheat" and "exploit"
[12:24:23] <Glumfish> password: I mean its a pain in the ass to make all this code for saving and restoring
[12:24:24] <pikapika> if you really wanted to do that
[12:24:27] <Glumfish> pikapika: **
[12:24:28] <pikapika> and is much easier than any "exploit"
[12:24:31] <pikapika> Glumfish, yes yes
[12:24:47] <pikapika> password, no need of such cheats when you have a console
[12:24:47] <password> glumfish: well they chare what $20 a game still?
[12:24:55] <pikapika> "Exploits" are meaningless in a single player game
[12:24:56] <Glumfish> yeah
[12:25:01] <pikapika> You are responsible for how you enjoy the game
[12:25:12] <password> eh
[12:25:13] <pikapika> OPen up the console and type tgm
[12:25:19] <pikapika> there you have your master exploit (god mode)
[12:25:40] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:25:57] <pikapika> Its your responsibility how you want to play the game
[12:26:23] <password> eh
[12:26:36] <password> do you know how to steal anything?
[12:26:53] <pikapika> Exploits are meaningless. The very fact I never encountered it is clear that these really are obscure exploits and not bugs.
[12:27:04] <password> their not obscure
[12:27:05] <pikapika> password, yes? list inventory of the npc and take from them
[12:27:18] <pikapika> or the chest in case of merchants
[12:27:18] <password> no , you put a bucket on their head
[12:27:27] <pikapika> password, yes and its your responsibility
[12:27:35] <password> or sneak with the thing around the corner and drop it
[12:27:38] <pikapika> If you want to use cheats to make the game so easy its boring its your problem
[12:27:40] <password> eh idk
[12:27:48] <password> what about the fortify loop
[12:27:58] <pikapika> Again, you can do that if you want to
[12:28:12] <pikapika> I only do that when my characters already a god anyways
[12:28:33] <password> not enjoying parts of teh game just because its an exploit , but its a legit game mechanic is the devs fault
[12:28:36] <pikapika> As I said, you can also create hyper op builds if you follow certain guides
[12:29:07] <password> like this fork ? https://www.youtube.com/watch?v=GmUtltvUQX0
[12:29:15] <pikapika> A game like oblivion deliberately offers you a large amount of ways to play it. So these "exploits" also end up being a natural extension of this fact.
[12:29:22] <pikapika> For example, speedrunners use exploits all the time
[12:29:35] <pikapika> You don't want to do that in normal gameplay on the other hand
[12:29:38] <password> no
[12:29:44] *** Joins: alextee (~alextee@zrythm/alex)
[12:29:50] <pikapika> Why would I want to use exploits in normal gameplay?
[12:29:51] <password> there is really simple ways to fix 90% of these things
[12:29:53] <pikapika> What would I gain from it?
[12:30:02] <pikapika> Money? Fame?
[12:30:04] <password> well , why wont you?
[12:30:07] <pikapika> Its a single player game
[12:30:40] <password> because if you play the game strategically and think about what you do , you will find them really fast
[12:31:18] <password> like you can make a fortify smithing potion , then you can use that to craft an item that levels up your potion making
[12:31:18] <pikapika> password, the game offers you lots of ways to play. Even if "exploits" are unintentional, they are just subsumed into the set of possibilities. And its on you to choose the path that gives you maximum satisfaction. Exploits that make the game trivial are clearly boring.
[12:31:23] <password> but they put no cap to it
[12:31:29] <pikapika> password, they now have
[12:31:36] <password> stacking affects is kinda the point of these gmaes
[12:31:39] *** Joins: scabootssca_ (~scabby@user/scabootssca)
[12:31:39] <pikapika> And anyways, you don't need exploits at all
[12:31:39] <beaky> nice what game are you playing is it noita
[12:31:44] <pikapika> You can type tgm in your console
[12:31:44] <beaky> or factorio
[12:31:49] <pikapika> and have god mode
[12:31:54] <pikapika> its a standard feature
[12:31:56] <pikapika> not an exploit
[12:31:58] <pikapika> Whats the point?
[12:32:00] <password> pikapika thats a cheat not an expploit
[12:32:03] <pikapika> It kills the game enjoyment
[12:32:07] <pikapika> password, it has the same effect
[12:32:10] <pikapika> It makes the game boring
[12:32:12] <pikapika> So you avoid it
[12:32:13] <password> exploits != cheats
[12:32:15] <password> no
[12:32:25] <password> exploits is just using the game mechanics
[12:32:26] <pikapika> Game gives you freedom to do things, its your responsibility to choose the interesting options
[12:32:44] <password> well so no enchanting and smithing?
[12:32:54] <password> because as soon as you do those , bam exploit
[12:32:56] <pikapika> password, yeah if you abuse the loops thats also makes you a gofd
[12:33:16] <pikapika> The game gives you possibilities, to exercise responsiblity is on you
[12:33:19] <pikapika> and again, whats to gain?
[12:33:23] <password> anyway , check the spiffing brit stuff
[12:33:24] <pikapika> Its a single player game
[12:33:33] <pikapika> With no money or fame to be had from having a powerful character
[12:33:46] <password> well
[12:33:56] <password> that argument goes both ways!
[12:34:10] <pikapika> Its your responsibility to give yourself restrictions or freedoms in order to make it enjoyable for yourself
[12:34:18] <W> I assure you, there are exploits in single player games that will ruin the gameplay, because possible options can, for instance, ruin suspense and tension
[12:34:22] <pikapika> And given the wide scope of options the game presents each "you" can be different
[12:34:24] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 272 seconds)
[12:34:34] <pikapika> W yeah and none of those listed here do
[12:34:47] <pikapika> Unless you deliberately use bucket hacks for an important stealing mission
[12:34:51] <pikapika> Again, personal ersponsibility
[12:34:54] <password> why play the game if you don't get money or fame?
[12:35:09] <password> W you exploit after the fact
[12:35:19] <W> pikapika, okay, so you're making a much weaker claim than I though. I thought you said that exploits in single player game didn't matter because the player could just choose not to do it
[12:35:20] <pikapika> Nobody gets money and fame from single player games
[12:35:29] <pikapika> W thats exactly what I said
[12:35:33] <pikapika> ANd you don't even need exploits
[12:35:37] <pikapika> You can just use the console
[12:35:42] <pikapika> It presents you all these options
[12:35:50] <password> well nobody gets money of fame from single player , so why play it?
[12:35:58] <pikapika> Because its enjoyable
[12:36:06] <password> opening the console bypassing the game mechanics
[12:36:08] <pikapika> Exploits clearly are not enjoyable because they make the game boringly easy
[12:36:12] <pikapika> Console is the same thing
[12:36:13] <W> then, like I said, you are wrong, because there are exploits in single player games that will ruin the gameplay, because possible options can change the atmosphere, the enjoyability of the game
[12:36:21] <W> games that don't have god mode or other cheats, e.g.
[12:36:21] <password> exploits are fun because you are still playing by the games rules
[12:36:24] <pikapika> And console was at least intended to be used
[12:36:30] <pikapika> Exploits weren't intentional on part of devs
[12:36:38] <password> consoles are to test thigns
[12:36:49] <pikapika> W as I said, its on the players responsibility to not engage in these exploits
[12:36:53] <beaky> what are some good uses of the super and hyper key in  emacs
[12:36:57] <password> your not supposed to use consoles on normal play
[12:36:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[12:37:03] <pikapika> These are clearly exploits because these are obscure incantations you won't encounter during normal play.
[12:37:09] <password> eh
[12:37:21] <beaky> since alot of the control layer is bound to basic but important tasks i can bind the super and hyper layers to agda and git
[12:37:27] <password> you never played minecraft i assume?
[12:37:30] <KidBeta> i cant believe ive forgotten this but whats the name of the process of detaching a process from its parent so that when its parent dies the process keeps running?.
[12:37:38] <pikapika> I haven't. And minecraft isn't a single player game I think.
[12:37:47] <password> it is both
[12:37:50] <W> pikapika, so? What does that matter. If it's the player's responsibility, a player experience with this responsibility now means a drastically worsened gameplay, a dissatisfied player, and they might not buy anything else from the developer or publisher because of it
[12:38:05] <pikapika> W thats only the case if its easy to bump into this "exploit"
[12:38:10] <pikapika> Then its no longer an exploit but a normal bug
[12:38:12] <W> pikapika, no, it is not
[12:38:12] <password> lets just say , if no one exploited game mechanics in minecraft , no one would play it
[12:38:24] <pikapika> W then its their fault for going out of their way doing that obscure thing
[12:38:29] <pikapika> If they did that, they deliberately wanted to do that
[12:38:43] <W> for instance, in many 3d combat games, you can jump onto a rock and the enemy cannot find a way to hurt you
[12:38:58] <death916> W thats how i cheesed oblivion
[12:39:05] <W> if a player discovers this, no monster is now scary any more
[12:39:09] <beaky> KidBeta: 'disowning' i think its a shell command 'disown'
[12:39:17] <W> if they are chased and in mortal peril, they know they can always just jump onto a rock
[12:39:24] <pikapika> Jumping into a rock is a trivial thing. It would count as a bug not an exploit. And in tes games jumping on a rock has no effect. Enemies can still fire long distance shots as well as run into where you are usually (but not always)
[12:39:28] <W> there is no more tension, even if they choose not to jump onto the rock
[12:39:46] <death916> no in oblivion u could beat the whoel arena exceot the mages by jumping onna rock
[12:39:50] <death916> and several bosses
[12:39:53] <KidBeta> beaky: is it the same across all OS's im trying to do it in MacOS
[12:39:55] <W> pikapika, it doesn't matter how you count it
[12:39:55] <death916> most were melee only
[12:40:01] <pikapika> W its on the player to impose whatever restrictions or cheats they want to make the game enjoyable if the game offers a wide range of options, as Oblivion does
[12:40:10] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 240 seconds)
[12:40:12] <W> pikapika, there are a number of less-easily found exploits with the same kind of effect
[12:40:30] <W> pikapika, it doesn't matter if it's on the player, the player experience is worsened
[12:40:36] <pikapika> In oblivion you are making a character and creating a story
[12:40:39] <W> they now have a choice of cheesing the scary thing
[12:40:46] *** Quits: nsuperbus (~nsuperbus@05BBE268.dsl.pool.telekom.hu) (Ping timeout: 272 seconds)
[12:40:47] <pikapika> Its on you to make the story interesting by adding appropriate restrictions
[12:40:56] <W> this ruins what the game meticulously tried to instil in the player, a sense of peril
[12:41:12] <pikapika> There is no peril anyways when the player can just as easily tgm any time
[12:41:13] <beaky> KidBeta: its the same across posix shells there's also 'nohup' which lets you shut down the shell completely and it will still be running
[12:41:18] <W> pikapika, so you can enjoy any game? You just "make the story interesting"?
[12:41:28] <pikapika> W exploits are pointless
[12:41:32] <pikapika> You type ~ and tgm
[12:41:38] <pikapika> You always have this option to yourself
[12:41:40] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Ping timeout: 246 seconds)
[12:41:41] *** Quits: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net) (Read error: Connection reset by peer)
[12:41:44] <W> that only works in like two-three games top
[12:41:44] <pikapika> Does this make the peril meaningless to you?
[12:41:54] <W> and is explicitly an out-of-game experience
[12:42:00] <W> it does not ruin immersion in the same manner
[12:42:03] <pikapika> Moreover in a single player game you can in theory edit the game files and binaries
[12:42:16] <pikapika> So single player games are wholly on the player
[12:42:25] *** Joins: gareppa (~gareppa@user/gareppa)
[12:42:26] <beaky> factorio exploits like making the insects chase you
[12:42:50] <W> pikapika, which also are explicitly out-of-game experiences, and so does similarly not affect the immersion
[12:42:57] <beaky> or building a zoo from their hives which have infinite pollution absorption
[12:43:02] <pikapika> tgm is very well integrated into the game
[12:43:07] <pikapika> or the conmsole rather
[12:43:21] <pikapika> I am not saying game bugs can never ruin experiences
[12:43:28] <pikapika> But most these "exploits" are bullshit
[12:43:30] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[12:43:33] *** Joins: nsuperbus (~nsuperbus@05BBE268.dsl.pool.telekom.hu)
[12:43:41] <W> pikapika, I have 1000+ hours in Skyrim I'm sure, I never opened the console or knew any console commands until you brought this one up
[12:44:02] *** Joins: Glumfish (~Glumfish@user/glumfish)
[12:44:07] <W> pikapika, okay, so you're making a much weaker claim than I though. I thought you said that exploits in single player game didn't matter because the player could just choose not to do it
[12:44:08] <pikapika> W the point is that its trivial and the console is a standard provided tool not even an unintentional bug
[12:44:13] <pikapika> So its purely on the player to guide his experience
[12:44:17] *** Joins: a2x (a2x@gateway/vpn/protonvpn/a2x)
[12:44:34] <pikapika> Thats exactly what I am saying. Choosing to use the exploit or choosing to use the console are trivial.
[12:44:44] <pikapika> Its on you what you want to do to make the game enjoyable.
[12:44:44] *** Quits: a2x (a2x@gateway/vpn/protonvpn/a2x) (Client Quit)
[12:44:48] <W> pikapika, I was not unaware of the console, I simply did not use it, did not look up a reference. Because I, like many people, want games that are immersive
[12:45:38] <W> Skyrim is in fact meticulously designed to be immersive, and have taken quite a number of steps towards maintaining immersion, despite the existence of a console that can move any entity anywhere, make you immortal, or any number of other possibilities.
[12:46:25] <pikapika> Precisely the case. The console is provided as a tool someone can choose to use if they personally feel it makes sense or increases enjoyment in some case. For most players it doesn't. Likewise for any "exploits" though they are unintentional on part of the devs, but same applies.
[12:47:04] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[12:47:06] <W> but you cannot put immersion on the player. If you could, we would not have videogames, we would all just be roleplaying in our heads or over tabletop
[12:47:35] <pikapika> Yeah and these "exploits" are actually harder to use than the console. So its fully on the player if they used them.
[12:47:43] <pikapika> I never said game bugs can't ruin enjoyment.
[12:47:51] <pikapika> Just that most of these "exploits" aren't it
[12:49:18] <W> no, you explicitly said that exploits in single player games didn't matter, and I am demonstrating and explaining how it matters, how in fact it is vital to player experience that there is a minimum of exploits, that this is the responsibility of a game maker that sells a game with a good player experience
[12:49:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:49:24] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:23] <pikapika> Its even more trivial to open a console and yet you agreed with having personal responsibility not to open it
[12:50:35] <W> if you make terrible games where the player has to imagine everything is better, of course it doesn't matter if there's any exploits around the game's problems, the player can just imagine that there isn't
[12:50:45] <pikapika> I never said that
[12:51:12] <pikapika> Putting a bucket on an npcs head is a strange thing to do and you have to go out of your way to do it, so its not an exploit whatsoever
[12:51:23] <pikapika> *not a bug
[12:51:24] <W> pikapika, to some degree, the console is already a detractor to the game, and presumably there is some segment of players that simply did not buy the game after hearing it has a console
[12:51:28] <pikapika> Very much an "exploit"
[12:51:43] <pikapika> W then they are idiots
[12:51:49] <W> of course the bucket-on-head-to-steal is an exploit, which is why they fixed it
[12:52:04] <W> it breaks immersion, it is a detractor to the game experience for many
[12:52:10] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 240 seconds)
[12:52:21] <W> pikapika, so people who have different tastes than you are idiots?
[12:52:27] <pikapika> You are also expecting general purpose ai level npcs from a simple video game
[12:52:34] <W> including me, as I already explained I prefer games with good immersion
[12:52:46] <W> no, I never said that
[12:53:20] *** Joins: Glumfish (~Glumfish@user/glumfish)
[12:53:21] <pikapika> Nobody's stopping you from opening the console or editing game files in an offline single player game. Its on the player to not do things that are clearly exploits and that make gameplay boring.
[12:53:37] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (Remote host closed the connection)
[12:53:48] <Glumfish> pikapika: god mode becomes boring real quick
[12:53:53] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[12:53:55] <pikapika> Glumfish, exactly
[12:53:59] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[12:54:14] <W> and I've already explained that personal responsibility is irrelevant to whether people are happy with your game, and thus, in lieu of any objective standard that isn't "pikapika's opinion", whether your game is bad
[12:54:14] <pikapika> Its all on thep layer to avoid these "exploits" and these are clearly exploits because these are obscure incantations
[12:54:22] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[12:54:41] <merijn> There's plenty of games with optional "don't cheat" modes player can (and do!) enable to stop them from ruining it for themselves
[12:54:41] <pikapika> W then all offline signle player games will make people "unhappy"
[12:54:42] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[12:54:46] <merijn> Think of Iron Man modes, for example
[12:54:49] <pikapika> Because you can always edit the game files and binaries
[12:55:17] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[12:55:21] <W> pikapika, no, in general people are not upset that they could theoretically code their own game
[12:55:44] <pikapika> Why not? Nothings stopping them from editing the binaries, just as nothings stopping them from using obscure "exploits"
[12:55:55] <W> because they do not make games, they buy them, pay money for the experience
[12:56:15] <pikapika> Nothings stopping them from using mods that do the equivalent of editing binaries
[12:56:17] *** Joins: TheAceOfHearts_ (~TheAceOfH@24.41.239.76)
[12:56:32] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 252 seconds)
[12:56:44] *** Joins: alextee (~alextee@zrythm/alex)
[12:57:12] <W> pikapika, are you asking me to explain to you why the typical gamer, buying a game for its experience and being sad when the game has immersion-ruining exploits, that they do not similarly find their immersion ruined by the possibility of spending years training to be a game developer and then modding the game?
[12:57:37] <pikapika> Why is he sad doing some obscure and atypical sequence on actions in the game has some game breaking consequences?
[12:57:52] <death916> you dont have to be a game dev to mod a game
[12:57:53] <death916> just saying
[12:58:04] <W> you do not have to actually *exploit* to have your experience ruined by *exploits*
[12:58:23] <pikapika> They are exploits precisely because they are an obscure and atypical action that you won't mistakenly bump into during normal usage
[12:58:29] <pikapika> Otherwise they'd just be bugs
[12:58:41] <W> pikapika, this is nomenclature no one else uses
[12:58:49] <W> very idiosyncratic
[12:59:10] <pikapika> Putting a bucket on an npc head is a very atypical and obscure thing to do
[12:59:28] <W> an exploit is a bug, in general parlance, that does something inside the game world rather than e.g. crash the engine to desktop
[12:59:36] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[12:59:50] <pikapika> Exploits are also bugs, but bugs of intention
[13:00:02] <pikapika> and also as I said most these xploits you mentioned are very atypical actions
[13:00:10] <W> for instance moving items between containers too fast is an exploit in many games as the items gets duplicated
[13:00:14] *** Quits: alextee (~alextee@zrythm/alex) (Read error: Connection reset by peer)
[13:00:31] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:00:32] <pikapika> That moving thing would count as a valid bug in my words
[13:00:56] <W> pikapika, your word use is idiosyncratic and so irrelevant to widespread player experiences
[13:01:23] <pikapika> A proper bug would be something like a door not opening when it should or a dragon not dying when it should etc
[13:01:28] <pikapika> I have never encountered those kinds of bugs
[13:01:46] <W> that your words are categories in your head with definitions that somehow always support the point you are trying to defend doesn't mean games aren't broken and players are justified in being upset at this
[13:01:49] <pikapika> Exploits on the other hand you are describing are obscure sequences of actions that I never mistakenly bumped into and only knew from others finding them
[13:01:56] <novns> pikapika, real life is full of those bugs
[13:02:04] <pikapika> novns, yes
[13:02:14] *** Joins: alextee (~alextee@zrythm/alex)
[13:03:56] *** Quits: audiocat (~audio@2603-8081-1800-6a65-662a-417a-58d5-f091.res6.spectrum.com) (Ping timeout: 252 seconds)
[13:04:01] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[13:05:48] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:05:49] <beaky> what is your favorite bug
[13:09:25] <Jck_true> beaky: Giant wētā https://en.wikipedia.org/wiki/Giant_w%C4%93t%C4%81
[13:10:41] *** Quits: Arahael (~arahael@60-240-135-223.tpgi.com.au) (Ping timeout: 256 seconds)
[13:11:48] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[13:12:23] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[13:12:58] <pikapika> W do you find it interesting how numbers work
[13:13:26] *** Quits: rifl (~user@user/rifl) (Remote host closed the connection)
[13:13:43] <pikapika> If X os is the main os hw people will do anything possible to make the drivers work, but go down an order of magnitude and you have to start applying a lot of weight and pressure
[13:15:31] *** Joins: Arahael (~arahael@118.211.182.212)
[13:15:37] *** Quits: Arahael (~arahael@118.211.182.212) (Client Quit)
[13:15:49] *** Joins: arahael (~arahael@118.211.182.212)
[13:17:07] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[13:17:29] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[13:18:51] *** Joins: mmfood (~mmfood@45.91.21.58)
[13:19:31] <beaky> oa its a huge beetle
[13:19:59] *** Joins: inky_ (~inky@45.15.149.181)
[13:20:33] *** Quits: inky (~inky@188.115.229.38) (Read error: Connection reset by peer)
[13:20:46] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[13:20:46] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[13:20:46] <paulo_> breath of the wild's blood moon (random enemy reset) I think is a way to prevent the save file from going too large
[13:20:46] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[13:20:46] <paulo_> it basically resets all enemy states
[13:20:46] <paulo_> reviving them in the process
[13:21:03] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[13:22:08] <Jck_true> First you implement save and load... And then you got to gracefully handle all possible future game updates...
[13:23:12] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Changing host)
[13:23:12] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[13:23:53] <Jck_true> I do not play that many games. I got stuck years ago in a shooter where it quicksaved me right before a door... But the door wouldn't open... No other option than starting from scratch... So I uninstalled...
[13:26:22] <beaky> yeah i got stuck in caves of qud like that
[13:26:41] <beaky> but thanks to debug mode i could prgopress from there
[13:26:49] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[13:27:35] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:b930:5d2e:f2ac:9885) (Remote host closed the connection)
[13:27:44] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:b930:5d2e:f2ac:9885)
[13:30:03] *** Joins: bytefire (~bytefire@51.19.186.131)
[13:30:44] *** Quits: inky_ (~inky@45.15.149.181) (Read error: Connection reset by peer)
[13:30:52] *** Joins: inky_ (~inky@45.15.149.181)
[13:30:59] *** Joins: alextee (~alextee@zrythm/alex)
[13:32:04] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Ping timeout: 246 seconds)
[13:32:34] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[13:34:37] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[13:35:29] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[13:35:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[13:36:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[13:39:40] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[13:40:03] *** Joins: Pickchea (~private@user/pickchea)
[13:41:32] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Ping timeout: 272 seconds)
[13:42:01] *** Joins: gggpkm (~gggpkm@221.219.77.87)
[13:43:05] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 252 seconds)
[13:43:27] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:44:04] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Client Quit)
[13:44:15] <pikapika> paulo_, state is huge for oblivion
[13:44:49] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[13:45:23] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:edff:946b:89ad:7dd5)
[13:46:07] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:46:39] *** Joins: Crassus (~Crassus@user/crassus)
[13:47:17] *** Joins: systemmessages (~systemmes@pa49-195-143-152.pa.nsw.optusnet.com.au)
[13:47:49] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[13:49:41] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[13:50:41] *** Quits: APic (apic@apic.name) (Ping timeout: 252 seconds)
[13:52:04] *** Joins: inky (~inky@178.78.142.0)
[13:52:22] *** Quits: inky_ (~inky@45.15.149.181) (Ping timeout: 265 seconds)
[13:59:38] *** Joins: federico_it (~textual@151.51.82.235)
[14:01:02] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[14:01:33] *** Joins: recursiveNode (~recursive@ip-86-49-255-126.net.upcbroadband.cz)
[14:01:50] *** Quits: gggpkm (~gggpkm@221.219.77.87) (Ping timeout: 258 seconds)
[14:02:29] <recursiveNode> do you guys blog?
[14:02:53] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[14:03:06] <KidBeta> i just got what i was working, on working beaky ty again.
[14:03:13] <recursiveNode> when you're coding, i.e. every day, you're solving some problem using some reasonably good (often very good, above average) solution. Do you blog about it?
[14:03:46] *** Quits: mmfood (~mmfood@45.91.21.58) (Ping timeout: 240 seconds)
[14:03:49] <GeDaMo> Yeah, in here :P
[14:04:32] <recursiveNode> guys, you're very bright and talented, as you know. How many readers would you have if you blogged about the problem you hit and the solution you answered it with?
[14:04:53] *** Joins: mmfood (~mmfood@45.91.21.59)
[14:04:58] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[14:05:34] <recursiveNode> wouldn't you get some pretty good job offers as well, from people finding your blog via google, solving their problem with it, and looking for someone to hire?
[14:05:57] <pikapika> GeDaMo, hi
[14:06:02] <pikapika> recursiveNode, hi
[14:06:05] <GeDaMo> Hi pikapika :)
[14:06:58] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 240 seconds)
[14:07:13] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[14:08:00] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[14:08:15] *** Joins: alextee (~alextee@zrythm/alex)
[14:09:24] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[14:09:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:10:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:11:12] *** Joins: Glumfishfish (~Glumfish@user/glumfish)
[14:11:22] *** Joins: Pickchea (~private@user/pickchea)
[14:13:22] *** Quits: Glumfish (~Glumfish@user/glumfish) (Ping timeout: 240 seconds)
[14:13:44] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 268 seconds)
[14:14:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:16:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:16:15] *** Joins: brabrax (~brabrax@user/brabrax)
[14:16:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:17:44] *** Joins: rifl (~user@user/rifl)
[14:21:01] <W> recursiveNode, it's probably best, if possible, to find employment in a team of people with skills above, or at least close to, your own. Much less likely if the employer found you because no one in their team could solve the problem without your blog about how you solved it
[14:21:47] *** Joins: entuland (~entuland@user/entuland)
[14:22:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:22:18] <recursiveNode> W if they don't have the skill you do, they are more likely to offer you more money for the skill
[14:22:42] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[14:22:42] <recursiveNode> W I meant contracting/consulting rather than a perm employment
[14:22:45] <W> are they, though?
[14:22:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:22:52] <W> oh I would never
[14:23:23] <recursiveNode> contrctors/consultants are often hired precisely because the team has a skill shortage, and yes, we earn more
[14:24:09] <recursiveNode> for example a 3 month contract with $ X/day earns you approx. double compared to a perm job in 3 months
[14:24:17] <W> I very strongly prefer the legal protections and convenience of normal employment
[14:24:52] <recursiveNode> in the first 3 months, there are no protections (due to being in the trial period)
[14:25:17] <W> also, interviewing, making deals, negotiating, not my strong suit. I prefer to program.
[14:25:37] <recursiveNode> actually, recruiters do all this for you just like they do in a perm job
[14:25:40] <W> yes, which is why I stay employed past 3 months :p
[14:25:41] *** Joins: alextee (~alextee@zrythm/alex)
[14:25:46] <W> (also not true in my jurisdiction)
[14:26:01] <recursiveNode> I see
[14:26:03] <recursiveNode> OK
[14:26:05] <W> no recruiter has ever gone to an interview for me
[14:26:06] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:26:55] <recursiveNode> I meant making deals, negotiating - that's done by the recruiter. The contract already has a daily $ on it. You just apply through a recruiter. Obviously, they interview you and then the company may invite you for a face to face.
[14:27:10] *** Joins: brabrax (~brabrax@user/brabrax)
[14:27:12] <recursiveNode> I love interviewing. It became so easy after having done it many itmes :)
[14:27:31] <W> that's never going to be true for me
[14:27:34] <recursiveNode> I could interview every day. And I love closing deals.
[14:27:48] <beaky> what is the
[14:27:51] <pikapika> W these days they love to use algowank puzzles in interviews
[14:27:53] <pikapika> think leetcode
[14:27:57] <recursiveNode> 10 years ago, I was more introverted and anxious about it, and obviously I had little experience with it
[14:28:15] <W> doesn't matter; if I can do it on IRC, sure, but they generally don't accept that
[14:28:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:28:39] <recursiveNode> often, you can do it on MS Teams, a videocall. Are you scared? :D
[14:28:44] <pikapika> W yeah I am saying that a a condemnation
[14:29:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:29:12] <pikapika> You basically have to have spent a few weekls before the interview memorizing these problems
[14:29:41] <recursiveNode> W which country gives you some protections in employment in the first 3 months?
[14:29:51] <W> Norway
[14:30:04] <recursiveNode> is Norway the best country for employee rights?
[14:30:12] *** Quits: systemmessages (~systemmes@pa49-195-143-152.pa.nsw.optusnet.com.au) (Quit: Leaving)
[14:30:14] <W> subjective, but I think it's up there
[14:30:21] <recursiveNode> :) thought so
[14:30:28] <KidBeta> a lot of countries outside the US have strong worker protections
[14:30:32] <W> note, "best" doesn't necessarily mean "sufficient" of course
[14:30:36] <recursiveNode> is Oslo in Norawy, W?
[14:30:43] <W> it's the capital, yes
[14:30:49] <KidBeta> even where i am, after 6 probation (6 months) its hard to fire someone.
[14:30:54] <W> for further geography, consult wikipedia
[14:30:56] <recursiveNode> are you from Oslo?
[14:30:57] <KidBeta> after probation*
[14:31:27] <recursiveNode> it's in the top 3 countries in EU, right?
[14:31:44] *** Quits: alextee (~alextee@zrythm/alex) (Read error: Connection reset by peer)
[14:31:55] <W> if you sort them by latitude, probably
[14:32:02] *** Quits: death916 (~death916@user/death916) (Ping timeout: 252 seconds)
[14:32:09] <KidBeta> tbh its probably not because other countries have great protections but just that the US has terrible protections.
[14:32:20] <recursiveNode> "The United Nations Human Development Index has ranked Norway number one for six consecutive years. It has by far the highest standard of living the world."
[14:32:44] <W> as before, note that "highest" does not mean "sufficient"
[14:32:55] *** Joins: gggkmp_ (~gggkmp@221.219.70.176)
[14:33:52] *** Joins: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net)
[14:34:28] <recursiveNode> W does it look beautiful in there, with a hot and sunny weather, and do you guys have plenty of great companies and high paying positions already? So you wouldn't change a job because it's good enough?
[14:34:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:35:09] <recursiveNode> I love Sweden btw. :)
[14:35:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:20] <pikapika> Yes sweden is more famous for death metal
[14:35:22] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[14:35:37] <recursiveNode> Norway has a higher GDP than the United States
[14:36:59] <recursiveNode> I love sweden because you don't have to wear masks in there
[14:37:20] <recursiveNode> and also in Sweden, there have never been any lockdowns
[14:39:28] <pikapika> recursiveNode, do you like any dm
[14:40:17] <GeDaMo> Dungeon Masters? :|
[14:40:27] <amigojapan> recursiveNode: there were no lockdowns in Japan either
[14:40:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:41:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:41:27] <recursiveNode> amigojapan  thanks. Good to know :)
[14:41:34] <Stryyker> probably why the olympics are a mess
[14:41:37] <amigojapan> :)
[14:41:56] <pikapika> GeDaMo, death metal
[14:42:05] <amigojapan> Stryyker: the airports are blocked to tourists
[14:42:35] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[14:43:10] <amigojapan> Stryyker: only people that are already in Japan can go to the Olympics. So mostly Japanese people
[14:43:59] <pikapika> amigojapan, are you japanese
[14:44:38] <amigojapan> pikapika: no but I have been living in Japan for 19 years
[14:45:58] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[14:46:16] <Stryyker> Should have moved the games to Aus and NZ
[14:46:26] <amigojapan> 19 years in Mexico 5 years in the US and 19 years in Japan
[14:46:26] <pikapika> Stryyker, why
[14:46:31] <pikapika> amigojapan, why
[14:46:36] <Stryyker> the people could then cheer etc.
[14:46:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:47:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:27] *** Quits: Glumfishfish (~Glumfish@user/glumfish) (Ping timeout: 258 seconds)
[14:47:48] <Stryyker> HDI looks like if you can manipulate exchange rates you can move position a bit
[14:47:51] <amigojapan> pikapika: originally cause of an obsession with anime which spiraled into living in Japan http://amigojapan.github.io/?q=Reason_why_I_came_to_Japan
[14:47:54] <Stryyker> for ranking purposes
[14:48:03] <pikapika> That is a strange reason
[14:48:31] <amigojapan> Sports are stupid
[14:48:42] <Stryyker> Hong Kong ranked 4. I would not want to be there
[14:48:47] <pikapika> Stryyker, hi
[14:48:54] *** Joins: alextee (~alextee@zrythm/alex)
[14:49:12] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 246 seconds)
[14:49:16] <Stryyker> hi
[14:51:01] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:52:02] *** Joins: brabrax (~brabrax@user/brabrax)
[14:52:12] <amigojapan> I can understand wanting to excersize in a group but wanting to watch other people excersize I don't understand
[14:53:29] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5)
[14:53:49] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 256 seconds)
[14:54:18] <Stryyker> watching the violence or high level of skill can be interesting
[14:54:26] *** Joins: Glumfishfish (~Glumfish@user/glumfish)
[14:54:53] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[14:55:22] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[14:57:19] *** Joins: Guest91 (~Guest91@2a01:5ec0:1000:81ea:2208:edff:fe12:da52)
[14:57:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:58:07] *** Joins: Pickchea (~private@user/pickchea)
[14:58:55] *** Quits: Glumfishfish (~Glumfish@user/glumfish) (Ping timeout: 256 seconds)
[14:59:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:20] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Remote host closed the connection)
[15:00:47] *** Quits: Guest91 (~Guest91@2a01:5ec0:1000:81ea:2208:edff:fe12:da52) (Client Quit)
[15:03:16] *** Joins: Intelo (~Intelo@88.246.74.132)
[15:03:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:04:09] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[15:04:42] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[15:04:42] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[15:04:42] *** Joins: death916 (~death916@user/death916)
[15:04:53] *** Joins: brabrax (~brabrax@user/brabrax)
[15:04:56] <kosek> the fuck
[15:05:26] <kosek> really ban on rindolf...
[15:06:03] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[15:06:05] <pikapika> kosek, what
[15:06:08] <pikapika> when did that happen
[15:06:09] <Fleck> whith that mouth - no wonder :D
[15:06:54] *** Joins: alextee (~alextee@zrythm/alex)
[15:06:55] *** Parts: Intelo (~Intelo@88.246.74.132) ()
[15:06:56] <kosek> 06:11:15               -- | Mode ##programming [+b *!*rindolf@*.68.241.247.adsl.012.net.il] by InPhase
[15:06:58] <kosek> 06:11:15              <-- | InPhase has kicked rindolf (Accumulated pattern of conduct not welcome)
[15:07:43] <pikapika> That is the most unfortunate
[15:08:19] *** Quits: gggkmp_ (~gggkmp@221.219.70.176) (Ping timeout: 246 seconds)
[15:08:23] *** Joins: tolot (~tolot@dynamic-093-132-008-068.93.132.pool.telefonica.de)
[15:08:26] <DarkTrick> But can't s/he simply rejoin with a new username?
[15:08:37] <DarkTrick> Something unrelated like "rindof2" ? :D
[15:09:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:09:53] <amigojapan> DarkTrick: I assume they would ban him for ban evading
[15:10:00] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[15:10:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:11:04] *** Quits: death916 (~death916@user/death916) (Read error: Connection reset by peer)
[15:11:17] <amigojapan> It would be easy to recognise rindolf
[15:11:28] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 272 seconds)
[15:11:28] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[15:11:47] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[15:11:49] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[15:11:49] *** Joins: death916 (~death916@user/death916)
[15:16:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:16:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:18:28] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[15:19:14] *** Joins: alextee (~alextee@zrythm/alex)
[15:19:22] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:20:29] *** Joins: brabrax (~brabrax@user/brabrax)
[15:21:13] *** Quits: paulo_ (~paul0@user/paulo/x-9032687) (Remote host closed the connection)
[15:21:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:22:38] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 252 seconds)
[15:22:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:25:34] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:27:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:28:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:28:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:29] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[15:30:46] *** Joins: Lyn (~Lyn@user/law)
[15:31:36] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[15:32:00] <Jck_true> rindolf banned? Yikes
[15:33:12] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:33:20] <Lyn> what's a wise path to building commercial cross-platform apps (quickly)? if I pick up react.js and create something that resembles an empty app and just add content & learn along the way, am I gonna be met with a world of hurt?
[15:34:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[15:34:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:21] <Jck_true> Lyn: React is for web development. "Electron" is used for a lot of cross platform apps (Teams/VS Code/Slack/Skype)
[15:35:36] <Lyn> hm, there was something called React Native
[15:35:45] <Square> Gah, all the worst apps are electron based.
[15:35:46] <pikapika> react is a front end lib, I don't see why you can't use it inside electron
[15:36:01] <pikapika> React native is a different concept
[15:36:05] <Square> Such sad development for our industry.
[15:36:06] <Jck_true> Lyn: But it's very much grounded in web development. So I'd assume you'd a bit of a learning curve if you haven't done web development...
[15:36:07] <pikapika> One that I like more in theory I think
[15:36:22] <Lyn> I've got a good track record of learning quickly
[15:36:31] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 258 seconds)
[15:37:01] <pyzozord> some kind of RAD environment for java?
[15:37:39] <pyzozord> like this https://www.cuba-platform.com/
[15:37:42] <Jck_true> Lyn: I think you need to look at your requirements in depth first. What is your app supposed to do? And cross-platform? iOS? Android? Mac OSX? Linux? Windows XP?
[15:37:45] <pyzozord> or even better, the SAP stuff
[15:38:08] <pikapika> Whats not rapid abnout normal java
[15:38:32] <Jck_true> And what functionality does your app provide that can't be done via a web browser...
[15:38:34] <Lyn> Jck_true: iOS and Android are enough, the app does very basic stuff, communicating with a server might be the most complex thing
[15:39:02] <pyzozord> pikapika: RAD was a thing some time ago, it was just kinda visual interface designers intergrade with IDEs. It still lives on in mobile dev IDEs like apple and android
[15:39:17] <pikapika> Oh
[15:39:18] <pikapika> Yes
[15:39:21] <pyzozord> s/intergrade/integrated/
[15:39:24] <pikapika> I have seen such a designer inside android ide
[15:39:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[15:39:52] <pyzozord> yeah so that would be called RAD like 10 or 15 years ago I guess
[15:39:55] <pikapika> pyzozord, I thought swing lets you write your gui in xml?
[15:40:12] <pikapika> ie the layout and design
[15:40:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:49] <Jck_true> Lyn: Ahh many solutions then - Xaramin, React native, PhoneGap. I only briefly touched phonegap like 5 years ago... Dunno if it's still actively supported by adobe
[15:40:57] <pikapika> apparently not
[15:41:06] <pikapika> Jck_true, phonegapps was nice
[15:41:07] <pyzozord> pikapika: Last time I looked at apple's stuff (around 2016, before swift) their interface designer was generating XML but that xml was not human readable...
[15:41:20] <pikapika> i have used it ~3 years ago
[15:41:35] <Jck_true> https://cordova.apache.org/ Oh it's open source now...
[15:41:46] <pikapika> yes it was called cordova
[15:41:51] <pikapika> Jck_true, yeah bro
[15:41:54] <pikapika> it was quite pleasant
[15:42:30] <Jck_true> Back when I used it Adobe just had a website where you put in a git url and it would give you an APK....
[15:42:43] <pikapika> what
[15:43:18] <pyzozord> Apparently RAD was more than the graphical builders: https://en.wikipedia.org/wiki/Rapid_application_development
[15:43:34] <pyzozord> "RAD is especially well suited for (although not limited to) developing software that is driven by user interface requirements. Graphical user interface builders are often called rapid application development tools."
[15:44:14] <pikapika> pyzozord, I think vb had graphical gui bulders too
[15:44:28] *** Quits: pajus (~Pajus@user/pajus) (Quit: Lost terminal)
[15:44:49] <spynxic> Any know of a well used bug tracker
[15:45:12] <pyzozord> basic is cool actually :D I should write some basic. But not the visual basic, that seems not that basic
[15:45:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[15:45:47] <pikapika> pyzozord, there used to be many basics
[15:45:49] *** Joins: alextee (~alextee@zrythm/alex)
[15:45:52] <pikapika> People didn't have oses back then
[15:45:54] <spynxic> Visual basic is basic with ui?
[15:45:57] <pikapika> The computer booted to basic
[15:46:15] <pyzozord> or some cobol, I should try some cobol. The cobol jobs could be quite great tbh
[15:46:39] <pikapika> I am most interested in learning fortran
[15:46:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:47:01] <pikapika> pyzozord, mathematicians used to use C and fortran all the time
[15:47:07] <pyzozord> oh yeah fortran is cool too
[15:48:50] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[15:49:49] <spynxic> Do all of those languages have loops
[15:49:58] <GeDaMo> Yes
[15:51:02] <merijn> What do you mean "used to use Fortran" >.>
[15:51:13] *** Joins: gggkmp (~gggkmp@221.219.70.176)
[15:51:16] <merijn> I'm sitting over here maintaining Fortran 77 code >.>
[15:51:28] <Lyn> wait did something happen to rindolf
[15:51:31] <pyzozord> merijn: oh wow
[15:51:45] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[15:51:54] <merijn> Most physics/scientific simulation code is still heavily reliant on Fortran
[15:52:05] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[15:52:31] <spynxic> Why is that
[15:52:35] <pikapika> I am very intersted in learning fortran
[15:52:37] *** Quits: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net) (Read error: No route to host)
[15:52:38] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[15:53:01] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:53:02] *** Joins: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net)
[15:53:03] <pikapika> merijn, I know there were some mathematical libraries made in fortran by various scientific and defense departmentso f governments
[15:53:06] <GeDaMo> "It works well enough and people are scared to change it" :P
[15:53:08] <merijn> spynxic: Because Fortran is a better language for HPC than C/C++
[15:53:22] <merijn> GeDaMo: Partially that, but also better optimising compilers
[15:53:51] <spynxic> Oh. I thought perhaps it was the case that most libraries were written for fortran
[15:53:54] <merijn> The lack of aliasing issues and the existence of proper arrays makes SIMD and GPU optimisation much easier
[15:54:19] <merijn> spynxic: They are, if you look at stuff like BLAS and LAPACK you'll find lots of Fortran
[15:54:23] <pikapika> Yes
[15:54:28] <pikapika> matlab uses fortran libraries
[15:54:28] *** Joins: mrig (~mrig@user/mrig)
[15:54:45] <pikapika> so even if many math people use matlab today, they are internally using the fortran libs
[15:54:50] <merijn> Despite knowing nothing about matlab I'm 100% willing to bet it uses BLAS and LAPACK :p
[15:54:52] <pyzozord> merijn: what do you mean by "proper array"? (just curious)
[15:54:59] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[15:55:08] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 265 seconds)
[15:55:53] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:55:58] <spynxic> Are there established rules-of-practice when it comes to performing certain tasks within fortran..being such an aged language
[15:56:41] <merijn> pyzozord: In C, you can't pass arrays to functions, only pointers. The problem is that means you lose information (like size, dimensions, etc.) this leads to aliasing issues. Let's take a simple matrix multiplication function: "void matrix_multiply(int *a, int *b, int *c)" where you multiply a and b and store the result in c. It's hard/impossible to prove that a, b, and c do not overlap
[15:57:00] <merijn> pyzozord: If they overlap, that means you cannot reorder operations, which makes it hard to auto-vectorise things
[15:57:43] <merijn> pyzozord: In fortran, arrays are first class, so when you pass arrays to functions you know their dimensions and if two arrays overlap, etc. which means that fortran can more easily and more aggressively vectorise operation on arrays
[15:57:50] <pyzozord> merijn: oh that's interesting. Thanks. Yeah I've run into the passing/returning arrays in C problem recently too
[15:58:03] <pikapika> merijn, I think we should have some new keyword to indicate this fact
[15:58:06] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:58:14] <pikapika> losing length info is bs
[15:58:21] <pikapika> All arrays are pointers everywhere
[15:58:25] *** Joins: Leone (~Leo@45.72.238.153)
[15:58:28] <pikapika> they just bundle with some other data in other langs
[15:58:35] <pikapika> C prefers to just provide you the pointers
[15:58:37] <merijn> pikapika: You have "restrict" in C to say "these don't overlap", but then you rely on the programmer to not fuck it up :p
[15:58:51] <pikapika> merijn, of course by definition it should be programmer defined
[15:58:57] <pikapika> A compiler probably can't decide that
[15:58:59] *** Joins: Nact (~l@host-85-27-124-83.dynamic.voo.be)
[15:59:07] <pikapika> it falls into some kind of turing decidability problem in general I'd guess
[15:59:08] <merijn> pikapika: That depends on your language, that's the point
[15:59:22] <merijn> There's plenty of programming languages where it's easy for the compiler to prove they don't overlap
[15:59:54] <beaky> like rust
[16:00:12] <merijn> I think Rust *probably* can manage that via ownership
[16:00:16] <merijn> but not entirely sure
[16:00:21] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[16:00:48] <merijn> tbh, I just don't know enough Rust
[16:01:17] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[16:01:31] *** Quits: gggkmp (~gggkmp@221.219.70.176) (Ping timeout: 246 seconds)
[16:01:35] <pyzozord> merijn: what does it mean when "a, b and c overlap" in your example?
[16:02:07] <merijn> pyzozord: Let's take a simpler example of pairwise vector multiplication (because I am lazy and writing out matrix multiply is tedious)
[16:02:08] *** Quits: federico_it (~textual@151.51.82.235) (Ping timeout: 272 seconds)
[16:02:24] <GeDaMo> *A = [1,2,3,4,5,6]
[16:02:24] <GeDaMo> *B =       [4,5,6,7,8,9]
[16:02:41] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[16:02:55] <merijn> "void vector_multiply(int size, int *a, int *b, int *c) { for (int i = 0; i < n; i++) { c[i] = a[i] * b[i]; } }"
[16:02:55] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[16:03:44] <pyzozord> ooh so it's about "there is no way of telling that array b points to some element of array a"?
[16:03:59] <merijn> pyzozord: Now I have "int foo[15]; int bar[10];" and do "vector_multiply(bar, foo, &foo[5]);"
[16:04:03] <merijn> pyzozord: Right
[16:04:23] <merijn> pyzozord: And if that's the case, the compiler needs to make sure the results reflect that
[16:05:02] <merijn> because from the 5th loop on, you'll be using values you just wrote, instead of the original values
[16:05:16] <pyzozord> because the simd will get crazy because stuff is not aligned perfectly in line without cycles or gaps?
[16:05:21] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[16:05:28] <merijn> Whereas, say, a SIMD vectorised version would be able to it much faster and in parallel, but only if you don't overwrite your inputs
[16:05:54] <pyzozord> right, got it, thanks!
[16:06:08] <pyzozord> so that's what is called "aliasing"?
[16:06:15] <merijn> pyzozord: Well, say you have SIMD operation on SIMD vectors of size 8, then index 5 through 7 will use the *original* values in the SIMD version, instead of the overwritten new value
[16:06:34] *** Quits: death916 (~death916@user/death916) (Ping timeout: 272 seconds)
[16:06:41] <merijn> pyzozord: Aliasing in general means "two non-equal pointers pointing to the same bit of memory"
[16:06:49] <pyzozord> mrig: oh ok I see, so it won't freak out, but the results will be not what was intended
[16:06:55] <merijn> right
[16:07:20] <merijn> Well, the result might be what was intended, but the result wouldn't be what the C spec says it should be ;)
[16:08:04] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:08:12] <pyzozord> is that even possible for two different pointers to point to the same address? Aren't pointers just addresses?
[16:08:22] <pyzozord> sorry I know I am asking too many questions
[16:08:22] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:08:46] *** Joins: death916_ (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[16:08:47] <GeDaMo> int X; int *A = &X; int *B = A;
[16:08:55] *** Joins: gggpkm_ (~gggpkm@221.219.68.57)
[16:08:55] *** Joins: federico_it (~textual@151.51.82.235)
[16:08:59] <merijn> pyzozord: I meant "partial overlap" basically
[16:09:22] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Read error: Connection reset by peer)
[16:09:23] <merijn> pyzozord: If you have a pointer to something of size 16 and something of size 32, then they might not be equal, but the memory pointed at still overlaps
[16:09:25] <GeDaMo> int X[10]; int *A = X; int *B = &X[5];
[16:09:27] *** Joins: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk)
[16:09:27] *** Quits: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk) (Changing host)
[16:09:27] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:09:40] *** Quits: death916_ (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[16:09:40] *** Joins: death916_ (~death916@user/death916)
[16:09:50] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[16:09:59] *** Joins: rany (~rany@user/rany)
[16:10:12] <merijn> pyzozord: You could refer to two pointers have the exact same value as "aliased" too, but that's fairly trivial to check, for arrays, etc. it's less simple
[16:10:13] *** Joins: freakazoid333 (~freakazoi@72.168.176.32)
[16:11:04] <pikapika> everything comes at a cost
[16:11:08] <pikapika> fat pointers have their cost
[16:11:15] <pikapika> checking out of bounds on each index access has its cost
[16:12:11] <GeDaMo> https://en.wikipedia.org/wiki/Dope_vector
[16:12:54] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[16:14:19] <pikapika> merijn, nothing is free
[16:14:30] *** Joins: jamea (~jamea77@177.239.84.103)
[16:15:04] <GeDaMo> With proper arrays, the compiler can do some checks at compile time
[16:15:20] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[16:15:43] <GeDaMo> Whole array operations also remove some causes of errors
[16:15:51] *** Joins: alextee (~alextee@zrythm/alex)
[16:15:56] <pikapika> Yes but its quite costly everywhere else too
[16:16:12] <beaky> but no runtime cost
[16:16:17] <pikapika> I really think the best solution would be to have a C keyword which indicates that an array would not overlap with any other pointer
[16:16:32] <GeDaMo> Isn't that what restrict does?
[16:16:33] <beaky> the best solution would be to avoid c
[16:16:43] <pikapika> so compiler can optimize those cases, and we don't have to incur array indexing costs everywhere else
[16:17:38] *** Quits: dunkeln_ (~dunkeln@188.70.10.207) (Ping timeout: 252 seconds)
[16:18:22] <GeDaMo> https://en.cppreference.com/w/c/language/restrict
[16:18:59] <pikapika> beaky, C is the most balanced language
[16:19:14] *** Quits: federico_it (~textual@151.51.82.235) (Ping timeout: 272 seconds)
[16:19:18] *** Quits: jamea (~jamea77@177.239.84.103) (Ping timeout: 265 seconds)
[16:20:17] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[16:20:39] <pyzozord> ooh nice! TIL. I finally know what memory aliasing is really about. And I learned a new keyword
[16:21:47] <pyzozord> oh no my rubber ducky has fallen from all that excitement
[16:22:21] <pyzozord> I had to send a rescue mission under the desk
[16:22:32] <pyzozord> ok no more spam, thanks for help, and I go back to work
[16:22:43] <pikapika> pyzozord, tell him hi from me
[16:24:30] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[16:28:43] <merijn> you can statically guarantee arrays don't overlap without fat pointers or bounds checking access, though
[16:29:18] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:29:57] *** Quits: zeedo (~zeedo@cpc157903-grth13-2-0-cust152.16-4.cable.virginm.net) (Read error: Connection reset by peer)
[16:30:14] <pikapika> The only ways I can thinkl of are by heavily restricting pointers to the point they become like java references
[16:30:15] *** Joins: federico_it (~textual@151.51.82.235)
[16:30:23] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[16:31:39] <merijn> We were talking about arrays though, not pointers
[16:32:01] <pikapika> merijn, how will you do that
[16:32:03] <beaky> yes pointers are the wrong abstraction
[16:33:00] *** Joins: alextee (~alextee@zrythm/alex)
[16:33:24] <pikapika> beaky, pointers are reality
[16:33:43] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[16:33:57] <merijn> pikapika: There's several tricks I know in Haskell that'd let you enforce/guarantee non-overlap at runtime without any runtime cost, but those are pretty tricky to explain quickly. There's also things like rust's ownership and things like region typing
[16:34:04] <merijn> Pointers are an implementation detail
[16:34:24] <pikapika> Pointers are reality. asm people have to think in pointers all the time.
[16:34:41] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5) (Ping timeout: 256 seconds)
[16:34:42] <merijn> Assembler doesn't have pointers, it just has addresses
[16:34:49] <pikapika> Thats pointers
[16:34:51] <merijn> And tbh, addresses are far easier to think about that pointers
[16:34:59] <pikapika> ESI is literally called the stack pointer
[16:35:03] <merijn> pikapika: The C abstract machine definition of C11 disagrees with you
[16:35:16] <pikapika> What does it say?
[16:35:29] <merijn> C pointers are specified considerably differently from how addresses behave
[16:35:36] <pikapika> Idc about some obscure case. For all practical purposes pointer and address are one and the same
[16:35:46] <merijn> pikapika: For one it's undefined behaviour to access a pointer as "the wrong type"
[16:35:57] <pyzozord> I honestly think about pointers as addresses most of the time
[16:36:14] <merijn> pikapika: They're the same "for all practical purposes" if you ignore the C spec and include tons of undefined behaviour in your program
[16:36:17] *** Joins: zeedo (~zeedo@cpc157903-grth13-2-0-cust152.16-4.cable.virginm.net)
[16:36:25] *** Joins: ixil (~ixil@82.197.178.137)
[16:36:30] <merijn> pyzozord: Of course you do, C would be a 100x saner language if they were >.>
[16:36:45] <pikapika> I meant that asm addresses have all pointer properties, C pointers amy not have all address propertiews
[16:36:45] *** Joins: gggkmp_ (~gggkmp@221.219.77.87)
[16:36:53] *** gggpkm_ is now known as gggpkm
[16:36:56] <pikapika> And avoiding array overlap is trivial in C
[16:37:03] <merijn> Honestly, that's one of my pet peeves with C. If it was specified the way people *think* it is specified (i.e. pointers are addresses, etc.) then C would be much more predictable
[16:37:08] <pikapika> Its indicating it to the compiler thats the problem
[16:37:30] <pikapika> merijn, why should that be the case. struct internal layout isn't enforced
[16:37:38] <pikapika> so its fine for pointer cast to wrong type to be undefined
[16:37:38] *** Joins: Twipply (~Twipply@user/twipply)
[16:37:49] <pikapika> and casting function pointers is obviously ridiculous and meaningless
[16:37:59] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 252 seconds)
[16:38:08] <merijn> Meanwhile people do things like "double vec[10];" then "(int64_t*) vec" and access the cast pointer all the time, but it's UB
[16:38:10] <pikapika> Only the first member of a struct is guarenteed to start at the pointer
[16:38:16] *** Joins: anahat (~anahat@116.74.190.238)
[16:38:29] <merijn> pikapika: I see people type-punning pointers *all* the time
[16:38:38] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 265 seconds)
[16:38:47] <pikapika> merijn, its fine if they are just targeting x86 etc
[16:38:49] <merijn> Like casting doubles/floats to int values, etc.
[16:40:01] <merijn> pikapika: It's fine if you don't care about writing correct C. Which is equivalent to my argument that "people don't like C, they like what they *think* C is"
[16:40:10] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 240 seconds)
[16:40:18] <merijn> Which is reasonable, because the C that people imagine is usually a lot more sane than actual C
[16:40:47] <merijn> Which is another way of saying "C is a terrible language"
[16:41:02] <pikapika> merijn, those kinds of tricks are only used when they know the particular platform
[16:41:14] <merijn> pikapika: You say that
[16:41:38] <merijn> pikapika: Yet I see beginners copy&pasting broken garbage like this from stackoverflow in here every other day :)
[16:41:39] <pyzozord> merijn: I wouldn't agree that those two statements are equivalent
[16:41:45] *** Joins: pulse (~pulse@user/pulse)
[16:42:02] <pikapika> pyzozord, yeah its just a way of saying that C tries to be as portable as possible
[16:42:12] <pikapika> Whereas other languages just clamp restrictions and reduce their portability
[16:42:30] <pikapika> C is probably the most portable high level language
[16:42:35] <merijn> More restricted languages are *more* portable, because it is *easier* to know what your code does
[16:42:41] <pikapika> merijn, not at all
[16:42:53] <pikapika> Those languages are unportable to platforms with a different word size etc
[16:43:08] <pikapika> They can simulate a different word length but will be impractically inefficient
[16:43:08] <merijn> Why?
[16:43:23] <pikapika> Tell me how easy it will be to port java to an arduino
[16:43:29] <pikapika> 16 bit char, 32 bit int etc
[16:43:36] <pikapika> on a 8 bit processor
[16:43:49] <merijn> pikapika: So instead you should just write C where the word length is unspecified and you just kinda cross your fingers and hope it doesn't crash because the code is broken with different sizes :p
[16:43:55] <pyzozord> I just meant the "people imagine is usually a lot more sane than actual C" and "C is a terrible language". The former is much stronger and broader
[16:44:03] <pikapika> C has undefined behaviors precisely because these are behavior that differ platform to paltform
[16:44:35] <edgar-rft> merijn: according to that theory the *most* portable language does nothing at all, because that's the *easiest* to know
[16:44:39] <merijn> pikapika: Give me one good reason why the signedness of char should be implementation defined, but literally all other integral types default to signed?
[16:45:09] <pyzozord> edgar-rft: actually that kind of makes sense in some strict mathematical sense :D
[16:45:25] <pikapika> I don't know, may be the pdp had different ways of handling bytes
[16:45:27] <merijn> edgar-rft: My definition or portable requires a program to actually do the same thing on both architectures, not just "happen to compile, but having different runtime behaviour for the same inputs" :p
[16:45:36] *** Quits: pandakekok9 (~job@user/job) (Read error: Connection reset by peer)
[16:45:52] <pikapika> merijn, java is less portable than C
[16:46:06] <merijn> 100% guarantee you, that 99% of C is broken on our lab machine where "sizeof(int) == 1" :p
[16:46:09] <merijn> pikapika: Define portable
[16:46:19] <pikapika> Java doesn't run on most microcontrollers
[16:46:42] <pikapika> Java is very inefficient on platforms where the word sizes don't match with its primitive types
[16:46:43] <pikapika> etc
[16:47:06] <merijn> That's not a definition of portable. What actual metric do we use for portability? Number of machines it runs on? Number of machines it runs on *correctly*? Number of machines it compiles on? Number of machines that have an implementation of our language?
[16:47:21] <pikapika> Java is less portable than C on all of those metrics
[16:47:34] <pikapika> <pikapika> Java doesn't run on most microcontrollers
[16:47:37] <pikapika> Very definition of not portable
[16:47:45] <pikapika> I don't know what obscure definition you use
[16:47:54] <merijn> Because, sure, if we define portability as "number of machines you can compile it for", then C is very portable. If we include "runs correctly" then it's far less
[16:48:07] <pikapika> Correct code runs correctly everywhere
[16:48:10] <merijn> pikapika: Most microcontrollers require custom, non-standard C compilers too
[16:48:11] <pikapika> Of course
[16:48:20] <pikapika> You have to write specialized code for some platforms
[16:48:30] <pikapika> But the language isn't stopping you from writing correct code
[16:48:46] <pikapika> The problem with your code is strictly your problem that it assumes int to be of a specific size
[16:48:49] <merijn> I would argue that C *is* extremely good at stopping me from writing correct code
[16:49:02] <pikapika> I would say thats complete bs
[16:49:12] <merijn> In fact, I'm willing to claim that I have never written C code over 100 lines that didn't have at least 10 issues
[16:49:18] <merijn> And I'm very paranoid in how I write C
[16:49:26] <pikapika> Thats true for all languages
[16:49:30] <merijn> Disagree
[16:49:51] <MrMobius> merijn, what microcontroller has a non-standard C compiler? hardware specific stuff is usually handled by macros or pragmas and the compiler itself is standard
[16:49:59] *** Joins: Pickchea (~private@user/pickchea)
[16:50:12] *** Joins: pandakekok9 (~job@user/job)
[16:50:20] <merijn> I have written multiple libraries that were several thousand LOC in Haskell and (years ago) Java, where I feel pretty confident they have no issues
[16:50:21] <pikapika> MrMobius, yeah its such bullshit to claim that "C makes you write code that is wrong on some platforms"
[16:50:29] *** Joins: APic (apic@apic.name)
[16:50:38] <edgar-rft> again, the *most* portable language runs on *no* architecture, because that't lhe only set that includes *everything*
[16:50:50] <pikapika> (1) Java or Haskell or whatever your baby is, usually won't even exist on those platforms where thats an issue and (2) you have to write custom code for such a platform anyways
[16:50:53] <pikapika> Its a moot point
[16:50:55] <pikapika> edgar-rft, exactly
[16:51:23] <merijn> pikapika: Writing correct code on 1 or 2 platforms still means I have correct code on more platforms than the C code that's correct on 0 :p
[16:51:24] <pikapika> merijn, your confidence is completely false
[16:51:28] <pikapika> Haskell is no magic
[16:51:34] <merijn> Of course Haskell isn't magic
[16:51:41] <pikapika> Haskell is very unpredictable due to lazy eval in fact
[16:51:42] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[16:51:42] <MrMobius> pikapika, i think the only argument is that something like int is different sizes on different systems but that's a fixable problem
[16:51:55] <pikapika> merijn, how is it a language fault and not a programmer fault?
[16:52:07] <pikapika> What code is wrong on one platform and correct on another that isn't a programmer fault?
[16:52:18] <beaky> 'fault' in the sense of 'there are better tools for the job like rust'
[16:52:21] <merijn> pikapika: Because the language spec is complicated to the point that there's maybe 5 people on the planet that correctly know the entire spec of the top of their head
[16:52:39] <pikapika> merijn, you still haven't given me concrete examples
[16:52:52] <pikapika> Most C libraries and software run fine on many platforms and oses
[16:52:57] <pikapika> Most the unix userspace for example
[16:52:58] *** Joins: alextee (~alextee@zrythm/alex)
[16:53:08] *** Quits: scabootssca_ (~scabby@user/scabootssca) (Ping timeout: 265 seconds)
[16:53:09] <beaky> they run fine after decades of hard work to get them to run fine
[16:53:09] <pikapika> Pick any linux or any bsd
[16:53:22] <pikapika> beaky, and you'd have to exert the same amount of work with any language
[16:53:29] <pikapika> No language will help you
[16:53:34] *** Quits: gggkmp_ (~gggkmp@221.219.77.87) (Ping timeout: 258 seconds)
[16:53:36] <beaky> not necessarily see for instance forth
[16:53:51] <pikapika> No language prevents you from writing bugs
[16:53:51] <edgar-rft> integers are of infinite size, a language that restricts integers to a specific range doesn't implement integers correctly and therefore produces *buggy* code
[16:54:10] <pikapika> The only language which does is as edgar-rft said, the most trivial one which does nothing and returns 0
[16:54:13] <pulse> https://i.imgur.com/Kv211gZ.jpg [insert least favorite language]
[16:54:53] <pikapika> merijn, give me concret examples
[16:55:34] <pikapika> Note how hes suddenly quiet now
[16:55:41] <bjs> It's very hard to write correct C code according to the spec exactly,  basically near impossible. But that doesn't mean the program you produce is necessarily "wrong"
[16:56:22] <beaky> just easy to get wrong and hard to get assurance you've got it right
[16:56:38] <merijn> pikapika: Because I realised I really don't care enough about "winning" this discussion and I need to get back to work
[16:56:52] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[16:56:55] <merijn> pikapika: You win, you're right, C is perfect, have fun
[16:56:58] <beaky> tho there is frama c
[16:57:01] <pikapika> Because you were finally caught and don't have any arguments or examples
[16:57:01] *** Quits: SoF (~skius@user/skius) (Quit: Ping timeout (120 seconds))
[16:57:09] <pyzozord> I think the language is way less specified than people think. A lot of it is UB. Like I think a = a++ or something like that
[16:57:18] *** Joins: SoF (~skius@user/skius)
[16:57:19] <pyzozord> can't come up with any UB on demand though
[16:57:20] <merijn> pikapika: I don't have any example now, no and I don't care enough to think off one
[16:57:30] <pikapika> pyzozord, equals is a sequence point
[16:57:30] <bjs> pyzozord: okay but UB isn't unspecified though
[16:57:53] <edgar-rft> no language provides protection against some idiot switching off the computer :-)
[16:57:58] <merijn> pyzozord: "foo(a++, a++);" there you go, unspecified
[16:58:13] <pyzozord> bjs: from what I could see in the standard specification a lot of it is detaily describing UB cases
[16:58:14] *** Quits: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net) (Ping timeout: 252 seconds)
[16:58:24] <pikapika> merijn, of course if you do stupid stuff you should expect stupid results
[16:58:25] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[16:58:27] <merijn> Or really just "int a = 5; int b = a++ + a++;"
[16:58:29] <bjs> pyzozord: yes but there's a difference between the specification saying anything can happen, and it being unspecified
[16:58:37] <pikapika> Again, stupid stuff
[16:58:59] <pyzozord> bjs: oh you are talking about unspecified unspecified behavior? ;)
[16:59:08] <merijn> pikapika: No, you're right. C is the perfect language and we should never use anything else. It's the pinnacle of CS achievement and there's literally 0 issues
[16:59:14] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[16:59:15] <bjs> pyzozord: the U in UB does not mean "unspecified" it means "undefined"
[16:59:16] <pikapika> Never said that
[16:59:24] <pikapika> On the contrary you are the one claiming haskell is perfection
[16:59:24] <merijn> In fact, we should abandon any and all efforts to invent anything better
[16:59:27] <pyzozord> bjs: oh true, sorry
[16:59:27] *** Joins: brabrax (~brabrax@user/brabrax)
[16:59:38] <merijn> At what point did I claim Haskell is perfection?
[16:59:48] <pikapika> Tell me how your haskell compiler will find out the bug in code equivalent to subtract(x,y) => x+y
[16:59:57] <beaky> haskell uses :: for type ascription it cant be the perfect language
[17:00:00] <bjs> pyzozord: as in, the spec tells you what things are UB and says what programs with UB can do (it happens to be "anything")
[17:00:04] <beaky> when it should use the single colon : instead
[17:00:09] <bjs> beaky: clearly cons is more important than types
[17:00:16] <merijn> bjs: You know what's really fun and mot people get wrong?
[17:00:23] <MrMobius> merijn, https://en.wikipedia.org/wiki/Straw_man
[17:00:32] <bjs> merijn: writing C? :D
[17:00:51] <merijn> bjs: Most people think that UB means that "when you program triggers UB, the behaviour afterwards is unspecfied"
[17:00:58] <pikapika> I am not saying we should abandon search for better languages.
[17:01:00] <bjs> merijn: yes that is a common misunderstanding
[17:01:04] *** Quits: inky (~inky@178.78.142.0) (Ping timeout: 252 seconds)
[17:01:10] <pikapika> I am saying most efforts to "replace C" fall flat
[17:01:12] <merijn> bjs: Whereas the spec says that triggerig UB makes the entire behaviour *leading up to the UB* also unspecified
[17:01:21] <pyzozord> I'd personally argue with all it's UB is still less to handle then C++ (which almost strictly a superset)
[17:01:23] <bjs> merijn: well really it just means the entire program is UB
[17:01:27] <pikapika> C++ is the only one which actually made legit imrpovements
[17:01:28] <merijn> bjs: Right
[17:01:42] <bjs> It's not really about partial executions once there's UB because compiler optimizations exist
[17:01:47] <merijn> pyzozord: C++ is a mad clusterfuck of a lgnaguage :)
[17:02:05] <pikapika> Still better than Haskell
[17:02:11] <bjs> what's wrong with Haskell?
[17:02:13] <merijn> bjs: Right, but many people don't realise that and why UB is so pernicious
[17:02:16] <pikapika> It actually lets you control where the mallocs and free (or new and delete) occur
[17:02:35] <pikapika> bjs, lazy eval and no control over the memory layout or execution abstractions
[17:02:37] <merijn> bjs: I said something positive about it and therefore being mean about it will make me sad, I think
[17:02:52] <bjs> pikapika: "execution abstractions"?  lazy evaluation is a complicated topic and I've seen good and bad
[17:02:54] <pikapika> merijn, on the contrary thats what you are doing
[17:03:03] <pikapika> You are seeming to think I consider C perfection
[17:03:30] <beaky> of course not ever since we now have rust
[17:03:35] <bjs> as for memory layout, that's a nuanced topic.  In some sense C or C++ don't give you much better, malloc/free is just as much an illusion as everything else
[17:03:37] <W> pikapika, merijn how about you both stop engaging, this is not constructive
[17:03:38] <bjs> it's all a mess
[17:03:39] *** Joins: inky (~inky@45.143.205.154)
[17:04:05] <pyzozord> https://i.redd.it/8slxbt9gjnr31.jpg
[17:05:23] <pyzozord> bjs: I do think a discussion about weakenses of languages is very informative (at least forme)
[17:05:43] <beaky> yes next lets discuss the weaknesses of python
[17:05:54] <pulse> let's discuss the hallucinogenic properties of javascript
[17:05:57] <bjs> pyzozord: yes, programming languages are tools. Some tools are nice and new and shiny and have lots of safety features. Some are really sharp and awkward. Not all tools are designed for all jobs.
[17:06:00] <pyzozord> bjs: I tend to agree it's a mess, but that's not reason to give up :)
[17:06:20] <bjs> pyzozord: Nobody is giving up, that's why things like Rust exists, and why existing languages get extensions and updates
[17:06:21] <pyzozord> bjs: yeah!
[17:06:32] *** Quits: mmfood (~mmfood@45.91.21.59) (Quit: Lost terminal)
[17:06:36] <bjs> beaky: who even knows where to begin :)
[17:06:51] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:06:55] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[17:06:56] <pyzozord> bjs: that last sentence might have been more a sentence to myself really :D
[17:07:20] <pikapika> bjs, but the fact you can allocate a huge pool and then manage it yourself is a powerful thing
[17:08:04] <pikapika> The C haters all have big words to say. They have yet to produce an operating system and ecosystem of tools for it.
[17:08:10] <pikapika> Words are cheap
[17:08:42] <bjs> C is very old and works good for some cases.  It's odd when people try be "fans" of a language, they are just tools.
[17:08:53] <W> pikapika, calling people haters is not very friendly
[17:09:07] <bjs> C is an old tool, but it works.  Newer tools like rust will start to eat some (but not all) of the space that people use C for today
[17:09:14] *** Quits: gggpkm (~gggpkm@221.219.68.57) (Ping timeout: 252 seconds)
[17:09:16] <pikapika> W thats the appropriate word for those people
[17:09:17] <bjs> and other languages will do so as well as time goes on
[17:09:20] *** Quits: \o` (~\o`@user/o/x-1005988) (Quit: Client closed)
[17:09:40] <mrig> calling people tools is far far worse.
[17:09:42] <pikapika> I am still awaking Haskell fanatics to write an os and an ecosystem of tools for it
[17:09:47] *** Joins: jamea (~jamea77@187.185.190.209)
[17:09:48] <pikapika> *awaiting
[17:09:48] <mrig> pulse: oh wow man, I'm like, gone all fullstack in'it; See how it is all one, with one uniting language front and back?
[17:09:56] <mrig> :D
[17:10:08] <pulse> mrig, sounds about right
[17:10:14] <pikapika> I will concede slightly to Rust for at least attempting (redox os)
[17:10:15] <pulse> can someone explain to me how JS gets close to C speed
[17:10:15] <W> pikapika, you haven't even pointed out any specific people; and if you have a category by definition, may I suggest that either the category might not actually exist, or it is best addressed where you actually know there are some such people.
[17:10:32] <mrig> pulse: slight of hand :)
[17:10:48] <pulse> sleight*
[17:10:57] <pulse> <- grammar barbarian
[17:10:57] <pyzozord> bjs: I think being a fan is ok, healthy fans are aware of the shortcomings of their idol. The problem is with zelots and dogma
[17:10:57] <pikapika> What specific examples do I give? "C hate" has a huge overlap with "Haskell love" or "Rust love" etc
[17:11:05] <mrig> and being compiled into c code before then being compiled as c code.
[17:11:09] <mrig> or c++
[17:11:10] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 246 seconds)
[17:11:20] <pikapika> pulse, jit
[17:11:32] <pikapika> In theory jit can be faster than purely compile time optimizations
[17:11:38] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:11:39] <bjs> ahead-of-time*
[17:11:43] <pyzozord> bjs: although I used word "idol" which is I guess wrong in this context but you know fan's "fanee"
[17:11:59] <pulse> pikapika, it's various engine level optimizations too, JIT by itself isnt' fast
[17:12:11] <bjs> pulse: Yeah JS's JIT is able to make generally unsafe assumptions to make fast paths even faster
[17:12:13] <pulse> like smart string handling etc
[17:12:14] <pikapika> Of course, its part of the reasons
[17:12:38] <bjs> pulse: e.g. if you have `x+y` it's able to detect that x and y are ints and just replace the function with the native add instruction or whatever.
[17:12:57] <pulse> yeah and if you have 'blah' it's able to use that as reference and not a string of characters
[17:13:01] <pulse> which still blows my mind
[17:13:26] <pulse> you'd expect a function like drawLine(0, 0, 250, 250, 'red') would feed the function with a string
[17:13:34] <pulse> but it's a ref so it's optimal
[17:13:41] <pulse> mind blown
[17:14:15] <pikapika> isn't that just the naive implementation
[17:14:21] <pikapika> why would you copy strings and not just send their pointers
[17:14:30] <pikapika> whenever it is practicable
[17:14:56] <arahael> Man, you know it's getting late when you start typo'ing "func" with a certain four-letter f-word instead.
[17:14:57] <pulse> from the programmer's pov you wouldn't expect such things unless you knew how it works
[17:15:11] <pulse> same as you wouldn't expect RVO in C++ unless you knew about it
[17:15:42] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:16:15] <pulse> JS really blows my mind, even more than C++
[17:16:33] <mrig> arahael: I hope that it did not compile! :)
[17:16:39] <pulse> it's funky as a language but the implementation is some next level wizardry
[17:16:47] <arahael> mrig: The compiler swore at me.
[17:17:09] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:17:28] <sandman13> So...
[17:17:39] <pyzozord> pulse: I've discovered that python is very similar to js. They seem to have a similar underlaying set of rules, and just different syntaxes and higher level constructs on top
[17:17:59] <sandman13> I am checking for my browser privacy using EFF's tool but I am confused because of the result
[17:18:00] <arahael> mrig: (Actually it didn't, Swift's error messages are a little naive - didn't even point out the typoed word)
[17:18:04] <pulse> pyzozord, it's slower in general
[17:18:12] <pyzozord> pulse: both think everything is an object, both let you modify all objects (thus everything) during execution
[17:18:13] <pulse> sometimes much slower
[17:18:19] <mrig> arahael: oh, that is a little lax of them :|
[17:18:45] <arahael> mrig: You get used to it. :|
[17:18:48] <pulse> Python is great for the datascience ecosystem and algorithm study, idk if i'd use it outside of that
[17:18:51] <mrig> You could swear at the compiler for not using appropriate language!
[17:19:00] <mrig> :|
[17:19:10] <pyzozord> pulse: that's just because they have different goals, javascript's goal is to be as fast as possible (or rather google's v8's team goal), and python goals (or rather cpythons) is to be princpile implementaiton - clarity and simplicity
[17:19:15] <bjs> pulse: people use Python for a huge range of things,  from webservers to little scripts etc
[17:19:20] *** gggkmp_ is now known as gggkmp
[17:19:25] <pulse> pyzozord, sounds about right
[17:19:35] <pulse> the thing i love about python is the slicing syntax
[17:19:49] * arahael gets the sword operator out.
[17:20:04] <sandman13> What is browser fingerprinting? and should I strive for randomized fingerprint or have unique fingerprint or general fingerprint?
[17:20:07] <pulse> arahael, :D
[17:20:11] <pyzozord> slices are cool, but list comprehension must be the no. 1 feature for me
[17:20:29] <mrig> seems that oftentimes the issue with the 'sharper' languages is that people do not know what their own code does, tricky problem to solve because programming is hard.
[17:20:40] <pulse> haven't used python in a bit to be honest
[17:20:47] <mrig> pulse love the slices in go to, really nice abstraction.
[17:20:48] <pulse> i never even tried python3
[17:21:01] <arahael> sandman13: Browser fingerprinting is the ability for the website to identify which individual you are. Not *who* you are, just which specific visitor.
[17:21:02] <pulse> i implemented some stuff in python2 though
[17:21:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[17:21:23] <pulse> how about Ruby? no one ever talks about Ruby
[17:21:31] *** Joins: gareppa (~gareppa@user/gareppa)
[17:21:43] <pulse> not that i know anything about Ruby, seems fun though
[17:21:48] <pikapika> pyzozord, python and js are very different
[17:21:48] <arahael> sandman13: If everybody had their own static ipv4 address, and never changed it, then that would be an effective identifier for fingerprinting purposes.
[17:21:50] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[17:21:53] <pikapika> Python is more like C
[17:22:18] <pyzozord> pikapika: we might be talking about different "dimentions" of the features
[17:22:38] <pikapika> Js is async by default
[17:22:43] <pikapika> Completely different from python
[17:22:49] <pyzozord> pikapika: in some senses they are very different, in others they are very similar
[17:22:53] <pikapika> or almost any other language
[17:23:18] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[17:23:41] <sandman13> So I am supposed to have either randomized or general fingerprint
[17:23:51] <InPhase> pikapika: The way C ends up "portable" is when people write code N times for N platforms and split it up by a bunch of ifdefs.  That's not really portable so much as just the language supporting conditional statements on what will compile.
[17:24:16] <pikapika> InPhase, thats much more portable that other languages
[17:24:24] <pikapika> The very fact that a compiler exists there
[17:24:48] *** Joins: scabby (~scabby@user/scabootssca)
[17:24:49] <InPhase> pikapika: So the key distinction is that the language is not portable, but codebases can be made portable.
[17:24:50] <pikapika> The only cases you have to do close to a full rewrite are platforms so exotic where a haskell or js or java compiler simply doesn't even exist
[17:25:23] <pikapika> And normal C code is perfectly portable across common archs like x86 and amd without anything remotely close to a rewrite
[17:25:32] <sandman13> InPhase: It reminds me of mongoose. They used function pointers to make sure same function is called on different platforms.
[17:25:50] <InPhase> pikapika: A portable language is one which runs as-is without any significant special accommodations for platform.  On that metric, many languages are more portable than C, even though it's possible to write fairly portable C code.
[17:26:17] <pikapika> Portability is meaningless when the language only exists on a very few platforms
[17:26:25] <W> sandman13, ultimately, fingerprinting is hard to avoid. What you want is to blend in with the masses, have a fingerprint a lot of other people have. But you can't control other people, only yourself. So the best you can do is aim for randomized, where you could get grouped into a "privacy conscious visitors" category by websites
[17:27:17] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:27:36] <W> pikapika, ultimately, "linux, windows and mac" covers almost all platforms - as measured by users
[17:27:49] <sandman13> W: I am tyring to setup qutebrowser. I ran tests on it without any modifications of my own and it shows unique fingerprint :(
[17:27:52] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:29:05] <pikapika> But that doesn't address the argument. By any argument C is strictly more portable than say Java. Because any time there is a jvm, its written in C (or maybe C++)
[17:29:09] <recursiveNode> we are information workers. What training should I take if I'm getting overwhelmed when searching for an answer to a problem, if I want to search effectively without spending too much time and without reading too much information?
[17:29:19] <pikapika> And if a C++ compiler exists, there is no reason a C compiler can't exist for that platform
[17:29:42] <arahael> pikapika: I'd say it's far easier to be accidentally portable with java than C++.
[17:29:48] <W> sandman13, there's two possible reasons; the browser is set up for privacy by default and feeds garbage to typical things used for fingerprinting, or you're the only one running that combination of browser, operating system, etc
[17:29:57] <pikapika> What do you mean accidentally portable?
[17:30:05] <recursiveNode> when you don't know how to code something, do you search on Google, or elsewhere (where)?
[17:30:07] <InPhase> pikapika: I think you're stuck on one definition of portable, and missing the other more common one.
[17:30:15] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[17:30:17] <W> there are many times I have wanted to run some Linux software that shouldn't have any obvious links to the operating system it is aimed at, but yet which no one has produced windows builds for it, and their webpage is like "we MIGHT let you be the maintainer of windows builds"
[17:30:21] <InPhase> pikapika: "Accidentally portable" means you write code, and without planning for it, it also runs on other platforms.
[17:30:25] <pikapika> De facto almost all other languages are *implemented* in C
[17:30:32] <W> if the software is in Java, I know that it is trivial to run it on Windows
[17:30:37] <arahael> pikapika: Hire a random java dude. Hire a random C++ dude.  Get them both to write something for linux.  Then suddenly decide to run the result on windows instead, without tellign them.
[17:30:38] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[17:30:45] <pikapika> By any measure C is strictly more portable than Java or any random java code
[17:30:53] <arahael> pikapika: I almost guarantee you that the C++ product won't even build.
[17:31:15] <InPhase> pikapika: This doesn't happen with C very often, unless it's trivial C code.  With C you typically have to plan carefully for every platform you want to target, and manually write accommodations for every target.  A user coming along with a platform you didn't develop for has almost no hope of ever running your program.
[17:31:25] <xerxes> pikapika: that's patently false.
[17:31:26] <pikapika> arahael, bs. Unless your code touches graphics or obscure concurrency shit, it should be almost portable by default.
[17:31:27] <InPhase> pikapika: Consequently, most C code runs on very few platforms.
[17:31:28] <W> if it's in C, I can presume it takes effort to get running on the OS, either building it yourself, running some kind of emulated Linux subsystem or similar, or digging up someone somewhere on the internet distributing unofficial windows builds
[17:31:47] <InPhase> pikapika: Typical Java programs end up running on MORE platforms than typical C programs as a result.
[17:31:53] <pikapika> InPhase, UNIX userspace runs "on very few platforms"?
[17:31:58] <arahael> pikapika: You've never experienced the pain of switching a large enterprise C++ project to a different architecture, then!
[17:32:04] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[17:32:08] <InPhase> pikapika: It runs only on the ones it's planned for.
[17:32:08] <sandman13> https://github.com/jwang11/mongoose/blob/063b26fece68985e332d98ed70a618817a0d1dc3/mongoose.c#L344
[17:32:17] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[17:32:20] *** gggkmp_ is now known as gggkmp
[17:32:22] <Thedarkb-Desktop> If you want to stick to the standard library, it will run on almost anything as long as you don't engage in any funny business.
[17:32:34] <pikapika> Thedarkb-Desktop, exactly
[17:32:41] <arahael> Thedarkb-Desktop: Does the C standard include filesystems yet?
[17:32:42] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Ping timeout: 272 seconds)
[17:33:01] <InPhase> pikapika: When people want to take some GNU program and put it on another platform, they usually need to manually port it.  It's not portable by default until they change it to MAKE it portable.
[17:33:28] <Thedarkb-Desktop> No
[17:33:29] <pikapika> So will a java program if it uses anything other than built in libs (and even then graphics and concurrency will need to be tuned)
[17:33:34] <sandman13> #ifdef __WIN32 do something #endif
[17:33:34] <InPhase> pikapika: Python code on the other hand tends to run on every platform with a platform interpreter, out of the box, no changes needed.
[17:33:44] <InPhase> s/platform interpreter/python interpreter/
[17:33:52] <arahael> sandman13: Why would the C++ developer add a __WIN32 if they aren't intending to run it on windows?
[17:33:54] <pikapika> InPhase, thats just a library problem not a language problem
[17:34:01] <InPhase> pikapika: It's a language problem.
[17:34:08] <pikapika> The hard work of writing libraries for all these platforms has already been done by the stdlib
[17:34:12] *** Joins: arcatech (~arcatech@user/arcatech)
[17:34:17] <W> pikapika, no, most random Java software I download will just work out of the box on Windows
[17:34:18] <pikapika> A C program using the stdlib is trivially much more portable
[17:34:21] <W> (and Linux)
[17:34:25] <InPhase> pikapika: The C language does not contain enough built-ins to account for portable code that does real world work.
[17:34:29] <pulse> the reason people use SDL2 is it abstracts away all the portable mess so you get to use the same API on any system. if you were to write all that yourself, it would be very painful to make it cross platform
[17:34:30] <arahael> pikapika: Then they did an astonishingly crap job.  Seriously, I suggest you take a look at Go, they have done a far better job at this.
[17:34:35] <sandman13> arahael: huh? we are discussing about making something cross-platform no?
[17:34:38] <W> in fact, there's no recompiling needed, because it's distributed as bytecode
[17:34:41] <arahael> sandman13: Not quite.
[17:34:43] <pulse> C code isn't trivially portable
[17:34:53] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[17:34:55] <pikapika> InPhase, wrong
[17:34:55] <arahael> sandman13: We're discussing whether C code, in and of itself, is inherently portable.
[17:35:02] <pikapika> If that were the case Python won't work
[17:35:10] <pikapika> Because its cpython
[17:35:12] <bjs> It's portable because of the huge amount of work into toolchains on all the systems you can port it to.
[17:35:12] <arahael> pikapika: Python has had enormous effort in portability.
[17:35:18] <pikapika> arahael, exactly
[17:35:18] <sandman13> oh. I think I misread it arahael :)
[17:35:22] <pikapika> Its a library issue
[17:35:24] <InPhase> pikapika: Cpython has been manually ported to other platforms.
[17:35:27] <pulse> it's not the language that makes portability hard, it's the platform and its components
[17:35:31] <pikapika> InPhase, precisely
[17:35:36] <bjs> pikapika: it has to have those efforts because the C code itself is not automatically portable.
[17:35:40] <pikapika> Portability was very costly for them
[17:35:42] <InPhase> pikapika: I understand your argument, but do you at least understand the huge importance of the other argument that we're making?
[17:36:05] <InPhase> pikapika: That portability was costly because of limitations in C...
[17:36:09] <W> pulse, not sure how that's relevant; you have existing platforms and existing languages to pick from. Blame solves no problems
[17:36:18] <pikapika> InPhase, portability wasn't costly because of C
[17:36:19] <InPhase> pikapika: Because C code is not easy to port.
[17:36:25] <pikapika> It was costly only because C happened to be the low level language
[17:36:28] <InPhase> pikapika: You just said it was costly.
[17:36:30] *** Quits: inky (~inky@45.143.205.154) (Ping timeout: 272 seconds)
[17:36:34] <bjs> pikapika: it was because of the lack of good portable libraries
[17:36:34] <pikapika> If Java is so portable port this Swing app to Android for me
[17:36:45] <bjs> CPython has a big case split on using different libraries for different platforms
[17:36:45] <arahael> pikapika: Android doesn't run Java. :)
[17:36:46] <pikapika> Suddenly you have to write a library that simulates Swing on android
[17:36:53] <bjs> esp. for non-standard-linux
[17:36:59] <pikapika> Thats because Java happened to be the low level layer in this case
[17:37:00] <W> android, of course, is one of those platforms for which there is no Java
[17:37:05] <pikapika> Some language will always have to exist in the low level
[17:37:08] <pulse> W, my point is if you write java all (most) of the platform-specific spaghetti is abstracted away for you so you (for the most part) write the same exact code and have it work on multiple platforms
[17:37:18] <pikapika> pulse, its not a language problem at all
[17:37:24] <pulse> in C you have to do all that manually, which includes thorough understanding of the platform(s) you're targeting
[17:37:25] <arahael> pikapika: Android happens to have a language that looks like Java, *almost* compiles to Java byte code, but doesn't support the full set and is explicitly not Java.
[17:37:26] <pikapika> Any language that the os happens to be written in will be low level
[17:37:31] <pikapika> and will be where all the differences are
[17:37:54] <bjs> CPython isn't a very low level program, it's very architecture agnostic in general
[17:38:18] <pulse> opening a GUI window on Windows takes completely different code to doing the same on X server
[17:38:18] <bjs> and OSes are *so* low level that you cannot actually implement an OS in pure C
[17:38:20] <pikapika> arahael, that doesn't matter. If things like java.lang can run there
[17:38:24] <pikapika> then why shouldn't Swing?
[17:38:34] <W> because google hasn't coded it
[17:38:37] <pikapika> That swing doesn't is precisely because Java happens to be the low level os api language there
[17:38:39] <Thedarkb-Desktop> Unless you're on a platform where everything is memory mapped.
[17:38:52] <arahael> pikapika: Given enough work, anything can be ported to anything.
[17:38:53] <pikapika> InPhase, your argument is complete bs
[17:38:55] <W> Java on android isn't Java, it isn't what Oracle makes, or what the OpenJDK people make
[17:38:59] <pikapika> There isn't anything in C that makes it non-portable
[17:39:06] <pikapika> Its only so because most oses are written in C
[17:39:10] <arahael> pikapika: Heck, I run x86 code on my laptop without virtualisation. I'm not running an x86 laptop!
[17:39:10] <pikapika> All os apis are different
[17:39:20] <pikapika> Any language used would have the same effect
[17:39:21] <arahael> pikapika: x86 code has effectively been "ported" to my laptop.
[17:39:26] <pikapika> Some layer always has to be that layer
[17:39:31] <W> pikapika, no, languages can abstract over the OS apis
[17:39:51] <pikapika> W and thats because they aren't the os layer themselves
[17:40:03] <W> Python code I download almost always works fine on Windows. The exception is if it interfaces with any C code.
[17:40:22] <arahael> W: And that's generally an explicit decision.
[17:40:28] <pikapika> If Windows and Mac happened to have their apis written in Java, you won't claim Java has inherently unportable properties just because Java code against one won't run on the other
[17:40:39] <pulse> practically speaking, it's hard to write portable C code. not because of the language, but because you have to include several implementations that do the same thing, and do it all manually, which takes time and effort
[17:40:43] <pulse> hence, C#, Java, and the likes
[17:40:44] <pikapika> InPhase
[17:40:46] <sandman13> So, the entire fuss is about who makes it portable? Language developers themselves or those who write the libraries?
[17:40:53] <pikapika> sandman13, exactly
[17:40:55] <pikapika> Its such bullshit
[17:41:02] <W> pikapika, if the operating system APIs were written in Java, it would be _trivial_ to abstract over them
[17:41:02] *** Quits: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (Read error: Connection reset by peer)
[17:41:11] <pikapika> W no it won't
[17:41:17] <pikapika> Both oses have different apis
[17:41:34] <W> almost any higher level language would be, they make things very much more explicit and clear
[17:41:43] <pikapika> Show me how using java would make a WindowProcedure run in mac
[17:41:57] <pikapika> W C# is high level
[17:42:01] <pikapika> A lot of ms native coding is done in C#
[17:42:09] <W> What's a "WindowProcedure"?
[17:42:10] <pikapika> Tell me how a windows exe is now portable to mac
[17:42:14] <arahael> pikapika: The vast majority of C# is in .NET Framework 4, though, which is not portable.
[17:42:18] <pikapika> W ha amazing
[17:42:27] <pikapika> No wonder you think all platforms are the same
[17:42:54] <arahael> pikapika: W knows very clearly what a WindowProcedure is.  He's asking you to think in terms of a Java developer.
[17:43:09] <W> pikapika, you are saying that if mac and linux had C# APIs instead of C ones, they wouldn't be much cleaner and easy to use?
[17:43:09] <pikapika> The tier of argument you are making is that "any api should be equivalent to any other api"
[17:43:22] <bjs> pikapika: it seems whether the language is high or low level doesn't really affect whether the programs written in that language are portable or not between systems
[17:43:23] <W> that's what you were stipulating, after all
[17:43:25] <mrig> go's portability solutions are pretty cool, love that it has its own portable asm.
[17:43:32] <pikapika> W portability would still be a problem. And you won't be claiming C# is unportable because the low level os api happens to be written in it
[17:43:33] <bjs> it's entirely dependent on how those systems are setup,  and the toolchains
[17:43:37] <W> pikapika, come now, argue in good faith, I said no such thing
[17:43:38] <InPhase> pikapika: Do you not see the added portability that comes from someone writing Python on Windows, and I run it on Linux without the implementer knowing anything about Linux nor ever having tested it on Linux, but I still expect it to run flawlessly and it does?
[17:43:47] <mrig> that then translates to the specific machine.
[17:43:51] <InPhase> pikapika: This is an important feature of language portability.
[17:44:00] <pikapika> InPhase, and that isn't due to it not being C
[17:44:05] <W> pikapika, I didn't claim C was unportable because the low level os api happens to be written in it
[17:44:06] <InPhase> pikapika: It really is.
[17:44:15] <pikapika> Some language will always be the one the os apis happen to be written in
[17:44:24] <pikapika> And some other library or language will have to write portability layers on top of it
[17:44:24] <InPhase> pikapika: In C you can only do that if you stick to trivially simple things found in K&R.
[17:44:25] <W> pikapika, that was your claim, if I understood you right, though you now have opportunity to clarify if that is not what you meant
[17:44:37] <pikapika> W that wasn't my claim, thats what some others here are claiming
[17:44:50] <InPhase> pikapika: In Python you can count on portability with almost all programs.
[17:44:56] *** Joins: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net)
[17:44:58] <W> are these other people here only hypothetical?
[17:45:08] <InPhase> pikapika: And this is hugely different, both for users and for programmers.
[17:45:09] <pikapika> InPhase, thats only because python devs wrote the portability layer painstakingly
[17:45:13] <pikapika> python devs as in the language devs
[17:45:21] <InPhase> pikapika: Yes!  They made the language portable!
[17:45:27] <arahael> pikapika: What that means is that *python* is the portable language.
[17:45:28] <pikapika> If your os api happened to be in java or js instead, they'd have to exert the same effort
[17:45:33] <pikapika> C is irrelevant to this
[17:45:47] <W> sure, but does that matter? They did the work
[17:46:01] <InPhase> pikapika: If C implements a more featureful standard library with painstaking efforts to make it run on all platforms, then C would become a portable language.
[17:46:04] <pikapika> W InPhase was the one claiming C had some magical property by which its impossible to code portably
[17:46:15] <pikapika> When clearly the difference was simply on the tier of writing some libraries on top of it
[17:46:18] <W> if I didn't want to code OS-dependent code in Java or js or whatever, I would be grateful to those that abstracted over it too, whether it be language maintainers or someone else
[17:46:29] <W> pikapika, I don't think InPhase did that at all
[17:46:33] <bjs> nobody is claiming magic in either way,  it's purely an engineering decision where to place effort in designing the language and ecosystem
[17:46:47] <pikapika> Some language will always be thel owest level os api language
[17:46:54] <mrig> bjs: absolutely, it should be a choice.
[17:46:56] <bjs> again the low levelness seems irrelevant
[17:47:00] <W> this is true, even if it's just hand editing the binaries
[17:47:14] <pikapika> And therein, each platform will always be different and you would have to write a portability layer on top
[17:47:18] <bjs> because the fact the OS is implemented is C is not relevant to *your* C programs because you do not interact with the OS's C code because you do not have privilege to even call it.
[17:47:26] <InPhase> pikapika: I wrote mostly C code for a decade.  Typically nothing other than trivial programs ever ran on any platform other than what I explicitly developed it for, or manually cross-developed for.  And I'm sure that's the shared experience of almost every C programmer.
[17:47:29] <W> but this doesn't really matter, does it? We have real platforms and real languages to choose from that run on subsets of these platforms easily and conveniently
[17:47:53] <W> Java has been mentioned, Python, you mentioned Javascript yourself
[17:48:15] <W> by comparison to these, C is very inconvenient
[17:48:19] <pikapika> all of those are implemented in C and C++
[17:48:27] <pulse> well, it's more convenient than x86 asm :D
[17:48:41] <bjs> pikapika: I'm also not very sure what the point is you're trying to make?
[17:48:43] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 265 seconds)
[17:48:43] <mrig> pikapika: what do you think of go?
[17:48:55] <pikapika> That clearly C is trivially more portable than all of these
[17:49:00] <pikapika> mrig, haven't studied
[17:49:12] <Thedarkb-Desktop> I'm thinking about using Go for the backend of a new logistics system at work.
[17:49:16] <W> if I want to provide the user of my application the ability to start random processes on their system, in Java, I use one API, and it works on all the supported operating systems Java runs on
[17:49:30] <Thedarkb-Desktop> It's going to be web facing so I don't want to use C because I don't trust myself.
[17:49:34] <pikapika> W thats because jdk people implemented it on each platform
[17:49:42] <pulse> pikapika, C might be trivially portable as a language. C applications aren't though
[17:49:46] <W> pikapika, yes, I know why
[17:49:47] <pulse> which is the crux of this whole discussion
[17:50:01] *** Quits: federico_it (~textual@151.51.82.235) (Ping timeout: 246 seconds)
[17:50:01] <pikapika> pulse, thats because C happens to be the language os apis aer written in
[17:50:17] <bjs> pikapika: how can C be "trivially more portable"?
[17:50:19] <mrig> pikapika: it is interesting because whilst being a higher level abstraction it is still very similar to C in some ways. Really nice language, I'd recommend that you take a look, it is mind blowing how easy it is to cross compile.
[17:50:24] <bjs> pikapika: again the OS APIs are almost never written in C
[17:50:27] <sandman13> IIRC C standard knows nothing about Windows/Linux/MacOS etc.
[17:50:29] <bjs> they are not C APIs for Linux or Windows
[17:50:37] <pikapika> bjs, both Windows and Linux apis are written in C
[17:50:37] <sandman13> All it knows about is abstract state machine.
[17:50:48] <pikapika> or present a C api
[17:50:53] <bjs> pikapika: they absolutely are not, they are syscalls that perform privilege escalation
[17:51:05] <bjs> pikapika: yes someone has written a C function that wraps up some non-C which does the actual OS-interacting call
[17:51:10] <pikapika> What language is the kernel written in?
[17:51:13] <bjs> but that call is almost always a block of asm
[17:51:16] <arahael> pikapika: A mixture of C and Rust, now.
[17:51:19] <pikapika> of course at some even lower level there would be some asm
[17:51:28] <arahael> pikapika: But Go, as an example, doesn't use any of the C api. It bypasses it completely.
[17:51:31] <pikapika> Everything is asm
[17:51:31] <bjs> pikapika: probably a large chunk of asm, some C. But again it's very irrelevant because *your program* does not have access to the code that the kernel is running
[17:51:33] <mrig> I have to read upon this c11 abstract memory model.
[17:51:33] <W> there is nothing stopping C from creating a new standard OS-level library, that works on multiple operating systems, where you can do things like open files and sockets, query and start processes, etc. They just haven't
[17:51:34] <bjs> you just don't have permission
[17:51:41] <sandman13> arahael: They integrated Rust? IIRC they had some pending issues
[17:51:45] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:edff:946b:89ad:7dd5) (Ping timeout: 256 seconds)
[17:51:49] <bjs> mrig: you mean abstract machine model?
[17:52:03] <arahael> sandman13: In some modules, I believe.
[17:52:04] <mrig> pikapika: are you arguing cyclically for the fun at the moment? :P
[17:52:07] <pikapika> bjs, and that doesn't matter. As I said C seems contentious simply because it happened to be fortunate/unfortunate enough to be the lowest level api layer thats presented to a normal user
[17:52:13] <W> (or maybe they have, and that's not where the shoe presses)
[17:52:16] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[17:52:16] <mrig> bjs: oh sorry, yes that is what I meant.
[17:52:30] <pikapika> <W> there is nothing stopping C from creating a new standard OS-level library, that works on multiple operating systems, where you can do things like open files and sockets, query and start processes, etc. They just haven't
[17:52:31] <pikapika> Exactly
[17:52:37] <sandman13> arahael: I see.
[17:52:54] <bjs> pikapika: the fact it's in C is very irrelevant because all that C API is is is where someone write a function that actually pretends to be C but is really just some asm or whatever. The C part is a red herring there's really no reliance on C at all
[17:52:57] <Joanna> What did rindolf do ? Talk too much ?
[17:53:18] <pikapika> bjs, people are whining precisely because the lowest level apis happen to be presented as C
[17:53:23] <W> pikapika, but this makes C less portable in /practice/ yes? In the sense that typical code written by typical coders of the programming language will not easily work everywhere
[17:53:24] <pikapika> Some language will always have to be that layer
[17:53:34] <bjs> pikapika: but what you say just is not true,  C is a high level wrapper around the actual low level API
[17:53:35] <beaky> nice so most programming languages have patterns like haskell has pattern matching but agda also has copatterns which let you define structs (i.e. 'products') in the same way you would use patterns for sums https://agda.readthedocs.io/en/v2.6.2/language/copatterns.html
[17:53:39] <W> pikapika, it is not very friendly to say that people are whining
[17:53:42] <bjs> that the OS is actually exposing
[17:53:48] <pikapika> bjs, that actua lower level is irrelavant to normal devs
[17:54:00] <pikapika> To normal devs linux syscalls or windows syscalls are the lowest they are allowed to peek
[17:54:00] <mrig> Sierpinski gasket with turtles all the way down :)
[17:54:09] <pikapika> W sorry
[17:54:13] <mrig> chose your triangle.
[17:54:16] *** Joins: gggpkm_ (~gggpkm@221.219.70.176)
[17:54:25] <arahael> pikapika: Actually normal people don't do windows syscalls at all.  It's not consistent between releases.
[17:54:42] <pikapika> I thought most of the common calls at least should be backward compat
[17:54:52] <mrig> arahael: oh I didn't know that, interesting stuff.
[17:54:54] <arahael> pikapika: Not with windows. You have to go via the .dll's.
[17:54:55] <sandman13> Your thinking is not MS's thinking :D
[17:55:14] <pikapika> What dlls?
[17:55:14] <mrig> pikapika: you are a linux / unix coder I presume?
[17:55:20] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[17:55:25] <sandman13> "Pfft, old releases? Mate it's 2020, purge it."
[17:55:28] <pikapika> mrig, not really. I don't write platform specific anything. Why?
[17:55:43] <mrig> pikapika: just wondering what your perspective is.
[17:55:44] *** Joins: alextee (~alextee@zrythm/alex)
[17:55:51] <sandman13> "If somebody asks, tell them we have Electron and tell them to use Electron.js"
[17:55:54] <pikapika> Anything I write isn't os specific
[17:55:58] * arahael heads off to bed.
[17:56:00] <bjs> pikapika: okay but the fact it's C is totally irrelevant. It could have been any language.  The point is the effort that went into those APIs.  It happens to have been C for historical reasons but the APIs can (and do) exist in lots of wrapper languages.  What language the kernel itself is implemented in is totally irrelevant
[17:56:00] <sandman13> :D
[17:56:05] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 252 seconds)
[17:56:12] <W> sandman13, not that I'm a fan of Windows or Microsoft or anything, but Windows is probably the greatest achievement in backwards compatibility anywhere ever
[17:56:29] <mrig> pikapika: I agree on many levels, but also see why it is good to have language abstractions that differ too.
[17:56:32] <bjs> what's important is (A) what interface the OS *does* expose and (B) what tools people have bothered to build above those interfaces in a deliberately agnostic fashion
[17:56:46] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[17:56:50] <mrig> as previously stated, many do not know what their own code does.
[17:56:52] <sandman13> W: Yeah. So much that it actually caused confusion. That whole Windows 8 to Windows 10 saga :P
[17:57:05] <pikapika> bjs, nobody brought out the layers lower than visible to syscalls (ie the kernel implementation) and I think we are agreeing that C is irrelevant to this. If the windows and mac apis were presented in java, people would still have to spend the same amount of effort in writing portability layers on top of them
[17:57:07] <bjs> There are some C libraries that very heavily depend on the set of syscalls and are very tightly coupled to the underlying platform or architecture.  There are C libraries that basically don't care and work everywhere.
[17:57:35] <mrig> pikapika: what about limbo?
[17:57:42] <bjs> Now POSIX is supposed to exist to clean up (B) to make it easier to write to an abstraction,  but it isn't perfect so you still get a lot of libraries that aren't so very portable
[17:57:44] <pikapika> Whats limbo?
[17:57:46] <sandman13> mrig: A car that I don't have
[17:57:48] <mrig> This has been proven to work.
[17:57:56] *** Joins: inky (~inky@45.143.205.154)
[17:57:56] <beaky> limbo is like a distributed os i think
[17:58:01] <sandman13> Oh wait. I read it as "lambo"
[17:58:14] <mrig> pikapika: a language that abstracts the OS from the hardware completely.
[17:58:18] <beaky> what bitcoin billionaires drive
[17:58:23] <mrig> he
[17:58:27] <pikapika> A commendable effort I'd say if thats true
[17:58:27] <mrig> heh rather.
[17:59:18] <bjs> pikapika: well no it was *you* going on about the language the kernel was written in, and the "low level"ness of the languages and how the OS APIs are all in C and all that.
[17:59:19] <mrig> sure its true, but it was said that UNIX is good enough, as such it did not take hold.
[17:59:50] <mrig> but it is proof of concept.
[18:00:09] <sandman13> bjs: it's terrible state of affairs to be honest. Mixing GNU_SOURCE and POSIX feels weird and is probably weird. Luckily haven't run into issues yet.
[18:00:11] <bjs> remember that the C standard *could* have included such a compatibility layer to smooth out differences between platforms for real-world applications. But they chose not to, so it's up to the libraries and e.g. POSIX to try do that.  (I mean in this case, choosing not to is the correct choice)
[18:00:21] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:01:07] <pikapika> I honestly don't know what people are trying to do in C if they aren't doing anything graphics or concurrency related that its becoming difficult to port
[18:01:44] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[18:01:49] <mrig> pikapika: would you chose C for a heavily concurrent task?
[18:01:55] *** Quits: gggpkm_ (~gggpkm@221.219.70.176) (Ping timeout: 246 seconds)
[18:02:37] <sandman13> IIRC simple stuff involving sockets is not same between *nix and Windows
[18:02:50] <pikapika> I would just prefer not having to deal with concurrency ever. But I would use something other than C that papers over the low level apis. Still won't be of much help. Concurrency seems to have a strange way of breaking all abstractions and exposing the lowest of the low level stuff to everywhere.
[18:03:01] <pyzozord> I wanted to install some Plan9 from uses space but it's pretty confusing. I have to compile it, and it seems I can just use one program I want (ssam) it has to come all toghether and replace my normal utils
[18:03:21] <mrig> pikapika: but the real world is ultimately massively concurrent.
[18:03:27] *** Joins: gggpkm_ (~gggpkm@221.219.77.87)
[18:03:56] <pikapika> mrig, processors have a clock which executes instructions in sequence
[18:04:02] <pyzozord> mrig: perhaps even... embarrsingly parallel? :)
[18:04:03] <mrig> parallel also, but all the really interesting things are concurrent.
[18:04:08] <pyzozord> https://en.wikipedia.org/wiki/Embarrassingly_parallel
[18:04:13] <bjs> pikapika: ha you wish they executed them in sequence
[18:04:14] <pikapika> Processors are real life
[18:04:25] <pikapika> bjs, out of order is just an optimization
[18:04:32] <mrig> pyzozord: the most interesting things are concurrent though :)
[18:04:32] <W> processors with clocks sometimes time travel
[18:04:32] <pikapika> The end result should be the same as serial order
[18:04:36] <pikapika> Otherwise its a BUG
[18:04:45] <mrig> pikapika: time is very very flexible.
[18:04:48] <bjs> pikapika: out of order is a misnomer.  They are not just "out of order" they are highly distributed systems that try to pretend it's in order
[18:04:49] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[18:04:52] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[18:04:56] <bjs> pikapika: and no you do not get the same thing as serial order, and no it's not a bug :)
[18:05:04] <pikapika> bjs, give me examples
[18:05:11] <bjs> pikapika: classic is store buffers
[18:05:15] <pikapika> How will add eax,eax result in anything different
[18:05:22] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:05:59] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 252 seconds)
[18:06:01] <bjs> pikapika: CPU 1 writes to location X, but it doesn't actually have to send it to memory or anything, it can hang onto it locally and then CPU 2 might not see the value.
[18:06:13] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:06:14] <pikapika> Thats clearly a bug
[18:06:17] <bjs> You have crazy things like caches and devices and you have address translations
[18:06:28] <bjs> pikapika: it's not a bug. it's by design,  no CPU architecture will "fix" it.
[18:06:48] <pikapika> How is it by design if it results in an incorrect read?
[18:06:54] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[18:06:55] <bjs> You're the one saying it's incorrect
[18:07:08] <bjs> It's perfectly correct, it's just not consistent with your serial execution fantasy
[18:07:10] *** Quits: inky (~inky@45.143.205.154) (Ping timeout: 258 seconds)
[18:07:22] <pikapika> The only way it will not be a bug is to avoid the cpu2 to ever use any memory cpu1 is using
[18:07:38] <pikapika> So both cpus can be in lala land with their own fantasy views of memory
[18:07:41] <bjs> pikapika: it may be a bug in *your code* if you write your code wrong because you think CPUs execute things serially
[18:07:44] <W> you can instruct the CPU to make something available of course
[18:07:46] <bjs> But that's your problem
[18:08:00] <mrig> pikapika: the best systems have a separate remote dedicated clock with better crystal oscillators that are less jittery, away from the noisy motherboard/s; Heck some even use pulsars. :D
[18:08:07] <mrig> keeping time is fun.
[18:08:45] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[18:09:07] *** Joins: The_Blode (~Blode@92.40.181.36.threembb.co.uk)
[18:09:23] <mrig> certainly not a simple task.
[18:09:51] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 258 seconds)
[18:09:58] <pyzozord> i always have a feeling that when we get too complicated like this that means just our model of understanding is wrong
[18:10:24] <pyzozord> meaning, it cannot be a simple task to keep time, if time doesn't exist :D
[18:10:31] <mrig> pyzozord: always good to think that there is still a lot more to learn :)
[18:10:39] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:10:44] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[18:10:58] *** Joins: Doffi (~doffi@91.132.197.188)
[18:10:59] <Thedarkb-Desktop> What's the best source for salts for hashes?
[18:11:09] <pikapika> pyzozord, measuring length accurate to nanometers is tough. Does that mean length is a complex concept?
[18:11:10] <pikapika> Such bs
[18:11:11] <Thedarkb-Desktop> One fixed salt stored elsewhere?
[18:11:25] <mrig> Thedarkb-Desktop: that would be a pepper.
[18:11:52] <pyzozord> pikapika: could be a complex concept, depending on how far you wanna take it
[18:11:59] <mrig> one for each use stored with the encrypted password is usual I think for password encryption.
[18:12:30] <W> Thedarkb-Desktop, depends on your purposes
[18:12:32] *** Quits: gggpkm_ (~gggpkm@221.219.77.87) (Ping timeout: 258 seconds)
[18:12:50] <W> Thedarkb-Desktop, security is not achieved by looking at parts in isolation
[18:12:56] <Thedarkb-Desktop> Making a logistics system at work customer facing, necessitating user accounts...
[18:13:08] <W> are you hashing passwords, say?
[18:13:17] <W> just an iterator is fine for something like that
[18:13:59] <W> of course, you should just use bcrypt
[18:14:44] *** Joins: alextee (~alextee@zrythm/alex)
[18:15:10] <pikapika> bjs, what you are referring to as a "store buffer" really just seems to be cache invalidation
[18:15:11] <sandman13> is there a cross-platform dmenu like program?
[18:15:26] <pikapika> At least thats what google searches describing store buffers are saying
[18:15:30] <mrig> pikapika: https://lisa.nasa.gov/
[18:15:40] <mrig> length is relative.
[18:15:48] <bjs> pikapika: well some people might call the buffer a cache,  but architects call them buffers. A per-thread store-queue.  "gathering" writes before you send them to memory
[18:15:49] <W> but the salt in the hashes of passwords is just so that people cannot precompute large tables and reuse them everywhere. So both salt and pepper are good, but the salt need not be very random, as long as you have a wide set of values it spans over
[18:15:56] <bjs> This is just one example, cache invalidation is another place where it doesn't appear serial
[18:15:58] <bjs> potentially
[18:16:13] <pikapika> mrig, lorentz doesn't make length or time complex
[18:16:39] <W> length and time are obviously real
[18:16:46] <W> (not complex)
[18:17:21] <sandman13> oh wow
[18:17:22] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 240 seconds)
[18:17:23] <mrig> beg to differ there, time is always the measure of an oscilation.
[18:17:25] <pikapika> >many modern microprocessors implement a performance optimization (known as "Speculative Store Buffer Bypass") that will assume no such update is present in the store buffer, then speculatively execute later program instructions while performing the store buffer search in parallel. In the common case that no matching recent store exists, a significant speedup is obtained. Conflicts are trivially resolved by throwing away the
[18:17:26] <pikapika> results of the speculation and repeating calculations.
[18:17:32] *** Joins: LiftLeft (~LiftLeft@154.21.114.118)
[18:17:33] <pikapika> again this implies the process is supposed to be transparent
[18:17:41] <pikapika> and any deviation from equivalent serial order is a bug
[18:17:47] <pikapika> in this case a serious security bug
[18:17:47] <sandman13> a single package and disabling JS seems to have fixed finger printing issue with Qutebrowser
[18:17:58] *** Joins: Doffi (~doffi@91.132.197.188)
[18:18:29] <pikapika> So clearly concurrency is very efficient at introducing bugs
[18:18:41] <pikapika> bjs
[18:18:46] <W> pikapika, speaking from a security angle here, you cannot ever have speculative execution be "same as" real execution
[18:19:34] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[18:20:08] <W> but a "bug" is just code not written as necessary for the platform it runs on, right?
[18:20:31] <pikapika> bjs, I appreciate both the attempts at making faster execution and at trying to make concurrecny easier
[18:20:36] <pikapika> But concurreny really is just unnatural
[18:20:41] <pikapika> Theres no way around admitting that
[18:21:11] <bjs> pikapika: well like I said CPUs don't execute serially, they are big distributed systems which means you get lots of concurrency inside the CPU
[18:21:20] *** Joins: Pickchea (~private@user/pickchea)
[18:21:34] <pikapika> bjs, and this concurrecny is clearly a big source of bugs
[18:21:42] <W> and I mean, code running on two separate computers is concurrency too, with the same issues of coordination
[18:21:51] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Remote host closed the connection)
[18:21:53] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5)
[18:22:02] <pikapika> Human brains aren't meant for understanding concurrency
[18:22:07] <pikapika> Its unnatural
[18:22:07] <W> there's a reason game devs put "multiplayer" on the roadmap, then in the end never add it
[18:22:17] <mrig> pikapika: linearity is a false human construct that our minds cling to like frightened children :D
[18:22:26] <mrig> pikapika: speak for your self :P
[18:22:30] <pikapika> mrig, its the only way to do any work
[18:22:32] * W pats his head and rubs his stomach in a circle demonstratively
[18:22:57] <pulse> that actually isn't hard W :p
[18:22:59] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:23:01] <mrig> pikapika: highly inefficient way to work though.
[18:23:02] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[18:23:10] *** Joins: Guest50 (~textual@ool-43527ebe.dyn.optonline.net)
[18:23:17] *** Quits: odnes (~odnes@109-178-241-209.pat.ren.cosmote.net) (Remote host closed the connection)
[18:23:31] <pulse> what's the hard one again, circling your foot clockwise while rubbing your belly counterclockwise
[18:23:33] <pulse> or something like that
[18:23:37] <pikapika> mrig, the only real parallelism is multiple people (or discrete computers) working at subproblems
[18:24:00] *** Quits: xerxes (~xerxes@117.222.64.149) (Quit: leaving)
[18:24:01] <mrig> pikapika: nope, and peoples perception of time differs too.
[18:24:02] <pikapika> Multitasking by context switching is unnatural for humans
[18:24:06] *** Joins: gggpkm_ (~gggpkm@123.113.182.70)
[18:24:08] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[18:24:12] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[18:24:16] <mrig> depending upon their type of minds.
[18:24:27] <pulse> you multitask quite a bit when driving a car
[18:24:27] <W> living in wood constructs is unnatural for humans
[18:24:43] <mrig> W: what do you mean by that?
[18:24:48] <mrig> curious notion.
[18:24:54] <W> only in this most recent sliver of our evolution are we doing such hare-brained things
[18:24:57] <sandman13> pulse: That's why there are so many car accidents. Abolish roads, abolish cars
[18:25:00] <pulse> mrig, that we should be cave dwellers, clearly :p
[18:25:02] *** Quits: gggpkm_ (~gggpkm@123.113.182.70) (Remote host closed the connection)
[18:25:02] <mrig> oh I see.
[18:25:07] <mrig> pulse: nope.
[18:25:13] <sandman13> They have played absolute fool of us
[18:25:28] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[18:25:28] <pulse> sandman13, most road accidents are due to inattention and/or improper mental state
[18:25:33] <W> caves schmawes, the savanna is our home
[18:25:38] <mrig> W: there is not proof that humans have not been living in wood constructs for 100's of thousands of years.
[18:25:47] <mrig> it is biodegradable like that.
[18:26:01] *** Joins: brickfat (~brickfat@user/brickfat)
[18:26:06] *** Quits: kmh_ (~kmh@p200300df5f198e006147b5ce666b84fa.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:26:09] *** Joins: xerxes (~xerxes@117.222.64.149)
[18:26:10] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 240 seconds)
[18:26:14] <mrig> in fact recent satellite techniques indicate that we have been.
[18:26:20] <pulse> you know back in prehistory trees didn't exist
[18:26:23] <pulse> but there were giant fungi
[18:26:45] <pyzozord> W: Is it? Birds nest too
[18:26:58] <W> mrig, like all things in history, there's a big lack of evidence for proving things didn't happen, but I think *some* wood buildings would be preserved, if nothing else as conspicuous gaps between mud and rock dwellings
[18:27:04] <mrig> giant fungi are still the largest organisms on the planet, so far as I am aware. :)
[18:27:10] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:27:15] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[18:27:18] <pulse> yeah but we don't have 10 meter tall fungi anymore
[18:27:31] <pulse> but they existed before plants and trees
[18:27:52] <W> pyzozord, aren't the arms of octopuses almost independent living things, operating concurrently?
[18:27:53] <xerxes> pulse: i would like to see fungi the size of trees.
[18:27:58] <pulse> https://en.wikipedia.org/wiki/Prototaxites
[18:28:14] <mrig> W: the traditions of wood use have been, and its place of import in some cultures language also indicates this.
[18:28:22] <W> I didn't think you were saying "there's no concurrency in nature"
[18:28:29] <mrig> it is a primordial element in some very ancient cultures.
[18:28:36] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[18:28:47] <pyzozord> W: could be don't know. I think I heard that similar thing happens in humans, "muscle reflex" is our spine thinkinging (firing neurons)
[18:28:49] <W> mrig, oh I was thinking much further back, prehistory
[18:28:49] <sandman13> pulse: Exaclty. Too much multitasking
[18:28:54] <mrig> pulse: can you imagine the omelette though!
[18:29:12] <pulse> hah
[18:29:24] <pulse> i wonder if we could bring it back into existence
[18:29:36] <pulse> i heard they're gonna do that with mammoths
[18:30:00] <sandman13> then dinosaurs
[18:30:13] <sandman13> then suddenly Jurassic Park becomes reality xD
[18:30:27] <xerxes> sandman13: i would like to see the dodo come back to life.
[18:30:35] <pulse> i just got an idea for a great horror story. someone brings these giant fungi back to life somehow from ancient gene samples, and then it overgrows all forests on earth and becomes ridiculously invasive
[18:30:45] <pulse> and it makes humans into mutants too
[18:30:47] <sandman13> xerxes: Yeah.
[18:30:50] <mrig> W: so very hard to know, history being pretty much as uncertain as the future, sure we can do our best to figure out hypotheses; And keep on looking.
[18:30:52] <xerxes> pulse: i like the effort.
[18:30:56] <pulse> :D
[18:31:03] <mrig> fascinating stuff though.
[18:31:26] <mrig> pulse: I'm, thinking B movie styled game at the moment.
[18:31:28] <W> mrig, in any case, it was a silly joke re:concurrency not being natural
[18:31:35] <xerxes> sandman13: dodo was exceedingly stupid.
[18:32:25] <xerxes> sandman13: it would have to be kept in a cage and fed with hand, probably.
[18:32:46] <W> xerxes, there is general mythology built up around animals humans made or are making extinct that they are stupid. But they generally are as clever as any other animal, it's just self-justifying perspective from a species that recognizes making animals extinct is bad, yet do it
[18:33:01] <W> see also: pandas
[18:33:02] <xerxes> W: no.
[18:33:04] <sandman13> pulse: You can add ancestors of crocodiles that hunted dinosaur to the mix. "After tiring effort, the fungi monster was finally slain. People rejoiced. But little did they know that something sinister was lurking in the deep water."
[18:33:10] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[18:33:31] <sandman13> xerxes: Resurrect it, breed it and use it in place of chicken :D
[18:33:34] <pulse> that would be part 2 that would only become critically acclaimed after a decade
[18:33:41] <xerxes> W: it was certainly the humans that made it extinct.
[18:34:04] <xerxes> W: i never thought that the stupidity was related to the extinction.
[18:34:07] <W> that's not in question
[18:34:16] <W> it's not explicitly justifying
[18:34:50] <mrig> xerxes: I think that stupidity is a pain relief survival strategy.
[18:35:04] <mrig> seems to work quite well too, curious thing.
[18:35:06] <xerxes> sandman13: if it tastes good?
[18:35:17] <sandman13> xerxes: weren't they hunted for that reason?
[18:35:27] <W> it's just a general thing when we observe animals behave "how do this thing survive" coupled with the post hoc death of most of the population
[18:35:30] <pikapika> And that comment about someone being much more confident about their haskell code vs their C code is also bs
[18:35:41] <pikapika> Its an example of what I call the "last bug syndrome"
[18:35:41] <xerxes> sandman13: probably.
[18:35:57] <pikapika> Certainly if the comparison were made to a dynamic typed language there are legit arguments
[18:35:57] <mrig> pikapika: did you get out of bed on the wrong side this morning? :P
[18:36:04] <pikapika> because both are completely different types of lang
[18:36:11] <pikapika> but not in this example
[18:36:25] <xerxes> W: i don't know the specifics of where the stupidity myth arose in dodo but i seem to remember it was well before it's extinction.
[18:36:37] <W> pandas too, they yet live
[18:36:49] <mrig> pikapika: there is a fascinating article that compares the go GC to the Haskell GC, have you read anything on that?
[18:37:01] <pikapika> I haven't
[18:37:12] <W> animals that live isolated from predators might not have instincts to avoid predators, this is not stupidity, it is adaptation
[18:37:37] <sandman13> mrig: Either that or this: https://pics.me.me/come-on-honey-you-know-you-shouldnt-go-to-bed-4411920.png
[18:37:48] <mrig> Cool how the different behaving GC's make for languages that are for quite different approaches.
[18:37:56] <mrig> Will see if I can find that.
[18:38:21] <sandman13> mrig: https://www.youtube.com/watch?v=QTiAWZ1YfzI :D
[18:38:34] *** Quits: xff0x (~xff0x@2001:1a81:53dc:b800:8c77:48f3:1e3:3060) (Ping timeout: 240 seconds)
[18:38:39] <xerxes> W: now you're just debating semantics.
[18:38:46] <xerxes> W: never mind, tho.
[18:38:58] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 240 seconds)
[18:40:59] <mrig> pikapika: It was this I think : https://making.pusher.com/golangs-real-time-gc-in-theory-and-practice/
[18:41:09] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:41:16] <mrig> and this : https://making.pusher.com/latency-working-set-ghc-gc-pick-two/
[18:41:19] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[18:41:39] <mrig> sandman13: hah
[18:41:41] <pikapika> Without reading it, the title gives me a vibe of they are just trying to make excuses to justify themselves
[18:41:57] <pikapika> But I'll see them later thanks for the articles
[18:42:12] *** Joins: brabrax (~brabrax@user/brabrax)
[18:42:43] *** Quits: xerxes (~xerxes@117.222.64.149) (Quit: leaving)
[18:42:45] *** Joins: scabby_ (~scabby@user/scabootssca)
[18:43:09] *** Joins: shredder (~user@user/shredder)
[18:43:21] *** Joins: xff0x (~xff0x@2001:1a81:53dc:b800:8c77:48f3:1e3:3060)
[18:43:24] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Quit: leaving)
[18:44:03] *** Joins: kmh (~kmh@p200300df5f198e00daf0d5d59210689d.dip0.t-ipconnect.de)
[18:44:10] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 240 seconds)
[18:44:23] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[18:45:47] <sandman13> One question
[18:46:10] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 272 seconds)
[18:46:23] <sandman13> If I include Python.h and call DECREF and friends in C code, is my C code limited by Python's GC?
[18:47:05] <mrig> pikapika: just a recounting of the examination of two GC'd languages in solving a real world problem.
[18:47:18] <pikapika> Yeah so it seems
[18:47:36] *** Joins: Berlin36 (~Berlin36@user/berlin36)
[18:47:42] <mrig> sandman13: have tears running down my cheeks from that video, infection laughter and add to that the commentary, brilliant!
[18:47:45] <Berlin36> Hello world
[18:48:23] <mrig> pikapika: It's the contrast that I found interesting there.
[18:48:37] <sandman13> mrig: Even Rust isn't spared xD
[18:48:47] <mrig> :D
[18:48:51] *** Joins: jamea97 (~jamea77@200.68.140.85)
[18:48:53] *** Joins: gggpkm (~gggpkm@221.219.70.176)
[18:48:54] <pyzozord> Berlin36: hello
[18:49:09] <sandman13> "And they claim to have solved 'memory safety'" xD
[18:49:40] *** Joins: ji (uid72176@user/raj)
[18:50:36] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[18:50:36] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 272 seconds)
[18:51:55] *** Joins: alextee (~alextee@zrythm/alex)
[18:52:07] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[18:52:35] *** Quits: Maker (~maker@70.18.215.45) (Remote host closed the connection)
[18:55:50] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 252 seconds)
[18:56:14] <pyzozord> That's fun https://www.youtube.com/watch?v=CDDYeJznOhY
[18:56:18] <pyzozord> I had the same idea
[18:56:21] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[18:56:43] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[18:57:21] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[19:00:06] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 272 seconds)
[19:00:16] *** Quits: Nact (~l@host-85-27-124-83.dynamic.voo.be) (Quit: Konversation terminated!)
[19:00:16] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:00:26] *** Joins: jamea (~jamea77@187.185.190.209)
[19:00:59] *** Quits: alextee (~alextee@zrythm/alex) (Ping timeout: 252 seconds)
[19:01:22] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[19:02:17] *** Joins: _wovixo_ (~wovixo@146.151.192.66)
[19:02:26] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[19:02:40] *** Quits: jamea97 (~jamea77@200.68.140.85) (Ping timeout: 265 seconds)
[19:03:16] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[19:03:54] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[19:04:55] *** Quits: gggpkm (~gggpkm@221.219.70.176) (Ping timeout: 246 seconds)
[19:05:48] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 272 seconds)
[19:07:06] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Remote host closed the connection)
[19:07:17] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[19:07:49] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[19:09:14] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 252 seconds)
[19:10:23] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[19:10:23] *** Quits: Berlin36 (~Berlin36@user/berlin36) (Quit: Quit)
[19:12:02] *** Joins: rsx (~dummy@ppp-188-174-136-181.dynamic.mnet-online.de)
[19:13:22] <pyzozord> huh something just crossed my mind. There are lessons about how to conduct code review to be from book publisher editors
[19:13:46] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[19:15:15] *** Quits: jamea (~jamea77@187.185.190.209) (Read error: No route to host)
[19:15:30] *** Joins: jamea (~jamea77@187.185.190.209)
[19:16:04] *** Quits: anahat (~anahat@116.74.190.238) (Quit: Connection closed)
[19:16:49] <merijn> mrig: THere's also a new GC in GHC aimed at more predictable GC times (potentially at the cost of productivity)
[19:17:54] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 240 seconds)
[19:17:59] <sandman13> merijn: Have they solved high memory usage during compilation?
[19:18:41] <merijn> mrig: The main/default GC of GHC prioritises throughput and productivity (i.e. minimum total time spend on GC) at the cost of sometimes having very long GC pauses. The new GC limits the max GC pause, but at the cost of potentially spending more total time on GC
[19:19:34] <merijn> sandman13: It is very dependent on your code, most memory blow up tends to be when using libraries that are super heavy on type funkery. There's an internship focussing on improving that and someone else starting a project looking at optimising that
[19:19:35] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[19:20:17] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[19:20:24] *** Joins: Doffi (~doffi@91.132.197.188)
[19:20:35] *** Joins: paulo_ (~paul0@user/paulo/x-9032687)
[19:20:49] <sandman13> merijn: Both shellcheck and Haskell's IDE/LSP related stuff are the ones I tried building myself. 4 GB wasn't enough :(
[19:21:04] <merijn> sandman13: I don't really run into memory blow up that much (at least, haven't had any issues in the past
[19:21:19] <merijn> sandman13: Oh, yeah, the LSP server is a beast
[19:21:31] <merijn> but 4GB should certainly be enough
[19:21:42] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:21:52] <merijn> (mostly I mean running the LSP server is a beast)
[19:22:21] <sandman13> Hmm. I tried that a yaer ago. I see that a package is available for my Linux distro now
[19:22:32] <merijn> sandman13: Should be pre-built binaries for shellcheck on most distros I bet
[19:22:46] <merijn> sandman13: I think ghcup ships pre-built binaries for the LSP stuff too, btw
[19:22:59] <sandman13> shellcheck yes. haskell-language-server no.
[19:23:25] *** Joins: magla (~gelignite@55d41815.access.ecotel.net)
[19:23:29] <sandman13> Also merijn do I have to download 100+MB each time when initializing a stack project?
[19:24:06] <merijn> sandman13: I don't use stack, so no clue :p
[19:24:08] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[19:24:17] <sandman13> huh? Just cabal?
[19:24:41] *** Quits: KidBeta (~KidBeta@user/kidbeta) (Ping timeout: 256 seconds)
[19:24:47] <merijn> Yeah
[19:25:10] <sandman13> isn't Stack recommended?
[19:25:24] <merijn> Define "recommended"
[19:25:41] <mrig> merijn: Yes I gather that is how the GC of go can be summarised, taking more overall time to process but doing so in a linear way, fascinating trade offs in behaviour.
[19:25:44] <sandman13> Every Haskell guide I saw involved Stack
[19:25:50] <sandman13> fpcomplete and all
[19:25:57] <merijn> There are certainly (very loud) individuals/groups who will say stack is "the standard way" and "best for beginners"
[19:26:14] <merijn> sandman13: This might be related to the fact that the people who wrote stack are all at FPComplete ;)
[19:26:25] <sandman13> Haskell from first principle or w/e title that Allen and Julie had for their book had that stuff too
[19:27:01] <merijn> sandman13: And FPComplete's articles are not at all trying to be objective. They have an agenda and it's reflected in everything they write and produce
[19:27:32] <merijn> sandman13: The main reason the Allen and Julie book recommends it, is because installing GHC on Windows can be a bit of a mess, especially as a beginner
[19:27:33] <sandman13> To push Haskell in production from what I know
[19:27:52] <sandman13> It's a bit mess on Linux, Arch Linux too
[19:28:03] <merijn> sandman13: Sure, but they also have an opinion on what "haskell in production" should look like and while popular that opinion isn't necessarily the majority
[19:28:10] <merijn> sandman13: That's 100% the fault of Arch maintainers
[19:28:27] <merijn> sandman13: They insist on shipping a "broken by default" compiler
[19:28:47] <merijn> They could fix that in a heartbeat, but they refuse to for ideological reasons
[19:28:53] <sandman13> It's weird I must admit.
[19:29:11] <sandman13> Anyways last thing I wrote/followed in Haskell was this: https://www.youtube.com/watch?v=0I90MTip-OQ&list=PLUQzXLQ6jvHL_k3QOMKXehVoZdk-sKtHd
[19:29:17] <sandman13> and it was fun
[19:29:27] <sandman13> basic sed in Haskell :D
[19:29:35] <merijn> sandman13: GHC by default uses static linking for Haskell code. Which is the best supported and tested codepath. But Arch, for ideological reasons, insists on only supporting dynamic linking
[19:29:55] <merijn> sandman13: So they only install the dynamic libraries, but *don't* patch the compiler to be dynamic by default
[19:30:22] <merijn> So every default invocation of the compiler errors on missing/corrupted static libraries (because those are intentionally not installed)
[19:30:42] <merijn> Which is a massive PITA for beginners and just kind of a dick move by the maintainers
[19:31:06] <sandman13> Only project benefitting from this approach is Xmonad IMO
[19:31:21] <merijn> They could just install the static libs by default and/or patch the compiler to default to dynamic, but they don't do either
[19:31:45] <sandman13> both stack and GHC are PITA in Arch
[19:32:06] <merijn> sandman13: tbh, I just install the bindists manually, because I'm an old curmudgeon
[19:32:18] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[19:32:31] <sandman13> Every pacman -Syu has Haskell package in it's update list
[19:32:42] *** Joins: gggpkm (~gggpkm@221.219.70.176)
[19:32:48] <sandman13> and I update every second day :D
[19:34:00] <merijn> sandman13: Yeah, that's because they install all haskell libraries as separate, dynamic packages which imo is also the wrong way to handle it, because it means pandoc/etc. have 100s of dependencies that all need to be updated constantly for no real reason...
[19:34:29] <merijn> Anyway, it's 17.00 time to say "sod this" to working :p
[19:34:41] *** Joins: Akuli (~Akuli@82-203-162-138.bb.dnainternet.fi)
[19:36:25] <sandman13> Haskell is one of the language that I would like to work on. But I can't develop intuition for it. (Other languages being C, Python, Go and one Lisp variant)
[19:36:52] *** Quits: pandakekok9 (~job@user/job) (Remote host closed the connection)
[19:37:18] <rifl>  if some lisp-feature being added into Haskell
[19:38:18] <edgar-rft> you could go to #haskell and ask why it hasn't replaced by Lisp long ago
[19:38:19] *** Joins: gggkmp_ (~gggkmp@60.10.23.164)
[19:38:58] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 240 seconds)
[19:41:46] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[19:42:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:43:36] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[19:43:46] *** Quits: gggpkm (~gggpkm@221.219.70.176) (Ping timeout: 246 seconds)
[19:44:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[19:47:16] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[19:48:16] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[19:50:17] *** Joins: yaboiburner (~yaboiburn@68.235.43.84)
[19:50:38] *** Joins: federico_it (~textual@151.51.82.235)
[19:53:38] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[19:54:44] *** Joins: gggkmp (~gggkmp@125.33.90.215)
[19:55:15] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[19:56:14] *** Joins: node1 (~node1@user/node1)
[19:56:36] *** Quits: gggkmp_ (~gggkmp@60.10.23.164) (Ping timeout: 268 seconds)
[19:57:13] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Ping timeout: 268 seconds)
[19:57:46] *** Joins: wovixo_ (~wovixo@128.104.205.49)
[19:58:09] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[19:58:34] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[19:59:11] *** Quits: gggkmp (~gggkmp@125.33.90.215) (Ping timeout: 252 seconds)
[20:00:26] *** Joins: yaboiburner_ (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[20:00:56] *** Quits: _wovixo_ (~wovixo@146.151.192.66) (Ping timeout: 252 seconds)
[20:01:04] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:fdfe:2e33:e0d4:916)
[20:03:18] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[20:03:21] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[20:03:26] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 272 seconds)
[20:04:42] *** Quits: yaboiburner (~yaboiburn@68.235.43.84) (Ping timeout: 272 seconds)
[20:04:42] *** yaboiburner_ is now known as yaboiburner
[20:05:40] <Lyn> so React Native seems like a nice tool to make cross-platform apps with native components, but Electron also sounds nice as I could put the app on the web. Is there a way to get the best of both worlds?
[20:06:19] *** Joins: _wovixo_ (~wovixo@146.151.192.66)
[20:06:50] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Read error: Connection reset by peer)
[20:07:10] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[20:08:30] *** Joins: slavfox (~slavfox@93.158.232.111)
[20:08:52] <sandman13> oh no.
[20:09:05] <sandman13> Not Electron please.
[20:09:22] *** Quits: wovixo_ (~wovixo@128.104.205.49) (Ping timeout: 240 seconds)
[20:09:41] <Lyn> what would you suggest to get a mobile app to the web?
[20:09:48] <Lyn> web too*
[20:10:08] *** Quits: Guest50 (~textual@ool-43527ebe.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:10:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[20:10:28] <sandman13> Seems like a weird requirement tbh
[20:11:02] <Lyn> well, React Native is a nice way to get to use native components on mobile, and having an app on all platforms would be nice
[20:11:29] <sandman13> Is it open source?
[20:11:40] <sandman13> or is it for company?
[20:11:45] <Lyn> latter
[20:12:02] <sandman13> ask them use browser :D
[20:12:42] <sandman13> why bundle a browser if an independent browser can solve the issue?
[20:13:22] <Lyn> it's just me here :v lol, just trying to get at least something to work
[20:14:24] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:14:32] <sandman13> Not sure if i get your problem correctly but if you want Electron and React Native, then I assume that it's a web application.
[20:15:03] <sandman13> If it's so, then why not use browser for other platforms and React native for mobile?
[20:15:27] <sandman13> Why go extra step of creating an application that you have to maintain?
[20:16:17] <Lyn> I could use browser for other platforms yeah, just thinking how I could share as much code as possible between them
[20:16:36] <sandman13> define an API, then call it :)
[20:17:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 246 seconds)
[20:18:09] <Lyn> https://stackoverflow.com/a/64174893 this seems somewhat useful
[20:18:25] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[20:20:05] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:fdfe:2e33:e0d4:916) (Quit: Textual IRC Client: www.textualapp.com)
[20:21:05] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[20:21:17] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[20:21:53] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 268 seconds)
[20:22:10] *** Quits: node1 (~node1@user/node1) (Ping timeout: 240 seconds)
[20:22:58] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 240 seconds)
[20:23:03] *** Joins: node1 (~node1@user/node1)
[20:23:37] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:23:42] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[20:25:35] *** Quits: magla (~gelignite@55d41815.access.ecotel.net) (Quit: Stay safe!)
[20:26:14] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[20:28:26] <mrig> Writing an app to work on a command line is quite a nice way to define an API
[20:28:55] <mrig> if possible that is, then it is quite simple to make work in other environments.
[20:29:22] *** gggpkm_ is now known as gggpkm
[20:34:31] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[20:35:15] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[20:35:40] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Quit: Leaving.)
[20:36:29] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 255 seconds)
[20:36:56] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 255 seconds)
[20:38:55] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[20:40:42] <Izem> I'm reading about the sparkplug compiler and I am not sure how to decipher this phrase "With our current two-compiler model, we can’t tier up to optimised code much faster;". What does it mean to tier up?
[20:41:04] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[20:41:12] *** Joins: xerxes (~xerxes@117.222.64.149)
[20:43:28] *** Joins: caramel_ (~caramel@user/caramel)
[20:43:35] <Izem> I found a solution, it's related to hot-swapping code.
[20:43:36] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Remote host closed the connection)
[20:44:12] *** Joins: gggkmp (~gggkmp@221.219.70.176)
[20:44:32] <sandman13> After reading data off Unix socket, should it be closed?
[20:44:43] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[20:44:44] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 252 seconds)
[20:45:54] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:28b3:b880:7a24:ae63) (Quit: No Ping reply in 180 seconds.)
[20:46:23] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 255 seconds)
[20:46:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:46:42] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[20:47:09] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:159c:4e61:a4a8:867b)
[20:47:36] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[20:47:51] *** Joins: rifl` (~user@user/rifl)
[20:48:20] *** Quits: rifl` (~user@user/rifl) (Client Quit)
[20:48:36] *** Joins: rifl` (~user@user/rifl)
[20:49:09] *** rifl is now known as Guest9553
[20:49:09] *** Quits: Guest9553 (~user@user/rifl) (Killed (copper.libera.chat (Nickname regained by services)))
[20:49:09] *** rifl` is now known as rifl
[20:49:10] *** rifl is now known as rifl`
[20:49:17] *** rifl` is now known as rifl
[20:50:41] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[20:52:12] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[20:52:53] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[20:52:54] *** Quits: thesemic1lons (~thesemico@user/thesemicolons) (Quit: leaving)
[20:53:31] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[20:53:51] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[20:54:24] *** Joins: src (~src@user/src)
[20:54:45] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[20:56:22] *** Joins: gggkmp_ (~gggkmp@60.10.194.47)
[20:56:24] *** Quits: ji (uid72176@user/raj) (Quit: Connection closed for inactivity)
[20:56:55] *** Quits: gggkmp (~gggkmp@221.219.70.176) (Ping timeout: 246 seconds)
[20:57:11] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 255 seconds)
[20:58:02] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5) (Ping timeout: 252 seconds)
[20:59:22] <Izem> If you are done with it, yeah
[20:59:35] *** Quits: VoidFox (~voidfox@www.voidfox.de) (Quit: Goodbye)
[20:59:46] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5)
[21:00:41] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[21:00:50] *** Joins: rifl` (~user@user/rifl)
[21:01:25] *** Quits: rifl` (~user@user/rifl) (Remote host closed the connection)
[21:01:48] *** Joins: rifl` (~user@user/rifl)
[21:02:15] *** Quits: rifl (~user@user/rifl) (Killed (mercury.libera.chat (Nickname regained by services)))
[21:02:15] *** rifl` is now known as rifl
[21:03:30] *** Quits: gggkmp_ (~gggkmp@60.10.194.47) (Ping timeout: 265 seconds)
[21:03:53] <pyzozord> does unicode cover all characters from all alphabets in the world?
[21:04:13] <edgar-rft> no
[21:04:47] <pyzozord> I see, 154 modern and historic scripts
[21:05:14] <pyzozord> I wonder if any modern commonly used symbols are not covered
[21:05:44] <sandman13> I doubt it
[21:06:25] <GeDaMo> You can request symbols be added to Unicode
[21:06:36] <edgar-rft> you can say "99.999% of all characters you'll find in everyday life are meanwhile included" but some esoteric or rarely used scripts are missing
[21:06:59] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[21:07:11] *** Joins: hposca (~hposca@node-1w7jr9phoke2swvj0j3acea4z.ipv6.telus.net)
[21:07:37] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[21:07:38] <xerxes> edgar-rft: there are also undeciphered scripts.
[21:08:00] <GeDaMo> "How I added 6 characters to Unicode (and you can too)" http://www.righto.com/2016/10/inspired-by-hn-comment-four-half-star.html
[21:08:16] *** Quits: hposca (~hposca@node-1w7jr9phoke2swvj0j3acea4z.ipv6.telus.net) (Read error: Connection reset by peer)
[21:08:25] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Client Quit)
[21:08:37] *** Quits: Booster2ooo (~Booster2o@91.183.83.5) (Read error: Connection reset by peer)
[21:08:50] <pyzozord> oh that was a good add
[21:08:55] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[21:09:10] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 246 seconds)
[21:09:12] <pyzozord> does that means we can actually request new emojis?
[21:09:27] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[21:09:29] <edgar-rft> I'm still waiting for John Dee's celestial alphabet to be included :-)
[21:09:36] <xerxes> pyzozord: the script of the ancient Indus Valley Civilisation is still undeciphered. while they don't know if it's an alphabet, it's proposal is still pending.
[21:09:56] <sandman13> Brahmi scripts xerxes ?
[21:10:12] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[21:10:19] *** Joins: hugoposca (~hposca@node-1w7jr9phoke2swvj0j3acea4z.ipv6.telus.net)
[21:10:30] <xerxes> sandman13: no. Brahmi is present in Unicode already.
[21:10:31] *** Joins: caramel (~caramel@user/caramel)
[21:10:37] *** Joins: rifl` (~user@user/rifl)
[21:11:35] *** rifl is now known as Guest5115
[21:11:35] *** Quits: Guest5115 (~user@user/rifl) (Killed (osmium.libera.chat (Nickname regained by services)))
[21:11:35] *** rifl` is now known as rifl
[21:11:50] *** Quits: caramel_ (~caramel@user/caramel) (Ping timeout: 272 seconds)
[21:11:53] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[21:11:56] <xerxes> sandman13: Indus Valley Civilisation predates Brahmi script by a millenium. researchers are still trying to decipher it.
[21:12:27] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Ping timeout: 268 seconds)
[21:12:42] <sandman13> https://en.wikipedia.org/wiki/Indus_script
[21:12:44] <sandman13> i see
[21:13:17] <xerxes> sandman13: it's a mystery.
[21:13:32] <pulse> those ancients, should have just used utf-8
[21:13:45] <sandman13> Yeah. Very few things were written down. Most of the knowledge was transferred orally and remembered using memorization
[21:13:51] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[21:13:55] <xerxes> pulse: that won't help in deciphering it.
[21:14:13] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:14:18] <pulse> maybe if the ancients made a spec and published it online
[21:14:42] <edgar-rft> true, Indus Valley is still a treasure full of archeological surprises :-)
[21:15:41] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[21:16:08] <xerxes> the Latin script as used in English has 26 symbols. largest *samples* of Indus script are 26 characters long. if they just had written more, it would be easier.
[21:16:31] <edgar-rft> ...and I think that my own handwriting is an undecipherable script by its own
[21:17:23] <arkanoid> which programming language would you study or how to train bulding larger and safer computer programs? I'm going toward the "more pure functions" direction, but not sure
[21:17:55] <Izem> what do you mean by safe?
[21:18:42] <edgar-rft> I'm still in favour of using Common Lisp for large and complicated programs, but it might be a personal preference
[21:18:45] <sandman13> edgar-rft: Entire Indian region has surprises
[21:19:08] <hjf> Rust is the favorite for "safe" programming nowadays
[21:19:23] *** Quits: node1 (~node1@user/node1) (Read error: Connection reset by peer)
[21:20:18] <sandman13> There are various "myths" like submerged city of Dwarka, Ramsetu connecting India and Sri Lanka, nuclear warfare during Mahabharata etc.
[21:20:24] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:20:34] <xerxes> sandman13: Indus Valley Civilisation is a total mystery. nobody knows how it vanished. nobody knows what they believed.
[21:20:54] <hjf> so i noticed my new team lead was a little upset today
[21:21:12] <hjf> kinda annoyed i "haven't done much since i joined 3 weeks ago"
[21:21:13] <sandman13> xerxes: one more reason to build time machine tbh :D
[21:21:18] <arkanoid> edgar-rft: yeah common list if a safe choice, at least for the pure functional part. But handling side effects is quite messy
[21:21:35] <hjf> and i was like wow.. i expected him to guide me? he's the team lead anyways?
[21:21:55] <hjf> then he goes on saying that the company expect senior developers to work for themselves, own the product, follow the tickets...
[21:22:06] <hjf> i think i screwed up
[21:22:08] <Izem> 3 weeks seems like about enough time to just have gotten up to speed on the project
[21:22:25] <Izem> but you have to ask about these things I've noticed
[21:22:29] <arkanoid> hjf: I've already tried rust, but it doesn't teach me anything about building larger programs
[21:22:30] <xerxes> sandman13: India and Sri Lanka are close enough on sea but the existence of a bridge is a myth out of Ramayana.
[21:22:45] <xerxes> arkanoid: what's the purpose?
[21:22:48] <hjf> Izem: yeah it seems i was supposed to know how to use jira
[21:22:50] <hjf> and
[21:22:55] <hjf> dude jira is customizable
[21:23:03] <hjf> every company uses it differently
[21:23:14] <pulse> jira is the worst platform in existence as far as i'm concerned
[21:23:15] <Izem> if the horizontal axis is percentage of improvement, what does a negative percentage mean? https://ibb.co/sVZ6Rnc
[21:23:41] <pyzozord> I'm confused about what is "most significant" and "low order" in this sentence"The four most significant bits of the code point are stored in the remaining low order four bits of this byte"
[21:23:53] <hjf> i talked to other two coworkers
[21:24:04] <hjf> one was a "buddy", the person assigned to walk me through
[21:24:18] <hjf> he was never very engaged. all i could do was make smalltalk with him
[21:24:22] <arkanoid> xerxes: you know when you are designing a large program and you're trying to split the problem into something more manageable, and you think you've find the sweet spot UNTIL one day you find yourself in something barely manageble. I want to reduce this possibility
[21:24:38] <hjf> out of our 5 scheduled meetings he only showed up for 2 and excused from the rest
[21:24:55] <hjf> and the other guy was completely like "yeah yeah just grab a ticket, work on it, and commit"
[21:25:07] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:9906:b11f:fc03:2673) (Read error: Connection reset by peer)
[21:25:09] <hjf> and this is microservices hell, i have no idea how any of this works
[21:25:10] <xerxes> arkanoid: that's inevitable. use the language you like. there is no silver bullet.
[21:25:15] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[21:25:24] <hjf> i mean, am i supposed to just reverse engineer it to work on it?
[21:25:31] <sandman13> xerxes: It's incorporated in Ramayana but it's age is not fully decided IIRC
[21:25:35] <GeDaMo> pyzozord: in the decimal number 123 (one hundred and twenty three), 1 is the most significant digits, 3 is the least significant
[21:25:35] <hjf> because i could but that seems stupid
[21:25:53] <arkanoid> xerxes: I don't agree. I think putting more functional flavor into a design makes it more robust (maybe not performant, but it depends)
[21:25:58] <sandman13> xerxes: https://en.wikipedia.org/wiki/Adam%27s_Bridge whole section is filled with "yeah, no, maybe" thing
[21:26:22] <xerxes> sandman13: it's an epic. like the Illiad. nobody knows how much of it is true.
[21:26:36] <xerxes> arkanoid: use Haskell, then.
[21:26:53] <GeDaMo> pyzozord: 0bxxxxmmmm the ms are the 4 low order bits
[21:26:53] <beaky> nice i like haskell
[21:26:55] <pyzozord> GeDaMo: Thanks, and four lowest order bits of this byte 0111 1011 will be which one?
[21:27:13] <GeDaMo> 1011
[21:27:31] <xerxes> arkanoid: robust code could be written in languages from C to Idris to APL if you know what you're doing.
[21:27:38] <pyzozord> GeDaMo: oh ok thanks! And that's independent of the endiness right? Endianess is about byte ordering, doesn't have anything to do with bits
[21:27:44] <GeDaMo> Correct
[21:27:49] <pyzozord> thanks!
[21:27:49] <xerxes> arkanoid: let the language choose you.
[21:27:50] <arkanoid> xerxes: ok, but I came here with a different question. I'm not asking you to support my direction, but possibly show me the way
[21:28:36] <xerxes> arkanoid: i did. unless you want to start another debate, settle with Haskell. you're lucky `pikapika` is not listening now :)
[21:29:25] <arkanoid> I'm not following you, neverming, I'll go ask elsewhere
[21:29:47] * edgar-rft shows arkanoid the way to the next whiskey bar ♪ ♬ ...
[21:30:01] <xerxes> arkanoid: it looks awfully like you're just language shopping instead of actually designing stuff. i've been there. it's a waste of time.
[21:30:17] <xerxes> arkanoid: Haskell is the state of the art if you want pure.
[21:30:39] <xerxes> arkanoid: C or Rust is the state of the art if you want bare and fast.
[21:30:52] <arkanoid> I've been programing with dozen programming languages, I already have my favourites, I know haskell, I know fortran, I know the gray area between. Question is different
[21:31:42] <xerxes> arkanoid: if you already know a dozen programming languages, the question is unnecessary. people have achieved more with knowing only two or three languages.
[21:32:41] <xerxes> sandman13: it's not even clear if Sri Lanka is the "Lanka" mentioned in Ramayana.
[21:32:51] *** Joins: rifl` (~user@user/rifl)
[21:33:14] <xerxes> sandman13: it's very hazy. at least they know where Troy is in Turkey.
[21:33:18] <arkanoid> any pure functional library + is elixir in my opinion a sweet spot for designing large resilient architectures. Any better idea?
[21:33:37] <xerxes> arkanoid: that's a good one. go ahead.
[21:33:41] <sandman13> xerxes: Happens with mythologies. Story told with loose connection to reality
[21:34:11] <xerxes> sandman13: i think that's what makes them so captivating.
[21:34:22] *** Quits: rifl (~user@user/rifl) (Ping timeout: 246 seconds)
[21:34:29] <xerxes> sandman13: they would be pretty boring if they were real.
[21:34:44] *** Joins: VideoGameEnjoyer (~davidv7@BSN-143-126-182.dynamic.siol.net)
[21:34:50] <sandman13> Yeah. With Mahabharat, though, the places seem to match.
[21:34:57] *** rifl` is now known as rifl
[21:35:04] <Thedarkb-Desktop> The reason why it's more legend than history is that Greek civilisation fell victim to the Bronze Age Collapse.
[21:35:11] <xerxes> arkanoid: there is no sweet spot. Fred Brooks stated it decades ago. go with what you fell in love with.
[21:35:29] <arkanoid> xerxes: why are you doing this? Isn't this a forum about programming? If you don't want/like the topic just step aside. There's no intention here to discuss about personal preferences
[21:36:20] <xerxes> arkanoid: i liked how it was before you came. it was one of the rare moments of calm without any stupid debates. i fear if you ask around, you might start one.
[21:36:52] <xerxes> i hate debates.
[21:37:29] *** Joins: gggkmp (~gggkmp@60.10.194.47)
[21:38:25] *** Joins: rifl` (~user@user/rifl)
[21:38:27] <xerxes> sandman13: with Ramayana too, many places match. but archaelogical evidence is lacking with both.
[21:39:03] <arkanoid> you hate it so much you started it. I asked for general direction on how to build larger programs. You turned it into a "follow your hart" thing. You could answer like that on ANY topic, starting from Church VS Turing halting problems.
[21:39:04] <sandman13> Only thing that's real is Valmiki, the author.
[21:39:32] *** Quits: rifl (~user@user/rifl) (Ping timeout: 258 seconds)
[21:39:38] *** Quits: The_Blode (~Blode@92.40.181.36.threembb.co.uk) (Changing host)
[21:39:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:40:12] <pyzozord> why does unicode add stores only 6 bits of the code point in each byte? Do I understand correctly that's because they need the first bit of each byte to be 1 because that's 128+ which is outside of the 7-bit ascii?
[21:40:48] <xerxes> arkanoid: you asked for a programming languages. there aren't many. Haskell. OCaml. F#. Idris. Agda. Elm. take your pick and move on. i don't want a debate. it's you who were looking for a debate disguised as a discussion.
[21:41:23] <arkanoid> xerxes: please read again my question
[21:41:37] <deniska> pyzozord: s/unicode/utf-8/, and the amount of informational bits depends on the byte position in the character
[21:41:40] *** Quits: rsx (~dummy@ppp-188-174-136-181.dynamic.mnet-online.de) (Quit: rsx)
[21:41:57] <deniska> pyzozord: oh, wait, I misremember utf-8
[21:42:13] <pyzozord> deniska: oh yes, it was a question specifically about utf-8, sorry
[21:42:31] <pyzozord> deniska: no no, you are right, i wrote "unicode" but I meant specifically utf-8
[21:42:36] <deniska> pyzozord: I guess the reasoning is to be able to recover if you catch utf-8 mid stream
[21:42:47] <GeDaMo> It's a variable length encoding so you don't need to use a 32 bit value for each codepoint
[21:43:06] *** Joins: rifl`` (~user@user/rifl)
[21:43:17] *** Quits: rifl` (~user@user/rifl) (Ping timeout: 268 seconds)
[21:43:35] <deniska> pyzozord: '10xxxxxx' will never be a beginning on a utf-8 character, only a continuation byte
[21:43:39] <deniska> s/on/of/
[21:44:04] <src> arkanoid: golang forces you to think about error handling, and also is strict in enforcing coding style and certain conventions; the language was specifically created for Google, where a lot of people work on huge software stacks; and due to it's closeness to C I think many skills you learn there might be applied to other languages as well.
[21:44:18] <deniska> the beginning bits are either 0, or 11
[21:44:25] <xerxes> arkanoid: i read it. i also read very honest answers people gave you which you were quick to dismiss without a second thought. you're looking for a C-3PO level programming language that does all the work and while you just waste chat in Libera.
[21:44:39] <xerxes> arkanoid: there is no silver bullet.
[21:44:56] <deniska> in golang you have to mindlessly type error handling boilerplate
[21:45:01] <pyzozord> ooh i get it thanks deniska!
[21:45:10] <deniska> or just ignore the return value, it's ok too, go doesn't force you to handle it :D
[21:45:12] <pyzozord> so it's not really about first 127 ascii chars
[21:45:19] <src> arkanoid: other than that I think there are some good resources for how to generally lay out programs, program structure etc, but I would have to look that up myself; maybe search for some books and read their prefaces to pick one.
[21:45:24] <pyzozord> which also happen to be 0xxx xxxx
[21:45:26] <xerxes> arkanoid: if you find an arcane programming language that hits the sweet spot, be ready to write and debug all the libraries by yourself.
[21:45:43] <deniska> pyzozord: well, the desire to keep utf-8 backward compatible with ascii is at play here
[21:46:08] <deniska> everything 0xxxxxxx must mean the same thing as in ascii
[21:46:42] <deniska> so utf-8 have 1xxxxxxx to play around with for "non-ascii" stuff
[21:47:21] <pyzozord> that's pretty clever
[21:47:29] *** Quits: rifl`` (~user@user/rifl) (Remote host closed the connection)
[21:47:51] <deniska> utf-8 really boosted unicode adoption
[21:47:57] *** Joins: rifl`` (~user@user/rifl)
[21:48:13] <deniska> prior to it nobody wanted to waste 2 or 4 bytes on characters from ascii :)
[21:48:14] <arkanoid> src, Go enforces some style and conventions, but doesn't say you anything about program architecture. The huge program architectures from google made in Go are probably designed upfront, not really within Go pro or cons
[21:48:17] <GeDaMo> http://utf8everywhere.org/
[21:48:18] *** rifl`` is now known as rifl
[21:48:34] *** Quits: c705 (c705@alpine/contributor/c705) (Ping timeout: 272 seconds)
[21:48:53] <Izem> how do design large programs? Depends on the paradigm.
[21:49:04] *** Quits: VideoGameEnjoyer (~davidv7@BSN-143-126-182.dynamic.siol.net) (Remote host closed the connection)
[21:49:04] <arkanoid> src: thanks for the hints
[21:49:11] <src> arkanoid: I've read your first message and answered based on that, can't afford right now to be drawn into a discussion or find out what exactly it is you're looking for
[21:49:12] <pyzozord> looks like utf-8 is not that big a deal and I could implement it myself. Still bothers me a bit that I don't have constant lookup time for any character a bit
[21:49:17] <xerxes> he/she is just going to dismiss everything. he's not here to ask.
[21:49:35] *** Joins: pavonia (~user@user/siracusa)
[21:49:46] *** Quits: JuggleTux (~tux@mob-194-230-146-192.cgn.sunrise.net) (Ping timeout: 240 seconds)
[21:50:08] <deniska> pyzozord: parsing utf-8 is easy part, rendering fonts is the hard one :D
[21:50:14] <deniska> rendering text even
[21:50:53] <xerxes> there are established maximas in the programming language space depending on what one's needs are. no local maximum is comparable to any other local maximum. i've already told it.
[21:51:01] <arkanoid> Izem: I quite agree, that's why I'm bending my preferences into functional, but also erlang VM message passing mode has been quite successfull in my experience. What would you suggest?
[21:51:01] <xerxes> s/maximas/maxima/
[21:51:18] *** Joins: VideoGameEnjoyer (~davidv7@BSN-143-126-182.dynamic.siol.net)
[21:51:28] <xerxes> arkanoid: have you ever coded anything of repute?
[21:52:15] <xerxes> kids these days are spending too much time on Hacker News and Lobsters.
[21:52:21] <Izem> arkanoid: what kind of programs are you building?
[21:52:29] <xerxes> Izem: he's not building anything.
[21:52:43] <xerxes> Izem: the word is masturbating.
[21:52:47] <arkanoid> Izem: what do you mean by "kind" in your question?
[21:52:50] <Izem> relax lol
[21:52:59] *** Quits: gggkmp (~gggkmp@60.10.194.47) (Ping timeout: 255 seconds)
[21:53:01] <mrig> xerxes: no need to be insulting.
[21:53:06] <arkanoid> could we please kick xerxes
[21:53:58] <Izem> anyways, like concurrent sever programs for example
[21:54:47] <arkanoid> if by kind you intend program purpose, I'm into scientific calculus, with general deviation into geographical systems and navigation. But also videogames (worked 10 years in the industry)
[21:55:10] *** Joins: dmu (~darkmusic@user/darkmusic)
[21:55:14] *** Quits: rifl (~user@user/rifl) (Ping timeout: 252 seconds)
[21:55:26] <Izem> what you described is kinda weird since typically functional programs are ready for concurrency, and erlang is a functional language
[21:58:20] <Izem> the paradigm is what allows you to reason about your programs in the large, so once you have decided on that, the skys the limit I guess
[21:59:44] <Izem> it's rather abstract to discuss unless you have something more specific in mind
[21:59:59] <mrig> arkanoid: I would probably go back and re read xerxes's reply's to you, much of it seems very astute to me; It could be that you may have missed something.
[22:01:23] <xerxes> mrig: don't mind. he's not asking for help. i'm surprised an experienced person would do that.
[22:01:24] <pikapika> No language can stop a programmer from writing bugs. And its generally harder to trust a language where you have no idea about where mallocs/frees are happening etc
[22:01:56] <xerxes> arkanoid: behold the juggernaut! `pikapika` here.
[22:02:26] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[22:02:30] <mrig> xerxes: learning how to learn and how to listen, is just as hard as learning how to program :)
[22:02:45] <mrig> make doing both a particularly tricky endeavor.
[22:02:48] <xerxes> mrig: no. he's listening alright.
[22:02:54] <xerxes> mrig: i'm listening alright too.
[22:02:57] <arkanoid> I know, mine IS an abstract question. I'm not new to programming at all, but as I said I've just started "thinking" in functional way (I come from imperative/OOP school). I've experimented with elixir/erlang, harskell, ocaml and common lisp during last months, just to try building some functions I tend to use everyday moving side effects "on the edge of the system". It seems to work, but not
[22:02:59] <arkanoid> sure if it really is the direction to follow to build larger and safer programs.
[22:03:37] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:03:40] *** Joins: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr)
[22:03:40] <xerxes> arkanoid: do you want me to repeat the advice one more time?
[22:04:15] <Izem> ocaml is object oriented :)
[22:04:36] <pikapika> xerxes, I really don't have much to add. I think people here have a rough idea about what I like and dislike etc
[22:04:46] <Izem> ah I know
[22:04:57] <arkanoid> Izem: true, but is an additional feature from SML :)
[22:04:59] <Izem> math, the ultimate programming language
[22:05:10] <mrig> arkanoid: why would any one way be right for everyone?
[22:05:17] <mrig> seems unlikely.
[22:05:26] <Izem> you won't be disappointed :P
[22:05:29] <pikapika> Math really isn't a good programming language, for one "finite" can mean arbitrarily large
[22:05:41] <pyzozord> GeDaMo: very interesting link, thanks
[22:05:53] <Izem> you can build large things in it that are reliable :P
[22:06:05] *** Joins: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net)
[22:06:08] <xerxes> mrig: i compare it to looking at pornography and realising it's all just fucking yourself anyway. no amount of shopping in actresses and models is going to give one a kid because you need and actual 3D woman for that. with actual 3D woman come all the actual 3D problems. no silver bullet. my analogy is correct even if it seemed rude. i didn't intend it.
[22:06:14] <Izem> plus you don't have to worry about physics
[22:06:39] <mrig> xerxes: you cant make an omelette without breaking eggs.
[22:07:12] <mrig> Ah physics, that old chestnut, spoiling mathematical purity :D
[22:07:53] <xerxes> mrig: plus, making an omelette is not a foolproof procedure. the eggshell can go in the whites. the butter may not spread. those are problems with cooking. no *recipe* or *tool* is going to make it away.
[22:08:39] <Izem> but really it all depends on the model, if you aren't using one then yeah it's gonna be hazardous xD
[22:08:47] <mrig> xerxes: sure the is a lot of difference between a good omelette and bad one, with just those few steps and procedures.
[22:08:47] <xerxes> correct me if i'm wrong. but aren't compilers and OSes supposed to be the most robust software on the planet?
[22:09:00] <Izem> no?
[22:09:03] *** Joins: rifl (~user@user/rifl)
[22:09:09] <xerxes> Izem: ?
[22:09:16] <mrig> arkanoid: have you read design patterns?
[22:09:27] <Izem> I thought robust software was in science applications
[22:09:54] <arkanoid> mrig: it depends. A crash is catastrofic in any context, a bug maybe not. Modern languages helps deal with less crash, but number of bugs may skyrocket over time due to a number of bad initial choices, and that depends on said paradigm/design.
[22:09:55] <xerxes> Izem: sure. but even the science *apps* run on some OS, some compiler, some VM?
[22:10:12] <arkanoid> mrig: yeah, Fowler works, and other less *academical*
[22:10:27] <Izem> sure, those environments might not be robust though
[22:10:52] <pikapika> I think the best designs come when you iterate multiple times and or by multiple users the idea from scratch until you get a full feel for it
[22:10:59] <xerxes> Izem: the robustness of the science app can't be greater than the software it's running on?
[22:10:59] <pikapika> Obviously this isn't always possible
[22:11:11] <Izem> sure it can
[22:11:11] *** Quits: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289) (Ping timeout: 252 seconds)
[22:11:16] <pikapika> Quick feedback and edit cycles from Real Life is the best software design
[22:11:19] <pikapika> Nothing can beat it
[22:11:28] <mrig> arkanoid: I'm finding 'Object oriented software construction' by Bertrand Meyer to be pretty interesting too.
[22:11:35] <pulse> with bad devs no amount of real life cycles will produce good software pikapika :p
[22:11:39] <xerxes> Izem: the point was. is major OS in the world are written in C, who says that you can't write robust stuff in C like languages?
[22:11:41] <pulse> see: all bad software currently existing in the world
[22:11:42] <Izem> e.g. you could have an application with zero bugs, but the compiler and os sure do
[22:11:46] <xerxes> Izem: in practice it can't, though.
[22:12:01] <paulo_> hi
[22:12:08] <Izem> error handling could be primitive, etc
[22:12:20] <paulo_> they've advanced me to the system design interview
[22:12:24] <paulo_> any advice?
[22:12:27] <paulo_> it's the first tiem
[22:12:30] <Izem> like, an application could have better error handling than an os
[22:12:33] <paulo_> *time I'm taking one
[22:12:40] <xerxes> there it is. are you happy now arkanoid? there's a debate now. enjoy!
[22:12:51] <arkanoid> OSs are big and FULL of bugs, but army of devs are fixing them day by day
[22:12:57] <Izem> xerxes: I get your point
[22:13:09] <xerxes> i'm leaving. you can't have a moment of peace in here! FAK!
[22:13:22] <arkanoid> xerxes: please, do
[22:13:27] <pikapika> No language can save you from the blood and sweat reality of hardware and networks
[22:13:33] <pikapika> Os dev is messy by necessity
[22:13:39] <pikapika> Someone has to tackle that layer
[22:13:48] <mrig> arkanoid: no need to be rude.
[22:14:00] <arkanoid> I agree, OS is side-effect ONLY software :D
[22:14:22] <Izem> e.g. SQLITE is really up there in terms of software quality
[22:14:31] <pulse> i think any useful program is messy
[22:14:41] <pulse> i don't think you can have both usefulness and non-messyness
[22:14:43] <xerxes> i agree with whatever pikapika says now and in the future. i don't need these toxic debates. i can go do actual masturbation. it's much pleasureable than the mental masturbation arkanoid is inviting us to do. ciao!
[22:15:04] <pikapika> pulse, there is a word "Kolmogorov complexity"
[22:15:05] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:5056:66c0:d6e:186f)
[22:15:10] <arkanoid> pulse: you can, if pure functional, but this is just a general sentiment
[22:15:12] <oldlaptop> Izem: indeed, its example is pretty instructive for this kind of "argument"
[22:15:20] <pulse> pikapika, i'm familiar with it
[22:15:20] *** Quits: xerxes (~xerxes@117.222.64.149) (Quit: leaving)
[22:15:30] <pulse> arkanoid, and how many useful pure functional programs exist
[22:15:32] <pikapika> I like the concept of it pulse
[22:15:35] *** Joins: guest4389 (~guest@2001:5b0:2a0c:d498:65a9:243e:9ab2:789f)
[22:15:48] <pulse> pikapika, i read about it in the context of undecidability wrt. compression
[22:15:51] <Izem> the problem isn't bugs
[22:16:06] <dan01> Can someone explain what DXVVK does?
[22:16:12] <Izem> the thing he asked about was making larger systems/programs
[22:16:24] <dan01> Does it map DirectX API calls to Vulkan ones?
[22:16:43] <pulse> and i bet fp is equally messy for large programs
[22:16:49] <Izem> I remember alan kay gave an example from biology to show that we have a long way to go
[22:16:50] <arkanoid> pulse: whatsapp, pinterest, goldman sachs, IBM cloud in general, for example
[22:16:52] <pulse> i don't think it magically solves messiness
[22:17:06] <Izem> pulse: that's not the argument?
[22:18:17] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[22:18:23] <arkanoid> pulse: actually I don't know. And that's a good question. I'd be glad to read about BAD things about functional programming, beside the general *it is more difficult* thing
[22:18:37] <guest4389> In c++, how do i access a local variable outside of its function while the function is running?
[22:18:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:19:07] <Izem> lambda?
[22:19:10] <pulse> Izem, i was just going off on a tangent
[22:19:14] <Izem> ok
[22:19:20] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[22:19:20] <Izem> I got duped anyways
[22:19:51] <oldlaptop> guest4389: Do you want a call-ee to be able to access local variables in its caller? Or are you thinking of something else?
[22:20:36] <arkanoid> thanks for all the ideas. I have to go now
[22:21:14] *** Quits: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net) (Quit: Leaving)
[22:22:44] <guest4389> oldlaptop: no. i want a different function(let's say functionB) to be able to see a variable in functionA. The variable is in functionA and not main.
[22:23:08] <Izem> interestingly enough this concept wasn't possible in traditional imperative languages :P
[22:23:21] <Izem> easy answer is a global
[22:23:29] <guest4389> i am not allowed to use global
[22:23:35] <oldlaptop> Perhaps you should construct a code sample to illustrate what you're trying to do. It sounds like what you're asking for is not possible.
[22:24:12] <Izem> ^
[22:24:16] <pikapika> guest4389, use a pointer/reference
[22:25:18] <guest4389> ive used reference before. I thought it wasn't possible to reference to a variable that isn't in main?
[22:25:35] <Izem> example time
[22:25:40] <pikapika> main isn't special
[22:26:03] <jeaye> guest4389: What you're trying to do is not safe or portable, if functionA owns the var. You will need to pull the var out of functionA so it can be shared. Otherwise, it's just part of the stack frame of functionA.
[22:26:28] <guest4389> https://bpa.st/37WQ
[22:26:32] <oldlaptop> Of course it's possible to have references to variables that aren't in main(), but you sound like you have some deeper confusion. (That's why I'm asking for an example, it's hard to tell what exactly you're thinking. Everyone else is guessing.)
[22:26:41] <pikapika> jeaye, if functionB is being called from functionA then he just needs to pass them via pointers or references
[22:26:51] <jeaye> or value.
[22:27:15] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[22:27:17] <guest4389> sorry if I explained it poorly. I'm just learning functions.
[22:27:59] *** Joins: arcatech (~arcatech@user/arcatech)
[22:28:17] <oldlaptop> guest4389: Where in that example do you want to access a variable "from another function"?
[22:28:32] <pikapika> Have you been taught structs yet guest4389 ?
[22:28:45] <pikapika> I'd say just wrap the whole state into a struct and pass a pointer/ref of it to each function
[22:28:51] <guest4389> pikapika: no
[22:29:00] *** Joins: Auron (~Auron956@user/auron)
[22:29:37] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[22:29:55] <guest4389> oldlaptop: the variable i want to access is int flip in the count function.
[22:30:06] <pikapika> I think your program intends toss() to set a flag...why not just use a return value for that?
[22:30:07] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:30:28] <pikapika> oh
[22:30:34] <pikapika> they want it to be void toss()
[22:30:45] *** Joins: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[22:30:47] <pikapika> but yes then you just add a flag in it for indicating the result of the toss
[22:30:55] <pikapika> and toss should be a single flip I think
[22:31:01] <pikapika> its your main that should do a for loop
[22:31:06] <guest4389> yes. toss and count function have to be void
[22:31:17] <oldlaptop> guest4389: Do you mean you want to access the `flip` defined in toss() from count(), or that you want to access the `flip` defined as one of count()'s parameters from somewhere else?
[22:31:29] <pikapika> guest4389, toss should do just one flip, and just add another int& result to it
[22:31:45] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[22:32:32] <pikapika> or according to your naming convention, int& flip
[22:32:35] *** Quits: chomwitt (~Pitsikoko@athedsl-16082.home.otenet.gr) (Ping timeout: 255 seconds)
[22:33:05] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:35:18] <Izem> what's the significance of http supporting mime types? Is it that the browser can offer to open the file with a specific application?
[22:35:43] <Izem> Or does it not matter to the browser at all?
[22:37:01] *** Joins: inky (~inky@5.77.216.31)
[22:37:16] *** Joins: \c (~\c@user/o/x-1005988)
[22:37:50] <guest4389> oh. i see. thank you pikapika and oldlaptop. im going to move the for loop to main and include the displayFace function as part of the loop. what im trying to do is output heads or tails for each coin flip. i think it makes more sense to have the loop in main.
[22:38:06] <deniska> Izem: it's one of the mechanisms browsers use to figure out what to do with a response
[22:38:12] <pikapika> Correct guest4389
[22:38:26] <guest4389> when i was testing it, i output heads or tails inside the count loop but im not allowed to do that.
[22:39:01] <oldlaptop> guest4389: I suppose I don't see how accessing variables that belong to one function from another function would help with that.
[22:39:17] *** RedNifre_ is now known as RedNifre
[22:39:42] *** Joins: inky_ (~inky@45.15.149.177)
[22:41:09] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:41:11] <oldlaptop> Did you want getSideUp() to inspect the value of `flip`?
[22:41:14] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:41:19] <Izem> ok I see my mistake
[22:41:33] <Izem> MIME is a separate protocol
[22:41:35] *** Quits: inky (~inky@5.77.216.31) (Ping timeout: 255 seconds)
[22:42:06] <Izem> HTTP does uses MIME, so that would be it's relationship
[22:42:16] <Izem> technically it is part of HTTP
[22:42:18] <guest4389> yes
[22:42:58] <oldlaptop> You would want to just provide that information as a parameter, then.
[22:43:48] <deniska> Izem: http has Content-Type header which uses MIME syntax
[22:43:57] <deniska> MIME originated in e-mail
[22:44:09] *** Quits: inky_ (~inky@45.15.149.177) (Ping timeout: 256 seconds)
[22:44:44] <mrig> Izem: the mime type tells the client or server what type of file to expect.
[22:44:48] <Izem> ok, on linux it does seem they use MIME to open stuff in desktop environments, what about windows and mac? Does windows just go by the extension?
[22:45:06] <Izem> Wonder what mac does
[22:45:38] <oldlaptop> It would be possible for getSideUp() to "access" a variable in its caller (or its caller's caller, or...), using either a reference or a pointer, but you don't have any reason to do that here. (Generally, you only use references or pointers when you need to modify the variable in the caller, like toss() and count() are doing with totalHeads and totalTails. There are some other reasons, but you don't sound like you're learning about them yet.)
[22:45:48] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:70ea:eb3b:d5a4:82bf) (Quit: Textual IRC Client: www.textualapp.com)
[22:45:50] <mrig> the extension does not effect the file on a UNIX type system, I think that the MIME type is specific to HTTP.
[22:45:58] <Izem> also I'm trying to figure out why the browser does so much, if your desktop environment has always supported those file types
[22:46:41] <mrig> ah no its not
[22:47:16] <Izem> all this complexity just to get a file server :P
[22:47:34] <Izem> at least, that's what it looks like to me
[22:47:49] <deniska> Izem: well, when you have a file, the extension is typically used
[22:48:09] <mrig> I think MIME was used in email before http came along, the spec for defining one might help to clarify : https://datatracker.ietf.org/doc/html/rfc6838
[22:48:14] <Izem> oh wait, did http support files from the start?
[22:48:14] <deniska> MIME file isn't stored in a file anyway
[22:48:18] <deniska> MIME type*
[22:48:42] <mrig> It is just a selection of possible types if I'm not mistaken.
[22:48:53] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:49:08] <deniska> Izem: well, sometimes a browser have to decide whether to try to display a file, or to just hand it to an external program
[22:49:22] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:50:01] <deniska> Izem: also if you put html as a string inside json, without a correct MIME type a browser will try to render it as an html rather than to display it as a plain text
[22:50:44] <Izem> interesting
[22:50:49] <deniska> so even before an external program comes to play, browser has to decide whether to render a thing, and how, as a plain text, html page, embedded video player or whatever
[22:50:52] <Izem> the browser evolution is kinda nuts
[22:50:58] *** Joins: brabrax_ (~brabrax@user/brabrax)
[22:51:12] *** Joins: dolor_avis (~dolor_avi@user-5-173-14-171.play-internet.pl)
[22:51:34] *** Joins: luckyxxl (~luckyxxl@185.209.196.149)
[22:51:45] <Izem> deniska: right, thanks
[22:51:56] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:6df6:cde4:b7d8:e8d5) (Ping timeout: 255 seconds)
[22:53:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[22:53:14] <Izem> now I just need to figure out REST and I think I'll arrive at the modern web :P
[22:53:54] <deniska> I hope modern web is a fad which will go away :)
[22:54:01] *** Joins: exilepilot (~exile8338@host86-164-249-163.range86-164.btcentralplus.com)
[22:54:18] *** Joins: JuggleTux (~tux@mob-194-230-146-192.cgn.sunrise.net)
[22:54:51] *** Quits: freakazoid333 (~freakazoi@72.168.176.32) (Read error: Connection reset by peer)
[22:55:33] <Izem> "The basic idea of REST is that a resource, e.g. a document, is transferred via well-recognized, language-agnostic, and reliably standardized client/server interactions. Services are deemed RESTful when they adhere to these constraints." Sounds like they needed another protocol :P
[22:55:42] <pyzozord> the press and paper magazines were the apex of the web technology, and maybe radio
[22:55:49] <Izem> deniska: any solutions on the horizon?
[22:55:54] *** Joins: inky_ (~inky@45.15.149.181)
[22:56:43] <pyzozord> Izem: we shouldn't go forward, we should go back, we had it already and we lost it!
[22:57:02] <pyzozord> right now we are in absurdly TMI world
[22:57:38] <deniska> Izem: solution for what?
[22:57:40] <pyzozord> we solved the problem of information scaricity too much
[22:57:41] <jeaye> Never TMI in the Information Age.
[22:57:44] <mrig> Izem: I hear that gopher is the latest new crazy protocol :D
[22:58:09] <Izem> I think that's independent of computer networks? but yeah I guess that's the easy solution xD
[22:58:24] <mrig> now what to do with all the false information?
[22:58:30] <deniska> By modern web I mean the idea of using JS as opposed to HTML to build DOM
[22:58:38] <Izem> gopher just looked like a striped down web
[22:58:42] <mrig> :D there is no balancing this equation.
[22:58:42] <Izem> I don't get it
[22:59:01] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 265 seconds)
[22:59:52] <Izem> mistakes were made, just have to make a new one
[23:00:12] <guest4389> i use NoScript and only allow JS unless I have to
[23:00:20] <mrig> Izem: and that would be backwards compatible?
[23:00:44] <Izem> but that might be hard given that hardware can't you change xD
[23:00:55] <pyzozord> deniska: oh no, that sounds terrible deniska!
[23:01:00] <Izem> s/you//
[23:01:11] <pyzozord> deniska: we need more html and less js!
[23:01:15] <pyzozord> not the other way around
[23:02:14] <pyzozord> although tex based web would be very interesting
[23:02:39] <Izem> no html, no js
[23:02:48] <Izem> something else
[23:02:57] <mrig> pyzozord: tex is computationally quite heavy.
[23:03:14] <pyzozord> mrig: so is javascript (or was anyway)
[23:03:25] <mrig> very cool though but would you set documents before sending them or after sending them?
[23:03:37] <Izem> tex makes no sense, the concept of a page is gone
[23:03:39] <guest4389> tex != text    ??
[23:03:45] <Izem> yeah
[23:03:48] <mrig> the text setting is much more involved in tex, that is why it is so much better.
[23:04:04] <pyzozord> guest4389: https://en.wikipedia.org/wiki/TeX
[23:04:07] *** Joins: arcatech (~arcatech@user/arcatech)
[23:05:00] *** Parts: jlindgren (~jlindgren@user/jlindgren) (The Lounge - https://thelounge.chat)
[23:05:10] <mrig> Sure that the modern browser could handle this but, it is a major difference between them.
[23:05:13] *** Joins: lunarkitty (uid501895@user/pyra)
[23:05:42] <pyzozord> but I do have high hopes for wasm
[23:05:56] <oldlaptop> pyzozord: TeXwEb should definitely be done
[23:06:11] <mrig> You could implement that in wasm for sure.
[23:06:54] <mrig> or in a new terminal for reading REST served documents, the world is your proverbial oyster.
[23:07:03] <oldlaptop> nah, a TeXwEb browser should typeset things itself, just like Web browsers render HTML themselves
[23:07:05] <mrig> oyster shell perhaps :P
[23:07:25] *** Joins: audiocat (~audio@2603-8081-1800-6a65-032f-072b-bf09-a39b.res6.spectrum.com)
[23:07:26] <pyzozord> oldlaptop: it's interesting, I never heard of it
[23:07:33] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:08:30] *** Joins: wovixo_ (~wovixo@128.104.205.49)
[23:08:53] *** Parts: omegahack_ (~omega@2603-6010-a529-9c00-4ccc-aa7b-1e0a-9917.res6.spectrum.com) (Leaving)
[23:09:20] <Izem> it would be more consistent if they went with a book/document model, but then you lack the freedom you get from current multimedia web stuff
[23:09:33] *** Joins: digilink (~digilink@user/digilink)
[23:09:48] <oldlaptop> pyzozord: I thought you just invented it
[23:09:51] <pyzozord> I still want to just order ald Dragon magazines and maybe some programming/cs magazines so they send me issues each month as if they were just released
[23:10:07] <pyzozord> s/ald/old/ - no idea how I made that typo
[23:10:25] *** Joins: Narrat (~omnius@p200300df5f11252206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:10:28] <berndj> recommendations for testing programs at the syscall level?
[23:10:37] <Izem> gdb?
[23:10:50] <berndj> something more automated than that!
[23:11:01] <pyzozord> oldlaptop: oh I thought it was a real thing
[23:11:05] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:11:07] <berndj> but that's a nice lateral thinking answer. i'm sure gdb is scriptable...
[23:11:20] <pyzozord> berndj: parse strace output?
[23:12:11] *** Quits: _wovixo_ (~wovixo@146.151.192.66) (Ping timeout: 255 seconds)
[23:12:13] <berndj> pyzozord, i need to test the program also under circumstances that aren't easy to provoke "normally". i.e. does it respond correctly to out of memory conditions, to permissions errors, to ECONNRESET, etc.
[23:12:37] <pyzozord> oh I see so you need to mock syscalls
[23:12:40] <berndj> pyzozord, so basically my elevator pitch for the desired tool would be "active strace" or something :)
[23:13:43] <berndj> luckily for now i only care about single-threaded execution. hopefully that makes it easier
[23:13:56] *** Quits: luckyxxl (~luckyxxl@185.209.196.149) (Quit: bye)
[23:14:23] *** Joins: c705 (c705@alpine/contributor/c705)
[23:14:39] <pyzozord> berndj: apparently ld has --wrap option
[23:15:07] <pyzozord> berndj: generally I see interesting ideas here https://stackoverflow.com/questions/2924440/advice-on-mocking-system-calls
[23:16:38] *** Quits: dolor_avis (~dolor_avi@user-5-173-14-171.play-internet.pl) (Quit: dolor_avis)
[23:17:08] <GeDaMo> pyzozord: there are old computer magazines on archive.org
[23:18:11] <GeDaMo> https://archive.org/details/computermagazines
[23:18:36] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:19:30] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:19:31] *** Joins: Pickchea (~private@user/pickchea)
[23:19:46] <pyzozord> archive.org is amazing
[23:20:18] <GeDaMo> https://archive.org/details/dragon-user-magazine
[23:20:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:20:43] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 268 seconds)
[23:20:46] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[23:20:50] <pyzozord> BYTE magazine
[23:20:54] *** Joins: dibber (~dibber@c-73-14-187-235.hsd1.co.comcast.net)
[23:21:02] *** Joins: digilink (~digilink@user/digilink)
[23:21:22] *** Joins: arcatech (~arcatech@user/arcatech)
[23:21:43] <pyzozord> just looking at this stuff is so interesting
[23:21:54] *** Quits: xff0x (~xff0x@2001:1a81:53dc:b800:8c77:48f3:1e3:3060) (Ping timeout: 240 seconds)
[23:22:03] <Izem> berndj: it is, and funny there is a debugger in plan9 like that, guess they were thinking ahead
[23:22:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[23:22:54] *** Joins: xff0x (~xff0x@2001:1a81:53dc:b800:d9eb:91ca:317b:6253)
[23:23:30] <pyzozord> letters to magazines is the best form of internet comment section
[23:23:40] <berndj> i have a copy of BYTE magazine that introduces BSD/386. kinda historical. but not sure if it's the very first of the series
[23:24:23] <\c> I think it was in DDJ first
[23:24:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[23:24:49] <GeDaMo> Here are the very first Byte magazines https://vintageapple.org/byte/
[23:25:01] *** jmcantre1 is now known as jmcantrell
[23:25:19] <pyzozord> ooh nice, pdfs to download, thanks!
[23:26:24] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:26:32] <berndj> pyzozord, sometimes when i read old wireless world mags on the toilet i feel tempted to tear out one of those rip-out cards, fill in the boxes and send it to london
[23:27:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:27:30] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[23:27:37] <InPhase> berndj: By the time you're at system calls, the external behavior of those system calls matters to the test result at least 9 times out of 10.  It's typically more useful to setup a full fake-real-world testing environment for testing than to treat it like a unit test.
[23:27:49] <berndj> "hello, i was very interested to read your article on the information superhighway; could you please send me a sample of the offered 9600baud modem chip? thank you in advance"
[23:28:31] *** Quits: guest4389 (~guest@2001:5b0:2a0c:d498:65a9:243e:9ab2:789f) (Read error: Connection reset by peer)
[23:28:33] <pyzozord> I should also start reading ACM magazines. But need to learn at least calculus first
[23:28:35] *** Joins: The_Blode (~Blode@92.40.180.149.threembb.co.uk)
[23:28:44] <GeDaMo> It wasn't unusual to request information from companies and get brochures in the post :P
[23:28:54] <berndj> InPhase, i'm not trying to test the system call itself; i'm trying to test my program at the system call boundary
[23:29:04] <pyzozord> but acm stuff is less recrational imo, more about serious learning
[23:29:34] *** jmcantrell is now known as Guest1325
[23:29:35] *** Quits: Guest1325 (~weechat@user/jmcantrell) (Killed (sodium.libera.chat (Nickname regained by services)))
[23:29:35] *** __jmcantrell__ is now known as jmcantrell
[23:29:45] <berndj> InPhase, and setting up real-fake environments is tricky because it's a network daemon, and it seems pretty hard to get the kernel to deliver all the events in exactly the right order and of exactly the right sizes to my program
[23:30:12] *** Quits: The_Blode (~Blode@92.40.180.149.threembb.co.uk) (Changing host)
[23:30:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:30:24] *** Joins: guest4389 (~guest@2001:5b0:2a0d:3918:65a9:243e:9ab2:789f)
[23:30:45] <InPhase> berndj: By "fake-real-world" I mean for example having a dummy network client for your testing with a network daemon, rather than hooking into the system calls.
[23:31:19] <vdamewood> Hi people, etc.
[23:31:30] <pyzozord> there was some gnu ld option or library that could substitude libc and let you debug/modify loader behavior
[23:31:49] <berndj> InPhase, yeah that doesn't suffice, because then i lose control of how much data is delivered to my program at a time. i want to be able to test for, say, incomplete lines being read from the network, checking that they get glued back together correctly, etc.
[23:31:54] <vdamewood> damn, comma's in the wrong spot.
[23:32:26] *** Joins: magla (~gelignite@55d41815.access.ecotel.net)
[23:32:39] <berndj> pyzozord, yeah, i think i should be able to LD_PRELOAD=libfakelibc.so but then still get at the real lbc underneath where necessary
[23:32:58] *** Quits: LuKaRo_ (~LuKaRo@p200300dfa714f109fff23dec5b74458c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:33:18] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:33:27] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (calcium.libera.chat (Nickname regained by services)))
[23:33:27] *** __jmcantrell__ is now known as jmcantrell
[23:33:34] <pyzozord> berndj: yeah that was it!
[23:33:54] <pyzozord> berndj: that's all I got, sorry
[23:33:59] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:33:59] *** jmcantrell is now known as Guest218
[23:33:59] *** __jmcantrell__ is now known as jmcantrell
[23:34:18] <InPhase> berndj: I would try that by unit testing all the pieces that are doing things like the reassembly, rather than feeding it at the syscall.  It would of course be more complete the way you're attempting it, but that's a lot more of a hassle.  There's a balance of time investment and payoff in specific test types.
[23:34:25] *** Joins: arcatech (~arcatech@user/arcatech)
[23:34:31] *** Joins: LuKaRo (~LuKaRo@p200300dfa714f1881c4e96891ae58782.dip0.t-ipconnect.de)
[23:35:00] <pyzozord> berndj: one thing that comes to my mind is disassembling your code, detecting all syscalls, and injecting some assembly and then reassembling it
[23:35:13] *** Joins: ji (uid72176@user/raj)
[23:35:24] <pyzozord> but that's pretty brute force and brittle
[23:35:32] <berndj> pyzozord, that's not far from writing a custom debugger to intercept syscalls!
[23:35:57] <GeDaMo> https://man7.org/linux/man-pages/man1/dtrace.1.html
[23:36:09] <pyzozord> oh right that reminds me
[23:36:14] <pyzozord> there was also ebpf
[23:36:51] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3c73:1ee4:f38f:e0fb)
[23:36:52] <pyzozord> ebpf should be able to do the trick, I'm not 100% sure on what it is, but from what I read it's amazingly powerful, like a scripting language for inside the kernel
[23:38:17] *** Quits: Guest218 (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[23:38:29] *** Quits: TheAceOfHearts_ (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[23:39:35] <pyzozord> berndj: actually come to think of it, you could write a kernel module, I heard writing a simple module is really quite simple
[23:39:35] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:39:56] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:41:18] *** Quits: inky_ (~inky@45.15.149.181) (Ping timeout: 272 seconds)
[23:42:28] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 246 seconds)
[23:42:33] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3c73:1ee4:f38f:e0fb) (Quit: Textual IRC Client: www.textualapp.com)
[23:44:16] <pyzozord> can't find the youtube talk but it was literally like writing a function that will be called and registering it for some syscalls or something like that
[23:44:54] *** Joins: ayenet4 (~0x100@32.211.211.39)
[23:45:22] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:46:17] <Izem> pyzozord: you can just read communications of the acm
[23:46:40] <pyzozord> Izem: what is that?
[23:47:03] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:47:57] <Izem> https://cacm.acm.org/
[23:48:20] <vdamewood> Yum, food!
[23:48:26] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[23:48:28] <pyzozord> Izem: oh that's one of their magazines. I though it was like tldrs of articles or something
[23:48:47] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Killed (NickServ (GHOST command used by riff_IRC)))
[23:48:49] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[23:48:53] *** riff_IRC is now known as riff-IRC
[23:49:32] *** Quits: BGL (~twenty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 272 seconds)
[23:49:39] <guest4389> can someone please help me figure out why my function displayFace isn't printing anything to the console? It's supposed to print heads or tails for each coin flip. The reset of the program runs fine.  https://bpa.st/KTBA
[23:50:10] <Izem> pyzozord: also acm queue, e.g. https://queue.acm.org/detail.cfm?id=3469844&doi=10.1145%2F3466132.3469844
[23:51:45] <Izem> guest4389: well first you have to use cout or something
[23:51:56] <wovixo_> guest4389: Because you're not sending 'result' to cout.
[23:51:59] <pyzozord> Izem: I'm afraid I'm don't know enough for ACM magazines still. It seems like the target audience is people who have more academical background
[23:53:01] <Izem> nah I don't think so, just skip the stuff you don't know
[23:53:19] <Izem> this seems pretty accessible https://queue.acm.org/detail.cfm?id=3434773
[23:53:27] <guest4389> thank you. it's working now.
[23:53:42] <Izem> papers on the other hand, that's the real trap
[23:53:49] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:54:01] *** Joins: ayenet4 (~0x100@32.211.211.39)
[23:54:04] <pyzozord> Izem: i thought that many papers are just articles from those acm magazines
[23:54:16] <pyzozord> I'm still not 100% on what "papers" are
[23:54:19] *** Quits: wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[23:54:40] <Izem> true, I guess that's pretty vague then
[23:54:48] <pyzozord> they seem like 5-50 pages long idea descriptinos to me
[23:55:04] *** Quits: bytefire (~bytefire@51.19.186.131) (Quit: leaving)
[23:55:42] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[23:55:50] <pyzozord> they seem to follow similar formatting and include many figures
[23:56:00] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[23:56:43] <GeDaMo> Research papers?
[23:57:20] <pyzozord> yeah I guess so
[23:57:38] <GeDaMo> They're usually written by researchers for publication in scientific journals
[23:57:40] <pyzozord> but maybe "research papers" are just a subset of "academic papers"?
[23:57:59] *** jinsun_ is now known as jinsun
[23:58:06] <GeDaMo> That sounds like the same thing to me :P
[23:58:18] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[23:58:22] <pyzozord> oh yeah. So I though that acm magazines are the scientific journals for cs
[23:58:34] <pyzozord> well not all of them, but the most popular ones
[23:59:28] <GeDaMo> There are many journals related to CS
[23:59:35] <pyzozord> there should be some general "scienece" course for uneducated unwashed masses like me. Explaining all the meta things about science
[23:59:59] <GeDaMo> https://en.wikipedia.org/wiki/List_of_computer_science_journals
