[00:09:34] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[00:13:12] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[00:35:24] *** vrischmann_ is now known as vrischmann
[00:36:16] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[00:37:14] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[00:45:42] <mischief> daurn: were you able to look at my test case? is jedisct1 on irc?
[00:46:09] *** Quits: kragacles_ (~kragacles@rebonack.apastron.co) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:40] *** Joins: kragacles (~kragacles@rebonack.apastron.co)
[00:50:47] <Franciman> luuk: how does equality work for compound types?
[00:50:51] <Franciman> memcmp?
[00:50:53] <Seng> Does zig have a way to allocate memory on the heap and have it zero initialized?
[00:51:01] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:fd9c:24e7:5ea:6f47) (Ping timeout: 240 seconds)
[00:51:03] <Franciman> Seng: you can create your allocator
[00:51:07] <Franciman> to do it
[00:51:11] <Franciman> malloc doesn't
[00:51:17] <Franciman> it amounts to create a 
[00:51:24] <Seng> I know malloc does not. But calloc does.
[00:51:25] <Franciman> ZeroInitAllocator which takes an allocator as input
[00:51:35] <Franciman> and creates a new allocator which does the following:
[00:51:41] <Franciman> 1. request memory from the underlying allocator
[00:51:43] <Franciman> 2. zero it
[00:52:13] <Seng> I'll look into making my own allocator for my toolbox :) I'll need it again eventually.
[00:52:44] <luuk> Franciman, equality using '==' will not work. I suggest to take a look at std.meta.eql, it compares value for value for all fields of compound types.
[00:52:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[00:52:59] <Franciman> luuk: no i mean, regarding the sentinel thing
[00:53:05] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:58c5:6207:2988:1b06)
[00:53:07] <luuk> Oooh sorry
[00:53:39] <luuk> Not sure what you mean, in that case.
[00:53:49] <Franciman> i mean what's the problem with my code?
[00:53:56] <Franciman> is it valid code?
[00:54:17] <luuk> No
[00:54:30] <Franciman> so it should be catched by the frontend
[00:54:37] <luuk> Yeah
[00:54:44] <Franciman> ok i see, thanks
[00:54:47] <Franciman> all clear
[00:55:05] <luuk> Compiler crashes are (almost) always bugs
[00:55:51] <Franciman> i was worried it was a problem in the codegen
[00:56:32] <Franciman> i am going to go through open issues
[01:05:39] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Read error: Connection reset by peer)
[01:06:13] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613)
[01:07:14] <Franciman> the documentation doesn't mention any limitation to the sentinel value
[01:12:31] <luuk> Hmm, maybe I was wrong
[01:12:35] <luuk> I cannot actually reproduce it
[01:13:04] *** Joins: drewr (~drew@user/drewr)
[01:14:36] <Franciman> luuk: can I see your attempt?
[01:15:15] <Franciman> i think the problem is in toOwnedSliceSentinel
[01:15:18] <Franciman> of ArrayList
[01:15:22] <Franciman> let me check
[01:18:38] <Franciman> indeed the problem should be in this statement:
[01:19:01] <Franciman> var x = [_:Program.Instr.halt] { Program.Instr.halt };
[01:19:04] <Franciman> when you do
[01:19:24] <Franciman> x[0..:Program.Instr.halt]
[01:19:29] <Franciman> it has to perform a check
[01:21:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:22:54] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[01:23:44] <luuk> Aah I see, yeah I can reproduce that: https://godbolt.org/z/a86eaf8xP
[01:24:36] <Franciman> luuk: https://github.com/ziglang/zig/issues/10413 i had opened this issue
[01:26:23] <Franciman> do you want to comment?
[01:26:48] <luuk> Sure, will do
[01:27:48] <Franciman> luuk: i don't think it's a problem of the void type
[01:27:52] <Franciman> look:
[01:28:22] <Franciman> how do i share the link lol
[01:28:35] <Franciman> https://godbolt.org/z/6cG6Gzjdd
[01:28:41] <Franciman> luuk: here i am using the other variant value
[01:28:50] <Franciman> which is non void
[01:29:01] <Franciman> but still get an error
[01:30:46] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:6099:a620:939f:d613) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:07] <luuk> Maybe unions shouldn't be allowed at all as sentinel
[01:31:12] <luuk> What would it compare?
[01:32:26] <Franciman> yep
[01:32:32] <Franciman> it's a bit convoluted
[01:41:54] *** Joins: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de)
[01:48:52] *** Joins: Kingsquee (~Kingsquee@node-1w7jr9pliwyyym2cb0a9nsdd9.ipv6.telus.net)
[02:06:56] *** Joins: tiehuis (~tiehuis@user/tiehuis)
[02:11:37] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[02:18:32] <Snektron[m]> test
[02:19:49] <luuk> works
[02:21:13] <Snektron[m]> Also from irc? Stuff has been breaking for me 
[02:22:16] <luuk> Yes, sending this from irc
[02:22:26] <luuk> Whatever you're doing, seems to be working :P
[02:22:29] <Snektron[m]> thanks 
[02:28:47] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:03:25] *** Quits: tcht (~tcht@ip-95-223-71-169.hsi16.unitymediagroup.de) (Quit: leaving)
[03:06:59] *** Quits: xackus (~xackus@185.15.0.3) (Ping timeout: 256 seconds)
[03:13:32] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:15:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:16:54] *** Parts: rslabbert1 (~rslabbert@2001:470:69fc:105::1:457d) ()
[03:20:51] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[03:45:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[04:02:17] *** Quits: nurbl (~jofo@c83-252-92-24.bredband.tele2.se) (Ping timeout: 240 seconds)
[04:07:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[04:11:01] *** Quits: lumo_e (~enrico@151.29.77.175) (Read error: Connection reset by peer)
[04:11:11] *** Joins: lumo_e (~enrico@151.29.77.175)
[04:18:07] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[04:18:35] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[04:20:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[04:21:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:26:55] *** Joins: rgrinberg (~textual@177.246.218.103)
[04:40:32] <freshcoffee> my face when clang-13 (c++) using `-Og` causes global constructors to NOT BE GENERATED. what in the.
[04:43:17] <andrewrk> huh??
[04:44:09] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:c5a:2a16:2d89:cad9) (Remote host closed the connection)
[04:44:20] <freshcoffee> a deep dive on #10386 ; I'll post a reduction shortly
[04:44:27] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:c5a:2a16:2d89:cad9)
[04:45:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[04:49:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:51:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[04:53:57] *** Quits: lumo_e (~enrico@151.29.77.175) (Quit: Quit)
[05:15:48] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[05:18:46] <freshcoffee> bah. `-Og` actually does some optimizations so it was nuking an unused global. But all is not lost, I have a hint for #10386 now
[05:24:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[06:02:51] *** Joins: livoreno (~livoreno@user/notzmv)
[06:04:00] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[06:04:37] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[06:05:57] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:05:57] *** neurocyte0 is now known as neurocyte
[06:20:46] *** Quits: jcmoyer (~jcmoyer@user/jcmoyer) (Ping timeout: 245 seconds)
[06:21:02] *** Joins: jcmoyer (~jcmoyer@user/jcmoyer)
[06:26:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:27:24] *** Joins: earnest (~earnest@user/earnestly)
[06:41:57] *** Quits: frmdstryr (~jrm@172.58.206.202) (Ping timeout: 240 seconds)
[06:43:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:48:02] *** Quits: rgrinberg (~textual@177.246.218.103) (Read error: Connection reset by peer)
[06:49:00] *** Joins: rgrinberg (~textual@177.246.216.115)
[07:09:46] *** Joins: notzmv (~zmv@user/notzmv)
[07:16:46] *** Joins: tsmanner (~tsmanner@pool-100-40-199-193.pghkny.fios.verizon.net)
[07:27:44] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[07:40:25] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:48:57] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 240 seconds)
[07:56:10] *** Quits: moog (~moog@107.126.53.180) (Read error: Connection reset by peer)
[08:02:52] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[08:06:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[08:12:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[08:12:46] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:37:13] *** Joins: Erutuon (~Erutuon@user/erutuon)
[08:59:46] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[08:59:55] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[09:02:07] *** Quits: rgrinberg (~textual@177.246.216.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:05:12] *** Joins: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca)
[09:10:33] *** Joins: semarie (~semarie@user/semarie)
[09:22:52] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[09:23:00] *** Quits: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca) (Quit: WeeChat 3.3)
[09:23:25] *** Joins: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca)
[09:23:46] *** Quits: eltonpinto (~1ntEgr8@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca) (Client Quit)
[09:30:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[09:32:01] *** Joins: aKriJcz (~jirka@mail.tcz.cz)
[09:32:29] *** Joins: eltonpinto (~user@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca)
[09:35:43] *** Quits: perro_ (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 256 seconds)
[09:51:43] *** Quits: earnest (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[09:59:48] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[10:00:18] *** Joins: tianruiwei[m] (~tianruiwe@2001:470:69fc:105::1:601a)
[10:04:59] *** Quits: Stalevar (~stalevar@user/stalevar) (Ping timeout: 268 seconds)
[10:05:41] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.4)
[10:17:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[10:18:27] *** Joins: Stalevar (~stalevar@user/stalevar)
[10:33:13] *** Joins: noop14 (~noop14@l208005.ppp.asahi-net.or.jp)
[10:48:42] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[10:49:23] *** Quits: rom1504 (rom1504@rom1504.fr) (Ping timeout: 268 seconds)
[10:50:13] *** Joins: rom1504 (rom1504@rom1504.fr)
[11:00:41] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[11:03:44] *** Quits: Tekk (~tekk@94.198.42.169) (Remote host closed the connection)
[11:04:43] *** Joins: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6)
[11:12:19] *** Quits: ur5us (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Read error: Connection reset by peer)
[11:15:17] <Franciman> thanks luuk for posting
[11:15:32] <luuk> No problem :)
[11:19:16] <Franciman> apparently I can put structs as sentinels
[11:19:21] <Franciman> it's just unions
[11:22:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[11:36:01] <Seng> does zig do regexes?
[11:36:46] <luuk> Seng: Not in std, tho there's some libraries out there.
[11:37:12] <luuk> (They are quite out of date tho, so you'd have to patch them up yourself)
[11:37:21] <Seng> okay, I'll manage without for now :)
[11:38:21] <Seng> I'll just end up being sidetracked writing my own regex engine and never complete my current task... nor the regex engine probably (:
[11:38:51] <luuk> It never ends :)
[11:41:32] <Franciman> Seng: fun read suggestion: https://swtch.com/~rsc/regexp/regexp2.html
[11:41:59] <Franciman> https://swtch.com/~rsc/regexp/regexp1.html <- maybe you want to start from the first article
[11:42:01] <Franciman> it's three of them
[11:43:29] <Seng> ohh dear. Is that your idea of fun?
[11:43:43] <Seng> (actually it could be an immensly good learning experience)
[11:44:12] <Seng> btw, why does the function signature for parseInt here https://ziglang.org/documentation/master/std/#std;fmt.parseInt not match the source code in master?
[11:46:56] <luuk> Those docs are very experimental and are missing a lot of information. You'd do yourself a big favor by reading the std source directly.
[11:47:11] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 256 seconds)
[11:47:31] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:47:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[11:48:54] *** Joins: outfox (~outfox@213.144.147.16)
[11:48:54] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[11:48:54] *** Joins: outfox (~outfox@user/outfox)
[11:50:10] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:51:18] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Read error: Connection reset by peer)
[11:52:21] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1)
[11:53:57] <Seng> I was fairly certain parseInt either returned an error union or an optional. just couldn't remmeber which.
[11:54:13] <Seng> So yeah, I have the source available in VSCode :)
[11:54:44] <Franciman> are you using zls? Zig Language Server?
[11:54:57] <Seng> last question for now. If I have a `?u32`, assign it a value, but then want to unassign it, do I then just assing null?
[11:55:36] <Seng> Franciman, yeah, but at times it's not really helping me. curerntly I'm not getting help in the stdlib for example.
[11:57:54] <Seng> It seem to read my current file and imported zig files from the same directory just fine, but not the imports from std.
[11:58:15] <Franciman> did you set the directory where you have the std lib files?
[11:59:45] <Franciman> https://github.com/zigtools/zls#configuration-options
[11:59:47] <Franciman> zig-lib-path
[11:59:54] <Franciman> zig_lib_path* sorry
[12:00:51] <Seng> ...
[12:01:10] <Seng> had a type in my path..
[12:01:15] <Seng> typo*
[12:01:25] <Franciman> it happens _all the time_ to me too
[12:01:27] <Franciman> ^^
[12:15:33] <mischief> how would i build for x86_64-plan9?
[12:23:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:29:44] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[12:31:26] *** Joins: chgr (~ek@nat-91-137-16-17.net.encoline.de)
[12:52:57] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Ping timeout: 240 seconds)
[12:58:37] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[13:10:29] *** Quits: outfox (~outfox@user/outfox) (Ping timeout: 256 seconds)
[13:12:13] *** Joins: outfox (~outfox@213.144.147.16)
[13:12:13] *** Quits: outfox (~outfox@213.144.147.16) (Changing host)
[13:12:13] *** Joins: outfox (~outfox@user/outfox)
[13:18:57] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[13:47:09] *** Quits: cr1901 (~cr1901@2601:8d:8600:911:c5a:2a16:2d89:cad9) (Remote host closed the connection)
[13:47:29] *** Joins: cr1901 (~cr1901@2601:8d:8600:911:343c:13e1:2b48:94a4)
[13:49:11] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:50:48] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:e5ec:ad1d:20e8:48b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:56:14] *** Joins: Vexu (~Thunderbi@188.117.20.105)
[14:22:15] *** Joins: biog (~user1@159.224.42.85)
[14:25:01] *** Joins: nurbl (~jofo@c83-252-92-24.bredband.tele2.se)
[14:59:56] *** Quits: Kingsquee (~Kingsquee@node-1w7jr9pliwyyym2cb0a9nsdd9.ipv6.telus.net) ()
[15:17:59] *** Joins: earnest (~earnest@user/earnestly)
[15:18:11] *** Joins: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net)
[15:26:44] *** Joins: breavyn_ (~breavyn@user/breavyn)
[15:28:11] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 256 seconds)
[15:35:16] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:35:59] *** Quits: tiehuis (~tiehuis@user/tiehuis) (Remote host closed the connection)
[15:41:23] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[15:53:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[16:01:39] *** Joins: frmdstryr (~jrm@172.58.206.202)
[16:07:17] *** Quits: frmdstryr (~jrm@172.58.206.202) (Ping timeout: 240 seconds)
[16:08:48] *** Joins: badsektor (~badsektor@user/badsektor)
[16:08:48] *** Quits: badsektor (~badsektor@user/badsektor) (Client Quit)
[16:20:11] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[16:24:31] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:33:14] *** Joins: jonas_ (~textual@55867b35.cust.multi.fi)
[16:52:36] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:53:42] *** Joins: jjido (~Denis@90.213.58.125)
[17:20:37] *** Quits: tianruiwei[m] (~tianruiwe@2001:470:69fc:105::1:601a) (Ping timeout: 240 seconds)
[17:20:37] *** Quits: Snektron[m] (~snektron@2001:470:69fc:105::f0a3) (Ping timeout: 240 seconds)
[17:26:29] *** Joins: badsektor (~badsektor@user/badsektor)
[17:28:44] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[17:34:06] *** Quits: Vexu (~Thunderbi@188.117.20.105) (Quit: Vexu)
[17:35:20] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving)
[17:38:21] *** Joins: Snektron[m] (~snektron@2001:470:69fc:105::f0a3)
[17:40:25] *** Joins: tianruiwei[m] (~tianruiwe@2001:470:69fc:105::1:601a)
[17:43:56] *** Quits: aKriJcz (~jirka@mail.tcz.cz) (Remote host closed the connection)
[17:50:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:50:33] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[17:52:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:00:45] *** Quits: nurbl (~jofo@c83-252-92-24.bredband.tele2.se) (Ping timeout: 256 seconds)
[18:02:52] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:07:02] *** Joins: arkurious (~arkurious@user/arkurious)
[18:08:30] *** Joins: Guest77 (~Guest77@2a02:aa10:9180:9e80:2dd0:222f:78c:9693)
[18:10:54] *** Parts: Guest77 (~Guest77@2a02:aa10:9180:9e80:2dd0:222f:78c:9693) ()
[18:18:51] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:32:58] *** Joins: pkap (~pkap@185.209.196.134)
[18:39:47] *** Joins: phaleth (~phaleth@user/phaleth)
[18:43:19] *** Quits: eltonpinto (~user@2600:1700:47f0:d3d0:84dd:fe60:9c66:77ca) (Read error: Connection reset by peer)
[18:51:37] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[18:53:57] *** Joins: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl)
[19:04:54] *** Quits: chgr (~ek@nat-91-137-16-17.net.encoline.de) (Quit: WeeChat 3.3)
[19:08:21] *** Joins: drewr (~drew@user/drewr)
[19:25:30] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[19:25:37] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[19:25:54] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Client Quit)
[19:26:12] *** Joins: moog (~moog@107.126.53.244)
[19:41:08] *** Quits: HyLian (~meron@97.red-81-39-162.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[19:42:32] *** Joins: HyLian (~meron@97.red-81-39-162.dynamicip.rima-tde.net)
[19:44:54] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:53:58] *** Quits: pkap (~pkap@185.209.196.134) (Ping timeout: 256 seconds)
[20:03:51] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[20:05:08] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[20:10:07] *** Quits: jonas_ (~textual@55867b35.cust.multi.fi) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:12] *** Quits: ofelas (~ofelas@ti0071a400-7012.bb.online.no) (Remote host closed the connection)
[20:16:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b)
[20:20:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[20:23:19] *** Joins: ofelas (~ofelas@ti0071a400-7012.bb.online.no)
[20:31:52] *** Joins: drewr (~drew@user/drewr)
[20:37:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cd30:5759:3f90:149b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:45:57] *** Quits: drewr (~drew@user/drewr) (Ping timeout: 240 seconds)
[20:46:29] *** Quits: biog (~user1@159.224.42.85) (Quit: ZZZzzz…)
[20:52:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[20:58:00] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[21:00:04] *** Joins: zig-irc-logger (~zig-irc-l@216.117.174.63)
[21:07:55] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[21:09:56] *** Joins: neurocyte0 (~neurocyte@user/neurocyte)
[21:14:59] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[21:23:25] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[21:36:52] *** Quits: MajorBiscuit (~MajorBisc@c-001-023-057.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:41:16] *** Joins: xackus (~xackus@185.15.0.3)
[22:01:23] <tsmanner> I noticed some std code that is camelCasing values rather than snake_casing them.  Is there an ongoing effort matching this stuff up that I could contribute to, or should I just open a PR with the names updated?
[22:02:12] *** Quits: m4r35n357 (~m4r35n357@host-78-151-108-203.as13285.net) (Quit: Leaving)
[22:02:44] <tsmanner> In particular, in the std.json library a lot of switch(@typeInfo(T)) blocks look like .Pointer => 
[22:02:51] <tsmanner> |ptrInfo| ...
[22:03:11] *** Joins: drewr (~drew@user/drewr)
[22:12:03] *** drewr is now known as drewr-test
[22:14:08] *** drewr-test is now known as drewr
[22:14:55] *** Parts: noop14 (~noop14@l208005.ppp.asahi-net.or.jp) (Leaving)
[22:15:22] *** Joins: noop14 (~noop14@l208005.ppp.asahi-net.or.jp)
[22:15:27] *** Joins: nurbl (~jofo@c83-252-92-24.bredband.tele2.se)
[22:15:31] *** Parts: noop14 (~noop14@l208005.ppp.asahi-net.or.jp) ()
[22:18:07] *** Joins: d0p1 (~d0p1@gateway/tor-sasl/d0p1)
[22:24:02] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[22:24:47] *** Joins: Tekk (~tekk@cpe-76-182-45-53.nc.res.rr.com)
[22:26:23] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 256 seconds)
[22:28:56] *** Quits: drewr (~drew@user/drewr) (Quit: ERC (IRC client for Emacs 27.2))
[22:40:45] *** Quits: keyehzh_ (~keyehzh@user/keyehzh) (Remote host closed the connection)
[22:41:10] *** Joins: keyehzh_ (~keyehzh@user/keyehzh)
[22:55:14] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[22:55:14] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[22:55:14] *** Joins: tane (~tane@user/tane)
[22:56:49] *** Joins: pkap (~pkap@193.32.127.219)
[23:02:13] *** Joins: notzmv (~zmv@user/notzmv)
[23:02:23] *** Joins: drewr (~drew@user/drewr)
[23:08:38] *** Joins: Erutuon (~Erutuon@user/erutuon)
[23:09:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:22:29] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 256 seconds)
[23:22:32] *** Joins: rwb (~augh@theguntretort.com)
[23:24:09] *** rwb is now known as rb
[23:25:00] *** Joins: Tekk_ (~tekk@static-198-54-133-121.cust.tzulo.com)
[23:26:48] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:27:25] *** Quits: Tekk (~tekk@cpe-76-182-45-53.nc.res.rr.com) (Ping timeout: 240 seconds)
[23:34:25] *** Quits: rb (~augh@theguntretort.com) (Remote host closed the connection)
[23:35:54] *** Joins: rwb (~augh@theguntretort.com)
[23:39:29] <luuk> andrewrk: I could really use your opinion on this: Right now, I'm trying to implement a way to get all exported symbol names from stage1 into stage2. This is because I'd like to make them available to the linker frontend, so we can automagically append `--export=<symbol_name>` for all export symbols. This is what we used to do when the linker was implemented in stage1. Currently, I did this by
[23:39:31] <luuk> implementing a function in stage1 that exports those names, which I call from stage2. It all feels a little 'hacky', as we only need it for when the target is wasm. Do you have any preferences to this?
[23:40:04] *** Quits: pkap (~pkap@193.32.127.219) (Ping timeout: 256 seconds)
[23:41:56] <andrewrk> luuk, that sounds fine. the other option you have is to export a function from stage2 and call it from stage1. you can see a bunch of examples of this in stage1.zig
[23:42:21] <andrewrk> such as stage2_fetch_file
[23:45:11] <luuk> Gotcha, thanks! One issue I'm running into is during the file stage: 'Linking CXX executable zig' I get a linking error: 'undefined reference to `zig_stage1_export_symbols' I do however provide the symbol in stage1.h and an implementation in stage1.cpp. Not sure if I'm missing anything, it's been ages since I did any c++ and I'm a bit confused about how zig0, zig1, etc work :)
[23:45:22] <luuk> s/file stage/linking stage
