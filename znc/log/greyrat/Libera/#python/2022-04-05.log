[00:00:01] *** Joins: sokan (~sokan@2a02:587:9e11:bc00:227:eff:fe16:865d)
[00:00:08] *** Quits: Guest52 (~Guest52@201-93-26-246.dial-up.telesp.net.br) (Quit: Client closed)
[00:00:31] *** Quits: Strom (strom@fedora/strom) ()
[00:00:33] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Ping timeout: 248 seconds)
[00:01:17] *** Joins: mharig (~mharig@181.188.139.195)
[00:01:20] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[00:02:08] *** Joins: Strom (~strom@fedora/strom)
[00:02:49] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:03:08] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 246 seconds)
[00:03:13] *** justm33 is now known as justm3
[00:04:06] *** Quits: data68 (~data@2a02:908:a67:2ce0:9941:5f11:bd7d:f492) (Ping timeout: 245 seconds)
[00:04:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:04:56] *** Joins: audio (~audio@user/audio)
[00:05:55] *** Quits: qwert (~qwert@208.78.214.5) (Quit: Client closed)
[00:06:13] *** Quits: pedahzur (~jkugler@2600:380:705f:1317:f247:e983:2ca7:2ce0) (Ping timeout: 240 seconds)
[00:06:24] *** Quits: grooverman_ (~grooverma@179.97.162.238) (Read error: Connection reset by peer)
[00:08:11] *** Joins: grooverman (~grooverma@179.97.175.157)
[00:08:17] <nedbat> Croves: what do you mean by "terminate"?   yield will pass execution back to the caller, but then execution resumes inside the function after the yield when the next value is needed.
[00:08:24] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[00:08:25] *** Quits: Psybur (~Psybur@2600:1003:b1a3:2343:f1fc:41cc:1190:cfb8) (Ping timeout: 268 seconds)
[00:08:51] *** Joins: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba)
[00:10:23] <pyeverything> hi do you know how to fix this problem? I already upgraded the pip https://bpa.st/DMCQ ERROR: Could not build wheels for spams, which is required to install pyproject.toml-based projects when $ pip install spam
[00:10:38] <pyeverything> $ pip install spams
[00:10:48] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[00:11:35] *** Joins: white2 (~mahengrui@user/mahengrui1)
[00:12:28] <Wooble> pyeverything: looks like missing blas and lapack; not sure if the warnings above that matter at all.
[00:12:44] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[00:12:53] *** Joins: data68 (~data@2a02:908:a67:2ce0::5ffa)
[00:13:55] *** Joins: HiccupJul_ (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[00:14:07] <HiccupJul_> is this a sensible structure for a script?
[00:14:08] <HiccupJul_> https://bpa.st/NJ5A
[00:14:40] <pyeverything> Wooble, thank you so much, after $ sudo apt-get install libblas-dev liblapack-dev I was able to install spams using pip
[00:15:11] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 260 seconds)
[00:15:16] <HiccupJul_> having the argument parsing/user interaction logic in main(), but the actual program logic in another function. seems like this would allow easier reuse of functions in other programs, rather than having the argprarse stuff in the if block and the "useful" code in the main function
[00:15:23] *** Quits: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3) (Ping timeout: 260 seconds)
[00:15:31] <HiccupJul_> but i'm not sure
[00:15:45] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:15:59] <Wooble> HiccupJul_: yes (sometimes that parsing is left to "cli()" rather than "main()" but that's a matter of taste)
[00:16:36] <Wooble> HiccupJul_: it's *definitely* easier to unit test. :)
[00:16:47] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[00:16:51] <HiccupJul_> yeah
[00:17:05] *** Joins: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:397f:803c:a554:25f)
[00:18:54] <HiccupJul_> although i wonder if i should abstract it further
[00:19:19] <Wooble> sure, always be refactoring.
[00:19:20] <HiccupJul_> where there is a function where you provide the same arguments that you provide via argparse
[00:19:31] <Helmholtz> How to securely store a session info on disk (via pickle)?
[00:19:42] <Helmholtz> session as in requests.Session()
[00:19:48] <HiccupJul_> but i guess i shouldn't get bogged down in perfect boilerplate code when i don't need to
[00:20:04] <Wooble> HiccupJul_: yeah, make it work, then make it pretty.
[00:20:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[00:20:34] <Wooble> although realize you might not get to the second part if you make it *too* ugly ;)
[00:20:53] *** Joins: realperc30 (~realperc3@user/perc-auth/x-2096277)
[00:21:24] <HiccupJul_> yeah
[00:21:28] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[00:21:31] <CrtxReavr> My code is triggering these exceptions: https://bpa.st/OQQA
[00:21:47] <CrtxReavr> What do I need to except to catch it?
[00:22:23] <pyeverything> how should I fix the error on line 8? https://bpa.st/W7MA ValueError: attempted relative import beyond top-level package
[00:22:29] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6)
[00:22:29] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6) (Changing host)
[00:22:29] *** Joins: skapata (~Skapata@user/skapata)
[00:22:44] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[00:24:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[00:24:37] <Wooble> CrtxReavr: requests.ReadTimeout should do it
[00:24:52] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:25:21] *** Joins: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net)
[00:25:25] *** Quits: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:397f:803c:a554:25f) (Ping timeout: 240 seconds)
[00:25:33] <CrtxReavr> Wooble, thought so too. .. but I got NameError: name 'requests' is not defined
[00:26:43] <Wooble> import it?
[00:26:57] <CrtxReavr> . . .
[00:27:17] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[00:27:21] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[00:27:41] *** Quits: Guts71 (~Guts71@41.107.110.51) (Quit: Client closed)
[00:27:46] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Remote host closed the connection)
[00:27:57] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:28:02] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[00:28:23] *** Joins: Viewday1152 (~Viewday@user/viewday)
[00:28:33] <Wooble> (I assume you're doing something like `from requests import Session` instead of `import requests`)
[00:29:05] <pyeverything> fixed my problem
[00:29:53] <CrtxReavr> Wooble, nope. . . I always try to import at the highest level, to preserve namespace.
[00:29:58] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:29:58] *** Viewday1152 is now known as Viewday115
[00:30:36] <CrtxReavr> Oh, but. ..
[00:30:55] <CrtxReavr> it's imported by a module of my own that I'm importing.
[00:31:41] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[00:31:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[00:32:53] *** Joins: cosmos1_ (~cosmos@126.112.198.178.dynamic.wline.res.cust.swisscom.ch)
[00:33:17] <Wooble> you can catch it in there and then re-raise it with your own custom exception to get a 4th level of tracebacks :)
[00:37:44] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[00:38:01] <CrtxReavr> I just imported requests again at my top-level script.
[00:38:08] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-71-249.poda.cz) (Ping timeout: 260 seconds)
[00:38:13] <CrtxReavr> Which I think is working. ..
[00:38:20] <CrtxReavr> "It's taking longer to fail!"
[00:38:29] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[00:38:38] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8) (Ping timeout: 268 seconds)
[00:38:56] <CrtxReavr> Often, taking longer to fail is progress.
[00:39:16] <JaredCE> Hey.  So i'm using AWS python 3.8 lambda, and receiving a message from AWS SNS to the event parameter.  When i do print(event) with the output in cloudwatch, i get something like {'Records': [{...}]} (note the single quote), which would be invalid JSON
[00:39:17] *** Quits: Croves (~Croves@192.34.198.18) (Quit: Client closed)
[00:39:39] <JaredCE> is this something to do with the way print() works?
[00:39:50] <CrtxReavr> Well, no. ..
[00:39:53] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b9e8:a9f4:c78b:2abc) (Quit: Textual IRC Client: www.textualapp.com)
[00:40:08] *** Quits: transhumanist (~stevena@2601:196:8800:35f0::c13f) (Quit: Leaving.)
[00:40:24] <CrtxReavr> python doesn't really work with json. . . it reads it into a dict. . .
[00:40:34] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 272 seconds)
[00:40:40] <CrtxReavr> And a single quotes are the default quoting character in python.
[00:40:47] <JaredCE> right
[00:41:46] <JaredCE> so if i trated it as json, event['Records][0] that'll be fine
[00:41:49] <CrtxReavr> Now if you have a dict you want to write back to json, then it shoudl definitely result in something that conforms to the spec, which the json.dump* methods do quite nicley.
[00:42:14] <CrtxReavr> event['Records'][0]
[00:42:16] <CrtxReavr> Maybe.
[00:42:16] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[00:42:30] <CrtxReavr> Though, double quotes would work too, if that's your coding style.
[00:42:32] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[00:42:45] *** Quits: HiccupJul_ (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net) (Quit: Leaving)
[00:43:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1) (Ping timeout: 256 seconds)
[00:44:05] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 246 seconds)
[00:44:25] <JaredCE> awesome sauce, and if i wanted to take the output to use as a mock, i just change the ' to " and pipe that into the function
[00:44:50] * CrtxReavr cringes.
[00:45:05] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:28] <CrtxReavr> json.dumps(json_like_dict) returns a string that is proper json.
[00:46:24] <JaredCE> sure
[00:47:12] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[00:47:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:47:43] <deniska> JaredCE: it"s a really bad idea
[00:47:49] <deniska> (replacing)
[00:47:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:48:17] *** Quits: paul424 (~tom@ip-5-172-233-229.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:48:43] <CrtxReavr> Yeah, there's too many potential corner cases that could bite you.
[00:49:09] <realperc30> what would be the best way to find out if a tcp socket is closed
[00:50:04] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[00:50:24] *** Lord_of_Life_ is now known as Lord_of_Life
[00:51:10] <JaredCE> that's ok.
[00:51:14] <CrtxReavr> I would be inclined to make a syscall to the OS.
[00:51:25] <CrtxReavr> There might be a more pythonic answer.
[00:51:40] <realperc30> because if i try to read from the socket it doesn't give me a exception
[00:51:57] <CrtxReavr> What OS?
[00:52:19] *** Joins: stoneware (~stoneware@user/stoneware)
[00:52:41] <realperc30> im tryna make it work with linux and bsd type systems
[00:52:46] <CrtxReavr> Also, are you opening the socket from that instance of python?
[00:52:59] <realperc30> cpython
[00:53:12] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[00:53:18] <CrtxReavr> What module, specifically?
[00:53:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:53:53] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[00:53:55] <realperc30> default socket module
[00:54:11] <CrtxReavr> TCP socket?
[00:54:57] <realperc30> i have a simple messaging system built on top of it but it still has the same issue
[00:54:58] <realperc30> yes
[00:55:37] *** Joins: Pickchea (~private@user/pickchea)
[00:55:53] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[00:56:13] <CrtxReavr> https://stackoverflow.com/questions/667640/how-to-tell-if-a-connection-is-dead-in-python
[00:56:22] <CrtxReavr> That should be a helpful discussion.
[00:56:33] <deniska> to reliably know whether a socket is alive, I think your only option is to write something to it?
[00:56:55] <CrtxReavr> That's my thought too. .. since both ends get a vote.
[00:57:00] <realperc30> ill try that
[00:57:33] <deniska> also don't invent your own protocols on top of a low level protocol like tcp, unless you have a good reason
[00:57:40] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Quit: Client closed)
[00:58:01] <realperc30> well im trying to make a low latency game protocal
[00:58:29] <deniska> (and for games (depending on the genre) you probably want to look at udp instead)
[00:59:15] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[00:59:29] <deniska> and maybe at something like ENet because building your own protocol on top of udp is a bit more daunting task than on top of tcp :)
[01:00:05] <realperc30> I was reading on game protocols and alot of them suggested tcp
[01:00:21] *** Quits: stockholm (~Andreas@p200300d2c70a53000427dc1b98ab64ff.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[01:01:03] <realperc30> ill take a look at that
[01:01:15] <deniska> depends on the genre. Something turn based or slow paced, tcp is fine. First person shooter? Maybe not
[01:01:36] <realperc30> its not a fps but it need low latency
[01:01:43] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Changing host)
[01:01:43] *** Joins: yano (~yano@ircpuzzles///////////somanyslashes)
[01:01:50] *** Quits: yano (~yano@ircpuzzles///////////somanyslashes) (Changing host)
[01:01:50] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[01:02:19] <CrtxReavr> Well, if you do it in UDP, then you have to implement something at a high level to know if the packets got there.
[01:02:36] <realperc30> its a top down 2d rng game
[01:03:02] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[01:03:07] <deniska> with fast paced games, you don't care about TCP trying really hard to retransmit stale data
[01:03:37] <realperc30> kinda like a muiltplayer legend of zelda with random terrain gen
[01:04:22] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[01:04:29] <realperc30> ig ill look into some protocals built on top of udp
[01:04:38] <deniska> that's why I suggested enet, it's a higher level protocol (and a library implementing it) built on top of udp, which allows you to mark some data as needed to be reliably transmitted and some as not
[01:05:43] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[01:06:20] <realperc30> bc some packets need to have low priority (like location and position) and others needs high reliability like transactions and authentication.
[01:07:10] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:07:28] <realperc30> thanks for the suggestion
[01:07:32] *** Quits: realperc30 (~realperc3@user/perc-auth/x-2096277) (Remote host closed the connection)
[01:07:53] <deniska> yeah, you don't care if one of 100 location updates gets missed, but you do want this chat message or health value update to be eventually displayed
[01:09:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:10:06] *** Quits: cosmos1_ (~cosmos@126.112.198.178.dynamic.wline.res.cust.swisscom.ch) (Quit: Lost terminal)
[01:12:03] <mickey> i have a list of lists. each inner list is a vector 1024 features long, and i need to call pca.fit_transform() which expects "array-like of shape (n_samples, n_features)"
[01:12:28] <mickey> my list of lists is (samples, <nothing>)
[01:12:42] <mickey> how do i make it fit though?
[01:13:19] *** Quits: cuanim (~cuanim@user/cuanim) (Quit: Leaving)
[01:14:29] *** Joins: frmlof (~frmlof@70.243.238.191)
[01:15:01] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 268 seconds)
[01:15:11] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[01:15:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[01:15:44] *** Joins: johtso (~johtso@user/johtso)
[01:15:45] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 248 seconds)
[01:16:40] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:16:45] <mickey> [[v,e,c,t,o,r], [v,e,c,t,o,r], [v,e,c,t,o,r], [v,e,c,t,o,r], ...]
[01:16:59] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[01:17:08] *** Quits: greedom (~greedom@p200300de6714fa00d6a429329ca2d528.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:17:09] <mickey> im not even sure why this isn't samples x features.
[01:17:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:17:33] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:17:53] *** Joins: thiras (~thiras@user/thiras)
[01:18:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:18:59] *** Joins: Telvana (~capo@user/telvana)
[01:19:06] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[01:19:27] <LuxuryMode> Any way to subtract minute/hour from a `datetime.time` object without constructing a `datetime` object first and then doing the subtraction and then taking the `dt.time()`?
[01:20:15] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[01:20:38] <LuxuryMode> In other words, any way to avoid this type of thing `(datetime(2000, 1, 1, hour=time.hour, minute=time.minute, second=time.second) - timedelta(minutes=1)).time()`?
[01:21:20] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[01:21:29] *** Joins: agireud (~agireud@user/agireud)
[01:21:44] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:21:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[01:22:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[01:23:25] *** Joins: tnez (~el@user/tnez)
[01:23:37] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:25:29] <mickey> its actually a numpy array, not literally a list of lists
[01:25:52] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:4484:a5b4:7c0b:4f8d)
[01:26:25] *** Joins: Telvana (~capo@user/telvana)
[01:26:51] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[01:27:46] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[01:29:22] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-124.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:29:49] *** Joins: ExeciN (~ExeciN@user/nicexe)
[01:30:18] *** Joins: Capricious (~capriciou@121.44.235.202)
[01:31:13] <The-Compiler> LuxuryMode: doesn't look like it
[01:31:14] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[01:31:31] *** Quits: Capricious (~capriciou@121.44.235.202) (Client Quit)
[01:32:04] *** Joins: guriyab (~guriyab@user/guriyab)
[01:32:33] *** Joins: ivii (~ivan@user/ivii)
[01:33:53] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[01:34:16] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[01:34:42] <guriyab> subprocess.call("python script1.py & python script2.py") does this run two scripts in parallel in 2 threads? Or do they run on same thread sequentially?
[01:34:52] <LuxuryMode> The-Compiler: didn't think so, but possible I was overlooking something. Thanks for the reply.
[01:36:20] <BtbN> guriyab, won't that just try to call something with that literal name?
[01:37:05] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[01:37:14] <SnoopJ> mickey, what is the .shape of your array?
[01:37:34] <mickey> (331488,)
[01:37:36] <BtbN> Not sure how subprocess converts args as string into an args array. If at all
[01:37:47] <mickey> or something like that. large number first, nothing after the comma
[01:38:09] <SnoopJ> mickey, okay, well, that's why it's complaining: it expects a 2D array, but yours is 1D. Have you called flatten() anywhere in your code?
[01:38:20] <mickey> nope.
[01:38:35] <mickey> but im sure it's a list of lists so i dont get it why it think it's a 1d
[01:38:47] <SnoopJ> if it's an array it's not a list at all
[01:39:26] <SnoopJ> mickey, how many samples do you have, and how many features is each sample supposed to represent?
[01:39:33] <SnoopJ> s/have/expect/
[01:39:50] <mickey> hundreds of thousands of samples. 1024 features.
[01:40:17] <mickey> it's currently formatted as [[1024 items], [1024 items], ...]
[01:40:20] <SnoopJ> hm. you might be able to reshape() your array, but it would probably be better to prepare it with the correct shape in the first place
[01:40:30] <SnoopJ> mickey, can you share the code on http://bpa.st/+python ?
[01:40:34] <mickey> but.. is this not the right shape?
[01:40:35] *** Quits: walter_whip_ (~walter_wh@203-12-5-69.dyn.launtel.net.au) (Ping timeout: 260 seconds)
[01:40:38] <SnoopJ> it is not
[01:41:05] <SnoopJ> (the function you're calling expects a 2D array, what you have is 1D)
[01:41:18] <SnoopJ> the trick now is to figure out how it got to 1D when it should be 2D :)
[01:42:38] <mickey> i honestly dont get it. [[1,2], [3,4]] is not 2d?
[01:42:56] <SnoopJ> as an array, it would be 2D, yes.
[01:43:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:43:44] *** Joins: javaaaaaaaaaa (~fourroot@122.161.51.129)
[01:43:47] <javaaaaaaaaaa> hello
[01:43:51] *** javaaaaaaaaaa is now known as pythonnnnn
[01:43:58] *** Joins: noteness (~noteness@user/noteness)
[01:44:03] <Tritium> Hello.
[01:44:07] <SnoopJ> mickey, you don't have to take my word for it, either: https://bpa.st/PDKA
[01:44:09] <magga> Hey
[01:44:12] *** Quits: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba) (Read error: Connection reset by peer)
[01:44:26] <pythonnnnn> when im fetching tables from sqldb.. its showing date as (datetime.datetime(2022, 2, 17, 12, 59, 20, 945000),)
[01:44:28] *** Joins: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba)
[01:44:40] <pythonnnnn> actual data is like this :-
[01:44:40] <pythonnnnn> | 2020-10-12 17:48:29.606000 |
[01:45:36] <pythonnnnn> why is it happening and how do i get rid of it ?
[01:45:39] <pythonnnnn> i need raw data
[01:45:47] <mickey> SnoopJ dont get me wrong, i totally take your word for it. i just don't get it. printing the variable shows [list(...) list(...)]
[01:45:49] <Tritium> pythonnnnn: that is the python object for datetime, converted by your sql driver.  The format its actually stored in the database is very very unlikely to be the iso text format
[01:46:00] <SnoopJ> mickey, can you share the code on http://bpa.st/+python ?
[01:46:11] <pythonnnnn> tritium can i ask driver to not convert it ?
[01:46:11] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[01:46:34] <Tritium> pythonnnnn: probably not a reasonable thing to do.  just convert the datetime to iso format
[01:46:40] <magga> pythonnnnn no but you can easily convert it to whatever format you want once its a datetime
[01:46:47] <LuxuryMode> Do you want a datetime or just a date?
[01:47:03] <mickey> SnoopJ https://bpa.st/JHMQDV37UAR6WPUMG3KT7AA3GI
[01:47:03] <LuxuryMode> If you don't want the time component, you need to change the field/column to the `date` type
[01:47:30] <mickey> fwiw if i use zf["vectors"].tolist() there, it works fine. but i'd still like to understand wth is wrong with the ndarray as it is
[01:47:30] <pythonnnnn> how do i convert it back to iso ?
[01:47:51] <SnoopJ> mickey, your problem is occurring in the part of the program you are hiding in that paste
[01:47:53] <Tritium> pythonnnnn: the_datetime_object.isoformat(sep=' ')
[01:48:02] <LuxuryMode> `your_datetime.isoformat()`
[01:48:22] <pythonnnnn> AttributeError: 'tuple' object has no attribute 'isoformat'
[01:48:44] <Tritium> pythonnnnn: the_tuple[0].isoformat(sep=' ')
[01:48:47] <mickey> SnoopJ zf = dict(np.load("data.npz", allow_pickle=True, mmap_mode="r+")) ?
[01:48:57] <magga> you are retrieving a tuple with the query results
[01:49:01] *** Quits: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba) (Ping timeout: 256 seconds)
[01:49:01] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:49:11] <magga> you need to unpack that. it has indexes.
[01:49:24] <SnoopJ> mickey, I don't have any advice for you based on what I can see. You do need to prepare a 2D array before you call fit() though
[01:50:04] <mickey> SnoopJ im aware. zf["vectors"] is (n,) and zf["vectors"].tolist() is apparently (n,1024). beats me.
[01:50:26] <SnoopJ> that sounds suspicious, but since I can't see the code, I can't really help you debug it.
[01:50:32] <madduck> Do you know of a recipe to implement run-parts.d-style processing with Python? I.e. for every file in a given directory, I want to load it and call a specific entry point.
[01:50:37] *** Joins: Psybur (~Psybur@2600:1003:b1a3:2343:446a:e995:495d:c777)
[01:50:52] <SnoopJ> either fix the distortion of the shape on the front end (highly advised), or fix it after the fact with reshape() (less nice)
[01:51:17] <madduck> Yes, I know how to use os.walk and I could subprocess each file. I can also probably mess arround with sys.path, and use importlib, but surely this has been done better?
[01:51:42] <madduck> runpy?
[01:53:40] *** Joins: walter_whip_ (~walter_wh@203-12-5-69.dyn.launtel.net.au)
[01:53:48] *** Joins: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net)
[01:54:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:55:08] *** Quits: Psybur (~Psybur@2600:1003:b1a3:2343:446a:e995:495d:c777) (Ping timeout: 260 seconds)
[01:55:40] *** Joins: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba)
[01:55:57] <freeman_h1> Hi all hope we are doing amazing. I have a issue when mysql and python. I am saving a piece of data with this code https://bpa.st/D6PQ#1L11
[01:56:35] <Tritium> I'm sorry for your loss
[01:57:02] <freeman_h1> note line 8 I am printing it out. which looks like this https://i.ibb.co/KGF5hWK/Capture.png however in mysql the newlines are ignore and therefore it is showing it has one line
[01:57:17] *** Joins: jazzy (~jaziz@user/jaziz)
[01:57:26] <freeman_h1> the datatype is text
[01:57:54] *** Joins: symm (~symmetry@user/sym)
[01:58:03] <freeman_h1> I am wondering why this is happening
[01:58:05] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[01:59:29] <Tritium> freeman_h1: I'm not sure if you still need to quote text in mysql to preserve spacing, even with parameterized queries, but it wouldn't surprise me...
[01:59:38] *** Joins: jmcb (~jmcb@hacksoc/member/jmcb)
[01:59:42] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Remote host closed the connection)
[02:00:41] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[02:01:48] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[02:03:59] *** Quits: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:6426:70fb:fe7b:46b6) (Quit: Leaving)
[02:07:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:08:10] *** Quits: Bauderr (ashburry@S0106bc3e07831b53.vs.shawcable.net) (Remote host closed the connection)
[02:08:33] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 248 seconds)
[02:08:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[02:09:46] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.3)
[02:09:54] <pythonnnnn> hello
[02:10:42] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[02:10:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:11:52] <pythonnnnn> I had to print how old the data is, given the modify date.. the raw format was this = "2022-02-17 12:59:20.945000".. i used this code https://dpaste.org/DDk1L26 to get my result, i just want to know whether its the best approach or not
[02:12:07] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:14:23] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[02:14:25] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::1)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:30] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:41] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[02:16:48] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[02:17:38] *** Joins: Guest49 (~Guest49@209.52.68.8)
[02:18:06] *** Quits: Guest49 (~Guest49@209.52.68.8) (Client Quit)
[02:18:11] *** Quits: v9fk (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[02:18:56] *** Joins: c401719 (~c4017@209.52.68.8)
[02:19:13] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 248 seconds)
[02:20:52] *** Quits: guriyab (~guriyab@user/guriyab) (Quit: Client closed)
[02:21:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[02:22:51] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[02:23:57] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[02:24:01] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[02:24:07] *** Quits: The_Loko (~The_Loko@79.116.41.227) (Quit: Leaving)
[02:24:16] *** Joins: cheater (~Username@user/cheater)
[02:24:41] <hrob> o/  I sometimes use ABC base classes to define an interface -- im wondering is there any similar mechanism possible with functions?
[02:24:57] <hrob> I.e. to enforce that certain arguments / keywords are expected
[02:25:21] <Tritium> hrob: documentation and typing
[02:27:13] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 248 seconds)
[02:27:13] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:4484:a5b4:7c0b:4f8d) (Ping timeout: 248 seconds)
[02:27:16] <hrob> hm, ok I use types with mypy -- but not clear how that would work... ---   Im wondering if I could define a  base_function( foo:int, bar:str ) -> Baz     and somehow  reuse that definition on other functions
[02:27:18] *** Joins: cjb (~cjb@user/cjb)
[02:28:04] <phy1729> Perhaps you want typing.Callable ?
[02:28:08] <hrob> I supose I could write my custom decorator... which checks that the arguments are as wanted
[02:28:10] <Tritium> I can think of ways, they are in the black arts of metaprogramming though, and you are better off failing loudly.
[02:28:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[02:28:38] <hrob> phy1729  ah ok will check it out
[02:28:54] <Tritium> i dont see how that type...would help, but ok
[02:29:13] <hrob> Tritium  yeah suspected so... its not a common OOP feature to derive functions from base functions lol
[02:29:26] <pythonnnnn> I had to print how old the data is, given the modify date.. the raw format was this = "2022-02-17 12:59:20.945000".. i used this code https://dpaste.org/DDk1L26 to get my result, i just want to know whether its the best approach or not
[02:30:17] <Tritium> typing.Callable might work, but again, only with code at rest, its not the ABC case.  I'm still in favor of documenting and letting the user of the code keep the broken pieces
[02:30:40] <hrob> pythonnnnn  I recall there is method somewhere in stdlib  that parses isostring
[02:31:27] <hrob> pythonnnnn  check out dateutils.parser   see accepted answer here  https://stackoverflow.com/questions/969285/how-do-i-translate-an-iso-8601-datetime-string-into-a-python-datetime-object
[02:32:23] <muraii> hrob: I'm surely missing something, but by "certain arguments / keywords are expected" do you mean certain _values_ of the arguments, e.g., that a dict has some necessary key? Or maybe put another way: what more than specifying positional and named arguments are you looking for?
[02:32:35] <muraii> This is mostly for my curiosity, tbf.
[02:33:17] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:33:28] <hrob> muraii   lets say I have many functions that should have the same arguments and keyword arguments... --- It would be neat/convenient to somehow enforce that with some base_function...
[02:34:02] <hrob> but Im digging into something that is not normally done in OOP at all.. but I started to feel the need, when I saw many collaborators define incorrectly named and typed arguments to functions
[02:34:04] *** Joins: Barones (~Barones@user/Barones)
[02:34:11] <muraii> Ah, okay. I should've keyed on that with the ABC talk but I'm not real bright. :)
[02:34:51] <hrob> muraii  I suspect the best way is for me to define a decorator that checks the arguments and raises
[02:35:10] <muraii> Or get better contributors.
[02:35:11] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 268 seconds)
[02:35:14] <philipp64> when does Python move over to using github issue tracking?
[02:35:14] <hrob> lol
[02:35:27] <Tritium> philipp64: soon
[02:35:38] <philipp64> soon or real soon?
[02:35:57] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[02:36:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8)
[02:36:15] <Tritium> saturday or sunday
[02:36:23] *** Joins: stoneware (~stoneware@user/stoneware)
[02:36:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:36:30] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Read error: Connection reset by peer)
[02:36:44] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[02:36:48] <Tritium> saturday the migration starts to a test repo, sunday its transfered by someone in redmond to the main repo, by the look of the roadmap
[02:36:59] <hrob> where is python issue tracking now?
[02:37:01] <hrob> jira?
[02:37:03] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Remote host closed the connection)
[02:37:04] <Tritium> subject to change, see terms and conditions, may not be legal in your state
[02:37:09] <Tritium> bugs.python.org
[02:37:09] <madduck> there has to be some sort of "mymod = magicmodloader('/path/to/my/mod.py')" approach in Python, no?
[02:37:12] <madduck> like lua
[02:37:23] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: No Ping reply in 180 seconds.)
[02:37:33] <SnoopJ> madduck, importlib has some stuff like that, but it gets pretty convoluted pretty quickly.
[02:37:41] *** Joins: guriyab (~guriyab@175.101.108.126)
[02:37:43] <madduck> SnoopJ: I cannot find a function that suits.
[02:37:53] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[02:37:56] <madduck> I *just* want to call a specific function in a specific file. not hard.
[02:38:16] *** Quits: guriyab (~guriyab@175.101.108.126) (Changing host)
[02:38:16] *** Joins: guriyab (~guriyab@user/guriyab)
[02:38:17] <hrob> madduck  is that for hot-swapping code modules?
[02:38:25] <SnoopJ> Like I said, it gets complicated pretty quickly.
[02:38:30] <madduck> no, it's for run-parts.d functionality
[02:38:30] *** Joins: frmlof (~frmlof@70.243.238.191)
[02:38:34] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[02:38:38] *** Quits: lawrencevanderpo (~mekhami@136.49.153.26) (Quit: WeeChat 3.4)
[02:38:39] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:38:41] <madduck> don't make me use eval(fp.read())
[02:39:00] * muraii makes madduck use eval(fp.read())
[02:39:11] *** Parts: guriyab (~guriyab@user/guriyab) ()
[02:39:15] <madduck> NOOO
[02:39:42] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:40:22] <pyeverything> do you know how I can fix the error on line 4? https://bpa.st/JQ3A
[02:40:24] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:41:05] <hrob> madduck ok, so the file is not in python path  ... but if the files are always in the same location why not point PYTHONPATH=$PYTHONPATH:/path/to/other/files/
[02:41:06] <madduck> pyeverything: import .run
[02:41:31] <madduck> hrob: the files are just a collection of files. not a python module.
[02:41:41] <madduck> I want to "source" them.
[02:41:57] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[02:41:59] <madduck> i trust the directory not to have crap in it.
[02:42:00] <pyeverything> madduck, not import .run as run ?
[02:42:07] <madduck> pyeverything: no.
[02:42:10] <pyeverything> oh
[02:42:15] <SnoopJ> "module" just means "unit of code," every .py represents a module ("package" is maybe the term you're thinking of)
[02:42:36] <madduck> fair enough.
[02:42:54] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[02:42:55] <philipp64> Tritium: that's pretty soon indeed.
[02:43:12] <hrob> if your file   foobar.py  is in PYTHONPATH and it doesnt conflict with another name... just do whatever  import some_thing from foobar
[02:43:27] <pyeverything> madduck, that didn't work unfortunately https://bpa.st/NGCA
[02:43:45] <SnoopJ> madduck, I think SourceFileLoader is probably what you're looking for here: https://bpa.st/PWGA (but you should *really* read and make sure you grok the importlib docs when reaching this far into it)
[02:44:14] <hrob> put the files under a directory to make the files more uniquely named... directories in python are name spaces... so could do   from somedir.foobar import whatever
[02:44:18] <SnoopJ> oops, I did {mod.x} instead of {mod.x=} :)
[02:44:26] <madduck> SnoopJ: omg… https://scratch.madduck.net/2022-04-05-001405-paste seems to work
[02:44:54] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:45:39] <madduck> SourceFileLoader is nicer!
[02:45:52] <SnoopJ> yes, importlib is probably going to be a lot more reliable here
[02:45:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 272 seconds)
[02:46:15] <SnoopJ> ...and probably more annoying if you aren't doing exactly what you're describing. Finding a 'spec' for a module/etc. can get pretty annoying.
[02:46:41] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[02:47:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:47:18] <SnoopJ> madduck, note that load_module() is deprecated since 3.6, but substantially less annoying than the 'right' way, code for which I have misplaced
[02:47:31] <SnoopJ> (I don't really understand why)
[02:47:32] *** Joins: Amadiro__ (~Amadiro@45.154.138.41)
[02:47:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::1) (Ping timeout: 260 seconds)
[02:47:39] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[02:48:01] *** Quits: tarel2 (~tarel2@139.28.216.244) (Quit: Client closed)
[02:48:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[02:48:33] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::1)
[02:48:42] <pyeverything> can someone help me with https://bpa.st/NGCA ?
[02:48:46] *** ouemt is now known as cl
[02:49:13] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Client Quit)
[02:49:28] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[02:50:13] *** Quits: Amadiro_ (~Amadiro@45.154.138.90) (Ping timeout: 256 seconds)
[02:50:15] <Celeo> Look into relative imports and what they require
[02:50:26] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[02:50:49] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:51:17] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Client Quit)
[02:51:17] <madduck> SnoopJ: gosh, the docs are unhelpful. load? deprecated. Use exec. exec requires the dmoule to be initialised. init? nope. But if exec, then create must also exist. Create? who knows.
[02:51:32] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[02:51:36] <SnoopJ> madduck, yea, it's pretty obtuse
[02:51:41] <pyeverything> Celeo, what do you mean?
[02:51:49] <SnoopJ> trying to work out the "right" modern spelling for you atm
[02:51:59] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[02:52:01] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[02:52:09] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Client Quit)
[02:52:11] <madduck> SnoopJ: I will stay with load for now and fire off angry messages proportional to the angriness of deprecation messages, if the docs don't get clearer.
[02:52:21] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[02:52:25] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[02:52:28] <pyeverything> Celeo, initially I had this https://bpa.st/JQ3A followed madduck suggestion and now I have this error https://bpa.st/NGCA so I am confused
[02:52:32] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[02:52:47] <muraii> pyeverything: https://docs.python.org/3/reference/import.html?highlight=relative%20import#package-relative-imports
[02:52:54] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:53:55] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:54:11] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Client Quit)
[02:54:18] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[02:54:26] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[02:54:47] <SnoopJ> madduck, I believe this is the modern way to do it: https://bpa.st/C5QA
[02:55:14] *** Joins: frmlof (~frmlof@70.243.238.191)
[02:55:20] *** Quits: yhnujmikV (~yhnujmikV@45.83.220.203) (Ping timeout: 246 seconds)
[02:55:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:55:43] * SnoopJ puts this sample somewhere where he will find it next time this comes up...
[02:55:49] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[02:55:53] <pyeverything> muraii, I followed the instruction from the link you shared and I have this error https://bpa.st/BWMQ
[02:56:19] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[02:56:27] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[02:56:30] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[02:56:36] <madduck> SnoopJ: that works too. Thanks!
[02:56:44] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 246 seconds)
[02:57:23] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:57:28] *** Joins: yhnujmikV (~yhnujmikV@193.138.218.215)
[02:58:06] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[02:58:55] <bilb_ono> when you use res.raise_for_status like I do here https://bpa.st/ELNQ will it raise the errors in the calling function in a try except structure?
[02:59:18] <bilb_ono> It seems to raise the exception and halt the process. I want it to keep going through the for loop
[02:59:32] <bilb_ono> but Im not sure if res.raise_for_status() will pass the error along like this
[02:59:53] <BtbN> Of course it will, if nothing before catches it
[02:59:55] <SnoopJ> madduck, does it make sense?
[03:00:20] <bilb_ono> BtbN: so if it caches it, it should continue the for loop right?
[03:00:36] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:00:54] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[03:01:00] <bilb_ono> i can try and make a reproducable example
[03:01:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:25] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[03:02:37] <madduck> SnoopJ: not at all. first I define a spec. ok. Then I load a mod from that spec. Ok. But why do I then need to tell the spec to load the module? Seems like a missed design opportunity.
[03:02:44] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[03:03:42] <SnoopJ> madduck, I believe the abstraction is because the spec determines what loader is appropriate, in general. It ends up introducing some indirection in a case like this where you know exactly what you're going to use.
[03:03:57] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Client Quit)
[03:04:00] <SnoopJ> I guess you could still use SourceFileLoader to do the exec_module() and prepare the module another way
[03:04:07] <madduck> oh yeah, the 0.01% case. ;)
[03:04:10] <SnoopJ> well, no
[03:04:17] <SnoopJ> what you're doing *is* the 0.01% case
[03:04:24] * madduck hides
[03:04:47] <SnoopJ> which is I think why it seems like it's indirect and clunky, because it's just not the majority route. Most imports will invoke the "finder" machinery
[03:05:01] <SnoopJ> but here we're short-circuiting that and pointing directly as what would have resulted from that
[03:05:17] <SnoopJ> (at least, this is how I think about it; like I said, I'm still not entirely sure about some of these design decisions)
[03:05:24] <madduck> i do appreciate your help, it does work now, and I am sure that there is a good reason for it being done this way. You are all heaps smarter than I am!
[03:05:39] <bilb_ono> ok my reproducable example worked as expected so I guess something is wrong with my actual code :(
[03:06:03] <Roey> hey has anyone here used the Strategy design pattern?  What for, in your case?
[03:06:18] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[03:07:08] *** Joins: agireud (~agireud@user/agireud)
[03:07:14] <SnoopJ> Roey, I've implemented something that might be a bit like Strategy in a project at work that produces "explanations" of how our software classified an image. There are a few different ways to "explain" that, so the calling user can pass what is effectively a strategy
[03:07:18] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[03:07:36] *** Joins: parv (~quass@user/parv)
[03:07:39] *** Joins: audio (~audio@user/audio)
[03:07:39] *** Joins: sydbarret (~anton@static-186-121-195-50.acelerate.net)
[03:07:48] *** Parts: sydbarret (~anton@static-186-121-195-50.acelerate.net) ()
[03:08:04] <philipp64> staring at subprocess trying to understand how it works... making my head hurt.
[03:08:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:08:19] <philipp64> anyone here familiar with its inner-workings?
[03:08:37] <madduck> Roey: I've used it in a tournament control software to parametrise how to deal with all kinds of results, depending on whether games are serious (i.e. for money), or just for fun
[03:08:46] <freeman_h1> Hi all I am merge confused here https://bpa.st/HA4Q i run the code every 10 seconds however the data is always same. I have gone into the database and change the data but the print is always showing the same that it did from the start. why?
[03:08:54] <madduck> philipp64: don't look at the inner workings. just use it ;)
[03:09:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Quit: WeeChat 3.4.1)
[03:09:33] <philipp64> madduck: well, I want to get it to do two things, whereas it usually only wants to do one of them... it does either/or and I want "and".
[03:09:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[03:10:18] <philipp64> that is, I want to get it to copy stdout and stderr to /dev/tty AND I want it to accummulate the values into buffers to return from .communicate()
[03:10:24] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:10:36] <philipp64> it wants to do one or the other, but not both.
[03:11:32] <bilb_ono> \quit
[03:11:34] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Quit: ERC (IRC client for Emacs 27.2))
[03:11:39] <philipp64> I'd like to enhance it and send the fix upstream back to the authors, but I might be in over my head.
[03:12:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[03:15:05] *** Joins: agireud (~agireud@user/agireud)
[03:15:08] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[03:15:17] *** Quits: mharig (~mharig@181.188.139.195) (Ping timeout: 246 seconds)
[03:15:28] *** Joins: agireud (~agireud@user/agireud)
[03:15:38] *** Quits: Celeo (~znc-admin@user/celeo) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:16:43] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::1) (Ping timeout: 260 seconds)
[03:16:51] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[03:18:23] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:21:01] *** Joins: Celeo (~znc-admin@user/celeo)
[03:21:42] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[03:22:36] *** Quits: c401719 (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:22:45] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:22:47] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[03:23:04] *** Joins: jkl (~jkl@user/jkl)
[03:23:24] <philipp64> well, opened an issue... we'll see what happens. Issue47222
[03:23:55] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:24:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:24:33] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[03:25:22] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[03:26:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[03:26:46] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[03:27:45] *** Quits: walter_whip_ (~walter_wh@203-12-5-69.dyn.launtel.net.au) (Quit: Leaving)
[03:27:53] *** Quits: pythonnnnn (~fourroot@122.161.51.129) (Ping timeout: 260 seconds)
[03:28:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:29:37] *** Joins: agireud (~agireud@user/agireud)
[03:30:13] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[03:30:40] *** Joins: agireud (~agireud@user/agireud)
[03:31:58] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 260 seconds)
[03:33:57] *** Joins: vlado1 (~vlado@45.132.225.19)
[03:34:01] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:34:43] *** Joins: c401771 (~c4017@209.52.68.8)
[03:35:25] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[03:35:33] *** Joins: Jacques (~Jacques@cpe-173-172-37-214.tx.res.rr.com)
[03:36:09] <freeman_h1> Hi all I am merge confused here https://bpa.st/HA4Q i run the code every 10 seconds however the data is always same. I have gone into the database and change the data but the print is always showing the same that it did from the start. why?
[03:37:43] <BtbN> Wild guess would be that your db abstraction layer started a transaction and you never handle it.
[03:38:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[03:38:43] *** Quits: johtso (~johtso@user/johtso) (Quit: Client closed)
[03:42:44] *** Quits: todo75 (~todo75@user/todo75) (Remote host closed the connection)
[03:42:48] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:43:58] *** Joins: mharig (~mharig@181.188.139.195)
[03:44:55] *** Quits: b_jonas (~x@catv-176-63-4-13.catv.fixed.vodafone.hu) (Quit: leaving)
[03:44:57] <freeman_h1> BtbN, what do you mean "never handle it"?
[03:45:14] *** Quits: masta`` (~Username@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[03:45:15] <BtbN> never commit or revert it
[03:45:33] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[03:46:12] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[03:46:55] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[03:47:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:47:49] <freeman_h1> BtbN, it has
[03:48:03] <freeman_h1> because when i disconnect and connect again i can see my changes
[03:48:13] <BtbN> That'd play into my theory.
[03:48:18] <freeman_h1> also if i rerun the python script it kicks up the new data
[03:48:27] <freeman_h1> it picks up*
[03:48:50] <BtbN> You should read up on how to handle transactions, and make sure to start a new one before you expect new data.
[03:49:06] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:49:49] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:53:11] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[03:57:52] <freeman_h1> BtbN, i added a commit and that resolved it
[03:58:04] <freeman_h1> but its odd adding a commit on a select statement
[03:59:09] <BtbN> You're in a transaction, so your view of the database is fixed
[03:59:25] *** Quits: grimvar (~grimvar@i5C75F728.versanet.de) (Ping timeout: 240 seconds)
[03:59:28] <BtbN> If all you do is select, just don't be in a session.
[03:59:39] <BtbN> *transaction
[03:59:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[04:00:12] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[04:01:24] *** Joins: grimvar (~grimvar@i5C75F6DB.versanet.de)
[04:04:10] <muraii> pyeverything: Yeah, I recall fussing around with relative imports last year, and resorting to using `sys.path.append('<path to directory containing what you wanna import>')` and then doing a relative import.
[04:04:26] <muraii> pyeverything: https://gideonbrimleaf.github.io/2021/01/26/relative-imports-python.html
[04:06:17] *** Joins: civillian (~nick@118.211.125.95)
[04:06:24] *** Quits: jargon (~jargon@184.101.173.186) (Ping timeout: 272 seconds)
[04:06:39] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[04:06:52] *** Quits: Jacques (~Jacques@cpe-173-172-37-214.tx.res.rr.com) (Quit: Client closed)
[04:08:16] *** Quits: muraii (~Daniel@h24-56-179-28.ftcmco.broadband.dynamic.tds.net) (Read error: Connection reset by peer)
[04:09:09] *** Quits: vlado1 (~vlado@45.132.225.19) (Quit: WeeChat 3.4)
[04:09:13] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:983d:b382:2cfd:76f5)
[04:10:02] <nedbat> you shouldn't need sys.path.append
[04:10:58] *** Joins: georgios (~georgios@user/georgios)
[04:11:31] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:12:03] *** Joins: hub (~hub@user/hub)
[04:13:21] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[04:15:10] *** Joins: bancroft (~bancroft@user/bancroft)
[04:18:10] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:18:26] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:19:22] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[04:20:19] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:20:39] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[04:20:44] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[04:23:18] <Roey> <madduck> Roey: I've used it in a tournament control software to parametrise how to deal with all kinds of results, depending on whether games are serious (i.e. for money), or just for fun
[04:23:20] <Roey> ahhh cool
[04:23:58] <Roey> madduck: so I saw this nice video on implementing it with functions instead of with classes: https://www.youtube.com/watch?v=ph2HjBQuI8Y
[04:24:10] <Roey> btw I like this guy's channel
[04:27:25] *** Quits: audio (~audio@user/audio) (Ping timeout: 250 seconds)
[04:28:26] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:28:40] *** Joins: muraii (~Daniel@h24-56-179-28.ftcmco.broadband.dynamic.tds.net)
[04:29:15] *** seifeslimene_ is now known as seifeslimene
[04:29:32] <bancroft> can someone explain the input/output shape in tensorflow? I don't understand how to prepare data https://bpa.st/HTQA
[04:30:11] *** Joins: Wulf (~Wulf@user/wulf)
[04:30:16] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:41] *** Joins: antranigv (~antranigv@37.252.78.252)
[04:31:20] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[04:31:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:32:31] <grym> bancroft: looks like you need an unsqueeze or an expand_dims in there
[04:33:15] <bancroft> grym: am I correctly assuming that x is for training and y is for testing or do I have that wrong too?
[04:34:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[04:34:07] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[04:34:28] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:34:47] <bancroft> x_train would be input training, x_test is output training; y_train would be input test and y_test would be output testing in other words?
[04:34:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:36:49] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[04:36:52] *** Joins: MeanEYE_ (~MeanEYE__@87.116.162.168)
[04:36:56] *** Joins: bdeferme1 (~bdeferme@i.ctrl86.com)
[04:36:57] *** Joins: Nei_ (~ailin@openSUSE/member/ailin-nemui)
[04:37:14] *** Joins: BillyZane2 (~BillyZane@192.145.80.68)
[04:37:20] *** Joins: zingos3 (~zingos@143.198.48.220)
[04:37:23] *** feoh is now known as Guest2673
[04:37:24] *** Quits: Guest2673 (~feoh@idlerpg/player/feoh) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:37:26] *** Joins: waxfire9 (~waxfire@65.119.2.240)
[04:37:33] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: njhanley (~njhanley@static.15.210.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Ping timeout: 256 seconds)
[04:37:36] *** Joins: masterkorp2 (~masterkor@user/masterkorp)
[04:37:37] *** Joins: Malin8 (lounge@pirate.pt)
[04:37:40] <grym> i don't know what that means
[04:37:44] *** Joins: cryocaustik4 (~cryocaust@user/cryocaustik)
[04:37:49] *** Joins: Retr0id8 (~Retr0id@user/retr0id)
[04:37:49] *** Joins: nizzan7 (~nizzan@static.203.116.201.138.clients.your-server.de)
[04:37:50] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[04:37:50] *** Joins: trashbird7 (~trashbird@user/trashbird)
[04:37:53] *** Joins: mven1 (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:37:53] *** Joins: haliucinas7 (~d5c5a67e@5.20.153.21)
[04:37:56] *** Joins: SoF9 (~skius@user/skius)
[04:38:00] *** Quits: c401771 (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:38:01] *** Joins: jancoow9 (~jancoow@user/jancoow)
[04:38:04] *** Joins: dav1d9 (~dav1d@user/dav1d)
[04:38:04] *** Joins: guntbert_ (~yesitsme@user/guntbert)
[04:38:06] *** Quits: zingos (~zingos@143.198.48.220) (Read error: Connection reset by peer)
[04:38:06] *** zingos3 is now known as zingos
[04:38:06] *** Quits: ebb (ebb@user/ebb) (Remote host closed the connection)
[04:38:07] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 256 seconds)
[04:38:07] *** Quits: Jenna64bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[04:38:07] *** Quits: euidzero_ (~euidzero@158.101.10.150) (Ping timeout: 256 seconds)
[04:38:07] *** Quits: Fulgen (~Fulgen@mail.maxmitti.tk) (Remote host closed the connection)
[04:38:08] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Read error: Connection reset by peer)
[04:38:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Read error: Connection reset by peer)
[04:38:10] *** Quits: extor (~xtor@192.99.217.240) (Remote host closed the connection)
[04:38:12] *** Quits: waxfire (~waxfire@65.119.2.240) (Read error: Connection reset by peer)
[04:38:12] *** waxfire9 is now known as waxfire
[04:38:14] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Read error: Connection reset by peer)
[04:38:14] *** cryocaustik4 is now known as cryocaustik
[04:38:16] *** Quits: Repiphany (~Repiphany@user/repiphany) (Read error: Connection reset by peer)
[04:38:18] *** Quits: abff (~abff@user/abff) (Read error: Connection reset by peer)
[04:38:19] *** Joins: extor (~xtor@192.99.217.240)
[04:38:27] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[04:38:27] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[04:38:27] *** Quits: shodan45 (~quassel@107.161.22.155) (Remote host closed the connection)
[04:38:29] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[04:38:30] *** Joins: the4oo4- (~the4oo4@shenzhou.whatbox.ca)
[04:38:33] *** Joins: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be)
[04:38:41] *** Quits: bdeferme (~bdeferme@i.ctrl86.com) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: omantere (~pi@85-156-109-34.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: ShotokanZH (~ShotokanZ@aitch.me) (Ping timeout: 256 seconds)
[04:38:42] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4.1)
[04:38:42] *** Joins: euidzero (~euidzero@158.101.10.150)
[04:38:42] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Read error: Connection reset by peer)
[04:38:43] *** mven1 is now known as mven
[04:38:44] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (Remote host closed the connection)
[04:38:45] *** Joins: yitz (~yitz@exercism/yitz)
[04:38:50] *** Quits: masterkorp (~masterkor@user/masterkorp) (Read error: Connection reset by peer)
[04:38:50] *** masterkorp2 is now known as masterkorp
[04:38:52] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:38:52] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[04:38:54] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (Read error: Connection reset by peer)
[04:38:54] *** Quits: SoF (~skius@user/skius) (Read error: Connection reset by peer)
[04:38:54] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[04:38:54] *** SoF9 is now known as SoF
[04:38:54] *** Retr0id8 is now known as Retr0id
[04:39:03] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[04:39:03] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[04:39:06] *** Joins: CalimeroTeknik (~calimero@ctkarch.org)
[04:39:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[04:39:09] *** Quits: nizzan (~nizzan@static.203.116.201.138.clients.your-server.de) (Read error: Connection reset by peer)
[04:39:09] *** nizzan7 is now known as nizzan
[04:39:11] *** Quits: Malin (lounge@pirate.pt) (Read error: Connection reset by peer)
[04:39:11] *** Malin8 is now known as Malin
[04:39:15] *** Quits: haliucinas (~d5c5a67e@5.20.153.21) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: jpaa (~jpaa@161.97.129.36) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: trinli (~notto@melkinpaasi.cs.helsinki.fi) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: robopat (~user@triton.blinkenshell.org) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: dav1d (~dav1d@user/dav1d) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: leosilva (~leosilva@canonical/leosilva) (Ping timeout: 256 seconds)
[04:39:15] *** haliucinas7 is now known as haliucinas
[04:39:15] *** jancoow9 is now known as jancoow
[04:39:15] *** dav1d9 is now known as dav1d
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:23] *** Joins: jpaa (~jpaa@161.97.129.36)
[04:39:24] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef)
[04:39:30] *** Joins: njhanley (~njhanley@static.15.210.217.95.clients.your-server.de)
[04:39:30] *** Joins: trinli (~notto@melkinpaasi.cs.helsinki.fi)
[04:39:35] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 256 seconds)
[04:39:36] *** Joins: shodan45 (~quassel@107.161.22.155)
[04:39:38] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8) (Ping timeout: 260 seconds)
[04:39:38] *** Joins: robopat (~user@triton.blinkenshell.org)
[04:39:38] *** Joins: omantere (~pi@85-156-109-34.elisa-laajakaista.fi)
[04:39:39] *** Joins: Repiphany (~Repiphany@user/repiphany)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[04:39:49] *** Quits: MeanEYE (~MeanEYE__@87.116.162.168) (Ping timeout: 256 seconds)
[04:39:49] *** Quits: BillyZane (~BillyZane@192.145.80.68) (Ping timeout: 256 seconds)
[04:39:49] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 256 seconds)
[04:39:49] *** Quits: guntbert (~yesitsme@user/guntbert) (Ping timeout: 256 seconds)
[04:39:49] *** trashbird7 is now known as trashbird
[04:39:50] *** Joins: Alexer (~alexer@alexer.net)
[04:39:53] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[04:40:03] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:40:19] *** Joins: jesster1234 (~jessica@static.172.234.251.148.clients.your-server.de)
[04:40:24] *** Joins: abff (~abff@user/abff)
[04:40:38] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[04:40:44] <muraii> Generally x_train and y_train would be the input and output variables for training a model, and x_test and y_test would be the input and output variables for testing the model.
[04:41:03] *** Joins: Fulgen (~Fulgen@mail.maxmitti.tk)
[04:41:03] <muraii> (I haven't looked at the pastebin.)
[04:41:54] *** Nei_ is now known as Nei
[04:42:15] *** Joins: ebb (ebb@user/ebb)
[04:42:39] *** Quits: onu (~onufn@gibbs.uberspace.de) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: woky_ (~woky@li1651-31.members.linode.com) (Ping timeout: 256 seconds)
[04:42:54] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[04:42:56] *** Joins: Unode_ (~Unode@194.94.44.220)
[04:42:57] *** Joins: Spr0cket- (sprocket@user/Spr0cket)
[04:42:58] *** Joins: woky (~woky@li1651-31.members.linode.com)
[04:42:59] *** Joins: dskull (~dskull@user/dskull)
[04:43:02] *** Joins: AsenMx (~asen@user/asenmx)
[04:43:13] *** Quits: librenaut (~librenaut@li1898-97.members.linode.com) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: sjas (~sjas@irc.sjas.de) (Ping timeout: 256 seconds)
[04:43:13] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[04:43:17] *** Joins: woffle (awoo@libera/staff/wofl/moonmoon)
[04:43:19] *** Joins: onu (~onufn@gibbs.uberspace.de)
[04:43:30] *** Joins: dfch_ (~dfch@user/dfch)
[04:43:38] *** Joins: taeaad_ (~taeaad@user/taeaad)
[04:43:47] *** Quits: sshine (~simon@exocortex.online) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: infidel (~ecrump@75.161.248.175) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Wu (~wu@141.red-2-139-122.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: dfch (~dfch@user/dfch) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: mdq (~mdq@freeshell.de) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: kantlivelong (~kantlivel@octoprint/kantlivelong) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: TML (~tml@user/tml) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: meejah (~meejah@rutas.meejah.ca) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: ixjlyons (~kenny@li1177-148.members.linode.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: svet (~svet@ec2-3-144-179-53.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: root3 (~root@ip209.ip-94-23-121.eu) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: mrec_ (~markus@user/mrec) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Xat`_ (~Xat`@ns300217.ip-91-121-29.eu) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: function1 (~shawoop@199.115.117.198) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Unode (~Unode@194.94.44.220) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: nz (~david@oh.not.bad.aye.yeah.nah.nz) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: B33F_1337 (~b33f1337@host.b33f1337.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: phillhoc1ing (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: ghostbuster (~admin@user/ghostbuster) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: percY- (~percY@138.68.239.19) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: syntaxman (~wade@li227-215.members.linode.com) (Ping timeout: 256 seconds)
[04:43:47] *** Unode_ is now known as Unode
[04:43:49] *** Spr0cket- is now known as Spr0cket
[04:43:58] *** Joins: derelict (~derelict@user/derelict)
[04:44:16] *** Joins: percY- (~percY@138.68.239.19)
[04:44:21] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: nvz (~user@nvz.farted.online) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: nullm0dem (~nullm0dem@rs232.0x2f8.io) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: snappy (~snappy@user/snappy) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: Scotteh (~Scotteh@user/scotteh) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: taeaad (~taeaad@user/taeaad) (Ping timeout: 256 seconds)
[04:44:29] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[04:44:32] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[04:44:34] *** Joins: Wu (~wu@141.red-2-139-122.dynamicip.rima-tde.net)
[04:44:52] *** Joins: librenaut (~librenaut@li1898-97.members.linode.com)
[04:45:01] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Ping timeout: 240 seconds)
[04:45:10] *** Joins: function1 (~shawoop@199.115.117.198)
[04:45:11] *** Joins: meejah (~meejah@rutas.meejah.ca)
[04:45:13] *** Joins: squarecircle (~root@merkur.platinengarten.hg.tu-darmstadt.de)
[04:45:14] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[04:45:15] *** Joins: sshine (~simon@exocortex.online)
[04:45:15] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[04:45:21] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[04:45:22] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[04:45:24] *** Joins: B33F_1337 (~b33f1337@host.b33f1337.com)
[04:45:24] *** Joins: mrec (~markus@sundtek.de)
[04:45:26] *** Joins: TML (~tml@user/tml)
[04:45:27] *** Joins: svet (~svet@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[04:45:28] *** Joins: syntaxman (~wade@li227-215.members.linode.com)
[04:45:32] *** Joins: mdq (~mdq@freeshell.de)
[04:45:35] *** Joins: nvz (~user@nvz.farted.online)
[04:45:37] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[04:45:37] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[04:45:41] *** Joins: bidouille (~user_name@trois.potager.org)
[04:45:42] *** Joins: root3 (~root@ip209.ip-94-23-121.eu)
[04:45:43] *** Joins: nullm0dem (~nullm0dem@rs232.0x2f8.io)
[04:45:46] *** Joins: ghostbuster (~admin@user/ghostbuster)
[04:45:48] *** Joins: phillhocking (~erasmus@ec2-54-191-78-90.us-west-2.compute.amazonaws.com)
[04:45:49] *** Joins: loofy (~loofy@user/loofy)
[04:45:54] *** Joins: dirtydan (~dirtydan@c-76-24-53-177.hsd1.nh.comcast.net)
[04:45:57] *** Joins: kantlivelong (~kantlivel@octoprint/kantlivelong)
[04:46:00] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[04:47:25] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:47:29] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::1)
[04:47:32] *** Joins: jayray (~jayray@user/jayray)
[04:47:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:48:57] *** Joins: Scotteh (~Scotteh@user/scotteh)
[04:50:01] *** Quits: moonmoon (awoo@libera/staff/wofl/moonmoon) (Ping timeout: 606 seconds)
[04:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:50:36] *** Joins: Ekho (~Ekho@user/ekho)
[04:52:25] *** Joins: leosilva (~leosilva@canonical/leosilva)
[04:53:09] <bancroft> grym: I'm trying to make a model predict what a function is doing to a set of numbers it receives as input, so three numbers go in and 4 numbers come out but there simply rotated, multipled, and moved around so I can create as much data as I want. I want to know how to give TF data and how to correctly create the numpy shapes to do this. An example of the input output is this. (input: 11,12,13;
[04:53:11] <bancroft> output: 21,143,11,31)
[04:53:11] *** Quits: Balzy (~Balzy@host-95-237-165-207.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[04:53:22] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[04:53:43] *** Quits: akk (~akk@75.161.150.5) (Quit: +++)
[04:54:02] *** Joins: jargon (~jargon@43.sub-174-205-166.myvzw.com)
[04:54:06] *** Quits: kostkon_ (~androirc@athedsl-394286.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[04:55:54] *** Joins: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6)
[04:56:07] *** Joins: sjas (~sjas@irc.sjas.de)
[04:56:39] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[04:56:40] *** Quits: jargon (~jargon@43.sub-174-205-166.myvzw.com) (Remote host closed the connection)
[04:57:19] *** Joins: infidel (~ecrump@75.161.248.175)
[04:57:22] *** Joins: nz (~david@oh.not.bad.aye.yeah.nah.nz)
[04:57:49] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[04:57:56] *** Joins: snappy (~snappy@user/snappy)
[04:58:17] *** Joins: Balzy (~Balzy@host-79-25-208-165.retail.telecomitalia.it)
[04:58:49] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[05:01:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:04:33] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 248 seconds)
[05:04:58] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:05:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:07:47] *** Quits: mharig (~mharig@181.188.139.195) (Quit: WeeChat 3.5)
[05:09:04] <dba> is it possible to gracefully shutdown my app when it crashes?
[05:09:49] <mefistofeles> dba: that depends on its complexity, but generally speaking, yes, it should be possible
[05:10:27] <SnoopJ> dba, what kind of crashes are you experiencing?
[05:10:46] <ldericher> I loaded an x.509 (PEM) certificate using `cryptography.x509`, now its `subject` property is a `x509.Name` instance. how do I get its individual fields, i.e. the common name?
[05:12:58] <dba> SnoopJ: let see I am running the app in terminal and the terminal got stale. not the scenario  of the app terminated by the user.
[05:14:01] <dba> mefistofeles: What an approach would be?
[05:14:54] <dba> SnoopJ: let's `say*`I am running the app in terminal and the terminal got stale. not the scenario  of the app terminated by the user.
[05:14:57] *** Joins: vlm (~vlm@user/vlm)
[05:15:16] *** Joins: minip (~minip@user/minip)
[05:15:24] <SnoopJ> dba, I'm not sure I know what you mean. "Stale" doesn't really sound like "crash" to me
[05:18:36] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::1) (Ping timeout: 268 seconds)
[05:18:50] <dba> SnoopJ: I meant by crash is the app not responding.
[05:18:53] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[05:19:33] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:20:10] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:20:46] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:21:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[05:22:15] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[05:22:35] *** Joins: src (~src@user/src)
[05:23:57] *** Quits: relight (~relight@user/relight) (Ping timeout: 250 seconds)
[05:24:12] *** Joins: relight (~relight@user/relight)
[05:24:37] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[05:27:14] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[05:27:15] *** Quits: upsala (~zcb@185.209.196.132) (Quit: WeeChat 3.5)
[05:32:12] *** Joins: jbox (~jbox@user/jbox)
[05:33:59] *** Joins: Viewday1156 (~Viewday@user/viewday)
[05:34:09] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:34:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 246 seconds)
[05:34:40] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[05:35:59] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[05:35:59] *** Viewday1156 is now known as Viewday115
[05:36:28] *** Quits: takezo (~takezo@gateway/vpn/pia/takezo) (Quit: Leaving)
[05:39:29] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[05:40:16] *** Joins: Church (~aleph@72.80.0.136)
[05:40:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:40:54] *** woffle is now known as moonmoon
[05:41:25] *** Quits: jpic (~jpic@145.224.76.29) (Ping timeout: 268 seconds)
[05:42:46] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[05:42:47] *** Joins: jpic (~jpic@145.224.77.92)
[05:43:06] *** Joins: agireud (~agireud@user/agireud)
[05:48:53] *** Joins: sumi80m (~dos@13.188.202.62.dynamic.cgnat.res.cust.swisscom.ch)
[05:49:12] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[05:49:27] *** Joins: agireud (~agireud@user/agireud)
[05:49:51] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[05:50:19] *** Quits: freeman_h1 (~freeman_h@cpc94282-ward11-2-0-cust375.10-2.cable.virginm.net) (Read error: Connection reset by peer)
[05:50:40] *** Quits: jpic (~jpic@145.224.77.92) (Ping timeout: 268 seconds)
[05:50:56] *** Joins: agireud (~agireud@user/agireud)
[05:51:17] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[05:51:44] <arkanoid> how to assess the correctness of a python program without static typing?
[05:52:12] *** Joins: jpic (~jpic@145.224.77.92)
[05:53:41] <nedbat> arkanoid: run the test suite
[05:54:23] *** Joins: jargon (~jargon@174-22-223-120.phnx.qwest.net)
[05:54:40] <arkanoid> nedbat: but that's not always possible
[05:56:00] <nedbat> arkanoid: sure. and static typing isn't always possible.
[05:56:25] <nedbat> arkanoid: and it's not like static typing ensures that your program is correct anyway.
[05:56:38] <nedbat> arkanoid: def one_more(n: int) -> int: return n - 1
[05:57:44] *** Joins: wyclif (~wyclif@user/wyclif)
[05:58:02] *** Quits: FluffyMask (~masque@user/fluffymask) (Ping timeout: 246 seconds)
[05:58:25] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:983d:b382:2cfd:76f5) (Ping timeout: 248 seconds)
[06:02:30] <arkanoid> well, it can solve the problem you just exposed
[06:03:02] <nedbat> arkanoid: maybe i don't know enough about static typing: how would it solve it?
[06:04:57] <ali1234> how would you check for that problem with a test?
[06:05:29] <arkanoid> nedbat: int type can be a distinct int type that doesn't borrow the `minus` (infix) operation, for example
[06:05:36] <nedbat> ali1234: i can write a test that it produces the value i expect.  the test could be wrong, but so can typing.
[06:05:55] <nedbat> arkanoid: that seems like it's not going to scale to the kinds of problems you need to defend against.
[06:06:13] *** Quits: tecdroid (~tecdroid@2a04:d480:0:1::3) (Ping timeout: 250 seconds)
[06:06:21] <nedbat> arkanoid: are you really going to define a new int class that has no minus? and will that class work properly?
[06:06:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:06:36] <nedbat> arkanoid: the larger point is this: static typing is not a magic bullet.
[06:06:49] <nedbat> you can get the typing wrong, and there are bugs that you can't defend against with types.
[06:07:06] <arkanoid> why not? it does, indeed. It's an implicit type conversion from "full" int to "distinct" int that you can use to limit the valid ops on it
[06:07:22] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 272 seconds)
[06:07:32] <nedbat> arkanoid: even if your code is fully typed, you need to find out if it works or not.
[06:07:43] <ali1234> return n + -1
[06:07:52] <arkanoid> sure, but the error surface is way less
[06:07:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:07:59] <nedbat> arkanoid: def next_prime(n: magic_int) -> magic_int:  # code that doesn't make a prime
[06:08:17] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:08:18] <nedbat> arkanoid: ok, so the question remains: how to asses the correctness of a python program *with* static typing?
[06:08:35] <arkanoid> ali1234: the `plus` ops of the distinct int type accept as second argument a strictly positive int. It checks that too
[06:09:00] *** Joins: jbeimler (~quassel@75.183.82.166)
[06:10:04] <ali1234> return -1 + n
[06:10:21] <nedbat> arkanoid: you new int type won't ensure the function is right: it can't check that the value is just one more than the input.
[06:10:24] <nedbat> arkanoid: you need tests
[06:10:36] <ali1234> i guess return type will catch that
[06:10:46] <nedbat> and btw, once you have those tests, they will cover much of what your types were checking anyway.
[06:11:36] <arkanoid> ali1234: exactly, that expression would return an invalid type for that function definition
[06:11:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[06:11:45] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[06:11:49] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[06:12:03] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[06:12:10] <nedbat> arkanoid: def one_more(n: int_no_minus) -> int_no_minus:  return n * 2
[06:12:50] <nedbat> arkanoid: how will you assess the correctness of your program with static types?
[06:13:05] <ali1234> how do you assess the correctness of your static types?
[06:13:11] <arkanoid> int_no_minus has no `*` op defined
[06:13:18] <ali1234> how do you assess the correctness of your tests?
[06:13:22] <arkanoid> ali1234: this is a good question
[06:13:35] <ali1234> ultimately it's turtles all the way down
[06:13:38] <nedbat> arkanoid: you really are working hard to ignore my point.
[06:13:44] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[06:13:47] <nedbat> arkanoid: def one_more(n: int_no_minus) -> int_no_minus:  return n + 1000
[06:14:03] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:14:03] <arkanoid> assesting the correctness of static types is formal programming topic. There's a deep rabbit hole there
[06:14:25] <nedbat> ali1234: exactly, there's no magic bullet.
[06:14:37] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[06:14:39] <phy1729> at some point if your type system is complex enough to ensure all these things it becomes Turing complete and needs it's own unit tests
[06:14:44] <nedbat> test suites are littered with incorrect tests, or tests that don't check the right thing.
[06:15:10] <nedbat> arkanoid's original question seemed to imply that static typing ensure correctness. it doesn't.
[06:15:18] <arkanoid> nedbat: that's a literal int, also checked at compile time. Sure not to be fixed with type systems, but you can infer the function output value
[06:15:37] <ali1234> most of my tests just try to run the function and assert it doesn't raise an unexpected exception. that catches a huge amount of bugs already...
[06:15:38] <nedbat> arkanoid: are you claiming that static types ensure correctness?
[06:15:51] <ldericher> how can I combine `@classmethod`, `@property` and `@lru_cache`? https://bpa.st/Z3LA I think `Okay._` and `NotOkay._` *should* be more or less equivalent; they are both correctly called, after all. However, `pylance` does not like line 42: 'Cannot access member "foo" for type "property"'
[06:16:11] <arkanoid> nedbat: for some type of programs, when done right (aka formal programming) it does. But it depends on the context
[06:16:18] <nedbat> arkanoid: "infer the function output value": i don't understand how that will catch my bug?
[06:16:28] <arkanoid> most of the time is not sufficient/possible. I never said tests are not needed
[06:16:52] <nedbat> arkanoid: ok, then you have the answer to your question: you assess the correctness by running the tests.
[06:17:18] <nedbat> arkanoid: (which is what you need to do for code *with* static typing also)
[06:17:42] <nedbat> because static typing doesn't ensure there's no bugs, so you need tests.
[06:18:13] <arkanoid> size matters. The amount if test code for static typed programs is way lower than dynamic ones. Simply because a lot of stuff is assured anyway
[06:18:51] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[06:19:14] <nedbat> arkanoid: it looks to me like static types provide only fairly shallow guaratees, and the hard tests/bugs are still up to the developer. so you still have significant test suites.
[06:19:23] <nedbat> i'm not against static types, they can be great.
[06:20:30] <nedbat> once your code is dealing with Customer, Discount, Tax, Coupon, etc, I doubt the static typing is finding deep bugs.
[06:20:46] <nedbat> you still write tests to cover complex scenarios.
[06:20:47] <Tritium> static types only eliminate one kind of test - the "what if they pass the wrong thing to my api" test.  You still need to test edge cases of values that are the right type, but outside expected bounds.  ... and this is still python, so you need to write the "what if they pass the wrong thing" test anyways
[06:20:53] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[06:21:45] <arkanoid> type system can deal with range types (depends on the language)
[06:22:38] <arkanoid> and sure structs like Customer, Discount, Tax, Coupon can be modeled too in a type system
[06:23:03] <Tritium> I dont think there is a type system that exists ...in a reasonably well used language ... that actually checks the runtime values of parameters
[06:23:27] <arkanoid> but that's not the point. What I feel from this conversation is that python lacks the structure to deal with increasing complexity, apart from tests and more tests
[06:23:32] <nedbat> arkanoid: yes, they can, but you can't find the bug of applying the wrong tax with a type system.
[06:23:46] <nedbat> arkanoid: you felt that coming in, and haven't heard a word anyone said.
[06:24:05] <phy1729> And linters
[06:24:29] <nedbat> arkanoid: you haven't answered how to find the n+1000 bug in my function.
[06:24:59] <Repiphany> Complex programming being complex isn't a problem solved by any language
[06:25:09] <nedbat> arkanoid: that's nothing to do with python lacking something. That's just about type systems not being a complete solution.
[06:25:09] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377)
[06:25:52] *** Joins: b_jonas (~x@catv-176-63-3-240.catv.fixed.vodafone.hu)
[06:25:54] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:26:06] <Tritium> When designing languages, there are decisions you have to make - is it statically typed or dynamically typed or some hybrid?  Is it strongly typed or weakly typed?  ... there are pros and cons for all these decisions that have to be carefully considered.  Python carefully considered them.  Java carefully considered them.  ...some other languages did not...
[06:26:09] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[06:26:27] <nedbat> arkanoid: go in peace. it's clear we can't shift your mindset on this.
[06:26:27] <arkanoid> not complete, but neither are tests. The difference is that using type system right would cover a lot of dark areas that you would have to test separately without types
[06:26:39] <nedbat> arkanoid: ok, so we agree, we all need tests.
[06:26:49] <nedbat> arkanoid: the n+1000 bug would only be found with a test.
[06:27:56] <nedbat> arkanoid: i think "an int with no minus" is not using the type system right, btw.  I think you would drive yourself crazy trying to model those details in types.
[06:28:12] <nedbat> and you don't need to, because those kind of mistakes will be caught by your tests
[06:28:20] <Tritium> nedbat: to be fair, unsigned int
[06:28:44] <nedbat> Tritium: why do i have to limit "def one_more" to unsigned ints?
[06:29:05] <nedbat> and even if i did:  def one_more(n:unsigned_int) -> unsigned_int:  return n - 1
[06:29:10] <nedbat> that's still passed type checking
[06:29:13] <arkanoid> nedbat: I've answered that. In a type system with ranges, that would be catched if the literal value would be bigger than the range itself. But that depends on the range. Another way would be to just accept +1 modifications on that type, but that would be a concept type (again depends on the language9
[06:29:36] <nedbat> arkanoid: but my function is supposed to work for all ints.
[06:29:41] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[06:29:44] <Tritium> nedbat: oh yeah, you absolutely need to test that the return value isn't 2 billion something now <.<
[06:29:49] *** Parts: Themis3000 (~Thunderbi@user/themis3000) ()
[06:29:51] <nedbat> arkanoid: can you just admit that the bug isn't solvable with a type?
[06:30:02] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[06:30:24] <nedbat> arkanoid: you must be able to imagine bugs that fall outside the scope of type checking, yes?
[06:30:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:30:29] *** Parts: agireud (~agireud@user/agireud) ()
[06:30:47] <bancroft> how can I rearrange the width/height of a block from one into another (from width-3,height-n into width-n,height-3)? https://bpa.st/FTOQ
[06:31:07] <Repiphany> bancroft: Use something like numpy and the build in transpose, arr.T
[06:31:45] <bancroft> Repiphany: thanks
[06:32:01] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Remote host closed the connection)
[06:32:15] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[06:33:00] <arkanoid> nedbat: sure, but I bet the type of tests you don't do on your types is way larger than the amount of tests you do on your logic
[06:33:31] <nedbat> arkanoid: you keep saying that.  I think the hard tests remain. and the hard tests cover the simple cases often.
[06:33:50] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[06:33:54] <Tritium> Having seen ned's testing talk... i would accept that bet.
[06:34:03] <FunkyBob> hheh
[06:34:03] <nedbat> arkanoid: i think the difference in test suite size is less than you think.
[06:34:25] <nedbat> arkanoid: can you point us to a well-tested statically typed project? we can compare
[06:34:43] <Tritium> nedbat: I can!  cpython
[06:35:00] <arkanoid> except the moving bytes between functions are the same when using static types, and "if it quacks is a duck" otherwise
[06:35:10] <nedbat> Tritium: i wonder if arkanoid would think they were using types well.
[06:35:22] <nedbat> arkanoid: i don't understand that last statement
[06:35:40] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:36:38] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8)
[06:36:49] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Ping timeout: 248 seconds)
[06:37:23] <nedbat> arkanoid: we'll have to pick it up another time, i'm signing off.
[06:37:34] <arkanoid> nedbat: thanks for the interesting conversation
[06:37:57] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[06:38:02] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[06:38:06] <Tritium> a strictly static type system catches exactly one class of programming mistake.  A class of programming mistake I rarely even test for in dynamic languages unless its part of a regression test.
[06:39:03] *** Joins: thevar1able (~textual@89-250-187-98.tangos.nl)
[06:39:06] *** Joins: Alan3 (~alan@user/alan)
[06:39:20] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[06:39:23] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (Ping timeout: 256 seconds)
[06:39:23] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 256 seconds)
[06:39:23] *** Quits: towel_ (~towel@user/towel) (Ping timeout: 256 seconds)
[06:39:23] *** Quits: mwilson (~mwilson@li159-72.members.linode.com) (Ping timeout: 256 seconds)
[06:39:40] *** Joins: Goodbye_Vincent1 (cyvahl@freakshells.net)
[06:39:57] *** Quits: nikos (~nikos@nikos.dev) (Ping timeout: 256 seconds)
[06:39:57] *** Quits: dademurphy (~dademurph@45.63.16.83) (Ping timeout: 256 seconds)
[06:39:57] *** Quits: a1paca (~a1paca@user/a1paca) (Ping timeout: 256 seconds)
[06:40:06] *** Joins: dademurphy_ (~dademurph@45.63.16.83)
[06:40:08] *** Joins: sirn (~sirn@user/sirn)
[06:40:08] *** Joins: Lartza_ (~lartza@user/lartza)
[06:40:09] *** Quits: goblin (~jaa@yatima.uukgoblin.net) (Read error: Connection reset by peer)
[06:40:10] *** Joins: Bobathan_ (~admin@cpe-65-29-248-157.wi.res.rr.com)
[06:40:11] *** Joins: dysfigured (~dfg@dfg.rocks)
[06:40:11] *** Joins: quesker_ (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[06:40:16] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[06:40:19] *** Joins: queue (~nerd@rektnet.com)
[06:40:22] *** Joins: DCTWD- (~dc@uz.utmappro.com)
[06:40:29] *** Joins: nkiz (~nki@adsl-89-217-141-227.adslplus.ch)
[06:40:31] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: quesker (~idnet@mail.89vx.net) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: dfg (~dfg@user/dfg) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: fredrikhl (~fhl@myrsnipa.uio.no) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: Lartza (lartza@user/lartza) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: nkiz- (~nki@adsl-89-217-141-227.adslplus.ch) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: queue- (~nerd@user/queue/x-7267619) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: potatoe (~potatoe@1g.is) (Ping timeout: 256 seconds)
[06:40:31] *** Joins: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149)
[06:40:46] *** Joins: towel (~towel@user/towel)
[06:41:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: DCTWD (~dc@uz.utmappro.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: Alan (~alan@user/alan) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: sale_ (~sale@ypocit.initech.link) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: lxdr (~lxdr@user/lxdr) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: mathu (~matt@user/mathu) (Ping timeout: 256 seconds)
[06:41:05] *** Alan3 is now known as Alan
[06:41:05] *** Goodbye_Vincent1 is now known as Goodbye_Vincent
[06:41:19] *** quesker_ is now known as quesker
[06:41:39] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[06:41:46] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[06:42:03] *** Quits: srg (~srg@user/srg) (Quit: srg)
[06:42:08] *** Joins: a1paca (~a1paca@user/a1paca)
[06:42:13] *** Joins: noyb (~noyb@user/noyb)
[06:42:15] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[06:42:19] *** Joins: nikos (~nikos@nikos.dev)
[06:42:19] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[06:42:32] *** Joins: sale (~sale@ypocit.initech.link)
[06:42:42] *** Joins: mathu (~matt@user/mathu)
[06:42:49] *** Joins: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com)
[06:42:58] *** Joins: klys (~mdasoh@show.op8.us)
[06:43:03] *** Joins: tusko (~yeurt@user/tusko)
[06:43:12] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[06:43:14] *** Joins: potatoe (~potatoe@1g.is)
[06:43:45] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 248 seconds)
[06:44:23] *** dysfigured is now known as dfg
[06:44:32] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[06:44:32] *** Joins: dfg (~dfg@user/dfg)
[06:46:31] *** Joins: mattmcc (~matt@li807-33.members.linode.com)
[06:47:08] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:47:35] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Ping timeout: 240 seconds)
[06:47:58] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[06:48:35] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 260 seconds)
[06:50:52] <gutts> https://dpaste.com/6JFFS8UK6 Why do I get Nonetype object is not callable? is it because I have to whitelist the methods of csv/json modules?
[06:51:08] <gutts> I just want to limit this sandbox code to using just those two modules and 1-2 methods per each
[06:54:22] *** Joins: ST47 (~ST47@wikimedia/st47)
[06:54:30] *** Joins: janemba (~janemba@94.204.254.193)
[06:54:44] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[06:54:47] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[06:55:25] <arkanoid> Tritium: except all the times you run your python code just to find out later on you have a syntax error
[06:55:56] <Tritium> arkanoid: type systems don't solve that.  the python parser catches that just like a c parser would
[06:56:15] <mattf> hi
[06:56:18] <arkanoid> Tritium: thats not true
[06:56:31] <mattf> if my module has a function on it that is called on the modules global scope, it gets called every single time?
[06:56:37] <mattf> i import it
[06:56:54] <SnoopJ> mattf, the module is only executed on the first import
[06:57:11] <Tritium> arkanoid: no, it really is true.  a syntax error is something the parser catches, in both python and c.
[06:57:20] <arkanoid> parser/linter leverages on same logic of compiler itself, generally (when possible), so it would catch those kind of problems
[06:57:36] <mattf> SnoopJ: This is weird because mine is not. it is imported from different files
[06:58:08] <arkanoid> Tritium: if you have a syntax error in a branch of your code that you don't reach, you won't realize. With static check, your program won't compile. It is quite a large difference
[06:58:11] <mattf> and i import different constants from it each time.
[06:58:26] <Repiphany> Syntax errors are checked for before any code is even run
[06:58:29] <SnoopJ> arkanoid, in CPython, the lex/parse phase is complete before the compiler gets involved at all.
[06:58:47] *** Joins: dtux (~dtux@2601:646:8f00:3f2:2253:247b:5763:a586)
[06:59:11] <arkanoid> for each line, not whole program
[06:59:42] <arkanoid> for each statement, I'd say
[06:59:46] <Tritium> Thats not how python works
[06:59:47] <Repiphany> If your code runs at all, there aren't any syntax errors anywhere
[06:59:56] *** Quits: Gustavo6046 (gustavo604@user/gustavo6046) (Read error: Connection reset by peer)
[07:00:28] <Tritium> Repiphany: eh, i can contrive code that wouldn't show a syntax error until later, but its delayed importing
[07:00:49] <Tritium> but you have to work at it to make that happen
[07:00:58] <dtux> is there a canonical ordering for checking whether `maybe_thing == thing`? is it all style?
[07:00:59] <arkanoid> Tritium: if False: prant("foo"). It compiles and runs
[07:01:13] <Tritium> thats not a syntax error
[07:01:13] <Repiphany> That's not a syntax error
[07:01:26] *** Joins: adeliktas6 (~adeliktas@i59F5F534.versanet.de)
[07:01:27] <Tritium> thats a name error
[07:02:16] <Repiphany> Well not even an error because it's a branch that will never be reached
[07:02:26] <Repiphany> Still not an error in syntax anywhere
[07:02:34] <Tritium> Its not an error in the syntax
[07:02:40] <Tritium> prant is an entirely valid name
[07:02:51] <Tritium> and the compiler might omit that branch in the code anyways
[07:03:03] *** Quits: adeliktas (~adeliktas@i59F5F92F.versanet.de) (Ping timeout: 260 seconds)
[07:03:03] *** adeliktas6 is now known as adeliktas
[07:03:55] <arkanoid> apart from dead branch, those are details that a static compilation would complain about
[07:04:04] <Tritium> `if False:` is a really cheap and easy optimization to skip
[07:05:37] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Ping timeout: 248 seconds)
[07:05:44] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:06:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:06:25] <Tritium> Yes, c would catch that typo....when linking.
[07:06:40] <Tritium> it would parse just fine, and pass type checking
[07:06:51] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[07:06:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:06:56] *** Quits: thevar1able (~textual@89-250-187-98.tangos.nl) (Quit: thevar1able)
[07:07:09] *** Joins: hexadecagram (~acc@50.39.129.68)
[07:07:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Max SendQ exceeded)
[07:07:12] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[07:07:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:08:25] <Tritium> type checking is not the be all end all of code quality.  We have had statically typed languages LONG before dynamically typed ones, and I assure you, you can make doozies of bugs in statically typed languages that you cant in something like python
[07:08:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:09:07] *** Joins: Gustavo6046 (gustavo604@user/gustavo6046)
[07:09:45] *** Joins: BlaDe^ (~BlaDe^@45-31-183-171.lightspeed.austtx.sbcglobal.net)
[07:10:50] <Tritium> char var = 255; var++
[07:10:52] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:11:12] <BlaDe^> hi, has anyone seen gunicorn error out with "io.UnsupportedOperation: File or stream is not seekable." when passing --log-file=/dev/stdout ? I tested writing to /dev/stdout via the repl as the same user and it worked fine
[07:11:15] <The-Compiler> arkanoid: you are aware that Python supports type annotations and type checkers for those exist?
[07:12:03] <Tritium> BlaDe^: i've not seen that, but it looks like gunicorn is expecting a real file
[07:12:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[07:14:00] <BlaDe^> Tritium: hmm, but I tried to copy the code from: https://github.com/benoitc/gunicorn/blob/60d0474a6f5604597180f435a6a03b016783885b/gunicorn/glogging.py#L207
[07:14:17] <BlaDe^> for me >>> open('/dev/stdout', 'a+') yields <open file '/dev/stdout', mode 'a+' at 0x7f2c278f9b70>
[07:14:23] *** Joins: hexenbane9 (~hexenbane@fixed-187-190-198-187.totalplay.net)
[07:14:57] <BlaDe^> and that is the line from the stacktrace: File "/app/pyenv/versions/3.9.9/lib/python3.9/site-packages/gunicorn/glogging.py", line 207, in setup
[07:15:35] <gutts> j/window 6
[07:15:58] *** Quits: M4rt1n (~Username@dyn-pppoe-142-51-250-147.vianet.ca) (Ping timeout: 260 seconds)
[07:16:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 248 seconds)
[07:16:54] *** Quits: hexadecagram (~acc@50.39.129.68) (Quit: leaving)
[07:17:52] <Tritium> BlaDe^: i have to ask why you are doing /dev/stdout when stdout is what it looks like its defaulting to?
[07:18:17] *** Joins: hexadecagram (acc@2604:a880:1:20::277a:8001)
[07:18:27] <BlaDe^> I am not seeing any logs come via stdout with the defaults so I tried forcing it
[07:18:38] <BlaDe^> I see logs from startup/the master process... but nothing from requests running in the gunicorn workers
[07:19:38] <BlaDe^> if I run via uvicorn I _do_ see all of my logs, but switching to gunicorn -k uvicorn.workers.UvicornWorker --workers=2 --capture-output I'm losing 'em
[07:19:40] <Tritium> Did...you configure request logging?  this is an error log...which is for errors
[07:20:13] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Ping timeout: 240 seconds)
[07:20:17] <BlaDe^> yes, my root logger goes to logging.StreamHandler(sys.stdout)
[07:20:18] <Tritium> the way to explicitly request stdout is to use -
[07:20:42] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 268 seconds)
[07:20:45] <BlaDe^> tried that also.. again, I see everything via uvicorn, and only startup logs via gunicorn.. so I think it's safe to rule out the code
[07:20:47] *** Joins: millido (~millido@84.210.150.128)
[07:21:18] *** Joins: Barones (~Barones@user/Barones)
[07:21:58] <BlaDe^> btw weirdly I got the /dev/stdout idea from https://githubhot.com/repo/benoitc/gunicorn/issues/2647
[07:22:23] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[07:22:47] <Tritium> Whats the full traceback on the unseekable error?  bpa.st that if you could
[07:23:07] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[07:23:42] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[07:25:37] <BlaDe^> Tritium: apologies it's poorly indented/backwards... I'm actively trying to make the logs better https://bpa.st/BZIQ
[07:26:43] <Tritium> that looks...backwards
[07:28:48] <Tritium> I don't see where the problem is coming from
[07:30:17] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:42] <BlaDe^> aye, it is.. that's just how multiline logs appear in my log viewer right now... after I can get everything to stdout properly, I'll format as json and fix that but.. baby steps
[07:32:47] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:54] *** Joins: fluiD (~fluiD@161.97.224.135)
[07:33:10] <BlaDe^> i'm finding lots of github issues, and some pr's, referencing how hard this stack is to log with properly https://github.com/br3ndonland/inboard/pull/3 -- but I have yet to find a solution that seems to work for me
[07:34:53] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[07:34:56] <fluiD> I have this program running in a bash loop with no arguments given. https://bpa.st/6JYQ  About 1 out of every 20 times it throws an exception about an invalid index. Why is that not caught by the Try ?
[07:35:03] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[07:35:10] *** Joins: Guest3753 (~Guest37@075-134-025-174.res.spectrum.com)
[07:35:19] *** Quits: jero98772_ (~jero98772@2800:484:1d80:d8ce:f381:29ec:66c0:45c1) (Remote host closed the connection)
[07:35:28] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:35:55] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[07:37:45] <NoImNotNineVolt> can't reproduce.
[07:37:50] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:38:12] <ztrawhcse> fluiD: this isn't a complete example... the text of the exception would also list a line number and content which could point to some other line, so I can only assume you verified that already and it comes from the paste you provided
[07:38:26] <ztrawhcse> so with all that in mind I cannot fathom why it would fail
[07:39:10] <fluiD> oh wait, I see what's going on. "During the handling of the above exception" so something else failed in the program but it reports the first failure (which was expected)
[07:39:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[07:39:21] <ztrawhcse> ah yes, that can do it ;)
[07:39:37] <ztrawhcse> the other exception presumably comes from somewhere inside main()
[07:39:44] <fluiD> yup yup
[07:40:09] <fluiD> I guess I should just be less cute
[07:40:09] <ztrawhcse> it might be less confusing to get variables here
[07:40:11] <ztrawhcse> try:
[07:40:25] <ztrawhcse>     arg1, arg2 = int(sys.argv[1]), float(sys.argv[2])
[07:40:29] <ztrawhcse> except:
[07:40:41] <ztrawhcse>     arg1, arg2 = 15*1000, 0
[07:40:56] <ztrawhcse> main(arg1, arg2)
[07:41:46] <ztrawhcse> ^^ the general idea here being to *reduce* the scope covered by try/except, since you generally don't want to catch too many errors
[07:42:06] <ztrawhcse> if main() fails for some bizarre reason other than sys.argv length issues...
[07:42:15] <fluiD> <nod> ok thanks!
[07:42:29] <ztrawhcse> ... then you'd generally end up trying again even though you passed initial values
[07:42:40] <ztrawhcse> which you probably do not want
[07:44:22] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:44:35] *** Quits: drjp (jeanpaul@112-54-174-82.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[07:46:10] *** Joins: drjp (~drjp@112-54-174-82.ftth.glasoperator.nl)
[07:46:43] *** Quits: bboles (~bboles@64.94.212.195) (Quit: ZNC 1.8.2 - https://znc.in)
[07:47:02] *** Joins: bboles (~bboles@64.94.212.195)
[07:48:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 248 seconds)
[07:49:33] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[07:49:53] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[07:51:01] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[07:53:12] <gutts> Does anyone know what sort of solutions hackerrank/etc use to run python code in a sandbox? Jupyter is an entirely custom interface that doesn't seem to serve the needs that I have, RestrictedPython seems to not allow you to call other functions within the specified user-code, exploring other options for sandboxing
[07:54:02] <ztrawhcse> arkanoid, Tritium: `if False: prant("foo")` isn't even a name error or a syntax error, it's completely valid python code that assumes another module did `builtins.__dict__['prant'] = print`
[07:54:05] <ztrawhcse> :D
[07:54:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:55:00] <ztrawhcse> (also: best way to have code that doesn't show a syntax error until later is probably abuse of eval)
[07:55:13] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 248 seconds)
[07:55:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:55:56] <ztrawhcse> gutts: probably the best sandboxing approach is to run a very lightweight VM that spins up python, runs code, and exits
[07:56:05] <ztrawhcse> this is e.g. how shbot in #bash works
[07:56:49] <gutts> oh, interesting
[07:57:58] *** Quits: sreve_ (~quassel@p549d73f7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:58:09] *** Joins: sreve (~quassel@p4ff44df3.dip0.t-ipconnect.de)
[07:59:52] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.6-dev)
[08:00:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 248 seconds)
[08:02:06] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[08:02:46] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef) (Quit: Leaving)
[08:02:52] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[08:03:00] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Quit: Leaving)
[08:03:13] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 248 seconds)
[08:06:10] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:06:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[08:07:16] *** Quits: fluiD (~fluiD@161.97.224.135) (Quit: Leaving)
[08:08:18] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef)
[08:08:23] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[08:08:37] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Read error: Connection reset by peer)
[08:08:52] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:09:15] *** Joins: fstd_ (~fstd@xdsl-87-78-201-176.nc.de)
[08:10:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[08:12:12] *** Quits: fstd (~fstd@xdsl-89-0-80-77.nc.de) (Ping timeout: 240 seconds)
[08:15:14] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 246 seconds)
[08:16:42] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:16:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:19:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:20:58] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[08:21:53] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[08:23:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[08:23:59] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[08:26:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[08:27:04] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[08:29:18] *** Quits: subopt (~subopt@2603-8081-2302-459a-f4a5-e2ac-65b2-6880.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:30:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[08:35:08] *** Joins: Viewday1151 (~Viewday@user/viewday)
[08:36:26] *** Joins: agireud (~agireud@user/agireud)
[08:37:17] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[08:37:17] *** Viewday1151 is now known as Viewday115
[08:37:49] *** Quits: jamie9898 (~jamie9898@173.199.70.206) (Ping timeout: 256 seconds)
[08:38:23] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 256 seconds)
[08:38:23] *** Quits: dave2F (~dave@78-56-248-37.static.zebra.lt) (Ping timeout: 256 seconds)
[08:38:29] *** Joins: dave2F_ (~dave@78-56-248-37.static.zebra.lt)
[08:38:56] *** Joins: EGH (~EGH@185.25.195.104)
[08:38:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: wallsY (~weechat@user/wallsY) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: sabx (~sabbas@user/sabbas) (Ping timeout: 256 seconds)
[08:38:57] *** Quits: overrider_ (~overrider@user/overrider) (Ping timeout: 256 seconds)
[08:39:31] *** Quits: grnman_ (~grnman@159.89.27.73) (Ping timeout: 256 seconds)
[08:40:15] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[08:40:36] *** Joins: sabx (~sabbas@user/sabbas)
[08:40:36] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:40:37] *** Joins: wallsY (~weechat@user/wallsY)
[08:40:42] *** Joins: overrider_ (~overrider@user/overrider)
[08:41:15] *** Joins: grnman (~grnman@159.89.27.73)
[08:41:52] *** Joins: mcglk (~mcglk@131.191.49.120)
[08:43:30] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:44:17] *** Joins: bahamas (~lucian@84.232.140.158)
[08:44:51] *** Joins: jamie9898 (~jamie9898@173.199.70.206)
[08:45:15] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[08:46:06] *** Quits: jargon (~jargon@174-22-223-120.phnx.qwest.net) (Remote host closed the connection)
[08:46:19] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:48:03] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:49:27] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:50:57] *** Joins: javaaaaaaaaaa (~fourroot@122.161.51.129)
[08:51:26] *** Quits: Gustavo6046 (gustavo604@user/gustavo6046) (Quit: Goodbye! Leave messages at my XMPP @ gustavo6046@anonym.im or my Discord Gustavo6046#9009 or possibly my Mastodon gustavo6046@fosstodon.org – I don't check my email often since it's full of crap, but in any case, rehermann6046@gmail.com)
[08:51:39] *** Joins: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b)
[08:51:54] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[08:53:46] *** BillyZane2 is now known as BillyZane
[08:56:01] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 248 seconds)
[08:56:18] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 260 seconds)
[08:56:40] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:a9fa:1df4:82cf:eacd)
[08:58:45] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 268 seconds)
[09:00:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[09:02:36] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[09:03:44] *** Quits: dtux (~dtux@2601:646:8f00:3f2:2253:247b:5763:a586) (Quit: dtux)
[09:06:39] *** Joins: cuanim (~cuanim@94.59.99.185)
[09:06:39] *** Quits: cuanim (~cuanim@94.59.99.185) (Changing host)
[09:06:39] *** Joins: cuanim (~cuanim@user/cuanim)
[09:07:00] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[09:07:25] *** Joins: fling (~fling@user/fling)
[09:08:47] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 246 seconds)
[09:09:33] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[09:11:40] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[09:11:42] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[09:11:42] *** Joins: jackblasted (~quassel@173.239.197.3)
[09:11:47] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:13:13] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[09:14:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:14:50] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[09:15:05] *** Joins: noarb (~noarb@user/noarb)
[09:16:51] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[09:17:13] <javaaaaaaaaaa> hi
[09:17:53] *** Joins: Timrit (~scott@047-012-066-084.res.spectrum.com)
[09:19:27] *** Joins: debouncer (~pi@88.237.6.52)
[09:19:28] *** Joins: r3m_ (~launch@user/r3m)
[09:20:05] *** Quits: loofy (~loofy@user/loofy) (Ping timeout: 256 seconds)
[09:20:36] <TML> javaaaaaaaaaa: Wow, easy there, Trigger.
[09:20:57] <TML> no need to come on so strong right out the gate
[09:21:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:21:44] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Ping timeout: 246 seconds)
[09:21:49] *** Quits: Timrit (~scott@047-012-066-084.res.spectrum.com) (Changing host)
[09:21:49] *** Joins: Timrit (~scott@user/Timrit)
[09:24:08] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:26:12] *** Joins: dvx (~dvx@5.181.92.64)
[09:26:59] *** Quits: hexenbane9 (~hexenbane@fixed-187-190-198-187.totalplay.net) (Quit: The Lounge - https://thelounge.chat)
[09:28:11] *** Quits: l4yer (~l4yer@user/l4yer) (Ping timeout: 260 seconds)
[09:28:49] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:29:51] *** Joins: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net)
[09:32:03] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377) (Ping timeout: 268 seconds)
[09:32:25] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:33:18] *** r3m_ is now known as r3m
[09:33:48] *** gentooclimax is now known as climax
[09:34:05] *** Joins: Ashburry (ashburry@S0106bc3e07831b53.vs.shawcable.net)
[09:35:07] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:35:21] <Ashburry> Anyone know how to use trio.SSLStream() ?
[09:35:22] <Ashburry> https://bpa.st/7HSQ
[09:35:35] <Ashburry> works for non-ssl sockets but ssl it fails
[09:38:11] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 246 seconds)
[09:38:16] <Ashburry> I think its because the sslstream is attempting to connect to an server, where it instead is connecting to an client which is sending the same ssl data as its receiving
[09:38:24] <Ashburry> just a thought...
[09:39:12] *** climax is now known as gentooclimax
[09:40:59] *** Quits: canurabus (~canurabus@ip-24-156-182-149.user.start.ca) (Quit: Leaving)
[09:41:50] *** Joins: l4yer (~l4yer@user/l4yer)
[09:42:10] *** Joins: Dotz0cat_ (~Dotz0cat@71.29.71.39)
[09:43:20] *** Quits: Dotz0cat (~Dotz0cat@75.90.45.146) (Ping timeout: 272 seconds)
[09:43:21] *** Dotz0cat_ is now known as Dotz0cat
[09:43:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:44:01] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:45:46] *** Quits: BlaDe^ (~BlaDe^@45-31-183-171.lightspeed.austtx.sbcglobal.net) (Quit: Client closed)
[09:45:48] *** Quits: zebrag (~chris@user/zebrag) (Read error: Connection reset by peer)
[09:46:01] *** Quits: MercilessDeth (~brad@136.49.59.177) (Remote host closed the connection)
[09:46:28] *** Joins: MercilessDeth (~brad@136.49.59.177)
[09:46:47] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[09:47:15] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[09:47:24] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[09:47:38] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[09:47:59] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:48:06] *** Joins: Jacques88 (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[09:48:15] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 260 seconds)
[09:48:39] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[09:48:52] <lpapp> hi, is there something as common as clang.format in the python world?
[09:48:55] *** Quits: jbox (~jbox@user/jbox) (Read error: Connection reset by peer)
[09:50:01] *** Quits: AlanMD (~AlanMD@86.124.29.88) (Quit: ZZZzzz…)
[09:50:26] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 246 seconds)
[09:52:53] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[09:53:05] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 248 seconds)
[09:53:28] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[09:53:48] *** Quits: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:54:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:55:09] <TML> lpapp: What is clang.format?
[09:55:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[09:56:00] <TML> I'm familiar with clang-format and the underlying ClangFormat, but never heard of clang.format
[09:56:07] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[09:56:17] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:59:04] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[09:59:42] <jinsun> if you mean something that auto-formats your code, then black is the tool for python https://github.com/psf/black
[10:00:19] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:02:05] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[10:02:49] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[10:03:39] *** Quits: data68 (~data@2a02:908:a67:2ce0::5ffa) (Quit: WeeChat 1.4)
[10:03:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:05:57] *** Joins: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d)
[10:06:17] *** Joins: manti7 (~manti7@176.10.104.94)
[10:07:22] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[10:07:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:08:15] *** Quits: lack (~lack@user/lack) (Ping timeout: 256 seconds)
[10:10:55] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[10:11:05] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[10:11:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:11:45] *** Quits: debouncer (~pi@88.237.6.52) (Ping timeout: 248 seconds)
[10:12:58] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[10:13:17] *** Joins: fling (~fling@user/fling)
[10:13:27] *** Quits: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[10:14:36] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:15:16] *** Joins: lack (~lack@user/lack)
[10:16:16] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:16:32] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[10:17:04] *** Quits: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) (Ping timeout: 268 seconds)
[10:18:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:19:49] *** Joins: n0n4m399 (~n0n4m399@122.169.189.187)
[10:19:51] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[10:20:14] *** Quits: n0n4m399 (~n0n4m399@122.169.189.187) (Client Quit)
[10:20:15] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[10:21:07] <lpapp> TML: clang format is a code formatter tool for C++
[10:21:20] <lpapp> Please refer to https://clang.llvm.org/docs/ClangFormat.html
[10:21:35] <TML> lpapp: Ah - yes, I was just confused because you called it clang.format
[10:21:45] *** Quits: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:22:00] <TML> lpapp: in that case, I think most people look to https://github.com/psf/black
[10:22:27] <lpapp> is it better than autopep8?
[10:22:31] <lpapp> Which seems to be pep
[10:22:40] <TML> I've never used autopep8
[10:22:49] *** Joins: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60)
[10:23:00] <TML> but black seems to work pretty well at upsetting everyone in some particular
[10:23:01] <lpapp> and for linting, which one do you prefer?
[10:23:01] <lpapp> flake?
[10:23:40] *** Joins: pepper (~pepper@user/pepper)
[10:24:01] <muraii> TML: So it's "opinionated", which is shorthand for, "Well, someone probably doesn't like this. Cool!" (I mostly really appreciate black's defaults.)
[10:24:15] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[10:24:24] <TML> muraii: Right, that's the same point I was making
[10:24:36] <lpapp> python is opiniated anyway
[10:24:40] <muraii> I was just glomming on. I have no original content.
[10:24:54] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-180.poda.cz)
[10:24:58] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-180.poda.cz) (Remote host closed the connection)
[10:25:01] *** Joins: grooverman_ (~grooverma@179.97.162.238)
[10:25:26] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 246 seconds)
[10:26:13] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-180.poda.cz)
[10:26:31] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:26:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:27:22] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[10:28:14] *** Quits: grooverman (~grooverma@179.97.175.157) (Ping timeout: 246 seconds)
[10:29:03] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 260 seconds)
[10:32:13] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:35:41] *** Quits: Coinflipper (~Coinflipp@user/Coinflipper) (Ping timeout: 256 seconds)
[10:35:41] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Ping timeout: 256 seconds)
[10:36:00] *** Joins: Coinflipper (~Coinflipp@user/Coinflipper)
[10:36:15] *** Quits: markw_dev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 256 seconds)
[10:36:15] *** Quits: t2mkn (~t2mkn@user/t2mkn) (Ping timeout: 256 seconds)
[10:36:17] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[10:36:30] *** Joins: hrm (~hrm@95.217.235.139)
[10:36:34] *** Joins: Frodo1337 (~Ninja3047@3047.ninja)
[10:37:14] *** Quits: mkoskar (~mkoskar@user/mkoskar) (Quit: mkoskar)
[10:37:22] *** Joins: xythercoder (~xythecode@157.41.132.8)
[10:37:23] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Ping timeout: 256 seconds)
[10:37:23] *** Frodo1337 is now known as Ninja3047
[10:37:33] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[10:37:41] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[10:38:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:39:24] <gitesh> hey, `EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'` this didn't output the email to the console?
[10:39:36] <gitesh> it didn't do it
[10:41:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 248 seconds)
[10:42:18] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[10:42:48] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[10:46:17] *** Quits: bilb_ono (~user@ip68-6-93-202.sb.sd.cox.net) (Quit: ERC (IRC client for Emacs 27.2))
[10:47:17] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[10:47:46] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[10:48:04] *** Quits: Jacques88 (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 250 seconds)
[10:50:42] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Read error: Connection reset by peer)
[10:50:56] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[10:51:00] *** Quits: jackblasted (~quassel@173.239.197.3) (Ping timeout: 240 seconds)
[10:51:02] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[10:51:13] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[10:52:11] <Ashburry> https://github.com/ashburry-chat-irc/trio-ircproxy/blob/main/trio-ircproxy.py#L362
[10:52:26] <Ashburry> Anyone able to help with line 362 why does this not work?
[10:52:39] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[10:53:05] *** Joins: mrwick (~mrwick@user/mrwick)
[10:53:07] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:53:29] *** Joins: mexen (uid495612@user/mexen)
[10:53:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:54:19] <Ashburry> https://github.com/ashburry-chat-irc/trio-ircproxy/blob/main/trio-ircproxy.py#L362
[10:54:22] <Ashburry> Anyone able to help with line 362 why does this not work?
[10:54:54] *** Joins: shad (~shad@user/shad)
[10:55:32] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[10:55:42] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[10:55:48] *** Joins: tarel2 (~tarel2@139.28.216.245)
[10:56:02] *** Joins: flea_ (~nosoul@196.245.151.210)
[10:56:44] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[10:57:45] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[10:57:56] *** Joins: parv (~quass@user/parv)
[10:58:06] <Ashburry> I can use the same code to connect to ssl servers with an non-ssl client but cannot connect ssl-clients
[10:58:28] <Ashburry> https://github.com/ashburry-chat-irc/trio-ircproxy/blob/main/trio-ircproxy.py#L362
[10:58:32] *** Joins: bahamas (~lucian@84.232.140.158)
[10:58:33] *** Joins: cuhela (~cuhela@188.119.45.227)
[10:58:34] <Ashburry> need help
[10:59:17] *** Joins: nickodd (~nickodd@user/nickodd)
[11:00:15] *** Joins: saroy (~Sandipan@103.24.86.185)
[11:01:31] *** Quits: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60) (Ping timeout: 260 seconds)
[11:02:21] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[11:02:42] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[11:03:15] *** Joins: luigibu (~luigi@93.176.151.71)
[11:03:28] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[11:03:29] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304)
[11:03:32] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[11:04:43] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[11:05:39] *** Joins: palasso (~palasso@user/palasso)
[11:06:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[11:07:00] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[11:07:36] <Batzy> im trying to run a flask app and i get: cannot import name 'JSONWebSignatureSerializer' from 'itsdangerous'
[11:07:48] *** Joins: khach1 (~khach1@157.90.196.52)
[11:08:49] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[11:11:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:12:40] <jinsun> Batzy: looks like it was removed in version 2.0.0 of itsdangerous https://github.com/pallets/itsdangerous/blob/main/CHANGES.rst#version-200
[11:12:41] <a1eaiactaest> what version of itsdengerous do you have?
[11:12:41] *** Joins: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net)
[11:12:59] *** Joins: moose (~moose@user/moose)
[11:13:04] <a1eaiactaest> jinsun: that should be it
[11:13:26] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[11:13:30] *** Joins: Blankspace (~Blankspac@user/blankspace)
[11:13:42] <Ashburry> https://github.com/ashburry-chat-irc/trio-ircproxy/blob/main/trio-ircproxy.py#L362
[11:13:53] <Ashburry> anyone able to tell me why line 362 does not work?
[11:14:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:14:20] <jinsun> Batzy: https://github.com/pallets/itsdangerous/issues/129 mentions some alternatives (pyjwt or authlib or python-jose)
[11:14:23] *** Joins: kosh (~kosh@user/kosh)
[11:14:35] *** Quits: emerent (~quassel@p200300cd5743c3caba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:14:36] *** Joins: emerent_ (~quassel@p200300cd5743c37eba27ebfffed28a59.dip0.t-ipconnect.de)
[11:14:36] *** emerent_ is now known as emerent
[11:14:57] <jinsun> or you could just downgrade itsdangerous, but they won't support its usage
[11:15:31] *** Joins: shuck (~shuck@user/shuck)
[11:15:34] *** Quits: khach1 (~khach1@157.90.196.52) (Remote host closed the connection)
[11:15:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[11:17:14] *** Joins: upsala (~zcb@185.209.196.132)
[11:17:26] *** Joins: fling (~fling@user/fling)
[11:17:40] *** Joins: maxzor (~maxzor@2a01cb04054faa00039336efa77b9bc7.ipv6.abo.wanadoo.fr)
[11:17:45] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[11:18:04] *** Guest4987 is now known as az
[11:18:06] *** Joins: tobybl (~tobybl@132.202.200.146.dyn.plus.net)
[11:18:20] *** Quits: az (az@stable.bnc.by.bnc4you.xyz) (Changing host)
[11:18:20] *** Joins: az (az@user/azz)
[11:18:39] <Batzy> jinsun: im trying to use flask-oidc
[11:18:40] <Batzy> so
[11:19:58] *** Quits: xythercoder (~xythecode@157.41.132.8) (Ping timeout: 268 seconds)
[11:20:01] *** Quits: raym (~raym@user/raym) (Ping timeout: 248 seconds)
[11:20:11] *** Joins: xythercoder (~xythecode@157.41.44.34)
[11:20:14] <jinsun> there is a PR to fix it in flask-oidc https://github.com/puiterwijk/flask-oidc/pull/141
[11:20:43] <jinsun> but it seems the project is abandoned, no new commits since 2019, so you should look for alternatives to that too
[11:20:44] *** Quits: cuhela (~cuhela@188.119.45.227) (Quit: Leaving)
[11:21:00] *** Joins: raym (~raym@user/raym)
[11:21:05] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 248 seconds)
[11:21:10] <jinsun> maybe https://github.com/verdan/flaskoidc
[11:21:54] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[11:22:09] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[11:22:11] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:22:45] *** Joins: bluesmonk (~diego@44.red-80-28-117.staticip.rima-tde.net)
[11:23:06] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:23:08] *** Joins: mixfix41 (~sdenynine@user/mixfix41)
[11:23:56] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[11:23:56] *** Joins: leibniz (~trev@ircx.us)
[11:24:25] *** Joins: cosmos1 (cosmos@user/cosmos1)
[11:24:35] *** Quits: xythercoder (~xythecode@157.41.44.34) (Ping timeout: 246 seconds)
[11:24:58] <gitesh> Any answer on what did I ask?
[11:25:08] *** Joins: jmd (~user@de.cellform.com)
[11:25:19] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:25:55] *** Joins: xythercoder (~xythecode@157.41.77.33)
[11:26:07] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[11:27:38] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[11:30:11] *** Quits: xythercoder (~xythecode@157.41.77.33) (Ping timeout: 246 seconds)
[11:30:30] *** Joins: xythercoder (~xythecode@157.41.131.48)
[11:30:47] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[11:30:50] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[11:31:07] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:22] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 240 seconds)
[11:31:28] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:35] *** Joins: cosmos1_ (cosmos@user/cosmos1)
[11:32:40] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[11:33:05] *** Joins: khach2 (~khach2@157.90.196.52)
[11:33:48] *** Quits: remote (~self@user/hackers) (Ping timeout: 260 seconds)
[11:34:15] *** Joins: ivii (~ivan@user/ivii)
[11:34:42] <gitesh> Nvm
[11:34:44] *** Joins: yetoo (~yetoo@user/yetoo)
[11:35:05] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[11:35:31] *** Joins: remote (~self@user/hackers)
[11:35:33] *** Quits: cosmos1 (cosmos@user/cosmos1) (Ping timeout: 260 seconds)
[11:35:50] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[11:36:31] *** Joins: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:108b:5c99:3648:2915)
[11:36:59] *** Joins: debouncer (~pi@88.237.6.52)
[11:37:26] *** Joins: lbracher (~Lucas@212.71.17.2.res.static.edpnet.net)
[11:38:19] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[11:38:59] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:39:29] <yetoo> So I have var=class.function(param) function(var). When I do dir(var) before function, all the attributes I want are listed. When I do dir(var) in the function (since it has been passed as a parameter) I don't have those attributes. Is this because the variable that I'm calling dir on in the function is completely different and if so, how would I pass the original variable so that all the attributes would be saved?
[11:40:39] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:41:47] <yetoo> actually var=class(param) not var=class.function(param)
[11:41:52] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:42:14] <Repiphany> yetoo: Can you post code showing what you mean
[11:42:44] <Repiphany> If you pass instances of a class to a function, the attributes of that instance should still be accessible from the function scope
[11:42:52] *** Parts: leibniz (~trev@ircx.us) (WeeChat 3.5-dev)
[11:43:42] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[11:44:57] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[11:45:21] *** Joins: BrainchildHo[m] (~brainchil@2001:470:69fc:105::1:f030)
[11:45:28] *** Quits: khach2 (~khach2@157.90.196.52) (Remote host closed the connection)
[11:45:42] *** Joins: cosmos1 (cosmos@user/cosmos1)
[11:46:57] *** Joins: iomari891 (~iomari891@102.91.5.67)
[11:48:02] <Ashburry> yetoo, you must be calling dir(var) on two different variables
[11:48:07] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[11:48:48] *** Joins: webster (~webster@2604:3d08:5f7b:7000:2188:fb8a:2e00:1094)
[11:48:58] *** Quits: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba) (Ping timeout: 260 seconds)
[11:49:19] *** Quits: Ashburry (ashburry@S0106bc3e07831b53.vs.shawcable.net) (Remote host closed the connection)
[11:49:21] *** Quits: cosmos1_ (cosmos@user/cosmos1) (Ping timeout: 248 seconds)
[11:49:28] *** Quits: webster (~webster@2604:3d08:5f7b:7000:2188:fb8a:2e00:1094) (Client Quit)
[11:49:36] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[11:49:45] *** Joins: chenqisu1 (~chenqisu1@183.217.202.44)
[11:50:29] *** Quits: parv (~quass@user/parv) (Ping timeout: 246 seconds)
[11:50:29] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 246 seconds)
[11:50:35] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[11:51:04] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[11:51:26] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[11:51:45] *** Joins: runelind (~runelind@user/runelind)
[11:53:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:54:18] <yetoo> Ashburry: that would be right
[11:55:27] *** Joins: tobybl_ (~tobybl@132.202.200.146.dyn.plus.net)
[11:56:14] *** Joins: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se)
[11:56:26] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 246 seconds)
[11:57:21] *** Quits: tobybl (~tobybl@132.202.200.146.dyn.plus.net) (Ping timeout: 248 seconds)
[11:57:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 240 seconds)
[11:57:32] *** Joins: Telvana2 (~capo@user/telvana)
[11:57:43] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 260 seconds)
[11:57:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[11:58:21] *** Quits: bboles (~bboles@64.94.212.195) (Quit: ZNC 1.8.2 - https://znc.in)
[11:58:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl)
[11:59:20] *** Joins: bboles (~bboles@64.94.212.195)
[12:00:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:03:13] <hans> i want to create byte strings with uint8 / uint16le (uint16 little endian) / uint16be (uint16 big endian) / uint32le / uint32be etc,  something like   binary= binary_generator->addU8(123)->addU16be(len(str))->add(str)->str()   , know if someone already made something like that?
[12:03:19] *** Joins: bahamas (~lucian@84.232.140.158)
[12:04:13] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:06:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[12:06:37] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:07:49] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[12:08:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8) (Ping timeout: 260 seconds)
[12:08:48] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[12:11:48] *** Quits: cosmos1 (cosmos@user/cosmos1) (Ping timeout: 240 seconds)
[12:11:49] *** Quits: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 240 seconds)
[12:12:35] *** Quits: confluence_ (~quassel@2a01:4f8:c17:3ca::2) (Quit: No Ping reply in 180 seconds.)
[12:12:55] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:13:35] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Ping timeout: 246 seconds)
[12:15:10] *** Joins: darksun (~darksun@user/darksun)
[12:15:10] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[12:15:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:15:58] *** Joins: cosmos1 (cosmos@user/cosmos1)
[12:16:24] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[12:16:34] *** Joins: confluence_ (~quassel@2a01:4f8:c17:3ca::2)
[12:17:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.5)
[12:18:14] *** Quits: lbracher (~Lucas@212.71.17.2.res.static.edpnet.net) (Read error: Connection reset by peer)
[12:19:10] *** Quits: vanessa (~farawayas@103.160.128.7) (Ping timeout: 268 seconds)
[12:19:13] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[12:19:14] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[12:19:26] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:19:32] *** Joins: fling (~fling@user/fling)
[12:19:32] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[12:20:02] *** Joins: cosmos1_ (cosmos@user/cosmos1)
[12:20:24] *** Joins: epony (epony@user/epony)
[12:20:46] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:21:35] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[12:21:56] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:22:52] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:23:07] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[12:23:35] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:23:40] <Yhg1s> hans: it sounds like you're trying to describe the stdlib struct module, although it doesn't have the API you're asking for. I don't know of anything that is exactly what you want, but there are a few alternatives to the struct module on PyPI.
[12:24:45] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[12:25:44] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[12:27:56] *** Quits: debouncer (~pi@88.237.6.52) (Ping timeout: 246 seconds)
[12:29:22] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[12:31:33] *** Joins: weedmic (~weedmic@77.124.87.58)
[12:31:35] *** Joins: grooverman (~grooverma@179.97.162.238)
[12:31:37] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:33:15] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[12:34:35] *** Quits: grooverman_ (~grooverma@179.97.162.238) (Ping timeout: 268 seconds)
[12:35:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:35:12] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 268 seconds)
[12:35:15] *** Quits: Timvde (~tim@towely.vdeynde.com) (Ping timeout: 256 seconds)
[12:35:45] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[12:35:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:36:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:36:10] *** Parts: cosmos1_ (cosmos@user/cosmos1) ()
[12:36:13] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:36:35] *** Quits: xythercoder (~xythecode@157.41.131.48) (Quit: Konversation terminated!)
[12:36:35] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[12:38:07] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[12:38:46] *** Quits: cosmos1 (cosmos@user/cosmos1) (Quit: Reconnecting)
[12:39:00] *** Joins: cosmos1 (cosmos@user/cosmos1)
[12:39:03] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[12:39:36] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[12:39:39] *** Joins: data68 (~data@2a02:908:a67:2ce0:9941:5f11:bd7d:f492)
[12:40:34] *** Quits: moto (~moto@user/moto) (Ping timeout: 260 seconds)
[12:40:39] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[12:40:59] *** Joins: parv (~quass@user/parv)
[12:41:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:41:08] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[12:41:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:41:23] *** Quits: parv (~quass@user/parv) (Client Quit)
[12:41:40] *** Joins: wyclif (~wyclif@user/wyclif)
[12:41:57] *** dcaro_away is now known as dcaro
[12:42:00] *** Joins: bahamas (~lucian@86.120.77.115)
[12:42:21] *** Quits: maxzor (~maxzor@2a01cb04054faa00039336efa77b9bc7.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[12:43:16] *** Joins: parv (~quass@user/parv)
[12:43:23] *** Joins: maxzor (~maxzor@2a01cb04054faa00a75904040f18d50a.ipv6.abo.wanadoo.fr)
[12:43:50] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[12:43:57] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:44:26] *** Joins: ^vanessa^ (~farawayas@103.160.128.7)
[12:45:38] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[12:46:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:46:38] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (Ping timeout: 260 seconds)
[12:47:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:47:32] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Ping timeout: 268 seconds)
[12:47:49] *** Joins: Timvde (~tim@towely.vdeynde.com)
[12:48:00] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[12:48:38] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[12:49:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[12:50:06] *** Joins: Psybur (~Psybur@c-76-123-45-25.hsd1.va.comcast.net)
[12:50:37] *** Quits: ^vanessa^ (~farawayas@103.160.128.7) (Ping timeout: 268 seconds)
[12:52:04] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Client Quit)
[12:52:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[12:52:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:52:46] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[12:52:53] *** Joins: wyclif (~wyclif@user/wyclif)
[12:53:24] *** Joins: ubert1 (~Thunderbi@p200300ecdf1588eb09611d41de6fd446.dip0.t-ipconnect.de)
[12:53:34] *** Parts: cosmos1 (cosmos@user/cosmos1) ()
[12:55:44] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[12:55:45] <hans>  "bytes" is immutable so i cann't append to it, have to create a brand new "bytes" every time i want to append to it, right?
[12:56:06] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[12:58:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:58:11] *** Quits: iomari891 (~iomari891@102.91.5.67) (Ping timeout: 260 seconds)
[12:58:14] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Remote host closed the connection)
[12:58:28] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[12:58:29] *** Joins: wyclif (~wyclif@user/wyclif)
[12:59:11] *** Joins: moto (~moto@user/moto)
[12:59:17] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[12:59:20] *** Joins: lawt (~lawt@2601:200:8200:6870:dea6:32ff:fea1:adf9)
[13:00:00] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:01:42] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:01:50] *** Joins: jpn (~jpn@user/jpn)
[13:02:25] *** Quits: km (znc@user/km) (Remote host closed the connection)
[13:02:45] *** Joins: pulseaudio (~pulseaudi@223.223.136.192)
[13:04:12] *** Joins: masta`` (~Username@user/masta/x-2645138)
[13:04:21] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[13:04:25] *** Joins: moog_ (~moog@98.97.85.106)
[13:05:15] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[13:06:02] *** Quits: moog (~moog@98.97.85.106) (Ping timeout: 268 seconds)
[13:06:07] *** GiverOfDomains is now known as Polo
[13:06:33] *** Quits: CalimeroTeknik (~calimero@ctkarch.org) (Changing host)
[13:06:33] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[13:07:42] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:09:15] *** Quits: en7ropy (~en7ropy@185.187.243.161) (Quit: Leaving)
[13:10:14] <deniska> hans: you may want to use bytearray instead. A make a list of bytes objects and then do b''.join(it)
[13:10:26] *** Joins: Guest26 (~Guest26@122x220x42x73.ap122.ftth.ucom.ne.jp)
[13:10:53] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Remote host closed the connection)
[13:11:26] *** Joins: cdman (~dcm@27.2.216.95)
[13:11:27] *** Quits: cdman (~dcm@27.2.216.95) (Changing host)
[13:11:27] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[13:12:26] <Guest26> Hello from Tokyo.
[13:13:37] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[13:15:01] <_moep_> hello
[13:16:32] <madduck>    
[13:16:56] *** Joins: km (znc@user/km)
[13:17:27] *** Joins: wakeup (~wakeup@user/wakeup)
[13:17:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 260 seconds)
[13:18:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:19:36] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 268 seconds)
[13:20:54] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Quit: The Lounge - https://thelounge.chat)
[13:22:01] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[13:23:26] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:23:46] *** Joins: fling (~fling@user/fling)
[13:24:23] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:5562:8f50:eb7a:4aef) (Quit: Leaving)
[13:24:54] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[13:24:56] *** Joins: grooverman_ (~grooverma@179.97.162.238)
[13:26:20] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[13:26:52] *** Joins: rsx (~dummy@ppp-188-174-132-120.dynamic.mnet-online.de)
[13:27:33] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[13:28:22] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[13:28:43] *** Quits: grooverman (~grooverma@179.97.162.238) (Ping timeout: 260 seconds)
[13:28:49] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[13:28:59] *** Joins: dkr13 (~dkr13@dkr13.de)
[13:31:02] *** Quits: src (~src@user/src) (Quit: leaving)
[13:31:23] *** Joins: shad (~shad@user/shad)
[13:31:52] *** Quits: tarel2 (~tarel2@139.28.216.245) (Ping timeout: 250 seconds)
[13:32:13] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:32:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:35:00] *** Quits: rud0lf (rangifer@user/rud0lf) (Ping timeout: 240 seconds)
[13:37:05] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 248 seconds)
[13:37:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:38:51] *** Joins: xythercoder (~xythecode@157.41.159.241)
[13:40:40] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[13:40:48] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[13:40:53] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[13:41:54] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[13:42:20] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:42:24] *** Joins: paul424 (~tom@ip-5-172-237-67.multi.internet.cyfrowypolsat.pl)
[13:42:29] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 246 seconds)
[13:42:38] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:42:59] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr) (Quit: Someone cut my Wi-Fi cable.)
[13:43:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:43:58] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[13:44:15] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[13:45:37] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 248 seconds)
[13:45:56] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[13:50:09] *** Quits: Guest26 (~Guest26@122x220x42x73.ap122.ftth.ucom.ne.jp) (Quit: Client closed)
[13:51:01] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:51:40] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[13:52:17] *** Quits: bahamas (~lucian@86.120.77.115) (Ping timeout: 268 seconds)
[13:52:33] *** Joins: sokan_ (~sokan@athedsl-304997.home.otenet.gr)
[13:52:55] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[13:52:58] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[13:54:08] *** Quits: sokan (~sokan@2a02:587:9e11:bc00:227:eff:fe16:865d) (Ping timeout: 268 seconds)
[13:54:08] *** sokan_ is now known as sokan
[13:57:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304) (Quit: My iMac has gone to sleep. ZZZzzz…)
[13:58:58] <newdimension> In python repl, if I enter "/." it returns "//.". Why is that?
[14:02:39] *** Quits: asthasr (~asthasr@208.80.78.154) (Quit: asthasr)
[14:02:50] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[14:04:25] <BrainchildHo[m]> It returns '/.' for me
[14:06:02] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8)
[14:06:25] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[14:06:29] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[14:06:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:07:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:08:49] <supakeen> If you meant `'\.'` -> `'\\.'` then that's because it's showing the representation, something that can be directly copy pasted to get the same string, and for that the `\` needs to be escaped (with a `\`).
[14:08:53] *** Joins: wyclif (~wyclif@user/wyclif)
[14:08:58] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:09:18] *** Joins: andreasbuhr (~quassel@p549dba7d.dip0.t-ipconnect.de)
[14:09:35] <supakeen> If you do `print('\.')` you get to see the string itself (note: no quotes, no escapes).
[14:10:03] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[14:10:53] *** Joins: rud0lf (rangifer@user/rud0lf)
[14:11:32] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[14:11:34] <newdimension> supakeen: oh right sorry, yes I meant \.
[14:11:40] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 248 seconds)
[14:11:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 248 seconds)
[14:11:55] <newdimension> Thing is, I think it's ruining my regex
[14:12:14] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[14:12:16] <newdimension> Because on regex101 it's working but not on my machine
[14:13:18] <supakeen> You can tag your string with `r` to make escape sequences not be interpreter: `r'\.'`
[14:13:33] <supakeen> Note that the representation will still be the same.
[14:14:28] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[14:14:39] <newdimension> Is that leading ` part of the syntax?
[14:14:58] <supakeen> No. I'm using it to show what part is Python and what part is not-Python.
[14:15:04] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[14:15:04] *** Joins: belphegor666 (~satan@user/belphegor666)
[14:15:08] <supakeen> r'.'
[14:15:18] <newdimension> oh gotcha, because I already had the r"" format, but it still not working
[14:15:19] <supakeen> Also apparently my client does funky things if I don't 🙂
[14:15:22] *** Joins: Masklin__Gurder (~joel@bioinf-serv.biol.lu.se)
[14:16:26] <newdimension> This is my pattern  pat = r"Thank you for your interest in joining (?P<company>.*?)\."  it's matching stuff after <company>
[14:17:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:18:20] *** Joins: Guest99 (~Guest99@197.224.154.223)
[14:18:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[14:19:33] *** Quits: NealRame (~a@89.187.163.193) (Quit: Konversation terminated!)
[14:19:56] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-707-11.w90-118.abo.wanadoo.fr)
[14:19:58] *** Joins: wyclif (~wyclif@user/wyclif)
[14:21:09] *** Joins: Satanasur[m] (~satanasur@2001:470:69fc:105::1:f04d)
[14:21:12] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[14:25:04] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[14:25:10] *** Joins: Amnesia (~Amnesia@user/amnesia)
[14:25:11] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[14:25:18] *** Quits: flea_ (~nosoul@196.245.151.210) (Ping timeout: 260 seconds)
[14:25:25] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan62)
[14:25:35] <Amnesia> question, how'd I go about defining a lambda that takes two placeholder arguments? `lambda _, _: 42` returns a SyntaxError
[14:25:48] *** Quits: opcode (~opcode@2604:5800:0:1f::2) (Ping timeout: 240 seconds)
[14:25:56] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[14:26:13] *** Joins: alioui (~medeva293@102.157.8.53)
[14:26:15] <Yhg1s> Amnesia: just give them different names. _ is not any more a placeholder than any other name.
[14:26:23] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:26:38] <Amnesia> k
[14:26:47] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[14:26:53] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:a9fa:1df4:82cf:eacd)
[14:27:05] *** Joins: opcode (~opcode@user/opcode)
[14:27:16] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:a9fa:1df4:82cf:eacd) (Read error: Connection reset by peer)
[14:27:16] *** pvergain1 is now known as pvergain
[14:27:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Max SendQ exceeded)
[14:27:31] *** Joins: Blankspace (~Blankspac@user/blankspace)
[14:27:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[14:27:55] <Amnesia> Yhg1s: tyvm
[14:28:20] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:29:40] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:29:41] *** Joins: fling (~fling@user/fling)
[14:30:02] *** Quits: km (znc@user/km) (Remote host closed the connection)
[14:30:43] *** Parts: Amnesia (~Amnesia@user/amnesia) ()
[14:30:56] *** Joins: vanfanel640 (~vanfanel6@user/vanfanel64)
[14:31:44] *** Joins: km (znc@user/km)
[14:32:33] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 256 seconds)
[14:33:41] *** Quits: vanfanel64 (~vanfanel6@user/vanfanel64) (Ping timeout: 256 seconds)
[14:33:43] *** vanfanel640 is now known as vanfanel64
[14:34:04] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[14:34:50] *** Quits: marcello42 (~mp@ip5f5aca17.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[14:37:05] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:37:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:39:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:39:30] *** Joins: swistak (~swistak@185.21.216.141)
[14:39:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:41:21] *** Joins: menace (~someone@ppp-93-104-183-77.dynamic.mnet-online.de)
[14:41:21] *** Quits: menace (~someone@ppp-93-104-183-77.dynamic.mnet-online.de) (Changing host)
[14:41:21] *** Joins: menace (~someone@user/menace)
[14:41:28] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[14:41:35] *** menace is now known as Deknos
[14:41:53] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[14:43:29] *** Joins: Dr-007 (~Dr-007@user/Dr-007)
[14:43:35] *** Joins: wakeup (~wakeup@user/wakeup)
[14:44:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[14:45:26] <Dr-007> hey guys. im building an app in python + gtk blade. and i need root access. ofcourse i can run it with sudo but i want to ask the user. so i found pkexec and it asks when i need to do something root related. what i want is to give the whole app root access. so im thinking to just prepend it with a bash script and then `pkexec python app.py`. but maybe there's a better way?
[14:46:33] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[14:46:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:48:38] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[14:50:12] *** Joins: _mantra (~mantra@216.73.163.121)
[14:50:58] *** Quits: mantra (~mantra@216.73.163.24) (Ping timeout: 260 seconds)
[14:52:39] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:52:39] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:52:39] *** Joins: nortoh (~nortoh@user/nortoh)
[14:52:57] *** Joins: TheCat (~TheCat@user/z-cat)
[14:53:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[14:55:29] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 248 seconds)
[14:57:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:57:27] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:58:28] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[15:00:17] *** Quits: maxzor (~maxzor@2a01cb04054faa00a75904040f18d50a.ipv6.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[15:00:30] <drflashd[m]> topic?
[15:00:51] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[15:00:53] *** Quits: bluesmonk (~diego@44.red-80-28-117.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[15:00:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:01:03] *** Joins: Capricious (~capriciou@121.44.231.164)
[15:01:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[15:06:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:06:54] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[15:08:28] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 260 seconds)
[15:08:53] <marduk> Dr-007: polkit is another way. whether it's "better" is subjective.
[15:10:00] <Dr-007> marduk, but doesnt that require a policy file to be sitting somewhere? so when i launch my app there should have been some install script to create that
[15:11:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[15:12:27] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[15:12:47] *** Quits: someuser (~user@197.54.114.173) (Ping timeout: 246 seconds)
[15:14:14] *** Quits: weedmic (~weedmic@77.124.87.58) (Quit: Konversation terminated!)
[15:14:39] <marduk> Dr-007: i don't know a lot about it but yeah I think so. You could just make that a part of your app's installation.
[15:15:09] *** Joins: Alina-ma- (~Alina-mal@37.252.83.224)
[15:15:28] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 260 seconds)
[15:17:26] *** Joins: cdown (~cdown@user/cdown)
[15:17:41] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[15:18:00] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[15:18:52] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[15:18:52] *** Joins: someuser (~user@197.54.104.225)
[15:19:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:20:19] <Dr-007> how about i ask the user for a password then save it in a variable. only when typing it out it feels unsafe
[15:20:59] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Quit: Client closed)
[15:21:30] <marduk> Dr-007: there's a getpass module to do that if i understand you correctly
[15:21:37] <BrainchildHo[m]> May i ask what's your app doing?
[15:22:14] <marduk> although that's terminal not gui
[15:22:15] <apollo13> Dr-007: you do not need a shell wrapper, you can try to see if you have root and if not you can reexec your program with pkexec
[15:22:18] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:23:03] <apollo13> you can most likely also pass down an env variable ala _POLKIT_EXEC so you know that this run happened via an explicit exec etc…
[15:24:24] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[15:24:32] <Dr-007> BrainchildHo[m], im making a partition tool via the GUI tool blade and python. here's some python script: https://dpaste.com/
[15:24:41] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[15:24:42] <onur> hi guys. I have a string with emojis. But even simple re.match is returning None all the time: https://bpa.st/E6GA
[15:24:46] <onur> can't figure out why
[15:24:57] <madduck> can I use the logging framework to essentially append a couple of lines to a file in a threadsafe manner? Nothing else writes to the file except this one Python tool, but may be invoked multiple times in parallel.
[15:25:07] <Dr-007> notice ive got 3 check_output's where i put the pkexec infront of. then it asked me 3 times to enter my password. thats why i want to ask upon boot of my python app
[15:25:08] <Repiphany> onur: re.match only matches to the start of a string
[15:25:17] <Repiphany> re.search looks anywhere
[15:25:50] <onur> omg Repiphany thanks
[15:26:05] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[15:27:29] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 246 seconds)
[15:27:35] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:28:20] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:28:32] *** Quits: shad (~shad@user/shad) (Ping timeout: 246 seconds)
[15:29:46] *** Joins: harry (~harry@49.36.179.174)
[15:29:46] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 272 seconds)
[15:29:56] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:30:01] *** Joins: shad (~shad@user/shad)
[15:30:31] *** Joins: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net)
[15:32:23] <harry> i've created a python module, how can i make it publicly available to install using pip ?
[15:33:18] <rendar> why `except Exception as exc:` doesn't catch asyncio.CancelledError ?!
[15:35:27] *** Quits: sirodoht (~sirodoht@cpc73824-dals21-2-0-cust486.20-2.cable.virginm.net) (Ping timeout: 260 seconds)
[15:35:44] <nedbat> rendar: "Changed in version 3.8: CancelledError is now a subclass of BaseException."
[15:35:50] <rendar> oh!
[15:35:55] <rendar> nedbat, thanks..
[15:36:16] <rendar> i guess the reason is the same as KeyboardInterrupt is BaseException and not Exception
[15:36:22] <nedbat> right
[15:36:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:36:46] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:36:53] *** Joins: wyclif (~wyclif@user/wyclif)
[15:37:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:38:22] <harry> is there any internship opportunity available ?
[15:38:25] *** Joins: solobalbo (uid549465@id-549465.uxbridge.irccloud.com)
[15:40:07] *** Quits: data68 (~data@2a02:908:a67:2ce0:9941:5f11:bd7d:f492) (Ping timeout: 260 seconds)
[15:41:32] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[15:41:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[15:41:47] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:41:48] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[15:42:19] *** Joins: wyclif (~wyclif@user/wyclif)
[15:42:33] *** Quits: harry (~harry@49.36.179.174) (Ping timeout: 250 seconds)
[15:42:40] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[15:44:36] *** Quits: zoraj (~zoraj@vmi794994.contaboserver.net) (Read error: Connection reset by peer)
[15:45:12] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[15:45:13] *** Quits: paul424 (~tom@ip-5-172-237-67.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:45:29] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[15:47:56] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[15:48:16] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[15:48:55] *** Joins: maxzor (~maxzor@2a01cb04054faa00817fec2f2541fffd.ipv6.abo.wanadoo.fr)
[15:49:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:50:00] *** Joins: qlixed (~qlixed@181.44.129.13)
[15:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:50:59] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[15:51:13] <pwillard> Note to self:   When working with Pillow, don't create a file called "numbers.py" to create bitmap numbers no matter how tempting.
[15:51:19] *** Joins: qlixed (~qlixed@181.44.129.13)
[15:51:30] <Vornicus> ?
[15:51:58] <pwillard> numbers.py is a library file used by Pillow...  makes a mess.
[15:52:08] <Vornicus> aha
[15:52:29] <pwillard> seems innocent enough... until you get a pageful of python errors
[15:53:18] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[15:54:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 248 seconds)
[15:54:10] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[15:55:34] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-180.poda.cz) (Quit: Leaving)
[15:57:40] *** Joins: Croves (~Croves@2804:58:c08c:9200:203e:19c5:88db:c25f)
[15:58:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[15:59:42] *** Joins: anotheruser (~user@197.54.70.191)
[16:00:24] <Croves> Hello! Is `redshift_connector.py` a valid Python package? https://bpa.st/ZNPA
[16:00:48] *** Quits: someuser (~user@197.54.104.225) (Ping timeout: 272 seconds)
[16:03:41] *** Parts: mnhrdt_ (~Enric@boucantrin.ovh.hw.ipol.im) ()
[16:03:49] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[16:04:03] <parv> ... neither make {date,}time{,.py}
[16:04:32] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[16:04:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[16:04:40] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[16:05:26] <jinsun> Croves: there is no problem with the file name if you meant that
[16:05:32] <jinsun> Croves: the `from redshift_connector` part is fine, it is the `import redshift_client` that is the problem, because redshift_connector doesn't have redshift_client
[16:05:50] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:06:32] <Croves> jinsun what about line #10?
[16:06:36] <Croves> Ok just realized a typo there
[16:06:38] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[16:07:13] <jinsun> there is a typo, but it is also inside if __name__ == '__main__' block
[16:07:19] <jinsun> so it won't run when you import it
[16:07:48] <jinsun> stuff inside if __name__ == '__main__' runs only when you directly run the file, not when you import it
[16:09:10] *** Quits: newdimension (~newdimens@user/newdimension) (Quit: Ping timeout (120 seconds))
[16:09:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[16:09:33] *** Joins: newdimension (~newdimens@user/newdimension)
[16:09:59] <Croves> jinsun Oh right, thanks for that!
[16:12:29] <madduck> Could it be that argparse's exit_on_error is faulty? This is okay: https://github.com/python/cpython/blob/main/Lib/argparse.py#L1875-L1881 , but have a look at https://github.com/python/cpython/blob/main/Lib/argparse.py#L1843-L1848 which is the caller… it'll call error() regardless of whether exit_on_error was set
[16:12:40] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:13:09] *** Quits: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Remote host closed the connection)
[16:13:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:14:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:14:20] <madduck> i want that exception!
[16:15:51] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[16:16:06] *** Joins: califax (~califax@user/califx)
[16:16:09] *** Joins: shuck (~shuck@user/shuck)
[16:16:39] *** Joins: Guest89 (~Guest89@109.252.90.221)
[16:18:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.222) (Ping timeout: 260 seconds)
[16:19:21] *** Joins: nomic (~nomic@85.203.36.64)
[16:19:40] *** Joins: jpodivin (~jpodivin@cgnat44-pool1-236-180.poda.cz)
[16:19:54] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[16:20:46] *** Quits: mixfix41 (~sdenynine@user/mixfix41) (Quit: and the winter is outta here...)
[16:21:07] *** Joins: walter_whip (~walterwhi@user/walterwhip)
[16:21:47] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[16:22:08] *** Quits: Croves (~Croves@2804:58:c08c:9200:203e:19c5:88db:c25f) (Quit: Client closed)
[16:22:35] *** Joins: loofy (~loofy@user/loofy)
[16:23:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[16:23:39] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:24:06] *** Quits: pulseaudio (~pulseaudi@223.223.136.192) (Remote host closed the connection)
[16:24:33] *** Joins: sy (~m@zm.is)
[16:24:36] <sy> Hi everyone
[16:25:57] <alioui> HI !
[16:26:22] <jinsun> madduck: well it is not technically an error, you just passed extra args that the parser doesn't recognize, you can use parse_known_args instead of using parse_args if you don't want to exit when extra args are passed
[16:26:36] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[16:26:46] <sy> I'm having some strange behavior with the logging module: https://bpa.st/CYJQ -- I have a class Sources, and inside i define self.fidor = Fidor(), Fidor also inherits from base, the log for Sources is fine: 2022-04-05 12:51:26,491    INFO       Sources [...] but the one for Fidor has a duplicate timestamp: 2022-04-05 12:51:29+0100 [-] 2022-04-05 12:51:29,682    INFO         Fidor // any idea how I
[16:26:46] <sy> can resolve this please?
[16:26:50] *** Joins: slav0nic (slav0nic@python.su)
[16:27:09] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:27:38] *** Joins: shuck (~shuck@user/shuck)
[16:27:39] *** Joins: slav0nic (slav0nic@python.su)
[16:28:26] <madduck> jinsun: it's confusing to have exit_on_error ignored, and then argparse exit with an error, even if what you say is true that it's technically not an error.
[16:29:51] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:29:52] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[16:30:30] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[16:30:38] *** Joins: storm_ (~storm@78.173.231.178)
[16:30:41] *** Quits: Capricious (~capriciou@121.44.231.164) (Quit: Capricious)
[16:30:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:31:29] *** Quits: xythercoder (~xythecode@157.41.159.241) (Ping timeout: 248 seconds)
[16:31:33] *** Joins: georgios (~georgios@user/georgios)
[16:31:39] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[16:31:41] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[16:32:01] *** Quits: maxzor (~maxzor@2a01cb04054faa00817fec2f2541fffd.ipv6.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[16:32:12] <jinsun> madduck: yeah it could be considered a bug, or definitely a bug in the docs if not in the implementation
[16:32:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:32:28] *** Quits: Psybur (~Psybur@c-76-123-45-25.hsd1.va.comcast.net) (Ping timeout: 260 seconds)
[16:32:32] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[16:33:38] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 260 seconds)
[16:33:58] *** Joins: fling (~fling@user/fling)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:57] *** Joins: Psybur (~Psybur@2600:1003:b138:112:6968:67e7:2717:bba0)
[16:35:03] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:35:11] *** Quits: _mantra (~mantra@216.73.163.121) (Ping timeout: 260 seconds)
[16:35:22] *** Joins: mantra (~mantra@216.73.163.51)
[16:36:03] *** Quits: MeanEYE_ (~MeanEYE__@87.116.162.168) (Remote host closed the connection)
[16:36:47] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[16:37:01] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[16:37:18] *** Joins: MeanEYE (~MeanEYE__@87.116.162.168)
[16:38:11] <parv> sy, That CYJQ code does not have "Sources" & "Fidor" (small enough to show the issue), so cannot help
[16:39:02] *** Quits: grooverman_ (~grooverma@179.97.162.238) (Read error: Connection reset by peer)
[16:39:14] <sy> parv: it's just class Sources(Base), __init__ for Sources starts Fidor
[16:39:35] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[16:39:54] <sy> they both inherit from Base but the only line in Sources that's relevant imo is self.fidor = Fidor()
[16:40:18] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[16:40:33] <sy> it does run the superclass just before with super().__init__() but adding that after defining Fidor has the same issue though it was my first thought
[16:40:38] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[16:41:08] <parv> SSCCE (http://www.sscce.org/ ) could have helped; someone else may come by ...
[16:41:14] *** Joins: grooverman (~grooverma@152.250.164.4)
[16:41:56] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:42:07] *** Joins: paul424 (~tom@apn-95-40-148-15.dynamic.gprs.plus.pl)
[16:42:19] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[16:43:37] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:44:29] *** Quits: justm3 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 246 seconds)
[16:44:32] *** justm33 is now known as justm3
[16:46:00] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac)
[16:46:06] *** Quits: lacrymology (~lacrymolo@5.225.79.114) (Quit: Lost terminal)
[16:46:33] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:51:26] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[16:51:31] *** Quits: jpic (~jpic@145.224.77.92) (Ping timeout: 260 seconds)
[16:52:25] <sy> Here is a runnable example that should demonstrate the problem https://bpa.st/27SA however it doesn't actually work in the same way and I'm not sure why
[16:52:37] *** Quits: Guest89 (~Guest89@109.252.90.221) (Quit: Connection closed)
[16:53:18] *** Joins: jpic (~jpic@145.224.77.92)
[16:56:02] *** Quits: Guest99 (~Guest99@197.224.154.223) (Ping timeout: 246 seconds)
[16:57:02] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:57:15] <sy> Hang on, I've figured out how to make an example that breaks
[16:59:23] *** Joins: sirodoht (~sirodoht@cust145-dsl51.idnet.net)
[17:00:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:00:49] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 248 seconds)
[17:01:34] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[17:02:19] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:40] <sy> yeah ive made my project way too complicated
[17:03:32] *** Joins: trashbird (~trashbird@user/trashbird)
[17:04:13] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[17:04:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:04:33] *** Quits: andreasbuhr (~quassel@p549dba7d.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[17:04:58] *** Joins: andreasbuhr (~quassel@p549db8db.dip0.t-ipconnect.de)
[17:07:10] <sy> I guess I'll have to make a mini project because it looks like this bug is nontrivial
[17:07:56] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[17:09:55] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[17:10:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:12:08] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:13:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:13:17] *** Joins: wyclif (~wyclif@user/wyclif)
[17:13:34] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:14:14] *** Joins: tWqaq_ (~tWqaq@240e:389:5d41:5900:887b:59e3:3866:45bd)
[17:14:47] *** Joins: thiras (~thiras@user/thiras)
[17:15:48] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:887b:59e3:3866:45bd) (Ping timeout: 240 seconds)
[17:15:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:16:33] *** Joins: subopt (~subopt@2603-8081-2302-459a-e5b9-46fb-9314-6ff0.res6.spectrum.com)
[17:17:53] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 248 seconds)
[17:18:27] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[17:19:03] *** Joins: bloody (~bloody@user/bloody)
[17:19:54] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Remote host closed the connection)
[17:20:18] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[17:20:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[17:20:49] *** Joins: pulseaudio (~pulseaudi@223.223.136.192)
[17:21:01] *** Joins: wakeup (~wakeup@user/wakeup)
[17:21:11] *** Joins: maxzor (~maxzor@2a01cb04054faa00b0d6c6caafc0c1f8.ipv6.abo.wanadoo.fr)
[17:21:15] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[17:22:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[17:22:52] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[17:24:16] <Ninpo> I'm decoding some sql injection attempts from web server logs, how do I read in the many instances of 0x12345 hex values and handle the 0x prefix? Python complains about non hex numbers in the string presumably the leading 0x
[17:24:40] *** Quits: walter_whip (~walterwhi@user/walterwhip) (Remote host closed the connection)
[17:24:50] <Ninpo> well not presumably it is, if I test a single hex value without the leading 0x it converts fine
[17:26:07] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[17:26:09] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[17:26:41] <jinsun> how are you trying to read it, that gives the complaints about 0x prefix?
[17:27:00] *** Quits: psyxopompos (~psyxopomp@user/psyxopompos) (Ping timeout: 240 seconds)
[17:27:11] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[17:27:30] <BrainchildHo[m]> How about just filter the first 2 characters? [2:]
[17:27:38] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Ping timeout: 250 seconds)
[17:28:00] <Ninpo> jinsun: have tried unhexlify("0x1234") and bytes.fromhex("0x1234")
[17:28:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:28:17] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 250 seconds)
[17:28:23] <Ninpo> Because I'm reading in get requests there's hexadecimal values littered throughout. I want to be able to decode them as I encounter them
[17:28:39] <Ninpo> haven't quite figured that part out yet
[17:28:43] *** Parts: parsnip (~parsnip0m@user/parsnip) ()
[17:28:45] *** Joins: wyclif (~wyclif@user/wyclif)
[17:29:09] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[17:29:56] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 245 seconds)
[17:29:57] <Ninpo> So I suppose I have two questions...best way to walk a string and identify "0x123456" type values for decoding and then how to deal with the 0x prefix that upsets python
[17:30:15] *** Joins: frmlof (~frmlof@70.243.238.191)
[17:30:51] <Ninpo> just sanitising an example one moment
[17:31:00] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[17:31:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:31:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[17:31:35] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[17:31:36] <foo> Here's a fun one: we had an sqlalchemy .filter() break because a str was expected and it got an int. We converted the api_id to a str at a higher level up in the code, we typed the arg on a function to expect a str so anyone reading the code should know to pass a string. (We don't have typing in pre-commit yet, almost at 100% typing). There are other areas of the code where an int is expected on api_id. Our
[17:31:42] <foo> options: A) leave it as-is, pass in a str a couple functions up or B) update the actual filter to be str() as a failsafe (this one query broke a huge nightly syncing process). I wanted to add the str() on the filter, which would imply we "doubt the code" and "add a failsafe" - but if we did that, that begs the question, how often do we do that? That's inconsistent with how we do things.
[17:32:06] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[17:32:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:32:42] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[17:32:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 248 seconds)
[17:32:54] *** Joins: marcello42 (~mp@ip5f5aca17.dynamic.kabel-deutschland.de)
[17:33:01] *** Quits: chenqisu1 (~chenqisu1@183.217.202.44) (Ping timeout: 240 seconds)
[17:33:34] <Ninpo> jinsun: OK so here's a typical line from the log, I've already parsed the url entities hence the spaces etc: https://bpa.st/HVOA
[17:33:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:33:52] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[17:33:54] <Ninpo> I'd like to interpret that line with all the hexadecimal values decoded
[17:34:09] *** Joins: Deknos (~someone@ppp-93-104-183-77.dynamic.mnet-online.de)
[17:34:42] *** Joins: pydev (~pydev3@2001:b07:5d28:551:22e8:cddf:3a88:5d30)
[17:34:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:35:44] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:35:55] *** Joins: frmlof (~frmlof@70.243.238.191)
[17:36:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[17:36:19] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[17:36:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[17:36:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:37:39] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[17:38:02] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 246 seconds)
[17:38:05] *** Joins: fling (~fling@user/fling)
[17:38:15] *** Joins: jpn (~jpn@user/jpn)
[17:38:42] *** Joins: shad (~shad@user/shad)
[17:39:42] *** Joins: wyclif (~wyclif@user/wyclif)
[17:39:59] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[17:40:51] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[17:41:34] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[17:43:12] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:43:19] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[17:44:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:45:14] *** Joins: wyclif (~wyclif@user/wyclif)
[17:48:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:50:08] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[17:50:13] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[17:50:16] *** Joins: svbito (~svbito@2001:470:69fc:105::1:786)
[17:50:18] *** Quits: pulseaudio (~pulseaudi@223.223.136.192) (Remote host closed the connection)
[17:50:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[17:50:25] *** Joins: califax (~califax@user/califx)
[17:51:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:51:23] *** Joins: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[17:51:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:51:33] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[17:51:48] *** Joins: statusfailed (~statusfai@statusfailed.com)
[17:52:45] *** Joins: frmlof (~frmlof@70.243.238.191)
[17:52:53] <jinsun> Ninpo: hmm, so 0x would not be generated if that string was generated with hexlify, and unhexlify and fromhex are supposed to work with that kind of input, all hex characters
[17:53:44] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan62)
[17:53:50] <jinsun> so with the kind of input you have, you'd have to remove those 0x's yourself before feeding it to unhexlify, maybe a job for re.sub, dunno if there is anything better
[17:54:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[17:54:27] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[17:54:28] *** Parts: svbito (~svbito@2001:470:69fc:105::1:786) ()
[17:55:38] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[17:55:40] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:55:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[17:55:49] *** Joins: qlixed (~qlixed@8.243.49.226)
[17:56:24] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[17:56:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:56:48] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[17:57:12] <OMGOMG> >>> int('0x2a', 16)
[17:57:12] <OMGOMG> 42
[17:57:39] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[17:57:51] <Dr-007> hey guys. ive been making a  GUI tool with python & glade gtk. im stuck on an error. https://dpaste.com/37NJNZP3B i get an error on the 'start' dict value. it's an int i'm trying to insert via python. the question is more Glade / Gtk related i think. but nevertheless, here it goes; before i was inserting strings via python into Gtk as strings and inside Gtk i had the gchararray as GtkRendererText for a column. -All was good- my strings were arriving. now i
[17:57:51] <Dr-007> switched to inserting 'int' via python and i selected in Gtk the 'gint' acceptor. but i get that error and there are a gazzilion wierd choices inside Glade there's an gimp64, whats the difference?
[17:58:29] *** gentooclimax is now known as climax
[17:58:49] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:59:58] *** Joins: jpn (~jpn@user/jpn)
[18:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:01:51] <BrainchildHo[m]> How about stringify that int and parse as string
[18:02:41] *** Joins: nolan_ (~nolan_@user/nolan/x-2434303)
[18:04:00] *** Joins: hexa- (~hexa-@juno.lossy.network)
[18:05:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:05:52] *** Joins: seabass_ (~seabassfo@2001:470:69fc:105::187)
[18:05:58] <sy> Alright, I did it, this is unfortunately the smallest I can make my example, the issue is when it is run, the logging duplicates the timestamp after initialisation of the Fidor library: https://github.com/syxie/broken
[18:06:10] <sy> I tried but failed to put it all in one file
[18:06:16] <foo> Hmm, I wonder if I can send email via Outlook's SMTP servers to minimize chances of ending up in Promotions tab. Mailgun ain't helping. /me investigates
[18:06:21] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[18:06:46] <jinsun> I thought of int(..., 16) too but that does a different thing than what unhexlify does, and probably not what Ninpo wants
[18:07:01] <sy> The logging is defined in util.py, the Sinks library is initialised in ux/irc, which calls sinks.__irc__started__ when run, which starts Fidor, I believe the issue is to do with the log handling in the IRCClient and the associated factory
[18:07:26] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[18:07:28] <jinsun> and it would need another step of finding all the substrings starting with 0x too
[18:07:33] <Ninpo> jinsun: figured something, I'm regex matching for r'0x[0-9A-F]+' then running a replace for the literal hex with the unhexlified string[2:]
[18:07:58] <Ninpo> seems to be working
[18:08:11] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14) (Quit: Leaving)
[18:08:12] *** Quits: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[18:08:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[18:08:21] *** climax is now known as gentooclimax
[18:08:42] <jinsun> okay so re.sub, that seems to be the simplest way yeah
[18:08:46] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[18:08:58] *** Joins: jpn (~jpn@user/jpn)
[18:10:02] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[18:11:03] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[18:11:40] *** hexa- is now known as h
[18:11:48] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:12:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:12:25] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:12:26] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[18:12:52] <Ninpo> I used str.replace but yeah that'd also work
[18:13:26] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d)
[18:15:37] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[18:16:49] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[18:17:39] *** Joins: Barones (~Barones@user/Barones)
[18:18:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:18:28] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[18:18:42] *** Joins: wyclif (~wyclif@user/wyclif)
[18:19:15] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 260 seconds)
[18:19:20] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 246 seconds)
[18:19:31] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[18:19:52] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[18:19:56] *** Quits: qlixed (~qlixed@8.243.49.226) (Ping timeout: 245 seconds)
[18:20:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[18:20:55] <Dr-007> BrainchildHo[m], i know how to feed it like a string
[18:21:12] <Dr-007> but then upon recieval i have to make it an int again
[18:21:51] *** gentooclimax is now known as climax
[18:23:35] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:70be:3437:d6be:b5ae) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:23:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:24:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:70be:3437:d6be:b5ae)
[18:24:14] *** Joins: wyclif (~wyclif@user/wyclif)
[18:24:55] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[18:25:17] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[18:25:37] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[18:25:50] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[18:26:00] *** Quits: Deknos (~someone@ppp-93-104-183-77.dynamic.mnet-online.de) (Quit: Deknos)
[18:26:42] *** Quits: Psybur (~Psybur@2600:1003:b138:112:6968:67e7:2717:bba0) (Ping timeout: 268 seconds)
[18:27:26] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:27:39] *** Joins: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba)
[18:28:26] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:28:39] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[18:29:25] *** Joins: niv (~niv@limbo.cypherpunks.io)
[18:29:32] *** Quits: jeho2 (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[18:29:34] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[18:29:57] *** climax is now known as gentooclimax
[18:30:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:30:00] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.4.1)
[18:30:18] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:30:47] *** Joins: darksun (~darksun@user/darksun)
[18:30:47] <BrainchildHo[m]> Dr-007: mkay. i'm not sure but in your paste it shows typeerror
[18:32:06] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[18:32:07] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:32:31] *** Quits: Alina-ma- (~Alina-mal@37.252.83.224) (Quit: !be back soon)
[18:33:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:33:25] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[18:34:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:34:23] <BSaboia> What is the pythonic way to repeat something 5 times? I did `for x in range(5): ...`, but x is never used
[18:34:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:34:53] <NoImNotNineVolt> `for _ in range(5): ...`
[18:35:15] <NoImNotNineVolt> or, i've seen _ used as a name for unused values.
[18:35:19] *** Joins: wyclif (~wyclif@user/wyclif)
[18:35:21] <BSaboia> Nothing4You, so just using the default discard value, right?
[18:35:25] <NoImNotNineVolt> i don't know if that's pythonic or not :P
[18:35:26] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 246 seconds)
[18:35:37] <BSaboia> Yeah, I think that _ is the "universal" discard var name
[18:35:46] <BSaboia> Even in other languages
[18:35:53] *** Joins: bahamas (~lucian@84.232.140.158)
[18:35:55] <BSaboia> But I feel that there is a more pythonic way
[18:38:07] *** Joins: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73)
[18:38:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 248 seconds)
[18:38:40] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:38:56] *** Quits: javaaaaaaaaaa (~fourroot@122.161.51.129) (Read error: Connection reset by peer)
[18:39:00] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[18:39:01] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[18:39:52] <grym> BSaboia: do you care about the return value of the thing you're doing
[18:39:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[18:40:09] *** Joins: Blankspace (~Blankspac@user/blankspace)
[18:40:13] *** Quits: dhch (~dhch@185.213.154.171) (Ping timeout: 260 seconds)
[18:40:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:40:29] <NoImNotNineVolt> list(map(lambda x: ..., range(5)))
[18:40:35] *** Joins: fling (~fling@user/fling)
[18:40:40] <grym> >.>
[18:40:45] *** Joins: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[18:41:10] <BSaboia> grym, no, I do not
[18:41:28] *** Joins: ovnicraft_ (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:41:28] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[18:41:44] <BSaboia> It is a number of iterations of a mathematical process
[18:41:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[18:41:59] <grym> BSaboia: then `for _ in range` is what i'd do
[18:42:09] *** Joins: qlixed (~qlixed@8.243.49.226)
[18:42:38] <NoImNotNineVolt> for iteration in range(max_iterations): ...
[18:42:38] <OMGOMG> for _ in 'PENIS':
[18:42:40] <OMGOMG> obviously
[18:42:56] *** Joins: Deana (~Deana@90.151.89.204)
[18:43:22] <jinsun> the for loop with the underscore is the pythonic way, unless it is numpy, then probably better to find a vectorized way to doing the thing
[18:43:43] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[18:44:52] *** Quits: paul424 (~tom@apn-95-40-148-15.dynamic.gprs.plus.pl) (Remote host closed the connection)
[18:45:15] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[18:45:23] *** Quits: cs (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 260 seconds)
[18:47:30] *** Quits: wedwards (~wedwards@46.44.154.209) (Quit: Textual IRC Client: www.textualapp.com)
[18:47:55] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[18:48:39] *** Joins: darksun (~darksun@user/darksun)
[18:49:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[18:50:02] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[18:51:05] *** Joins: jackblasted (~quassel@173.239.197.215)
[18:53:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[18:53:53] *** Quits: masta`` (~Username@user/masta/x-2645138) (Ping timeout: 248 seconds)
[18:54:15] *** Joins: todo75 (~todo75@user/todo75)
[18:54:30] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[18:56:00] *** Joins: akk (~akk@75.161.150.5)
[18:56:08] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (Killed (NickServ (GHOST command used by _val__!~valentin@213.108.29.31)))
[18:57:05] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:57:06] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[18:57:20] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[18:58:46] *** Quits: shad (~shad@user/shad) (Ping timeout: 268 seconds)
[18:58:53] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 260 seconds)
[19:00:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377)
[19:00:29] *** Joins: wakeup (~wakeup@user/wakeup)
[19:00:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:02:06] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[19:02:34] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:04:00] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[19:04:11] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[19:04:30] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:04:48] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[19:04:56] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:05:31] *** Joins: zaquest (~notzaques@5.130.79.72)
[19:07:40] *** Joins: darksun (~darksun@user/darksun)
[19:07:58] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[19:08:07] *** Joins: M4rt1n (~martin.sp@dyn-pppoe-142-51-246-201.vianet.ca)
[19:09:11] *** Quits: storm_ (~storm@78.173.231.178) (Quit: Leaving)
[19:09:42] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[19:10:25] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 248 seconds)
[19:10:41] *** Joins: grooverman_ (~grooverma@189.110.126.177)
[19:11:05] <hanetzer> OMGOMG: sounding?
[19:11:08] *** Quits: grooverman (~grooverma@152.250.164.4) (Ping timeout: 246 seconds)
[19:11:31] <octav1a> owo
[19:12:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[19:12:33] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[19:12:37] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[19:13:38] *** h is now known as hexa-
[19:14:09] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[19:14:48] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[19:14:52] *** Joins: shuck (~shuck@user/shuck)
[19:15:17] *** Joins: paul424 (~tom@ip-5-172-234-180.multi.internet.cyfrowypolsat.pl)
[19:16:17] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[19:17:33] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[19:18:29] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[19:20:04] *** Joins: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec)
[19:20:33] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[19:20:37] *** Joins: kosh (~kosh@user/kosh)
[19:20:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:21:23] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[19:21:50] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:21:56] <OMGOMG> for _ in 'NOSES' then
[19:22:08] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[19:22:32] *** Joins: Csm319_ (~csm3105@31.4.136.151)
[19:22:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:22:43] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[19:23:26] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 268 seconds)
[19:24:09] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:25:11] *** Quits: Csm319_ (~csm3105@31.4.136.151) (Read error: Connection reset by peer)
[19:25:17] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 268 seconds)
[19:25:31] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:26:14] *** Joins: darksun (~darksun@user/darksun)
[19:26:34] *** Joins: todo75 (~todo75@user/todo75)
[19:26:53] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:27:27] *** Joins: exarkun_ (~exarkun@user/exarkun)
[19:27:56] <BrainchildHo[m]> OMGOMG: breath control?
[19:28:01] <exarkun_> Used to be, `coverage combine` would rewrite filenames based on the `[paths]source` configuration from `.coveragerc` but I don't see that happening anymore.  Did I break it or did something change in coverage.py?
[19:28:42] *** exarkun_ is now known as exarkun
[19:28:55] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:29:56] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[19:31:01] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[19:31:24] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[19:33:45] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[19:33:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 248 seconds)
[19:35:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:35:32] *** Joins: debouncer (~pi@88.237.6.52)
[19:36:08] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 272 seconds)
[19:37:29] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[19:38:11] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[19:38:58] <OMGOMG> BrainchildHo[m]: no, something completely different
[19:39:04] *** Joins: Asgaroth (~Asgaroth@93.107.191.92)
[19:39:08] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[19:39:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[19:40:43] *** Joins: wyclif (~wyclif@user/wyclif)
[19:42:38] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 246 seconds)
[19:42:47] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[19:43:13] *** Joins: ivanf (~ivan@user/ivanf)
[19:43:18] *** Joins: darksun (~darksun@user/darksun)
[19:43:47] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 268 seconds)
[19:43:47] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 268 seconds)
[19:43:48] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:43:57] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:44:06] *** Joins: fling (~fling@user/fling)
[19:44:13] *** Joins: bindu (~bindu@user/bindu)
[19:44:16] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[19:44:44] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:45:01] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Quit: Leaving)
[19:45:13] *** Joins: pulseaudio (~pulseaudi@223.223.136.192)
[19:45:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:45:37] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:45:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 248 seconds)
[19:46:07] *** Joins: wyclif (~wyclif@user/wyclif)
[19:46:56] *** Joins: kosh (~kosh@user/kosh)
[19:47:17] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 260 seconds)
[19:47:47] *** Quits: pulseaudio (~pulseaudi@223.223.136.192) (Remote host closed the connection)
[19:48:03] *** Joins: sudomann (~sudomann@37.19.221.166)
[19:48:10] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[19:48:25] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[19:48:28] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 260 seconds)
[19:48:30] *** Joins: pulseaudio (~pulseaudi@223.223.136.192)
[19:48:49] *** Quits: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73) (Ping timeout: 248 seconds)
[19:49:11] *** Joins: akaWolf (~akaWolf@akawolf.org)
[19:49:32] *** Quits: nicoz (nicoz@nicoz.letz.dev) (Remote host closed the connection)
[19:49:32] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Remote host closed the connection)
[19:50:05] <SnoopJ> Is there a handy way to do the equivalent of `python3 -m pkg.subpkg` when `sys.executable` won't actually be Python? (PyInstaller)
[19:50:13] *** Quits: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba) (Ping timeout: 260 seconds)
[19:50:20] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 246 seconds)
[19:50:54] *** Joins: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a)
[19:51:10] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:51:27] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:51:35] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[19:51:36] <SnoopJ> I solved my actual problem by writing some ad-hoc code around the target, but curious about the general case, where somebody's written load-bearing code in their `if __name__ == "__main__"` block, say.
[19:53:02] *** Quits: sudomann (~sudomann@37.19.221.166) (Ping timeout: 268 seconds)
[19:53:11] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:53:17] <Tritium> I'm unclear on what you want to do, but i do know that PyInstaller really is a pain, especially one-file mode
[19:53:25] <causa_sui> anybody know of a serviceable cli alternative now that 'pip search' doesnt work?
[19:54:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:54:09] <CrtxReavr> I know of some guys working on a patch, but currently no. . . gotta search on pypi.org
[19:54:53] <SnoopJ> Tritium, the not-PyInstaller version of this did `subprocess.run([sys.executable, "-m", "pkg.subpkg", ...])` but that isn't possible in PyInstaller because `sys.executable` points to the application rather than a Python interpreter
[19:54:53] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[19:55:05] <causa_sui> CrtxReavr: arg. okay. hopefully that can get completed before someone gives in to the temptation to resort to scraping. thx
[19:55:22] *** Joins: mihael (~mihael@202.137.114.5)
[19:55:34] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[19:55:43] <SnoopJ> (this is not onefile mode, FWIW, but I don't think that affects my question since it's "just" compression that gets unpacked at runtime)
[19:56:03] *** Quits: cuanim (~cuanim@user/cuanim) (Ping timeout: 260 seconds)
[19:56:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[19:56:15] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[19:56:15] *** Joins: nortoh (~nortoh@user/nortoh)
[19:56:20] *** Joins: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3)
[19:56:22] <Tritium> SnoopJ: ...i mean...I MEAN....if you are targeting windows you can ship the embeddable package of python with your code, but you are shipping python twice...
[19:56:47] *** Joins: todo75 (~todo75@user/todo75)
[19:57:05] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[19:57:10] <SnoopJ> Tritium, yea, that would get messy pretty fast. In my actual problem, I can do `from pkg.subpkg.main import main as pkg_subpkg_main` and twiddle sys.argv as it would be if I'd called directly into it, which is gross but works.
[19:57:36] <Tritium> PyInstaller uses libpython, but it does not ship the executable - there is nothing in a default pyinstaller install that knows what -m is
[19:57:37] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[19:57:41] <CrtxReavr> zipfile will create multi-platform, single file python scripts.
[19:58:04] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:58:12] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[19:59:03] <Tritium> You could write your main entrypoint that pyinstaller builds as a shim that let you run that one sub.package and nothing else with an argument
[19:59:24] <Tritium> it is convoluted
[19:59:30] <Tritium> but it would work
[19:59:33] <SnoopJ> CrtxReavr, which don't include their dependencies.
[19:59:43] <jinsun> causa_sui: there are lots of packages that scrape pypi already, like https://pypi.org/project/pip-search/
[19:59:45] <SnoopJ> (and a variety of other things that make them completely unsuitable for the task I am solving)
[20:00:08] *** Quits: Dr-007 (~Dr-007@user/Dr-007) (Ping timeout: 246 seconds)
[20:00:08] <SnoopJ> Tritium, hmm, vendoring two different executables?
[20:00:13] *** Quits: Deana (~Deana@90.151.89.204) (Quit: Konversation terminated!)
[20:00:26] *** Joins: ivii (~ivan@user/ivii)
[20:00:37] *** Joins: darksun (~darksun@user/darksun)
[20:00:54] *** Joins: srg (~srg@user/srg)
[20:01:00] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[20:01:11] <jinsun> causa_sui: and pip itself is just planning to get rid of pip search, not to fix it https://github.com/pypa/pip/issues/5216
[20:01:13] <Tritium> Nah, you can just have one executable with two code paths, and just pick the code path with the argument.  say `./yourapp` does the main codepath and './yourapp --screw-pyinstaller' does the subpackage execution you wanted
[20:01:21] <SnoopJ> ah, that won't work downstream
[20:01:34] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737)
[20:01:47] *** Joins: Sh4dowmonk (~textual@dynamic-046-114-171-017.46.114.pool.telefonica.de)
[20:01:50] <Tritium> its the only solution i can think of that still uses pyinstaller
[20:02:07] <SnoopJ> but maybe there's a way that gives me two libpython entrypoints that share the rest of their dist
[20:02:31] <Tritium> what platform are you targeting?
[20:02:34] <SnoopJ> Win32
[20:02:51] *** Joins: todo75 (~todo75@user/todo75)
[20:02:57] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[20:03:03] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Quit: Leaving)
[20:03:03] <Tritium> there is a much dumber and simpler way to vendor python than pyinstaller ... the embeddable install
[20:03:25] <Tritium> and it works...100% of the time
[20:03:30] *** Joins: magla (~gelignite@d5363ac5.access.ecotel.net)
[20:03:35] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[20:04:00] <SnoopJ> Tritium, how do you vendor complex dependencies that way?
[20:04:12] <Tritium> SnoopJ: pip install into a directory
[20:04:24] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:04:31] *** Quits: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3) (Ping timeout: 245 seconds)
[20:04:35] <Tritium> i have this written up somewhere... i think.,..
[20:04:36] <SnoopJ> hm
[20:05:22] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[20:05:38] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[20:05:42] <jinsun> how about runpy.run_module https://docs.python.org/3/library/runpy.html#runpy.run_module ?
[20:06:03] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:06:07] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[20:06:14] <jinsun> it says "The -m option offering equivalent functionality from the command line" which sounds like it does the exact same thing as -m
[20:06:21] <SnoopJ> jinsun, I think that's what I was looking for, thanks
[20:06:27] <Tritium> darnit, i didn't write it up in any shareable way, i tried writing a tool to automate it...
[20:06:40] *** Joins: dld (~davidlowr@2601:197:600:1210:38c1:e5a4:b065:9eb3)
[20:06:41] *** Joins: bahamas (~lucian@84.232.140.158)
[20:06:42] <Tritium> SnoopJ: make sure to add runpy to the forced includes in pyinstaller
[20:06:47] <SnoopJ> Yes
[20:06:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:07:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[20:07:26] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 245 seconds)
[20:07:44] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[20:07:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[20:07:50] *** Joins: zebrag (~chris@user/zebrag)
[20:08:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[20:08:16] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:08:31] <CrtxReavr> SnoopJ, sure it does - used it many times.  Embeds verything as zip'd blobs inside the output .pyz file.
[20:08:39] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[20:08:40] <SnoopJ> CrtxReavr, I'm glad it works for you
[20:08:51] *** Joins: TheCat_ (~TheCat@user/z-cat)
[20:08:54] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737) (Quit: Client closed)
[20:09:05] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:ac39:3095:16e9:71b8) (Ping timeout: 248 seconds)
[20:09:05] <Tritium> Wow i was ambitious 2 years ago - run the tool to: download python embedded, download innosetup, download innoextract if tkinter was needed, download the python installer and extract tkinter if tkinter was needed, pip install everything into a directory, extract python, extract tkinter, write a shim launcher, write an installer script, build an installer .... and it all...almost...worked
[20:09:24] <SnoopJ> Tritium, 100% of the time? :)
[20:09:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[20:09:57] <Tritium> the tool worked 0% of the time with a margin of error, but all those steps manually worked 100% of the time :D
[20:10:06] <SnoopJ> I'll have to remember the embedded option in the future
[20:10:33] <SnoopJ> That could be handy for deploying a suite of tools
[20:10:51] <Tritium> I discovered it based on trying to make a windows executable for nikola... which is designed entirely incompatibly with pyinstaller
[20:10:59] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[20:11:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:11:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:11:20] *** Quits: anotheruser (~user@197.54.70.191) (Ping timeout: 246 seconds)
[20:11:40] <Tritium> (tip: don't do dynamic imports)
[20:11:41] *** Joins: sudomann (~sudomann@45.134.140.140)
[20:11:48] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 260 seconds)
[20:12:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:13:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:13:11] <SnoopJ> thankfully we don't have *those* headaches in our toolchain
[20:13:22] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:13:33] <SnoopJ> jinsun, runpy.run_module() does what I want if I pass run_name="__main__", thanks!
[20:13:59] *** Joins: shad (~shad@user/shad)
[20:14:30] *** Joins: ivii (~ivan@user/ivii)
[20:15:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:15:38] <SnoopJ> I still have to do some sys.argv juggling but at least I don't have to care about the target package's internal structure
[20:16:20] <jinsun> ah great, and weirdly it is not __main__ by default, I thought it was when I used it before
[20:16:49] *** Joins: sudomann_ (~sudomann@c-67-162-239-100.hsd1.md.comcast.net)
[20:16:51] <SnoopJ> apparently it's `mod_name + ".__main__"`
[20:16:51] *** Quits: sudomann (~sudomann@45.134.140.140) (Ping timeout: 250 seconds)
[20:16:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[20:17:15] <SnoopJ> so it offers equivalent functionality but doesn't do the same thing by default I guess :)
[20:17:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:19:49] *** Quits: magla (~gelignite@d5363ac5.access.ecotel.net) (Quit: Stay safe!)
[20:20:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.5)
[20:20:19] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[20:20:53] *** Quits: luigibu (~luigi@93.176.151.71) (Quit: WeeChat 3.5)
[20:22:01] *** Quits: maxzor (~maxzor@2a01cb04054faa00b0d6c6caafc0c1f8.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:23:55] *** Quits: Sh4dowmonk (~textual@dynamic-046-114-171-017.46.114.pool.telefonica.de) (Quit: Textual IRC Client: www.textualapp.com)
[20:24:34] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:24:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[20:24:50] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[20:25:36] *** Joins: ivii (~ivan@user/ivii)
[20:26:09] *** Joins: darksun (~darksun@user/darksun)
[20:26:14] *** Joins: audio (~audio@user/audio)
[20:26:23] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[20:26:35] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (Read error: Connection reset by peer)
[20:26:43] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:26:45] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:27:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:30:52] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:a9fa:1df4:82cf:eacd) (Quit: pvergain)
[20:31:23] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[20:34:24] *** Joins: bulletsquid (~bulletsqu@user/bulletsquid)
[20:34:56] *** Joins: fspax (~fspax@46.148.141.211)
[20:35:08] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[20:35:19] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:36:39] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[20:36:49] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[20:37:10] <bulletsquid> Hi, I made a module in python thats mostly just math functions. I use this library for a lot of my projects that are also written in python3. However, I have some C++ projects that would benefit from using that library and I don't really want to maintain the library in two languages. Is it possible to have the library in either C++ or python and have projects written in either easily use it?
[20:37:41] <exarkun> It's fairly straightforward to use a C library from both C++ and Python
[20:37:47] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[20:37:50] <exarkun> It's quite awkward to use a Python library from C++
[20:37:59] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:37:59] <exarkun> It's kind of middle-ish annoying to use a C++ library from Python
[20:38:15] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[20:38:17] <SnoopJ> bulletsquid, you can call between the two languages, yes
[20:38:28] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:39:27] <SnoopJ> getting that to the point of being easy for the end-user can range from "straightforward" to "incredible complicated" depending on what exactly you're doing. If you want to expose C++ functionality to Python, pybind11 is worth a look.
[20:39:33] <SnoopJ> incredibly*
[20:40:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:41:59] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f)
[20:41:59] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f) (Changing host)
[20:41:59] *** Joins: skapata (~Skapata@user/skapata)
[20:42:03] <Wooble> (on the other hand it's quite annoying to maintain a C library)
[20:42:17] <hodapp> how many C++-isms does the interface of your library expose? Is it something you can easily wrap with 'extern "C" { ... }' in a header and get a C-compatible interface?
[20:42:21] *** Joins: ivii (~ivan@user/ivii)
[20:42:34] *** Joins: ksynwa (~kartik@2401:4900:1f25:5f9d:7e62:d6c2:cd6a:9b8b)
[20:42:43] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 260 seconds)
[20:43:16] <ksynwa> Is it possible to have an async function as a callback in a `loop.add_reader` call? https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.add_reader
[20:43:54] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 272 seconds)
[20:44:36] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 240 seconds)
[20:45:13] <bulletsquid> exarkun: how would it look like calling the C library from python? or what should I be googling?
[20:45:33] <bulletsquid> SnoopJ: I don't want to expose any C++ stuff to python, I just want to avoid writting the same library twice
[20:45:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:45:57] <SnoopJ> bulletsquid, well, if you write it in C++ and don't want to re-write it, you need a way to use the C++ functionality from Python, no?
[20:46:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[20:46:17] *** Quits: rsx (~dummy@ppp-188-174-132-120.dynamic.mnet-online.de) (Quit: rsx)
[20:46:18] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:46:27] <bulletsquid> ah yeah you're right lol
[20:46:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:46:42] <Tritium> (if the c++ library exposes a C ABI, then you can use CFFI instead of pybind11)
[20:46:46] <SnoopJ> CFFI is also work looking at if you go for the "reduce the API to C" approach, but if it's in C++ anyway, pybind11 requires less fiddling
[20:46:51] <SnoopJ> argh, worth*
[20:46:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[20:47:19] *** Quits: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a) (Read error: Connection reset by peer)
[20:47:27] <Tritium> If the library doesn't already expose a C ABI, don't bother
[20:47:29] *** TheCat_ is now known as TheCat
[20:47:38] *** Joins: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a)
[20:48:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[20:48:16] <SnoopJ> There's also cppyy but it's a little more convoluted and has more restrictions
[20:48:43] <Tritium> CFFI is a bit more widely compatible with python implementations and a bit more mature, but not enough to make writing c code worth it.
[20:49:13] <exarkun> You could write it in Rust
[20:49:40] <hodapp> what's the situation like calling Rust from Python? ...assuming rewriting in a 3rd language somehow makes sense
[20:50:02] <exarkun> pyo3 will generate python bindings for your rust code more or less automatically
[20:50:07] *** Joins: fling (~fling@user/fling)
[20:50:20] <hodapp> good to know
[20:51:52] *** Joins: lakrass (~lakrass@user/lakrass)
[20:51:53] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:52:39] *** Quits: ubert (~Thunderbi@p548c8d44.dip0.t-ipconnect.de) (Quit: ubert)
[20:52:39] *** ubert1 is now known as ubert
[20:53:43] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[20:53:45] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:53:56] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:54:50] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:55:02] *** Joins: wakeup (~wakeup@user/wakeup)
[20:55:53] *** Joins: matsaman (~matsaman@user/matsaman)
[20:56:09] *** Joins: djapo (~archangel@user/djapo)
[20:56:17] *** Quits: sudomann_ (~sudomann@c-67-162-239-100.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[20:56:33] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[20:57:01] <bulletsquid> oh ok, I see. that should be enough to get me going. thanks!
[20:57:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:57:56] *** Joins: wyclif (~wyclif@user/wyclif)
[20:58:39] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[21:01:00] *** Quits: LiTHiuM (~Imk0tter@68.sub-174-204-132.myvzw.com) (Remote host closed the connection)
[21:01:02] *** dcaro is now known as dcaro_away
[21:01:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:5019:823:a50e:5ee6)
[21:01:50] *** Quits: Staunch (~Staunch@137.83.202.220) (Remote host closed the connection)
[21:02:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:03:28] *** Joins: wyclif (~wyclif@user/wyclif)
[21:03:55] *** Quits: MeanEYE (~MeanEYE__@87.116.162.168) (Quit: Leaving)
[21:04:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[21:08:23] *** Quits: sirodoht (~sirodoht@cust145-dsl51.idnet.net) (Ping timeout: 260 seconds)
[21:09:35] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[21:09:38] *** Joins: MeanEYE (~MeanEYE__@87.116.162.168)
[21:10:12] *** Quits: sreve (~quassel@p4ff44df3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:13:18] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:13:18] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:13:18] *** Joins: nortoh (~nortoh@user/nortoh)
[21:13:49] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[21:14:04] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[21:15:37] *** Joins: sreve (~quassel@p54a7110f.dip0.t-ipconnect.de)
[21:15:39] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:15:53] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[21:16:31] *** Quits: mihael (~mihael@202.137.114.5) (Quit: Client closed)
[21:16:54] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[21:17:06] *** Quits: Telvana2 (~capo@user/telvana) (Read error: Connection reset by peer)
[21:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:18:32] *** Joins: harry (~harry@49.36.179.174)
[21:20:23] *** Joins: Telvana (~capo@user/telvana)
[21:20:36] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[21:20:50] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:20:53] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[21:21:56] *** Joins: xkuru (~xkuru@user/xkuru)
[21:22:36] *** Quits: sreve (~quassel@p54a7110f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:22:41] *** Joins: Telvana (~capo@user/telvana)
[21:22:58] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[21:23:33] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[21:23:37] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:24:48] *** Joins: Giovanni (~Giovanni@176.54.209.228)
[21:24:56] *** Quits: Giovanni (~Giovanni@176.54.209.228) (Read error: Connection reset by peer)
[21:25:10] <mickey> sentences is a dataframe with like 2000 rows. zf["id"] is a list of some 300K elements, zf["pca"] is a list of the same size and order as zf["id"]. why is this wrong? sentences["pca"] = zf["pca"][np.where(zf["id"] == sentences.Id)[0][0]]
[21:25:26] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:27:09] *** Quits: tobybl_ (~tobybl@132.202.200.146.dyn.plus.net) (Remote host closed the connection)
[21:27:09] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[21:28:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[21:28:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:28:41] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[21:29:31] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:30:40] *** Joins: bahamas (~lucian@84.232.140.158)
[21:30:41] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[21:30:50] <jinsun> if zf["id"] has 300k elements and sentences.Id has 2000, then you can't do `zf["id"] == sentences.Id`
[21:31:03] <jinsun> they should be of the same length to be able to ==
[21:31:03] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:31:05] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[21:31:14] *** Joins: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:1a:ce91:3d29:d469)
[21:31:25] *** Joins: Auron (Auron956@user/auron)
[21:31:43] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[21:32:00] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[21:32:27] <mickey> i dont care about the elements of zf that don't have the same id
[21:32:58] <mickey> like, for each row, i want to use the Id of that row, find it's position in zf["id"], and then fetch the same index in zf["pca"]
[21:34:06] <mickey> i think im messing stuff up because even if it worked i couldnt use a 1024 dimensions vector in a dataframe column :/
[21:34:10] *** Joins: sirodoht (~sirodoht@cust145-dsl51.idnet.net)
[21:34:28] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[21:34:37] *** Joins: src (~src@user/src)
[21:35:44] <jinsun> what type is zf? is it a dictionary? or a dataframe?
[21:36:11] <mickey> a dictionary
[21:36:22] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 260 seconds)
[21:36:35] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:36:58] <mickey> zf["id"] has a 300k list, and zf["pca"] has a 300k list of 1024-dimensions ndarrays
[21:37:20] *** Joins: dez (uid92154@user/dez)
[21:37:48] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[21:38:58] <jinsun> okay it would be better to make a dict with the ids as keys and pca as values, instead of having 2 lists
[21:39:35] <jinsun> then you could just do sentences["pca"] = sentences.Id.map(id_to_pca_dict)
[21:40:15] <jinsun> you can make that dict by doing id_to_pca_dict = dict(zip(zf["id"], zf["pca"]))
[21:40:28] *** Quits: sirodoht (~sirodoht@cust145-dsl51.idnet.net) (Ping timeout: 260 seconds)
[21:40:47] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[21:41:57] <mickey> sentences["pca"] = sentences.Id.map(id_to_pca_dict) sets pca to nans
[21:42:08] <mickey> the ids exist in that new dict though, i just verified
[21:42:15] *** Joins: jpn (~jpn@user/jpn)
[21:43:47] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:44:42] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 272 seconds)
[21:45:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[21:45:13] *** Joins: rick123 (~rick123@157.245.192.96)
[21:45:28] *** Joins: kostkon_ (~androirc@2a02:1388:408b:3a93:dad4:fbc1:52d9:8c47)
[21:45:59] <rick123> Reading this - https://docs.python.org/3/tutorial/modules.html - while talking about pyc it says " Second, it does not check the cache if there is no source module." - What is the meaning of source module ?
[21:46:29] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:48:05] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[21:48:06] <SnoopJ> rick123, if there isn't a .py, Python won't look for the associated .pyc in the cache
[21:49:25] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377) (Ping timeout: 240 seconds)
[21:50:27] <rick123> Where will the __pycache__ directory be created/show up ?
[21:50:44] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[21:51:03] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:51:14] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[21:51:27] <SnoopJ> Next to the source files whose compilation is being cached
[21:51:35] *** Joins: en7ropy (~en7ropy@37.120.130.4)
[21:51:55] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:52:17] *** Joins: fling (~fling@user/fling)
[21:52:20] *** Quits: cheater (~Username@user/cheater) (Read error: Connection reset by peer)
[21:53:09] *** Joins: cheater (~Username@user/cheater)
[21:53:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:54:16] <rick123> ok, thanks SnoopJ
[21:55:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[21:55:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:56:20] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:56:40] *** Joins: cation (cation@user/cation)
[21:57:00] <Wooble> rick123: in general, you don't have to think about the cache and indeed you can turn it off which almost no noticable effects.
[21:57:09] <Wooble> s/which/with/
[21:57:15] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:5c2a:80c9:a714:be65) (Remote host closed the connection)
[21:57:52] *** Joins: EgonX (~EgonX@38.66.76.50)
[21:58:52] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[21:58:53] *** Quits: EgonX (~EgonX@38.66.76.50) (Remote host closed the connection)
[21:59:08] *** Quits: kostkon_ (~androirc@2a02:1388:408b:3a93:dad4:fbc1:52d9:8c47) (Ping timeout: 260 seconds)
[21:59:13] *** Quits: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r) (Quit: WeeChat 3.4.1)
[21:59:22] *** Joins: sobkas (~sobkas@95.175.17.217)
[21:59:26] *** Joins: EgonX (~EgonX@38.66.76.50)
[21:59:48] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:59:56] *** Joins: jbara (~jbara@160.156.52.251)
[22:00:00] *** Joins: pr3d4t0r (~pr3d4t0r@user/pr3d4t0r)
[22:00:17] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Remote host closed the connection)
[22:01:04] <rick123> Wooble: Got it!
[22:01:18] *** Quits: LuKaRo (~LuKaRo@p200300dfa72b1d372a0e3d5e954163f2.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[22:02:20] <mickey> jinsun if you have the time to help out here.. :)
[22:03:19] *** Quits: yhnujmikV (~yhnujmikV@193.138.218.215) (Quit: WeeChat 3.5)
[22:03:20] *** Joins: LuKaRo_ (~LuKaRo@p4fc32565.dip0.t-ipconnect.de)
[22:03:25] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:04:29] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Quit: ZNC 1.8.2 - https://znc.in)
[22:05:24] *** Quits: saroy (~Sandipan@103.24.86.185) (Remote host closed the connection)
[22:06:17] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Client Quit)
[22:06:20] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:6403:7ecc:1ad1:f49f)
[22:07:29] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:07:58] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Read error: Connection reset by peer)
[22:08:00] <mickey> found it. one had Id as int and one as str
[22:08:10] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:08:21] *** Joins: XV8 (~XV8@2601:5cb:c001:50::13f0)
[22:08:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[22:09:47] <jinsun> mickey: okay great, I just made a small example that works fine https://bpa.st/B5FQ, and I was going to suggest checking if the ids are same in zf and sentence after
[22:10:26] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f438:106:9b95:3ff8)
[22:11:13] <Payam> hi. Any vim user that know how to activate and see virtual environment?
[22:11:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[22:11:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:11:47] *** Quits: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se) (Ping timeout: 268 seconds)
[22:11:48] <matsaman> Payam: see?
[22:11:50] *** Joins: CombatVet (~c4@user/combatvet)
[22:11:51] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[22:11:57] <Payam> what?
[22:12:05] <matsaman> Payam: what do you mean 'see' the virtual environment?
[22:12:10] <Payam> in airline
[22:12:15] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[22:13:54] *** Joins: tusko (~yeurt@user/tusko)
[22:14:20] <matsaman> Payam: the normal way to activate a virtual env is to run 'source path/to/virtual/env/bin/activate' (& deactivate with 'deactivate')
[22:14:56] <Payam> Yeah I know. I was thinking to be able to activate it within vim and show it in airline
[22:15:08] <matsaman> python -m venv foo; source foo/bin/activate; pip list; deactivate
[22:15:20] <matsaman> Payam: is 'airline' some software thing? If so it has a terrible name
[22:15:34] <matsaman> "vim-airline"?
[22:15:35] <Payam> yes. it is a status bar in vim
[22:15:38] <Payam> yes
[22:15:39] <matsaman> ok
[22:15:46] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[22:16:22] *** Quits: nolan_ (~nolan_@user/nolan/x-2434303) (Ping timeout: 272 seconds)
[22:16:32] *** Joins: Guddu (~Guddu@49.36.21.164)
[22:16:49] <matsaman> Payam: I want to say, the VIRTUAL_ENV env var will indicate
[22:17:09] <Guddu> Is it possible to generate a beep audible alert using python text based application accessed over SSH to a remote linux terminal?
[22:17:10] <Guddu> I tried sys.stdout.write('\a') but it did not work.
[22:18:13] *** Joins: bahamas (~lucian@84.232.140.158)
[22:18:18] <matsaman> if the software & hardware available supports it at all, yes
[22:18:24] <SnoopJ> Guddu, is the remote terminal configured to beep when the BEL character is sent?
[22:18:30] <matsaman> but you'll have to try more than one thing, unless there's a lib readymade that tries them all
[22:18:58] *** Quits: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[22:19:28] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:20:06] *** Joins: jpn (~jpn@user/jpn)
[22:20:21] *** Joins: mmdbalkhi (~Thunderbi@2.186.4.55)
[22:20:21] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff) (Ping timeout: 250 seconds)
[22:20:35] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[22:20:56] <Payam> nedbat, are you available?
[22:21:07] *** Joins: Staunch (~Staunch@134.238.165.172)
[22:21:33] *** Quits: mmdbalkhi (~Thunderbi@2.186.4.55) (Client Quit)
[22:21:53] *** Joins: wyclif (~wyclif@user/wyclif)
[22:22:04] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[22:22:25] *** Quits: jbara (~jbara@160.156.52.251) (Quit: WeeChat 3.4.1)
[22:22:28] <Guddu> SnoopJ, Yes. Also...In Putty I tried all these. https://prnt.sc/39xIyfmtUYxp
[22:22:44] <Guddu> And in /etc/inputrc this line is commented # set bell-style none
[22:22:59] *** Joins: jjasghar1 (~jjasghar@idlerpg/player/jjasghar)
[22:23:35] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:23:52] *** Joins: dgg (~dgg@34.red-88-1-111.dynamicip.rima-tde.net)
[22:23:56] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[22:24:06] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 245 seconds)
[22:24:21] *** Joins: funhouse (~funhouse@user/funhouse)
[22:24:44] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 268 seconds)
[22:25:18] <SnoopJ> Guddu, what you're doing works for me. If it's not working in your application I would guess either something between your program and the remote terminal swallows the BEL character, or the configuration on the remote isn't what you think it is.
[22:26:26] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[22:26:55] <Guddu> SnoopJ, In my setup, I am doing SSH to a Debian VM on my windows host and running the python script on the debian.
[22:27:05] <Guddu> I am using putty for ssh
[22:27:46] <exarkun> Used to be (I think), `coverage combine` would rewrite filenames based on the `[paths]source` configuration from `.coveragerc` but I don't see that happening anymore.  Did I break it or did something change in coverage.py?
[22:27:52] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:28:03] *** Quits: nomic (~nomic@85.203.36.64) (Quit: Leaving)
[22:28:05] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 252 seconds)
[22:28:19] <Guddu> I tried replacing SSH with Telnet but that did not help.
[22:28:21] <exarkun> Or, maybe more useful, how do I get my coverage reports with different paths in them to unify into a coherent single report?
[22:28:27] <dgg> Hi all
[22:28:27] *** Quits: pydev (~pydev3@2001:b07:5d28:551:22e8:cddf:3a88:5d30) (Ping timeout: 260 seconds)
[22:28:45] <matsaman> hi
[22:29:34] <dgg> is there anyone here who regularly works in R and that have had to deal with creating complex data structures? For example, I want now to create an object with various built-in datatypes and some user-defined classes.
[22:29:42] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:29:59] <dgg> Am I overdoing this? I have been suggested using lists(lists(lists(.... but that sounds pretty scary to me
[22:29:59] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-64.range86-168.btcentralplus.com)
[22:30:45] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:30:45] <exarkun> dgg: What is the connection to Python?
[22:30:54] *** Joins: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net)
[22:31:04] <hodapp> dgg: look at libraries from the Hadleyverse, like dplyr
[22:31:20] *** Quits: jjasghar1 (~jjasghar@idlerpg/player/jjasghar) (Quit: The Lounge - https://thelounge.chat)
[22:31:42] <hodapp> they solve a lot of problems that come from trying to use R for actual programming
[22:31:44] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:31:48] <dgg> exarkun, well since I used to work normally in Python it occurred to me that someone here may have been in the same situation to me and could suggest something I can work with
[22:32:30] <dgg> hodapp, thanks.
[22:32:38] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[22:32:40] <hodapp> my situation is more or less that - 'normal' software development background (including Python), learned R in grad school
[22:33:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:33:59] <SnoopJ> Guddu, I am also using PuTTY. It supports what you're trying to do, as long as you have it configured to beep on this character, which is an option that can be turned off.
[22:34:29] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[22:34:50] *** Joins: Jacques (~Jacques@172-223-077-135.res.spectrum.com)
[22:34:52] <Guddu> SnoopJ, Where else can it be turned off? I was looking at bell option of putty and also /etc/inputrc of my remote host.
[22:34:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[22:35:18] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:35:22] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:35:26] <SnoopJ> It should only matter on the remote terminal. If it's not beeping and that option is on, the character is probably not being sent to the remote at all.
[22:35:31] *** Joins: Xplorator (~Xplorator@176.166.206.65)
[22:35:37] <SnoopJ> (I don't know what would cause this, though)
[22:35:42] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 250 seconds)
[22:35:50] *** Joins: Gustavo6046 (gustavo604@user/gustavo6046)
[22:36:23] *** gitesh is now known as gitesh12
[22:36:31] *** Joins: dagb (~dagb@255.141-0-92.customer.lyse.net)
[22:36:35] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[22:36:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:37:43] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:38:02] *** gitesh12 is now known as gitesh
[22:38:43] *** Joins: todo75 (~todo75@user/todo75)
[22:39:29] <Payam> Hi, I am trying to test function as this : https://bpa.st/KFDA and I try to mock the asynclient.get function; However I get an error saying that coroutine 'asyncmock mixin._execute_mock_call' was never awaited.
[22:39:31] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 245 seconds)
[22:39:39] *** Quits: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:1a:ce91:3d29:d469) (Ping timeout: 260 seconds)
[22:40:44] *** Quits: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a) (Ping timeout: 252 seconds)
[22:40:59] *** Joins: Psybur (~Psybur@75.145.205.201)
[22:41:08] *** Joins: jayray (~jayray@user/jayray)
[22:41:30] <dagb> trying to write a small python program which periodically runs a program in the background. My code will normally just display some of the values returned from that program. But when the user interacts with my code, user input will be blocking. Am I right in thinking that asyncio is the wrong choice here?
[22:42:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[22:42:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:43:11] *** Joins: Dr_Tea (~Dr_Tea@2a02:587:4f13:e100:b1aa:4b3e:45e1:10da)
[22:43:23] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 260 seconds)
[22:43:51] *** Joins: jjasghar1 (~jjasghar@idlerpg/player/jjasghar)
[22:44:14] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[22:44:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[22:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[22:44:21] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f1ec-d7f3-37e1-032c.res6.spectrum.com)
[22:44:40] <Payam> I don
[22:44:49] <Payam> t I dont use asyncio for these type of problem.
[22:45:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:45:25] <Payam> You can run your program, sleep, and run it again
[22:45:31] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[22:45:41] <Payam> a bash script would solve that unless you want to avoid that by some reason
[22:47:27] *** Joins: vlado1 (~vlado@45.132.225.130)
[22:47:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d) (Quit: Leaving)
[22:48:10] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[22:48:13] *** Joins: _rai_ (~raifordha@c-174-50-191-139.hsd1.ca.comcast.net)
[22:48:28] *** Joins: Barones (~Barones@user/Barones)
[22:48:42] <dagb> Payam: but if the user is using minutes entering text, and I want the background polling to happen every second.....
[22:49:08] *** Quits: harry (~harry@49.36.179.174) (Quit: Connection closed)
[22:49:22] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:50:12] *** Joins: todo75 (~todo75@user/todo75)
[22:50:34] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[22:52:27] *** Joins: The_Loko (~The_Loko@79.116.41.227)
[22:52:38] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: leaving)
[22:52:50] *** Joins: blei (~blei@user/blei)
[22:53:54] *** Quits: Jacques (~Jacques@172-223-077-135.res.spectrum.com) (Ping timeout: 250 seconds)
[22:54:09] *** Quits: MeanEYE (~MeanEYE__@87.116.162.168) (Ping timeout: 250 seconds)
[22:55:57] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:56:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:57:35] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:58:13] *** Joins: fling (~fling@user/fling)
[22:58:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a) (Remote host closed the connection)
[22:58:37] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:58:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[22:58:42] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:00:33] *** Quits: jjasghar1 (~jjasghar@idlerpg/player/jjasghar) (Quit: The Lounge - https://thelounge.chat)
[23:00:44] *** Quits: schumaml (~schumaml@dslb-088-067-050-037.088.067.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[23:00:56] *** Joins: msalvatore (~msalvator@c-174-60-145-36.hsd1.pa.comcast.net)
[23:01:32] *** Quits: jess (~jess@libera/staff/cat/jess) ()
[23:02:07] *** Joins: mentallyinspired (~mentallyi@h-85-24-146-18.A400.priv.bahnhof.se)
[23:02:14] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[23:02:36] *** Joins: dtux (~dtux@2601:646:8f00:3f2:3c69:11c3:6371:e550)
[23:02:49] *** Joins: schumaml (~schumaml@dslb-094-216-170-245.094.216.pools.vodafone-ip.de)
[23:03:24] *** Joins: ancom (~ancom@user/ancom)
[23:03:27] *** Joins: jesopo (~jess@libera/staff/cat/jess)
[23:03:32] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[23:03:58] <ancom> Which backend should I use for Python?
[23:04:20] *** Joins: Lynix (~raphael@5.253.206.212)
[23:04:40] <SnoopJ> ancom, can you explain what you mean by "backend?"
[23:04:47] <ancom> Like Django etc
[23:04:58] <Payam> depends
[23:05:01] <ancom> on?
[23:05:15] <Payam> size of proj
[23:05:22] <SnoopJ> ancom, are you asking which web server framework to use?
[23:05:26] <Payam> ect
[23:05:35] <ancom> SnoopJ, I don't know how to refer to it
[23:05:43] <ancom> but I guess that's what I mean
[23:05:53] *** Quits: jesopo (~jess@libera/staff/cat/jess) (Client Quit)
[23:06:00] <SnoopJ> "backend" could mean a lot of different things depending on what you're doing, but if you're asking about writing a web server, Django is a pretty common choice
[23:06:15] *** Joins: jpn (~jpn@user/jpn)
[23:06:28] <ancom> I heard there is Flaskl
[23:06:30] <ancom> Flask*
[23:06:35] <Payam> yes
[23:06:35] <SnoopJ> If you're just writing an API, sometimes Flask or FastAPI are more common choices
[23:06:51] <ancom> What's the difference tho
[23:07:00] <ancom> are you talking about REST stuff only
[23:07:07] <Payam> features
[23:07:16] *** Joins: nomic (~nomic@85.203.36.64)
[23:07:29] <ancom> what features does Django have that Flask/FastAPI don't?
[23:07:50] <hodapp> like 15,400 of them I'll never learn
[23:07:54] <SnoopJ> There are a lot more packages developed for Django that extend its functionality
[23:07:57] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:08:08] <msalvatore> https://hackr.io/blog/flask-vs-django
[23:08:39] <SnoopJ> and Flask doesn't really have tools for data modeling at all out of the box (where Django and FastAPI do)
[23:09:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:09:08] *** Quits: dtux (~dtux@2601:646:8f00:3f2:3c69:11c3:6371:e550) (Ping timeout: 260 seconds)
[23:09:24] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Quit: Ping timeout (120 seconds))
[23:10:43] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[23:11:47] <Lynix> Hi, i'm trying to nummerically integrate using python. The problem is that the integral function includes matrices and it's output is a matrix too. I'm really not sure how to solve an Integral like that in Python since scipy.integrate.quad doesn't work with matrices. This is the Integral i'm trying to solve. A and V are matrices http://mathb.in/72135
[23:11:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:12:06] *** Quits: pulseaudio (~pulseaudi@223.223.136.192) (Ping timeout: 250 seconds)
[23:12:11] *** Joins: greedom (~greedom@p200300de67155d0095fda7d63211cfcc.dip0.t-ipconnect.de)
[23:12:22] <ancom> I'm a complete noob
[23:12:33] <ancom> not sure whether to use django, flash or fastapi
[23:12:40] <ancom> flask
[23:13:16] <exarkun> ancom: see http://www.extremeprogramming.org/rules/spike.html
[23:13:41] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[23:15:13] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 248 seconds)
[23:15:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:15:38] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:16:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[23:17:10] <anonymous1> ancom: Django is a full-fledged web framework with a lot of features and functionality already built-in.
[23:17:13] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[23:17:16] *** Joins: diverdude (~user@x50d24df2.cust.hiper.dk)
[23:17:34] <diverdude> Hi, does pip install use the setup.py file?
[23:17:35] *** gentooclimax is now known as climax
[23:17:47] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:17:51] <SnoopJ> diverdude, sometimes
[23:17:54] <anonymous1> ancom: Flask is a "micro-framework", meaning if you want some functionality, you either have to install an extra module/library, or write it yourself.
[23:17:59] <diverdude> SnoopJ: sometimes?
[23:18:14] <diverdude> SnoopJ: what decides if its using it?
[23:18:24] <SnoopJ> diverdude, setup.py is an artifact of setuptools, but not all modern packages use setuptools as their build system
[23:18:24] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[23:18:56] <SnoopJ> so a modern package's pyproject.toml might declare some other build system
[23:19:08] <diverdude> SnoopJ: ok... are people not meant to write the setup.py file manually?
[23:19:17] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 246 seconds)
[23:19:19] <diverdude> ahh ok
[23:19:22] <SnoopJ> diverdude, it's generally intended to be written manually
[23:19:32] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:19:42] <SnoopJ> although setup.cfg is usually a better choice unless you *really* need to execute code (this is uncommon in general)
[23:20:39] <exarkun> diverdude: that is, setup.py is old and you used to have to have one and you used to have to write it by hand
[23:20:52] <exarkun> diverdude: and now there are other options and you don't have to have a setup.py at all, usually
[23:21:14] <SnoopJ> it's changed quite a lot over the last decade
