[00:07:05] *** Joins: rockcavera (~rc@192.12.115.205)
[00:07:05] *** Quits: rockcavera (~rc@192.12.115.205) (Changing host)
[00:07:05] *** Joins: rockcavera (~rc@user/rockcavera)
[00:12:03] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Remote host closed the connection)
[00:13:25] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[00:28:59] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[00:29:23] *** Joins: supakeen (~user@python/site-packages/supakeen)
[00:38:33] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[00:38:59] *** Quits: max22- (~maxime@2a01cb0883359800ff8813d65c159095.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:40:50] *** Joins: max22- (~maxime@2a01cb08833598006ae6e93a31625c5e.ipv6.abo.wanadoo.fr)
[00:46:33] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:55:06] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 252 seconds)
[01:19:01] *** Joins: rockcavera (~rc@192.12.115.223)
[01:19:01] *** Quits: rockcavera (~rc@192.12.115.223) (Changing host)
[01:19:01] *** Joins: rockcavera (~rc@user/rockcavera)
[01:56:29] <FromDiscord> <treeform> In the nim type system can you say all types but `ref` types but `object` type? Like `ref array`, `ref string` `ref enum` but not ref object?
[01:59:29] <FromDiscord> <clyybber> `ref[not object]`
[01:59:31] <FromDiscord> <treeform> this appears to work `type NotObject = tuple | enum | proc | ptr | distinct | array | set | seq` not sure if there is a better way
[02:00:18] <FromDiscord> <treeform> In reply to @Clyybber "`ref[not object]`": `ref[not object]` works thanks!
[02:03:17] *** Quits: max22- (~maxime@2a01cb08833598006ae6e93a31625c5e.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:14:15] <FromDiscord> <Ricky Spanish> how do you check length/size of table?
[02:16:37] <FromDiscord> <treeform> In reply to @Ricky Spanish "how do you check": `table.len()`
[02:17:03] <FromDiscord> <treeform> Is it just me or is `Option` is basically same thing as a `ref` ?
[02:17:28] <FromDiscord> <vindaar> huh?‚Üµ(@treeform)
[02:17:53] <FromDiscord> <vindaar> if you abuse a ref such that `nil` is `none` then i suppose it's a poor man's `Option`?
[02:18:53] <FromDiscord> <treeform> a simpler option? no imports, nil easier to work with?
[02:18:57] <FromDiscord> <checkersai> In reply to @treeform "Is it just me": No?
[02:19:12] <FromDiscord> <vindaar> reference semantics vs. value semantics, access give SIGSEGV vs. raises an exception etc
[02:19:41] <FromDiscord> <dom96> You can't modify the value that's inside an Option
[02:19:44] <FromDiscord> <vindaar> they might share similarities, but their intention / use case is very different
[02:21:32] <FromDiscord> <checkersai> In reply to @dom96 "You can't modify the": Yes you can
[02:22:48] <FromDiscord> <dom96> oh you're right, there is a `get` that returns a `var`
[02:24:24] <FromDiscord> <treeform>  https://media.discordapp.net/attachments/371759389889003532/857740465239097394/unknown.png
[02:24:37] <FromDiscord> <treeform> Nearly identical API
[02:26:13] <FromDiscord> <vindaar> except that the `Option` case is‚Üµ‚óè clearer to the reader‚Üµ‚óè you don't have to deal with `nil` checks (which are now ambiguous between pointer types from a wrapped lib for instance and this)‚Üµ‚óè you still have reference semantics when copying the object
[02:26:18] <FromDiscord> <checkersai> Options are safer because they do more to force you to check
[02:26:25] <FromDiscord> <checkersai> Its purpose is clearer
[02:26:33] <FromDiscord> <vindaar> and if you ever forget to check if it's nil you get an exception in the `Option` case
[02:26:42] <FromDiscord> <checkersai> And an Option[int] is allocated on the stack
[02:30:06] <FromDiscord> <checkersai> Side note, I'm not a big fan of how you can ommit parenthesis when calling functions with `x.f`‚ÜµLike with `x.get` vs `x.get()`
[02:30:42] <FromDiscord> <checkersai> Makes it easy to confuse between field access and calling a function
[02:31:06] <FromDiscord> <checkersai> (edit) "field" => "variable"
[02:31:33] <FromDiscord> <treeform> but also allows you to start with a field and promote it to a getter/setter later on.
[02:32:05] <FromDiscord> <checkersai> If it looks like a field it should be a field and if it's a function it should look like a function imo
[02:32:16] <FromDiscord> <checkersai> C# does this too and I don't like it there either
[02:32:46] <FromDiscord> <gerwy> then make it look like a function , parenthesis are optional, so you can put them if you prefer it
[02:33:34] <FromDiscord> <checkersai> But others might not which makes looking at their source code a bit harder
[02:36:00] <FromDiscord> <dom96> `obj.field = 42` is this a function call? üôÇ
[02:37:38] <FromDiscord> <treeform> ^ that's a macro for sure
[02:39:02] <FromDiscord> <checkersai> In reply to @dom96 "`obj.field = 42` is": It could be
[02:39:53] <FromDiscord> <checkersai> Since functions can return vars‚Üµ`someOption.get() = 42` is valid
[02:41:08] <FromDiscord> <dom96> not only that, Nim allows you to define setters: https://nim-lang.org/docs/manual.html#procedures-properties
[02:45:37] <FromDiscord> <Ricky Spanish> sent a code paste, see https://play.nim-lang.org/#ix=3r2d
[02:48:43] <FromDiscord> <treeform> you probably need to `import tables`
[02:49:08] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[02:49:08] *** Quits: Schnouki (~schnouki@2a01:e0a:80a:9e80:8a75:82c8:c1f9:1792) (*.net *.split)
[02:49:08] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[02:49:08] *** Quits: notchris_ (sid181145@id-181145.stonehaven.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: sagax (~sagax@213.138.71.146) (*.net *.split)
[02:49:09] *** Quits: Epsilon (~Epsilon@user/epsilon) (*.net *.split)
[02:49:09] *** Quits: vicfred (~vicfred@user/vicfred) (*.net *.split)
[02:49:09] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[02:49:10] *** Quits: federico3 (~quassel@163.172.164.163) (*.net *.split)
[02:49:10] *** Quits: fputs (~fputs@67.59.83.166) (*.net *.split)
[02:49:10] *** Quits: kasperk81 (~kasperk81@dsl-hkibng22-54f985-221.dhcp.inet.fi) (*.net *.split)
[02:49:10] *** Quits: arkurious (~arkurious@user/arkurious) (*.net *.split)
[02:49:11] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[02:49:12] *** Quits: aeverr (~deodex@ai126162220090.56.access-internet.ne.jp) (*.net *.split)
[02:49:12] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (*.net *.split)
[02:49:12] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (*.net *.split)
[02:49:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:49:12] *** Quits: asd (~noname@user/asd) (*.net *.split)
[02:49:12] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[02:49:12] *** Quits: TakinOver (~TakinOver@47.150.206.35) (*.net *.split)
[02:49:12] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[02:49:12] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (*.net *.split)
[02:49:13] *** Quits: kots (~kots@li1473-207.members.linode.com) (*.net *.split)
[02:49:13] *** Quits: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[02:49:13] *** Quits: koltrast (cf6babc4@h77-53-57-114.cust.a3fiber.se) (*.net *.split)
[02:49:13] *** Quits: rockcavera (~rc@user/rockcavera) (*.net *.split)
[02:49:13] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (*.net *.split)
[02:49:13] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[02:49:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (*.net *.split)
[02:49:13] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[02:49:14] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[02:49:14] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[02:49:14] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (*.net *.split)
[02:49:15] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[02:49:15] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (*.net *.split)
[02:49:15] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (*.net *.split)
[02:49:15] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca) (*.net *.split)
[02:49:15] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (*.net *.split)
[02:49:15] *** Quits: ormiret (sid314108@id-314108.tooting.irccloud.com) (*.net *.split)
[02:49:16] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (*.net *.split)
[02:49:17] *** Quits: ayyy_lmao (uid505201@id-505201.charlton.irccloud.com) (*.net *.split)
[02:49:17] *** Quits: petrj (~petrj@dsl-hkibng22-54f985-221.dhcp.inet.fi) (*.net *.split)
[02:49:17] *** Quits: mikko (~mikko@2a02:7b40:d418:6a61::1) (*.net *.split)
[02:49:17] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[02:49:17] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[02:49:17] *** Quits: systemdsucks (~systemdsu@user/systemdsucks) (*.net *.split)
[02:49:17] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (*.net *.split)
[02:49:18] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (*.net *.split)
[02:49:18] *** Quits: saem[m] (~saemmatri@2001:470:69fc:105::2b1e) (*.net *.split)
[02:49:18] *** Quits: DrWhax (~DrWhax@37.218.247.209) (*.net *.split)
[02:49:18] *** Quits: euantorano (sid180289@id-180289.brockwell.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: robertmeta (sid514@user/robertmeta) (*.net *.split)
[02:49:19] *** Quits: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4) (*.net *.split)
[02:49:19] *** Quits: dmu (~darkmusic@user/darkmusic) (*.net *.split)
[02:49:19] *** Quits: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser) (*.net *.split)
[02:49:20] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297::) (*.net *.split)
[02:49:20] *** Quits: dbohdan (~dbohdan@user/dbohdan) (*.net *.split)
[02:49:20] *** Quits: Clonkk[m] (~rfcmatrix@2001:470:69fc:105::34a8) (*.net *.split)
[02:49:20] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[02:49:20] *** Quits: Oddmonger (~Oddmonger@user/oddmonger) (*.net *.split)
[02:49:20] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[02:49:20] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[02:49:21] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[02:50:10] *** Joins: mjsir911 (~bnc@user/mjsir911)
[02:50:10] *** Joins: emery (~quassel@2a03:3b40:fe:ab::1)
[02:50:10] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[02:50:10] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[02:50:10] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[02:50:10] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-24-76-69-197-62.dsl.bell.ca)
[02:50:10] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[02:50:49] *** Joins: arkanoid (~jack@2-238-151-49.ip244.fastwebnet.it)
[02:50:49] *** Joins: koltrast (cf6babc4@h77-53-57-114.cust.a3fiber.se)
[02:51:28] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[02:51:28] *** Joins: Clonkk[m] (~rfcmatrix@2001:470:69fc:105::34a8)
[02:51:28] *** Joins: mahlon (~mahlon@martini.nu)
[02:51:28] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[02:51:28] *** Joins: Oddmonger (~Oddmonger@user/oddmonger)
[02:51:28] *** Joins: dom96 (~dom@mail.nim-lang.org)
[02:51:28] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[02:51:28] *** iridium.libera.chat sets mode: +o dom96
[02:51:33] *** Joins: fputs (~fputs@67.59.83.166)
[02:51:33] *** Joins: kasperk81 (~kasperk81@dsl-hkibng22-54f985-221.dhcp.inet.fi)
[02:51:33] *** Joins: vicfred (~vicfred@user/vicfred)
[02:51:33] *** Joins: flynn (~mcbloch@user/flynn)
[02:51:33] *** Joins: arkurious (~arkurious@user/arkurious)
[02:51:33] *** Joins: federico3 (~quassel@163.172.164.163)
[02:51:33] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[02:51:55] *** Joins: Epsilon (~Epsilon@user/epsilon)
[02:52:00] *** Joins: rockcavera (~rc@user/rockcavera)
[02:52:00] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[02:52:00] *** Joins: supakeen (~user@python/site-packages/supakeen)
[02:52:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:52:00] *** Joins: [R] (~rs@genoce.org)
[02:52:00] *** Joins: ozzz (~oz@46.49.41.80)
[02:52:13] *** Joins: Schnouki (~schnouki@2a01:e0a:80a:9e80:8a75:82c8:c1f9:1792)
[02:52:13] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[02:52:13] *** Joins: notchris_ (sid181145@id-181145.stonehaven.irccloud.com)
[02:52:13] *** Joins: sagax (~sagax@213.138.71.146)
[02:52:35] *** Joins: petrj (~petrj@dsl-hkibng22-54f985-221.dhcp.inet.fi)
[02:52:35] *** Joins: ayyy_lmao (uid505201@id-505201.charlton.irccloud.com)
[02:52:35] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[02:52:35] *** Joins: Ekho (~Ekho@user/ekho)
[02:52:35] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[02:52:35] *** Joins: systemdsucks (~systemdsu@user/systemdsucks)
[02:52:35] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[02:53:26] *** Joins: aeverr (~deodex@ai126162220090.56.access-internet.ne.jp)
[02:53:28] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[02:53:28] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[02:53:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:53:28] *** Joins: asd (~noname@user/asd)
[02:53:28] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[02:53:28] *** Joins: TakinOver (~TakinOver@47.150.206.35)
[02:53:28] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[02:53:28] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[02:53:29] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[02:53:37] *** Joins: blackbeard420 (~blackbear@2600:3c03:e000:297::)
[02:53:37] *** Joins: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4)
[02:53:37] *** Joins: dmu (~darkmusic@user/darkmusic)
[02:53:37] *** Joins: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser)
[02:53:38] *** Joins: DrWhax (~DrWhax@37.218.247.209)
[02:53:38] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[02:53:38] *** Joins: saem[m] (~saemmatri@2001:470:69fc:105::2b1e)
[02:53:38] *** Joins: euantorano (sid180289@id-180289.brockwell.irccloud.com)
[02:53:38] *** Joins: robertmeta (sid514@user/robertmeta)
[02:54:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[02:54:24] *** Joins: ormiret (sid314108@id-314108.tooting.irccloud.com)
[02:54:37] *** Joins: kots (~kots@li1473-207.members.linode.com)
[02:55:03] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:57:44] *** Quits: Clonkk[m] (~rfcmatrix@2001:470:69fc:105::34a8) (Ping timeout: 252 seconds)
[02:57:53] *** Quits: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4) (Ping timeout: 244 seconds)
[02:58:03] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: saem[m] (~saemmatri@2001:470:69fc:105::2b1e) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Ping timeout: 272 seconds)
[03:02:19] <FromDiscord> <konsumlamm> In reply to @treeform "Is it just me": the main difference is that with options, you can do something like `some(none(int))` which would just be `nil` for refs
[03:02:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[03:06:01] <fn> <ForumUpdaterBot> New thread by IvanS: Windows : how to get active window title, see https://forum.nim-lang.org/t/8154
[03:07:54] *** Quits: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com) (Ping timeout: 244 seconds)
[03:08:12] *** Joins: Jjp137 (~Jjp137@2603-8000-2a01-3406-92fb-a6ff-fee2-6861.res6.spectrum.com)
[03:08:56] *** Quits: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5) (Ping timeout: 244 seconds)
[03:10:22] *** Joins: joshbaptiste (~josh@2001:470:1f07:4d5:24::c2b5)
[03:13:19] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:13:55] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 258 seconds)
[03:22:39] <fn> <ForumUpdaterBot> New post on r/nim by RattleyCooper: Any nim tutorials for people coming from python?, see https://reddit.com/r/nim/comments/o7atjk/any_nim_tutorials_for_people_coming_from_python/
[03:32:15] <FromDiscord> <Phytolizer> i just realized how similar Nim is to Pascal after learning the latter. really cool seeing a modern take on that syntax
[03:45:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:00:42] <FromDiscord> <checkersai> Well Araq did model many parts of the language after Pascal
[04:01:02] <FromDiscord> <checkersai> And he was a Pascal programmer
[04:06:49] <FromDiscord> <checkersai> Also didn't he start writing Nim(rod) in Pascal?
[04:19:26] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:22:57] <FromDiscord> <Phytolizer> interesting
[04:41:22] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:41:36] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[04:48:27] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:49:12] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:49:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 256 seconds)
[04:50:50] *** Gustavo6046_ is now known as Gustavo6046
[05:30:49] *** Quits: kasperk81 (~kasperk81@dsl-hkibng22-54f985-221.dhcp.inet.fi) (Quit: Connection closed)
[05:31:59] *** Quits: petrj (~petrj@dsl-hkibng22-54f985-221.dhcp.inet.fi) (Quit: Connection closed)
[05:38:25] *** Joins: lain (~lain@172.16.254.xxx)
[06:10:54] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:14:00] <FromDiscord> <Rika> In reply to @dom96 "`obj.field = 42` is": And then if the object has both a field and a function but the field is unexported lol
[06:14:11] <FromDiscord> <Rika> Inside the module, it's the field, outside, it's the function
[06:48:34] <FromDiscord> <deech> Semantically what's the difference between `type MyInt = object i: int` and `type MyInt = distinct int`?
[06:49:42] <FromDiscord> <Elegantbeef> You cannot borrow procedures from the int in this case, nor can you easily convert a `MyInt` to `int` without a converter
[06:50:59] <FromDiscord> <deech> Can the latter have distinct lifecycle hooks, `=sink`, `=copy` etc?
[06:51:58] <FromDiscord> <Elegantbeef> !eval type A = distinct int; proc `=sink`(a\: var A, y\: A) = discard
[06:52:01] <NimBot> Compile failed: /usercode/in.nim(1, 44) Error: expected: ')', but got: 'keyword var'
[06:52:06] <FromDiscord> <Elegantbeef> Oh shit that's not going to work is it? \:D
[06:52:15] <FromDiscord> <Elegantbeef> To answer your question it can i believe
[06:53:47] <FromDiscord> <deech> Interesting! Then why would I ever want an object with one field as opposed to a `distinct` type? That seems like a better design choice in general?
[06:53:53] <FromDiscord> <Elegantbeef> Yea the docs say `T can also be a distinct type`
[06:54:06] <FromDiscord> <Elegantbeef> You wouldnt
[06:54:38] <FromDiscord> <deech> I suppose `distinct` can't be parameterized? eg. `type MySeq[T] = distinct seq[T]`?
[06:55:05] <FromDiscord> <Elegantbeef> Had someone making a generic collection yesterday
[06:55:34] <FromDiscord> <Elegantbeef> It works but dont expect to borrow `[]` `[]=` as they work on generics so are not concrete
[06:56:31] <FromDiscord> <deech> Yeah good point. It still seems that for concrete types `distinct` is always a better choice vs. a single field `object.`.
[06:57:36] <FromDiscord> <Elegantbeef> But in that case get close with the ufcs generic syntax to make your life easier
[06:57:47] <FromDiscord> <Elegantbeef> `proc add[T](a: var A[T], val: sink T) = a.seq[:T].add(val)` just slides of the tongue
[06:58:18] <FromDiscord> <deech> whoa, what does `a.seq[:T]` do?
[06:58:18] <FromDiscord> <Elegantbeef> Distincts converted to their base are l values which means things like that works
[06:58:34] <FromDiscord> <Elegantbeef> It converts it back to a seq and runs the add operation on that
[06:58:53] <FromDiscord> <Elegantbeef> It's the same as `seq[T](a).add` just with ufcs for type conversion
[06:59:10] <FromDiscord> <Elegantbeef> In ufcs generic calls you have to do `: T` to pass the generic along
[06:59:23] <FromDiscord> <deech> Ah! I didn't know that.
[06:59:28] <FromDiscord> <Elegantbeef> Otherwise it's taken as a indexing by type and doesnt work unless that's what you want
[07:01:11] <FromDiscord> <Elegantbeef> To highlight that note though, it's another benefit for the distinct, since you can call base operations on the type if they expect a mutable version without any converters or anything
[07:03:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3r2M
[07:39:10] <FromDiscord> <hamidb80> what is {.anchor.}?
[07:39:16] <FromDiscord> <hamidb80> i coudn't find doc about it
[07:39:35] <FromDiscord> <hamidb80> (edit) "{.anchor.}?" => "`{.anchor.}`?"
[07:40:26] <FromDiscord> <hamidb80> also what is `{.dirty.}`?
[07:41:51] <FromDiscord> <hamidb80> are they documented?
[07:45:55] <FromDiscord> <Elegantbeef> Dirty is for making a template unhygenic so it doesnt gensym symbols internally
[07:47:23] <FromDiscord> <Elegantbeef> Never seen `anchor` before
[07:52:02] *** Quits: Epsilon (~Epsilon@user/epsilon) (Ping timeout: 244 seconds)
[07:54:00] <FromDiscord> <hamidb80> tnks
[07:54:16] *** Joins: Epsilon (~Epsilon@user/epsilon)
[07:56:29] <FromDiscord> <kaushalmodi> In reply to @hamidb80 "also what is `{.dirty.}`?": https://nim-lang.github.io/Nim/manual#templates-hygiene-in-templates
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:22] <FromDiscord> <checkersai> Can I get some input on an idea?
[08:38:58] <FromDiscord> <checkersai> I was wondering if it might be a fun exercise to port the quake engine to Nim
[08:41:56] <FromDiscord> <Elegantbeef> it'd probably be a fun exercise, but you're after all just re-implementing an already existing thing so if you find that worthwhile is the question you should ask
[08:42:47] <FromDiscord> <checkersai> fair enough
[08:42:57] <FromDiscord> <checkersai> What if I tried to make a quake-like engine in Nim?
[08:43:24] <FromDiscord> <Elegantbeef> You're presently talking to someone who is making a voxel rendering engine in Nim for fun, so.... \:P
[08:43:39] <FromDiscord> <checkersai> oh cool
[08:44:23] <FromDiscord> <Varriount> Is there some new flag required to get line numbers in stack traces? I have a program that is throwing an exception, and no matter what flags I do or do not use (`linetrace`, `stacktrace`, `linedir`, `debugger`, etc.) nothing seems to get line numbers working properly.
[08:45:30] <FromDiscord> <checkersai> In reply to @Elegantbeef "You're presently talking to": I mainly got interested because I was just playing the Hrot demo
[08:45:44] <FromDiscord> <checkersai> and the developer of that wrote a custom engine in Pascal
[08:46:28] <FromDiscord> <checkersai> I just spent like 20 minutes in the demo just looking at everything. Not even playing through it just observing the models and shading and stuff
[08:46:43] <FromDiscord> <checkersai> And I thought "I wonder if I can do something like this"
[08:46:44] <FromDiscord> <Elegantbeef> Yea i mean it's completely doable, really a question of "is it something you want to dedicate a buttload of time into"
[08:46:55] <FromDiscord> <Elegantbeef> If you dont know much about game engines it'd teach you a fair bit
[08:47:27] <FromDiscord> <checkersai> I know a tiny bit
[08:48:18] <FromDiscord> <checkersai> Like I've dabbled in rendering stuff
[08:48:27] <FromDiscord> <checkersai> but I've never written a whole game engine
[08:48:33] <FromDiscord> <checkersai> (edit) "Like I've dabbled in ... rendering" 03added "basic"
[08:49:02] <fn> <ForumUpdaterBot> New Nimble package! chain - Nim's function chaining and method cascading, see https://github.com/khchen/chain
[08:49:03] <fn> <R2D2> 4GitHub: 7"Nim's function chaining and method cascading"
[08:49:48] *** Joins: SebastianM (~seba@user/sebastianm)
[08:50:41] <FromDiscord> <Elegantbeef> Well if you're interested in doing it there is not much reason not to unless you have other stuff you want to do üòõ
[08:51:17] <FromDiscord> <Elegantbeef> Just dont make a "quake engine" make a game of your own and have it play similarly to quake üòÄ
[08:56:45] <FromDiscord> <hamidb80> sent a code paste, see https://play.nim-lang.org/#ix=3r31
[08:56:56] <FromDiscord> <hamidb80> > Error: invalid token: _ (\95)
[08:57:36] <FromDiscord> <hamidb80> even in ` back ticks
[08:57:40] <FromDiscord> <hamidb80> (edit) "in" => "inside"
[08:57:48] <FromDiscord> <Elegantbeef> Well `_` is an invalid start character
[08:58:51] <FromDiscord> <kaushalmodi> In reply to @hamidb80 "i cant define variable": https://nim-lang.github.io/Nim/manual#lexical-analysis-identifiers-amp-keywords‚Üµ‚Üµ> letter ::= 'A'..'Z' | 'a'..'z' | '\x80'..'\xff'
[08:59:23] <FromDiscord> <Elegantbeef> even without that in mind, `_name` would have to be a valid way to interact with that variable
[09:01:08] <FromDiscord> <Elegantbeef> I say would have to, but that's just cause `\`name\`` can be accessed`name\`
[09:01:15] <FromDiscord> <Elegantbeef> oh jeez there goes highlighting
[09:01:26] <FromDiscord> <kaushalmodi> In reply to @Elegantbeef "even without that in": Nim allows unicodes in identifiers, but looking at that spec, those have to be within those hex values? And the hex value of `_` is 0x5F.
[09:01:56] <FromDiscord> <kaushalmodi> checking if markdown-like double back-quoting works.. `` `abc` ``
[09:02:42] <FromDiscord> <Elegantbeef> Anywho why are we starting variables with `_` this isnt C# or python üòõ
[09:02:47] <FromDiscord> <kaushalmodi> yep.. that's `BB BabcB BB` where B is a backquote
[09:03:47] <FromDiscord> <hamidb80> In reply to @Elegantbeef "Anywho why are we": i wanna make a client for arangoDB and Arango has fields `_key`, `_id` and `_rev` by defauly
[09:03:54] <FromDiscord> <hamidb80> (edit) "defauly" => "default"
[09:04:28] <FromDiscord> <hamidb80> i think i can use \key , \id , ... instead
[09:04:47] <FromDiscord> <Elegantbeef> Why make it harder on yourself?
[09:05:24] <FromDiscord> <hamidb80> üòÑ
[09:05:32] <FromDiscord> <hamidb80> youre right
[09:05:35] <FromDiscord> <hamidb80> (edit) "youre" => "you're"
[09:06:11] <FromDiscord> <Elegantbeef> Like why not just use `key`, `id`, `rev` then on conversion add the `_` or even use metaprogramming to control the conversion
[09:07:17] <FromDiscord> <hamidb80> that's a good idea
[09:10:23] <FromDiscord> <checkersai> @ElegantBeef is your voxel engine on github?
[09:10:41] <FromDiscord> <Elegantbeef> It is but it's absolutely useless atm
[09:10:51] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/857842755845488640/image.png
[09:10:57] <FromDiscord> <Elegantbeef> Unless that grid really makes you happy
[09:13:00] <FromDiscord> <Elegantbeef> That's a 4x4 raymarched grid, so.... yea
[09:15:03] <FromDiscord> <checkersai> ah
[09:33:10] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[09:49:09] <FromDiscord> <checkersai> Can I specify what garbage collector to use in the `.nimble` file?
[09:49:27] <FromDiscord> <Elegantbeef> should be `switch("gc", "orc")` for instance
[09:54:18] <FromDiscord> <checkersai> thanks
[09:55:38] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:55:39] <FromDiscord> <checkersai> Also, `GC_step` only works for gc:refc, right?
[10:00:10] *** Joins: cyraxjoe (~joe@201.159.96.13)
[10:14:02] <FromDiscord> <Phytolizer> can someone review this code and let me know if i am doing Terrible Awful Things? it's probably a lot to ask but i really want to improve my Nim‚Üµhttps://github.com/onContentStop/crenshaw.nim
[10:14:04] <fn> <R2D2> 4GitHub: 7"<No Description>"
[10:14:34] <FromDiscord> <Phytolizer> the big mama is in `tiny.nim`
[10:15:10] <FromDiscord> <Phytolizer> it's a programming language compiler.
[10:16:45] <FromDiscord> <Elegantbeef> I see PascalCased procedures
[10:18:14] <FromDiscord> <Phytolizer> yes, this is based on a chunk of Pascal code
[10:18:31] <FromDiscord> <Phytolizer> is that bad style?
[10:18:48] <FromDiscord> <Elegantbeef> Nim conventions are camelCased for procedures
[10:19:16] <FromDiscord> <Elegantbeef> `GetNum` returning `char` is a bit odd
[10:19:50] <FromDiscord> <Phytolizer> it returns `int` in `tiny.nim`, the other files are prototypes of that compiler
[10:20:15] <FromDiscord> <Phytolizer> sorry for the confusion
[10:20:31] <FromDiscord> <Elegantbeef> Ah checkout strutils/parseutils you're reimpl alot of logic
[10:21:19] <FromDiscord> <Phytolizer> never heard of `parseutils`, will check it out
[10:21:26] <FromDiscord> <Phytolizer> i have a feeling this compiler could be a lot smaller
[10:22:16] <FromDiscord> <haxscramper> In reply to @Phytolizer "can someone review this": Also use `import std/[...]` for imports
[10:22:27] <FromDiscord> <Phytolizer> oh really? why?
[10:22:48] <FromDiscord> <Phytolizer> absolute vs relative path specification i guess?
[10:23:51] <FromDiscord> <haxscramper> No, just better to use `std/` prefix when importing std modules
[10:24:01] <FromDiscord> <haxscramper> Btw, are you following some tutorial?
[10:24:09] <FromDiscord> <Phytolizer> yes, i'll link it
[10:24:20] <FromDiscord> <Phytolizer> it's from 1985 but has been really helpful for me
[10:24:27] <FromDiscord> <Phytolizer> https://compilers.iecc.com/crenshaw
[10:25:11] <FromDiscord> <Phytolizer> something i haven't paid much mind to yet is that back then there were a LOT less convenience functions and you had to DIY
[10:25:18] <FromDiscord> <Phytolizer> that's why there's a lot of reinventing the wheel here
[10:26:34] <FromDiscord> <haxscramper> https://gist.github.com/haxscramper/3562fa8fee4726d7a30a013a37977df6 if you are interested in the collection of links for language development in nim
[10:26:44] <FromDiscord> <haxscramper> I also added your project tot he list because it looks very interesting
[10:27:11] <FromDiscord> <Phytolizer> hey, thanks! :)
[10:27:17] <FromDiscord> <Phytolizer> that looks like a really good list
[10:27:27] <FromDiscord> <Elegantbeef> But yea strutils has stuff for almost all `isX`
[10:28:14] <FromDiscord> <Phytolizer> not just IsAlpha/Digit/AlNum?
[10:28:43] <FromDiscord> <Phytolizer> IsWhite specifically excludes newlines because there is control over where that is allowed in the language
[10:29:08] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/strutils.html#isAlphaNumeric%2Cchar
[10:29:52] <FromDiscord> <Elegantbeef> Most of that stuff is nearby
[10:34:11] *** Joins: PMunch (~PMunch@178.74.36.198)
[10:35:55] <FromDiscord> <Elegantbeef> I dont know what the general view is but for atleast some of those emitted calls you could use templates as such to reduce the chance of a typo https://play.nim-lang.org/#ix=3r3p \:D
[10:36:48] <FromDiscord> <Phytolizer> templates are like C macros right?
[10:37:06] <FromDiscord> <Phytolizer> just a cut-and-paste thing?
[10:37:10] <FromDiscord> <Elegantbeef> They're code substitution, they're slightly similar
[10:37:22] <FromDiscord> <Elegantbeef> They can have typed parameters for type safety
[10:37:38] <FromDiscord> <Phytolizer> ok, templates are definitely not a bad idea as this code has some repetition
[10:38:26] <FromDiscord> <Elegantbeef> Also no clue if you want more safety but i'd do this a bit different üòÄ
[10:38:35] <FromDiscord> <Phytolizer> how so?
[10:38:47] <FromDiscord> <Phytolizer> btw if you refresh the page, i fixed the casing for all the procs
[10:39:02] <FromDiscord> <Phytolizer> i am interested in making this code safer/easier to debug
[10:39:32] <FromDiscord> <Elegantbeef> Have all the registers be enums then have for instance `proc push(r: Register)`
[10:39:33] <FromDiscord> <Elegantbeef> then your code would be almost identical to the asm
[10:40:01] <FromDiscord> <Phytolizer> i see
[10:40:41] <FromDiscord> <Phytolizer> most of the code deals in rax/rbx though, wouldn't it make more sense to make the opcode be the parameter?
[10:40:57] <FromDiscord> <Phytolizer> exception being div because div is annoying in x64 apparently
[10:41:02] <FromDiscord> <Elegantbeef> That'd be valid nim code üòõ
[10:41:02] <FromDiscord> <Elegantbeef> Well `cdq()`
[10:41:09] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3r3r
[10:41:15] <FromDiscord> <Phytolizer> ah that's clever
[10:41:29] <FromDiscord> <checkersai> Just curious, is there a function or flag in nim that says which gc is being used currently? Like could I do something like `echo currentGC`
[10:42:25] <FromDiscord> <Elegantbeef> There is a way to fetch compiler options but i never remember how, sorry
[10:43:53] <FromDiscord> <Elegantbeef> No clue if you like my idea, but i think it's nicer than writing strings manually üòõ
[10:44:16] <FromDiscord> <Phytolizer> i'm not 100% sold, it would feel like a gimmick to me
[10:44:44] <FromDiscord> <Elegantbeef> Yea i mean it's mostly just about if you're adding any more operations
[10:45:12] <fn> <hoijui> I have small tool which runs a series of checks. each check is defined in its own nim source file, and has the same structure (simplified, it contains a: `proc run()`)
[10:45:13] <fn> <hoijui> each such Nim source file is in the "checks" sub-dir
[10:45:21] <fn> <hoijui> in the main source file, I manually import each of these files, and later execute the `run` method from it.
[10:45:28] <fn> <hoijui> is it possible to somehow automate the importing of all the checks ("checks/*.nim"), and get a list of them, so I can execute their `run` procs in a loop?
[10:45:46] <FromDiscord> <Elegantbeef> You could use a macro to import all the files in that folder
[10:45:50] <fn> <hoijui> something like.. "compile-time plugins"
[10:45:50] <FromDiscord> <Phytolizer> fair enough. i haven't finished the tutorial but it doesn't seem like he's going to add more
[10:46:06] <fn> <hoijui> Elegantbeef, ok!
[10:46:12] <FromDiscord> <Elegantbeef> https://github.com/GaryM-exkage/GDGW-Maverick-Bot/blob/master/src/nimcordbot/utils.nim#L3 might be useful for you
[10:46:40] <FromDiscord> <Phytolizer> god i love nim macros
[10:46:41] <FromDiscord> <Elegantbeef> That handles the importing of the given relative folder path, you then would also emit a `moduleX.run()`
[10:46:56] <FromDiscord> <Elegantbeef> Join the club, they solve so many issues
[10:47:42] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[10:48:45] <FromDiscord> <Elegantbeef> Feel free to ask for help if you need it modifying that macro
[10:50:34] <fn> <hoijui> Elegantbeef.. coool! thank you! :-)
[10:51:07] <fn> <ForumUpdaterBot> New post on r/nim by totallyspis: Fetch compiler options in code, see https://reddit.com/r/nim/comments/o7hxsn/fetch_compiler_options_in_code/
[10:51:13] <fn> <hoijui> I think I'll need help for the "emit a `moduleX.run()`" part
[10:51:55] <fn> <hoijui> hm.. I geus it should be a separate macro, as I'll run that in a different place, right?
[10:52:10] <fn> <hoijui> guess*
[10:59:44] <FromDiscord> <Phytolizer> thanks for looking  over my code Elegantbeef, i really appreciate having fresh eyes on it
[11:04:28] *** Joins: xbello (~xbello@196.80.191.92.dynamic.jazztel.es)
[11:05:10] <FromDiscord> <Elegantbeef> Yea you can use either the macro cache or some other variable for storing module names
[11:05:47] *** Quits: xbello (~xbello@196.80.191.92.dynamic.jazztel.es) (Client Quit)
[11:19:14] <PMunch> Hmm, what would be the easiest way to have an interactive curve thing. Something like this: https://www.theinsidetips.com/wp-content/uploads/2020/04/Curves_01.jpg
[11:27:44] <PMunch> Hmm, looks like I might need to write this myself in SDL or something..
[11:42:17] <fn> <hoijui> Elegantbeef, got it working! wow.. it looked har at first but was surprisingly easy! thank you!
[11:42:31] <FromDiscord> <Elegantbeef> No problem!
[11:42:33] <fn> <hoijui> never used macros before
[11:42:47] <fn> <hoijui> :-)
[11:43:32] <fn> <hoijui> luckily I fond some macro tutorial that mentioned `dumpTree()`, which was essential for figuring things out
[11:51:24] <FromDiscord> <Elegantbeef> Yea it's very useful for solving macro woes
[11:51:51] <FromDiscord> <Elegantbeef> `treeRepr`, `dumpTree`, and `repr` are very very useful for debugging/reasoning around macros
[11:58:52] <PMunch> hoijui, that wouldn't happen to be my tutorial would it?
[11:59:03] <FromDiscord> <Elegantbeef> Hope it's mine
[11:59:10] <FromDiscord> <Elegantbeef> It's certainly not mine üòõ
[11:59:22] <PMunch> Do you have a macros tutorial?
[11:59:52] <FromDiscord> <Elegantbeef> I have the one write up but nothing much
[12:03:12] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[12:07:20] <fn> <hoijui> it was this tutorial/example: https://nim-lang.org/blog/2018/06/07/create-a-simple-macro.html
[12:11:56] <fn> <hoijui> i did a web-search, opened 5 links , and looked at just one of them, so it was a quite random choice
[12:12:39] <fn> <hoijui> is there a macro that takes code as argument, and outputs the source code of a macro that generates that code?
[12:13:06] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/macros.html#quote%2Ctyped%2Cstring
[12:13:32] <FromDiscord> <Elegantbeef> Let's you write macros akin to templates
[12:13:36] <fn> <hoijui> all by itsself it woudl not be very useful of course, but it could form a base for a macro, where one just needs to replace some static strings with paramters, and adding a loop here and there
[12:13:44] <fn> <hoijui> ok ...
[12:16:58] <FromDiscord> <Elegantbeef> Atleast i think that's what you mean
[12:17:14] <FromDiscord> <Elegantbeef> There is also the `astgenrepr`
[12:18:03] <fn> <hoijui> Elegantbeef, I think it is not what I mean
[12:18:03] <PMunch> Yeah astGenRepr sounds more like what they asked for
[12:18:15] <fn> <hoijui> looking at `astgenrepr` now ...
[12:18:54] *** Joins: max22- (~maxime@2a01cb088335980050f2c0e0b46362b4.ipv6.abo.wanadoo.fr)
[12:20:18] *** Quits: Schnouki (~schnouki@2a01:e0a:80a:9e80:8a75:82c8:c1f9:1792) (Quit: WeeChat 3.2)
[12:25:08] <fn> <hoijui> I think, `astgenrepr` is almost what I mean, but I would have to prepare the arguemnt somehow..
[12:26:00] <fn> <hoijui> what I want is this (I think): `echo astgenrep(someProc(let i = 3))`
[12:26:25] <FromDiscord> <Elegantbeef> Dont quite follow
[12:30:31] <PMunch> Well astGenRepr is more intended to see what you need to write to create a macro, and then copy that into your program
[12:33:52] <fn> <hoijui> `dumpTree(check(registry, runState))` -> Call
[12:33:52] <fn> <hoijui>   Ident "check"
[12:33:53] <fn> <hoijui>   Ident "registry"
[12:33:53] <fn> <hoijui>   Ident "runState"
[12:33:57] <fn> <hoijui> `astGenRep(check(registry, runState))` ->
[12:33:57] <fn> <hoijui> macro NAME*(): untyped =
[12:33:57] <fn> <hoijui>   newStmtList(
[12:33:58] <fn> <hoijui>     newNimNode(nnkCode).add(
[12:34:00] <fn> <hoijui>       ident("check"),
[12:34:02] <fn> <hoijui>       ident("registry"),
[12:34:04] <fn> <hoijui>       ident("runState"),
[12:34:06] <fn> <hoijui>     ),
[12:34:08] <fn> <hoijui>   )
[12:34:10] <fn> <hoijui> the first one works
[12:34:15] <fn> <hoijui> the second one is what I would want
[12:34:15] <PMunch> Please don't paste data into IRC
[12:34:20] <fn> <hoijui> (more or less)
[12:34:26] <PMunch> It spams the channel quite abit
[12:34:34] <fn> <hoijui> :/ sorry
[12:34:41] <fn> <hoijui> pastebin
[12:34:50] <FromDiscord> <Elegantbeef> Or nim playground üòõ
[12:35:04] <FromDiscord> <Elegantbeef> I dont see the point templates already give you this
[12:36:34] <FromDiscord> <mantielero (mantielero)> Hi all. Quick question.
[12:36:59] <FromDiscord> <mantielero (mantielero)> I am wrapping a CPP method with\: `proc typeName(this:Mx): string {.importcpp: "#.type_name()".}`
[12:37:16] <FromDiscord> <Elegantbeef> Like this seems similar to what you want hoijui https://play.nim-lang.org/#ix=3r3X
[12:37:24] <FromDiscord> <mantielero (mantielero)> and I am gettig the error\: error\: cannot convert ‚Äòstd\:\:string‚Äô {aka ‚Äòstd\:\:\_\_cxx11\:\:basic\_string\<char\>‚Äô} to ‚Äòvoid\‚Äô
[12:37:56] <FromDiscord> <Elegantbeef> well string is Nim's string, so the CPP method is almost certainly not going to return that
[12:38:04] <PMunch> Nim `string` is certainly not compatible with whatever C++ strings are
[12:38:18] <PMunch> You probably want it to return `cstring` instead
[12:38:18] <FromDiscord> <mantielero (mantielero)> I have tried `cstring`as well
[12:38:56] <PMunch> And what did that give you?
[12:39:49] <FromDiscord> <mantielero (mantielero)> sent a long message, see http://ix.io/3r3Y
[12:40:21] <FromDiscord> <mantielero (mantielero)> It works with the type\: `CppString {.importcpp: "std::string", header: "<string>", byref.} = object`
[12:40:55] *** Joins: saem[m] (~saemmatri@2001:470:69fc:105::2b1e)
[12:41:08] <FromDiscord> <mantielero (mantielero)> But I was expecting using `cstring`. I tried `string`because that was what c2nim gave me.
[12:42:37] <FromDiscord> <mantielero (mantielero)> The line that I am wrappin\: https://github.com/casadi/casadi/blob/12fa60f676716ae09aa2abe34c1c9b9cf426e68a/casadi/core/mx.hpp#L84
[13:06:03] <fn> <hoijui> Elegantbeef, I am not sure I understand what this does, but I am almost certain it is not what I want.
[13:06:50] <fn> <hoijui> I want to have macro code (as string) that generates an AST that does the same like the code I supplied
[13:07:09] <fn> <hoijui> in itsself, that is not useful, as you could just.. write the code directly
[13:07:24] <fn> <hoijui> but you can then use this macro code as a base, and start modularizing it
[13:07:49] <fn> <hoijui> so it basically just automates part of the macro-writing process
[13:08:52] <FromDiscord> <haxscramper> You need to `importcpp` `std::string` as well
[13:09:04] <fn> <hoijui> instead of dumpTree, one would use this macro instead, so adding "nkk" in front of things, and putting `newNimNode` in between and so on, would not have to be done manually
[13:09:09] <FromDiscord> <haxscramper> There is a wrapper for some C++ stdlib parts actually, so you can use this
[13:09:34] <FromDiscord> <haxscramper> https://github.com/sinkingsugar/nimline or https://github.com/Clonkk/nim-cppstl
[13:09:36] <fn> <R2D2> 4GitHub: 7"Wrapper-less C/C++ interop for Nim"
[13:09:49] <FromDiscord> <haxscramper> First also has a lot of helper stuff for wrapping C++ code
[13:10:10] <PMunch> Sounds a lot like `quote do` to me hoijui, or possibly something from macroutils
[13:10:52] <FromDiscord> <mantielero (mantielero)> I tried\: https://github.com/Clonkk/nim-cppstl/blob/49399f79c2a6bfed132f9fe71dea280e10dd4899/cppstl/std_string.nim#L126
[13:11:16] <FromDiscord> <mantielero (mantielero)> Everything compiles fine, but I cannot see the result
[13:11:44] <fn> <hoijui> yeah.. I am sure it already exists. I think astgenrep is pretty close
[13:12:09] <fn> <hoijui> it just won;t take code as input, but wants NimNode
[13:12:44] <FromDiscord> <Elegantbeef> `parsestmt` and `parseExpr` also might be what you want
[13:12:55] <FromDiscord> <Elegantbeef> I'm a little loss so just throwing stuff and seeing what sticks \:D
[13:13:57] <FromDiscord> <haxscramper> > ‚Üµ> cannot see the result‚Üµ> Nothing is returned on the nim side?‚Üµ>
[13:14:09] <FromDiscord> <haxscramper> > cannot see the result‚ÜµNothing is returned on the nim side?
[13:14:24] <FromDiscord> <mantielero (mantielero)> I just get\: ""
[13:14:52] <FromDiscord> <mantielero (mantielero)> The cpp code is `static std::string type_name() {return "MX";}`
[13:15:08] <FromDiscord> <mantielero (mantielero)> I don't know why I don't get "MX".
[13:15:25] <FromDiscord> <mantielero (mantielero)> And why `cstring` is not working.
[13:16:12] <FromDiscord> <haxscramper> Because `cstring` is not an `std::string`
[13:16:43] <FromDiscord> <haxscramper> And you are wrapping static method, I think you need to use `importcpp: "class::staticMethod()` instead
[13:17:11] <FromDiscord> <mantielero (mantielero)> What is `cstring` in CPP context?
[13:17:26] <FromDiscord> <mantielero (mantielero)> Or is it only for the C backend?
[13:18:03] <fn> <hoijui> Elegantbeef, the parse* procs are .. I think also close, but they take string as input instead of code
[13:18:09] <FromDiscord> <haxscramper> `cstring` is a `char`
[13:18:09] <FromDiscord> <haxscramper> For both C++ and C
[13:18:39] <fn> <hoijui> is htere no proc that takes code as input and returns a NimNode for that code?
[13:18:49] <FromDiscord> <haxscramper> `std::string` is a C++ stdlib-only class so that is not universally used in the C++, so it makes no sense to work with it by default
[13:19:03] <FromDiscord> <mantielero (mantielero)> Understood
[13:19:11] <FromDiscord> <Rika> hoijui didnt someone already say to look at `quote` in the `macros` module
[13:19:18] <FromDiscord> <mantielero (mantielero)> I tried\: `proc typeName(this:Mx): CppString {.importcpp: "casadi::MX::type_name()".} # cdecl,`
[13:19:37] <FromDiscord> <mantielero (mantielero)> Compiles, but I get an empty string
[13:21:18] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3r49
[13:21:21] <FromDiscord> <haxscramper> Works fine
[13:21:51] <FromDiscord> <haxscramper> I should've used `StdString` for the name instead of `CString` to avoid confusion though
[13:22:14] <fn> <hoijui> Rika, ahaa.. not I got it! :D yeap thanks!
[13:22:41] <fn> <hoijui> `static: echo astGenRepr(quote do: check(registry, runState))`
[13:22:46] <fn> <hoijui> this works!
[13:23:05] <FromDiscord> <Elegantbeef> So ignore me is what we're doing today hoijui üòÄ
[13:23:17] <FromDiscord> <haxscramper> idk why `cpp-stl` does `const_cast<char> on the `c\_str()\` results, but I suppose this is unrelated
[13:24:09] <fn> <hoijui> :D :D Elegantbeef, sorry! I was looking at quote as something that does what I want, but it just does the preparation step .. I could not see it fitting
[13:24:10] <FromDiscord> <haxscramper> > ‚Üµ> const\_cast makes it possible to form a reference or pointer to non-const type that is actually referring to a const object or a reference or pointer to non-volatile type that is actually referring to a volatile object. Modifying a const object through a non-const access path and referring to a volatile object through a non-volatile glvalue results in undefined behavior.‚Üµ>
[13:24:11] <FromDiscord> <tomck> sent a code paste, see https://play.nim-lang.org/#ix=3r4a
[13:24:22] <FromDiscord> <Elegantbeef> Lol it's fine
[13:24:32] <FromDiscord> <haxscramper> Most likely it is to avoid compilation errors on the nim side, since it might be the only option
[13:24:43] <FromDiscord> <haxscramper> As nim does not have type-level immutability
[13:25:03] <fn> <hoijui> :-)
[13:25:04] <FromDiscord> <Rika> lets all ignore beef lmaooooo
[13:25:07] <FromDiscord> <haxscramper> So it is either UB or `const_cast`
[13:25:21] <FromDiscord> <Elegantbeef> Wait you dont ignore me rika?
[13:25:43] <FromDiscord> <Rika> i said "lets all ignore" implying im inviting everyone else to do so
[13:26:07] <FromDiscord> <Elegantbeef> I tricked you into responding to me, you failed!
[13:26:45] <FromDiscord> <Rika> funny
[13:26:46] <FromDiscord> <Rika> i laughed
[13:39:29] <PMunch> @hoijui, you can also have a look at dumpAstGen which does the same as your code
[13:40:28] <fn> <Prestige> what's up hoijui :) nice to see you here
[13:40:51] <fn> <hoijui> Prestige, hey.. who are you? :D
[13:41:15] <fn> <Prestige> just another irc user in this chat haha. I also wrote the relay bot, working on nick colors now..
[13:41:53] <fn> <Prestige> oh and also wrote R2D2, can !eval code with it. I wonder if that'll conflict with the bot on libera
[13:42:19] <fn> <hoijui> PMunch, indeed! :-) same thing! (just the generated symbol names differ, which makes no difference)
[13:42:54] <fn> <Prestige> PMunch: can you !eval some code on your end for me?
[13:43:07] <PMunch> !eval echo "Hello Prestige"
[13:43:08] <fn> <hoijui> ah.. I though we know each other from somewhere else, Prestige
[13:43:10] <fn> <R2D2> Hello Prestige
[13:43:12] <NimBot> Hello Prestige
[13:43:21] <fn> <Prestige> aha
[13:43:28] <fn> <Prestige> I should change that for this channel
[13:43:44] <FromDiscord> <Elegantbeef> Nah it's a feature
[13:43:45] <FromDiscord> <Elegantbeef> Double speak!
[13:44:37] <FromDiscord> <Elegantbeef> I think that's what orwell meant atleast
[13:44:42] <fn> <hoijui> ahh the relay bot.. nice! :-) what tech is the original chat made of?
[13:45:34] <FromDiscord> <Elegantbeef> I think most of the normal chat is biotic, might be a few NPCs about
[13:45:35] <fn> <Prestige> They're on discord and another irc network, I think also on matrix still?
[13:46:07] *** Quits: max22- (~maxime@2a01cb088335980050f2c0e0b46362b4.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[13:46:50] <FromDiscord> <Elegantbeef> There are many bridges, but we dont cross them cause they're heavily guarded
[13:47:13] <FromDiscord> <Elegantbeef> \I just hope atleast one person gets the SG1 reference
[13:49:45] <PMunch> Did the bridge to Freenode die?
[13:49:54] <fn> <hoijui> :D
[13:50:05] <fn> <Prestige> *crickets*
[13:50:06] <fn> <hoijui> I am on freenode, and I think Prestige too
[13:50:10] <FromDiscord> <Elegantbeef> When they killed freenode it did, if that's what you mean
[13:50:27] <FromDiscord> <Elegantbeef> Libera is the new home for Nim-irc, these heathens are heathens
[13:50:40] <PMunch> Wait..
[13:50:45] <fn> <hoijui> what happened to freenode? enemy takeover?
[13:50:49] <PMunch> When I type on Freenode it doesn't get relayed here
[13:50:57] <PMunch> Am I shadowbanned on Freenode?
[13:51:05] <fn> <Prestige> I didn't see you type on freenode
[13:51:27] <FromDiscord> <Elegantbeef> 1 too many liberachat messages
[13:51:28] <fn> <hoijui> mmm... strange. I see you here
[13:51:42] <FromDiscord> <Rika> have you forgotten that they wiped the db
[13:51:48] <FromDiscord> <Rika> so you have to reregister, i believe
[13:51:54] <fn> <hoijui> aha
[13:51:56] <fn> <Prestige> correct
[13:52:13] <fn> <hoijui> sliped my mind for a moment
[13:52:24] <PMunch> This is what it looks like to me: https://uploads.peterme.net/shadowbanned.png
[13:52:37] <PMunch> Wait what?
[13:52:46] <PMunch> They deleted all Freenode users?
[13:52:57] <FromDiscord> <Elegantbeef> Yep
[13:53:01] <FromDiscord> <Elegantbeef> Hence the sudden move to libera
[13:53:10] <FromDiscord> <Elegantbeef> Users + servers iirc
[13:53:53] <fn> <hoijui> why do you see PMunch as an IRC user instead of as a "remote" one?
[13:53:55] <fn> <hoijui> on IRC
[13:53:58] <PMunch> I thought the whole point was to get access to all the users..
[13:54:06] <fn> <hoijui> and.. you DO see me there
[13:54:06] <FromDiscord> <zetashift> In reply to @PMunch "This is what it": very nice colorscheme tho
[13:54:08] <PMunch> Because I om on IRC
[13:54:09] <PMunch> :P
[13:54:23] <PMunch> Oh well, I have to run
[13:54:35] <FromDiscord> <Elegantbeef> And i have to sleep
[13:54:39] <fn> <hoijui> I am on IRC too, and PMunch to me is not on IRC
[13:54:44] <PMunch> @zetashift, it's based on the same colourtheme that's used for the Nim website code snippets
[13:54:44] <FromDiscord> <zetashift> good run and good night!
[13:55:01] *** Quits: PMunch (~PMunch@178.74.36.198) (Quit: leaving)
[13:55:05] <FromDiscord> <zetashift> Dracula?
[13:55:25] <FromDiscord> <zetashift> it doesn't resemble it at first glance
[13:56:13] <fn> <Prestige> Oh PMunch can you link me that repo
[13:56:20] <FromDiscord> <dom96> honestly, you should all move to Libera
[13:56:24] <fn> <Prestige> I didn't see your message till the screenshot
[13:56:24] <FromDiscord> <dom96> no reason not to
[13:56:59] <FromDiscord> <Elegantbeef> You're not my real mom dom, you cannot tell me how to live
[13:57:35] <fn> <Prestige> dom96 or everyone come back to freenode, or we could start our own irc network :P
[13:57:44] <FromDiscord> <Rika> dommom
[13:57:44] <fn> <Prestige> or we could all move to matrix, or...
[13:57:54] <FromDiscord> <dom96> bruh, you're not even on IRC
[13:57:58] <FromDiscord> <Rika> domomdom
[13:58:27] <FromDiscord> <dom96> Yep, I'm the dominant mom of this channel
[13:58:45] <FromDiscord> <dom96> only my britishness cannot help but want to write _mum_
[13:59:36] <FromDiscord> <dom96> happy friday btw üôÇ
[14:00:00] <FromDiscord> <tomck> Is there any reason why the options `some` function doesn't take a `sink T` parameter? it seems to want to copy `T` all the time, & it magically works if I change `T` to `sink T`
[14:15:47] <FromDiscord> <dom96> @Araq Any ideas about above?
[14:23:22] <FromDiscord> <gerwy> i will probably be making some small app to display and play around with Cellular Automatas in nim‚ÜµHow should i name it?
[14:27:21] <FromDiscord> <gerwy> nimca?
[14:27:25] <FromDiscord> <dom96> nooo
[14:27:32] <FromDiscord> <dom96> it should have no nim in the name
[14:27:37] <FromDiscord> <dom96> too many projects with a nim prefix
[14:28:06] <FromDiscord> <dom96> First name that comes to mind: AutomataOverlord
[14:28:42] <fn> <hoijui> Elegantbeef, regarding your maverick bot ...
[14:28:57] <fn> <hoijui> I just saw, that you do . basically what I woudl want, I think
[14:29:08] <fn> <hoijui> you have a dir with commands
[14:29:21] <fn> <hoijui> and you import all of them with a macro
[14:29:22] <FromDiscord> <zetashift> Tomatas!
[14:29:41] <FromDiscord> <gerwy> In reply to @dom96 "it should have no": why, you don't like when things are associated with nim? I think its pretty cool and cute that so many projects have this
[14:29:48] <FromDiscord> <Rika> its dull
[14:29:49] <fn> <hoijui> I then run an other macro to register them to my... commands registry
[14:30:05] <FromDiscord> <Rika> nim-xxx nimxxx xxxnim xnimx gets old really quickly
[14:30:19] <FromDiscord> <dom96> I don't like having dozens of projects that begin with nim and then my `cd nim` tab complete failing heh
[14:30:28] <FromDiscord> <Rika> they can always just see the language its written in in the languages bar thing of github
[14:30:32] <fn> <hoijui> you seem not to have to do that... why not? how do the commands become effective/usable?
[14:31:04] <FromDiscord> <gerwy> well for your context i think it will be just to play around with ‚ÜµGame of Life‚ÜµAnts and Rule X‚Üµand maybe, just maybee i will add option to make your own CA with custom rules and states
[14:31:29] <FromDiscord> <gerwy> In reply to @dom96 "I don't like having": but you don't download all projects made in nim right? right?
[14:31:55] <FromDiscord> <dom96> I download enough that it annoys me that too many begin with `nim` lol
[14:32:01] <FromDiscord> <gerwy> In reply to @zetashift "Tomatas!": thats nice, but i think it has too much to do with tomato and people could get confused haha
[14:32:15] <FromDiscord> <tomck> I have lots of `nim-xxx` clones too, it's annoying, suffix with nim instead
[14:32:20] <FromDiscord> <gerwy> ah i understand, well i can always change its name i guess
[14:33:30] <fn> <hoijui> ahh.. I think you create a table with commands somewhere, right, Elegantbeef
[14:33:45] <FromDiscord> <Rika> In reply to @tomck "I have lots of": i'm not for suffixes either
[14:34:14] <FromDiscord> <Rika> just dont put it, it's going to be obvious its a nim project because the language is listed as well on github anyway
[14:34:32] <FromDiscord> <Rika> even worse if you put it on the nimble package name
[14:34:51] <FromDiscord> <gerwy> lol i could call it Edumata
[14:34:54] <FromDiscord> <gerwy> or just mata
[14:34:57] <FromDiscord> <gerwy> ta
[14:35:15] <FromDiscord> <Rika> eh
[14:35:29] <FromDiscord> <gerwy> mata seems fine
[14:35:32] <FromDiscord> <tomck> dunno about you but i often remake projects in different languages when they're non-trivial, so i play about with it in common lisp (and name it XXX-cl) then move to some other lang (and name it XXX-nim)
[14:35:54] <FromDiscord> <gerwy> CA-nim
[14:35:57] <FromDiscord> <gerwy> na
[14:36:00] <FromDiscord> <gerwy> (edit) "na" => "nah"
[14:36:22] <FromDiscord> <gerwy> it sounds like some american anti-terrorist forces
[14:36:43] <FromDiscord> <tomck> If i want to edit nim's stdlib for a project, but I don't want to change the compiler, what're my options
[14:36:56] <FromDiscord> <tomck> ideally i'd rather not fork the compiler & have to build a fresh one just to build my project
[14:37:12] <FromDiscord> <Araq> @tomck we haven't updated the stdlib with `sink` annotations all that much yet.
[14:37:24] <FromDiscord> <Araq> we had sink parameter inference instead but it's flawed
[14:37:33] <FromDiscord> <Araq> and so mostly disabled
[14:37:49] <FromDiscord> <tomck> @Araq Ah ok yeah i figured, can i just add it then (?) unsure what the process for getting this merged would be, it's a semi-blocker on my current project
[14:37:57] <FromDiscord> <gerwy> also i want this project to be a little more maintainable so i would like to use nimble and all‚Üµ‚Üµis there any nice nimble tutorial?
[14:38:01] <FromDiscord> <Araq> PRs are accepted
[14:38:11] <FromDiscord> <Rika> In reply to @tomck "If i want to": copy the files into another folder and use it like a normal module?
[14:38:38] <FromDiscord> <tomck> yeah but then if i import `options`, that'll just import the stdlib (right?)
[14:38:49] <FromDiscord> <Rika> uh, no i mean
[14:39:00] <FromDiscord> <Rika> stdlib as a module, not as a collection of modules
[14:39:06] <FromDiscord> <Rika> so you do import std2/options
[14:39:28] <FromDiscord> <Rika> (and you can force it with import pkg/options anyway but thatll clobber with other peoples packages called options)
[14:39:34] <FromDiscord> <zetashift> https://github.com/disruptek/disruptek/blob/master/style.md#packaging reminds me of this
[14:39:35] <FromDiscord> <zetashift> `Don't use .nim or nim- or nim in your package name; we all know it's nim, that's why we're here -- use keywords if you want to influence search results.`
[14:39:36] <FromDiscord> <planetis> none i guess, try it and make a PR, also use .nodestroy‚Üµ(@tomck)
[14:39:36] <FromDiscord> <mantielero (mantielero)> > So it is either UB or `const_cast`‚ÜµFinally it worked. Thanks.
[14:39:39] <FromDiscord> <tomck> yeah but then if i interface with other libs that use the normal stdlib options i'm fucked because i'll have to convert between std2 and std
[14:39:57] <FromDiscord> <Rika> theres no way around that
[14:40:13] <FromDiscord> <tomck> planetis: what does nodestroy do? i struggled to understand from the docs
[14:40:26] <FromDiscord> <tomck> @Rika  what i really want is to just swap out the stdlib on the compiler, is there a flag for that
[14:40:33] <FromDiscord> <Rika> if you want to change a single proc just make a "procname2" and use that
[14:40:39] <FromDiscord> <Rika> uh
[14:40:42] <FromDiscord> <Rika> not that i know of?
[14:40:51] <FromDiscord> <Rika> maybe check the nimc docs
[14:41:00] <FromDiscord> <Rika> https://nim-lang.org/docs/nimc.html
[14:41:11] <FromDiscord> <tomck> there's a flag to change the 'system library path', `--lib`, not sure what that means
[14:41:18] <FromDiscord> <tomck> oh i could settle for a `some2` for now
[14:41:25] <FromDiscord> <Rika> sounds like thats what you want?
[14:41:31] <FromDiscord> <planetis> its forces the compiler not to write destructor calls
[14:41:47] <FromDiscord> <tomck> problem is all the fields of `Option` are private, is there any way to bypass that?
[14:42:02] <FromDiscord> <tomck> planetis: i don't think that's what i want, i just want to force a move
[14:42:08] <FromDiscord> <Rika> you can
[14:42:22] <FromDiscord> <planetis> only in its scope
[14:42:27] <FromDiscord> <Rika> copy option type, name it idk option2, cast, then do whatever, then cast back
[14:42:35] <FromDiscord> <zetashift> well it's just a guideline not a rule, I think that naming scheme works too if you're a polyglot‚Üµ(@tomck)
[14:42:35] <FromDiscord> <Rika> ofc hacky
[14:42:39] <FromDiscord> <Rika> has cast, so dangerous
[14:43:14] <FromDiscord> <tomck> planetis: oh cool, does a `nodestroy` var use `copy=` still? because i'm deleting that, that's the issue. Maybe `shallowCopy` works (??)
[14:43:38] <FromDiscord> <tomck> lmao ok i'll have a think about the whole cast thing
[14:44:09] <FromDiscord> <Rika> In reply to @tomck "dunno about you but": personally as im a massive weeb i name my projects over names of the (semi-)fictional girls i like so i have plenty of name options
[14:44:19] <FromDiscord> <dom96> just clone the compiler and fix it, if you're using Nim seriously you should have a devel check out anyway
[14:44:41] <FromDiscord> <tomck> yeah i just don't want to have to use devel for this project for the next N months
[14:44:56] <FromDiscord> <dom96> In reply to @Araq "we had sink parameter": will it get fixed or are we just destined to have sink annotations everywhere?
[14:46:05] <FromDiscord> <tomck> honestly i like sink annotations, sink inference feels a bit hands off to me‚ÜµIf there was a way to bypass module name scopes, it'd be easy enough to have per-project reimplementations of functions that're missing `sink` in the stdlib
[14:48:05] <FromDiscord> <dom96> sink annotations are coming too close to Rust's lifetime annotations to me
[14:48:34] <FromDiscord> <dom96> but I suppose it is still just an optimisation rather than a strict requirement
[14:49:29] <FromDiscord> <tomck> ehh i dunno, nim does it the other way - assume everything is a borrow, annotate a move, & then just silently copy if something goes wrong
[14:49:45] *** Joins: Torro (Torro@gateway/vpn/protonvpn/torro)
[14:49:55] <FromDiscord> <tomck> it's still pretty frictionless, we're not quite at `Foo<'a, Bar<'a>>` just yet lol
[14:52:18] <FromDiscord> <tomck> hmmm so I've copied the stdlib into my project, and i'm pointing to itt with `--lib:custom-stdlib/`, but it's still finding `options` in the original place
[14:52:26] <FromDiscord> <tomck> does anyone know what the `--lib` flag on the compiler does?
[14:53:08] <FromDiscord> <haxscramper> `--lib:PATH                set the system library path`
[14:53:13] <FromDiscord> <haxscramper> `nim --fullhelp`
[14:53:39] <FromDiscord> <haxscramper> For nim modules use `--path`, this is for dynamic libraries I think
[14:53:55] <arkanoid> I'm headed to learning how to acquire some of the benefits of functional programming into nim. I'm talking about side-effects-free core logic while pushing stateful stuff on the edge. I'm currently forcing myself using "let" and "func" instead of "var" and "proc" in core logic. What else can I ask nim to do for me? Any idea?
[14:54:38] <FromDiscord> <Rika> experimental strict funcs?
[14:54:42] <FromDiscord> <planetis> why would you delete copy, then enable it explicitly?, can you .error sink instead?
[14:54:43] <FromDiscord> <planetis> ok youre copying rusts design
[14:54:43] <FromDiscord> <planetis> why would you delete copy, then enable it explicitly?
[14:54:44] <FromDiscord> <planetis> do --expandarc\:some and find out‚Üµ(@tomck)
[14:54:51] <FromDiscord> <haxscramper> In reply to @arkanoid "I'm headed to learning": https://github.com/arnetheduck/nim-result https://github.com/zero-functional/zero-functional
[14:54:52] <fn> <R2D2> 4GitHub: 7"Friendly, exception-free value-or-error returns, similar to Option[T]"
[14:55:56] <FromDiscord> <tomck> planetis: because disabling copy for certain things is very useful, you see it in c++ all the time
[14:56:10] <FromDiscord> <haxscramper> `.raises[].` annotations can be used to avoid exceptions as well
[14:57:09] <FromDiscord> <planetis> ok i get it‚Üµ(@tomck)
[14:57:12] <FromDiscord> <tomck> Oh ok i figured it out, `--lib` works to set the stdlib path, but you need to pass the flag earlier (??), i think it was getting consumed by my application rather than the compiler‚Üµ‚ÜµSo `nim c --lib:/foo -r src/code.nim` will point the stdlib to `/foo`, so that's all fixed
[14:58:58] *** Quits: saem[m] (~saemmatri@2001:470:69fc:105::2b1e) (Quit: Bridge terminating on SIGTERM)
[14:59:20] <FromDiscord> <tomck> haxscramper: what does .raises[]. do?
[14:59:58] <FromDiscord> <Rika> ensures no exceptions are raised
[15:00:04] *** Joins: max22- (~maxime@2a01cb088335980052496d8cfa11143e.ipv6.abo.wanadoo.fr)
[15:00:58] *** Joins: Clonkk[m] (~rfcmatrix@2001:470:69fc:105::34a8)
[15:01:24] <FromDiscord> <Rika> and are unhandled
[15:01:36] *** Joins: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4)
[15:01:36] *** Joins: saem[m] (~saemmatri@2001:470:69fc:105::2b1e)
[15:01:36] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[15:01:36] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[15:02:29] <FromDiscord> <tomck> oh i see, cool
[15:02:43] <FromDiscord> <tomck> whilst I'm here, is there any way to get Table to return an Option or equivalent?
[15:03:05] <FromDiscord> <tomck> i see it has `getOrDefault`, but the type I have in `Table` has no proper 'default' value
[15:03:26] <FromDiscord> <tomck> I don't really want to catch an exception because it's in a pretty tight loop, unless nim does weird optimisations with exceptions i'm unaware of
[15:03:30] <FromDiscord> <Rika> not that i know of currently
[15:03:42] <FromDiscord> <tomck> rip‚Üµguess i have a custom stdlib now though lol
[15:03:43] <FromDiscord> <Rika> nim exceptions are relatively fast i think?
[15:04:32] <FromDiscord> <tomck> i'm sure they are, i just don't know how it'd mess with stuff in a tight loop
[15:04:55] <FromDiscord> <tomck> would a PR be accepted to add an Option alternative, or do we want to keep the modules as separate as possible
[15:06:41] <FromDiscord> <Rika> idk search it first then try it
[15:07:45] <FromDiscord> <planetis> they are goto based
[15:08:18] *** Quits: Epsilon (~Epsilon@user/epsilon) (Remote host closed the connection)
[15:08:33] *** Joins: Epsilon (~Epsilon@user/epsilon)
[15:14:58] <FromDiscord> <planetis> also can you please make a benchmark with your alternative too? In my experience returning an option would be slower, but not sure vs exceptions
[15:16:32] <FromDiscord> <Araq> I recently benchmarked exceptions vs Option[T] and exceptions (via --exceptions:goto) where faster
[15:16:49] <FromDiscord> <Araq> for my benchmark anyway, of course.
[15:16:58] <FromDiscord> <planetis> also why make a fork of stdlib while a adding sink pr are merged on the same day?
[15:18:45] <FromDiscord> <tomck> interesting, i'll make a benchmark for it then, i have no idea how goto exceptions work
[15:18:58] <FromDiscord> <tomck> b/c i don't want to have to get a devel build of the compiler just to compile my project
[15:20:17] <FromDiscord> <planetis> it doesnt suprise me, so not going to question it
[15:22:01] <FromDiscord> <planetis> options just add even more states to my code for no benefit so tend to not use them
[15:23:11] <arkanoid> Rika, thanks. Didn't know about experimental strict funcs
[15:23:23] <FromDiscord> <Rika> yeah its relatively new
[15:30:01] *** Quits: Torro (Torro@gateway/vpn/protonvpn/torro) (Quit: leaving)
[15:57:19] <FromDiscord> <planetis> In old nim you had to use "if hasKey\:" before "table[key]" (and afaik was the reason for the withValue template), now you can just use "try\: except ValueEror\:", thats actually a big improvement. Congratulations Araq!
[16:11:23] <FromDiscord> <mantielero (mantielero)> I am playing for the first time with `nimline`. How would you do this?
[16:11:30] <FromDiscord> <mantielero (mantielero)> sent a long message, see http://ix.io/3r4U
[16:11:49] <FromDiscord> <mantielero (mantielero)> \`\`\`c++
[16:12:32] <FromDiscord> <mantielero (mantielero)> sent a code paste, see https://play.nim-lang.org/#ix=3r4V
[16:12:34] <FromDiscord> <mantielero (mantielero)> (better now)
[16:13:26] <FromDiscord> <vindaar> I'm gonna stick to `hasKey` and manually adding (or `hasKeyOrPut` directly) over try / except üòÖ
[16:15:23] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[16:15:28] <FromDiscord> <haxscramper> https://github.com/sinkingsugar/nimline/blob/703d6aec1f466a3ccbc757243185ea7349f7345c/README.md#constructors-and-destructors I think you can use `cppnewref`
[16:15:32] <FromDiscord> <haxscramper> In this case at least
[16:15:40] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[16:17:15] <FromDiscord> <haxscramper> Although I suspect it is broken for namespaced classes
[16:19:47] <FromDiscord> <mantielero (mantielero)> sent a code paste, see https://play.nim-lang.org/#ix=3r50
[16:21:07] <FromDiscord> <haxscramper> Failed how? And if `sym` is a static method you don't need to call on the instance
[16:21:36] <FromDiscord> <haxscramper> I provided an example of how to interface with static methods
[16:23:37] *** Quits: max22- (~maxime@2a01cb088335980052496d8cfa11143e.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[16:24:08] <FromDiscord> <planetis> I dunno, I was short of asking \:P
[16:26:50] <FromDiscord> <mantielero (mantielero)> Sorry I don't get it (I am not a pro-developer)
[16:29:26] <FromDiscord> <haxscramper> First - you said it failed. How exactly? Compilation error, runtime error, unexpected output?
[16:30:40] <FromDiscord> <mantielero (mantielero)> sent a code paste, see https://play.nim-lang.org/#ix=3r57
[16:30:49] <FromDiscord> <mantielero (mantielero)> Gotta have lunch now (I'll com back later)
[16:30:53] <FromDiscord> <haxscramper> Second - C++ has notion of static methods that don't require object instance when called, so if `Mx::sym` is a static method (which I assume it is, at least judging from the C++ code you showed earlier) you need to wrap it as `importcpp: "MX::sym"` for a procedure without additional `MX` parameter
[16:35:13] <FromDiscord> <haxscramper> Third - I've looked at the nimline's implementation and I would say that it might be better to wrap some things manually, unless you need to wrap the whole `MX` class (and even in this case I'm not sure if nimline is a good starting point. Seems like it does not provide any means to automatically mass-wrap methods)
[16:35:14] <FromDiscord> <haxscramper> I linked it mostly because it implements `StdString` wrapper that you needed https://github.com/sinkingsugar/nimline/tree/703d6aec1f466a3ccbc757243185ea7349f7345c#standard-library-helpers
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:44] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:42:32] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3r5b
[16:58:43] *** Joins: arkurious (~arkurious@user/arkurious)
[17:01:14] <FromDiscord> <mantielero (mantielero)> Thanks a lot for your clarifications
[17:04:40] *** Joins: fn-test (~NimBot@pool-151-196-187-54.bltmmd.fios.verizon.net)
[17:08:43] <fn> <6Prestige99> Is the color of my nick messed up over on libera?
[17:10:11] <fn> <6Prestige99> Was testing using their webchat and it looked off, but it's fine in my irc client
[17:12:20] <FromDiscord> <tomck> sent a long message, see http://ix.io/3r5h
[17:12:42] <FromDiscord> <tomck> Unsure if i'm turning on 'goto exceptions' properly, that's the flag i saw in the article on nim-lang.org
[17:13:16] *** Quits: fn-test (~NimBot@pool-151-196-187-54.bltmmd.fios.verizon.net) (Remote host closed the connection)
[17:13:22] <FromDiscord> <tomck> (edit) "http://ix.io/3r5h" => "http://ix.io/3r5i"
[17:13:31] <FromDiscord> <dom96> huh, that's very surprising
[17:14:39] <FromDiscord> <tomck> note it's more like 10x slower than default values, it's only 4x slower when the table has 1mil items, so you get more noise from cache misses b/c it doesn't fit in memory
[17:16:01] <FromDiscord> <tomck> I think i'm not turning on the special exceptions properly, because i'm getting the same performance with/without the `--exceptions:goto` flag
[17:17:33] <FromDiscord> <Araq> you need the -d:release (or -d:danger) switch
[17:17:41] <FromDiscord> <Araq> (edit) "you ... need" 03added "also"
[17:18:01] <FromDiscord> <Araq> --opt:speed is not gonna cut it, the stack tracing skews all results otherwise
[17:18:08] <FromDiscord> <planetis> @tomck nice
[17:18:51] <FromDiscord> <tomck> sent a code paste, see https://play.nim-lang.org/#ix=3r5j
[17:19:33] <FromDiscord> <Araq> dunno, benchmarking is hard, also try `--gc:orc` (which implies the goto exceptions)
[17:20:46] <FromDiscord> <tomck> weird, gc:orc and gc:arc are MUCH slower, probably because they inc/dec references
[17:21:35] <FromDiscord> <tomck> what about a proc that returned a pointer to the table value, that way if you care about perf you can do what you want with it & deal with iterator invalidation, but if you don't you just don't touch it
[17:23:14] *** Quits: fn (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[17:23:30] *** Joins: fn (~NimBot@ns501209.ip-142-4-210.net)
[17:29:27] *** Joins: hoijui (~hoijui@2001:16b8:c228:c400:f029:3a88:b4e3:8752)
[17:31:42] <FromDiscord> <planetis> https://play.nim-lang.org/#ix=3r5m wit options
[17:34:05] <FromDiscord> <planetis> so you are benchmarking the extreme senario when is empty
[17:34:26] <FromDiscord> <planetis> ok i had more normal usage in mind
[17:34:36] <FromDiscord> <tomck> the 'extreme' scenario?
[17:34:42] <FromDiscord> <planetis> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/857969394746261564): so you are benchmarking the extreme scenario when is empty
[17:34:42] <FromDiscord> <tomck> it's 50% hits, or should be
[17:35:02] <FromDiscord> <tomck> not all misses - & i don't think all misses is even that extreme
[17:35:23] <FromDiscord> <planetis> oh ok
[17:35:37] <FromDiscord> <planetis> my bad i see setupTestTable now
[17:35:42] <FromDiscord> <planetis> missed it
[17:35:54] <FromDiscord> <tomck> np
[17:36:20] <FromDiscord> <tomck> right i've added an option return to my stdlib copy, i'll setup a PR for that tonight & we shall see, gtg now
[17:37:20] <FromDiscord> <planetis> bye
[17:40:27] <FromDiscord> <planetis> its a bit faster if you remove KeyError
[17:50:40] *** Joins: max22- (~maxime@2a01cb088335980044631fd924fbcf81.ipv6.abo.wanadoo.fr)
[17:52:48] <FromDiscord> <planetis> we are basically seeing allocating and deallocating KeyError
[18:05:48] <FromDiscord> <planetis> this is weird right?
[18:05:49] <FromDiscord> <planetis> Screenshot\_20210625\_162942.png https://media.discordapp.net/attachments/371759389889003532/857977382496895006/Screenshot_20210625_162942.png
[18:05:57] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3r5A
[18:06:47] <FromDiscord> <haxscramper> Would it make sense to spend time on placing cursor annotations everywhere or otherwise this might be caused by unnecessary copying that I should try to find?
[18:10:02] <FromDiscord> <offbeat-stuff (offbeat-stuff)> Hi, is there a pragma like {.define(ssl).} that i can use
[18:10:58] <FromDiscord> <haxscramper> no, you need to pass `-d:ssl` from the command line/config file
[18:18:04] *** Quits: hoijui (~hoijui@2001:16b8:c228:c400:f029:3a88:b4e3:8752) (Ping timeout: 244 seconds)
[18:22:11] <FromDiscord> <offbeat-stuff (offbeat-stuff)> actually it is exactly {.define(ssl).}
[18:22:24] <FromDiscord> <offbeat-stuff (offbeat-stuff)> just have to use it just before importing the module
[18:28:33] <FromDiscord> <haxscramper> Ah, it seems I confused recommendation not to do this vs "it does not work"
[18:29:04] *** Joins: hoijui (~hoijui@2001:16b8:c228:c400:f029:3a88:b4e3:8752)
[18:33:17] <FromDiscord> <planetis> anyone knows why sumWithHasKey seems to be twice slower than raising, in that benchmark? only with perf
[18:39:36] <FromDiscord> <planetis> that benchmark is super weird, I changed setupTestTable to be always filled, removed the try block and getting same results
[18:40:06] <FromDiscord> <planetis> https://play.nim-lang.org/#ix=3r5N
[18:41:19] <FromDiscord> <Araq> still a good point, we need to remove these allocations üôÇ
[18:41:58] <FromDiscord> <Araq> I wonder why it didn't show up in my benchmark, probably because I test exception propagation, not exception allocation
[18:44:08] *** Joins: SebastianM (~seba@user/sebastianm)
[18:46:29] <FromDiscord> <planetis> ...and also strstr\_sse was poping up with except KeyError but until i unconfuse myself I don't know how but was that
[18:51:02] <FromDiscord> <leorize> because of how RTTI in arc/orc work
[18:51:22] <FromDiscord> <planetis> my guess is sumWithDefault and sumWithOpt are optimized away so @tomck you weren't benchmarking anything useful
[18:51:30] <FromDiscord> <leorize> `of` is done via a string in the object with every parent in it
[18:51:52] <FromDiscord> <leorize> then Nim uses strstr to scan for the parent
[18:52:18] <FromDiscord> <leorize> it's pretty inefficient tbh
[18:54:21] *** Joins: rockcavera (~rc@192.12.113.216)
[18:54:21] *** Quits: rockcavera (~rc@192.12.113.216) (Changing host)
[18:54:21] *** Joins: rockcavera (~rc@user/rockcavera)
[18:57:00] <fn> <11ForumUpdaterBot99> New thread by Tsojtsoj: Is there a built in way to get how high total CPU usage is?, see https://forum.nim-lang.org/t/8155
[19:00:10] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[19:03:27] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[19:03:50] *** Joins: rockcavera (~rc@192.12.113.216)
[19:03:50] *** Quits: rockcavera (~rc@192.12.113.216) (Changing host)
[19:03:50] *** Joins: rockcavera (~rc@user/rockcavera)
[19:06:13] *** Joins: Derbycat (uid229420@id-229420.brockwell.irccloud.com)
[19:20:22] *** notchris_ is now known as notchris
[19:37:38] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[19:38:02] *** Joins: supakeen (~user@python/site-packages/supakeen)
[19:38:54] <FromDiscord> <planetis> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/857988846141833283): my guess is sumWithDefault and sumWithOpt are optimized away so tomck#5836 you weren't benchmarking anything useful (confirmed)
[19:41:38] <FromDiscord> <tomck> planetis: Hmmm how so? it's not like they take 0 time, they take time proportional to how big the table is
[19:42:08] <FromDiscord> <planetis> i confirmed it
[19:42:17] <FromDiscord> <tomck> so what's it spending time doing when it takes 3ms
[19:42:23] <FromDiscord> <planetis> look at the assembly really quick
[19:43:43] <FromDiscord> <tomck> doesn't look optimised away, is there an earlyr eturn or something i'm not spotting? might be optimised away on your compiler, i'm on 1.5.1
[19:44:22] <FromDiscord> <tomck> oh no, looks like i'm on nightly? i'm on the 1.5.1 tag on gitnim, idk what that means
[19:44:58] <FromDiscord> <planetis> better question is what's your c compiler, mine is clang
[19:45:32] <FromDiscord> <tomck> err i have a bunch, how does nim choose
[19:45:50] <FromDiscord> <tomck> it's either gcc7.5 or clang 9
[19:46:13] <FromDiscord> <tomck> regardless, it's not optimised away on mine, & i'm seeing 8x slowdown
[19:46:24] <FromDiscord> <tomck> if it was optimised away i'd be seeing like 100000x slowdown
[19:46:55] <FromDiscord> <planetis> --cc\:clang/gcc/..
[19:46:55] <FromDiscord> <planetis> make it first argument (after nim c )
[19:46:55] <FromDiscord> <planetis> make it first argument
[19:48:04] <FromDiscord> <planetis> then your are not compiling with -d\:danger
[19:48:08] <FromDiscord> <tomck> yeah it's not optimising it away with clang
[19:48:26] <FromDiscord> <tomck> i tried both danger & release, although i'm not sure i waant to compile with a flag called 'danger' lol
[19:48:51] <FromDiscord> <tomck> yeah under danger on clang it's optimising the default one away
[19:49:31] <FromDiscord> <tomck> not optimising the hasKey check though, i'm still getting 8x  slower than haskey, so it's obviously still an issue
[19:49:38] <FromDiscord> <planetis> ok gcc
[19:50:02] <FromDiscord> <tomck> what?
[19:50:44] <FromDiscord> <planetis> im not getting useful numbers
[19:51:21] <FromDiscord> <planetis> either way you need to make sure stuff doesn't get optimized away
[19:56:21] <FromDiscord> <gerwy> how to setup nimble?
[19:57:33] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "how to setup nimble?": It gets installed as part of nim installations.‚Üµ‚ÜµWhat does a setup mean?
[19:58:01] <FromDiscord> <gerwy> or maybe other way‚Üµwhat advantages i get when creating nimble project? Does i really need it?
[19:59:34] <FromDiscord> <kaushalmodi> sent a long message, see http://ix.io/3r6h
[20:00:31] <FromDiscord> <kaushalmodi> See https://github.com/nim-lang/nimble#creating-packages for more info.
[20:00:33] <fn> <12R2D299> 4GitHub: 7"Package manager for the Nim programming language."
[20:00:47] <FromDiscord> <gerwy> oh right,  i thought its easy only if it will be used as module, not if i was making an app
[20:01:06] <FromDiscord> <gerwy> also i already have git repo in that folder :<<
[20:01:11] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "oh right,  i": Nimble is useful for lib/app/hybrid packages -- all
[20:01:55] <FromDiscord> <gerwy> ooh i see there are other types of nimble projects
[20:01:57] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "also i already have": That's OK. `nimble init` does the right thing whether you already have a project folder created or not. If you already have a git repo dir, cd to that dir and then do `nimble init`.
[20:01:59] <FromDiscord> <gerwy> thats so coool
[20:03:29] <FromDiscord> <gerwy> so if its an app, i do `binary`?
[20:04:12] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "so if its an": Yes
[20:04:25] <FromDiscord> <gerwy> yaaay okay thank you<3
[20:06:46] <FromDiscord> <gerwy> oh god i need to choose license too and i have no idea which is the best like always
[20:09:26] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "oh god i need": You might get multiple answers here. I use MIT.
[20:10:20] <FromDiscord> <kaushalmodi> In reply to @Life Sucks "oh god i need": https://choosealicense.com/licenses/
[20:11:20] <FromDiscord> <gerwy> yeah its probably the best for me, im not good at choosing which is better because i don't see so much difference
[20:12:13] <FromDiscord> <gerwy> but MIT seems right
[20:35:40] *** Quits: Epsilon (~Epsilon@user/epsilon) (Remote host closed the connection)
[20:35:58] *** Joins: Epsilon (~Epsilon@user/epsilon)
[20:38:16] <FromDiscord> <planetis> @tomck I can confirm your numbers\: https://play.nim-lang.org/#ix=3r6v
[21:02:06] <FromDiscord> <planetis> https://play.nim-lang.org/#ix=3r6C
[21:04:27] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Read error: Connection reset by peer)
[21:17:04] <FromDiscord> <emef> are there any automatic source formatters for nim like go fmt or scalafmt?
[21:17:18] <FromDiscord> <emef> there is a nimfmt package on github that is abandoned and doesn't compile
[21:17:27] <FromDiscord> <leorize> nimpretty but it's not opinionated
[21:18:40] <FromDiscord> <emef> thanks will look into that
[21:18:48] *** Joins: vicfred (~vicfred@user/vicfred)
[21:19:21] <FromDiscord> <treeform> I also made `morepretty` that uses nimpretty but goes beyond and is even more opinionated.
[21:20:06] *** Joins: deshordash (~textual@li2214-92.members.linode.com)
[21:20:36] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3r6I
[21:20:49] <FromDiscord> <Canelhas> In reply to @treeform "I also made `morepretty`": this one, i assume?‚Üµhttps://github.com/treeform/morepretty
[21:20:51] <fn> <12R2D299> 4GitHub: 7"Morepretty - like nimpretty but with more stuff."
[21:21:02] <FromDiscord> <leorize> iterable is a typeclass now
[21:22:14] *** Quits: deshordash (~textual@li2214-92.members.linode.com) (Remote host closed the connection)
[21:23:24] *** Joins: PersonMcGuy (~629cc7fe@ircip2.mibbit.com)
[21:29:09] <PersonMcGuy> Hello, sorry if this a stupid question, but is it possible to have multiple types for the value in a table? i.e. Table[string, int | float] ?
[21:29:30] <FromDiscord> <treeform> It looks like this is the a function I want to work, but it just does not work for walk dir: https://github.com/def-/nim-iterutils/blob/master/src/iterutils.nim#L90
[21:30:20] <FromDiscord> <treeform> I don't understand what this error is telling me: `Error: attempting to call routine: 'walkDir'‚Üµ  found 'os.walkDir(dir: string, relative: bool, checkDir: bool) [declared in ....' of kind 'iterator'`
[21:35:59] <FromDiscord> <planetis> so this line\: https://github.com/nim-lang/Nim/blob/devel/lib/pure/collections/tables.nim#L238-L241 makes `[]` 1-1.7x slower than getOrDefault even when not raising
[21:40:43] <FromDiscord> <zetashift> In reply to @PersonMcGuy "Hello, sorry if this": You could use a Variant for that
[21:45:18] <PersonMcGuy> @zetashift Thank you, looking into it now
[21:49:32] <FromDiscord> <hamidb80> i don't get it
[21:49:50] <FromDiscord> <hamidb80>  https://media.discordapp.net/attachments/371759389889003532/858033756073754674/unknown.png
[21:50:15] <FromDiscord> <hamidb80> i ran compile `utils.nim` directly without any error
[21:50:36] <FromDiscord> <hamidb80> but importing it in another module gives me this
[21:50:51] <FromDiscord> <hamidb80> In reply to @hamidb80 "i ran compile `utils.nim`": i can
[21:51:14] <FromDiscord> <tomck> @hamidb80 that's because it's a template
[21:51:28] <FromDiscord> <tomck> so when you call the template, it generated the code that calls mapIt in the module you call the template from
[21:51:37] <FromDiscord> <tomck> so the module you call the template from also needs to import mapIt, i believe (?)
[21:52:00] <FromDiscord> <hamidb80> hmm
[21:52:57] <FromDiscord> <hamidb80> template hygiene ..
[21:54:45] <FromDiscord> <tomck> i don't know if that's 'unhygeinic'
[21:55:41] <FromDiscord> <leorize> add `bind mapIt` to your template
[21:55:59] <FromDiscord> <leorize> then the mapIt symbol will be resolved to the one available at your implementation scope
[22:04:59] *** Joins: vsantana (~Thunderbi@2804:214:816e:9813:5887:44f7:92cf:a49f)
[22:18:32] *** Joins: vsantana1 (~Thunderbi@fttx-17713614930.usr.predialnet.com.br)
[22:20:54] *** Quits: vsantana (~Thunderbi@2804:214:816e:9813:5887:44f7:92cf:a49f) (Ping timeout: 244 seconds)
[22:20:54] *** vsantana1 is now known as vsantana
[22:23:37] <FromDiscord> <kaushalmodi> In reply to @leorize "add `bind mapIt` to": TIL about `bind`: https://nim-lang.github.io/Nim/manual#generics-bind-statement
[22:28:03] *** Quits: PersonMcGuy (~629cc7fe@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[22:53:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[23:06:36] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[23:06:58] *** Joins: mst (~matthewt@vps-6c71e929.vps.ovh.net)
[23:10:49] *** Joins: rockcavera (~rc@192.12.113.216)
[23:10:49] *** Quits: rockcavera (~rc@192.12.113.216) (Changing host)
[23:10:49] *** Joins: rockcavera (~rc@user/rockcavera)
[23:14:09] *** Joins: ozzz_ (~oz@46.49.41.80)
[23:15:28] *** Quits: ozzz (~oz@46.49.41.80) (Ping timeout: 265 seconds)
[23:18:08] <FromDiscord> <gerwy> In reply to @hamidb80 "": how did you got that crown in VS Code? It looks super cool
[23:19:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:28:42] *** Quits: vsantana (~Thunderbi@fttx-17713614930.usr.predialnet.com.br) (Ping timeout: 258 seconds)
[23:31:02] <FromDiscord> <Elegantbeef> @gerwy\: https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme
[23:38:04] *** Quits: hoijui (~hoijui@2001:16b8:c228:c400:f029:3a88:b4e3:8752) (Quit: Leaving)
[23:46:13] <FromDiscord> <gerwy> Thank you :O
