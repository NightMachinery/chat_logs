[00:00:39] *** Joins: blez (~blez@213.91.182.96)
[00:00:56] <ljharb> Task would be awesome
[00:00:56] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:01:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:01:07] <ljharb> basically, it would wrap an async function, and vend a promise
[00:01:41] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it) (Remote host closed the connection)
[00:02:06] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it)
[00:02:31] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:03:00] *** Joins: blez (~blez@213.91.182.96)
[00:04:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:04:15] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:04:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:04:15] *** Joins: wroathe (~wroathe@user/wroathe)
[00:05:03] <z1haze> can anyone link me to some documentation that explains the differences between $VAR and ${VAR} and ${{VAR}} when it comes to github actions? or if its not specific to github actions that's fine too
[00:05:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:05:14] <ljharb> z1haze: that's just shell syntax
[00:05:17] <ljharb> i think
[00:05:21] *** Joins: blez (~blez@213.91.182.96)
[00:05:22] <ljharb> got a file?
[00:05:31] <z1haze> im writing one
[00:05:32] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:05:41] <z1haze> just trying to see why im not getting results i expect, i think its related to that though
[00:06:14] <ljharb> share what you have
[00:06:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:06:26] <ljharb> also i have some reusable actions you could use
[00:07:27] <z1haze> im basically running some cli that will return a string, and i am using actions/github-script to comment that url
[00:07:41] <z1haze> but when i attempt to echo the variable it just prints nothing
[00:07:42] *** Joins: blez (~blez@213.91.182.96)
[00:07:51] <z1haze> let me get a simple usecase for me to share with you
[00:07:51] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:09:16] <z1haze> you wont be able to execute some of it, but you can mimic it im sure https://bpa.st/75CQ
[00:09:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[00:09:25] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:09:33] <z1haze> the workflow passes without error except the second step i expect to echo that string, but it doesnt
[00:10:03] *** Joins: blez (~blez@213.91.182.96)
[00:10:35] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:11:11] *** Joins: salad1 (~cucumber@188.25.234.155)
[00:11:11] *** Quits: salad (~cucumber@188.25.234.155) (Read error: Connection reset by peer)
[00:12:16] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it) (Remote host closed the connection)
[00:12:21] <z1haze> oh ffs i have a type from my example
[00:12:25] *** Joins: blez (~blez@213.91.182.96)
[00:12:35] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it)
[00:12:35] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:12:44] <z1haze> let me make sure that i didnt actually attempt with this before you waste your time
[00:13:37] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:14:26] *** Joins: mknod (~mknod@user/mknod)
[00:14:45] *** Joins: blez (~blez@213.91.182.96)
[00:15:00] *** Joins: Leonard (~Administr@114.55.127.80)
[00:15:00] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:16:34] <AJTJ> I'm always confused by the terms synchronous and asynchronous
[00:16:53] <mknod> Hello. Can I do something as weird as this in JavaScript:
[00:16:58] <mknod> dataSheet.(hide ? hideColumns : showColumns)(colIdx, numCols);
[00:17:07] *** Joins: blez (~blez@213.91.182.96)
[00:17:08] <mknod> Not this specifically, but you get the idea.
[00:17:10] <AJTJ> synchronous SOUNDS like it should mean that operations are performed at the same time.
[00:17:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:17:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:17:37] <silly> dataSheet[hide ? hideColumns : showColumns](colIdx, numCols);
[00:18:00] <mknod> Can't believe it.
[00:18:19] <mknod> silly, without the dot?
[00:18:27] <silly> !dot @mknod
[00:18:27] <jellobot> mknod, yourObject.foobar is just another way of saying yourObject['foobar']. So of course if varName = 'foobar', then it's also the same as yourObject[varName]. Dot notation is preferred to bracket notation except where the property name would be an invalid identifier. The same applies to quoting keys inside object literals - don't do it unless you have to.
[00:18:57] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[00:19:20] <mknod> Ah, so I'm really just returning hideColumns/showColumns as strings here?
[00:19:28] <silly> n> x={a:console.log}; x[1?'a':'b'](2)
[00:19:30] <jellobot> (okay) 2
[00:19:32] *** Joins: blez (~blez@213.91.182.96)
[00:19:40] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:19:48] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[00:20:54] <AJTJ> when js uses async/await, is the asynchronous process put into another web worker?
[00:21:01] <AJTJ> i.e. another thread?
[00:21:54] *** Joins: blez (~blez@213.91.182.96)
[00:21:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:22:28] <z1haze> yeah dude @ljharb that was it, thanks anyway
[00:23:20] <mknod> silly, thanks. Haven't look under the hood yet.
[00:23:36] <ljharb> z1haze: npm, glad you figured it out
[00:23:42] <mknod> Not as weird as it seems actually.
[00:23:42] <ljharb> *np
[00:23:47] <ljharb> AJTJ: no
[00:23:47] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:23:49] <ljharb> AJTJ: JS is single-threaded
[00:24:15] *** Joins: blez (~blez@213.91.182.96)
[00:24:35] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:25:33] *** Joins: Naan (~naan@user/naan)
[00:26:10] <z1haze> ljharb, you are pretty familiar with github actions though?
[00:26:30] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:26:35] *** Joins: blez (~blez@213.91.182.96)
[00:26:38] <z1haze> is there a better way to export/set env vars from a workflow other than needing to specify an id of a step, and pull them from the steps[id].outputs ?
[00:26:39] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:26:48] <AJTJ> ljharb: so, how does JS run another process asynchronously
[00:27:37] *** Quits: federico_it (~textual@151.68.66.147) (Ping timeout: 240 seconds)
[00:28:19] <z1haze> at what level are you trying to understand?
[00:28:56] *** Joins: blez (~blez@213.91.182.96)
[00:30:24] <AJTJ> I'm trying to understand how JS performs async operations while being single-threaded. I suppose it must jump from operation to operation.
[00:30:24] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:30:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[00:31:02] <AJTJ> I suppose most async operations aren't CPU bound tho
[00:31:15] <AJTJ> so it's more about constantly checking if a response has been heard
[00:31:22] <AJTJ> received*
[00:31:25] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:32:22] *** Joins: federico_it (~textual@151.46.93.35)
[00:32:24] <z1haze> there is an event loop
[00:32:56] <stenno> ljharb: you are opped up
[00:33:03] <z1haze> and certain tasks are recognized as being async so they are handed off, and when those tasks are finished there is a callback
[00:33:21] *** Joins: blez (~blez@213.91.182.96)
[00:33:26] *** Joins: pavonia (~user@user/siracusa)
[00:33:26] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:34:01] *** Joins: salad (~cucumber@188.25.234.155)
[00:34:01] *** Quits: salad (~cucumber@188.25.234.155) (Remote host closed the connection)
[00:34:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:20] <z1haze> running in a single thread and having async callbacks arent mutually exclusive
[00:35:23] *** Joins: Betal (~Betal@user/betal)
[00:35:41] *** Joins: blez (~blez@213.91.182.96)
[00:35:45] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:37:18] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[00:37:22] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[00:37:30] <AJTJ> z1haze: when you say a task is "handed off" where is it handed to?
[00:37:44] <z1haze> the browser
[00:38:01] *** Joins: blez (~blez@213.91.182.96)
[00:38:02] *** Joins: onosendi (~onosendi@user/onosendi)
[00:38:39] <z1haze> folks a lot smarter than me can elaborate or correct me
[00:38:39] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:38:53] <AJTJ> hm
[00:38:57] *** Quits: nwoob (~apple@103.135.38.180) (Ping timeout: 240 seconds)
[00:39:08] <AJTJ> I'm thinking more in a node and/or non-browser context
[00:40:22] *** Joins: blez (~blez@213.91.182.96)
[00:41:07] <z1haze> if you have 10 tasks to perform, some of them are sync processes, and others are async, such as database calls, or something like that. javascript is still going to execute all of those calls in the same order
[00:41:07] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:41:14] <z1haze> in the same thread
[00:41:31] <z1haze> however, it keeps track of that, and those calls that have async callbacks will get executed when they finish
[00:42:43] *** Joins: blez (~blez@213.91.182.96)
[00:43:52] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:44:09] *** Quits: taupiqueur (~taupiqueu@43.245.204.77.rev.sfr.net) (Quit: taupiqueur)
[00:45:03] *** Joins: blez (~blez@213.91.182.96)
[00:46:13] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:47:25] *** Joins: blez (~blez@213.91.182.96)
[00:47:57] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:48:24] *** Joins: Leonard (~Administr@114.55.127.80)
[00:49:46] *** Joins: blez (~blez@213.91.182.96)
[00:50:12] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:50:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[00:52:08] *** Joins: blez (~blez@213.91.182.96)
[00:53:03] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:54:28] *** Joins: blez (~blez@213.91.182.96)
[00:56:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:56:50] *** Joins: blez` (~blez@213.91.182.96)
[00:57:38] *** Quits: comatory_ (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[00:57:38] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[00:57:44] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[00:58:11] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[00:58:37] *** Quits: pmercado (~pmercado@186.107.47.151) (Ping timeout: 240 seconds)
[00:59:07] *** Joins: onosendi (~onosendi@user/onosendi)
[00:59:13] *** Joins: blez (~blez@213.91.182.96)
[00:59:20] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:03:38] *** Joins: blez (~blez@213.91.182.96)
[01:04:07] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:04:09] <ljharb> stenno: i'm aware, i prefer to keep it on all the time
[01:04:20] <stenno> ok
[01:04:34] <ljharb> z1haze: yes, i am, and no, there's not, except for the `env:` key that `run` steps support
[01:04:44] <ljharb> AJTJ: JS is single threaded. i/o isn't JS.
[01:05:07] <ljharb> AJTJ: iow, it's not the awaiting that sends things to another thread - it's "initiating i/o". the awaiting is still done in JS, within the only thread
[01:05:10] *** Joins: dudek (~dudek@185.150.236.156)
[01:05:49] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[01:05:58] *** Joins: blez (~blez@213.91.182.96)
[01:06:40] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:07:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:08:20] *** Joins: blez (~blez@213.91.182.96)
[01:08:59] *** Joins: asa22 (~asa22@84.125.126.8.dyn.user.ono.com)
[01:08:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:09:10] <asa22> how do I select an element by its style attribute and its values
[01:09:40] <ljharb> asa22: i'm not sure you can. why would you need to?
[01:10:12] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:10:30] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (Remote host closed the connection)
[01:10:39] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:10:41] *** Joins: blez (~blez@213.91.182.96)
[01:11:29] <asa22> Im using C# with selenium webdriver and need to click in an input that is behind a div, this cannot be done so I have to execute a JS script that will either remove this div or change It's z-index, first thing I need to do in JS is find the element
[01:11:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:11:49] <asa22> ljharb
[01:12:27] <asa22> the div has no id attribute or anything else just a style attribute with some values
[01:12:58] <ljharb> asa22: use an xpath or something
[01:13:01] *** Joins: blez (~blez@213.91.182.96)
[01:13:11] <ljharb> asa22: but also, if it's behind a div then a user can't click it anyways, so why would you need to click it
[01:13:21] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:13:25] <asa22> because It's a test im doing
[01:13:26] <onosendi> `[style="foo"]` ?
[01:13:53] <ljharb> asa22: what are you testing?
[01:13:58] <ljharb> an impossible user flow isn't something you test
[01:14:07] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[01:14:12] <asa22> I mean someone is testing my ability to do this kind of things
[01:14:19] <asa22> Im the one being tested lol
[01:14:25] <ljharb> right but i mean, what's the point
[01:14:30] <ljharb> selenium is for e2e tests
[01:14:34] <asa22> the point is to know if I can solve the problem
[01:14:37] <ljharb> nobody would be e2e testing something a user can't do
[01:14:49] <ljharb> the solution is "this is not something anyone would ever have to do, so why would i solve it"
[01:15:10] <ljharb> now, if you're trying to scrape a site and bypass some kind of protection, then that'd make sense, but you haven't been upfront about that yet
[01:15:19] <asa22> oh fuck off
[01:15:31] *** Joins: blez (~blez@213.91.182.96)
[01:15:42] <ljharb> that's pretty hostile, i haven't even gotten into the ethics of scraping yet
[01:15:42] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:15:48] <asa22> what an idiot
[01:16:05] *** asa22 was kicked by ljharb (maybe don't insult the experts you're asking for free help)
[01:16:15] *** Joins: matsaman (~matsaman@user/matsaman)
[01:16:52] <ljharb> no patience for that today, maybe they'll come back and be polite
[01:17:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:17:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:17:37] *** Joins: wroathe (~wroathe@user/wroathe)
[01:17:53] *** Joins: blez (~blez@213.91.182.96)
[01:18:00] *** Joins: Leonard (~Administr@114.55.127.80)
[01:18:00] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:20:13] *** Joins: blez (~blez@213.91.182.96)
[01:20:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:20:43] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:21:14] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[01:21:51] <Covrus> life's too short for such people
[01:22:34] *** Joins: blez (~blez@213.91.182.96)
[01:24:08] *** Quits: salad1 (~cucumber@188.25.234.155) (Quit: salad1)
[01:24:08] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:24:19] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[01:24:21] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:24:21] *** Quits: w0ng (~w0ng@103.1.212.77) (Ping timeout: 250 seconds)
[01:24:55] *** Joins: blez (~blez@213.91.182.96)
[01:25:16] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[01:25:16] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:27:17] *** Joins: blez (~blez@213.91.182.96)
[01:28:44] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:29:37] *** Joins: blez (~blez@213.91.182.96)
[01:29:43] <wovixo> Now that faker.js has been endgame'd, any decent alternatives that people have used?
[01:30:52] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[01:30:52] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:31:13] *** Joins: jamea (~jamea@189.237.44.68)
[01:32:03] *** Joins: blez (~blez@213.91.182.96)
[01:32:14] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:32:36] *** Joins: Leonard (~Administr@114.55.127.80)
[01:32:46] *** Joins: w0ng (~w0ng@103.1.212.77)
[01:32:48] <onosendi> wovixo: did you watch the same video I did this morning?
[01:34:00] *** Joins: silverdust (~silverdus@user/silverdust)
[01:34:23] *** Joins: blez (~blez@213.91.182.96)
[01:35:01] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:35:02] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:35:46] <wovixo> No, but I did later. I was trying to use faker in a new project but kept getting errors. Checked the repo eventually and saw what was up. Weird, but I still need a good library for fake/mock data.
[01:36:43] *** Joins: blez (~blez@213.91.182.96)
[01:36:54] <wovixo> You're talking about the Fireship video?
[01:36:54] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:36:58] <onosendi> Yeah
[01:38:15] <wovixo> That kind of thing is what makes me the most nervous about ecosystems like Node. Exemplified by XKCD, of course: https://xkcd.com/2347/
[01:38:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[01:39:04] *** Joins: blez (~blez@213.91.182.96)
[01:39:48] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:40:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[01:40:43] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Remote host closed the connection)
[01:40:45] <onosendi> wovixo: https://github.com/onosendi/faker.js
[01:41:00] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:41:01] <onosendi> You can fork it and package it yourself, if you want.
[01:41:27] *** Joins: blez (~blez@213.91.182.96)
[01:41:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[01:41:50] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:43:48] *** Joins: blez (~blez@213.91.182.96)
[01:44:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:45:28] <onosendi> wovixo: actually: https://github.com/withshepherd/faker.js
[01:46:10] *** Joins: blez (~blez@213.91.182.96)
[01:48:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:48:30] *** Joins: blez` (~blez@213.91.182.96)
[01:48:31] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:49:10] <austincheney> wovixo, that is actually most software now after consideration for OpenSSL
[01:50:16] <austincheney> about half the web is reliant upon OpenSSL for cryptography, including Google, and a couple years back the two guys running it nearly shelved it and gave up becasue they didn't have the time or funding to continue
[01:50:45] *** Joins: blez (~blez@213.91.182.96)
[01:52:57] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:53:07] *** Joins: blez` (~blez@213.91.182.96)
[01:54:39] <Decker> chrome is actually boringssl not openssl
[01:54:39] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:55:28] *** Joins: blez (~blez@213.91.182.96)
[01:55:49] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:55:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:57:53] *** Joins: blez (~blez@213.91.182.96)
[01:58:11] <mknod> Does using === when checking the length of an object suggests I have no clue what that third = is all about? Given that length always returns a number anyway...?
[01:58:11] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[01:58:48] <mknod> Or is it more about using === by default and resorting to == when explicitly needed?
[01:58:50] <matsaman> Decker: forked from openssl
[01:58:56] <matsaman> the question is whether it would endure if openssl died
[01:59:00] <matsaman> the question with every fork
[01:59:17] <Decker> granted... but diverant... can't just take code for one and compile against the other - especially with 3.0 changes
[01:59:20] <matsaman> mknod: it does a specific thing, vs ==, and you either like it or you don't
[01:59:32] <Decker> divergent
[01:59:32] <onosendi> mknod: always use ===
[01:59:34] <matsaman> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality
[01:59:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:59:52] <matsaman> you have to keep in mind that there are three types of programmers
[02:00:03] <mknod> matsaman, I either need it or I don't
[02:00:03] *** Joins: Leonard (~Administr@114.55.127.80)
[02:00:15] *** Joins: blez (~blez@213.91.182.96)
[02:00:18] <matsaman> mknod: you don't, but it has uses
[02:00:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:00:29] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[02:00:29] <matsaman> there are programmers who are pretty ordinary and don't freak out about things
[02:00:32] <mknod> onosendi, I'm all for it, but what's the rationale behind strict equality?
[02:00:36] <matsaman> there are programmers who want to learn the least amount of things
[02:00:42] <mknod> beyond*
[02:00:51] <matsaman> and there are programmers who want everything to be insanely strict and to fail and produce warnings and try to do the work for them
[02:01:32] <mknod> I belong to the third category.
[02:01:37] <matsaman> 'Unlike the equality operator, the strict equality operator always considers operands of different types to be different.'
[02:01:40] <matsaman> that's it
[02:01:45] <matsaman> either you find that highly useful or you don't
[02:01:49] <mknod> matsaman, *I know*.
[02:02:08] <mknod> for length, it certainly isn't, right?
[02:02:10] <matsaman> if you're in the third category, you should probably be a === person
[02:02:22] <matsaman> it's really not necessary
[02:02:33] <matsaman> if your code fails from something that using === over == would've kept from happening
[02:02:34] <onosendi> n> '1' == 1; undefined == null; @ matsaman
[02:02:35] <jellobot> matsaman, true
[02:02:37] *** Joins: blez (~blez@213.91.182.96)
[02:02:39] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[02:02:39] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:02:39] <matsaman> your code will fail from some other logical problem eventually anyway
[02:03:16] <austincheney> Decker, there is more to google than Chrome
[02:03:29] <matsaman> onosendi: yeah but I prefer to know what type a thing is beforehand
[02:03:48] <onosendi> matsaman: then TypeScript.
[02:03:59] <matsaman> hard pass =P
[02:04:03] <onosendi> :P
[02:04:14] <mknod> What's a good example of preferring == over ===?
[02:04:18] <matsaman> in any language I would use, I wouldn't need something like ===
[02:04:20] <biberu> matsaman: why?
[02:04:22] <matsaman> I appreciate it exists, though
[02:04:39] <onosendi> matsaman: eh, that @ was supposed to be to mknod, sorry.
[02:04:39] <biberu> (about ts)
[02:04:39] <matsaman> mknod: simply not needing or caring if the types are the same
[02:04:59] *** Joins: blez (~blez@213.91.182.96)
[02:05:00] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:05:11] <matsaman> biberu: don't like the developer, the license, and I'm pretty happy with languages the predate it
[02:05:17] <matsaman> that* predate
[02:05:21] *** Joins: blez (~blez@213.91.182.96)
[02:05:26] <matsaman> onosendi: ah =)
[02:06:18] <biberu> matsaman: what language are you using instead when you want to target a js runtime then?
[02:06:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:06:43] <Alexendoo> mknod: == null can be used to check for undefined or null, that's about the only one
[02:07:07] <matsaman> I only really use python, javascript, & bash, all for boring general purpose type stuff
[02:07:30] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:7d62:9434:eaa6:c2)
[02:07:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:07:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:07:36] *** Joins: wroathe (~wroathe@user/wroathe)
[02:07:41] <biberu> not big on type safety? ^^
[02:07:48] <matsaman> nope
[02:07:49] *** Joins: blez (~blez@213.91.182.96)
[02:07:59] <matsaman> I'm big on checking for things in my code that I care about
[02:07:59] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[02:07:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:08:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:08:21] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[02:08:32] *** Quits: gpap (~pap@athedsl-384810.home.otenet.gr) (Quit: Leaving)
[02:08:57] <matsaman> "JavaScript has two sets of equality operators: === and !==, and their evil twins == and !=. The good ones work the way you would expect."
[02:09:02] <matsaman> I already expect == and != to work that way
[02:09:06] <matsaman> this is a simple mental preference issue
[02:09:26] <yagamilito>  Hello
[02:09:27] <yagamilito> I am trying to read comment from PR using github actions
[02:09:28] <yagamilito> currently i am able to read comments is it possible to read only selected string
[02:09:28] <yagamilito> currently my comment has something like this
[02:09:28] <yagamilito>  eg:
[02:09:29] <yagamilito> ## pr comments
[02:09:29] <yagamilito> foobar: abc
[02:09:30] <yagamilito> bar: 2
[02:09:30] <yagamilito> foo: 1
[02:09:31] <yagamilito> i want to read only
[02:09:31] <yagamilito> foobar: abc
[02:09:32] <yagamilito> bar: 2
[02:09:32] <yagamilito> foo: 1
[02:09:33] <yagamilito> and ignore all other content in the comment
[02:09:33] <yagamilito> https://pastebin.com/jN2V61gm
[02:09:37] <matsaman> although I do actually also hate syntaxes that use consecutive same chars
[02:10:20] *** Joins: blez (~blez@213.91.182.96)
[02:10:21] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:10:36] <mknod> Alexendoo, speaking of undefined, should I return false or undefined when a functions that returns a string fails?
[02:10:45] <matsaman> I like type coercion, I think it's helpful. I also think knowing how a language implementation behaves is more useful than working around it all the time
[02:12:13] <Alexendoo> mknod: Depends what you mean by fail, I'd be leaning towards throw
[02:12:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:12:36] *** Joins: blez (~blez@213.91.182.96)
[02:12:59] <Alexendoo> Life's too short to memorise ==s coercion rules, just coerce yourself when you need it
[02:12:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:13:01] <matsaman> although checking if a thing is true/false and then checking its value is pretty common
[02:14:34] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[02:14:58] *** Joins: blez (~blez@213.91.182.96)
[02:15:07] <mknod> Alexendoo, pickUid() picks a random UID in a list of available UIDs. If there is no more UIDs available, then the function can't return the requested string and fails.
[02:15:07] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:15:16] *** Quits: federico_it (~textual@151.46.93.35) (Quit: Textual IRC Client: www.textualapp.com)
[02:16:10] <mknod> Returning undefined probably makes more sense from a human point of view.
[02:16:42] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it) (Read error: Connection reset by peer)
[02:16:54] <matsaman> doesn't sound like something that could be recovered from
[02:17:05] <Alexendoo> mknod: Yeah that would match what array.find does
[02:17:12] <biberu> mknod: how can you make it easy for the caller to do the right thing?
[02:17:19] *** Joins: blez (~blez@213.91.182.96)
[02:17:52] <mknod> biberu, what do you mean?
[02:17:53] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:18:05] *** Joins: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it)
[02:18:19] <Alexendoo> But I'd still be more inclined to throw, unless it's expected for empty lists to exist
[02:19:28] <biberu> mknod: presumably you want to ensure that the caller only proceeds with an actual result, can't forget to check errors, and express this in a succinct way
[02:19:35] <mknod> Alexendoo, it's a Google Sheets Apps Script, I'm neither familiar with JS nor Google Sheets but it must fails gracefully. I'll probably use a popup dialog or something.
[02:19:41] *** Joins: blez (~blez@213.91.182.96)
[02:19:56] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:20:02] <mknod> biberu, ah, I just answered then.
[02:21:00] <mknod> Alexendoo, let's say it's not unexpected though in practice it should never happen. The UIDs are pulled from another spreadsheet.
[02:22:02] *** Joins: blez (~blez@213.91.182.96)
[02:22:03] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[02:24:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:24:25] *** Joins: blez` (~blez@213.91.182.96)
[02:26:36] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:26:47] *** Joins: blez (~blez@213.91.182.96)
[02:26:52] *** Joins: trafficjam (~trafficja@119.17.42.59)
[02:27:43] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[02:27:44] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:28:43] *** Quits: jamea (~jamea@189.237.44.68) (Ping timeout: 256 seconds)
[02:28:51] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 256 seconds)
[02:29:13] *** Joins: blez (~blez@213.91.182.96)
[02:29:13] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:31:29] *** Joins: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net)
[02:31:34] *** Joins: blez (~blez@213.91.182.96)
[02:31:35] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:31:55] *** Quits: hongkongphooey (~hongkongp@209.202.223.146) (Quit: Client closed)
[02:33:04] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[02:33:08] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:33:23] *** Quits: pizdets (~pizdets@183.182.115.85) (Ping timeout: 256 seconds)
[02:33:24] *** Joins: trevors (~trevors@user/trevors)
[02:33:26] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[02:33:37] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:33:49] *** Joins: blez (~blez@213.91.182.96)
[02:33:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:33:58] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:34:02] *** Joins: pizdets (~pizdets@183.182.110.89)
[02:34:21] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:36:38] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[02:37:13] *** Quits: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br) (Ping timeout: 256 seconds)
[02:38:21] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:38:26] *** Joins: blez (~blez@213.91.182.96)
[02:38:46] *** Joins: Arisc (~ckmptnml@201-24-225-211.user3p.brasiltelecom.net.br)
[02:38:46] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:40:25] *** Joins: Leonard (~Administr@114.55.127.80)
[02:40:46] *** Joins: blez (~blez@213.91.182.96)
[02:41:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:41:41] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:42:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[02:43:09] *** Joins: blez (~blez@213.91.182.96)
[02:45:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:45:31] *** Joins: blez (~blez@213.91.182.96)
[02:47:15] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[02:47:15] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:47:20] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[02:47:52] *** Joins: blez (~blez@213.91.182.96)
[02:48:12] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:50:01] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:50:13] *** Joins: blez (~blez@213.91.182.96)
[02:50:20] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:50:20] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:52:15] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[02:52:35] *** Joins: blez (~blez@213.91.182.96)
[02:52:35] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:53:14] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:14] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:53:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:14] *** Joins: wroathe (~wroathe@user/wroathe)
[02:53:30] *** Joins: MrBlue_ (~MrBlue@217.138.200.92)
[02:54:57] *** Joins: blez (~blez@213.91.182.96)
[02:55:37] *** Quits: MrBlue (~MrBlue@217.138.200.92) (Ping timeout: 240 seconds)
[02:55:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:55:38] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[02:55:58] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:56:35] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[02:56:52] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[02:57:20] *** Joins: blez (~blez@213.91.182.96)
[02:58:18] *** Quits: nitrowheels (~nitrowhee@151.95.83.100) (Quit: Leaving)
[02:58:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[02:58:36] *** Joins: ferdna (~ferdna@user/ferdna)
[02:59:42] *** Joins: blez (~blez@213.91.182.96)
[02:59:52] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:00:46] *** MrBlue_ is now known as MrBlue
[03:01:35] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[03:02:04] *** Joins: blez (~blez@213.91.182.96)
[03:04:24] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:04:24] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:04:27] *** Joins: blez` (~blez@213.91.182.96)
[03:04:52] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:04:52] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:05:11] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:06:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Ping timeout: 256 seconds)
[03:06:22] *** Joins: zer0 (~zer0@user/zer0)
[03:06:44] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:06:49] *** Joins: blez (~blez@213.91.182.96)
[03:08:04] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[03:08:04] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:09:12] *** Joins: blez (~blez@213.91.182.96)
[03:09:28] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:09:28] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:10:20] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[03:10:40] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:11:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:11:34] *** Joins: blez (~blez@213.91.182.96)
[03:12:14] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[03:12:14] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:12:26] *** Quits: faLUKE (~paolo@host-80-180-113-13.retail.telecomitalia.it) (Quit: Konversation terminated!)
[03:12:41] *** Joins: Leonard (~Administr@114.55.127.80)
[03:13:07] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Read error: Connection reset by peer)
[03:13:56] *** Joins: blez (~blez@213.91.182.96)
[03:14:15] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:14:24] *** kmhkmh is now known as kmh
[03:15:11] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[03:16:17] *** Joins: blez (~blez@213.91.182.96)
[03:17:03] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[03:17:03] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:18:38] *** Joins: blez (~blez@213.91.182.96)
[03:18:58] *** Joins: jamea (~jamea@200.68.141.29)
[03:18:58] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:19:34] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:20:59] *** Joins: blez (~blez@213.91.182.96)
[03:21:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:21:49] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:23:19] *** Joins: blez (~blez@213.91.182.96)
[03:24:10] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:25:41] *** Quits: Leonard (~Administr@114.55.127.80) (Remote host closed the connection)
[03:25:41] *** Joins: blez (~blez@213.91.182.96)
[03:26:05] *** Joins: Leonard (~Administr@114.55.127.80)
[03:26:05] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:26:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:27:46] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:28:03] *** Joins: blez (~blez@213.91.182.96)
[03:28:19] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:78c1:741e:24d7:1bb)
[03:28:19] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:28:47] *** Joins: onosendi (~onosendi@user/onosendi)
[03:30:24] *** Joins: blez (~blez@213.91.182.96)
[03:31:31] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: see you on the flip-side)
[03:31:31] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:31:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[03:31:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:32:22] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[03:32:45] *** Joins: blez (~blez@213.91.182.96)
[03:32:59] *** Joins: Leonard (~Administr@114.55.127.80)
[03:32:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:34:48] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:35:06] *** Joins: blez (~blez@213.91.182.96)
[03:35:16] *** Joins: Harlin_ (~DonQixote@75-163-135-150.clsp.qwest.net)
[03:35:16] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:35:22] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[03:35:59] *** Quits: Harlin (~DonQixote@75-163-135-150.clsp.qwest.net) (Remote host closed the connection)
[03:37:27] *** Joins: blez (~blez@213.91.182.96)
[03:39:42] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:39:46] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[03:39:48] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[03:39:50] *** Joins: blez` (~blez@213.91.182.96)
[03:39:51] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:42:06] *** Joins: blez (~blez@213.91.182.96)
[03:44:28] *** Joins: blez` (~blez@213.91.182.96)
[03:44:28] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:46:37] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:46:48] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[03:46:50] *** Joins: blez (~blez@213.91.182.96)
[03:47:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:48:50] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[03:49:12] *** Joins: blez (~blez@213.91.182.96)
[03:49:53] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:49:53] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:51:34] *** Joins: blez (~blez@213.91.182.96)
[03:51:34] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:53:44] *** Quits: kevindank (~kevindank@c-76-99-182-66.hsd1.de.comcast.net) (Ping timeout: 256 seconds)
[03:53:49] *** Joins: blez (~blez@213.91.182.96)
[03:54:00] *** Joins: trevors (~trevors@user/trevors)
[03:54:00] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:54:16] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[03:56:11] *** Joins: blez (~blez@213.91.182.96)
[03:58:17] *** Quits: jamea (~jamea@200.68.141.29) (Ping timeout: 240 seconds)
[03:58:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[03:58:32] *** Joins: blez (~blez@213.91.182.96)
[03:59:56] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:59:56] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:00:54] *** Joins: blez (~blez@213.91.182.96)
[04:02:57] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:03:15] *** Joins: blez (~blez@213.91.182.96)
[04:03:38] <mknod> I've been playing and partially rewriting this code: https://gist.github.com/kssi/b4fc2f2f2b14eb672f912e21b864deed, which was offered as a solution for the problem described here: https://stackoverflow.com/questions/32959875/synchronize-independent-spreadsheet-rows-filled-by-importrange.
[04:03:38] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:03:59] <mknod> But I'm still failing to understand the use of slice on line 37.
[04:05:27] <mknod> I have the feeling it could be rewritten as: ordersByKey[ orderKey ] = orderData[row];
[04:05:36] *** Joins: blez (~blez@213.91.182.96)
[04:05:37] <ljharb> mknod: yep, you're right
[04:05:41] *** Joins: Leonard (~Administr@114.55.127.80)
[04:05:49] <ljharb> mknod: unless they meant it to be `splice`
[04:05:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:06:56] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:08:01] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 256 seconds)
[04:08:02] *** Joins: blez (~blez@213.91.182.96)
[04:08:27] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[04:08:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:09:33] <mknod> ljharb, from what I'm reading it would work, but modifying the original array would serve no purposes here.
[04:10:17] <mknod> I'm about as much confused by the use of hasOwnProperty on line 51, and thought it could be related.
[04:10:18] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[04:10:24] *** Joins: blez (~blez@213.91.182.96)
[04:10:50] <mknod> But again, couldn't they have used the "in" operator to check for the existence of the key?
[04:10:50] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:12:08] <ljharb> mknod: modifying the original array would change line 39
[04:12:17] <ljharb> mknod: and no, `in` is for objects, you do not ever use it on arrays
[04:12:24] <mknod> Oh true.
[04:12:45] *** Joins: blez (~blez@213.91.182.96)
[04:12:57] <mknod> So, hasOwnProperty is the only way to check for the key?
[04:12:57] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:13:15] <mknod> I would have expected something more instinctive.
[04:13:17] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[04:13:42] *** Quits: silverdust (~silverdus@user/silverdust) (Ping timeout: 256 seconds)
[04:14:00] <mknod> err, intuitive*
[04:14:28] *** Quits: z1haze (~z1haze@user/z1haze) (Quit: Leaving)
[04:15:06] *** Joins: blez (~blez@213.91.182.96)
[04:15:17] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:15:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:15:41] <ljharb> mknod: no, you don't check for the key, it's an array
[04:15:43] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:7d62:9434:eaa6:c2) (Quit: Client closed)
[04:15:48] <ljharb> mknod: an array is an atomic list. you operate on it wholesale.
[04:16:05] <ljharb> mknod: you check for the presence of object keys, and yes, hasOwnProperty (or the newer https://npmjs.com/object.hasown) is the way you check that
[04:17:18] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[04:17:27] *** Joins: blez (~blez@213.91.182.96)
[04:18:24] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:18:27] *** Joins: Leonard (~Administr@114.55.127.80)
[04:19:49] *** Joins: blez (~blez@213.91.182.96)
[04:21:29] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[04:21:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:21:40] <mknod> ljharb, I think I was mislead by the variable names. Wouldn't it make more sense to just use a dictionary then?
[04:21:56] <ljharb> mknod: an object, yes.
[04:22:10] *** Joins: blez (~blez@213.91.182.96)
[04:22:16] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:23:37] <mknod> What do you mean exactly? I'm really not into OOP and still miss a lot of what's going on when I use arr['key'] vs. dict['key'].
[04:24:00] *** Joins: jns16 (~jenu@cpe-76-86-192-9.socal.res.rr.com)
[04:24:32] *** Joins: blez (~blez@213.91.182.96)
[04:25:14] *** Joins: jamea (~jamea@177.239.81.39)
[04:25:14] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:25:21] <mknod> var ordersByKey = {};
[04:25:21] <mknod> ...
[04:25:21] <mknod> if (itemKey in ordersByKey) {
[04:25:35] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:26:01] <mknod> Is there a reason why they didn't do this instead?
[04:26:54] *** Joins: blez (~blez@213.91.182.96)
[04:27:37] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[04:27:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:29:16] *** Joins: blez (~blez@213.91.182.96)
[04:30:05] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:31:38] *** Joins: blez (~blez@213.91.182.96)
[04:33:37] *** Quits: jns16 (~jenu@cpe-76-86-192-9.socal.res.rr.com) (Ping timeout: 240 seconds)
[04:33:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:33:59] *** Joins: blez (~blez@213.91.182.96)
[04:34:47] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[04:34:47] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:34:48] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[04:34:56] *** Joins: jaina16 (~jenu@cpe-76-86-192-9.socal.res.rr.com)
[04:39:48] *** Quits: dudek (~dudek@185.150.236.156) (Quit: Leaving)
[04:40:27] *** Joins: blez (~blez@213.91.182.96)
[04:41:18] *** Joins: Leonard (~Administr@114.55.127.80)
[04:41:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:42:49] *** Joins: blez (~blez@213.91.182.96)
[04:43:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[04:43:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:43:44] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3e6e:e7bb:ded7:de0a)
[04:44:21] *** Parts: jaina16 (~jenu@cpe-76-86-192-9.socal.res.rr.com) ()
[04:45:09] *** Joins: blez (~blez@213.91.182.96)
[04:45:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:45:37] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[04:45:43] <mknod> ljharb: Ah, dictionaries aren't a thing in JS, I get it now.
[04:46:21] <Decker> what's specific about a dictionary that a map or object isn't?
[04:46:57] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[04:47:31] *** Joins: blez (~blez@213.91.182.96)
[04:47:32] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:48:26] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[04:48:42] <junebug> mknod, objects/associative arrays are dictionaries
[04:49:47] *** Joins: blez (~blez@213.91.182.96)
[04:50:10] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:51:24] <mknod> https://stackoverflow.com/questions/5129544/javascript-arrays-braces-vs-brackets#comment5754386_5129613
[04:51:31] <mknod> "By doing o['property1'] = 'property value', you are not actually adding an element to the array, but setting a property of the array object."
[04:51:40] <mknod> I believe I'm onto something.
[04:52:08] *** Joins: blez (~blez@213.91.182.96)
[04:52:09] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[04:53:58] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[04:53:58] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:54:18] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[04:54:31] *** Joins: blez (~blez@213.91.182.96)
[04:55:18] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[04:55:19] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:55:21] <junebug> mknod, you can't do something like: let a = []; a[0] = "some value"; a["test"] = "something else";
[04:55:35] <junebug> If you console log a you will only see "some value"
[04:55:52] <junebug> So if it's defined as [] it's an array. If it's defined as {} it's an object
[04:56:29] <junebug> let a = {} will hold both values though as an object.
[04:56:53] *** Joins: blez (~blez@213.91.182.96)
[04:57:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[04:57:11] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[04:57:21] *** scoobydoo_ is now known as scoobydoo
[04:57:53] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[04:58:14] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[04:58:15] <mknod> junebug, so back to my previous question, why is an array used here? https://gist.github.com/kssi/b4fc2f2f2b14eb672f912e21b864deed#file-foo-js-L29
[04:58:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:59:14] *** Joins: blez (~blez@213.91.182.96)
[04:59:17] *** Quits: MrBlue (~MrBlue@217.138.200.92) (Ping timeout: 240 seconds)
[04:59:42] <junebug> mknod, seems like a bug to me
[04:59:42] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:00:00] <junebug> https://jsfiddle.net/s324rezm/
[05:00:16] <junebug> If you comment out the a[0] line you will see it doesn't hold any values
[05:01:05] <junebug> Unless orderKey is an integer
[05:01:38] *** Joins: blez (~blez@213.91.182.96)
[05:02:33] <Decker> doesn't look like it is, and an object would be better there
[05:02:34] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:02:56] <Decker> it doesn't use the coun ti just does (itemKey in ordersByKey) equivalent
[05:04:00] *** Joins: blez (~blez@213.91.182.96)
[05:04:08] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[05:04:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[05:04:30] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:05:51] <mknod> When I see "somethingByKey", I certainly don't want it to be an array.
[05:06:21] <Decker> but - it might as well be a number :) since everything's an object anyway
[05:06:26] <mknod> But, it works, and I understand it as, it works but they're not storing the right thing in the right place.
[05:06:29] <junebug> Sometimes you can't know the key ahead of time
[05:06:29] *** Joins: blez (~blez@213.91.182.96)
[05:06:49] <mknod> The key here is arbitrary, might be anything.
[05:06:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:06:54] <junebug> Decker, let a = [] can't hold associative keys/values
[05:07:16] <Decker> junebug you mean a=9
[05:07:27] <Decker> it obviously does
[05:07:38] <junebug> https://jsfiddle.net/s324rezm/
[05:07:41] <junebug> Look at this example
[05:07:58] <junebug> It doesn't hold the a["another"] key/valye
[05:08:51] *** Joins: blez (~blez@213.91.182.96)
[05:09:27] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:09:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:10:02] <junebug> I don't think [] is an object
[05:10:22] <mknod> But a["another"] does exist.
[05:10:27] <Decker> junebug https://jsfiddle.net/s03zg79w/ yes it does
[05:11:02] <Decker> and yes, it is :) plus some other methods like push, shift blahblah
[05:11:06] <junebug> Decker, if you do console.log(a) it won't show the value though
[05:11:12] *** Joins: blez (~blez@213.91.182.96)
[05:11:17] <junebug> Decker, that's true, push, and shift yeah
[05:11:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:11:38] *** Joins: blez (~blez@213.91.182.96)
[05:11:40] <Decker> right because util.inspect says 'oh that's an array' and does an array like enumeration
[05:11:55] <Decker> (or console.log formatter whatever it is)
[05:11:55] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:12:23] <Decker> so in a way it's cloaking some information... it's harder to see/leak
[05:12:40] <mknod> So it's really just an artefact?
[05:12:58] <junebug> Wow what a mess
[05:13:04] <junebug> console.log(a["another"] === "bbb"); return true
[05:13:17] <Decker> because it's there :)
[05:13:20] <junebug> Yes
[05:13:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[05:13:52] <junebug> I don't think Javascript was ever meant to be a heavily used language. It's so broken
[05:14:01] *** Joins: blez (~blez@213.91.182.96)
[05:14:10] *** Joins: Leonard (~Administr@114.55.127.80)
[05:14:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:14:37] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[05:14:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:15:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3e6e:e7bb:ded7:de0a) (Quit: Leaving)
[05:15:39] <Decker> https://jsfiddle.net/s03zg79w/1/  well at least it can't be a number :)   or I'm missing syntax that lets it happen
[05:15:40] *** Joins: vysn (~vysn@user/vysn)
[05:16:27] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[05:16:33] *** Joins: blez (~blez@213.91.182.96)
[05:18:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:18:54] *** Joins: blez (~blez@213.91.182.96)
[05:19:26] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:19:26] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:20:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:21:16] *** Joins: blez (~blez@213.91.182.96)
[05:22:03] *** Joins: summersault (~summersau@179.221.251.36)
[05:22:04] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:22:06] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[05:23:38] *** Joins: blez (~blez@213.91.182.96)
[05:25:57] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:27:58] *** Joins: jazzy (~jaziz@user/jaziz)
[05:28:03] *** Joins: blez (~blez@213.91.182.96)
[05:29:22] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[05:29:22] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:30:24] *** Joins: blez (~blez@213.91.182.96)
[05:31:37] *** Quits: stagas (~stagas@2a02:587:c427:67f9:a44d:6ebb:3836:5df9) (Ping timeout: 240 seconds)
[05:31:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:32:27] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[05:32:31] <graingert[m]> Is ES12 twice as good as ES6?
[05:32:45] *** Joins: blez (~blez@213.91.182.96)
[05:33:19] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:33:19] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:33:33] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[05:35:07] *** Joins: blez (~blez@213.91.182.96)
[05:35:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:36:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:36:51] <dave0> graingert[m]: the math checks out
[05:37:29] *** Joins: blez (~blez@213.91.182.96)
[05:38:21] <graingert[m]> I keep getting emails from recruiters asking for like 3+ years experience in ES6
[05:38:21] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:38:36] *** Joins: aLeSD_ (~aLeSD@90.167.254.158)
[05:39:08] *** Quits: aLeSD_ (~aLeSD@90.167.254.158) (Read error: Connection reset by peer)
[05:39:34] *** Quits: aLeSD__ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it) (Read error: Connection reset by peer)
[05:39:36] <graingert[m]>  They also wanted access to at least 25 milibits per second wired internet
[05:39:50] *** Joins: blez (~blez@213.91.182.96)
[05:40:35] *** Joins: aLeSD_ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it)
[05:40:35] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:42:11] *** Joins: blez (~blez@213.91.182.96)
[05:44:22] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:44:30] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:44:34] *** Joins: blez` (~blez@213.91.182.96)
[05:44:47] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[05:44:47] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:45:03] <theskillwithin> hehe never minding that they name it by year now
[05:46:04] *** Joins: silverdust (~silverdus@user/silverdust)
[05:46:56] *** Joins: blez (~blez@213.91.182.96)
[05:47:27] <onosendi> theskillwithin: did GJ's family like the GH link you sent on new years?
[05:47:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:47:37] <theskillwithin> onosendi yes
[05:47:40] <onosendi> nice
[05:49:12] <systemfault> graingert[m]: Seems fair.
[05:49:17] *** Joins: blez (~blez@213.91.182.96)
[05:49:23] <systemfault> graingert[m]: Probably meant megabits....
[05:49:23] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:49:50] <graingert[m]> Right but why would they say mbps when they mean Mbps
[05:50:30] <graingert[m]> onosendi: Just saw the topic and I'm shaken
[05:51:20] <onosendi> graingert[m]: yah, it's terrible.
[05:51:39] *** Joins: blez (~blez@213.91.182.96)
[05:53:51] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:53:53] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:54:00] *** Joins: blez` (~blez@213.91.182.96)
[05:55:29] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:56:21] *** Joins: blez (~blez@213.91.182.96)
[05:56:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[05:57:43] *** Joins: Rockwood (~Rocky@user/rocky)
[05:58:42] *** Joins: blez (~blez@213.91.182.96)
[05:59:04] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:01:03] *** Joins: blez (~blez@213.91.182.96)
[06:01:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:03:24] *** Joins: blez (~blez@213.91.182.96)
[06:05:45] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:05:46] *** Joins: blez` (~blez@213.91.182.96)
[06:07:49] *** Joins: Leonard (~Administr@114.55.127.80)
[06:07:49] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:08:08] *** Joins: blez (~blez@213.91.182.96)
[06:10:05] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:10:25] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[06:10:29] *** Joins: blez (~blez@213.91.182.96)
[06:12:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:12:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[06:12:50] *** Joins: blez (~blez@213.91.182.96)
[06:13:12] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:13:12] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:15:12] *** Joins: blez (~blez@213.91.182.96)
[06:15:55] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:17:31] <ljharb> nobody calls it ES12. Everything after ES6/ES2015 is referred to with a year.
[06:17:33] *** Joins: blez (~blez@213.91.182.96)
[06:17:52] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[06:17:52] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:19:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[06:19:55] *** Joins: blez (~blez@213.91.182.96)
[06:20:24] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:21:03] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[06:22:17] *** Joins: blez (~blez@213.91.182.96)
[06:23:03] *** Quits: nomic (~nomic@185.198.243.165) (Quit: Leaving)
[06:23:04] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:24:38] *** Joins: blez (~blez@213.91.182.96)
[06:26:52] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:27:04] *** Joins: blez (~blez@213.91.182.96)
[06:27:16] *** Joins: Leonard (~Administr@114.55.127.80)
[06:27:16] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:29:26] *** Joins: blez (~blez@213.91.182.96)
[06:29:33] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[06:29:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:31:47] *** Joins: blez (~blez@213.91.182.96)
[06:33:11] <rairden> Does someone want to make a small JS script a few people on the lichess forum are asking for? Something similar to this: https://gist.github.com/Xatenev/aa919c93fc3e284c266648c15bba6b0f
[06:33:11] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:33:20] <rairden> I notice lichess.org now has this behavior by default, so that script isn't required anymore.
[06:33:31] <rairden> The script I would like is a hotkey to "deleteFromHere" which deletes a variation or the rest of the moves.
[06:33:39] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[06:34:09] *** Joins: blez (~blez@213.91.182.96)
[06:34:09] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:35:10] *** Quits: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com) (Read error: Connection reset by peer)
[06:35:16] *** Joins: rairden1 (~rairden@70.127.150.148)
[06:35:17] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[06:36:11] <rairden1> An example game would be from here: https://lichess.org/ICvMivw2/white#73    On the right, you can right-click any move then choose "Delete from here"
[06:36:23] *** Joins: blez (~blez@213.91.182.96)
[06:36:30] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:36:54] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[06:38:45] *** Joins: blez (~blez@213.91.182.96)
[06:40:27] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[06:40:28] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:41:05] *** Joins: blez (~blez@213.91.182.96)
[06:42:04] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:42:17] *** Quits: silverdust (~silverdus@user/silverdust) (Quit: leaving)
[06:43:26] *** Joins: blez (~blez@213.91.182.96)
[06:44:02] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:45:48] *** Joins: blez (~blez@213.91.182.96)
[06:46:31] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:46:58] *** Quits: rairden1 (~rairden@70.127.150.148) (Remote host closed the connection)
[06:47:59] *** Joins: rairden (~rairden@70.127.150.148)
[06:48:08] *** Joins: blez (~blez@213.91.182.96)
[06:50:02] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:50:30] *** Joins: blez (~blez@213.91.182.96)
[06:51:30] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:52:51] *** Joins: blez (~blez@213.91.182.96)
[06:55:12] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:55:14] *** Joins: blez` (~blez@213.91.182.96)
[06:56:59] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:57:35] *** Joins: blez (~blez@213.91.182.96)
[06:59:44] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[06:59:57] *** Joins: blez (~blez@213.91.182.96)
[07:01:30] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:02:19] *** Joins: blez (~blez@213.91.182.96)
[07:02:20] *** Joins: Leonard (~Administr@114.55.127.80)
[07:03:17] *** Quits: roadt_ (~roadt@36.5.93.21) (Ping timeout: 240 seconds)
[07:03:17] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:04:14] *** Joins: roadt_ (~roadt@36.5.93.21)
[07:04:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[07:04:41] *** Joins: blez (~blez@213.91.182.96)
[07:04:43] <oscurochu> I've finally figured out how to [re]write my code so I can apply tests. my original code was apparently trash. The new code is much simpler, and of course now, testable =D
[07:04:43] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:05:58] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[07:06:56] <systemfault> GG
[07:07:02] *** Joins: blez (~blez@213.91.182.96)
[07:07:48] <systemfault> Poor blez... their internet connection is really garbage.
[07:07:48] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:09:13] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[07:09:23] *** Joins: blez (~blez@213.91.182.96)
[07:10:03] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:11:04] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[07:11:08] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:11:37] <oscurochu> although i've made the code more "testable" it is still yet to be tested, and so far my tests are failing because of timeouts. lol =(
[07:11:45] *** Joins: blez (~blez@213.91.182.96)
[07:13:29] <oscurochu> so what am i missing here? https://dpaste.com/5SA2K93V9
[07:13:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:14:07] *** Joins: blez (~blez@213.91.182.96)
[07:16:29] *** Joins: blez` (~blez@213.91.182.96)
[07:16:29] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:17:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:17:09] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:17:52] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[07:18:50] *** Joins: blez (~blez@213.91.182.96)
[07:19:20] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:21:11] *** Joins: blez (~blez@213.91.182.96)
[07:22:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[07:22:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:23:32] *** Joins: blez (~blez@213.91.182.96)
[07:25:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:25:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:25:53] *** Joins: blez (~blez@213.91.182.96)
[07:26:15] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[07:26:15] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:28:16] *** Joins: blez (~blez@213.91.182.96)
[07:28:21] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:30:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[07:30:38] *** Joins: blez (~blez@213.91.182.96)
[07:32:59] *** Joins: blez` (~blez@213.91.182.96)
[07:32:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:33:21] <hax> why are you awaiting transaction when it's resolved already?
[07:33:22] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:35:20] *** Joins: blez (~blez@213.91.182.96)
[07:35:45] <oscurochu> because i was trying to figure out how to fix the timeout issue.
[07:35:45] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:35:48] <hax> and the 'return await response' which is an already awaited client.query
[07:36:21] <ljharb> return await is redundant
[07:36:24] <ljharb> Just return it.
[07:36:43] <hax> I see. await isn't for slowing something down
[07:37:03] <ljharb> await forces an extra tick. So return await does slow things down.
[07:37:25] <hax> I see. I meant like setTimeout would, but I take your point.
[07:37:40] *** Joins: blez (~blez@213.91.182.96)
[07:38:25] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:38:51] <oscurochu> if i console.log(transactions) i get a promise
[07:38:59] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:40:02] *** Joins: blez (~blez@213.91.182.96)
[07:40:08] <oscurochu> unless i use await when i define transactions,then console.log doesnt log anything
[07:40:08] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:41:22] <hax> you get the promise from the await that you're returning
[07:41:30] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[07:41:39] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[07:41:43] <hax> is response not a value from the resolved client.query call?
[07:42:23] *** Joins: blez (~blez@213.91.182.96)
[07:42:27] <hax> by 'value' I mean something that's not another promise
[07:42:27] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:42:52] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[07:43:01] *** Joins: Leonard (~Administr@114.55.127.80)
[07:43:02] <oscurochu> the return value is await client.query(getTransactionsSql, [ userId, userGroupId ])
[07:43:35] <hax> I don't think it is...
[07:43:50] <hax> that call should be resolved in the 'try' before the return happens
[07:44:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[07:44:45] *** Joins: blez (~blez@213.91.182.96)
[07:44:55] <oscurochu> i dont know what i * should * be doing. im about to remove async/await from the getTransactions() function, and only use async/await in my test to see what happens
[07:44:55] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:45:37] <oscurochu> response = await client.query(); is in the try block. return response is outside the try block.
[07:46:14] <hax> if client.query is calls resolve(someValue) then you should just return response without await, and then in your test you won't have returned a promise so you also don't have to await
[07:46:57] <de-facto> n> 0 == ''
[07:46:58] <jellobot> (okay) true
[07:47:00] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[07:47:03] <de-facto> wtf why?
[07:47:06] *** Joins: blez (~blez@213.91.182.96)
[07:47:10] <oscurochu> n> 0 === '
[07:47:10] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:47:10] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[07:47:12] <oscurochu> n> 0 === ''
[07:47:12] <jellobot> (okay) false
[07:47:33] <hax> unless it's resolving to another promise, in which case It seems to me that you should await that before the return too. you've got to have a value at some point
[07:47:35] <oscurochu> n> 0 == false
[07:47:36] <jellobot> (okay) true
[07:47:54] <hax> false is coerced to an int
[07:48:25] <de-facto> but why is an empty string equal to zero?
[07:48:41] <de-facto> its a string not a number
[07:48:48] <hax> hmmm
[07:48:55] <de-facto> ok tripple equal, yet still confusing
[07:49:00] <hax> but they're both falsy. not sure how it happens
[07:49:28] *** Joins: blez (~blez@213.91.182.96)
[07:50:05] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:50:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[07:51:07] <ljharb> !equals @ de-facto
[07:51:08] <jellobot> de-facto, Using == and != should be avoided, since they perform coercion giving unexpected results. Use === and !== instead. See also: http://zero.milosz.ca/ http://es5.github.io/#x11.9.3 https://eqeq.js.org/
[07:51:49] *** Joins: blez (~blez@213.91.182.96)
[07:52:01] <ljharb> de-facto: == coerces the types according to complex but predictable rules.
[07:52:02] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:52:22] <de-facto> n> Number('')
[07:52:22] <jellobot> (okay) 0
[07:52:26] <de-facto> thats why?
[07:52:32] <ljharb> yes
[07:52:40] <de-facto> horrible
[07:52:46] <ljharb> just never use = or !=, except to compare to null, and you don’t have to worry about it
[07:52:51] <ljharb> ==
[07:52:53] <de-facto> yeah
[07:52:57] <oscurochu> this also gives me a timeout, and there is no async/await https://dpaste.com/7D2W4V3HA
[07:54:11] *** Joins: blez (~blez@213.91.182.96)
[07:54:28] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:54:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:55:38] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:55:59] <ljharb> oscurochu: you have to call done
[07:56:14] <de-facto> https://github.com/xpepermint/query-types/blob/master/index.js#L29 <-- ljharb it came from there
[07:56:32] *** Joins: blez (~blez@213.91.182.96)
[07:56:36] *** Parts: velix (~velix@user/velix) (Leaving)
[07:56:37] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:56:57] *** Joins: blez (~blez@213.91.182.96)
[07:56:57] *** Quits: tnsi (~tnsi@075-128-103-056.res.spectrum.com) (Ping timeout: 256 seconds)
[07:57:13] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[07:57:29] <Slade> == null and === null are effectively the same right?
[07:58:14] <Slade> n> "false" == false
[07:58:14] <jellobot> (okay) false
[07:58:22] <leduyquang753> n> undefined === null
[07:58:22] <jellobot> (okay) false
[07:58:27] <leduyquang753> n> undefined == null
[07:58:27] <jellobot> (okay) true
[07:58:28] <de-facto> ljharb, the effect being the == causing parseValue(0) === null while a triple === results in correct parseValue(0) === 0
[07:58:48] <Slade> ok, so == is essentially pointless
[07:59:14] <de-facto> its quite quite annoying when parsing an array of numbers and it happens to contain a 0 that then gets converted to null instead of 0
[07:59:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[07:59:18] *** Joins: blez (~blez@213.91.182.96)
[07:59:39] *** Joins: nwoob (~apple@103.135.38.180)
[07:59:39] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:01:43] *** Joins: blez (~blez@213.91.182.96)
[08:03:08] <ljharb> Slade: no
[08:03:08] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:03:20] <ljharb> n> [null, undefined].map(x => x == null) @ Slade
[08:03:20] <jellobot> Slade, [ true, true ]
[08:03:23] <Slade> ljharb, so i saw
[08:03:37] <ljharb> Slade: which is the only time it’s not pointless.
[08:03:47] <ljharb> because undefined isn’t a keyword, and it can be redefined
[08:04:05] *** Joins: blez (~blez@213.91.182.96)
[08:04:56] *** Joins: stagas (~stagas@2a02:587:c427:67f9:a996:a40a:f60c:27eb)
[08:04:56] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:05:04] <Slade> yea. not sure who decided that
[08:06:27] *** Joins: blez (~blez@213.91.182.96)
[08:08:33] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[08:08:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:08:49] *** Joins: blez (~blez@213.91.182.96)
[08:10:02] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:10:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[08:11:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:11:42] <ThePendulum> n> global.undefined = 'defined'; undefined
[08:11:42] <jellobot> (okay) undefined
[08:12:05] <ThePendulum> n> undefined = 'defined'; undefined
[08:12:06] <jellobot> (okay) undefined
[08:12:21] *** Joins: teut (~teut@2401:4900:1c68:ebe9:f019:e976:f8bd:9ca2)
[08:12:23] <teut> https://ibb.co/M5pLX32
[08:12:33] <teut> wont third be correct too?
[08:13:11] *** Joins: onosendi (~onosendi@user/onosendi)
[08:13:19] *** Joins: blez (~blez@213.91.182.96)
[08:13:20] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:13:33] <teut> https://ibb.co/YWg8v4X
[08:13:33] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:15:41] *** Joins: blez (~blez@213.91.182.96)
[08:15:49] <ThePendulum> what's the difference between 1 and 2
[08:15:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:16:38] <teut> i dont know
[08:16:55] <teut> I didnt even know they were gong to ask javascript
[08:17:03] <teut> going
[08:18:03] *** Joins: blez (~blez@213.91.182.96)
[08:18:13] <teut> I  selected 1
[08:18:13] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:19:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:20:23] *** Joins: blez (~blez@213.91.182.96)
[08:22:18] *** Joins: Leonard (~Administr@114.55.127.80)
[08:22:18] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:22:48] *** Joins: blez (~blez@213.91.182.96)
[08:22:55] *** Quits: teut (~teut@2401:4900:1c68:ebe9:f019:e976:f8bd:9ca2) (Quit: Client closed)
[08:23:23] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:24:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[08:25:16] *** Joins: blez (~blez@213.91.182.96)
[08:27:34] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:27:39] *** Joins: blez` (~blez@213.91.182.96)
[08:29:41] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:30:00] *** Joins: blez (~blez@213.91.182.96)
[08:31:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:31:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:31:46] *** Joins: wroathe (~wroathe@user/wroathe)
[08:31:46] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:32:26] *** Joins: blez (~blez@213.91.182.96)
[08:34:49] *** Joins: blez` (~blez@213.91.182.96)
[08:34:49] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:37:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:37:03] *** Quits: blez` (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:37:10] *** Joins: blez (~blez@213.91.182.96)
[08:37:48] <theskillwithin> blez !!!
[08:37:48] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:38:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[08:39:31] *** Joins: blez (~blez@213.91.182.96)
[08:40:14] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:41:19] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[08:41:28] *** Joins: programmar (~whatever@118.69.128.37)
[08:41:52] *** Joins: blez (~blez@213.91.182.96)
[08:42:06] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:42:17] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[08:43:01] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[08:43:03] <programmar> i can't seem to find the answer for this on stackoverflow so pls help, i am trying to ask the users for notification permission with this code https://pastebin.com/DjLKcKYj, and flexSwitchCheckDefault is just the ID of a toggle switch, when i check the switch it sends an error such as "The Notification permission may only be requested in a secure context."
[08:44:13] *** Joins: blez (~blez@213.91.182.96)
[08:44:53] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:44:59] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[08:46:34] *** Joins: blez (~blez@213.91.182.96)
[08:46:59] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:48:55] *** Joins: blez (~blez@213.91.182.96)
[08:50:05] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:51:08] <programmar> i assume "secure context" is onyl for https ?
[08:51:14] <programmar> otherwise idk what it means
[08:51:17] *** Joins: blez (~blez@213.91.182.96)
[08:51:27] *** ChanServ sets mode: +o theskillwithin
[08:51:28] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:53:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:53:46] *** Joins: blez (~blez@213.91.182.96)
[08:53:50] <theskillwithin> blez you keep joining and parting so temp banning for 8 hours, sorry, hopefully you fix by then
[08:54:10] *** theskillwithin sets mode: +b *!*@213.91.182.96
[08:54:10] *** Quits: blez (~blez@213.91.182.96) (Read error: Connection reset by peer)
[08:54:19] *** Joins: gproto23 (~gproto23@user/gproto23)
[08:54:51] *** ChanServ sets mode: -o theskillwithin
[08:57:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[08:57:26] *** Joins: Leonard (~Administr@114.55.127.80)
[08:59:43] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[08:59:55] <ljharb> programmar: yes, that is what it means
[09:00:59] <programmar> hm guess i have no other choices
[09:04:35] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[09:08:44] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[09:08:51] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[09:19:21] *** Joins: Leonard (~Administr@114.55.127.80)
[09:21:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[09:21:37] <oscuroch_> im still stuck on this timeout issue. i had this same issue when trying to test my express server a few days ago. my test suite just does not like asynchronous stuff
[09:22:25] <ljharb> oscuroch_: i'm sure it's something simple. before you weren't calling `done`
[09:23:11] <oscuroch_> i've never fixed it with 'done'
[09:23:36] <oscuroch_> its never worked. i just mistakenly thought it worked
[09:23:45] <onosendi> theskillwithin: that's been going on for like, 2-3 days. On the plus side, it make me look into filtering out joins/parts/quits in weechat, and it turned out to be nice.
[09:24:09] <onosendi> That happens to me too when I leave weechat open and close my laptop lid. It'll just sit there and reconnect.
[09:24:18] <ljharb> oscuroch_: share a link
[09:25:27] <theskillwithin> onosendi oh dang, thanks for letting me know,  ya that is a nice way to do it, I leave em on to keep an eye on things and to make sure I have full logs
[09:28:19] *** Joins: mexen (uid495612@user/mexen)
[09:28:51] <oscuroch_> i've made a mess with my code trying all kinds of different things from different resources online... but here ya go
[09:28:52] <oscuroch_> https://dpaste.com/4774W7KRM
[09:30:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[09:31:52] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[09:33:36] <ljharb> oscuroch_: ok so a bunch of things
[09:33:47] <ljharb> oscuroch_: line 15, just return, don't return await
[09:34:04] <ljharb> oscuroch_: line 21, delete the catch entirely, you WANT exceptions to propagate
[09:34:09] <ljharb> oscuroch_: iow just have try/finally
[09:34:34] <ljharb> oscuroch_: also line 20 - `return await client.query()` directly
[09:34:51] <ljharb> oscuroch_: make those changes and update the paste. or better, make a codesandbox since dpaste sucks, and give me something runnable that i can fix for you.
[09:34:57] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[09:35:23] <oscuroch_> which sandbox would your prefer? im not very savvy with those things yet
[09:35:25] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[09:36:39] <oscuroch_> ok im on codesandbox. that was pretty easy so far lol
[09:37:34] <theskillwithin> ljharb if its a test for db/network stuff, can that be done in a codesandbox?
[09:37:45] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[09:38:09] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[09:38:42] <theskillwithin> I guess either way its easier to help with
[09:39:45] <oscuroch_> https://codesandbox.io/s/jest-test-forked-b3xcd?file=/index.test.js
[09:40:20] *** Joins: Leonard (~Administr@114.55.127.80)
[09:41:11] <theskillwithin> oh its a reduced example, good
[09:42:57] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[09:43:14] <ljharb> theskillwithin: oh true
[09:44:03] *** Quits: japh (~scp1@user/japh) (Ping timeout: 256 seconds)
[09:44:23] *** Joins: japh (~scp1@user/japh)
[09:47:46] <oscuroch_> Could not find dependency: 'pg' relative to '/index.test.js'
[09:59:47] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[09:59:55] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[10:06:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[10:07:20] *** Joins: audiobirb (~audio@user/audio)
[10:07:24] *** Joins: jazzy2 (~jaziz@user/jaziz)
[10:07:37] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[10:07:53] <oscuroch_> im trying to find an example that is already on codesandbox and its kind of disappointing lol there is one called "postgres test" and there's not a single pg command in the script
[10:09:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[10:09:59] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[10:16:03] <theskillwithin> oscuroch_ cuz you can't use pg in a codesandbox
[10:20:25] <oscuroch_> im glad you're still online.
[10:21:16] *** Joins: han-solo (~hanish@user/han-solo)
[10:32:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:32:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:32:33] *** Joins: wroathe (~wroathe@user/wroathe)
[10:33:09] *** Joins: leptone (~leptone@2603-8000-b203-0038-85e2-b48a-ab3f-3a6b.res6.spectrum.com)
[10:37:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:42:59] *** Joins: onosendi (~onosendi@user/onosendi)
[10:43:09] *** Joins: Rockwood (~Rocky@user/rocky)
[10:47:17] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[10:54:15] <leptone> I ran this command `npx create-next-app -e with-tailwindcss spotify-2-yt` following https://www.youtube.com/watch?v=3xrko3GpYoU&t=858s
[10:54:15] <leptone> when I run that command I see typescript files generated such as pages/index.tsx
[10:54:15] <leptone> on my local filesystem
[10:54:15] <skillbot> YouTube Title: 🔴 Let's build Spotify 2.0 with NEXT.JS 12.0! (Middleware, Spotify API, Tailwind, NextAuth, Recoil)
[10:54:17] <leptone> However in the video this guy's npx command generates a different file with the same command, pages/index.js
[10:54:19] <leptone> Why are these different
[10:54:56] <ljharb> leptone: please don't cross-post.
[10:55:06] *** Joins: qinghai (~qinghai@61.164.40.82)
[10:55:25] *** Quits: flughafen (~flughafen@p5de8eb74.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:55:27] <oscuroch_> so here is another problem i was having, only one assertion is completing. im not sure whats happening to the other two. https://codesandbox.io/s/falling-pond-39bt2?file=/src/index.test.js
[10:55:39] <oscuroch_> run npm test in the sandbox terminal
[10:59:18] <oscuroch_> i have a great idea. this tutorial has a git i can clone. yay
[11:02:19] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[11:05:16] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[11:06:04] *** Joins: ggnoredo (~user@212.98.236.50)
[11:08:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[11:09:08] *** Joins: flughafen (~flughafen@p2e55dfae.dip0.t-ipconnect.de)
[11:12:43] *** Joins: sharperguy (~sharpergu@138.199.56.29)
[11:14:09] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[11:16:05] *** Joins: Leonard (~Administr@114.55.127.80)
[11:17:30] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[11:18:33] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[11:19:49] *** Joins: Rockwood (~Rocky@user/rocky)
[11:23:14] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:27:25] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[11:27:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[11:35:08] *** Quits: sharperguy (~sharpergu@138.199.56.29) (Read error: Connection reset by peer)
[11:39:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[11:39:50] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:40:35] *** Joins: sharperguy (~sharpergu@88.130.221.36)
[11:42:08] *** Joins: tex (~super@user/dix)
[11:42:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:42:43] *** Joins: Leonard (~Administr@114.55.127.80)
[11:43:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:45:01] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[11:45:03] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[11:45:32] *** Joins: Brett__ (~Brett@124.148.79.4)
[11:47:27] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[11:48:29] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[11:48:33] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[11:49:09] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[11:52:14] *** Quits: leptone (~leptone@2603-8000-b203-0038-85e2-b48a-ab3f-3a6b.res6.spectrum.com) (Remote host closed the connection)
[11:52:47] *** Joins: Rockwood (~Rocky@user/rocky)
[11:54:20] *** Joins: voltage_ (voltage@user/voltage)
[12:00:15] *** Quits: rairden (~rairden@70.127.150.148) (Quit: rairden)
[12:00:37] *** Joins: aLeSD__ (~aLeSD@90.167.243.107)
[12:02:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[12:02:27] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[12:02:57] *** Quits: aLeSD_ (~aLeSD@host-95-239-36-1.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[12:07:05] *** Joins: Leonard (~Administr@114.55.127.80)
[12:08:57] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[12:10:37] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[12:13:50] *** Quits: ggnoredo (~user@212.98.236.50) (Remote host closed the connection)
[12:13:59] *** Joins: Brumaire (~quassel@37.166.249.26)
[12:14:57] *** Quits: Pixi__ (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[12:21:46] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[12:23:20] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:24:53] *** Joins: Pixi (~Pixi@user/pixi)
[12:29:25] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:80cf:b28b:a827:9447)
[12:30:08] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: You have been kicked for being idle)
[12:30:31] *** Quits: Brett__ (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[12:33:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[12:33:23] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[12:33:23] *** Joins: wroathe (~wroathe@user/wroathe)
[12:37:29] *** Joins: jim87 (~quassel@93.55.249.30)
[12:38:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[12:41:13] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:41:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[12:44:41] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[12:46:22] *** Joins: Leonard (~Administr@114.55.127.80)
[12:48:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[12:56:45] *** Joins: thiras (~thiras@user/thiras)
[12:57:51] *** Quits: sharperguy (~sharpergu@88.130.221.36) (Ping timeout: 256 seconds)
[13:00:02] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 240 seconds)
[13:03:29] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[13:04:20] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[13:05:15] *** Quits: Brumaire (~quassel@37.166.249.26) (Quit: ran away)
[13:05:36] *** Joins: Brumaire (~quassel@37.166.249.26)
[13:06:36] *** Joins: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com)
[13:06:43] *** Joins: thiras_ (~thiras@user/thiras)
[13:06:55] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[13:07:14] *** Joins: Brett__ (~Brett@124.148.79.4)
[13:08:03] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:10:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[13:13:53] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:16:52] <oscuroch_> I can't sleep.
[13:17:41] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[13:18:53] <oscuroch_> so when i run my test with axiom using google as my server, expect(response.status).toBe(200), it passes. when i change the host to localhost:80, it passes. when i change the host to localhost:5000, it times out. what could be wrong with my express server that it is causing axiom/jest to timeout?
[13:20:15] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:22:56] <oscuroch_> i dont know why i always type axiom in irc.... i cant ever spell it 'axios'
[13:23:02] <Maxdamantus> oscuroch_: maybe you're following redirects and the server is redirecting to `http://localhost/foo`?
[13:24:20] *** Joins: Sumao (~Sumao@88.246.79.235)
[13:24:41] <oscuroch_> well, i do beleive i am sending an empty response with a status of 500 on the '/' path. all i have is this res.status(500);
[13:25:07] <oscuroch_> i feel brain dead but when i lay down my brain is wired.
[13:25:30] <Maxdamantus> When you lay what down?
[13:25:37] <oscuroch_> i've been trying to wean off my antidepressant until my insurance kicks in on the 15th.
[13:25:46] <oscuroch_> off topic sorry lol
[13:25:51] <Maxdamantus> oh you probably meant "lie down"
[13:26:03] <oscuroch_> im not an english major
[13:31:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[13:33:09] <oscuroch_> well i managed to figure out a couple things i was struggling with over the past few days. im excited so far lol
[13:34:14] <oscuroch_> still not sure why pg times out but thats asking too much now. ill deal with that later. i have plenty to do with what i just learned right now =D
[13:34:41] *** Quits: mikrosis (~mikrosis@dynamic-046-114-174-174.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[13:35:41] *** Joins: Leonard (~Administr@114.55.127.80)
[13:38:31] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[13:39:14] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[13:39:39] *** Quits: nwoob (~apple@103.135.38.180) (Ping timeout: 256 seconds)
[13:40:10] *** Joins: han-solo (~hanish@user/han-solo)
[13:49:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:49:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:49:07] *** Joins: wroathe (~wroathe@user/wroathe)
[13:49:37] *** Joins: vldn (~vldn@dynamic-078-049-140-009.78.49.pool.telefonica.de)
[13:52:45] *** Quits: thiras_ (~thiras@user/thiras) (Remote host closed the connection)
[13:54:15] *** Joins: thiras_ (~thiras@user/thiras)
[13:54:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:57:03] *** Joins: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de)
[13:57:48] *** Joins: Naan (~Naan@user/naan)
[14:02:47] *** Quits: aLeSD__ (~aLeSD@90.167.243.107) (Remote host closed the connection)
[14:05:59] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[14:06:01] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[14:07:18] *** Joins: g2anj (~v@58.228.230.4)
[14:08:04] *** Joins: panella32 (~panella32@static-198-54-128-109.cust.tzulo.com)
[14:09:12] *** Parts: vldn (~vldn@dynamic-078-049-140-009.78.49.pool.telefonica.de) ()
[14:10:11] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[14:10:18] *** Joins: jim87 (~quassel@93.55.249.30)
[14:16:49] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[14:19:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:19:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:19:55] *** Joins: wroathe (~wroathe@user/wroathe)
[14:24:25] *** Quits: Brumaire (~quassel@37.166.249.26) (Ping timeout: 256 seconds)
[14:24:47] *** Joins: Brumaire (~quassel@37.172.143.113)
[14:24:54] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[14:24:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:25:33] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:26:26] *** Joins: sub0 (~bc8147f2@cerf.good1.com)
[14:32:18] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[14:32:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[14:36:53] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Ping timeout: 256 seconds)
[14:38:33] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[14:40:41] *** Quits: oscuroch_ (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[14:43:29] *** Joins: Leonard (~Administr@114.55.127.80)
[14:44:40] *** Joins: onosendi (~onosendi@user/onosendi)
[14:45:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[14:49:29] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 256 seconds)
[14:50:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:50:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:50:42] *** Joins: wroathe (~wroathe@user/wroathe)
[14:55:43] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:58:08] *** Quits: zerowalker_ (~ZeroWalke@h-46-59-65-1.A785.priv.bahnhof.se) (Read error: Connection reset by peer)
[15:04:32] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[15:07:37] *** Quits: Brumaire (~quassel@37.172.143.113) (Ping timeout: 240 seconds)
[15:08:03] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[15:08:26] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[15:10:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:11:22] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[15:18:25] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[15:18:57] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[15:19:23] *** Quits: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[15:20:55] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[15:21:19] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[15:27:27] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Remote host closed the connection)
[15:31:41] *** Quits: trafficjam (~trafficja@119.17.42.59) (Quit: Client closed)
[15:32:25] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[15:34:36] *** Quits: w0ng (~w0ng@103.1.212.77) (Ping timeout: 260 seconds)
[15:37:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:38:25] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:39:26] *** Joins: w0ng (~w0ng@103.212.224.222)
[15:40:09] *** Joins: pmercado (~pmercado@186.107.47.151)
[15:40:31] <fweht> why does something like `for(let i = 0; i < n; i++) {elements[i].addEventListener('click', () => console.log(i));}` work, in the sense that each element reports its index on click?  i remember that in some languages this would result in all elements reporting `n-1`, because `i` changes its value before the eventlistener is called?
[15:42:03] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:47:04] <Alexendoo> fweht: Javascript used to have that problem, it behaves as you describe if you use var. It's one of the things let/const intentionally handle
[15:47:21] <fweht> Alexendoo: ah, interesting, thanks!
[15:47:43] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[15:49:04] <fweht> Alexendoo: if this is the case, i.e. every iteration of the loop is a block of its own with a new introduction of `i`, i wonder why it complains when i do `for(const i =  0; i < n; i++)`?
[15:54:59] <stenno> you cannot do ++ for a const
[15:55:02] <Alexendoo> fweht: It's still a const even if it's a new binding each time, and you can't reassign a const (i++)
[15:55:17] <fweht> ah, yes that makes sens, thank you!
[15:56:03] <Alexendoo> Though spec wise it might not actually be a new binding in the case of const if I'm reading this right, since const wouldn't need that
[15:58:45] <stenno> btw you can write your code like: elements.forEach((el, index) => el.addEventListener...)
[15:59:01] <stenno> assuming you got `elements` from a querySelectorAll call or the like
[15:59:31] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[15:59:40] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[16:03:49] *** Joins: MrBlue (~MrBlue@139.28.218.190)
[16:07:22] *** Joins: Leonard (~Administr@114.55.127.80)
[16:08:42] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[16:09:24] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[16:09:26] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[16:16:18] <fweht> stenno: yeah, i never know if i should do more loops or more forEach/forAll clauses
[16:16:46] *** Joins: Simplar (~quassel@188.163.93.76)
[16:16:57] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 240 seconds)
[16:17:13] <fweht> i read somewhere, but that was about dart not javascript, that enforcing functional programming style in a non-functional language is not always what the compiler expects and what leads the the best results
[16:18:11] <Decker> got an example?  is non-functional OOP? or is it top down linear scripting with no functions?
[16:18:29] <fweht> but in the example above, i got my elements from `element.children`, which is not forEach-able (while element.childNodes is forEach-able but not iterable)
[16:19:23] <fweht> Decker: it was this comment https://www.reddit.com/r/dartlang/comments/huiyrp/comment/fz1hdlb/?utm_source=share&utm_medium=web2x&context=3
[16:19:40] <fweht> not sure how much of it applies to js, but i changed my programming style somewhat after reading this
[16:19:56] <jaawerth> fweht: that's about my take as well - I really really like FP, but outside of careful design it's easy to end up regretting working against the flow of a language. javascript is multi-paradigm, and IMO the best approach is a bit of a compromise.. call it function-ish ;-)
[16:20:34] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[16:20:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[16:20:34] *** Joins: wroathe (~wroathe@user/wroathe)
[16:20:38] <jaawerth> going full FP avoiding side effects everywhere involves a lot of libraries and taking over the whole project more or less. that or a lot of annoying code. at that point one may as well use an actual FP compile-to-js language like elm or clojure
[16:20:42] <jaawerth> or purescript
[16:21:18] <fweht> yes, id really love to use purescript in a project :)
[16:21:27] <Decker> fweht that example says it all :) doesn't really matter the language - setting up a fnction call context is 1) a far jump which requires a code pipelline flush and 2) requires setting up strcutres to return to where you are and allocate local space for functions to work in
[16:21:32] <jaawerth> but I still put a pretty significant fp spin on my js. I'm just not afraid to mutate or throw some OOP in there when the situation calls for it :)
[16:23:46] <jaawerth> Decker: well it's not that simple in a language like JS where all the popular engines have a powerful JIT. I'm not 100% on spidermonkey, but v8 optimized forEach to near-parity with looping a couple years back with a major update that fixed a lot of perf holes
[16:24:55] <fweht> ah, good to know!  yes, i suspected that its hard to make such claims about js, as js always tries to improve for the code style the developers actually use
[16:25:01] <Decker> jaawerth .forEach is still slower than for()  Yes - it would be possible to inline the code such that the hardware runs the same instructions; but really that's not practical because of all the possibilities of complex functions being used
[16:25:17] *** Joins: gpap (~pap@athedsl-384810.home.otenet.gr)
[16:25:19] <stenno> if you are wondering about performance difference between for loop and .forEach you probably should choose another language for your problem
[16:25:34] <Decker> and ya I know - speed shouldn't a motivating factor or whatever nonsense
[16:25:39] <jaawerth> it's close enough for the difference to be negligible in most cases. that may change if you use a lot of closure or something, ofc
[16:25:45] <Decker> see
[16:25:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[16:26:06] <stenno> there are several reasons why you should use array methods instead of for or for-of
[16:26:25] <Decker> there are reasons to use for when you don't have reasonss for othre array methods
[16:26:43] <stenno> one is simply semantic... a for loop in itself has no semantic statement whatsoever
[16:26:55] <Decker> I don't know what that word means or is supposed to mean
[16:27:02] <Decker> one is simply code the otehr is still code
[16:27:14] <stenno> it just says 'we repeat this until a certain condition is met _or_ there is a break'
[16:27:35] <Decker> that's why you use .find instead of .foreach
[16:27:50] <jaawerth> also the callstack stuff wasn't even the main perf killer of forEach and friends before they were improved
[16:27:52] <stenno> but .forEach tells me 'this block gets executed exactly once for each array member'
[16:28:03] <jaawerth> it was the fact that they per spec they have built-in logic to account for the possibility of sparse arrays
[16:28:27] <stenno> Decker: you are not getting my point
[16:28:44] <stenno> Decker: i am comparing .forEach to for and for-of
[16:28:49] <Decker> stenno ut find lets you break
[16:28:53] <jaawerth> well, I think the main thing about forEach is that it's the gateway to the other higher-order methods
[16:29:07] <jaawerth> but I generally still use it over looping, with soem for..of thrown in when applicable
[16:29:08] <Decker> if there is no break in the for then it doesn't matter either
[16:29:15] <stenno> Decker: i am talking about why i should use forEach instead of for and for-of
[16:29:17] <stenno> Decker: it does
[16:29:29] <stenno> Decker: at least for 3-clause for
[16:30:08] <stenno> Decker: neither break nor continue
[16:30:32] <Decker> nope still don't get it - 1) you can specify the expression that behaves like (2) and (2) has an implied expression to do the same - what's the difference?
[16:30:53] <Decker> oh (2) does more work in actually doing the work
[16:30:56] <stenno> the difference is that i have to read the block itself to understand how often this is executed
[16:31:17] <stenno> and i cannot sequence-break a forEach with continue or break
[16:31:27] <jaawerth> I do like to break early when possible all else being equal, but tbh it's almost never going to be the bottleneck unless you're in the realm of  hundreds of thousands of array elements or running teh loop a bunch of times in sequence. wheras code readability and maintainability affects *everything*
[16:31:27] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[16:31:41] <Decker> then either 1) it requires 'work' to read because it's not just 'all of these' or 2) it's a simple expression you can galance at and know anyway
[16:31:42] <stenno> so in a forEach array method, i _know_ that the callback is executed exactly once for each element
[16:31:53] <Decker> in case 1) foreach wouldn't be practical replacement
[16:31:58] <stenno> in a for-of, i cannot make that statement
[16:32:04] <jaawerth> well nobody's saying never ever ever use loops
[16:32:13] <stenno> for-await-of is different
[16:32:16] <jaawerth> (well, one person might but he's not here atm hahaha)
[16:32:35] *** Joins: nemesit|znc (~nemesit@2a01:488:66:1000:2ea3:4eeb:0:1)
[16:32:56] <stenno> i have to use for-of and for-await-of when i do stream handling, that is one of the many reasons why i am looking forward to iterator helpers
[16:33:01] <fweht> i just wrote my first web component :)  https://jsfiddle.net/jho92wyc/63/
[16:33:05] <stenno> iterator helpers should make any for loop superfluous
[16:33:36] <fweht> not sure if i like it more than reactjs, but its fun for debugging when the internal state just equals the attribute
[16:34:36] <jaawerth> stenno: yeah, like., there'sl ibraries for all that already but having all those operations standard for lazy/async sequences is going to be pretty sweet
[16:34:45] <stenno> yeeeeeeeees
[16:35:01] <stenno> pretty sure you can polyfill it using streams btw
[16:35:18] <stenno> i am talkign about nothing else for the last half year or so lol
[16:35:27] <stenno> i can't be the only one who is so mega hyped for it
[16:35:42] <jaawerth> I used to use transducer libraries a lot for exactly this reason (letting you create efficient data pipelines using higher-order opations that thanks to the protocol can work with any data structure) but transducers are confusing to people who aren't already converts so I swore them off in work code
[16:35:43] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[16:35:50] <jaawerth> (except clojure[script])
[16:36:21] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:36:27] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[16:39:17] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[16:45:57] *** Joins: onosendi (~onosendi@user/onosendi)
[16:46:35] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Quit: Leaving)
[16:49:57] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[16:50:48] *** Joins: jim87 (~quassel@93.55.249.30)
[16:51:11] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 256 seconds)
[16:54:28] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[16:54:28] *** ChanServ sets mode: +o litharge
[16:54:29] *** litharge sets mode: -bo *!*@213.91.182.96 litharge
[16:55:04] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[16:56:25] *** Quits: Brett__ (~Brett@124.148.79.4) (Quit: Leaving)
[16:56:35] *** Joins: lenarhoyt (~lenarhoyt@p200300c24f035f01b05aa9b6cbb8e49e.dip0.t-ipconnect.de)
[16:56:43] *** Joins: Brett[Air] (~Brett@124.148.79.4)
[16:59:50] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 256 seconds)
[17:01:38] *** Quits: jim87 (~quassel@93.55.249.30) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:01:47] <Simplar> Here is a code: `const sent_file = uploaded || presaved || referenced`. If `uploaded`, `presaved`, and `referenced` are strings, nulls or undefined how will the code behave?
[17:01:55] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[17:02:47] <Simplar> I want it to follow the following logic: if `uploaded` is a defined non-empty string, set sent_file to uploaded, if not, check the same way for `presaved`, and then, if this fails, for `referenced`.
[17:03:01] <stenno> || will return the left side when it is truthy, and the right side if it is falsy
[17:03:09] <jaawerth> and empty strings are falsy in js
[17:03:19] <stenno> n> !!''
[17:03:20] <jellobot> (okay) false
[17:03:30] <Simplar> I am aware of that, and I do want to get rid of empty string too
[17:03:36] <Simplar> n> !!'0'
[17:03:37] <jellobot> (okay) true
[17:03:52] <stenno> '0' is falsy in php, but not in javascript
[17:03:58] <stenno> (the string)
[17:04:11] <Simplar> n> '' || undefined || 'mydefinedstring'
[17:04:11] <jellobot> (okay) 'mydefinedstring'
[17:04:15] <Simplar> oh.
[17:04:26] <Simplar> so my code will do exactly what i want?
[17:04:52] <Simplar> n> '' || 'mydefinedstring hi hi' || undefined
[17:04:53] <jellobot> (okay) 'mydefinedstring hi hi'
[17:04:53] <stenno> when you said: "If `uploaded`, `presaved`, and `referenced` are strings, nulls or undefined"
[17:04:59] <stenno> did you mean _empty_ strings
[17:05:08] <Simplar> Empty strings should be treated as undefined
[17:05:13] <stenno> yes
[17:05:18] <Simplar> if they are filled, it's ok, return
[17:05:31] <Simplar> n> 'one' || 'two' || 'three'
[17:05:32] <jellobot> (okay) 'one'
[17:05:34] <Simplar> nice.
[17:05:39] <Simplar> and the last one
[17:05:52] <Simplar> n> null || 'two' || 'three'
[17:05:52] <jellobot> (okay) 'two'
[17:06:01] *** Joins: Leonard (~Administr@114.55.127.80)
[17:08:13] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[17:11:08] *** Joins: iomari891 (~iomari891@197.210.55.212)
[17:12:43] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[17:21:20] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:21:37] *** Quits: panella32 (~panella32@static-198-54-128-109.cust.tzulo.com) (Ping timeout: 240 seconds)
[17:22:55] *** Joins: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de)
[17:23:46] *** Joins: pulse (~pulse@user/pulse)
[17:24:04] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[17:24:27] *** Joins: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net)
[17:28:08] *** Joins: src (~src@user/src)
[17:28:35] *** Quits: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[17:29:26] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[17:30:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: switching host)
[17:32:28] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[17:33:24] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:33:25] *** Joins: trevors (~trevors@user/trevors)
[17:34:45] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[17:36:14] *** Joins: panella32 (~panella32@164.215.227.223)
[17:36:40] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[17:37:30] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[17:37:45] *** Quits: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net) (Quit: Client closed)
[17:38:11] *** Joins: Franckapik (~fanch@15.145.200.77.rev.sfr.net)
[17:39:06] *** Joins: Franckapik40 (~Franckapi@15.145.200.77.rev.sfr.net)
[17:39:37] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[17:40:00] *** Quits: Franckapik (~fanch@15.145.200.77.rev.sfr.net) (Client Quit)
[17:40:03] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:40:15] *** Quits: Franckapik40 (~Franckapi@15.145.200.77.rev.sfr.net) (Client Quit)
[17:41:19] *** Joins: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net)
[17:41:46] *** Quits: grkblood13 (~grkblood1@76.73.249.123) (Ping timeout: 256 seconds)
[17:44:15] *** Quits: gpap (~pap@athedsl-384810.home.otenet.gr) (Quit: Leaving)
[17:46:13] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:47:17] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[17:49:48] *** Quits: sub0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[17:51:01] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:78c1:741e:24d7:1bb) (Ping timeout: 240 seconds)
[17:51:19] *** Quits: panella32 (~panella32@164.215.227.223) (Read error: Connection reset by peer)
[17:52:35] *** Joins: panella32 (~panella32@86.57.86.11)
[17:53:05] *** Joins: han-solo (~han-solo@user/han-solo)
[17:55:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:55:29] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[17:58:29] *** Quits: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net) (Quit: Client closed)
[17:59:30] *** Joins: jim87_ (~quassel@93.55.249.30)
[17:59:30] *** Quits: jim87_ (~quassel@93.55.249.30) (Client Quit)
[17:59:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[18:01:59] *** Joins: federico_it (~textual@151.36.221.151)
[18:01:59] *** Joins: Leonard (~Administr@114.55.127.80)
[18:04:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[18:06:03] *** Joins: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net)
[18:11:29] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:80cf:b28b:a827:9447) (Quit: isflavior)
[18:15:28] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:16:30] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:16:30] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:16:30] *** Joins: wroathe (~wroathe@user/wroathe)
[18:17:03] *** Quits: scara (~user@user/scara) (Ping timeout: 276 seconds)
[18:19:44] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 256 seconds)
[18:23:16] *** Joins: scara (~user@user/scara)
[18:26:23] *** Quits: mishiranu (~mishiranu@78.129.171.229) (Ping timeout: 256 seconds)
[18:26:37] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 240 seconds)
[18:27:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[18:33:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:35:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:36:29] *** Joins: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de)
[18:38:10] *** Joins: rcoote (~rcoote@2a02:908:690:a140:8c44:f579:dbaf:36b5)
[18:38:33] *** Joins: nomic (~nomic@185.198.243.165)
[18:42:15] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[18:42:41] *** Joins: onosendi (~onosendi@user/onosendi)
[18:43:12] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[18:43:19] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[18:52:02] *** Quits: panella32 (~panella32@86.57.86.11) (Ping timeout: 256 seconds)
[18:53:44] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[18:54:05] *** Joins: pulse (~pulse@user/pulse)
[18:54:08] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[18:56:55] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:58:44] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[18:58:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c993:298f:5351:f526) (Ping timeout: 268 seconds)
[18:58:58] *** Quits: iomari891 (~iomari891@197.210.55.212) (Quit: WeeChat 3.3)
[18:59:49] *** Quits: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[19:00:04] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[19:00:21] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (Ping timeout: 245 seconds)
[19:02:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[19:05:51] *** Joins: Leonard (~Administr@114.55.127.80)
[19:06:20] *** Quits: Franckapik (~Franckapi@15.145.200.77.rev.sfr.net) (Quit: Client closed)
[19:07:01] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:08:17] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[19:11:01] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[19:11:35] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[19:12:55] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[19:14:04] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:14:38] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:16:06] *** Quits: tex (~super@user/dix) (Quit: tex)
[19:16:10] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[19:16:37] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[19:16:47] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:19:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[19:19:39] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[19:20:37] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[19:23:04] *** Quits: lenarhoyt (~lenarhoyt@p200300c24f035f01b05aa9b6cbb8e49e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:26:21] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[19:30:17] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[19:30:34] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[19:30:53] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[19:32:16] *** Quits: Brett[Air] (~Brett@124.148.79.4) (Ping timeout: 256 seconds)
[19:33:01] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[19:35:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[19:37:25] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[19:37:35] *** Joins: Leonard (~Administr@114.55.127.80)
[19:38:50] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:39:37] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[19:40:01] *** Joins: ArchNoob (~maotora@user/archnoob)
[19:47:15] *** Joins: zebrag (~chris@user/zebrag)
[19:48:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:49:33] *** Parts: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) ()
[19:49:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:51:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:53:51] *** Joins: Rockwood (~Rocky@user/rocky)
[19:56:17] *** Joins: Harlin__ (~DonQixote@75-163-135-150.clsp.qwest.net)
[19:56:18] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:56:55] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:57:37] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 256 seconds)
[19:58:13] *** Joins: iomari891 (~iomari891@197.210.54.48)
[19:58:37] *** Quits: Harlin_ (~DonQixote@75-163-135-150.clsp.qwest.net) (Ping timeout: 240 seconds)
[19:59:33] *** Joins: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de)
[20:00:32] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:01:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[20:07:12] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[20:10:39] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[20:11:02] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[20:11:37] *** Joins: oscurochu (~oscurochu@185.203.218.20)
[20:12:08] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:12:25] *** Joins: panella32 (~panella32@45.130.83.194)
[20:13:09] <mknod> Any performance difference between:
[20:13:09] <mknod> var usedInLoop; for (...) { usedInLoop = 'something'; ... }
[20:13:09] <mknod> And:
[20:13:10] <mknod> for (...) { var usedInLoop = 'something'; ... }
[20:17:12] *** Joins: Akiva (~Akiva@user/Akiva)
[20:19:39] <oscurochu> Every time i change a test file, node restarts my server. its really slowing me down. is there a way to prevent node from watching my test folder?
[20:21:17] *** Joins: trafficjam (~trafficja@119.17.42.59)
[20:21:19] <onosendi> oscurochu: are you using nodemon?
[20:21:30] <Rockwood> https://www.youtube.com/watch?v=3GNG12g2bKw&list=RDMM&start_radio=1&rv=vwROlSPhKuU wow
[20:21:30] <skillbot> YouTube Title: Les Twins | FRONTROW | World of Dance 2014 #WODHI
[20:24:13] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:24:47] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[20:25:23] <oscurochu> onosendi yes
[20:25:41] <onosendi> oscurochu: https://github.com/remy/nodemon ignore your tests in your nodemon config.
[20:25:45] *** Quits: federico_it (~textual@151.36.221.151) (Read error: Connection reset by peer)
[20:25:59] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[20:26:10] <onosendi> { ..., "ignore": ["*.test.js"] }
[20:26:10] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[20:26:31] *** Quits: sharperguy (~sharpergu@dynamic-046-114-036-163.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[20:26:56] <oscurochu> how do i kill whats on port 5000? suddenly node won't start because the port is already open. express is the only thing that *should* be running on the port...  i just turned my vpn on because weird things started happening.
[20:28:24] <onosendi> oscurochu: `lsof -i :5000` then kill the process that it's on `kill <pid>`.
[20:28:41] <onosendi> oscurochu: or, you can just `pkill node`.
[20:28:50] *** Joins: stenno (~stenno@user/stenno)
[20:29:26] <oscurochu> weird, it just started working again... i didnt need to kill anything.
[20:29:28] <oscurochu> thanks though
[20:30:04] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:30:05] *** Joins: federico_it (~textual@mi-18-56-194.service.infuturo.it)
[20:30:30] <oscurochu> node still restarts even though i included the ignore line in package.json. lol im gonna check out that link you sent
[20:31:23] *** Joins: setuid (sid191390@canonical/setuid)
[20:32:58] <setuid> One of our apps changed, and my browser-based automation broke. They went from a form field where I had a keypress event to enter that field ('t' on keyboard would put focus in that field and allow me to type tags), to an svg 'pencil' that has to be clicked to activate a popup form where those tags could be entered. I can't get a click(); event to trigger that svg, but I can target it with my d.qs('svg[class^="that__thing"]');
[20:33:23] <setuid> I tried adding an event listener, but that's looking for me to interact with the svg and then react, I want to use a keypress to send the click on that pencil
[20:33:31] <setuid> Any ideas how to do this?
[20:34:44] <onosendi> setuid: use a an `onkeydown` event handler instead of `click`?
[20:34:48] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[20:35:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:35:28] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[20:35:50] *** Joins: gehn (~gehn@user/gehn)
[20:36:37] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[20:36:41] <onosendi> oscurochu: put a nodemon.json config file next to package.json, with: { "ignore": ["*.test.js"] }
[20:37:18] *** Quits: oscurochu (~oscurochu@185.203.218.20) (Remote host closed the connection)
[20:38:52] *** Joins: japh (~scp1@user/japh)
[20:38:59] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[20:40:13] *** Joins: Leonard (~Administr@114.55.127.80)
[20:41:58] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[20:45:19] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:50:49] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[20:52:43] *** Quits: panella32 (~panella32@45.130.83.194) (Quit: Textual IRC Client: www.textualapp.com)
[20:57:18] *** Joins: oscurochu (~oscurochu@185.203.218.19)
[20:57:24] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:57:26] <oscurochu> i got it thanks
[20:57:57] <onosendi> np
[20:58:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:59:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:00:39] <renlo> setuid: do you have the element in question? the svg 'pencil' element?
[21:00:49] <setuid> Yes, one moemnt
[21:00:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:01:30] <setuid> <svg class="tags__create-con-sc-1gp8ksa" width="16px" height="16px" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" data-provides="edit-tag">
[21:01:44] <renlo> setuid: use dpaste or similar
[21:01:51] <renlo> @paste
[21:01:52] <setuid> a click(), onClick() event won't trigger that event
[21:02:43] <renlo> setuid: how are you calling 'click()'? provide an exact example please. _Use dpaste or another pastebin-esque service, preferably one without ads :P_
[21:03:26] <renlo> I dont remember an HTMLElement.click() or SVGElement.click() method, if youre trying to do that (ie, I dont think that would work)
[21:04:07] *** Joins: supremekai (~supremeka@2001:8a0:6082:e700:504e:8750:d6e:5efc)
[21:04:30] <renlo> oh, https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click ...
[21:04:44] <supremekai> Hey guys, how can I identify an iframe src has been loaded?
[21:04:59] <setuid> Right, click doesn't work with svg
[21:05:27] <renlo> setuid: it seems that only HTMLelement.click() works, but, your svg is not an HTMLElement, it's an SVGElement
[21:05:44] <renlo> so you wont be able to simulate clicks that way I dont think
[21:06:16] <systemfault> supremekai: Try the "load" event?
[21:06:39] <renlo> setuid: https://developer.mozilla.org/en-US/docs/Web/API/SVGElement , this is what you're dealing with because it's SVG
[21:06:40] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:06:54] *** Joins: cthulchu (~Cthulchu@216.239.164.82)
[21:07:54] <renlo> SVG is also XML but has a considerably different set of methods / api than the normal HTMLElements
[21:08:07] <renlo> ie, it looks like HTML but isnt
[21:08:09] <supremekai> systemfault, the onLoad is only suitable for media right?
[21:08:34] <systemfault> supremekai: And documents...
[21:09:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[21:09:50] <renlo> supremekai: https://stackoverflow.com/questions/3142837/capture-iframe-load-complete-event
[21:11:02] <supremekai> systemfault, renlo thnks! I'll test it and read the renlo link for further testing on my code :) TY! :D
[21:11:11] <systemfault> Cheers!
[21:13:17] <renlo> setuid: final ping, in the past when I wanted to HTMLElement methods, but I was dealing with SVG, I would mix the two. i.e., in this specific case, you can probably wrap your SVG in a div, and you can put the click handlers on the div
[21:13:41] <setuid> Sorry, jumping between meetings... let me circle back to you in a bit
[21:13:46] <renlo> no worries
[21:13:55] <setuid> I have no control over the HTML at all, I can't wrap or change anything
[21:14:16] <setuid> I'm simply interacting with it, as an end-user of the hosted service, and my browser add-on provides some features to enhance usability of that service
[21:14:34] <setuid> eg: hitting 't' to start tagging, vs. using the mouse and clicking that pencil and entering that popup form that results
[21:14:45] <renlo> why arent you guys using selenium or something to test this?
[21:16:20] <renlo> 'click' only _simulates_ a click, also not a good way to test because theoretically you could have a div blocking clicks, but you just select div behind it and click (I mean, it doesnt actually test if its clickable)
[21:16:51] *** Joins: jamea (~jamea@189.237.70.201)
[21:17:45] <setuid> Not sure I follow
[21:18:02] <setuid> You mean use selenium, grab the handler and transform that from Python into Javascript?
[21:20:09] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:20:43] <renlo> setuid: https://jsfiddle.net/u0kvg3dL/
[21:20:50] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[21:20:52] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[21:21:05] <renlo> its not a good test, the "red button" is hidden behind the "blue div", user would never be able to click on it. Your "test" doesnt actually capture this
[21:21:11] <renlo> its an apriori test, it will always pass
[21:21:30] <renlo> to test this, you need an actual browser environment where you try to press it, such a browser test environment is selenium
[21:22:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[21:24:10] *** Joins: trevors (~trevors@user/trevors)
[21:24:31] *** Quits: nomic (~nomic@185.198.243.165) (Quit: Leaving)
[21:28:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cb8d:512c:a4b1:ec43)
[21:29:25] *** Quits: MrBlue (~MrBlue@139.28.218.190) (Ping timeout: 256 seconds)
[21:29:37] *** Quits: The_Tablet (~tablet@user/the-tablet) (Quit: cya~ ❀ only time will tell if i make myself someday / the stage is mine, music is my destiny~ ☆💎✨)
[21:30:30] *** Quits: pmercado (~pmercado@186.107.47.151) (Quit: Konversation terminated!)
[21:31:30] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:31:50] *** Joins: The_Tablet (~tablet@user/the-tablet)
[21:34:28] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[21:34:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[21:34:38] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[21:35:14] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:35:40] *** Joins: MrBlue (~MrBlue@146.70.75.84)
[21:37:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cb8d:512c:a4b1:ec43) (Ping timeout: 240 seconds)
[21:39:13] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:42:36] *** Quits: iomari891 (~iomari891@197.210.54.48) (Ping timeout: 256 seconds)
[21:43:02] *** Quits: MrBlue (~MrBlue@146.70.75.84) (Ping timeout: 240 seconds)
[21:43:02] <cthulchu> my wonderful folks
[21:43:15] <cthulchu> what email provider would you recommend to replace gmail?
[21:43:37] <cthulchu> It's annoying to pay $7/month just to be able to use my own domain
[21:44:31] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:44:38] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[21:45:10] <theskillwithin> just have your domain forward the emails to your gmail
[21:45:44] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:47:42] <cthulchu> and back??
[21:48:07] <theskillwithin> gmail lets you config an smtp out email right?
[21:48:43] *** Joins: MrBlue (~MrBlue@172.93.207.171)
[21:49:44] <cthulchu> uh... I'm not sure it's realistic
[21:49:52] <cthulchu> why would they charge otherwise...
[21:50:00] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[21:50:17] <theskillwithin> so they can sell ads
[21:50:40] <cthulchu> nah
[21:50:50] <cthulchu> smtp forwarding requires own hosting
[21:51:02] <cthulchu> that's not done through domain records
[21:52:04] <theskillwithin> why do you have a domain with no hosting?
[21:52:12] <cthulchu> for mail
[21:52:31] <cthulchu> and I do have "hosting". I use netlify for it
[21:52:36] <theskillwithin> why not just use @gmail
[21:52:48] <cthulchu> cuz it's a business email
[21:53:23] <cthulchu> or rather a professional one
[21:53:31] <cthulchu> firstname@lastname.ca
[21:54:13] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[22:01:18] *** Joins: trevors (~trevors@user/trevors)
[22:03:40] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[22:04:58] <hassoon> you'll have to pay for every domain name
[22:05:02] <hassoon> whatever the service is
[22:06:13] *** Quits: jamea (~jamea@189.237.70.201) (Ping timeout: 268 seconds)
[22:06:53] *** Quits: MrBlue (~MrBlue@172.93.207.171) (Quit: Leaving)
[22:07:01] *** Joins: Leonard (~Administr@114.55.127.80)
[22:09:39] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[22:10:47] <cthulchu> does...
[22:11:02] <cthulchu> does cloudflare offer email forwarding for free?
[22:11:10] <cthulchu> my domains are all parked on CF
[22:11:13] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:13:05] <gehn> cthulchu, it's easily worth the $7 though because if you try to setup your own email server with e.g. postfix/dovecot or whatever, you will fail, you will get blacklisted and then you're screwed
[22:13:23] <cthulchu> uh...
[22:13:27] <cthulchu> that's not valuable
[22:13:47] <gehn> indeed getting blacklisted might cause value to be lost, including monetary
[22:13:59] <cthulchu> dude, that's trivial
[22:14:04] <cthulchu> I know all that
[22:14:19] <gehn> so then what's the problem, go setup a postfix server for yourself
[22:14:19] <cthulchu> back to smtp forwarding through gmail...
[22:14:23] <cthulchu> omfg
[22:14:27] <cthulchu> read above
[22:15:08] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:15:48] <cthulchu> I think I don't need a hosting email with CF email forwarding. it will catch mail
[22:15:51] <cthulchu> very interesting
[22:15:56] <cthulchu> just wonder if it's free
[22:15:57] *** Quits: Harlin__ (~DonQixote@75-163-135-150.clsp.qwest.net) (Quit: Leaving)
[22:17:50] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:20:03] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[22:21:35] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:26:19] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[22:27:35] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:29:17] <cthulchu> Yes!
[22:29:38] <cthulchu> Cloudflare indeed has email forwarding!!!
[22:29:47] <cthulchu> woohooo! No annoying hostings
[22:29:52] *** Joins: trevors (~trevors@user/trevors)
[22:30:07] <cthulchu> it's in beta. I hope they will let me try it out. Youre supposed to request access
[22:30:30] <cthulchu> damn cloudflare is fascinating
[22:30:48] <cthulchu> and it doesn't play the cancellation game. Very abuse-proof
[22:31:11] <cthulchu> I would consider hiding all endpoints behind it.
[22:33:36] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[22:34:05] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:34:59] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[22:36:41] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[22:37:49] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[22:40:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d8d0:8961:1968:a5eb)
[22:42:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[22:42:22] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:43:45] *** Joins: Harlin (~DonQixote@75-163-135-150.clsp.qwest.net)
[22:47:33] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[22:47:55] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[22:49:03] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[22:49:49] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[22:51:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:51:25] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[22:51:29] *** Joins: MrBlue (~MrBlue@146.70.75.142)
[22:53:38] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:57:22] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[22:57:49] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[23:01:43] *** Joins: nomic (~nomic@185.198.243.165)
[23:03:51] *** Quits: bobdobbs (~user@116.251.149.196) (Remote host closed the connection)
[23:04:59] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:17] *** Joins: Leonard (~Administr@114.55.127.80)
[23:08:35] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:08:35] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[23:10:47] <setuid> renlo: Thanks for that fiddle, but I still can't grok how to 'inject' the keypress on the svg, to trigger that popup
[23:11:25] *** Quits: cthulchu (~Cthulchu@216.239.164.82) (Ping timeout: 256 seconds)
[23:12:18] *** Joins: cthulchu (~Cthulchu@216.239.164.82)
[23:18:32] *** Joins: jamea (~jamea@201.77.110.253)
[23:21:12] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[23:21:30] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[23:21:39] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[23:22:31] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[23:24:36] *** Quits: Leonard (~Administr@114.55.127.80) (Ping timeout: 256 seconds)
[23:31:23] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[23:31:55] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[23:32:07] *** Joins: ggnoredo (~user@81.215.12.230)
[23:34:54] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:35:47] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[23:35:51] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[23:36:43] *** Joins: Leonard (~Administr@114.55.127.80)
[23:37:12] *** Joins: jschaub (~jschaub@p200300eb6f0054001e697afffe6257e2.dip0.t-ipconnect.de)
[23:38:51] *** Joins: faLUKE (~paolo@host-80-180-113-13.retail.telecomitalia.it)
[23:38:53] *** Quits: cthulchu (~Cthulchu@216.239.164.82) (Remote host closed the connection)
[23:39:13] *** Joins: cthulchu (~Cthulchu@216.239.164.82)
[23:39:21] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[23:39:50] <ljharb> jschaub: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic
[23:40:04] <banana_> yo
[23:40:12] <faLUKE> hey: I have two HTML files with the same list of <script src="..."> tags.  How can I make this list as a third file which is included by the two HMTL files?
[23:41:31] <banana_> ljharb: general question about npm6. if you find that ocassionally you have to delete node_modules and then `npm install`, and granted you have a package-lock.json, then it's probably some bug npm6?
[23:41:35] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[23:41:57] *** Joins: Leonard (~Administr@114.55.127.80)
[23:42:20] <banana_> but you shouldn't need to delete node_modules by design on how package-lock.json is used
[23:42:48] <paulcarroty> @faLUKE , iframe
[23:42:49] <banana_> or *wrong buzzer*
[23:42:57] <ljharb> banana_: if you have a lockfile, `rm -rf node_modules && npm install` are perfectly fine and should give you the same results
[23:43:04] <ljharb> banana_: but also, npm 6 is EOL, use npm 8
[23:43:15] <banana_> oh it is
[23:44:30] <faLUKE> paulcarroty: are you sure it doesn't mess up the layout?
[23:44:45] <banana_> thanks for the heads up
[23:45:34] <paulcarroty> nope :)
[23:45:50] <banana_> ljharb: one more, where can my newb azz find a chart that shows EOL for npm releases I see this for Node versions https://nodejs.org/en/about/releases/
[23:46:14] <ljharb> banana_: node has LTS, npm doesn't. npm only supports the latest major.
[23:46:34] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d8d0:8961:1968:a5eb) (Ping timeout: 256 seconds)
[23:46:43] <banana_> oh from memory? ok understandable
[23:46:54] <banana_> wonder if that stated in their docs but I can look
[23:47:05] <banana_> don't wanna bother you with menial tasks
[23:47:11] <faLUKE> paulcarroty: thanks let's try
[23:47:34] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[23:50:23] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[23:51:18] <faLUKE> paulcarroty: I created a page with all the scripts included and called includes.html  then I added this to the main page:  <iframe src="includes.html"></iframe> but the scripts are not loaded
[23:53:17] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:c410:171:ad9b:2fc2)
[23:55:34] *** Joins: Goreng (~Goreng@202.138.250.36)
[23:55:52] *** Quits: Goreng (~Goreng@202.138.250.36) (Remote host closed the connection)
[23:56:04] *** Joins: Goreng (~Goreng@202.138.250.58)
[23:56:17] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[23:56:27] *** Joins: Leonard (~Administr@114.55.127.80)
[23:56:51] <sgt_chuckles> is there a library for capturing events on the front-end? Im using Kafka to stream events from an application backend to a confluence cluster, and am wondering if there's a way to do the same securely on the client side.
[23:56:51] *** Quits: Goreng (~Goreng@202.138.250.58) (Client Quit)
[23:57:04] *** Joins: Goreng (~Goreng@202.138.250.1)
[23:57:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:57:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:57:46] <paulcarroty> @faLUKE, with  `allow-scripts`?
[23:58:27] <systemfault> sgt_chuckles: What do you mean by secure? If you want to stream events to the frontend then I imagine you could use websockets
[23:58:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:59:17] *** Quits: Goreng (~Goreng@202.138.250.1) (Client Quit)
[23:59:22] *** Joins: Gorengan (~Goreng@202.138.250.58)
