[00:02:12] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[00:05:08] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Remote host closed the connection)
[00:13:03] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:13:12] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[00:15:46] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[00:21:31] *** Joins: jpl0 (~user@2001:16b8:4999:9400:7d34:7fc:d9c3:15c8)
[00:22:26] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[00:22:59] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[00:28:11] <johnjay> Nilby: maybe it's the curse of lisp
[00:29:12] <jackdaniel> a severly overrated term :)
[00:33:13] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 250 seconds)
[00:34:01] <edgar-rft> I was cursed by lisp ... until I learned howto recurse
[00:40:46] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[00:42:46] <Nilby> I guess I'm okay with being cursed with too much power and flexibility
[00:44:34] <Nilby> and nobody runs my software in C/C++ anymore either
[00:48:02] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 240 seconds)
[00:54:30] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[00:55:31] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[00:56:17] *** Joins: karlosz (~karlosz@47.151.136.69)
[00:56:17] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:57:49] <hayley> johnjay: well spooked my prototypes
[00:58:08] * hayley uploaded an image: (213KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/MCRtsRBLanzSGgveNXtqMxxc/well-spooked-my-prototypes.jpeg >
[00:58:27] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:00:23] *** Quits: markasoftware (~quassel@107.161.26.124) (Ping timeout: 264 seconds)
[01:08:32] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 256 seconds)
[01:08:40] *** Joins: dra (~dra@2a04:4540:641a:5000:8d7b:e0a:94db:60ef)
[01:13:57] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[01:19:47] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[01:20:02] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:20:15] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:22:40] *** Joins: nature (~nature@45.32.235.173)
[01:25:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[01:25:33] *** Quits: dra (~dra@2a04:4540:641a:5000:8d7b:e0a:94db:60ef) (Quit: Leaving)
[01:27:14] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:adb9:14ff:5b35:b210)
[01:30:11] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[01:31:27] *** Joins: kuao (uid504326@id-504326.helmsley.irccloud.com)
[01:33:11] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:34:22] *** Quits: pve (~pve@178-55-16-124.bb.dnainternet.fi) (Quit: leaving)
[01:35:55] *** Joins: igemnace (~ian@user/igemnace)
[01:37:31] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:52:44] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[02:01:03] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 268 seconds)
[02:02:23] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[02:04:44] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[02:08:18] *** Joins: markasoftware (~quassel@107.161.26.124)
[02:11:11] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 245 seconds)
[02:11:38] *** Quits: jpl0 (~user@2001:16b8:4999:9400:7d34:7fc:d9c3:15c8) (Remote host closed the connection)
[02:13:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[02:18:14] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[02:28:58] *** Quits: gaqwas (~john@dynamic-095-115-028-131.95.115.pool.telefonica.de) (Ping timeout: 260 seconds)
[02:30:25] *** Joins: dra (~dra@2a04:4540:641a:5000:9884:54c7:30e2:1e3b)
[02:33:25] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[02:40:05] *** Joins: Skyfire (~pyon@user/pyon)
[02:40:37] *** Quits: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se) (Ping timeout: 250 seconds)
[02:45:28] *** Joins: Oladon (~olad@98.43.81.226)
[02:47:41] *** Quits: Skyfire (~pyon@user/pyon) (Quit: brb)
[02:54:30] <peterhil> edgar-rft: :-D
[02:55:07] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 250 seconds)
[03:04:05] <kuao> http://www.lisp-book.org/wp-content/uploads/2020/09/13/353091856.jpg
[03:04:30] <kuao> ^^
[03:08:22] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[03:12:08] *** Parts: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a) (Leaving)
[03:16:22] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:19:09] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:20:56] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 260 seconds)
[03:21:58] *** Joins: X-Scale` (~ARM@31.22.203.240)
[03:23:31] *** X-Scale` is now known as X-Scale
[03:23:44] <hayley> I don't get it.
[03:28:38] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:28:39] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[03:35:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:40:57] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[03:41:34] <kuao> wrong #
[03:48:21] *** Quits: dra (~dra@2a04:4540:641a:5000:9884:54c7:30e2:1e3b) (Ping timeout: 268 seconds)
[03:49:35] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 264 seconds)
[03:51:48] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[03:53:46] *** Joins: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se)
[04:00:30] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 265 seconds)
[04:00:47] *** Joins: sm2n (~sm2n@user/sm2n)
[04:04:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:05:53] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:06:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:08:00] *** Joins: Skyfire (~pyon@user/pyon)
[04:13:57] *** Joins: akoana (~ah@user/akoana)
[04:15:30] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[04:16:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[04:16:46] *** Quits: random-nick (~random-ni@87.116.180.220) (Ping timeout: 260 seconds)
[04:17:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:22:48] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:adb9:14ff:5b35:b210) (Read error: Connection reset by peer)
[04:46:10] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 260 seconds)
[05:06:10] *** Joins: s-liao (~s-liao@101.86.101.64)
[05:09:56] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 245 seconds)
[05:36:26] *** Quits: asarch (~asarch@2806:10ae:7:31bf:690c:11e8:50b4:a7) (Quit: Leaving)
[05:36:44] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 260 seconds)
[05:45:44] *** Joins: johnjay (~pi@192.142.100.50)
[05:52:52] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:53:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[05:53:53] *** Joins: Spawns_Carpet (~weechat@user/spawns-carpeting/x-6969421)
[05:55:00] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[05:55:02] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[06:12:03] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[06:13:23] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[06:15:32] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[06:18:17] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[06:19:32] *** Joins: robin (~robin@user/terpri)
[06:23:10] <Guest74> is there some standard lisp meta data file for font/sprite atlases?
[06:26:47] <mfiano> No standard. Just mfiano/patchwork
[06:29:20] <Guest74> I'm a correct in assuming that's sprites only? no hotspots/advances?
[06:30:27] <mfiano> Correct. That's a job for your collision detection pipeline, as they could differ between the same sprites.
[06:30:46] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:32:03] <Guest74> mainly concerned with fonts at the moment.  have been meaning to use that binpack sometime.
[06:32:10] <mfiano> 3b-bmfont then
[06:34:06] <Guest74> ah, doesn't write lisp.  But i guess there's a standard for bmfront.
[06:34:16] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[06:34:59] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[06:36:03] <mfiano> it writes json or xml, which can be easily turned into lisp
[06:39:43] <Guest74> I'm creating the atlases. so just wondering if there was a standard lisp way to save them that would be compatible with what other people are doing.  I'll just write out stuff that can be read in then.
[06:43:58] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Ping timeout: 256 seconds)
[06:44:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[06:49:39] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 268 seconds)
[06:55:21] *** Joins: guest (~user@c-73-77-216-3.hsd1.tx.comcast.net)
[06:56:04] *** Quits: guest (~user@c-73-77-216-3.hsd1.tx.comcast.net) (Remote host closed the connection)
[07:04:57] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[07:06:06] *** Quits: prxq (~quassel@x4dbe4369.dyn.telefonica.de) (Ping timeout: 256 seconds)
[07:06:12] *** Joins: prxq_ (~quassel@x4db4e642.dyn.telefonica.de)
[07:07:33] *** Quits: d4ryus (~d4ryus@ppp-188-174-81-121.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[07:20:54] *** Joins: d4ryus (~d4ryus@ppp-188-174-84-16.dynamic.mnet-online.de)
[07:22:32] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[07:30:34] <beach> Good morning everyone!
[07:40:21] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 245 seconds)
[07:44:36] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[07:49:30] *** Joins: s-liao (~s-liao@101.86.101.64)
[08:03:52] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[08:08:16] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[08:09:52] *** Joins: s-liao (~s-liao@101.86.101.64)
[08:21:11] *** Quits: semz (~none@user/semz) (Ping timeout: 245 seconds)
[08:28:14] *** Joins: djuber (~user@65.79.128.64)
[08:30:13] *** Parts: djuber (~user@65.79.128.64) ()
[08:31:44] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 260 seconds)
[08:34:03] *** Joins: semz (~none@user/semz)
[08:46:13] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[08:47:45] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[08:48:14] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Client Quit)
[09:08:29] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[09:22:48] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:30:13] <susam> Good morning, beach!
[09:30:29] <susam> Good morning, everyone! Hope you are all having a nice Friday!
[09:36:34] <beach> Thanks.  You too.
[09:53:34] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[09:56:04] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[10:00:38] *** Quits: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) (Quit: Gateway shutdown)
[10:13:31] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[10:16:45] *** Joins: Doraemon (~NeoCron@p200300c4cf1c0a00df145b32079df496.dip0.t-ipconnect.de)
[10:19:18] *** Quits: NeoCron (~NeoCron@p200300c4cf1ab200146a93e8f94739c9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:19:45] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[10:34:25] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[10:42:51] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 245 seconds)
[10:44:49] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[10:47:17] *** Joins: s-liao (~s-liao@101.86.101.64)
[10:47:17] *** Joins: Alfr (~Alfr@user/alfr)
[10:48:26] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6450:3e1f:fbe5:993b) (Quit: Leaving)
[10:55:29] *** Joins: gaqwas (~john@dynamic-077-009-049-055.77.9.pool.telefonica.de)
[11:03:30] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[11:04:56] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 245 seconds)
[11:05:27] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 250 seconds)
[11:07:01] *** Joins: amb007 (~a_bakic@126.145.204.77.rev.sfr.net)
[11:09:43] *** Joins: s-liao (~s-liao@101.86.101.64)
[11:12:14] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[11:12:30] *** Joins: pve (~pve@188-67-171-65.bb.dnainternet.fi)
[11:14:25] *** Quits: kuao (uid504326@id-504326.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:34:55] *** Joins: cage (~cage@dynamic-adsl-94-34-16-50.clienti.tiscali.it)
[11:50:40] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:53:56] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[11:56:46] *** Quits: amb007 (~a_bakic@126.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:57:00] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:59:52] *** Joins: rogersm (~rogersm@90.166.177.48)
[12:10:02] *** Joins: s-liao (~s-liao@101.86.101.83)
[12:16:05] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:21:26] <engblom> @w
[12:23:12] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[12:28:02] *** Quits: gaqwas (~john@dynamic-077-009-049-055.77.9.pool.telefonica.de) (Ping timeout: 240 seconds)
[12:30:15] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Client closed)
[12:30:48] *** Joins: s-liao (~s-liao@101.86.101.83)
[12:33:11] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 250 seconds)
[12:48:10] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[13:13:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[13:19:41] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[13:29:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:30:21] *** Quits: frgo_ (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[13:36:30] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[13:36:40] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[13:55:40] *** Joins: theothornhill (~user@217.84-49-191.nextgentel.com)
[14:00:02] *** Quits: theothornhill (~user@217.84-49-191.nextgentel.com) (Ping timeout: 240 seconds)
[14:00:43] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Ping timeout (120 seconds))
[14:00:54] *** Joins: s-liao (~s-liao@101.86.101.83)
[14:14:16] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:15:10] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Client closed)
[14:15:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[14:15:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[14:17:04] *** Joins: rotateq (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de)
[14:22:15] *** Joins: s-liao (~s-liao@101.86.101.83)
[14:29:33] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[14:29:51] *** Joins: aartaka (~aartaka@5.1.53.225)
[14:37:42] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[14:38:34] *** Joins: s-liao (~s-liao@101.86.101.83)
[14:40:34] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 256 seconds)
[14:51:17] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 268 seconds)
[14:52:26] *** Joins: amb007 (~a_bakic@94.145.204.77.rev.sfr.net)
[14:53:00] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[14:56:38] *** Quits: amb007 (~a_bakic@94.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:57:11] *** Joins: amb007 (~a_bakic@94.145.204.77.rev.sfr.net)
[14:57:11] *** Quits: amb007 (~a_bakic@94.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:57:28] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:09:40] *** Joins: random-nick (~random-ni@87.116.180.220)
[15:12:20] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[15:18:28] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[15:18:48] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[15:18:48] *** Joins: Spec` (~spec@user/spec)
[15:19:21] *** Quits: spec (~spec@user/spec) (Killed (NickServ (GHOST command used by Spec`)))
[15:19:25] *** Spec` is now known as spec
[15:20:24] *** Server sets mode: +Ccntz 
[15:21:15] *** Joins: srji_ (~srji@static.43.141.203.116.clients.your-server.de)
[15:21:25] *** Joins: kagevf_ (~jfh@ip68-108-33-76.lv.lv.cox.net)
[15:24:10] *** Joins: etiago- (~etiago@cpc120220-heme13-2-0-cust103.9-1.cable.virginm.net)
[15:25:02] *** Joins: adeht (~death@adeht.org)
[15:25:24] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[15:25:59] *** Quits: pranavats (3fba1d1b34@jabberfr.org) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[15:25:59] *** Quits: X-Scale (~ARM@31.22.203.240) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: herlocksholmes (~herlocksh@x-node.gq) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: borodust (~irc@user/borodust) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[15:26:00] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: _death (~death@adeht.org) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: micro (~micro@user/micro) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: fitzsim (~user@69-165-165-189.dsl.teksavvy.com) (Ping timeout: 260 seconds)
[15:26:01] *** Quits: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 260 seconds)
[15:26:01] *** herlocksholmes5 is now known as herlocksholmes
[15:26:01] *** brettgilio3 is now known as brettgilio
[15:26:02] *** Shinmera- is now known as Shinmera
[15:26:06] *** X-Scale` is now known as X-Scale
[15:26:17] *** Joins: micro (~micro@user/micro)
[15:26:33] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[15:28:14] *** Lord_of_Life_ is now known as Lord_of_Life
[15:28:29] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 250 seconds)
[15:29:27] *** Joins: aartaka (~aartaka@5.1.53.225)
[15:30:16] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[15:32:00] <shka> hi all
[15:32:30] <shka> way to quickload something, but ignore cache?
[15:44:14] <lisp123>  shka: https://stackoverflow.com/questions/37638876/how-to-force-quicklisp-to-download-a-library
[15:44:38] <lisp123> So unfortunately might just mean you need to delete all local copies
[15:45:43] <lisp123> shka: but dont count on me, I just tried googling and couldnt find an answer
[15:49:59] *** Joins: notzmv (~zmv@user/notzmv)
[15:53:40] <shka> sure, thanks
[15:53:52] <shka> i guess simply deleting cache will do
[15:54:22] <lisp123> shka: you could write a function
[15:54:41] <lisp123> that walks your ASDF directories and deletes anything with a particular system name as part of the file name
[15:55:26] <lisp123> https://gigamonkeys.com/book/practical-a-portable-pathname-library.html
[16:03:50] *** Joins: varjagg (~user@ti0040a400-5479.bb.online.no)
[16:10:02] *** Quits: varjagg (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 240 seconds)
[16:18:10] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 260 seconds)
[16:18:22] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[16:19:04] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:34:42] *** Joins: anticomputer_ (~anticompu@gateway/tor-sasl/anticomputer)
[16:35:45] *** Quits: anticomputer (~anticompu@gateway/tor-sasl/anticomputer) (Ping timeout: 276 seconds)
[16:40:27] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[16:40:43] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:41:22] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[16:43:24] *** Joins: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8)
[16:44:40] *** Quits: random-nick (~random-ni@87.116.180.220) (Ping timeout: 256 seconds)
[16:47:46] *** Joins: varjagg (~user@ti0040a400-5479.bb.online.no)
[16:48:11] *** Joins: s-liao (~s-liao@101.86.101.83)
[16:53:32] *** Quits: varjagg (~user@ti0040a400-5479.bb.online.no) (Ping timeout: 240 seconds)
[17:02:05] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Ping timeout (120 seconds))
[17:02:16] *** Joins: s-liao (~s-liao@101.86.101.83)
[17:02:28] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[17:06:57] *** Joins: nature (~nature@45.32.235.173)
[17:36:20] <Xach> shka: what cache?
[17:38:02] *** kagevf_ is now known as kagevf
[17:46:32] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 240 seconds)
[17:55:52] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[17:58:52] *** Quits: s-liao (~s-liao@101.86.101.83) (Ping timeout: 256 seconds)
[18:01:36] *** Joins: amb007 (~a_bakic@126.145.204.77.rev.sfr.net)
[18:01:41] *** Quits: amb007 (~a_bakic@126.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[18:02:33] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[18:02:35] <shka> Xach: ~/.cache/common-lisp mostly
[18:03:30] *** Joins: Bike (~Bike@c-76-106-35-111.hsd1.md.comcast.net)
[18:03:30] *** ChanServ sets mode: +o Bike
[18:04:46] *** Joins: s-liao (~s-liao@101.86.101.83)
[18:10:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[18:16:09] <pdietz> Where all the fasl files go when you use asdf/quicklisp.
[18:17:42] *** Quits: s-liao (~s-liao@101.86.101.83) (Quit: Client closed)
[18:26:28] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[18:30:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:34:18] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[18:52:34] *** adeht is now known as _death
[19:10:07] *** Joins: igemnace (~ian@user/igemnace)
[19:35:13] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[19:36:54] *** Quits: pdietz (~pdietz@216-59-66-162.static.firstlight.net) (Ping timeout: 256 seconds)
[19:47:37] <kagevf> pdietz: by default a fasl file is generated in the same folder as the original *.lisp, or you can do something like (setq slime-compile-file-options '(:fasl-directory "/tmp/slime-fasls/")) ... from: https://slime-tips.tumblr.com/
[19:51:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:53:04] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 260 seconds)
[19:56:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[20:19:12] <dbotton> I created a class in one package and instance of that class in another, I've noticed if I need to access a slot value I need to specify the package for the slot name - (slot-value some-obj 'clog::slot-name)
[20:19:25] <dbotton> is that expected?
[20:19:40] <beach> dbotton: Packages do not contain classes.  Only symbols.
[20:19:57] <beach> dbotton: Put another way, a Common Lisp package is not a module.
[20:20:30] <beach> dbotton: So you need to do whatever it takes to get the right symbol that names the slot.
[20:20:56] <beach> dbotton: If you import the symbol (not recommended) into that other package, no package prefix is needed.
[20:21:27] <beach> dbotton: The same goes for any symbol used for any purpose, like the class name, the slot name, a function name, etc.
[20:23:01] <dbotton> understood, I thought that perhaps slot-value could determine the symbol's package based on the object's class definition
[20:23:10] <shka> dbotton: nah
[20:23:24] <shka> dbotton: you can even have anonymus classes, not belonging to anything at all
[20:23:35] <shka> it works like this
[20:23:42] <shka> things in lisp are named
[20:23:46] <shka> names are symbols
[20:23:52] <shka> symbols are associated with packages
[20:24:39] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 250 seconds)
[20:25:05] <beach> dbotton: It is possible to have two different slots in a class named with two symbols having the same name but different home packages.
[20:25:05] <shka> but some things are not named, and you can short-circuit to thinking that object must have package "owning"  it
[20:25:15] <shka> *can't
[20:25:23] <shka> or rather mustn't
[20:25:37] <shka> what beach said is actually quite common
[20:25:49] <dbotton> I see that
[20:26:06] <shka> anyway: package = bag of symbols
[20:26:16] <shka> and some of those symbols are names of other objects
[20:26:18] <shka> that's it
[20:26:34] <shka> it actually makes sense if you think about it a bit
[20:27:08] <shka> i personally think that this is a very elegant design
[20:27:37] <dbotton> it makes sense just not so elegant for the user
[20:27:47] <dbotton> but is consistent
[20:27:52] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:28:09] <shka> it is easy to understand and consistent
[20:28:32] <shka> other languages have a disturbingly complex behaviors, mixing classes, namespaces, and files
[20:28:34] <beach> dbotton: Client code should not use slots anyway.
[20:28:44] <shka> CL, is not one of those
[20:28:57] *** Joins: dra (~dra@2a04:4540:6413:e000:9884:54c7:30e2:1e3b)
[20:28:59] *** Quits: dra (~dra@2a04:4540:6413:e000:9884:54c7:30e2:1e3b) (Remote host closed the connection)
[20:29:41] <shka> anyway, it is easy to get used to it, simply by practice
[20:29:43] <beach> dbotton: Slots are implementation details.  You should use functions instead.  And the names of those functions should be prefixed with the package name as well, to indicate where the protocol function belongs.
[20:32:11] *** Joins: VincentVega (~user@212.241.24.232)
[20:32:47] <shka> yeah, using slot-value is actually not the best idea
[20:33:12] <shka> because, well, not very OO of you
[20:34:11] <beach> That's not the issue.  The issue is that some attribute could be either stored or computed, and client code should not have to care which one, since it may change in future versions of the module.
[20:34:17] <shka> there is obviously POD, but i would argue that POD type names should not be even exported
[20:34:43] *** Joins: srhm (~srhm@user/srhm)
[20:34:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[20:34:50] <shka> beach: yes, as I said, not very OO of you ;-)
[20:35:08] <shka> that's the point: behavior, not data layout
[20:36:02] <shka> dbotton: hopefully this clears it up, do you have other questions?
[20:36:32] <dbotton> yes, I understood
[20:36:34] <dbotton> thank you all
[20:36:37] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:37:04] <shka> dbotton: awesome!
[20:39:18] <johnjay> packages are not modules
[20:39:18] <shka> regardless, unless you are doing something unusual, you should use slot name just once, when defining class
[20:39:21] <johnjay> yikes
[20:39:29] <shka> johnjay: yeah, yeah, all cleared up
[20:39:54] <dbotton> I would say that is the most frequent issue I encounter
[20:40:09] <shka> it is conceptual issue unfortunately
[20:40:30] <shka> programmers have some expectations, lisp is not meeting them
[20:41:01] <dbotton> I understood before that likely was the answer, but wanted to be sure as was thinking for oo purposes creates confusion
[20:41:02] <shka> you are not the first
[20:41:58] <shka> dbotton: i see
[20:42:01] <dbotton> Ada kept the same consistency in Ada95's OO but realized that users expecting the simplicity of Obj.A to work
[20:42:33] <shka> well, i would argue that lisp is right here
[20:42:34] <dbotton> so they changed in 2005
[20:42:50] <johnjay> well. a bug that people rely on is a feature at some point
[20:42:59] <johnjay> so it may not matter that lisp is right if users expect what is wrong.
[20:43:36] <shka> johnjay: yeah, but doing the wrong thing just to meet some kind of norm is not something i would encourage
[20:43:44] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[20:44:15] <dbotton> true, but I think for lisp it makes more sense to be consistent, as it will never "look" like other languages anyways
[20:44:17] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[20:44:26] <johnjay> i was thinking along these lines the other day. one of the reasons scheme is embedded in a lot of programs is it's super easy to script with
[20:44:55] <johnjay> python also strikes that balance well with having easy scripting but also you can shfit to do "serious" stuff as well
[20:45:21] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 245 seconds)
[20:45:28] <johnjay> whereas some languages like java assume you're ready to be serious and write that public static void main or whatever right off
[20:46:03] <shka> mmm, i think that i don't have anything more to contribute into this discussion
[20:46:17] <johnjay> relevant video: https://www.youtube.com/watch?v=IkpZggx4yNI
[20:46:21] *** Joins: amb007 (~a_bakic@110.145.204.77.rev.sfr.net)
[20:46:22] <shka> dbotton: going AFK, have a great evening!
[20:47:33] <beach> Embedding an implementation of a dynamic language into an application written in a static language is a silly idea from the start.  It is much better, both with respect to performance and to maintainability, to write the entire application in one dynamic language.
[20:47:45] <beach> shka: Take care.
[20:49:15] <shka> johnjay: it is funny, because of print in python 2 vs python 3 :P
[20:49:55] <jackdaniel> unless that static language has richer ecosystem and/or it is the sacred environment on the platform
[20:50:28] <jackdaniel> (i.e android, ios, or embedding common lisp in existing c application)
[20:50:35] <beach> That's a very unfortunate state of the world.
[20:51:12] <jackdaniel> still it is /the/ state of the world ;)
[20:51:23] <johnjay> shka: yes and yet he still gets it despite being python3 syntax. XD
[20:52:15] <johnjay> i think paul graham had an essay talking about this. something like people have to be able to script in your language or use it informally
[20:52:19] <johnjay> otherwise you don't get adoption.
[20:52:25] <shka> Russian roulette
[20:52:29] <shka> :D
[20:52:43] <johnjay> also... java runs on 5 zillion devices.
[20:53:04] <beach> johnjay: Oh, there are so many (usually incorrect) ideas of what needs to be done for your favorite unpopular language to get wider adoption.
[20:53:05] <johnjay> "Wait it doesn't have eclipse?!"
[20:53:27] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[20:54:36] <jackdaniel> this is quite a stretch but this could be compared to how common lisp implementations run on "stock hardware designed for static languages" - kind of like embedding a dynamic language in a static one
[20:54:57] <jackdaniel> it is hardly a bad thing, I don't have a lisp machine around
[20:56:01] <johnjay> nyxt is in cl but uses webkit right? i assume similar type of thing.
[20:56:31] <johnjay> i think in lisp people use scheme as the beginner scripting type language anyway so it doesn't really matter. the implication is if you're learning common lisp you're ready for anything
[20:58:11] <johnjay> as a corollary of this, the more you understand the worse you are at teaching
[20:58:32] <johnjay> because you can't grasp the mind of someone who doesn't live in lisp world
[21:00:22] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[21:00:27] <beach> johnjay: Steven Pinker thinks that this is the reason for so much bad scientific writing.  But it is a skill that can be trained, i.e., people can learn to put themselves in the situation of others who do not yet have the same knowledge.
[21:00:34] <beach> That's what good teachers learn to do.
[21:00:45] <johnjay> i'd agree but it's highly contingent.
[21:00:57] <johnjay> because people learning something can have different backgrounds
[21:01:07] <johnjay> so it's more about what people happen to randomly think than something objective and knowable
[21:01:12] *** Joins: random-nick (~random-ni@87.116.180.220)
[21:01:40] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[21:01:55] <johnjay> i remember reading a flame thread one time about signed overflow in C. somebody was mad that their code to check for overflow was being optimzed away
[21:02:12] <johnjay> and the explanation was well the standard says we can do it because UB
[21:04:46] <johnjay> C is probably the best example of this because it has 200 forms of UB which basically means "the compiler can remove your code lol"
[21:05:39] <jackdaniel> the newer standard says that "in this case the compiler may in example do ..." while in older standards (for C credit) was: "in this case the compiler should do one of ..."
[21:06:19] *** Joins: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[21:06:32] <johnjay> also i learned the other day 0x80000000 > -1 is not true
[21:06:36] <jackdaniel> this wording change is quite unfortunate, because UBs were originally introduced to add extra flexibility to define implementaiton-specific useful behavior  that matches the platform
[21:06:55] <johnjay> apparently C picks int,unsigned int, long, unsigned long, in that order for hex literals. but decimal literals are signed
[21:11:42] *** Quits: amb007 (~a_bakic@110.145.204.77.rev.sfr.net) (Ping timeout: 260 seconds)
[21:12:16] *** Joins: amb007 (~a_bakic@224.245.204.77.rev.sfr.net)
[21:13:36] <johnjay> slightly different topic. but what do you think about clojure
[21:13:50] <johnjay> i kinda want to learn it. i heard people say it has more 'modern' features than CL
[21:13:51] <jackdaniel> it starts with cl so it can't be bad
[21:13:58] <johnjay> haha
[21:14:12] <johnjay> modern of course not necessarily better. but yeah
[21:14:56] <jackdaniel> more seriously though, it follows one specific programming paradigm with aesthetics set by the creator while common lisp is not opinionated (although the "contemporary style" in the community is known)
[21:15:42] <jackdaniel> common lisp has a standard, on the other hand clojure is more popular hence there are more hands to improve it and write libraries for it
[21:16:15] <jackdaniel> if you learn only common lisp you will become a better programmer than if you learn only clojure (in my not very humble opinion)
[21:16:55] <johnjay> one thing i don't really get is if clojure uses java libraries or not
[21:17:00] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:17:06] <johnjay> i would think that's the whole point. but the tutorial i saw didn't even mention how to do java interop
[21:17:16] <jackdaniel> but there is not small gorup of former common lisp programmers who praise clojure as much better (i.e thanks to the ecosystem or more hireable people)
[21:17:39] *** Joins: Colt (~Colt@user/colt)
[21:17:50] <johnjay> yeah i think the previous convo came down to the technical merit is not necessarily same as the eco system
[21:17:52] <jackdaniel> I think that for details you should inquiry in #clojure
[21:18:04] <johnjay> if MSDOS became the rage tomorrow then it would have a rich eco system
[21:18:36] <johnjay> yeah. i guess ECL allows using common lisp as an extension language though
[21:18:53] <johnjay> Nyxt as well. so is CL a good extension language for the foreseeable future?
[21:18:57] <jackdaniel> you may use C libraries from most implementations (including sbcl)
[21:19:10] <jackdaniel> the library cffi provides uniform interface for that
[21:19:12] <johnjay> i guess i wondering if CL is "outdated" like for threading or whatever the future has
[21:19:22] <johnjay> yes i need to learn how to do that
[21:19:46] <johnjay> is that different than using ECL as C directly?
[21:20:14] <johnjay> like ffi i assume means most of your code is CL and it's calling out to a C library
[21:20:19] <jackdaniel> the common lisp standard doesn't have many things that are important - i.e threads, sockets etc - but these things are available as the implementaiton extensions.
[21:20:58] <jackdaniel> you don't need a standard to have a feature - I don't think that C standard subsumes the posix standard, or that it defines threads (well, it does in newer version, but you know what I mean)
[21:21:29] <johnjay> sometimes you need the compiler to have a feature. i don't really understand the specifics though
[21:21:38] <jackdaniel> ECL is different from other implementations in that its runtime is shared with C. that means that you may call ECL functions from C program or embed common lisp runtime inside C application
[21:21:51] <johnjay> right
[21:22:05] <jackdaniel>  i.e ecl is practically a binary wrapper over libecl.so
[21:22:28] <jackdaniel> (or libecl.dll etc)
[21:22:43] <johnjay> i can't find any programs that use ECL with my google fu
[21:23:04] <johnjay> is a common lisp extension different from ffi?
[21:23:10] <jackdaniel> maxima builds with ecl (but it uses also other implementations), eql5 is ecl embedded in qt5
[21:23:18] <johnjay> like it's just lisp code?
[21:23:44] <johnjay> ok. i think i tried using qt5 one time. the fact i had to get an IDE and use qmake confused me so i stopped
[21:24:00] <johnjay> i'm a simple man. i type make or ninja then run my code
[21:24:11] <jackdaniel> I don't understand your question. ffi allows you to call foreign code using the C ABI (i.e libfoo's functions), implementaiton may have extensions that are not part of the standard - i.e lisp functions to create threads
[21:24:32] <johnjay> i was just wondering if you meant something extra by 'extension' or not
[21:24:34] <johnjay> ok
[21:24:45] <johnjay> like in emacs a melpa package is basically just elisp files.
[21:24:51] <johnjay> there's not really much else than that to it
[21:25:01] <johnjay> i.e. no namespace or module system
[21:25:20] *** Joins: pdietz (~pdietz@216-59-66-162.static.firstlight.net)
[21:26:00] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:27:58] *** Parts: VincentVega (~user@212.241.24.232) (ERC (IRC client for Emacs 27.2))
[21:28:08] <johnjay> basically is it justified to invent a new lisp these days is what i was wondering
[21:28:16] <johnjay> or does cl pretty much give you all the things you need
[21:29:31] *** Joins: Colt (~Colt@user/colt)
[21:29:45] <jackdaniel> I don't have an answer to that question.
[21:30:12] <johnjay> fair enough
[21:31:05] *** Joins: gaqwas (~john@dynamic-077-009-049-055.77.9.pool.telefonica.de)
[21:34:06] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[21:35:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:35:59] *** Joins: Lycurgus (~juan@98.4.112.204)
[21:37:37] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[21:38:00] *** Joins: Colt (~Colt@user/colt)
[21:41:17] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[21:41:18] *** Quits: amb007 (~a_bakic@224.245.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:41:26] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[21:52:15] *** Joins: Oladon (~olad@98.43.81.226)
[21:59:03] *** Quits: Jing (~hedgehog@115.207.50.95) (Read error: Connection reset by peer)
[22:01:27] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[22:02:00] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:17:37] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (Quit: WeeChat 2.2-dev)
[22:18:02] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[22:18:04] *** Quits: Bike (~Bike@c-76-106-35-111.hsd1.md.comcast.net) (Quit: Connection closed)
[22:29:27] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:52:42] *** Joins: varjagg (~user@ti0040a400-5479.bb.online.no)
[22:55:05] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[23:12:25] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[23:12:46] *** Joins: cosimone` (~user@93-47-228-243.ip115.fastwebnet.it)
[23:15:42] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 268 seconds)
[23:16:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 240 seconds)
[23:16:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:21:15] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[23:23:04] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[23:23:21] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Remote host closed the connection)
[23:24:37] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[23:25:52] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:31:46] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:33:59] <jcowan> Packages are a weird hybrid between modules and namespaces.
[23:34:12] <jcowan> s/hybrid/midpoint
[23:35:03] *** anticomputer_ is now known as anticomputer
[23:38:01] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:38:35] <pdietz> johnjay: for non-academic purposes it's almost never justified to invent a new language.
[23:38:56] <johnjay> right
[23:39:37] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[23:40:04] <pdietz> It might be justified if there's some new area that no one had invented a language for before and that for which existing languages are a poor fit.
[23:40:57] *** Parts: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz) ()
[23:42:39] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[23:47:34] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 265 seconds)
[23:49:38] *** Quits: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8) (Ping timeout: 268 seconds)
[23:55:46] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 245 seconds)
