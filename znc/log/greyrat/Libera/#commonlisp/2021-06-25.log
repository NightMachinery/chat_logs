[00:18:11] *** Quits: erik_ (~erik@94-209-168-105.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[00:19:27] <Josh_2> being able to reconnect to a server without losing any state at the time of disconnection is epic
[00:19:32] <Josh_2> thank you very much restarts
[00:32:50] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[00:38:59] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[00:41:25] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[00:47:25] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Quit: Leaving)
[00:50:16] *** Quits: knobo (~knobo@ti0021q161-1057.bb.online.no) (Ping timeout: 246 seconds)
[01:04:46] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[01:21:31] *** Quits: lottaquestions (~nick@2607:fa49:5040:5c00:302c:2ca5:9f37:1500) (Ping timeout: 268 seconds)
[01:22:44] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:26:48] *** Quits: killsushi (~killsushi@user/killsushi) (Quit: Leaving)
[01:29:17] *** phoe_ is now known as phoe
[01:29:35] *** Quits: phoe (~phoe@2001:19f0:5:689f:5400:2ff:fe77:b1de) (Changing host)
[01:29:35] *** Joins: phoe (~phoe@user/phoe)
[01:33:26] *** Quits: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:34:50] *** Joins: lad (~lad@user/lad)
[01:45:07] *** Quits: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt) (Quit: abiit)
[01:48:01] *** Joins: tfb (~tfb@88.98.95.237)
[01:48:36] *** Quits: tfb (~tfb@88.98.95.237) (Client Quit)
[01:54:09] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:54:31] *** Quits: pve (~pve@37-136-149-97.rev.dnainternet.fi) (Quit: leaving)
[02:01:00] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:03:39] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:03:53] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:05:11] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:06:48] <kevingal> How do y'all set up slime-asdf? It doesn't seem to be available in MELPA.
[02:07:17] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:08:25] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:14:16] <kevingal> Never mind, it's an extension to the slime package, so you just add (push 'slime-asdf slime-contribs) to your Emacs config.
[02:19:04] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:5901:169c:618d:74ad) (Remote host closed the connection)
[02:23:42] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 258 seconds)
[02:26:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 258 seconds)
[02:29:23] *** Quits: lad (~lad@user/lad) (Ping timeout: 256 seconds)
[02:41:32] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 250 seconds)
[02:43:38] *** Quits: taiju (~taiju@m014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[02:44:46] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[02:49:07] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (*.net *.split)
[02:49:08] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (*.net *.split)
[02:49:08] *** Quits: kakuhen (~kakuhen@user/kakuhen) (*.net *.split)
[02:49:08] *** Quits: selwyn (~selwyn@user/selwyn) (*.net *.split)
[02:49:08] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (*.net *.split)
[02:49:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (*.net *.split)
[02:49:08] *** Quits: conjunctive (sid433686@id-433686.brockwell.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: palter (sid27521@id-27521.brockwell.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: jcowan_ (sid325434@id-325434.charlton.irccloud.com) (*.net *.split)
[02:49:08] *** Quits: coat (~coat@user/coat) (*.net *.split)
[02:49:08] *** Quits: _whitelogger (~whitelogg@uruz.whitequark.org) (*.net *.split)
[02:49:08] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[02:49:08] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[02:49:08] *** Quits: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de) (*.net *.split)
[02:49:08] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (*.net *.split)
[02:49:08] *** Quits: terpri (~terpri@user/terpri) (*.net *.split)
[02:49:08] *** Quits: leeb (~leeb@KD111239152196.au-net.ne.jp) (*.net *.split)
[02:49:08] *** Quits: d4ryus (~d4ryus@ppp-188-174-87-234.dynamic.mnet-online.de) (*.net *.split)
[02:49:08] *** Quits: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it) (*.net *.split)
[02:49:09] *** Quits: minion (~minion@common-lisp.net) (*.net *.split)
[02:49:09] *** Quits: remexre (~nathan@user/remexre) (*.net *.split)
[02:49:09] *** Quits: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de) (*.net *.split)
[02:49:09] *** Quits: Josh_2 (~user@37.25.47.130) (*.net *.split)
[02:49:09] *** Quits: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de) (*.net *.split)
[02:49:09] *** Quits: Oddity (Oddity@user/oddity) (*.net *.split)
[02:49:09] *** Quits: susam (~susam@user/susam) (*.net *.split)
[02:49:09] *** Quits: samebchase (~samebchas@51.15.68.182) (*.net *.split)
[02:49:09] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (*.net *.split)
[02:49:09] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[02:49:09] *** Quits: hendursaga (~weechat@user/hendursaga) (*.net *.split)
[02:49:09] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (*.net *.split)
[02:49:09] *** Quits: VFR (~user@cpe-174-105-5-165.columbus.res.rr.com) (*.net *.split)
[02:49:09] *** Quits: jdz (~jdz@185.23.160.114) (*.net *.split)
[02:49:09] *** Quits: Xach (~xach@66-63-89-62.static.suscom-maine.net) (*.net *.split)
[02:49:09] *** Quits: Bike (~Glossina@71.69.170.70) (*.net *.split)
[02:49:10] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[02:49:10] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (*.net *.split)
[02:49:10] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[02:49:10] *** Quits: prxq (~quassel@x4db915df.dyn.telefonica.de) (*.net *.split)
[02:49:10] *** Quits: aeth (~Michael@user/aeth) (*.net *.split)
[02:49:10] *** Quits: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com) (*.net *.split)
[02:49:10] *** Quits: Vultyre (~vultyre@user/vultyre) (*.net *.split)
[02:49:10] *** Quits: djuber (~user@65.79.128.64) (*.net *.split)
[02:49:10] *** Quits: Guest5592 (~yp@113.116.20.52) (*.net *.split)
[02:49:10] *** Quits: seanw (spwhitton@debian/spwhitton) (*.net *.split)
[02:49:10] *** Quits: mister_m (~user@c-73-209-97-9.hsd1.il.comcast.net) (*.net *.split)
[02:49:10] *** Quits: sp41 (~spal@70.241.120.35) (*.net *.split)
[02:49:10] *** Quits: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net) (*.net *.split)
[02:49:11] *** Quits: trufas (~trufas@177.240.218.218) (*.net *.split)
[02:49:11] *** Quits: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com) (*.net *.split)
[02:49:11] *** Quits: leo_song_ (~leo_song@1.156.52.78) (*.net *.split)
[02:49:11] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[02:49:11] *** Quits: andreyorst (~andreyors@2.92.125.229) (*.net *.split)
[02:49:11] *** Quits: micro (~micro@user/micro) (*.net *.split)
[02:49:11] *** Quits: gpiero (~quassel@193.182.16.91) (*.net *.split)
[02:49:11] *** Quits: luna-is-here (~quassel@ip-95-223-58-221.hsi16.unitymediagroup.de) (*.net *.split)
[02:49:11] *** Quits: hugo (znc@verdigris.lysator.liu.se) (*.net *.split)
[02:49:11] *** Quits: phoe (~phoe@user/phoe) (*.net *.split)
[02:49:11] *** Quits: ghard (~user@2a02:a210:23c2:6e00:3617:ebff:fed2:79cd) (*.net *.split)
[02:49:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (*.net *.split)
[02:49:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[02:49:12] *** Quits: specbot (~specbot@common-lisp.net) (*.net *.split)
[02:49:12] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[02:49:12] *** Quits: engblom_ (~foo@62-121-47-42.static.lounea.fi) (*.net *.split)
[02:49:12] *** Quits: IAmRasputin (~ryan.gann@209.6.125.193) (*.net *.split)
[02:49:12] *** Quits: random-nick (~random-ni@87.116.165.220) (*.net *.split)
[02:49:12] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (*.net *.split)
[02:49:12] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[02:49:12] *** Quits: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt) (*.net *.split)
[02:49:12] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (*.net *.split)
[02:49:12] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (*.net *.split)
[02:49:12] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[02:49:12] *** Quits: hhdave (~user@ip212.ip-193-70-71.eu) (*.net *.split)
[02:49:12] *** Quits: casual_friday_ (~casual_fr@216.71.110.168) (*.net *.split)
[02:49:12] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[02:49:12] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[02:49:12] *** Quits: fishfinger (~fishfinge@178.62.22.133) (*.net *.split)
[02:49:12] *** Quits: fengshaun (~fengshaun@68.69.214.210) (*.net *.split)
[02:49:13] *** Quits: amk (~amk@176.61.106.150) (*.net *.split)
[02:49:13] *** Quits: mingus (~jan-magnu@ti0135a400-2471.bb.online.no) (*.net *.split)
[02:49:13] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (*.net *.split)
[02:49:13] *** Quits: Colleen (~fermion@supersolid.equilibrium.tymoon.eu) (*.net *.split)
[02:49:13] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (*.net *.split)
[02:49:13] *** Quits: ggoes (~gregf@user/ggoes) (*.net *.split)
[02:49:13] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (*.net *.split)
[02:49:14] *** Quits: borodust (~irc@user/borodust) (*.net *.split)
[02:49:14] *** Quits: Demosthenex (~Demosthen@user/demosthenex) (*.net *.split)
[02:49:14] *** Quits: jgkamat (~jay@user/jay) (*.net *.split)
[02:49:14] *** Quits: Krystof (~user@81.174.155.115) (*.net *.split)
[02:49:14] *** Quits: fiddlerwoaroof_ (~fiddlerwo@user/fiddlerwoaroof) (*.net *.split)
[02:49:14] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (*.net *.split)
[02:49:14] *** Quits: etiago (~etiago@user/etiago) (*.net *.split)
[02:49:14] *** Quits: eta (~eta@chat.i.eta.st) (*.net *.split)
[02:49:14] *** Quits: marcrosoft (uid504919@id-504919.tooting.irccloud.com) (*.net *.split)
[02:49:15] *** Quits: antoszka (~antoni@rozalia.antoszka.pl) (*.net *.split)
[02:49:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[02:49:15] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[02:49:15] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (*.net *.split)
[02:49:15] *** Quits: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com) (*.net *.split)
[02:49:15] *** Quits: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se) (*.net *.split)
[02:49:15] *** Quits: totoro (~totoro@user/totoro) (*.net *.split)
[02:49:15] *** Quits: pok (~pok@user/pok) (*.net *.split)
[02:49:15] *** Quits: ck_ (~ck@plskthx.org) (*.net *.split)
[02:49:15] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[02:49:15] *** Quits: gabc (~gabc@user/gabc) (*.net *.split)
[02:49:15] *** Quits: skempf (~Kabriel@user/kabriel) (*.net *.split)
[02:49:15] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (*.net *.split)
[02:49:15] *** Quits: _death (~death@adeht.org) (*.net *.split)
[02:49:15] *** Quits: jemoka (~jemoka@user/jemoka) (*.net *.split)
[02:49:15] *** Quits: spacebat1 (spacebat@spot.ubermonkey.net) (*.net *.split)
[02:49:15] *** Quits: hirez (~hirez@2602:ffc5:20::1:512e) (*.net *.split)
[02:49:15] *** Quits: sukaeto (~sukaeto@sharona.moonpearltech.com) (*.net *.split)
[02:49:16] *** Quits: markasoftware (~quassel@107.161.26.124) (*.net *.split)
[02:49:16] *** Quits: luis` (~luismboma@2001:470:69fc:105::cc7) (*.net *.split)
[02:49:16] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (*.net *.split)
[02:49:16] *** Quits: akanouras (~akanouras@user/akanouras) (*.net *.split)
[02:49:16] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (*.net *.split)
[02:49:16] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (*.net *.split)
[02:49:16] *** Quits: manicennui (uid349235@id-349235.tinside.irccloud.com) (*.net *.split)
[02:49:16] *** Quits: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa) (*.net *.split)
[02:49:16] *** Quits: ^[ (~user@user//x-8473491) (*.net *.split)
[02:49:16] *** Quits: thonkpod (~thonkpod@user/thonkpod) (*.net *.split)
[02:49:17] *** Quits: luis (~luis@lisp/luis) (*.net *.split)
[02:49:17] *** Quits: loke (~loke@junk.nocrew.org) (*.net *.split)
[02:49:17] *** Quits: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (*.net *.split)
[02:49:17] *** Quits: pjb (~pjb@user/pjb) (*.net *.split)
[02:49:17] *** Quits: beach (~user@2a01:cb19:150:3400:a1fa:cc82:d570:b580) (*.net *.split)
[02:49:17] *** Quits: |3b| (bbb@user/3b/x-2324788) (*.net *.split)
[02:49:17] *** Quits: danieli (~danieli@user/danieli) (*.net *.split)
[02:49:17] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (*.net *.split)
[02:49:17] *** Quits: jealousmonk (~jealousmo@brettgilio.com) (*.net *.split)
[02:49:18] *** Quits: spec (~mrSpec@user/spec) (*.net *.split)
[02:49:18] *** Quits: etimmons (~etimmons@2001:470:69fc:105::5d5) (*.net *.split)
[02:49:18] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (*.net *.split)
[02:49:18] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[02:49:18] *** Quits: les (znc@user/les) (*.net *.split)
[02:49:18] *** Quits: travv0 (sid293381@user/travv0) (*.net *.split)
[02:49:18] *** Quits: dbotton (sid492350@id-492350.tooting.irccloud.com) (*.net *.split)
[02:49:18] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[02:49:18] *** Quits: dale (dale@user/dale) (*.net *.split)
[02:49:19] *** Quits: iisi (sid19824@id-19824.stonehaven.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: jmercouris (sid438340@id-438340.stonehaven.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: gendl (sid100083@id-100083.stonehaven.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: lonjil (~quassel@user/lonjil) (*.net *.split)
[02:49:19] *** Quits: gko (~user@user/gko) (*.net *.split)
[02:49:19] *** Quits: bldr (~bull@185.117.72.168) (*.net *.split)
[02:49:19] *** Quits: dcx (~dcx@user/dac) (*.net *.split)
[02:49:19] *** Quits: zups (~meow@2a01:4f9:c010:6036::1) (*.net *.split)
[02:49:19] *** Quits: victor (sid208353@user/victor) (*.net *.split)
[02:49:19] *** Quits: drmeister (sid45147@id-45147.charlton.irccloud.com) (*.net *.split)
[02:49:19] *** Quits: flip214 (~marek@user/flip214) (*.net *.split)
[02:49:19] *** Quits: jackdaniel (~jack@user/jackdaniel) (*.net *.split)
[02:49:19] *** Quits: cpape (~user@2a01:4f9:c010:632d::1) (*.net *.split)
[02:49:19] *** Quits: hubvu (sid495858@id-495858.tinside.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: splittist (sid17737@id-17737.tinside.irccloud.com) (*.net *.split)
[02:49:20] *** Quits: cheers (user@2600:3c00::f03c:91ff:fe1c:3c39) (*.net *.split)
[02:49:20] *** Quits: easye (~user@oxi.slack.net) (*.net *.split)
[02:49:20] *** Quits: igemnace (~ian@user/igemnace) (*.net *.split)
[02:49:20] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (*.net *.split)
[02:49:20] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (*.net *.split)
[02:49:20] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (*.net *.split)
[02:49:20] *** Quits: Fade (fade@outrider.deepsky.com) (*.net *.split)
[02:49:20] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[02:49:21] *** Quits: jason_m (~user@c-73-72-28-91.hsd1.il.comcast.net) (*.net *.split)
[02:49:21] *** Quits: Shinmera (~shinmera@shirakumo/shinmera) (*.net *.split)
[02:49:21] *** Quits: pl (sid98063@brockwell.irccloud.com) (*.net *.split)
[02:49:21] *** Quits: zagura (~zagura@user/zagura) (*.net *.split)
[02:49:21] *** Quits: tux0r (~tux0r@rosaelefanten.org) (*.net *.split)
[02:49:50] *** Joins: ChanServ (ChanServ@services.libera.chat)
[02:49:50] *** iridium.libera.chat sets mode: +o ChanServ
[02:50:10] *** Joins: etiago (~etiago@user/etiago)
[02:50:10] *** Joins: gabc (~gabc@user/gabc)
[02:50:10] *** Joins: eta (~eta@chat.i.eta.st)
[02:50:10] *** Joins: marcrosoft (uid504919@id-504919.tooting.irccloud.com)
[02:50:10] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[02:50:10] *** Joins: antoszka (~antoni@rozalia.antoszka.pl)
[02:50:10] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[02:50:10] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[02:50:10] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[02:50:10] *** Joins: ck_ (~ck@plskthx.org)
[02:50:10] *** Joins: pok (~pok@user/pok)
[02:50:10] *** Joins: xantoz (~tewi_inab@c-e0bfe255.013-124-73746f25.bbcust.telenor.se)
[02:50:10] *** Joins: totoro (~totoro@user/totoro)
[02:50:10] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[02:50:10] *** Joins: skempf (~Kabriel@user/kabriel)
[02:50:10] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[02:50:49] *** Joins: amk (~amk@176.61.106.150)
[02:50:49] *** Joins: mingus (~jan-magnu@ti0135a400-2471.bb.online.no)
[02:50:49] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[02:50:49] *** Joins: Colleen (~fermion@supersolid.equilibrium.tymoon.eu)
[02:51:28] *** Joins: igemnace (~ian@user/igemnace)
[02:51:28] *** Joins: Fade (fade@outrider.deepsky.com)
[02:51:28] *** Joins: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de)
[02:51:28] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[02:51:28] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[02:51:28] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[02:51:28] *** Joins: jason_m (~user@c-73-72-28-91.hsd1.il.comcast.net)
[02:51:28] *** Joins: Shinmera (~shinmera@shirakumo/shinmera)
[02:51:28] *** Joins: zagura (~zagura@user/zagura)
[02:51:28] *** Joins: pl (sid98063@brockwell.irccloud.com)
[02:51:28] *** Joins: tux0r (~tux0r@rosaelefanten.org)
[02:51:28] *** iridium.libera.chat sets mode: +oo MichaelRaskin pl
[02:51:33] *** Joins: prxq (~quassel@x4db915df.dyn.telefonica.de)
[02:51:33] *** Joins: VFR (~user@cpe-174-105-5-165.columbus.res.rr.com)
[02:51:33] *** Joins: aeth (~Michael@user/aeth)
[02:51:33] *** Joins: zephyr (~alandiper@ec2-34-230-252-114.compute-1.amazonaws.com)
[02:51:33] *** Joins: Vultyre (~vultyre@user/vultyre)
[02:51:33] *** Joins: jdz (~jdz@185.23.160.114)
[02:51:33] *** Joins: Xach (~xach@66-63-89-62.static.suscom-maine.net)
[02:51:33] *** Joins: seanw (spwhitton@debian/spwhitton)
[02:51:33] *** Joins: djuber (~user@65.79.128.64)
[02:51:33] *** Joins: Bike (~Glossina@71.69.170.70)
[02:51:33] *** Joins: Guest5592 (~yp@113.116.20.52)
[02:51:33] *** Joins: mister_m (~user@c-73-209-97-9.hsd1.il.comcast.net)
[02:51:33] *** Joins: sp41 (~spal@70.241.120.35)
[02:51:33] *** Joins: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net)
[02:51:33] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[02:51:33] *** Joins: trufas (~trufas@177.240.218.218)
[02:51:33] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[02:51:33] *** Joins: sjl (~sjl@cpe-66-66-5-59.rochester.res.rr.com)
[02:51:33] *** Joins: leo_song_ (~leo_song@1.156.52.78)
[02:51:33] *** Joins: andreyorst (~andreyors@2.92.125.229)
[02:51:33] *** Joins: sm2n (~sm2n@user/sm2n)
[02:51:33] *** Joins: micro (~micro@user/micro)
[02:51:33] *** Joins: gpiero (~quassel@193.182.16.91)
[02:51:33] *** Joins: luna-is-here (~quassel@ip-95-223-58-221.hsi16.unitymediagroup.de)
[02:51:33] *** iridium.libera.chat sets mode: +o Bike
[02:51:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:51:55] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[02:52:00] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[02:52:00] *** Joins: ggoes (~gregf@user/ggoes)
[02:52:00] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[02:52:00] *** Joins: borodust (~irc@user/borodust)
[02:52:00] *** Joins: Demosthenex (~Demosthen@user/demosthenex)
[02:52:00] *** Joins: jgkamat (~jay@user/jay)
[02:52:00] *** Joins: Krystof (~user@81.174.155.115)
[02:52:00] *** Joins: fiddlerwoaroof_ (~fiddlerwo@user/fiddlerwoaroof)
[02:52:00] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[02:52:13] *** Joins: conjunctive (sid433686@id-433686.brockwell.irccloud.com)
[02:52:13] *** Joins: palter (sid27521@id-27521.brockwell.irccloud.com)
[02:52:13] *** Joins: _whitelogger (~whitelogg@uruz.whitequark.org)
[02:52:13] *** Joins: jcowan_ (sid325434@id-325434.charlton.irccloud.com)
[02:52:13] *** Joins: coat (~coat@user/coat)
[02:52:13] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[02:52:13] *** Joins: derelict (~derelict@user/derelict)
[02:52:13] *** Joins: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de)
[02:52:13] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[02:52:13] *** Joins: terpri (~terpri@user/terpri)
[02:52:13] *** Joins: leeb (~leeb@KD111239152196.au-net.ne.jp)
[02:52:13] *** Joins: d4ryus (~d4ryus@ppp-188-174-87-234.dynamic.mnet-online.de)
[02:52:13] *** Joins: Posterdati (~posterdat@host-82-49-175-12.retail.telecomitalia.it)
[02:52:13] *** Joins: minion (~minion@common-lisp.net)
[02:52:13] *** Joins: remexre (~nathan@user/remexre)
[02:52:13] *** Joins: bhaible (~bruno@dslb-088-068-034-084.088.068.pools.vodafone-ip.de)
[02:52:13] *** Joins: Josh_2 (~user@37.25.47.130)
[02:52:13] *** Joins: madnificent (~madnifice@static.210.74.63.178.clients.your-server.de)
[02:52:13] *** Joins: Oddity (Oddity@user/oddity)
[02:52:13] *** Joins: susam (~susam@user/susam)
[02:52:13] *** Joins: samebchase (~samebchas@51.15.68.182)
[02:52:13] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[02:52:35] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[02:52:35] *** Joins: pjb (~pjb@user/pjb)
[02:52:35] *** Joins: beach (~user@2a01:cb19:150:3400:a1fa:cc82:d570:b580)
[02:52:35] *** Joins: |3b| (bbb@user/3b/x-2324788)
[02:52:35] *** Joins: danieli (~danieli@user/danieli)
[02:52:35] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[02:52:35] *** Joins: jealousmonk (~jealousmo@brettgilio.com)
[02:52:35] *** Joins: spec (~mrSpec@user/spec)
[02:52:37] *** ChanServ sets mode: +o beach
[02:53:26] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[02:53:26] *** Joins: travv0 (sid293381@id-293381.brockwell.irccloud.com)
[02:53:26] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[02:53:26] *** Joins: phoe (~phoe@user/phoe)
[02:53:26] *** Joins: ghard (~user@2a02:a210:23c2:6e00:3617:ebff:fed2:79cd)
[02:53:26] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[02:53:26] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[02:53:26] *** Joins: specbot (~specbot@common-lisp.net)
[02:53:28] *** Joins: commandoline (~commandol@ubuntu/member/commandoline)
[02:53:28] *** Joins: engblom_ (~foo@62-121-47-42.static.lounea.fi)
[02:53:28] *** Joins: IAmRasputin (~ryan.gann@209.6.125.193)
[02:53:28] *** Joins: random-nick (~random-ni@87.116.165.220)
[02:53:28] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[02:53:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:53:28] *** Joins: X-Scale (~ARM@175.38.114.89.rev.vodafone.pt)
[02:53:28] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[02:53:28] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[02:53:28] *** Joins: skyl4rk (~tlvb@user/tlvb)
[02:53:28] *** Joins: hhdave (~user@ip212.ip-193-70-71.eu)
[02:53:28] *** Joins: casual_friday_ (~casual_fr@216.71.110.168)
[02:53:28] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[02:53:28] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[02:53:28] *** Joins: fishfinger (~fishfinge@178.62.22.133)
[02:53:28] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[02:53:29] *** Joins: manicennui (uid349235@id-349235.tinside.irccloud.com)
[02:53:29] *** Joins: luis` (~luismboma@2001:470:69fc:105::cc7)
[02:53:29] *** Joins: ^[ (~user@user//x-8473491)
[02:53:29] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[02:53:29] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[02:53:29] *** Joins: akanouras (~akanouras@user/akanouras)
[02:53:29] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[02:53:29] *** Joins: jasom (~aidenn@2600:8802:7fa0:b00:69c9:7281:b072:31aa)
[02:53:29] *** Joins: thonkpod (~thonkpod@user/thonkpod)
[02:53:29] *** Joins: luis (~luis@lisp/luis)
[02:53:29] *** Joins: loke (~loke@junk.nocrew.org)
[02:53:29] *** iridium.libera.chat sets mode: +o luis
[02:53:30] *** Quits: akanouras (~akanouras@user/akanouras) (Ping timeout: 272 seconds)
[02:53:30] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Ping timeout: 272 seconds)
[02:53:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Client Quit)
[02:53:37] *** Joins: hubvu (sid495858@id-495858.tinside.irccloud.com)
[02:53:37] *** Joins: splittist (sid17737@id-17737.tinside.irccloud.com)
[02:53:37] *** Joins: cheers (user@2600:3c00::f03c:91ff:fe1c:3c39)
[02:53:37] *** Joins: easye (~user@oxi.slack.net)
[02:53:38] *** Joins: jackdaniel (~jack@user/jackdaniel)
[02:53:38] *** Joins: bldr (~bull@185.117.72.168)
[02:53:38] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[02:53:38] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[02:53:38] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[02:53:38] *** Joins: dcx (~dcx@user/dac)
[02:53:38] *** Joins: les (znc@user/les)
[02:53:38] *** Joins: dbotton (sid492350@id-492350.tooting.irccloud.com)
[02:53:38] *** Joins: gendl (sid100083@id-100083.stonehaven.irccloud.com)
[02:53:38] *** Joins: gko (~user@user/gko)
[02:53:38] *** Joins: dale (dale@user/dale)
[02:53:38] *** Joins: hexology (~hexology@user/hexology)
[02:53:38] *** Joins: iisi (sid19824@id-19824.stonehaven.irccloud.com)
[02:53:38] *** Joins: jmercouris (sid438340@id-438340.stonehaven.irccloud.com)
[02:53:38] *** Joins: lonjil (~quassel@user/lonjil)
[02:53:38] *** Joins: drmeister (sid45147@id-45147.charlton.irccloud.com)
[02:53:38] *** Joins: zups (~meow@2a01:4f9:c010:6036::1)
[02:53:38] *** Joins: cpape (~user@2a01:4f9:c010:632d::1)
[02:53:38] *** Joins: victor (sid208353@user/victor)
[02:53:38] *** Joins: flip214 (~marek@user/flip214)
[02:53:38] *** iridium.libera.chat sets mode: +v jackdaniel
[02:54:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Max SendQ exceeded)
[02:54:21] *** Joins: _death (~death@adeht.org)
[02:54:24] *** Joins: jemoka (~jemoka@user/jemoka)
[02:54:24] *** Joins: spacebat1 (spacebat@spot.ubermonkey.net)
[02:54:24] *** Joins: hirez (~hirez@2602:ffc5:20::1:512e)
[02:54:24] *** Joins: sukaeto (~sukaeto@sharona.moonpearltech.com)
[02:54:24] *** Joins: markasoftware (~quassel@107.161.26.124)
[02:55:03] *** Joins: Noisytoot (noisytoot@cpc108961-cmbg20-2-0-cust10.5-4.cable.virginm.net)
[02:55:03] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[02:55:03] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:55:03] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:55:03] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[02:55:03] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Remote host closed the connection)
[02:57:34] *** Quits: travv0 (sid293381@id-293381.brockwell.irccloud.com) (Ping timeout: 246 seconds)
[02:57:59] *** Joins: travv0 (sid293381@id-293381.brockwell.irccloud.com)
[02:58:03] *** Quits: etimmons (~etimmons@2001:470:69fc:105::5d5) (Ping timeout: 272 seconds)
[02:58:03] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Ping timeout: 272 seconds)
[02:58:25] *** Quits: luis` (~luismboma@2001:470:69fc:105::cc7) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Ping timeout: 272 seconds)
[02:58:26] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (Ping timeout: 272 seconds)
[02:59:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[03:01:18] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[03:01:56] *** Joins: ChanServ (ChanServ@services.libera.chat)
[03:01:56] *** iridium.libera.chat sets mode: +o ChanServ
[03:01:56] *** ChanServ sets mode: +o jackdaniel
[03:02:05] *** Quits: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:02:08] *** Quits: travv0 (sid293381@id-293381.brockwell.irccloud.com) (Changing host)
[03:02:08] *** Joins: travv0 (sid293381@user/travv0)
[03:02:43] *** Joins: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de)
[03:04:43] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 258 seconds)
[03:05:06] *** Joins: selwyn (~selwyn@user/selwyn)
[03:06:18] *** Joins: aeth (~Michael@user/aeth)
[03:11:57] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[03:12:15] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[03:14:30] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[03:18:35] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[03:20:39] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[03:26:33] *** Quits: varjag (~user@ti0040a400-5479.bb.online.no) (Quit: ERC (IRC client for Emacs 28.0.50))
[03:27:27] <char> scymtym, Bike: I noticed that you changed the license on trivial-with-current-source-form. Any particular reason for that?
[03:28:21] <Bike> I think somebody asked scytym to change it? i don't remember
[03:30:05] <scymtym> char: etimmons said they couldn't use the system at work due to the license. are you asking for any particular reason?
[03:30:12] <char> I like gpl, but this change makes my life so much easier
[03:32:34] *** Quits: sp41 (~spal@70.241.120.35) (Quit: leaving)
[03:34:33] *** Quits: aeth (~Michael@user/aeth) (Ping timeout: 256 seconds)
[03:35:27] <tux0r> eww. gpl.
[03:36:10] *** Joins: aeth (~Michael@user/aeth)
[03:45:37] <Bike> well, it's lgpl now
[03:52:14] *** Joins: lad (~lad@23-121-67-46.lightspeed.irvnca.sbcglobal.net)
[03:52:38] *** lad is now known as Guest6063
[03:53:11] *** Quits: Guest6063 (~lad@23-121-67-46.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[03:53:28] *** Joins: lad_ (~lad@23-121-67-46.lightspeed.irvnca.sbcglobal.net)
[03:53:47] *** Quits: prxq (~quassel@x4db915df.dyn.telefonica.de) (Ping timeout: 258 seconds)
[03:54:33] *** Joins: prxq (~quassel@x4db6a98b.dyn.telefonica.de)
[03:55:21] *** Quits: lad_ (~lad@23-121-67-46.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[03:55:40] *** Joins: lad_ (~lad@user/lad)
[03:56:11] *** Joins: tfb (~tfb@88.98.95.237)
[03:56:42] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 240 seconds)
[03:56:58] *** lad_ is now known as lad
[03:57:18] <kakuhen> I try to license all of my stuff with the ISC license
[03:58:06] <kakuhen> silly valley is probably not interested in "stealing" lisp code, and even if they are, they probably want Clojure, not Common Lisp.
[03:59:02] *** Quits: tfb (~tfb@88.98.95.237) (Client Quit)
[03:59:54] *** Joins: Oladon (~olad@98.43.81.226)
[04:13:27] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Remote host closed the connection)
[04:24:29] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[04:38:42] *** Joins: akoana (~ah@user/akoana)
[04:42:28] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 268 seconds)
[04:55:47] *** Joins: gigamonkey (~user@135-180-44-14.fiber.dynamic.sonic.net)
[05:14:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[05:32:41] *** Quits: marcrosoft (uid504919@id-504919.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:09] *** Quits: lad (~lad@user/lad) (Ping timeout: 256 seconds)
[05:47:21] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Remote host closed the connection)
[05:47:37] *** Joins: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06)
[05:52:38] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:56:13] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:04:11] *** Joins: wilfred (uid159@id-159.highgate.irccloud.com)
[06:05:19] *** Joins: lad (~lad@user/lad)
[06:12:31] <char> What is the expected behavior to call a function that has both &optional and &key without providing all optional but providing key?
[06:13:17] <aeth> you have to provide the optional first
[06:13:33] <aeth> ime with write-string/write-line
[06:14:15] <char> so basically: "don't do that"
[06:14:29] <White_Flame> SBCL even gives you a style warning when you define a function that way, but it's not illegal
[06:15:10] <White_Flame> just consider that the keywords are in the same &optional scope as your optionals, so yeah in-order fill-in
[06:15:46] <White_Flame> (the keyword list being one of the optional things, its contents obviously being non-positional)
[06:16:45] <jcowan_> †IMO use &optional *or* &key, not both.  "Entweder transsubstantiation oder consubstantiation but in no case subsubstantiation."  --my cousin James
[06:18:37] <char> thanks. I would want to, but I can't control what others do
[06:18:49] <char> s/would/wouldn't
[06:18:51] <White_Flame> just turn the optionals into more keywords
[06:21:08] <char> for sure
[06:32:39] <pjb> char: notably in CL there are 2 functions that have both optional and key arguments, and they're a known pitfall.
[06:34:05] <pjb> char: read-from-string
[06:37:07] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[06:38:19] <pjb> write-string, write-line, parse-namestring  and there's also a macro: with-output-to-string.
[06:38:35] <pjb> so make it 4 functions and 1 macro.
[06:50:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[06:50:42] *** Quits: lad (~lad@user/lad) (Ping timeout: 240 seconds)
[06:52:07] *** Joins: prxq_ (~quassel@x4db90b50.dyn.telefonica.de)
[06:55:43] *** Quits: prxq (~quassel@x4db6a98b.dyn.telefonica.de) (Ping timeout: 256 seconds)
[07:27:02] *** Quits: seanw (spwhitton@debian/spwhitton) (Quit: leaving)
[07:32:56] <beach> Good morning everyone!
[07:33:39] *** beach sets mode: -o beach
[07:33:42] *** Joins: Oladon (~olad@98.43.81.226)
[07:39:26] <kakuhen> good evening
[07:45:36] <kakuhen> Does anyone know here if there has been an attempt to provide a common lisp interface for Audio Units or VST?
[07:47:26] <moon-child> kakuhen: you may be interested in https://ccrma.stanford.edu/software/snd/
[07:51:28] <kakuhen> ooh this does look interesting to me; ty
[07:52:07] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[08:00:19] *** Quits: taiju (~taiju@240b:253:ec40:2400:654f:7566:b735:5f06) (Ping timeout: 256 seconds)
[08:05:59] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 256 seconds)
[08:06:06] *** Joins: seok (~Seok@49.2.163.56)
[08:06:42] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:07:28] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[08:09:20] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:09:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[08:10:00] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[08:10:36] *** Lord_of_Life_ is now known as Lord_of_Life
[08:10:50] *** Quits: gigamonkey (~user@135-180-44-14.fiber.dynamic.sonic.net) (Quit: ERC (IRC client for Emacs 27.2))
[08:10:55] <pjb> kakuhen: AFAIK, not. Note that VST 3 API is a C++ API. This makes things more difficult.
[08:11:26] *** Joins: gigamonkey (~user@135-180-44-14.fiber.dynamic.sonic.net)
[08:11:50] <pjb> kakuhen: also, VST is designed to make plug-ins, and it's difficult to make a plug-in in CL. You'd have to use ecl, and generate a library, and load libecl.so along.
[08:12:14] <kakuhen> yeah, I figured vst may be hard
[08:12:26] <pjb> kakuhen: clasp which integrates "natively" with C++ would be nice, but I think it lost the ability to generate libraries like ecl can.
[08:12:29] <kakuhen> maybe CoreAudio will be a bit simpler since it's mostly a C API
[08:12:35] <pjb> Indeed.
[08:12:36] *** Joins: yp (~yp@113.88.112.40)
[08:12:44] <kakuhen> but I have a reference book on Core Audio and it's pretty complicated (for me at least)
[08:12:52] <kakuhen> a lot of basic data structures it uses, I dont know how you'd make the equivalents on Lisp
[08:12:57] <kakuhen> e.g. ring buffers
[08:12:59] *** yp is now known as Guest7593
[08:13:12] <pjb> kakuhen: one solution would be to implement a VST module that would forward stuff on a socket, and have a CL process connected to do the job. of course, it would then be much less efficient. Perhaps going thru shared memory would be feasible.
[08:13:17] <mfiano> an array with a pointer or 2
[08:13:30] <pjb> kakuhen: I implemented a CoreMIDI interface.
[08:13:36] <kakuhen> oo interesting
[08:13:42] <pjb> https://gitlab.com/patchwork/CoreMIDI
[08:15:13] *** Quits: Guest5592 (~yp@113.116.20.52) (Ping timeout: 258 seconds)
[08:23:48] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: sleep)
[08:32:51] *** Joins: dsk (~dsk@user/dsk)
[08:33:56] *** Quits: wilfred (uid159@id-159.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[08:34:44] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:41:38] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:44:46] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[08:48:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 265 seconds)
[08:50:42] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:54:09] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:00:39] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[09:04:36] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[09:23:54] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 240 seconds)
[09:58:18] *** Joins: livoreno (~livoreno@user/notzmv)
[10:03:32] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[10:12:31] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[10:21:15] *** Joins: ibinderwolf (~irc@81.161.232.13)
[10:29:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[10:35:43] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Disconnected: Replaced by new connection)
[10:41:55] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[10:41:57] *** Quits: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[10:42:05] *** Quits: ibinderwolf (~irc@81.161.232.13) (Read error: Connection reset by peer)
[10:47:33] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[10:57:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:00:53] *** Joins: leeb_ (~leeb@KD111239153087.au-net.ne.jp)
[11:03:46] *** Quits: leeb (~leeb@KD111239152196.au-net.ne.jp) (Ping timeout: 250 seconds)
[11:05:10] *** Joins: shka (~herr@109.231.62.239)
[11:28:52] *** Joins: pve (~pve@87-93-220-246.bb.dnainternet.fi)
[11:39:02] *** Joins: selwyn (~selwyn@user/selwyn)
[11:53:31] *** Joins: unyu (~pyon@user/pyon)
[11:53:52] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[11:59:30] *** Joins: kagevf (~jfh@ip68-224-125-162.lv.lv.cox.net)
[12:09:43] *** prxq_ is now known as prxq
[12:11:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:36:28] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[12:41:35] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[12:42:00] *** Joins: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt)
[13:02:46] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[13:10:36] *** Joins: trocado (~trocado@bl18-243-251.dsl.telepac.pt)
[13:17:15] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[13:46:19] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:fdad:b9cb:7f55:135b)
[13:47:37] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Remote host closed the connection)
[13:48:53] *** Quits: Quasus (~Quasus@a89-152-209-125.cpe.netcabo.pt) (Ping timeout: 244 seconds)
[14:03:35] *** Joins: selwyn (~selwyn@user/selwyn)
[14:07:01] *** Joins: phadthai (mmondor@user/phadthai)
[14:18:21] *** Joins: Guest63 (~Guest63@5.30.23.247)
[14:19:59] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[14:21:22] <Guest63> Question - I'm getting "no dispatch function defined for #\I"
[14:21:47] <Guest63> I know the solution is (named-readtables:in-readtable cmu-infix:syntax)
[14:22:01] <Guest63> But for some reason it sometimes works / sometimes doesn't
[14:22:06] <Guest63> Any ideas?
[14:22:38] <Guest63> Appears I have to run (named-readtables:in-readtable cmu-infix:syntax) in REPL and cannot just run it as part of a file
[14:34:57] <phoe> sometimes, what do you mean?
[14:35:05] <phoe> oh, yes
[14:35:13] <phoe> if you want the readtable in the REPL, you have to switch to it in the REPL
[14:35:39] <phoe> a file-only IN-READTABLE only affects the file compiler, same as a file-only IN-PACKAGE
[14:37:24] <Guest63> Thanks!
[14:38:42] <Guest63> Does it cascade down in a file? E.g. if I have a file with the above, and then have a "(load ...)", will the file loaded have it?
[14:38:47] <Guest63> I assume not, but checking
[14:39:00] <phoe> a proper solution is to use ASDF instead
[14:39:24] <Guest63> Yeah, I will do that later. Only so much complexity I can handle at this stage :)
[14:46:13] *** jcowan_ is now known as jcowan
[14:49:22] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:58:42] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[14:59:55] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[15:02:08] *** Quits: frgo (~frgo@p200300deef27d70045b88a0b37e405a7.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:02:09] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[15:02:09] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[15:02:09] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[15:02:09] *** Joins: akanouras (~akanouras@user/akanouras)
[15:02:09] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[15:02:21] *** Joins: luis` (~luismboma@2001:470:69fc:105::cc7)
[15:02:40] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[15:02:42] *** Joins: frgo (~frgo@dynamic-046-114-151-240.46.114.pool.telefonica.de)
[15:07:39] *** Joins: lottaquestions (~nick@2607:fa49:5040:5c00:1462:27c1:87fd:2d04)
[15:16:50] *** Joins: tfb (~tfb@88.98.95.237)
[15:19:34] *** Quits: trocado (~trocado@bl18-243-251.dsl.telepac.pt) (Ping timeout: 258 seconds)
[15:20:05] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:20:43] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 268 seconds)
[15:23:17] *** Joins: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de)
[15:36:40] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[15:37:48] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:08:48] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 272 seconds)
[16:09:51] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:15:29] <jmercouris> I'm having a brain freeze
[16:15:37] <jmercouris> I have a list of arguments and I want to pass these to a function call
[16:15:39] * phoe turns the heating on?
[16:15:45] <jmercouris> (funcall #'+ (list 1 2))
[16:15:48] <jmercouris> that's obviously not right
[16:15:49] <phoe> jmercouris: apply
[16:15:51] <jmercouris> THERE WE GO
[16:15:52] <jmercouris> thank you
[16:16:05] <phoe> no problem
[16:16:38] <Guest63> you can also do (funcall #'+ 1 2)
[16:16:50] <jmercouris> that doesn't help Guest63
[16:16:53] <jmercouris> think about it
[16:17:14] <phoe> Guest63: in this case, yes, but this is only because you know the number of arguments
[16:17:30] <Guest63> ah yes, sorry I understand now
[16:17:53] * edgar-rft argues with an unknown number of arguments
[16:19:39] <Guest63> (defun debate (starting-arg &optional remaining-arg) (apply #'try-arg (cons starting-arg remaining-arg)))
[16:20:31] <Guest63> It wouldn't be a bug to have a never ending loop, so that debate never ends ;)
[16:44:02] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Ping timeout: 244 seconds)
[16:44:02] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Remote host closed the connection)
[16:44:37] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[16:49:40] <flip214> Guest63: TRY-ARG just needs to call DEBATE again....
[16:53:26] <jcowan> Unfortunately, such a call would not be tail recursive, so the debate goes on until one of the participants blows their stack.
[16:56:17] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[16:59:13] *** Quits: Guest63 (~Guest63@5.30.23.247) (Ping timeout: 256 seconds)
[17:07:49] <tfb> Real programmers do (apply #'funcall #'funcall #'+ '(1 2 3))
[17:08:08] <phoe> tfb: wait, that's illegal
[17:08:16] <tfb> no it's not...
[17:08:19] <phoe> I mean
[17:08:22] <phoe> okay, it works
[17:08:55] <tfb> insane but legal
[17:08:58] <phoe> yes
[17:09:01] <phoe> this is better wording
[17:10:00] <tfb> pretty sure somewhere out there there is code that does (apply #'funcall ...) in real use, sadly (perhaps not with iterated funcalls)
[17:22:38] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Remote host closed the connection)
[17:22:59] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[17:26:26] *** Quits: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se) (Read error: Connection reset by peer)
[17:26:32] *** Joins: duuqnd_ (~duuqnd@89-253-114-156.customers.ownit.se)
[17:28:51] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[17:29:35] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[17:33:19] *** Joins: Bike (~Glossina@71.69.170.70)
[17:33:19] *** ChanServ sets mode: +o Bike
[17:36:56] <shka> tfb: what is wrong with apply #'funcall anyway? :P
[17:37:11] <phoe> shka: redundancy I guess
[17:37:28] *** Quits: seok (~Seok@49.2.163.56) (Ping timeout: 272 seconds)
[17:37:48] <shka> fair enough i guess
[17:42:03] <jcowan> It's sort of like (cons 'a (cons 'b (cons 'c (cons 'd '()))))
[17:42:09] <jcowan> legal but insane
[17:49:15] <beach> (APPLY #'FUNCALL is used in the SICL HIR evaluator.
[17:49:51] <phoe> beach: isn't that redundant? is there a case of APPLY FUNCALL that cannot be reduced to just APPLY?
[17:50:08] <Bike> probably a host apply and a sicl funcall, or something
[17:50:16] <beach> Sure, but we have a list where the first element is a function.
[17:50:29] <phoe> oh! then it makes sense
[17:50:43] <phoe> (apply #'funcall list)
[17:50:43] <beach> So I guess it could be replaced by (apply (first list) (rest list))
[17:50:52] <phoe> yes
[17:51:38] <beach> But then, the list is computed by LOOP, so an intermediate variable would have to be introduced to hold the result.
[17:52:29] <beach> So (apply #'funcall (loop ...)) would become (let ((list (loop ...))) (apply (first list) (rest list)))
[18:01:46] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[18:09:03] *** Quits: prxq (~quassel@x4db90b50.dyn.telefonica.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:10:18] *** Quits: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[18:12:32] *** Joins: silasfox (~sbv@2001-4dd6-57a2-0-a504-35b8-bb69-198e.ipv6dyn.netcologne.de)
[18:15:51] *** Joins: selwyn (~selwyn@user/selwyn)
[18:22:02] *** Joins: treflip (~user@95.79.32.99)
[18:24:04] *** Quits: pve (~pve@87-93-220-246.bb.dnainternet.fi) (Quit: leaving)
[18:24:50] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[18:33:24] *** Quits: frgo (~frgo@dynamic-046-114-151-240.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[18:33:30] *** Joins: frgo_ (~frgo@p200300deef27d700057bab8d782c7038.dip0.t-ipconnect.de)
[18:33:54] *** Joins: sp41 (~spal@70.241.120.35)
[18:34:41] *** Joins: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810)
[18:38:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:40:04] *** Quits: silasfox (~sbv@2001-4dd6-57a2-0-a504-35b8-bb69-198e.ipv6dyn.netcologne.de) (Ping timeout: 250 seconds)
[18:50:00] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[18:52:12] *** Joins: silasfox (~sbv@2001-4dd6-57a2-0-a504-35b8-bb69-198e.ipv6dyn.netcologne.de)
[18:54:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[18:57:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:57:29] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Remote host closed the connection)
[18:57:44] *** Joins: selwyn (~selwyn@user/selwyn)
[19:03:02] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[19:14:22] *** Quits: silasfox (~sbv@2001-4dd6-57a2-0-a504-35b8-bb69-198e.ipv6dyn.netcologne.de) (Ping timeout: 272 seconds)
[19:15:19] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[19:15:45] *** Joins: bpanthi977 (~Thunderbi@103.152.144.53)
[19:18:34] *** Joins: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de)
[19:32:52] *** Joins: makomo (~makomo@user/makomo)
[19:32:58] *** Quits: makomo (~makomo@user/makomo) (Client Quit)
[19:35:18] *** Joins: makomo (~makomo@user/makomo)
[19:37:56] <beach> Here is an interesting project suggestion for someone who is not too busy: Write a "magit"-like pane for McCLIM.  And presumably call it "McGIT".
[19:38:40] <beach> Such a pane will be a nice ingredient to have in an IDE.  But it could also be used independently.
[19:38:58] <beach> I would think it could be attractive to non-Emacs users, for instance.
[19:39:23] <shka> hmm
[19:39:30] <shka> sounds like a good idea
[19:39:42] <beach> Thanks.
[19:39:43] <shka> you could visualize history easier then with just plaintext
[19:39:55] <shka> and make stuff clickable
[19:40:04] <beach> That too.  Sort of like gitk does?
[19:40:08] <char> That would be valuble. magit is a killer feature
[19:40:15] <beach> Yes.
[19:40:33] <beach> Clickable, and also with context menus.
[19:40:46] <beach> Perfect for CLIM presentations.
[19:41:02] <splittist> Don't forget the fun of making people look for the Super key (:
[19:42:24] <shka> how one would hook in editor into that?
[19:42:44] <beach> This project could be done in fairly small increments, and it could be useful very soon.  I mean, many people use only very basic GIT features anyway, so it would be useful to such people almost immediately.
[19:43:34] <beach> Editor integration might have to wait until the IDE is more developed.
[19:45:02] <beach> The project would include an (optional) application frame so that the entire thing could be run as an application.
[19:45:53] *** Joins: prxq (~quassel@x4db90b50.dyn.telefonica.de)
[19:46:39] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:47:58] *** Joins: derelict (~derelict@user/derelict)
[19:48:15] *** Joins: Guest63 (~Guest63@5.30.23.247)
[19:49:51] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[19:51:38] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:52:30] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[19:53:33] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:54:15] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[19:54:45] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:55:17] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[19:55:31] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:56:37] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[19:56:53] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:58:22] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[19:59:02] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[19:59:26] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[20:02:04] *** Joins: varjag (~user@ti0040a400-5479.bb.online.no)
[20:07:15] *** Joins: trocado (~trocado@bl18-243-251.dsl.telepac.pt)
[20:12:08] *** Quits: duuqnd_ (~duuqnd@89-253-114-156.customers.ownit.se) (Remote host closed the connection)
[20:12:27] *** Joins: duuqnd_ (~duuqnd@89-253-114-156.customers.ownit.se)
[20:16:42] *** Quits: wheelsucker (~user@2600:8801:8c11:4c00::707) (Ping timeout: 250 seconds)
[20:18:08] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 244 seconds)
[20:20:21] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[20:21:18] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[20:21:47] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[20:23:56] *** Quits: amb007 (~a_bakic@23.184.126.78.rev.sfr.net) (Read error: Connection reset by peer)
[20:25:20] *** Joins: amb007 (~a_bakic@23.184.126.78.rev.sfr.net)
[20:39:45] *** Joins: stanislav (~stanislav@a89-152-209-125.cpe.netcabo.pt)
[20:39:45] *** Quits: stanislav (~stanislav@a89-152-209-125.cpe.netcabo.pt) (Client Quit)
[20:40:06] *** Guest63 is now known as Ashok
[20:41:08] *** Quits: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de) (Ping timeout: 272 seconds)
[20:41:43] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[20:42:47] *** Ashok is now known as gensym
[20:43:45] *** Parts: gensym (~Guest63@5.30.23.247) ()
[20:49:06] <beach> No takers on my suggested project?
[20:49:26] <splittist> On a summer Friday afternoon?
[20:49:47] *** Joins: wheelsucker (~user@2600:8801:8c11:4c00::707)
[20:49:48] <beach> Got to figure out what to do over the weekend, right?
[20:51:08] <splittist> clipping-regions and pixmaps
[20:51:25] *** Joins: lad (~lad@user/lad)
[20:51:34] <beach> Sure, you already have stuff to work on.
[20:51:47] <beach> But what about everyone else?
[20:52:00] <splittist> Lazy so-and-so's.
[20:52:41] <beach> Or they are trying desperately to debug their FFI-based project.
[20:53:35] *** Joins: lisp123 (~Guest63@5.30.23.247)
[20:53:51] * shka wanted to implement the some of the missing functions for his ordered containers
[20:54:24] <splittist> beach: like https://github.com/Shinmera/legit ?
[20:55:58] <beach> That looks like an excellent base for what I suggest.
[21:01:54] *** Joins: silasfox (~sbv@2001-4dd6-5b1d-0-67ea-637e-1274-9008.ipv6dyn.netcologne.de)
[21:05:50] *** Quits: trocado (~trocado@bl18-243-251.dsl.telepac.pt) (Ping timeout: 272 seconds)
[21:22:00] *** Quits: char (~Srain@2601:2c3:867f:e810:d001:caf1:1547:6810) (Ping timeout: 244 seconds)
[21:26:00] *** Quits: duuqnd_ (~duuqnd@89-253-114-156.customers.ownit.se) (Quit: Leaving)
[21:33:56] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[21:43:30] *** Joins: rogersm (~rogersm@107.pool85-56-92.dynamic.orange.es)
[21:45:44] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:49:37] *** Quits: rogersm (~rogersm@107.pool85-56-92.dynamic.orange.es) (Quit: Leaving...)
[21:54:52] *** Joins: Steeve (~steve@user/steeve)
[21:55:01] *** Joins: aeth_ (~Michael@user/aeth)
[21:55:11] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[21:55:17] *** aeth_ is now known as aeth
[21:58:28] *** Joins: char (~Srain@c-73-232-118-40.hsd1.tx.comcast.net)
[22:02:02] <jmercouris> I see that Ceramic uses a webserver to listen for JS commands
[22:02:06] <jmercouris> https://github.com/ceramic/ceramic/blob/master/src/driver.lisp
[22:02:20] <jmercouris> anyone know of another way to interface with JS? any FFI layer out there?
[22:02:32] <jmercouris> and yes, I know, JS sucks, it is the worst, yes
[22:02:40] <jmercouris> I just want a way to interface to it from CL
[22:03:42] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[22:05:36] <pjb> jmercouris: you could probably load swank, and start a swank server from the main or initialization routine.
[22:05:43] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[22:06:03] <jmercouris> pjb: are you suggesting I reimplement swank in JS?
[22:06:05] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[22:06:29] <pjb> No.
[22:07:16] <Bike> i think cl jupyter has some js stuff, let me check
[22:07:17] <jmercouris> Are you suggesting I start a lisp image from inside the JS main thread and listen for output from lisp?
[22:07:28] <jmercouris> Like a pipe or something?
[22:07:29] <pjb> jmercouris: just add swank as dependency in the asd, and (swank:start-server :port <some-port>) in the run, before starting hunchentoot.
[22:07:47] <jmercouris> I think you misunderstand
[22:07:59] <jmercouris> I want a nodejs program callable from Lisp code
[22:08:20] <pjb> Oh.  Then implementing swank on nodejs could be a nice way to do it.
[22:08:38] <pjb> Otherwise, you can easily send requests containing lisp sexps, and evaluate them.
[22:09:28] <pjb> It would then be trivial to write a RSRPL  where you read as exp, send a request to your web app with it, read the response and print it. loop.
[22:09:50] <lisp123> defgeneric & defmethod - are they independent of package namespaces (i.e. if I do a defgeneric in package xyz and a defmethod on same name in package abc - it will work?)
[22:10:00] <pjb> lisp123: yes, entirely.
[22:10:12] <lisp123> pjb: Thanks! :)
[22:11:03] <pjb> (progn (defgeneric #1=#:foo (x) (:method ((x t)) 'generic) (:method ((x string)) (format nil "foo-~A" x)))  (mapcar '#1#  '(42 "yep"))) #| --> (generic "foo-yep") |#
[22:11:11] <pjb> No package involved.
[22:12:05] <lisp123> thanks!
[22:16:27] <Lycurgus> cl-state-machine and finite-state-machine are the two pkgs, I've found for cl fsm, any recommendations for others
[22:16:34] <Lycurgus> ?
[22:16:46] <Bike> don't think jupyter is doing anything like calling nodejs
[22:16:55] <lisp123> jmercouris: you can use web sockets and send / receive messages (use the package :hunchensocket) - not sure if that it is too much overhead
[22:24:12] *** Joins: Guest74 (~Guest74@webdefence-pool-01.cluster-nyca.forcepoint.net)
[22:26:36] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[22:29:17] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Client Quit)
[22:29:43] *** Joins: lad (~lad@user/lad)
[22:30:34] *** Joins: pve (~pve@87-93-220-246.bb.dnainternet.fi)
[22:37:14] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[22:39:49] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[22:40:01] <jmercouris> lisp123: that's what ceramic does
[22:40:23] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[22:40:27] <jmercouris> the overhead is fine
[22:40:35] <jmercouris> Bike: that's too bad
[22:40:49] <jmercouris> so I guess I'll just have to run a webserver in JS, and then send JS from Lisp land
[22:41:05] <jmercouris> to be clear I'm trying to go from Lisp code -> calls javascript function
[22:41:17] <jmercouris> not the other way around!
[22:41:40] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[22:43:32] <Bike> well you need some kind of javascript runtime, right
[22:43:38] <Bike> node.js or a browser or something
[22:43:49] <Bike> and that's going to be a separate program
[22:44:11] <Bike> if you want a javascript engine written in lisp i think you're out of luck
[22:47:29] <scymtym> at least if you need "fast", "modern" or both
[22:48:00] <scymtym> otherwise there is https://marijnhaverbeke.nl/cl-javascript/
[22:48:24] *** Joins: derelict (~derelict@user/derelict)
[22:54:52] *** Quits: bpanthi977 (~Thunderbi@103.152.144.53) (Quit: bpanthi977)
[22:54:53] *** Quits: Guest74 (~Guest74@webdefence-pool-01.cluster-nyca.forcepoint.net) (Quit: Client closed)
[22:56:12] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[22:56:36] *** Joins: lad (~lad@user/lad)
[22:58:12] <yitzi> Bike: Just to confirm. common-lisp-jupyter doesn't do anything with Javascript. There are some display commands to send Javascript to the frontend, but it is completely opaque from CLJ's perpective. All JS is handled by whatever frontend you have, i.e. notebook or lab.
[22:58:26] <Bike> iiiii see
[23:00:02] <yitzi> I have a kind of literate programming tool like cweb that can call whatever Jupyter kernel you want, but I haven't used it in a while. No JS, no user input. Just using the kernels to execute code. Kind of an example from the other end of the spectrum.
[23:01:41] *** Joins: tfb (~tfb@88.98.95.237)
[23:01:43] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[23:03:33] *** Joins: srhm (~ascii@user/srhm)
[23:03:56] *** Quits: Noisytoot (noisytoot@cpc108961-cmbg20-2-0-cust10.5-4.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[23:04:12] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[23:18:21] *** Joins: derelict (~derelict@user/derelict)
[23:19:22] *** Joins: Guest74 (~Guest74@webdefence-pool-01.cluster-nyca.forcepoint.net)
[23:20:48] *** Quits: Guest74 (~Guest74@webdefence-pool-01.cluster-nyca.forcepoint.net) (Client Quit)
[23:29:12] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[23:32:04] *** Joins: srhm (~ascii@user/srhm)
[23:33:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[23:35:18] *** Quits: pve (~pve@87-93-220-246.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[23:36:49] *** Joins: pve (~pve@87-93-220-246.bb.dnainternet.fi)
[23:49:52] *** Quits: lisp123 (~Guest63@5.30.23.247) (Ping timeout: 272 seconds)
[23:56:21] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:ae9:a7bd:1f6f:477e)
