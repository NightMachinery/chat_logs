[00:06:46] *** Joins: whatsyourask (~whatsyour@user/whatsyourask)
[00:07:43] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Client Quit)
[00:12:59] *** Joins: spoofer_ (~spoofer@64.185.111.205)
[00:14:21] <flatcap> orin34: when you 's' <save> you should be prompted for a mailbox
[00:14:38] *** Quits: spoofer (~spoofer@64.185.111.205) (Ping timeout: 268 seconds)
[00:15:25] <flatcap> you can enter a local path.  if it doesn't exist, its type will depend on $mbox_type config setting
[00:15:46] *** Quits: M4rty (~M4rtyflex@91-166-220-92.subs.proxad.net) (Quit: leaving)
[00:17:19] <flatcap> you can create a default mailbox using a `save-hook`
[00:18:23] *** Joins: rgrinberg (~textual@190.113.102.153)
[00:24:03] <ckardaris> flatcap: I would like some insight into socket programming and polling if you can help. I have been moving forward with the IPC implementation. Everything seems to go relatively well in the code logic department, but I have an issue with polling. The poll() in mutt_monitor_poll is returning immediately, when my socket is in the list of fds to watch. No 300s timeout is happening. fds value is 1
[00:24:05] <ckardaris> upon return , but all of the revents are 0, including that of the socket. So no actual changes. That means that neomutt never "relaxes" in a timeout and my CPU usage goes to 100% after a minute or so. Functionally, my socket seems to work. I have been able to pass commands and change settings in the running instance, but this has been bugging me. Sorry for the sheet. I have to get accustomed to
[00:24:07] <ckardaris> IRC rules
[00:25:08] <flatcap> hi ckardaris :-)
[00:27:20] <flatcap> it's been a while since I've done anything socket-y
[00:27:58] <flatcap> iirc, there's select() which allows you to poll whether any of the sockets have data waiting
[00:29:02] <ckardaris> It's just that in theory it seems clear what should be happening. What I get upon return does not correspond to the man page info
[00:29:45] <ckardaris> Maybe select would be an option, but I would have to see how it would work with STDIN and INotify events
[00:31:06] <flatcap> hmm... possibly
[00:31:37] <flatcap> I'll have a look at the code and have a think tomorrow -- Sunday's my "day of rest"
[00:31:55] <flatcap> you'll have noticed that I'm still in IRC, though :-)
[00:32:17] <ckardaris> Haha, just something on the side :P
[00:32:41] <ckardaris> My day off was having fun with neomutt. There is that 
[00:32:50] <flatcap> glad to hear it :-)
[00:32:55] <ckardaris> Until my machine starting making worrying sounds
[00:33:10] <flatcap> oh dear!
[00:33:17] <ckardaris> And I realised I was a little fucked with this issue
[00:33:59] <ckardaris> In the coming days I should be able to resolve it with a clearer head. But if you think of anything you could hit me up on e-mail or something
[00:34:10] <flatcap> will do
[00:35:07] *** Quits: weirdsmiley (~weirdsmil@47.31.230.183) (Ping timeout: 256 seconds)
[00:35:34] <flatcap> I've just sent you an invitation to join the NeoMutt org...
[00:36:08] <flatcap> you're welcome to create a devel/SOMETHING branch on the neomutt repo
[00:37:06] *** Joins: weirdsmiley (~weirdsmil@43.225.73.49)
[00:38:06] <ckardaris> Great, thank you. I just accepted that. Sure, I will organize my stuff and merge my fork in a branch
[00:39:34] <flatcap> great
[00:41:28] <flatcap> and keep asking questions.  the codebase is huge and there's still a lot of non-intuitive stuff
[00:43:01] <ckardaris> Yes I have already changed my design 2 or 3 times. And still I could not find an elegant way to avoid globals. But there is some plan behind it all and with time it should make some sense.
[00:44:12] <flatcap> ok :-)
[00:44:18] <ckardaris> But also I have already seen some things that I like. Like operation codes translating to functions in a nice way. Neat stuff
[00:45:00] <flatcap> thanks :-)
[00:55:35] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:56:26] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Quit: WeeChat 3.3)
[01:01:41] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[01:01:47] *** Parts: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) ()
[01:03:30] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:05:11] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[01:06:14] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Client Quit)
[01:06:27] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[01:08:33] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Client Quit)
[01:08:47] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[01:28:24] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[01:28:52] *** Joins: ninjin (~ninjin@user/ninjin)
[01:33:02] *** Quits: matthugh (~matthugh@193.32.126.221) (Quit: leaving)
[01:39:07] *** Joins: bsd4me (~bsduser@user/bsd4me)
[02:13:48] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 276 seconds)
[02:14:06] *** Joins: ninjin (~ninjin@user/ninjin)
[02:19:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[02:19:23] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[02:44:19] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[02:55:53] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[03:28:31] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[03:36:46] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 245 seconds)
[03:36:55] *** Joins: laumann (~laumann@user/laumann)
[03:38:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[04:04:58] *** Quits: _hades (~ralphe@cable-84-44-244-10.nc.de) (Ping timeout: 260 seconds)
[04:05:50] *** Joins: _hades (~ralphe@cable-84-44-244-10.nc.de)
[04:09:10] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:36:16] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:36:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:05:56] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Quit: later)
[05:22:36] *** Quits: flatcap (flatcap@neomutt/flatcap) (Quit: WeeChat 3.2)
[05:22:36] *** Quits: neo-bot (~neo-bot@flatcap.org) (Remote host closed the connection)
[05:24:33] *** Joins: flatcap (flatcap@neomutt/flatcap)
[05:25:18] *** Joins: neo-bot (~neo-bot@flatcap.org)
[05:33:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:52] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:35:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:35:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:41:05] *** Joins: darkstardev13 (~darkstard@50.39.114.152)
[05:43:56] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Ping timeout: 268 seconds)
[06:03:59] *** Quits: andi- (~andi-@user/andi-) (Ping timeout: 264 seconds)
[06:09:51] *** Quits: agander_m (sid407952@2a03:5180:f::6:3990) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: nicolasbock (sid352851@canonical/nicolasbock) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: fstab (sid501428@2a03:5180:f:5::7:a6b4) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: telemachus (sid2004@id-2004.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: tom-w_ (sid501607@id-501607.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[06:11:47] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Ping timeout: 264 seconds)
[06:11:51] *** Joins: wolfshappen (~waff@irc.furworks.de)
[06:12:15] *** Joins: telemachus (sid2004@helmsley.irccloud.com)
[06:12:21] *** Joins: fstab (sid501428@uxbridge.irccloud.com)
[06:12:40] *** Joins: hwrd (sid64402@lymington.irccloud.com)
[06:12:43] *** Joins: nicolasbock (sid352851@lymington.irccloud.com)
[06:14:01] *** Joins: agander_m (sid407952@tinside.irccloud.com)
[06:16:14] *** Joins: tom-w_ (sid501607@hampstead.irccloud.com)
[07:18:08] *** Quits: weirdsmiley (~weirdsmil@43.225.73.49) (Quit: leaving)
[07:18:35] *** Joins: weirdsmiley (~weirdsmil@43.225.73.49)
[07:31:59] *** Quits: fstab (sid501428@uxbridge.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: telemachus (sid2004@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:32:11] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 245 seconds)
[07:32:14] *** Quits: tom-w_ (sid501607@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:32:28] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[07:32:42] *** Joins: fstab (sid501428@uxbridge.irccloud.com)
[07:32:46] *** Joins: telemachus (sid2004@helmsley.irccloud.com)
[07:33:01] *** Quits: hwrd (sid64402@lymington.irccloud.com) (Ping timeout: 244 seconds)
[07:33:19] *** Quits: agander_m (sid407952@tinside.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: nicolasbock (sid352851@lymington.irccloud.com) (Ping timeout: 256 seconds)
[07:33:55] *** Joins: hwrd (sid64402@2a03:5180:f:2::fb92)
[07:34:04] *** Joins: tom-w_ (sid501607@id-501607.hampstead.irccloud.com)
[07:34:20] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[07:34:27] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[07:34:30] *** Joins: nicolasbock (sid352851@id-352851.lymington.irccloud.com)
[07:34:41] *** Joins: agander_m (sid407952@id-407952.tinside.irccloud.com)
[07:39:38] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 260 seconds)
[08:20:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:23:13] *** Joins: reset (~reset@user/reset)
[08:48:04] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[08:48:46] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[08:48:46] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[08:48:46] *** Joins: vroom (~vroom@user/vroom)
[09:07:27] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 268 seconds)
[09:08:11] *** Quits: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 264 seconds)
[09:08:24] *** Joins: laumann (~laumann@user/laumann)
[09:18:36] *** Quits: bsd4me (~bsduser@user/bsd4me) (Quit: leaving)
[09:22:06] *** Quits: orin34 (~orin@2a02:908:1214:6260:1a5f:cae0:d34b:1c9f) (Quit: orin34)
[09:25:06] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 245 seconds)
[09:25:52] *** Joins: laumann (~laumann@user/laumann)
[09:34:59] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:34:59] *** Quits: xdbob (~xdbob@user/xdbob) (*.net *.split)
[09:34:59] *** Quits: nyuhu (~nyuhu@eri.moe) (*.net *.split)
[09:34:59] *** Quits: zecege (~zecege@user/zecege) (*.net *.split)
[09:34:59] *** Quits: flokli (~flokli@2a01:4f9:c010:6c2:9479:5dff:fe37:7b16) (*.net *.split)
[09:35:17] *** Joins: nyuhu (~nyuhu@eri.moe)
[09:35:44] *** Joins: flokli (~flokli@2a01:4f9:c010:6c2:9479:5dff:fe37:7b16)
[09:36:17] *** Joins: xdbob (~xdbob@user/xdbob)
[09:36:18] *** Joins: zecege (~zecege@user/zecege)
[09:37:19] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:42:53] *** Quits: sassmann (~sassmann@user/sassmann) (*.net *.split)
[09:42:53] *** Quits: LaSombra (~lasombra@user/lasombra) (*.net *.split)
[09:42:53] *** Quits: dngray[m]1 (~dngraymat@2001:470:69fc:105::793b) (*.net *.split)
[09:42:53] *** Quits: dngray[m] (~dngray@user/dngray) (*.net *.split)
[09:42:53] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:42:54] *** Quits: ScrumpyJack (~ScrumpyJa@beaucoup.fish) (*.net *.split)
[09:42:54] *** Quits: bluejaypop (~7f000001@user/josefig) (*.net *.split)
[09:42:54] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[09:43:05] *** Joins: bluejaypop (~7f000001@72.52.80.246)
[09:43:09] *** Quits: bluejaypop (~7f000001@72.52.80.246) (Changing host)
[09:43:09] *** Joins: bluejaypop (~7f000001@user/josefig)
[09:43:10] *** Joins: ScrumpyJack (~ScrumpyJa@beaucoup.fish)
[09:43:48] *** Joins: sassmann (~sassmann@user/sassmann)
[09:43:48] *** Joins: chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:44:19] *** Joins: LaSombra (~lasombra@user/lasombra)
[09:45:12] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:50:48] *** Joins: dngray[m] (~dngray@user/dngray)
[09:51:01] *** Joins: vysn (~vysn@user/vysn)
[09:52:26] *** Joins: dngray[m]1 (~dngraymat@2001:470:69fc:105::793b)
[09:54:19] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[10:00:43] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[10:01:42] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 268 seconds)
[10:03:58] *** Joins: laumann (~laumann@user/laumann)
[10:15:17] *** Quits: weirdsmiley (~weirdsmil@43.225.73.49) (Ping timeout: 268 seconds)
[10:24:48] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:26:21] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 245 seconds)
[10:28:21] *** Joins: laumann (~laumann@user/laumann)
[10:30:58] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[10:31:25] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[10:35:32] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 240 seconds)
[10:37:01] *** Quits: malaclyps (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[10:38:21] *** Joins: laumann (~laumann@user/laumann)
[10:54:39] *** Joins: mala (~mala@user/malaclyps)
[10:57:20] *** Joins: andi- (~andi-@user/andi-)
[11:00:03] <gahr> morning
[11:07:04] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Quit: WeeChat 3.3)
[11:07:21] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[11:07:24] <kushal> Good morning 
[11:08:26] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Client Quit)
[11:08:48] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[11:16:19] <gahr> hi kushal 
[11:24:01] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 250 seconds)
[11:25:23] *** Joins: laumann (~laumann@user/laumann)
[11:29:09] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[11:31:46] *** Quits: laumann (~laumann@user/laumann) (Ping timeout: 245 seconds)
[11:33:13] *** Joins: laumann (~laumann@user/laumann)
[12:38:30] *** Joins: saki_ (~saki@gateway/tor-sasl/saki)
[12:38:30] *** Quits: royger (~royger@xenbits.xenproject.org) (Read error: Connection reset by peer)
[12:39:45] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Ping timeout: 276 seconds)
[12:40:23] *** Joins: royger (~royger@xenbits.xenproject.org)
[13:01:10] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[13:10:27] *** Joins: plastico (~plastico@neomutt/plastico)
[13:25:13] *** Quits: nj0rd (~nj0rd@mx01.private-mail-for.me) (Quit: WeeChat 3.3)
[13:26:26] *** Joins: nj0rd (~nj0rd@mx01.private-mail-for.me)
[13:42:03] <edward> am I doing something wrong? neomutt if giving me this error: "Cannot use 'last-' prefix with 'threads' for sort" in my config I have "set sort=last-threads"
[13:44:30] <edward> I tried adding "set use_threads=yes" and now I get "../mutt_thread.c:790: mutt_sort_subthreads: Assertion `cs_subset_enum(NeoMutt->sub, "use_threads") == UT_UNSET' failed."
[13:46:38] <gahr> set use_threads=yes, set sort=last-date ?
[13:47:16] <gahr> I don't think "last-threads" makes sense
[13:47:55] <edward> I got last-threads from the documentation: https://neomutt.org/guide/reference.html#3-398-%C2%A0sort
[13:48:17] <edward> oh, i misread the documentation. thanks
[13:48:59] <edward> gahr: you solved my problem. thanks
[13:51:31] *** Joins: nyah (~nyah@94.6.71.219)
[13:52:12] <gahr> edward: glad to hear that :)
[13:52:34] <gahr> let me look at the assertion failure, that shouldn't happen with user config
[13:53:32] <gahr> how did you trigger that>
[13:54:52] <edward> set use_threads=yes and set sort=threads
[13:58:52] <gahr> interactively of from a config file?
[13:59:20] <edward> config file
[14:01:12] <gahr> ok I can see that, thanks
[14:02:14] <edward> neomutt -v says I'm running "NeoMutt 20210205", which seems old. I thought I was on a version of master from a few weeks ago
[14:05:33] <gahr> yeah but the bug is still here :)
[14:08:34] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:08:52] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:14:38] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[14:19:03] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:19:21] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:42:41] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:42:41] *** Quits: vroom (~vroom@user/vroom) (Read error: Connection reset by peer)
[14:42:58] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:45:40] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[14:45:40] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[14:45:40] *** Joins: vroom (~vroom@user/vroom)
[14:48:19] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:48:37] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:59:04] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:59:23] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:03:08] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:03:27] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:03:55] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:04:12] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:04:59] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:05:19] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:05:51] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:06:10] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:07:26] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:07:45] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:08:00] *** Joins: vysn (~vysn@user/vysn)
[15:08:57] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:09:14] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:35:32] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[16:04:02] <flatcap> morning all
[16:34:23] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[16:34:45] *** Joins: ninjin (~ninjin@user/ninjin)
[16:59:08] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[16:59:23] <gahr> hi flatcap 
[16:59:24] *** Joins: ninjin (~ninjin@user/ninjin)
[17:02:07] <flatcap> hi gahr 
[17:06:46] <gahr> I just opened #3126
[17:06:46] <neo-bot> Issue by @gahr "Assertion triggered on setting sort/threads": https://github.com/neomutt/neomutt/issues/3126
[17:06:50] <gahr> not sure if you saw the backlog
[17:09:10] <flatcap> ah, ok.  I only glanced at it
[17:09:39] <flatcap> know what's going wrong?
[17:11:55] <flatcap> ah, I see
[17:13:18] <gahr> yup I do
[17:13:28] <gahr> but I don't know how you'd fix it
[17:13:56] <gahr> I guess we have notifications sent by setting configs
[17:14:05] <gahr> but I'm not sure if we have anybody to receive them
[17:14:32] <gahr> perhaps main_config_observer could be the place
[17:14:58] * eblake catching up, since I see my code mentioned...
[17:15:12] <gahr> it's kind of in the wrong place and does something very specific to abort_key
[17:15:24] <gahr> eblake: yup, hello :)
[17:15:26] <eblake> why is mutt_sort_subthreads being called before there is an index to display?
[17:15:46] <gahr> it's not called before
[17:15:55] <eblake> or is the problem that we messed up the config prior to there being an index, and this assertion is now detecting that
[17:15:58] <gahr> but the setting is set before the index is brought up and registers to the callback
[17:16:56] <gahr> you have config_use_threads and config_sort to adjust those settings, but index_config_observer is added to late
[17:17:04] <eblake> okay, so without someone listening during config parsing, the callbacks to make the config consistent aren't reached, leading to inconsistent state
[17:17:48] <gahr> yep
[17:18:43] *** Joins: stoic_goat (~stoic_goa@2601:40b:0:d730::c5f8)
[17:19:48] <flatcap> so the checks need moving to a config validator
[17:20:20] <flatcap> nice find, gahr :-)
[17:20:37] <gahr> oh, edward did all the work :)
[17:20:50] <gahr> 10:14 < edward> I tried adding "set use_threads=yes" and now I get "../mutt_thread.c:790: mutt_sort_subthreads: Assertion `cs_subset_enum(NeoMutt->sub, "use_threads") == UT_UNSET' failed."
[17:21:06] <gahr> there was not much more to figure out :)
[17:21:19] <gahr> and why didn't I think of config validators ?
[17:22:11] <flatcap> thanks, edward!
[17:22:18] <flatcap> dunno :-)
[17:29:13] *** Quits: stoic_goat (~stoic_goa@2601:40b:0:d730::c5f8) (Quit: WeeChat 3.3)
[17:54:33] *** Joins: strajder (~strajder@user/strajder)
[18:02:55] <gahr> eblake: do you think you're going to do that?
[18:03:06] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:11:48] <eblake> when I first coded things, I seem to recall trying a config validator first, but it ran into issues of not being able to access the existing state of other variables
[18:12:16] <eblake> but I'll try and play with it later today, since the reproducer is pretty easy
[18:13:31] <eblake> so on that note, I'll assign #3126 to me to remind me to prioritize it...
[18:13:31] <neo-bot> Issue by @gahr "Assertion triggered on setting sort/threads": https://github.com/neomutt/neomutt/issues/3126
[18:15:48] <gahr> thanks
[18:49:53] *** Joins: pescepalla (~alessandr@host-79-1-230-90.business.telecomitalia.it)
[18:50:47] <pescepalla> hello
[18:51:02] <pescepalla> is there a way to tag a message & move it to a folder with one key?
[18:51:04] <pescepalla> i have
[18:51:08] <pescepalla> "<modify-labels>-inbox<enter><sync-mailbox>s=archives"
[18:51:48] <pescepalla> but this labels the first message then attempts to archive the next message 
[18:52:28] <pescepalla> i got inspiration from here: https://mailman.neomutt.org/pipermail/neomutt-users-neomutt.org/2019-June/000558.html
[18:52:38] <pescepalla> but it doesn't worl
[18:52:40] <pescepalla> work
[18:53:20] <pescepalla> also this one:
[18:53:39] <pescepalla> macro inbox a "<modify-labels>-inbox<enter>s=archives" "archive message"
[18:53:45] <gahr> there's a setting to avoid changing the selection after tagging/changing a message
[18:53:51] <pescepalla> thanks
[18:53:54] <gahr> I don't remember the name, let me look it up
[18:54:01] <gahr> resolve perhaps?
[18:54:11] <gahr> yeah
[18:54:15] <gahr> set noresolve
[18:54:22] <pescepalla> so i should "set noresolve" ? 
[18:54:26] <gahr> yes
[18:56:40] <pescepalla> ah, that did the trick
[18:56:45] <pescepalla> thanks again!
[19:11:30] *** Joins: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca)
[19:15:41] *** Quits: persephone (~persephon@modemcable052.109-176-173.mc.videotron.ca) (Ping timeout: 244 seconds)
[19:49:28] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:50:15] <adray> hello everyone
[19:53:28] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[19:54:32] <flatcap> hi adray 
[19:54:49] *** Joins: strajder (~strajder@user/strajder)
[19:54:57] <adray> how's it going, flatcap?
[19:57:34] <gahr> pescepalla: yw
[19:59:07] <flatcap> meh :-)  feeling a bit lazy today.  how are you?
[20:02:56] <adray> doing well. trying to understand higher-kinded types before starting programming
[20:05:50] <gahr> meaning higher-order types or higher-order kinds? :)
[20:09:22] <ckardaris> good evening people
[20:09:35] <flatcap> hi ckardaris 
[20:10:21] <ckardaris> I have good news. I think I found what cause my issue and it seems to be an original code bug
[20:10:28] <ckardaris> *causes
[20:12:09] <flatcap> oh! that mixed news :-)
[20:12:14] <flatcap> what was wrong?
[20:15:50] <adray> gahr: do you have a link for the differences? google returns the same results for HKT, HOT, and HOK, which is probably part of my problem in understanding 
[20:18:28] <ckardaris> So, the original call in monitor_poll() is poll(PollFds, PollFdsLen, MuttGetchTimeout). The thing is that PollFdsLen is modified in poll_fd_add to track the size of the pollfd struct. PollFdsCount tracks the count of fds to poll. When a new fd is requested to br tracked, but there is not enough allocated space, PollFdsLen is incremented by 2, while PollFdsCount correctly increases by 1. Upon
[20:18:30] <ckardaris> remove in poll_fd_remove, correctly again only the PollFdsCount is decremented by 1, while the struct remains unchanged. This means that the struct can only expand, but also the parameter in poll() is wrong. I fixed the line to poll(PollFds, PollFdsCount, MuttGetchTimeout) and it seems to be working as expected. And it seems logical as well. 
[20:19:48] <flatcap> oh, strange
[20:20:59] <ckardaris> Also I don't know why we would expand the struct by 2 places. Maybe to avoid reallocating each time?
[20:21:40] <ckardaris> Or it accounts for only the original scenario which is to track only 2 fds, STDIN and InotifyFd
[20:21:48] <ckardaris> A mix of the two
[20:21:49] <flatcap> possibly, if you're going to realloc the struct LOTS of times
[20:22:08] <gahr> adray: kinds are type constructors, types are.. well, regular types
[20:23:03] <gahr> so probably a parametrized kind is a higher order kind?
[20:23:12] <gahr> like, String vs. Integer Map ?
[20:23:47] <ckardaris> flatcap: the thing is that the fd_add function is called only 3 times, 2 originally plus 1 in my code
[20:24:12] <ckardaris> so the original implementation just saves the second deallocation, by incrementing by 2
[20:24:43] <ckardaris> it's a trick since you know that you will the extra 1 spot at least once
[20:24:56] <flatcap> I haven't really looked at the monitor code; I assumed there was one fd per mailbox?
[20:25:22] <ckardaris> but it created problems in my case. poll() was probably checking some other place in the fs as well and returning
[20:25:34] <gahr> adray: I find this terminology on a blog post about scala, so it might be a totally different thing than what I'm talking about. I have no idea of the scala type system
[20:25:36] <adray> gahr: so List<T> would be a higher-order type? and something like List<T<Z>> would be a higher-order kind?
[20:27:19] <ckardaris> flatcap: It is possible these numbers are specific for my setup
[20:27:23] <gahr> no, they're both kinds, if you ask me, as they are type constructors
[20:27:42] <gahr> List<Int> is a type, List is a kind
[20:28:01] <gahr> I don't know why anybody cares about T being a type construtor to, in List<T>
[20:28:07] <ckardaris> Because when I configured neomutt the first time I didn't utilize all of its power. I am currently using mbsync/isync for syncing 
[20:28:13] <gahr> I mean, List is still a type constructor (i.e., a Kind), no matter what you substitute for T
[20:28:21] <gahr> be it Int, List<Char>, whatever
[20:28:51] <gahr> List is still * -> *
[20:29:13] <ckardaris> On the other hand, poll_fd_add is only called 2 times in monitor_init
[20:29:14] <flatcap> ckardaris: there are quite a few power users who do the same.  having your mail locally means you can use Notmch for searching / virtual folders
[20:30:42] <spoofer_> adray: It's been a long time, but if I'm recalling, if you have a data structure whose values are types, then that is a kind.  so a list of [1,2,3] is list of int, but [ int, int, int] is a kind that is a list of type constructors.  I could totally be wrong though.
[20:30:44] <ckardaris> In any case, the parameter passed to poll() is wrong
[20:31:01] <ckardaris> Yes, having mail locally is really nice
[20:32:16] <flatcap> suggestions for improving/fixing the monitor code are welcomed :-)
[20:33:42] <flatcap> the code seems a bit odd.  a bit bolted on the side.   I had trouble trying to remove the global Context (the current mailbox)
[20:34:42] <ckardaris> What do you mean?
[20:36:03] <flatcap> er...
[20:36:22] * flatcap struggles to explain...
[20:37:36] <flatcap> rather than some code, doing montior_add(mailbox), there are functions that tried to use the global Context 
[20:38:21] <flatcap> we've slowly been eliminating the global Context, in favour of passing a Mailbox parameter to functions
[20:38:54] <ckardaris> It is the logical step to clean up things a bit
[20:38:54] <flatcap> the monitor code is still a bit confusing (to me, at least)
[20:41:37] <ckardaris> who would have more knowledge on the monitor code?
[20:42:18] <ckardaris> git blame spits some names
[20:42:45] <flatcap> probably only the original (upstream) author, Gero
[20:43:05] <ckardaris> ah ok that's what upstream means
[20:43:20] <flatcap> yeah :-)
[20:43:37] <flatcap> upstream means they've only contributed to Mutt
[20:43:53] <flatcap> (and they may be hostile if you mention the N word ;-)
[20:44:13] <ckardaris> Yeah I can see how that would be the case
[20:44:23] <ckardaris> like vim and neovim or something
[20:44:37] <flatcap> exactly
[20:44:40] <ckardaris> or Arch and Manjaro
[20:44:43] <ckardaris> hehe
[20:45:37] <ckardaris> Is this the upstream development repo https://github.com/muttmua/mutt?
[20:46:06] <flatcap> a mirror yes.  they use gitlab
[20:46:44] <flatcap> there's an upstream-mutt repo on the neomutt org too (their github presence is relatively recent)
[20:47:13] <ckardaris> Just checked
[20:47:26] <ckardaris> They too seem to not have spotted this
[20:47:32] *** Quits: kzak (~kzak@nat-37.starnet.cz) (Ping timeout: 240 seconds)
[20:48:09] <ckardaris> I should create a MR. What do you think? Maybe they have some more info to give us
[20:48:20] <ckardaris> And then a PR for neomutt
[20:48:39] <flatcap> sure
[20:48:47] <ckardaris> Or does neomutt merge mutt at specific time points?
[20:49:23] <flatcap> I _used_ to, but I've got a bit behind whilst I've been doing some major refactoring
[20:49:49] <flatcap> it's getting hard to merge their changes, given the now huge differences in the codebase
[20:50:50] <flatcap> we diverged at ~6000 commits.  Mutt: 8129, NeoMutt: 14559
[20:51:33] <ckardaris> It makes sense
[21:03:37] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:07:19] *** Joins: strajder_ (~strajder@user/strajder)
[21:07:54] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[21:07:59] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[21:08:18] *** Joins: strajder (~strajder@user/strajder)
[21:16:28] *** Quits: pescepalla (~alessandr@host-79-1-230-90.business.telecomitalia.it) (Quit: WeeChat 3.3)
[21:21:26] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 260 seconds)
[21:21:36] *** Joins: orin34 (~orin@2a02:908:1214:6260:1a5f:cae0:d34b:1c9f)
[21:22:44] *** Joins: polve (~polve@twcitalia/polve)
[21:30:44] *** Joins: Pali (~pali@user/pali)
[22:12:38] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:27:51] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[22:31:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[22:36:47] *** Joins: matthugh (~matthugh@193.32.126.227)
[22:54:17] *** Joins: keypusher (keypusher@user/keypusher)
[23:14:55] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:58:32] *** Quits: matthugh (~matthugh@193.32.126.227) (Ping timeout: 240 seconds)
[23:59:19] *** Joins: matthugh (~matthugh@194.110.113.59)
