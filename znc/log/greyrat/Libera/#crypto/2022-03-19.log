[00:00:11] <slave_blocker> Pl = 8 * (l) G
[00:00:24] <slave_blocker> ???
[00:02:32] <sarnold> PROFIT!
[00:02:44] <slave_blocker> ...
[00:03:00] <slave_blocker> is this correct?
[00:03:20] <slave_blocker> is thats why there is only one subgroup of siye l ?
[00:03:27] <slave_blocker> size
[00:06:38] <maroon> int-e, i want to clarify on your gist, is the 3.7 million candidates the number of 12k+11's in a 2^32 range?
[00:07:08] <slave_blocker> ...
[00:07:18] <slave_blocker> river ?
[00:08:31] <slave_blocker> on the other hand :
[00:09:49] <maroon> or is it the number of 6k+5's in 2^32
[00:11:20] <slave_blocker> P1 = (2²) * (2) * (1) * G
[00:11:42] <slave_blocker> P1 = (2²) * (2) * (2) * G
[00:11:47] <slave_blocker> P2 = (2²) * (2) * (2) * G
[00:11:57] <slave_blocker> P3 = (2²) * (2) * (3) * G
[00:12:03] <slave_blocker> .
[00:12:04] <slave_blocker> .
[00:12:04] <slave_blocker> .
[00:12:27] <slave_blocker> Pl = (2²) * (2) * (l) * G
[00:12:29] <slave_blocker> ?
[00:12:41] <slave_blocker> nah this does not explain shit
[00:12:43] <slave_blocker> uff
[00:12:48] <slave_blocker> its all the same
[00:12:50] <slave_blocker> :(
[00:13:33] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[00:13:41] <slave_blocker> please just give me a govy injexy to stop the doubts.
[00:13:43] <slave_blocker> :(
[00:16:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:16:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:20:39] *** Quits: slave_blocker (~slave_blo@5.53.158.62) (Quit: Leaving)
[00:20:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:22:45] *** Joins: brolin (~brolin@179.13.18.50)
[00:26:02] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[00:50:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:58:55] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:59:51] *** Quits: ua_ (~ua@public-gprs226840.centertel.pl) (Read error: Connection reset by peer)
[01:01:13] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:04:39] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[01:05:00] *** Joins: tent405 (~tent405@107-214-50-180.lightspeed.bcvloh.sbcglobal.net)
[01:06:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:17:50] *** Joins: ua_ (~ua@public-gprs226840.centertel.pl)
[01:25:54] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[01:38:09] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:43:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:46:00] *** Joins: filename (~kilitary@188.242.105.134)
[01:47:32] *** Quits: halosghost (~halosghos@user/halosghost) (Quit: WeeChat 3.4.1)
[01:55:22] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxq1994gmdeskn.ipv6.telus.net)
[02:08:09] *** Quits: skyl4rk (~tlvb@user/tlvb) (Quit: ZNC 1.8.2 - https://znc.in)
[02:30:12] *** Quits: Klotz (~Klotzoman@gateway/tor-sasl/klotz) (Quit: Klotz)
[02:33:46] *** Joins: halosghost (~halosghos@user/halosghost)
[02:38:43] *** Joins: skaro (~skaro@2600:8807:180:80:61e0:51a7:7221:a1d1)
[02:50:45] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[03:08:28] *** Quits: gabriel1_ (~gabriel1@2a02-8440-6409-6a2a-0c9b-0440-eee8-1348.rev.sfr.net) (Remote host closed the connection)
[03:34:09] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[03:34:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:46:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:46:32] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[03:46:53] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:57:02] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[04:06:21] *** Joins: skyl4rk (~tlvb@user/tlvb)
[04:09:12] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[04:09:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:09:20] *** Joins: filename (~kilitary@188.242.105.134)
[04:09:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:10:57] *** Joins: akaWolf (~akaWolf@akawolf.org)
[04:14:54] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[04:14:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:16:24] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxq1994gmdeskn.ipv6.telus.net) (Remote host closed the connection)
[04:17:47] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpynxetn4zvj93a.ipv6.telus.net)
[04:29:43] *** Joins: filename (~kilitary@188.242.105.134)
[04:30:24] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:32:10] *** Joins: Wulf (~Wulf@user/wulf)
[04:37:05] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[04:41:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:42:02] *** Joins: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net)
[04:43:17] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[04:45:58] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[04:46:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:50:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:55:31] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[04:57:47] *** Quits: codedChaos (~William@static-24-233-200-9.md.cpe.atlanticbb.net) (Quit: Leaving)
[05:03:05] *** Quits: brolin (~brolin@179.13.18.50) (Ping timeout: 252 seconds)
[05:12:40] *** Joins: namkeleser (~namkelese@101.175.155.55)
[05:16:37] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:34:02] *** Joins: filename (~kilitary@82.148.25.66)
[05:42:36] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 240 seconds)
[05:44:39] *** Joins: maroon (tinycrypt@user/maroon)
[05:50:06] *** Joins: _filename (~kilitary@188.242.105.134)
[05:51:52] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 250 seconds)
[05:51:59] *** _filename is now known as filename
[05:58:13] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[05:59:34] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[06:02:09] *** Joins: filename (~kilitary@188.242.105.134)
[06:06:17] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[06:07:57] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[06:11:18] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[06:12:24] *** Quits: satanist (~satanist@bureaucracy.bureaucracy.de) (Ping timeout: 252 seconds)
[06:17:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 268 seconds)
[06:23:23] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:23:36] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[06:37:06] *** Joins: Everything (~Everythin@37.115.210.35)
[06:42:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:48:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:50:12] *** Quits: Amadiro (~Amadiro@45.154.138.91) (Remote host closed the connection)
[06:54:42] *** ravan_ is now known as ravan
[07:14:00] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[07:14:54] *** Joins: osXnut (~osXnut@77.125.126.151)
[07:26:53] *** Joins: halosghost1 (~halosghos@user/halosghost)
[07:28:18] *** Quits: halosghost (~halosghos@user/halosghost) (Ping timeout: 252 seconds)
[07:32:57] *** Quits: osXnut (~osXnut@77.125.126.151) (Ping timeout: 240 seconds)
[07:40:15] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[07:43:35] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[07:43:46] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[07:46:31] *** Joins: linear_cannon (~linear_ca@2600:1700:4090:5fe0:3cc3:b7dc:b860:1021)
[07:49:08] *** Joins: osXnut (~osXnut@77.125.126.151)
[07:52:09] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[07:56:21] *** Joins: Sofia (~sofia@user/sofia)
[08:22:39] *** Joins: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net)
[08:31:06] *** Quits: linear_cannon (~linear_ca@2600:1700:4090:5fe0:3cc3:b7dc:b860:1021) (Quit: linear_cannon)
[08:34:05] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:36:23] <int-e> maroon: it's a 2^33 range for the p-s
[08:37:46] <int-e> maroon: after sieving with primes up to 2^32
[08:37:57] <maroon> ok thanks, int-e, and the 37 million is a legit number of 12k+11 candidates remaining after the sieve?
[08:39:56] *** Quits: TunnelJ (~TunnelJ@99-167-200-231.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 245 seconds)
[08:42:12] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[08:44:57] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:49:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:50:06] <int-e> 3.7, yes
[08:50:46] <int-e> if you sieve with primes up to 2^36 it goes down to 2.9
[08:53:23] <maroon> ok i was wondering how effective it would be to expand my sieve. at 2^31 i have 0.54% of 12k+11's remaining, so this 37 million makes it look like 2^32 lowers it slightly to just below 0.52%
[08:53:40] *** Parts: Everything (~Everythin@37.115.210.35) ()
[08:55:32] <int-e> In that ballpark, each doubling of the range of primes saves about 5%.
[08:56:00] <int-e> (primes you sieve with, that is)
[08:56:18] <maroon> this is getting beyond my ability to hold the primes in a stored-on-disk byte array of increments between primes, since 2^31 is filesize 105million, and 2^32 is around double that filesize
[08:56:52] <int-e> Yeah, don't do that. It's much cheaper to generate the primes on the fly.
[08:59:09] <maroon> yeah, ill need to examine the ssh code to figure out how to sieve generate primes from 2^n thru 2^(n+1) without keeping the smaller ones around
[09:01:09] <int-e> maroon: It's the same thing as with the large sieve: You pick a base b (in range [0..2^32]) and a size s (say, 2^18), and sieve the range [b..b+s-1] using primes in [0..2^16] or so. You can easily precompute those.
[09:01:44] <maroon> and then you don't care that you're going to have some composites hiding in there?
[09:01:57] <int-e> and that will produce the primes in the range [0..2^32] without thrashing your CPU's cache or using much memory.
[09:02:09] <int-e> what composite?
[09:02:12] <int-e> +s
[09:02:48] <int-e> sieving with primes up to 2^16 will eliminate all composite up to 2^32.
[09:03:29] <int-e> +s, again.
[09:04:44] <maroon> so if i do a range of 2^18, then i'd need to do that 2^32 / 2^18 = 16384 times?
[09:05:34] <int-e> The sieving, yes. You can precompute the tiny primes (up to 2^16)
[09:05:47] <int-e> Oh I already said "precompute".
[09:06:26] <int-e> The overhead of doing that 2^14 times is outweighed by the cache-friendliness.
[09:06:52] <maroon> my method is fairly fast, except for loading the 105 meg off disk. I have an NthPrime variable, and i get the next prime by just doing NthPrime += byte_array[index]
[09:08:32] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpynxetn4zvj93a.ipv6.telus.net) (Remote host closed the connection)
[09:11:28] *** Joins: filename (~kilitary@188.242.105.134)
[09:11:54] <int-e> maroon: I spend 7 seconds on just generating primes up to 2^32, including a bit of unnecessary copying. I suppose loading from disk is a bit faster.
[09:14:29] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[09:14:32] <int-e> But this is for a computation that takes a couple of minutes, it's fast enough.
[09:15:22] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[09:15:26] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[09:15:40] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[09:16:38] *** Joins: labrador (~labrador@user/labrador)
[09:19:32] <int-e> maroon: https://paste.debian.net/1234873/ is what I'm doing for that
[09:20:13] <int-e> (lots of hardcoded constants that should be parameters... oh well)
[09:24:05] <maroon> depending on the code, there can be a noticeable speed change when replacing a constant with a variable
[09:25:06] <maroon> i had code for sha256 once, where i was testing to see what happens if i change the number of rounds. but as soon as i changed the loop roundcount from a fixed number to a variable, i could see the speed change
[09:25:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:31:24] <maroon> my sieve itself is taking a lot more than a couple minutes, but im guessing i can either blame that on c# or find that im still using a too-slow algorithm
[09:33:13] *** Quits: labrador (~labrador@user/labrador) (Remote host closed the connection)
[09:35:37] <int-e> Hmm. Changing these to variables does slow the code down by about 50%... interesting. That's much more than I expected... I wonder why. I mean, those parameters are just upper bounds for loops :-/
[09:37:09] <int-e> (Loops with enough iterations that the branch predictor shouldn't be a factor.)
[09:39:04] <int-e> What do I know. Maybe there's something about those bool vectors that performs better if the size is known statically.
[09:41:06] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[09:42:33] *** Joins: akaWolf (~akaWolf@akawolf.org)
[09:46:08] <int-e> I have no clue how good C#'s compiler (in conjunction with the .NET runtime?) is.
[09:58:41] *** Joins: labrador (~labrador@user/labrador)
[10:22:55] *** Quits: skaro (~skaro@2600:8807:180:80:61e0:51a7:7221:a1d1) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[10:25:56] *** Quits: river (~My_user_n@tilde.team/user/river) (Ping timeout: 252 seconds)
[10:26:12] *** Joins: filename (~kilitary@188.242.105.134)
[10:26:58] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Quit: Leaving)
[10:28:18] *** Joins: river (~My_user_n@tilde.team/user/river)
[10:29:31] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[10:30:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:35:51] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 252 seconds)
[10:41:51] *** Joins: akaWolf (~akaWolf@akawolf.org)
[10:45:12] *** Joins: filename (~kilitary@188.242.105.134)
[10:45:40] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:48:07] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[10:50:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:54:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[11:00:18] *** Quits: nq (~nq@2a02:2f08:e015:a900:4c2b:6fcb:65:18e) (Quit: Leaving)
[11:05:54] *** Joins: ravan_ (~ravan@42.201.198.151)
[11:05:54] *** Quits: ravan_ (~ravan@42.201.198.151) (Changing host)
[11:05:54] *** Joins: ravan_ (~ravan@user/ravan)
[11:06:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:09:53] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:12:28] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[11:12:50] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[11:13:12] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[11:13:45] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:26:07] *** Joins: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net)
[11:33:38] *** Joins: akaWolf (~akaWolf@akawolf.org)
[11:36:18] *** Quits: recyclehero (~alistar@ec2-3-127-140-208.eu-central-1.compute.amazonaws.com) (Quit: Lost terminal)
[11:36:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[11:42:26] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[11:43:13] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:46:00] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[11:46:26] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[11:49:43] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[12:05:16] *** Joins: frost (~frost@user/frost)
[12:08:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[12:28:47] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[12:36:25] *** Joins: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e)
[12:46:44] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:49:24] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Remote host closed the connection)
[12:51:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:01:40] *** Quits: rcesptro (~rcesptro@2001:448a:50e0:23e8:13a7:403a:9cb5:bf8e) (Excess Flood)
[13:03:41] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:05:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:13:46] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:19:32] *** Quits: B4ckBOne (~B4ckBOne@85.10.195.46) (Remote host closed the connection)
[13:22:14] *** Joins: B4ckBOne (~B4ckBOne@85.10.195.46)
[13:32:10] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[13:34:06] <goblin> In the Merkle Signature Scheme, a problem is that the private key's size scales linearly with the number of signable messages. Can't the private key itself be derived from a lower-entropy source by hashing the concatenation some secret (say, 256-bit) random number together with consecutive integers?
[13:36:20] <goblin> Specifically, to create a set of N private keys for the Scheme, we'd create a 256-bit random number R, and the i-th private key would simply be Hash(R || i)
[13:41:24] <goblin> that would reduce the size of the private key to constant (i.e. independent of the number of signable messages)
[13:46:15] <int-e> https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator#Designs_based_on_cryptographic_primitives huh, "at least some authors warn against this use"
[13:46:31] <int-e> ([vague] indeed)
[13:57:26] <goblin> I mean yeah, some hash functions may have weaknesses, but that's the problem of the actual hash function, not my idea... I've heard you can instead use safer contraptions like Hash(Hash(i) || Hash(R) || Hash(i)) or something
[14:02:12] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[14:02:43] <maroon> int-e, i'll need to doublecheck, but my sieve at primes < 2^32 is coming up with candidates at the rate of .00507 not the .005196 coming from the number of candidates /2^33 you came up with
[14:05:10] <maroon> and im also coming up with the same ratio from doing like: for all prime r in [5,2^32] candidates = candidates * (r-2)/r
[14:06:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:08:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:09:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:10:28] *** Joins: callq (~callq@2409:4062:4e9a:a9bd:6456:ab6c:e293:181b)
[14:10:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:17:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:23:23] *** Quits: osXnut (~osXnut@77.125.126.151) (Quit: leaving)
[14:40:24] *** Joins: sobkas (~sobkas@95.175.17.217)
[14:42:14] <int-e> maroon: yeah, in addition to missing 820k candidates (false positives for compositeness), there were 80k false negatives caused by those overflow bugs.
[14:43:09] <int-e> maroon: a fresh run would've had something like 3634958 candidates instead (that's with a slightly different base)
[14:44:27] <maroon> ok good int-e, that's close to the estimated 3652583 i was seeing from sieving a range of 10million 12k+11 p's
[14:44:49] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:45:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:47:40] *** Joins: machinedgod (~machinedg@24.105.81.50)
[14:54:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[15:01:02] <int-e> maroon: some more numbers: https://paste.debian.net/1234893/ (b: n (x%) means that n candidates remained after sieving up to b, and that's x% of the previous number of candidates remaining (so you can see the effect of doubling the range))
[15:05:29] <int-e> (I wanted something more accurate than "about 5%")
[15:08:47] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[15:11:22] <maroon> my sieve is definitely slower than it should be, i sieved at 8192 bits and took 6 minutes. but that's still going to pay off slightly due to a couple thousand fewer primality tests
[15:13:44] <int-e> Hmm. I should try to implement strides this weekend, rather than just mindlessly toying with the existing code.
[15:14:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:14:15] <int-e> (gathering statistics (as in that paste) isn't hard :-P)
[15:14:25] <river> what are strides?
[15:14:53] <maroon> i'll need to test with interval 24 or 12, because right now with my strides=64 might be part of my slowness
[15:15:09] <int-e> river: rather than sieving an interval [base...base+width), sieve base + stride*k where k in [0..width)
[15:15:19] <maroon> it's a shortcut for inversemod(N,X) where X is a 2^n power
[15:15:34] <maroon> multiplicative inverse
[15:15:54] <int-e> values of interest are stride = -1 (search backwards) and stride = 2^64 (because the NIST safe primes all end in 0xFFFFFFFFFFFFFFFF)
[15:16:18] <maroon> no wait, it's where the N is a power of 2, not the modulus
[15:16:45] <int-e> Yeah, N is a power of 2; X is odd.
[15:16:56] <int-e> (as it must be for the inverse to exist)
[15:17:42] <maroon> and i end up doing 3*2^stride, because short intervals are 12 and 24, and 2^64 isn't a multiple of 12 but 3*2^64 is
[15:19:36] <maroon> sieve for 16384 ended up taking 15 minutes, sigh
[15:19:49] <maroon> and that's for only 2^32
[15:21:00] <maroon> but the sieve really helps out the speed, im getting speeds now for 16384 that i used to be seeing for 8192
[15:21:36] <river> i dont understand how this works, that will miss out primes so sieving will give wrong results?
[15:21:56] <int-e> river: we're looking for safe primes, which are -1 (mod 12)
[15:22:26] <maroon> yes, there's lots of primes you can ignore when you detect that the q=(p-1)/2 is composite
[15:26:48] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 252 seconds)
[15:35:01] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxl51se5m1r9ba.ipv6.telus.net)
[15:39:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:53:12] <int-e> maroon: btw, regarding those oeis sequences... the bottleneck may be /proving/ primality of the final candidate.
[15:54:36] <maroon> well i would think that 128 rounds of M-R would be sufficient proof?
[15:56:43] <maroon> a big bottleneck would be the time that increases 24-30-folder each time the bit length doubles
[15:57:22] <int-e> 128 rounds of MR are plenty for practical uses, but won't satisfy a mathematician
[15:59:39] <int-e> A proof would be one of these things: https://en.wikipedia.org/wiki/Primality_certificate
[16:03:17] *** Quits: Alipha (~AliphaX@user/alipha) (Ping timeout: 256 seconds)
[16:03:54] *** Quits: river (~My_user_n@tilde.team/user/river) (Quit: WeeChat 2.3)
[16:12:01] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 245 seconds)
[16:14:45] *** Joins: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net)
[16:14:45] *** Quits: Alipha (~AliphaX@75-168-143-77.mpls.qwest.net) (Changing host)
[16:14:45] *** Joins: Alipha (~AliphaX@user/alipha)
[16:26:32] *** Quits: callq (~callq@2409:4062:4e9a:a9bd:6456:ab6c:e293:181b) (Ping timeout: 240 seconds)
[16:27:45] *** Quits: ravan_ (~ravan@user/ravan) (Read error: Connection reset by peer)
[16:34:32] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:37:24] *** Joins: riv (river@tilde.team/user/river)
[16:38:32] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[16:50:52] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[16:53:39] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[17:08:29] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[17:09:12] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Client Quit)
[17:10:51] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:11:08] *** Joins: foobaz212 (~foobaz212@109.249.187.65)
[17:11:16] *** Quits: foobaz212 (~foobaz212@109.249.187.65) (Client Quit)
[17:11:18] *** Joins: frost (~frost@user/frost)
[17:11:47] *** Joins: foobaz212 (~foobaz212@109.249.187.65)
[17:12:06] *** Quits: foobaz212 (~foobaz212@109.249.187.65) (Client Quit)
[17:18:02] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:19:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl)
[17:28:05] *** Joins: aleck (~aleck@user/aleck)
[17:29:42] *** Quits: aleck1 (~aleck@user/aleck) (Ping timeout: 260 seconds)
[17:32:35] *** Quits: MajorBiscuit (~MajorBisc@c-001-031-019.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:37:07] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:37:39] *** Quits: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl) (Client Quit)
[17:37:49] *** Joins: Major_Biscuit (~MajorBisc@c-001-024-004.client.tudelft.eduvpn.nl)
[17:45:09] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[17:48:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:53:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:54:10] <Alipha> maroon: are you just doing this for fun?
[18:21:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:26:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:28:24] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Quit: joined libera)
[18:30:28] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[18:44:10] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:44:34] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:45:02] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[18:46:24] *** Quits: halosghost1 (~halosghos@user/halosghost) (Quit: WeeChat 2.5-rc1)
[18:46:32] *** Joins: cwebber (~user@user/cwebber)
[18:47:46] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[18:50:07] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[18:52:32] *** Joins: filename (~kilitary@188.242.105.134)
[19:05:45] *** Quits: Guest63 (~Guest63@185.51.139.212) (Ping timeout: 256 seconds)
[19:08:08] *** Joins: X-Scale` (~ARM@219.206.137.78.rev.vodafone.pt)
[19:12:00] *** Quits: X-Scale (~ARM@92.250.103.125) (Ping timeout: 272 seconds)
[19:12:01] *** X-Scale` is now known as X-Scale
[19:13:12] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[19:16:35] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[19:27:10] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:27:12] *** Quits: yauhsien (~Yau-Hsien@61-231-56-96.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[19:30:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:32:02] *** Quits: ua_ (~ua@public-gprs226840.centertel.pl) (Ping timeout: 240 seconds)
[19:40:24] *** Quits: semisimple (~semisimpl@user/semisimple) (Quit: WeeChat 3.4)
[19:42:51] *** Joins: mei (~mei@user/mei)
[19:43:48] *** Quits: skyl4rk (~tlvb@user/tlvb) (Quit: ZNC 1.8.2 - https://znc.in)
[19:46:27] *** Joins: toulene (~toulene@user/toulene)
[19:46:32] *** Joins: ua_ (~ua@public-gprs222674.centertel.pl)
[19:46:38] *** Joins: skyl4rk (~tlvb@user/tlvb)
[19:46:46] *** Quits: skyl4rk (~tlvb@user/tlvb) (Remote host closed the connection)
[19:48:18] *** Joins: skyl4rk (~tlvb@user/tlvb)
[19:55:15] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[20:06:37] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[20:10:05] *** Joins: Sofia (~sofia@user/sofia)
[20:12:46] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:21:39] *** Joins: ravan (~ravan@user/ravan)
[20:21:52] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[20:21:54] *** Joins: Guest63 (~Guest63@185.51.139.212)
[20:24:39] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:27:39] *** Quits: Guest63 (~Guest63@185.51.139.212) (Quit: Client closed)
[20:29:27] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[20:34:16] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[20:46:30] *** Quits: litharge (litharge@libera/bot/litharge) (Read error: Connection reset by peer)
[20:46:46] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Quit: Leaving)
[20:47:09] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[20:49:05] *** Joins: litharge (litharge@libera/bot/litharge)
[20:49:07] *** Joins: litharge` (litharge@libera/bot/litharge)
[20:49:23] *** Quits: litharge` (litharge@libera/bot/litharge) (Read error: Connection reset by peer)
[20:51:17] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Client Quit)
[20:51:47] *** Joins: NeoFAT32 (~NeoFAT32_@user/NeoFAT32)
[21:06:32] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:07:58] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:10:29] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:24:53] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[21:37:33] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[21:44:36] *** Quits: cwebber (~user@user/cwebber) (Remote host closed the connection)
[21:52:52] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[21:53:56] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:54:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:54:55] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[21:59:23] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:59:58] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:00:27] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:01:39] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[22:02:21] *** Joins: lumberjack123 (~alMalsamo@gateway/tor-sasl/almalsamo)
[22:02:30] <lumberjack123> Hi all has anyone seen this: https://soatok.blog/2020/07/08/gnu-a-heuristic-for-bad-cryptography/
[22:06:39] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[22:07:17] *** Quits: Pythayr (~pither195@vps-1494dc6f.vps.ovh.us) (Ping timeout: 240 seconds)
[22:09:43] <yawkat> yes
[22:14:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[22:17:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:20:18] *** Joins: Pythayr (~pither195@92.38.171.13)
[22:24:25] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[22:24:55] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[22:29:45] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:30:45] *** Joins: aleck1 (~aleck@user/aleck)
[22:32:28] *** Quits: NeoFAT32 (~NeoFAT32_@user/NeoFAT32) (Quit: Leaving)
[22:32:48] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[22:32:57] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 240 seconds)
[22:37:09] <wasamasa> lol, dunning gnuger
[22:41:09] <wasamasa> personally, I hate openssl, too
[22:41:23] <wasamasa> but at least there's enough people looking at openssl that it's reasonable secure, if still a pain to use
[22:41:41] <wasamasa> openssl with GNU code style and lack of eyes would be horrible
[22:42:19] <rqsd> And it only took heartbleed to get enough people looking at it in the first place!
[22:56:15] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Quit: Leaving)
[22:56:32] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 240 seconds)
[22:56:49] *** Joins: NeoFAT32_ (~NeoFAT32_@118.179.224.74)
[23:00:31] *** Joins: llorllale (~llorllale@198.98.119.85)
[23:01:28] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[23:01:37] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:09:23] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[23:16:13] *** Joins: TunnelJ (~TunnelJ@99-167-200-231.lightspeed.sndgca.sbcglobal.net)
[23:16:54] *** Joins: abraham (~abraham@64.227.110.185)
[23:18:35] *** Quits: Sofia (~sofia@user/sofia) (Ping timeout: 240 seconds)
[23:31:01] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:33:49] *** Joins: Sofia (~sofia@user/sofia)
[23:35:06] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:35:24] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:35:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:36:15] *** Joins: Everything (~Everythin@37.115.210.35)
[23:37:51] *** Lord_of_Life_ is now known as Lord_of_Life
[23:43:33] *** Joins: filename (~kilitary@188.242.105.134)
[23:45:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:45:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:49:25] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[23:51:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:57:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:57:40] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[23:57:44] <ms7821> anyone around who can help me understand a small custom ECDSA implementation? I don't have a way of testing it, but I have the code that validates the result, and it looks like what it's doing is super broken
[23:57:54] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:58:31] <ms7821> or maybe someone recognises what it's doing, because it doesn't match the documentation https://gist.github.com/marksteward/fb3b356cac33a106f80803c8ebc1ebcb
[23:59:03] <ms7821> (that's just beautified from https://web.archive.org/web/20200303013403js_/https://rapid-iot-studio.nxp.com/min/index.min.js)
[23:59:22] <ms7821> and I've added some minimal comments
