[00:40:53] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[00:40:53] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[00:41:57] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[00:42:21] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[00:43:38] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[00:48:43] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[00:49:31] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 256 seconds)
[00:50:23] *** Joins: sena_kun (~sena_kun_@94.142.239.45)
[01:39:00] *** Joins: clarjon1 (~clarjon1@198-84-130-36.cpe.teksavvy.com)
[01:55:50] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[02:02:28] *** Quits: melezhik (~melezhik@c-98-198-98-197.hsd1.tx.comcast.net) (Quit: Connection closed)
[02:05:09] *** Quits: a3r0 (~aero@61.100.184.210) (Remote host closed the connection)
[02:14:28] *** Joins: Util (~bruce@047-013-182-182.res.spectrum.com)
[02:25:51] *** Quits: neula (~user@vpnext-2001-638-505-918-1006.vpn.skim.th-owl.de) (Ping timeout: 256 seconds)
[02:39:48] *** Joins: Altai-man (~koto@94.142.239.45)
[02:43:11] *** Quits: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[02:44:07] *** Joins: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[02:49:20] *** Quits: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[02:49:31] *** Joins: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[02:53:28] *** Joins: Merfont (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[02:54:09] *** Quits: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[02:57:05] *** Quits: Merfont (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[03:00:14] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[03:02:39] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[03:04:21] * [Coke] now has a UPS, thanks whoever mentioned that.
[03:05:45] <moon-child> nice!
[03:08:46] <Geth> Â¦ doc: 191fe4bd4a | Coke++ | util/clean-spell
[03:08:46] <Geth> Â¦ doc: Run tests in chunks, not for everything
[03:08:46] <Geth> Â¦ doc: 
[03:08:46] <Geth> Â¦ doc: Set a chunk size for # of files, and fail if any of the chunks fail.
[03:08:46] <Geth> Â¦ doc: This allows us to fail faster in many cases.
[03:08:46] <Geth> Â¦ doc: 
[03:08:46] <Geth> Â¦ doc: If there's a partial chunk, run it first, with the thought that we
[03:08:47] <Geth> Â¦ doc: can do less and fail slightly faster.
[03:08:50] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/191fe4bd4a
[03:08:52] <Geth> Â¦ doc: 0afc84d618 | Coke++ | util/clean-spell
[03:08:53] <Geth> Â¦ doc: Only check word matches
[03:08:55] <Geth> Â¦ doc: 
[03:08:57] <Geth> Â¦ doc: We originally checked any match, but it can be very slow (e.g.
[03:08:59] <Geth> Â¦ doc: "ents" is used, which has > 100 matches if we don't try word boundary)
[03:09:01] <Geth> Â¦ doc: Slightly larger risk of false positives, so be sure to do the post-check.
[03:09:04] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/0afc84d618
[03:09:05] <Geth> Â¦ doc: b3d4cec53d | Coke++ | lib/Pod/Cache.rakumod
[03:09:08] <Geth> Â¦ doc: remove diagnostic output
[03:09:10] <Geth> Â¦ doc: review: https://github.com/Raku/doc/commit/b3d4cec53d
[03:54:32] *** Quits: Altai-man (~koto@94.142.239.45) (Remote host closed the connection)
[04:33:17] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:33:54] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:41:46] *** Joins: frost (~frost@59.71.241.179)
[05:06:36] *** Quits: xinming_ (~xinming@115.219.38.38) (Ping timeout: 268 seconds)
[05:08:08] *** Joins: xinming_ (~xinming@115.219.38.38)
[05:19:00] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[05:31:53] *** Joins: curioususer (~curiousus@cpe-68-173-136-34.nyc.res.rr.com)
[05:32:16] *** Quits: curioususer (~curiousus@cpe-68-173-136-34.nyc.res.rr.com) (Client Quit)
[05:40:29] *** Quits: xinming_ (~xinming@115.219.38.38) (Ping timeout: 258 seconds)
[05:42:27] *** Joins: xinming_ (~xinming@115.219.38.38)
[06:30:40] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[06:35:11] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 256 seconds)
[06:43:46] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[06:45:34] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[06:46:08] *** Quits: MasterDuke (~MasterDuk@94.7.197.239) (Quit: Ping timeout (120 seconds))
[06:51:01] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 258 seconds)
[06:52:00] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[06:56:23] <japhb> Is there a module already for an ordered hash (in the sense that iterating over it will return keys/values/pairs in exactly the order they were inserted)?  I see lizmat has Map::Ordered but not Hash::Ordered, FCO has an OrderedHash but it seems to care about either sorting or specifying the order of keys (rather than depending on insertion order), and there appear to be lots of modules in the Hash::* 
[06:56:29] <japhb> namespace, but none look like a match for what I'm looking for.
[06:58:54] <japhb> (Unless of course I just missed it.)
[07:00:59] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 265 seconds)
[07:03:38] *** Quits: xinming_ (~xinming@115.219.38.38) (Ping timeout: 252 seconds)
[07:04:01] *** Joins: xinming_ (~xinming@115.219.38.38)
[07:11:57] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[07:12:01] *** Quits: rassoc (~rassoc@139.174.228.245) (Ping timeout: 256 seconds)
[07:21:30] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 240 seconds)
[07:36:54] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[07:40:52] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Remote host closed the connection)
[07:40:53] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Remote host closed the connection)
[07:40:53] *** Quits: juanfra (~juanfra@user/juanfra) (Write error: Connection reset by peer)
[07:40:53] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Read error: Connection reset by peer)
[07:41:04] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[07:41:32] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Write error: Connection reset by peer)
[07:41:33] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Read error: Connection reset by peer)
[07:41:46] *** Joins: juanfra (~juanfra@user/juanfra)
[07:43:31] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 265 seconds)
[07:44:11] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[07:45:12] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[07:45:12] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[07:45:12] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[07:45:24] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[07:45:24] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[07:45:26] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[07:48:44] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 252 seconds)
[08:03:14] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: node-irc says goodbye)
[08:03:27] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: node-irc says goodbye)
[08:04:40] *** Quits: stoned75 (~seb@pop.92-184-112-243.mobile.abo.orange.fr) (Ping timeout: 272 seconds)
[08:05:05] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: node-irc says goodbye)
[08:06:22] *** Joins: stoned75 (~seb@pop.92-184-112-165.mobile.abo.orange.fr)
[08:09:27] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Quit: node-irc says goodbye)
[08:10:06] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Quit: node-irc says goodbye)
[08:10:06] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Quit: node-irc says goodbye)
[08:10:11] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Quit: node-irc says goodbye)
[08:31:29] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[08:31:36] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:36:20] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 272 seconds)
[08:51:24] *** Parts: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) ()
[08:52:03] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[09:52:03] *** Quits: coverable6 (~cov-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:52:03] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:52:03] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:52:03] *** Quits: statisfiable6 (~sta-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:52:03] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:52:03] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:52:03] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:52:03] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:52:03] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:52:03] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:03] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:52:21] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[09:52:25] *** Joins: releasable6 (~rel-able@ns306169.ip-94-23-219.eu)
[09:52:27] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[09:52:30] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:52:31] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[09:52:52] *** Joins: squashable6 (~squ-able@ns306169.ip-94-23-219.eu)
[09:52:53] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[09:52:59] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[09:53:14] *** Joins: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu)
[09:53:20] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:53:25] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:54:00] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:54:02] *** Joins: statisfiable6 (~sta-able@ns306169.ip-94-23-219.eu)
[09:54:17] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:54:41] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:55:05] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[09:55:11] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[09:55:13] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:55:14] *** Joins: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu)
[09:56:56] *** Quits: squashable6 (~squ-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:58:24] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:32:41] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:33:39] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[10:48:33] *** Joins: notna (~notna@77.47.31.43)
[11:05:17] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:21:02] *** Joins: ufobat (~martin@dynamic-077-009-106-093.77.9.pool.telefonica.de)
[11:35:57] *** Joins: patrickb (~quassel@55d480e2.access.ecotel.net)
[11:55:14] *** Joins: juanfra (~juanfra@user/juanfra)
[11:58:26] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[11:58:26] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[11:58:26] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[11:58:38] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[11:58:38] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[11:58:40] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[12:15:53] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: Client limit exceeded: 20000)
[12:16:32] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: Client limit exceeded: 20000)
[12:19:06] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: Client limit exceeded: 20000)
[12:28:43] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Remote host closed the connection)
[12:28:55] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Read error: Connection reset by peer)
[12:29:25] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Read error: Connection reset by peer)
[12:29:25] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[12:29:47] *** Joins: juanfra (~juanfra@user/juanfra)
[12:33:10] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[12:33:10] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[12:33:10] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[12:33:22] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[12:33:22] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[12:33:23] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[12:50:13] *** Quits: juanfra (~juanfra@user/juanfra) (Quit: Client limit exceeded: 20000)
[12:50:53] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Quit: Client limit exceeded: 20000)
[12:53:03] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Quit: Client limit exceeded: 20000)
[13:02:02] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Remote host closed the connection)
[13:02:04] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Remote host closed the connection)
[13:02:13] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Remote host closed the connection)
[13:02:37] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[13:03:04] *** Joins: juanfra (~juanfra@user/juanfra)
[13:06:31] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[13:06:31] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[13:06:31] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[13:06:43] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[13:06:43] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[13:06:45] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[13:10:24] *** Quits: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca) (Remote host closed the connection)
[13:10:25] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (Remote host closed the connection)
[13:10:25] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Remote host closed the connection)
[13:10:26] *** Quits: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1) (Remote host closed the connection)
[13:10:26] *** Quits: cnx (~cnxhaloge@2001:470:69fc:105::61f) (Remote host closed the connection)
[13:10:27] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (Remote host closed the connection)
[13:10:31] *** Quits: juanfra (~juanfra@user/juanfra) (Write error: Connection reset by peer)
[13:29:23] *** Joins: MoC (~moc@user/moc)
[13:30:49] *** Joins: frost (~frost@59.71.241.179)
[13:32:45] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[13:35:45] *** Joins: juanfra (~juanfra@user/juanfra)
[13:37:04] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 252 seconds)
[13:39:10] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[13:39:10] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[13:39:10] *** Joins: cnx (~cnxhaloge@2001:470:69fc:105::61f)
[13:39:22] *** Joins: tyil[m] (~tyilmatri@2001:470:69fc:105::9a1)
[13:39:22] *** Joins: littlebenlittle[ (~littleben@2001:470:69fc:105::1eca)
[13:39:24] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[14:29:34] <patrickb> polettix_: Did you notice https://www.reddit.com/r/rakulang/comments/o841lu/default_member_values_flavio_poletti/h3jk1ug/?context=3 
[14:29:36] <tellable6> hey patrickb, you have a message: https://gist.github.com/8503b4fd5eae8e2cd0127226d550c237
[14:30:41] <CIAvash> m: say .chars == .comb.unique given 'abcd'
[14:30:41] <camelia> rakudo-moar afab892db: OUTPUT: Â«Trueâ¤Â»
[14:31:06] <patrickb> polettix_: I fear I have tried leaving that comment in *three* different ways, only to not be seen and you finding out about object construction separately. Grrr. I'm grumpy on Disqus now.
[14:39:24] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[14:39:24] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[14:41:28] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:41:55] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:52:49] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[14:53:39] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[15:00:40] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:08:32] *** Joins: rassoc (~rassoc@139.174.228.245)
[15:12:01] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:26:40] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[15:28:23] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~âª)
[15:44:18] *** Joins: neula (~user@p200300e29703bf001e6f65fffed3eb2b.dip0.t-ipconnect.de)
[16:03:31] *** Joins: _ed (~ed@ip98-186-104-214.ks.ks.cox.net)
[16:07:46] *** Quits: _ed (~ed@ip98-186-104-214.ks.ks.cox.net) (Ping timeout: 252 seconds)
[16:14:39] <SmokeMachine> sorry, yesterday I said `Model.WHAT` meaning `Model.HOW`
[16:20:56] <rassoc> m: "a1b2\nc3\nd4e5".lines.comb(/\d/)
[16:20:56] <camelia> rakudo-moar 917d674bc: ( no output )
[16:21:00] <rassoc> m: "a1b2\nc3\nd4e5".lines.comb(/\d/).say
[16:21:00] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«(1 2 3 4 5)â¤Â»
[16:21:19] <rassoc> oh, interesting comb behaviour; never knew that
[16:22:09] <lizmat> you're combing for numeric characters... or is that not what you meant ?
[16:22:48] <rassoc> that it considers multiple elements, separate lines in this case. usually incorporated a map of some kind while processing lines
[16:24:24] <SmokeMachine> m: say <a1 b2 c3>.comb: /\d+/
[16:24:24] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«(1 2 3)â¤Â»
[16:24:50] <SmokeMachine> m: say <0a1 b2 3c4>.comb: /\d+/
[16:24:50] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«(0 1 2 3 4)â¤Â»
[16:31:18] <gfldex> m: "a1b2\nc3\nd4e5".linesÂ».comb(/\d/)
[16:31:18] <camelia> rakudo-moar 917d674bc: ( no output )
[16:31:21] <gfldex> m: "a1b2\nc3\nd4e5".linesÂ».comb(/\d/).say
[16:31:21] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«((1 2) (3) (4 5))â¤Â»
[16:31:50] <gfldex> rassoc: .comb coerces to Str
[16:32:41] <lizmat> rassoc: what gfldex says, so you would get the same result without the .lines
[16:32:49] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[16:32:55] <lizmat> m: "a1b2\nc3\nd4e5".comb(/\d/)
[16:32:55] <camelia> rakudo-moar 917d674bc: ( no output )
[16:33:02] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:33:03] <lizmat> m: "a1b2\nc3\nd4e5".comb(/\d/).say
[16:33:03] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«(1 2 3 4 5)â¤Â»
[16:33:55] <lizmat> m: "a1b2\nc3\nd4e5".lines>>.comb(/\d/).say
[16:33:55] <camelia> rakudo-moar 917d674bc: OUTPUT: Â«((1 2) (3) (4 5))â¤Â»
[16:41:40] <rassoc> i do realize that now, but it never occurred to me before that i could utilize it in such a way
[17:01:34] <rassoc> gfldex: recently, i ran into a situation where i deadlocked the scheduler by .receiving on various interdependent channels. stumbled upon one of your blog posts on await and it really saved me. the docs mention that it utilizes .receive internally, but the impl is actually using .polling and supplies. so, thanks a bunch for your frequent blogging!
[17:33:03] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[17:33:03] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[17:33:04] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de)
[17:35:18] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 272 seconds)
[17:35:32] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[17:36:02] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[17:36:09] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[17:37:25] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[17:39:07] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Remote host closed the connection)
[17:49:59] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[17:57:44] <cnx> <CIAvash "m: say .chars == .comb.unique gi"> I'm aware of this, but I'm still curious of a regex solution (apologies to IRC people for the quote)
[18:07:18] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-142.092.076.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[18:14:04] <rassoc> regex solution for what? verifying that a str has no repeated chars?
[18:14:18] <rassoc> m: say "abc" !~~ /(.).*$0/
[18:14:19] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«Trueâ¤Â»
[18:14:22] <rassoc> m: say "abca" !~~ /(.).*$0/
[18:14:22] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«Falseâ¤Â»
[18:15:28] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:19:31] <cnx> is it possible for a possive match?
[18:20:15] <cnx> e.g. of only 4 to 20 unique alphanumerics
[18:40:14] <rassoc> cnx: in a single regex? not quite sure what you are trying to do. is this what you are after?
[18:40:20] <rassoc> m: my &small-uniq = { !/(.) .* $0/ ?& /<alpha> ** 4..20/ }; "abc".&small-uniq.say; "abcd".&small-uniq.say; "abcdd".&small-uniq.say;
[18:40:20] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«Falseâ¤Trueâ¤Falseâ¤Â»
[18:46:31] <cnx> yes, in a single regex, I'm just wondering if it's possible to forbid duplication using capture groups
[18:46:43] *** Joins: Eddward (~Eddward@207.138.204.132)
[18:46:50] <Eddward> m: say "test"
[18:46:50] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«testâ¤Â»
[18:46:59] <Eddward> m: my $y = -> $n { say "hi $n" } ; $y(3)
[18:46:59] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«hi 3â¤Â»
[18:47:42] <Eddward> m: my $y = -> $n { say "hi $n" } ; for 1..5 $y
[18:47:42] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Missing blockâ¤at <tmp>:1â¤------> 3my $y = -> $n { say "hi $n" } ; for 1..57â5 $yâ¤    expecting any of:â¤        block or pointy blockâ¤        infixâ¤        infix stopperâ¤Â»
[18:48:22] <Eddward> m: my $y = -> $n { say "hi $n" } ; $y.perl
[18:48:23] <camelia> rakudo-moar 7cf3927d3: ( no output )
[18:48:56] <Eddward> m: my $y = -> $n { say "hi $n" } ; $y.raku
[18:48:56] <camelia> rakudo-moar 7cf3927d3: ( no output )
[18:49:08] <Eddward> m: my $y = -> $n { say "hi $n" } ; say $y.perl
[18:49:08] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«-> $n { #`(Block|91879296) ... }â¤Â»
[18:54:51] *** Joins: melezhik (~melezhik@174.128.60.162)
[18:54:51] <melezhik> .
[18:55:02] <melezhik> .
[19:04:33] <Eddward> sub x($n) { say "hi $n" } ; for 1..5 &x
[19:05:08] <Eddward> sub x($n) { say "hi $n" } ; &x.perl.say
[19:05:09] <evalable6> Eddward, rakudo-moar 7cf3927d3: OUTPUT: Â«sub x ($n) { #`(Sub|94922466683104) ... }â¤Â»
[19:05:45] <Eddward> my $x = ->($n) { say "hi $n" } ; $x.perl.say
[19:05:46] <evalable6> Eddward, rakudo-moar 7cf3927d3: OUTPUT: Â«-> $ ($n) { #`(Block|94632884115120) ... }â¤Â»
[19:06:54] <Eddward> my $x = -> $n { say "hi $n" } ; $x.perl.say
[19:06:55] <evalable6> Eddward, rakudo-moar 7cf3927d3: OUTPUT: Â«-> $n { #`(Block|93854853147912) ... }â¤Â»
[19:07:25] <Eddward> my $x = -> $n { say "hi $n" } ; for 1..5 { $x($_) }
[19:07:26] <evalable6> Eddward, rakudo-moar 7cf3927d3: OUTPUT: Â«hi 1â¤hi 2â¤hi 3â¤hi 4â¤hi 5â¤Â»
[19:08:01] <Eddward> my $x = -> $n { say "hi $n" } ; for 1..5 $x
[19:08:20] <Eddward> m: my $x = -> $n { say "hi $n" } ; for 1..5 $x
[19:08:20] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«5===SORRY!5=== Error while compiling <tmp>â¤Missing blockâ¤at <tmp>:1â¤------> 3my $x = -> $n { say "hi $n" } ; for 1..57â5 $xâ¤    expecting any of:â¤        block or pointy blockâ¤        infixâ¤        infix stopperâ¤Â»
[19:09:26] <Eddward> Â¯\_(ã)_/Â¯
[19:15:19] <rassoc> m: my &x = -> $n { say "hi $n" }; .&x for 1..5 # Eddward
[19:15:19] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«hi 1â¤hi 2â¤hi 3â¤hi 4â¤hi 5â¤Â»
[19:17:38] <Eddward> rassoc:  Thanks.  I was inspired by an article that I didn't think did what it thought it did.
[19:18:15] <Eddward> https://jcoterhals.medium.com/what-not-to-do-how-to-mess-up-for-loops-in-raku-rakulang-e594121ab30c
[19:19:35] <Eddward> I thought `A($_) for ^3` was the same as `for ^3 { A($_) }`
[19:20:41] <lizmat> Eddward: it has the same effect, but the for ^3 {   }  case has an extra level of indirection
[19:21:15] <Eddward> right
[19:48:07] *** Quits: notna (~notna@77.47.31.43) (Quit: Connection closed)
[20:27:12] <m6locks> can has more exercises in https://exercism.io/my/tracks/raku ?
[20:48:07] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[20:48:07] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:48:59] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:49:08] <rassoc> m6locks: you can try https://theweeklychallenge.org/challenges/ or https://adventofcode.com/ while waiting for some more content on exercism
[20:49:56] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[20:50:06] <rassoc> latter has a collection of solutions for comparison here: https://github.com/codesections/advent-of-raku-2020
[21:00:21] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[21:00:52] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[21:04:01] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[21:20:02] *** Quits: stoned75 (~seb@pop.92-184-112-165.mobile.abo.orange.fr) (Ping timeout: 258 seconds)
[21:20:29] <perlmaros> hi, i'm running a raku application in a systemd unit and no ~/.raku/precomp files are being written. whenever i start it manually/directly via shell they are created. any suggestions what might be needed to coerce rakudo into creating these files?
[21:21:42] *** Joins: stoned75 (~seb@pop.92-184-102-157.mobile.abo.orange.fr)
[21:22:16] <perlmaros> strace shows that it looks for these files, but it does not try to create them
[21:48:47] *** Quits: ufobat (~martin@dynamic-077-009-106-093.77.9.pool.telefonica.de) (Ping timeout: 258 seconds)
[22:07:13] <moritz> permission problems, maybe?
[22:07:49] <moritz> systemd unit files have an option to disable access to home directories, IIRC
[22:08:45] <ugexe> note just because it looks and doesn't find them there doesn't mean it didnt find them somewhere else
[22:09:49] <ugexe> m: say $*REPO.repo-chain.map(*.?prefix).grep(*.so).map(*.absolute)
[22:09:49] <camelia> rakudo-moar 7cf3927d3: OUTPUT: Â«(/home/camelia/.raku /home/camelia/rakudo-m-inst-1/share/perl6/site /home/camelia/rakudo-m-inst-1/share/perl6/vendor /home/camelia/rakudo-m-inst-1/share/perl6/core)â¤Â»
[22:10:49] <ugexe> run your script with `RAKUDO_MODULE_DEBUG=1` and you'll get some more details
[22:32:37] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:34:52] *** Quits: melezhik (~melezhik@174.128.60.162) (Ping timeout: 272 seconds)
[22:35:20] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[23:02:15] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[23:27:36] *** Parts: neula (~user@p200300e29703bf001e6f65fffed3eb2b.dip0.t-ipconnect.de) (Killed buffer)
[23:31:51] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[23:42:45] *** Quits: jess (~jess@libera/staff/jess) ()
[23:50:35] <perlmaros> not sure if i can get anything helpful from RAKUDO_MODULE_DEBUG=1 ... it just prints where it tries to load the precomp files from, but it doesn't say anything about where/when/if it tries to write them
[23:55:09] <lizmat> it should say something like "Precompiled /foo/bar into /foo/baz"
[23:55:37] <lizmat> and "Writing dependencies and byte code to foo for source checksum: 765372657362
