[00:01:33] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:04:15] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[00:04:38] *** Quits: IUSR (sid348938@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:05:23] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Remote host closed the connection)
[00:05:39] *** Joins: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[00:05:59] *** Joins: IUSR (sid348938@hampstead.irccloud.com)
[00:07:40] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0)
[00:13:15] *** Joins: elderK (uid205007@helmsley.irccloud.com)
[00:13:36] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[00:23:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:23:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:31:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:31:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:34:00] *** Quits: VincentVega (~user@212.241.28.158) (Remote host closed the connection)
[00:36:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c0ad:80c4:dd74:5cc0) (Quit: Leaving)
[00:37:38] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[00:38:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:38:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:38:34] *** Quits: ym (~ym@5.143.220.3) (Ping timeout: 260 seconds)
[00:38:39] *** Joins: jsatk (sid304796@helmsley.irccloud.com)
[00:41:45] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[00:46:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:46:14] *** Joins: az_reth (~manjaro-i@2a0c:5a80:1914:af00:b8bd:948e:23f3:ff07)
[00:46:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:55:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:55:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:57:10] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9455:4a3b:6504:3d0c)
[01:03:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:03:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:07:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:07:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:12:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:12:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:15:36] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 256 seconds)
[01:15:39] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:18:38] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[01:19:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:19:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:21:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:9455:4a3b:6504:3d0c) (Quit: Leaving)
[01:22:52] *** Joins: akoana (~ah@user/akoana)
[01:24:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:24:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:27:52] *** Quits: pve (~pve@176-93-18-46.bb.dnainternet.fi) (Quit: leaving)
[01:30:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:30:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:31:14] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[01:34:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:34:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:37:30] *** Joins: Inline (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:41:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:41:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:41:31] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:45:46] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 260 seconds)
[01:48:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:48:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:48:39] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:49:27] *** Inline is now known as Guest1099
[01:49:58] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Remote host closed the connection)
[01:50:24] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3)
[01:51:10] *** Inline_ is now known as Inline
[01:52:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:52:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:55:17] *** Quits: NotThatRPG (~NotThatRP@mail.sift.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:56:32] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:57:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:57:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:58:03] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[02:00:23] *** Quits: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (Remote host closed the connection)
[02:03:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:03:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:05:28] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[02:09:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:09:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:11:56] *** Joins: robin (~robin@user/terpri)
[02:12:41] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:b1d1:b373:5ce1:d5ce)
[02:12:50] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[02:13:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:13:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:13:37] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 250 seconds)
[02:19:32] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[02:25:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:25:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:36:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[02:36:37] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 265 seconds)
[02:37:06] *** Quits: gaqwas (~john@dynamic-095-115-127-003.95.115.pool.telefonica.de) (Ping timeout: 260 seconds)
[02:38:20] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 256 seconds)
[02:38:32] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[02:42:44] *** Quits: servytor (uid525486@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:43:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:44:23] *** Joins: igemnace (~ian@user/igemnace)
[02:49:21] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:55:26] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[02:55:47] *** Joins: karlosz (~karlosz@47.151.136.69)
[02:57:36] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[03:00:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:00:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:04:11] *** Joins: pjb (~pjb@user/pjb)
[03:05:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:05:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:14:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:14:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:25:47] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:28:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:28:51] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:31:02] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[03:31:27] *** Joins: s-liao (~s-liao@101.86.101.64)
[03:33:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:33:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:34:55] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 268 seconds)
[03:35:44] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:b1d1:b373:5ce1:d5ce) (Remote host closed the connection)
[03:40:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:40:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:40:42] *** Joins: z3t0 (~z3t0@146.71.14.98)
[03:42:04] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:46:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:46:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:48:38] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a) (Ping timeout: 265 seconds)
[03:49:01] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[03:52:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:52:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:54:05] *** Joins: Colt (~Colt@user/colt)
[03:54:52] *** Joins: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[03:56:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[03:56:49] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[03:57:23] *** Quits: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 264 seconds)
[04:00:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[04:00:28] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:03:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:03:23] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:09:55] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[04:10:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:10:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:15:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:15:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:19:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[04:19:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[04:30:12] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 265 seconds)
[04:45:57] <jasom> (let (''x) (cons . ''x)) ; evaluates to an emoticon that expresses my feelings for if ever anyone uses that in real-world code.
[04:46:34] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:47:56] <Guest74> looks like double quotes over here. maybe it's my font.
[04:48:06] <jasom> Guest74: two single-quote characters
[04:49:25] <jasom> Guest74: maybe this is more clear for your font? (let ( ' ' x) (cons . ' ' x))
[04:49:51] <Guest74> I still don't know what the emoticon is.
[04:50:00] <jasom> (X . X)
[04:50:25] <Guest74> looks like a headache to me, but that's probably what this code is doing to me https://youtu.be/xhlymBG8Utc
[04:50:35] <jasom> ðŸ˜µ
[04:52:57] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[04:53:13] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[04:57:27] *** Joins: s-liao (~s-liao@101.86.101.64)
[04:59:54] *** Quits: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[05:06:30] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[05:06:50] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[05:07:07] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[05:23:08] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[05:28:11] *** Quits: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[05:33:23] *** Joins: green__ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[05:35:59] *** Quits: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:48:14] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:48:23] *** perrierjouet is now known as Charles_Attends
[05:50:09] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[05:50:22] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:56:14] *** Quits: green__ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 265 seconds)
[06:12:35] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[06:14:07] *** Joins: IAmRasputin (~rmg@2601:19c:4600:9e90:221:6bff:fea3:f75c)
[06:20:40] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[06:27:42] *** Quits: IAmRasputin (~rmg@2601:19c:4600:9e90:221:6bff:fea3:f75c) (Quit: WeeChat 3.3)
[06:33:58] *** Joins: IAmRasputin (~rmg@2601:19c:4600:9e90:221:6bff:fea3:f75c)
[06:36:55] *** Joins: s-liao (~s-liao@101.86.101.64)
[06:37:29] *** Quits: jealousmonk (~user@2804:431:e7c4:15cc:f258:de9e:9ab0:dc5c) (Quit: ERC (IRC client for Emacs 27.1))
[06:58:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[06:58:19] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[07:04:35] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[07:11:56] *** spiaggia` is now known as beach
[07:12:07] *** ChanServ sets mode: +o beach
[07:14:58] *** Joins: bjorkintosh (~bjork@2600:1702:6a0:af0:78e7:468a:f7c1:4c06)
[07:21:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[07:22:54] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[07:23:20] *** Joins: Colt (~Colt@user/colt)
[07:27:35] *** Quits: IAmRasputin (~rmg@2601:19c:4600:9e90:221:6bff:fea3:f75c) (Ping timeout: 265 seconds)
[07:29:17] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[07:30:09] <beach> Good morning everyone!
[07:42:13] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[07:47:53] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 265 seconds)
[07:50:45] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[08:01:35] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 250 seconds)
[08:06:26] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:07:17] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[08:11:51] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[08:13:30] *** Quits: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 265 seconds)
[08:15:28] <Spawns_Carpet[m]> how can I convert a list of chars into a string?
[08:18:47] <antoszka> Spawns_Carpet[m]: * (concatenate 'string '(#\f #\o #\o))
[08:18:49] <antoszka> "foo"
[08:19:04] <antoszka> And a milion other ways.
[08:19:10] <Spawns_Carpet[m]> thanks antoszka
[08:19:37] <Spawns_Carpet[m]> i couldn't find that from a quick search, the only thing I could find was turning a string into a list, but not the other way around
[08:20:17] <antoszka> It works both ways.
[08:20:45] <antoszka> COERCE works similar for this particular case, but args are reversed
[08:21:15] <antoszka> * (coerce '(#\f #\o #\o) 'string)
[08:21:17] <antoszka> "foo"
[08:21:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:21:49] <White_Flame> and coerce works the other way, too, going string to list
[08:22:04] <Spawns_Carpet[m]> that is good to know
[08:22:06] <mfiano> (map 'string #'identity list) is another
[08:22:12] <White_Flame> oh, concatenate goes backwards, too
[08:22:19] <antoszka> yep
[08:22:37] <White_Flame> I would say that coerce is probably the most intentionally correct method
[08:22:41] <antoszka> I agree.
[08:22:51] <Spawns_Carpet[m]> I hate to ask another noob question, but how can I represent special chars like \n or \t with the #\x char syntax
[08:23:03] <mfiano> #\newline etc
[08:23:04] <antoszka> #\Newline #\Tab
[08:23:10] <White_Flame> #\Space
[08:23:17] <antoszka> Most of them have reasonable (unicode-compatible) names
[08:23:22] <Spawns_Carpet[m]> darn, it's that easy
[08:23:31] <Spawns_Carpet[m]> that's pretty cool
[08:23:36] <antoszka> Try converting a string into a list of chars
[08:23:41] <antoszka> you'll find out the names
[08:23:54] <White_Flame> http://www.lispworks.com/documentation/lw61/CLHS/Body/13_ag.htm
[08:23:58] <Spawns_Carpet[m]> i didn't think of that but that's a great idea
[08:24:33] *** Quits: semz (~none@user/semz) (Ping timeout: 250 seconds)
[08:24:38] <antoszka> Yeah, that's the minimum the standard mandates, but most CLs these days will do unicode names
[08:24:39] <mfiano> The inspector on any object is your friend
[08:25:07] <White_Flame> (loop for x from 0 to 31 collect (code-char x)) => lots of names
[08:25:18] <antoszka> like #\Reversed_Hand_with_Middle_Finger_Extended
[08:25:27] <Spawns_Carpet[m]> nice
[08:25:49] <antoszka> * (coerce '(#\Reversed_Hand_with_Middle_Finger_Extended) 'string)
[08:25:50] <antoszka> "ðŸ–•"
[08:25:53] <antoszka> if you excuse :)
[08:26:16] <White_Flame> now of course this is all technically implementation-dependent behavior, but things are converging on unicode
[08:26:25] <antoszka> yep
[08:26:50] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[08:30:49] <Spawns_Carpet[m]> i am on SBCL
[08:31:02] <Spawns_Carpet[m]> i imagine thats the most common implementation
[08:31:31] <White_Flame> I think that's a reasonable assumption
[08:32:04] <Spawns_Carpet[m]> the more I learn CL the more impressed with it I am, especially for how old it is
[08:32:18] <White_Flame> I think that's a common impression
[08:32:18] <Spawns_Carpet[m]> its lots of fun to use as well
[08:33:12] <dbotton> I know I have not been around much, been busy with personal matters and a project I had to complete (pay for a wedding for son). I started work again on CLOG. I've added a 4th demo of a database driven website with content management built in (super simple so far but purpose is to demo ease of using CLOG for this) - https://github.com/rabbibotton/clog/blob/main/demos/04-demo.lisp
[08:35:24] *** Quits: robin (~robin@user/terpri) (Read error: Connection reset by peer)
[08:35:40] *** Joins: robin (~robin@user/terpri)
[08:36:20] <White_Flame> dbotton: neat, I wasn't familiar with that before, and is definitely the sort of thing I've wanted
[08:37:21] *** Joins: semz (~none@user/semz)
[08:37:30] <dbotton> One stop for GUIs on your machine and Websites on the net
[08:38:19] <beach> Spawns_Carpet[m]: Old versions of languages other than Common Lisp become unusable, because the specification evolves.  And the specification evolves because that's the only way new features can be added to those languages.  Not so with Common Lisp.
[08:38:21] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[08:45:47] <dre> I'm really mad because I can't get SBCL working on 'my lisp machine'
[08:46:02] <dre> ( which is an a4 eink tablet + bt keyboard so i can do things outside)
[08:46:33] <Spawns_Carpet[m]> very true beach. I am looking at some looping libraries that add in custom loop syntax and they are super impressive in what they can do without having to extend the language
[08:46:45] <dre> but I've got fennel working, which might be ok
[08:46:54] <Spawns_Carpet[m]> i actually like 'loop' a lot even though people seem to not like it very much
[08:46:55] <hayley> lol
[08:47:51] <beach> Spawns_Carpet[m]: I like LOOP fine.  And I decided to use it as the main looping construct in SICL code, which is also why I created a new version of LOOP for SICL.
[08:48:17] <Spawns_Carpet[m]> what is SICL beach? is that your lisp that you are working on
[08:48:49] <beach> minion: Please tell Spawns_Carpet[m] about SICL.
[08:48:50] <minion> Spawns_Carpet[m]: SICL: SICL is a (perhaps futile) attempt to re-implement Common Lisp from scratch, hopefully using improved programming and bootstrapping techniques. See https://github.com/robert-strandh/SICL
[08:48:52] <hayley> I quite like LOOP too, though the only thing that stands out perhaps is collecting list without the PUSH/REVERSE dance, recursion, or some mapping function that I forgot the name of.
[08:50:25] <hayley> But, then again, it could also be written as a reduction, just the same as "maximising" or "minimizing" or "counting" or so on. So I have failed to convince anyone that it's any good, somehow.
[08:51:33] <Spawns_Carpet[m]> that's really cool beach
[08:53:14] <beach> Thanks.
[08:53:52] <White_Flame> hayley: doing a common reduction in a single word is a clear ease-of-use advantage
[08:54:06] <Spawns_Carpet[m]> that looks like a HECK of an undertaking for sure
[08:54:38] <Spawns_Carpet[m]> what is a common reduction? would that be like filter/map/etc?
[08:54:53] <White_Flame> max/min/count/collect
[08:55:18] <hayley> A reduction is performed with REDUCE in Common Lisp. Some other languages might call it fold or foldr and foldl (fold-left, fold-right, for which order the reduction is done).
[08:55:18] <White_Flame> but it's especially easy as those terms can be behind loop conditionals as well
[08:55:24] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[08:55:53] *** Joins: Oladon (~olad@98.43.81.226)
[09:08:36] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 265 seconds)
[09:16:05] *** Quits: Guest1099 (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Quit: Leaving)
[09:16:13] *** Quits: Inline (~Inline@2a02:908:1252:7a80:731:d6ac:6e05:dbb3) (Quit: Leaving)
[09:25:14] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[09:26:29] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[09:31:17] *** Quits: elderK (uid205007@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:58:38] *** Joins: karlosz (~karlosz@47.151.136.69)
[10:34:22] *** Joins: gaqwas (~john@dynamic-077-002-023-195.77.2.pool.telefonica.de)
[10:37:44] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 256 seconds)
[10:39:15] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[10:39:22] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:39:33] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[10:42:48] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[10:44:40] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[10:46:14] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[10:58:18] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[10:59:12] *** Joins: rotateq (~user@b2b-78-94-235-194.unitymedia.biz)
[11:01:25] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 250 seconds)
[11:02:04] *** Joins: amb007 (~a_bakic@225.198.204.77.rev.sfr.net)
[11:08:09] *** Joins: VincentVega (~user@212.241.24.160)
[11:08:18] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[11:09:34] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[11:10:00] *** Joins: lrkrr (~ll@2601:8c1:80:70d0::8da2)
[11:14:36] *** Joins: s-liao (~s-liao@101.86.101.64)
[11:17:58] *** Quits: amb007 (~a_bakic@225.198.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[11:20:02] *** Joins: vegai_ (vegai@kapsi.fi)
[11:20:13] *** vegai_ is now known as vegai
[11:20:54] *** Joins: amb007 (~a_bakic@189.107.204.77.rev.sfr.net)
[11:23:34] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:b451:65f7:f961:6c1a)
[11:31:02] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[11:32:27] *** Quits: gaqwas (~john@dynamic-077-002-023-195.77.2.pool.telefonica.de) (Remote host closed the connection)
[11:32:41] *** Joins: gaqwas (~john@dynamic-077-002-023-195.77.2.pool.telefonica.de)
[11:36:05] *** Quits: amb007 (~a_bakic@189.107.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[11:39:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:40:15] *** Joins: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se)
[11:44:19] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[11:46:45] *** Joins: amb007 (~a_bakic@56.247.204.77.rev.sfr.net)
[11:46:45] *** Quits: amb007 (~a_bakic@56.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[11:47:02] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:49:05] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[11:49:19] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[11:57:45] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[11:59:32] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[12:18:59] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:22:39] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[12:30:07] *** Quits: santiagopim[m] (~santiagop@2001:470:69fc:105::e57d) (Quit: You have been kicked for being idle)
[12:35:54] *** Joins: s-liao (~s-liao@101.86.101.64)
[12:38:33] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[12:45:10] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[12:45:16] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[12:45:28] *** Joins: Colt (~Colt@user/colt)
[12:46:58] *** Joins: s-liao (~s-liao@101.86.101.64)
[12:53:00] *** Quits: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c) (Ping timeout: 268 seconds)
[13:03:08] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Remote host closed the connection)
[13:07:01] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[13:10:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[13:14:27] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Read error: Connection reset by peer)
[13:17:09] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[13:20:37] *** Joins: Devon (~devon@pool-108-28-172-103.washdc.fios.verizon.net)
[13:34:37] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[13:42:57] *** Joins: VincentV` (~user@212.241.24.160)
[13:44:35] *** Quits: VincentVega (~user@212.241.24.160) (Ping timeout: 265 seconds)
[13:47:47] *** Quits: travv0 (sid293381@user/travv0) (Ping timeout: 264 seconds)
[13:47:55] *** Joins: random-nick (~random-ni@87.116.165.220)
[13:48:42] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[13:49:54] *** Joins: ullbeking (sid5364@user/ullbeking)
[13:50:18] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[13:50:58] *** Joins: travv0 (sid293381@user/travv0)
[13:50:59] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:54:19] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 250 seconds)
[13:55:30] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:55:35] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:05:51] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Ping timeout: 265 seconds)
[14:12:22] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[14:18:25] *** Quits: VincentV` (~user@212.241.24.160) (Ping timeout: 265 seconds)
[14:23:05] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:30:59] *** Quits: beach (~user@2a01:cb19:150:3400:c44c:57b2:d264:3f65) (Remote host closed the connection)
[14:38:48] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[14:38:56] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Ping timeout (120 seconds))
[14:39:11] *** Joins: s-liao (~s-liao@101.86.101.64)
[14:54:39] *** Quits: sgithens (sid10659@helmsley.irccloud.com) (Read error: Connection reset by peer)
[14:54:39] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[14:54:46] *** Joins: sgithens (sid10659@helmsley.irccloud.com)
[14:54:53] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[14:56:42] *** Quits: jmercouris (sid438340@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[14:57:34] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[14:57:59] *** Quits: griffinmb (sid410590@helmsley.irccloud.com) (Ping timeout: 264 seconds)
[14:59:30] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 265 seconds)
[14:59:40] *** Joins: jmercouris (sid438340@hampstead.irccloud.com)
[15:00:02] *** Joins: amb007 (~a_bakic@40.247.204.77.rev.sfr.net)
[15:00:04] *** Joins: pl (sid98063@helmsley.irccloud.com)
[15:00:04] *** ChanServ sets mode: +o pl
[15:01:09] *** Joins: griffinmb (sid410590@helmsley.irccloud.com)
[15:06:59] *** Quits: d_run (sid83858@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[15:07:14] *** Joins: d_run (sid83858@hampstead.irccloud.com)
[15:09:39] *** Quits: amb007 (~a_bakic@40.247.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[15:10:22] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[15:20:29] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[15:23:46] *** Joins: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[15:23:49] *** Joins: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[15:25:02] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:27:22] *** Joins: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de)
[15:27:44] *** Joins: spiaggia (~user@11.255.71.37.rev.sfr.net)
[15:42:55] *** Joins: VincentVega (~user@212.241.24.160)
[16:00:10] *** Quits: spiaggia (~user@11.255.71.37.rev.sfr.net) (Ping timeout: 256 seconds)
[16:01:29] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:08:29] *** Quits: Posterdati (~posterdat@host-95-233-159-142.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[16:08:40] *** Joins: spiaggia (~user@11.255.71.37.rev.sfr.net)
[16:12:55] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[16:13:12] *** Quits: X-Scale (~ARM@46.50.0.92) (Ping timeout: 256 seconds)
[16:17:12] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[16:18:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:18:16] *** Joins: X-Scale (~ARM@83.223.235.65)
[16:21:33] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[16:23:50] *** Quits: Charles_Attends (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[16:24:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:28:50] *** Quits: lrkrr (~ll@2601:8c1:80:70d0::8da2) (Remote host closed the connection)
[16:35:59] <az_reth> Is it possible to initialize an array using a function? As I understand it, :initial-element inserts references to the same object
[16:36:11] <az_reth> Or should I just initialize it after creation?
[16:36:23] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[16:36:35] <Xach> az_reth: after. but you can make it terse with map-into.
[16:45:43] <az_reth> Xach: thanks!
[16:50:05] *** Joins: s-liao (~s-liao@101.86.101.64)
[16:50:50] <jdz> It is also possible to create the array with just MAP.
[16:51:32] <random-nick> doesn't map only create vectors and not multi-dimensional arrays?
[16:51:51] <jdz> (map '(simple-array (unsigned-byte 8) (*)) #'char-code "foobar")
[16:53:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[16:54:12] <_death> (make-array '(2 3) :element-type '(unsigned-byte 8) :displaced-to *)
[16:54:19] <random-nick> ah, map-into also works on sequences and not arrays
[16:58:24] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[17:05:55] *** Joins: yewscion (~yewscion@72-21-196-65.amazon.com)
[17:14:30] *** Joins: pve (~pve@188-67-145-46.bb.dnainternet.fi)
[17:16:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[17:29:38] <drmeister> What implementations of Common Lisp support something like SAVE-LISP-AND-DIE?   SBCL obviously.
[17:30:27] <yitzi> drmeister: uiop has an function so maybe look there.
[17:30:28] <drmeister> Clasp does (I'm currently working on it).   It's a difficult feature to get right.  Especially when we interoperate with C++ and standard unix object files and linking.
[17:30:35] <drmeister> yitzi: Thank you.
[17:32:15] <yitzi> https://gitlab.common-lisp.net/asdf/asdf/-/blob/master/uiop/image.lisp#L334
[17:33:16] <yitzi> Looks like allegro, clisp, ccl, lispworks, sbcl and scl
[17:33:30] <yitzi> That code probably needs to be updated for clasp
[17:34:37] <yitzi> I would think (naively) that clisp would have some that same problems that clasp does.
[17:34:55] *** Joins: Bike (~Glossina@71.69.170.70)
[17:34:55] *** ChanServ sets mode: +o Bike
[17:37:02] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[17:46:16] *** Joins: jealousmonk (~user@2804:431:e7c4:15cc:f258:de9e:9ab0:dc5c)
[17:52:25] <random-nick> mezzano has something similar called taking a snapshot, where you can overwrite the image on the mezzano partition with the current image
[17:52:34] <random-nick> there's no dying involved though
[17:55:32] <drmeister> random-nick: Thank you.
[17:55:56] <drmeister> Is not dying very valuable?   It would complicate the implementation but it's doable.
[17:56:55] <yitzi> Not dying would seem useful for Smalltalk like development?
[17:57:12] <random-nick> for mezzano it is since it would require rebooting the machine, but for something running under a host OS I don't think it is since SBCL still doesn't have such a feature
[17:58:00] <random-nick> even thought SAVE-LISP-AND-DIE was renamed from CMUCL's SAVE-LISP so that there might be a save which doesn't die
[18:02:11] * drmeister leans more towards SAVE-LISP-AND-DIE-DIE-DIE!
[18:02:48] <drmeister> ...as an implementer that is.
[18:03:13] <_death> save-lisp-and-I
[18:03:29] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 250 seconds)
[18:03:42] *** Quits: X-Scale (~ARM@83.223.235.65) (Ping timeout: 256 seconds)
[18:07:55] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:14:04] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[18:17:06] *** Joins: ym (~ym@95.106.10.166)
[18:18:18] *** Joins: X-Scale (~ARM@83.223.235.65)
[18:19:34] <jackdaniel> (quit :exit-code (coerce list 'integer))
[18:19:46] <rotateq> LISP will never die :)
[18:19:55] <lisp123> Is there a way to do pacakge inferred systems with a "." separator instead of "/"?
[18:21:15] *** Quits: rotateq (~user@b2b-78-94-235-194.unitymedia.biz) (Remote host closed the connection)
[18:21:52] *** Joins: tyson2 (~user@cpe003044346b11-cm688f2ec139b0.sdns.net.rogers.com)
[18:22:26] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
[18:24:47] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[18:34:27] *** Joins: igemnace (~ian@user/igemnace)
[18:41:34] *** Joins: djuber (~user@65.79.128.64)
[18:43:29] *** Joins: green__ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[18:45:57] *** Quits: green_ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 250 seconds)
[18:45:57] *** Quits: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Ping timeout: 250 seconds)
[18:46:34] *** Joins: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca)
[18:49:34] *** Quits: atgreen (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Read error: Connection reset by peer)
[18:49:34] *** Quits: green__ (~green@bras-base-toroon0628w-grc-49-142-112-220-24.dsl.bell.ca) (Read error: Connection reset by peer)
[19:06:28] *** Quits: tyson2 (~user@cpe003044346b11-cm688f2ec139b0.sdns.net.rogers.com) (Remote host closed the connection)
[19:07:59] <NotThatRPG> lisp123: Not built in, but it is probably doable given the source..
[19:08:41] <lisp123> NotThatRPG: Yeah, I am just about to write a function that creates a DEFSYSTEM and converts :import-from to :depends-on and then for each package I'll just run that function
[19:09:12] <lisp123> Does package-inferred-systems create an .asd for each component?
[19:12:55] <NotThatRPG> No: it does not do any file-to-file translation -- everything is in memory.
[19:13:06] *** NotThatRPG is now known as NotThatRPG_away
[19:13:36] <NotThatRPG_away> lisp123: I have to go for a while, you can hit me up later or you could try the asdf-devel email list.
[19:14:05] <lisp123> NotThatRPG_away: cheers
[19:14:47] *** Quits: NotThatRPG_away (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:14:48] <spiaggia> NotThatRPG_away: I like your new nick. :)
[19:22:22] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[19:25:52] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[19:27:04] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[19:29:25] *** Joins: lisp123_ (~lisp123@45.86.202.96)
[19:29:26] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[19:30:08] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[19:30:36] *** Quits: yewscion (~yewscion@72-21-196-65.amazon.com) (Quit: Connection closed)
[19:31:31] *** Joins: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it)
[19:31:54] *** Quits: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it) (Client Quit)
[19:32:45] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[19:40:38] *** Joins: NotThatRPG (~NotThatRP@mail.sift.net)
[19:41:44] *** Quits: Cymew (~ante@c-e989225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 256 seconds)
[19:46:11] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[19:48:04] <etimmons> lisp123: Do you really need each file to have its own system? If not, you may be interested in <https://gitlab.common-lisp.net/etimmons/asdf-inferred-components/>. I've got a local branch I'm working on that lets you take the package-inferred approach with arbitrary names for packages.
[19:49:29] *** Joins: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com)
[19:54:59] *** Quits: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864) (Ping timeout: 264 seconds)
[19:55:34] *** Joins: yewscion (~yewscion@72-21-196-65.amazon.com)
[19:56:20] *** Joins: taiju (~taiju@240b:253:ec40:2400:20e3:d321:f9f8:1864)
[19:56:21] <lisp123_> etimmons: That looks interesting, esp. the one package per system solution
[19:57:32] <lisp123_> What I was thinking was: Assume package name = system name. Read all symbols in a package, extract their package name and then do a :depends-on for those systems
[19:59:00] <lisp123_> So one system is created for each package
[20:01:00] *** Quits: frgo (~frgo@p548a30d7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:01:12] <lisp123_> But I like your approach better
[20:02:32] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:05:46] *** Joins: Lycurgus (~juan@98.4.112.204)
[20:08:14] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[20:09:27] <Guest74> doesn't this encourage non-reusable components?
[20:11:35] <lisp123_> etimmons: I have thought some more, and your approach makes perfect sense for one package across multiple files
[20:11:48] <lisp123_> Thanks for sharing, I will use that when I am in that situation
[20:11:57] <lisp123_> Guest74: In what way?
[20:12:25] <lisp123_> etimmons: Is it okay to start using the local branch?
[20:12:35] <lisp123_> (no rush)
[20:13:36] <Guest74> how do you load a package in the system without loading both the whole system and this AIC
[20:14:05] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[20:14:08] <Guest74> though I've noticed that it's kinda the norm.
[20:14:10] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[20:14:42] <lisp123_> Ah I see
[20:15:50] <lisp123_> That's in relation to the "One package per file" section right?
[20:16:41] <lisp123_> I also had a similar view (not in relation to this project, but generally), which is why I was going to create 1 system for each 1 package / 1 file file
[20:17:10] <etimmons> lisp123_: I wouldn't be surprised if there are bugs on the main branch, but I think it's usable (and welcome any bug reports). My local branch is horribly broken ATM, but I can ping you when it's fixed and pushed.
[20:18:00] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[20:18:34] <lisp123_> etimmons: Thansk! Will do
[20:18:50] <etimmons> Guest74: If you want each individual file to be loadable by someone else, then package-inferred-system is definitely what you want. I personally like having a lot of files but don't want each file to be some sort of entry point for others to depend on.
[20:18:52] *** Joins: Oladon (~olad@98.43.81.226)
[20:19:37] *** Joins: aeth (~aeth@user/aeth)
[20:21:10] <Guest74> I think I just think more in terms of reusability.  I see so much duplication in multiple libraries, hidden in 'interior' packages.
[20:22:48] <etimmons> I'd argue that means those should be split into standalone systems and explicitly advertised as something for people to use. In the package-inferred-system approach, it can be tough to figure out if some system is internal or meant to be used by others.
[20:23:33] <Guest74> I'd argue that too.  But it's not what seems to happen.
[20:25:42] *** Joins: frgo (~frgo@dynamic-046-114-144-166.46.114.pool.telefonica.de)
[20:25:42] *** Quits: frgo (~frgo@dynamic-046-114-144-166.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[20:26:08] *** Joins: frgo (~frgo@2a02:3038:408:985d:de0:9320:10d9:f95b)
[20:27:11] *** Joins: frgo__ (~frgo@2a02:3038:408:985d:483b:3323:66b0:af89)
[20:28:05] *** Joins: frgo_ (~frgo@2a02:3038:408:985d:3d08:4ea:f792:b4fb)
[20:29:30] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[20:29:40] *** Joins: Catie (~user@user/catie)
[20:31:04] *** Quits: frgo (~frgo@2a02:3038:408:985d:de0:9320:10d9:f95b) (Ping timeout: 265 seconds)
[20:32:02] *** Quits: frgo__ (~frgo@2a02:3038:408:985d:483b:3323:66b0:af89) (Ping timeout: 265 seconds)
[20:51:22] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 265 seconds)
[20:52:09] *** Joins: tyson2 (~user@24.114.64.185)
[20:58:05] *** Joins: hhdave_ (~hhdave@ip212.ip-193-70-71.eu)
[20:59:29] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 264 seconds)
[20:59:29] *** hhdave_ is now known as hhdave
[21:11:21] *** Joins: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d)
[21:17:37] *** Quits: spiaggia (~user@11.255.71.37.rev.sfr.net) (Ping timeout: 250 seconds)
[21:17:37] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Read error: Connection reset by peer)
[21:18:00] *** Joins: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com)
[21:21:13] <_death> maybe a little duplication is better than leftpad libraries
[21:22:36] *** Quits: amb007 (~a_bakic@host.26.88.68.195.rev.coltfrance.com) (Ping timeout: 256 seconds)
[21:23:17] <Guest74> leftpad?
[21:23:25] *** Joins: amb007 (~a_bakic@40.247.204.77.rev.sfr.net)
[21:25:16] <Guest74> ah, nevermind
[21:29:45] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:31:10] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[21:36:52] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[21:41:13] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:42:20] *** Quits: ym (~ym@95.106.10.166) (Quit: Leaving)
[21:42:45] *** Quits: amb007 (~a_bakic@40.247.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[21:43:05] *** Joins: amb007 (~a_bakic@229.145.204.77.rev.sfr.net)
[21:44:05] *** Joins: ym (~ym@95.106.10.166)
[21:44:35] *** Quits: lisp123_ (~lisp123@45.86.202.96) (Quit: Leaving...)
[21:52:20] <NotThatRPG> etimmons: ping?
[21:52:44] <etimmons> NotThatRPG: I was just about to send you a "sorry..." lol
[21:54:09] <NotThatRPG> Kind of OT: are you informed about GitHub actions? I am wondering if the problem I see that looks like lisp hanging is the CI job getting cut off for exceeding an *aggregate* compute time budget.
[21:54:24] <NotThatRPG> I assumed they had only a duration constraint, but it's possible not.
[21:55:22] <etimmons> Ah. That could make sense. But I'm not up to speed on them enough to know if that's what's happening.
[21:55:44] <etimmons> I'm exclusively a Gitlab CI guy since before Actions really took off
[22:01:49] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 250 seconds)
[22:03:29] *** Joins: aeth (~aeth@user/aeth)
[22:03:59] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 250 seconds)
[22:14:02] *** Quits: epolanski (uid312403@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:15:28] *** Quits: tyson2 (~user@24.114.64.185) (Remote host closed the connection)
[22:15:42] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[22:16:25] *** Joins: samps (~samps@177.25.90.74)
[22:17:41] <samps> Hey folks. I'm trying to get into common lisp but I can't make one project with barely any code be picked up by `ql:quickload`. At the moment I reverted back to using `:serial t` and listing the files under `:components` but I would still like to understand what I'm doing wrong. I have more context here, if it helps:
[22:17:42] <samps> https://stackoverflow.com/questions/70006072/cant-get-a-sample-common-lisp-system-to-work-on-mac-with-package-inferred-syste/70007532?noredirect=1#comment123757316_70007532
[22:19:35] <Xach> samps: (ql:register-local-projects) may help
[22:19:35] *** Quits: amb007 (~a_bakic@229.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[22:20:11] <samps> ran it a few times after finding it... somewhere on the internet, but it seemed to have no effect :/
[22:20:35] <Xach> samps: are you up for trying a few things?
[22:20:52] <samps> this is invoked when we choose `2: [REGISTER-LOCAL-PROJECTS] Register local projects and try again` on the condition raised by quicklisp, right?
[22:20:58] <samps> Xach of course :)
[22:21:31] <Xach> Hmm, that's not part of vanilla quicklisp.
[22:21:44] <Xach> At least, I don't think it is.
[22:22:01] <samps> hmmmm, interesting. This was installed by `brew install roswell`. I think it's sbcl-bin, I can pull up the version for you
[22:22:15] <samps> I haven't done anything else besides having roswell installed
[22:22:22] <Xach> samps: what do you get when you evaluate ql:*local-project-directories*?
[22:23:12] <samps> `#P"/Users/lucas.sampaio/.roswell/lisp/quicklisp/local-projects/`. OH.
[22:23:13] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:23:26] <etimmons> samps: one error I see is that if you're using package-inferred-system, in main.lisp the package name should be foo/main with a nickname foo, you currently have it the other way around.
[22:23:30] <Xach> I don't think that's very nice to do.
[22:23:41] <samps> that likely explains it. So It's a roswell-specific thing, let me try to move it to this particular local-projects location
[22:23:48] <Xach> (Change how things are laid out so that people who know quicklisp can't help as easily, that is.)
[22:24:14] <samps> etimmons thanks for the tip! I'll fix this right away
[22:25:01] <etimmons> Xach: Roswell installs the entire QL tree under ~/.roswell/lisp/quicklisp :(
[22:25:20] <samps> now it works. Damn, I was sure it was something simple
[22:25:24] <samps> and it is, really simple
[22:25:44] *** Joins: karlosz (~karlosz@47.151.136.69)
[22:25:46] <Xach> etimmons: i guess it makes some sense, but it's a little frustrating.
[22:26:08] * Xach is far from blameless in making things easy to troubleshoot and communicate about
[22:26:15] <samps> I cloned a few open source repos to the wrong place. This explains why `pokepay/paras` didn't load with quicklisp... it likely wasn't in the dist to begin with, but `ambrevar/fof` was
[22:26:46] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (Ping timeout: 245 seconds)
[22:27:05] *** Joins: ryanbw (~ryanbw@mab.sdf.org)
[22:28:18] <samps> thanks for the help, folks! I'm coming from Clojure and will do some experiments with CL now
[22:34:26] *** Joins: keepitalphanumer (~user@user/keepitalphanumer)
[22:36:25] <keepitalphanumer> Hi all, i have a question: Why (map-into '(0 1) #'+ '(1 1)) returns (1 1) and not (1 2)?
[22:37:54] <Catie> I wonder if it has something to do with modifying constant data?
[22:38:57] <Xach> samps: the function is applied to the sequences after the function, not the sequence preceding it. (the preceding sequence receives the results.)
[22:39:08] <Xach> modifying constant data is also not good
[22:39:17] <samps> maybe you're replying to the wrong person?
[22:39:22] <Xach> yes, i am
[22:39:27] <Xach> keepitalphanumer is the person
[22:41:18] <keepitalphanumer> Got it... it would be something like "(0 1) <-- ((+ 1) (+ 1))" (This is not an valid expression)
[22:41:44] <Xach> keepitalphanumer: right.
[22:42:00] <_death> (mapcar #'+ '(0 1) '(1 1))
[22:42:19] <keepitalphanumer> Yes, that's better.
[22:42:23] <Xach> you could do something like: (let ((list (list 0 1))) (map-into list #'+ list '(1 1))))))
[22:44:47] <keepitalphanumer>   @Xach, thanks!
[22:45:14] <keepitalphanumer> Well, see you around. Thank you.
[22:45:16] *** Parts: keepitalphanumer (~user@user/keepitalphanumer) (ERC (IRC client for Emacs 27.2))
[22:48:56] *** Joins: cage (~cage@dynamic-adsl-94-34-55-34.clienti.tiscali.it)
[22:49:27] *** Joins: paule32 (~paule32@user/paule32)
[22:53:28] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:02:02] *** Joins: Inline (~Inline@2a02:908:1252:7a80:e1d1:e64a:139f:9e8)
[23:06:35] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[23:06:42] *** Quits: rain3 (~rain3___@2a02:2f09:d10a:400:9e2f:eb47:e2ae:761d) (Ping timeout: 265 seconds)
[23:12:23] <NotThatRPG> The QL issue above suggests another question -- anyone know how roswell interacts with saved images?
[23:12:51] <NotThatRPG> I mean, I would hope that an image being built from a roswell lisp wouldn't make a difference, but what do I know?
[23:13:20] <NotThatRPG> (question relevant to using roswell to test CL system in GitHub actions)
[23:17:18] *** Quits: ebrasca (~user@librepanther.com) (Remote host closed the connection)
[23:21:54] *** Joins: tfeb (~tfb@88.98.95.237)
[23:24:39] <lisp123> etimmons: This is probably too primitive for you, but in case its useful as an idea - https://plaster.tymoon.eu/view/2713#2713 (don't mind the indenting) --> if we assume package names = system names in a one package per file workflow, we can use this to automate some of the :depends-on clauses
[23:25:06] <lisp123> I imagine package-inferred-systems does something similar, but just in case its useful..
[23:29:56] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[23:30:16] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:36:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:39:06] *** Parts: VincentVega (~user@212.241.24.160) (ERC (IRC client for Emacs 27.2))
[23:45:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:e1d1:e64a:139f:9e8) (Remote host closed the connection)
[23:54:55] *** Quits: tfeb (~tfb@88.98.95.237) (Ping timeout: 250 seconds)
[23:55:49] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7839:e0f2:7ca6:b112)
[23:56:57] *** Quits: frgo_ (~frgo@2a02:3038:408:985d:3d08:4ea:f792:b4fb) (Remote host closed the connection)
[23:57:15] *** Joins: tyson2 (~user@cpe44d9e795a64f-cm688f2e2dfaa0.sdns.net.rogers.com)
[23:57:54] <Spawns_Carpet[m]> is it a bad thing that lisps tend to use linked lists and their most commonly used data structure? I was talking elsewhere and people seem to strongly dislike linked lists for some reason
[23:59:46] <Catie> Nah, not really
