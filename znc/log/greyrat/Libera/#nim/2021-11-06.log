[00:20:36] <FromDiscord> <Elegantbeef> @Ty\: i dont think there is, the main difference i think is that the Nim ast is larger and slightly more complicated. I guess also that they're written in Nim instead of lisp üòÄ
[00:31:37] *** Quits: cyraxjoe (~joe@201.159.96.1) (Quit: I'm out!)
[00:33:16] *** Joins: cyraxjoe (~joe@201.159.96.1)
[00:56:31] *** Joins: mst_ (~matthewt@vps-6c71e929.vps.ovh.net)
[00:57:10] *** Quits: mst_ (~matthewt@vps-6c71e929.vps.ovh.net) (Changing host)
[00:57:10] *** Joins: mst_ (~matthewt@perl/shadowcat-mst/chainsaw-wielder)
[00:57:15] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 268 seconds)
[00:57:29] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (Killed (sodium.libera.chat (Nickname regained by services)))
[00:57:29] *** mst_ is now known as mst
[01:06:46] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[01:36:18] <tk> how do you pass a nim proc to an imported C function expecting a ptr to a proc?
[01:38:08] <FromDiscord> <Elegantbeef> declare it with `{.cdecl.}`
[01:39:03] <tk> thanks
[02:18:54] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:46:46] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[03:50:44] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3E9I
[03:52:42] <FromDiscord> <Elegantbeef> You can cheat
[03:53:00] <FromDiscord> <Elegantbeef> `proc identity(_: typedesc[Matrix4Type]): Matrix4Type`
[03:53:19] <FromDiscord> <IsaacPaul> oh hmm..
[03:53:37] <FromDiscord> <Elegantbeef> You then Can do the exact syntax you want
[03:54:04] <FromDiscord> <IsaacPaul> are there any drawbacks to this cheat? or can I do with no repercussions? lol
[03:54:13] <FromDiscord> <Elegantbeef> There are no drawbacks
[03:54:35] <FromDiscord> <IsaacPaul> Alright sounds good to me haha
[03:54:39] <FromDiscord> <Elegantbeef> You can even do it with `init` and `new` to be more generic supporting
[03:55:10] <FromDiscord> <IsaacPaul> That's pretty cool
[05:29:59] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:36:41] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[06:37:16] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[06:45:06] *** Quits: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com) (Quit: Ping timeout (120 seconds))
[06:45:24] *** Joins: Onionhammer (~onionhamm@207-153-1-151.fttp.usinternet.com)
[07:10:07] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:45:24] <nrds> <06Prestige99> Why was cuint deprecated btw, is it just cint now?
[07:46:58] <FromDiscord> <Elegantbeef> Who said it was deprecated?
[07:48:00] <nrds> <06Prestige99> oh I meant cuchar
[07:48:10] <nrds> <06Prestige99> build warnings I'm seeing with 1.6
[07:48:29] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/system.html#cuchar
[08:37:26] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3Eai
[08:38:26] <FromDiscord> <Elegantbeef> does `nodecl` help?
[08:38:34] <FromDiscord> <impbox [ftsf]> just about to test that
[08:38:42] <FromDiscord> <impbox [ftsf]> seems like it might be the thing
[08:39:10] <FromDiscord> <Elegantbeef> the cdecl might be the issue
[08:39:17] <FromDiscord> <impbox [ftsf]> for some reason i assumed importc would not generate C code for it since it presumably already exists in C
[08:39:31] <FromDiscord> <impbox [ftsf]> nah was the same without cdecl, except it was then nimcall
[08:39:38] <FromDiscord> <impbox [ftsf]> but it compiled with nodecl \o/
[08:39:46] <FromDiscord> <Elegantbeef> It shouldnt, so it's odd that it does
[08:45:21] <FromDiscord> <reilly> In reply to @Elegantbeef "https://nim-lang.org/docs/system.html#cuchar": Wow, deprecated twice, harsh
[08:49:08] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 260 seconds)
[08:49:44] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 268 seconds)
[08:50:35] *** Joins: robertmeta (sid514@user/robertmeta)
[08:50:49] *** Joins: euantorano_ (sid180289@helmsley.irccloud.com)
[08:50:55] *** Quits: euantorano (sid180289@id-180289.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[08:50:55] *** euantorano_ is now known as euantorano
[08:51:48] *** Joins: ormiret (sid314108@2a03:5180:f:2::4:cafc)
[09:08:10] <FromDiscord> <huantian> but one is boldly deprecated
[09:32:02] <FromDiscord> <Rika> It‚Äôs so deprecated it had to be deprecated twice
[10:01:37] <NimEventer> New thread by Cusaint: Indentation in Nim, see https://forum.nim-lang.org/t/8596
[10:06:12] <FromDiscord> <Rika> not again
[10:08:53] <FromDiscord> <Ricky Spanish> Pretty sure can just auto format the vast majority of the time not really seeing why this is a topic tbh
[10:11:55] <FromDiscord> <Ricky Spanish> Anyway, if I want to replicate a local nim environment to scale up a number of dev machines do I just need to copy my nim cache folder? I want that my locally compiled packages etc don't need recompiled if I basically create a new dev machine using terraform, I. E machine from scratch per build but with a cloned cache but I'm unsure if it's more complex than this from nims side
[10:11:58] <FromDiscord> <Elegantbeef> People like talking about two things Nim has
[10:12:05] <FromDiscord> <Elegantbeef> And neither are important
[10:12:29] <FromDiscord> <Elegantbeef> It's always "space indentation sucks" and "style insensitivity is scary"
[10:14:03] <FromDiscord> <Ricky Spanish> True, close third also has to be why does nim exist when there's rust
[10:16:06] <FromDiscord> <Rika> why does rust exist when theres spark/erlang/every other language
[10:16:42] <FromDiscord> <Ricky Spanish> Agreed, same for all languages, there's ada guys we don't need c
[10:17:06] <FromDiscord> <Rika> im gonna legitimately get pissed off again if i continue thinking about this
[10:17:26] <FromDiscord> <Elegantbeef> Except that ada statement is just true üòõ
[10:17:54] <FromDiscord> <Rika> are you talking about me or ricky
[10:18:22] <FromDiscord> <Elegantbeef> Well only one of you mentioned ada
[10:18:56] <FromDiscord> <Rika> spark -> ada.spark
[10:19:24] <FromDiscord> <Rika> https://en.wikipedia.org/wiki/SPARK_(programming_language)
[10:19:46] <FromDiscord> <Rika> "if you want safety so bad why dont you use a formally proven language"
[10:23:49] <FromDiscord> <Ricky Spanish> Good point actually doesent come up much in those conversations you read just usually devolves into screaming about borrow checkers versus some once encountered edge case they discovered. Like a cult member talking about their life before and after they joined
[10:24:55] <FromDiscord> <Rika> yeah so best not to further discuss
[10:26:06] <FromDiscord> <Ricky Spanish> Agreed, so any advice on the nim cache problem? Can I just dump my cache on another machine?
[10:26:27] <FromDiscord> <Rika> i dont think
[10:26:31] <FromDiscord> <Rika> you can just do that
[10:26:35] <FromDiscord> <Rika> are they the  same arch>
[10:26:58] <FromDiscord> <Ricky Spanish> Yeh same everything in basically spinning up an Ubuntu image with same arch and specs
[10:27:01] <FromDiscord> <Rika> i guess it doesnt hurt to try, see if you get errors and if you do wipe the c cache (keep the packages tho)
[10:27:53] <FromDiscord> <Ricky Spanish> OK will give it a go thanks
[10:29:42] <FromDiscord> <Rika> if theyre all the same like that then i assume its fine, but if OS or whatever differs that would deffo need recompile
[10:29:55] <FromDiscord> <Rika> because of conditional compilation
[13:20:15] <FromDiscord> <sealmove> IC already works on devel for default --gc?
[13:31:49] <FromDiscord> <ratapenado> One of the main Godot "advertiser" is looking for feedback about nim (and other languages) if someone is interested
[13:32:22] <FromDiscord> <sealmove> more concretely? what is he looking for?
[13:48:27] <FromDiscord> <ratapenado> In reply to @‡∏£—î‡∏Ñ…≠‡πì‡πè◊©—î "more concretely? what is": Sorry I forgot the link to his tweet https://twitter.com/NathanGDQuest/status/1456743208071974916?t=3nG4t4vR430cM33xpDJpiQ&s=19
[13:50:09] <FromDiscord> <cuddlefish> sent a code paste, see https://play.nim-lang.org/#ix=3EaW
[13:50:53] <FromDiscord> <cuddlefish> I am getting errors. The node I am looking at is `Ident "moduleA"` but when I do `getImpl` I get this error: `Error: node is not a symbol`
[13:55:04] <FromDiscord> <Rika> Probably needs a typed macro and not an untyped one
[13:55:46] <FromDiscord> <cuddlefish> What would the type look like?
[13:56:21] <FromDiscord> <Rika> ‚Äútyped‚Äù instead of ‚Äúuntyped‚Äù
[13:57:16] <FromDiscord> <cuddlefish> Ah, yes. I just did that but I'm still getting errors :thinkeyes: One second
[13:59:01] <FromDiscord> <cuddlefish> Hm so when I use `typed` then `getImpl` doesn't error, but it results in a `NilLit`
[13:59:46] <FromDiscord> <cuddlefish> which is weird, since the module is not empty. I guess it's not possible to get the implementation of modules then?
[14:02:21] <FromDiscord> <Rika> I think so yes
[14:02:32] <FromDiscord> <Rika> You usually get the implementation of functions in the module
[14:03:14] <FromDiscord> <cuddlefish> Darn, I wanted to have a macro that looks for certain patterns in proc names in modules and generate objects based on that
[14:03:56] <FromDiscord> <cuddlefish> so you don't have to write code for this in every module but just have one central macro that does it all. I guess I'll have to find a different way to do it :)
[14:05:06] <FromDiscord> <cuddlefish> Is there another way to look through the procs of a file without having to write all the code within a macro?
[14:05:21] <FromDiscord> <xflywind> https://github.com/nim-lang/Nim/pull/9560
[14:05:23] <FromDiscord> <xflywind> ^
[14:08:02] <FromDiscord> <cuddlefish> Using `parseStmt(readFile(..))` seems interesting, I'll try that one
[14:42:46] <FromDiscord> <dom96> In reply to @ratapenado "Sorry I forgot the": thank you for linking to this )
[14:42:47] <FromDiscord> <dom96> (edit) ")" => "üôÇ"
[14:55:20] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:17:40] *** Joins: terminalpusher (~terminalp@2a01:586:9810:1:de2d:82df:de81:8ecc)
[16:17:44] <terminalpusher> does Nim depend on libc?
[16:23:13] <terminalpusher> It compiles to C. Does it call the syscalls manually or does it depend on libc and do it with that?
[16:49:43] <FromDiscord> <Rika> yes
[16:49:53] <FromDiscord> <Rika> afaik
[17:07:03] <FromDiscord> <dom96> yeah, can confirm
[17:07:28] <FromDiscord> <exelotl> Unless you use --os:standalone
[17:08:04] <FromDiscord> <dom96> do we have any docs about --os:standalone vs. --os:any
[17:08:08] <FromDiscord> <dom96> still confused by these
[17:19:27] <FromDiscord> <exelotl> I think it's like, --os:any supports every language feature using only a few standard C functions. --os:standalone doesnt use the C stdlib at all, and you're on your own (in more ways than one, as it's pretty much unmaintained) e.g. exceptions don't work.
[17:23:28] <FromDiscord> <exelotl> As I see it, --os:standalone --gc:none is still necessary if you want to write a kernel or something else where you have 100% control over allocations
[17:35:38] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (Ping timeout: 246 seconds)
[18:03:08] <FromDiscord> <tandy> what does the `(a, b)` part mean in the return value?‚Üµ`proc `==`(a, b: Position): bool = system.`==`(a, b) or (a.i == b.i)`
[18:03:16] <FromDiscord> <tandy> i have to have it there otherwise it errors out
[18:04:16] <FromDiscord> <tandy> is it to check if youre passing the same object as both a and b?
[18:05:34] <FromDiscord> <hotdog> In reply to @tandy "is it to check": Is position a ref or plain object?
[18:05:54] <FromDiscord> <Rika> tandy: where?
[18:06:07] <FromDiscord> <tandy> ref i think‚Üµ(@hotdog)
[18:06:13] <FromDiscord> <tandy> `==(a, b) or (a.i == b.i)`
[18:06:19] <FromDiscord> <Rika> wait im rewriting it
[18:06:45] <FromDiscord> <hotdog> Then the first part will check if the refs are equal. Like if they‚Äôre pointing to the same thing
[18:06:52] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3Ec3
[18:07:25] <FromDiscord> <Rika> the first part just uses `system`'s `==`
[18:07:31] <FromDiscord> <Rika> explicitly
[18:07:59] <FromDiscord> <hotdog> Yeah ^
[18:08:13] <FromDiscord> <tandy> yee okay so this
[18:08:38] <FromDiscord> <tandy> tyty
[18:08:41] <FromDiscord> <Rika> i guess
[18:14:13] <FromDiscord> <tandy> someting strange is happening
[18:14:25] <FromDiscord> <tandy> i have an if statement `if bestPosition.score < position.score:`
[18:14:58] <FromDiscord> <tandy> sometimes it goes thru even if `bestPosition.score = 0` and  `position.score = 0`
[18:15:04] <FromDiscord> <tandy> how is that possible
[18:15:52] <FromDiscord> <tandy> same thing is happening when i use `>`
[18:16:03] <FromDiscord> <Rika> how are you debugging that
[18:17:39] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3Ec5
[18:17:55] <FromDiscord> <tandy> just an echo with some stuff inbetween to print the object
[18:18:33] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3Ec7
[18:18:45] <FromDiscord> <el__maco> could be a stupid question but shouldn't the echo be before you set bestPosition equal to position
[18:19:18] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[18:22:02] <FromDiscord> <Rika> yeahhh
[18:22:09] <FromDiscord> <Rika> sorry i was doing something
[18:57:46] <FromDiscord> <sealmove> hello, can someone help me with travis?
[19:04:36] <FromDiscord> <sealmove> I have this .travis.yml https://termbin.com/okpk
[19:09:03] <FromDiscord> <sealmove> and an `install:` script which does this: https://termbin.com/nf9w
[19:09:38] <FromDiscord> <sealmove> the problem is that this takes some times to complete since it downloads and builds nim every time the job is run
[19:09:59] <FromDiscord> <sealmove> is it possible to use a prebuilt image that already has nim installed?
[19:10:12] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[19:10:33] <FromDiscord> <sealmove> and replace the `dist` in the yml files with it, instead of using `bionic`?
[19:10:50] <FromDiscord> <sealmove> or is there another solution?
[19:16:25] *** Joins: arkurious (~arkurious@user/arkurious)
[20:06:35] <FromDiscord> <dom96> Just realised the "Announcements" category on Nim forum is a pretty good way to see our community's amazing projects: https://forum.nim-lang.org/c/1
[20:07:44] <FromDiscord> <sealmove> what should I run instead of ./build_all to skip everything except the compiler (nimsuggest etc)
[20:08:23] <FromDiscord> <dom96> @sealmove I'd recommend both avoiding Travis and using choosenim
[20:08:39] <FromDiscord> <dom96> Here is a great script that does it for GH actions: https://github.com/iffy/install-nim
[20:08:45] <FromDiscord> <sealmove> dom I wish. The project I'm working on already uses Travis
[20:12:02] <FromDiscord> <dom96> well then maybe at least you can port that script to travis
[20:12:50] <FromDiscord> <sealmove> thanks dom
[20:58:11] <FromDiscord> <willyboar> In reply to @dom96 "Just realised the "Announcements"": It would be nice to create a separate show nim tag
[20:58:18] *** Quits: terminalpusher (~terminalp@2a01:586:9810:1:de2d:82df:de81:8ecc) (Remote host closed the connection)
[20:58:40] <FromDiscord> <dom96> agreed, I need to reorganise all the categories a bit.
[20:58:57] <FromDiscord> <dom96> (which requires DB access so I've been putting it off)
[20:59:45] <FromDiscord> <willyboar> or write an admin panel üòÜ
[21:01:27] <FromDiscord> <dom96> yeah, we have one, it just needs more features
[21:15:44] <FromDiscord> <salt rock lamp> why is nim telling me that stdin is not a declared identifier? this program compiled and ran just fine \~2 weeks ago, and i don't think i updated or changed anything in that time. is my nim installation corrupted somehow? i'm using choosenim, so it shouldn't be hard to reinstall, but i'd like to understand what is actually happening here. https://bpa.st/T3HQ
[21:16:34] <FromDiscord> <salt rock lamp> sent a code paste, see https://play.nim-lang.org/#ix=3Edq
[21:23:06] <FromDiscord> <dom96> the fact you're running it as a .nims file is suspicious
[21:23:45] <FromDiscord> <dom96> !eval echo(type(stdin))
[21:23:49] <NimBot> File
[21:24:10] <FromDiscord> <dom96> when in doubt, try the simplest example and see if it compiles for you
[21:24:24] <FromDiscord> <sealmove> for testament, must the `discard """ ... """` thingy be at the first row?
[21:24:34] <FromDiscord> <dom96> (without the shebang)
[21:43:31] <FromDiscord> <salt rock lamp> @dom96\: i removing the shebang doesn't make a difference, nor does changing the file extension between `.nim` and `.nims`
[21:43:32] <FromDiscord> <salt rock lamp> @dom96\: removing the shebang doesn't make a difference, nor does changing the file extension between `.nim` and `.nims`
[21:45:40] <FromDiscord> <codic> So for some reason it fails to link it
[21:45:42] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3Edy
[21:45:57] <FromDiscord> <codic> But the first line of my binding is `{.compile: "duktape.c".}`, and symbol is defined there
[21:46:17] <FromDiscord> <codic> Oh nvm
[21:46:24] <FromDiscord> <codic> that symbol is a macro
[22:40:49] *** Joins: neurocyte0132889 (~neurocyte@45.10.61.172)
[22:40:49] *** Quits: neurocyte0132889 (~neurocyte@45.10.61.172) (Changing host)
[22:40:49] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[23:03:20] <FromDiscord> <yyoncho> sent a long message, see http://ix.io/3Ee2
[23:08:03] <FromDiscord> <Rika> did you import chronos/asyncdispatch before including it?
[23:08:10] <FromDiscord> <Rika> also why are you including it?
[23:10:49] <FromDiscord> <yyoncho> @Rika I will try it. I want to use  `asyncPipeInput` for async input stream processing.
[23:11:15] <FromDiscord> <Rika> i mean
[23:11:20] <FromDiscord> <Rika> why are you including instead of importing
[23:12:14] <FromDiscord> <yyoncho> I am importing it(I am new to nim terminology)
[23:17:05] <FromDiscord> <Recruit_main707> we have an `inlcude` keyword that is similar to import but its actually the same as coying and pasting the file contents in another file
[23:18:03] <FromDiscord> <Elegantbeef> include even
[23:23:44] <FromDiscord> <yyoncho> In reply to @Rika "did you import chronos/asyncdispatch": Not sure if I am reading this correctly. Am I supposed to import `chronos/asyncdispatch`? I was unable to find that. I tried importing asyncdispatch, but still I am getting the same error. This is what my code is limited to:‚Üµ‚Üµ> import asyncdispatch, faststreams/asynctools_adapters
[23:25:43] <FromDiscord> <Recruit_main707> yeah, when you said include Rika thought you were doing something else, thats it i think, if you had included and imported it you would have had some kind of error because you would be redefining stuff
[23:25:43] <FromDiscord> <dom96> seems like a bug in faststreams to me
[23:51:35] <NimEventer> New thread by Gcao: Dynlib passing value back to main app causes SIGSEGV error, see https://forum.nim-lang.org/t/8598
