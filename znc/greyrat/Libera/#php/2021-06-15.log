[00:10:39] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:10:56] *** Quits: ordos (~ordos@user/ordos) (Read error: Connection reset by peer)
[00:18:41] *** Joins: ordos (~ordos@155.93.170.232)
[00:18:41] *** Quits: ordos (~ordos@155.93.170.232) (Changing host)
[00:18:41] *** Joins: ordos (~ordos@user/ordos)
[00:35:27] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Read error: Connection reset by peer)
[00:39:17] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[00:39:33] *** Joins: SPC-B7 (~Email@80.246.141.167)
[00:42:54] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Remote host closed the connection)
[00:46:50] *** Quits: arash (~arash@5.124.31.250) (Ping timeout: 244 seconds)
[00:48:10] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[00:48:40] <biberu> SPC-B7: hey o/
[00:48:55] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[00:51:21] <Rockwood> biberu, o/
[00:51:32] <Rockwood> delboy1978uk, howdy bro?
[00:51:35] <biberu> evening Rockwood :)
[00:51:42] <Rockwood> its morning 
[00:51:44] <Rockwood> lol
[00:51:48] <biberu> XD
[00:51:52] <Rockwood> 1:51AM
[00:52:43] *** Joins: brickfat (~brickfat@user/brickfat)
[01:03:19] *** Quits: delboy1978uk (~delboy197@202.42-132-109.adsl-dyn.isp.belgacom.be) (Quit: delboy1978uk)
[01:03:42] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[01:10:25] <SPC-B7> good morning all
[01:10:32] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[01:10:40] *** Quits: Rockwood (~Rocky@110.225.87.185) (Quit: The Time is Over)
[01:18:30] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[01:20:25] *** Quits: evilbug (~evilbug@188.25.64.77) (Quit: Connection closed)
[01:25:38] *** Quits: delboy1978uk (~delboy197@109.132.42.202) (Quit: delboy1978uk)
[01:29:00] *** Quits: nilson (~nilsonc@204.156.172.42) (Ping timeout: 272 seconds)
[01:36:57] *** Quits: Camilo (~hugh@79-77-215-86.dynamic.dsl.as9105.com) (Ping timeout: 244 seconds)
[01:37:33] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:38:39] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[01:41:58] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:42:07] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 244 seconds)
[01:43:45] *** Quits: fuzzygeorge (~fuzzygeor@office.computeam.com) (Read error: Connection reset by peer)
[01:51:17] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[02:00:31] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 244 seconds)
[02:00:47] *** Joins: keypusher (keypusher@user/keypusher)
[02:06:08] *** Quits: magla (~gelignite@55d4986c.access.ecotel.net) (Quit: Stay safe!)
[02:16:54] *** Joins: HalfWord (~halfword@user/halfword)
[02:26:28] *** zerobeholder is now known as ZeroBeholder
[02:32:42] *** Quits: ericlee (~ericlee@2601:647:4681:3420::1) (Ping timeout: 264 seconds)
[02:36:28] *** ZeroBeholder is now known as zerobeholder
[02:50:32] *** Quits: tex (~super@user/dix) (Ping timeout: 268 seconds)
[02:52:23] *** Quits: ordos (~ordos@user/ordos) (Ping timeout: 244 seconds)
[02:55:32] *** Joins: ordos (~ordos@155.93.170.232)
[02:55:32] *** Quits: ordos (~ordos@155.93.170.232) (Changing host)
[02:55:32] *** Joins: ordos (~ordos@user/ordos)
[03:15:22] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Read error: Connection reset by peer)
[03:21:57] *** Quits: judah (~judah@rrcs-24-123-118-150.central.biz.rr.com) (Quit: Leaving)
[03:41:25] *** Joins: nilson (~nilsonc@73.19.174.124)
[03:41:44] *** Quits: nilson (~nilsonc@73.19.174.124) (Read error: Connection reset by peer)
[03:41:51] *** Joins: nilson (~nilsonc@73.19.174.124)
[03:49:04] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 252 seconds)
[03:52:07] *** Quits: Justin_T (~Justin@user/justin-t/x-2449983) (Quit: Textual IRC Client: www.textualapp.com)
[03:57:49] *** Joins: eck0__ (~Android@047-007-119-133.res.spectrum.com)
[03:59:25] *** Joins: eck0___ (~Android@mobile-166-173-62-183.mycingular.net)
[04:00:04] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 244 seconds)
[04:02:08] *** Quits: eck0__ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 244 seconds)
[04:23:27] *** Joins: kevr (~kevr@user/kevr)
[04:37:24] *** Quits: eck0___ (~Android@mobile-166-173-62-183.mycingular.net) (Read error: Connection reset by peer)
[04:37:54] *** Joins: eck0 (~Android@071-008-102-118.res.spectrum.com)
[04:41:21] *** Joins: eck0__ (~Android@mobile-166-173-62-183.mycingular.net)
[04:45:18] *** Quits: eck0 (~Android@071-008-102-118.res.spectrum.com) (Ping timeout: 264 seconds)
[04:50:30] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 244 seconds)
[04:50:58] *** Joins: de-facto (~de-facto@user/de-facto)
[04:55:19] *** Quits: eck0__ (~Android@mobile-166-173-62-183.mycingular.net) (Read error: Connection reset by peer)
[04:55:41] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[04:56:54] *** Joins: nilsonc_ (~nilsonc@2601:4c0:9:182d:6446:bf:bae3:bb2d)
[04:58:00] *** Quits: nilson (~nilsonc@73.19.174.124) (Ping timeout: 272 seconds)
[05:06:00] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[05:11:13] *** Joins: eck0__ (~Android@047-007-119-133.res.spectrum.com)
[05:14:28] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 272 seconds)
[05:18:28] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[05:22:42] *** Quits: nilsonc_ (~nilsonc@2601:4c0:9:182d:6446:bf:bae3:bb2d) (Ping timeout: 272 seconds)
[05:26:55] *** Joins: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8)
[05:28:39] *** Quits: petris (~quassel@user/petris) (Ping timeout: 272 seconds)
[05:29:39] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 268 seconds)
[05:33:47] *** Joins: gwillickers (~gwillicke@user/gwillickers)
[05:45:22] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[05:48:54] *** Quits: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8) (Ping timeout: 264 seconds)
[05:49:33] *** Quits: HalfWord (~halfword@user/halfword) (Ping timeout: 272 seconds)
[05:50:05] *** Joins: petris (~quassel@user/petris)
[05:52:23] *** Joins: ramsey[m] (~ramsey@user/ramsey)
[05:52:44] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[05:52:57] *** Joins: nilson (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8)
[06:26:50] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:27:04] *** Joins: robertparkerx (~robertpar@45.77.96.128)
[06:27:05] *** Quits: robertparkerx (~robertpar@45.77.96.128) (Changing host)
[06:27:05] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[06:43:35] *** Quits: nilson (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8) (Quit: Leaving)
[06:45:14] *** Joins: nilson (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8)
[07:02:30] *** Joins: Rockwood (~Rocky@110.225.87.185)
[07:06:00] *** Joins: mr_gant_ (~mr_gant@144.48.37.132)
[07:07:17] *** mr_gant_ is now known as mr_gant
[07:29:09] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[07:29:21] *** Joins: Milos (~Milos@gw1.bhd-akl1.xsrv.net.nz)
[07:29:44] *** Milos is now known as Guest7515
[07:36:12] *** Guest7515 is now known as Milos
[07:36:17] *** Quits: Milos (~Milos@gw1.bhd-akl1.xsrv.net.nz) (Changing host)
[07:36:17] *** Joins: Milos (~Milos@user/milos)
[07:42:05] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[07:43:35] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[07:43:50] *** Joins: Milos (~Milos@user/milos)
[07:46:52] *** Joins: P1RATEZ (piratez@user/p1ratez)
[07:51:18] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Quit: WeeChat 3.1)
[08:01:19] *** Joins: arash (~arash@5.124.31.250)
[08:05:16] *** Joins: chao (~stenno@user/stenno)
[08:06:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 244 seconds)
[08:09:54] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[08:23:30] *** Joins: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c)
[08:26:10] *** zerobeholder is now known as ZeroBeholder
[08:27:26] *** Quits: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c) (Read error: Connection reset by peer)
[08:27:41] *** Quits: nilson (~nilsonc@2601:4c0:3:9e8a:a509:4804:c514:19e8) (Ping timeout: 272 seconds)
[08:27:43] *** Joins: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c)
[08:45:47] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[08:50:26] *** Quits: P1RATEZ (piratez@user/p1ratez) (Ping timeout: 272 seconds)
[08:50:26] *** Quits: arash (~arash@5.124.31.250) (Read error: Connection reset by peer)
[08:50:49] *** Joins: arash (~arash@5.124.31.250)
[08:54:15] *** Quits: Rockwood (~Rocky@110.225.87.185) (Quit: The Time is Over)
[08:59:15] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Changing host)
[08:59:15] *** Joins: dmang (~dmang@user/dmang)
[09:00:11] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[09:00:39] *** Quits: dmang (~dmang@user/dmang) (Quit: Leaving)
[09:00:53] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[09:01:47] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Changing host)
[09:01:47] *** Joins: dmang (~dmang@user/dmang)
[09:22:23] *** ZeroBeholder is now known as zerobeholder
[09:23:20] *** Quits: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com) (Remote host closed the connection)
[09:25:16] *** Joins: sheepduck (~sheepduck@cpe98524a8cef7c-cm98524a8cef7a.cpe.net.cable.rogers.com)
[09:27:48] *** Quits: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c) (Ping timeout: 272 seconds)
[09:30:17] *** Joins: chao (~stenno@user/stenno)
[09:34:52] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 244 seconds)
[09:37:56] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[09:39:00] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Remote host closed the connection)
[09:40:01] *** Quits: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net) (Quit: dlundgren)
[09:40:02] *** Quits: arash (~arash@5.124.31.250) (Ping timeout: 244 seconds)
[09:45:35] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[09:45:36] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:47:45] *** Quits: dmang (~dmang@user/dmang) (Quit: Leaving)
[09:47:59] *** Joins: dmang (~dmang@047-032-148-170.res.spectrum.com)
[09:48:25] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Changing host)
[09:48:25] *** Joins: dmang (~dmang@user/dmang)
[09:52:55] *** Joins: paranoia (~0xe3b7@echelon.lucif3r.ru)
[09:54:01] <paranoia> What does `* . *` mean in this SQL quety? `grant all privileges on * . * to 'username'@'passphrase';`
[09:54:29] <paranoia> I know * is a glob to select all the thing, but I'm not sure about `* . *`
[09:54:34] <TinoDidriksen> All databases, all tables.
[09:54:59] <paranoia> Oh, so the syntax is like `Database.Tables`?
[09:55:01] <TinoDidriksen> Yup
[09:55:09] <paranoia> I see, makes sense. Thanks.
[10:02:30] *** Quits: Xgc (~Jon@user/xgc) (Read error: Connection reset by peer)
[10:03:08] *** Joins: Xgc (~Jon@98.1.122.91)
[10:03:32] *** Xgc is now known as Guest4846
[10:05:11] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:07:30] *** Joins: Xgc (~Jon@98.1.122.91)
[10:07:41] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Quit: ZNC - https://znc.in)
[10:07:54] *** Xgc is now known as Guest709
[10:07:56] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[10:08:42] *** Quits: Guest4846 (~Jon@98.1.122.91) (Ping timeout: 264 seconds)
[10:23:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[10:24:25] *** Joins: chao (~stenno@user/stenno)
[10:24:45] *** Joins: tex (~super@user/dix)
[10:29:29] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[10:29:29] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[10:41:38] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[10:41:54] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Remote host closed the connection)
[10:42:18] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[10:49:04] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 268 seconds)
[10:53:16] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (Quit: https://tinodidriksen.com/)
[10:54:29] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[11:00:27] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[11:08:22] *** Joins: vmarquezdev (~victor@187-163-112-152.static.axtel.net)
[11:15:03] <paranoia> Is there any syntax error in this SQL query? I'm not sure why PHP is complaining: https://paste.debian.net/plain/1201278 I've even tried to convert the return of the `date()` to a string with `strval()` but it doesn't work either.
[11:18:15] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 272 seconds)
[11:18:18] <BadAdviceCat> paranoia, use SQL prepared statements.
[11:18:32] *** Joins: chao (~stenno@user/stenno)
[11:19:19] <BadAdviceCat> This is how you can store user input, without generating SQL errors, and this is an effective way to mitigate against code injection attacks.
[11:20:15] <paranoia> I see. Yeah, I'll use prepared statements. But could you tell me the syntax error in this specific statement? Like what's wrong with that string concatenation?
[11:20:23] <BadAdviceCat> Examples of how to do a prepared statement, WITH parameters/placeholders are explained here. https://phpdelusions.net/pdo
[11:21:03] <BadAdviceCat> Had you done that you wouldn't be running into the above issue.
[11:21:10] *** Joins: Akimbas123 (~Akimb@md-188-69-193-64.omni.lt)
[11:21:50] <BadAdviceCat> As far as strings in SQL are concerned, they need to appear within single quote marks, to be classified as an SQL string.
[11:21:57] <paranoia> I'm using mysqli.
[11:22:02] <paranoia> That's what I'm used to.
[11:22:04] <BadAdviceCat> For example: 'jayb@facebook.com'
[11:22:36] <BadAdviceCat> Or 'mm dd yyyy'
[11:22:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:23:45] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[11:23:46] *** Joins: velix (~velix@user/velix)
[11:24:03] <paranoia> Hmm..I didn't what you mean :-/
[11:24:03] <velix> VSCode with php-debugger drives me crazy. I'm not even able to set it up correctly :D
[11:24:10] <paranoia> BadAdviceCat: 
[11:24:20] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Remote host closed the connection)
[11:24:37] <BadAdviceCat> paranoia, and frankly, you should be using PDO instead of mysqli, because for the reasons explained on this web page: https://phpdelusions.net/pdo/mysqli_comparison
[11:24:55] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 244 seconds)
[11:24:56] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[11:25:40] <onizu> hi, is anyone else getting this 'banned' msg from freenode: Disconnected: You're banned! Email kline@freenode.net with the ERROR line below for help.
[11:25:42] <BadAdviceCat> https://www.php.net/manual/en/mysqli.prepare.php - An example of prepared statement in mysqli.
[11:26:27] <BadAdviceCat> paranoia, your date needs to be inside single quotes. Your above code does not do that.
[11:26:31] *** Joins: Blondie101010 (~Blondie10@user/blondie101010)
[11:26:35] <BadAdviceCat> And also, use prepared statements.
[11:26:52] <paranoia> Yeah, I'm reading that PDO link.
[11:27:26] <BadAdviceCat> onizu, I do not know, I don't go to that network anymore.
[11:27:41] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[11:28:10] <onizu> ok
[11:28:19] *** Joins: chao (~stenno@user/stenno)
[11:29:53] *** Joins: MCMiic (~mcmic@63.120.199.77.rev.sfr.net)
[11:31:47] *** Joins: Akimbass (~Akimb@82-135-197-171.static.zebra.lt)
[11:33:37] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[11:33:53] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[11:34:44] *** Quits: Akimbas123 (~Akimb@md-188-69-193-64.omni.lt) (Ping timeout: 244 seconds)
[11:35:25] *** Joins: Akimb (~Akimb@md-188-69-193-64.omni.lt)
[11:38:30] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Remote host closed the connection)
[11:38:57] *** Quits: Akimbass (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 272 seconds)
[11:43:15] *** Joins: samwilson (~samwilson@user/samwilson)
[11:44:38] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[11:44:55] *** Joins: Akimbas123 (~Akimb@82-135-197-171.static.zebra.lt)
[11:45:17] *** Quits: Akimb (~Akimb@md-188-69-193-64.omni.lt) (Read error: Connection reset by peer)
[11:46:00] <paranoia> BadAdviceCat: Currently, I'm using mysqli prepared statements, but for the `bind_param` raises an exception. https://paste.debian.net/plain/1201281
[11:47:51] *** Joins: Akimbass (~Akimb@md-188-69-193-64.omni.lt)
[11:48:45] *** Quits: Akimbass (~Akimb@md-188-69-193-64.omni.lt) (Read error: Connection reset by peer)
[11:49:48] <paranoia> (the line 23 is that `bind_param` line btw)
[11:49:48] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[11:50:23] *** Quits: vmarquezdev (~victor@187-163-112-152.static.axtel.net) (Quit: WeeChat 2.8)
[11:51:04] *** Quits: Akimbas123 (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 244 seconds)
[11:51:31] *** Joins: FBeans (~beans@ks305871.kimsufi.com)
[11:54:16] *** Joins: Cork (~Cork@user/cork)
[11:57:10] <BadAdviceCat> paranoia, the error message says "Cannot pass parameter 2 by reference"
[11:57:13] <BadAdviceCat> You can not do that.
[11:57:47] <paranoia> Yeah, I can read that it says, but I'm not sure what's causing the issue. 
[11:57:53] <BadAdviceCat> paranoia, https://www.php.net/manual/en/mysqli-stmt.bind-param.php
[11:58:18] <BadAdviceCat> Do you notice the AMPERSAND in the function's signature?
[11:58:30] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[11:58:39] <paranoia> Yeah. I can see that. But I'm not sure why anyone wanna make that restriction though :-?
[11:58:55] <BadAdviceCat> paranoia, you can not bind literal strings.
[11:59:07] <BadAdviceCat> BAsically, you can only use dollarsign variables there.
[11:59:18] <BadAdviceCat> See the examples below on how they do it.
[12:00:15] <paranoia> Yeah, but I'm curious about the reason why it's not allowed(or why anyone wanna make us not pass a string literals) though. Is there any particular reason for that?
[12:00:17] *** Joins: chao (~stenno@user/stenno)
[12:00:23] <BadAdviceCat> That's what the ampersand means. https://www.php.net/manual/en/language.references.pass.php - passing by reference.
[12:02:45] <paranoia> And, I'm also reading this example from the internet, https://bpa.st/OC3A, it's strange to see PHP allow to use the variables at the `bind_param` before even declaring it.
[12:03:02] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Remote host closed the connection)
[12:03:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:09:06] *** Joins: Camilo (~hugh@79-77-195-59.dynamic.dsl.as9105.com)
[12:11:00] *** Joins: DevAntoine (~DevAntoin@37.58.244.13)
[12:12:02] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:26:46] *** DuckThom is now known as aloy
[12:28:29] *** Joins: Guest68 (~Guest68@87.224.108.150)
[12:32:17] <paranoia> Is this right way to convert the array to assoc-array in PHP? https://onecompiler.com/php/3x2kg7yhb (If so, I'm not sure why it fails) I saw this from here: https://stackoverflow.com/a/6153706/13217668
[12:34:08] *** Joins: _Andrew (~andrew@user/andrew/x-3325075)
[12:37:15] <Naktibalda> paranoia: what did you expect to get?
[12:37:44] <Naktibalda> it doesn't fail, it works.
[12:37:53] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[12:38:02] <paranoia> I'm expecting "2" and  "4" for $bar["1"] and $bar["2"]
[12:38:54] <Naktibalda> var_dump($bar); to see what you get
[12:39:44] <Naktibalda> it seems that you have an expectation that it will take pairs of items and use one as key and another as value. array_flip doesn't do that
[12:39:49] *** Quits: eot (~eot@user/eot) (Quit: later)
[12:40:04] <paranoia> Naktibalda: Yeah, I wanna do that. Is there any other way in PHP I could do that?
[12:40:14] <paranoia> (other than array_flip?)
[12:40:40] <paranoia> But from the examples, I can see that people are doing something like that, that's why I used that.
[12:41:12] <Naktibalda> your question is different from that StackOverflow question
[12:42:06] <Naktibalda> use for loop with 2 step, read 2 items on each iteration and create new array
[12:42:13] <paranoia> Like here, https://www.php.net/manual/en/function.array-flip.php#120731
[12:42:39] <paranoia> Hmm..that seems incorrect, anyway. (like the 'two')
[12:42:42] <paranoia> nevermind. 
[12:42:59] <paranoia> Naktibalda: Yeah, I'll do that. 
[12:47:18] *** Joins: olle (~olle@mue-88-130-56-179.dsl.tropolys.de)
[12:48:40] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[12:50:10] *** Joins: delboy1978uk (~delboy197@109.132.42.202)
[12:52:54] *** Joins: arash (~arash@5.124.31.250)
[12:57:42] *** Joins: brickfat (~brickfat@user/brickfat)
[13:02:03] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[13:08:07] *** Quits: Guest68 (~Guest68@87.224.108.150) (Quit: Client closed)
[13:09:58] <delboy1978uk> anyone know how i can easily mock a guzzle exception in phpunit/codeception? I just need it to return a 404 code but getCode is final!
[13:10:22] <Naktibalda> new GuzzleException()
[13:11:05] <GWF> Transparent to PHP, when a user make request login using http basic authentication with success the variable $_SERVER['PHP_AUTH_USER''] and others are is fullfilled right?
[13:11:24] <GWF> s/are is/are
[13:12:25] <delboy1978uk> that's just an interface Naktibalda does that work? :-D
[13:12:32] * delboy1978uk tries it and sees
[13:12:36] <delboy1978uk> !+tias
[13:12:36] <php-bot> [TIAS] Try It And See. If you want to know if or how something works, try it first. "Testing Is Absolutely Simple"
[13:12:39] *** Quits: Yoda-BZH (~yodabzh@user/yoda-bzh) (Remote host closed the connection)
[13:13:06] *** Quits: Guest709 (~Jon@98.1.122.91) (Changing host)
[13:13:06] *** Joins: Guest709 (~Jon@user/xgc)
[13:13:18] *** Guest709 is now known as Xgc
[13:13:25] *** Joins: Yoda-BZH (~yodabzh@2001:bc8:30a4:200::)
[13:13:40] *** Quits: Yoda-BZH (~yodabzh@2001:bc8:30a4:200::) (Changing host)
[13:13:40] *** Joins: Yoda-BZH (~yodabzh@user/yoda-bzh)
[13:17:01] <DevAntoine> Hi
[13:17:19] <DevAntoine> I've got the following code, which works fine and is very efficient for thousands of updated: https://gist.github.com/devantoine/b92ea58672a3a3b81fa4b6a792c99eb5#file-setcontractoptionquotationcommand-php-L58
[13:17:41] <DevAntoine> THere's a single EntityManager::flush(), and a single fetch on the ContractOption entity.
[13:17:50] *** Joins: __Andrew (~andrew@user/andrew/x-3325075)
[13:17:57] <DevAntoine> BUT, this code is not testable.
[13:18:06] <DevAntoine> Then I've got this code: https://gist.github.com/devantoine/c29072d7953d2118c6e993b3123ba99f
[13:18:30] *** Parts: Yoda-BZH (~yodabzh@user/yoda-bzh) (Leaving)
[13:18:54] <DevAntoine> Which does the same thing as the previous one, is testable BUT is not efficient (one flush per update, and the ContractOption is always fetched).
[13:19:13] <DevAntoine> My goal is to have a testable code AND an efficient one but I'm stuck.
[13:20:23] <delboy1978uk> You settled on your classname then DevAntoine ? :)
[13:20:55] *** Quits: _Andrew (~andrew@user/andrew/x-3325075) (Ping timeout: 272 seconds)
[13:21:02] <DevAntoine> delboy1978uk: well, I've saw you're answer last night. I agree about the ContractManager but in FirmManager there's still a bunch of things related to the contract part :/
[13:21:16] <DevAntoine> And I don't like ManagerStuff but it's there.
[13:21:19] <delboy1978uk> :)
[13:21:36] <Naktibalda> delboy1978uk: if it is an exception interface, then find a concrete exception class and use it
[13:22:27] <DevAntoine> what bothers me too in that snippet is the existing method: FileUtils::getCsvWithHeader($file) which is not mockable :/
[13:22:33] <delboy1978uk> i'm not seeing a way of constructing the exception code in any of the concrete classes, which is pretty weird
[13:23:16] <delboy1978uk> DevAntoine: why isnt the first code testable?
[13:23:33] *** Quits: samwilson (~samwilson@user/samwilson) (Ping timeout: 244 seconds)
[13:23:38] <DevAntoine> delboy1978uk: because of FileUtils::getCsvWithHeader($file)
[13:23:51] <DevAntoine> Or I'd need to add a csv file in my test data
[13:23:55] <delboy1978uk> ah
[13:24:07] <DevAntoine> Maybe there's another way but I don't see how atm
[13:24:11] <delboy1978uk> i would do that then
[13:24:39] <Naktibalda> delboy1978uk: TransferException
[13:24:45] <DevAntoine> delboy1978uk: you'd keep the whole command with the logic inside, as it is?
[13:25:24] <delboy1978uk> i like breaking things with loops into smaller private functions
[13:25:52] <DevAntoine> delboy1978uk: yeah but private functions are not testable either
[13:26:04] <delboy1978uk> sure they are
[13:26:22] <paranoia> In Pub-Sub model, will there be a persistent conenction between the server and client all the time?(so that when some event occures, the server can just send the message onto the connected peer, in this case a client)?
[13:26:23] <DevAntoine> delboy1978uk: not directly at least
[13:27:08] <delboy1978uk> try. this trait DevAntoine http://pastie.org/p/4sKRU6s0XG39h9brCC5WRG
[13:27:46] <DevAntoine> delboy1978uk: yeah, there's still Reflection to test private method but it seems bad to me
[13:28:07] <delboy1978uk> but anyway calling the public function would still trigger the private method if indeed it enters the loop
[13:29:32] <delboy1978uk> i use the trait when theres just way too much setup to run through the public way and you just need to test a condition to make sure those awkward red lines finally get covered
[13:31:03] <delboy1978uk> i wouldnt say it was bad though, because you are literally testing one little unit of code rather than going through the entire journey, which i guess you could argue was more like functional teesting
[13:35:26] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[13:36:18] <biberu> DevAntoine: imho your first method does too many things: it configures a symfony style, it handles metrics, it reads directly from a file, then it manages the transcation lifetime, updates, and presenting information to the user
[13:36:36] *** Joins: alcohol (~rob@composer/alcohol)
[13:37:01] <DevAntoine> biberu: all the things related to the command can still be there imho, the only thing that bothers me is the business logic inside (related to doctrine entities)
[13:37:25] <DevAntoine> biberu: I do agree with you but I cannot come up with a good way of moving this logic anywhere else without killing the performance
[13:38:48] <biberu> DevAntoine: i'd have a bunch of different functions for those things, with the central one taking an Input (some generator or collection) and an operation (another function) to be performed for each iteration, then just have it open the transaction, perform the thing, and return information to its caller
[13:39:19] <biberu> DevAntoine: the caller could possibly worry about presenting stuff to the user, or delegating further, or knowing how to get the csv stuff, or just asking someone else
[13:40:19] <DevAntoine> biberu: it sounds nice but I don't really see how I'd write this :/
[13:40:48] <biberu> DevAntoine: like that the general performance characteristics would follow the same structure, but you'd have multiple smaller parts that could be tested / swapped out independently
[13:41:20] *** Joins: ___Andrew (~andrew@user/andrew/x-3325075)
[13:41:29] *** Joins: nilsonc_ (~nilsonc@73.19.172.252)
[13:41:48] <delboy1978uk> put your vars as properties, then start moving bits out to private methods
[13:43:34] *** Quits: DLange (~DLange@about/linux/staff/DLange) (Quit: time-to-upgrade-IRC-to-lunatic-free)
[13:44:33] *** Quits: __Andrew (~andrew@user/andrew/x-3325075) (Ping timeout: 272 seconds)
[13:45:13] <DevAntoine> delboy1978uk: that's what I tried there :D
[13:45:17] <DevAntoine> https://gist.github.com/devantoine/c29072d7953d2118c6e993b3123ba99f
[13:45:40] <delboy1978uk> $this->initStyle(); $this->startStopWatch(); stuff like that. put the counts as properties
[13:46:39] <delboy1978uk> the entire foreach could be $this->handleData($data);
[13:48:13] <DevAntoine> delboy1978uk: well, that's what I did in the last gist tbh
[13:48:21] *** Quits: nilsonc_ (~nilsonc@73.19.172.252) (Ping timeout: 272 seconds)
[13:48:21] <DevAntoine> how no
[13:48:22] *** Joins: trepatud1 (~trepatudo@5.196.50.27)
[13:48:22] <DevAntoine> I see.
[13:48:33] <DevAntoine> but anyway it'd still be private method in this command
[13:48:40] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[13:48:46] <DevAntoine> That'd be more readable but i'd have the exact same testable issues.
[13:49:03] *** Joins: ghadzooks (~garett@82-68-37-54.dsl.in-addr.zen.co.uk)
[13:49:04] <delboy1978uk> move this into a private function https://gist.github.com/devantoine/c29072d7953d2118c6e993b3123ba99f#file-setcontractoptionquotationcommand-php-L56-L68
[13:49:18] <biberu> DevAntoine: you can have more classes
[13:49:37] <delboy1978uk> this shouldnt be that hard to test tbh, especially if you split stuff up
[13:50:23] <biberu> DevAntoine: i'd probably consider it a smell to have instance methods that aren't using the class' closure, and either make them static or move them away
[13:52:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[13:53:10] *** Quits: ghadzooks (~garett@82-68-37-54.dsl.in-addr.zen.co.uk) (Quit: leaving)
[13:53:25] <DevAntoine> Gosh I really feel noob :/
[13:56:00] *** Quits: Xgc (~Jon@user/xgc) (Quit: Leaving)
[14:01:10] <delboy1978uk> yay! finally, my awkward piece of code has been tested!
[14:01:22] <delboy1978uk> Naktibalda: thanks for the help!
[14:01:41] *** Joins: Tempesta (Tempesta@183.98.39.112)
[14:03:25] <biberu> DevAntoine: if you're thinking about or learning something, great, and if not, so what? there are so many ways to do things :)
[14:03:37] * biberu tries to learn every day
[14:04:02] <DevAntoine> biberu: I do too, that's why I'm asking here about this code which I know could be way better.
[14:04:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[14:09:59] *** Quits: Tempesta (Tempesta@183.98.39.112) (Quit: See ya!)
[14:10:15] *** Joins: Tempesta (Tempesta@183.98.39.112)
[14:10:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[14:10:47] *** Joins: Xgc (~Xgc@user/xgc)
[14:19:53] *** Joins: HalfWord (~halfword@user/halfword)
[14:22:54] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[14:22:54] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:24:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[14:30:24] *** Joins: dlundgren (~dlundgren@75-9-109-251.lightspeed.milwwi.sbcglobal.net)
[14:30:32] *** Quits: SPC-B7 (~Email@80.246.141.167) (Ping timeout: 272 seconds)
[14:31:39] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[14:31:48] *** Joins: Tempesta (Tempesta@183.98.39.112)
[14:31:48] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[14:31:48] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:31:49] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[14:33:39] *** Joins: Tempesta (Tempesta@user/tempesta)
[14:34:17] *** Joins: hugh (~hugh@79-77-209-165.dynamic.dsl.as9105.com)
[14:35:36] *** Quits: Camilo (~hugh@79-77-195-59.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[14:49:31] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 244 seconds)
[15:03:02] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Remote host closed the connection)
[15:07:55] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[15:12:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[15:15:32] <GWF> I want to protect a directory where the content cannot be accessible without a login made at PHP. Can this be done by which ways? http auth? some url rewrite?
[15:22:17] <ss23> There are a few ways of doing it, GWF, but the most robust is to put the files outside of the webroot and then let users access it with something like download.php?file=foo.jpg. Be careful thouhg because if you have a bug in download.php it'll let anyone run arbitrary code on your server
[15:23:48] <GWF> ss23: Yes, but at the moment is not possible to put files outside of webroot, even PHP scripts.
[15:24:05] <ss23> May I ask why? The PHP script would still be in the web root, just not the files you want to protect
[15:25:17] <GWF> The whole application is exposed at webroot, and I want to make sure that webroot is only made after a login.
[15:25:33] <biberu> 😱
[15:25:34] <GWF> To make things worst, this use IIS.
[15:25:56] <biberu> is it not possible to have only your entry point inside the root?
[15:26:00] <ss23> I am not sure I understand. Are you talking about having a PHP script that protects the othe rPHP scripts too, GWF?
[15:26:46] <GWF> I already put the whole dir behind http basic auth, but I cannot undertand how I can relate this auth with the database wher ethe credentials are stored.
[15:27:04] <GWF> biberu: nop, each script, different funcionality.
[15:27:22] <ss23> Okay. I think I understand now. A key thing here is that I assumed when you said "content" you meant like you had some files you wanted to protect, but you are talking about the entire website
[15:27:34] <GWF> ss23: yep
[15:27:50] *** Joins: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c)
[15:28:15] <ss23> The best thing is like biberu said. You basically make an index.php file that is the only thing in the webroot, and that does the authentication, then it just "runs" the corrrect script that is outside of the web root, GWF. I mean, alternatively, you can normally configure your webserver to authenticate with basic authentication against a database too, but it can be tricky
[15:28:17] <biberu> GWF: sounds like you should be looking for a way to get a front controller in there
[15:28:58] <ss23> There are some other approaches, but I wouldn't recommend them, like the auto_prepend_file directive that runs a script automatically before yours
[15:29:21] <GWF> I thought about it. If I redirect everything for a front controller, can I stop the redirection after a user login?
[15:30:59] <biberu> GWF: redirect to the entry point and have it handle common initialization, then have it start the script the user requested if things look right. that script can now be placed outside of the root, so that it can't be accessed directly from a browser (and is safer from misconfigurations)
[15:30:59] <ss23> GWF: Kind of, yeah. You can use a session/cookie that says they're logged in, like how most websites work. Then in your front controller, you just say "if $_SESSION['user'] is empty { do the login } do the script; "
[15:32:22] <biberu> GWF: it could initialize the session and either handle access control directly, that's probably simplest way if you have a bunch of scripts that you just want to protect already, or you could let each module determine access rights itself once a request has been routed there by the entry point
[15:33:22] <biberu> GWF: i.e. the entry point wouldn't redirect again, it would load the next module directly
[15:33:37] <GWF> how the /frontcontroler.php control the access to /functionality.php ?
[15:33:51] <GWF> Because users need to access /functionality.php directly
[15:33:52] *** Quits: aloy (~luna@2001:41f0:3fe:3:2df7:dfc5:ac39:5096) (Ping timeout: 272 seconds)
[15:34:30] <GWF> (but only after login)
[15:35:08] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[15:35:10] <biberu> GWF: user asks for /functionality.php => your httpd redirects internally (without altering the user visible url) to index.php => index.php checks if functionality.php exists and if the user should be allowed to access it => index.php includes functionality.php
[15:35:34] <biberu> GWF: and now functionality.php can be in another directory, outside of the web root, index.php will just look for it there instead
[15:35:54] *** Joins: aloy (~luna@2001:41f0:3fe:3:e0cc:5ff4:12a3:c960)
[15:36:17] <GWF> biberu: My aim is to not touch /functionality.php because they are hundreds
[15:37:37] <GWF> or I don't need to change nothing there?
[15:38:00] *** Quits: ___Andrew (~andrew@user/andrew/x-3325075) (Quit: Leaving)
[15:38:25] <biberu> it depends on what it does and what the rest of the structure looks like
[15:39:52] <GWF> Most of /functionality.php files are php mixed with htm and js and css
[15:41:38] <biberu> could be tricky
[15:42:40] <GWF> I will with mod rewrite
[15:42:46] <GWF> I will try with mod rewrite
[15:43:17] <GWF> Too bad IIS doesn't have (for my knowledge) https://httpd.apache.org/docs/2.4/mod/mod_authn_dbd.html 
[15:43:29] <biberu> another option is to redirect to an entry point without moving anything, but it's riskier, a misconfiguration could allow access to files that were supposed to be protected
[15:44:36] <GWF> biberu: I will try to redirect any request to /front.php if at the front login was made, I redirect the user to the file requested (if this is possible).
[15:50:48] *** Joins: entuland (~entuland@user/entuland)
[15:52:59] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[15:59:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Read error: Connection reset by peer)
[16:04:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[16:05:09] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[16:23:04] *** Joins: SPC-B7 (~Email@80.246.141.167)
[16:24:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 244 seconds)
[16:27:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[16:29:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:35:38] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 268 seconds)
[16:35:55] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[16:54:59] *** Quits: hugh (~hugh@79-77-209-165.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[16:55:39] *** Quits: Xgc (~Xgc@user/xgc) (Remote host closed the connection)
[16:56:02] *** Joins: Xgc (~Xgc@user/xgc)
[16:59:25] *** Quits: SPC-B7 (~Email@80.246.141.167) (Read error: Connection reset by peer)
[17:01:31] *** Joins: SPC-B7 (~Email@80.246.141.167)
[17:02:34] *** Quits: nilsonc_ (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c) (Quit: Leaving)
[17:02:59] *** Joins: nilson (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c)
[17:04:12] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[17:07:06] *** Quits: nilson (~nilsonc@2601:4c0:3:9e8a:2019:445b:6687:ec0c) (Ping timeout: 240 seconds)
[17:07:44] *** Joins: hugh (~hugh@79-77-214-175.dynamic.dsl.as9105.com)
[17:13:07] *** Quits: hugh (~hugh@79-77-214-175.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[17:17:07] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[17:20:31] *** Joins: sstory (~sstory@075-130-120-018.biz.spectrum.com)
[17:26:25] *** Joins: nilson (~nilsonc@204.156.172.42)
[17:29:33] *** Parts: sstory (~sstory@075-130-120-018.biz.spectrum.com) ()
[17:35:08] *** Joins: eck0___ (~Android@mobile-166-173-63-82.mycingular.net)
[17:38:15] *** Quits: eck0__ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 272 seconds)
[17:48:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[17:56:41] *** Joins: hugh (~hugh@80-42-5-5.dynamic.dsl.as9105.com)
[18:02:32] *** Quits: eck0___ (~Android@mobile-166-173-63-82.mycingular.net) (Read error: Connection reset by peer)
[18:03:17] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[18:10:16] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[18:11:51] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[18:16:03] *** Joins: Akimbas123 (~Akimb@82-135-197-171.static.zebra.lt)
[18:17:35] *** Joins: keypusher (keypusher@user/keypusher)
[18:19:30] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 240 seconds)
[18:20:47] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:21:37] *** Quits: Akimbas123 (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 265 seconds)
[18:22:03] *** zerobeholder is now known as ZeroBeholder
[18:30:54] *** Quits: Carnage (~carnage@user/carnage) (Read error: Connection reset by peer)
[18:35:52] *** Joins: Carnage (~carnage@user/carnage)
[18:40:49] *** Joins: sausajez_ (uid501562@id-501562.stonehaven.irccloud.com)
[18:47:55] *** Quits: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru) (Ping timeout: 272 seconds)
[18:51:16] *** sausajez_ is now known as sausajez
[18:51:22] *** Quits: sausajez (uid501562@id-501562.stonehaven.irccloud.com) (Changing host)
[18:51:22] *** Joins: sausajez (uid501562@user/sausajez)
[18:52:31] *** Quits: arash (~arash@5.124.31.250) (Read error: Connection reset by peer)
[18:52:55] *** Joins: arash (~arash@5.124.31.250)
[18:53:06] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Ping timeout: 264 seconds)
[18:56:05] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[19:11:10] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:12:08] *** Quits: nilson (~nilsonc@204.156.172.42) (Ping timeout: 268 seconds)
[19:12:46] *** Joins: nilson (~nilsonc@204.156.172.42)
[19:14:02] *** Joins: AnrDaemon (~ZNC@darkdragon-nln.starlink.ru)
[19:38:06] *** Quits: MCMiic (~mcmic@63.120.199.77.rev.sfr.net) (Quit: Konversation terminated!)
[19:38:42] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 264 seconds)
[19:40:06] *** Joins: nilsonc_ (~nilsonc@204.156.172.42)
[19:41:00] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[19:41:44] *** Joins: alisonw (~alisonw@user/alisonw)
[19:43:40] *** Joins: hugh1 (~hugh@80-42-5-5.dynamic.dsl.as9105.com)
[19:45:03] *** Quits: hugh (~hugh@80-42-5-5.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[19:45:03] *** Quits: nilson (~nilsonc@204.156.172.42) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 265 seconds)
[19:45:04] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 265 seconds)
[19:45:43] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:48:44] *** Quits: aloy (~luna@2001:41f0:3fe:3:e0cc:5ff4:12a3:c960) (Quit: WeeChat 3.0.1)
[19:50:12] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[20:05:01] *** ZeroBeholder is now known as zerobeholder
[20:09:35] *** Quits: CobraK (uid144971@stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[20:11:41] *** Joins: Lutin (~Lutin@user/lutin)
[20:15:43] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[20:15:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[20:15:55] *** Joins: Lutin (~Lutin@lfbn-lyo-1-1261-242.w86-248.abo.wanadoo.fr)
[20:16:43] *** Quits: Lutin (~Lutin@lfbn-lyo-1-1261-242.w86-248.abo.wanadoo.fr) (Changing host)
[20:16:43] *** Joins: Lutin (~Lutin@user/lutin)
[20:22:54] *** Joins: judah (~judah@rrcs-24-123-118-150.central.biz.rr.com)
[20:24:04] *** Joins: Guest27 (~Guest27@2601:281:8400:752:c08c:ec6e:11c8:cd87)
[20:25:09] *** Quits: petris (~quassel@user/petris) (Ping timeout: 244 seconds)
[20:26:35] *** Quits: Guest27 (~Guest27@2601:281:8400:752:c08c:ec6e:11c8:cd87) (Client Quit)
[20:32:43] *** Joins: magla (~gelignite@55d431b1.access.ecotel.net)
[20:33:13] *** Quits: DevAntoine (~DevAntoin@37.58.244.13) (Remote host closed the connection)
[20:33:19] *** Joins: petris (~quassel@user/petris)
[20:34:13] *** Joins: DevAntoine (~DevAntoin@37.58.244.13)
[20:34:20] *** Joins: chao (~stenno@user/stenno)
[20:39:08] *** Quits: DevAntoine (~DevAntoin@37.58.244.13) (Ping timeout: 272 seconds)
[20:39:44] *** chao is now known as stenno
[20:45:49] *** Joins: ule (~ule@user/ule)
[20:48:00] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 272 seconds)
[20:51:39] *** Parts: delboy1978uk (~delboy197@109.132.42.202) ()
[20:52:57] *** Quits: arash (~arash@5.124.31.250) (Read error: Connection reset by peer)
[20:53:24] *** Joins: arash (~arash@5.124.31.250)
[20:57:57] *** Joins: travisghansen (~travisgha@192.74.130.86)
[21:00:46] *** TML_ is now known as TML
[21:01:09] *** Quits: TML (~TML-prv@ec2-52-32-188-68.us-west-2.compute.amazonaws.com) (Changing host)
[21:01:09] *** Joins: TML (~TML-prv@user/tml)
[21:01:09] *** zirconium.libera.chat sets mode: +v TML
[21:01:40] <TML> hey, at least the cloaking process is automated and effective
[21:04:13] <BadAdviceCat> Hi TML :D
[21:04:18] <TML> Hello
[21:04:36] <BadAdviceCat> I like it much better.
[21:05:09] <BadAdviceCat> Frankly, they can go above and beyond and make it so you get a cloak before one even connects to the network, as it's done with any other IRC networks I've used before.
[21:05:14] *** Joins: genom (~g@37.214.77.184)
[21:06:26] <BadAdviceCat> Like snoonet, you would get the snoonet-some-gibberish-here.yourISPName.com witho
[21:06:50] <Lutin> BadAdviceCat adviset them in #libera
[21:06:54] <BadAdviceCat> Without having to get a specific cloak in the first place. It would just be automated from the get go.
[21:06:55] <Lutin> *advise
[21:07:18] <BadAdviceCat> Lutin, I'm sure this approach is intended. No point in convincing them.
[21:07:25] <BadAdviceCat> I think I've asked about this a long time ago.
[21:07:33] <Lutin> It doesn't affect this channel ;)
[21:07:38] <BadAdviceCat> I'm sure I'm not the first.
[21:07:56] <Lutin> cloack is no security a well, end of discussion :)
[21:08:03] <Lutin> *cloak
[21:08:35] <BadAdviceCat> Lutin, it's not perfect, but it's simply meant to not have folks run around naked without a cloak.
[21:09:48] <TML> Lutin: Cloaks have nothing to do with security
[21:09:50] <BadAdviceCat> If you make a claim, you should at least link to a reference.
[21:10:03] <Lutin> TML I don't care, end of discussion for me
[21:10:30] <Lutin> anyone some nice things about PHP ?
[21:10:42] <BadAdviceCat> Nope. 
[21:10:47] <stenno> Lutin: are you admin in #php too?
[21:10:59] <BadAdviceCat> At least, me.
[21:10:59] <stenno> because you are talking to one
[21:11:01] <BadAdviceCat> I'll wait until someone does have something to say in regards to PHP
[21:11:32] <Lutin> stenno Libera has a nice line for that... Ops are users too ;)
[21:11:55] <stenno> sure, but shouldn't be the decision of the ops what the current topic is
[21:11:57] <Lutin> stenno also I don't care as well :)
[21:12:13] <stenno> ok lol
[21:12:14] <TML> stenno: everthing is fine :)
[21:12:17] <TML> Anyone trying the 8.1 alpha?
[21:12:20] <BadAdviceCat> stenno, I don't think it's a big deal.
[21:12:23] <Lutin> stenno I don't think so
[21:12:32] <BadAdviceCat> TML, surprisingly, not me. I prefer to wait for betas.
[21:12:36] <Lutin> TML I was, issues ?
[21:13:20] <BadAdviceCat> Lutin, yes, you are a massive issue :D Bahahahaha!
[21:13:34] <BadAdviceCat> I'm not super excited, but will go for it anyway, I want this to happen first before I try alpha: https://wiki.php.net/rfc/property_accessors
[21:13:46] <Lutin> BadAdviceCat maybe you should not go the Freenode way again, thanks
[21:13:53] <BadAdviceCat> I can tell that nikic is being ultra careful about this.
[21:14:10] <TML> Derick at least has been busy
[21:14:18] <BadAdviceCat> He anticipates well.
[21:14:28] <TML> lots of datelib fixes
[21:14:30] <stenno> php and its classes
[21:14:44] *** Quits: alisonw (~alisonw@user/alisonw) (Quit: gone for a coffee)
[21:14:53] <BadAdviceCat> Lutin, I'm only messing with you. :P
[21:14:57] <stenno> can't really decide if it wants to be functional or OOP
[21:15:21] <TML> stenno: Why should it have to decide? Lisp straddles the same line.
[21:15:28] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 268 seconds)
[21:15:47] <stenno> i guess it doesn't have to
[21:16:07] <TML> multi-paradigm languages are the norm now
[21:16:18] <stenno> true enough
[21:16:37] <stenno> rust, js
[21:16:39] <BadAdviceCat> I really wish it would happen already, I do have hints and vague reasons for why the old property accessors failed. Primarily to do with error/debugging capabilities.
[21:16:53] <TML> I've been working on a toy Zend-compatible engine in Rust
[21:18:17] <BadAdviceCat> I'm confident that nikic and crew will figure this out. It's not a toy, it's a useful tool. It's not shiny-new-crap as some may want us to believe, or something to make code needlessly complicated. I just want a shortcut to get/set with TYPE SAFETY/interfaces for public properties without it being a pain in the neck through magic _get/set()
[21:18:29] <BadAdviceCat> TML, nifty. :)
[21:19:11] <BadAdviceCat> stenno, I think having variety is a good thing.
[21:19:25] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[21:20:12] <stenno> i assume (without having any actual knowledge about language or compiler design) that its a bit more difficult performance-wise if you go from, say, a pure FP to a multi-para langauge
[21:21:06] <BadAdviceCat> I try not to think about performance very much.
[21:21:36] <BadAdviceCat> Usually, it bites me in the ass whenever I write code while worrying about it.
[21:21:58] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Quit: Quitting)
[21:22:38] *** Joins: blyat-73 (~hjgkjhgkj@79.101.60.163)
[21:23:10] <TML> stenno: as a general rule, I reject the idea that language paradigm and performance are even remotely related to one another
[21:23:23] <TML> performance is an implementation detail
[21:23:25] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[21:23:32] <stenno> is that so, again i don't have a good idea about all this
[21:24:18] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 264 seconds)
[21:25:24] <TML> I would offer an analogy, but I'm not convinced it would clarify anything
[21:26:17] <BadAdviceCat> I only worry about performance when it is warranted. I also try to write code in a fashion whereas I'll make an attempt to assign the job to the right tool.
[21:27:09] <BadAdviceCat> Like if I can do the sorting in SQL, I'll do it there rather than in PHP. Fulltextsearch in elasticsearch. Make use of MessageQueues. That sort of thing.
[21:33:45] *** Joins: aloy (~luna@2001:41f0:3fe:3:b012:12ab:de03:fd80)
[21:33:48] <TML> stenno: At the end of the day, a "programming language" isn't "slow" or "fast", it's the *implementation* (compiler/interpreter) that is either "slow" or "fast". 
[21:36:39] <stenno> sure, but i'd assume that with a specific paradigm, e.g. pure FP, you can optimize a few things when designing your language
[21:37:42] <TML> I might be inclined to agree that it's conceptually easier to implement FP for speed than it is other paradigms, but that's just a human limitation.
[21:38:16] <olle> Oh mann
[21:38:51] <stenno> alright
[21:41:03] <TML> I mean, you can even make things like lisp machines (https://www.wikiwand.com/en/Lisp_machine), where they natively run the programming language operations in hardware
[21:41:57] <TML> go make a PHP FPGA, PHP will be super-fast ;)
[21:45:13] <TML> it's all just a von Neumann machine at the bottom
[21:47:47] * olle :|
[22:10:14] *** Quits: olle (~olle@mue-88-130-56-179.dsl.tropolys.de) (Ping timeout: 244 seconds)
[22:14:00] <biberu> stenno: what's the problem with using classes in fp? they can basically be used as e.g. closures or records
[22:14:07] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[22:18:56] *** Joins: galvao (~eabbott@user/galvao)
[22:22:41] <galvao> Is there a way to make array_walk recursive? I mean, by the time array_wak ends the array was modified so I want it to run again. Tried resetting the array at the end, but it doesn't work.
[22:27:36] <TML> galvao: modified how?
[22:28:40] <galvao> by the end of execution the original items were extracted from the array, others have been added
[22:28:45] <TML> galvao: the callback is not allowed to add, unset or reorder elements of the input array, doing so is undefined behaviour
[22:29:12] <galvao> I'm not unsetting, I'm array_shift'ing
[22:29:18] <TML> ""ODOnly the values of the array may potentially be changed; its structure cannot be altered, i.e., the programmer cannot add, unset or reorder elements. If the callback does not respect this requirement, the behavior of this function is undefined, and unpredictable.
[22:29:29] <TML> galvao: That's reordering
[22:29:31] <galvao> oh...
[22:29:52] <galvao> thank you, I never realized that
[22:30:48] <TML> Sorry for the messed up formatting - some of my freenode specific irssi configs obviously didn't make it into the libera config
[22:32:50] <biberu> galvao: perhaps you should be looking at array_reduce for the update step, but under what conditions do you need to repeat it?
[22:33:10] <relipse> when I do SELECT tm.*, cm.*, tl.* the same column gets overridden in my result how can I add a prefix or something
[22:34:23] <galvao> biberu: The condition is the array being modified, e.g. now it contains other items. I'll take a look at reduce. I was just trying to avoid wrapping everything under a function and making the function itself recursive
[22:43:16] *** zerobeholder is now known as ZeroBeholder
[22:46:09] <TML> relipse: SELECT tm.foo as tm_foo, cm.foo as cm_foo, tl.foo as tl_foo
[22:46:40] <TML> etc.
[22:47:22] <TML> relipse: or perhaps consider making a database view which gives all the correct joins and column renaming
[22:53:17] *** Quits: arash (~arash@5.124.31.250) (Read error: Connection reset by peer)
[22:54:13] *** Joins: arash (~arash@5.124.31.250)
[22:57:43] *** Parts: sshine (~simon@hubris.eta.solutions) ()
[22:57:56] *** ZeroBeholder is now known as zerobeholder
[23:03:28] *** Quits: dag (~d@user/dag) (Quit: leaving)
[23:10:18] *** Quits: nilsonc_ (~nilsonc@204.156.172.42) (Ping timeout: 240 seconds)
[23:11:11] *** Joins: nilson (~nilsonc@204.156.172.42)
[23:17:13] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[23:24:52] *** Joins: geli (~gelignite@55d45e3f.access.ecotel.net)
[23:27:06] *** Quits: magla (~gelignite@55d431b1.access.ecotel.net) (Ping timeout: 240 seconds)
[23:33:04] <Derick> TML: I have a few more datetime fixes to land still
[23:33:39] <Derick> and... plenty of more things to land (or not) before feature freeze
[23:36:52] *** Quits: nilson (~nilsonc@204.156.172.42) (Remote host closed the connection)
[23:37:05] *** Joins: nilson (~nilsonc@204.156.172.42)
[23:50:08] *** Joins: CobraK (uid144971@id-144971.stonehaven.irccloud.com)
[23:57:34] *** Joins: brickfat (~brickfat@user/brickfat)
