[00:05:56] <FromDiscord> <hmmm> pmunchie is a diplomat üòõ
[00:13:35] <FromDiscord> <Elegantbeef> Hey i'm also a diplomat but more like ukraine's UN diplomat üòõ
[00:35:17] <FromDiscord> <hmmm> uh oh """ """ doesn't work with
[00:35:18] <FromDiscord> <hmmm> \r\n
[00:35:24] <FromDiscord> <hmmm> but " " does
[00:35:46] <FromDiscord> <hmmm> anything I can do to make """ """ work with those ü§î
[00:36:11] <FromDiscord> <Elegantbeef> they're raw string literals, you need to process them to get `\r\n` to work
[00:36:32] <FromDiscord> <hmmm> hmm
[00:36:56] <FromDiscord> <Elegantbeef> there is `unescape` and `escape` depending on what you need
[00:38:02] <FromDiscord> <hmmm> hmm I'll look into them
[00:38:16] <FromDiscord> <Elegantbeef> Actually i dont think those work as i thought
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:42:01] <FromDiscord> <hmmm> lol the caveman way works """" something """ & "\r\n" & """ something else """ but I wish I had better options lol
[00:42:13] <FromDiscord> <Jakraes> Quick question, is is possible to have conditional statements inside of switch cases?
[00:42:18] <FromDiscord> <Jakraes> Something like
[00:42:48] <FromDiscord> <Jakraes> switch (temp):‚Üµ   case temp < 10:‚Üµ      do something
[00:42:51] <FromDiscord> <hmmm> jak my bro how is the roguelike goin
[00:43:26] <FromDiscord> <Jakraes> Heya there, both goat and I are taking a pause but as soon as I can get back to it I will
[00:43:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U7x
[00:44:09] <FromDiscord> <Jakraes> In reply to @hmmm "jak my bro how": But you can test the newest version here
[00:44:10] <FromDiscord> <Jakraes> https://github.com/Jakraes/TestNimHack/
[00:44:44] <FromDiscord> <hmmm> 4 sure I want to hop on the bandwagon soon, I think I have 1 or 2 weeks more to finish my current app and then I'm free
[00:45:44] <FromDiscord> <Jakraes> sent a code paste, see https://play.nim-lang.org/#ix=3U7z
[00:46:11] <FromDiscord> <Jakraes> Nice, all help is appreciated, I'd like to make this a community wide project for anyone that wants to join tbh
[00:46:24] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U7A
[00:46:42] <FromDiscord> <Jakraes> Even if the code ends up being spaghetti, it'd still be fun to see a roguelike made like that
[00:47:00] <FromDiscord> <Jakraes> Gotcha, so basically any number that is between 0 and 30 will echo hmm
[00:47:13] <FromDiscord> <Jakraes> Lemme try that out then
[00:47:14] <FromDiscord> <hmmm> yea it's fun
[00:47:45] <FromDiscord> <Jakraes> Yup, so far I'm learning a crapton from this project tbh
[00:48:47] <FromDiscord> <Jakraes> I think I'll be taking a lot of inspiration from DF and Ultima Ratio Regum
[00:48:54] <FromDiscord> <Jakraes> World generation wise
[00:49:03] <FromDiscord> <Elegantbeef> Yea you also could do `if x in 0f..30f`
[00:49:17] <FromDiscord> <Elegantbeef> Nim has a bunch of built in ergonomic solutions
[00:49:50] <FromDiscord> <Jakraes> A thing that I love about URR is that it has really cool graphics when showing off certain objects
[00:50:23] <FromDiscord> <Jakraes> Oh yeah true, I wanted to use something that looks cleaner though, which is why I went for switch cases
[00:53:05] <FromDiscord> <Elegantbeef> They're called casestatments üòõ
[00:54:45] <FromDiscord> <Anuke> Why does copyMem segfault here? https://play.nim-lang.org/#ix=3U7C
[00:55:19] *** Joins: hellstabber (~hellstabb@178.233.17.95)
[00:56:49] <FromDiscord> <Phil> Huh... turns out std/json can't deal with `Table[int64, string]`‚Üµ(Throws `type mismatch: got <KeyValuePair[system.int, system.string]> but expected one of: <A LOT OF EXAMPLES>` )
[00:57:11] <FromDiscord> <Anuke> In reply to @Anuke "Why does copyMem segfault": Context: I'm trying to convert a C-string with arbitrary data in it to a string, as per <https://forum.nim-lang.org/t/3850>‚ÜµThe cstring data is alloc'd and passed into a C function outside the snippet, but that doesn't seem to affect the segfault
[00:57:15] <FromDiscord> <Phil> (edit) "<KeyValuePair[system.int," => "<KeyValuePair[system.int64,"
[00:59:10] <FromDiscord> <Elegantbeef> you're passing `addr pointer`
[00:59:20] <FromDiscord> <Elegantbeef> Works fine
[00:59:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U7F
[01:00:13] <FromDiscord> <Anuke> Originally I was using `cstring` for assetData - that's a pointer and doesn't need `addr`?
[01:00:30] <FromDiscord> <Elegantbeef> `addr pointer` is a pointer to the stack `assetData` then you attempt to copy `size` from there and causes it to dereference ahead stack
[01:00:45] <FromDiscord> <Elegantbeef> cstring  is `ptr char` internally
[01:00:54] <FromDiscord> <Elegantbeef> you only need `addr` when you want to copy from a stack variable in this case
[01:01:19] <FromDiscord> <Anuke> right, so I was double-addressing, thanks
[01:01:34] <FromDiscord> <Elegantbeef> no problem
[01:02:48] <FromDiscord> <Elegantbeef> It's a shame `$` doesnt have an optional len parameter for `cstring`
[01:04:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U7G
[01:30:25] <FromDiscord> <hmmm> hmmm what's the difference between datetime and time? when I echo them they seem the same but I can't  comprare them with > <
[01:30:47] <FromDiscord> <Elegantbeef> https://forum.nim-lang.org/t/9067
[01:31:20] <FromDiscord> <morgan> i am really confused what the compiler doesn't like about this https://media.discordapp.net/attachments/371759389889003532/959920494029733928/unknown.png https://media.discordapp.net/attachments/371759389889003532/959920494264598588/unknown.png
[01:31:33] <FromDiscord> <Elegantbeef> I havent said anything cause i dont really know, but i think `Time` is more meant for local time stamps and the sort and `DateTime` is for interacting with time from any source
[01:31:51] <FromDiscord> <hmmm> "For conversion from Time to DateTime, you have local(dt:DateTime) and utc(dt:DateTime)"
[01:32:04] <FromDiscord> <hmmm> ok beefy what do I want here, time to datetime or the other
[01:32:07] <FromDiscord> <Elegantbeef> Compiiler error morgan?
[01:32:18] <FromDiscord> <Elegantbeef> Ah nvm
[01:32:23] <FromDiscord> <Elegantbeef> `cv` is not mutable
[01:32:28] <FromDiscord> <morgan> ah
[01:32:32] <FromDiscord> <Elegantbeef> do `cv: var CommandVariant`
[01:32:46] <FromDiscord> <morgan> thanks
[01:32:54] <FromDiscord> <Elegantbeef> Your error message says that in it somewhere
[01:33:05] <FromDiscord> <Elegantbeef> If the tooling error message doesnt help refer to the compiler
[01:33:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:33:59] <FromDiscord> <morgan> all it said that could be hinting at that was all the non-ref table types had var in the signature
[01:34:34] <FromDiscord> <Elegantbeef> I'm certain the mismatches  will say `expected var CommandSubvariant but got CommandSubVariant`
[01:34:47] <FromDiscord> <morgan> nope
[01:34:53] <FromDiscord> <Elegantbeef> I know they do
[01:34:55] <FromDiscord> <Elegantbeef> Dont lie to me
[01:35:25] <FromDiscord> <morgan>  https://media.discordapp.net/attachments/371759389889003532/959921515325980682/unknown.png
[01:35:36] <FromDiscord> <Elegantbeef> Compiler error mesage
[01:35:40] <FromDiscord> <Elegantbeef> COMPILER
[01:35:52] <FromDiscord> <morgan> oh you mean run it and see what that says?
[01:36:11] <FromDiscord> <Elegantbeef> Ah this is actually a rare case where it doesnt
[01:36:14] <FromDiscord> <Elegantbeef> I take it back
[01:36:42] <FromDiscord> <hmmm> beefy you can't take an all caps compiler back like that
[01:36:45] <FromDiscord> <morgan> lol
[01:36:48] <FromDiscord> <Elegantbeef> Too many overloads so it doesnt mention the var mismatch
[01:37:01] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:37:19] <FromDiscord> <hmmm> it is expected you send a nice emoticon to take that back
[01:37:19] <FromDiscord> <Elegantbeef> Compiler still needs to explicitly state when the mismatch is due to immutabillity
[01:38:02] <FromDiscord> <morgan> yeah there are some error messages that have been very cryptic
[01:38:13] <FromDiscord> <morgan> i had one in another that was solved by adding a var
[01:38:18] <FromDiscord> <morgan> lemme see if it mentioned that
[01:38:21] <FromDiscord> <hmmm> anyway I decided Time is for boomers and i will local(Time) to the new and shiny DateTime, seems the only progressive thing to do üßê
[01:38:36] <FromDiscord> <morgan> just says it can't be assigned to
[01:38:48] <FromDiscord> <Elegantbeef> Feel free to write them down when you hit them, can encourage improving errors
[01:39:31] <FromDiscord> <morgan> would be cool if there's a way to get some error id so i could say error 69420 needs improving or whatever
[01:39:47] <FromDiscord> <Elegantbeef> I mean you can just say the type of error
[01:39:50] <FromDiscord> <Elegantbeef> There arent many
[01:40:25] *** Quits: pro (~pro@user/pro) (Quit: pro)
[01:40:50] <FromDiscord> <morgan> ah ok
[01:41:07] <FromDiscord> <Elegantbeef> I do like the idea of improving errors, some are more difficult to improve and might cause people to be angry though
[01:41:34] <FromDiscord> <hmmm> angry people are my speciality, send them to me
[01:42:42] <FromDiscord> <morgan> yea it would be nice to have something as friendly as rust's error messages
[01:42:57] <FromDiscord> <morgan> one that trips me up is the error on tabs instead of spaces
[01:43:09] <FromDiscord> <Elegantbeef> What do you mean?
[01:43:14] <FromDiscord> <morgan> since i press tab to indent 4 spaces instead of pressing space some number of times
[01:43:25] <FromDiscord> <morgan> and it doesn't mention that it's because of a tab char
[01:43:36] <FromDiscord> <Elegantbeef> Well that's what a tab is
[01:43:39] <FromDiscord> <morgan> and vscode seems to have that as a file setting not a workspace setting
[01:43:57] <FromDiscord> <Elegantbeef> Your tab key doesnt generally insert actual tabs in most editors
[01:44:08] <FromDiscord> <Elegantbeef> Editors generally default to spaces funnily enough
[01:44:18] <FromDiscord> <morgan> no it works as a tab char in vscode
[01:44:24] <FromDiscord> <Elegantbeef> So many people are like "I hate spaces" but use spaces
[01:44:30] <FromDiscord> <Elegantbeef> No vscode defaults to spaces
[01:44:33] <FromDiscord> <morgan> unless you set it to insert spaces
[01:44:47] <FromDiscord> <morgan> ok well then some number of years ago i set it to use tabs
[01:44:54] <FromDiscord> <morgan> as a general setting
[01:44:58] <FromDiscord> <Elegantbeef> It defaults to spaces but also can detect indentation
[01:45:37] <FromDiscord> <Elegantbeef> Anyway i think for this given error a simple "Atleast one mismatch is due to immutable `insertSymbolHere`"
[01:45:52] <FromDiscord> <morgan> im just saying that when someone uses a tab character, it should give a more helpful error message
[01:46:02] <FromDiscord> <Elegantbeef> It gives a helpful one
[01:46:53] <FromDiscord> <morgan> oh now it does
[01:47:07] <FromDiscord> <morgan> a couple days ago it gave me something super confusing
[01:47:29] <FromDiscord> <Elegantbeef> Were you perhaps on an old nim version?
[01:47:42] <FromDiscord> <morgan> i did recently update vscode so it might've been using an old version of some extension
[01:48:17] <FromDiscord> <morgan> aha there's a weird error message when i run it
[01:48:25] <FromDiscord> <morgan> `...tempCodeRunnerFile.nim(1, 4) Error: expression expected, but found ':'`
[01:48:37] <FromDiscord> <morgan>  https://media.discordapp.net/attachments/371759389889003532/959924843552321576/unknown.png
[01:48:38] <FromDiscord> <Elegantbeef> code?
[01:48:49] <FromDiscord> <Elegantbeef> You really hate me
[01:49:49] <FromDiscord> <Elegantbeef> all the way back to 0.13.0 the compiler gives a tabs not allowed\\
[01:49:57] <FromDiscord> <Elegantbeef> Nim -v?
[01:50:29] <FromDiscord> <morgan> sent a code paste, see https://play.nim-lang.org/#ix=3U7T
[01:50:40] <FromDiscord> <morgan> sent a code paste, see https://play.nim-lang.org/#ix=3U7U
[01:51:18] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/959925517765734420/image.png
[01:51:38] <FromDiscord> <morgan> huh
[01:52:17] <FromDiscord> <Elegantbeef> Even with nimsuggest the first errors are about tabs
[01:52:44] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/959925876689109032/image.png
[01:57:54] <FromDiscord> <morgan> gotta figure out how i installed nim to try updating it
[01:58:58] <FromDiscord> <morgan> cos choosenim isn't resolving
[02:00:08] <FromDiscord> <morgan> nimble isn't either
[02:00:09] <FromDiscord> <morgan> wtf
[02:01:06] <FromDiscord> <morgan> maybe it's suggested fish command needs to be run when fish starts up because it's not storing it right
[02:01:59] <FromDiscord> <morgan> ok yeah up to date
[02:03:48] <FromDiscord> <morgan> maybe it's specific to the mac build
[02:04:02] <FromDiscord> <Elegantbeef> Is it the compiler giving that message or the tooling?
[02:04:50] <FromDiscord> <morgan> In reply to @MorganAlyssa "`...tempCodeRunnerFile.nim(1, 4) Error: expression": `nim compile --verbosity:0 --hints:off --run [file]`
[02:05:24] <FromDiscord> <Elegantbeef> Yea i get the proper error here
[02:05:54] <FromDiscord> <morgan> weird
[02:05:59] <FromDiscord> <morgan> anyways i gotta go
[02:06:13] <FromDiscord> <Elegantbeef> only difference is you're on mac
[02:09:10] <FromDiscord> <biz> can you use a variable inside of itself
[02:09:11] <FromDiscord> <biz> like
[02:09:22] <FromDiscord> <biz> the sequence inside of the sequence itself
[02:09:51] <FromDiscord> <biz> sent a code paste, see https://play.nim-lang.org/#ix=3U82
[02:10:32] <FromDiscord> <Elegantbeef> The procedure would have to become a closure and the proc assigned after the construction
[02:13:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:20:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:25:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:29:47] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:ec86:6fb7:71c0:c467)
[02:37:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[02:57:47] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:c2f2:fbad:af19:3581) (Ping timeout: 260 seconds)
[03:18:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:31:01] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:7dd5:726:e02c:c7cf)
[03:34:47] *** Joins: zeus-supreme (~tt@82-132-214-40.dab.02.net)
[03:34:59] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[03:36:50] *** Quits: zeus-supreme1 (~tt@82-132-215-133.dab.02.net) (Read error: Connection reset by peer)
[03:57:09] <FromDiscord> <salt> is it possible to drop the `all_classes` table and somehow bind the idents (for bases) in the macro? I get errors when I use bindsym: https://play.nim-lang.org/#ix=3U8x
[03:58:50] <FromDiscord> <Elegantbeef> what do you mean exactly?
[04:01:29] <FromDiscord> <salt> sent a code paste, see https://play.nim-lang.org/#ix=3U8C
[04:02:36] <FromDiscord> <Elegantbeef> Where would `base`'s sym even exist?
[04:03:29] <FromDiscord> <salt> i assume it does after the previous macros are called and some classes exist --- that is, classes in the bases portion of the macro should be defined already
[04:06:34] <FromDiscord> <salt> maybe they don't, i don't really know how and when macros are expanded in the compiler or anything
[04:11:17] <FromDiscord> <Elegantbeef> They'e expanded chronologically
[04:11:49] <FromDiscord> <Elegantbeef> You can try bindsym with `{.experimental: "dynamicBindSym".}` but i dont think it'll work, could be wrong
[04:12:35] <FromDiscord> <Elegantbeef> you could use the macro cache and have the macro subscribe itself after generating
[04:12:56] <FromDiscord> <salt> i was thinking by the time i got to the `class K1(...)` the idents inside the `...` could be bound
[04:13:14] <FromDiscord> <salt> or looked up without a table
[04:13:14] <FromDiscord> <Elegantbeef> Well you could have `typed`
[04:13:37] <FromDiscord> <Elegantbeef> The right hand of the class macro could be typed
[04:13:47] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:7dd5:726:e02c:c7cf) (Ping timeout: 252 seconds)
[04:14:06] <FromDiscord> <Elegantbeef> But it means you do `class A, (C, B, A)` or similar
[04:14:47] *** Joins: lumo_e (~enrico@93-56-64-2.ip314.fastwebnet.it)
[04:15:23] <FromDiscord> <salt> maybe `class K1 of C, B, A`?
[04:15:34] <FromDiscord> <salt> i don't know if that can be typed either
[04:15:40] <FromDiscord> <Elegantbeef> The issue there is that's not valid code
[04:15:48] <FromDiscord> <Elegantbeef> typed has to correct
[04:16:24] <FromDiscord> <Elegantbeef> Like i said though the macro can subscribe the type at the end
[04:17:03] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/7CT
[04:17:29] <FromDiscord> <Elegantbeef> subscribe as the name implies adds `A` to a `macrocache.CacheSeq`
[04:17:56] *** Joins: vicfred (~vicfred@user/vicfred)
[04:18:48] <FromDiscord> <salt> i will try and experiment with this, thanks
[04:19:22] <FromDiscord> <Elegantbeef> Depending on how this is supposed to be used you could make all your operators on that type be macros that check the table for `val.eqIdent mySym`
[04:19:37] <FromDiscord> <Elegantbeef> Then use `mySym` for the operation
[04:20:58] <FromDiscord> <Elegantbeef> The cacheseq of course means you have a single instance of any name
[04:21:28] <FromDiscord> <salt> the use is for inheritable behaviors (that can redefine methods) in a widget-ful library -- truth is, i don't really need full C3 linearization, but it was easy enough to implement
[04:21:39] <FromDiscord> <Elegantbeef> Are you doing MI related inheritance?
[04:22:11] <FromDiscord> <salt> not MI, but TUI widgets
[04:22:56] <FromDiscord> <salt> attributes and methods will probably be a chainmap of tables from the mro
[04:23:11] <FromDiscord> <Elegantbeef> I do have to ask what's wrong with Nim's OOP?
[04:23:26] <FromDiscord> <salt> behaviors that overwrite methods aren't possible with single inheritance
[04:23:52] <FromDiscord> <Elegantbeef> An example of this?
[04:24:03] <FromDiscord> <Tuatarian> is there a good way to modify an iterator?
[04:24:18] <FromDiscord> <Elegantbeef> Copy it and modify it
[04:24:29] <FromDiscord> <Elegantbeef> Unless you mean something other than the source code
[04:24:33] <FromDiscord> <Tuatarian> that's unfortunate
[04:24:37] <FromDiscord> <Tuatarian> nope that's exactly what I meant
[04:24:45] <FromDiscord> <Tuatarian> I want to make walkDir just give me paths
[04:24:59] <FromDiscord> <Tuatarian> weird that this isn't a thing built in tbh
[04:25:41] <FromDiscord> <Elegantbeef> You know it can
[04:25:42] <FromDiscord> <Elegantbeef> You want to iterate only directories?
[04:26:11] <FromDiscord> <Elegantbeef> Dont know if it'll work the same but `walkDirRec(path, yieldFiter: {pcDir}, folloFilter ={})` might work
[04:26:21] <FromDiscord> <Elegantbeef> followFilter\
[04:26:31] <FromDiscord> <Elegantbeef> Assuming you want only directories
[04:26:46] <FromDiscord> <Elegantbeef> also `yieldFilter = {pcDir}`
[04:26:46] <FromDiscord> <Elegantbeef> I dont know what "paths" means exactly
[04:27:18] <FromDiscord> <Tuatarian> like the path to the fille
[04:27:33] <FromDiscord> <Elegantbeef> So you just dont want the path component?
[04:27:39] <FromDiscord> <Tuatarian> I want only the pth component
[04:27:45] <FromDiscord> <Tuatarian> don't need the kind component
[04:27:56] <FromDiscord> <Elegantbeef> the kind is the path component
[04:28:08] <FromDiscord> <Elegantbeef> `for (_, path) in walkDir("someDir")`
[04:28:10] <FromDiscord> <Elegantbeef> That's why it doesnt exist
[04:28:31] <FromDiscord> <Elegantbeef> Might even be able to do `for _, path in walkDir("someDir")`
[04:28:44] <FromDiscord> <Tuatarian> now I'm more confused lmao
[04:28:51] <FromDiscord> <Tuatarian> it gives a tupe of (kind, path) right?
[04:28:54] <FromDiscord> <Tuatarian> I just want the path
[04:28:55] <FromDiscord> <Elegantbeef> What?
[04:29:05] <FromDiscord> <Elegantbeef> I just showed you how to get just the path
[04:29:21] <FromDiscord> <Tuatarian> ohh I see
[04:29:29] <FromDiscord> <Tuatarian> is there any way to make that work in toSeq?
[04:29:36] <FromDiscord> <Tuatarian> or would I use collect() for this?
[04:29:45] <FromDiscord> <Elegantbeef> I question why you're using toseq üòõ
[04:30:01] <FromDiscord> <Elegantbeef> You'd probably use collect i guess
[04:30:04] <FromDiscord> <Tuatarian> need a sequence of all the files in the folder to use later
[04:30:27] <FromDiscord> <Tuatarian> I completely forgot collect() exists
[04:30:28] <FromDiscord> <Tuatarian> thanks!
[04:31:03] <FromDiscord> <Elegantbeef> No problem
[04:31:22] <FromDiscord> <Elegantbeef> Do you have an example of what you're wanting behaviour wise?‚Üµ(@salt)
[04:31:26] *** Quits: lumo_e (~enrico@93-56-64-2.ip314.fastwebnet.it) (Quit: Quit)
[04:33:30] <FromDiscord> <salt> sent a code paste, see https://play.nim-lang.org/#ix=3U8G
[04:33:58] <FromDiscord> <salt> (edit) "https://play.nim-lang.org/#ix=3U8G" => "https://play.nim-lang.org/#ix=3U8H"
[04:34:33] <FromDiscord> <salt> buttonbehavior would probably have it's own procs as well --- with multiple inheritance i can just add these to a vtable
[04:34:44] <FromDiscord> <Elegantbeef> Yea makes sense
[04:35:06] <FromDiscord> <Elegantbeef> Could get close using concepts and generically constrained procedures
[04:35:54] <FromDiscord> <salt> the inheritance tree is not that complicated, usually just a chain and no diamonds, but still need multiple inheritance i feel
[04:36:15] <FromDiscord> <Elegantbeef> Well eitherway prestige will be happy to see you working on this
[04:36:32] <FromDiscord> <Elegantbeef> I think you might be able to use generics to solve things like button but i could be wrong
[04:36:38] <nrds> <06Prestige99> :)
[04:37:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U8I
[04:37:34] <FromDiscord> <salt> i was looking into this, but i didn't know how to overwrite another method with it
[04:37:51] <FromDiscord> <salt> need some version of super().on_click
[04:38:09] <FromDiscord> <salt> ideally, for better widgets
[04:38:24] <FromDiscord> <Elegantbeef> use the macro to propogate up to the parent and call it's `onClick`
[04:38:46] <FromDiscord> <Elegantbeef> Like i said i could very well be wrong
[04:39:18] <FromDiscord> <Elegantbeef> If this can be reasoned statically I dont think i am, but you know better than I
[04:39:37] <FromDiscord> <salt> no idea, i'm like 2 weeks into nim
[04:40:04] <FromDiscord> <Elegantbeef> I mean Niim does have `procCall` which forces static dispatch
[04:40:38] <FromDiscord> <Elegantbeef> https://nimdocs.com/beef331/oopsie/oopsie.html#super.m%2CInherits and you can relatively easily write a `super` macro
[04:40:58] <nrds> <06Prestige99> Beef, it seems createTarball with zippy will not include symlinks. You have any experience with this?
[04:41:31] <FromDiscord> <Elegantbeef> Guzba is probably a better person to ask
[04:41:45] <FromDiscord> <salt> the two oop libraries i looked at in nim didn't have multiple inheritance, but once you have an mro, `super` should be simple to look up
[04:41:48] <nrds> <06Prestige99> not sure if I've ever seen him talk around here
[04:41:59] <FromDiscord> <Elegantbeef> He does
[04:42:08] <FromDiscord> <Elegantbeef> Might take a bit to get back to you but he's on discord
[04:42:31] <nrds> <06Prestige99> ah yeah I see the issue
[04:42:34] <FromDiscord> <Elegantbeef> Can also make an issue
[04:42:39] <nrds> <06Prestige99> maybe I'll just make a pr
[04:42:51] <FromDiscord> <Elegantbeef> Have fun
[04:43:20] <FromDiscord> <Elegantbeef> Yea salt my point was mainly i dont see if there is really any need for MI if you're just using it like rust traiits
[04:44:18] <FromDiscord> <Elegantbeef> I'm a simpleton so I could misunderstand what you're trying
[04:46:21] <FromDiscord> <salt> sent a code paste, see https://play.nim-lang.org/#ix=3U8J
[04:47:05] <FromDiscord> <Elegantbeef> I'm half asking if that can be encoded in type instead of forced upon the type i gues
[04:47:39] <FromDiscord> <Elegantbeef> Like what's a themeable widget if not a widget with a `theme: Theme` field
[04:48:27] <FromDiscord> <salt> and a `proc update_theme`
[04:48:50] <FromDiscord> <Elegantbeef> And what's a toggableButtong if not a type that implements `onClick`, `hover`, and a field `toggled: bool`
[04:49:34] <FromDiscord> <salt> yeah, most of these don't intersect, but some methods do -- a few methods need to be composable, like `on_click` and maybe a `render`
[04:49:51] <FromDiscord> <Elegantbeef> Perhaps use pointer procs for those then?
[04:50:03] <FromDiscord> <Elegantbeef> Or methods specifically for those types
[04:52:33] <FromDiscord> <Elegantbeef> I guess there is still the issue of downcasting to the proper type nicely, which nim doesnt provide aside from methods
[04:52:38] <FromDiscord> <Elegantbeef> So i suppose carry on and i'll shush
[04:53:01] <FromDiscord> <salt> maybe, the only other solution i imagined involved dumping a lot of behavior flags into the, say, `Widget` type, and dispatching based on those, but it seemed more complicated than just implementing multiple inheritance
[04:54:00] <FromDiscord> <salt> i feel like the macro system allows relatively easy implementation of this, i'm just unfamiliar so it's taking a fair amount of effort
[04:54:40] <FromDiscord> <Elegantbeef> Yea the macro system is lovely
[04:55:21] <FromDiscord> <salt> the syntax of nim is super enjoyable though
[04:55:29] <FromDiscord> <salt> easy sell
[04:56:01] <FromDiscord> <Elegantbeef> BuT iT hAs sIgNiFiCanT WhiteSpAcE üòõ
[04:56:13] <FromDiscord> <salt> it's a feature
[04:56:39] <FromDiscord> <Elegantbeef> Eh i'm joking but it's a common complaint
[04:57:01] <FromDiscord> <salt> i'm coming from python, so i hear it there sometimes as well
[04:57:06] <FromDiscord> <Elegantbeef> My favourite is "my code should be able to be written on a single line" like that's' a feature
[04:57:36] <FromDiscord> <salt> sent a code paste, see https://paste.rs/fyH
[04:57:50] <FromDiscord> <Elegantbeef> `{}` is atleast better than begin end\`
[04:57:56] <FromDiscord> <salt> this is true
[04:58:17] <FromDiscord> <Elegantbeef> Rainbow indents and indention lines are the best answer imo
[04:59:32] <FromDiscord> <salt> i actually don't use either, my eye feels pretty comfortable judging scope even with 2 space indents
[04:59:53] <FromDiscord> <salt> i've spent years with pep 8 python 4 space indents though
[05:00:25] <FromDiscord> <Elegantbeef> Yea with monospace it's pretty easy to see indent
[05:00:51] <FromDiscord> <Elegantbeef> Trying to see spaces in element is PITA when it's not rendered as code
[05:04:45] *** Quits: hellstabber (~hellstabb@178.233.17.95) (Quit: Textual IRC Client: www.textualapp.com)
[05:07:55] *** Quits: pch (~pch@66.49.131.33) (Quit: Leaving)
[05:48:31] *** Joins: neurocyte86141 (~neurocyte@user/neurocyte)
[05:50:55] *** Quits: neurocyte8614 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[05:50:55] *** neurocyte86141 is now known as neurocyte8614
[06:22:06] <FromDiscord> <ajusa> man I just spent an hour trying to read an email from gmail, no dice. turns out gmail/other mail providers extend imap with oauth2 for login now
[06:55:44] <FromDiscord> <Patitotective> In reply to @Elegantbeef "`{}` is atleast better": `igBegin` `igEnd` ü•≤  lol
[06:56:12] <FromDiscord> <Elegantbeef> QED
[06:56:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U8Z
[06:57:47] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/Qy6
[06:57:49] <FromDiscord> <Elegantbeef> Yes
[06:58:13] <FromDiscord> <Patitotective> i think you are underestimated
[06:58:58] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:59:02] <FromDiscord> <Elegantbeef> What?
[07:01:38] <FromDiscord> <demotomohiro> What if there is break or return inside body?
[07:02:04] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3U90
[07:02:18] <FromDiscord> <Elegantbeef> Make a  modle called `utils.nim`
[07:02:28] <FromDiscord> <Elegantbeef> Fine demo you win
[07:03:22] <FromDiscord> <Patitotective> In reply to @Elegantbeef "Make a  modle": do you mean? create it apart from `commons.nim` or rename `commons.nim` to `utils.nim`?
[07:03:33] <FromDiscord> <demotomohiro> Making an obect that calls `igEnd` in destractor mighit better. Or call `igEnd` in defer.
[07:05:21] <FromDiscord> <Elegantbeef> I dont name things as useless as `commons.nim`‚Üµ(@Patitotective)
[07:05:33] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3U91
[07:05:39] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3U91" => "https://paste.rs/YNJ"
[07:06:10] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Ewz
[07:06:11] <FromDiscord> <Elegantbeef> Whichever you prefer
[07:06:27] <FromDiscord> <Elegantbeef> Flow control still can fuck this up though
[07:06:45] <FromDiscord> <Patitotective> hmm, let me test it
[07:07:33] <FromDiscord> <Elegantbeef> Guess i'm wrong about the flow control
[07:07:57] <FromDiscord> <Elegantbeef> you also might want to use `typed` instead
[07:08:23] <FromDiscord> <Patitotective> what is the difference? ü§®
[07:08:34] <FromDiscord> <Elegantbeef> Between `typed` and `untyped`?
[07:08:56] <FromDiscord> <Patitotective> yea lol
[07:09:19] <FromDiscord> <Elegantbeef> typed is semantically checked which means that errors will appear before the template is exapanded and will make more sense
[07:10:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U92
[07:11:16] <FromDiscord> <Patitotective> and why should i use it? i looks more complex lol
[07:11:34] <FromDiscord> <Elegantbeef> It's virtually the same as the others
[07:11:40] <FromDiscord> <Elegantbeef> I was just giving it as a concrete example
[07:13:31] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3U93
[07:13:59] <FromDiscord> <Elegantbeef> No you have to pass them
[07:14:06] <FromDiscord> <Patitotective> :C
[07:14:11] <FromDiscord> <Patitotective> its not that fun now lmao
[07:14:34] <FromDiscord> <Elegantbeef> You can always have defaults that are used and an `igWindow` that doesnt take any
[07:15:24] <FromDiscord> <Patitotective> wdym? like `template igWindow(name: cstring = ""; p_open: ptr bool = nil; flags: ImGuiWindowFlags = 0.ImGuiWindowFlags; body: typed) = `
[07:15:25] <FromDiscord> <Patitotective> (edit) "`" => "`?"
[07:15:38] <FromDiscord> <Elegantbeef> Yes that should work
[07:19:36] <FromDiscord> <Patitotective> and is there a way i could do this automatically? like search through all `imgui` procedures, filter the ones that start with `igBegin` and create a template with its args?
[07:20:43] <FromDiscord> <Elegantbeef> Nope you could make a macro that does it if you list the names manually though
[07:21:23] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U94
[07:22:09] <FromDiscord> <Patitotective> i can't list the procedures from a compiled binary?
[07:22:27] <FromDiscord> <Elegantbeef> What?
[07:22:42] <FromDiscord> <Patitotective> like python's inspect https://docs.python.org/3/library/inspect.html
[07:23:00] <FromDiscord> <Patitotective> get all the procedures in a module
[07:23:01] <FromDiscord> <Elegantbeef> Did you ignore the macro thing
[07:23:37] <FromDiscord> <Elegantbeef> Nim doesnt have that presently
[07:23:50] <FromDiscord> <Patitotective> i mean, it would be too tiring to have to look at the docs and write the names manually for the macro
[07:24:15] <FromDiscord> <Patitotective> well, maybe in the future another patito will do this
[07:24:36] <NimEventer> New thread by Thegrapevine: How setBlocking to false on newSocket?, see https://forum.nim-lang.org/t/9071
[07:26:04] <FromDiscord> <Elegantbeef> Ideally there'd be a `getSymbols` which you can then iterate all exposed symbols of a given kind
[07:27:03] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 260 seconds)
[07:33:01] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3U95
[07:33:47] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:35:03] <FromDiscord> <Elegantbeef> you can do `flieExists` or `dirExists` but there is no way to tell if it's a file or path especially on unix
[07:35:11] <FromDiscord> <Elegantbeef> since `/home/Downloads/something` can be both
[07:35:25] <FromDiscord> <Patitotective> ok
[07:51:52] <nrds> <06Prestige99> man zippy really needs docs
[08:03:04] <FromDiscord> <Elegantbeef> Time to make an issue üòõ
[08:03:16] <nrds> <06Prestige99> Someone did and it's actually really funny
[08:03:32] <nrds> <06Prestige99> https://github.com/guzba/zippy/issues/13
[08:03:43] <nrds> <06Prestige99> very meta
[08:03:47] <FromDiscord> <Elegantbeef> Lol
[08:04:03] <FromDiscord> <Elegantbeef> I have to applaud that joke
[08:04:23] <nrds> <06Prestige99> Best thing I've seen all day
[08:05:50] <FromDiscord> <aph> lmfao
[08:10:34] <FromDiscord> <Patitotective> how can i export an png from a svg with nim?
[08:10:38] <FromDiscord> <Patitotective> (edit) "an" => "a"
[08:10:43] <FromDiscord> <Elegantbeef> `pixie`
[08:12:21] <FromDiscord> <Patitotective> treeform does a lot of cool stuff actually
[08:13:08] <FromDiscord> <aph> is there a ffmpeg wrapper in nim btw :)
[08:13:34] <FromDiscord> <Elegantbeef> https://github.com/momeemt/ffmpeg.nim
[08:14:25] <FromDiscord> <aph> oh ye, i forgor i can go to nimble.directory to search lol
[08:14:27] <FromDiscord> <aph> thanks anyways
[08:34:09] <FromDiscord> <aph> :(
[08:34:12] <FromDiscord> <aph> sent a code paste, see https://paste.rs/1R7
[08:34:16] <FromDiscord> <Elegantbeef> you're importing system
[08:34:21] <FromDiscord> <Elegantbeef> It's automatically imported you dont need to do that
[08:34:24] <FromDiscord> <aph> ohh
[08:34:27] <FromDiscord> <aph> thanks
[08:47:55] <FromDiscord> <Patitotective> is there something like this `format("hey, my name is {}", "beef")`?
[08:48:10] <FromDiscord> <Patitotective> so i can have a "string template" and i can just put the variables in
[08:49:45] <FromDiscord> <Patitotective> nvm https://nim-lang.org/docs/strutils.html#%25%2Cstring%2CopenArray%5Bstring%5D
[09:01:56] <FromDiscord> <abdu> How to free as equivalent in C or as doing `delete` in C++ (after a newSeqOfCap)
[09:02:17] <FromDiscord> <Elegantbeef> `= @[]`
[09:03:34] <FromDiscord> <abdu> that's not at all deallocate memory
[09:04:16] <FromDiscord> <Elegantbeef> You said after a newseqofcap
[09:04:19] <FromDiscord> <Elegantbeef> I have 0 idea the context so provide code
[09:04:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U9g
[09:04:48] <FromDiscord> <demotomohiro> `seq`, `string` and `ref` types are freed when exit their scope
[09:05:45] <FromDiscord> <abdu> "after a newSeqOfCap"‚Üµwe believe it's simple clear
[09:05:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U9h
[09:06:26] <FromDiscord> <abdu> has no scope here as newSeqOfCap is on topmost / global zone
[09:06:52] <FromDiscord> <Elegantbeef> It deallocates the original memory, you cannot deallocate GC'd memory, you can only `GcUnref`, `GcRef`, or `GcFullCollect`
[09:07:13] <FromDiscord> <demotomohiro> You can create scope with `block`.
[09:07:15] <FromDiscord> <Elegantbeef> The entire point of Gc'd memory is you dont manage it manually
[09:07:22] <FromDiscord> <abdu> (edit) "zone" => "zone‚Üµand it's repeated so many by many template invocation"
[09:07:53] <FromDiscord> <Elegantbeef> I think araq says you're supposed to do `if true` but that's neither here nor there
[09:08:58] <FromDiscord> <abdu> and it's repeated so many by many template invocation ‚Üµthat's why ask above how Nim command equivalent C / C++ one available
[09:09:23] <FromDiscord> <Elegantbeef> You cannot manually deallocated GC'd memory without hacks
[09:10:01] <FromDiscord> <Elegantbeef> The best you can do is provide it a state that is cheap
[09:10:20] <FromDiscord> <Elegantbeef> So `a = newSeqOfCap[int](0)` in the above of `a = @[]`
[09:10:27] <FromDiscord> <demotomohiro> Why you cannot use `block` or procs to create scoope and need to explicitly deallocate memory?
[09:10:44] <FromDiscord> <Elegantbeef> Is that to me?
[09:11:05] <FromDiscord> <demotomohiro> it is to @abdu
[09:11:13] <FromDiscord> <Elegantbeef> Ah just making sure
[09:11:18] <FromDiscord> <abdu> I'll try in Nim Workshop (WS)
[09:11:18] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:11:41] <FromDiscord> <abdu> use block: to get around
[09:12:28] <FromDiscord> <Elegantbeef> "Nim Workshop"?
[09:12:32] <FromDiscord> <demotomohiro> I rarely explicitly dellocate memory of seq. They are freed when get out of scope.
[09:12:47] <FromDiscord> <Elegantbeef> Yea i mean that's the point
[09:13:03] <FromDiscord> <Elegantbeef> You dont really need to worry about memory more just ensure you dont dumbly allocate
[09:17:20] <FromDiscord> <Elegantbeef> I personally know i've done `setLen(0)` more than `= @[]`
[09:17:42] <FromDiscord> <demotomohiro> Maybe `a = default(seq[int])` or `a.reset` free heap.
[09:18:34] <FromDiscord> <Elegantbeef> It's hard to say without access to the \`capcity
[09:18:47] <FromDiscord> <demotomohiro> `setLen(0)` still keep internal heap, isn't it?
[09:18:58] <FromDiscord> <Elegantbeef> yes
[09:19:04] <FromDiscord> <Elegantbeef> The point is you dont want to reallocate but want to reset the data
[09:19:18] <FromDiscord> <demotomohiro> ok
[09:20:41] <FromDiscord> <Elegantbeef> `reset ` and `= @[]` turn it into a nil ptr
[09:21:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U9m
[09:21:18] <FromDiscord> <Elegantbeef> So like i said `= @[]` deallocates
[09:21:48] <FromDiscord> <Elegantbeef> If you do want to see the internals of the seq it's just `(len, cap, data...)`
[09:24:04] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U9n
[09:46:47] <FromDiscord> <demotomohiro> Internal data layout of `seq` is different in `--mm:arc` or `--mm:orc`.
[09:46:49] <FromDiscord> <demotomohiro> https://wandbox.org/permlink/ghvCMvgdY4GeViRq
[09:49:57] <FromDiscord> <Elegantbeef> Ah right len has moved to the heap
[09:50:01] <FromDiscord> <Elegantbeef> well data
[10:04:45] *** Joins: zeus-supreme1 (~tt@82-132-212-64.dab.02.net)
[10:08:03] *** Quits: zeus-supreme (~tt@82-132-214-40.dab.02.net) (Ping timeout: 260 seconds)
[10:35:03] <NimEventer> New thread by Thegrapevine: Net: recv/readLine: How receive more one line or not waiting for fill buffer size?, see https://forum.nim-lang.org/t/9072
[10:55:52] <FromDiscord> <morgan> is there a stdlib type for a filesystem path? std/uri only has examples for web urls
[10:56:35] <FromDiscord> <Elegantbeef> `std/os` has file system handling if you want a typesafe api there is a hidden one somewhere iirc
[10:56:54] <FromDiscord> <morgan> basically i want to store a path to a file but not store the file opened
[10:57:11] <FromDiscord> <morgan> i can store it as a string but im wondering if there's a path type
[10:57:27] <FromDiscord> <Elegantbeef> There is a hidden one but generally it's just `string`
[10:57:31] <FromDiscord> <morgan> ok
[11:00:32] <FromDiscord> <Elegantbeef> I think apart of Nim2.0 will be to have typesafe paths
[11:00:54] <FromDiscord> <morgan> good to know
[11:09:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[11:10:07] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:ec86:6fb7:71c0:c467) (Ping timeout: 260 seconds)
[11:25:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[11:28:18] <FromDiscord> <Rika> In reply to @Elegantbeef "There is a hidden": Where is the hidden one
[11:31:39] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/blob/devel/compiler/pathutils.nim
[11:32:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:34:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[11:35:03] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:37:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[11:39:57] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[11:40:56] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[11:45:56] <FromDiscord> <Rika> Ah of course the compiler api
[11:54:11] <FromDiscord> <coldfussion> sent a code paste, see https://paste.rs/Tek
[11:54:17] <FromDiscord> <Elegantbeef> It's not
[11:54:33] <FromDiscord> <Elegantbeef> What's the issue?
[11:54:54] <FromDiscord> <Rika> ?
[11:56:01] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3U9N
[11:56:05] <FromDiscord> <Elegantbeef> Full code
[11:57:25] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3U9P
[11:58:22] <FromDiscord> <Elegantbeef> `nim -v`?
[11:58:42] <FromDiscord> <Rika> `f: untyped` conflicts with `var f`
[11:58:53] <FromDiscord> <Rika> whatever you put in that first argument
[11:58:55] <FromDiscord> <Elegantbeef> no that's name they're giving
[11:59:06] <FromDiscord> <Rika> okay, so how is he giving it
[11:59:18] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3U9S
[11:59:39] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/SfP
[11:59:50] <FromDiscord> <Rika> thats not what i mean
[11:59:53] <FromDiscord> <Rika> how is he passing it
[11:59:56] <FromDiscord> <Elegantbeef> Upgrade to 1.6.4 regardless i cant reproduce
[12:00:24] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Fwe
[12:00:58] <FromDiscord> <coldfussion> Idk, it's literally the example from the Nim manual
[12:01:08] <FromDiscord> <Solitude> it works fine
[12:01:09] <FromDiscord> <Elegantbeef> Full code
[12:01:33] <FromDiscord> <Solitude> beef, whats your timezone?
[12:01:41] <FromDiscord> <Elegantbeef> -7
[12:01:51] <FromDiscord> <coldfussion> try raising exception in the block
[12:01:52] <FromDiscord> <Rika> can you give:‚Üµfull code‚Üµfll error
[12:02:19] <FromDiscord> <Solitude> In reply to @coldfussion "try raising exception in": why would that prevent compilation
[12:02:27] <FromDiscord> <Solitude> it works with exception too
[12:02:44] <FromDiscord> <Rika> it compiles
[12:02:51] <FromDiscord> <Elegantbeef> The issue is your code, so if you provide it you'll get an explanation why
[12:03:08] <FromDiscord> <Rika> what error are you getting, in full, and code too because we have no lead otherwise
[12:05:37] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3U9V
[12:06:10] <FromDiscord> <coldfussion> so i passed a very long n to readRawString to trigger the exception
[12:07:23] <FromDiscord> <Rika> compiles for me
[12:07:56] <FromDiscord> <coldfussion> lol now it failed even with small strings
[12:07:56] <FromDiscord> <Rika> devel or 1.6.2 works for me, compiles as expected
[12:08:07] <FromDiscord> <Rika> can you give the actual error then
[12:08:11] <FromDiscord> <Elegantbeef> on the playground i do get an error
[12:08:15] <FromDiscord> <Rika> because this is clearly not where the error is
[12:08:24] <FromDiscord> <Solitude> `Error: expression 'close(f)' is of type 'string' and has to be used (or discarded); start of expression here: /home/solitude/test.nim(61, 3)` errors for me
[12:08:34] <FromDiscord> <Elegantbeef> Ah i found it
[12:08:34] <FromDiscord> <Rika> hmmmmm
[12:08:37] <FromDiscord> <Solitude> its because your body is expression
[12:08:40] <FromDiscord> <Elegantbeef> the issue is that `f.readRawString` returns an string
[12:08:42] <FromDiscord> <Solitude> but your finally iosnt
[12:08:45] <FromDiscord> <Rika> ah
[12:08:52] <FromDiscord> <Rika> ah i was echoing it yeah
[12:09:01] <FromDiscord> <Elegantbeef> `discard f.readRawString(4)` and problem solved
[12:09:17] <FromDiscord> <Elegantbeef> This is a compiler error though
[12:09:17] <FromDiscord> <Solitude> error message is retarded tho
[12:09:22] <FromDiscord> <Elegantbeef> So minimize it into a single file and make an issue
[12:10:13] <FromDiscord> <Elegantbeef> There you go
[12:10:14] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3U9W
[12:10:18] <FromDiscord> <Rika> its not really an issue
[12:10:19] <FromDiscord> <Elegantbeef> `/usercode/in.nim(5, 5) Error: expression 'discard' is of type 'int literal(10)' and has to be used (or discarded); start of expression here: /usercode/in.nim(6, 1)`
[12:10:28] <FromDiscord> <Elegantbeef> It is
[12:10:41] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3U9X
[12:11:03] <FromDiscord> <Rika> it doesnt
[12:11:11] <FromDiscord> <coldfussion> lol, the error messages of nim are so confusing 0\_0
[12:11:17] <FromDiscord> <Elegantbeef> This is a bug
[12:11:24] <FromDiscord> <Elegantbeef> This isnt all the error messages to be fair
[12:11:31] <FromDiscord> <Rika> its not a bug, its an issue
[12:11:58] <FromDiscord> <Rika> its "working as expected", but it was an oversight to a decision the devs made with the language
[12:12:02] <FromDiscord> <coldfussion> i get it supposed to point at `f.readRawString(4)` but it points at `f.close()` instead
[12:12:09] <FromDiscord> <Rika> this is not a bug, its really an issue
[12:12:11] <FromDiscord> <Elegantbeef> How is it not a bug a try finally inside a template incorrectly marks the wrong branch
[12:12:35] <FromDiscord> <Rika> oh
[12:12:42] <FromDiscord> <Rika> it does? i didnt realise'
[12:12:44] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/PoY
[12:12:45] <FromDiscord> <Rika> okay
[12:12:45] <FromDiscord> <Elegantbeef> `/usercode/in.nim(3, 5) Error: expression '10' is of type 'int literal(10)' and has to be used (or discarded)`
[12:13:00] <FromDiscord> <Rika> yeah no its other bug no
[12:13:01] <FromDiscord> <Rika> okay
[12:13:21] <FromDiscord> <Rika> whatever then okay
[12:13:39] <FromDiscord> <Elegantbeef> I thought it was clear with the "discard is of type int literal 10" üòõ
[12:13:58] <FromDiscord> <Rika> no, you still get that writing without the template
[12:14:13] <FromDiscord> <Rika> try it, i did
[12:14:29] *** Quits: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 256 seconds)
[12:14:41] <FromDiscord> <Elegantbeef> Oh it's not just template
[12:14:43] <FromDiscord> <Rika> xd
[12:14:44] <FromDiscord> <Rika> lol
[12:14:56] <FromDiscord> <Rika> its with try finally expressions i guess
[12:15:05] <FromDiscord> <Rika> to be fair those are rare though
[12:15:09] <FromDiscord> <Elegantbeef> It's just unhandled value in try  finally does `[^1]` instead of figuring out where it is
[12:15:27] <FromDiscord> <Rika> should be simple for you then
[12:15:58] <FromDiscord> <coldfussion> sent a code paste, see https://play.nim-lang.org/#ix=3U9Y
[12:16:09] <FromDiscord> <Elegantbeef> Yea it's just iterate each branch and find the first expression that's a type and not void
[12:16:24] <FromDiscord> <Solitude> In reply to @coldfussion "lol, the error messages": you get used to it
[12:16:28] <FromDiscord> <Elegantbeef> Info is probably already there
[12:18:20] <FromDiscord> <Elegantbeef> Do make the issue though, I'll take a look sometime soon if no one else does
[12:18:54] <FromDiscord> <Elegantbeef> Given the frequency of try expressions it's probably never been seen
[12:19:37] <FromDiscord> <Elegantbeef> Hmm actually this should  compile methinks
[12:19:55] <FromDiscord> <Elegantbeef> Eh i'm dumb
[12:20:00] <FromDiscord> <Elegantbeef> Been up too much today
[12:29:52] <FromDiscord> <aph> should i raise error if i found invalid header of file? or continue reading until it has a error?
[12:30:04] <FromDiscord> <aph> (edit) "error?" => "error reading it?"
[12:30:33] <FromDiscord> <Elegantbeef> Probably the former but depends on what you're doing
[12:30:46] <FromDiscord> <aph> hmm
[12:31:29] <FromDiscord> <aph> i'm parsing some mikumikudance files, most likely it will not have errors unless it's corrupted. there's no way a user can fix the corrupted files anyways
[12:31:35] <FromDiscord> <aph> so i'ma go for latter
[12:31:37] <FromDiscord> <aph> üòà
[12:31:54] <FromDiscord> <Elegantbeef> Thanks for asking
[12:31:57] <FromDiscord> <aph> lol true
[12:33:56] <FromDiscord> <Rika> raise a warning mayb
[12:33:58] <FromDiscord> <Rika> (edit) "mayb" => "maybe"
[12:34:58] <FromDiscord> <aph> ooh warnings
[12:44:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Gustavo6046)
[13:11:24] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[13:16:35] *** Joins: pro (~pro@user/pro)
[14:11:04] <FromDiscord> <hmmm> broskis gud sunday to u. I have a dumb algo question: if I have 2 seqs, One has some ids, one has attributes. I ordered the attribute seq, and now I want in the same order for the ids seq. I did it with 2 nested for loops and my pc is having heart attacks from the effort lol, so what is the smart kid way of doin dis
[14:16:19] <FromDiscord> <Rika> Don‚Äôt have two sequences?
[14:16:24] <FromDiscord> <Rika> Have them in a tuple?
[14:16:38] <FromDiscord> <hmmm> ü§î
[14:16:42] <FromDiscord> <hmmm> rika you might be a genius
[14:16:45] <FromDiscord> <hmmm> I'll try that
[14:17:10] <FromDiscord> <Rika> Or you may just be new to problem thinking, it‚Äôs really fun once you get a hang of it though
[14:17:19] <pro> small rant, once I found out tuples exist, tuples changed my life
[14:17:29] <FromDiscord> <Rika> You need to learn how to think more differently
[14:17:56] <FromDiscord> <Rika> In reply to @pro "small rant, once I": Lol don‚Äôt go too far though, know when to ‚Äúraise‚Äù your tuple into an object
[14:19:11] <pro> when I was reviewing some code my team wrote at uni, I was like, why the f are you not using touple here, here, here here and here, and they were, what are you talking about, you are insane, why would we need to reinvent the wheel
[14:19:29] <pro> (they had no idea what is a tuple)
[14:19:47] <pro> and language was like python, which for sure had tuples :D
[14:20:26] <FromDiscord> <Rika> That for sure has tuples lol
[14:31:56] <FromDiscord> <aph> are strings in nim using utf8 encoding?
[14:35:36] <FromDiscord> <Rika> Strings in Nim are not forced an encoding
[14:35:48] <FromDiscord> <Rika> You can hold binary data in them if wanted
[14:35:56] <FromDiscord> <Rika> In general, they use that though
[14:36:28] <FromDiscord> <aph> hmm, ty, good to know
[14:42:44] <FromDiscord> <Rika> I completely missed the April fools thing for Nim lol
[14:48:03] <FromDiscord> <aph> is there one?
[14:48:06] <FromDiscord> <aph> üëÄ
[14:48:08] <pro> pls tell
[14:49:16] <FromDiscord> <Rika> Sorry didn‚Äôt realise, here
[14:49:17] <FromDiscord> <Rika> https://forum.nim-lang.org/t/9064
[14:49:54] <FromDiscord> <Rika> Sure wonder where the idea came from, other than the fact that I mentioned it a while ago
[14:50:16] <FromDiscord> <Rika> Or did I? I remember mentioning subleq to someone somewhere lol
[14:50:19] <FromDiscord> <Rika> Probably not here
[14:50:47] <FromDiscord> <Rika> It‚Äôs a cool instruction set though
[14:50:58] <FromDiscord> <Rika> Surely a toy one but still cool
[14:51:16] <FromDiscord> <aph> ~~too much effort for an april fools~~
[14:52:11] <pro> stackoverflow was epic this year
[14:58:36] <FromDiscord> <Rika> Subleq is really fun to toy with and make an assembler for
[14:58:53] <FromDiscord> <Rika> Could be a first foray into assembler creation or whatever
[15:13:15] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 260 seconds)
[15:24:19] <FromDiscord> <Rika> Do Nim destructors have similar limitations to C++ ones?
[15:37:31] *** Joins: toulene (~toulene@user/toulene)
[16:02:40] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:04:00] *** Joins: xet7 (~xet7@user/xet7)
[16:13:50] <FromDiscord> <hmmm> rika-sama we did it
[16:14:37] <FromDiscord> <hmmm> sent a code paste, see https://play.nim-lang.org/#ix=3UaP
[16:15:12] <FromDiscord> <Rika> Congrats
[16:15:16] <FromDiscord> <hmmm> I wish I was able to do it without the byIt convenience proc but hmm, my skillz failed me. Still now it's work and it's fast
[16:24:34] <FromDiscord> <Phil> Can you actually construct a varargs type?
[16:25:22] <FromDiscord> <Phil> I'm aware how they're generally used, aka you plonk them as type into a proc and they just have a constant length fo however many arguments were thrown in there
[16:25:39] <FromDiscord> <Phil> (edit) "I'm aware how they're generally used, aka you plonk them as type into a proc ... and" 03added "parameter"
[16:26:24] <FromDiscord> <Rika> You can‚Äôt use it on a variable if you mean that
[16:26:40] <FromDiscord> <Rika> You can pass a seq to one and it‚Äôll behave as you think
[16:26:42] <FromDiscord> <Solitude> In reply to @Isofruit "I'm aware how they're": no necessarily a constant
[16:26:56] <FromDiscord> <Phil> Hmmmm
[16:30:18] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/Nw1
[16:31:03] <FromDiscord> <Phil> (edit) "https://paste.rs/QqM" => "https://play.nim-lang.org/#ix=3UaR"
[16:31:53] <FromDiscord> <Solitude> In reply to @Isofruit "I wonder why norm's": you sure you need the seq and not just explicit dbValue()?
[16:32:15] <FromDiscord> <Solitude> im sure its implicit varargs conversion that is breaking inside templates/generics
[16:32:54] <FromDiscord> <Solitude> i think i even have issue for that
[16:33:28] <FromDiscord> <Phil> sent a long message, see http://ix.io/3UaS
[16:34:01] <FromDiscord> <Solitude> zamn...
[16:34:15] *** Joins: zeus-supreme (~tt@82-132-213-211.dab.02.net)
[16:34:30] <FromDiscord> <Phil> I'm not even sure how I managed to break this this badly, but I'm glad I can just make a "queryParams" seq, that isn't even going to be thaaaaat ugly
[16:35:13] <FromDiscord> <Solitude> you, probably, can even make it an array
[16:35:54] <FromDiscord> <Phil> Actually, that's fair, I always know the exact amount of params at compile-time (though not the exact values)
[16:36:11] <FromDiscord> <Phil> Let me find the shorthand for instantiating an array with values
[16:37:18] <FromDiscord> <Phil> facepalm
[16:37:19] <FromDiscord> <Phil> Right
[16:37:22] <FromDiscord> <Rika> [values]
[16:37:22] <FromDiscord> <Phil> [1,2,4,5,]
[16:37:48] *** Quits: zeus-supreme1 (~tt@82-132-212-64.dab.02.net) (Ping timeout: 260 seconds)
[16:38:57] <FromDiscord> <Phil> Array works as well
[16:40:20] <FromDiscord> <Phil> Now to swap my entire generic repository to dbvalue arrays to foolproof against future explosions
[16:44:13] <FromDiscord> <Phil> Yes this allows me to finally get rid of a couple procs without which the damn project wouldn't compile due to it instantiating a generic in an essential way somewhere
[17:30:03] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[17:30:18] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[17:33:44] <FromDiscord> <Phil> Anyway, posted that to SO so I can read it again later when inevitably I run into that issue again
[17:56:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:05:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[18:22:28] <FromDiscord> <Anuke> Has anyone successfully debugged an Android nim application here? I'm attempting to fix a crash, but the error itself isn't showing up on logcat. I can see `echo` results through `d:androidNDK`, but that doesn't appear to apply to thrown errors. Is it possible to customize the way exceptions are logged?
[18:29:57] <FromDiscord> <Anuke> very useful https://media.discordapp.net/attachments/371759389889003532/960176834845245570/unknown.png
[18:33:18] *** Joins: arkurious (~arkurious@user/arkurious)
[18:34:43] *** Quits: zeus-supreme (~tt@82-132-213-211.dab.02.net) (Quit: WeeChat 3.5)
[19:00:10] <FromDiscord> <auxym> panicoverride.nim maybe? I'm not sure if it's always used or only with `os:standalone` (which is also deprecated)
[19:00:32] <FromDiscord> <spoon> they walkin
[19:01:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:07:01] <FromDiscord> <Anuke> ...nevermind, I figured out a way to redirect stdout to logcat, and it was caused by randomize() failing to run: <https://github.com/nim-lang/Nim/blob/7c8ea490a2be36d171d362c43212195ea8ce489f/lib/pure/random.nim#L679>
[19:07:29] <FromDiscord> <Anuke> anyone know why it `quit`()s instead of raising an error or similar?
[19:07:36] <FromDiscord> <Zoom> If you desperately need to keep them separated and don't want to make a copy of all the data into a united seq of tuples, you can define a new seq-like type which will mirror all operations to its children and use some generic sorting algorithms on that new type. Or, copy a `sort` proc, make it take two seqs and just copy all moves inside a proc to move items in two seqs in parallel.‚Üµ(@hmmm)
[19:08:17] <FromDiscord> <Zoom> But you have to have reasons to do any of that.
[19:09:57] <FromDiscord> <hmmm> ty zoom, thanks to rika I made a tuple that packed the two seqs and then ordered it with sortByIt. It still needs fiddling because I need the reverse order but I'll find a way lol
[19:12:25] <FromDiscord> <gerwy> Hi, well is there a better way than using `case of` if i want to call a function with the same name as the string value?
[19:14:38] <FromDiscord> <Rika> Macro
[19:15:05] <FromDiscord> <Rika> Still involves listing all the procs you want to call
[19:15:11] <FromDiscord> <Rika> be able to call
[19:15:20] <FromDiscord> <gerwy> sent a code paste, see https://play.nim-lang.org/#ix=3Ubt
[19:16:55] <FromDiscord> <gerwy> In reply to @Rika "Macro": Hmm but will it be at runtime? ‚ÜµAnd yeah i can list them its not a problem, i just dont want to have like a suuuper long case block in code, but having a list of functions somewhere else is fine
[19:17:14] <FromDiscord> <Rika> If the proc changes parameters and return type, the string must be compile time
[19:17:26] <FromDiscord> <Rika> Otherwise you can make a macro to generate the case statement
[19:17:57] <FromDiscord> <gerwy> Hmm that might be a problem ://
[19:18:24] <FromDiscord> <gerwy> In C/C++ there is something called function pointers, i know you are not a fan of pointers buuuut maybee
[19:18:38] <FromDiscord> <gerwy> Having a table of those
[19:18:42] <FromDiscord> <Rika> Nim has function pointers
[19:18:52] <FromDiscord> <Rika> They require all functions to have the same signature
[19:19:07] <FromDiscord> <Rika> Otherwise you must use void pointer and know what type to cast the pointer back to
[19:19:11] <FromDiscord> <Rika> Good luck with that
[19:21:52] <FromDiscord> <gerwy> D:
[19:22:26] *** Joins: pch (~pch@66.49.131.33)
[19:22:37] <FromDiscord> <gerwy> well i need to find good solution for this then‚Üµbecause im making like a smol runtime for my language
[19:23:59] <FromDiscord> <Rika> Encapsulate your functions in a type that stores a pointer to it and the type of function it is (somehow, I don‚Äôt know)
[19:24:07] <FromDiscord> <Rika> And somehow cast using that
[19:24:32] <FromDiscord> <Rika> You‚Äôre gonna run into similar problems though since cast and types are compile time
[19:26:43] <FromDiscord> <Zoom> "tuple packing the two seqs" != "seq packing tupled data from two original seqs"
[19:27:24] <FromDiscord> <hmmm> yea it was the second lol üòÉ
[19:27:52] <FromDiscord> <gerwy> yeah :// but for runtime, i know all the parameters types (or they can be whatever for like templates or varargs) and i know what they will return, so its fine‚Üµbut i also will traverse over my AST which has some stuff and those stuff would be easily interpreted with functions, buuuut well‚Üµim gonna go with case for that, for runtime i need to think how to do it
[19:28:16] <FromDiscord> <Zoom> Not better, but you can use a table of procs
[19:29:27] <FromDiscord> <gerwy> i will, think about it, maybe i will just have no runtime at all since the language is joke
[19:29:40] <FromDiscord> <Rika> It‚Äôs a good learning experience to do so
[19:33:56] <FromDiscord> <gerwy> yeah well, i only wanted to make it work
[19:34:16] <FromDiscord> <gerwy> and then maybe rewrite it in future (since i now know how to do it) make it much better than it is now and maybe do it in Zig
[19:34:42] <FromDiscord> <Rika> Okay
[19:36:46] <FromDiscord> <gerwy> but thanksies for help again
[19:50:59] <FromDiscord> <ynfle> Are there any good markdown nim libraries that don't give just a plain string HTML output?
[20:00:00] <FromDiscord> <Rika> What would you like instead? I don‚Äôt understand
[20:03:19] <FromDiscord> <exelotl> an AST maybe?
[20:08:50] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:68ab:7cf8:3696:b641:b09d)
[20:09:09] <FromDiscord> <gerwy> why would you want an AST of HTML?
[20:12:52] <FromDiscord> <Solitude> markdown
[20:12:59] <FromDiscord> <Solitude> maybe to convert to something other than html?
[20:13:14] <FromDiscord> <ynfle> To manipulate it programmatically and write a markdown file
[20:14:20] <FromDiscord> <ynfle> write it to a markdown file
[20:15:26] <FromDiscord> <Patitotective> you can create your own üôÉ
[20:17:12] <FromDiscord> <ynfle> True
[20:17:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:18:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[20:18:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:19:11] *** Joins: yiggityswaps (~yoyojambo@2806:108e:18:68ab:7cf8:3696:b641:b09d)
[20:21:22] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3UbT
[20:22:43] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:68ab:7cf8:3696:b641:b09d) (Ping timeout: 256 seconds)
[20:22:46] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3UbT" => "https://play.nim-lang.org/#ix=3UbV"
[20:23:43] <FromDiscord> <Patitotective> then you can use https://github.com/soasme/nim-markdown to export it
[20:24:02] <FromDiscord> <Patitotective> (edit) "then you can use https://github.com/soasme/nim-markdown to export it ... " 03added "to html"
[20:27:50] <FromDiscord> <Solitude> he wants to manipulate existing file
[20:28:11] <FromDiscord> <Solitude> also, delete that
[20:28:15] <FromDiscord> <Rika> Delete what
[20:29:23] <FromDiscord> <Patitotective> @ynfle do you want to append stuff to markdown file? modify the actual content (like change headers)? or create one from scratch?
[20:33:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[20:38:36] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:38:51] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:38:55] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[20:44:45] *** Quits: xet7 (~xet7@user/xet7) (Read error: Connection reset by peer)
[20:46:34] *** Joins: xet7 (~xet7@user/xet7)
[21:04:14] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:07:34] *** Joins: via__ (~via@136-144-191-24.colo.transip.net)
[21:08:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[21:09:04] <via__> is there a way to create a array literal with a specific type with the [] array constructor? e.g. var x = [0x01, 0x02, 0x03] where each is an int8
[21:10:25] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[21:12:49] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[21:14:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:14:52] <FromDiscord> <Rika> var x = [0x01.int8, 0x02, 0x03]
[21:16:38] <via__> it then subsequently complains about the next elements not matching the type (int literal(2))
[21:17:12] <FromDiscord> <Rika> It shouldn‚Äôt
[21:17:34] <FromDiscord> <Rika> Sounds like an issue, it might be filed in the tracker already though
[21:20:23] <via__> just so i'm not misunderstanding, i have: var encoding = [0x80.cuchar, 0x25, 0x00, 0x00, 0x00, 0x00, 0x08] right now, and i get:
[21:20:37] <via__>  Error: type mismatch: got 'int literal(37)' for '0x00000025' but expected 'cuchar = char'
[21:21:15] <FromDiscord> <Rika> Oh characters are different
[21:21:41] <FromDiscord> <Rika> You have to convert them all in that case, might be quicker to use a map function
[21:21:51] <via__> oh, bummer. i wanted this to be uint8 but, but the c function is insistent on cuchar
[21:22:45] <FromDiscord> <Generic> use cast hehe
[21:23:16] <via__> yeah i mean i have it working with each one casted, was hoping for a less noisy approach
[21:23:54] <FromDiscord> <Generic> no cast the pointer to the array before when calling the c function
[21:24:49] <termer> has anyone worked with Jester here?
[21:25:00] <termer> I can't find any documentation on how it handles HTTP request bodies
[21:25:42] <termer> frameworks like Express in Node.js use middleware to read request bodies, but it looks like Jester reads them automatically, at least that's what it looks like from the readme
[21:26:29] <termer> if it does, I don't see any way to limit the size of bodies it reads, which means my server would be vulnerable since clients can fill up my memory by sending long request bodies
[21:33:00] <FromDiscord> <ynfle> In reply to @via__ "yeah i mean i": There is `mapLiterals`
[21:33:07] <FromDiscord> <ynfle> In reply to @Patitotective "<@!767093711112241162> do you want": Modify headers
[21:47:45] <termer> Ok, body and formData are procs, not properties
[21:48:48] <FromDiscord> <Patitotective> In reply to @ynfle "Modify headers": i guess you can scan (tokenize) the file and modify the headers but you would need to make your own scanner or try to use `nim-markdown`‚Üµ(maybe doing it manually would be easier)
[21:49:16] <FromDiscord> <Patitotective> how do i get the system architecture with nim? `x86_64` and so
[21:54:47] <FromDiscord> <Solitude> In reply to @Patitotective "how do i get": https://nim-lang.org/docs/system.html#hostCPU
[21:58:26] <FromDiscord> <Goat> sent a code paste, see https://play.nim-lang.org/#ix=3UcP
[21:59:47] <FromDiscord> <Goat> Once I had an idea for a games engine that worked like a database. Pararules comes close to that idea
[22:05:22] *** Joins: PMunch (~PMunch@user/pmunch)
[22:13:22] <FromDiscord> <ynfle> In reply to @Patitotective "i guess you can": Yup
[22:19:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:25:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[22:30:04] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:35:02] *** Quits: pro (~pro@user/pro) (Quit: pro)
[22:35:38] <FromDiscord> <Patitotective> how can i add resources to my binary package? so they're copied when i build it ü§®
[22:39:51] <FromDiscord> <Solitude> https://github.com/nim-lang/nimble#optional=
[22:40:10] <FromDiscord> <Solitude> then suffer when your directory layout changes between your repo and nimble installed package
[22:40:50] <FromDiscord> <Solitude> or you could just `slurp` them
[22:45:24] <FromDiscord> <Patitotective> is there any example of a package using `installDirs`?
[22:45:53] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3UcZ
[22:50:58] <FromDiscord> <Solitude> why would it copy with nimble build
[22:52:17] <FromDiscord> <Patitotective> lol thanks
[23:51:44] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:51:44] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:51:59] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:51:59] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:52:16] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:52:16] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:52:32] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:52:32] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:52:48] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:52:48] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:53:04] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:53:04] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:53:19] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:53:19] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:53:36] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:53:37] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:53:53] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:53:53] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:54:09] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:54:10] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:54:25] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:54:25] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:54:41] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:54:41] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:54:57] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:54:57] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:55:29] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:55:30] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:55:46] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:55:46] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:56:03] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:56:03] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:56:19] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:56:19] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:56:36] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:56:37] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:57:38] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:57:38] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:57:54] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:57:55] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:58:11] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:58:11] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:58:28] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:58:28] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
[23:59:00] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:59:00] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:59:32] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:59:32] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Read error: Connection reset by peer)
[23:59:48] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:59:49] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Remote host closed the connection)
