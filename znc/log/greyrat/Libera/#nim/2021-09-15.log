[00:00:20] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3ySr
[00:00:33] <FromDiscord> <dain> where the expression / foo are option types
[00:00:58] <FromDiscord> <dain> it just unwraps the option if is_some() and rebinds it if appropriate, and if it's none it's a no-op
[00:01:14] <FromDiscord> <dain> i wouldn't actually use this, i just came up with it as an exercise to learn macros
[00:01:50] <FromDiscord> <dain> (edit) "https://play.nim-lang.org/#ix=3ySr" => "https://play.nim-lang.org/#ix=3ySs"
[00:05:16] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3ySu
[00:05:59] <NimEventer> New thread by Kiloneie: Nim for Beginners #26 Reference Objects, see https://forum.nim-lang.org/t/8426
[00:06:11] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:06:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:06:38] <FromDiscord> <Kiloneie> https://youtu.be/kkSAVKKIoVc↵↵Double plug.
[00:06:40] <nrds> <12R2D299> 4Youtube: 7"Nim for Beginners #26 Reference Objects FINISHED VIDEO"
[00:06:56] <FromDiscord> <Kiloneie> Wait what
[00:07:21] <FromDiscord> <Kiloneie> (fixed that typo in the title ups)
[00:08:38] *** Gustavo6046_ is now known as Gustavo6046
[00:13:14] <NimEventer> New post on r/nim by Kiloneie: Nim for Beginners #26 Reference Objects, see https://reddit.com/r/nim/comments/po9zlz/nim_for_beginners_26_reference_objects/
[00:14:53] *** Quits: tdc (~tdc@217.61.224.137) (Ping timeout: 265 seconds)
[00:15:15] <FromDiscord> <Kiloneie> Man these bots.
[00:20:50] *** Quits: ozzz (~oz@46.49.41.80) (Read error: Connection reset by peer)
[00:25:03] *** Joins: ozzz (~oz@46.49.41.80)
[00:42:00] <FromDiscord> <dain> okay I figured it out
[00:42:03] <NimEventer> New thread by Trisub: Setting object value by providing key as string?, see https://forum.nim-lang.org/t/8427
[00:42:19] <FromDiscord> <dain> sent a code paste, see https://play.nim-lang.org/#ix=3ySL
[01:14:50] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3yTp
[01:15:14] <FromDiscord> <Yardanico> it doesn't depend on options and instead implements its own types though
[01:38:50] *** Quits: max22- (~maxime@2a01cb08833598006be6953efce46753.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:06:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[02:06:51] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:09:28] *** Gustavo6046_ is now known as Gustavo6046
[02:11:28] *** Quits: leth (~user@h-37-123-182-177.a328.priv.bahnhof.se) (Quit: no reason)
[02:19:02] <FromDiscord> <Recruit_main707> so i turned on my pc today and `nimble.exe` doesnt work, i tried uninstalling nim and installing it again but its broken even from a fresh install
[02:25:47] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[02:26:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:36:47] <FromDiscord> <Recruit_main707> building from source now to see if it works
[03:20:07] <FromDiscord> <Recruit_main707> now it runs but if i try to install anything i get:↵`Could not download: No SSL/TLS CA certificates found.`↵after it tries to download `packages.json` if someone could help me id appreciate it
[03:38:50] <FromDiscord> <leorize> download the official nim binaries and copy the .pem from the bin folder
[03:41:37] <FromDiscord> <leorize> https://curl.se/docs/caextract.html \<- you can download this one and put it next to nimble.exe too
[04:09:46] <FromDiscord> <Yardanico> LOL, was setting up my local ircord debugging configuration, and changed the IRC network from irc.freenode.net to irc.libera.net (not .chat but .net)
[04:09:59] <FromDiscord> <Yardanico> and apparently freenode OWNS this domain and redirects it to freenode!
[04:10:28] <FromDiscord> <Yardanico> and I was confused as to why I was getting "freenode" in the IRC responses while trying to connect to libera chat
[04:10:36] <FromDiscord> <Yardanico> https://news.ycombinator.com/item?id=27797806
[04:14:08] <FromDiscord> <exelotl> holy crap lol
[04:14:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:15:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:15:36] <FromDiscord> <Yardanico> @exelotl and about ircord - the current codebase is pretty messy, especially the edit handling and pasting :)
[04:18:04] <FromDiscord> <exelotl> haha, I was having a real hard time getting my head around it, then I realised the line causing the problem was completely unused xD
[04:18:21] <FromDiscord> <exelotl> so at least it was an easy fix after all
[04:19:02] <FromDiscord> <exelotl> I'm using ircord for the GBAdev community and it's working great
[04:19:12] <FromDiscord> <Yardanico> oh, nice!
[04:20:19] <FromDiscord> <exelotl> it's really good, thanks for all your hard work battle testing it already :)
[04:20:29] <FromDiscord> <Yardanico> although I'd say there are a lot of pretty good alternatives like (ofc) mattermost and t2bot
[04:20:34] <FromDiscord> <Yardanico> although afaik they don't do code paste handling
[04:21:20] <FromDiscord> <exelotl> oh yeah we were using matterbridge before, it sucked
[04:21:45] <FromDiscord> <exelotl> it doesn't handle edits either, just reposts the whole message
[04:22:12] <FromDiscord> <exelotl> which is _horrible_ for code pastes 😅
[04:23:19] <FromDiscord> <exelotl> and it doesn't change the nick to look like a different user is speaking either, just prefixes every message with `nick:`
[04:23:35] <FromDiscord> <exelotl> (edit) "and ... it" 03added "when posting to discord"
[04:23:54] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[04:25:16] *** Joins: jkl (~jkl@user/jkl)
[05:16:46] <FromDiscord> <gogolxdong (liuxiaodong)> Anyone working on chia?
[05:28:25] <FromDiscord> <@bracketmaster-5a708063d73408ce4> in nim, I had an array of functions that returned numbers.↵I then wanted to
[05:28:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> debug one of the functions and had one of the functions in the array print something
[05:29:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> nim then complained that one of the functions in the array had side effect
[05:29:15] <FromDiscord> <@bracketmaster-5a708063d73408ce4> refused to compile, saying arrays must have the same types
[05:29:33] <FromDiscord> <Elegantbeef> Do you have the code?
[05:30:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> not off hand - could probably push to git
[05:30:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> git -\> gitlab
[05:33:44] <FromDiscord> <leorize> use debugEcho
[05:33:54] <FromDiscord> <leorize> the normal echo has side-effect
[05:34:33] <FromDiscord> <Elegantbeef> Alternatively make a typedef of the procedure
[05:34:33] <FromDiscord> <Elegantbeef> then convert the first value to it
[05:43:52] <FromDiscord> <@bracketmaster-5a708063d73408ce4> http://ix.io/3yUc
[05:44:44] <FromDiscord> <@bracketmaster-5a708063d73408ce4> typedef of the procedure?
[05:44:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how would that fix things?
[05:45:17] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3yUd
[05:45:35] <FromDiscord> <auxym> can a nim enum be used directly as a parameter to a C function (imported via `{.importc, header.}` that takes a C typedef enum? Or do I need to cast it to `cint` or something?
[05:45:36] <FromDiscord> <Elegantbeef> It converts a proc to a given typedef so it doesnt infer the array type from the first
[05:45:48] <FromDiscord> <Elegantbeef> It should be usable directly
[05:45:53] <FromDiscord> <auxym> yay
[05:47:59] <FromDiscord> <Elegantbeef> You can also pass bitsets to C seemlessly afaik
[05:48:09] <FromDiscord> <Elegantbeef> And convert the C bitsets from them
[05:48:45] <FromDiscord> <Elegantbeef> IE if you get `Up | Left | Right` if you have `set[YourEnum]`
[05:48:58] * arfy is seriously making a more nim-ish wrapping over the top of nimbass.
[05:49:06] <arfy> er. seriously thinking about
[05:56:11] <FromDiscord> <Elegantbeef> To elaborate bracketmaster https://play.nim-lang.org/#ix=3yUe
[05:59:44] *** Joins: neurocyte4 (~neurocyte@IP-185189140114.dynamic.medianet-world.de)
[05:59:44] *** Quits: neurocyte4 (~neurocyte@IP-185189140114.dynamic.medianet-world.de) (Changing host)
[05:59:44] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[06:00:17] <FromDiscord> <@bracketmaster-5a708063d73408ce4> why do you put {.nimcall .} at the end?
[06:01:07] <FromDiscord> <@bracketmaster-5a708063d73408ce4> also, how are you able to call YourProc on p2?
[06:01:53] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 268 seconds)
[06:01:53] *** neurocyte4 is now known as neurocyte
[06:13:45] <FromDiscord> <Elegantbeef> I'm converting it
[06:24:45] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:28:28] <FromDiscord> <@bracketmaster-5a708063d73408ce4> you can convert one function to another?
[06:28:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> this seems kind of arbitrary...
[06:34:27] <FromDiscord> <Elegantbeef> In what way?
[06:34:45] <FromDiscord> <Elegantbeef> You're taking a `proc(a: int): int {.gcsafe.}` and converting it into `proc(a: int): int`
[06:40:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> it seems that nim doesn't really allow shadowing?
[06:41:09] <FromDiscord> <Elegantbeef> It does
[06:41:10] <FromDiscord> <impbox [ftsf]> it does?
[06:41:51] <FromDiscord> <@bracketmaster-5a708063d73408ce4> var a = 1↵var a = 2↵↵echo a
[06:41:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> not the way rust does I guess
[06:42:00] <FromDiscord> <Elegantbeef> It can only shadow in new scopes
[06:42:17] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3yUl
[06:42:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thx beef
[06:42:46] <FromDiscord> <Elegantbeef> There is even some magic to shadow in same scope
[06:42:51] <FromDiscord> <Elegantbeef> Atleast iirc
[06:42:52] <FromDiscord> <j-james> what's the syntax for returning the increment of a character?
[06:43:00] <FromDiscord> <Elegantbeef> "the increment"
[06:43:09] <FromDiscord> <impbox [ftsf]> c.succ
[06:43:11] <FromDiscord> <j-james> yeah, since it's an Ordinal type
[06:43:45] <FromDiscord> <impbox [ftsf]> https://nim-lang.org/docs/system.html#succ%2CT%2Cint
[06:43:57] <FromDiscord> <impbox [ftsf]> note that it doesn't mutate the variable
[06:44:29] <FromDiscord> <j-james> literally succ haha, i thought you were making a joke
[06:44:30] <FromDiscord> <j-james> thanks a lot
[06:44:39] <FromDiscord> <j-james> not mutating the variable was what i was looking for
[06:44:47] <FromDiscord> <impbox [ftsf]> dang `it.succ` would have been better
[06:45:02] <FromDiscord> <impbox [ftsf]> `succ(it)`
[06:45:35] <FromDiscord> <impbox [ftsf]> `succ(it)` and see what happens
[06:53:45] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @elegantbeef\:matrix.org - what is the purpose of `block`/
[06:53:56] <FromDiscord> <Elegantbeef> Creates a new block
[06:54:17] <FromDiscord> <Elegantbeef> same as `{}` in languages with curlies
[06:55:37] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/xhI
[06:56:29] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah
[06:58:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> can you also assign a proc to a?
[06:58:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> that is, could a block somehow return a function?
[06:59:18] <FromDiscord> <Elegantbeef> Of course as long as you use `someVal = proc` or `return proc`
[07:04:23] <FromDiscord> <@bracketmaster-5a708063d73408ce4> any nim libraries for cryptography?
[07:04:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I wanted to do some ECC or RSA encryption
[07:04:43] <FromDiscord> <Elegantbeef> nimcrypto, openssl?
[07:05:01] <FromDiscord> <Elegantbeef> I dont know crypto whatsoever  so dont know what's best
[07:06:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah
[07:06:47] <FromDiscord> <@bracketmaster-5a708063d73408ce4> nimcrypto just has hashing algos
[07:07:02] <FromDiscord> <@bracketmaster-5a708063d73408ce4> but no prime-number or elliptical-curve cryptography
[07:10:29] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:10:29] <FromDiscord> <cabboose> I don't know C syntax; what's this\:↵`type TagPtr = (Node ptr, u16 idx)`
[07:10:47] <FromDiscord> <cabboose> is that saying tagptr is just a ptr to node as a u16 int?
[07:11:21] <FromDiscord> <cabboose> or tagptr is a u16 index to the reference of Node?
[07:23:39] <FromDiscord> <Elegantbeef> That's valid C syntax?!
[07:24:02] <FromDiscord> <cabboose> I dunno
[07:24:04] <FromDiscord> <cabboose> https://ieeexplore.ieee.org/abstract/document/9490347?casa_token=Pe0y6ibhbzQAAAAA:FwJO6N3uar79gGH5l5dQ6M2hkaB6buBNeVaWW8BPKvHTr4Wrdk8c_QxOsjcTonvLo3BY7Q4kOw
[07:24:18] <FromDiscord> <cabboose> See listing 1
[07:24:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:25:09] <FromDiscord> <cabboose> I assumed it was C but I'm oblivious
[07:26:16] <FromDiscord> <cabboose> just pseudocode I guess; but then what type of value are they referencing with that line
[07:26:17] <FromDiscord> <Elegantbeef> well `u16` is used in Zig/Rust so maybe that's just a type alias of `(ptr Node, uint16)`?
[07:27:13] <FromDiscord> <cabboose> Ok so its just ptr Node as uint16
[07:27:14] <FromDiscord> <cabboose> right
[07:27:24] <FromDiscord> <cabboose> or a tuple
[07:27:25] <FromDiscord> <Elegantbeef> I'd say it's a tuple
[07:27:29] <FromDiscord> <cabboose> you mean
[07:27:33] <FromDiscord> <cabboose> right
[07:27:33] <FromDiscord> <cabboose> ofc
[07:27:34] <FromDiscord> <cabboose> cool
[07:27:35] <FromDiscord> <cabboose> thanks sxc
[07:27:53] <FromDiscord> <Elegantbeef> I could be wrong i dont have a degree in guessology
[07:28:04] <FromDiscord> <cabboose> Sounds like a fake degree
[07:28:06] <FromDiscord> <cabboose> but university these days
[07:28:17] <FromDiscord> <cabboose> I'd imagine its in the arts section
[07:28:48] <FromDiscord> <Elegantbeef> Hey i dont know the courses that post secondary offers
[07:32:10] <FromDiscord> <cabboose> and then am I able to disown the bitch later?
[07:32:16] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yUw
[07:34:14] <FromDiscord> <Elegantbeef> Dont know that answer
[07:34:35] <FromDiscord> <cabboose> Shameful
[07:34:46] <FromDiscord> <cabboose> You bring shame to Novoscotia
[07:36:07] <FromDiscord> <Elegantbeef> But i'm not from there
[07:36:17] <FromDiscord> <cabboose> still
[07:36:20] <FromDiscord> <cabboose> theyre disappointed in you
[07:36:30] <FromDiscord> <cabboose> I didnt say you should care
[07:50:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:55:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:17:06] <FromDiscord> <cabboose> c++ try\_reclaim
[08:17:11] <FromDiscord> <cabboose> is that like an atomic dec
[08:18:02] <FromDiscord> <cabboose> what de fak
[08:18:03] <FromDiscord> <cabboose> what the hell is try\_reclaim
[08:18:27] <FromDiscord> <cabboose> image.png https://media.discordapp.net/attachments/371759389889003532/887545373072175225/image.png
[08:18:37] <FromDiscord> <cabboose> E9
[08:19:06] <FromDiscord> <cabboose> uwu
[08:19:52] <FromDiscord> <cabboose> so from what I understand is they are changing the pointer t back to tail.position i-1
[08:20:03] <FromDiscord> <cabboose> wait yeah
[08:20:03] <FromDiscord> <cabboose> that makes sense
[08:20:03] <FromDiscord> <cabboose> fuck you guys im awesome
[08:21:09] <FromDiscord> <cabboose> shit how am I going to do this
[08:21:27] <FromDiscord> <cabboose> I am not a very smart man
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:00] <FromDiscord> <cabboose> Ok I'm up to E12
[08:37:25] <FromDiscord> <cabboose> what order of operations are they doing to turn el and t (both are pointers) into an enumerator?
[08:37:38] <FromDiscord> <cabboose> I'm guessing AdvAndInserted is 0 and AdvOnly is 1
[08:37:52] <FromDiscord> <cabboose> so is this an and bitwise operation?
[08:38:04] <FromDiscord> <cabboose> why is this in fucking gibberish
[08:38:20] <FromDiscord> <cabboose> Fuck it i'm going with that
[08:38:23] <FromDiscord> <cabboose> and I think I know why
[08:38:46] <FromDiscord> <cabboose> but I definitely don't
[08:38:48] <FromDiscord> <cabboose> I just 'think'
[09:40:11] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 268 seconds)
[10:47:57] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[10:48:56] *** Joins: xet7 (~xet7@user/xet7)
[11:07:32] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[11:08:26] *** Joins: xet7 (~xet7@user/xet7)
[11:08:52] <FromDiscord> <Varriount> Zevv: How would one program an optimization pass into NPeg?
[11:09:31] <FromDiscord> <Varriount> Specifically, a pass to hoist common prefixes/suffixes from alternations.
[11:17:18] *** Joins: max22- (~maxime@2a01cb088335980009e300fcb92e8769.ipv6.abo.wanadoo.fr)
[11:18:24] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:21:26] <PMunch> Hmm, is there a way to get nimcache from a macro?
[11:23:18] *** Joins: tdc (~tdc@217.61.224.137)
[11:25:07] *** Quits: mdbauman (~mdbauman@2600:1700:7e60:f7c0:c196:23e6:3650:f34f) (Read error: Connection reset by peer)
[11:27:12] <FromDiscord> <haxscramper> std/compilesettings
[11:28:03] <PMunch> Ooh, perfect
[11:49:44] <Zevv> varriount: id need to draw a picture for that
[11:52:08] <Zevv>  basically you change a * v | a * w | b * x | b * y  into a * (v | w) | b * (x | y)
[11:52:23] <FromDiscord> <Varriount> Yeah
[11:56:50] <FromDiscord> <Varriount> Zevv: Just thinking aloud here, but I was pondering what kind of compilation and/or runtime difference extracting common alternation prefixes, inlining all rules, then performing rule synthesis using a "longest common sequence/string" algorithm would have for large grammars.
[11:57:50] <FromDiscord> <Varriount> Essentially, simplifying the grammar as much as possible, inlining everything, then un-inlining everything.
[11:59:28] <FromDiscord> <Varriount> (un-inlining using a compression algorithm)
[12:02:45] <arkanoid> where are karax docs?
[12:04:42] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[12:05:28] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:41:14] <Zevv> varriount: in theory npeg could do this for you, this is for example how ragel works
[12:41:47] <Zevv> but the poblem at this stage is that thee is no proper ast representation of the grammar that npeg can wok on
[12:42:06] <Zevv> the gramma is compiled from nimnodes straight into the IR instructions
[12:42:20] <Zevv> there are some peephole optimizations done, but thats it
[12:42:48] <Zevv> if it would have a proper inbetween AST, the code could reason about your grammar and make these optimiztations
[12:44:18] <PMunch> https://github.com/nim-lang/Nim/issues/18855
[12:44:26] <PMunch> The bug that plagued me yesterday ^
[12:47:18] <FromDiscord> <Varriount> Zevv: What about just working with the Nim AST? Or would that be unwieldy?
[12:48:24] <Zevv>  do *you* like working with nim ast?
[12:48:57] <Zevv> but, shure that should be feasible
[12:48:59] <FromDiscord> <Varriount> ... not particularly.
[12:51:19] <arkanoid> PMunch, woa, that's a bad bug
[12:51:53] <PMunch> Kinda hard to find the culprit as well when it manifested in a 2.5k lines of macro output :P
[13:01:02] <arkanoid> actually I have no idea how many human beings are actually able to dive into compiler internals nowadays
[13:01:21] <FromDiscord> <Elegantbeef> Hopefully more
[13:01:57] <FromDiscord> <cabboose> Some people are too busy diving into other peoples internals smh
[13:02:10] <FromDiscord> <cabboose> why wont humanity evolve
[13:03:00] <arkanoid> how does nimble handles multi-artifacts output?
[13:03:41] <arkanoid> I am trying to setup a nimble project that outputs both a C backend and a JS frontend, sharing some code
[13:04:13] <arkanoid> I could surely wrap up custom tasks, but with that I lose automatic dependency installation
[13:05:36] <FromDiscord> <Rika> how does that work?
[13:06:48] <arkanoid> Rika, is that question for me?
[13:07:02] <FromDiscord> <Rika> yes
[13:07:59] <arkanoid> well, I have some nim code just for jester, some code just for karax, and some code (types and ops on them) shared between the two. Frontend is compiled with js backend, backend is compiled with C backend
[13:08:19] <NimEventer> New thread by Rforcen: High precission -> f1024, see https://forum.nim-lang.org/t/8428
[13:08:28] <arkanoid> I think is the typical nim integration for webapps, question is how to handle it with nimble
[13:08:47] <arkanoid> "nimble build" should build not one but two artifacts with different backends
[13:09:32] <FromDiscord> <Rika> no way other than task
[13:10:17] <FromDiscord> <Rika> cant you dep resolve in a task anyway?
[13:11:13] <arkanoid> Rika how?
[13:12:04] <arkanoid> I'm trying to declare "backend" and "bin" vars inside the task itself and then call "buildTask()", but it says that buildTask() does not exists
[13:12:24] <arkanoid> In a forum post I've read that tasks are really macros for <taskName>Task() proc
[13:13:13] <FromDiscord> <Rika> you cant hook into "nimble build"
[13:13:43] <arkanoid> well, that's a show stopper
[13:14:23] <FromDiscord> <Rika> feature request on nimble repo it is then
[13:15:18] <FromDiscord> <Rika> i believe usually backend and frontend are different packages
[13:16:01] <PMunch> How can I get the path of the current file in a macro?
[13:16:32] <FromDiscord> <Rika> the caller?
[13:17:08] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3yVs
[13:17:09] <FromDiscord> <Rika> currentSourcePath?
[13:17:27] <FromDiscord> <Elegantbeef> You dont give a name to `iterator`
[13:17:31] <FromDiscord> <Rika> sent a code paste, see https://play.nim-lang.org/#ix=3yVt
[13:17:43] <FromDiscord> <Elegantbeef> Or of course a type
[13:21:11] <arkanoid> Rika, frontend and backend are different packages when shared code is not part of the game, but nim enables this
[13:21:25] <arkanoid> I could surely split into three packages: backend, frontend and shared
[13:21:44] <FromDiscord> <Rika> you can just import the backend in the frontend and the frontend in the backend probably
[13:21:50] <arkanoid> but I feel like fragmenting something that could stay together
[13:22:03] <PMunch> Yes, currentSourcePath was what I was looking for. Thanks Rika :)
[13:22:10] <FromDiscord> <Rika> i dont see any reason for code to be shared between them though
[13:22:12] <FromDiscord> <fwsgonzo> In reply to @Rika "what is the second": It's going to be an iterator to a Token
[13:22:22] <FromDiscord> <Rika> you need to specify that
[13:22:36] <FromDiscord> <Rika> `(... iter: iterator(): Token) -> ...`
[13:22:57] <FromDiscord> <Rika> not sure if this is 100% correct but its p much there
[13:23:27] *** Quits: max22- (~maxime@2a01cb088335980009e300fcb92e8769.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[13:23:34] <arkanoid> Rika, isn't sharing code between js and c the main advantage of nim for web apps? I mean, the kstring karax type has been invented just for that
[13:24:09] <FromDiscord> <impbox [ftsf]> also not having to write JS
[13:24:11] <FromDiscord> <impbox [ftsf]> or C
[13:24:41] <FromDiscord> <fwsgonzo> thank you @Rika
[13:24:42] <FromDiscord> <Rika> i dont know, i dont know of a scenario where both the backend and frontend need to know of something
[13:24:47] <FromDiscord> <Rika> types?
[13:24:47] <FromDiscord> <Rika> models?
[13:25:04] <FromDiscord> <Rika> in which case they should be in a shared module
[13:25:12] <FromDiscord> <Rika> imo
[13:25:13] <FromDiscord> <impbox [ftsf]> api definitions
[13:25:32] <FromDiscord> <Rika> api definitions can go in the backend, i dont see why the frontend cannot import that?
[13:25:38] <FromDiscord> <saem> Models, validation, API, anything end to end
[13:25:55] <FromDiscord> <impbox [ftsf]> they can both import the same thing?
[13:25:56] <FromDiscord> <Rika> In reply to @Rika "you can just import": i said here
[13:26:36] <FromDiscord> <Rika> i have a lot of modules that import each other, you just need to place the imports on strategic lines
[13:26:37] <FromDiscord> <Rika> or /we
[13:26:39] <FromDiscord> <Rika> w/e
[13:26:42] <arkanoid> Sharing the type system is huge thing, and also mapping it to a db via norm is another huge thing
[13:26:51] <FromDiscord> <impbox [ftsf]> ohh sorry i missed the part about splitting them into separate modules
[13:26:54] <FromDiscord> <impbox [ftsf]> (edit) "ohh sorry i missed the part about splitting them into separate ... modules" 03added "nimble"
[13:26:59] <FromDiscord> <impbox [ftsf]> just keep them in the same module?
[13:27:06] <FromDiscord> <impbox [ftsf]> (edit) "just keep them in the same ... module?" 03added "nimble"
[13:27:08] <FromDiscord> <Rika> the issue with that is nimble
[13:27:13] <FromDiscord> <Rika> as elaborated above
[13:27:17] <FromDiscord> <Rika> how would you build both of them
[13:27:27] <FromDiscord> <Rika> in a task? as said then you would lose dep resol.
[13:27:27] <FromDiscord> <impbox [ftsf]> `nimble backend` `nimble frontend`
[13:27:49] <arkanoid> impbox, the original question was about my problem is setting up a single nimble project to build both frontend and backend for a webapp. Tipically this is called multi-artifact build
[13:28:09] <FromDiscord> <impbox [ftsf]> gotcha, yeah i use tasks for that
[13:29:04] <FromDiscord> <impbox [ftsf]> @Rika what is the dep resol you lose?
[13:29:09] <FromDiscord> <impbox [ftsf]> nimble dependencies?
[13:29:18] <FromDiscord> <impbox [ftsf]> you want to specifiy different deps for frontend and backend?
[13:29:35] <FromDiscord> <Rika> In reply to @arkanoid "I could surely wrap": here
[13:31:46] <FromDiscord> <impbox [ftsf]> sounds like make is desired and unfortunately nimble isn't a replacement for all of make yet
[13:40:52] <FromDiscord> <cabboose> Can't seem to build hcparse via nimble @haxscramper, are there any tricks?
[13:41:01] <FromDiscord> <cabboose> [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)\:
[13:41:34] <FromDiscord> <fwsgonzo> I read the 128-bit integer PR, and the problem with not adding this fundamental type to the language as early as possible is that you will eventually have to do it anyway when you want to support an actual 128-bit architecture
[13:41:43] <FromDiscord> <cabboose> get type mismatches in hmisc
[13:42:15] <FromDiscord> <fwsgonzo> I understand that "not everything has to be in the standard libraries", but if the computer is 128-bit then the whole language gets weird when a register value is (at present) a package you have to import using nimble
[13:42:47] <FromDiscord> <Rika> prolly best to mention that in the pr comments
[13:45:44] <FromDiscord> <haxscramper> I'm currently in process of blowing it up
[13:45:59] <FromDiscord> <cabboose> delightful
[13:46:30] <FromDiscord> <haxscramper> I will fix it when nim stable comes out and I can get stuff in CI working again
[13:46:49] <FromDiscord> <haxscramper> Because 1.6 breaks so much compilation
[13:47:08] <FromDiscord> <cabboose> fair
[13:47:09] <FromDiscord> <haxscramper> You just get compilation errors on isntall, or there is a nimble issue?
[13:48:00] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yVB
[13:49:23] <FromDiscord> <haxscramper> Yeah
[13:49:35] <FromDiscord> <haxscramper> This is a pure 1.6 breakage
[13:50:12] <FromDiscord> <cabboose> Reckon itll work if I downgrade to 1.4.8?
[13:52:28] <FromDiscord> <haxscramper> Then you will most likely run into my idiocy, so for now you can save yourself trouble until I properly fix this
[13:54:16] <FromDiscord> <haxscramper> Btw type mismatch errors at its finest
[13:55:13] <FromDiscord> <cabboose> wE'Re iN tHe FuTuRe
[13:59:14] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 260 seconds)
[13:59:19] *** Joins: max22- (~maxime@2a01cb088335980025f007adc3069cd5.ipv6.abo.wanadoo.fr)
[14:01:01] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[14:54:34] <FromDiscord> <dom96> so here is a fun problem, as soon as you upgrade to new Nimble you will not be able to use old Nim compilers https://github.com/nim-lang/nimble/issues/940
[14:59:27] *** Joins: Guest85 (~Guest85@smtp.brittany-ferries.fr)
[14:59:59] *** Quits: Guest85 (~Guest85@smtp.brittany-ferries.fr) (Client Quit)
[15:00:08] <PMunch> Ouch, that's not great
[15:00:37] <PMunch> He's using 1.5.1 though, how fresh does the compiler have to be?
[15:00:56] <PMunch> Hmm createDir doesn't work on compile-time, is there a compile-time equivalent?
[15:01:04] <FromDiscord> <dom96> 1.6/devel. There is a patch that allows the Nim compiler to read these new directories
[15:01:49] <FromDiscord> <dom96> so in the end I think we will need to find a way to get this working without a compiler patch
[15:02:50] <PMunch> I don't see why it treats that as an invalid module name
[15:03:02] <PMunch> The -0.0.0 part should already make it invalid, no?
[15:04:01] <FromDiscord> <dom96> It's because of the `-a6dfb9de705011f6d04902493cac04a4f20a0435`
[15:04:19] <FromDiscord> <dom96> old Nim expects `pkgName-ver`
[15:04:23] <PMunch> Yeah I get that, but why doesn't it error out on -0.0.0
[15:04:26] <FromDiscord> <dom96> new Nim expects `pkgName-ver-hash`
[15:04:31] <PMunch> Ah, so there is already a patch to allow -ver
[15:04:35] <FromDiscord> <dom96> yeah
[15:04:40] <PMunch> I see
[15:05:03] <PMunch> How does it parse the version part?
[15:05:18] <PMunch> Is it possible to trick it with -0.0.0_a6dfb9de705011f6d04902493cac04a4f20a0435
[15:05:30] <FromDiscord> <dom96> possibly
[15:06:33] <FromDiscord> <dom96> maybe it's time to completely redesign this folder structure
[15:07:23] <FromDiscord> <dom96> and just put it in `~/.nimble/2/` or something
[15:08:04] <FromDiscord> <dom96> in an ideal world Nim wouldn't have any special parsing rules for `pkgName-ver`
[15:08:36] <PMunch> Hmm, that is also possible
[15:08:48] <PMunch> But then you need to handle the old and the new packages
[15:09:49] <PMunch> Well this is annoying. I query nimcacheDir to figure out where to store some cache files. But that directory isn't created by the time my macro is evaluated
[15:10:11] <PMunch> And I can't call createDir from a macro..
[15:12:43] <FromDiscord> <dom96> staticExec("mkdir") 😄
[15:15:43] <PMunch> Yeah, but I also need it to work on Windows (and Mac, but I assume they use mkdir)
[15:15:57] <PMunch> So I need to implement the same kind of logic that lives in createDir
[15:16:47] <FromDiscord> <dom96> maybe you should just write a Nim program and then `staticExec("nim c -r myappThatCreatesDirAndOtherStuff.nim")`
[15:19:13] <PMunch> I already have an external Nim program, this was intended to cache the output of that one :P
[15:19:26] <PMunch> It would be silly to have a separate program that only exists to create directories..
[15:26:32] <PMunch> Huh, Windows apparently also uses mkdir
[15:30:50] *** Joins: leth (~user@h-37-123-182-177.A328.priv.bahnhof.se)
[15:33:22] <leth> I'm reading up on procedure calling, but there is no mention of calling a procedure using <procedure: ...>, and the passing of statements contra expressions to procedures.
[15:37:03] <PMunch> leth, not quite sure what you mean
[15:37:44] <leth> I'm trying to understand how the syntax for using statements an argument list looks.
[15:37:55] <leth> s/an/in an/
[15:39:24] <leth> as when passing an anonymous procedure as an argument., and how the syntax looks for using a template in an argument list, where that template takes say a block of statements as an argument.
[15:48:08] <PMunch> Well templates just rewrites code, so as long as what they spit out is valid using them inside an argument list should be valid (although you might need some parenthesis to ensure that Nim only parses what you intended)
[15:49:15] <leth> Sure, but what is the syntax for using a template in an argument list, and what rules dictates that syntax. These are the sort of questions I'm interested in answering.
[15:51:15] <leth> how would the syntax look for a call to a procedure that takes 3 arguments look when called with the third argument expressed as template that takes a block of 2 statements?
[15:51:24] <FromDiscord> <Rika> It’s elaborated in the experimental manual
[15:51:28] <FromDiscord> <Rika> Do notation
[15:51:40] <leth> where is the experimental manual?
[15:51:56] <FromDiscord> <Rika> Documentation
[15:52:04] <FromDiscord> <Rika> Website
[15:53:39] <leth> I can only see the language manual there, link?
[15:54:19] <PMunch> Hmm, is there no way of creating a new warning/error kind?
[15:54:43] <PMunch> I would want to have a warning that can be promoted to an error by the normal switch..
[15:54:54] <PMunch> Or silenced in the normal way
[15:56:56] <FromDiscord> <haxscramper> In reply to @dom96 "maybe it's time to": I don't even understand why Araq decided it is acceptable to merge this pile breakages before new release
[15:57:09] <FromDiscord> <Rika> In reply to @leth "I can only see": Replace “manual” with “manual_experimental” in the link
[15:57:27] <FromDiscord> <haxscramper> bobbef was too busy and could not write down what he broke explicitly, but merging it
[15:57:39] <FromDiscord> <haxscramper> Especially right before new version of nim comes out
[15:58:15] <leth> Rika: Thank you!
[16:00:51] <FromDiscord> <haxscramper> Well, status wanted it, so it was enough to inconvenience everyone else
[16:01:42] <FromDiscord> <haxscramper> Not like there is anything anyone could do, except they wanted to spend lifetime tracking everything they slipped in under disguise of the "lockfiles" PR
[16:02:28] <FromDiscord> <haxscramper> Arguing against it is like trying to force Google to do something - basically pointless, they could argue in favor of any feature
[16:02:39] <FromDiscord> <haxscramper> But still, this is a horrible precedent
[16:03:05] <FromDiscord> <haxscramper> Not blaming reviewers, and as I said blaming status is pointless, but still, pretty annoying
[16:03:39] <FromDiscord> <haxscramper> (edit) "they" => "status"
[16:23:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[16:29:51] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2.1)
[16:36:13] *** Quits: max22- (~maxime@2a01cb088335980025f007adc3069cd5.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[16:36:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:40:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[16:41:51] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:42:51] *** Joins: xet7 (~xet7@user/xet7)
[16:45:29] *** Joins: rockcavera (~rc@192.12.112.204)
[16:45:29] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[16:45:29] *** Joins: rockcavera (~rc@user/rockcavera)
[16:52:58] *** Joins: arkurious (~arkurious@user/arkurious)
[17:17:33] *** Joins: pro (~pro@user/pro)
[17:22:43] *** Quits: jmiven (~vpm@pham.algeb.re) (Quit: reboot)
[17:25:47] <FromDiscord> <dom96> yeah :/
[17:37:09] <PMunch> I mean this has to be fixed before the release
[17:37:25] <PMunch> It would totally negate the whole point of choosenim wouldn't it?
[17:37:54] <PMunch> Install one package with the newest Nim version and suddenly you can't go back to older versions without removing said packages
[17:41:04] <FromDiscord> <xflywind> My nimble has been broken for some time. I can only install package by URL.
[17:41:14] <FromDiscord> <xflywind>  https://media.discordapp.net/attachments/371759389889003532/887686998645674024/unknown.png
[17:42:25] <FromDiscord> <xflywind> build Nim from nightlies
[17:42:26] <FromDiscord> <cabboose> someone should plant a balls folder in your user directory
[17:43:12] <FromDiscord> <cabboose> Ive been using the older nimble to install packages, is that going to cause issues?
[17:43:31] <FromDiscord> <cabboose> I'm still using devel nim
[17:48:39] <FromDiscord> <Gumber aka Zachary Carter> Guess I'm sticking with 1.4.8 till all this gets sorted out 🙂
[17:49:36] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[17:52:15] <FromDiscord> <xflywind> It seems to download a json file from a 404 website
[17:52:19] <FromDiscord> <xflywind>  https://media.discordapp.net/attachments/371759389889003532/887689787857846302/unknown.png
[17:53:01] <FromDiscord> <xflywind> https://irclogs.nim-lang.org/packages.json
[18:06:08] <PMunch> What?! Why does it try to download from there?
[18:08:52] <FromDiscord> <xflywind> https://github.com/nim-lang/nimble/blob/795704833ddfd0cdaefb45c60551d3ea205279ef/src/nimblepkg/config.nim#L27
[18:08:56] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 268 seconds)
[18:11:24] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[18:23:59] <FromDiscord> <xflywind> I see, just I cannot download packages.json from https://github.com/nim-lang/packages/raw/master/packages.json
[18:24:50] <FromDiscord> <xflywind> and https://nim-lang.org/nimble/packages.json is too outdated
[18:31:03] <FromDiscord> <dom96> @xflywind you must have run the nimble test suite which failed after it modified your nimble.cfg
[18:33:02] *** Joins: max22- (~maxime@2a01cb0883359800e3a3878268dcbc1e.ipv6.abo.wanadoo.fr)
[18:34:26] <FromDiscord> <xflywind> I didn't run the nimble test suit. The first link failed for me is caused by my internet probably. The second link is already broken. The third link works for me but the info is too outdated.
[18:34:56] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[18:35:09] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[18:35:21] <FromDiscord> <dom96> well I've seen this happen before and it was because the nimble.cfg in ~/.config/nimble or wherever it is had custom URLs
[18:35:24] <FromDiscord> <dom96> so check if that exists
[18:36:04] <FromDiscord> <Gumber aka Zachary Carter> they just linked to the source with those URLs in it though...
[18:36:07] <FromDiscord> <Gumber aka Zachary Carter> those URLs are coming from the source
[18:36:22] <FromDiscord> <dom96> In reply to @cabboose "Ive been using the": nope, but at this point I'm even afraid to upgrade it
[18:37:00] <FromDiscord> <Rika> damn thats bad
[18:37:00] <FromDiscord> <Gumber aka Zachary Carter> https://github.com/nim-lang/nimble/blob/master/src/nimblepkg/config.nim#L26-L28 @dom96
[18:37:40] <FromDiscord> <dom96> In reply to @Gumber "https://github.com/nim-lang/nimble/blob/master/src/": Line 26 has https://github.com/nim-lang/packages/raw/master/packages.json, so why doesn't that work?
[18:37:56] <FromDiscord> <Gumber aka Zachary Carter> because they're in China
[18:38:26] <FromDiscord> <dom96> ahh, well, there we go 🙂
[18:38:31] <FromDiscord> <Gumber aka Zachary Carter> but I mean still
[18:38:37] <FromDiscord> <Gumber aka Zachary Carter> it begs the question why the other two are even in there
[18:38:43] <FromDiscord> <Gumber aka Zachary Carter> if they're not working / outdated
[18:38:47] <FromDiscord> <dom96> yeah, we need to either remove those files or keep them relatively up to date
[18:42:21] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:49:01] <FromDiscord> <xflywind> Actually I use phone to share WI-FI with my PC, so that may be the reason (DNS stuff etc). Not because I'm banned.
[18:50:23] <FromDiscord> <dom96> Nimble should definitely also give a warning when one of the URLs cannot be accessed
[18:55:24] <FromDiscord> <dom96> In reply to @cabboose "Ive been using the": nope, it's probably best to do this until the new Nimble is released. Seems like the issue described above needs to be fixed at the very least.
[18:59:14] <FromDiscord> <Gumber aka Zachary Carter> Oh my bad, I figured firewall or some crap
[19:05:42] <FromDiscord> <Rika> how do you downgrade nimble?
[19:06:25] <FromDiscord> <cabboose> see that plug in the back of your computer?
[19:06:26] <FromDiscord> <cabboose> pull it
[19:06:28] <FromDiscord> <cabboose> done
[19:07:03] <FromDiscord> <Rika> can i do that but for my life
[19:07:29] <FromDiscord> <haxscramper> I don't think choosenim supports downgrading any part separately
[19:07:37] <FromDiscord> <haxscramper> You can do `nimble install nimble`
[19:07:48] <FromDiscord> <haxscramper> `nimble@0.13.1`
[19:08:05] <FromDiscord> <haxscramper> Ah, well, `13.1` had a version hack from Araq, IIRC it has some problems with isntall as well
[19:08:06] <FromDiscord> <Rika> ok, just asked for reference
[19:08:08] <FromDiscord> <haxscramper> Then 0.13.0
[19:08:39] <FromDiscord> <cabboose> I've been going into my 1.4.8 toolchain bin and using the nimble there manually
[19:09:12] <FromDiscord> <Rika> mans crazy
[19:09:36] <FromDiscord> <cabboose> I am hurting \:')
[19:14:46] <FromDiscord> <Rika> just do what hax said and u will not be hurting
[19:14:51] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[19:15:22] <FromDiscord> <cabboose> I am in bit manipulation hell
[19:15:28] <FromDiscord> <cabboose> I dont understand this rubbish
[19:19:41] <FromDiscord> <Rika> stop twiddlin them bits
[19:21:06] <FromDiscord> <cabboose> 🍝
[19:22:55] <FromDiscord> <haxscramper> `raise Defect(nil)`
[19:24:15] <FromDiscord> <haxscramper> Actually no, sorry, this code is not correct
[19:24:16] <FromDiscord> <haxscramper> `raise (ref Defect)(nil)`
[19:25:45] <FromDiscord> <cabboose> image.png https://media.discordapp.net/attachments/371759389889003532/887713303751696415/image.png
[19:25:48] <FromDiscord> <tandy> sent a code paste, see https://paste.rs/kZ2
[19:26:48] <FromDiscord> <Rika> In reply to @tandy "how do i avoid": can you be more specific on your overload? instead of object use SubmissionPayload?
[19:26:51] <FromDiscord> <cabboose> exclude the dumphook from utils?
[19:27:14] <FromDiscord> <cabboose> just don't import the dumphookz
[19:27:44] <FromDiscord> <cabboose> or use module name method syntax
[19:27:44] <FromDiscord> <cabboose> like
[19:27:45] <FromDiscord> <cabboose> jsony.dumpHooks(hookers)
[19:27:45] <FromDiscord> <tandy> i use that overload for a couple of different custom types so i dont htink so↵(@Rika)
[19:27:56] <FromDiscord> <Rika> use a "union generic"
[19:27:58] <FromDiscord> <tandy> so id do `proc jsony.dumpHook ...`?
[19:28:04] <FromDiscord> <cabboose> or import utils except dumpHooks
[19:28:10] <FromDiscord> <Rika> `Sub...load or MoreObjects or MoreObjectss"
[19:28:12] <FromDiscord> <Rika> (edit) "MoreObjectss"" => "MoreObjectss`"
[19:28:39] <FromDiscord> <cabboose> oh
[19:28:39] <FromDiscord> <cabboose> right its a hook ofc im dead beat stupid
[19:28:40] <FromDiscord> <tandy> the thing is i need the dump hook
[19:28:40] <FromDiscord> <cabboose> wait
[19:28:41] <FromDiscord> <cabboose> you're using dumphooks from both modules?
[19:28:43] <FromDiscord> <cabboose> WHY?!
[19:28:43] <FromDiscord> <tandy> `or` or `|` ?↵(@Rika)
[19:28:47] <FromDiscord> <Rika> he is not
[19:28:55] <FromDiscord> <Rika> both work tandy
[19:28:58] <FromDiscord> <tandy> nop, i dont want the default jsony dumphooks
[19:28:59] <FromDiscord> <Rika> i personally use or
[19:29:01] <FromDiscord> <Rika> some people use |
[19:29:15] <FromDiscord> <tandy> this is probably the best solution then↵(@Rika)
[19:29:35] <FromDiscord> <cabboose> you could also define the jsony hooks before importing utils
[19:29:44] <FromDiscord> <cabboose> I remember running into a similar problem
[19:29:47] <FromDiscord> <tandy> the hooks are in utils
[19:29:53] <FromDiscord> <tandy> i import them from utils so i can use them
[19:30:16] <FromDiscord> <tandy> or maybe the issue is because i import jsony in utils
[19:30:21] <FromDiscord> <tandy> but i dont really need it
[19:30:31] <FromDiscord> <cabboose> oh is this not a system module
[19:30:31] <FromDiscord> <tandy> nah that didnt solve it
[19:30:34] <FromDiscord> <cabboose> am i retarded
[19:30:56] <FromDiscord> <Rika> cab you need a rest do ya
[19:31:26] <FromDiscord> <cabboose> yes
[19:32:44] <FromDiscord> <cabboose> it's literally easier to just fix it ourselves than explain
[19:32:50] <FromDiscord> <cabboose> i'm sure it's something simple but annoying
[19:32:55] <FromDiscord> <cabboose> but my eyes are bleeding
[19:33:07] <FromDiscord> <Rika> did u read what i said
[19:33:14] <FromDiscord> <Rika> u need a rest u sound cranky
[19:33:53] <FromDiscord> <cabboose> ;\_; I go do things for now; I am definitely incapable
[19:43:28] <FromDiscord> <tandy> does nim suport circular dependencies yet
[19:43:39] <FromDiscord> <tandy> imports i mean
[19:43:43] <FromDiscord> <cabboose> there is experimental support
[19:43:51] <FromDiscord> <tandy> hmm
[19:43:53] <FromDiscord> <cabboose> you have to turn it on
[19:43:53] <FromDiscord> <tandy> ok il try it
[19:44:13] <FromDiscord> <cabboose> like rub it (but actually search the experimental features, it's there somewhere)
[19:48:56] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:49:03] <FromDiscord> <tandy> https://nim-lang.org/docs/manual_experimental.html
[19:49:06] <FromDiscord> <tandy> couldnt see it here
[19:52:04] <FromDiscord> <cabboose> Hmm maybe I'm actually wrong; might have been they were working on it?
[19:52:15] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/pull/18818
[19:52:23] <FromDiscord> <haxscramper> They are working on it right now
[19:52:29] <FromDiscord> <haxscramper> Actually there are two alternative implementations
[19:53:08] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/pull/18822
[19:53:42] <FromDiscord> <tandy> hmm i guess il wait
[19:53:57] <FromDiscord> <haxscramper> THis probably won't make even in 1.8
[19:54:03] <FromDiscord> <haxscramper> Well, that is my prediction
[19:54:10] <FromDiscord> <haxscramper> certainly not for 1.6
[19:54:57] <FromDiscord> <tandy> is there a timeline ?
[19:55:06] <FromDiscord> <tandy> the milestones dont seem to be updated anymore
[19:56:41] <FromDiscord> <haxscramper> who knows
[19:56:48] <FromDiscord> <tandy> lole
[19:56:59] <FromDiscord> <haxscramper> No, I have not seen any concrete timeline
[19:57:10] <FromDiscord> <haxscramper> Like, I thought RC 1.6 is our closes goal
[19:57:20] <FromDiscord> <haxscramper> But then they jumped lazy semcheck like it is the main part
[19:57:30] <FromDiscord> <haxscramper> ARC/ORC is for 2.0 supposedly
[19:57:46] <FromDiscord> <haxscramper> IC is in the intermediate state, I have no idea what is going on anymore
[19:58:04] <FromDiscord> <haxscramper> I wrote RFC for nimble, but after "status lockfile PR" I can just scratch it
[19:58:19] <FromDiscord> <haxscramper> Well, nimble changes are not so dramantic
[19:58:24] <FromDiscord> <haxscramper> But I have to account for the shit fallout
[19:58:25] <FromDiscord> <cabboose> status libp2p and chronos have to be refactored to be orc/arc friendly pretty sure
[19:58:44] <FromDiscord> <leorize> they can just switch to cps \:p
[19:58:51] <FromDiscord> <haxscramper> tooling relied on IC
[19:58:51] <FromDiscord> <cabboose> that's probably eating a lot of time
[19:58:57] <FromDiscord> <haxscramper> So no timeline for tooling improvements
[19:59:00] <FromDiscord> <tandy> damn
[19:59:05] <FromDiscord> <tandy> tooling really is the big one
[19:59:14] <FromDiscord> <haxscramper> well, who uses nimsuggest yeah
[19:59:21] <FromDiscord> <haxscramper> not like it is the most complained feature
[19:59:24] <FromDiscord> <tandy> i wish nimsuggest supported js target too
[19:59:27] <FromDiscord> <haxscramper> cyclic imports are better
[19:59:49] <FromDiscord> <haxscramper> More needed
[19:59:56] <FromDiscord> <haxscramper> what else
[20:00:04] <FromDiscord> <haxscramper> concepts are "sometimes later IDK"
[20:00:08] <FromDiscord> <haxscramper> also no timeline
[20:00:10] <FromDiscord> <haxscramper> view types
[20:00:20] <FromDiscord> <leorize> i have personally given up on seeing packed ast working
[20:00:29] <FromDiscord> <haxscramper> they apparently exist, but I don't know what is going on
[20:00:42] <FromDiscord> <haxscramper> Well, I can comment on C and C++ interop, because that's what I'm working on
[20:00:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> on the topic of imports, inside file2.nim, I do, `import file1; export file1`
[20:01:00] <FromDiscord> <haxscramper> On nimble because I wrote RFC for it
[20:01:09] <FromDiscord> <haxscramper> And on better docgen, but right now I'm waiting for 1.6 breakages
[20:01:12] <FromDiscord> <tandy> sounds like a lack of communication mainly atm?
[20:01:25] <FromDiscord> <haxscramper> tell me someting I don't know
[20:01:30] <FromDiscord> <haxscramper> yes
[20:01:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> file one has a bunch of things in it, like type1, type2, proc1, proc2, that it exports
[20:01:35] <FromDiscord> <leorize> well there used to be bi-weekly nim meetings
[20:01:41] <FromDiscord> <haxscramper> Well, let me quote you another rant of mine
[20:01:42] <FromDiscord> <haxscramper> to save time
[20:01:48] <FromDiscord> <leorize> and then it's gone
[20:02:00] <FromDiscord> <tandy> why not anymore?
[20:02:25] <FromDiscord> <tandy> this is kinda sad cos i love nim \:X
[20:02:54] <FromDiscord> <@bracketmaster-5a708063d73408ce4> can I have export file1 also export all the exported symbols inside file1?
[20:03:01] <FromDiscord> <haxscramper> https://irclogs.nim-lang.org/28-06-2021.html#13:55:06
[20:03:06] <FromDiscord> <haxscramper> IRC here
[20:03:13] <FromDiscord> <Rika> In reply to @@bracketmaster-5a708063d73408ce4 "can I have export": ...does it not do that bracket?
[20:04:05] <FromDiscord> <haxscramper> to figure out what is going on you have to rely on the people who are here for a long time
[20:04:21] <FromDiscord> <haxscramper> and they will quickly come up with a "latest news digest" for you
[20:05:09] <FromDiscord> <tandy> i agree with you
[20:05:36] <FromDiscord> <tandy> understand that writing a blog post once a month can be hard though, doesnt nim get financial contributions so they can pay a contributor to do this?
[20:06:21] <FromDiscord> <tandy> idealy devs will keep milestones up to date, and the writer can summarise it
[20:06:46] <FromDiscord> <haxscramper> ffs, it does not have to be a "blog post once a month"
[20:06:57] <FromDiscord> <tandy> oh mb
[20:06:58] <FromDiscord> <haxscramper> I would be satisfied with quick checklist of promised features
[20:07:06] <FromDiscord> <haxscramper> Or what they are working on
[20:07:44] <FromDiscord> <haxscramper> ● We are planning to release nim 1.6 in the next month↵● Plan to add support for X Y Z↵● Right now there are some issues with Q, we are working on it before our release
[20:07:44] <FromDiscord> <tandy> how often?
[20:07:53] <FromDiscord> <haxscramper> Once a month?
[20:08:06] <FromDiscord> <haxscramper> Or at least with some frequency
[20:08:06] <FromDiscord> <tandy> yeah i mean thats a blog post
[20:08:11] <FromDiscord> <haxscramper> Not like this bi-weekly
[20:08:15] <FromDiscord> <leorize> I proposed using github project to communicate
[20:08:16] <FromDiscord> <tandy> but it doesnt need to be big yeah
[20:08:22] <FromDiscord> <haxscramper> meeting that does not exist now
[20:08:24] <FromDiscord> <leorize> and it worked for a week or two
[20:09:04] <FromDiscord> <tandy> yeah i like that method too
[20:09:05] <FromDiscord> <haxscramper> I would be satisfied with anything
[20:09:29] <FromDiscord> <tandy> do we need to email araq or something?
[20:09:41] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yYB
[20:09:52] <FromDiscord> <haxscramper> we have nim forum with "announcements" section
[20:10:54] <FromDiscord> <haxscramper> the problem is not how, we are not cavemen so I guess we can figure someting out, the problem is complete lack for interest in explaining clearly what they want to do in genral
[20:10:55] <FromDiscord> <haxscramper> like fusion
[20:11:00] <FromDiscord> <haxscramper> omg, this is an absolute farce
[20:11:25] <FromDiscord> <dom96> IMO tooling should be number 1 priority
[20:11:43] <FromDiscord> <haxscramper> the idea was tolerable, but it just died nowhere and it's rotting corpse annoys me every day
[20:12:02] <FromDiscord> <dom96> nimsuggest has been around for a long time and hasn't improved since the first release as far as I can tell
[20:12:09] <FromDiscord> <Rika> the issue at its core is that theres just not enough people here working
[20:12:22] <FromDiscord> <haxscramper> IC is crucial for some code analysis, for haxdoc, for general tooling, for compilation speeds
[20:12:27] <FromDiscord> <haxscramper> Did I forget anything?
[20:12:30] <FromDiscord> <leorize> you should try looking at the compiler
[20:12:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> What is IC?
[20:12:34] <FromDiscord> <haxscramper> lazy semcheck is needed for .. cyclic imports?
[20:12:40] <FromDiscord> <Rika> incremental compilation
[20:12:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah
[20:13:05] <FromDiscord> <@bracketmaster-5a708063d73408ce4> even though nim lacks IC, its still lightyears faster than rust
[20:13:08] <FromDiscord> <leorize> it's an undocumented mess that requires you to speak and breath nim to keep working on it without being insane
[20:13:08] <FromDiscord> <@bracketmaster-5a708063d73408ce4> in my experience
[20:13:29] <FromDiscord> <Rika> rust is a really low bar
[20:13:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sounds like most compilers
[20:13:35] <FromDiscord> <Rika> in terms of speed, i mean
[20:13:41] <FromDiscord> <leorize> one of IC feature is not really "fast compilation" IMO
[20:14:10] <FromDiscord> <cabboose> That was a fantastic read [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)
[20:14:13] <FromDiscord> <cabboose> 10/10 rant
[20:14:29] <FromDiscord> <leorize> it's packedast, a serializable form of AST can be operated on by other tools
[20:15:01] <FromDiscord> <haxscramper> @dom96\: If #300 is not convincing enough to work on tooling first, I don't know what is
[20:15:03] <FromDiscord> <leorize> the idea is that compiler produce packedast, then tooling can read off that
[20:15:30] <FromDiscord> <leorize> its impl is stalled by now afaik
[20:15:44] <FromDiscord> <leorize> and ofc, the packedast module not having a single comment
[20:16:00] <FromDiscord> <leorize> such is typical of nim compiler code
[20:16:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> the best compiler code I've ever looked at has been scheme compiler code
[20:16:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> scheme compilers are really small
[20:17:16] <FromDiscord> <dom96> In reply to @haxscramper "<@132595483838251008>\: If #300 is": I'm surprised Status isn't pushing for tooling more
[20:17:33] <FromDiscord> <leorize> they just brided lockfiles in
[20:17:44] <FromDiscord> <haxscramper> "lockfiles"
[20:17:49] <FromDiscord> <leorize> they're pushing, but in the way they like
[20:18:06] <FromDiscord> <dom96> Having nice Cmd+Hover/Cmd+Click would be really amazing for everyone including their devs
[20:18:30] <FromDiscord> <cabboose> you mean cmd click that actually WORKS
[20:18:37] <FromDiscord> <dom96> of course
[20:18:47] <FromDiscord> <cabboose> once a million years I see something come from it
[20:18:48] <FromDiscord> <cabboose> and i get excited
[20:18:56] <FromDiscord> <cabboose> and then it dies the next second
[20:19:02] <FromDiscord> <haxscramper> I see something come out of it every time I use it
[20:19:05] <FromDiscord> <cabboose> but for those 3 seconds
[20:19:07] <FromDiscord> <haxscramper> usually it is a smoke from my CPU
[20:19:09] <FromDiscord> <cabboose> I feel like a productivity god
[20:19:22] <FromDiscord> <leorize> and tbh it's not like Nim doesn't have enough devs
[20:19:29] <FromDiscord> <dom96> I've had it disabled for years, it's just too annoying
[20:20:06] <FromDiscord> <leorize> it's that the compiler is pretty much impossible to get into if you don't look at it all day
[20:20:38] <FromDiscord> <tandy> true, but its beautiful
[20:20:41] <FromDiscord> <Rika> so someone has to put in that day to start commenting, and i wish i could
[20:20:43] <FromDiscord> <haxscramper> no
[20:20:46] <FromDiscord> <haxscramper> just kill me please
[20:20:52] <FromDiscord> <haxscramper> this abomination of a
[20:21:02] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I feel like this convo is the beginning of neonim
[20:21:13] <FromDiscord> <dom96> I think you're all being a bit too harsh
[20:21:18] <FromDiscord> <Rika> fragmenting the community will not help
[20:21:20] <FromDiscord> <leorize> in a way it's already happened
[20:21:28] <FromDiscord> <leorize> just not in this chat
[20:21:37] <NimEventer> New post on r/nim by switchitout: Is there a in-depth resource to learn about "sink" and "lent" annotations / ARC?, see https://reddit.com/r/nim/comments/post11/is_there_a_indepth_resource_to_learn_about_sink/
[20:21:50] <FromDiscord> <haxscramper> well, these problems are real, I don't see any that explicitly overblow anything↵(@dom96)
[20:21:51] <FromDiscord> <cabboose> Hahahahaha
[20:21:56] <FromDiscord> <haxscramper> No communication with anything
[20:22:01] <FromDiscord> <haxscramper> No comments for the main code base
[20:22:06] <FromDiscord> <cabboose> this newest post
[20:22:09] <FromDiscord> <cabboose> kind of relates
[20:22:22] <FromDiscord> <dom96> I agree that they are all real, but there is no need to call it an abomination
[20:22:58] <FromDiscord> <leorize> have you tried fixing a compiler bug lately?
[20:23:00] <FromDiscord> <haxscramper> well, sorry for using disturbing words
[20:23:14] <FromDiscord> <dom96> What's unclear is whether this is a problem with all compilers or just Nim's
[20:23:28] <FromDiscord> <haxscramper> O don't care what goes on in clang compoile
[20:23:29] <FromDiscord> <leorize> it's just nim
[20:23:35] <FromDiscord> <haxscramper> or in rust
[20:23:36] <FromDiscord> <haxscramper> or in scheme
[20:23:36] <FromDiscord> <haxscramper> or in idris
[20:23:39] <FromDiscord> <haxscramper> not my problem
[20:23:43] <FromDiscord> <haxscramper> I write nim, here and now
[20:23:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Well, its good to be multilangual
[20:24:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> All compilers have their problems
[20:24:07] <FromDiscord> <Rika> thats not the point
[20:24:11] <FromDiscord> <haxscramper> ANd I work with nim compiler API
[20:24:31] <FromDiscord> <leorize> just look at zig, they used to be smaller than nim, and now their devs dwarfs nim size and scope
[20:24:33] <FromDiscord> <haxscramper> nim compiler API
[20:25:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> are you saying that zig has a better compiler dev community?
[20:25:05] <FromDiscord> <cabboose> Saying "all x and z have problems too" is a bad argument in any scenario
[20:25:23] <FromDiscord> <haxscramper> it's like saying that other package managers have some problems
[20:25:24] <FromDiscord> <haxscramper> so what
[20:25:32] <FromDiscord> <dom96> sure, I agree
[20:25:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> V also cam along fairly quickly, seems like V has a number of devs working on compiler internals
[20:25:36] <FromDiscord> <leorize> yes, better onboarding, better communication, etc.
[20:25:49] <FromDiscord> <dom96> I'm actually just curious how other compilers are
[20:25:53] <FromDiscord> <dom96> I'm not excusing anything
[20:26:18] <FromDiscord> <leorize> let's just say that nim is stagnating
[20:26:19] <FromDiscord> <haxscramper> they hyped in tons of people, quickly rewrote the compiler into something that is pleasant to work with, and their lead devs are super responsive to discussions
[20:26:25] <FromDiscord> <haxscramper> seems like that worked for them
[20:26:39] <FromDiscord> <leorize> we have unique features that keep users here
[20:26:52] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how do you think V got the leads to be super responsive?
[20:27:11] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Nim's macros originally brought me here
[20:27:14] <FromDiscord> <leorize> but half-assed, impl, right
[20:27:20] <FromDiscord> <@bracketmaster-5a708063d73408ce4> But I quickly found too many rough edges
[20:27:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> But I already wrote so much nim code
[20:27:29] <FromDiscord> <haxscramper> I mean ... they just people who engage in discussion with community
[20:27:30] <FromDiscord> <@bracketmaster-5a708063d73408ce4> So I guess I"m stuck
[20:27:46] <FromDiscord> <haxscramper> At least that's an impression I get from their discord
[20:27:55] <FromDiscord> <dom96> All their leads are also on Twitter
[20:27:56] <FromDiscord> <haxscramper> Of course they all have NIH syndrome
[20:28:03] <FromDiscord> <haxscramper> and you can get banned for shit-talking
[20:28:07] <FromDiscord> <haxscramper> but that is another topic
[20:28:10] <FromDiscord> <dom96> Which really helps drive engagement
[20:28:15] <FromDiscord> <leorize> as is typical of go devs \:p
[20:28:34] <FromDiscord> <tandy> NIH?
[20:28:35] <FromDiscord> <dom96> The amount of times I've tried to get Araq to answer HN/Reddit questions...
[20:28:42] <FromDiscord> <haxscramper> not invented here
[20:29:37] <FromDiscord> <haxscramper> we have a community manager, no?↵(@dom96)
[20:29:39] <FromDiscord> <haxscramper> miran
[20:29:50] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[20:29:53] <FromDiscord> <haxscramper> At least someone described them like this
[20:30:11] <FromDiscord> <dom96> As far as I understand, yes.
[20:30:21] <FromDiscord> <cabboose> I always wondered if nim had a community manager; I thought nim did because I saw some posts
[20:30:30] <FromDiscord> <cabboose> but now that I'm more involved, I think it was a farce hahaha
[20:30:39] <FromDiscord> <cabboose> Feels more like the wild west
[20:30:47] <FromDiscord> <Rika> it is
[20:30:52] <FromDiscord> <Rika> not really feels because it is
[20:30:56] <FromDiscord> <dom96> and yet I still do a lot of tweeting ...
[20:31:00] <FromDiscord> <cabboose> A community manager is a useless position if there is no communication with the community on behalf of the devs
[20:31:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @haxscramper\:matrix.org  - are you considering moving to another language?
[20:31:16] <FromDiscord> <cabboose> which requires the devs to comm with the community manager
[20:31:22] <FromDiscord> <haxscramper> no, nim is a hack, but nothing else comes close with features I need
[20:31:33] <FromDiscord> <haxscramper> But that does not mean I like to work with this
[20:31:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> what features do you need?
[20:31:40] <FromDiscord> <cabboose> I don't think it's a matter of tweeting as much as it is about discussing what's happening
[20:31:59] <FromDiscord> <cabboose> like haxscramper was saying
[20:32:01] <FromDiscord> <dom96> Of course
[20:32:07] <FromDiscord> <haxscramper> macros, C++ interop, C interop, basic support for inheritace, tolerable stacktraces, access to compiler API via the same language
[20:32:12] <FromDiscord> <haxscramper> sum types
[20:32:22] <FromDiscord> <cabboose> But you have made contributions in bringing people in; I mean I got in through your book
[20:32:30] <FromDiscord> <@bracketmaster-5a708063d73408ce4> C++ interop in Nim isn't really great
[20:32:40] <FromDiscord> <@bracketmaster-5a708063d73408ce4> But that's probably C++'s fault more than anything else
[20:32:42] <FromDiscord> <cabboose> haxscramper is making it great
[20:32:44] <FromDiscord> <haxscramper> I"m working on it
[20:32:50] <FromDiscord> <haxscramper> "working"
[20:32:53] <FromDiscord> <haxscramper> just kill me please
[20:32:56] <FromDiscord> <dom96> Writing blog posts, getting people to write blog posts, setting up meetups, making merch
[20:33:06] <FromDiscord> <cabboose> Hows that blown bomb going
[20:33:10] <FromDiscord> <dom96> all things I'd expect a community manager to do, and to be fair miran does do multiple of those things
[20:33:22] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Honestly, do any languages have great C++ interop?
[20:33:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> My whole position is avoid C++ like the plague
[20:33:35] <FromDiscord> <tandy> C++
[20:33:45] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ahaha!!
[20:33:49] <FromDiscord> <haxscramper> alright, I'm done withnim
[20:33:53] <FromDiscord> <haxscramper> goodbye all
[20:33:59] <FromDiscord> <@bracketmaster-5a708063d73408ce4> wait
[20:34:05] <FromDiscord> <@bracketmaster-5a708063d73408ce4> you can't just leave us
[20:34:14] <FromDiscord> <dom96> but I also don't like discussing what someone does and doesn't do here like this
[20:34:18] <FromDiscord> <Rika> especially for C++...
[20:34:30] <FromDiscord> <haxscramper> so what do you propose↵(@dom96)
[20:34:35] <FromDiscord> <haxscramper> write a collective letter?
[20:34:57] <FromDiscord> <haxscramper> and where do you want to discuss this
[20:35:00] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @haxscramper\:matrix.org  - you can design your own lang
[20:35:02] <FromDiscord> <haxscramper> official nim real-time chat
[20:35:06] <FromDiscord> <enthus1ast> maybe do not thing about issues, but solutions
[20:35:08] <FromDiscord> <@bracketmaster-5a708063d73408ce4> if its good, maybe I'll join 😛
[20:35:11] <FromDiscord> <cabboose> I don't think miran has any fault if they are not informed by higher up whats happening internally to communicate it to the community
[20:35:12] <FromDiscord> <haxscramper> discussin about nim managemetn
[20:35:22] <FromDiscord> <cabboose> have you seen the RFCs for nim before?
[20:35:50] <FromDiscord> <enthus1ast> sometimes, but i'm not REALLY informed
[20:36:05] <FromDiscord> <cabboose> I mean; there's a lot of lovely solutions on there
[20:36:08] <FromDiscord> <enthus1ast> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/887730759027269673): maybe do not think about issues, but solutions
[20:36:14] <FromDiscord> <cabboose> and some of them
[20:36:15] <FromDiscord> <cabboose> are almost
[20:36:15] <FromDiscord> <cabboose> ancient
[20:36:16] <FromDiscord> <cabboose> almost
[20:36:16] <FromDiscord> <haxscramper> you have to be, otherwise you are out of the loop in this community
[20:36:20] <FromDiscord> <haxscramper> have to be informed
[20:36:41] <FromDiscord> <haxscramper> like read all of this random discussions where Araq shares his opinon on stdlib evolution
[20:36:53] <FromDiscord> <Rika> a lot of them are "solved" and have agreed-upon solutions
[20:36:54] <FromDiscord> <haxscramper> then there aare multiple RFC
[20:36:55] <FromDiscord> <haxscramper> fusion
[20:36:56] <FromDiscord> <haxscramper> some random crap
[20:36:57] <FromDiscord> <Rika> jsut a matter of impl
[20:37:08] <FromDiscord> <haxscramper> and then nobody knows how stdlib evolves
[20:37:11] <FromDiscord> <haxscramper> have you heard of atlast?
[20:37:13] <FromDiscord> <haxscramper> atlas\
[20:37:19] <FromDiscord> <enthus1ast> nope
[20:37:20] <FromDiscord> <cabboose> ?
[20:37:30] <FromDiscord> <haxscramper> planned nim tool to bundle stdlib packages together
[20:37:38] <FromDiscord> <Rika> atlas is that thing for compiler to rely on packages right
[20:37:39] <FromDiscord> <cabboose> Ahyeah
[20:37:48] <FromDiscord> <haxscramper> idk if this is announced, but they worked on it for some time
[20:37:56] <FromDiscord> <haxscramper> it is even merged
[20:37:57] <FromDiscord> <cabboose> I remember seeing it somewhere
[20:37:58] <FromDiscord> <Rika> barely anyone knows about it
[20:38:02] <FromDiscord> <haxscramper> it is for internal use though
[20:38:52] *** Joins: rockcavera (~rc@192.12.112.204)
[20:38:52] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[20:38:52] *** Joins: rockcavera (~rc@user/rockcavera)
[20:40:23] <FromDiscord> <haxscramper> it also does not help that a lot of nim features are started in an intermediate experimental state
[20:40:32] <FromDiscord> <haxscramper> and they hang in there for idk how long
[20:40:39] <FromDiscord> <haxscramper> letting community be the test suite is kind of
[20:41:08] <FromDiscord> <haxscramper> "important packages" is basically - "nim compiler is valid if it can comile package X Y and Z"
[20:41:16] <FromDiscord> <haxscramper> and then core devs PR fixes to these packages
[20:41:19] <FromDiscord> <dom96> @haxscramper I would suggest chatting with miran or Araq directly
[20:41:20] <FromDiscord> <haxscramper> so they can unblock compioler
[20:41:23] <FromDiscord> <haxscramper> compiler\
[20:42:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @haxscramper\:matrix.org  - have you considered dale?
[20:42:50] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://github.com/tomhrr/dale
[20:42:52] <nrds> <12R2D299> 4GitHub: 7"Lisp-flavoured C"
[20:42:53] <FromDiscord> <cabboose> Shouldn't there be someone here to be monitoring and communicating on behalf of the devs?
[20:43:17] <FromDiscord> <haxscramper> I have tens of thousands of SLOC of nim code
[20:43:23] <FromDiscord> <haxscramper> I'm not interested in switching now
[20:44:00] <FromDiscord> <haxscramper> also "lisp-flavored" anything makes be feel sick
[20:44:12] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ok - not a lisp fan - I get it
[20:44:20] <FromDiscord> <haxscramper> Lisp is not aa language with good "flavor"
[20:44:31] <FromDiscord> <haxscramper> It is a language with good ideas
[20:44:32] <FromDiscord> <haxscramper> Like ast macros
[20:44:32] <FromDiscord> <@bracketmaster-5a708063d73408ce4> But if you want compilers that are nice to work on, lisp is really the only way to go
[20:44:40] <FromDiscord> <haxscramper> now
[20:44:41] <FromDiscord> <haxscramper> no\
[20:44:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> compilers written in lisp are pretty readable IMO
[20:44:50] <FromDiscord> <cabboose> m8 are you trying to poke the bear?
[20:44:59] <FromDiscord> <Yardanico> nice discussion going on in #main
[20:45:03] <FromDiscord> <haxscramper> the one way to go with good compilers is writing docs
[20:45:21] <FromDiscord> <haxscramper> Compiler is just a code base
[20:45:25] <FromDiscord> <haxscramper> If it is commented and explained it is better
[20:45:29] <FromDiscord> <haxscramper> Language does not matter
[20:45:38] <FromDiscord> <cabboose> It was all @cabboose  ban him
[20:46:38] <FromDiscord> <cabboose> At the end of the day, the people who would be the most angry about the status quo would be the ones who care the most about it
[20:46:39] <FromDiscord> <leorize> if you ever want to cry, try touching nim's sigmatch
[20:47:03] <FromDiscord> <leorize> in particular, try figuring out how the information flow between sem \<-\> sigmatch
[20:47:08] <FromDiscord> <cabboose> Aiya
[20:47:41] <FromDiscord> <@bracketmaster-5a708063d73408ce4> In my experience, compilers aren't the paragon of documentation. I haven't  touched Nim's compiler, but GCC for example is basically requires a few months of study before you can do anything useful with it
[20:47:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> But yeah, roadmaps for nim would be nice
[20:48:01] <FromDiscord> <Rika> but gcc is old as balls?
[20:48:02] <FromDiscord> <haxscramper> AND SO WHAT
[20:48:27] <FromDiscord> <haxscramper> there is a shit somehwere, good, now we can disregard every complaint?
[20:48:38] <FromDiscord> <haxscramper> let me count number of comment lines in nim compiler
[20:49:05] <FromDiscord> <cabboose> I think he's trying to antagonise you
[20:49:06] <FromDiscord> <haxscramper> also, there is no spec for typed AST
[20:49:35] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:49:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> well...
[20:50:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I wasn't really -just trying to share some experience
[20:50:53] <FromDiscord> <haxscramper> well, the internals of a compiler is a niche compaint, we don't have thousands of nim users that work with compiler
[20:51:01] <FromDiscord> <haxscramper> But other features are communicated just as badly
[20:51:25] <FromDiscord> <leorize> we should have more than 3 people working on the compiler, at least
[20:51:37] <FromDiscord> <leorize> is it still 3? I don't know who is on paying roster nowadays
[20:51:49] <FromDiscord> <cabboose> This is what happens when a mans project explodes from an update
[20:51:52] <FromDiscord> <haxscramper> We are currently working on IC, ARC/ORC, Lazy semcheck, View types and other things
[20:52:30] <FromDiscord> <haxscramper> Well, I'm not much  beter, hcparse/haxdoc are like "big new thing", but who knows their state
[20:52:31] <FromDiscord> <haxscramper> I certainly don't
[20:52:47] <FromDiscord> <haxscramper> For this I have to talk to a guy who writes my code
[20:52:58] <FromDiscord> <xflywind> Just araq and timothee work on compiler in recent months.
[20:53:37] *** Joins: syl_ (~z@user/syl)
[20:53:40] *** syl_ is now known as syl
[20:54:13] <FromDiscord> <haxscramper> It took me about a couple of months to get into compiler internals
[20:54:39] <FromDiscord> <haxscramper> And I had an absolute thermonuclear solution for working with unfamilliar code
[20:54:40] <FromDiscord> <haxscramper> sourcetrail/haxdoc
[20:54:41] <FromDiscord> <haxscramper> it worked then
[20:56:46] <FromDiscord> <xflywind> Add them to important packages?
[20:57:01] <FromDiscord> <haxscramper> no, thanks
[20:57:13] <FromDiscord> <haxscramper> This does not make any sense to me
[20:57:16] <FromDiscord> <haxscramper> compiler breaks code
[20:57:32] <FromDiscord> <haxscramper> now you specifically play around my code not to break it
[20:57:52] <FromDiscord> <haxscramper> Also this is not "important" package yet anyway
[20:57:54] <FromDiscord> <haxscramper> it is like
[20:58:01] <FromDiscord> <haxscramper> I tell everyone how good it is
[20:58:26] <FromDiscord> <haxscramper> and when 1.6 finally releases I will fix it for new version
[20:58:32] <FromDiscord> <leorize> one day nim will have the CI infra to test all packages
[20:58:34] <FromDiscord> <leorize> one day...
[20:58:48] <FromDiscord> <cabboose> I literally wanted it today
[20:58:57] <FromDiscord> <cabboose> And I am an impatient zoomer
[20:58:59] <FromDiscord> <cabboose> so this is unacceptable
[20:59:09] <FromDiscord> <@bracketmaster-5a708063d73408ce4> what is a zoomer?
[20:59:11] <FromDiscord> <haxscramper> https://www.hyrumslaw.com/
[20:59:18] <FromDiscord> <haxscramper> hyrim-style CI
[20:59:30] <FromDiscord> <haxscramper> dont' spec
[20:59:58] <FromDiscord> <haxscramper> just write all the code you can write and hope someone catches a bug
[21:02:19] <FromDiscord> <haxscramper> not like I know of a surefilre way to write a code without bugs
[21:02:19] <FromDiscord> <haxscramper> I would just write nim then myself
[21:02:20] <FromDiscord> <cabboose> the new generation of dopamine deprived human beings
[21:02:21] <FromDiscord> <cabboose> Besides not writing at all
[21:04:09] <FromDiscord> <leorize> my trick to less bugs is to test more
[21:04:31] <FromDiscord> <leorize> tests first, then make the simplest impl that will solve the problem
[21:04:41] <FromDiscord> <leorize> then you can think of fastify-ing it
[21:04:44] <FromDiscord> <dom96> why don't we have the infra to do that?
[21:05:03] <FromDiscord> <dom96> We can get more DO droplets if needed
[21:05:28] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3yYL
[21:06:00] <FromDiscord> <dom96> I also still have access to the gcc build farm which we used to test exotic architectures back in the nimbuild days
[21:06:03] <FromDiscord> <haxscramper> Also, some built-in features have severe limitations, like `method` being very slow etc. but those are minor complaints\`
[21:06:20] <FromDiscord> <haxscramper> `nkError` probably should not be added to this list
[21:07:04] <FromDiscord> <enthus1ast> i can imagine that if distrubuted as a container, some community members are willing to run automated tests↵(@dom96)
[21:07:58] <FromDiscord> <xflywind> That sounds hard to maintain.
[21:08:08] <FromDiscord> <Rika> a container?
[21:08:15] <FromDiscord> <dom96> In reply to @flywind "That sounds hard to": yep, that's always the problem
[21:08:30] <FromDiscord> <dom96> a CI infra for something as complex as a compiler really needs at least one full-time person IMO
[21:08:49] <FromDiscord> <enthus1ast> i mean the IC infrastructure as a container
[21:08:55] <FromDiscord> <enthus1ast> then the packets are pulled in and tested
[21:09:08] <FromDiscord> <enthus1ast> then containers for cross compilation
[21:09:28] <FromDiscord> <dom96> Sure, you could do this to resolve the capacity problem
[21:09:54] <FromDiscord> <dom96> afaik gitlab's CI makes this quite easy
[21:11:42] <FromDiscord> <haxscramper> I don't know how import it is really, but having no tool for code coverage is annoying
[21:12:14] <FromDiscord> <leorize> i wrote a coverage ci for nim somewhere
[21:12:37] <FromDiscord> <enthus1ast> You're talking about test coverage?
[21:13:29] <FromDiscord> <leorize> but the main issue is that gcov-style coverage is unaware of  nim execution
[21:14:08] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/pull/15827#issuecomment-906577116
[21:14:24] *** Quits: leth (~user@h-37-123-182-177.A328.priv.bahnhof.se) (Read error: Connection reset by peer)
[21:14:40] <FromDiscord> <haxscramper> basically all tools to get runtime properties of the code are pain
[21:15:11] <FromDiscord> <haxscramper> painful to use and don't work with nim, and/or don't work with large code bases
[21:15:18] <FromDiscord> <haxscramper> Use outdated intermediate store formats
[21:15:29] <FromDiscord> <haxscramper> Or ad-hoc pretty printed formats
[21:15:34] <FromDiscord> <haxscramper> Can't really be integrated into anything
[21:17:40] <FromDiscord> <enthus1ast> I have absolutely no knowledge about this and maybe this is naive, but would it maybe possible to have an approach like AFL does it?
[21:21:11] <FromDiscord> <cabboose> The Australian Football League?
[21:21:57] <FromDiscord> <Rika> fuzzing?
[21:22:17] <FromDiscord> <enthus1ast> https://en.wikipedia.org/wiki/American_fuzzy_lop_(fuzzer)
[21:22:25] <FromDiscord> <Rika> "american fuzzy lop
[21:22:26] <FromDiscord> <Rika> yeah]
[21:22:27] <FromDiscord> <Rika> that
[21:22:48] <FromDiscord> <enthus1ast> i don't know exactly how it works, but it can somehow see all the code trees that where taken
[21:23:50] <FromDiscord> <Rika> i tried it
[21:23:54] <FromDiscord> <Rika> its not fast
[21:23:57] <FromDiscord> <Rika> (of course)
[21:24:08] <FromDiscord> <Rika> basically you feed it an input
[21:24:09] <FromDiscord> <leorize> https://github.com/alaviss/Nim/commits/coverage \<- my previous attempt at implementing coverage testing for nim
[21:24:14] <FromDiscord> <Rika> it uses that input to generate more inputs
[21:24:26] <FromDiscord> <Rika> and tests it on the binary, see if it crashes
[21:24:44] <FromDiscord> <leorize> i forgot why i stopped this stuff by now, but it's there if anyone is interested
[21:24:49] <FromDiscord> <enthus1ast> i do not mean in the fuzzing aspect, but "these code tests visit about 40% of all possible routes"
[21:24:53] <FromDiscord> <Rika> its good for looking for obscure parser bugs
[21:25:00] <FromDiscord> <Rika> but not good for logic issues
[21:26:39] <FromDiscord> <haxscramper> Code traces can be good if you have two examples - working and not.
[21:26:47] <FromDiscord> <haxscramper> And you run the code, and compare things
[21:27:00] <FromDiscord> <haxscramper> It is not a dealbreker
[21:27:08] <FromDiscord> <Rika> yeah it doesnt see if the output is correct
[21:27:15] <FromDiscord> <Rika> it just checks if it doesnt crash
[21:27:46] <FromDiscord> <leorize> PBT is the fuzzing for logic
[21:28:02] <FromDiscord> <haxscramper> Beef suggested to use all examples from the issues
[21:28:06] <FromDiscord> <Rika> pbt?
[21:28:10] <FromDiscord> <haxscramper> I tests as well
[21:28:23] <FromDiscord> <enthus1ast> a few years ago, i fuzzed std/asynchttpserver for fun
[21:28:28] <FromDiscord> <enthus1ast> found a lot of crashes
[21:28:30] <FromDiscord> <haxscramper> It was a discussion about this idiotic stale bot
[21:28:43] <FromDiscord> <leorize> property based testing↵(@Rika)
[21:28:47] <FromDiscord> <Rika> i see
[21:28:50] <FromDiscord> <Rika> ive heard of it
[21:30:39] *** Quits: ozzz (~oz@46.49.41.80) (Quit: Bye)
[21:33:26] *** Joins: ozzz (~oz@46.49.41.80)
[21:46:55] <FromDiscord> <cabboose> sent a code paste, see https://play.nim-lang.org/#ix=3yZ1
[21:47:09] <FromDiscord> <cabboose> Is this true?
[21:47:15] <FromDiscord> <cabboose> in regards to 48-bit virtual addresses
[21:47:31] <FromDiscord> <leorize> you can read wikichips for that I guess
[21:47:38] <FromDiscord> <leorize> do they have references?
[21:48:09] <FromDiscord> <cabboose> Not for that claim hahaha
[21:49:00] <FromDiscord> <leorize> > ↵> except very recent Intel designs↵>
[21:49:03] <FromDiscord> <leorize> that's concerning
[21:49:30] <FromDiscord> <leorize> given that intel has only recently moved on from skylake
[21:49:59] <FromDiscord> <leorize> I guess you just have to test the property that they're trying to exploit to be sure
[21:50:21] <FromDiscord> <cabboose> Well does alignment have a cost to it?
[21:50:34] <FromDiscord> <leorize> yea
[21:50:53] <FromDiscord> <leorize> a lot of atomics and stuff only work on aligned address
[21:51:14] <FromDiscord> <leorize> though mratsim would have better sources for this
[21:55:39] <FromDiscord> <cabboose> Seems silly to try implement something on a cpu hack
[21:55:53] <FromDiscord> <cabboose> and else I only have the option of alignment
[21:56:06] <FromDiscord> <cabboose> so alignment it is
[21:57:01] <FromDiscord> <leorize> cpu hack is the basis of extremely high-performance computing
[21:57:57] <FromDiscord> <cabboose> I guess it can just be a switch that defaults to the cpu hack then?
[21:58:22] <FromDiscord> <leorize> I guess try to implement it as close to the authors design as possible
[21:58:40] <FromDiscord> <leorize> then try twiddling with the details after
[21:59:29] <FromDiscord> <cabboose> That's a funny one; their algorithm pseudocode is different from their article to their repo
[21:59:29] <FromDiscord> <cabboose> and then different to their cpp implementation
[21:59:30] <FromDiscord> <cabboose> hahahaha
[21:59:46] <FromDiscord> <cabboose> But yis I do as you say sensei
[22:00:27] <FromDiscord> <leorize> a lot of papers have this idea that you completely understand some of the underlying concepts
[22:09:26] <FromDiscord> <ValorZard> hey does anyone know what happened to Arne Döring
[22:10:16] <FromDiscord> <leorize> arne left nim for the most part
[22:10:16] <FromDiscord> <cabboose> well they do atomic fetchAdds which is supposed to increment the value of the 0'd bits so I assume they just do alignment
[22:10:48] <FromDiscord> <leorize> krux sometimes hang around in cps room but I haven't seen him lately
[22:14:27] <FromDiscord> <tandy> Coco kinda works
[22:14:31] <FromDiscord> <ValorZard> In reply to @leorize "arne left nim for": does anyone know why?
[22:14:46] <FromDiscord> <haxscramper> "kinda"
[22:14:52] <FromDiscord> <haxscramper> see #13 on their issue tracker
[22:15:25] <FromDiscord> <leorize> he got fed up with the lack of improvement to the compiler, and that his attempts were rejected
[22:15:46] <FromDiscord> <leorize> there's a lot more to it, but that's what on top of my head atm
[22:17:08] <FromDiscord> <ValorZard> I see. Are there plans to improve the complier?
[22:17:35] <FromDiscord> <tandy> a victim of things in the above discussion...?
[22:17:45] <FromDiscord> <cabboose> If you look at kruxs recent work looks like he's on Odin now \:x
[22:17:54] <FromDiscord> <leorize> yea
[22:17:58] <FromDiscord> <ValorZard> yeah thats actually where I ran into him
[22:18:08] <FromDiscord> <cabboose> he's doing work on their compiler \:/
[22:18:19] <FromDiscord> <leorize> he is not the first to leave, that is
[22:18:29] <FromDiscord> <ValorZard> oof is the leadership really that bad?
[22:18:36] <FromDiscord> <leorize> he is the first core dev to, though
[22:19:18] <FromDiscord> <haxscramper> In reply to @バロザード "oof is the leadership": There is a nuclear rant just above, though I probable made things sound overly dramatic
[22:19:31] <FromDiscord> <ValorZard> Ah
[22:19:53] <FromDiscord> <haxscramper> And it is mostly about lack of communication of where leadership wants to steer the language at the moment
[22:20:30] <FromDiscord> <haxscramper> Like it is not 1v1 fight for every PR at least, but general neglect of
[22:20:44] <FromDiscord> <haxscramper> idk, communication
[22:20:54] <FromDiscord> <ValorZard> Isee
[22:24:00] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/7983 stuff like this should be more common
[22:25:11] <FromDiscord> <deech> How do I `expandArc` with a qualified function, eg. `--expandArc:blah.myProc`?
[22:25:25] <FromDiscord> <leorize> you... don't
[22:25:56] <FromDiscord> <leorize> I believe expandArc works only on procs of the main unit
[22:27:03] <FromDiscord> <deech> Is there a way besides expandArc to see what's being destroyed or copied?
[22:34:47] <FromDiscord> <tandy> should i just fork jsony or is there a way to fix this?
[22:34:47] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3yZj
[22:34:48] <FromDiscord> <tandy> this worked for one hook, but my other more general hook is having the same error↵(@Rika)
[22:35:03] <FromDiscord> <cabboose> so like
[22:35:04] <FromDiscord> <cabboose> can you not do
[22:35:20] <FromDiscord> <cabboose> `jsony.dumpHook(s, v.get())`
[22:35:25] <FromDiscord> <Rika> make the more generic hooks less generic? can you do an example
[22:35:30] <FromDiscord> <Rika> no
[22:35:31] <FromDiscord> <Rika> he cant
[22:35:36] <FromDiscord> <Rika> dumpHook is not called by him
[22:36:00] <FromDiscord> <Rika> but "internally" by jsony
[22:36:17] <FromDiscord> <tandy> what im doing is telling jsony not to write to json where the type's field is an option none()↵(@Rika)
[22:36:38] <FromDiscord> <Rika> idk i think hooks for option are already defined
[22:36:48] <FromDiscord> <Rika> is there no docs on overriding default hooks?
[22:36:56] <FromDiscord> <cabboose> ... yeah there is
[22:37:06] <FromDiscord> <tandy> yeah but they dont skip none()s↵(@Rika)
[22:37:32] <FromDiscord> <cabboose> uhm
[22:37:47] <FromDiscord> <cabboose> fork it
[22:37:47] <FromDiscord> <cabboose> pretty sure you can tell jsony to do things like that
[22:37:48] <FromDiscord> <cabboose> well
[22:37:51] <FromDiscord> <cabboose> fuck it
[22:37:51] <FromDiscord> <cabboose> that rhymes
[22:38:06] <FromDiscord> <tandy> epic..
[22:38:12] <FromDiscord> <Rika> cab legit you're sounding strange
[22:38:27] <FromDiscord> <Rika> tandy might be helpful to raise the issue in the repo
[22:38:36] <FromDiscord> <haxscramper> Wouldn't this create invalid json?
[22:38:39] <FromDiscord> <Rika> theres a comma after tandy sorry
[22:38:48] <FromDiscord> <Rika> hax wdym?
[22:38:48] <FromDiscord> <cabboose> I wIlL eAt YoUr SoUl RiKa
[22:38:49] <FromDiscord> <haxscramper> `field: <skipped none(int)>`
[22:38:54] <FromDiscord> <Rika> `null`?
[22:39:00] <FromDiscord> <haxscramper> will make `"field":`
[22:39:00] <FromDiscord> <Rika> json has null doesnt it
[22:39:03] <FromDiscord> <cabboose> Okay i'm going to bed goodnight friends
[22:39:04] <FromDiscord> <haxscramper> And it should do `"field":null`
[22:39:09] <FromDiscord> <tandy> it would result in something like this↵{"field"\: ""}
[22:39:18] <FromDiscord> <tandy> where field is an option[string]
[22:39:30] <FromDiscord> <Rika> i thought when you mean skipped field you meant the field isnt put at all in the json
[22:41:34] <FromDiscord> <tandy> the union thing is to solve this same bug im having
[22:41:35] <FromDiscord> <tandy> yep, sorry
[22:41:41] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3yZl
[22:42:34] <FromDiscord> <haxscramper> at the very last
[22:42:36] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yZm
[22:43:05] <FromDiscord> <tandy> it does work, but for this other small dumpHook i get ambiguous call error
[22:43:43] <FromDiscord> <haxscramper> Alright, so you want to override some of the default hooks for already existing concrete types?
[22:43:55] <FromDiscord> <tandy> yes, for option[T]
[22:44:04] <FromDiscord> <tandy> this
[22:44:32] <FromDiscord> <haxscramper> You can try `import X except` with some of the jsony internals
[22:44:33] <FromDiscord> <tandy> btw this worked when i was using a hacky include
[22:44:36] <FromDiscord> <tandy> but i opted to remove that
[22:45:11] <FromDiscord> <haxscramper> can you send whole code then? I think it should be doable
[22:45:26] <FromDiscord> <Rika> how do you except an overloaded proc?
[22:45:35] <FromDiscord> <tandy> can i write `import jsony except dumpHook[T](s: var string, v: Option[T])`
[22:46:10] <FromDiscord> <haxscramper> no, I forgot that it is not possible
[22:46:14] <FromDiscord> <tandy> 1sec leme push
[22:49:22] <FromDiscord> <tandy> `nim c -r tests/lbTest`↵https://github.com/Listen2gether/website/blob/master/tests/lbTest.nim
[22:49:54] <FromDiscord> <tandy> apologies for the state of it, i just tried to fix this `include utils` problem today
[22:50:00] <FromDiscord> <tandy> in the middle of some other stuff
[22:51:12] <FromDiscord> <haxscramper> I want to murder someone
[22:51:12] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yZr
[22:52:17] <FromDiscord> <tandy> \:x
[22:55:46] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yZt
[22:55:57] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3yZu
[22:56:40] <FromDiscord> <haxscramper> Importing from another module works as well
[23:01:36] <FromDiscord> <jakkn> sent a code paste, see https://play.nim-lang.org/#ix=3yZv
[23:01:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:03:12] <FromDiscord> <jakkn> In reply to @Varriount "Some guesses (I have": Thanks, in the end it turns out compiling with `--noMain` is what caused the process to crash. Afaiu this prevents nim's GC from starting, and with no GC you get no strings.
[23:06:25] *** Quits: max22- (~maxime@2a01cb0883359800e3a3878268dcbc1e.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[23:07:56] <FromDiscord> <tandy> but the test doesnt compile ..
[23:27:10] <FromDiscord> <Goel> Is `.cfloat` a thing? To convert a number to its cfloat corrispetive just like `.cint`?
[23:28:42] <FromDiscord> <Rika> In C float is always 32 bits is it not
[23:28:50] <FromDiscord> <Rika> So you just need to always use float32
[23:29:02] <FromDiscord> <Rika> If you so desire you can make a type alias
[23:29:30] <FromDiscord> <@bracketmaster-5a708063d73408ce4> in nim, there was a way to make a type that can be either type a or type b
[23:29:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I forget just how to do this
[23:30:40] <FromDiscord> <Goel> But .cfloat is implemented or not? I ask this because i have a weird behaviour on a Vector2 and i don't understand what is going on
[23:31:09] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how might I make type a or type b?
[23:32:38] <FromDiscord> <tandy> i dont understand how you got it to work
[23:32:48] <FromDiscord> <Goel> `Vector2` from binding is an object that have two fields, `x` and `y` both being cfloat. If i create `var name: Vector2 = (2.0, 2.0)` it works, even though they are both float (of nim and not cfloat). If i try `var name: Vector2 = (2.cfloat, 2.cfloat)` its not recognized
[23:32:59] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3yZJ
[23:34:09] *** Joins: max22- (~maxime@2a01cb08833598007ebd7c63f02c86ef.ipv6.abo.wanadoo.fr)
[23:35:14] <FromDiscord> <haxscramper> https://wandbox.org/permlink/NsnsT590ufn4neXM
[23:35:35] <FromDiscord> <haxscramper> well, I only fixed part that used jsony
[23:35:43] <FromDiscord> <haxscramper> Because don't want to fight "lockfile" for now
[23:40:51] *** Quits: pjzz (~pjz@place.org) (Quit: WeeChat 2.3)
[23:55:31] <FromDiscord> <tandy> i dont see any changes except the way you import, could that be the solution?
[23:56:32] <FromDiscord> <haxscramper> I can't say for sure
[23:56:44] <FromDiscord> <haxscramper> The change wasn't intentional at least
