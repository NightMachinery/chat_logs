[00:04:50] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[00:07:14] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:10:23] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 252 seconds)
[00:16:08] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:20:06] *** Quits: ville (~ville@user/ville) (Quit: ville)
[00:25:07] *** Joins: ville (~ville@user/ville)
[00:26:35] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:28:06] *** Joins: seninha (~seninha@user/seninha)
[00:29:37] *** Joins: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42)
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:39:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:41:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:47:35] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:42] *** comrad_ is now known as comrad
[00:59:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[01:02:05] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) ()
[01:07:38] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[01:09:34] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[01:09:46] *** Joins: malloy (~jimery@113.116.52.211)
[01:12:37] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[01:13:58] *** vinleod is now known as vdamewood
[01:19:22] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:22:08] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[01:30:32] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:37:16] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[01:38:49] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 256 seconds)
[01:40:19] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[01:40:41] *** Joins: immibis (~hexchat@62.156.144.218)
[01:40:53] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:00] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:00] *** ChanServ sets mode: +v npaperbot
[01:48:03] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[01:53:41] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[01:57:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[01:58:05] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:00:26] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[02:05:08] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:07:48] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:09:05] *** Quits: magla (~gelignite@55d48ba2.access.ecotel.net) (Quit: Stay safe!)
[02:10:26] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:16:42] *** Joins: chozorho (~chozorho@2601:146:300:c30::3d48)
[02:21:47] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:22:27] *** Joins: autark_ (~autark@ti0048a400-0869.bb.online.no)
[02:23:59] *** Quits: autark (~autark@ti0048a400-0869.bb.online.no) (Read error: Connection reset by peer)
[02:24:11] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[02:24:23] *** Joins: RabidToaster1 (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[02:24:36] *** Joins: Cyp (~cyp@213.237.85.9)
[02:26:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[02:26:02] *** RabidToaster1 is now known as RabidToaster
[02:29:49] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 240 seconds)
[02:36:07] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[02:38:29] <xkoncek> what is the point in std::queue / stack wrappers since they are templated and to not do any type erasure?
[02:38:55] <xkoncek> just to limit the uses of the underlying container and make future change easier?
[02:39:09] <kalven> limit and document, I'd say
[02:41:57] <xkoncek> anyway, i have written a "vector_queue" which reuses a single ring vector storage
[02:42:11] <xkoncek> surprisingly lare amount of ifs
[02:42:15] <xkoncek> large
[02:43:41] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:46:10] *** Quits: johnny (~johnny@user/johnny) (Remote host closed the connection)
[02:56:37] <kalven> https://youtu.be/MdrfPSUtMVM
[02:57:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:01:15] *** Quits: andreasbuhr (~quassel@p549dbcc9.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:01:34] *** Quits: jsbach (~jsbach@dynamic-078-055-255-101.78.55.pool.telefonica.de) (Ping timeout: 250 seconds)
[03:08:00] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:12:06] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:32:20] *** Quits: Fairy (~Fairy@2001:464a:4992:0:74d4:7e78:2b3a:4c42) (Ping timeout: 250 seconds)
[03:39:01] *** Quits: letto (~letto@188.25.113.229) (Ping timeout: 240 seconds)
[03:41:35] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:42:40] <Alipha> I've found std::queue and std::stack to be rather useless because 95% of the time I end up needing something outside of their api, so I end up just switching it to a std::deque / std::vector
[03:43:36] <kalven> same
[03:44:17] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[03:44:46] *** Quits: gehn (~gehn@user/gehn) (Ping timeout: 256 seconds)
[03:44:51] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[03:45:48] *** Quits: udet_ (~udet@ve603.venus.servdiscount-customer.com) (Remote host closed the connection)
[03:46:00] *** Joins: udet_ (~udet@ve603.venus.servdiscount-customer.com)
[03:48:32] *** Quits: jkaye_ (~jkaye@2601:281:8300:7530:6a7d:d789:f2c1:154c) (Ping timeout: 240 seconds)
[03:49:00] <InPhase> vector is basically already a stack, except that the stack prohibits peeking below the top layer.  I can't think of a single time that this type of restriction helped me but where I didn't want to already wrap it up with some other behavior.
[03:50:38] *** Joins: letto (~letto@86.120.81.105)
[03:51:11] *** Joins: ferdna (~ferdna@user/ferdna)
[03:51:58] <very_sneaky> my biggest complaint with priority queue is that you can't iterate over it non destructively
[03:54:42] <InPhase> Maybe that wasn't the largest priority.
[03:55:02] <very_sneaky> i see what you did there
[03:55:11] <InPhase> I was very sneaky.
[03:55:27] <very_sneaky> you were in phase with me
[03:57:45] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[03:58:31] <cbreak> very_sneaky: you can iterate over it non-destructively, but not in priority order
[03:59:16] <cbreak> it's a heap, so the priority order is implicit in the structure, and is basically computed on the fly
[03:59:36] <very_sneaky> can you? how?
[03:59:54] <InPhase> Oh.  top() and size() if you know the container type.
[04:00:20] <InPhase> So if you use the default vector container, top() and size() can work.
[04:00:45] <very_sneaky> i think you might need to spell this out for me a bit - doesn't top return const T&?
[04:00:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d15a:88a1:e780:f469) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:01:00] <very_sneaky> not sure how to get the next element from that
[04:01:12] <cbreak> { std::priority_queue<int> pk; pk.push_back(5); pk.push_back(7); std::cout << pk.c; }
[04:01:12] <geordi> error: 'class priority_queue<int>' has no member named 'push_back'
[04:01:25] <cbreak> { std::priority_queue<int> pk; pk.push(5); pk.push(7); std::cout << pk.c; }
[04:01:26] <geordi> error: 'vector<int> priority_queue<int>::c' is protected within this context
[04:01:51] <cbreak> hmm.. might have to derive :/
[04:01:58] <InPhase> { std::priority_queue<int> q;  const auto data = {1,8,5,6,3,4,0,9,7,2};  for(int n : data) q.push(n);  for (size_t i=0; i<q.size(); i++) { cout << *(&q.top()+i) << " "; } }
[04:01:58] <geordi> 9 8 5 7 3 4 0 1 6 2
[04:02:22] <very_sneaky> yeah, i knew _that_ was a solution.. all the advice i've ever seen on the topic was "don't inherit from std data structures" though
[04:03:05] <very_sneaky> ah, okay. so you inject the assumption that the underlying data is contiguous
[04:03:13] <cbreak> it is.
[04:03:20] <InPhase> It's part of the template.  You could make it not so if you wanted.
[04:03:26] <InPhase> I think.
[04:03:26] <cbreak> c is a std::vector, which can be controlled by instantiation
[04:03:47] <very_sneaky> yeah gotcha
[04:04:23] <InPhase> And fortunately, vector is finally well defined as accessible this way now, so it's not even shady.
[04:04:46] <cbreak> { std::priority_queue<int> pk; pk.push(5); pk.push(7); std::cout << *reinterpret_cast<std::vector<int>*>(&pk); }
[04:04:47] <geordi> {7, 5}
[04:04:47] <very_sneaky> interesting. well, i guess that at least gets me an equivalent to a `contains()` method
[04:06:07] <cbreak> if you want inside checking, a heap isn't the best
[04:06:29] <InPhase> I was going to attempt to deduce the storage order, but that 9 8 5 7 3 4 0 1 6 2 doesen't make sense to me.  I expected to see something like a binary tree ordering or something?
[04:06:52] <kalven> it's a heap
[04:07:42] <kalven> the adapter is just a thin wrapper around the container, and std::make_heap, std::push_heap etc
[04:07:44] <InPhase> Ah, right, so not properly sorted.
[04:07:53] <InPhase> But always in order for removal.
[04:08:02] <InPhase> Makes sense.
[04:09:32] <cbreak> yes. As I said, the order is implicit in the structure
[04:17:40] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[04:18:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[04:19:13] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:24:26] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:30:07] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[04:33:26] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[04:36:47] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:39:57] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[04:42:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:51:25] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[04:54:57] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 240 seconds)
[04:57:15] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[04:57:58] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[05:00:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:00:42] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[05:03:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Quit: RabidToaster)
[05:05:30] *** Joins: blackhole__ (~blackhole@2601:600:9f80:2aa0:44b1:42fa:d434:8e22)
[05:05:41] *** Joins: r6ix (~r6ix@2607:fea8:5e0:82a0:42:1918:7b45:f3f3)
[05:06:12] <blackhole__> Hello, does anyone have a suggestion on lightweight easy to use GUI library that is desktop as well as mobile friendly? I currently use imgui which works nice on desktop but barely useful for mobile.
[05:06:30] <blackhole__> I don't want to use something like Qt which is pretty huge + not really free
[05:06:44] *** blackhole__ is now known as blackhole
[05:15:04] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:17:06] *** Joins: malloy (~jimery@113.116.52.211)
[05:17:26] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[05:25:00] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[05:26:44] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 250 seconds)
[05:27:54] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[05:30:20] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[05:32:24] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[05:34:25] *** Joins: malloy (~jimery@113.116.52.211)
[05:36:38] *** Joins: gehn (~gehn@user/gehn)
[05:38:39] *** Quits: blackhole (~blackhole@2601:600:9f80:2aa0:44b1:42fa:d434:8e22) (Remote host closed the connection)
[05:39:04] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:39:05] *** Joins: blackhole (~blackhole@2601:600:9f80:2aa0:44b1:42fa:d434:8e22)
[05:40:53] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:06] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:07] *** ChanServ sets mode: +v npaperbot
[05:44:30] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 250 seconds)
[05:45:41] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[05:46:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:52:53] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[05:53:21] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[06:00:56] <BurumaSerafuku> blackhole: mobile friendly? hue hue hue
[06:01:17] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Ping timeout: 240 seconds)
[06:02:02] *** Joins: notevil (~notevil@user/notevil)
[06:04:01] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[06:04:57] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Read error: Connection reset by peer)
[06:05:31] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[06:05:33] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[06:09:17] *** Joins: johnny (~johnny@user/johnny)
[06:10:58] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[06:13:00] *** Joins: malloy (~jimery@113.116.52.211)
[06:13:19] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[06:18:17] *** Quits: blackhole (~blackhole@2601:600:9f80:2aa0:44b1:42fa:d434:8e22) (Ping timeout: 240 seconds)
[06:19:42] <kalven> https://github.com/MTG/essentia/blob/python_win/src/essentia/roguevector.h
[06:28:48] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:29:10] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[06:30:02] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:31:20] *** Joins: malloy (~jimery@113.116.52.211)
[06:39:42] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:39:42] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[06:41:30] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:44:02] *** Quits: DSpider (~DSpider@82.79.237.16) (Quit: Leaving)
[06:52:25] *** Quits: Tokamak (~Tokamak@172.58.188.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:57:32] *** Joins: NiD27 (~nid27@49.205.145.77)
[07:06:11] *** Quits: NiD27 (~nid27@49.205.145.77) (Quit: Leaving)
[07:06:26] *** Joins: NiD27 (~nid27@49.205.145.77)
[07:12:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[07:18:13] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[07:19:41] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[07:19:46] *** Joins: adeliktas5 (~adeliktas@i59F52CD4.versanet.de)
[07:21:49] *** Quits: adeliktas (~adeliktas@i59F4DFBF.versanet.de) (Ping timeout: 240 seconds)
[07:21:49] *** adeliktas5 is now known as adeliktas
[07:32:46] *** Quits: NiD27 (~nid27@49.205.145.77) (Quit: Leaving)
[07:33:29] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[07:34:34] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[07:42:18] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:43:49] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:54:08] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:57:37] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:17:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:21:36] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:28:22] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:28:43] *** Joins: seninha (~seninha@user/seninha)
[08:28:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:35:49] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[08:51:08] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:53:36] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:22:24] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:25:11] *** Quits: rnsanchez (~rnsanchez@179.233.249.52) (Ping timeout: 256 seconds)
[09:27:58] *** Quits: rb (~augh@theguntretort.com) (Quit: ZNC - https://znc.in)
[09:29:10] *** Joins: rwb (~augh@theguntretort.com)
[09:30:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[09:36:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:38:04] *** Joins: rnsanchez (~rnsanchez@2804:14d:8a81:94a4:8ccf:d40:d4e6:2ebe)
[09:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:40:48] *** Joins: seninha (~seninha@user/seninha)
[09:40:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:02] *** ChanServ sets mode: +v npaperbot
[09:44:31] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:45:17] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[09:47:21] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:47:31] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:49:18] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:49:28] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:50:35] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:50:45] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:51:18] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[09:51:36] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:51:46] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:53:20] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:53:30] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[09:54:15] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[09:56:41] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 252 seconds)
[10:07:17] *** rwb is now known as rb
[10:09:31] *** Joins: rajkosto (~rajkosto@178.220.243.118)
[10:30:21] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[10:31:04] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:33:27] *** Joins: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl)
[10:34:41] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[11:04:02] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:08:28] *** Joins: oknenavin (~nomo@95.87.208.95)
[11:08:58] *** Joins: jsbach (~jsbach@2a01:c23:6442:c300:3b7f:8414:c5c0:53aa)
[11:09:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:351b:e230:7e1b:b4a6) (Ping timeout: 240 seconds)
[11:21:38] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[11:25:58] *** packet_lozenge_ is now known as packet_lozenge
[11:46:51] *** Quits: gnomesort (~gnomesort@user/gnomesort) (Ping timeout: 256 seconds)
[11:58:07] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:00:31] *** Joins: gnomesort (~gnomesort@user/gnomesort)
[12:02:44] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:05:12] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[12:07:49] *** Quits: letto (~letto@86.120.81.105) (Quit: Konversation terminated!)
[12:08:17] *** Quits: elemongw (~elemongw@20.107.36.50) (Ping timeout: 240 seconds)
[12:09:37] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5323)))
[12:09:38] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[12:09:45] *** Joins: letto (~letto@86.120.81.105)
[12:12:48] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:14:16] <ville> sort of funny that we've more graphics APIs than there are competetive graphics cards manufacturers on the desktop. even if you just look at 3d. you've got amd and nvidia. intel is stretching it a bit. and then you've got: directx, metal, opengl and vulkan.
[12:15:32] <kalven> bunch of mobile gpu makers as well
[12:15:40] <kalven> and webgpu
[12:15:50] <johnny> well i was surprised to see samsung went amd for some of the new stuff
[12:15:55] <ville> sure, but "on the desktop" qualifier was there on purpose
[12:16:40] <johnny> well maybe mentioning intel won't be stretching it too much this year and next
[12:16:40] <kalven> but mobile
[12:16:41] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[12:16:55] <johnny> i'm interested to see what they come out with
[12:17:10] <ville> who gives a toss about mobile?
[12:17:12] <johnny> i'm definitely annoyed that metal exists, but luckily i'll never have to deal with it
[12:18:32] <kalven> ville: a lot of gamedevs
[12:20:59] <ville> if your program for mobile doesn't either: make phone calls or send text messages you should stop and examine your life immediately
[12:22:35] <johnny> don't most people in the world use mobile devices over pcs for almost anything now?
[12:22:43] <ville> unfortunately yes
[12:23:06] <kalven> :)
[12:23:07] <ville> some countries it's not even a contest. it's something like 80% mobile or worse
[12:23:22] <johnny> i'm not sure how you didn't include acting as a music player as a viable function
[12:23:33] <ville> i'll allow that
[12:23:34] <johnny> or camera for that matter
[12:23:58] <johnny> the best camera is the camera you have after all
[12:24:35] <johnny> i'm not a big selfie person though or anything, but sometimes you see somethin and.. you wanna get the shot
[12:25:12] *** Joins: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl)
[12:25:46] *** Quits: JohnMS_WORK (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 250 seconds)
[12:26:10] <johnny> i remember somebody did a concept where you took your phone and bsically popped it into a shell of a laptop and it acted as the touch screen and hooked up to the display
[12:26:22] <johnny> err i mean acted as the touchpad
[12:26:41] <johnny> now they got phones out there with 256gb storage
[12:26:44] <ville> i don't take pictures really of any kind. i did the whole SLR, develop your own film and on as kid
[12:29:35] <johnny> so real photographer stuff. that's definitely not me
[12:32:22] *** Joins: robod34 (~Username@79.113.195.239)
[12:33:08] *** Joins: andreasbuhr (~quassel@p548dd6cd.dip0.t-ipconnect.de)
[12:33:59] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[12:34:36] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (Remote host closed the connection)
[12:34:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:35:49] *** Joins: BurumaSerafuku (~sjw@69.206.48.64)
[12:39:12] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[12:44:11] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[12:48:37] *** Quits: DrMax (~DrMax@node-1w7jra94757g035onllb9zbjp.ipv6.telus.net) (Remote host closed the connection)
[12:49:29] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Quit: WeeChat 3.3)
[12:49:39] *** Joins: DrMax (~DrMax@node-1w7jra94757g0bo11wngpfoiw.ipv6.telus.net)
[12:59:20] *** Joins: unyu (~pyon@user/pyon)
[13:00:15] *** Terminus- is now known as Terminus
[13:00:44] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[13:01:06] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[13:01:14] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[13:02:10] <LordKalma> hello hello
[13:02:22] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[13:03:08] <LordKalma> do any of you happen to know any algorithm to search for a minimum in a R3->R function?
[13:03:49] <LordKalma> I have here a equipment that has 3 parameters to set, and results in one measurement, and I want to find the parameters that minimize output
[13:03:55] <LordKalma> the parameters are bounded, at least
[13:04:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[13:08:47] <Haohmaru> what is a "R3->R" function even
[13:09:00] <Haohmaru> the rest of the explanation sounds familiar
[13:10:37] <ville> input: 3-tuple of reals, output: real
[13:11:25] <Haohmaru> no idea about that tuple thing
[13:11:38] <ville> tuple a thing with N elements
[13:11:51] <Haohmaru> real meaning.. a float/double, not a complex?
[13:12:14] <Haohmaru> "real" ^
[13:12:16] <ville> real meaning real numbers, which are often approximated by float or double on computer. yes not complex
[13:12:22] <ville> https://en.wikipedia.org/wiki/Real_numbers
[13:12:38] <Haohmaru> okay, so it sounds very familiar then, minus the tuple
[13:13:25] <cbreak> 3d vector norm is an example
[13:13:37] <fiesh_> LordKalma: the question is ill-stated without giving more information about the function
[13:13:50] <Haohmaru> the best i've done was some non-linear formula involving 5 unknowns, of which some were constants, i wrote a program that brute-forced it
[13:13:56] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:36] <Haohmaru> i had to adjust the program several times while watching the output, and it finally nailed the result
[13:14:40] <LordKalma> i'll probably brute force it as well, although it would be convenient to have something more sophisticated  since the situation might be dynamic
[13:16:30] <ville> if there's no analytic solution in reasonable time then gradient search?
[13:17:27] *** Joins: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th)
[13:17:29] <fiesh_> brute forcing doesn't seem sensible... assuming your interval is [0,1], with doubles you have 2^(62*3) = 2^186 values to check, give or take a few
[13:19:40] <Haohmaru> fiesh_ i used noise, but i knew what the output should be at 4 key points, that's two of the unknowns coefficients
[13:19:49] <LordKalma> no analytical solution, and no, it doesn't require 20 digits of precision. the instrument is only tuneable in steps of 0.01 anyway, range [-15, +15] for each value
[13:20:12] <ville> LordKalma: brute force it then
[13:20:20] <Haohmaru> brute force \o/
[13:20:21] <LordKalma> ah well
[13:20:24] <ville> LordKalma: or how long does taking a sample take?
[13:20:31] * Haohmaru gives LordKalma 12 RedBulls
[13:20:33] <LordKalma> couple seconds
[13:20:54] *** Joins: JohnMS_WORK (~kvirc@user-5-173-136-94.play-internet.pl)
[13:21:16] <LordKalma> lets write a program them
[13:21:19] <LordKalma> then
[13:23:34] <ville> well that would be problematic still. you've got (100*30)^3 * 2 ~= 54 billion seconds?
[13:23:55] *** Quits: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[13:24:21] <Juliu> LordKalma, what about Newton's method?
[13:24:21] *** Quits: JohnMS_WORK (~kvirc@user-5-173-136-94.play-internet.pl) (Read error: Connection reset by peer)
[13:24:43] <fiesh_> nothing except brute force makes any sense if you know nothing about the function
[13:24:47] <LordKalma> ville, I'm not doing the finest step on a first pass haha
[13:24:51] <Juliu> LordKalma, if the function is known in closed form, you could try to simply derive it
[13:24:59] <ville> LordKalma:  so some sort of gradient descent search then possibly
[13:25:41] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[13:25:47] <fiesh_> these algorithms make about as much sense as applying std::set_intersection to unsorted ranges
[13:26:15] <LordKalma> Juliu, nah, it's to optimize some parameters on an instrument, not an analytical situation
[13:26:31] <Juliu> LordKalma, is the function discrete?
[13:26:48] <LordKalma> due to virtues of serial ports, yes :D
[13:27:14] <Juliu> Then you only need O(m*n*o) time
[13:27:55] <LordKalma> [-15, +15] on the 0.01 step is 3000 steps. 3000^3 times like 5 to 10 seconds
[13:27:57] <Juliu> Do you want a local or a global minimum?
[13:28:35] <Juliu> Is 5-10 seconds good or bad?
[13:29:05] <LordKalma> 3000^3 x 5 / 3600 = 37500000 hours hahah
[13:29:30] <Haohmaru> sounds like a coffee break
[13:29:46] <Juliu> Do you want a local or a global minimum?
[13:30:09] <LordKalma> the global yeah,
[13:30:32] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:30:36] <Juliu> There could be more than one global minimum, but ok
[13:30:44] <Juliu> What do you know about the function?
[13:32:00] <LordKalma> there is only one :) that much I know, because there's only one set of parameters that will give the right behaviour
[13:32:25] <Juliu> Is the function continuous?
[13:32:59] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:33:42] <LordKalma> you're thinking too abstract. Basically I have here an instrument that takes in 3 parameters to work correctly, and I'm not feeling like guessing them
[13:34:23] <Juliu> And what are the values the function returns?
[13:34:49] <Haohmaru> mv LordKalma LordCryptic
[13:36:20] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[13:38:04] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:01] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:01] *** ChanServ sets mode: +v npaperbot
[13:51:45] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[14:01:45] <very_sneaky> LordKalma: does you have to get the absolute global minimum or is close enough good enough
[14:10:17] <very_sneaky> if that's the case, maybe it's worth looking at heuristic methods like genetic algorithms
[14:13:21] *** Quits: chozorho (~chozorho@2601:146:300:c30::3d48) (Quit: WeeChat 3.0)
[14:14:30] *** Quits: andreasbuhr (~quassel@p548dd6cd.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:19:36] *** Quits: rajkosto (~rajkosto@178.220.243.118) (Read error: Connection reset by peer)
[14:22:22] <PJBoy> genetic algorithms, the last resort
[14:22:37] *** Quits: proller (~p@2a02:6b8:b081:7216::1:2e) (Ping timeout: 268 seconds)
[14:22:38] <PJBoy> one of the first if you wanna be hip and trendy though
[14:24:07] <PJBoy> I like the idea of using a genetic algorithm for this one though
[14:25:14] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:25:25] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:63ed)
[14:30:57] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[14:31:02] <very_sneaky> is it hip and trendy? i feel like it was hip and trendy 5 years or so ago
[14:38:24] <PJBoy> to be fair, I haven't seen much ML circlejerking recently
[14:38:54] <PJBoy> I've seen lots of blockchain jerking
[14:39:03] *** Joins: arch-angel (~arch-ange@2001:e68:5400:6acf:f45f:86ca:755e:9f81)
[14:39:13] <PJBoy> and some rust jerking
[14:39:26] <PJBoy> you might be right
[14:45:02] *** fiesh_ is now known as fiesh
[14:53:11] <very_sneaky> i've come to the realisation that i don't know enough about software architecture to finish my current project :\
[14:53:27] <very_sneaky> time to start going through Go4 i think
[14:54:30] <PJBoy> what's Go4?
[14:54:37] <very_sneaky> gang of 4
[14:54:46] <PJBoy> hot
[14:55:11] <PJBoy> > Gang of Four was a Maoist political faction composed of four Communist Party of China (CPC) officials
[14:55:13] <PJBoy> <_<
[14:55:17] <very_sneaky> lmao
[14:55:46] <very_sneaky> https://www.amazon.com/dp/0201633612
[14:56:02] <PJBoy> this one? https://en.wikipedia.org/wiki/Design_Patterns
[14:56:10] <very_sneaky> yeah that's the one
[14:56:11] <PJBoy> yeah cool
[14:57:00] <PJBoy> not to be confused with the four russians
[14:57:34] <very_sneaky> yeah it was a much more ambiguous term than i realised lol
[14:58:18] <PJBoy> I was going to follow up with "where none of the four are russians", but wikipedia seems to claim differently than my algorithms prof :/
[15:03:04] <very_sneaky> four russians?
[15:03:11] <very_sneaky> https://en.wikipedia.org/wiki/Method_of_Four_Russians?
[15:03:15] <PJBoy> yeah
[15:03:44] <PJBoy> apparently that method gets used a lot in algorithms
[15:04:46] <very_sneaky> heh, hadn't heard of it before
[15:09:06] *** Joins: magla (~gelignite@55d43516.access.ecotel.net)
[15:16:40] <PJBoy> this other source does claim that not all of them are russian
[15:16:41] * PJBoy shrugs
[15:22:50] <very_sneaky> honorary russians
[15:27:42] *** Quits: hfsoulz (~hfsoulz@user/hfsoulz) (Quit: leaving)
[15:30:15] *** Joins: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl)
[15:30:17] *** Joins: proller (~p@2a02:6b8:0:40c:d1b6:4cbb:f985:91ad)
[15:30:29] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Read error: Connection reset by peer)
[15:31:57] <very_sneaky> ahh, i should have gone through this earlier. looks like a bunch of these patterns will be quite useful
[15:32:55] <very_sneaky> especially chain of responsibility and command, in the context of a messaging system - "encapsulate a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations"
[15:36:10] <johnny> very_sneaky, are you familiar with CQRS?
[15:36:22] <very_sneaky> nope, what is it?
[15:36:33] <johnny> well maybe i's not that useful for a messaging system.. so ignore that i guess
[15:36:52] *** Quits: p-i- (~Ohmu@mx-ll-183.89.31-199.dynamic.3bb.co.th) (Ping timeout: 250 seconds)
[15:36:53] <very_sneaky> still interested, the messaging system is only one component of my project
[15:37:22] <johnny> https://www.martinfowler.com/bliki/CQRS.html Command Query Responsibility Segregation
[15:37:55] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[15:38:22] <johnny> you said Commmand so it made me think about it, since that's part of the name :)
[15:38:52] <johnny> mainly tho "The rationale is that for many problems, particularly in more complicated domains, having the same conceptual model for commands and queries leads to a more complex model that does neither well."
[15:39:25] <johnny> lots of folks have models that let you query AND modify. that's not the case here
[15:40:19] <very_sneaky> yeah gotcha
[15:40:19] <johnny> i read a lot of folks talking about event sourcing for a time. interesting stuff to keep in the back of your mind, even if you don't ever need it
[15:41:06] <johnny> basically never update in place. everything is an event.  change the price of a product -> event , delete customer -> event
[15:41:08] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[15:41:18] <johnny> and you can just reply the log to get to a specific state
[15:41:23] <johnny> replay*
[15:41:48] <very_sneaky> yeah, i need to do a lot more reading
[15:41:52] <johnny> that kinda thing is of course not something you often see in compiled languages, because you're not really doing that sort of thing if you want max performance
[15:42:05] <very_sneaky> ostensibly my system is event driven
[15:42:13] <johnny> yeah i imagine
[15:42:34] <johnny> most i ever did event driven really was a pubsub system that used http post and server sent events
[15:42:43] <very_sneaky> new price info should trigger a bunch of things to happen, so at some level of granularity it suits well
[15:42:43] <johnny> rather than using websockets or something like that
[15:43:01] <very_sneaky> even with websockets, you can trigger an event when you receive new info
[15:43:10] <very_sneaky> that's kinda the model i've been chasing
[15:43:11] <johnny> i'm just sayin that websockets are often overkill
[15:43:21] <johnny> depends on how oftne you're pubing vs subscribing though
[15:43:41] <very_sneaky> yeah for sure. I've only really touched websockets in the context of web chat applications
[15:43:45] <johnny> if you're subscribing waaay more often than publishing and you're already using http, then what i suggested is waaay simpler
[15:44:22] <very_sneaky> i'm not even looking at the external interface atm though - trying to sort out how the application communicates with itself
[15:44:22] <johnny> but perhaps even so, it'd be fine for chat. i enver really tried. i used it for in game events
[15:44:42] <johnny> well most people never think about server sent events, so that was really just an excuse to mention it :)
[15:45:09] <very_sneaky> yep cheers, i should add martin fowler's articles to the list of things to read
[15:45:30] <johnny> it is definitely worth browsing through just to get the lay of the land
[15:45:41] <johnny> but don't let it stop you from actually BUILDING something
[15:45:55] <very_sneaky> nah, that's where i'm getting stuck at the moment
[15:46:09] *** Joins: geli (~gelignite@55d43fe5.access.ecotel.net)
[15:46:11] <very_sneaky> i don't have the mental tools to be able to design my way out of the problems i'm running into atm
[15:46:34] <johnny> so you're lookin for something that says "ah, now i have an idea on how to do this"
[15:46:35] <very_sneaky> so i'm going back over these design patterns and implementing them in isolation in the hope that it gives me some more context to work from
[15:46:45] <very_sneaky> yeah
[15:47:16] <johnny> have you written an outline and shared it with anybody yet?
[15:47:36] <very_sneaky> I've had adhoc conversations
[15:47:42] <very_sneaky> nothing that's easily shareable atm
[15:47:50] <johnny> i'd suggest you do that first before reading anymore
[15:48:11] <johnny> i guess depends on if you're in any sort of rush though i suppose
[15:48:28] <johnny> if you're not in a rush, the just do whatever you feel is right
[15:48:34] *** Quits: magla (~gelignite@55d43516.access.ecotel.net) (Ping timeout: 250 seconds)
[15:48:35] <johnny> it'll be a good learning experience either way
[15:48:46] *** Joins: jellyknight (~gelignite@55d4319d.access.ecotel.net)
[15:48:49] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[15:49:35] <very_sneaky> this project is mostly just an educational experience
[15:49:57] <johnny> the command query segregation is definitely useful if you'd previously worked with web applications before.. although that's probably not you
[15:50:02] <very_sneaky> i tried to UML it from the beginning, but the level of detail was getting too difficult to manage conceptually without writing any code
[15:50:22] <johnny> you shouldn't UML until you have broad requirements written down anyways
[15:50:56] <very_sneaky> i have broad requirements, but not enough experience implementing some of the things i need to
[15:51:09] <very_sneaky> so designing them is hard
[15:51:39] <very_sneaky> from a basic level, i had no appreciation of the idiosyncrasies of the OO features of C++
[15:51:39] *** Quits: geli (~gelignite@55d43fe5.access.ecotel.net) (Ping timeout: 256 seconds)
[15:51:54] *** Joins: magla (~gelignite@55d4b5f5.access.ecotel.net)
[15:51:54] <johnny> it was rpetty common for folks to build a database table and then have say Users and then  the Users model/object would have methods like findById() or updateById() or whatever, alongside getters and setters for passwords and whatnot
[15:51:57] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:52:14] <johnny> would it have been particularly eaiser in say python?
[15:52:30] <johnny> i don't think it would have
[15:52:34] <very_sneaky> i've done a lot of OO, in python and java mostly, and the details are substantially different - i was glossing over that and trying to do things that i couldn't do. It's been good educationally, but yeah I'm at the point where I need to understand the landscape of design patterns to better circumvent some of the limitations I've discovered
[15:52:50] <johnny> like what? in the ways of inheritance? or what?
[15:53:01] <very_sneaky> yep, inheritence is the big one
[15:53:28] <very_sneaky> the big design problem i'm running into is how do i define a message agnostically
[15:53:29] <johnny> to me, it was the lack of say building an object's name at runtime
[15:53:37] <very_sneaky> when the different types of messages carry very different types of data
[15:53:58] <johnny> an object by name at runtime.. that's the only OO problem i had..  most of the rest is just annoying ceremony
[15:54:04] <johnny> but no big deal really
[15:54:05] *** Quits: jellyknight (~gelignite@55d4319d.access.ecotel.net) (Ping timeout: 256 seconds)
[15:54:38] <very_sneaky> what i have atm is pretty rigid - perhaps workable, but rigid, and i can't help but feel there's a better way. I wouldn't have these issues in python because data structures can be heterogenous and passed around polymorphically quite easily
[15:55:18] <johnny> sure, but you still have have had  uhmm  (if i can remember my python)  class FooMessage: Message right ?
[15:55:27] <johnny> rahter than just building some object on the fly
[15:55:38] <very_sneaky> sure
[15:55:57] <very_sneaky> could definitely do that. Not required though, you could just pass around dicts
[15:56:11] <johnny> i would recommend against that at all costs if you do know what your messages are
[15:56:12] <very_sneaky> which works out to be really nice because it serializes to and from json losslessly
[15:56:27] <johnny> except.. do you always want to serialize all info in the object? every time?
[15:56:37] <very_sneaky> depends on the transport medium
[15:57:18] <very_sneaky> one of the things i'm trying to resolve is how do i scale horizontally and vertically - that means that I have some kind of abstraction that means messages could be passed in shared memory and so no serialization required, but may need to be serialized and sent over tcp or udp
[15:57:23] <johnny> but even so.. not all messages go to the same audience either.. like say i had an api that could access user objects. i'd certainly not want to send the email address to every requestor
[15:57:34] <johnny> only those authenticated with the appropriate permissions should get it
[15:57:49] <johnny> so.. i'd always be specifying my objects.. every time if i did know them
[15:57:58] <johnny> that way i can annotate what to serialize
[15:58:22] <johnny> that's one of the main reasons for Command Query Segregation btw
[15:58:29] <johnny> it means YOU WILL be typing up those objects
[15:58:34] <very_sneaky> so atm, i pass around a Message pointer, and the actual object is some derived class of Message
[15:59:01] <very_sneaky> currently, i have to know exactly what i'm receiving, do a dynamic cast to the type i expect, and then query the data member with the message contents
[15:59:02] <johnny> alternatively though you could have gone with say a map with std::variant
[15:59:13] <johnny> that'd be closer to what you were doing with python
[15:59:35] <johnny> plus it's easily serializable as well
[16:00:07] <johnny> not that you'd necessarily wanna stay that way.. but if you're still working out the data model, it's worth it to prototype it that way
[16:00:08] <very_sneaky> hmm, maybe. i do remember looking at variant and thinking that it wasn't a great fit, but this was a while ago and i don't really remember it tbh
[16:00:18] <johnny> i meant std::variant IN the map
[16:00:36] <johnny> or maybe you really want std::any
[16:01:21] <very_sneaky> ah, i don't think so - it seemed like the contents of std::any became pretty useless after putting it in there
[16:01:23] <johnny> but it does maybe make me think you should just prototype it in python because nothing about how the overall structure worth is gonna be releavnt to the language
[16:01:36] <johnny> s/worth/works/
[16:01:46] <very_sneaky> i have a broad structure
[16:01:58] <very_sneaky> i'm struggling to deal with the static typing nature of c++
[16:02:12] <very_sneaky> which is just my lack of knwoledge
[16:02:19] <very_sneaky> part of why i'm going back to design patterns
[16:02:19] <johnny> ah ok.
[16:02:50] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:03:05] <johnny> because then it's just: IF ONLY I COULD DO X it'd be perfect
[16:03:13] <very_sneaky> but that's fine, this is the kind of thing i set out to learn about :)
[16:03:22] <johnny> well keep up the good work then
[16:03:39] <johnny> i'm sure you'll get there
[16:03:50] <very_sneaky> yeah, eventually. just takes time
[16:03:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:04:16] <johnny> very_sneaky, you ever read the stuff on cppstories? like say https://www.cppstories.com/2020/04/variant-virtual-polymorphism.html/ ?
[16:04:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:04:43] <johnny> ah.. i'd say the pattern i recently used was the strategy pattern, but i didn't know the name until after the fact
[16:05:21] <very_sneaky> yep, i've been through both variant and visitor patterns
[16:05:35] <very_sneaky> i ended up going with CRTP for my subscriber model
[16:05:49] <johnny> double dispatch as well..
[16:05:57] <very_sneaky> i acutally watched a back to basics talk in cppcon 2021 that was surprisingly useful
[16:06:07] <very_sneaky> https://www.youtube.com/watch?v=Ou5WsJzn7Ws
[16:06:17] <ville> it really makes little difference whether you go with std::variant or message class hierarchy
[16:06:17] <very_sneaky> Rainer Grimm - back to basics Object Oriented Programming
[16:06:46] <ville> as long as you don't stick a virtual member in the message base to "execute" the message that is
[16:06:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:07:05] <johnny> ville, i just find it much easier to work with the class hierarchy mostly
[16:07:18] <ville> both of course suck
[16:07:18] <johnny> plus i prefer the explicitness
[16:07:28] <very_sneaky> question, if you do go for the message class hierarchy, how do you get the data out?
[16:07:48] <johnny> i've only done what i could figure out in C++ of course :)
[16:07:57] <ville> very_sneaky: cast. whether you do dynamic_cast or based on some type filed is upto you
[16:07:59] <johnny> the fancy stuff will come later when i hae to do C++ more
[16:08:03] <very_sneaky> is there a better way than `dynamic_pointer_cast<T>(U)`?
[16:08:21] <very_sneaky> yeah, okay
[16:08:23] <ville> very_sneaky: there's that word: "better" again...
[16:08:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:08:32] <very_sneaky> :P
[16:08:34] <johnny> well isn't it more of a tradeoff?
[16:08:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:09:16] <johnny> man 20 minutes sure passed quick
[16:09:26] <ville> it's all meaningless. i doubt your project's success depends on whether you choose dynamic_cast or type field
[16:09:44] <johnny> ville, it's an educational project , so the real success is what is learned on how to work with C++
[16:12:26] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:13:25] *** Quits: msim__ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 240 seconds)
[16:14:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:15:33] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:16:21] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[16:16:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:20:09] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[16:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:22:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[16:26:24] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[16:27:37] *** Joins: plastico (~plastico@neomutt/plastico)
[16:27:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:28:13] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[16:28:28] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[16:34:53] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[16:35:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:41:56] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:45:49] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:47:03] <ville> sure you want to try "everything" at least once
[16:47:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:49:57] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[16:50:19] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:52:57] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:55:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[16:56:00] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Remote host closed the connection)
[16:56:57] *** Joins: Burgundy (~yomon@82.76.72.88)
[17:01:29] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:07:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:07:34] *** Quits: ville (~ville@user/ville) (Quit: ville)
[17:09:32] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:09:51] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:10:23] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:10:29] <Haohmaru> #include <yolo.h>
[17:11:17] *** Joins: ville (~ville@user/ville)
[17:15:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:16:36] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:19:05] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[17:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:22:13] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[17:26:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:28:31] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:36:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[17:38:47] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[17:40:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:03] *** ChanServ sets mode: +v npaperbot
[17:43:03] *** Joins: jkaye_ (~jkaye@2601:281:8300:7530:8293:8dc5:8087:f321)
[17:51:25] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:55:38] *** Joins: AmR (~AmREiSa@41.36.185.103)
[17:59:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[18:01:08] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:02:53] *** Joins: pulse (~pulse@user/pulse)
[18:03:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:03:51] *** Quits: arch-angel (~arch-ange@2001:e68:5400:6acf:f45f:86ca:755e:9f81) (Quit: Leaving)
[18:05:04] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[18:05:51] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:06:21] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:11:39] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:13:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:13:44] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[18:16:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:16:21] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[18:21:09] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:22:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:25:24] *** Joins: xkuru (~xkuru@user/xkuru)
[18:28:03] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:48f0:35d7:2b08:b57)
[18:28:05] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[18:28:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:30:44] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[18:31:04] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[18:35:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:38:25] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:42:00] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:43:31] *** Quits: JohnMS_AWAY (~kvirc@89-64-83-123.dynamic.chello.pl) (Ping timeout: 256 seconds)
[18:44:50] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:44:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:46:11] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[18:51:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[18:51:18] *** Joins: NiD27 (~nid27@49.205.146.160)
[18:53:54] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:55:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[18:56:39] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:59:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:08:46] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:14:10] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[19:15:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:21:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[19:26:44] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:30:27] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[19:33:28] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 250 seconds)
[19:35:28] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:35:48] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8)
[19:43:35] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[19:54:23] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:01:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:08:27] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:09:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:309b:ace7:66d4:96f8) (Ping timeout: 240 seconds)
[20:14:26] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[20:14:37] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[20:18:33] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Quit: Hello72)
[20:19:28] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:21:40] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:23:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:24:52] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[20:28:00] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:29:07] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[20:35:11] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[20:51:44] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 252 seconds)
[20:52:04] *** Joins: Tokamak (~Tokamak@172.58.188.35)
[20:52:13] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:56:14] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[20:56:33] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:57:58] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[20:57:58] *** Quits: autark_ (~autark@ti0048a400-0869.bb.online.no) (Read error: Connection reset by peer)
[21:03:52] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[21:14:13] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[21:15:17] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[21:20:24] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[21:24:30] *** Joins: immibis_ (~hexchat@62.156.144.218)
[21:24:34] *** Quits: immibis (~hexchat@62.156.144.218) (Read error: Connection reset by peer)
[21:25:11] *** Quits: NiD27 (~nid27@49.205.146.160) (Quit: Leaving)
[21:30:54] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[21:33:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a)
[21:33:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:f51e:b0c2:b34a:2f5a) (Changing host)
[21:33:25] *** Joins: skapata (~Skapata@user/skapata)
[21:33:31] *** Quits: oknenavin (~nomo@95.87.208.95) (Ping timeout: 256 seconds)
[21:33:43] *** Joins: immibis (~hexchat@62.156.144.218)
[21:33:52] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[21:36:11] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[21:40:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:03] *** ChanServ sets mode: +v npaperbot
[21:47:33] *** Joins: jokoon (~eio@2a01:e0a:542:e160:3593:d827:e797:b7d9)
[21:55:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[21:56:05] *** Quits: proller (~p@2a02:6b8:0:40c:d1b6:4cbb:f985:91ad) (Ping timeout: 252 seconds)
[21:56:43] <ashafq> Hi, is there sinPi/cosPi variation of math functions in the math library?
[21:58:09] <PJBoy> there's sin and cos, not sure what to make of the pi
[21:58:47] <PJBoy> they take the angle in radians, are you wanting degrees?
[21:58:58] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:00:04] <ville> sin(x) * pi?
[22:00:55] <ville> err sin(x * pi)
[22:02:17] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:48f0:35d7:2b08:b57) (Ping timeout: 240 seconds)
[22:02:17] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[22:02:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd90:3cd1:7391:6edb)
[22:10:12] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:10:56] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[22:12:08] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:16:46] <PJBoy> "There is a more type-safe binding of this API that can be used from C++"
[22:17:12] <PJBoy> > the C++ API uses a void* where the C API uses Sci_TextToFind*
[22:17:20] * PJBoy slow claps
[22:18:08] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[22:19:47] <LordKalma> wtf why?
[22:19:57] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:20:19] <LordKalma> also, to bring here a discussion that was hot in the slack
[22:20:25] <LordKalma> the stdlib: is it too big or too small:
[22:20:27] <LordKalma> *?
[22:20:32] <PJBoy> because this API was made once and then never updated
[22:20:44] <PJBoy> and no one uses it >_>
[22:20:55] <LordKalma> that's why I rarely use the C++ bindings of C libraries. You can never trust them
[22:20:59] <PJBoy> also the name of the function is FindText
[22:21:09] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Ping timeout: 268 seconds)
[22:21:10] <PJBoy> which windows.h has as a macro
[22:21:15] <PJBoy> profound sadness
[22:21:32] <ville> LordKalma: these days i think they could drop "half" of it. doesn't matter to me really what its size is. don't really use it aside from the actually useful and possibly mandatory bits
[22:21:49] <PJBoy> they could certainly drop the special maths functions
[22:22:16] <PJBoy> I wouldn't miss regex if it disappeared
[22:22:39] <PJBoy> this page presents a pretty reasonable overview of stdlib's size https://en.cppreference.com/w/User:Ybab321
[22:22:51] <kalven> people who can import 3rd party libs easily: "standard library size? idk.. idc"
[22:23:13] <PJBoy> I'd be inlined to say it's too small still
[22:23:48] <kalven> popular compilers are still missing bits from c++17
[22:24:04] <PJBoy> only because they're really lazy
[22:24:32] <PJBoy> they're too excited by the new C++20 and C++23 features
[22:25:17] <PJBoy> that said the only missing link for C++17 is clang by the looks of it
[22:25:58] <PJBoy> still missing floating point support for from_chars...
[22:26:39] <PJBoy> gcc have apparently implemented hardware_destructive_interference_size?
[22:26:47] <PJBoy> << hardware_destructive_interference_size
[22:26:48] <geordi> 64
[22:26:50] <PJBoy> wow
[22:27:44] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[22:28:35] <PJBoy> but yeah seriously, I dunno what's taking them so long to finish the sublibraries
[22:28:42] <PJBoy> you'd think fmtlib would be a straight forward merge
[22:29:50] <PJBoy> I can understand clang not having implemented ranges yet, they're pretty insane
[22:29:58] <kalven> looks like trunk libc++ has floating point to_chars
[22:31:20] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[22:31:34] <PJBoy> from_chars is the problem one
[22:32:38] <kalven> 13.0 didn't have to_chars
[22:34:10] <sprout_> I just want modules
[22:34:42] <sprout_> 'just'
[22:35:42] <PJBoy> I'm using modules ;)
[22:35:55] <sprout_> mscv?
[22:35:59] <PJBoy> yeah
[22:36:05] <sprout_> uh.  msvc
[22:36:21] <PJBoy> it's a good life
[22:36:32] <sprout_> I am either switching my codebase to msvc or gcc.  whatever gives me modules first
[22:36:43] <kalven> I'm using modules in clang.. 'import std;' :)
[22:36:50] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:37:10] <PJBoy> it is nice to not have to worry about stdlib headers
[22:37:18] <PJBoy> except for when you need stdlib macros >_>
[22:38:13] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:42:01] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 245 seconds)
[22:42:33] <sprout_> another means to organize code is going to be major,  to some extent it's even going to impact how OSes are written
[22:43:33] <kalven> which button do I press for "doubt"
[22:43:46] *** Joins: blackhole (~blackhole@2601:600:9f80:2aa0:cf7:e488:baea:da58)
[22:43:59] <rpav> hum, is there a nice expression-"switch" hack and/or what obvious thing am i forgetting
[22:44:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:44:32] <rpav> (a struct-definition-at-point is not particularly nice)
[22:45:06] <rpav> oh wait, i think i implemented a static switch/map-value at some point
[22:46:47] *** Quits: Leo_V (~Leo@157.52.18.77) (Read error: Connection reset by peer)
[22:49:45] <blackhole>  Hello, does anyone have a suggestion on lightweight easy to use GUI library that is desktop as well as mobile friendly? I currently use imgui which works nice on desktop but barely useful for mobile. I don't want to use something like Qt which is pretty huge + not really free
[22:50:01] <rpav> blackhole: not in C++
[22:50:07] <blackhole> hmm, sad..
[22:50:07] <LordKalma> yes, any JS one
[22:50:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[22:50:23] <blackhole> yeh js & c++ interop is pain to manage
[22:50:43] <LordKalma> don't make applications in C++ unless you have to haha
[22:50:43] <rpav> someday i will get qlu released and be like "well, i have this quick little ui.."
[22:51:00] <blackhole> whats qlu?
[22:51:14] <ville> quick little ui
[22:51:16] <rpav> something i havent' released ;/ but sortof fits the bill, i was building it for a simple loadable game UI
[22:51:37] <LordKalma> but is it going to destroy qt?
[22:51:43] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:51:44] <blackhole> ok, one more question, anyone knows any good scenegraph library that can be used as datastructures commonly required in rendering engines (not game engine)
[22:51:57] <blackhole> rpav, may be you can answer above ?
[22:51:57] <LordKalma> Qt Quick
[22:53:31] <rpav> blackhole: there is no such ui library; qt/qt quick might serve your needs if you need a fairly enterprisey app on desktop an dmobile
[22:53:55] <blackhole> rpav, yeh not really I guess I will stick with imgui
[22:54:05] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[22:54:09] <rpav> scenegraph is also probably not the preferable way to manage such
[22:55:00] <blackhole> rpav, ok whats your suggestion? I probably used the wrong word but I meant library that provides ds for primitives, materials, images, textures etc
[22:55:16] <blackhole> rpav, also what is alternative to scenegraph?
[22:56:39] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[22:56:41] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[22:56:41] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[22:56:58] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:57:57] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Ping timeout: 256 seconds)
[22:58:52] <rpav> rendering the things you need to _not_ using a scenegraph, but more command-list-y style
[22:59:53] <rpav> (you can still do relative transformations, e.g. "place camera on thing Y", when your transforms are also chained commands)
[23:00:06] <blackhole> hmm, yeh makes sense
[23:00:13] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:00:34] <blackhole> my plan was to have scenegraph for users to specify data & then traverse it to create command list etc
[23:00:47] <blackhole> would you not suggest that?
[23:01:02] <rpav> you basically don't need a scenegraph with commands, and they're inefficient
[23:01:02] <blackhole> also any thoughts on libs for common ds?
[23:01:22] *** Joins: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:01:29] <rpav> _that said_, you can _presentationally_ have a scenegraph like in an editor, and "build" an entity list or whatever from that
[23:01:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:01:54] <blackhole> rpav, yeh thats pretty much I meant using scenegraph for user level API
[23:01:55] <rpav> blackhole: std already has vector, what more do you need ;)
[23:02:11] *** Joins: proller (~p@80.240.216.69)
[23:02:18] <blackhole> yeh but it leaves with lot of things that I will need to implement
[23:02:26] <rpav> api might be a poor place to put it, if they're intended to manipulate the scenegraph without like "recompiling," which would be slow
[23:02:31] <blackhole> rpav, for e.g. USD is a library that provides DS for lot of those things
[23:02:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[23:02:51] <rpav> i'm not sure what else you need
[23:02:55] <blackhole> but its pretty heavy
[23:03:11] <rpav> a good spatial tree/hash library _might_ be useful depending on your needs
[23:03:14] *** Joins: Cyp_ (~cyp@213.237.85.9)
[23:03:20] <rpav> otoh why not use like diligentengine or something
[23:03:33] <blackhole> yeh looking at that as well, at least the core part
[23:03:57] <rpav> if you're builduing an engine "for other people" and not for some highly targeted/specific game, you probably could be spending your time more productively
[23:03:58] <blackhole> used bgfx a bit but felt its limited, diligent looks good with ray tracing & mesh shader capabilities
[23:04:01] *** Quits: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:04:01] *** Quits: Cyp (~cyp@213.237.85.9) (Ping timeout: 256 seconds)
[23:04:37] <blackhole> rpav, yeh its basically a high performant engine for some modelling app that is bit different than that already exists in market
[23:04:57] <blackhole> specifically to help 3d artists in space of AR/VR
[23:05:13] <rpav> 🤔
[23:05:25] <rpav> sounds like more of a UI problem but i dunno
[23:05:29] <blackhole> rpav, tell me what you mean by spend your time more productively
[23:05:54] <rpav> well, focus on solving your exact thing, and not reimplementing everything from basic data structures to simple rendering
[23:05:58] <blackhole> rpav, yeh UI will be piece of it but I am not really working on UI part, my role is to build this rendering engine
[23:06:12] <blackhole> hmm
[23:06:21] <blackhole> so basically use diligent engine fully & build on top of it
[23:06:27] <rpav> like "build a neat UI for building levels in VR," because other engines already seem to have the "render in VR" down
[23:06:40] <rpav> i would at a minimum start there
[23:06:45] <blackhole> hmm
[23:07:07] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[23:07:20] <blackhole> for some reason, my agency believes we should have at least our own rendering engine
[23:07:29] <rpav> heh
[23:07:35] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[23:07:46] <blackhole> so even though they are ok with me using bgfx or diligent core, they don't want to just use godot or unity etc
[23:08:07] <rpav> well if you're just getting paid to do something, use whatever right .. though using at least basic rendering like diligent etc is probably most likely to lead to actual product
[23:08:29] <blackhole> rpav, so it looks like diligent is much more than bgfx
[23:08:41] <blackhole> am I correct? diligent core feels more like bgfx
[23:09:26] <rpav> blackhole: i'm not super familiar with either, but when i tried bgfx it felt a bit raw and patchy .. i haven't played much with diligent though
[23:09:35] <blackhole> hmm
[23:09:40] <rpav> but it gets to you "put things on the screen in 15 different modern backends" pretty quickly
[23:09:52] <blackhole> yeh for sure
[23:09:55] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:10:10] <rpav> considering it's like "4000 lines of vulkan to render a triangle"
[23:10:40] <blackhole> yeh I know it just gets crazy
[23:10:46] <blackhole> I have started liking diligent a bit
[23:11:13] <ville> more in the 500-1000 range. who checks for errors
[23:11:34] <rpav> it's like 1000 with the newer utility libraries / vulkan-EZ or whatever
[23:11:56] <rpav> but i mean that stuff is pretty uninteresting
[23:12:12] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[23:12:18] <kalven> or 100k lines with CarloWood's new vulkan lib
[23:12:31] <rpav> it's like rewriting a binary tree or something for the Nth time .. at some point you're like, why don't i have a good working tree, i have better things to do
[23:12:38] <rpav> heh
[23:12:46] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[23:16:26] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:16:59] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Client Quit)
[23:21:01] *** Joins: proller (~p@2a02:6b8:b081:9::1:2b)
[23:23:40] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:24:01] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[23:24:01] *** Quits: xkoncek (xkoncek@lounge.fi.muni.cz) (Ping timeout: 256 seconds)
[23:24:30] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:24:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:25:01] *** Joins: xkoncek (xkoncek@lounge.fi.muni.cz)
[23:27:28] *** Quits: test__ (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 250 seconds)
[23:29:50] *** Joins: seninha_ (~seninha@user/seninha)
[23:31:13] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[23:41:21] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:44:49] *** Quits: seninha_ (~seninha@user/seninha) (Ping timeout: 256 seconds)
[23:46:55] <AmR> i try connect data change in qtablewidget with " connect( ui->traineesBrowseTable->model(), &QAbstractItemModel::rowsInserted, this, &MainWindow::on_traineesBrowseTable_RowsInserted ); connect( ui->traineesBrowseTable->model(), &QAbstractItemModel::dataChanged, this, &MainWindow::on_traineesBrowseTable_DataChanged ); "  where traineesBrowseTable is qtablewidget I got " error: static assertion failed: Signal and slot arguments are not compatible. "
[23:49:37] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
[23:51:11] *** Joins: seninha (~seninha@user/seninha)
[23:53:02] *** Quits: jsbach (~jsbach@2a01:c23:6442:c300:3b7f:8414:c5c0:53aa) (Ping timeout: 250 seconds)
[23:55:54] *** Joins: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f)
[23:59:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:e2c5:8562:e54a:2c02:c94f) (Ping timeout: 240 seconds)
