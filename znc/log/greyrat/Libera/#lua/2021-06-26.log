[00:02:22] *** Joins: Elw3 (~Elw3@dynamic-046-114-174-139.46.114.pool.telefonica.de)
[00:05:24] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[00:06:22] <Humbedooh> anyone got any tips on lyaml always producing empty string output with .dump?
[00:10:30] *** Quits: ysgard (~ysgard@user/ysgard) (Remote host closed the connection)
[00:23:06] *** Quits: barpthewire (~barpthewi@aftr-62-216-209-1.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[00:23:27] *** Joins: barpthewire (~barpthewi@aftr-62-216-209-1.dynamic.mnet-online.de)
[00:30:31] *** Joins: easbarbosa (~user@2804:1b2:83:7e91:ede2:b968:f6f5:77ad)
[00:44:00] *** Quits: Elw3 (~Elw3@dynamic-046-114-174-139.46.114.pool.telefonica.de) (Ping timeout: 252 seconds)
[00:55:42] *** Joins: monkey_ (~user@190.104.116.134)
[01:01:49] *** Quits: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net) (Quit: Leaving)
[01:02:04] *** Joins: aquijoule_ (~richbridg@213-225-12-210.nat.highway.a1.net)
[01:02:11] *** aquijoule_ is now known as richbridger
[01:06:08] *** Quits: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net) (Remote host closed the connection)
[01:07:29] *** Joins: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net)
[01:11:20] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4) (Quit: Leaving)
[01:21:11] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:23:34] <svm_invictvs> Can you convert nil to any type other than nil?
[01:23:45] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19fa-19fb-303f-0075.res6.spectrum.com) (Read error: Connection reset by peer)
[01:24:19] <technomancy> svm_invictvs: if x == nil then x = make_othertype() end
[01:24:20] <technomancy> yes
[01:24:58] <svm_invictvs> nil converts to false if boolean, 
[01:25:12] <svm_invictvs> 0 if number?
[01:25:53] <technomancy> your question is somewhat nonsensical
[01:26:03] <technomancy> you're omitting a great deal of important context
[01:26:46] <svm_invictvs> If I am doing something like lua_tostring(indexOfInteger) right?
[01:27:00] <svm_invictvs> That actually changes the value at that particular stack value right?
[01:27:34] <technomancy> oh, you're talking about C, not lua
[01:27:37] <technomancy> no idea
[01:27:43] <svm_invictvs> But what if I do lua_tostring(indexOfNil). It will mutate that value to now be an instance of integer.
[01:28:12] <RhodiumToad> svm_invictvs: no
[01:28:18] <svm_invictvs> technomancy, Yeah, but if I have nil + 42, does that mean the language will basically evaluate it as tonumber(nil) -> 0 + 42
[01:28:52] <RhodiumToad> lua_tostring returns null for input that's not either string or number
[01:29:17] <RhodiumToad> nil + 42 will be an error
[01:29:24] <svm_invictvs> That's what I thought.
[01:29:39] <RhodiumToad> tonumber(nil) is nil, not 0
[01:30:10] <svm_invictvs> lua_tonil() (which doens't exist) would be the only valid operation on a nil value.
[01:33:06] <RhodiumToad> hmm?
[01:33:16] <RhodiumToad> lots of operations are valid on nil
[01:33:42] <svm_invictvs> Yeah, I'm reading hte manual
[01:33:52] <svm_invictvs> lua_toboolean(indexOfNil) is a valid operation. It makes it a boolean
[01:34:29] <RhodiumToad> right, lua_toboolean accepts any type at all; nil and false return false, everything else is true
[01:34:48] <RhodiumToad> (even 0 is true, unlike some other languages)
[01:37:34] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 265 seconds)
[01:39:15] <svm_invictvs> Yeah, and all of the lua_to* functions will mutate that stack value.
[01:39:21] <svm_invictvs> correct?
[01:39:36] <svm_invictvs> which is why you've gotta be careful with iteration of maps and what not.
[01:39:56] <svm_invictvs> s/maps/tables/
[01:40:43] <RhodiumToad> no
[01:41:08] <RhodiumToad> lua_tostring / lua_tolstring is the only one that mutates stack values (other than lua_replace etc.)
[01:41:36] <RhodiumToad> and it only does that if the value is currently a number, all other values are left alone
[01:41:58] <RhodiumToad> this is because having converted the number to a string, it has to anchor the string to prevent it from being GC'd
[01:42:46] <svm_invictvs> I see.
[01:42:52] <svm_invictvs> Well that's good to know.
[01:42:57] <RhodiumToad> note that there's also luaL_tostring, which doesn't mutate anything and converts any type of value to a string (using __tostring or __name or a default format)
[01:43:15] <RhodiumToad> (that's basically what tostring() and print() use)
[01:43:41] <svm_invictvs> If I were implementing a VM would it be valid to support tostring not mutating the value?
[01:43:55] <RhodiumToad> no
[01:44:46] <svm_invictvs> cause when you tostring(foo) in the language, the interpreter doesn't mutate that value it pushes a copy right?
[01:46:12] <svm_invictvs> RhodiumToad, Why wouldn't it?
[01:46:52] <RhodiumToad> the lua function tostring() doesn't mutate anything
[01:47:20] <RhodiumToad> if you're implementing the C api then lua_tostring needs to mutate the value, if you're not exposing a C API then you can do as you please
[01:47:53] <svm_invictvs> If the value is a number, then lua_tolstring also changes the actual value in the stack to a string. (This change confuses lua_next when lua_tolstring is applied to keys during a table traversal.) 
[01:48:10] <RhodiumToad> yes, that's talking about the C API
[01:48:18] *** Quits: netlynx (~me@94-226-69-15.access.telenet.be) (Quit: Ex-Chat)
[01:48:52] <svm_invictvs> RhodiumToad, Yeah, but in that case I'd say that the fact that it converts it on the stack is entirely an implementation detail. If my implementation were to theoretically accomplish that without mutating the value would that be alright?
[01:49:13] <RhodiumToad> code that uses the C API might be _expecting_ the mutation
[01:49:20] <svm_invictvs> Sure, of course.
[01:49:43] <svm_invictvs> But let's say I was building my VM with a garbage collector not of the LUa variety and it would be perfectly okay for me to dangle the returned pointer.
[01:49:57] <RhodiumToad> so if you're providing the C API then the mutation needs to happen. If you have no C API then you can do as you please
[01:52:18] <svm_invictvs> Okay
[01:52:50] *** Joins: tertu (~tertu@075-135-065-044.res.spectrum.com)
[01:54:04] *** Quits: magla (~gelignite@55d4266d.access.ecotel.net) (Quit: Stay safe!)
[02:00:23] <svm_invictvs> It just seems screwy that values ont he stack aren't immutable.
[02:01:27] <RhodiumToad> um
[02:01:50] <RhodiumToad> you mean discounting things like lua_replace ?
[02:04:08] *** Quits: kipras (~kipras@78-56-235-39.static.zebra.lt) (Ping timeout: 272 seconds)
[02:04:57] <svm_invictvs> When it says "conversion fails" in this document https://www.lua.org/manual/5.3/manual.html#3.4.3
[02:05:01] <svm_invictvs> Does that mean an error is raised?
[02:06:29] <RhodiumToad> %5.3 1.5 | 1
[02:06:30] <yalb> RhodiumToad: sandbox:1: number has no integer representation; stack traceback:; sandbox:1: in main chunk
[02:06:40] <RhodiumToad> yes :-)
[02:07:25] *** Joins: Elw3 (~Elw3@dynamic-046-114-172-014.46.114.pool.telefonica.de)
[02:11:23] <svm_invictvs> RhodiumToad, Well shit. That's awesome that a bot can answer that question for me lol
[02:49:11] *** Quits: fcr (~fran@r186-48-52-161.dialup.adsl.anteldata.net.uy) (Ping timeout: 258 seconds)
[02:50:14] *** Joins: fcr (~fran@r167-56-89-74.dialup.adsl.anteldata.net.uy)
[02:57:58] *** Quits: tertu (~tertu@075-135-065-044.res.spectrum.com) (Ping timeout: 272 seconds)
[03:09:44] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:33:04] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:35:44] *** Quits: Volund_ (~IceChat95@184-089-055-145.res.spectrum.com) (Quit: ASCII a stupid question, get a stupid ANSI!)
[03:39:30] *** Quits: easbarbosa (~user@2804:1b2:83:7e91:ede2:b968:f6f5:77ad) (Remote host closed the connection)
[04:19:52] *** Quits: Elw3 (~Elw3@dynamic-046-114-172-014.46.114.pool.telefonica.de) (Quit: Leaving)
[04:21:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:36:53] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[04:51:02] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 268 seconds)
[04:52:27] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[05:25:05] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 244 seconds)
[06:21:43] *** Joins: aquijoule_ (~richbridg@213-225-5-235.nat.highway.a1.net)
[06:24:40] *** Quits: richbridger (~richbridg@213-225-12-210.nat.highway.a1.net) (Ping timeout: 265 seconds)
[06:50:40] *** Quits: ratchet_freak (~ratchetfr@ptr-82s3g7l9r42569r41f4.18120a2.ip6.access.telenet.be) (Ping timeout: 250 seconds)
[07:28:42] *** Quits: ratchetfreak (~ratchetfr@d51a4beaf.access.telenet.be) (Read error: Connection reset by peer)
[08:00:24] *** Quits: StephenLynx (~StephenLy@2804:1054:301f:1470::e93) (Remote host closed the connection)
[08:20:33] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:01:35] *** Joins: tertu (~tertu@075-135-065-044.res.spectrum.com)
[09:09:27] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 258 seconds)
[09:22:49] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:27:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:54:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:59:05] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:04:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:10:27] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:28:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:51:56] *** Quits: tertu (~tertu@075-135-065-044.res.spectrum.com) (Ping timeout: 252 seconds)
[11:04:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:23:35] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:28:30] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-54.prtc.net)
[12:31:05] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Ping timeout: 258 seconds)
[12:32:18] *** Joins: dmang (~dmang@user/dmang)
[12:37:28] *** Quits: dmang (~dmang@user/dmang) (Ping timeout: 272 seconds)
[12:45:00] *** Joins: dmang (~dmang@user/dmang)
[13:17:25] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-54.prtc.net) (Ping timeout: 246 seconds)
[13:24:31] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4)
[13:36:22] *** Quits: milosz (~milosz@user/milosz) (Quit: Leaving)
[13:36:23] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net)
[13:59:40] *** Joins: entuland (~entuland@user/entuland)
[14:47:22] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net) (Ping timeout: 246 seconds)
[14:51:40] *** Quits: fcr (~fran@r167-56-89-74.dialup.adsl.anteldata.net.uy) (Ping timeout: 268 seconds)
[14:56:20] *** Joins: fcr (~fran@r186-48-138-193.dialup.adsl.anteldata.net.uy)
[15:10:16] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[15:10:16] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:20:41] *** Joins: smlckz (~smlckz@user/smlckz)
[15:22:06] *** Quits: smlckz (~smlckz@user/smlckz) (Remote host closed the connection)
[15:22:37] *** Joins: smlckz (~smlckz@user/smlckz)
[15:23:00] *** Quits: smlckz (~smlckz@user/smlckz) (Remote host closed the connection)
[15:23:11] *** Joins: smlckz (~smlckz@user/smlckz)
[15:26:25] *** Quits: smlckz (~smlckz@user/smlckz) (Remote host closed the connection)
[15:27:21] *** Joins: ratchetfreak (~ratchetfr@d51a4beaf.access.telenet.be)
[15:33:45] *** Joins: StephenLynx (~StephenLy@2804:1054:301f:1470::e93)
[15:48:24] *** Joins: ratchet_freak (~ratchetfr@ptr-82s3g7l9r42569r41f4.18120a2.ip6.access.telenet.be)
[16:27:45] *** Joins: skapata (~Skapata@user/skapata)
[16:29:22] *** Joins: Elw3 (~Elw3@dynamic-046-114-166-170.46.114.pool.telefonica.de)
[18:04:20] *** Joins: reset (~reset@user/reset)
[18:27:22] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-a590-a395-4a04-5d4c.res6.spectrum.com)
[18:27:56] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[19:00:06] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:22:05] *** Quits: Elw3 (~Elw3@dynamic-046-114-166-170.46.114.pool.telefonica.de) (Quit: Leaving)
[19:41:00] *** Quits: ArRay_ (~ArRay_@user/array/x-1947090) (Remote host closed the connection)
[19:41:23] *** Joins: ArRay_ (~ArRay_@user/array/x-1947090)
[19:48:52] *** Joins: tertu (~tertu@075-135-065-044.res.spectrum.com)
[19:53:56] *** Joins: monkey_ (~user@190.104.116.134)
[19:56:31] *** Quits: tertu (~tertu@075-135-065-044.res.spectrum.com) (Ping timeout: 258 seconds)
[20:03:40] *** Joins: Tricycle (~CGI273@lfbn-idf1-1-1830-41.w90-91.abo.wanadoo.fr)
[20:30:13] *** Quits: mikess (~sam@user/mikess) (Ping timeout: 268 seconds)
[20:46:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:49:52] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:4dfa:e2dd:775c:36a6) (Ping timeout: 246 seconds)
[21:01:05] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:c51e:2204:5b0e:2468)
[21:01:36] *** Joins: mikess (~sam@user/mikess)
[21:26:28] *** Quits: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com) (Remote host closed the connection)
[21:27:48] *** Joins: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com)
[21:35:31] *** Quits: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com) (Quit: No Ping reply in 180 seconds.)
[21:36:42] *** Joins: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com)
[21:45:12] *** Quits: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com) (Quit: No Ping reply in 180 seconds.)
[21:46:27] *** Joins: charukiewicz (~quassel@irouteince04.i.subnet.rcn.com)
[21:56:29] *** Joins: magla (~gelignite@55d467e5.access.ecotel.net)
[22:58:01] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[23:33:39] *** Quits: ArRay_ (~ArRay_@user/array/x-1947090) (Remote host closed the connection)
[23:34:06] *** Joins: ArRay_ (~ArRay_@user/array/x-1947090)
[23:39:54] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 244 seconds)
[23:44:25] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[23:45:28] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[23:50:46] *** Joins: tertu (~tertu@075-135-065-044.res.spectrum.com)
