[00:03:16] *** Joins: rockcavera (~rc@192.12.114.202)
[00:03:17] *** Quits: rockcavera (~rc@192.12.114.202) (Changing host)
[00:03:17] *** Joins: rockcavera (~rc@user/rockcavera)
[00:49:18] <FromDiscord> <undersquire> Hi
[00:52:59] <FromDiscord> <Elegantbeef> Hello
[00:53:23] <FromDiscord> <@bracketmaster-5a708063d73408ce4> hi
[00:53:32] <FromDiscord> <undersquire> why does it say BOT next to everyones name
[00:53:35] <FromDiscord> <Elegantbeef> I know that name it's the person from reddit with the memory allocation post!
[00:53:41] <FromDiscord> <undersquire> In reply to @Elegantbeef "I know that name": yep
[00:53:42] <FromDiscord> <undersquire> lol
[00:53:42] <FromDiscord> <Elegantbeef> Cause i'm on matrix
[00:53:45] <FromDiscord> <undersquire> Ah
[00:53:48] <FromDiscord> <undersquire> ok that makes more sense lol
[00:54:03] <FromDiscord> <Elegantbeef> Or i'm a sophisticated bot
[00:54:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> also, apparently, you can't form a string that start with a doublequote using rawstring in nim
[00:54:05] <FromDiscord> <Elegantbeef> Though i'm not that sophisticated
[00:54:25] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'm pretty sure I'm the only human on here
[00:54:26] <FromDiscord> <undersquire> you are self aware robot and you live in a virtual reality
[00:54:36] <FromDiscord> <Elegantbeef> !eval echo """""yes you can"""
[00:54:40] <NimBot> ""yes you can
[00:54:40] <FromDiscord> <@bracketmaster-5a708063d73408ce4> As you can clearly see, I have a profile picture
[00:54:51] <FromDiscord> <undersquire> In reply to @@bracketmaster-5a708063d73408ce4 "As you can clearly": Lol yes only humans have profile pictures
[00:55:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> !eval echo """I feel dumb"""
[00:55:07] <NimBot> I feel dumb
[00:57:29] <FromDiscord> <undersquire> wait isnt Matrix a protocol?
[00:57:47] <FromDiscord> <undersquire> or is it a client
[01:01:37] <nrds> <06Prestige99> protocol
[01:01:57] <nrds> <06Prestige99> Element is the official client
[01:04:14] <FromDiscord> <undersquire> ok maybe ill give it a try
[01:04:26] <FromDiscord> <undersquire> https://element.io this one?
[01:04:51] <nrds> <06Prestige99> yep that's it
[01:54:35] <arkanoid> haxscramper, I'm spending some time reading your code on github. It's advanced code for me but I feel the flow, but I also know that I'm lacking knowledge about parsing where you seem very solid. I'd like to ask you if you have any reference that you'd suggest reading to understand your approach, expecially for xml_ast.nim and xsd_ast.nim
[01:56:50] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 272 seconds)
[02:15:37] <FromDiscord> <lamersc.com 🐧> Is it possible to use nim script as a secure interface for say an extension system for a game server?
[02:15:54] <FromDiscord> <lamersc.com 🐧> Such as only allowing specific calls and such, disabling network and file access
[02:16:47] <FromDiscord> <Elegantbeef> Yea you can pretty well sandbox the nimVm + modules
[02:17:21] <FromDiscord> <Elegantbeef> I do have nimscripter which enables scripted programs but i presently have a rewrite that needs to be done before i'm overly happy with it 😀
[02:20:01] <FromDiscord> <lamersc.com 🐧> In reply to @Elegantbeef "I do have nimscripter": That seems like an interesting project 👀 nim seems to be very capable for scripted programs
[02:33:34] *** Quits: max22- (~maxime@2a01cb088335980020b17d54c2d68f76.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[03:54:53] *** Joins: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:11:01] <FromDiscord> <dom96> wow https://forum.nim-lang.org/t/8297
[04:32:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how to declare a function type in nim
[04:33:10] <FromDiscord> <undersquire> func () i think
[04:33:23] <FromDiscord> <undersquire> u mean like in a var?
[04:33:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> typo
[04:33:44] <FromDiscord> <@bracketmaster-5a708063d73408ce4> how to -\> how do you
[04:35:09] <FromDiscord> <undersquire> u mean like that?
[04:35:14] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1d
[04:35:38] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:38:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> something like this\: type myfunc proc(s \: string ) -\> bool
[04:39:52] <FromDiscord> <undersquire> oh
[04:40:16] <FromDiscord> <undersquire> its probably like anonymous functions
[04:40:32] <FromDiscord> <undersquire> im unsure tho
[04:40:33] <FromDiscord> <undersquire> sent a code paste, see https://paste.rs/5fT
[04:43:09] <FromDiscord> <undersquire> yes this works just tested it
[04:44:43] <FromDiscord> <undersquire> does anyone know how to specify nim compile options for a nimble project?
[04:45:13] <FromDiscord> <undersquire> do they just go into the .nimble file?
[04:47:24] <FromDiscord> <theangryepicbanana> ok so I think I've gotten generic interfaces working in nim, but it has a funny bug that I've been trying to fix for like 3 hours
[04:48:09] <FromDiscord> <theangryepicbanana> if a type that implements an interface isn't generic, it complains for absolutely no reason
[04:48:17] <FromDiscord> <theangryepicbanana> (edit) "an" => "a generic"
[04:49:11] <FromDiscord> <theangryepicbanana> I think it's expecting type params somewhere, but I have no clue where lol
[04:49:16] <FromDiscord> <Elegantbeef> i believe they have to go into `config.nims` or one of the other format versions↵(@undersquire)
[04:49:20] <FromDiscord> <dom96> In reply to @undersquire "do they just go": no, they go into a nim.cfg or config.nims file
[04:49:50] <FromDiscord> <undersquire> ah ok
[04:50:01] <FromDiscord> <undersquire> is there documentation on how to use config.nims?
[04:50:07] <FromDiscord> <undersquire> i cant find any on nimble repo
[04:51:03] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/nims.html
[04:51:12] <FromDiscord> <Elegantbeef> nimscript as a configuration file
[04:51:38] <FromDiscord> <undersquire> ah ok ty
[05:09:25] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Thanks!↵(@undersquire)
[05:10:39] <FromDiscord> <undersquire> np
[05:10:49] <FromDiscord> <undersquire> also is there a way to have a sequence of a non-concrete type?
[05:11:17] <FromDiscord> <undersquire> like if I have a type using Generics, is the only way to have a sequence of it is it use object variants instead?
[05:11:46] <FromDiscord> <Rika> Yes pretty much
[05:11:49] <FromDiscord> <undersquire> rip
[05:11:52] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1l
[05:11:57] <FromDiscord> <Elegantbeef> You need to box it somehow so yes
[05:12:10] <FromDiscord> <undersquire> would using a ref work instead?
[05:12:13] <FromDiscord> <undersquire> or a ptr
[05:12:22] <FromDiscord> <Rika> No
[05:12:27] <FromDiscord> <undersquire> it doesnt error with ptr
[05:13:25] <FromDiscord> <undersquire> yeah nvm ptr wont work
[05:13:30] <FromDiscord> <undersquire> ig ill just use object variants then
[05:18:04] <FromDiscord> <Elegantbeef> You could look at patty to make your variants easier https://github.com/andreaferretti/patty#constructing-variant-objects
[05:18:07] <nrds> <12R2D299> 4GitHub: 7"A pattern matching library for Nim"
[05:37:24] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1s
[05:38:32] <FromDiscord> <Elegantbeef> you also could do `: t.type` instead of `auto` for more obvious return type
[05:38:52] <FromDiscord> <undersquire> oh really? thats even better lmfao
[05:38:55] <FromDiscord> <Elegantbeef> or do `proc fetch[T](vm: var VM, t: T): T`
[05:39:07] <FromDiscord> <undersquire> i was but then u cant do vm.fetch 😭
[05:39:20] <FromDiscord> <undersquire> vm.fetch[uint8]()
[05:39:21] <FromDiscord> <undersquire> oh
[05:39:29] <FromDiscord> <undersquire> wait u can still do vm.fetch(uint8)
[05:39:35] <FromDiscord> <undersquire> (edit) "wait u can still do vm.fetch(uint8) ... " 03added "using ur way"
[05:40:20] <FromDiscord> <undersquire> In reply to @Elegantbeef "or do `proc fetch*[T](vm:": do generics or just using t: type have any advantages or just preference
[05:40:31] <FromDiscord> <Rika> i mean `proc fetch(vm: var VM, t: typedesc): t`
[05:40:52] <FromDiscord> <undersquire> wow i need to re read the docs lol
[05:40:55] <FromDiscord> <Rika> avoid using `type` as a type
[05:41:09] <FromDiscord> <Elegantbeef> there are many ways to do this
[05:43:43] <FromDiscord> <Elegantbeef> Also `t: typedesc` is an implicit generic
[05:44:05] <FromDiscord> <Rika> yes indeed
[05:45:04] <FromDiscord> <Elegantbeef> Guess should point out conventionally you use capitals for generics
[05:45:05] <FromDiscord> <undersquire> so is it really just preference at this point
[05:45:20] <FromDiscord> <undersquire> In reply to @Elegantbeef "Guess should point out": yes but even for parameters that are typedesc ?
[05:45:30] <FromDiscord> <Elegantbeef> Yes
[05:46:16] <FromDiscord> <undersquire> oh ok
[05:46:16] <FromDiscord> <Elegantbeef> Atleast when using a single character
[05:46:43] <FromDiscord> <undersquire> what is the difference between `type` and `typedesc` ?
[05:46:48] <FromDiscord> <Rika> clarity
[05:46:57] <FromDiscord> <undersquire> do they do the same thing?
[05:47:03] <FromDiscord> <Elegantbeef> Nothing aside from one being more verbose
[05:47:05] <FromDiscord> <Rika> i do not know, they probably do
[05:47:32] <FromDiscord> <undersquire> there must be a difference
[05:47:39] <FromDiscord> <undersquire> otherwise whats the point of the longer one lol
[05:48:14] <FromDiscord> <Elegantbeef> `type` is older and was deprecated with the typedesc alias to be more clear
[05:48:37] <FromDiscord> <undersquire> ah i see
[05:48:41] <FromDiscord> <Elegantbeef> Cause `type` can be used for extracting type
[05:48:44] <FromDiscord> <Elegantbeef> !eval echo type 100
[05:48:47] <FromDiscord> <undersquire> it seems type used to be typedesc and typeof combined
[05:48:48] <NimBot> int
[05:49:29] <FromDiscord> <Elegantbeef> It's a bit ambiguous give then above example works
[05:50:38] <FromDiscord> <Elegantbeef> given the\ apparently swapped the 'n' around 😛
[05:51:16] <FromDiscord> <undersquire> lol
[05:52:36] <FromDiscord> <Elegantbeef> There are a few aliases like that in Nim
[05:52:37] <FromDiscord> <Elegantbeef> !eval echo on
[05:52:41] <NimBot> true
[05:52:46] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1v
[05:52:53] <FromDiscord> <undersquire> like should I not use commas?
[05:53:09] <FromDiscord> <undersquire> cause i see people sometimes not 😂
[05:53:13] <FromDiscord> <Elegantbeef> It's purely up to you there, i generally dont use commas, some people put them all on one line
[05:53:21] <FromDiscord> <undersquire> ah
[05:53:33] <FromDiscord> <undersquire> i wont bother with them then since i use multiple lines
[05:53:49] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3v1w
[05:53:52] <FromDiscord> <undersquire> lol
[05:53:57] <FromDiscord> <undersquire> yeah commas make sense there
[05:54:40] <FromDiscord> <Elegantbeef> I wouldnt be too worried about following conventions truthfully, it's a rather forgiving language 😀
[05:54:48] <FromDiscord> <Rika> hey
[05:54:49] <FromDiscord> <Rika> wtf
[05:54:53] <FromDiscord> <undersquire> In reply to @Elegantbeef "I wouldnt be too": yeah lol
[05:54:54] <FromDiscord> <Rika> im no sadist
[05:55:16] <FromDiscord> <Elegantbeef> As long as your types/consts start with a capital letter, and procedures with a lower case you're golden
[05:55:56] <FromDiscord> <undersquire> and i start enums with a lowercase and follow it with capital
[05:55:56] <FromDiscord> <Elegantbeef> Lol rika i unintentionally insulted you, score
[05:56:19] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1x
[05:56:31] <FromDiscord> <Elegantbeef> Or use `{.pure.}`
[05:56:32] <FromDiscord> <undersquire> is that conventional naming for enum values?
[05:57:02] <FromDiscord> <Elegantbeef> Enums are a bit of a sore spot, but overridable enums in devel makes it better
[05:57:25] <FromDiscord> <Rika> In reply to @Elegantbeef "Lol rika i unintentionally": nah im joking i use three lines for enums
[05:57:34] <FromDiscord> <undersquire> cause i see the official docs using the naming i sent above
[05:58:15] <FromDiscord> <theangryepicbanana> In reply to @Elegantbeef "Enums are a bit": yeah enums could use an overhaul imo
[05:58:19] <FromDiscord> <Elegantbeef> With the experimental overridable enums Where possible the type system removes ambiguity for you, so if you have two or more enum names but you do something like `let a: Colors = red` it's fine
[05:58:28] <FromDiscord> <undersquire> ok
[05:58:38] <FromDiscord> <Elegantbeef> But yea that convention si fine
[05:58:45] <FromDiscord> <undersquire> i kinda wish enum values were masks behind Colors.
[05:58:58] <FromDiscord> <undersquire> so that they arent just global names
[05:59:05] <FromDiscord> <Elegantbeef> Then use `Colors {.pure.}`
[05:59:14] <FromDiscord> <Elegantbeef> pure enums are hidden behind `Colors` when there is ambiguity
[05:59:41] <FromDiscord> <undersquire> ah ok
[05:59:46] <FromDiscord> <undersquire> Colors. ?
[05:59:51] <FromDiscord> <undersquire> (edit) "Colors. ? ... " 03added "(when using {.pure.}"
[05:59:52] <FromDiscord> <Elegantbeef> What do you think of this banana↵https://github.com/nim-lang/Nim/blob/a273ea70e8817e3509014a1b3dcd16a360ed400b/tests/enum/toverloadable_enums.nim
[05:59:53] <FromDiscord> <undersquire> (edit) "{.pure.}" => "{.pure.})"
[06:00:07] <FromDiscord> <Elegantbeef> Yea
[06:00:12] <FromDiscord> <undersquire> kk
[06:00:31] <FromDiscord> <Rika> you lied, this aint no banana
[06:00:40] <FromDiscord> <Elegantbeef> Sorry
[06:00:50] <FromDiscord> <Elegantbeef> Commas save lives or something like that
[06:01:34] <FromDiscord> <theangryepicbanana> In reply to @Rika "you lied, this aint": I am the banana
[06:01:39] <FromDiscord> <theangryepicbanana> obv
[06:01:57] <FromDiscord> <Elegantbeef> Rika knows, they just like toying with me
[06:02:47] <FromDiscord> <theangryepicbanana> unrelated, I've made the compiler segfault 5 different ways today
[06:03:07] <FromDiscord> <theangryepicbanana> very fun
[06:03:10] <FromDiscord> <Elegantbeef> Nice, that's more than me and i've toyed with the internals of it
[06:03:20] <FromDiscord> <Elegantbeef> Document how with minimal reproductions?
[06:03:36] <FromDiscord> <theangryepicbanana> well the issue is that I have no clue why it's happening
[06:04:54] <FromDiscord> <theangryepicbanana> possibly related question, do you have to an ident nodes in order to use it in multiple different places?
[06:05:01] <FromDiscord> <theangryepicbanana> to copy an
[06:05:15] <FromDiscord> <Elegantbeef> nah an ident node is unbound
[06:05:23] <FromDiscord> <theangryepicbanana> what about symbols
[06:05:34] <FromDiscord> <Elegantbeef> symbols are looked up and therefore limited to where they can be used
[06:06:02] <FromDiscord> <Elegantbeef> An identifier is like you just typed the word it holds, a symbol is typed and semantically checked so it maps to a specific thing
[06:06:04] <FromDiscord> <theangryepicbanana> would I theoretically be able to change a symbol node to an ident node and have it work just fine?
[06:06:26] <FromDiscord> <Elegantbeef> Yes desyming a node is commonly done when dealing with typed AST
[06:06:55] <FromDiscord> <Elegantbeef> Depending on what you're doing you only want to desym specific nodes so the lookups still function
[06:06:56] <FromDiscord> <theangryepicbanana> hmm ok. I think nim is trying to turn my type parameters into symbols and which is screwing everything else up
[06:08:02] <FromDiscord> <theangryepicbanana> thanks, I'll try that then
[06:08:10] <FromDiscord> <theangryepicbanana> is there like a builtin function for it?
[06:08:12] <FromDiscord> <Elegantbeef> Well it's going to turn them into symbols after the macro is ran so if you're emitting incorrect code that's on you \:P
[06:08:36] <FromDiscord> <theangryepicbanana> well after the macro is run sure
[06:08:56] <FromDiscord> <theangryepicbanana> but it's happening while I'm building up nodes inside a macro
[06:09:07] <FromDiscord> <Elegantbeef> There is not anything for it, it's a relative simple procedure though
[06:09:16] <FromDiscord> <theangryepicbanana> oof ok
[06:09:22] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/blob/bigrewrite/src/nimscripter/expose.nim#L6
[06:09:25] <FromDiscord> <Elegantbeef> Steal it
[06:09:27] <FromDiscord> <Elegantbeef> I give you permiission
[06:09:59] <FromDiscord> <theangryepicbanana> pog thx
[06:10:03] <FromDiscord> <Elegantbeef> That fully desyms it though, so be cautious if you want any typed nodes to remain
[06:10:24] <FromDiscord> <theangryepicbanana> I ideally want everything to be untyped here
[06:11:15] <FromDiscord> <Elegantbeef> Then there you go
[06:11:42] <FromDiscord> <Elegantbeef> I suppose one could also emit another macro call after this one that takes untyped, but i've never done that so dont know how well that'd work
[06:12:45] <FromDiscord> <theangryepicbanana> well the good news is that it segfaults faster now
[06:12:55] <FromDiscord> <Elegantbeef> Noice
[06:13:22] <FromDiscord> <theangryepicbanana> oh yay it works now
[06:13:46] <FromDiscord> <theangryepicbanana> here's the code if you want to burn your eyes https://replit.com/@theangryepicbanana/nim-interface-test
[06:14:56] <FromDiscord> <theangryepicbanana> still crashes for non-generic types, but I suppose a dummy type works for now
[06:15:16] <FromDiscord> <Elegantbeef> Glad to see my concept work is still being used 😛
[06:15:27] <FromDiscord> <theangryepicbanana> yep
[06:15:44] <FromDiscord> <Elegantbeef> Jeez learn to write a proc once in a while
[06:16:03] <FromDiscord> <theangryepicbanana> well it's just a lot of bad code
[06:16:14] <FromDiscord> <theangryepicbanana> I've been struggling with this for like a week now
[06:16:34] <FromDiscord> <theangryepicbanana> ooh I wonder if methods work
[06:16:42] <FromDiscord> <Elegantbeef> Yea i'm just commenting on the 200 line macro
[06:17:04] <FromDiscord> <theangryepicbanana> yeah it could probably use some work
[06:17:33] <FromDiscord> <theangryepicbanana> also update: methods don't work and I'm not sure why
[06:17:46] <FromDiscord> <theangryepicbanana> well anyways this is progress at least
[06:18:07] <FromDiscord> <theangryepicbanana> it's mainly based on this super hacky thing I found on the forums https://forum.nim-lang.org/t/3642#22706
[06:18:53] <FromDiscord> <theangryepicbanana> it's like the interfaced lib or something, but you don't need to explicitly cast to the interface type
[06:20:31] <FromDiscord> <Elegantbeef> Pretty hard to audit what's going on in that macro so i can only sing "brave sir robin" 😀
[06:21:21] <FromDiscord> <theangryepicbanana> lol understandable
[06:21:24] <FromDiscord> <theangryepicbanana> I barely understand half of it
[06:41:55] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v1H
[06:42:18] <FromDiscord> <Elegantbeef> standard `nim -v` and what os/arch?
[06:43:30] <FromDiscord> <Elegantbeef> Also isnt this completely useless?
[06:43:50] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v1I
[06:44:12] <FromDiscord> <ajusa> Well this is just the type definition, it doesn't do anything yet
[06:44:31] <FromDiscord> <Elegantbeef> No i mean the entire bit procedure
[06:45:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:45:30] <FromDiscord> <ajusa> What do you mean? It just raises it to a power of 2?
[06:45:49] <FromDiscord> <ajusa> This is translated from C2Nim where a bit macro was defined, that's why it's a bit odd
[06:46:08] <FromDiscord> <Elegantbeef> Well is that macro even needed
[06:46:14] <FromDiscord> <Elegantbeef> If you use a bitset it's fine
[06:46:24] <FromDiscord> <ajusa> and I just realized that if I move the file out of that directory (where config.nims isn't being used) then it compiles fine.
[06:46:33] <FromDiscord> <Elegantbeef> Compare https://play.nim-lang.org/#ix=3v1L to https://play.nim-lang.org/#ix=3v1K
[06:46:33] <FromDiscord> <ajusa> In reply to @Elegantbeef "If you use a": Not quite because some numbers are skipped
[06:46:48] <FromDiscord> <ajusa> oh
[06:47:02] <FromDiscord> <Elegantbeef> Holey enums sets are still sparse
[06:47:38] <FromDiscord> <Elegantbeef> An issue will appear when using these alone though
[06:47:55] <FromDiscord> <Elegantbeef> cause 2^7 != 7
[06:48:51] <FromDiscord> <Elegantbeef> But if only use it as a bitset/enum you'll be fine
[06:49:59] <FromDiscord> <ajusa> Got it, thanks! I think that this code only fails to compile when I have `switch "cpu", "arm"` in my config...
[06:51:30] *** Quits: auxym (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[06:51:39] <FromDiscord> <ajusa> Yup, that's exactly what happens. I have no clue why `arm` would be treated differently here though...
[06:52:51] <FromDiscord> <ajusa> In reply to @Elegantbeef "But if only use": But the solution you gave seems to get around the weird value out of range, so I'll stick with that 😄
[06:53:11] <FromDiscord> <Elegantbeef> Well you did find a bug in the stdliib
[06:55:44] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v1M
[06:55:52] <FromDiscord> <Elegantbeef> I wouldnt cast
[06:57:17] <FromDiscord> <ajusa> ah cast to `int` and then convert to `uint32`
[06:57:23] <FromDiscord> <Elegantbeef> No
[06:57:31] <FromDiscord> <Elegantbeef> I wouldnt cast
[06:57:50] <FromDiscord> <Elegantbeef> Leave it as a bitset, there is very little reason to cast it to a int imo
[06:57:59] <FromDiscord> <Elegantbeef> Unless you're interacting with C a lot
[06:58:28] <FromDiscord> <Elegantbeef> I assume you can query the buttons in a bitset from the C libs
[06:58:36] <FromDiscord> <Elegantbeef> Then that means you dont need to change anything
[06:58:42] <FromDiscord> <ajusa> I am interacting with it quite a bit, hm. Guess I'll use `let` instead of `const` then
[06:59:01] <FromDiscord> <Elegantbeef> Is there a reference to this api?
[06:59:28] <FromDiscord> <ajusa> https://libctru.devkitpro.org/hid_8h.html#aa2cababf764bf0b4297dc2e2fffe2a76
[06:59:56] <FromDiscord> <ajusa> well I'm using many parts of libctru for 3DS development but that's the one I'm working with for the input type definitions
[07:01:10] <FromDiscord> <Elegantbeef> Aw fuck yea you dont need to cast to an int
[07:01:41] <FromDiscord> <Elegantbeef> All of these procedures that say "bitmask of buttons" is just going to be a `set[Key]` in Nim
[07:02:39] <FromDiscord> <ajusa> Got it, can I just wrap it by saying it returns `set[Key]` then instead of u32?
[07:03:04] <FromDiscord> <Elegantbeef> Which means for instance if you want to check if they just released `A` you'd do `KeyA in hidKeysUp()`!
[07:03:04] <FromDiscord> <Elegantbeef> I believe so
[07:03:53] <FromDiscord> <Elegantbeef> Just be very cognisant that if you ever send a button to the C logic it has to be converted somehow
[07:04:44] <FromDiscord> <ajusa> so I'll need to cast then, but that would be at runtime rather than CT. Thanks for your help, I'm filing a Github issue now
[07:04:49] <FromDiscord> <Elegantbeef> Cause in nim land the ordinal is the bit position instead of the value
[07:05:16] <FromDiscord> <Elegantbeef> No you will not cast, you'll have to shift 1 by the number
[07:06:54] <FromDiscord> <Elegantbeef> As such `proc toNintendo(key: Key): uint32 = 1u32 shl key.ord`
[07:09:13] <FromDiscord> <Elegantbeef> Nope
[07:09:15] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v1Q
[07:09:16] <FromDiscord> <Elegantbeef> I mean yea
[07:09:17] <FromDiscord> <Elegantbeef> But uglier
[07:10:05] <FromDiscord> <Elegantbeef> I probably spend more time then i should admit trying to ensure i can use these bitsets/arrays 😀
[07:11:27] <FromDiscord> <Elegantbeef> Since the ordinal value is held by nim you can always make an `array[Key.low.ord..Key.high.ord, T]` if you ever need and cheapily access from it
[07:12:41] <FromDiscord> <ajusa> https://github.com/nim-lang/Nim/issues/18646 opened an issue, hopefully that's enough for someone to reproduce
[07:13:37] <FromDiscord> <Elegantbeef> My guess is that it uses i32 instead of u32 for some reason and the arm setup is 32bit by default but i could be wrong
[07:13:54] <FromDiscord> <Elegantbeef> Easy to test just by doing `--cpu:i386`
[07:14:28] <FromDiscord> <ajusa> Yep with `--cpu:i386` it gives me the same error
[07:15:45] <FromDiscord> <undersquire> is there a keyword for like breaking out of a case of block?
[07:16:11] <FromDiscord> <Elegantbeef> Does `break` not work?
[07:16:20] <FromDiscord> <undersquire> no it says there is nothing to break out of
[07:16:20] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1S
[07:16:48] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3v1T
[07:16:48] <FromDiscord> <undersquire> oh
[07:16:49] <FromDiscord> <undersquire> ok
[07:16:52] <FromDiscord> <undersquire> i forgot about block: lol
[07:16:53] <FromDiscord> <Elegantbeef> Name block if need
[07:16:53] <FromDiscord> <undersquire> ty
[07:17:06] <FromDiscord> <Elegantbeef> `block yourName` if all the way down in other loops and stuff
[07:17:12] <FromDiscord> <undersquire> yeah
[07:17:15] <FromDiscord> <undersquire> it works ty
[07:17:35] <FromDiscord> <Elegantbeef> Depending on what you're doing might be able to do something better
[07:18:21] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v1U
[07:18:22] <FromDiscord> <undersquire> nop doesnt do anything
[07:18:45] <FromDiscord> <Elegantbeef> Arent you in a while loop or similar?
[07:18:48] <FromDiscord> <undersquire> I dont want to handle it in `else:` because thats where I handle an unknown opcode
[07:18:52] <FromDiscord> <undersquire> In reply to @Elegantbeef "Arent you in a": no just a proc
[07:19:36] <FromDiscord> <undersquire> i could use return
[07:19:41] <FromDiscord> <undersquire> i dont do anything after this case of
[07:20:18] <FromDiscord> <Elegantbeef> oh if there is nothing after just do `discard`
[07:20:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3v1V
[07:20:43] <FromDiscord> <undersquire> discard on what
[07:20:49] <FromDiscord> <undersquire> u mean for ur bitset?
[07:21:00] <FromDiscord> <Elegantbeef> discard instead of break
[07:21:09] <FromDiscord> <Elegantbeef> you can use `discard` as an empty statement
[07:21:29] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3v1W
[07:21:30] <FromDiscord> <undersquire> ah
[07:21:55] <FromDiscord> <undersquire> ill probaby just use that
[07:22:06] <FromDiscord> <undersquire> as im only ever going to have nop do nothing
[07:22:11] <FromDiscord> <Elegantbeef> As you should!
[07:22:17] <FromDiscord> <undersquire> so a bitset is a bit overkill xd
[07:22:31] <FromDiscord> <Elegantbeef> Yea ofc, i didnt know you didnt have logic after
[07:22:32] <FromDiscord> <undersquire> tho if i ever had more than 1 skip opcodes then i would use a bitset
[07:22:47] <FromDiscord> <Elegantbeef> dont even need it in this case
[07:23:01] <FromDiscord> <Elegantbeef> you can do `case of OpCode.nop, OpCode.sillyThing`
[07:23:06] <FromDiscord> <undersquire> yeah
[07:23:09] <FromDiscord> <undersquire> treu
[07:23:12] <FromDiscord> <undersquire> (edit) "treu" => "true"
[07:47:28] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v22
[08:08:01] <FromDiscord> <ajusa> It is not required, removing just the `-lrt` from the gcc command compiles my code successfully. I glanced through the manual and didn't see any options for removing a cflag, only options for adding them.
[08:14:01] <FromDiscord> <ajusa> Got around it by setting my os to android based on https://github.com/nim-lang/Nim/blob/8ccde68f132be4dba330eb6ec50f4679e564efac/lib/posix/posix_other.nim#L22↵That's super hacky to get code compiling on the 3DS 😅
[08:15:14] <FromDiscord> <Elegantbeef> What are you using that's import posix?
[08:17:26] <FromDiscord> <Elegantbeef> Wait are you not doing `--os:any`?
[08:18:05] <FromDiscord> <ajusa> nope since I'm using pixie, which requires the `os` module
[08:18:15] <FromDiscord> <Elegantbeef> Ah
[08:18:24] <FromDiscord> <ajusa> So I get an error saying that the `os` module hasn't been ported to my operating system.
[08:20:43] <FromDiscord> <Elegantbeef> Do you know where it imports it?
[08:23:13] <FromDiscord> <ajusa> I assume to read and write files? but no I haven't checked actually
[08:23:50] <FromDiscord> <ajusa> ah it imports it on line 1 of pixie.nim lol
[08:24:05] <FromDiscord> <Elegantbeef> Yea there you go
[08:25:01] <FromDiscord> <Elegantbeef> Yea i'd throw os into a when statement and fix all erroring code
[08:26:11] <FromDiscord> <undersquire> do you have to put a  next to all fields of an object if its in another module and being used in different module?
[08:26:30] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:27:28] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:27:43] <FromDiscord> <Elegantbeef> `` is the export marker it's used to make any top level statement accessible in another module
[08:28:03] <FromDiscord> <Elegantbeef> so for object fields you mark any you want to expose
[08:28:30] <FromDiscord> <undersquire> oh so u do have to mark each field
[08:28:30] <FromDiscord> <undersquire> ok
[08:28:33] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3v26
[08:28:59] <FromDiscord> <undersquire> also for object variants, can u combine all of the variant fields into one?
[08:29:09] <FromDiscord> <Elegantbeef> no they presently cannot share names
[08:29:15] <FromDiscord> <undersquire> oh ok
[08:29:20] <FromDiscord> <undersquire> so i cant just name them all value: Type
[08:29:22] <FromDiscord> <undersquire> rip
[08:31:55] <FromDiscord> <Elegantbeef> So yea ajusa you can do `when hostOs = "any"` for those ops
[08:33:10] <FromDiscord> <Elegantbeef> Dont know if there is a defined for any
[08:34:22] <FromDiscord> <Elegantbeef> Seems it might be `Any`
[08:34:23] <FromDiscord> <ajusa> alright, I'll try that out if `os:android` fails me lol
[08:34:34] <FromDiscord> <Elegantbeef> Well i'd just do it to do it properly \:D
[08:35:14] <FromDiscord> <ajusa> I'm pretty happy though, I've got a red rectangle that changes color on my 3ds when I hit a button with Pixie. The only issue is that I can see the pixels being changed... something to fix later I guess
[08:35:34] <FromDiscord> <Elegantbeef> "Can see the pixels being changed"
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:10] <FromDiscord> <Elegantbeef> It's that slow or it's a bug?
[08:36:13] <FromDiscord> <ajusa> oops I forgot to enable double buffering, this is pretty nice
[08:36:26] <FromDiscord> <ajusa> that's my fault, not pixie's
[08:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:29] <FromDiscord> <Elegantbeef> So i guess cpu rendered images isnt awful considering the size of the displays
[08:38:40] <FromDiscord> <ajusa> yeah actually, I'm pretty happy that I got this proof of concept running, NimConf 2022 talk maybe 🙂
[08:39:01] <FromDiscord> <ajusa> although exelotl already beat me with GBA dev
[08:39:08] <FromDiscord> <Elegantbeef> Only if you make 3 dsalaxy
[08:43:17] <FromDiscord> <ajusa> oh god it runs at 1 fps when trying to render a PNG
[08:44:17] <FromDiscord> <ajusa> and I'm already using `-d:danger --gc:arc`↵guess I'll need to benchmark
[08:45:45] <FromDiscord> <Elegantbeef> no `-d:lto`?
[08:46:03] <FromDiscord> <Elegantbeef> or maybe `--passC:-flto --passL:-flto`
[08:47:18] <FromDiscord> <ajusa> okay with that it is at 1.25 fps
[08:47:42] <FromDiscord> <Elegantbeef> Time to utiilize that gpu
[08:48:24] <FromDiscord> <ajusa> 😦 3ds gpu is hard
[08:48:44] <FromDiscord> <ajusa> but yes that does seem like the most sane option - pixie for drawing text, 3ds gpu for everything else
[08:50:40] <FromDiscord> <Elegantbeef> It's not much more complicated than opengl
[08:51:54] <FromDiscord> <ajusa> well I don't have experience with OpenGL either, this would be my first foray into lower level graphics APIs. I come from Love2D which is about as high level as you can get
[08:53:38] <FromDiscord> <Elegantbeef> Well you've now made me want to toy with this api with my 3D framework, so i now hate you
[08:54:17] <FromDiscord> <Rika> Lol
[08:59:08] <FromDiscord> <ajusa> I'll chuck some of my code up on Github now in case you want to have a look: https://github.com/ajusa/vnds-player/tree/master/src/hello
[08:59:25] <FromDiscord> <ajusa> super ugly stuff that I'm going to clean up soon
[09:00:41] <FromDiscord> <Elegantbeef> Seems like you'll have to get bindings for citro3d
[09:03:14] <FromDiscord> <undersquire> is it not possible to case on value types?
[09:03:16] <FromDiscord> <Elegantbeef> Supposedly it's opengl1.1 compliant but no clue if that's usable
[09:04:12] <FromDiscord> <Elegantbeef> ordinals and strings only without macros, if you want pattern matching checkout https://nim-lang.github.io/fusion/src/fusion/matching.html
[09:10:16] <FromDiscord> <undersquire> sent a code paste, see https://paste.rs/hsW
[09:10:17] <FromDiscord> <undersquire> XD
[09:12:55] <FromDiscord> <Elegantbeef> You have to do when in that case
[09:13:16] <FromDiscord> <undersquire> oh ok
[09:13:23] <FromDiscord> <Elegantbeef> `when T is int8: discard elif T is float: discard else: discard`
[09:13:36] <FromDiscord> <Elegantbeef> Though a case statement macro could be made for that of course
[09:14:07] <FromDiscord> <undersquire> ill just use when is etc
[09:22:55] *** Joins: Frnt (~Frenetick@gw.ptr-80-238-209-252.customer.ch.netstream.com)
[09:30:49] <FromDiscord> <asie> In reply to @Elegantbeef "Supposedly it's opengl1.1 compliant": The official development kit is. That's not what you're gonna be using.
[09:32:23] <FromDiscord> <asie> I've done a fair bit of 3DS dev and Nim is on my agenda, heh
[09:32:31] <FromDiscord> <asie> (edit) "I've done a fair bit of 3DS ... dev" 03added "(homebrew)"
[09:33:39] <FromDiscord> <Elegantbeef> Yea i figured considering the fact citro3d was the best thing i could find
[09:33:57] <FromDiscord> <Elegantbeef> Ah nice means you can help ajusa 😜
[09:34:11] <FromDiscord> <Elegantbeef> @undersquire\: couldnt help myself https://play.nim-lang.org/#ix=3v2l there we go
[09:36:04] <FromDiscord> <asie> In reply to @ajusa "but yes that does": citro2d includes hardware accelerated text drawing
[09:36:21] <FromDiscord> <undersquire> In reply to @Elegantbeef "Ah nice means you": ty lol
[09:36:43] <FromDiscord> <Elegantbeef> Yea it seems very much like it makes more sense to use the homebrew libraries over pixie due to hardware limitations
[09:36:46] <FromDiscord> <asie> and yes, copying byte-by-byte to the framebuffer will be slow
[09:36:49] <FromDiscord> <asie> especially on Old 3DS speeds
[09:36:53] <FromDiscord> <asie> the Old 3DS is slow
[09:38:05] <FromDiscord> <Elegantbeef> There is a lot of code to bind but it's relatively tame from my glances at it, not too many C macros
[09:38:46] <FromDiscord> <asie> yeh
[09:39:11] <FromDiscord> <Elegantbeef> Nothing c2nim and a weekend or two could get done 😀
[09:39:15] <FromDiscord> <asie> libctru is mostly bindings and helper methods
[09:39:27] <FromDiscord> <asie> citro3d is not bindings, but it's also clean enough
[09:39:30] <FromDiscord> <asie> likewise citro2d
[09:42:00] <FromDiscord> <asie> I'd write more Nim but I'm struggling to find a good structure for the project I'm eyeing it for, heh
[09:42:18] <FromDiscord> <Elegantbeef> Shame
[09:43:40] <FromDiscord> <asie> Ehh, it's mostly that it's a port of a 1991 engine which deals exclusively in uint8s and int16s
[09:43:53] <FromDiscord> <asie> casting is fun!
[09:44:06] <FromDiscord> <Elegantbeef> What's the issue then?
[09:45:54] <FromDiscord> <asie> Mostly the casting; it's doing it explicitly throughout the codebase, or defining a bunch of custom converters and operator implementations to mimic the "broken, C/Pascal-style" casting the engine expects - but then performance tanks unless you LTO
[09:47:10] <FromDiscord> <Elegantbeef> well `cast` is free so that's odd
[09:47:17] <FromDiscord> <asie> Cast is free; a converter is not.
[09:47:33] <FromDiscord> <Elegantbeef> do you inline the converters?
[09:47:43] <FromDiscord> <asie> hmm.
[09:47:53] <FromDiscord> <asie> ... Good point.
[09:47:59] <FromDiscord> <asie> Didn't realize you can do that
[09:48:05] <FromDiscord> <asie> Sorry
[09:48:20] <FromDiscord> <Elegantbeef> Just `converter name(args): T `{.inline.}` =`
[09:48:27] <FromDiscord> <asie> Yeah
[09:48:35] <FromDiscord> <Elegantbeef> I figure it's just a fancy procedure
[09:48:59] <FromDiscord> <asie> Anyhow - the other issue is more based in architecturing code
[09:49:10] <FromDiscord> <asie> but that's just my indecisiveness... no PM to slap me and tell me this is due yesterday ^^;
[09:49:25] <FromDiscord> <asie> not really a Nim problem
[09:51:22] <FromDiscord> <asie> lack of experience with Nim doesn't help, of course
[09:51:35] <FromDiscord> <asie> I wrote an IRC bot in it once and another small tool, but nothing large
[09:51:45] <FromDiscord> <Elegantbeef> Well you can always ask here for help
[09:52:29] <FromDiscord> <Elegantbeef> Though doesnt seem to be many people here as of late so "people" seems to mostly mean Rika and I 😀
[09:53:44] <FromDiscord> <asie> That's a bit worrying
[09:55:38] <FromDiscord> <Elegantbeef> Yea how will cunningham's law kick in for me?!
[10:18:20] <FromDiscord> <Rika> I do not exist
[10:30:15] <FromDiscord> <generic linux user> noooo😭
[10:30:28] <FromDiscord> <generic linux user> dont say to me you are ai anime girl
[11:06:07] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:14:21] <FromDiscord> <Rika> What will you do if I am
[12:15:06] <FromDiscord> <haxscramper> In reply to @arkanoid "<@608382355454951435>, I'm spending some": No specific references, I just did it based on w3c xsd standard documentation and schema I had (from doxygen). Basically fixed it until it worked as I wanted while testing it on the doxygen output
[12:16:18] <arkanoid> lots of if this than that, i see. Yeah xsd schema is a mess
[12:26:16] <FromDiscord> <ynfle (ynfle)> Does andreaferretti come on here?
[13:44:42] <FromDiscord> <generic linux user> In reply to @Rika "What will you do": 😳
[13:50:03] *** Joins: max22- (~maxime@2a01cb0883359800871a86167180f0b2.ipv6.abo.wanadoo.fr)
[14:03:22] <FromDiscord> <KnorrFG> hey, how can I define a type alias for an int that must be in range 1..10 ?
[14:06:37] <FromDiscord> <ynfle (ynfle)> `range[1..10`
[14:06:48] <FromDiscord> <ynfle (ynfle)> \`range[1..10]`
[14:07:44] <FromDiscord> <ynfle (ynfle)> Or just `1..10`
[14:08:14] <FromDiscord> <KnorrFG> Ah thanks. No `type Foo = 1..10` didnt work
[14:08:27] <FromDiscord> <KnorrFG> but `type Foo = range[1..10]` did
[14:08:30] <FromDiscord> <ynfle (ynfle)> Depends on the context
[14:08:39] <FromDiscord> <ynfle (ynfle)> `range[1..10]` should work
[14:08:44] <FromDiscord> <ynfle (ynfle)> Oh ok
[14:08:55] <FromDiscord> <ynfle (ynfle)> For proc params `1..10` works
[14:39:21] <FromDiscord> <konsumlamm> `1..10` is a slice, not a range type
[14:39:54] <FromDiscord> <ynfle (ynfle)> I know, but it will work for proc params instead of range
[14:40:46] <FromDiscord> <konsumlamm> i doubt it
[14:40:51] <FromDiscord> <konsumlamm> can you show what you mean?
[14:41:02] <FromDiscord> <ynfle (ynfle)> How can I see why a type isn't a concept? I remember some `{.explain.}` pragma or something like that
[14:42:04] <FromDiscord> <ynfle (ynfle)> @konsumlamm https://play.nim-lang.org/#ix=3v3o
[14:46:44] <FromDiscord> <konsumlamm> huh, didn't think that would compile
[15:18:06] <FromDiscord> <ynfle (ynfle)> I know right
[15:18:54] <FromDiscord> <ynfle (ynfle)> How can I use `{.explain.}` pragma for concepts
[15:21:05] <FromDiscord> <Rika> Isn’t it explained on the experimental manual
[15:22:07] <FromDiscord> <ynfle (ynfle)> Can it be used if it doesn't compile? How Can I use it for a proc that needs to be discarded?
[15:23:58] <FromDiscord> <JonasL> How do i take a reference to an existing ref object without the ptr type, so that the ref object is aware of the reference and doesnt free up before the reference counter is 0 (if u use arc)
[15:25:26] <FromDiscord> <ynfle (ynfle)> Why don't you just make it a ref object?
[15:26:58] <FromDiscord> <JonasL> The object itself is a reference object but i want to access the object with a 2nd pointer.
[15:27:00] <FromDiscord> <Rika> In reply to @JonasL "How do i take": What do you mean?
[15:27:10] <FromDiscord> <Rika> Why does it have to be a double indirection
[15:27:33] <FromDiscord> <Rika> Just pass the ref regularly
[15:27:56] <FromDiscord> <JonasL> Put what if i want to store the reference into a 2nd object
[15:28:46] <FromDiscord> <ynfle (ynfle)> So store it in an object
[15:28:54] <FromDiscord> <Rika> Okay I am confused, can you write code and explain the intended behaviour
[15:29:35] <FromDiscord> <JonasL> E.g. this in c++
[15:29:51] <FromDiscord> <JonasL> class Test { int &t;};
[15:30:13] <FromDiscord> <Rika> type Test = object ↵  t: ref int
[15:31:14] <FromDiscord> <ynfle (ynfle)> So what's the issue?
[15:42:20] <FromDiscord> <JonasL> How do i init t with the given variable var x: int = 0
[15:43:42] <FromDiscord> <Rika> Using user defined initialisation procedure
[15:45:41] <FromDiscord> <JonasL> Ok thanks
[16:28:06] *** Quits: max22- (~maxime@2a01cb0883359800871a86167180f0b2.ipv6.abo.wanadoo.fr) (Ping timeout: 276 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:42:08] *** Joins: rockcavera (~rc@192.12.115.218)
[16:42:09] *** Quits: rockcavera (~rc@192.12.115.218) (Changing host)
[16:42:09] *** Joins: rockcavera (~rc@user/rockcavera)
[16:48:11] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[16:48:36] *** Joins: rockcavera (~rc@192.12.115.218)
[16:48:37] *** Quits: rockcavera (~rc@192.12.115.218) (Changing host)
[16:48:37] *** Joins: rockcavera (~rc@user/rockcavera)
[16:50:09] <FromDiscord> <ajusa> In reply to @asie "citro2d includes hardware accelerated": Ah interesting, I'll have to dig more into that when I get a chance then. I really like Pixie and how simple it is though, especially as far as just loading an image and drawing it. There's no easy way to load a PNG and draw it using Citro3d as far as I can tell, you need to convert it to a t3x file which is what I'm trying to avoid
[16:51:03] <FromDiscord> <asie> In reply to @ajusa "Ah interesting, I'll have": you need to write your own loader; why would you load a PNG directly anyway? is it user-provided?
[16:51:17] <FromDiscord> <ajusa> Yes
[16:51:19] <FromDiscord> <asie> ah
[16:51:25] <FromDiscord> <asie> in that case libpng has a fairly simple API...
[16:51:28] <FromDiscord> <asie> you could wrap that
[16:51:47] <FromDiscord> <asie> the main bottleneck for the conversion is that the 3DS does not store textures linearly
[16:52:00] <FromDiscord> <ajusa> Well Pixie has a PNG loader that gives me an RGBA8 buffer, but I don't know how to draw that using citro
[16:52:04] <FromDiscord> <asie> it uses 8x8 tiles with Morton order
[16:52:07] <FromDiscord> <ajusa> (edit) "citro" => "citro3d"
[16:52:17] <FromDiscord> <asie> so you first need to do a hardware-accelerated display transfer (the fastest way to convert it; you could do it CPU-side but that's sloooooow)
[16:52:32] <FromDiscord> <ajusa> Apparently there's a method that will do that swizzling on hardware but I can't find it
[16:52:53] <FromDiscord> <asie> ah, yes
[16:52:58] <FromDiscord> <asie> documentation is scarce, be prepared
[16:53:13] <FromDiscord> <ajusa> I swear it got removed or something
[16:53:18] <FromDiscord> <asie> no it didn't
[16:53:25] <FromDiscord> <asie> <https://github.com/asiekierka/atari800/blob/ee116ce923ccaafd76e2c44d51c71fe969f07ea2/src/3ds/grapefruit.c#L15-L53> this isn't the cleanest code but it should give you an idea of how to do it
[16:53:53] <FromDiscord> <asie> the crucial parts if you already have an RGBA8 buffer are the TexInit and the DisplayTransfer
[16:54:24] <FromDiscord> <asie> linearAlloc/linearFree is also key - the GPU operates on physical RAM, not virtual RAM
[16:54:55] <FromDiscord> <ajusa> Ah, that's super helpful actually
[16:55:21] <FromDiscord> <asie> really though if you can pre-convert the assets... from what i've seen you're doing a VNDS loader?
[16:55:23] <FromDiscord> <asie> make a PC-side converter
[16:55:39] <FromDiscord> <ajusa> It's too slow 😦
[16:55:46] <FromDiscord> <asie> too slow?
[16:55:49] <FromDiscord> <ajusa> Some games have thousands and thousands of files
[16:56:01] <FromDiscord> <asie> still - a console will read most of them anyway
[16:56:12] <FromDiscord> <ajusa> Even on my laptop it takes 30-40 minutes to resize and convert all of the images to t3x
[16:56:22] <FromDiscord> <asie> threading
[16:56:26] <FromDiscord> <ajusa> I'd much rather do it at runtime
[16:56:31] <FromDiscord> <ajusa> That's with GNU parallel
[16:56:34] <FromDiscord> <asie> huh
[16:56:36] <FromDiscord> <asie> that's odd
[16:56:41] <FromDiscord> <asie> oh, one more thing
[16:56:46] <FromDiscord> <asie> filesystem accesses on 3DS are wholly uncached
[16:56:57] <FromDiscord> <asie> so you can either do userland caching via `setvbuf`
[16:57:01] <FromDiscord> <asie> or be very conservative with `fread` calls
[16:57:11] <FromDiscord> <asie> but of course this means any `fopen` or directory lookup will be slow
[16:57:35] <FromDiscord> <ajusa> Thankfully visual novels tend to be linear so caching doesn't affect me too much
[16:58:15] <FromDiscord> <asie> I wonder if the slowness with t3x conversion is due to `-z auto`
[16:58:20] <FromDiscord> <asie> it'd be trying all the compression algorithms to pick the best one then
[16:58:21] <FromDiscord> <ajusa> But seriously thank you so much, I've gotten more questions answered in 10 minutes than a weekend of searching and reading through code
[16:58:39] <FromDiscord> <asie> I wish I could point you to a community but the only one with good code quality I'm aware of is an invite-only cult
[16:58:50] <FromDiscord> <asie> you can try the devkitPro forums but they might not like the fact you're using Nim
[16:59:01] <FromDiscord> <ajusa> Yeah, plus the forums are kind of dead
[16:59:08] <FromDiscord> <asie> nah the leaders will answer your posts
[16:59:23] <FromDiscord> <ajusa> Hey do you know what an unaligned access error is?
[16:59:28] <FromDiscord> <asie> yes
[16:59:33] <FromDiscord> <asie> ARM requires aligned memory accesses, unlike x86
[16:59:37] <FromDiscord> <asie> so if you're reading a 32-bit int
[16:59:53] <FromDiscord> <asie> you can read it from address `0x00000000`, `0x00000004`, etc - multiples of 4, or the int's size
[17:00:02] <FromDiscord> <asie> you can't read it from `0x00000001` though - that's not a multiple of 4 - it's unaligned
[17:00:06] <FromDiscord> <asie> writing likewise
[17:00:20] <FromDiscord> <asie> not sure if it holds to every ARM ever made but it holds on the 3DS
[17:00:24] <FromDiscord> <ajusa> is there any way I can get around that or force it to read from an unaligned address?
[17:00:25] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[17:00:31] <FromDiscord> <asie> you need to read individual bytes and shift them
[17:00:35] <FromDiscord> <asie> this is of course slower
[17:00:38] <FromDiscord> <ajusa> https://github.com/treeform/pixie/issues/189
[17:01:01] <FromDiscord> <ajusa> I opened this issue for Pixie along with the code change that made the problem go away, and the solution was to force it to read the individual bytes
[17:01:03] <FromDiscord> <asie> or just ensure all data you're processing is always aligned
[17:01:07] <FromDiscord> <asie> which is faster 🙂
[17:01:09] <FromDiscord> <asie> but again, requires planning ahead
[17:01:19] <FromDiscord> <ajusa> well it's a PNG file so that isn't possible I believe
[17:01:26] <FromDiscord> <asie> as i said
[17:01:44] <FromDiscord> <asie> the 3DS isn't the kind of platform where you just do whatever you want and expect it to be performant
[17:01:52] <FromDiscord> <asie> the Old 3DS has a 266MHz ARM CPU with no L2 cache
[17:01:58] <FromDiscord> <asie> it's multiple times slower than the RasPi 1 (!)
[17:02:08] <FromDiscord> <ajusa> yeah, that's becoming painfully apparent 😅
[17:02:20] <FromDiscord> <asie> the New 3DS is much faster, 3x faster clock speed and 2MB L2 cache
[17:02:25] <FromDiscord> <ajusa> that's the one I have
[17:02:26] <FromDiscord> <asie> but by default your homebrew will run at Old 3DS speeds
[17:02:31] <FromDiscord> <asie> this is for compatibility reasons
[17:02:34] <FromDiscord> <Rika> In reply to @asie "you can't read it": ngl i thought x86_64 also required this
[17:02:39] <FromDiscord> <asie> `osSetSpeedupEnable(1);` is what you need
[17:02:50] <FromDiscord> <asie> then it will unlock New 3DS speeds - even then, though, don't forget users stuck on Old 3DSes or 2DSes
[17:02:53] <FromDiscord> <asie> if you can
[17:03:01] <FromDiscord> <asie> and I mean VNDS ran on the original DS, I'm sure you can, just code well
[17:03:35] <FromDiscord> <Rika> In reply to @asie "and I mean VNDS": rude lmao
[17:03:45] <FromDiscord> <asie> I didn't mean to be rude 😦
[17:03:46] <FromDiscord> <ajusa> Yeah for sure, the main issue I was having was converting the PNG into something that can be drawn at runtime (like the original VNDS). Now that you've resolved that I'm sure that the rest will be pretty easy
[17:03:57] <FromDiscord> <asie> It was meant to be motivational
[17:04:02] <FromDiscord> <Rika> In reply to @asie "I didn't mean to": im jokin im jokin
[17:04:13] <FromDiscord> <ajusa> The rest of my code is pretty well optimized lol, it's just this stupid drawing stuff that's new to me
[17:05:23] <FromDiscord> <asie> software drawing is always slow but on gigahertz machines it's not noticeable
[17:05:26] <FromDiscord> <tandy> what community is that?↵(@asie)
[17:05:39] <FromDiscord> <asie> In reply to @tandy "what community is that?": devkitPro has an invite-only Discord server
[17:05:49] <FromDiscord> <asie> I've used to hang out there but got tired of the attitude
[17:06:03] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3v3U
[17:06:13] <FromDiscord> <ajusa> from https://gcc.gnu.org/onlinedocs/gcc-4.8.5/gcc/ARM-Options.html
[17:07:09] <FromDiscord> <asie> That's interesting
[17:07:22] <FromDiscord> <tandy> @ajusa\: are you making a 3ds game? sounds cool
[17:07:23] <FromDiscord> <asie> I'm not sure if the 3DS's CPU is capable of unaligned access
[17:07:32] <FromDiscord> <asie> At least one source claims it is
[17:08:15] <FromDiscord> <ajusa> yeah I have no clue if this flag does anything for the 3DS specifically, but enabling it didn't actually fix the issue so my guess is it works for other ARM CPUs
[17:08:31] <FromDiscord> <ajusa> In reply to @tandy "<@102899813149855744>\: are you making": Yeah, I'm working on a visual novel engine basically 😄
[17:08:36] <FromDiscord> <asie> but from what I know it is not
[17:08:43] <FromDiscord> <asie> The flag controls what the compiler emits for reading from packed data structures
[17:08:48] <FromDiscord> <asie> Not really what the CPU is capable of
[17:09:28] <FromDiscord> <asie> (edit) "but from what I know it is not" => "I'd need to do more research tho"
[17:10:04] <FromDiscord> <tandy> ohhh cool, did you see this one? https://gitlab.com/chromaengine↵(@ajusa)
[17:10:11] <FromDiscord> <tandy> also do you have a repo for it?
[17:10:42] <FromDiscord> <asie> Ah, according to gbatek the bit for unaligned memory access on 3DS is disabled, so it mimics ARMv5 behaviour here
[17:12:04] *** Frnt is now known as Freneticks
[17:12:26] <FromDiscord> <ajusa> Yeah, I've got two:↵https://github.com/ajusa/vnds-player - the Nim rewrite↵https://github.com/ajusa/vnds-love - the original, written in Lua with Love2D/LovePotion
[17:12:28] <nrds> <12R2D299> 4GitHub: 7"A VNDS engine, rewritten from the ground up to be compatible with the 3DS"
[17:13:17] <FromDiscord> <asie> anyhow, the code I sent you is made for citro3d; for citro2d you'd need an additional wrapping layer
[17:14:29] <FromDiscord> <asie> <https://github.com/asiekierka/uxnds/blob/platform/3ds/src/emulator.c#L211-L212> something like this (again, apologies for the code quality)
[17:14:42] <FromDiscord> <ajusa> yup there are only a few functions in citro2d anyway, I don't think I'll have an issue with it
[17:14:46] <FromDiscord> <asie> as C2D images contain additional information - the texture coordinates
[17:25:06] *** Joins: max22- (~maxime@2a01cb0883359800bf5ae26a1ac7a2a8.ipv6.abo.wanadoo.fr)
[17:28:05] *** Joins: arkurious (~arkurious@user/arkurious)
[17:39:48] *** Quits: max22- (~maxime@2a01cb0883359800bf5ae26a1ac7a2a8.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:57:47] *** Joins: max22- (~maxime@2a01cb0883359800715f705a843f6976.ipv6.abo.wanadoo.fr)
[17:58:49] *** Quits: max22- (~maxime@2a01cb0883359800715f705a843f6976.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:59:08] *** Joins: max22- (~maxime@2a01cb0883359800a99609bd1c0e38e0.ipv6.abo.wanadoo.fr)
[18:01:04] *** Joins: tiorock (~rc@192.12.115.218)
[18:01:05] *** Quits: tiorock (~rc@192.12.115.218) (Changing host)
[18:01:05] *** Joins: tiorock (~rc@user/rockcavera)
[18:01:05] *** rockcavera is now known as Guest7017
[18:01:05] *** Quits: Guest7017 (~rc@user/rockcavera) (Killed (erbium.libera.chat (Nickname regained by services)))
[18:01:05] *** tiorock is now known as rockcavera
[18:10:12] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[18:18:36] *** Joins: tiorock (~rc@192.12.115.218)
[18:18:37] *** Quits: tiorock (~rc@192.12.115.218) (Changing host)
[18:18:37] *** Joins: tiorock (~rc@user/rockcavera)
[18:18:37] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (calcium.libera.chat (Nickname regained by services)))
[18:18:37] *** tiorock is now known as rockcavera
[18:27:11] *** Quits: max22- (~maxime@2a01cb0883359800a99609bd1c0e38e0.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[18:57:55] <FromDiscord> <planetis> dumb question, if i have 120byte object, should i make it a ref? Or it doesnt matter unless i am copying it?
[19:05:08] <FromDiscord> <Clonkk> Aren't ref mostly for heap allocated stuff ?
[19:17:48] <FromDiscord> <planetis> a ref is allocated on the heap and has reference semantics
[19:19:03] <FromDiscord> <Rika> In reply to @planetis "dumb question, if i": wdym it doesnt matter? nim will not copy if the object is large enough so you dont need to force ref on your own types for optimisation
[19:19:09] <FromDiscord> <planetis> duh, water is wet 😄
[19:21:07] <FromDiscord> <planetis> i mean accidentally making a copy of it by assigning to a variable
[19:21:35] <FromDiscord> <planetis> anyway i made https://github.com/planetis-m/jsonecs please tell me opinions
[19:21:37] <FromDiscord> <Rika> {.byaddr.} i think is the pragma
[19:21:38] <nrds> <12R2D299> 4GitHub: 7"<No Description>"
[19:21:43] <FromDiscord> <Rika> for not copying? im not too sure
[19:21:53] <FromDiscord> <Rika> its been a few weeks since i really wrote any nim
[19:24:45] <FromDiscord> <planetis> thats a hack though
[19:31:54] <FromDiscord> <Clonkk> In reply to @planetis "thats a hack though": Another solution is to  implement ``=sink``,  ``=copy``  (or forbid them)
[19:32:02] <FromDiscord> <Clonkk> https://nim-lang.org/docs/destructors.html sums it up I think
[19:33:36] <FromDiscord> <planetis> thanks i restricted copy for now
[19:38:19] *** Joins: max22- (~maxime@2a01cb0883359800a6f3455c42ce2aff.ipv6.abo.wanadoo.fr)
[19:39:22] <arkanoid> is it better to FFI via header+importc or dylib+importc? what's the difference?
[19:41:50] <FromDiscord> <haxscramper> Dynlib can be used if you work with dynamic library, header is for header libraries.
[19:42:11] <FromDiscord> <haxscramper> You can use dynlib, in which case you don't need a header
[19:42:16] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:42:45] <FromDiscord> <haxscramper> But you still probably need a header for working with types from a library
[19:43:01] <FromDiscord> <haxscramper> structs/unions etc.
[19:44:11] <FromDiscord> <Clonkk> Sometimes you need both↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[19:48:32] <arkanoid> I have compiled .a and .so starting from .c .h, so I have all possible options, but not sure which is the best way to go
[19:49:17] <arkanoid> I'd like to bind all the types and functions declared in .h, I'm running nim2c on it but it seems confused by macros
[19:50:42] <arkanoid> it parses the huge type section successfully (90% of the .h file) but it errors out on first function declaration, possibly because of macro stubs. Here's an example
[19:50:45] <arkanoid> SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *_param_1);
[19:51:39] <arkanoid> SOAP_FMAC5 and SOAP_FMAC6 are just 2 empty macros (define as: # define SOAP_FMAC5)
[19:52:31] <arkanoid> I've tried with "c2nim --assumedef:SOAP_FMAC5 --assumedef:SOAP_FMAC6 soapStub.h" but no cake, same errors
[19:54:39] <arkanoid> I think I'm dealing with this: https://github.com/nim-lang/c2nim/blob/master/doc/c2nim.rst#def-directive
[19:54:52] <arkanoid> but unsure how to declare empty macro
[19:56:08] <arkanoid> by random guessing I did it!
[19:56:12] <arkanoid> Hint: operation successful (10850 lines compiled; 64 milliseconds, 407 microseconds, and 688 nanoseconds sec total; 17.434MiB; ) [SuccessX]
[20:32:00] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:09:00] <FromDiscord> <fae> Came across this and I was like whoah hot loading in a compiled language https://nim-lang.org/docs/hcr.html
[21:09:07] <FromDiscord> <fae> Pretty damn cool
[21:10:23] <FromDiscord> <fae> Unfortunately it doesn’t work very consistently on macOS and usually crashes when trying to call `performCodeReload` lol
[21:11:19] <FromDiscord> <konsumlamm> it's pretty unstable in general (not only macOS) afaik
[21:12:51] <FromDiscord> <fae> Yea what a shame because it’s a killer feature for a graphics app
[21:15:53] <FromDiscord> <Ayy Lmao> How do you go about proving an iterator as disjoint for a `parallel` block?
[21:16:11] <FromDiscord> <ITR> Got a spam bot message from `sheldon#9646`
[21:17:15] <FromDiscord> <ITR> <@&371760044473319454> https://media.discordapp.net/attachments/371759389889003532/872883460988084284/unknown.png
[21:20:27] <FromDiscord> <ShalokShalom> spammer
[21:20:34] <FromDiscord> <ShalokShalom>  https://media.discordapp.net/attachments/371759389889003532/872884297793691689/Screenshot_20210805_184535.png
[21:26:54] <FromDiscord> <dav1d> same @obmorok1308 https://media.discordapp.net/attachments/371759389889003532/872885885866221588/unknown.png
[21:46:08] <FromDiscord> <Daniel> lorens1990#3509 is spammer, please kick and block this user from server https://discord.com/channels/@me/872890407049129994/872890415962009672 https://media.discordapp.net/attachments/371759389889003532/872890727238107166/unknown.png
[21:47:45] <FromDiscord> <Daniel> (edit) "lorens1990#3509" => "@lorens1990"
[21:53:03] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[21:53:59] *** Joins: xet7 (~xet7@user/xet7)
[22:18:12] *** Joins: tiorock (~rc@192.12.115.218)
[22:18:13] *** Quits: tiorock (~rc@192.12.115.218) (Changing host)
[22:18:13] *** Joins: tiorock (~rc@user/rockcavera)
[22:18:13] *** rockcavera is now known as Guest1511
[22:18:13] *** tiorock is now known as rockcavera
[22:20:31] <FromDiscord> <dom96> I honestly think banning these accounts is futile
[22:20:38] <FromDiscord> <dom96> but did it anyway
[22:21:04] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 272 seconds)
[22:21:09] *** Quits: Guest1511 (~rc@user/rockcavera) (Ping timeout: 258 seconds)
[22:37:08] *** Quits: rockcavera (~rc@user/rockcavera) (Read error: Connection reset by peer)
[22:37:37] *** Joins: tiorock (~rc@192.12.115.218)
[22:50:08] *** Quits: tiorock (~rc@192.12.115.218) (Read error: Connection reset by peer)
[22:50:33] *** Joins: rockcavera (~rc@192.12.115.218)
[22:50:34] *** Quits: rockcavera (~rc@192.12.115.218) (Changing host)
[22:50:34] *** Joins: rockcavera (~rc@user/rockcavera)
[23:01:59] *** Quits: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:02:23] *** Joins: krux02 (~krux02@p4ff8b737.dip0.t-ipconnect.de)
[23:13:03] <FromDiscord> <krisppurg> you can turn this off https://media.discordapp.net/attachments/371759389889003532/872912601959497828/unknown.png
[23:26:59] <FromDiscord> <theangryepicbanana> is there a way to obtain the `TNimType` type from `system/hti.nim`?
[23:30:09] <FromDiscord> <theangryepicbanana> definitely just need it for research purposes
[23:30:49] <FromDiscord> <theangryepicbanana> if not, is there a way to get a runtime representation of a type?
[23:33:31] <FromDiscord> <Elegantbeef> typeinfo might hellp
[23:34:44] <FromDiscord> <theangryepicbanana> In reply to @Elegantbeef "typeinfo might hellp": I tried typeinfo, but it's never exposed
[23:36:59] <FromDiscord> <theangryepicbanana> well actually it's exposed on js (I think), but that's a bit useless for me
[23:37:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Is it possible to install a local nim package that I'm working on with nimble?
[23:38:09] <FromDiscord> <Elegantbeef> `nimble devel` will sym link the project
[23:38:09] <FromDiscord> <Elegantbeef> or is it nimble develop
[23:38:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> What I mean by this is that editing the local package should propagate to other local packages that depend on it
[23:39:40] <FromDiscord> <Elegantbeef> Yea in the nimble package you're working on do `nimble develop` it will get symlinked and will use that folder
[23:43:45] *** Joins: Arrrrrrrr (~Arrrrrrrr@cm-81-9-193-152.telecable.es)
[23:44:24] *** Quits: Arrrrrrrr (~Arrrrrrrr@cm-81-9-193-152.telecable.es) (Client Quit)
