[00:00:16] <stdout> ah, i can use rand + epoch
[00:00:46] <stdout> any reason why that wouldn't work or could somehow ever create a duplicate value?
[00:02:36] <GinFuyou> uuid.uuid4()
[00:02:52] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[00:04:28] <GinFuyou> If you are not picking sequences you probably can get collisions anyway, question if it's improbable enough
[00:04:31] <stdout> my model already has uuid = models.UUIDField(default=uuid.uuid4(), editable=False, unique=True) I'm needing some way to reference the filefield from a model that was just submitted by form.
[00:04:52] <GinFuyou> ForeignKey?
[00:09:12] <stdout> i could generate the uuid in my view and save to the model from there. but i run into the issue of how to handle the unlikely event that a generated uuid is not unique
[00:10:07] <cellofellow> You'll get an exception; it's exceptional and probably deserves to just be logged and try again.
[00:15:23] <stdout> cellofellow, would that be a validationerror exception? https://docs.djangoproject.com/en/3.2/ref/exceptions/#validationerror
[00:16:27] <cellofellow> no, it'll be a database IntegrityError if memory serves
[00:17:06] <cellofellow> yeah, django.db.IntegrityError
[00:20:24] <GinFuyou> if you don't run validation. validate_unique should catch it too as validation error
[00:32:51] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[00:39:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[00:40:04] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:41:03] *** Joins: fikran (~fikran@user/fikran)
[00:41:23] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[00:45:46] *** Quits: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[00:49:30] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[00:51:00] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:53:21] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[00:54:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:55:25] *** Quits: dre (~dre@2001:8003:c932:c301:e309:8ed:b76f:cbc5) (Remote host closed the connection)
[00:58:45] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[01:05:14] *** Joins: djapo (~archangel@user/djapo)
[01:10:29] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:19:56] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[01:21:06] *** Quits: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr) (Quit: leaving)
[01:35:31] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[01:45:37] *** Quits: pycode (~pycode@2001:b07:5d28:551:c857:78db:bc04:4a38) (Ping timeout: 268 seconds)
[01:49:46] *** Quits: cellofellow (~user@68.69.167.233) (Remote host closed the connection)
[01:53:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[01:53:45] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:54:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:56:56] *** Joins: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net)
[01:57:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[01:59:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[02:01:53] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 264 seconds)
[02:02:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:03:55] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Quit: Client closed)
[02:05:41] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:05:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:05:58] *** vinleod is now known as vdamewood
[02:10:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:15:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[02:28:48] *** Joins: dre (~dre@2001:8003:c932:c301:f1bd:cd25:1a12:1468)
[02:29:23] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[02:39:09] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[02:39:28] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[02:42:22] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 265 seconds)
[02:44:05] <daniel2> Is there a way to get the row number of an entry in the model?
[02:45:37] <daniel2> Or I guess row number of the query.
[02:47:37] <nedbat> daniel2: for row_num, thing in enumerate(the_query):   # like this?
[02:48:17] <daniel2> Yes, from what I've seen while Googling.  I'm trying to read into the RowNumber window frame.
[02:48:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:48:32] <daniel2> OR windows, whatever it is, I'm still reading :)
[02:50:24] *** Joins: fikran (~fikran@user/fikran)
[02:50:41] *** pjs_ is now known as pjs
[02:55:32] <daniel2> I guess RowNumber won't work because I need the order after sorting.
[02:55:55] *** Joins: pipapipapipo (~peppbel@172.58.44.225)
[02:56:47] *** Quits: pipapipapipo (~peppbel@172.58.44.225) (Remote host closed the connection)
[02:57:11] *** Joins: pipapipapipo (~peppbel@172.58.44.225)
[02:58:17] *** Quits: pipapipapipo (~peppbel@172.58.44.225) (Remote host closed the connection)
[02:58:41] *** Joins: pipapipapipo (~peppbel@172.58.44.225)
[03:00:34] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[03:03:31] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[03:25:37] *** Quits: pipapipapipo (~peppbel@172.58.44.225) (Remote host closed the connection)
[03:37:54] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:43:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:46:21] <schinckel> row_number() OVER (ORDER BY ...)
[03:47:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[03:56:50] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 246 seconds)
[03:59:33] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 265 seconds)
[04:12:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:16:10] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[04:16:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[04:17:43] *** Quits: carljm (~carljm@163.114.132.5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:20:29] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[04:26:35] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[04:26:54] *** Joins: pidroid (~pidroid@user/pidroid)
[04:28:27] *** Joins: andrewgodwin (sid23792@django/member/andrewgodwin)
[04:34:01] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 265 seconds)
[04:39:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:47:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:49:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:49:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:49:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:50:23] *** Quits: Thala (~Mika@p5099462a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:51:16] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 265 seconds)
[04:51:16] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 265 seconds)
[04:53:36] *** Joins: pidroid (~pidroid@user/pidroid)
[04:57:29] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:58:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:59:44] *** Joins: fikran (~fikran@user/fikran)
[04:59:46] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[05:04:18] <daniel2> So with this: annotate(rank=Window(RowNumber(), partition_by=[F('id')], order_by=[F('networkuser__count').desc()]) <= If I do a for loop, network.rank is 1 every single time.
[05:15:06] *** Joins: pidroid0 (~pidroid@user/pidroid)
[05:18:05] *** Joins: pidroid5 (~pidroid@user/pidroid)
[05:18:20] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 265 seconds)
[05:18:56] *** pidroid5 is now known as pidroid
[05:21:43] *** Quits: pidroid0 (~pidroid@user/pidroid) (Ping timeout: 265 seconds)
[05:23:51] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[05:24:39] *** Joins: pidroid (~pidroid@user/pidroid)
[05:25:15] *** Joins: rje (~rje@50.35.241.164)
[05:27:57] *** Joins: pidroid4 (~pidroid@user/pidroid)
[05:31:46] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 252 seconds)
[05:32:21] *** pidroid4 is now known as pidroid
[05:35:12] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[05:36:09] *** Joins: pidroid (~pidroid@user/pidroid)
[05:37:48] *** Quits: pidroid (~pidroid@user/pidroid) (Client Quit)
[05:38:06] *** Joins: pidroid (~pidroid@user/pidroid)
[05:39:48] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:ac4e:9ce3:bd1f:52f5)
[05:41:45] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:ac4e:9ce3:bd1f:52f5) (Client Quit)
[05:42:59] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 265 seconds)
[05:45:21] *** Joins: pidroid (~pidroid@user/pidroid)
[05:47:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:47:55] *** Quits: pidroid (~pidroid@user/pidroid) (Client Quit)
[05:48:14] *** Joins: pidroid (~pidroid@user/pidroid)
[05:48:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:53:14] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[05:53:55] *** Joins: pidroid (~pidroid@user/pidroid)
[05:59:13] *** Joins: pidroid6 (~pidroid@user/pidroid)
[06:02:34] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 252 seconds)
[06:03:09] *** pidroid6 is now known as pidroid
[06:10:28] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: Ping timeout (120 seconds))
[06:13:25] *** Joins: pidroid (~pidroid@user/pidroid)
[06:14:51] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[06:16:15] *** Quits: pidroid (~pidroid@user/pidroid) (Client Quit)
[06:20:17] *** Joins: djapo (~archangel@user/djapo)
[06:49:27] *** Quits: kanzure (~kanzure@user/kanzure) (Ping timeout: 240 seconds)
[06:51:31] *** Joins: kanzure (~kanzure@user/kanzure)
[06:57:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:06:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:09:04] *** Joins: fikran (~fikran@user/fikran)
[07:14:30] *** Quits: jess (~jess@libera/staff/jess) (Quit: Lost terminal)
[07:15:35] *** Joins: jess (~jess@libera/staff/jess)
[07:19:57] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[07:34:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[07:36:29] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[07:43:13] *** Quits: jasonbra- (jasonbraga@user/jasonbraganza) (Quit: Au revoir …)
[07:45:10] *** Joins: jasonbraganza (~jasonbrag@user/jasonbraganza)
[07:50:07] *** Quits: cliluw (~cliluw@47.147.80.149) (Read error: Connection reset by peer)
[07:54:43] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:56:45] *** Quits: CapnKernel (foobar@gromit.mixdown.ca) (Ping timeout: 260 seconds)
[08:20:04] *** Quits: zircona (~zircona@c-73-122-128-26.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[08:30:37] *** Joins: djapo (~archangel@user/djapo)
[08:46:54] *** Joins: dre_ (~dre@1.145.102.166)
[08:49:16] *** Quits: dre (~dre@2001:8003:c932:c301:f1bd:cd25:1a12:1468) (Ping timeout: 252 seconds)
[08:49:34] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[08:49:50] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[08:49:59] *** Joins: dre__ (~dre@120.156.30.159)
[08:50:26] *** Joins: mattil (~mattil@airio.portalify.com)
[08:52:31] *** Quits: dre_ (~dre@1.145.102.166) (Ping timeout: 252 seconds)
[08:54:50] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[08:58:08] *** Joins: dor (~erg@78.11.12.207)
[09:01:13] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[09:01:47] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[09:16:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:18:24] *** Joins: fikran (~fikran@user/fikran)
[09:18:46] *** Joins: sandeepk (~sandeepk@202.14.122.10)
[09:20:23] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[09:29:21] *** Joins: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr)
[09:31:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi)
[09:34:15] *** Joins: CapnKernel (foobar@gromit.mixdown.ca)
[09:35:55] *** Quits: dre__ (~dre@120.156.30.159) (Quit: Leaving)
[09:49:40] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Remote host closed the connection)
[09:49:58] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[10:08:33] *** Quits: Grauwolf (~grauwolf@user/grauwolf) (Remote host closed the connection)
[10:09:34] *** Joins: Grauwolf (~grauwolf@user/grauwolf)
[10:20:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bc-198.dhcp.inet.fi) (Ping timeout: 265 seconds)
[10:24:28] *** Joins: pycode (~pycode@2001:b07:5d28:551:263b:5bb0:1e16:9c7a)
[10:32:04] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[10:38:06] *** Joins: beterraba (~beterraba@86.107.21.205)
[10:51:59] *** Quits: audiocat (~audio@2603-8081-1800-1546-9f5a-e373-8203-155a.res6.spectrum.com) (Ping timeout: 268 seconds)
[11:09:12] *** Joins: Atque (~Atque@user/atque)
[11:17:58] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[11:25:38] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[11:26:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:27:36] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Ping timeout: 245 seconds)
[11:27:44] *** Joins: fikran (~fikran@user/fikran)
[11:41:00] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[12:05:15] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:10:30] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 260 seconds)
[12:20:09] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[12:45:20] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:09:37] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[13:20:10] *** Joins: Rikem (~mike@user/rikem)
[13:20:58] *** Quits: sandeepk (~sandeepk@202.14.122.10) (Ping timeout: 252 seconds)
[13:26:56] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[13:35:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:36:25] *** Joins: sandeepk (~sandeepk@202.14.122.10)
[13:37:05] *** Joins: fikran (~fikran@user/fikran)
[13:43:01] *** Joins: dez (uid92154@user/dez)
[13:45:41] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-999e-f76f-466c-d4f9.res6.spectrum.com)
[13:53:15] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-999e-f76f-466c-d4f9.res6.spectrum.com) (Ping timeout: 256 seconds)
[13:58:43] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-999e-f76f-466c-d4f9.res6.spectrum.com)
[14:11:22] *** Joins: pidroid (~pidroid@user/pidroid)
[14:11:24] *** Joins: jmft2 (~JMFT@82.3.54.26)
[14:13:40] <jmft2> Hi there. I have a Django app with a bunch of models, `Spam`, let's say. There's an API view that serialises `Spam` into JSON format. Now I am writing client-side code that takes this JSON response; is there any way for the client-side code to use the models as they have been defined in myapp.models, outside of a Django app? I tried `from myapp.models import Pizza`, but this doesn't work.
[14:15:10] <jmft2> s/Pizza/Spam/ :-)
[14:16:30] *** Joins: slav0nic (slav0nic@python.su)
[14:27:38] <moldy> jmft2: there is no straight-forward way without having the client-side code depend on django
[14:29:51] <moldy> jmft2: it's also somewhat against the point of an API to have the client depend directly on the server code
[14:30:42] <moldy> in principle you could parse the models using the ast module or such, but it doesn't sound like a good idea to me :)
[14:35:41] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-999e-f76f-466c-d4f9.res6.spectrum.com) (Quit: Ping timeout (120 seconds))
[14:52:04] *** Joins: audiocat (~audio@2603-8081-1800-1546-624d-8c32-b6eb-1f11.res6.spectrum.com)
[14:54:44] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[15:00:06] *** Quits: pycode (~pycode@2001:b07:5d28:551:263b:5bb0:1e16:9c7a) (Ping timeout: 245 seconds)
[15:01:24] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[15:01:27] *** Joins: Atque (~Atque@user/atque)
[15:12:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[15:13:03] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[15:15:22] *** Quits: sandeepk (~sandeepk@202.14.122.10) (Ping timeout: 252 seconds)
[15:17:46] *** Joins: sandeepk (~sandeepk@202.14.122.10)
[15:44:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[15:46:26] *** Joins: fikran (~fikran@user/fikran)
[15:47:19] *** Joins: szymon (~ugh@staticline-31-183-189-254.toya.net.pl)
[15:47:39] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[15:49:56] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:50:32] *** Joins: node1 (~node1@user/node1)
[15:54:35] *** Joins: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2)
[16:04:04] *** Quits: sandeepk (~sandeepk@202.14.122.10) (Ping timeout: 265 seconds)
[16:07:52] *** Joins: Elzington (~Elzington@static-68-235-44-38.cust.tzulo.com)
[16:13:22] *** Joins: sandeepk (~sandeepk@202.14.122.10)
[16:13:22] *** Quits: sandeepk (~sandeepk@202.14.122.10) (Read error: Connection reset by peer)
[16:22:06] *** Quits: orsel (~vince@orsel.revenni.com) (Remote host closed the connection)
[16:32:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Quit: Leaving)
[16:48:57] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:03:40] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 252 seconds)
[17:03:54] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:04:22] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:07:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:14:47] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[17:15:11] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[17:17:21] *** Joins: Elodin (~weechat@user/elodin)
[17:22:12] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[17:46:43] <pycode> hello everybody
[17:46:49] <pycode> i have a datetime field called "created"
[17:46:55] <pycode> is there a way i can group by that field
[17:47:03] <pycode> mm-yyyy ?
[17:47:32] <b-rex> what do you mean by "group by that field" ?
[17:49:21] <pycode> b-rex,  i need to "extract" mm-yyyy because i need to to some aggregations
[17:49:24] <pycode> count/sum etc
[17:50:02] <b-rex> a DateTimeField maps back to a datetime object, which can be converted to a date
[17:50:17] <b-rex> or you could use strftime if you need a string like mm-yyyy
[17:51:22] <pycode> b-rex, i need to group by so i need to get mm-yyyy and group by that
[17:51:29] <pycode> so first question
[17:51:37] <pycode> having a datetime how can i get mm-yyy only ?
[17:53:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[17:55:47] *** Joins: fikran (~fikran@user/fikran)
[17:57:34] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[17:59:53] *** Joins: Elodin (~weechat@user/elodin)
[18:03:07] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 252 seconds)
[18:03:45] *** Joins: kostkon_ (~androirc@2a02:1388:8d:4ef0:1add:9158:3996:41db)
[18:03:53] <duoi> pycode i'm pretty sure it's something like queryset.filter(created__month=10, created__year=2021)
[18:04:37] *** Joins: stdout (~stdout@216.163.21.11)
[18:05:13] <pycode> duoi, i need to group by
[18:05:17] <pycode> i need to aggregate data
[18:05:47] <stdout> what's the best way to retry my process_form if IntegrityError exception is caught? https://paste.centos.org/view/e47f6edf
[18:11:43] <duoi> stdout something like this maybe https://dpaste.org/JRGg
[18:15:33] *** Quits: kostkon_ (~androirc@2a02:1388:8d:4ef0:1add:9158:3996:41db) (Read error: Connection reset by peer)
[18:17:04] *** Joins: kostkon_ (~androirc@2a02:1388:8d:4ef0:d387:d26b:83cc:61d4)
[18:25:17] <moldy> stdout: it's so unlikely that this ever happens that i'd consider it "not possible"
[18:25:35] <moldy> i.e. i'd just remove the try / except
[18:26:14] <moldy> stdout: also, if you're on postgres, i *think* you can just let the database assign the uuid
[18:27:36] *** Quits: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr) (Ping timeout: 245 seconds)
[18:28:47] <pycode> guys is there a way to avoid loading all the field of the model in a queryset?
[18:29:12] <pycode> https://bpa.st/O63Q
[18:29:14] <stdout> moldy, thanks. just read https://www.sohamkamani.com/uuid-versions-explained/ to understand uuid a bit better. i feel better about not checking for uniqueness now.
[18:29:17] <pycode> this works ^^
[18:29:27] <pycode> but i also have all the quote fields that i do not need
[18:29:38] <pycode> why does the last values do not filter the fields?
[18:30:01] <pycode> i only need the fields on annotate
[18:35:27] *** Joins: kostkon__ (~androirc@2a02:587:a104:3da6:5580:9753:e4ff:28db)
[18:36:00] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:06] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[18:36:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:36:51] *** Joins: wyre (~wyre@user/wyre)
[18:37:31] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[18:39:41] *** Quits: kostkon_ (~androirc@2a02:1388:8d:4ef0:d387:d26b:83cc:61d4) (Ping timeout: 264 seconds)
[18:43:00] *** kostkon__ is now known as kostkon_
[18:55:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:00:17] <pycode> hmmm using arrayagg() does not create the alias
[19:00:21] <pycode> how is that possible -_-
[19:02:19] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[19:15:54] *** Joins: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr)
[19:19:31] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:23:04] <pycode> i see ARRAY_AGG with no alias
[19:27:59] *** Joins: edigiacomo (~edg@host-79-46-65-242.retail.telecomitalia.it)
[19:34:52] *** Quits: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2) (Remote host closed the connection)
[19:35:07] *** Joins: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2)
[19:38:23] *** Quits: edigiacomo (~edg@host-79-46-65-242.retail.telecomitalia.it) (Quit: WeeChat 3.2)
[19:38:51] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: kenbolton (~kenbolton@2001:470:69fc:105::2d24) (Quit: Bridge terminating on SIGTERM)
[19:38:51] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[19:38:52] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[19:38:53] *** Quits: carl0s[m] (~carl0s@2001:470:69fc:105::305b) (Quit: Bridge terminating on SIGTERM)
[19:38:54] *** Quits: brownan (~brownan@2001:470:69fc:105::e01b) (Quit: Bridge terminating on SIGTERM)
[19:38:54] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Quit: Bridge terminating on SIGTERM)
[19:38:55] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: Bridge terminating on SIGTERM)
[19:38:55] *** Quits: code1 (~code1@2001:470:69fc:105::c807) (Quit: Bridge terminating on SIGTERM)
[19:41:23] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[19:41:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:42:57] *** Joins: kenbolton (~kenbolton@2001:470:69fc:105::2d24)
[19:48:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[19:49:18] *** Quits: gitly2 (~gitly@85.255.233.120) (Ping timeout: 265 seconds)
[19:50:13] *** Joins: carl0s[m] (~carl0s@2001:470:69fc:105::305b)
[19:50:14] <carl0s[m]> After writing up a ~30 - 40 page spec with screenshots, diagrams (BPMN-ish but not quite) and explanations of our existing system, I contacted a Django company to see if they were interested in being our new developers for a v2 re-make, whether we were anywhere close budget wise, etc. The response I got back was "the... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/7a94b47b0f0969f0840c4f1b11425a1bca7bf2a6)
[19:51:09] <carl0s[m]> Anyone recommend an agency/company with top notch front end skills?
[19:51:43] *** Joins: gitly2 (~gitly@85.255.233.120)
[19:52:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:52:37] *** Joins: Trieste (~T@user/pilgrim)
[19:58:20] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 260 seconds)
[20:00:56] *** Joins: Trieste (T@user/pilgrim)
[20:02:18] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[20:02:18] *** Joins: mambang[m] (~mambang@user/mambang)
[20:02:18] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[20:02:18] *** Joins: allegary (~allegary@apache/committer/gjm)
[20:02:18] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[20:02:18] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[20:02:18] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[20:02:18] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[20:02:32] *** Joins: code1 (~code1@2001:470:69fc:105::c807)
[20:03:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[20:03:11] *** Joins: szymon_ (~ugh@staticline-31-183-189-254.toya.net.pl)
[20:05:08] *** Joins: fikran (~fikran@user/fikran)
[20:05:15] *** Quits: szymon (~ugh@staticline-31-183-189-254.toya.net.pl) (Ping timeout: 265 seconds)
[20:06:02] *** Joins: Trieste_ (~T@user/pilgrim)
[20:07:02] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 246 seconds)
[20:11:07] *** Quits: szymon_ (~ugh@staticline-31-183-189-254.toya.net.pl) (Quit: szymon_)
[20:12:14] *** Joins: Trieste (T@user/pilgrim)
[20:12:38] *** Quits: Trieste_ (~T@user/pilgrim) (Ping timeout: 246 seconds)
[20:13:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:19:27] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[20:22:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:38:10] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 252 seconds)
[20:42:13] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:52] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[20:51:51] *** Joins: thiras (~thiras@user/thiras)
[20:52:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:57:44] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[21:03:30] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[21:04:42] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 265 seconds)
[21:06:43] *** Joins: beterraba (~beterraba@86.107.21.205)
[21:08:44] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[21:09:12] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[21:10:13] <crowbar> pycode: got some code with your ArrayAgg issue?  Works as expected for me.
[21:10:28] <pycode> crowbar, no no fixed neverming
[21:10:30] <pycode> nevermind
[21:13:48] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 268 seconds)
[21:20:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:13e8:3fe9:ac27:8ae2) (Ping timeout: 268 seconds)
[21:27:56] *** Joins: _Ev (~ev@user/ev/x-8999918)
[21:46:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:46:39] *** Joins: djapo (~archangel@user/djapo)
[21:47:59] *** Quits: bjb (~bjb@sourcerer.ca) (Quit: Lost terminal)
[21:50:59] *** Quits: kostkon_ (~androirc@2a02:587:a104:3da6:5580:9753:e4ff:28db) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:51:50] *** Joins: bjb (~bjb@sourcerer.ca)
[21:57:55] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[22:01:52] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[22:10:04] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 252 seconds)
[22:12:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[22:12:16] *** Joins: beterraba (~beterraba@185.183.107.221)
[22:14:29] *** Joins: fikran (~fikran@user/fikran)
[22:17:13] *** Parts: _Ev (~ev@user/ev/x-8999918) ()
[22:22:44] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:25:01] <theseb> Help! <form action = "/foo?a=4" ...>   <---- Can I send a param this way even when sending a POST?
[22:25:17] <theseb> Seems django does NOT think form is valid when I do this? how fix?
[22:27:29] *** Joins: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net)
[22:29:05] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[22:30:05] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[22:32:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[22:33:33] *** Joins: djapo (~archangel@user/djapo)
[22:33:56] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Read error: Connection reset by peer)
[22:34:57] *** Quits: Byteflux (~byte@byteflux.net) (Quit: ZNC - https://znc.in)
[22:35:33] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[22:35:39] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 245 seconds)
[22:46:22] *** Quits: beterraba (~beterraba@185.183.107.221) (Ping timeout: 252 seconds)
[22:49:25] *** Joins: rje (~rje@65.141.156.170)
[22:50:22] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[22:52:15] *** Quits: wht (~wht@havoc.proulx.com) (Remote host closed the connection)
[22:58:43] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:59:36] *** Joins: Byteflux (~byte@byteflux.net)
[23:00:13] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 265 seconds)
[23:11:45] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:15:25] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[23:17:05] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[23:20:25] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[23:23:00] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[23:23:40] *** Joins: pycode (~pycode@2001:b07:5d28:551:273:df77:e877:95dd)
[23:27:04] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 252 seconds)
[23:44:20] <crowbar> theseb: it all depends on how you're creating the form from the request object. Show your code.
[23:44:41] <crowbar> ?a=4 means "a" is GET variable not a post variable.
[23:49:42] <crowbar> as a guess you need to do something like params = request.GET.copy().update(request.POST) to combine both QueryDicts.  then form = forms.YourForm(params)
[23:49:55] *** Joins: rje (~rje@50.35.241.164)
[23:51:52] <theseb> crowbar: thanks...i solved it..../foo?a=4 is NOT the same as /foo/?a=4 i learned!
[23:53:46] *** Quits: captain_morgan (~morgan@oit.cloud) (Remote host closed the connection)
[23:55:05] *** Joins: captain_morgan (~morgan@oit.cloud)
[23:55:34] *** Joins: ssb105 (~ssb10@ool-18bd347f.dyn.optonline.net)
[23:55:39] *** Quits: ssb105 (~ssb10@ool-18bd347f.dyn.optonline.net) (Client Quit)
[23:56:35] *** Joins: ssb1058 (~ssb10@ool-18bd347f.dyn.optonline.net)
[23:56:57] *** Quits: ssb1058 (~ssb10@ool-18bd347f.dyn.optonline.net) (Client Quit)
[23:59:35] *** Quits: ssb10 (~ssb10@ool-18bd347f.dyn.optonline.net) (Ping timeout: 256 seconds)
